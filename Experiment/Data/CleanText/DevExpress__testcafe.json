{
    "AlexanderMoskovkin": "LGTM\n. LGTM\n. LGTM\n. LGTM\n. @inikulin The Travis CI build failed\n. LGTM\n. LGTM\n. LGTM\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. The last variant looks nice.\n. I'll research this\n. In fact we have no browser-specific server tests now. We will can reopen the issue if necessary.\n. sure, it was a misprint\n. lgtm\n. closed in favor of #2043 . lgtm\n. lgtm\n. lgtm\n. lgtm\n. FYI: we have jobUid just in the client-tests. We will get rid of this and close the issue after hammerhead will be published in npm\n. > 3)In all subpackages, move dependency wrappers to the deps dir, e.g. in ui move testcafe-core.js and hammerhead-api.js to the deps/testcafe-core.js and deps/hammerhead.js appropriately.\n\n@inikulin jquery, async are deps too?\n. FPR\n. no problem, I'll rollback this\n. FPR\n. thanks\n. @georgiy-abbasov Please write here the comments where we describe the interface you've written about.  Don't force guys to look at our working long issue. Put the main things to this issue\n. I suppose, it'll be useful. @georgiy-abbasov let's implement this. If we specify the test name, err - it is a string with an error. It we specify just fixture - it's a dictionary like now.\nThe shouldFail flag I like too\n. We are ready to implement the issue but we have green tests only in 4 browsers now: ff, chrome, ie11, ie10.\n- MSEdge: one failed test (because of the hammerhead bug. We will create an issue for that)\n- ios (safari, ipad, ios): about 5 failed tests\n- ie9: several failed tests\n- android: 2 failed tests\n\nWe can implement the issue now and add just 4 browsers to qunit-harness settings. Then we create issues to add other browsers. Or we can fix all the problems in all browsers locally first and then close this issue (it can take 2 or more days for 2 developers). @inikulin what do you think?\n. I've run the tests locally. They are success after the https://github.com/superroma/testcafe-phoenix/pull/117 fixes.\nOnly ASPxUploadControl tests are failed because of https://github.com/superroma/testcafe-hammerhead/issues/193 and https://github.com/superroma/testcafe-hammerhead/issues/195\nThe next steps are:\n- [x] create a task with this tests on our farm\n- [x] fix tests\n. I'm working on this\n. The tests run successfully in Chrome, IE11, Firefox and MSEdge on our farm, so I close the issue\n. Yes, @AndreyBelym have created issues for all our projects\n. @AndreyBelym please, squash commits and I'll merge this. @inikulin is on vacation. It's important to merge it ASAP for development\n. lgtm\n. lgtm\n. /r-\n. /r- (lgtm, just the comment issue)\n. lgtm\n. We should not go to the Idle page between tests now. I'll do it with this refactoring\n. FPR\n@VasilyStrelyaev we need to check the following comments:\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-56851814123ee6f18d909ec2d0f124b1R32\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-536fc3d5f20de1aa733936b8d2786f51R22\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-3751914fe85d40d58b4e9dbe0c0b59b7R2\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-897c41e1ce542d360d402a64cfd11588R86\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-2a43fe5a8fa587c74ad0252c4e80b190R5\nhttps://github.com/AlexanderMoskovkin/testcafe-phoenix/commit/b4056f14b1ee10e321c62120a2d7d528ab7d52ca#diff-2a43fe5a8fa587c74ad0252c4e80b190R26\n. FPR\n. thanks\n. FPR (tests fixed)\n. FPR\n. FPR\n. FPR\n. FPR\n. thanks\n. @inikulin What we should do if specified fixtures contain no tests (or filter reject all the tests)? I suppose we should raise the error similary to the testSourcesNotSet case.\n. yes, it's more clear. Create a new pr?\n. /cc @inikulin \n. I don't like it. Usually you have several assertions in the one step after some actions. For example if I have 5 assertions I would like to now they all are failed after one test run (not after 5 runs). Especially it's actual during test creating. It's actual for CI also. It takes more time to run tests and I would like to see all the problems after just one run.\nHave you seen this approach in other test frameworks?\n. lgtm\n. Some updates:\n- the issue should have the release label;\n- bot should create a comment with the checklist 'what should you do before release';\n- bot should create a comment with list of issues closed after the last release;\n- bot should create a link to regenerate the list of the issues\n. - when an issue with the documentation required label is closed Bot should open a new issue ('Create documentation for ...') and assign it to the chief technical writer ( @VasilyStrelyaev for now)\n- when the release issue is opened Bot should create a checklist with opened documentation issues\n- Bot should create comment which warns about missing DOCUMENTATION label once the issue gets closed. It should re-issue the warning comment two times a day until the label will not be set.\n. > We need also task which will ping developer if label is not set (like for the API modification level labels)\nupdated the previous comment\n. - when the release issue is opened Bot turns on the code freeze mode. It add warnings to all new pull requests. (Optional) We should merge only pull requests with a pre-release label during the release issue is opened\n- when the release issue is closed Bot send a comment to all pull requests about that\n- Bot adds the release version to closed issues when the release issue is closed\n. lgtm\n. lgtm\n. lgtm\n. @inikulin As I see, the pr description contains the close # directive, but the commit name doesn't. It works correctly, the issue will be closed when the pr merged. But should we always add the close # directive to commits descriptions or is the directive in a pr title enough?\n. ok\nso, @helen-dikareva , please add the close directive to the commit name\n/r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. @inikulin Is there a reason to do it in the testcafe-browser-natives repo? We have no any client code there\n. ok\n. FPR\n. FPR\n. tests are ok now\n. thanks\n. FPR\n. lgtm\n. I'm working on this\n. @inikulin @VasilyStrelyaev please check it and write your opinion regarding the issue:\n- we have the following API for screenshots: \njs\nrunner.screenshots (path, takeOnFails = false)\n- we don't make any screenshot if path is not set\nWhen screenshotPath is set:\n- act.screenshot() in the step:\n  we save the screenshot to the {screenshotPath}/{testRunId}/{userAgent}/{stepName}.png file, for example: screenshots/1445437598847/Chrome 46.0.2490 _ Windows 7 0.0.0/1.Make screenshot step.png.\n  NOTE: now our user arent looks like Chrome 46.0.2490 / Windows 7 0.0.0. We should replace the / symbol or use only the first part (Chrome 46.0.2490) for the folder name\n- act.screenshot(filePath):\n  we save the screenshot to the filePath relative to the test dir regardless the screenshotPath. Example:\njs\nact.screenshot('my-screenshots/1.png');\nSaves to {testDir}/my-screenshots/1.png\n- an error in the test: if the takeOnFails is true we save the screenshot like in the act.screenshot() case. I have two questions here:\n1) should we add the Error prefix to the filename? (./Error - 1.Failed step.png)\n2) The error may be appeared on page load when test steps are not started. How we will name the screenshot file, Error - Page load or somehow else?\nAnd one more thing. Now we always create a thumbnail for each screenshot and put it in the thumbnails dir:\n./\n---screenshot.png\n---thumbnails/\n   ---screenshot.png\nMaybe should we make an option for thumbnails creating?\n. > Why do I use act.screenshot(filePath) anyway?\nIt's actual for CI. The typical scenario is: save screenshots during test run on the testing machine (it's maybe a virtual machine), compare them with original images then clear them or save to some storage\n. > 3) Can it somehow affect the gallery in Control Panel / Studio\nThe studio will works with screenshots as before\n. > Wrong. You will just specifiy the root dir for your screenshots.\nI suppose, @VasilyStrelyaev writes not about runner.screenshot(path) that set the root dir, but about the action with argument act.screenshot('./some-nane.png'). In this case you set fixed path for the screenshot and it will be overwritten each test run. But as I wrote above it's for CI\n. @VasilyStrelyaev @inikulin \nGuys, one more question about reporting with screenshots. We should add screenshot path to errors and to a test that contains act.screenshot actions.\nSo, what do you think about the following reports? \n```\nerr fixture1Test1\n    1) Chrome 15.0.874 / Mac OS X 10.8.1\n       Assertion failed at step \"Check for arrays equality\":\n       eq([\"12345678901\"], [\"00000000000\"])\n\n   Arrays differ at index 0:\n\n   Expected: [0]: \"12345678901\"\n   Actual:   [0]: \"00000000000\"\n               ^\n\n   Screenshot: D:\\screenshots\\1445437598847\\Chrome 46.0.2490 @\n Windows 7 0.0.0\\1.Failed step - Fail.png\n\n\n2) Chrome 15.0.874 / Mac OS X 10.8.1\n   IFrame loading timed out.\n\n   Screenshot: D:\\screenshots\\1445437598847\\Chrome 46.0.2490 @\n Windows 7 0.0.0\\Page Load - Fail.png\n\nok fixture2Test2\n    Screenshots: \n        D:\\screenshots\\1445437598847\\Chrome 46.0.2490 @ Windows\n    7 0.0.0\\1.The first step.png\n        D:\\screenshots\\1445437598847\\Chrome 46.0.2490 @ Windows\n    7 0.0.0\\2.The second step.png\nok fixture2Test3\n```\nShould we highlight the Screenshot: label and screenshot path with a specific color?\n. 1) Which option:\nscreenshots-path/errors/{testId}/{userAgent}/file.png\nscreenshots-path/{testId}/errors/{userAgent}/file.png}\nscreenshots-path/{testId}/{userAgent}/errors/file.png ?\n2) I like it\n. @saeidzebardast Not yet, but we're going to do it in the contex of the #1550 issue.. Hi @graeme-plangrid,\nTake a look at the #2152 issue. Does this proposal feet your need. Feel free to add you comments there. We already have a PR for this and we'll review and merge it once we're done with our current tasks. Hi @peterpfberlin,\nTestCafe supports screenshot functionality for both tests captured with the browser recorder and written using JavaScript API.. The configuration approach is quite clear for me.\nMaybe the --files flag should be required? I can't find the answer for the question 'which files we should run by default'. I think it's specific for different projects\n. I like the idea, but will it be clear what the option value will be applied if some option will be in several configurations?\n. one question,\n-s, --screenshots <path>           enable screenshots and save them to the <path>\nif the options is not set we don't save screenshots even when act.screenshot used?\n. nice\n. lgtm\n. hmm, something was wrong with testcafe-build-bot here. I'll play with this PR. When it will work I write a comment\n. Build bot fixed. Some tests were updated because of possible network lags on saucelabs\nFPR\n. I've just found a strange thing for me in hammerhead browser utils.\nThe isWebKit property returns false for Safari. It seems some our tests are false because this.\nI've found the commit (before the repo was moved to github) by @miherlosev with this change (!isSafari flag was added to the isWebKit check). In TestCafe we use the isWebKit check as 'it's Chrome or Safari or other webkit-based browsers'. In fact it's a breaking change for us.\nI suppose we should have rename isWebKit property to isChrome. Or have both isWebKit and isChrome /cc @churkin @miherlosev \n. ping @churkin @miherlosev \nWhat do you think?\n. we have isOpera and isOperaWithWebKit flags. But isWebKit is true for Opera too. So, it's confusion. We should set to rights here.\n. Commented in the PR\n. Is this an indents issue or it's ok?\n\n. /r-\n. /r-\n. lgtm\nit works nice on my side\n. lgtm\n. lgtm\n. As I see not just this. We should also replace\nvar browserInfo   = installations[alias.toLowerCase()];\nwith something like\nvar browserInfo = browserNatives.getBrowserInfo(alias)\nhere\n. I'll research the issue soon. It works with the 15.1 version, and there were no changes on client in this mechanism. We should understand why it was working before and how it should work now\n. Yes, we've discussed this already\n. lgtm\n. > BTW, I don't see code which attaches screenshot path on errors.\nIf we implement this behavior we need not any sprecific code which attaches screenshot path on errors. We set the screenshotCreated (hasScreenshots) flag when any screenshot created (on the screenshot action or on an error)\n. ok\n. > What about steps with empty test names? For all of them will be saved pageLoad.png\nI suppose, we should save the image as Step <num>.png in this case, for example Step 3.png. \nDo step names should start from Step 0 or Step 1?\n /cc @inikulin @VasilyStrelyaev \n. I've checked it works with empty step names now. For example if an assertion failed in this step we see in the report Assertion failed at step \"\". But I think we can skip it now  because we will implement the new API\n. /cc @inikulin @VasilyStrelyaev \nI've tried some colors for screenshot paths in reports, what do you think? I suppose, we should use a neutral color because it's just an info and we should not use such colors as red(error), yellow(warning), green(success). Screens from Windows:\n\n\n\n. Yellow:\n\n. FPR\n/cc @inikulin @helen-dikareva \n@VasilyStrelyaev please check the comment here\nCurrent reporting:\n\n\n. FPR\n. FPR\nthere are some new strings but I think we should check it when all technical things are reviewed\n. > - screenshots.createCapturerFor(test, userAgent) - returns ScreenshotCapturer (from src/runner/screenshots/capturer.js)\n\nEach test run creates it's own capturer, Capturer API:\nscreenshotCapturer.capture(url, stepName, customPath)\nscreenshotCapturer.captureForError(url, stepName)\n\n@inikulin We had the other idea also. Don't use createCapturerFor but have the following:\njs\nscreenshots.captureFor(test, url, stepName, customPath)\nscreenshots.captureErrorFor(test, url, stepName)\nWhich approach will we choose?\n. FPR\n. FPR\n. FPR\n. thanks\n. Closed in the https://github.com/DevExpress/testcafe/pull/199 pull request\n. lgtm\n. lgtm\n. lgtm\n. It seems we have a problem with the 3.x.x version of npm. An error occurs during project building (see here). I'll try to find the cause\n. @helen-dikareva please rebase to the master branch to fix the tests (because of https://github.com/superroma/testcafe-phoenix/issues/153)\n. lgtm\n. /r-\n. /r- just minor style issue\n. tests failed, please fix\n. @AndreyBelym please rebase to the master branch to fix the tests (because of https://github.com/superroma/testcafe-phoenix/issues/153)\n. /r- Just a minor style issue\n@VasilyStrelyaev please, check the strings\n. lgtm\n. @helen-dikareva please rebase to the master branch to fix the tests (because of https://github.com/superroma/testcafe-phoenix/issues/153)\n. lgtm\n. the same as here: https://github.com/superroma/testcafe-phoenix/pull/148#issuecomment-152476254\nI'm working on this\n. @kirovboris please rebase to the master branch to fix the tests (because of https://github.com/superroma/testcafe-phoenix/issues/153)\n. it's quite clear for me\nlgtm\n. lgtm\n. @AndreyBelym, some other fixes was merged and github can't merge this PR now. Please rebase to the master branch\n. lgtm\n@VasilyStrelyaev please check the strings\n. lgtm\n. I am waiting for changing functions to arrows or it's not necessary here?\n. what about \njs\n.filter((index, el) => el.style.display === 'none');\n? It's better then this using imho\n. /r-\n. lgtm\n. lgtm\n. we'll fix it when the https://github.com/DevExpress/testcafe/pull/130 issue is closed to avoid merging problems. https://github.com/DevExpress/testcafe/pull/130 is close to be closed =)\n. # New APIv2.1\nFixture defenition\njs\nfixture `My fixture`;\nor\njs\nfixture('My fixture');\nTest, actions and assertions\njs\ntest('My test', async t => {\n    await t\n        .click('#myelem')\n        .expect.element('#myelem').visible;\n});\nHybrid functions\n``` js\nvar getElementById = Hybrid(id => document.querySelector('#' + id));\nvar elem = await getElementById('myid'); // -> returns ElementDescriptor (props from recorder)\n                                                                 // Can return any serializable value as well\n// Can be passed to action (in that case evaluated in one round trip to client):\nawait t.click(getElementById('myid'))\n// Or you can pass ElementDescriptor \nawait t.click(elem);\n```\nRoles\n``` js\nvar registeredUser = Role(async t => {\n    // initialization steps\n});\n// Usage\ntest('roleTest', async t => {\n   await t.as(registeredUser);\n});\n```\nFrame switching\njs\nawait t\n         .switchTo('#frame')\n          ...\n         .switchToMain();\nScript injection\n``` js\n// Inject on all pages (and frames)\nt.alwaysInject(() => {\n   // code\n});\nt.alwaysInject('filename,js');\n// Inject ones\nt.inject(...);\n```\nAssertions\nAll assertions are async and chainable:\njs\nawait t\n    .expect.element('div').text.contains('Yo!')\n    .expect.element('span').not.visible;\nL-value\nexpect(value) - value,\nexpect(hybridFunction) - hybrid function return value,\nexpect.element(selector) - element,\nexpect.element(selector).text - element text\nexpect.element(selector).attr - element attr\nR-value\n.eql(value),  .eql.element(selector). ...- deep equality\n.contains(value)- string contain substring, array contain value, object contain key, element contain text, element contain element\n.matches(regexp) - string matches regular expression\n.is.true - boolean true equality\n.is.false - boolean false equality\n.is.null - null equality\n.is.undefined - undefined equality\n.is.NaN - NaN equality\n.is.ok - non-null, non-undefined, non-false\n.is.empty - empty array, object without fields, empty strings\nElement-only:\n.visible - visibility check\n.exists - element present in DOM\n.hasClass(className) - element has one or more classname\n.disabled - element is disabled\n.readonly - input is readonly\n.checked - checkbox is checked\nNegation\n.not + R-value\n.is.not  for R-values that starts with .is\n. I like this way\n. We need to add native dialogs handling api (alert, confirm, prompt, beforeUnload). Will it be look like an action?\njs\nawait t.click(el1)    // causes alert\n    .handleAlert()\n    .someOtherActions...\n. Yeah, i mean the same\n. I suppose it's critical to distinguish hybrid and common function declarations, so I choose the first.\n. lgtm\n. The existing qunit tests were modified to this fix, is it not enough?\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @inikulin Should a technical writer check the strings or we can merge the pr?\n. lgtm\n. The main point - we should wait for the idle page (and close the browser only for a local browser connection) before finish run task. I propose the following (it's the schematic example):\n``` js\n//BrowserConnection\nclass BrowserConnection {\n    waitForIdlePage () {\n        this.waitForIdle = true;\n        return Promise (function (resolve) {\n            this.once('idle', resolve);\n            setTimeout(resolve, 10000);\n        });\n    }\nclose () {\n    //real bc closing\n    this.disconnected = true;\n    this.ready        = false;\n\n    this.browserConnectionGateway.stopServingConnection(this);\n    clearTimeout(this.heartbeatTimeout);\n    this.emit('close');\n}\n\ngetStatus () {\n    if(this.waitForIdle) {\n        if(this.switchedToIdle) {\n            this.waitForIdle = false;\n            this.switchedToIdle = false; \n            this.emit('idle');\n        }\n        else {\n             this.switchedToIdle = true;\n             return { cmd: COMMAND.idle, url: this.idleUrl };\n        }\n    }\n    ...\n}\n\n}\n//LocalBrowserConnection\nclass LocalBrowserConnection {\n    close () {\n        testCafeBrowserNatives.closeBrowser().then(()=>super.close());\n    }\n}\n//Usage\nrunTests () {\n    return new Promise (resolve => {\n        ...\n        task.on('done', async function () {\n            await bc.waitForIdlePage();\n        if(isLocalBrowserConnection) {\n            bc.close();\n            bc.once('close', resolve);\n        }\n        else\n            resolve();\n    });\n});\n\n}\n``\n. /cc @inikulin @AndreyBelym \n. @testcafe-build-bot \\retest\n. /r-\n. Add MSEdge browser toCLIENT_TESTS_BROWSERSin theGulpfile.js. \\r-\n. @testcafe-build-bot  \\retest\n. lgtm\n. Test is fixed on the latest MSEdge build version. But on Sauce Labs just the 20.10240 version is available now. We have to wait for the update\n. They haveMS Edge 13.10586now. I suppose it should be ok for us. I'll check this\n. lgtm\n. lgtm\n. lgtm\n. Tests failed in IE9. The problem is the same as in thetestcafe-hammerheadtests (theIE9 window.setTimeoutissue). Now I really don't now how we can fix this. It seems it relates to IE9 nativesetTimeoutfunction lags on a slow machine. Maybe it depends on Selenium web driver on sauselabs but I can't reproduce it on my local machine on IE9 with web driver. We've addedIE9totestcafe` saucelabs settings recently (https://github.com/DevExpress/testcafe/issues/111), therefore we had no such problems before\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. /r-\n. @VasilyStrelyaev please, check the strings\n. lgtm\n. lgtm\n. FPR\nI was waiting for the tests result\n. thanks\n. lgtm\n. lgtm\nIs the check by a tech writer required?\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. waiting for the tests result\n. lgtm\n. I'm working on this\n. lgtm\n\\cc @helen-dikareva please review\n. @testcafe-build-bot \\retest\n. The grammar remarks are not fixed\n/r-\n. lgtm\n. FPR\n. ping @inikulin \n. thanks\n. I'll do\n. @helen-dikareva could you specify in the issue which cases of jquery using are removed and which cases are not yet. You can modify the checkbox list in the first comment\n. Could you write here which of the cases you are going to close with the PR?\n. thanks\n. I'm on vacation today, please review without me\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. It's ready but required to be tested thoroughly: https://github.com/AndreyBelym/testcafe-browser-provider-electron. lgtm\nAs i understand waiting for @VasilyStrelyaev \n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. sure, I mean we can write the test now and push it later with functional harness?\n. closed with https://github.com/DevExpress/testcafe/pull/237\n. @testcafe-build-bot \\retest\n. lgtm\n. I'm working on this\n. @helen-dikareva Please create here a checkbox list with all automations and check refactored automations\n. this is from our 15.1 documentation\nAs a understand it just reset input's state to initial (when was no selected files for upload)\n. So, if we change uploadFile -> setFilesToUpload, what about clearUpload. We leave it as is?\n. We take a decision to rename uploadFile -> setFilesToUpload, and leave clearUpload. If all agree with this, @georgiy-abbasov please take care of this\n. actions implementing done.\nA couple of questions about the first comment\n\nShould accept extended selector (Sizzle), isomorphic functions, isomorphic function results\n\nI suppose it'll be implemented in the #574 issue?\n\nShould throw about missing await if it's fullfiled without listeners\n\nThis is implemented already, am I right?\n/cc @inikulin \n. I'm working on this\n. Do we leave the old behavior with js-errors in iframes?\nWhen we are in the main window context or in a same-domain iframe context:\n- if an error occurs in the main window we fail the test with the error\n- if an error occurs in any same-domain iframe we fail the test with the error\n- if an error occurs in any cross-domain iframe we ignore it\nWhen we are in a cross-domain iframe context:\n- if an error occurs on the main window or in any same-domain iframe we fail the test\n- if an error occurs in the current cross-domain window we fail the test\n- if an error occurs in any other cross-domain window we ignore it\n/cc @inikulin \n. I'd like to ensure one more detail. What the command should be failed if there is no an iframe with the specified selector, switchToIframe or the next action command in the iframe.\nWhat we choose:\njs\ntry {\nt.switchToIFrame(iframeSelector);\n}\ncatch (err) {// iframe doesn't exist error}\nor\njs\ntry {\nt.switchToIFrame(iframeSelector).click(elementSelector);\n}\ncatch (err) {// iframe doesn't exist error}\nI prefer the first \n. There are some thoughts about this but there is no completed algorithm. I'd like to think out this more and write a proposed algorithm here a little later. The algorithm implementation depends on https://github.com/DevExpress/testcafe-hammerhead/issues/667 also\n. Improve page unload barrier\nNow we wait for 400 ms after each action to be sure that action execution don't lead to page unloading.\nWe can improve this in the following way: we should wait this time only if there was one of the following page unload triggers:\n- Click on a link with src attribute\n- Form submit calling (or click on a submit button in the form)\n- Window/Document location changed\nIf there was no any of these things after an aciton execution the page unload barrier resolves waiting without any timeout.\n[optionally] As the second step of improvement we can check if setTimeout/setInterval functions were called on action handlers. If they were called we prolong waiting for page unload triggers (we assume that this triggers can be called after timeout)\n. There are a lot of scenarios, I think we can cover most commons. We'll investigate them in more detail when we are starting to implement this.\n. blocked on https://github.com/DevExpress/testcafe-hammerhead/issues/879\n. lgtm\n. FPR\n. thanks\n. I suppose, we can rename the before-test.js to setup-test.js and move it to test/functional\n. It'll be different saucelabs accounts, so we can have two matrixes - client-tests and functional-tests\n. lgtm\n. We'll add a travis task for the functional tests in the separate PR. \nI'll look at the failed tests. They are don't relate to this PR, maybe it's unstables\n. /cc @helen-dikareva @inikulin \n. @testcafe-build-bot \\retest\n. @inikulin it's not so trivial as with qunit tests, so it'll take some time\n. It seems we have an unstable test on ios 9.1. I'll look at this\n. @testcafe-build-bot \\retest\n. lgtm\n. @AndreyBelym is working on this\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. /r-\n. @georgiy-abbasov is working on this\n. lgtm when the tests are ok\n. /cc @AndreyBelym \n. lgtm\n. I'm working on this\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. Let's remove relatedSourceCode from here because it's not true in this case\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n/cc @VasilyStrelyaev please, check comments\n. lgtm\n. It seems the cause of the problem is here. We add listeners for both events (idle and closed) but just one is raised. So, maybe we should remove the second event listener when the first event is raised. @georgiy-abbasov is investigating this\n. yes, we have a working solution yet. But we've found the same issue in the other place and will resolve it\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n@VasilyStrelyaev is it all ok now?\n. lgtm\n. FYI: Guys, now the tests are failed because of  saucelabs environment error, this is an error not on our side. Saucelabs often can't run OSX virtual machines for some reason (I don't know why). We with @georgiy-abbasov are working on improving qunit-harness to stable this\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. We have to do something with this iOS tests.. We'll try to fix this\n. @testcafe-build-bot \\retest\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. done\n. @AndreyBelym is working on Travis-CI with phantomjs or Chrome (you don't need SauceLabs to run test in Chrome). I'm working on \"page model\" pattern. I've added one more idea: Using with Grunt (https://www.npmjs.com/package/grunt-testcafe). Need to add a new test for the https://github.com/DevExpress/testcafe-hammerhead/pull/403 fix /cc @miherlosev \n. Some tests in IE are broken, I'll fix it\n. FPR\n(it's seems we've stabilized saucelabs virtual machines running)\n. @VasilyStrelyaev please, check the following strings:\n1 2 3 4 5 6 7 8 9 10 11\nNow we can ignore the others because the other files will be refactored next and some of the strings can be not actual.\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. rebase required\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. We will fix this in context of the 'update testcafe-hammerhead version' issue, so, I'm closing this\n. FPR\n. FPR\n. Thanks. I'll merge when the tests are done\n. @testcafe-build-bot \\retest\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. /r-\n. /r-\n. lgtm\n/cc @inikulin @AndreyBelym\n@VasilyStrelyaev please check comments\n. lgtm\n. lgtm\n. @inikulin Please rebase to upstream/master for merging\n. lgtm\n. lgtm\n. closed in favor of https://github.com/DevExpress/testcafe/pull/307\n. closed in favor of https://github.com/DevExpress/testcafe/pull/308\n. /r-\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. thanks\n. lgtm\n. done)\n. Fixed with #313\n. /r-\n. lgtm\n@VasilyStrelyaev please check comments and strings\n. @MargaritaLoseva please check comments and strings\n. lgtm\n. You have a typo in the commit name and in the pr title. Should change #329 with #328 \n. Can we write a regression functional test on this?\n. /cc @MargaritaLoseva \n. Failed tests are unstable qunit tests. They don't relate to this PR. So we can review it now.\n/cc @inikulin \n. lgtm\n. /r- just a file naming issue\n. lgtm\n. /r-\n. /r-\n. lgtm\n@MargaritaLoseva please check the comment\n. We don't handle in automations the situation If an action target element is out of the screen (position: absolute, left: -100px) and raise event for this element or skip it silently. We should raise an error in this case because in fact we can't run automation for such element\n. @georgiy-abbasov I suppose we will add a test for this in the context of the https://github.com/DevExpress/testcafe/issues/293 issue?\n. lgtm\n. /r-\n. I'd prefer to use self-created simple images (just white square for example)\n. Tests are failed (https://travis-ci.org/testcafe-build-bot/testcafe/jobs/109318179)\n. so, we can merge this PR after the following steps are done:\n- [x] Wait for the new testcafe-hammerhead release with fixes\n- [ ] Update testcafe-hammerhead version in testcafe deps (we can do it in this pr)\n- [x] Investigate the test on the ASPXUploadControl demo page (we've discussed this in private). Upload functionality doesn't work now. And I can't understand why your functional tests are success but the test with ASPxUploadControl is failed. Maybe we should correct functional tests or add the new one. We should understand why the test on ASPxUploadControl doesn't work \n. Update to the prev comment:\nThe issue with ASPxUploadControl demo doesn't relate to the upload functionality. There is an opened issue for this.\nSo, we should wait for the new testcafe-hammerhead version to fix test for this PR. We'll publish it soon\n. It's not published on npm yet. I'll create the Update hammerhead to v6.0.0 issue in repo testcafe when it's published\n. blocked by https://github.com/DevExpress/testcafe/issues/349\n@georgiy-abbasov please, take this\n. hammerhead-version is updated, so we can resume to work on this pr\n. lgtm\n@VasilyStrelyaev please, check the final version\n. @inikulin the issue reproduced if add the following style rule on the page:\ncss\ndiv { float: left }\nWe can fix it but it looks unreal. We can create a lot of such cases:\ncss\n* { visibility: hidden }\ndiv { width: 0 !important }\netc..\n. we can\n. lgtm\n@VasilyStrelyaev please, check comments\n. lgtm\n@VasilyStrelyaev please, check comments\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. ping @inikulin \n. /r-\n. /r-\n. rebase to upstream/master required\n. lgtm\n@MargaritaLoseva please review the current version with corrections\n. lgtm\n. https://github.com/DevExpress/testcafe/issues/349\n. lgtm\nI'll merge this when tests are done\n. @testcafe-build-bot \\retest\n. >  2 . https://github.com/DevExpress/testcafe/blob/master/test/functional/fixtures/runner/uncaught-js-errors/uncaught-js-errors-test.js#L47 - Why tests that names starts with Should fail expects successful completion?\nThese tests should fail when the skipJsErrors option is disabled, but they should success when the option is enabled. So, we should change tests names. /cc @georgiy-abbasov \n. > 3 . https://github.com/DevExpress/testcafe/tree/master/test/functional/fixtures/runner/api/click - it's hard to determine the actual test and testcafe-test, the difference with naming is minimal. Can we have subdirs, e.g. quarantine-mode/test.js - actual test, quarantine-mode/pages/.html - markup, quarantine-mode/testcafe-fixtures/.test.js - TC fixtures?\n\n4 . Why quarantine mode tests are not inside runner directory? BTW, I don't think we need runner directory` for now. We can start with the plain dir structure for now.\n\nSure we can. @georgiy-abbasov please do this\n. > 1 . https://github.com/DevExpress/testcafe/blob/master/test/functional/fixtures/runner/uncaught-js-errors/uncaught-js-errors-test.js#L35 - why runTests resolves with error?\nAs i remember we discussed this when functional-harness was implementing. @georgiy-abbasov please describe details of this here\n. > 5 .https://github.com/DevExpress/testcafe/blob/master/test/functional/fixtures/quarantine-mode/index-test.js#L40 - why we need additional server here? Can't we incorporate this functionality to the already existing test server?\nI guess we can. We will discuss this with @AndreyBelym in private\n. > In that case i have false sense, that test pass only because shouldFail option enabled\nHere should be skipJsError TestCafe option instead of shouldFail. And we should have two tests like this:\nShould fail if <condintion>\nShould pass if <condintion> when 'skipJsError' is enabled\n. > georgiy-abbasov closed this 10 minutes ago\nWhy? We haven't fixed this yet\n. I agree too\n. lgtm\n. lgtm\n. lgtm\n. ok, I'll do this\n. Update generator-testcafe-reporter with new decorator and test data - the same?\n. lgtm\n. /r-\n. lgtm\n@VasilyStrelyaev please check the strings\n. lgtm\n. @testcafe-build-bot \\retest\n. It seems you have wrong issue link in the title. You are working on #374, not on #372\n. lgtm in others\n. lgtm\n. lgtm\n. @inikulin test-run reworked, please look at this\n. FPR\nWe've decided to inherit CommandOptions from AutomationOptions, I'll do this in the following PR, where the client test-run will be implemented.\n/cc @inikulin \n. /cc @MargaritaLoseva \n. FPR\n. thanks\n. Will fix in context of one of our PRs because of the breaking change\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. /r-\n. /r-\n. @helen-dikareva  let's use some util functions from testcafe-hammerhead: https://github.com/DevExpress/testcafe-hammerhead/pull/459\n. yeah, I've forgotten about this\n. lgtm\n/cc @AndreyBelym \n. lgtm\n. It seems it works properly \n. will be updated manually\n. Now we have a lot of identical tests for each native dialog (alert, confirm, prompt). Maybe we should merge them? For example:\nShould handle the confirm dialog appeared after redirect - we can handle all the native dialogs in the first step and use the page that have alert(), confirm(), prompt() on the page load. \nWe can decrease tests count (and execution time) with this\n. /r-\n. /r-\nremove some duplicated tests (discussed in private)\n. /r-\n. @VasilyStrelyaev some tests were modified, some were added. Please check strings\n. @VasilyStrelyaev some tests were modified, some were added. Please check strings\n. lgtm\n. @inikulin please review while @AndreyBelym is not here\n. lgtm\nCan merge after the tests are success\n. Yes, we can. We should fix the tests first. Is this ok now?\n. lgtm then\n. @testcafe-build-bot \\retest\n. It is fixed in the github repo yet, so I will just add a test for this\n. > You mean already?\nYes\n. It leads to a js-error in the browsers but doesn't take effect on test because it's finished yet\n. moved to https://github.com/DevExpress/testcafe-legacy-api/issues/13\n. @testcafe-build-bot \\retest\n. lgtm\n. FYI: this is not a final version. Pushed just for check tests are ok\n. FPR\n/cc @inikulin @miherlosev @VasilyStrelyaev \n. FPR\n. ping @inikulin \n. > shouldn't we move automations to core\nAs I remember we discussed this before. Yes, we should but I propose to do this a little later when we finish automations refactoring. The type automation is not refactored yet (we have an opened PR for this)\n. FPR\n. FPR\n. FPR\n. @helen-dikareva @churkin take a look please\n. @testcafe-build-bot \\retest\n. lgtm\n. /cc @inikulin \n. lgtm\n. closed in favor of #711 \n. @georgiy-abbasov is working on this\n. the same as #418 \n. lgtm\n. lgtm\n/cc @VasilyStrelyaev \n. Now in the test/functional/fixtures/regression there are:\ngh-414\ngh-418\npages\ntestcafe-fixtures\ntest.js\nIt's not good because we mix different type of folders - separate issues (the first two) and files/folders for other tests.\nI suppose we should separate new regression tests with folders. And we will have\n```\ngh-414\ngh-418\nt116171\nt171129\n...\nfocus-blur-change\nprevent-real-action\n...\n``\n. /r-\n. @georgiy-abbasov  We separate them in the file structure.\nAnyway, gh-414 and gh-418 are regression too but they are not grouped in log. There are no difference between them and new tests. If regression test is failed you see/regression/` in its path in the log, there is no problem with this\n. /r-\n. lgtm\n/cc @VasilyStrelyaev \n. /r-\n. lgtm in others\n/cc @inikulin @churkin @kirovboris \n. There was added the .travis-docs.yml file and was changed the .travis.yml file since last review (when it was lgtm from all reviewers) so we can just look at these two files\n. lgtm\n. yes\n. yes\n. lgtm\n. lgtm\n. regression test required\n/r-\n. @testcafe-build-bot \\retest\n. /r-\nPlease, correct the test (discussed in private)\n. lgtm\n. Why do you do this just for .progress-panel.content ? We can add float: none; to generic reset rule as it was discussed here\n. lgtm\n. I'm working on this\n. @inikulin It seems this issue will be resolved after #521 is fixed.\nThe problem was detected after a regression test was added  here https://github.com/DevExpress/testcafe/pull/429 (tests report)\nWe should investigate this, so we've create this ticket for that.\n. We removed this failed test from #429 to merge it. We need this issue to don't forget to add the test when the hammerhead issue is fixed\n. The related testcafe-hammerhead issue was fixed, now we can resolve this issue. But we've found one more issue with click on a download link. pageUnloadBarrier works incorrectly after a click on the download link is performed. Let's fix it in the context of this issue. /cc @georgiy-abbasov \n. In fact, any test is broken after click on a download link now, so I move this issue to the MVP milestone\n. It's a severe bug\n. it was fixed by #759\n. /cc @VasilyStrelyaev \n. FPR\n/cc @VasilyStrelyaev \n. thanks\n. lgtm\n. I and @helen-dikareva are working on this\n. I'm working on drag now\n. it's not merged yet #508 \n. > What do think should we take screenshots for errors are raised on server (error in test code, including assertion errors) or not?\nI don't know too what we should do in this case, I propose to discuss it together in the office and take a decision.\n. All commands are implemented\n. lgtm\n/cc @AndreyBelym @VasilyStrelyaev \n. We need to add skip and only fields to runTests's opts argument instead of adding [ONLY:], [SKIP:] directives to TestCafe tests\n. @VasilyStrelyaev please, check the comment\n. /r-\n. please, rebase to upstream and correct functional tests with only, skip that were added in the #449 \n. I suppose we should remove all [ONLY:*] entries from mocha test and testcafe test names to avoid skip-only directive duplication since we have only option in runTests. @inikulin do you agree or it doesn't matter?\n. lgtm\n. lgtm\n. /r- just a minor typo. lgtm in others\n. lgtm\n. lgtm\n. lgtm\n. I'm working on this\n. There are different cases with native dialogs, so I'd like to discuss how we should process them. Here is my opinion (below are cases that we can meet in tests):\n1) Alert dialog appears on page load (before any command executing)\n(page loaded - alert appeared - click command started - click command done)\nAlert is not a result of click action, so I suppose we should process it in the test in the following way:\njs\nt.handleAlert().click(); // it's all ok\nt.click().handleAlert(); // \"unexpected alert\" error\n2) Alert dialog appears after an action (it is the simplest case)\n(page loaded - click command started - alert appeared - click command done)\njs\nt.click().handleAlert(); // ok\nt.click();               // \"unexpected alert\" error\nt.handleAlert().click(); // \"was no expected alert\" error\n3) Alert dialog appears between actions (when the first is finished but the second is not started)\n(page loaded - click command 1 started - click command 1 finished - waiting for the next command - alert appeared - click command 2 started - ...)\njs\nt.click().handleAlert().click(); // ok\nt.click().click().handleAlert(); // \"unexpected alert\" error\nIn my variant .handleAlert looks like a separate api command.\nWhat do you think, is it all ok? @inikulin @helen-dikareva @AndreyBelym \n. yep\n. 1 - Nice question. I suppose we should ignore wait in this case. In other words t.click().wait().handleAlert() and t.click().handleAlert().wait() is the same for us. Otherwise it may be too complicated.\n@inikulin do you mean the same?\n. - click command started - alert appeared - click command done\njs\nt.click().handleAlert().wait(2000); // ok\nt.click().wait(2000).handleAlert(); // \"unexpected alert\" error\n- click command started - click command done - 1 sec delay - alert appeared\njs\nt.click().handleAlert().wait(2000); // \"no expected alert\" error\nt.click().wait(2000).handleAlert(); // ok\nok?\n. > What I should do in this case to handle alert?\nAs I understand, it should be\nt.select().select().wait().handleAlert()\n. If we have t.click().handleAlert().click() - we are waiting for 10 seconds between clicks or until alert dialog is appeared. It's ok for me\nBut what the final decision for the wait action?\n\nWe've discussed previously that wait actions are observational actions. So, I guess we should make exception for them\n\nunfortunately I didn't get it, could you please describe it with an example (like I did above)?\n. > Also, what's about allowing user to check handled dialog message?\nI had one of two requests for this since we've released the first TestCafe version. I suppose, we can implement this\n. yep\n. I suppose a setDialogHandler function should get a ClientFunction as an argument. \nAnd maybe setDialogsHandler functions should be synchronous?\n. lgtm\n. lgtm\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n/cc @inikulin @helen-dikareva @VasilyStrelyaev\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n(the previous tests failing was an unstable qunit test)\n. > We need to create separate issue\n460\n. lgtm\n. @testcafe-build-bot \\retest\n. I'm working on this\n. yep, I see now\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I have an idea about unstable tests but would like reproduce the problem before commiting the fix\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @inikulin It seems the problem was in the following:\nParticularly in the end of the test the client driver sends test-done message to the server, server closes the session and responds and the driver goes to idle page.\nBut it's possible that the page is redirected in the moment between test-done request is sent but response is not received. In this case on the page after redirect driver sends any request (error or ready) to the server but gets the error because the session is closed already. \nTake a look to the fix: https://github.com/DevExpress/testcafe/pull/464/commits/8da6fbe04d0ed22e60149c6eeea2113b42fe62f4\nTests are successful three times in a row with this\n. It's not so bad. This is another type of failing, I've reproduced this manually a few times. I'll fix it\n. Yes, I see. The test is the same and the error is the same. But I see in the screencast it's an another problem, believe me =)\n. I'll try to fix this problem in this PR too\n. @VasilyStrelyaev please check the comment\n. So, this PR made functional tests more stable. But there is a problem with them that is reproduced seldom. I create a separate issue for it: #469\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. fixed in #500 \n. lgtm\n/cc @VasilyStrelyaev \n. #445 is merged. Please change [ONLY:chrome] directives in mocha and testcafe test names with { only: 'chrome' } argument in the runTests function \n. /r- (just a missed check in the test)\n. tests failed because of unstable OS X 10.10 test\n. lgtm\n. lgtm\n. one more:\nhttps://travis-ci.org/testcafe-build-bot/testcafe/jobs/124983050#L1186\n. Adding to the previous comment: it's reproduced only on saucelabs virtual machines with ios device emulators. It's not reproduced on macbook and browserstack\n. We have fixed frequently blinking tests so I close this. We will open a new issue (or reopen this one) if when we discover other unstable tests\n. ok\n/r- just correct a wrong integer in the test and lgtm\n. lgtm\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. lgtm\n. let's decrease test-case timeout to 30s\n/r-\n. lgtm\n. /cc @inikulin \n. It was ltgm from me, @inikulin and @VasilyStrelyaev, so I merge this\n. /r-\n. FYI: rebase required\n. lgtm\n/cc @VasilyStrelyaev \n. /cc @inikulin \n. I like it too\n. It would be useful to add a concurrent worker number to the browserInfo (initially proposed in the #1778). /r-\n. lgtm\n/cc @VasilyStrelyaev \n. lgtm\n. lgtm\n. /r-\n. /r-\n. lgtm\n/cc @inikulin \n. Please take a look on new errors, are they ok?\n. lgtm\n. I'm working on this\n. lgtm\n(server tests passed)\n. lgtm\n. server tests are failed (rebase required)\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. failed server tests - it's my mistake. But I'll look what happend with functional tests, they were ok locally\n. FPR (just unstable qunit)\n. Yes. But I have hope we can fix it with #488 \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. So, the last 10 functional tests runs were successfull, it's good\nFPR\n. FPR\n. closed by #619 \n. lgtm\n/cc @VasilyStrelyaev \n. lgtm\n. lgtm\n. lgtm\n. The [API] Hybrid function Should polyfill Babel artifacts: test failed\n. just a style remark, lgtm in others\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm when the tests are ok\n. lgtm\n. lgtm\n. /r-\n. lgtm\nbut rebase required\n. it seems rebase required\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. What if hybrid function executing leads to page location changing? If we will re-execute it after redirect it'll be an endless loop.\n. sure\n. > So, in case of page unload we need to throw Client code execution was interrupted by page change error?\nSo, we don't allow to change a page location via a hybrid function?\n\nLooks like it conflicts with\n\nA customer can write anything in a function, we should process this correct\n. Agree\n. I'm working on this\n. It looks complete for me, I just was thinking about id and className for elements, but we can get it from attributes.\n. These are not completed examples, it should be like the following:\n``` js\nvar elementId = 'id';\ntest('1', async t => {\n    const element = Hybrid(id => document.getElementById(id))(elementId);\n    expect(element.focused).to.be.true;\n});\ntest('2', async t => {\n    const activeElement = Hybrid(() => document.activeElement)();\n    expect(activeElement.id).is.eql(elementId);\n});\n```\nSo, there is no any difference =)\nBut I'm not against of the focused property publishing\n. > BTW, I wonder if we should add textContent and innerText properties\n@inikulin I have a question, what the text property returns. It works the same way as textContent ?\n. lgtm\n. Let's clarify new actions api and it's behavior\njs\nt.scroll(selector, offsetOptions); // offsetOptions = { offsetX, offsetY }\n//----------------\nt.mouseDown(selector, clickOptions); // clickOptions = { modifiers, caretPos, offsetX, offsetY }\n//or\nt.mouseDown(selector, mouseOptions); // mouseOptions = { modifiers, offsetX, offsetY }\n//----------------\nt.rightMouseDown(selector, clickOptions);\n//----------------\nt.mouseUp();\nt.rightMouseUp();\n//or\nt.mouseUp(selector, clickOptions);\nt.rightMouseUp(selector, clickOptions);\nThe things to discuss:\n1) t.mouseDown(selector, clickOptions || mouseOptions);\nShould we have the caretPos option here like in the click command?\nI suppose, yes, because mouseDown leads to the element focusing (and set selection for editable elements)\n2) Should t.mouseUp have arguments? If no - it's just raise mouse up event on the position where the cursor is placed right now. Or it's should be t.mouseUp(selector, options). In this case if you call \nt.mouseDown(element1).mouseUp(element2) - it means \njs\n- mouse down on element1\n- move to element2\n- mouse up on element2\nI'm not sure what we should choose here, but I am inclined to choose the first to make action more simple\n3) Should we emulate native behavior when a combination of simple actions is used? For example if you call  t.mouseDown(input1, { /* someOffsets */ }).hover(input1, { /* otherOffsets*/ }.mouseUp()) should we change a selection of the input (in other words - execute it like a select action)?\nI suppose, yes\n4) Since we have mouseDown and mouseUp action should not we have move or moveTo action (how we have hover)? (/cc @VasilyStrelyaev)\nWhat do you think, @inikulin @helen-dikareva ?\n. ok, I'll do this\n. Hi @Dtphelan1,\nIt's not implemented yet.\nWe've discussed such issue in the #1057 issue. Usually you can use another workaround. Before an action on the target element call the hover action for this element with the offsetY property, for example:\njs\nawait t\n    .hover('#target', { offsetY: 100 })\n    .click('#target');. FPR\n(I'll restart the tests just for check they are stable)\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. functional tests are ok\n/cc @inikulin \n. FPR\n. FPR\nThere are some new comments and strings, @VasilyStrelyaev please, review\n. FPR\n@inikulin do you now what was with the tests? npm problems?\n. so, it's ready for review /cc @inikulin \n. thanks\n. Duplicate: https://github.com/DevExpress/testcafe/issues/431\n. > Unstable iOS test failed :disappointed:\nWe are working on this :muscle:\n. lgtm\n. https://github.com/DevExpress/testcafe/blob/master/src/client/core/xhr-barrier.js#L23\n. @MargaritaLoseva Tests are failed. It seems some links are broken\n. We show how to run a test from the command line. Should we say in Getting started that it is possible to use testCafe as a nodejs module and give a link to the Programming Interface topic?\n. lgtm\n. @MargaritaLoseva are failed tests ok for now?\n. Hmm. something wrong with the tests. @AndreyBelym please check it locally. Maybe it relates to some modules updating\n. It seems modules versions were not changed since the last successful running. Take a look at the screencast maybe we can see something wrong there\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. Just found a style issue (it relates to the previous PR but can be fixed here):\nMissed 'Error' postfix in the upload error: \njs\nactionCanNotFindFileToUploadError:       'actionCanNotFindFileToUpload'\n. /r-\n. the same here\n. lgtm\n. also, we should run the tests for 4-5 times to ensure we've fixed the problem\n. /r-\n. You've created a feature-branch in the main repo, not in your fork. As a result we have some unexpected testing behavior. So, I close the PR, please create it again from your fork\n. @testcafe-build-bot \\retest\n. so, it seems the target tests are stable. We can review this /cc @helen-dikareva \n. lgtm\n. > Couldn't request just hang infinitly or is there any browser/server limitation?\nI don't know exactly, it seems it shouldn't be some limitation here, I'll check this.\n. I don't know, I will research\n. After some investigation with @georgiy-abbasov we have the following results.\nIt seems there are some time limitations for xhr pending in browsers. For example, in Chrome a xhr-request is aborted after 4 - 8 minutes after start (if there are other requests like a ping request in testcafe - it fails after 8 minutes, if no - after 4 minutes). Firefox aborts xhr after 10 minutes, IE - after 12 mins.\nSo, we can use the mechanism I've implemented in this PR (maybe increase timeout from 10 seconds to 2 minutes). \nBut I have an another idea. We can handle the xhr.onerror event (via hammerhead) and just resend the status when this event is raised. It will work but we will have errors in dev tools console when it happens.\n. We don't have such tests. We try to handle the following scenario:\njs\nawait t.click();\nawait wait(10 * 60 * 1000);\nawait t.click();\nI know this scenario maybe looks strange. If we shouldn't think about such screnario - we can just close this PR =)\n. @testcafe-build-bot \\retest\n. @inikulin FYI, I've found why the tests were failed before and I've fixed that. And to be sure I tried to set MAX_RESPONSE_DELAY to 500ms and run the tests locally, they were ok.\n. FPR\n/cc @inikulin @helen-dikareva @VasilyStrelyaev\n. > what about #541 (comment) ?\nSorry, It's my mistake.\nFPR\n. FPR\n. ping @inikulin \n. @testcafe-build-bot \\retest\n. FPR\n. Unfortunately resize functional tests will not work on travis+saucelabs because they are run on remote browsers (the TestCafe server and browsers are run on different machines). This is actual for take screenshot tests too.\nWe have to remove these tests now. But I see a possible way how we can implement CI testing for this, but it will take some time.\n. > can we keep tests, but disable them on CI?\nWe can add the settings like { only: 'local' }\n. We can, but it can increase tests execution time. I don't know exactly how much time can it take, but I suppose it can be about 1sec for the each test (resize + restore prev size)\n. > 1) if screeshotPath specified we need to enable screenshotOnFail option\nThese are different options, we enable screenshotOnFail only if the screenshotOnFail option is set to true, why it should depend on screenshotPath?\n. > 2) if screeshotPath specified we should use it like base for customPath in takeScreenshot' action\n\n3) ifscreeshotPathis not specified we should use testDir like base forcustomPathintakeScreenshot' action\n\nIt seems too complicated and unclear for me.\nThe best way for me: screenshotPath - is always base path for the customPath in the takeScreenshot action. If screenshotPath is not set, we just don't create screenshots\n. I got it, but I suppose the common case is the following:\njs\n//settings\n{ screenshotPath: '/some-long-path-to-base-screenshots-dir/' }\n//tests\nt.takeScreenshot('./fixture1/img.png');\nt.takeScreenshot('./fixture2/img.png');\nIt's more useful then the following:\njs\nt.takeScreenshot('/some-long-path-to-base-screenshots-dir/fixture1/img.png');\nt.takeScreenshot('/some-long-path-to-base-screenshots-dir/fixture2/img.png');\n. /r- Just functional tests issues\n. lgtm\n. lgtm\n. > Now client tests status badge should look like:\nYou image in the comment shows a badge for tests from an other PR (for the current running tests) and it doesn't contain results from mobile browsers at the moment.\nBut I've checked this will be ok after we merge this PR.\n. lgtm\n@helen-dikareva please, review this\n. lgtm\n. @miherlosev You've created a PR from the testcafe repo branch. Please create a PR from a branch in your testcafe fork\n. It works only with old API. We should add it to the driver\n. Sure, we can add some allowed keys/combinations\n. /r-\n. /r- just minor style issues\n@VasilyStrelyaev please check strings\n. lgtm just correct the comment\n. lgtm\n. rebase required\n. lgtm\n. lgtm\n/cc @VasilyStrelyaev \n. lgtm\nI'll merge when functional tests are finished\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. reviewing in progress.. =)\n. lgtm\n. we need a test for this\n. /r-\n. /r-\n. lgtm\n. The Should raise an error on an attempt to execute a new command while the previous command execution is not yet finished server test is failed. It's obsolete since you've implemented a command queue in the test-run\n. It shouldn't be an effect of your changes, because you haven't modified legacy API related code, but sure, we should pay attention on this\n. the test hangs in FF, we will investigate this (#568) @georgiy-abbasov please take a look at this when you have time\n. just a mobile client test failed, I've restarted it\n. It seems the problem gone\n. lgtm\n. lgtm\n. rebase to fix server tests.\nand it seems, there are some problems with client-tests (https://travis-ci.org/testcafe-build-bot/testcafe/jobs/134437611, https://saucelabs.com/tests/af85838ca4594ed497b55c79cd04ad76)\n. lgtm\n. lgtm\n. lgtm\n. in general it's ok for me\n. lgtm\n. > Should selector accept element descriptors?\nI'm not sure for now what is better, but just have a question. If we send an element descriptor to the Selector, what is it on the client, a dom-element or a snapshot of the element?\nIn other words:\n``` js\nSelector(element => {\n// can I use it as a dom-element ..\nvar loc = element.ownerDocument.location; // or something else\n// ... or its just a snapshot?\nvar width = element.width\n});\n```\n. Oh yes, I understood your comment in the wrong way.\nI'm inclined to don't allow to send an element descriptor as an argument. If we allow this we have some unclear things:\n1) the question asked above\n2) what if the element is not on the page\nI think it's better to send Selector as an argument in this case. As I understand the following is allowed:\njs\nvar getGridRow = Selector(() => document.getElementById('get-row-selector'));\nvar myCustomSelector = Selector(() => {\n    var row = getGridRow();\n    //...\n}, { getGridRow });\n. The PR covers different scenarios with iframes. You can see how does it look in the tests.\nFunctional tests are ok. Client tests are almost ok, it seems there is an issue in the client tests on Android but it doesn't depend to iframes, so it's ready to review\n/cc @inikulin @helen-dikareva @VasilyStrelyaev \n. Sure. There are MainWindowDriver (in the top window)  and IframeDriver (in each iframe) (they are extend ClientDriverBase). (@inikulin it seems you've missed IframeDriver)\nWhen MainWindowDriver need to execute a command in the iframe it just resend the command to the appropriate IframeDriver and wait for response.\nTo encapsulate inter-dirver communication we use DriverAdapter.\nIf we need to send a command to iframe1, we create var iframeDriverAdapter = new IframeDriverAdapter(iframe1Selector) and call iframeDriverAdapter.executeCommand(command).then(status => {//do anything}).\nAdapter check iframe existence, has work with messageSandbox etc.. As a result the appropriate IframeDriver gets a command to execute and execute it. To return a status IframeDriver just call this.parentDriverAdapter.onCommandExecuted(status)\n. What about adapters.\nIn fact it should be DriverAdapterBase, ParentDriverAdapter, IframeDriverAdapter. But ParentDriverAdapter is equal with DriverAdapterBase, and IframeDriverAdapter extends DriverAdapterBase\n. in fact DriverAdapter - is an instance of the driver from another frame.\n. @inikulin Driver, IframeDriver or ClientDriver (as it is now), IframeDriver?\n. FPR\n. >  I suggest to involve more people into review process since it's quite complicated and important piece of functionality.\nagree.\n/cc @helen-dikareva @georgiy-abbasov @churkin \n. ping @helen-dikareva @georgiy-abbasov @churkin @inikulin \n. FPR\n. yep\n. FPR\n. FYI: don't merge this before #598 is merged. I'll do rebase and merge this PR after #598 is closed (if this PR is lgtm for all now)\n. FPR\n. FPR\n. lgtm\n. In general it's lgtm for me. I have some doubts about the realization but can't find a better way.\n/cc @inikulin Look at this if you have some time\n. lgtm\n. the testcafe-browser-natives@0.13.0 was published yesterday. Let's migrate to it in this PR. It contains a breaking change (https://github.com/DevExpress/testcafe-browser-natives/pull/69)\n. lgtm\n. rebase required\n. lgtm\n. /cc @inikulin \n. just an unstable qunit, so we can review this\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. I'll reopen the PR to trigger documentation tests\n. lgtm\n. lgtm\n. we need a simple regression test for this\n. lgtm\n. lgtm\n. FPR\n. Will be implemented separately for each case when it's necessary for Studio. tests were not run for some reason. But they are should be failed because of the breaking change in testcafe-browser-natives (https://github.com/DevExpress/testcafe-browser-natives/pull/69)\n. rebase required\n. lgtm\n/cc @helen-dikareva \n. lgtm\n. lgtm\n. just unstable client-tests (FYI: it seems something wrong with network connection on the farm. Most of latest unstable tests are because of too long response from the server (for iframe or xhr)).\n. lgtm\n. lgtm but rebase required\n. lgtm\n. It looks the target test is ok. So, LGTM\n. BTW, it seems we have another unstable test now: OS X 10.11 chrome  - /fixtures/core/dom-utils-test.js\nTest: isIFrameWindowInDOM\n. lgtm\n. /r-\n. FPR\n/cc @inikulin @VasilyStrelyaev \n. FPR\n. FPR\n. FPR\n. Just an unstable client test\n. I'm working on this\n. a functional test failed\n. lgtm\n. lgtm\n. I'm agree with that all\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. I prefer the second, because I expect the text argument to be first in the byText function. And can I write Selector.byText('Honda') in this case if I want to find an element by text only (without selector)?\n. I suppose it should be the same behavior if selector doesn't return any element. What we do in this case now?\n. I think we should not ignore this. If you write select(selector, 1), you expect that should be more than one elements with this selector on the page. If there is just one, something went wrong\n. I think, yes\n. > note strange test fail in #616 (comment)\nI see. But I don't know what is it for now.\n. lgtm\n. a nice idea, I'll do this\n. I'm working on this\n. - [x] Separate tests:\n  - [x] Client tests (legacy and new)\n  - [x] Functional tests (legacy and new)\n- [x] Run functional tests in the next browsers\n  - [x] Win 10 - Chrome, Firefox, IE11\n  - [x] Win 10 - Edge\n  - [x] Win 8 - IE10\n  - [x] Win 7 - IE9\n  - [x] OS X - Safari\n  - [x] OS X - Chrome\n  - [x] OS X - Firefox\n  - [x] Android simulator\n  - [x] iPad simulator\n  - [x] iPhone simulator\n- [x]  Run the legacy tests on daily basis as smoke tests\n. @inikulin Please check browsers list above. Do we need run functional tests in IE9,10\n. waiting for https://github.com/DevExpress/testcafe-hammerhead/issues/667\n. yep\n. I've splitted functional tests fixtures to two dirs: fixtures, legacy-fixtures\nThis PR is huge but in fact you can look just at the new tests structure\n/cc @inikulin \n. > I can't find functional tests from api/legacy\nFPR\nI've restored them. But we have just several tests for click there. We committed them when we were implementing functional harness to demonstrate how we should write the tests. And one nore test was added later as a regression test.\nThe most of legacy functionality is tested in client tests for now\n. I'd like to merge it now and don't keep so much uncommitted changes.\nThis will not slow down test runs, let me explain:\nhow it was:\njs\ntest-functional task: -start---setup environment---wait for free saucelabs vm---run tests(new+legacy)---tear down\nhow it is now:\njs\ntwo tasks run in parallel:\ntest-functional: -------start---setup environment---wait for free saucelabs vm---run tests(new)--tear down\ntest-functional-legacy:-start---setup environment---wait for free saucelabs vm-------------------run tests(legacy)---tear down\nFor example,\nbefore - 23 min 49 sec\nnow - 24 min 21 sec\n. lgtm\n. In general, it's lgtm. But this PR is hard, I'd like @inikulin to look at this.\n(I haven't reviewed the tests for now. I'll do this after the source code will be reviewed)\n. I see the first commit in the PR has name Implement \"t.select\". So after merging all commits will be combined into one commit with this name. Maybe it should have name Unify errors rendering (closes #600) ?\n. js\nCannot find the following file(s) to upload:\n     ${err.filePaths.map(path => `<code>${escapeHtml(path)}</code>`).join(', ')}\n     ${err.getCallsiteMarkup()}\nIs it this case?\n\nUse decoration tags only for URLs or other situations there they can bring additional functionality in some reporters\n. lgtm\n. lgtm\n. lgtm\n. just an unstable qunit test\n. lgtm\n. FPR\n. closed in favor of #634 \n. lgtm, just a typo is found\n. lgtm\n. /cc @churkin \n. just an unstable client test\n. /cc @churkin \n. lgtm\n. finished in https://github.com/DevExpress/testcafe/pull/645\n. just an unstable client test\nlgtm\n. @testcafe-build-bot \\retest\n. What is implemented here:\n- split test-functional gulp task by browser groups\n- add Edge, Chrome (OS X), Firefox (OS X) Safari (OS X)\n\nIE9,10 will be added later when the issue in testcafe-hammerhead is fixed.\nAlso we have some problems with mobile browsers (it seems we have some issue with saucelabs-connector). I'll investigate and fix it in a separate issue\n/cc @inikulin @AndreyBelym \n. >  BTW, what I further steps?\n- Wait for https://github.com/DevExpress/testcafe/issues/649 fix. Check the tests in IE9,10.\n- Investigate the problem with saucelabs-connector. It opens VM with win7+safari instead of iphone and ipad. After that check the tests in mobile browsers\n- Run legacy tests as smoke tests\n- Separate client tests\nI'm not sure that the tests will be ok on IE9-10 and mobile browsers, so I suppose it can take some additional time to fix them\n. > Investigate the problem with saucelabs-connector. It opens VM with win7+safari instead of iphone and ipad.\nI've found my mistake here. Thanks @AndreyBelym for this. It should be ok\n. @testcafe-build-bot \\retest\n. /cc @inikulin @AndreyBelym @VasilyStrelyaev \nall required browsers added\n. FPR\n. FPR /cc @inikulin @AndreyBelym \n. ping @inikulin \n. > test runs will take more than two hours then\nnope. If you are about Total time 2 hrs 11 min 38 sec on Travis - it's just a sum of all tasks times. Actual time didn't increased much.\nMeanwhile I'm close to move out legacy tests from travis, so we can wait here\n. FPR\nlegacy functional tests are run on our internal farm now twice a day. I've created a separate issue (#674) to create a badge to see a status of the tests on the main repository page.\n/cc @inikulin \n. It will take some additional time (now I'm working on another important task). I would like to merge this asap to add new browsers in functional testing to have an ability to test new functional (for exapmle, native dialogs) in all available browsers.\n. I have a notification for this in DXCCTray.\nIf we merge this @helen-dikareva can find possible problems with native dialogs handling in mobile browsers early, to completely finish our work on the APIv2 MVP milestone\n. lgtm\n/cc @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. > We need to prefix docs PRs with [docs] to run appropriate CI tasks on them\nI did it. Tests are ok.\nlgtm\n. deleted\n. @AndreyBelym I suppose, you should rebase this according to the https://github.com/DevExpress/testcafe/pull/646#issue-164276276 comment\n. lgtm\n. lgtm\n. lgtm\n. I'm working on this\n. moved to https://github.com/DevExpress/testcafe-hammerhead/issues/670\n. lgtm\n. done. closed by #656 \n. /r-\n. lgtm\n. lgtm\n. it was fixed by #759\n. @georgiy-abbasov What about \n\nIs this affects only legacy API? If so, can you add remark both to PR and issue titles?\n\n?\n. lgtm\n. lgtm\n. lgtm\n. I'm working on this\n. @testcafe-build-bot \\retest\n. fpr\n. lgtm\n. I'll take a look soon\n. formally @kirovboris is right, this is a number so we should write like the length of the ...\nBut your text is more clearer, so I'm not sure what the best decision\n. lgtm\n. lgtm\n. lgtm\n. I missed this. But I saw the changes in the tests, so they should be failed if something went wrong with source changes.\n. lgtm\n. lgtm but rebase required\n. lgtm\n. > BTW, can you move legacy client code to src/legacy/client?\nThe next step is move all legacy code to a separate package. Is there a reason to move legacy client code to anywhere now?\n. ok\n. > BTW, can you move legacy client code to src/legacy/client?\ndone.\nFPR\n. fpr\n. I'll try to create some complex solution for this all, that connects our repo, testcafe-build-bot and CCTray farm. It can take some time. \nBut I suppose we should join travis tasks first to improve out working process right now, am I right?\n. Now it's on my personal attention, but sure I'll implement something for this soon\n. lgtm\n. lgtm\n. It's an unstable qunit test, so we can rebase. I've added a timeout for qunit tests recently, so it seems there are some problems with this on slow machines, I'll investigate this\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. /cc @helen-dikareva @VasilyStrelyaev \n. fpr\n. The fix doesn't work. I'll investigate more\n. /cc @inikulin \n. @testcafe-build-bot \\retest (just for ensure the testcafe-legacy-api v.1.1.0 publishing is ok)\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. > I think, this line is redundant\nYes, you are right. I'll remove this line a little later\n. FPR\n. rebase required\n. rebase required\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. It's the same things. I'll close #422 in favor of this issue\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. The target issue is fixed (it was a messaging timeouts collision between iframes in IE9).\n/cc @helen-dikareva @georgiy-abbasov @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. ping @georgiy-abbasov @VasilyStrelyaev \n. /r-\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. ping @helen-dikareva @georgiy-abbasov \n. lgtm\n@VasilyStrelyaev , it seems there are some changes here, please review this again\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. FYI: it's a breaking change, so we will need to update version to 0.3.x-alpha\n. Public API is not changed but screenshots dirs are changed. For example if @kirovboris updates the testcafe version in the testcafe-studio project the tests are failed because screenshots check\n. lgtm\n. lgtm\n. ping @georgiy-abbasov \n. it's better to publish them here in the next time\n. lgtm\n. lgtm\n@inikulin let's merge this?\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @georgiy-abbasov is this problem of UI only? Are click event arguments (pageX, pageY etc) ok?\n. We have the same PR already: https://github.com/DevExpress/testcafe/pull/732\nAccording to the comment (BTW you all right that this is a major version bump), we should not increase just a patch version number.\n/cc @inikulin \n. I'm working on this\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n/cc @VasilyStrelyaev please check strings\n. yep\n. Implemented in #1047 . > TestCafe should spawn a process with this script before tests are started and kill it when the tests are finished (if it alive yet).\nIt looks, the -app does the same. Maybe we should update the initial comment of the issue then?. ok, I've got it. I prefer the second way.\nWhen quarantine mode enabled we use the following pattern: {task-start-date}/test-{num}/run-{num}/{user-agent}/\nWhen quarantine mode disabled we use: {task-start-date}/test-{num}/{user-agent}/\nIn both cases we write in the report: screenshots: {task-start-date}/test-{num}/\nMaybe someone has some other idea?\n. We should add a regression test for any fix if it's possible. Is there a reason why we can't add a test here?\n. > Why iframe test fails again?\nSomething went wrong on Firefox in OS X.\nIn a nutshell: we click on a link in an iframe (after that the iframe is reloading during 11.5 seconds). We should raise an error 'Content of the iframe in which the test is currently operating did not load.' in 5 seconds after this. But in this case we didn't raise an error, but were waiting while iframe is reloaded. \nI didn't investigate such problem before so it's hard to say why it happend. In other browsers all was ok\n. @georgiy-abbasov So, what about a test for this?\n. @testcafe-build-bot \\retest\n. /r-\n. /cc @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. lgtm\n. I'm working on it\n. lgtm\n. /r-\n. lgtm\n. @VasilyStrelyaev please look at this one more time. It possible threre are some changes since your last review\n. I'll do it soon\n. I'm working on this\n. FPR\n. lgtm\n. @inikulin,\nThe problem:\n1) Driver sends a status via hammerhead transport\n2) The request is aborted (because the page is unloading)\n3) Hammerhead store the message in the context storage (to resend it after page reload) and call the callback\n4) Since callback is called Driver think that the message is delivered but it's wrong.\nIn other words driver has his own ensure message delivering mechanizm. So we don't need such logic in transport. So, we should set the disableResending flag to true when send a status.\n. lgtm\n. @testcafe-build-bot \\retest\n. FPR /cc @VasilyStrelyaev \n. thanks\n. It's no problem\n. This comment is just for notify @kirovboris and @arubtsov about this BC. \nDo you use this in your tests?\n. > We don't have latest build bot with multiCI support deployed yet, right?\nYes, it's in progress\n. @helen-dikareva please look at this asap\n. lgtm\n. done\n. lgtm \nas for me - it looks better\n. Just an unstable test in IE9 (it's a known problem)\n. Just for sure, am I understood your proposal right?\n``` js\nvar bodySelector = Selector(() => document.body);\nvar getBodyOffsetWidth = bodySelector.offsetWidth;\nvar bodySnapshot = await bodySelector();\nvar bodyWidth1 = bodySnapshot.offsetWidth;\nvar bodyWidth2 = await getBodyOffsetWidth();\n```\nin this case bodyWidth1 === bodyWidth2\n. got it. Looks useful\n. > we should add smoke test for examples, what do you think @AlexanderMoskovkin ?\nYes, we should. I'll do this\n. lgtm\n. As I understand the page for this tests is not published yet, right?\n. So, we can run this tests as smoke tests once this page is availabe\n. It works ok with the pageNavigationTriggered hammerhead event. @inikulin FYI: this task is complex and I assumed that it takes more than one sprint, so we will move it to the next sprint. Also we with @georgiy-abbasov will review today current results of the work on this task in Sprint 1 and think how we can work more effectively here.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. awesome!\n. is there a way to save a screencast for them?\n. > By these reasons @AlexanderMoskovkin and I decided not to implement this.. fpr\n. was an unstable test. /cc @AndreyBelym \n. lgtm\n. :+1: Looks good \n\nI'm not sure, but seems like we can even get rid of dependencies with this approach.\n\njs\nconst getElementById     = Selector(id => document.querySelector(`#${id}`));\nconst getStatusBtn       = Selector(() => getElementById('statusBtn'), { dependencies: { getElementById } });\nAs a see we can't get rid of dependencies in this case or we can?\n. an example from our documentation:\njs\nconst getGridRow  = Selector(n => document.getElementsByClassName('grid-row')[n]);\nconst getGridCell = Selector((m, n) => getGridRow(m).children[n], {\n     dependencies: { getGridRow }\n});\n. @testcafe-build-bot \\retest\n. This fix is tested on asp-tests. It's ok.\n/cc @inikulin @helen-dikareva @georgiy-abbasov @VasilyStrelyaev \n. FPR\n. fpr\n. just an unstable test (it is under investigation in #842)\n. @testcafe-build-bot \\retest\n. /cc @inikulin \n. @inikulin The only thing I'm worry about - it looks like legacy api compiler takes too much memory (it's about 200MB for 134 asp fixtures in my case). But I think it'll be fixed in the testcafe-legacy-api repository\n. https://github.com/DevExpress/testcafe/issues/791#issuecomment-254445543\n. I'm working on this\n. The issue occurs because testcafe-hammerhead takes memory during large scripts processing (creating ast etc..)\n. discussed with @churkin\nThe cause of the problem is found in testcafe-hammerhead\n. https://github.com/DevExpress/testcafe-hammerhead/issues/802#issuecomment-279925690. https://github.com/DevExpress/testcafe-hammerhead/issues/823#issuecomment-296602066. FYI: I've reproduced this unstable iframe test locally just now and will fix it\n. nope. I've forgotten to update callsites. \n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. failed on iOS. Will be investigated\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. functional tests are ok (task was failed because of unstable qunit).\nThe PR is approved by @VasilyStrelyaev \n/cc @helen-dikareva @georgiy-abbasov \n. @inikulin \n\nCan you elaborate please on how it fixes issue with tests?\n\nOh, yes, I've forgotten to explain this. I've changed the test page markup to fix it. But this helped me to find a new issue (#847). So this pull request contains both: page markup changing (to fix the unstable test) and fix for the #847 \n. /cc @VasilyStrelyaev please, check the comment\n. FPR\n. FPR\n/cc @georgiy-abbasov \n. lgtm\n. @testcafe-build-bot \\retest\n. >  do we have to remove PhantomJS from the docs as well?\nI suppose, yes. \n\nwhether we are going to remove the plugin from npm\n\nI don't see a connection there. The testcafe-browser-provider-phantomjs module works ok, there are no reason to remove it. But there are problems with tests running in phantomjs. We just should not tell that we are supporting phantomjs while it doesn't work actually\n. lgtm\n. closed in #855 \n. can we add a functional test for this here?\n. /cc @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. /cc @helen-dikareva \n. /cc @VasilyStrelyaev please check the strings\n@georgiy-abbasov I suppose it's a time to revert .travis.yml\n. @testcafe-build-bot \\retest\n. something went wrong with tests https://travis-ci.org/testcafe-build-bot/testcafe/jobs/165550199#L1440\n. @testcafe-build-bot \\retest\n. lgtm\n. > should we also change all the links from this Readme to GitHub Pages from http to https or it doesn't matter?\nI suppose it doesn't matter. Maybe someone else has another point..\n. It's an unstable test on appveyor.\nI'll merge this once tests are ok, thanks\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. The target test is ok in all runs in the PR. Also I've fixed the iframe without src test on iphone and ipad.\n/cc @helen-dikareva @georgiy-abbasov \n. I've updated the first post with the feature proposal. What do you think about it?\n\\cc @inikulin @VasilyStrelyaev @DevExpress/testcafe\n. > By default it will be slow mode? speed === 1\n1 - fast, 0.01 - slow\n. > I don't think we need test controller option. There should be CLI and programmatical API option.\nYes, I'm agree\n. > I think the speed option for one action is almost useless\nFor example some ASPx controls doesn't work properly when you type (or click, dblclick, drag) too fast like a robot (some script expect human-behavior with some delays between actions) . With this option you can run only several actions in slow mode but run the others fast (it will decrease tests duration)\n. > Is possible a scenario where all actions are slow and one should be executed quickly ?\nCan you give a real case when this may be useful. I can't \n. Ok, it was discussed in private, I'll update the top post a little later\n. > Have you already decided on all the things?\nNot yet. I'll notify you\n. I've updated the top post. Here describes api changes. /cc @inikulin @VasilyStrelyaev \n. FPR\n. here is related testcafe-legacy-api PR https://github.com/DevExpress/testcafe-legacy-api/pull/20\n. It seems we have problems with some functional tests in the OSX + Edge task:\njs\n[API] Selector\n1) Should provide input-specific properties in element snapshots\n2) Should provide `innerText` property in element snapshots\n3) Should filter results with \"text\" options\nThey are failed three times in a row.\nI propose to merge this PR (to fix server tests), but I'll start to investigate this tests right now\n/cc @inikulin \n. The problem is gone after migration to BrowserStack. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I'm working on this. @vzaidman Thanks! I'll take it into account. Hi @sagarvora,\nThanks for your report, I've reproduced it and I've created a separate issue. I've already found a cause of the problem, it will be fixed in the next version that should be released soon.. @renancouto Great solution, thanks!\n. done\n. Hi! While it doesn't work via Command Line Interface you can use Programming Interface as a workaround. You can see how to specify the Path to the Browser Executable with Command Line Parameters here\n. Yes, you can use the getBrowserInfo function from our TestCafe Browser Tools package. For example:\n``` js\nconst testcafeBrowserTools = require('testcafe-browser-tools');\nconst createTestCafe       = require('testcafe');\nvar chromeInfo = null;\ntestcafeBrowserTools\n    .getBrowserInfo('chrome')\n    .then(res => {\n        chromeInfo = res;\n    chromeInfo.cmd = `${chromeInfo.cmd} --incognito`;   // add your flags here\n})\n.then(() => createTestCafe('localhost', 1337, 1338))\n.then(testcafe => {\n    return testcafe\n        .createRunner()\n        .src('your-test.js')\n        .browsers(chromeInfo)\n        .run();\n});\n\n``\n. closed in favor of #2151 . /cc @VasilyStrelyaev \n. @AndreyBelym add the test here (you can useact.hoverfor example). We should add a regression test for each fix.\nThese stored tests will be reworked and added later when we will implement act.scroll\n. /cc @VasilyStrelyaev \n. it seems tests are broken. Don't merge this please\n. @churkin We have a problem with tests aftertestcafe-hammerheadversion updated.\nIf we click a link in a cross-domain iframe the top document is navigated to the link href url. We had the same withtestcafe-hammerhead@9.3.11and it was fixed inv9.3.12. FPR\n/cc @inikulin @georgiy-abbasov \nCompiler test was fixed after some of babel dependences was updated\n. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. [Extending Selectors](https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/extending-selectors.html) resolves this.. @darlanmendonca FYI: Thetest-servertask [is failed](https://travis-ci.org/testcafe-build-bot/testcafe/jobs/170513198#L1620) but it doesn't relate to your commits. It became failed since somebabel` deep dependencies were updated. I'll fix this soon.\n. > I'll fix this soon.\ndone in github.com/DevExpress/testcafe/pull/914\nPlease, rebase your PR to upstream/master\n. @darlanmendonca Yes, it were no enough available machines to run the tests on saucelabs. I'll restart them\n. Guys, I'll add the [docs] prefix to the PR and reopen it to rerun tests to be sure that documentation tests are ok\n. It's something wrong with documentation tests. Maybe @VasilyStrelyaev can help us to determine the cause of the problem?\nhttps://travis-ci.org/testcafe-build-bot/testcafe/builds/172243777\n. Hi @darlanmendonca, how is your progress? Do you need any assistance from us? \n. @darlanmendonca Yes, I've proposed how we can refactor this in my comment\n. /cc @VasilyStrelyaev \n. Hi @jcteague , thanks for your information.\nIt's hard to determine the cause of the problem without a page. Could you provide us a public link to your page where we can reproduce the problem? To save the confidential information (login, password), you can send it on my email. If necessary we can sign NDA, so we'll be able to debug your page.\nAlternatively you can provide us a simplified page that reproduces the problem, so it doesn't contain any sensitive data.\nIf it's not possible, we can try to determine the cause of the issue remotely, but it will require some time and assistance from your side\nPlease, let me know what works best for you.\n. > Wait, @AndreyBelym : DevExpress/testcafe-browser-tools#104 - will it go to current release?\nIt's in testcafe-browser-tools@1.1.2, so it's included in the current testcafe release (0.10.0)\n. /cc @VasilyStrelyaev \n. FPR /cc @VasilyStrelyaev \n. Hi @Elric-pp,\nI've checked your scenario. It seems testcafe clicks correctly but it necessary to add the setNativeDialogHandler method to handle alert dialog.\nI've modified your test, please check does it work on your side:\n``` js\nimport { Selector } from 'testcafe';\nimport { equal } from 'assert';\nfixture tap\n    .page('https://jsfiddle.net/ystg8wt4/')\ntest(Should alert hello, async t => {\n    await t\n        .switchToIframe('iframe[name=result]')\n        .setNativeDialogHandler(() => {\n        })\n        .click('#tap');\nvar history = await t.getNativeDialogHistory();\n\nawait t\n    .typeText('#input', history.length.toString());\n\nvar inputSnapshot = await Selector('#input')();\n\nequal(inputSnapshot.value, '1');\n\n});\n```\n. I see the test is ok in Chrome 54 (the last stable version), but it is failed in Chrome 55 (Beta channel) and Chrome 56 (Dev channel). We will investigate the issue.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. The target test is ok. There are some other unstable test, we'll fix them in another prs.\n/cc @helen-dikareva \n. Hi Jan,\nI've checked some our examples in the documentation and they work properly in Chrome Canary. Could you please provide code of the example you've run?\n. It seems you've tried to run this example. It's failed on my side but with another error. Anyway this test is replaced with the new one already.\n. I've tried to run this in Chrome Canary today at it was ok on my side. It maybe something wrong with babel modules. I'll try to investigate this tomorrow.\n. @janbaer, It seems I've reproduced the problem. But it's gone after I reinstalled testcafe. I uninstalled it locally and globally and then installed it again globally:\nbash\nnpm uninstall testcafe\nsudo npm uninstall -g testcafe\nnpm install -g testcafe\nPlease try this on your side and notify me is the test works.\n. Is it failed in ChromeCanary with Uncaught SyntaxError: Unexpected token ) error on the >  8 |        .setNativeDialogHandler(() => true) line?\n. Unfortunately no. It works on my side with exactly the same configuration. I'll do some more investigation and notify you when a have some results.\n. @janbaer Could you please run the test in Chrome Canary in Incognito mode. To accomplish this open the browser in Incognito mode and run the test as described in the Remote Browsers article.\n. Hi @tjoskar,\nThanks for your report. It seems this is another problem. I've created a separate issue for the problem in Firefox #950\n. Guys, could you please check the initial issue with our new release version (it's with alpha tag now)? We've pushed some fixes that can help. To check it please run npm install testcafe@alpha\n. @tjoskar thanks for the detailed information. You are right, some addons can break Test\u0421afe behavior.\n. @LanFeusT23 Have you tried to run it in any other browsers?. @LanFeusT23 From your description it seems there is a bug in our code. Is it possible to share a link to your  page with us? With it we can reproduce and fix the problem. If your project is not public we can use ngrok. With it you can share a link to your local page. To be confident we can use email (alexander.moskovkin@devexpress.com) to discuss it.\nIf these variants are not appropriate for you we'll ask you to provide us with the error callstack from the browser. To get it perform the following steps:\n1) clone the testcafe-hammerhead repo (https://github.com/DevExpress/testcafe-hammerhead);\n2) call npm install;\n3) install gulp globally (if it's not installed on your machine);\n4) run gulp playground --dev (a new browser window will be opened);\n5) open dev tools in the browser and enter your page url into the input;\n6) see it there a Uncaught SyntaxError: Unexpected token ) error in dev tools. If yes then provide us with its stack. /cc @churkin @miherlosev @LavrovArtem Guys, what do you think about it? Have you faced with such issue?. @LanFeusT23 thanks for your info but we need some more to try to identify the cause of the problem.\nCould you please perform the following steps:\n- run the playground task again but with the --dev option now: gulp playground --dev;\n- open your page\n- click on the VM350:1 link (it's on your screenshot). A script should be opened in a new dev tools tab. Share the script content with us (via gist.github.com or privately);\n- open a Network tab in dev tools, reload the page and filter requests by JS. Take a look at each script response. Is it started with the /*hammerhead|script|start*/ comment (excluded hammerhead.js, task.js, iframe-task.js)? If some script is not started with it please share its content with us (see - https://www.screencast.com/t/oiZgqFpY).. Thanks @LanFeusT23, I've got it. We'll investigate it. Hi @sijosyn,\nThanks for your proposal. I doubt we'll implement it in the nearest future but we will be happy if someone is ready to do it. \nHere is a guide how to create a new Browser Provider Plugin. And we have plugins for other cloud services: BrowserStack and SauceLabs. They can be used as an example how to implement such provider.. Hi @sijosyn.\nIt's great! We'll definitely check it out and add it into our ecosystem section. Thanks a lot!. @sijosyn Awesome! Thanks a lot!. FPR\n. Hi @vitalets,\nTestCafe doesn't use WebDriver, but it's based on a URL-rewriting proxy. With the proxy we inject scripts that emulate user actions via DOM API. @inikulin have described in our discussion board what the difference between TestCafe and WebDriver-based solutions.\nFeel free to ask us about any further technical details.\n. It works properly now (tested in Chrome, FF, IE11). @VasilyStrelyaev can we do this in the next sprint (#5)? . done in https://github.com/DevExpress/testcafe/pull/1265. How does it look:\ndefault speed     : http://screencast.com/t/WKFKnUAy\nspeed 0.5            : http://screencast.com/t/324IOvri\nmin speed (0.01) : http://screencast.com/t/zBNgRVANkPbW\n. FPR\n(one test for speed changing in iframe added)\n. FPR\n. Fixed with https://github.com/DevExpress/testcafe-hammerhead/commit/6d2da16b173d2d31c6d7e5ff9e73fa1b23e56835\n. Hi @crudo,\nThanks for the issue. We have reproduced the problem and we are working on it.\n. Great! I close the issue then.\n. Hi @s-adachi2016,\nPlease confirm, do you try to run tests via https://github.com/azu/demo-test-cafe module? And do you have testcafe version 0.9.0 ?\nAt first we need to know is it possible to open any localhost page in the browser on your machine. Let's create a simple nodejs server. Please do the following in the cmd:\n1) Create a temporary dir and install express module:\nbash\nmkdir test-server\ncd test-server\nnpm install express\n2) Create server.js file in your test directory:\n``` js\nvar express = require('express');\nvar app = express();\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\napp.listen(54000, function () {\n  console.log('Example app listening on port 54000!');\n});\n```\n3) Run the server\nbash\nnode server.js\n4) Try to open http://localhost:54000/\nIs the page with Hello World! text opened?\n. We are working on this feature in the context of the https://github.com/DevExpress/testcafe/issues/1206 issue. Please subscribe on it to be notified about our progress.. Hi @tjoskar,\nCould you please specify your Firefox version? It works well on my side.\n. I've reproduced in Firefox Nightly. We'll investigate this.\nMeanwhile test works correctly in the latest release version (v49.x)\n. Should be fixed in testcafe-hammerhead: https://github.com/DevExpress/testcafe-hammerhead/issues/923\n. Fixed with https://github.com/DevExpress/testcafe-hammerhead/commit/3d567d11c04da4124e9226d155bf2291a2813bd1\n. done in #1062 \ndocumenation added in #1027 . lgtm. Nice changes!\n. I'm working on this\n. Reproduced on the original page if start to execute actions at once the page is loaded\n. I'm working on it\n. /cc @helen-dikareva . /cc @MarinaRukavitsyna . rebase required. /cc @inikulin @MarinaRukavitsyna . Rebase required. @ryx While the #918 is not implemented yet you can use a workaround:\n```js\nimport { ClientFunction } from 'testcafe';\nfixture myFixture\n    .page http://example.com;\nvar debug = ClientFunction(() => { debugger; });\ntest('Debug', async t => {\n    // some test actions\n    await t.wait(2000);\n    await debug();\n});\n```\nThe test execution will be stopped on debugger if developer tools in your browser are opened.. > Your proposal looks even more useful than what I had in mind. It has the same effect but allows stepping through the execution of the tests, too. Great idea!\nSo, I close this one in favor of #918 . As a workaround you can use the node-glob module to find files by a pattern and pass the files array to the src method.. I agree, it would be useful. Not reproduced. @miherlosev can't do it now too.. Hi @ronaldohoch,\nWe have not yet but it possible to implement it. What behavior do you expect from Slack Integration?. @ronaldohoch  It can be implemented as a TestCafe Reporter Plugin. We have a detailed instruction how to create it in our Reporter Plugin article. \nFeel free to create the plugin or if your're busy we'll take care of it.. It's created: https://github.com/Shafied/testcafe-reporter-slack \ud83d\udc4d \nThanks, @Shafied. /cc @lexkazakov. closed in #974. The failed test is ok for now. It's failed because we have a link to an assertions article that is not merged yet.\nSo, let's review. FPR. It were corrections from a corrector. Also the Landing Page article was updated.\nFPR. FPR. /cc @inikulin @churkin @lexkazakov . > There are broken links in docs\n@inikulin It's a link to assertion docs that is not merged yet. Selector articles were reworked. Tests are ok (just a broken link to assertions article that is not merged yet)\n/cc @inikulin @lexkazakov @churkin . FPR\n/cc @inikulin @lexkazakov @churkin \nPlease take your attention, I've added some changes to 'Getting Started'. FPR. FPR. FPR. It seems failed client tests in Firefox are related with https://github.com/DevExpress/testcafe/issues/964 /cc @helen-dikareva . @testcafe-build-bot \\retest. /cc @helen-dikareva . lgtm /cc @helen-dikareva . I'm working on this. @testcafe-build-bot \\retest. Hi @mkubrycz,\nTestCafe works properly here. If an element (for example Element A) is on the page TestCafe clicks at the point where the element is placed. But if the element is overlapped by another element (Element B) TestCafe raises clicks on the top element (Element B). It maybe useful in some test cases (for example you would like to check that the element is on the page, but it's not possible to click on it).\nIn your case click on the button.center element should lead to alert() dialog. Let's check it in the following test:\n```js\nimport assert from 'assert';\nimport { Selector } from 'testcafe';\nfixture Testing testcafe\n  .page https://jsfiddle.net/vsh207dn/;\ntest('Fail to click on overlapped element', async t => {\n  await t\n    .switchToIframe('*[name=\"result\"]')\n    .setNativeDialogHandler(() => true)\n    .click('button.center');\nconst history = await t.getNativeDialogHistory();\n\nassert.deepEqual(history.length, 1);\n\n});\n```\nThe test is failed because alert dialog was not appeared.\nBut if you hide the .center.over element (https://jsfiddle.net/vsh207dn/5/) test will be successfull.. I think visible, displayed and shown are to similar and can make more confusion. I prefer hidden. > Selector('.hey').filterVisible()\nSelector('.hey').filterHidden()\nLooks clear. I think, yes. But place this script not to a div but to the header or body. @testcafe-build-bot \\retest. done in #1031. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @georgiy-abbasov Please describe what the reason of press-test.js changes (maybe refer to the commit with changes that lead to this). We have getAttribute method, do we really need hasAttribute?\njs\nawait t.expect(element.hasAttribute('attr')).ok()\ncan be easily replaced with\njs\nawait t.expect(element.getAttribute('attr')).ok()\n/cc @miherlosev @DevExpress/testcafe . why not\njs\nawait t.expect(element.hasClass('fade')).ok()\n?. but possible you are right because it doesn't work for an element like\nhtml\n<div contenteditable />. ok, I'm agree). Please, rebase to upstream to fix tests on appveyor. Please, rebase to upstream to fix tests on appveyor. We've not handled a case when a target element is hidden under an element that has a parent with style=\"fixed\"\n/cc @AndreyBelym . Hi @Li34,\nWe've fixed it for a case when an overlapping element has style=\"fixed\". But the problem still occurs when an overlapping element is not fixed but it has a parent with style=\"fixed\". Meanwhile usually it's easy to find a workaround for this case.\nHave you faced with this issue in your tests? If yes could you please provide an url to your page or create a simple example to reproduce the problem. With it we can help to find a way how to resolve the issue.. Hi @RemeJuan,\nCould you please create a simple example markup to demonstrate this (on https://jsfiddle.net/ for example). Also you can keep your page model files in the same directory with tests:\ntests/\n-- page-models/\n---- page.js\n-- test1.js\n-- test2.js\nIt should not raise a error like the page.js file doesn't contain tests if you specify tests to run as tests/*.*.js.. Hi @jinzw1993 ,\nI see you want to select the \u5317\u4eac\u5e02 option in the <select> element. Call two clicks to do this: on for the <select> element and on for the <option> element. Here is modified test that works on my side:\n```js\nimport { Selector } from 'testcafe';\nfixture Getting Started\n    .page http://www.560417.com/User/Register;\nconst fdg = Selector('#FirstID');\ntest('My first test', async t => {\nawait t\n      // click the  element to expand it\n      .click(fdg)\n  // select the option by its text\n  .click(fdg.find('option').withText('\u5317\u4eac\u5e02'))\n\n  // or by its index\n  //.click(fdg.find('option').nth(1))\n\n  .expect(fdg.value).eql('1')\n  .typeText('#userName',\"dsafdssdfajkhfdskjhfsdkhjfdshjkfdhjkkhf\");\n\n});\n```\nAlso I see there is an js-error on your page. So, to run this test with the skip-js-errors option:\nbash\ntestcafe chrome test.js -e. @AndreyBelym I'll take care about this PR. Enjoy your vacation =). @georgiy-abbasov Also we need an issue where is explained what's wrong now, and this PR closes the issue. Hi @marchugon,\nThanks for you report. It seems we've fixed this problem already, but it's not published yet. We'll publish the version with the fix soon, I'll notify you.. @marchugon, please check the both problems (#1075, #1076) on the new alpha version. To install it run\nbash\nnpm install [-g] testcafe@alpha\nPlease notify me does it work now?. I'm working on this. https://github.com/DevExpress/testcafe/issues/1098. Maybe but not sure. @inikulin what do you think?. I'm working on this. I've found the cause of the problem.\nWhen you pass to much files to compile (> 8000 in my case) the Compiler try to read and compile all of them at the same time (via Promise.all). As a result a EMFILE, too many open files error is raised here.\nThere are two ways to fix it:\n1) Create custom logic to not parse more than  files at the same time (for example 1000)\n2) Use graceful-fs\nI prefer the second. @inikulin are you agree?. It seems the second way doesn't work when files too much (about 30000). Also I don't think it a nice idea to try to read so much files at the same time. /cc @kirovboris . FPR. It's an unstable test, so I merge this. /cc @churkin . Great proposal!\nAnd .... we have this already \ud83d\ude03\ud83d\ude03 : \ntestcafe --list-browsers. /cc @miherlosev . lgtm /cc @churkin . Hi Steven,\nI've tried to run the following test in chrome, firefox and ie:\n``js\nfixtureExample.pagehttp://github.com`;\ntest('Check navigateTo', async t => {\n    await t\n        .navigateTo('https://google.ca/')\n        .wait(1000)\n});\n```\nIt works properly on my side:\n\nCould you please provide the whole test to reproduce the problem.\nIf you run the test in chrome try to check it in the incognito mode to disable all extensions:\ntestcafe \"chrome --incognito\" test.js\n. I'm working on it. Could you please attach a screenshot or screencast to see how it looks?. @helen-dikareva It looks good for me. Could you please add a screenshot of console with the debugger report?. closed in #1131 . > typeText(loginInput,'sgcp@sgcp.com.br'). // <--- This input is not found\nDo you have this input on the http://localhost:3000/#/login/ page? If you set fixture's page in the following way:\njs\nfixture `Teste comunidade`\n    .page('http://localhost:3000/#/login/')\n    .beforeEach(login)\nlogin will be executed on the http://localhost:3000/#/login/ page. . > typeText(loginInput,'sgcp@sgcp.com.br'). // <--- This input is not found\nDo you have this input on the http://localhost:3000/#/login/ page? If you set fixture's page in the following way:\njs\nfixture `Teste comunidade`\n    .page('http://localhost:3000/#/login/')\n    .beforeEach(login)\nlogin will be executed on the http://localhost:3000/#/login/ page. . Thanks for clarification.\nCould you please provide us URL to your tested page or create a simple example to reproduce it on our side? A screencast that shows the test execution also can be helpful.\nOr you can try to debug it on your side with the following steps:\n- add debugger; before the typeText action in the following manner:\njs\nawait ClientFunction(() => { debugger; })();\nawait t.typeText(emailInput, `...`);\n\nrun the test. Open developer tools once the browser is opened\nwait while the code execution will be stopped on debugger;\ncheck does your element exist\n\nAlso you can open await t.wait(5000) to have time to open developer tools. Thanks for clarification.\nCould you please provide us URL to your tested page or create a simple example to reproduce it on our side? A screencast that shows the test execution also can be helpful.\nOr you can try to debug it on your side with the following steps:\n- add debugger; before the typeText action in the following manner:\njs\nawait ClientFunction(() => { debugger; })();\nawait t.typeText(emailInput, `...`);\n\nrun the test. Open developer tools once the browser is opened\nwait while the code execution will be stopped on debugger;\ncheck does your element exist\n\nAlso you can open await t.wait(5000) to have time to open developer tools. > in my opinion my login page is not all renderized yet, when the testcafe looks for componentes in the DOM tree...\nYou can try to increase the selector-timeout option to wait some more time for page rendering. > in my opinion my login page is not all renderized yet, when the testcafe looks for componentes in the DOM tree...\nYou can try to increase the selector-timeout option to wait some more time for page rendering. It shouldn't be but I'll check it on our functional tests. It shouldn't be but I'll check it on our functional tests. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I've checked, it's all ok with performance.. I've checked, it's all ok with performance.. Hi Umar,\nI've reproduced the problem and we are investigating it.. Hi Umar,\nI've reproduced the problem and we are investigating it.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi Alexey,\nThanks for your report!\nWe've found these mistakes too and we've already updated our recipes in the repository (#1069). You can find actual recipes here. They will be updated on the site when the next testcafe version (0.12.0) is released.\n\nBut in does not work for me. It is seems like --app option is ignored.\n\nWe've implemented this feature (#1047) in 0.12.0 that is not released yet. But you can try it now in the  alpha version (npm install testcafe@alpha). You can find the feature description in the documentation topic in the repository.\n. Hi Alexey,\nThanks for your report!\nWe've found these mistakes too and we've already updated our recipes in the repository (#1069). You can find actual recipes here. They will be updated on the site when the next testcafe version (0.12.0) is released.\n\nBut in does not work for me. It is seems like --app option is ignored.\n\nWe've implemented this feature (#1047) in 0.12.0 that is not released yet. But you can try it now in the  alpha version (npm install testcafe@alpha). You can find the feature description in the documentation topic in the repository.\n. /cc @churkin . /cc @kirovboris . Hi Pedro,\nThank you for your cooperation.\nIt is technically possible to implement this, but it requires careful consideration of the API for this. But I'm wondering what is your scenario that requires this feature? From what I gather, you would like to avoid some user login script adding in each test. And with this token in the header, the server will give a response like for the registered user. Am I correct?\n\u00a0\nWe are planning to implement the user roles(#243) feature. Please take a look at its description. Is it suitable in your case?. > In our case TestCafe just loads a page and takes a screenshot, the login is inside the javascript code.\nUnfortunately we don't completely understand your scenario. \nIs the login script executed in the browser? How does it work, via some requests to your server?\nOr is the login script executed on the server-side (node.js) before tested webpage opening?\nIs your tested project public (open-source)? If yes, we can take a look at it.\nCould you please provide your scenario step-by-step?. Thanks  for the clarification. Do you use some type of standart authentication types (maybe JSON Web Token) or it's a custom implementation?\n\nit doesn't work when running with TestCafe (401 unauthorized), so I guess the requests are changed somehow by TestCafe\n\nTestCafe should work in this case, it seems it's some issue on our side. Is it possible to share your tested page for us to be able to reproduce the problem?\n. Please look at our HTTP Authentication documentation article. This feature was released several days ago in v0.12.0. Is it suitable for your case?. It would be very helpful if you create an example with a dummy account. . Thanks for the clarification! Then we will work on it in the context of the\u00a0https://github.com/DevExpress/testcafe-hammerhead/issues/1016 issue. @pedroscaff @JoergFiedler \nWe've fixed the issue in testcafe-hammerhead and published a build with the fix (testcafe@0.13.0-alpha1).\nYou can install it via\nsh\nnpm install testcafe@alpha\nPlease, let us know does it work on your side. If it's ok we will close this issue. https://github.com/DevExpress/testcafe-hammerhead/issues/1016#issuecomment-276008481. Hi Alex,\nI don't see a way how it can be done with the current testcafe version, this requires some additional implementation in our API.\nCould you please tell us why do you need it? How are you going to use it in your project? With this information, we do our best to find a solution for you.. Thanks for clarification. For now TestCafe doesn't provide functionality to add such hook.\nI'm not 100% sure that this is what you need, but maybe the following approach will be useful for you:\n``js\nfixtureGet screenshots`;\nconst urls = ['http://google.com', 'http://gmail.com'];\nfor (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\ntest('Get screenshot', async t => {\n    await t.navigateTo(url);\n\n    const pageUrl = await t.eval(() => window.location.href);\n    const fileName = pageUrl.replace(/:|\\/|\\./g, '_');\n\n    await t.takeScreenshot(`${fileName}.png`);\n});\n\n}\n```\nOr maybe the following:\n```js\nimport { Selector } from 'testcafe';\nfixture Get screenshots\n    .page google.com;\nlet lastPageUrl = '';\nasync function checkUrlAndTakeScreenshot (t) {\n    const pageUrl = await t.eval(() => window.location.href);\nif(pageUrl !== lastPageUrl) {\n    lastPageUrl = pageUrl;\n\n    const fileName = pageUrl.replace(/:|\\/|\\./g, '_');\n\n    await t.takeScreenshot(`${fileName}.png`);\n}\n\n}\ntest('Get screenshot', async t => {\n    // add the takeScreenshot function after each action\n   await t.click('body');\n   await checkUrlAndTakeScreenshot(t);\n   await t.click(Selector('a').withText('Images'));\n   await checkUrlAndTakeScreenshot(t);\n   // ...\n});\n```\nThe second solution looks not pretty but maybe it'll ok for your task. It's easy to do it without this built-in option (see the recipe).\nAnd we have another debug-mode flag, so this feature will lead to a confusion.. @dzannotti, Also It possible that some chrome extension breaks test running. Please try to run it in the incognito mode:\ntestcafe \"chrome --incognito\" your-test.js. Could you please provide us URL to your tested page or create a simple example to reproduce the problem on our side?. Hi,\n\nWhen I make a request window.fetch('http://locahost:3000/api/current_user'),\nit will actually call http://10.254.254.254:64304/B1tIW9A9e/http://localhost:3000/api/current_user\n\nIt's ok because testcafe works via its own proxy, so it sends requests to the proxy (10.254.254.254:64304) and the proxy sends them to your web app server (localhost). Does it break your application during testing?. @Darmody Is it possible to share your application or create a simple example to reproduce the problem on our page? Or maybe you can give us some tips to create the same simple application to reproduce the problem? It's too hard to determine the cause of the problem without a page. It works ok on the simple page on my side. I think the problem is specific to your backend realization.. https://www.screencast.com/t/JTqk1YJr. Could you please provide the same info (request,response) when you call this on the original page (without testcafe). Thanks for the info. We'll try to investigate it. If we need some more info we will write you. \nPlease notify us if you will find something on your side. Hi @sagarvora,\nDoes it work locally on your computer?. It's hard to determine the reason without an investigation. \nCould you please compare the server log on Travis with the log from local running? (for example you can publish it on https://gist.github.com/).. I'm closing this since there were no activity here for a long time. Some of other issues discussed here were resolved. Feel free to reopen the issue if the initial issue is actual or create a new issue if you have some other problem.. @AndreyBelym please take it. Hi Konstantin,\nThanks for the idea, it looks interesting. We need to do some research to make a decision.. @testcafe-build-bot \\retest. Hi @StarpTech,\nThanks for noticing that. It's a typo in the constains word, it should be contains. I've fixed it.. https://github.com/DevExpress/testcafe/commit/1cb440a956f32798a7afb526d62ca876566386e0. Hi @WillemMali,\nIt seems you have found this example in the documentation for the previous TestCafe version.\nThe new open-source TestCafe has different API (see documentation). In the Programming Interface article you can find how to use TestCafe from your Node.js modules.\nAlso there is a typo in your code for the previous version, it should be:\n```js\nvar TestCafe = require('testcafe');\nvar testCafe = new TestCafe({\n    controlPanelPort: 8000,\n    servicePort: 8080,\n    testDir: 'tests'\n});\n```. I put it wrong in my previous post. testcafe.devexpress.com is a website dedicated to the paid version of TestCafe, not the previous one. So, the documentation at testcafe.devexpress.com is recent but it doesn't relate to the open-source TestCafe.. @AndreyBelym have updated the post, now it's \n\n\n.serial property for tests and fixtures to disallow running them concurrently. They should not change overall test execution order, just prevent next tests to be started.\n```\ntest('1', () => );\ntest('2', () => ...);\ntest.serial('3', () => );\ntest('4', () => ...);\ntest('5', () => ...);\ntest.serial('6', () => );\n\n\nrunner.concurrent(2).run() =>\ntest1  test2\ntest3\ntest4  test5 \ntest6\n``\nIt seems this approach doesn't break reporting.\nIn theory theconcurrentlyfeature can be useful when you run tests in a single browser and some tests can be run concurrently but some tests can't be (for example they change a database state). In this case you can mark several tests asserial` and run others concurrently.\nBUT, this option has some uncertainties.\nFor example if I run tests just in two browsers: testcafe chrome,firefox test.js, and I have a serial test. Should it be run in two browsers concurrently or it should be run one by one? How it should work if I run tests in two browsers with the concurrently option via testcafe chrome,firefox test.js -c 2 ?\nSo, do we really need the single test feature? /cc @DevExpress/testcafe . Maybe we should add an animation where the test is run faster? /cc @VasilyStrelyaev . Although TestCafe doesn't support XPath based selectors out-of-the-box now you can use them in your tests. Take a look at my example:\n```js\n// xpath-selector.js\nimport { Selector } from 'testcafe';\nconst elementByXPath = Selector(xpath => {\n    const iterator = document.evaluate(xpath, document, null, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null )\n    const items = [];\nlet item = iterator.iterateNext();\n\nwhile (item) {\n    items.push(item);\n    item = iterator.iterateNext();\n}\n\nreturn items;\n\n});\nexport default function (xpath) {\n    return Selector(elementByXPath(xpath));\n}\njs\n// test.js\nimport XPathSelector from './xpath-selector';\nfixture Use XPath\n    .page https://github.com;\ntest('Check header links count', async t => {\n    const headerLinkXPath = '/html/body/div[1]/header/div/div[2]/nav/ul/li/a';\n    const headerLink =      XPathSelector(headerLinkXPath);\nawait t\n    .maximizeWindow()\n    .expect(XPathSelector(headerLinkXPath).count).eql(5);\n\n});\n```\n. Hi @neilmatillano,\nI haven't worked on this yet, so it would be nice if you add you improved version of this function.\n. I'm closing this since it can be done with third-party modules (like xpath-to-css). So, we are not going to implement this in the near future.. Hi Umar,\nel.visible is false in the following cases:\n- display style is none;\n- visibility style is hidden;\n- element has a width or height that is equal zero.\nThe visibilityCheck option works with the same logic. \nThis behavior is similar to the jQuery :visible Selector.\nWith other words, element is visible if it's available for an action (it's inside the viewport or it's possible to scroll to it).\nIf you want to check is your element is inside the viewport you can create a ClientFunction with custom logic.. I haven't met a request for this feature before. If necessary we can create a solution for this by using ClientFunction or a custom property of the element state.\nAlso I guess we'll discuss this built-in property with the team.. Thanks for the proposal! We need some time to rethink it all and propose the solution.. > I think currently if you'd have two clickable elements on top of eachother and you instruct TestCafe to click the one that is behind the other, it actually performs the click on the element that is in front.\nYes, TestCafe works now in this way. Hi,\nWe haven't done any significant changes here yet but I have some thoughts about what we can do.\nLet's clarify the requirements. It's useful to have the capability to check the following scenarios in tests:\n\nElement is technically visible (has no display:none, visibility:hidden and has a non-zero width and height);\nElement is inside the viewport (placed in the visible part of the page in the browser);\nElement can be a target for an action (you can scroll to it (optionally), see it and for example click on it. Element is not overlapped by others. In other words it possible to get it via getElementFromPoint)\nElement is in the viewport and it is reachable\n\nFor the first case, we already have element.visible.\nFor the second case, we can add element.inViewport.\nFor the third case, we can add element.reachable.\nFor the fourth case, we can check both the inViewport and reachable flags.\nWhat do you think? /cc @adamorlowskipoland, @p-bakker, @umaar, @DevExpress/testcafe . Guys I have some uncertainties about inViewport, and reachable options.\nFor the inViewport option - what part of the element should be visible? The center of the element? The whole element? Or it should be configurable? Maybe, inViewport should be a function with an argument like: { offsetX: <number>, offsetY: <number>, wholeElement: <boolean> }\nI'd like to see your opinion based on your real testing cases. /cc @adamorlowskipoland, @p-bakker, everyone else. Hi,\nI've reproduced the issue and I'm working on it.\n\nTestcafe tests should not fail due to a client side JS error\n\nYou can do it optionally with the skip-js-errors option. After some investigation we've found that the issue relates to our proxy module and we've created an issue there: https://github.com/DevExpress/testcafe-hammerhead/issues/1026. We've fixed the issue. It will be available in the next release.\nAlso we've published a daily build version with the fix (v0.13.0-alpha2). You can install it via\nsh\nnpm install testcafe@alpha. It seems it works ok with testcafe@0.13.0-alpha2.\nFeel free to reopen the issue if it doesn't work on your side. I suppose, the onEachPage hook should be executed on the page load (when the DomContentLoaded event is raised).\n\nOr does it also take into account Ajax-based apps where for example after a click of a button there is communication with the server to signal the button was clicked, after which there is chatter back and forth between the client and server to retrieve new content and update the client?\n\nIt's too hard to determine this case. We don't know what does response from the server contain (it's maybe markup that should be rendered, or it's maybe just some service data).\n\nAll I notice if that I have to write specific logic to wait for certain state in the UI to be achieved, before continuing with the test\n\nWhat about something like beforeEachAction or beforeAction hook, that will be executed before the next test action? /cc @p-bakker @inikulin \n. Hi @neozenith,\nAm I understand right, when you open the page without TestCafe there is no long time interval between DOMContentLoaded and real page loading with UI?\nCould you please provide us with the link to your page if it's possible? If it contains any sensitive data you can do it privately by sending email me to the address from my GitHub profile. Then we can check it on our side.\nAnyway what type of errors do you see in the report?\nFor example, if your test looks like:\njs\ntest('my test', async t => {\n    await t.click('.some-element');\n})\nthen it should work in the following manner:\n- testcafe opens the page and waits for the window.load event;\n- testcafe tries to click on the '.some-element';\n- if the UI is not loaded yet testcafe waits for '.some-element' to appear for 10 seconds;\n- after 5-8 seconds the UI should be rendered;\n- testcafe clicks on the '.some-element'. @neozenith Thanks for provided details, we'll take a look at this. Take a look at Selectors and built-in assertions.\nFor example, if you need to wait for some element is appeared on the page you can use the following:\njs\nawait t.expect(Selector('.foo').exists).ok('element exists', { timeout: 10000 })\nIf you need to implement waiting with some custom client-side logic you can use ClientFunction:\njs\nconst getSomePropertyValue = CilentFunction(() => window.someProperty);\nawait t.expect(getSomePropertyValue()).gt(5, 'assertion message', { timeout: 6000 });\nSo, waitFor action will duplicate assertions. Do you have some cases that can't be covered with Selectors, ClientFunctions and assertions?. Hi,\nI've reproduced the problem on mac. We will fix it. \nAs a workaround you can click on the browser's address bar and then press cmd+alt+I. Dev tools will be opened then. Will not be included to v0.13.0, so we'll merge it later. When you switch to another window in full-screen mode in OS X, the OS switches the browser to lower resource consumption mode where tests are not guaranteed to be executed correctly. It's not recommended also to minimize the window and to switch to another tab in the same browser window. TestCafe can't do something here because it's related to the OS behavior. \nBut you can switch to another window in not full-screen mode. In this case test works properly.. Let determine API for this feature.\nMy proposal:\nCLI:\n```sh\nNew options:\n--proxy-url\n--proxy-ignore\ntestcafe chrome tests/ --proxy-url x.x.x.x --proxy-ignore \"a.com,b.com\"\n```\nProgramming Interface:\n```js\nconst proxyUrl = 'x.x.x.x'\nconst ignoreHosts = ['a.com', 'b.com'];\nrunner\n    .proxy(proxyUrl, ignoreHosts)\n```\n/cc @DevExpress/testcafe-docs @inikulin @VasilyStrelyaev . So, as I understand, we've decided don't add proxy-ignore option for now.\nCLI:\n```sh\nNew option:\n--proxy-url\ntestcafe chrome tests/ --proxy-url x.x.x.x\n```\nProgramming Interface:\n```js\nconst proxyUrl = 'x.x.x.x'\nrunner\n    .proxy(proxyUrl)\n```\nIs it ok?. It's already available (since the 0.15.0 version). See the --proxy option for details.. Hi @MishraApa,\nYou can find the correct TestCafe API in our documentation.\nNow TestCafe has option --proxy which specifies the proxy server in your local network to access the Internet.\nThe proxy-ignore feature is not implemented yet but will be included in the next TestCafe release.. Could you please describe your issue in details? What url you'd like to open in your tests, what the proxy do you use, what happens when you run your tests?. > is there a development branch for this?\n@mjhea0 We haven't started to work on this feature yet. \nUsually we work on any feature in own fork and make a pull request from there. In the upstream repository usually we don't create new branches.. We've planned to fix #1357 in this release iteration. We will be able to provide you with an alpha version as soon as the fix is ready. @mjhea0 Thanks for the link, it looks interesting. Hi @ttiurani,\nWe haven't implemented this functionality yet but we keep this feature in mind and we've already made some spike solutions. Now we are planning our next releases so I can't provide you with estimates for this feature so far. Stay with us and we'll notify you about our progress.. @testcafe-build-bot \\retest. cool. it was discussed with @georgiy-abbasov in private. We need to rethink this. rebase required. Can be easily done with a ClientFunction (see an example in the docs).. Please don't merge for now. I should add a couple of lines for legacy api. Hi,\n\nbut I am getting this error when running gulp test-functional-travis-mobile\n\nThis error relates to our travis+saucelabs testing infrastructure issue, we see this error sometimes and we will investigate this.\nFor now I see all tests on Travis are ok, only one test on Appveyor is failed: https://ci.appveyor.com/project/testcafe-build-bot/testcafe/build/%23837#L2612. I've changed the approach a little bit, please look at this, is it ok?. @testcafe-build-bot \\retest. FPR. FPR. We have it: https://github.com/DevExpress/testcafe/issues/1212\nI'm in investigation now, so we'll decide whether or not to include this feature in the current release soon. FPR. @testcafe-build-bot \\retest. You are right. I've updated the initial post. I'm working on this. Here is a conclusion after the first investigation:\nTestcafe works properly here. This error occurs without testcafe when the Electron application is run in the testing environment. It's reproduced when we run the application via our provider too. \nIf we run the application, handle window.onerror event and raise an error in the application, we see the Script error. in the window.onerror handler. Here is described when does it usually happen: http://stackoverflow.com/a/7778424/7162281\nWe'll investigate more it in the context of the issue: https://github.com/AndreyBelym/testcafe-browser-provider-electron/issues/2. Hi @Turkirafaa,\nPlease take a look at the following section in our F.A.Q.: When I run a TestCafe test, I get an unexpected error. What can cause that?\nIt this doesn't help could you please provide a link to your page if it's possible?. Please email me to the mail address in my GitHub profile. I'll provide you with a link to a Slack channel where we can discuss your issue. missed fixture.before and fixture.after in the a-z index. ping @inikulin @LavrovArtem @AndreyBelym . Hi @ClaytonAstrom,\nThanks for the proposal. Your workaround looks ok for now.\nI agree, the scroll action will be useful, we need to think out it's api.\nWhat the arguments for the t.scroll action do you expect for your case?\njs\n    t.scroll(elementSelector, scrollX, scrollY);\n?. TestCafe performs scroll automatically when you call any action. For example if you need to scroll to some element you can use the hover action.. We have an issue for this: https://github.com/DevExpress/testcafe/issues/897. @georgiy-abbasov please take a look at #1327 (we've discussed it in private). ping @churkin @kirovboris . hm... where are travis tests?.... @testcafe-build-bot \\retest. No, it's reproduced with the 0.13.0 version too. (#1226 fix added in 0.14.0-alpha1). Hi @maxmill,\nI've tried to run this test and it works properly on my side (I've tested it on Windows 7, Chrome).\nWhat browser do you use? What error do you see in the report?\nHave you added the import { Selector } from 'testcafe'; line to your test code?\nHere is the test code that I run:\n```js\nimport { Selector } from 'testcafe';\nconst elementByTagName = Selector((tagName) => document.getElementsByTagName(tagName));\nfixtureMy fixture.pagehttp://localhost:4200/;\ntest('it finds a header on the the page', async t => {\n    const visibleElement = elementByTagName('h1');\n    await t.expect(visibleElement.exists).eql(true, 'app works!');\n});\n```\nTestCafe should work with Angular as well as with other frameworks.. Great news!. I'm working on this. Hi @tombertrand,\nThis feature is our short-list but now we can't say when exactly it'll be implemented. I suppose it'll be one of the next few releases.\nAs a workaround you can use nock. See our discussion.\n. Hi @rhymes ,\nActually I haven't checked this case, so it requires some time to try it. If you have some results before please let us know. \nMeanwhile we plan to implement built-in request hooks in the next release (after the current one). It's implemented in #1417. It available in the latest alpha version and will be included in the 0.16.0 version.. I wouldn't like to make a breaking change here. It can break a lot of existing tests. The withText method can take a regexp so it's quite flexible for any cases. So I'd like to leave it as is. closed in #2124 . @testcafe-build-bot \\retest. FPR. Here are the variants what we can set as proxy settings:\njs\nsome_hostname\nsome_hostname:yyyy\nx.x.x.x:yyyy\nhttp://x.x.x.x:yyyy\nhttps://x.x.x.x:yyyy\nhttp://pass:1234@x.x.x.x:yyyy\nSo, I think it's not a proxy-host since we can set the url with a protocol. So, how should we call this settings? (maybe proxy-server) /cc @inikulin @VasilyStrelyaev @LavrovArtem . @helen-dikareva please rebase and we can merge it. Hi Brett,\nThanks for your proposal.\nWe've discussed the similar question in the https://github.com/DevExpress/testcafe/issues/1125 issue.\nAm I understand right your case? To be logged in you need do some actions (e.g. type login + password, click submit). You wouldn't like to do it in each test. \nIf so, we are working on the Implement user roles feature that will allow to do logging actions once for all tests. Does it work for you?. @thecodejack I've created an issue for the problem with kerberos, we'll try to found the reason and fix it.. As I see the requested case can be covered via User Roles or Request Hooks, so I close it as a duplicate. If I'm wrong feel free to comment or reopen the issue.. According to the last comment I close it as a duplicate for #1341 . @varunkumar feel free to contribute. . @riquito Thanks for you idea. It requires careful consideration (because it should be new API, new approach..). I'm not sure we're ready to do it right now but we can consider it in the future. . rebase required. I suppose it will be cool to create a recipe and show how to use Roles with some of real website example. /cc @VasilyStrelyaev . After some investigation it seems it's a complex task. I'm not sure we should implement it since there are no requests for it.. Hi,\nDo you wrap the browser alias with quotes? \nIt should be\nsh\ntestcafe \"browserstack:chrome@56.0:OS X Sierra\" test.js\nto be properly parsed by CLI. Please try to run the testcafe -b browserstack command.\nIf it will be an error, check that testcafe and testcafe-browser-provider-browserstack are installed (both globally or both locally) as I've described here. @darlanmendonca thanks for the info.\nLet's check one more assumption. Could you please install the latest testcafe version with the alpha tag and check the issue with it?\nsh\nnpm install testcafe@alpha\ntestcafe \"browserstack:chrome@56.0:OS X Sierra\" test.js\nPlease let me know what the error do you see after that, the same or some other?\nWe've fixed #1282 issue (it was related to browserstack provider), it possible it will help in your case. . I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.. Hi @mnemanja, starting from 0.18.0 TestCafe runs tests in Chrome with an empty profile (without any extensions) by default. So, you can try to run tests with the latest TestCafe version. Hi @mnemanja, starting from 0.18.0 TestCafe runs tests in Chrome with an empty profile (without any extensions) by default. So, you can try to run tests with the latest TestCafe version. duplicate of #1210 . duplicate of #1210 . Hi @oneillci,\nThanks for your interest.\nWe've done some preparations for this feature in our proxy and we plan implement this in the next release iteration (after the current one). It can take about a couple of months.. @curtisblackwell This is in progress now. @miherlosev already have created a pull request but it requires some time to finish it. If you are interested in this we'll be able to provide you with a dev build once this feature is merged. @djbreen7 The approach with fixtureCtx looks well.. rebase required. I reopen this since it works when you run build and run testcafe from sources, but doesn't work when you run globally installed testcafe.. bin-v8-flags-filter@1.1.0 is released. I'm working on this. Waiting for https://github.com/DevExpress/testcafe-hammerhead/issues/1084. It's fixed after Hammerhead is updated to v10.6.5 (#1414). I'll close the issue when I add a functional test . @testcafe-build-bot \\retest. Work on pull-request is in progress. We've decided to change an approach. I'll write fpr when it will be ready. I'm working on this. After some investigation I've found the initial problem is successfully resolved.\nI've reproduced the problem from the video in the previous comment and I've created a separated issue for it: https://github.com/DevExpress/testcafe/issues/1499. Hi @deane187,\nI've reproduced the problem. It relates to our proxy. I've created an issue there.. We've fixed the issue. The fix will be included into v0.15.0, and it's already available in the latest version with the alpha tag (v0.15.0-alpha4). @testcafe-build-bot \\retest. Tests are ok. It's just known problems with Android on Saucelabs. Hi @baens,\nIt seems the terminal can't handle the arguments as you expect. It works on my side if I escape some symbols (;  )):\nsh\ntestcafe \"chrome --user-agent='Mozilla/5.0\\ \\(Linux\\;\\ Android\\ 5.0\\;\\ SM-G900P\\ Build/LRX21T\\)\\ AppleWebKit/537.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/57.0.2987.133\\ Mobile\\ Safari/537.36'\" test.js. It's implemented in #1417. It available in the latest alpha version and will be included in the 0.16.0 version.. Hi Michael,\nUnfortunately we have no access to browser's context menu from javascript due to browser limitations, so TestCafe has no this functionality. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. fixed in testcafe@0.16.0-alpha3. Hi @mkubrycz,\nThanks for the report. I've reproduced the problem, we will investigate it. I'm working on this. fixed. @testcafe-build-bot \\retest. I think it would be good to run client tests on the chrome beta version to be notified about possible problems early. So, @georgiy-abbasov update the config to use beta version on Windows and latest version on MacOS (as it is now). @testcafe-build-bot \\retest. I suppose it would be cool to add info about testcafe-react-selectors. https://devexpress.github.io/testcafe/blog/testcafe-v0-13-0-released.html#ide-plugins\nI see no reason why we should not to do it . Hi,\nI've reproduced the problem and we will investigate it.\nAs I workaround you can run the test with the skip-js-errors flag:\ntestcafe chrome test.js -e. Hi @gpsarkar,\n I'm not sure that the cause of your problem is the same with the problem reported by @ytanruengsri. There are two ways to check it:\n1) Wait for fix for the problem described in the ticket initially\n2) Create a simple example that allows to reproduce your problem (it's impossible to check your issue without it).\nMeanwhile as a workaround you can try to run test with the skip-js-errors flag too.. @ytanruengsri Cool! You can use TestCafe with it for now. Meanwhile we are working on the problem and we be able to provide the version with the fix as soon as it's done.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi,\nThanks for the report, we should think out it thoroughly. If we will create screenshots without browser toolbars it can be a breaking change for someone.\nAs a workaround you can run chrome in application mode via browser arguments:\ntestcafe \"chrome --kiosk\" test.js\n(quit the running chrome before try it)\n. Hi @eriklharper,\nWe've fixed the issue. You can check it with the latest alpha version (v0.16.0-alpha1). \nYou can install it via\nsh\nnpm install testcafe@alpha. Hi @djbreen7,\nCould you share your tested page with us? If it's hard to do could you provide us with the whole report of the failed test run?. @djbreen7 \nThank for you information. It seems one of installed Chrome extensions breaks TestCafe behavior. That's why it works in the incognito mode on your side. \nMeanwhile we are going to turn off browser extensions for test run by default.. Hi @astanciu,\nWe plan to implement this in one of the next two releases.. Hi,\nTestCafe prevents all real user actions (by mouse and keyboard, except scrolling and pressing key that executes some special commands, like opening browser devtools) during running a test. Otherwise you can change the page state (for example by clicking on a link) and the test will be invalid). Meanwhile you can inspect the page elements via developer tools, testcafe doesn't blocks them.. To be able to click on element on the page to see it in devtools click on the Select an element in the page to inspect it in the devtools panel before it (see https://www.screencast.com/t/xiCgt4UcV). Hi @mulyoved,\nTestCafe panel doesn't affect on test running or page behavior. If you want to see some elements under the panel you can hover the cursor over it and it will be hidden.\nMeanwhile we are going to hide this panel when TestCafe creates a screenshot (see #1357), so you will not see this panel on page screenshots. Does it work for you?. Hi Yusinto, \nI've reproduced the issue and we will investigate it.. I've found that something is broken in our proxy (https://github.com/DevExpress/testcafe-hammerhead/issues/1106) in your case. If we will need some additional information from you we'll let you know, thanks.. Hi @yusinto,\nWe've fixed the issue. You can check it with the latest alpha version (v0.16.0-alpha1). \nYou can install it via\nsh\nnpm install testcafe@alpha. It seems we've broken something: https://travis-ci.org/testcafe-build-bot/testcafe/jobs/228256455#L289\n/cc @georgiy-abbasov . @georgiy-abbasov Here is the same browser (53), but tests are green. let's investigate why it's flacky. There is a performance issue in testcafe-hammerhead@10.6.8 so we can't merge it and should wait for the issue resolving. Hi,\nThanks for the proposal. We have this feature in our planned milestone but now we have no estimated date for it. You can vote for the feature by adding your \ud83d\udc4d there: https://github.com/DevExpress/testcafe/issues/1165. I agree with @miherlosev in most points. Let's discuss it together today. After one more review we with @AndreyBelym want to propose the following syntax for this features:\nThe common pattern is the following:\nchrome[:pathToBrowser][:headless][:emulation][:arg1=value;arg2=value]\npath - for the case if you want to run headless or device emulation mode for a portable browser;\nheadless - enable headless mode;\nemulation - enable device emulation;\nAvailable arguments:\n- for device emulation: width=<number>, height=<number>, density=<number>, mobile=<bool>, orientation=<vertical|horizontal>, userAgent=<string>, touch=<bool>.\n- cdp args: cdpPort=<int>\nHere are some examples:\n```sh\n// Default headless mode\n\"chrome:headless\"\n// Device emulation\n\"chrome:emulation:device=iphone 6\"\n\"chrome:emulation:width=100;height=200;density:1;mobile=false;orientation=vertical;userAgent=abc;touch=true\"\n// Headless device emulation\n\"chrome:headless:emulation:device=iphone 6;cdpPort=9223\"\n// Headless with cdpPort setting\n\"chrome:headless:cdpPort=9223\"\n// Headless/device emulation for a portable version\n\"chrome:path/to/chrome:headless:cdpPort=9223\"\n```\nIn this case we have simple plain syntax (which is usually used in CLI) and avoid complicated patterns like {device:{width=5;heigth=3}} etc... What do you all think? /cc @DevExpress/testcafe . The only functional test is failed. It relates to the pressKey automation in Safari. It failed in all current builds (pull requests and master branch), so it's not related to the current pull request, but I think it's because browser version was updated on BrowserStack. We are investigating it.\nSo, I think we can ignore this test and merge the pull request if there are no changes requests here.. Hi,\nIt seems something went wrong when TestCafe calculated the viewport width.\nTo resolve the problem set the teminal columns setting in the .travis.yml file:\nyml\nbefore_install:\n   - stty cols 78. Hi @GitScrum,\nThanks for your proposals. \nI suppose most of them quite specific and can be implemented with a few additional lines of code in the test or in a helper. I'm inclined to add only most valuable features to API in this case to don't do the API overloaded.\nFor example, it's easy to replace proposed chaining condition with a regular condition:\njs\nawait t\n  .if(/* Boolean condition */)\n  .hover(selector)\n  .endif()\n  .click(selector)\n->\njs\nif(await selector.visible)\n    await t.hover(selector);\nInstead Selector.random you can use the following:\n```js\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nasync function getRandomEl (selector) {\n    const count = await selector.count;\nif(!count)\n    return null;\n\nconst index = getRandomInt(0, count);\nreturn selector.nth(index);\n\n}\n```\nMultiEvent:\n```js\nconst count = await selector.count;\nfor(let i = 0; i < count; i++) {\n    // run beforeAction();\n    await t.click(selector.nth(i));\n    // run afterAction();\n}\n```\nThe Call other test approach has a lot of uncertainties. What if the fixture in the imported file has several tests? What the test has their own page directive or it's skipped?\nI think the best practice here is to place shared steps to a function and call it from different tests:\n```js\n// login.js\nimport { t } from 'testcafe';\nexport default async function () {\n    await t\n        .typeText('#login', 'login')\n        .typeText('#password', 'password')\n        .pressKey('enter');\n}\n// test.js\nimport login from './login.js';\nfixture Fixture\n  .page http://example.com;\ntest('Test', async t => {\n  await login();\n});\n```. > Can be have the ability to connect plug-ins? As done for example in babel.\nWe have no such ability now, but we had the similar thoughts before. So, let's keep your issue opened as a reminder to think out it again.. Hi @abenhamdine,\nUsually this code should work properly. It can relate to the way how did you install testcafe module. Could you please share us with details of your file and module structure? How did you install testcafe, locally or globally? How do you run tests, via CLI, package.json script command, programming interface? Do you have any other modules installed in your project?. Tests are ok (it's the same problem as here).\nWe can merge it if it's ok, /cc @inikulin . closed in #1703 . @mulyoved,\nYeah, I see that the current way is painful for you. Now a remote browser connect url looks like:\nhttp://some-hostname:{port}/browser/connect/{uid}.\nYou can fix the {port} in the url via the --ports option.\nI see the following way to resolve the problem - simplify the last part of the url, for example if you would like to run several remote browsers:\nhttp://hostname:port/browser/connect/\nhttp://hostname:port/browser/connect/2\nOr even just use only http://hostname:port/browser/connect url to connect each next remote browser. \nIn this case you just reenter the same url as before to start the tests in the remote browser (the url is stored in the browser history).\nDoes this approach work for you?\n. Nice. It seems it shouldn't take much time to implement this. We will think over it one more time and if we will not find any unexpected side effects we'll do it. I've planned to do it in the current sprint if it's all ok. It's related to the testcafe-hammerhead, so I've created an issue: https://github.com/DevExpress/testcafe-hammerhead/issues/1129. fixed in testcafe@0.16.0-alpha3. fixed in testcafe@0.16.0-alpha3. As a workaround you can add some assertion before click to ensure the render is completed.\nAnyway we will think how we can handle this case. It seems it works properly now. Hi @irobayna,\nIt seems there is some conflict between Turbolink and our proxy, we'll investigate why it happens and how we can deal with it.. fixed in testcafe@0.16.0-alpha3. /cc @LavrovArtem . > Almost done with the sample application.\n@irobayna, It would be great if you provide us with it. It'll help us to find the cause of the problem and fix it.. Great news! \ud83d\ude00\ud83d\ude00. I'm working on this. @testcafe-build-bot \\retest. /cc @AndreyBelym @churkin . rebased, waiting for the tests. FPR\n/cc @churkin . Hi @mkubrycz,\nitems.nth(0) - it's a selector that provides the visible field.\nBut when you use filter(node => node.visible) - it's a client function that is executed in the browser. In this case node - it's' not a Testcafe selector but a regular DOM Node, so it doesn't provide the visible property (it returns undefined for any node).\nSo I see the following ways to know how much visible elements exist:\n1) Check it on the server-side:\n```js\nconst itemsCount = await items.count;\nlet visibleCount = 0;\nfor(let i = 0; i < itemsCount; i++) {\n    if(await items.nth(i).visible)\n        visibleCount++;\n}\n```\n2) Use some logic to check whether the DOM Node is visible or not in your client function.. Yep. Do you have any other ideas besides hidden ?. Yeah, this approach should work. Note if you have several tests in the file you should reset the visibles variable to an empty array before each test. If necessary you can you Test Hooks for this.. @AndreyBelym, nice job!. /cc @AndreyBelym . FPR. Hi @afcbpeter ,\nCould you please clarify, do you use native HTML5 input with type=\"date\" (like here) or some UI datapicker widget (for exapmle like jquery ui datepicker)?. We have limited html5 inputs support for now. Please try to pass the value that should be set as element's value as the second argument to the typeText action: '2017-26-05'. Yes, you are right. You can use both approaches in this case (via typeText and ClientFunction):\n```js\nimport { Selector, ClientFunction } from 'testcafe';\nfixture DatePicker;\nconst setValue = ClientFunction(value => getEl().value = value);\nconst input = Selector('input[name=\"bday\"]')\ntest.page https://www.w3schools.com/html/tryit.asp?filename=tryhtml_input_date\n('Use typeText', async t => {\n    await t\n        .switchToIframe('#iframeResult')\n        .typeText(input, '2017-05-05')\n        .pressKey('tab')\n        .expect(input.value).eql('2017-05-05');\n});\ntest.page https://www.w3schools.com/html/tryit.asp?filename=tryhtml_input_date\n('Use ClientFunction', async t => {\n    await t.switchToIframe('#iframeResult');\nawait setValue.with({ dependencies: { getEl: input } })('2017-05-05');\n\nawait t\n    .pressKey('tab')\n    .expect(input.value).eql('2017-05-05');\n\n});\n```. Hi @andrewleith,\nYes, you can use the setNativeDialogHandler function. See Handling Native Dialogs documentation topic for details.. You're welcome!. /cc @AndreyBelym . FPR. Just an unstable test. Hi @iexplore,\nI've tried to run tests on a Drupal demo that uses http only cookie for login, it works properly. So it seems the problem relates to the second part of your case when drupal login is done and the SPA requests content. We need some additional time to investigate your case and compose some detailed questions for you that can help us to resolve the problem.\nMeanwhile could you please to try to run your test with the latest TestCafe alpha version (0.16.0-alpha3). We've fixed some bugs in our proxy since the 0.15.0 version, it possible it can help. \nTo install the latest alpha version call npm install testcafe@alpha. If you type window.location.href into console in Chrome developer tools during test run and see a proxied url - it's ok. In fact, if you write window.location.href in your script it's wrapped by our proxy and returns original url, not the proxied one. \n(to see how it works you can type into console:\nwindow.location.href - it returns https://proxiedUrlPart/originalUrlPart.\nBut if you type __get$(window,\"location\").href it returns only original url part)\nSo, as I understand the problem is reproduced in Chrome only and the test works fine in other browsers, yes?\nIf so could you please try to run the test in chrome in incognito mode:\ntestcafe \"chrome --incognito\" test.js\nAnd have you tried the latest alpha version of TestCafe?\n. > Maybe it matters; Code is using ES2015 and is transpiled JIT (in the browser) via Babel in the browser\nI suppose it should work in the same way in all browsers, but it seems you have a chrome-specific problem. But we'll check this too. @iexplore, thanks for your info. There are some uncertainties that can't allow us to draw certain conclusions. Could you please make a screencast to see how the problem looks. It can help us a lot.\nWe would like to see the following:\n1) Run the test with TestCafe in chrome. Please let us see the address bar and opened developer tools (with opened network and console tabs), like on the screenshot: https://www.screencast.com/t/M0lkyvu0X9H\n2) Do the same acitons (like in the test) on your site without TestCafe (we will see how it should work).\nTo create a screencast you can use any tools (for example Jing, it's free). If you would like to do it confidentially you can send a screencast to my email or via direct message on our forum. @iexplore Let's keep it opened to track a progress. We'll close this once we fix the bug in testcafe-hammerhead and the testcafe-hammerhead version will be updated . @testcafe-build-bot \\retest. Hi,\n\u00a0\nEach test is an independent unit that opens a page, does some actions and assertions and closes the page. Each test can change the page state. At the same time, each test should start from a determined state to be independent from others (otherwise, you can't run each test separately). That's why each page starts with a new page.\nIf you have some common actions that should be executed in each test, you can use fixture hooks or User Roles if you need to be logged in for each test.. I understand you point, it makes sense. We should consider an ability to add some option that switch on a mode where the page state is not completely reset between tests (like just calling navigateTo action). closed in favor of the #1770. I see, thanks. I suppose we should note this in the docs.\nHere is how should it look:\n```js\ninterface CustomSelector1 extends Selector, SelectorPromise {\n    prop1(str: string): Promise;\n    prop2(str: string, separator: string): Promise;\n}\ninterface CustomSnapshot1 extends NodeSnapshot {\n    prop1(str: string): Promise;\n    prop2(str: string, separator: string): Promise;\n}\nlet el = Selector('rect').addCustomMethods({\n    prop1: (node, str) => str + '42',\n    prop2: (node, str, separator) => [str, (node).tagName].join(separator)\n});\n```. please check all changes since I've added some info about custom methods and custom properties\n/cc @lexkazakov @DevExpress/testcafe-docs. FPR. FPR. @inikulin You are absolutely right, we are already working on a recipe with all this information. And we are going to highlight this main points in the blog post feature description.\nI thinks a recipe is an appropriate form to describe this details about the feature. And we can add links to it from Test API documentation section. Do you agree?. Agree. It seems it should be a sub-section in the Test API section. FPR. /cc @lexkazakov @DevExpress/testcafe. FPR. /cc @lexkazakov @DevExpress/testcafe . FPR. FPR\n/cc @lexkazakov @DevExpress/testcafe . FPR. /cc @lexkazakov @DevExpress/testcafe. fixed in #1524 . Hi Ivan,\nI've checked your scenario and it works properly on my side. \nI've added a debug command before the assertion:\njs\nawait t.navigateTo(gridColPage.url)\n        .expect(gridColPage.colums.count).eql(12)\n        .resizeWindow(500, 500)\n        .debug()\n        .expect(gridColPage.colums.nth(0).clientWidth).eql(29)\nHere is a screenshot how does it look on my side:\n\nAs you can see TestCafe run is stopped on the debug command. window.innerWidth equals 500 as expected and the clientWidth of the column is 29. I think it can be related to your MS Edge rendering specific or some extensions behavior. Could you please perform the same steps as I did to see what's wrong on your side?. Hi Ivan,\nI've checked your scenario and it works properly on my side. \nI've added a debug command before the assertion:\njs\nawait t.navigateTo(gridColPage.url)\n        .expect(gridColPage.colums.count).eql(12)\n        .resizeWindow(500, 500)\n        .debug()\n        .expect(gridColPage.colums.nth(0).clientWidth).eql(29)\nHere is a screenshot how does it look on my side:\n\nAs you can see TestCafe run is stopped on the debug command. window.innerWidth equals 500 as expected and the clientWidth of the column is 29. I think it can be related to your MS Edge rendering specific or some extensions behavior. Could you please perform the same steps as I did to see what's wrong on your side?. Tests are failed because there is some problem with the firefox-osx browser opening on BrowserStack. Since the pull-request is simple, it doesn't content any browser-related login and functional tests on AppVeyor are ok I merge this. Tests are failed because there is some problem with the firefox-osx browser opening on BrowserStack. Since the pull-request is simple, it doesn't content any browser-related login and functional tests on AppVeyor are ok I merge this. Hi,\n\u00a0\nDo you mean taking a screenshot of the whole page, not only of its visible part (e.g., if the page has a large scrollbar height, you'd like to see the whole page in a screenshot)? Do I understand you right?. Hi,\n\u00a0\nDo you mean taking a screenshot of the whole page, not only of its visible part (e.g., if the page has a large scrollbar height, you'd like to see the whole page in a screenshot)? Do I understand you right?. Hi @HenningThiemann, We didn't yet. We'll notify you once we have any progress here.. Hi @HenningThiemann, We didn't yet. We'll notify you once we have any progress here.. I'm working on this.  #1426. @testcafe-build-bot \\retest. Hi Andrew,\nIt's hard to determine the cause of the problem without the page, but I can make some assumptions. \nI see that the 63 |   await #t.expect(url4.search).contains('?page=CategoryResearch'); assertion passed, so it seems the previous click done succesfully. Is it possible that the '[data-test=\"sourcePro\"]' element doesn't appear on the page in some cases or appears after a long delay?\nYou can check the page state when the test is failed with the Debug command:\n```js\nconst elExists = await Selector('[data-test=\"sourcePro\"]').exists;\nif(!elExists)\n    await t.debug();\nawait t.click('[data-test=\"sourcePro\"]');\n```\nIf you provide us with your page we can check it. . I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Hi @RichiCoder1,\nPlease take a look at the note in the Running Tests in Headless Mode topic:\n\nNote that headless mode is available for Mac and Linux in Chrome 59. You need a Canary build to enable headless mode on Windows.\n\nSo, to use headless mode in Chrome on Windows it necessary to install a Canary build and run the command like: testcafe \"chrome:C:\\Users\\YourUserName\\AppData\\Local\\Google\\Chrome SxS\\Application\\chrome.exe:headless\" test.js\nWhen the feature will be available in the stable version of Chrome on Windows you can use just testcafe chrome:headless test.js.. Hi everyone!\nLet's determine the problem and try to solve it.\nI've created an example for it: https://github.com/AlexanderMoskovkin/testcafe-mocha-example\nThis is a project with mocha and testcafe included as a devDependencies.\nAs I understand you have a problem when you build your project, when TypeScript compiles the sources.\nTo reproduce it I've created the tsconfig.json and added test script into the package.json. It runs TypeScript compiler.\nTake a look at my tsconfig.json.\nThere is no need to compile TestCafe tests separately since TestCafe complies them itself before test run. So, I added a path to TestCafe tests to the exclude section. \nTake a look at the types field:\n- when I remove it TypeScript should work according its default behavior ( https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#types-typeroots-and-types). In this case npm test command works properly (TypeScript compiles unit tests succesfully);\n- when I set \"types\": [\"mocha\"] it uses the mocha typedefs only and it works properly too;\n- the only way to reproduce the issue on my side is adding \"types\": [\"mocha\", \"testcafe\"]. But as I mentioned before there is no need to compile TestCafe tests separately. \nSo, is something configured in the other way in your projects? Maybe I missed something? Feel free to create a Pull Request in my example repo to show your case.\n/cc @jvanoostveen, @qballer, @vasyas, @peterwestendorp, @Hotell, @oukayuka, everyone. Guys, thanks a lot for your investigations and clarifications, now the problem is clear for me. \nFor now I suppose we can use the following solutions to resolve the problems:\n1) For the TypeScript compilation of the whole project - it can be resolved by tsconfig.json options:\n- skipLibCheck: true. It allows to ignore the variable declarations must have the same type error;\n- specifying types if it's suitable for the project (it can be super annoying, in projects with lot's of 3rd party libraries);\n- excluding TestCafe tests path since TestCafe compiles the tests before running.\n2) For running .ts tests via TestCafe - we can use the solution proposed by @Hotell, add the skipLibCheck: true option in our sources (it should fix the original issue, and we can publish it in the next minor version soon).\nMeanwhile we will think about more fundamental solutions (like taking into account tsconfig.json in the project or something else). @draconisNoctis thanks for the info. The fix is on the way. We're going to release a minor version with it at the start of the next week.. We've found the cause of the problem. It's a duplicate of #1558 . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. It shouldn't take too much time to fix it and provide you with the new version. /cc @VasilyStrelyaev \nhttps://github.com/DevExpress/testcafe/pull/1555/files#diff-032d695d390a3643d7f0e829fdb8097cR101\nhttps://github.com/DevExpress/testcafe/pull/1555/files#diff-ea2e1723274b5ab3bcf265f6e70a3e34R14. FPR. @testcafe-build-bot \\retest. /cc @helen-dikareva . Hi @m4n3z40,\nWe've reproduced the issue and will investigate it.. Thanks! =). Hi @ismailgmutlu,\n\u00a0\nPlease note that there are two TestCafe versions: \n- Open source version. In this repository, we discuss questions about this version only.\n- Paid version (15.1.3) with the recorder. If you have questions about the paid version, please submit tickets at DevExpress Support Center.\n\u00a0\nAs far as I understand, your test failed at step 5. Possibly, it is necessary to add a click on the appropriate select element before it.\n\u00a0\nIf you need our further assistance with the paid TestCafe version (15.1.3), use DevExpress Support Center.. /cc @miherlosev . Hi Vasyl,\nThanks for your interest in our project. I believe that our approach would be useful for testing mobile apps. But our project is web-based and it necessary to rework almost the whole project to support it. So we don't plan to support native mobile apps testing for now.. Hi @FrankV01,\nframeset is an obsolete feature. TestCafe has limited framesets support but we can't guarantee that all cases work properly. We will check whether we can fix switching to frame via the switchToIframe or not and will notify you.. Hi @guptaakhil,\nThe switchToFrame() function is the only way to work with elements inside iframes in TestCafe tests.. It will cost too much for us to support this obsolete browser feature. So, we are not going to implement this in the near future.. @testcafe-build-bot \\retest. rebase required. An unstable test is failed (it doesn't relate to the PR), so I merge it.. Hi @dhoko,\nThe approach described in the topic in the forum is outdated since we reworked Selector system in v0.11.0. Since this version Selector has the withText() function that allows to find an element by its text.\nWhen you need to click on an option element you operate with it in the same way as with any other element on the page. You can find it via its text, attribute, index etc. with Selectors.\nI suppose we can describe it in a new recipe to make it clear.. FPR. ping @churkin @helen-dikareva @AndreyBelym . ping @AndreyBelym . TestCafe bundles the TypeScript declaration file with the npm package, so you do not need to install it separately. As I now WebStorm should load TestCafe declaration file automatically if you have installed testcafe package locally.\nWe've tested it on the WebStorm v2017.1.3. What WebStorm version do you use?. /cc @DevExpress/testcafe-docs . @AndreyBelym have you checked it on OS X? . Hi Nemanja,\nI've create a simple example based on your markup: https://jsfiddle.net/9byn92sf/\nIf run the following test:\n```js\ntest.only.page('https://jsfiddle.net/9byn92sf/')('selecting another product, while the previous is still opened, should refresh the preview with the new selection.', async t => {\n  await t.switchToIframe('[name=\"result\"]');\nconst productsListItem0 = await Selector('#listContainer').find('li').nth(0);\n  const productsListItem0Title = await productsListItem0.find('[data-test-id=\"name\"]');\n  const alternativeProductsListItem0Title = await Selector('#listContainer').find('div').withAttribute('data-test-id');\nconsole.log('productsListItem0.count = ', await productsListItem0.count);\n  console.log('productsListItem0Title.count = ', await productsListItem0Title.count);\n  console.log('productsListItem0Title.innerText = ', await productsListItem0Title.innerText);\nconsole.log('alternativeProductsListItem0Title.count = ', await alternativeProductsListItem0Title.count);\n  console.log('alternativeProductsListItem0Title.innerText = ', await alternativeProductsListItem0Title.innerText);\nawait t.click(productsListItem0);\n});\nit works properly and I see the following log in the CLI:sh\nproductsListItem0.count =  1\nproductsListItem0Title.count =  1\nproductsListItem0Title.innerText =  Test product 0\nalternativeProductsListItem0Title.count =  3\nalternativeProductsListItem0Title.innerText =  Test product 0\n```\nSo, Selector finds target elements properly.\nCould you please clarify where is your test failed, on the click action or on the expect command? Also you can try to use console.log in your test (as I do in my example) to see which elements exist.. Do you mean this mixin documentation? If so it relates to the paid TestCafe version. The actual documentation about the open-source version is here.\nYou can define reusable parts of code via regular functions. For example:\n```js\nimport { t } from 'testcafe';\nasync function reusablePart () {\n    await t\n        .click('#some-btn')\n        .typeText('#some-input', 'text');\n}\ntest('my test', async t => {\n    await reusablePart();\n});\n```\nAlso it's a good practice to use Page Model pattern. You can define reusable part in your page model.. /cc @LavrovArtem . Hi @hang-ren,\nWe'll provide you with a version with a fix in 1-2 days.. note for myself: check case when click on an element with offsets outside the element. /cc @helen-dikareva @churkin . It's all ok on BrowserStack now.. Hi,\nIt seems the issue is specific for you page and we need to see it to help you.\nCould you please provide us with your page? Or you can create a simple markup example that allow to reproduce the issue (for example you can use jsfiddle.net).\nYou can use the await t.debug() command to stop the test in some place in the test and see your page markup and check what the element the #app > div > div.audit-list > ol > li:nth-child(2) > div:nth-child(3) > span css selector returns.. Thanks for your example.\nIt seems you'd like to check the text that appears in the tooltip: Failure to distribute message after 2 attempts. Pausing subscription.\nIf take a look at the markup I see this text is not in the element inner html but in the title attribute. So you can check this attribute value:\n```js\nimport { Selector } from 'testcafe';\nfixture fixture;\ntest\n    .page('https://jsfiddle.net/afcbpeter/0upte2ua/1/')\n    ('test', async t => {\n        const span = Selector('li span').nth(0);\n    await t\n         .switchToIframe('[name=result]')\n        .hover(span)\n         // check text content\n         .expect(span.textContent).eql('paused')\n         // check tooltip text\n         .expect(span.getAttribute('title')).eql('Failure to distribute message after 2 attempts. Pausing subscription.');\n});\n\n```. You're welcome!. Hi,\nWe use Babel to compile JavaScript. We use Loose mode to compile the code inside ClientFunction. It allows us to avoid babel-runtime library using in the browser.\nOne on the loose mode caveats is All iterable destructuring are assumed to be arrays.\nAs a workaround you can avoid array destructuring in your code inside ClientFunction. Meanwhile we'll try to find a fix for this.. #1606 . closed in favor of #2152 . Meanwhile we'll investigate whether we can fix it on our side or we should wait some fix on the Travis-side. duplicate of #1552 . I'm working on this. @testcafe-build-bot \\retest. Thanks for the PR. Could you please rebase to the latest master branch version. It seems the tests are failed because of that. Hi @chenby,\nTo scroll a page to the bottom you can use the hover action:\njs\nawait t.hover('body', { offsetY: -1 });\nYou can send an xhr-request via ClientFunction:\n```js\nconst sendXhr = ClientFunction(() => {\n    // here is xhr sending code\n});\nawait sendXhr();\n```. It there some results of this xhr-request? I suppose it should be some new markup? If so, you can check that the markup is added.\njs\nawait t\n    .hover('body', { offsetY: -1 })\n    .expect(Selector('some-new-element').exists).ok();. We have no such built-in functionality but we've planned to implement it: #1341.\nAs a workaround you can use some third-party library to handle requests, for exapmle nock. Hi @ganlanyuan,\nThe var container = Selector('#base'); crerates a Selector, that exposes async methods and property getters to get element state, so they are should be called with await:\n```js\nvar container = Selector('#base');\nconsole.log(container.childElementCount); // => \nconsole.log(await container.childElementCount); // => \n```\nIf you'd like to get an element snaphot that contains all property values exposed by the selector in a single object you need to call the selector with the await keyword like you would do with regular async functions:\n```js\nvar container = Selector('#base');\nvar containerSnapshot = await container();\nconsole.log(containerSnapshot.childElementCount); // => \norjs\nvar containerSnapshot = await Selector('#base')();\nconsole.log(containerSnapshot.childElementCount); // => \n``` \n\nNote, that we recommend to use the first way. When you use selector's property in assertions instead of snapshot properties TestCafe enables Smart Assertion Query Mechanism.\n\nThis behavior wasn't changed since 0.10.0 version. I've just run the following test in both versions and here are results:\n```js\nimport { Selector } from 'testcafe';\nfixture fixture\n    .page http://example.com;\ntest('test', async t => {\n    var container = await Selector('body');\nconsole.log('container.childElementCount:', container.childElementCount);\nconsole.log('await container.childElementCount:', await container.childElementCount);\n\n});\n```\n\nAnd I've just found that the description in the DOM Node Snaphot article is correct but the example is not and I've created an issue for that: #1614\n. Yes, you are right.\nNote that we recommend to use built-in Assertions that were added in 0.11.0. If you use it you can pass selector properties without await, TestCafe resolves it automatically:\n```js\nvar container = Selector('#base');\nvar parent = container.parent();\nawait t\n    .expect(parent.hasClass('classname')).ok()\n    .expect(parent.boundingClientRect.left).eql(0);\n``.container.boundingClientRectreturns a Promise. The Promise doesn't contain theleftproperty. But the result of the Promise awaiting returns an object with theleftproperty.\nIf you'd like to check the left property you can use thegetBoundingClientRectProperty` method:\njs\nawait t.expect(container.getBoundingClientRectProperty('left')).eql(0);. FPR\n/cc @churkin @helen-dikareva \nIt's also checked on tests of our ASP team. \nThey have tests with a lot of helpers. Without the fix it was about 35s from run tests command  to browser opening if one test is chosen. Now it's about 5s,\nThe next stage of improving will be finding a way to compile faster a pack of tests (now we compile each test separately so it takes much time).. FPR. It's already published so it's ok. Hi,\nYou can use process.argv to check options:\njs\nconst isIE = process.argv.indexOf('--isie') > -1;\nAs an alternative you case check it via userAgent: \njs\nconst ua = await t.eval(() => navigator.userAgent);\nYou can parse it with some module, for example UAParser.js. Hi William,\nThanks for the proposal, but it can be easily implemented with pure js:\n```js\nfor(let i = 0; i < 4; i++) {\n    await t\n        .click(button)\n        .wait(300)\n}\n// or\nasync function actions () {\n    await t\n        .click(button)\n        .wait(300);\n}\nlet counter = 4;\nwhile(counter--)\n    await actions();\n```\nWith this I don't see a reason to add such compicated syntax like\njs\nawait t\n .repeat(4, () => {\n   await t\n     .click(button)\n     .wait(300)\n})\n .doTheTest();\nIf you'd like to add all actions to a chain, we have a proposal for this: #1535.. Hi @caseyWebb,\nThanks for you PR. We'll take a look and provide any assistance if necessary. We always synchronize CLI and Programming API so we should add the same feature to the CLI api.\nWhile we can set any Stream as output in Programming API, in CLI we can set output filenames only.\nI propose to implement the following API:\n1) For Programming API use @caseyWebb 's implementation:\nallow calling .reporter() multiple times, however throws an error if multiple reporters are configured to use stdout.\n2) For CLI API add an ability to set a file path for each reporter:\nsh\ntestcafe chrome test.js -r spec,json,xunit --report-file json:report.json,xunit:report.xml\nDo you like it? /cc @caseyWebb @DevExpress/testcafe @inikulin . Looks clear. What do others think?\nBut it should be without spaces:\n-r spec,json:report.json,xunit:report.xml. I've updated the pull request, added this functionality to the CLI API and added tests\n/cc @AndreyBelym @helen-dikareva @caseyWebb @VasilyStrelyaev . FPR /cc @VasilyStrelyaev . While we have troubles with the --private-window mode in Firefox (see #1675) you can try to run the tests with the clean Firefox user profile.\nFor example, here is a way how I did it on Windows:\nsh\n\"C:\\Program Files\\Mozilla Firefox\\firefox.exe\" -CreateProfile TestCafeUser\ntestcafe \"firefox -P TestCafeUser\" test.js\nor the same for Mac OS:\nsh\n/Applications/Firefox.app/Contents/MacOS/firefox -P TestCafeUser\ntestcafe \"firefox -P TestCafeUser\" test.js\nMore about Firefox Profiles here.. Closed in #1792 . Hi @xcb6,\n\ntestcafe-live is broken\n\nCould you please clarify what do you mean? You can't install it or can't run tests?\nI call the following command on my machine and it runs tests succesfully:\nsh\nnpm install testcafe testcafe-live -g\ntestcafe-live chrome d:\\tests\\example\\example.js. oops. you're right. Fixed. Hi everyone who is interested in this feature. We've done some work and published the testcafe-live module. The full description about it you can read in the TestCafe Live repository.\nIt would be greatly appreciated if you try it and provide us with your feedback! \n/cc @jvanoostveen @chandureddivari @kartojal, @tamlyn @jonataswalker @gmschouten @fiws @noderat @RickHoving @FabioAntunes @Dattaya @tijhaart @ganlanyuan @ervoiox @chinjon @ablipan @pierreh @xcb6. We've done this in TestCafe Live so I close the issue. I guess we'll add info about it to the Readme soon.. The issue should be fixed with the #1691. The fix is published in the latest dev version:\nnpm install testcafe@0.17.2-dev20170831 or npm install testcafe@dev.\nFeel free to reopen the issue if the problem still occurs.. @satispunk Thanks for the info, we'll investigate it /cc @AndreyBelym . Hi @gmschouten,\nThanks for the proposal.\nAlso we have a related issue: Implement t.browserInfo issue. The browserInfo can be used if skip conditional. Hi,\nWould you please clarify what exactly would you like to refresh?\nIf for example just some filled field you can use the navigateTo action.\nIf cookies, LocalStorage - you can use Anonymous Role.\nAnd why don't use two separate tests?. Hi @fnlctrl,\nTestCafe works via own proxy (https://github.com/DevExpress/testcafe-hammerhead). It's ok that the browser sends requests not directly to the target server but through the proxy.\nIt seems there is an issue in the proxy which breaks the behavior. We'll investigate it and notify you about any progress\n/cc @LavrovArtem . I close it since the problem is resolved. Hi @Hotell,\nYou've found a right way to pass a browser argument, but our code works as we expect.\nLet me explain why (meanwhile I suppose it should be described in the docs). \nYou can pass a path to a browser executable file with some browser argruments in the following way:\npath:path/to/chrome.exe --incognito. The _handleString function split this args by ' ', so it's ok.\nTo make it workable you should wrap it with quotes:\ntestcafe \"path:path/to/chrome.exe --incognito\" test.js\nSince the path can contain spaces too you should be able to wrap the path with some other quotes.\nAs you can see from this line TestCafe allows to use three types of quotes: ', \", `.\nSo, to make your example workable you can just wrap the path with quotes:\ntestcafe \"path:'path with space/to/chrome.exe' --incognito\" test.js\nYou can see this type of using in our tests.. @Hotell You are right. We should check it. do you mean like setTestSpeed ?. I agree. @testcafe-build-bot \\retest. FYI: please don't merge it before #1645 is implemented. FPR. /cc @churkin @helen-dikareva \nPlease review but don't merge for now. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @morsdyce,\nYou are right, some extensions can break TestCafe behavior. We have an issue for it in our sub-module: https://github.com/DevExpress/testcafe-browser-tools/issues/106 so I close this as a duplicate.\nDefinitely we will think about it in near future.. FPR\n/cc @helen-dikareva . don't merge it, I'll check one more thing. closed in favor of #2152 . Hi @bhavinkamani,\nI'm able to reproduce the same on the original page without TestCafe. It seems that the Log In/Sign Up button became workable after some timeout after the page is fully loaded. \nTake a look at the screencast: I open the page and click several times on the Log In link but nothing happens. The modal dialog opens if I click on the link only after the Offer badge in the top of the page is appeared: https://www.screencast.com/t/g1bDBP9uKyA5\nSo, to make the test workable it necessary to handle it:\n``js\nimport { Selector } from \"testcafe\";\nfixturePaytm Home Page.pagehttp://paytm.com`;\ntest(\"My test\", async t => {\n  const login = Selector(\"._3ac-\");\n  const offerBadge = Selector('._2egn'); \nawait t.expect(offerBadge.visible).ok();\n  await t.click(login).expect(Selector(\"input[name=username]\").exists).ok();\n});\n```. @FabioAntunes you are right, we have a similar proposal in the #1624.\n@bhavinkamani You can use the remote alias to run tests in the same browser instance (see Remote Browsers). But it's necessary to enter a provided url into browser's address bar before each run\n. Hi @rvratner,\nWhat the browser do you use? Could you please try to run tests with disabled browser extensions (for example you can use the incognito mode in Chrome via testcafe \"chrome --incognito\" test.js) and let us know does the test work?\nAlso please check in the browser's dev tools does your page contain js-errors when you perform click manually. . This error means that a javascript error with the text Script error. was appeared on the page after click.\nThere are two possible reasons:\n1) Something wrong with scripts on your page\n2) Something wrong with TestCafe scripts on your page.\nCould you please share your application with us to reproduce the problem on our side. If it's not possible we can try to identify the cause of the problem but it'll require some additional actions on your side.\nAs a temporary workaround you can try to run tests with the --skip-js-errors flag.. @rvratner Could you please perform the following steps to help us to find the cause of the problem:\n1) clone the testcafe-hammerhead repo (https://github.com/DevExpress/testcafe-hammerhead);\n2) call npm install;\n3) install gulp globally (if it's not installed on your machine);\n4) run gulp playground --dev (a new browser window will be opened);\n5) open dev tools in the browser and enter your page url into the input;\n6) see it there a Script error. error in dev tools. If yes then provide us with its stack. Hi @Hendriksie,\nI suppose some browser extension breaks TestCafe behavior (see faq) in your case. Try to run tests in the incognito mode: testcafe \"chrome --incognito\" test.js.\nMeanwhile we are going to run tests in a 'clean' browser since the testcafe v0.18.0 by default (see #1623 ).. #1623 is implemented so I close this. /cc @AndreyBelym . @FabioAntunes thanks for the feedback. I suppose we should try to disable browser extensions by default to prevent such troubles.. > I suppose we should try to disable browser extensions by default to prevent such troubles.\nWe've done this in context of the #1623 issue. It's already available in the 0.18.0-alpha1 version. . /cc @VasilyStrelyaev . The problem is not with the panel. TestCafe crashes there. If you remove the debug command you will see the same behavior. Issue for this is already created in testcafe-hammerhead https://github.com/DevExpress/testcafe-hammerhead/issues/1252. Hi @tuanquynet,\nHave you tried to set the preserveUrl option to true? From your description it seems it should work.. Hi @TatriX,\nThis default behavior allows to isolate the whole login logic (including the login page url) with Roles. You can set an actual tested page url as a Start Webpage of a fixture or test and a login page url as a Role initializing url, for exapmle:\n``js\nfixtureMy fixture.pagehttps://actual-page-to-be-tested`;\nconst user = Role('https://login-page', async t => {\n    //...\n});\ntest('My test', async t => {\n    await t.useRole(user);\n   // you are on the action-page-to-be-tested page here and you don't need to call navigateTo()\n});\n```\nAnd the preserveUrl option covers other cases (like single page applications). Hi @haoshasha,\nThe User Roles feature should meet your need.. Hi @fkartika,\nTake a look at the An Easier Way to Authenticate Users in E2E Tests article.\nYou can find an example in the Example: Authenticating on GitHub section there.. @fkartika Do you reproduce the same for example on github.com with the same test code?. In this case it seems the problem is specific for you page. Could you please share your page and test code with us or create a simple example that allows to reproduce the problem on our side?\nMeanwhile try to set the preserveUrl option to true. It possible it has a sense for your project.. @haoshasha TestCafe runs each test in a clear environment (with empty cookie, local storage etc..). Have you tried the User Role feature? Does it meet your need?. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Hi @mkubrycz,\nThe visible option works in the following way:\n- it's false in the following cases:\n-- display style is none;\n-- visibility style is hidden;\n-- element has a width or height that is equal zero.\n- it's true in other cases.\nFor now there is no API to check whether an element overlapped by another element or not. We have a separated issue for that and discuss possible ways to resolve it: https://github.com/DevExpress/testcafe/issues/1186#issuecomment-319979607\nIt would be nice if you add your opinion there.\n\nhover action works but after actually hovering the element testcafe waits anyway the whole timeout for the hovered element to appear just to pass when timeout finishes\n\nI'll describe how does TestCafe work here. If an action target element is under some other element TestCafe waits for a timeout if it's became visible (it can't be some kind of animation or a big loading panel for example). If the element is not visible after a timeout TestCafe clicks on the point of the page where the element is located. We don't throw an error because of the following reason. For some cases it's ok when the target element is overlapped (for example it can be a floating transparent element that is located under the mouse cursor or it can be some placeholder). The current TestCafe behavior allows to handle these cases. If the target element is overlapped unexpectedly and you try to click on it the next action/assertion should be failed since the click doesn't perform expected behavior. For example, there is a button that shows a popup. In the test you click on the button and check that the popup is shown (or perform some action with the popup). If the button is overlapped the next step after button click will be failed.\nIf you'd like to click on an overlapped element you can set a timeout for it to 0.\nWith all this I've modified a test a it works stable and properly on my side:\n```js\nimport { Selector } from 'testcafe';\nfixture('hover')\n.page('https://jsfiddle.net/s0mnL71L/');\nconst under = Selector('.under', { timeout: 0 });\nconst over = Selector('.over');\nconst frame = Selector('[name=\"result\"]');\nlet i = 10;\nwhile(i--)\ntest('succeed to hover', async (t) => {\n  await t\n    .expect(frame.visible).eql(true)\n    .switchToIframe(frame)\n    .expect(over.visible).eql(false)\n    .expect(under.visible).eql(true)\n    .hover(under)\n    .expect(over.visible).eql(true)\n    .expect(under.visible).eql(true);\n});\n``. @mkubrycz , I understand the problem now. It works properly in0.16.2but was broken in0.17.0. I'll try to fix it in the0.17.1`. closed in favor of #1341 #1271. Hi @haoshasha,\nCheck out #527, maybe suggested API will fit your needs.. Hi @neelay,\nYour solution is ok. Also you can use the visible property:\njs\nif (await menuToggleBar.visible)\n    await t.click(menuToggleBar);. Hi @alltheoptions,\nWe have the same proposal in the #1520 issue. Can you add \ud83d\udc4d to it, please? We usually give higher priority to voted issues.. I think we will detect it \ud83d\ude01. @AndreyBelym Create please a separate issue with the Documentation label and assign it to @VasilyStrelyaev since it's a separate task. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Yep, it's a cool feature from GitHub. Hi @gyopiazza,\nTestCafe has no such option. Each test run is independent from others and TestCafe doesn't keep any state between runs. \nMeanwhile TestCafe has the quarantine-mode option. It possible it meets your need.. You're welcome!. We've found the cause of the problem and we're going to fix it soon.\nAs a temporary workaround you can pass a path to the installed browser to TestCafe (See Portable Browsers).. do you mean the approach like testcafe path:d:\\chromeportable\\chromeportable.exe tests/sample-fixture.js doesn't work on your side?. > but should it work with portable chrome'? Because that I tried and that also didn't work\nwhat the error do you see in the report?. > testcafe path \"/c/Users/barrybadpak/chrome/GoogleChromePortable\" tests/*/test.js\nYour syntax is not quite correct. It should be like this:\ntestcafe \"path:`C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe`\" d:\\temp\\gh-1679.js\nNote, it necessary to pass a path to a Chrome executable file.. Have you tried exactly the same syntax as in my example?\ntestcafe \"path:`C:\\Users\\barrybadpak\\chrome\\GoogleChromePortable\\chrome.exe`\" tests/**/*test.js\nIt should be a : symbol after the path part and the path should be started with C:\\.\nIf this command run is failed too please provide me.\n\nOn my own computer not with root acces ( work laptop ) they all fail with nightmare. Any ideas?\n\nDo you mean you are able to run tests in nightmare but they are failed? If yes please let me know what the errors do you see?. > don't use ``\nIt's necessary if you have spaces in the path to the browser executable . oops. It's a dup of #1686 . @testcafe-build-bot \\retest. { Error: Command failed: C:\\projects\\testcafe\\node_modules\\testcafe-browser-tools\\bin\\win\\generate-thumbnail.exe __test-screenshots\\2017-08-1105-46-54\\test-1\\run-2\\Chrome_60.0.3112_Windows_8.1_0.0.0\\errors\\1.png test-screenshots\\2017-08-1105-46-54\\test-1\\run-2\\Chrome_60.0.3112_Windows_8.1_0.0.0\\errors\\thumbnails\\1.png 240 130\nError 79: failed to open file for writing\n    at ChildProcess.exithandler (child_process.js:270:12)\n    at emitTwo (events.js:125:13)\n    at ChildProcess.emit (events.js:213:7)\n    at maybeClose (internal/child_process.js:921:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:211:5)\n  killed: false,\n  code: 1,\n  signal: null,\n  cmd: 'C:\\projects\\testcafe\\node_modules\\testcafe-browser-tools\\bin\\win\\generate-thumbnail.exe test-screenshots\\2017-08-1105-46-54\\test-1\\run-2\\Chrome_60.0.3112_Windows_8.1_0.0.0\\errors\\1.png test-screenshots___\\2017-08-11_05-46-54\\test-1\\run-2\\Chrome_60.0.3112_Windows_8.1_0.0.0\\errors\\thumbnails\\1.png 240 130' }. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR /cc @miherlosev . I @thongdong7,\nThanks for the report. I've reproduced the issue on MacOS. We'll fix it in the next minor version.. fixed in #1698. duplicate of #1677 . Hi @ajhsu,\nThanks for your proposal. We don't plan to implement this feature soon but we can consider it for the future releases. Meanwhile, we are going to ship the request hooks feature. It can help you create a custom request logger.. Hi @Hotell,\nWe'll check it. As a workaround you can run tests in a browser in the incognito mode:\njs\ntestcafe \"chrome --incognito\" test.js. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. @javiercbk It would be great if you reproduce this with a simple example and share it with us.. @javiercbk Thanks a lot! @LavrovArtem will take a look at this. Hi @dimascyriaco,\nFor now TestCafe allows to set cookie only by using ClientFunctions. So it's necessary to load the pages before setting the cookie.\nBut it seems you use the useRole command and doesn't set cookie directly? It seems the page directive is not required in this case. Could you please provide more details about your case (a Role initialization code, the page url if it's public)?. Hi @haoshasha, It seems you've asked the same question in the #1721 issue. If you have a question connected to an opened issue please create a new comment there instead of opening a new issue.. Thanks for the idea. We've investigated it and it seems the headless-chromium topic is too specific (I found only 5 repos with it). We've decided to don't add it.. Hi @jessehattabaugh,\nThanks for your proposal. Unfortunately, I guess we can't implement it with the current TestCafe architecture because of browser restrictions. You can try to setup permissions in browser's settings before test running. For example here is instruction how to do it in Chrome: Allow or block content settings for certain sites\n. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if the @AndreyBelym's advice didn't help.. @jesperalmstrom Thanks for the report!\n@LavrovArtem please take a look at this. Hi @pittdewaard,\n\nHi, first of all: testcafe is really cool stuff! helps me a lot to do my work ...\n\nGlad to hear this!\n\nI have this issue on Windows 10 with Version 0.18.2 ... any Idea?\n\nIs your page/repository private or public? Could you share your page or a simple example with us so that we will reproduce the issue?\n\u00a0\nIf it is private, please provide us with the full test report. Check whether the browser console contains errors. If yes, please provide us with a screenshot of them (or just copy them with their callstack). You can use the --debug-on-fail TestCafe option to pause a test at the moment it fails.\nDo you use any js-frameworks in your application?. Thanks for the provided info. From the log we see a failed request:\nPOST http://10.11.32.149:50526/rkYXyK-lM/http://localhost:7029/ibf/10008-1011-20171121112548/root/web2/json/Z7_2_UploadDTA 951 (unknown)\nCould you please provide us with the details of this request for the same file on the original page and on the page with TestCafe?\nTo do this open your page in Chrome and open a Network tab of the developer tools. Perform file uploading manually, find the related request and save it as HAR. Then do the same actions when TestCafe runs the test. It important to upload the same file in both cases.\n. I got it. Could you please do the same during TestCafe running?. Thanks. That's what we need. We're investigating it right now. yep. @CommanderXL, thanks for your report. I've reproduced the issue. We will provide you with a fix once it's available.. FPR /cc @AndreyBelym . @haoshasha The error means that the first element with the upload className on the page is not input or doesn't have type=\"file\". Please check it. To do it open the tested page, open developer tools and type into the console: document.querySelectorAll('.upload'). See what elements are displayed.. It should be an input with type=\"file\" on your page. Call the t.setFilesToUpload action for this input and then call t.click for your upload button.. Find an input with type=\"file\" on your page. For example you can call the following command in the console:\ndocument.querySelectorAll('input[type=\"file\"]'). @haoshasha Please read the Upload Action section carefully, it's actual for input elements only.\nFile uploading usually contains two actions:\n1) Chose files for uploading (use setFilesToUpload);\n2) Trigger uploading (in your case it's click on a button).. Hi @joshuataylor,\nThanks for the proposal. Definitely we should investigate it. We'll comment here once we have any news.. FPR /cc @VasilyStrelyaev . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Yes, it seems it relates to a package manager issue. I've investigated the issue in more details and found the exact reason why does it fail.\nFor example your project has the following dependencies:\njson\n\"dependencies\": {\n  \"moment\": \"2.17.1\",\n  \"testcafe\": \"^0.17.2\"\n}\nTestCafe has the following deps:\njson\n\"moment\": \"^2.10.3\",\n\"moment-duration-format\": \"^1.3.0\",\nnpm installs dependencies in the following way: it see that the moment@2.17.1 is ok for both dependencies (2.17.1 and ^2.10.3) and install modules in the following dirs:\n/your-project-dir\n-- /node_modules\n-- -- /testcafe \n-- -- /moment (2.17.1)\n-- -- /moment-duration-format (1.3.0)\nBut yarn installs the latest moment version (2.18.1) as a TestCafe dependency and the 2.17.1 version as the project's dependecy. It looks like:\n/your-project-dir\n-- /node_modules\n-- -- /testcafe \n-- -- -- /node_modules\n-- -- -- -- /moment (2.18.1)\n-- -- /moment (2.17.1)\n-- -- /moment-duration-format (1.3.0)\nThen testcafe imports the moment-duration-format module and it patches the moment module from the root node_modules directory (2.17.1) and add additional API there. But TestCafe uses the moment module from it's own node_modules directory (2.18.1) that is not patched.\nSo to make it workable with yarn it necessary to update the moment version in your project to the latest (it possible it's necessary to clean yarn cache).\nMeanwhile, we'll see how we can avoid this collision\n. Hi @damianbaar,\nThanks for the workaround with resolutions. We will check how we can avoid this.. @andreyluiz, It possible you need to remove the yarn.lock file to refresh dependencies. . Hi,\nWe've faced with the same issue and fixed it in the testcafe-browser-tools@1.4.4, please check it.. We're going to publish the testcafe@0.17.2 version soon with updated testcafe-browser-tools. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @dhilgarth,\nI tried to reproduce the issue on a simple example but my attempt was not successful. I've cloned the Microsoft/TypeScript-Knockout-Starter and added a file with the TestCafe test there. It works properly on my side.\nCould you please modify my example or create yours to reproduce the problem?. Thanks for the clarification. I've reproduced the issue. We've already fixed it in the context of the #1537 issue. It will be available in the next version (we're going to release it in a few days).\nAs a workaround you can modify the file: ../node_modules/testcafe/lib/compiler/test-file/formats/typescript.js. Add the following fix: https://github.com/DevExpress/testcafe/commit/d1ee1016fa123893dc9c44856112f6468b32561d\nAlso the fix is already available in the latest dev version: testcafe@0.17.2-dev20170831. But it has a couple of know issues: there are problems with browser actions (like resize, takeScreenshot) on MacOS and Linux. We're working on fixes.. Hi @nkamenar,\nCould you please clarify what the OS do you have? And which browsers are not closed? All of the installed on your machine or some specific one?. @nkamenar Thanks for the clarification. Do you use the latest testcafe version? We've faced with the similar issue on MacOS with Safari (#2047). It possible it relates to your issue. We'll investigate it and will notify you about our progress here. . I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @dsayerjp,\nThis issue is related to the Add ability to perform testing in multiple browser windows feature request. For now TestCafe doesn't support it. Since this feature is very complex to implement we can't provide any estimates about it.\nAccording to the Facebook authentication mechanism on this site it can be performed in a single-window way. Unfortunately, I don't see any ways to test it with TestCafe.\nSo, it's necessary to disable authentication or change it to a single-window mode (if possible) for the testing task (for example it can be a development mode of the application).. > BTW is there a way I can mock Object.freeze in browser before application load starts through testcafe? \nUnfortunately, no. But we have a proposal for this: #1739 . The fix will be included in the next major release. Meanwhile it's already available in the latest dev version (testcafe@0.18.0-dev20170921).. It seems we have problems with client tests in an updated Firefox on OS X. @helen-dikareva will look at this. Hi @planet71,\nHave you installed testcafe locally into your project or globally (with the -g npm flag)? If locally could you please try to remote the node_modules directory and reinstall all dependencies again?. what do you use, npm or yarn?. @brettveenstra, If I get you idea right you can try to use Role not for logging actions only. For example you can try to create a Role and perform in the initialization function some actions with your SPA that will change the state of the application. And try to use this role in different tests. In fact User Role saves and restores cookies and local/session storages in the browser. Is it enough to restore the state of the SPA?. @oneillci, @classicalConditioning I'm not sure that splitting the test case to several tests helps. For example if you have three tests the second depends on the first one and the third depends on the second:\njs\ntest('test1', () => { // check create user form and create a user });\n// no reload\ntest('test2', () => { // check user is created in some other view });\n// no reload\ntest('test3', () => { // do something else with the user });\nFor example if the test1 is failed there is no reason to run test2 and test3 (because user is not created).\nIf the test3 is failed you have to run all tests to check the issue.\nIf you put all these actions into one test you have the same. If the test fails TestCafe shows the line where it happens, so you can easily determine what the part of the test is broken.. > If there was be a way to specify with which role an entire fixture is executed - that would be very handy, IMHO.\nIt seems you can try this approach with the current API:\n```js\nconst someRole = Role('http://start-page', async t => {\n    // do some actions\n}, { preserveUrl: true });\nfixture fixture1\n    .beforeEach(async t => {\n        await t.useRole(someRole);\n    });\n//...\n```. I'm sorry, it seems I missed your questions.\n\nSo it feels like these same steps will be executed before each test, If you put it in .beforeEach\n\n@classicalConditioning, A steps for the role initialization function will be executed once for the whole test run.\nFor example, if you have Role(async () => { /* await someActions() */ }) and call useRole in the beforeEach hook it will work in the following way:\n1) When the first test is started TestCafe calls useRole from the beforeEach hook. Since the role is not initialized TestCafe executes its initialization function. Then TestCafe saves the page state (cookies, storages..).\n2) When each next test is started TestCafe calls useRole again. But since the role was initialized before and we have cookies/storages for it, TestCafe just restore cookies/storages and reloads the page.\n\nis there a reason why the fixture api doesn't support useRole\n\n@brettveenstra Adding useRole to the fixture sounds reasonable, we'll consider it. Meanwhile the approach with beforeEach should work properly as I described above. It adds only one additional page reloading for each test.. > it is not clear from naming conventions being used that useRole is executed only once even though it is inside of beforeEach hook.\nTo be accurate the useRole command is executed in each test in this case. But it works in different ways for the first time and for the next times.\nA goal of the useRole command is to set necessary cookies/storages values. If it has already saved values then it just restores them, if not - it runs the initialization function.. @iexplore, It seems we have a proposal for this (Implement test sections) but now we can't get any estimates about it.. Hi @raDiesle,\nIt seems the preserveUrl option should meet your needs.\nTake a look at the example:\n``js\nfixtureMy fixture`;  // don't set the url here\nconst role = Role('https://login-page', async t => {\n    // some login actions that redirects the page to the https://start-page\n});\ntest('test-1', async t => {\n    await t.useRole(role);\n    // you are on the https://start-page here\n});\ntest('test-2', async t => {\n    await t.useRole(role);\n    // you are on the https://start-page here\n});\n```\nNote that cookies restoring works properly in this case but it seems it can be problems with local storage values restoring when the preserveUrl option is enabled (#2015). We're going to fix it soon.. > Do we need first action debug() in test when we use this option? I think we don't.\nNo, we don't need. I've added this to the screencast just for demonstration. If it were no debug() commands in the test it'll be paused when it's failed as well.\n\nAfter click('nothing') test fails and we can see title Test failed but I think we should change button title to Finish test run or smth like this because we will not resume test we just finish test run (Resume looks like we can skip failsed action).\n\nIt makes sense. We can write just Finish, what do you think? /cc @helen-dikareva @VasilyStrelyaev . FPR https://www.screencast.com/t/aasT445be6G. /cc @helen-dikareva @AndreyBelym @VasilyStrelyaev. @testcafe-build-bot \\retest. @kirovboris Yep, I'll add a server test for CLI arguments parsing. But we can't add a functional test for this. FPR. @testcafe-build-bot \\retest. /cc @AndreyBelym . FPR. Hi @ervoiox,\nThanks for your proposal. Since the test file is executed one time regardless of browsers count we can't add this number to the global scope as you did in your example.\nFor example if you run tests with the following command: testcafe chrome,firefox test.js it works in the following way:\n``js\nfixturemy fixture`;\n// this code is executed once\ntest('Test', async t => {\n    // this code is executed twice (in chrome and in firefox)\n});\n```\nBut we have proposal to Implement t.browserInfo. I think we can add the concurrent worker number there.\nSo I close this issue in favor of the #481.. let's don't merge it for now. If we implement #1623 this info is redundant. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Additionally, I propose to add some mention about this logic into the Assertion API section.\nFor example, take a look at the Deep Equal description.\nactual | Any type | A comparison value.\nAny type doesn't say us nothing. I'd like to add to the description something like \"if you pass a selector property or client function promise TestCafe will wait... \"\n@VasilyStrelyaev  what do you think?. /cc @churkin . ping @churkin or @helen-dikareva . Hi @pyry,\nAny script on the tested page should be processed by testcafe-hammerhead. As a result the provided script should look like:\njs\nfor (i = 0; !this.basePath && i < scriptsCount; i++) {\n    if (__get$(__get$(scripts, i), \"src\")) {\n        for (j = 0; !this.basePath && j < officeScriptsCount; j++) {\n            this.basePath = getScriptBase(__get$(__get$(scripts, i), \"src\"), __get$(officeScripts, j));\n        }\n    }\n}\nAs you can see scripts[i].src is replaced with __get$(__get$(scripts, i), \"src\"). This construction returns url without our proxy part.\nI've tried to reproduce the issue. I've added the https://appsforoffice.microsoft.com/lib/1/hosted/Office.debug.js on my tested page and debugged the provided code. It works well.\nIt seems this script is not processed on your page for some reason. It can lead to other errors besides the issue with lowercase url, so it's important to find a reason why it happens.\nCould you please provide us a link to your page or create a simple example where we can reproduce the issue?. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Hi @mhnavarro,\nI created a test with the same code as you provided and run it. It works properly on my side. Here is the test:\n```js\n// test.js\nimport { Selector, ClientFunction } from 'testcafe';\nimport TestData from './data.js';\nconst AreEqualTexts = ClientFunction((element, text) => element.innerText === text);\nconst select = Selector('#preferred-interface');\nfixture('Example test')\n    .page('http://devexpress.github.io/testcafe/example/');\ntest('check gh-1787', async (t) => {\n    await t\n        .click(select)\n        .click(select.find('option')\n            .filter(\n            (node, idx) => {\n                return AreEqualTexts(node, text);\n            },\n            {\n                AreEqualTexts, text: TestData.test1.interfaces.js\n            }\n            ));\nawait t.expect(select.selectedIndex).eql(1);\n\n});\n//data.js\nexport default {\n    test1: {\n        interfaces: {\n            js: 'JavaScript API'\n        }\n    }\n}\n```\nIt seems the problem is specific for your page. It can be related to some your or third-party scripts that you use on your page. It possible TestCafe proxies something in a wrong way.\nIs there a way to share your page with us?. @mhnavarro It can be some type of conflict between the scripts on your page (yours or third-party) and TestCafe behavior. Is it possible to share your page with us? If it's appropriate you can do it privately via my email (in my GitHub profile). If your page is internal you can share it with me via ngrok privately for a whlie. Without your page it's too hard to find a reason of such specific issue.\nOr you can try to rewrite your code in some way. For example try to use the following way:\n```js\nconst targetText = TestData.test1.interfaces.js;\nawait t\n    .click(select)\n    .click(select.find(node => node.tagName && node.tagName.toLowerCase() === 'option' && node.textContent === targetText, { targetText }))\nawait t.expect(select.selectedIndex).eql(1);\n```. @mhnavarro Thanks for the detailed info, we'll check it. Hi @mhnavarro,\nCould you please try the latest TestCafe version and let us know if the issue still actual.. Hi @anilchinnu21,\nIt seems the issue is specific for your page. At first, please check does your page have js-errors in the console in the Developers tools if you open it and perform test steps manually.\nThen, provide as with a full test report with an error callstack. And provide us with an url to your tested page if possible.. Any updates here?. I'm working on this. Hi @wengxuan,\nThanks for your proposal. We'll consider it when planning our future releases. Those of you who are interested in this feature, feel free to vote for it and leave your comments.. Thanks for your feedback. I guess we'll consider it on the next release planning soon. Done in #2209 . The Unlock page switch is not implemented yet, so let's don't merge it for now. > The Unlock page switch is not implemented yet, so let's don't merge it for now\nI'm working on this right now. TestCafe allows to scroll/move to a specific point an element (with specific coordinates). This element can be larger than the viewport (for example it can be click on body with the offsetY: 1000 option). Or it can be inside a cross-domain iframe. That's why we have our custom scroll implementation.. TestCafe allows to scroll/move to a specific point an element (with specific coordinates). This element can be larger than the viewport (for example it can be click on body with the offsetY: 1000 option). Or it can be inside a cross-domain iframe. That's why we have our custom scroll implementation.. For simple cases your solution with custom scrollIntoView method is a good workaround. For simple cases your solution with custom scrollIntoView method is a good workaround. /cc @AndreyBelym @helen-dikareva @churkin @kirovboris . /cc @AndreyBelym @helen-dikareva @churkin @kirovboris . I suppose some extension breaks TestCafe behavior in your Chrome. Please check whether some extensions are enabled in the incognito mode in your browser. Disable them and try to rerun the test.\nMeanwhile, we are going to run tests with a clean browser profile by default since the testcafe@0.18.0 version (see #1792). It should resolve the problem.. @luckylooke, Great! Since the issue is resolved I close it in favor of #1623.. It's all ok in general. Let's rebase to the upstream. @AndreyBelym, @gyopiazza I agree with you, the #1815 proposal looks good. I think we can do this in the next releases.. closed in favor of #1815 . Hi,\nThanks for your interest. This issue is in our plans to the one of the next releases.. Hi @gyopiazza.\nTestCafe default reporters don't output any info when the next test is started. According to the Reporter Methods topic TestCafe reporters can output any info on the following events: the whole task is started, a fixture is started, a test is done, the whole task is done.\nIf TestCafe will output a message when a test is started the final report will be entangled:\nfixture 1\n    test1 started\n    test2 started\n    test3 started\n    v  test2 passed\n    test4 started\n    x  test1failed \n...\nI'd prefer to have a clear report when the concurrency option is enabled as it is now:\nfixture 1\n    x  test1 failed\n    v  test2 passed\n    v  test3 passed \n.... It sounds reasonable. I can't provide estimates for now but we'll consider it. Meanwhile, contributing is welcome.. FPR\n/cc @helen-dikareva @AndreyBelym @VasilyStrelyaev . FPR /cc @helen-dikareva @AndreyBelym @inikulin . Hi @hpinkos,\nThanks a lot for you clarification. I've reproduced the problem and we will try to fix it. It seems it's related to the Role mechanism because it's all ok if I perform the same actions without Role:\n```js\nconst login = async t => {\n    await t\n        .typeText('input[type=\"text\"]', 'fake user')\n        .typeText('input[type=\"password\"]', 'fake password')\n        .click('button.btn-primary');\n};\ntest('Signs in', function (tc) {\n    //return tc.useRole(user);\n    return login(tc);\n});\n```. Hi @hpinkos,\nI just got back to issue. I've found that I can reproduce it on the original page without TestCafe. It's reproduced if I force page reload during it's loading (see the screencast).\nThis is a way how Roles work. When you call t.useRole it loads the page that is set as the URL of the login page. The page raises the error in this moment. So you can fix it on your side. Or you can use the following workaround. Wait while the page is loaded before calling useRole:\n```js\nimport { Role, Selector } from 'testcafe';\nfixture('SignIn')\n    .page('https://beta.cesium.com/signin')\n    .beforeEach(async t => {\n        await t.expect(Selector('input[type=\"text\"]').exists).ok({ timeout: 10000 });\n    });\nvar user = new Role('https://beta.cesium.com/signin', function (tc) {\n    return tc\n        .typeText('input[type=\"text\"]', 'fake user')\n        .typeText('input[type=\"password\"]', 'fake password')\n        .click('button.btn-primary');\n});\ntest('Signs in', function(tc) {\n    return tc\n        .useRole(user);\n});\n```. @varunkumar Thanks a lot for contributing!. @varunkumar We're going to do it today or tomorrow.. Hi Daniel,\nNot, TestCafe shouldn't pollute the global namespace with any polyfills. The page should work in the same way as it works without TestCafe. If something is wrong it's likely a bug. We're looking forward to an example where we can reproduce it.. Thanks for the details. I've reproduced the problem and will fix it. > For chrome:headless there is no version\nIt's fixed with the latest Chrome and TestCafe versions\n\n. We write the info that the browser provides. I guess it's ok. . @testcafe-build-bot \\retest. Hi @Hotell,\nTestCafe should wait automatically for any xhr requests and page reloads after each action. It seems something goes wrong in your case. If you can provide us with your page url or a simple example we can try to find the reason of the issue. \nAnyway you can resolve the issue by using assertions:\n```js\nconst getLocation  = ClientFunction(() => document.location.href.toString());\nawait t\n    .useRole(admin)\n    .expect(getLocation()).notContains('login')\n    .navigateTo(USER_DASHBOARD_URL);\n```\nPlease let me know does this solution work?. > hmm that assertion doesn't work 100%.\nWhat do you mean? The assertion fails? Or it's passed even the login is not completed?\nMeanwhile, just for check try to run tests with a lower speed (for exapmle: 0.3-0.5) (see --speed) and please let me know are there any changes?. Are they sent sequentially? The page gets a response for the first request and then sends the second?. Thanks for the provided info. Could you please do one more check. \nFirst, add await t.wait(2000) before .useRole(admin). Run the tests with default speed (1) and see are the tests ok?\njs\nawait t\n      .wait(2000)\n      .useRole(admin)\n      .navigateTo(USER_DASHBOARD_URL)\nThen place the wait command after userRole(admin). Again run with the speed 1. How it's now?\njs\nawait t\n      .useRole(admin)\n      .wait(2000)\n      .navigateTo(USER_DASHBOARD_URL)\nIt'll help me to find a possible reason of the issue because I have two different assumptions now.. Since we have no access to your page I can assume the following reasons:\n- The page is not completely loaded/initialized before typing (the wait before typing should help in this case);\n- Xhr-requests after the click on the submit button are sent with some delay and TestCafe doesn't wait them before navigateTo (the wait after click should help there);\n- Some page scripts should be executed between typing/click actions on the login form. TestCafe performs actions rapidly so the scripts are not executed properly (lower test speed should help there).\nAs you say, wait actions didn't help. You can try to use the setTestSpeed setting inside the Role initialization function:\njs\nconst authenticate = async ({ username, password }: UserCredentials, t: TestController) => {\n  return await t\n    .setTestSpeed(0.5)\n    .typeText(loginPage.email, username)\n    .typeText(loginPage.password, password)\n    .click(loginPage.submit)\n    // hack https://github.com/DevExpress/testcafe/issues/1836#issuecomment-333476931\n    .expect(getLocation())\n    .notContains(ROOT_PATH)\n    .navigateTo(DASHBOARD_URL)\n}\nIt will not affect the speed of the whole test run speed a lot because the speed will be decreased only for actions inside the Role initialization function which is executed once for the test run.. Great to hear that it works! Yep, we can close it.. I'd prefer to fix your case in the other way.\nNow when you call click(el, { ctrl: true }) we just set the ctrl property in click dom events (mousedown, click, mouseup etc..) to true. \nBut to be more correct we should emulate pressing the ctrl key, then perform click, then release the ctrl key.\nIf we implement this you need to just call .click(el, { ctrl: true }).\nWould it fit you needs? /cc @kirovboris . Hi @Hotell,\nThanks for the proposal, we'll investigate. \nAs always PR is welcome.. Hi @Hotell,\nThanks for the proposal, we'll investigate. \nAs always PR is welcome.. @Hotell, thanks for you investigations. I suppose it can be some conflicts between TestCafe TypeScript settings and a custom tsconfig.\nMeanwhile, I think it would be nice to add an ability to pass a custom tsconfig file path to TestCafe run.. @Hotell, thanks for you investigations. I suppose it can be some conflicts between TestCafe TypeScript settings and a custom tsconfig.\nMeanwhile, I think it would be nice to add an ability to pass a custom tsconfig file path to TestCafe run.. Thanks for your point. Actually we didn't work on this yet but it's in our plans.. Thanks for your point. Actually we didn't work on this yet but it's in our plans.. Hi @AhnpGit,\nSorry for late response. Unfortunately I don't see workarounds here for now. But this feature is in our plans and we'll implement it in future (can't provide estimates for now).. Hi @AhnpGit,\nSorry for late response. Unfortunately I don't see workarounds here for now. But this feature is in our plans and we'll implement it in future (can't provide estimates for now).. Let's keep the issue opened to be notified about the progress. We'll close this when we implement it in the testcafe-hammerhead module and when it is updated in the testcafe repository.. Hi @danielabar,\nWe fixed it yesterday in our proxy. We are going to release a testcafe version with the fix this week. Published in testcafe@0.18.4. Glad to hear this! You are welcome!. Hi @starstuffharvestingstarlight,\nTestCafe supports both the new API and the legacy syntax (that is generated by the UI). But files with legacy TestCafe syntax should have .test.js extension (the UI generates them in this way). \nSo to resolve you issue just rename your file to exampleFixture.test.js. For now we don't have any docs about it but we're going to make it.. You're welcome!. Is it actual only for ff?. Sounds good!. Sounds good!. Hi @mkubrycz,\nI've tried to run it on my windows machine. It works ok. \nI've setup maildev@1.0.0-rc2 version (since the 1.0.0-rc3 doesn't work on windows for now according to https://github.com/djfarrelly/MailDev/issues/185).\nI've run the following test:\n```js\nimport { Selector, Role } from 'testcafe';\nfixture maildev;\nconst role = Role('http://localhost:1080/', async t => {\n    await t\n        .click(Selector('.fa.fa-bell-o[title=\"Automatically show new emails as they arrive\"]'));\n});\ntest('test', async t => {\n    await t\n        .navigateTo('http://localhost:1080/')\n        .typeText(Selector('.search-input.ng-pristine.ng-valid'), 'Mail')\n        .click(Selector('.fa.fa-refresh'));\n});\n```\nWe'll try to run it on a linux machine with the latest maildev version soon.\nMeanwhile could you please take a look at my test? It possible I should change it somehow to replicate yours. And have you tried to run it in some other browser?. Hi @mkubrycz,\nI've tried to run it on my windows machine. It works ok. \nI've setup maildev@1.0.0-rc2 version (since the 1.0.0-rc3 doesn't work on windows for now according to https://github.com/djfarrelly/MailDev/issues/185).\nI've run the following test:\n```js\nimport { Selector, Role } from 'testcafe';\nfixture maildev;\nconst role = Role('http://localhost:1080/', async t => {\n    await t\n        .click(Selector('.fa.fa-bell-o[title=\"Automatically show new emails as they arrive\"]'));\n});\ntest('test', async t => {\n    await t\n        .navigateTo('http://localhost:1080/')\n        .typeText(Selector('.search-input.ng-pristine.ng-valid'), 'Mail')\n        .click(Selector('.fa.fa-refresh'));\n});\n```\nWe'll try to run it on a linux machine with the latest maildev version soon.\nMeanwhile could you please take a look at my test? It possible I should change it somehow to replicate yours. And have you tried to run it in some other browser?. @mkubrycz Take a look at my example: https://github.com/AlexanderMoskovkin/gh-1871\nI start the maildev server and send mails via nodemailer each 1 second. In the test I execute some actions with the maildev UI. It works properly on my side.\nCould you please try to update my example according your project to reproduce the issue?. @mkubrycz Take a look at my example: https://github.com/AlexanderMoskovkin/gh-1871\nI start the maildev server and send mails via nodemailer each 1 second. In the test I execute some actions with the maildev UI. It works properly on my side.\nCould you please try to update my example according your project to reproduce the issue?. Please, let me know if you have some progress with this issue.. Please, let me know if you have some progress with this issue.. @mkubrycz Have you found any ways how to make the test hanging every run? Unfortunately I still can't reproduce it. @mkubrycz Have you found any ways how to make the test hanging every run? Unfortunately I still can't reproduce it. Since we can't reproduce it in the stable way and you found a workaround could we close the issue?. Since we can't reproduce it in the stable way and you found a workaround could we close the issue?. @miherlosev, @AndreyBelym please take a look at this asap . @hpinkos You are always welcome!. Hi @caseyWebb,\nThanks for your report and the PR!\nCould you please clarify, do you reproduce the problem on the page with iframes?\nI don't see a way how it can happen in the top window because the Driver constructor and the start function are called synchronously one after one (see client/test-run/index.js.mustache#L38). So any js-error or console.log calls can't appear between these calls. \nBut now I see that it can happen in iframes. The contextStorage in an iframeDriver is initialized anychronously (see client/driver/iframe-driver.js#L76). The top driver keep ids for every iframe on the page. When an iframe driver is initialized it requests its id from the top driver and then initializes its own contextStorage with this id. That's why we can't do it in the constructor.\nCould you please share the link to your page with me via my email (alexander.moskovkin@devexpress.com)? It'll help us to find the best way to resolve the issue.. Thanks, I've got your mail.. closed in favor of #1914.\nWe are going to publish a new minor version with the fixes in a few days. > Describe why the problem is occurred\n\nAdd a test for the fixed scenario\n\nThe comment is redundant. We just should add a test.\n\nUse the 'extend' method from hammerhead/client/utils\n\nWe can't since this code works both on the client and server side (see the comment in the start of the file).\n. Hi @nicolocarpignoli,\nI've tried to reproduce the problem on the simple example with your markup but it works properly on my side:\n```js\nimport { Selector } from 'testcafe';\nfixture('Test')\n    .page('https://jsfiddle.net/3r330kbs/1/');\ntest('example', async function (t) {\n    await t.switchToIframe('[name=result]');\nlet voteTwoStar = Selector('.rating-rate-label:not(.active)').withAttribute(\"rate\", \"2\");\nlet undoButton = Selector('.rating-undo-label');\n\nawait t\n    .click(voteTwoStar)\n    .expect(undoButton.innerText).eql('annulla');\n\n});\n```\nIt seems the problem is specific for your page. Could you please provide us with the url of your page or create a simple example where we can reproduce the issue?\nAdditionally you can add the debug command to your test to see the page state during test execution:\njs\nawait t\n        .click(voteTwoStar)\n        .debug()\n        .expect(undoButton.innerText).eql('annulla'). @nicolocarpignoli If you put the debug command between click and expect it should show whether the annulla element is appeared after click (without waiting for the expect command).\nIf you create a simple example if would be super helpful (it can be a repository with dependencies, a simple model and your .jsx file). There are several possible reasons of the issue so it would be great to have an example which repeat exactly your page behavior.. TestCafe starts each test with clean cookies and storages. Do you perform authorization actions in the start of the test?. Thanks for the clarification.\nTo make tests independent from each other (it's a best practice for testing) TestCafe always runs any test in a clear environment (with empty storages). So, when the test is just started you are logged out.\nTestCafe provides User Roles to handle this cases. So you can use the following template:\n```js\nimport { Role } from 'testcafe';\nconst registeredUser = Role('login-page-url', async t => {\n    // perform login actions\n}, { preserveUrl: true / if necessary / });\nfixture Fixture\n    .page your-page-url\n    .beforeEach(async t => { await t.useRole(registeredUser) });\ntest('Test1', async t => {\n    // your are logged in here already\n});\n```\nIn this case TestCafe execute User Role initialization function once for a test run. Then it keeps cookies/storages content and use it for each test.. Great! Glad to hear it. You are always welcome.. Hi @pablorivera,\nI'd like to clarify @AndreyBelym's answer. xunit and json reporters are supported in the previous TestCafe versions. In the 0.18.0 version we've introduced the feature which allows to output test results to multiple channels and specify the output file with the -r option.\nSo, for the 0.17.2 version the correct syntax is: testcafe chrome test.js -r xunit > report.xml (standart output redirection is used here).\nSince 0.18.0 you can use: testcafe chrome test.js -r xunit:report.xml or testcafe chrome test.js -r xunit:report.xml,json:report.json (built-in TestCafe syntax is used here).\nFeel free to reopen the issue if you still have some problems here.. You are always welcome!. Hi @Emmanux,\nWe've reviewed our sources, it seems this behavior was changed by a mistake. We should revert it back soon. Please use the -r option as a workaround.. Hi @Thomblin,\nI'm wondered, how are your tests now? Are they stable now with your solution?. /cc @AndreyBelym  do you have any thoughts here?. Hi @anamariaoros,\nI've tried to reproduce your issue but it works properly on my side. Take a look at the following test:\n```js\nimport { Selector } from 'testcafe';\nfixture iframe images\n    .page https://jsfiddle.net/fb8ke867/;\ntest('My test', async t => {\n    await t\n        .switchToIframe('[name=result]')\n        .click('img');\n});\n```\nCould you please modify my example to reproduce the problem, create your example or provide us with a link to your page and test code?. @anamariaoros Thanks a lot for your example. It helped me to reproduce the problem. I'll try to find as reason of the issue as soon as possible and will notify you about the progress. Hi @anamariaoros. Yes, we've reproduced this and we've found the cause of the issue. TestCafe works incorrectly because it's a cross-domain iframe and click on the ad opens a link in a new browser window (not inside the iframe) on the original page. We don't handle this case properly for now. We're going to discuss the issue tomorrow with the team. After this we'll be able to provide you with some estimates.. Hi @anamariaoros,\nWe've investigated the issue, and found the reason. When the redirect occurs the domain of the main page changes because the iframe has a cross-domain url. As a result we lose our service data from the browser's sessionStorage (since browser attach it to a specific domain). \nIt seems it requires changes in both modules (testcafe and the proxy). While we are finding the best fix for this you can use workarounds. You can use the navigateTo instead of click to redirect the page or test the target page separately. . Hi @anamariaoros,\nSorry for the long delay. The issue is quite complex for us and we didn't decide what the best way to fix it yet. So I can't provide you with estimates for now. \nDoes the provided workaround allow you to test your website/web application?. Fixed in 0.18.2. @miherlosev @LavrovArtem I've reproduced this in the testcafe-hammerhead playground. Please take a look at this. Just open the https://stackblitz.com/edit/angularjs-awzrxp page under the playground and try to click the button. Nothing happens.. Hi @zoejobson,\nWe just call the document.querySelectorAll function in the browser to find elements by a selector string. So, if you type document.querySelectorAll('#1_input') into a browser console the error is not a valid selector is appeared. \nSuch ids are valid according to the HTML5 specification. But they are not valid according to the CSS specification:\n\nthey cannot start with a digit, two hyphens, or a hyphen followed by a digit\n\nE.g. you can't create a css style like:\n```css\n1_AccountCode {\ndisplay: none;\n\n}\n``\nI suppose that's why thequerySelectorAll` function works in this way in browsers.\nBut you can easily workaround it by using the withAttribute method:\njs\nSelector('input').withAttribute('id', '1_AccountCode'). Hi Darlan,\nAt the moment I don't quite clear understand what the feature do you request. It seems you can do it with the current implementation.\nI've tried two cases and they work properly.\nShell + npm command\npackage.json\njson\n\"scripts\": {\n  \"test\": \"testcafe chrome d:/tests\"\n},\nshell\nnpm test -- -t \"OK\"\nresult\nOnly the test with the OK name is run\nShell + npm command + .sh file\ntest.sh\n./node_modules/.bin/testcafe chrome d:/tests/number-id.js -r spec:./report.txt $0 $1 $2 $3\npackage.json\njson\n\"scripts\": {\n  \"test\": \"test.sh\"\n},\nshell\nnpm test -- -t \"OK\". I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Hi @pablorivera,\nCould you please us with the full error callstack? To find it you can run your tests with --debug-on-fail flag and opened browser's developer tools. The error should be appeared in the browser's console.. Hi @mnemanja,\nSince 0.18.0 TestCafe opens Chrome and Firefox with clean profiles by default (see Release Notes).\nTo run tests with your current user profile you can use the userProfile option: testcafe chrome:userProfile test.js.\nYou approach with the --start-fullscreen flag is ok too but it necessary to use \" instead of ' for wrapping arguments (it's Windows requirenments):\njson\n\"e2eChrome\": \"testcafe \\\"chrome --start-fullscreen\\\" ./src/**/*.e2eZ.js\"\nOptionally you can call the maximizeWindow command in the beforeEach hook. In this case your browsers will always be maximized when tests are run.. Hi @avozicov,\nThanks for your report. I've reproduced the issue.\nIf I set the 'https://manage-test.adtechmedia.io/' url as a test page it works correctly. But If I set the signup page ('https://manage-test.adtechmedia.io/accounts/signup') as a test page it's broken.\nWe'll investigate it and will notify you about our progress.\nI've reproduced it in hammerhead-playground as well. /cc @miherlosev @LavrovArtem . The fix is published in testcafe@0.18.4. Hi @mnemanja,\nNow TestCafe executes ClientFunctions in the test after the page is loaded. It's too late in your case because you need to set a local storage item before page initialization.\nWe have planned this feature (take a look at #1739). It seems it should fit your needs. If so then we can close the issue as a duplicate.\nAs a workaround you can set the item and reload a page:\n```js\n// In the test\nimport { ClientFunction, Role } from 'testcafe';\nconst localStorageSet = ClientFunction((key, value) => localStorage.setItem(key, value));\nconst pageUrl = 'http://localhost:3000/products'; \nfixture.only('AutoCompleteField:')\n  .page(pageUrl)\n  .beforeEach(async t => {\n    await localStorageSet('test123', 'ccc');\n    await t.navigateTo(pageUrl);\n  });\n```. Hi @mnemanja,\nNow TestCafe executes ClientFunctions in the test after the page is loaded. It's too late in your case because you need to set a local storage item before page initialization.\nWe have planned this feature (take a look at #1739). It seems it should fit your needs. If so then we can close the issue as a duplicate.\nAs a workaround you can set the item and reload a page:\n```js\n// In the test\nimport { ClientFunction, Role } from 'testcafe';\nconst localStorageSet = ClientFunction((key, value) => localStorage.setItem(key, value));\nconst pageUrl = 'http://localhost:3000/products'; \nfixture.only('AutoCompleteField:')\n  .page(pageUrl)\n  .beforeEach(async t => {\n    await localStorageSet('test123', 'ccc');\n    await t.navigateTo(pageUrl);\n  });\n```. You're always welcome!. You're always welcome!. Agree. I'm preparing a list of things we should think about before v1.0.0. This idea will be there. Hi @jamesryanbell,\nIt seems our proxy processes your page incorrectly. The fastest way to find a reason is provide us with a link to your page privately if it's appropriate for you (I sent you an email last Friday or you can find my email in my GitHub account. For example we can use ngrok. It's free for a simple cases.). \nIf it's impossible we'll ask you for some debug information.. @jamesryanbell I sent you an invintation.. Hi @hang-ren, thanks for the report. I've reproduced the issue. \nReproduced in testcafe-hammerhead playground /cc @miherlosev @LavrovArtem . @hang-ren We can provide you with a build with the fix once it's ready. The fix is in the pull request already.. The fix is published in testcafe@0.18.4. @testcafe-build-bot \\retest. Hi @anubhavsagar,\nIt likely means that the click target is overlapped by some other element. You can check it on your page without TestCafe in the following way:\n```js\nconst element = document.querySelector('css-selector');\nconst { x, y, width, height } =  element.getBoundingClientRect();\nconst center = { x: x + width / 2, y: y + height / 2 }\nconst elementFromPoint = document.elementFromPoint(center.x, center.y);\n```\nIt seems the elementFromPoint is not the target element or its child in your case. TestCafe tries to get the target via document.elementFromPoint. After the timeout if the element is still overlapped TestCafe clicks on the point on the page where where the target is located.\nIt's implemented in this way to avoid flaky tests in cases when an element is overlapped for a while by some animation or modal elements. Meanwhile we are going to improve the behavior to make it's clear for a tester why it happens.. Great! Optionally you can decrease a timeout for the Selector to avoid long waiting:\n```js\nconst overlappedSelector = Selector('your-element', { timeout: 1000 });\nawait t.click(overlappedSelector);\n```. Hi @ismail-codar,\nIt'll be too hard to implement test running in this way according to the TestCafe architecture. As I understand you'd like to have live reloading tests running. It seems like it the same proposal as in the #1624 - Keep TestCafe running for rapid development issue. If so we are going to provide a solution for this soon.. Hi @ismail-codar,\nIt'll be too hard to implement test running in this way according to the TestCafe architecture. As I understand you'd like to have live reloading tests running. It seems like it the same proposal as in the #1624 - Keep TestCafe running for rapid development issue. If so we are going to provide a solution for this soon.. Hi @TauPan,\nSince the 0.18.0 version TestCafe opens a Firefox instance with a clean profile. We setup settings for Firefox testing profile there: https://github.com/DevExpress/testcafe/blob/master/src/browser/provider/built-in/firefox/runtime-info.js#L18.\nIt's possible we've missed some flag. @AndreyBelym will investigate it. \nAs a workaround you can try to run your tests in your current user profile: testcafe firefox:userProfile test.js\n(it possible this is a related ticket: https://support.mozilla.org/en-US/questions/1152757). Hi @HenningThiemann,\nCould you please provide us with your testRemote.js file content?. As I see you have your tests in the app.js file. Your script fails when you try to require the file with tests. You shouldn't require it. Just pass a path to this file to the runner.src method.\nRemove the following line:\njs\nconst appJS = require(filePathAppJS);\nAnd update the runner.src call:\njs\n    ...\n    return runner\n      .src(filePathAppJS)\n   ...\n. Hi @Sm1le291,\nI see from the report that you run tests in IE7. TestCafe supports Internet Explorer 9+. The issue can be related to this fact.. When the browser is connected TestCafe waits a service ping request from the browser every 2 minutes. The error message you provided means that TestCafe didn't received any requests from the browser for 2 minutes. Please try to run TestCafe in the debug mode as described on the Debugging TestRun and provide us with a log.. @Sm1le291, Thanks for the details. Do I understand right you don't have an issue with a disconnect error now?\nMeanwhile we're investigating the Unable to get property issue.. > But some pages don't work properly, and failed with this error\nUnable to get property 'hammerhead|storage-wrapper|r1iZlJLyM|cf-front' of undefined or null reference\n@Sm1le291 Is it possible to share your page with us to check the issue on our side? If it's impossible we need some additional info to find the reason of the problem.\nCould you please add a debug action into the faied test, open dev tools when the test is paused and execute the following code in the command line: JSON.stringify(localStorage). Then do the same on the original page (without TestCafe). Provide us with the results.\nMeanwhile, could you please contact me via email (you can find it in my profile). With a direct connection we'll be able to find the reason faster.\n. After some investigation we found the reason of the issue. IE was run with the disabled DOM Storage option. It turns off localStorage and sessionStorage support in the browser. TestCafe use them for its service purposes. \nTo fix the issue it necessary to enable the DOM Storage option. It can be done manually or by setting the windows registry field Computer\\HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main\\DOMStorage to 1.. Hi @IhostVlad,\nThanks for the report, we'll fix this.. Hi @bdwain,\nI feel it rather relates to test settings than to test run settings. I suppose it's a nice way to use a config file with baseUrl in this case as proposed in the forum discussion.. Hi @bdwain, thanks for your offer to help. I think we'll discuss in a near future changes in a way how you can setup settings for the whole test run, and we'll consider the url options too. We'll notify you once we have any news. I guess we should update testcafe-hammerhead here. @testcafe-build-bot \\retest. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @leonardocaldas,\nDoes your app have a public url? If yes we can check the issue on our side.\n\nthe testcafe actions simply stop working\n\nCould you please clarify what happens there? Does the test execution just hang or it fails with some error?\nWhat the stack do you use in the app (some frameworks like Angular or any other)?\n. Additionally please run your test with opened browser developer tools and take a look are there any js-errors there?. Hi @thomasbrueggemann,\nI've prepared a build with a possible fix for your problem. Could you please check it? \n1) Download an archive packed by npm from dropbox;\n2) Install it on your machine:\nnpm install testcafe-0.18.5-custom20171120.tgz -g for global installation or\nnpm install testcafe-0.18.5-custom20171120.tgz for local. \nPlease let me know whether it work properly now on your side. If yes we'll add this fix to the sources.\n. > Uncaught TypeError: t is not a function\n@thomasbrueggemann Could you please provide the full error message with callstack? You can just take a screenshot of the console. > I'll test again with your custom build and get back to you.\n@leonardocaldas I'm not sure that this custom build will help for your case because it's created based on  the error in the browser provided by @thomasbrueggemann. \nTo try to find the cause of the issue on your site could you please answer the questions:\n\nthe testcafe actions simply stop working\n\nCould you please clarify what happens there? Does the test execution just hang or it fails with some error?\nAdditionally please run your test with opened browser developer tools and take a look are there any js-errors there?. @thomasbrueggemann, Yes, please create a separate issue with this screenshot. It seems we've reproduced this js-error appearing and will investigate it soon. I'm closing this since there were no activity about an initial issue here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @danielabar,\nHave you tried to run tests in any other browser?\nPlease check what browsers TestCafe finds on your machine using by the following command:\nsh\ntestcafe -b. @danielabar, thanks for the details. Yes, TestCafe finds browsers in the /Application directory only. I guess we can improve this behavior.\nFor now you can use a path to Chrome to run tests in it:\n\ntestcafe 'path:`/Applications/Google Chrome.app`' test.js\ntestcafe 'path:`/opt/homebrew-cask/Caskroom/google-chrome/latest/Google Chrome.app`' test.js\n. It's better to use testcafe chrome tests/ in the test command. It will work for most of the team members who have installed browsers in a default way. It shouldn't be a problem in Windows since it keeps the info about installed browsers in the registry and TestCafe finds them there. \nBut if someone would like to run tests in a browser installed in a custom path (for example, it can be a portable vesion) they have to change the test command or run the tests via a terminal by using the testcafe cli module directly.. You are always welcome! . Hi @theghostbel,\n\nThanks for the fix! This fail is an issue with our local testing server, we're investigating it. Sure it doesn't relate to this PR. We use the [docs] prefix to documentation PRs. . Definitely failed checks in docs are not related to the current changes. We'll fix them in another PR.. @testcafe-build-bot \\retest. /cc @VasilyStrelyaev . I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @workfel,\nI guess we can't support this by technical reasons. At start TestCafe executes target files synchronously and finds tests to run. For example if we transform your case to the es5 we'll see:\n```js\nfixture('test').page('myUrl'); // this registers a new fixture to run\n// This executes synchronously ...\nmyfunction()  // returns a Promise\n    .then(items => {\n        // ...but this don't. Because Promises use setTimeout inside.\n        items.forEach((i) => {\n            test.page(http://localhost:3000/preview/${i.id})(Test ${i.id}, t => {\n                ....\n            });\n        })\n    });\n// resume sync execution. TestCafe haven't found tests here\n```\nFor example, It will be the same if you do the same in Mocha.js tests (and I guess in most of other test frameworks):\n```js\n// mocha-tests.js file\nreturn Promise.resolve().then(() => {\n    describe('fixture', function () {\n        ...\n    });\n});\n// No tests were found there.\n```\nTo implement your task you can use Programming Interface. You need to initialize your test cases and then run your tests. For example:\n```js\n// test-items.js\nconst testItems = [];\nexports.init = () => {\n    return new Promise(resolve => {\n         // fill your items here\n    });\n};\nexports.getItems = () => {\n    return testItems;\n}\n// run-tests.js\nconst testItems = require('./test-items.js');\ntestItems.init()\n    .then(() => {\n        // Init TestCafe and run tests\n        // (https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/)\n    });\n// test.js\nimport { getItems } from './test-items';\nconst items = getItems();\nitems.forEach(item => {\n    test('test name', async t => {\n        // your test\n    });\n});\n```. You're always welcome!. Hi Dmitri,\nWe have the tough-cookie module as a dependency in the testcafe-hammerhead module but we've fixed this about two months ago in the https://github.com/DevExpress/testcafe-hammerhead/commit/fe7f47d875d0b738b6a0b38e410e253c69669ea8 commit.\nI see you have the \"testcafe\": \"^13.1.1\" dependency in your repository. Note that this version relates to the paid TestCafe version (see details). Could you please try update TestCafe to the latest version (0.18.4)?. Hi @benbrandt, thanks for the info. Have you tried the approach with the paste: true option? Does it work in your case?. And I guess it would be cool to see this section (how do reports look) in topics about other CIs. Hi @wintermute42,\nThanks for pointing this out. We're working on this.. closed in favor of #2152 . closed in favor of #2152 . Hi @DmitryFillo,\nTestCafe should always wait for the page reloading after t.navigateTo() is called (at least we didn't meet a case when it doesn't work). Did you meet the case when it works wrong?\nIn the ticket that you mentioned before I wrote about a case when some side effects (like xhr-requests or page reload) are performed after some timeout after the click action.. Hi @DmitryFillo,\nThanks for you example. TestCafe wait for 15 seconds for a server response after redirect. If it doesn't get response for this time it resumes the test. We did it to avoid unexpected test hangs. As a workaround you can add an assertion after each redirect with a long timeout. It will check the new page is loaded (by document.location or some elements on the page). Meanwhile we'll figure out how we can note this in our docs.\n\nAlso I've found another case while preparing example: TestCafe fails if server responds with string only, not HTML:\n\n@miherlosev @LavrovArtem please take a look at this. Hi @sgrillon14,\nThanks for the fix!. Hi @sgrillon14,\nThanks for the fix!. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.. Hi @zac156,\nThanks for your report. I've reproduced the issue. \nWe'll fix it but I've already found an easy workaround for your case. Check the #submit-id-book_appointment element is visible before click:\njs\n        ...\n        .expect(page2ComlpleteHeading.innerText).eql('Review Your Booking')\n        .expect(Selector(\"#submit-id-book_appointment\").value).eql(\"Next\");\n        // With debug uncommented and then applying next step this works\n        // await t.debug();\n        await t\n            .expect(Selector(\"#submit-id-book_appointment\").visible).ok()\n            .click(Selector(\"#submit-id-book_appointment\"));\nThe issue is occurred because of the following reason: when TestCafe is going to click on the Next button it found the button that is invisible at the moment (I guess it's the button from the previous view that is hidden but not removed). TestCafe resumes to wait while it became visible but unsuccessfully because the page generated a new button with the same selector instead of the old one.\nHere is a simple example to reproduce the issue:\n```html\n<!DOCTYPE html>\n\n\n\nTitle\n\n\n\n<script>\n    window.setTimeout(function () {\n        const input = document.getElementById('target');\n        const parent = input.parentNode;\n\n        parent.removeChild(input);\n\n        const newInput = document.createElement('input');\n\n        newInput.id = 'target';\n        newInput.value = 'new input';\n\n        document.body.appendChild(newInput);\n    }, 2000);\n</script>\n\n\n\n```\n``js\nfixturegh-1994.pagehttp://localhost:8080/`;\ntest(gh-1994, async t => {\n    await t.click('#target');\n});\n```. Hi @berrutti,\nThanks for you proposal.\nMeanwhile, TestCafe provides a capability to create custom reporter plugins (see Reporter Plugin).\nIt allows to format TestCafe output in any way:\n\n. ping @helen-dikareva . FPR. /cc @AndreyBelym . Fixed in hammerhead@13.3.1. The fix will be available in testcafe@0.19.2 (it's already available in testcafe@0.19.2-alpha3). I'm able to open this page but test works properly on my side (on Windows):\n\n@jpke Could you please check does the test works properly in usual Chrome (not in the device emulation mode) on your side? How it works in other browsers?\n@miherlosev Let's check it on MacOS.. > Maybe its OSX specific?\nWe're going to check it tommorow and let you know about the results.. @jpke Please take a look does your Chrome have some browser extensions when tests are run. If yes try to disable them.. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.\n. Hi @florentpeyrard,\nCould you please clarify what's wrong with the current Roles implementation?\n Roles were implemented to avoid excessive login actions performing. If you'd like to execute login actions directly in some tests but use a Role in others you can do it in the script:\n```js\nimport { Role, t } from 'testcafe';\nconst loginActions = async function () {\n    await t\n        .typeText('#username', 'paul')\n        .typeText('#password', 'azertyui')\n        .click('#login')\n};\nconst myRole = Role('http://login-page', loginActions);\nconst login = async function (useRole) {\n    if(useRole)\n        await t.useRole(myRole);\n    else\n        await loginActions();\n}\ntest('test1', async () => {\n    await login(true);\n});\ntest('test2', async () => {\n    await login(false);\n});\n```. Form your example I see that you didn't specify the Start WebPage.\nSo, your first test starts with about:blank page. Then it goes to the Role initializer and redirect to the login page (http://localhost:8080/main/login). The second test starts with about:blank page two. Since the role is already initialized it doesn't go to the login page, but just reload the current page with saved cookies and local storage values. \nTo fix you problem set the Start WebPage to the fixture or to tests.. Yep, you are right. Thanks for the note. I'll double check the behavior.. Hi @florentpeyrard,\nI've reproduced the issue and we'll fix it.\nHere is a simple example to reproduce the behavior: \n```html\n<!DOCTYPE html>\n\n\n\ngh-2015\n\n\nLogin\n\n",
    "churkin": "LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. Of course https://github.com/superroma/testcafe-hammerhead/issues/29\n. In this case \"var instanceCount = 0;\" is a real static field :)\n. lgtm\n. lgtm\n. Waiting for @VasilyStrelyaev \n. Looks harmoniously\n. How are we going to report about forgotten endif?\n. Oh, we have to build a virtual logical tree and catch structure errors. Also with loops, if we will implement them.\n. @inikulin I was hoping we greatly simplify the analysis of the test code structure with the new API.\n. I vote for the first variant\n. I am categorically against mixing hybrid and common functions\n. The hybrid function is not very obvious concept for a beginner, do not complicate the interface even more\n. lgtm\n. lgtm\n. lgtm\n. @helen-dikareva  I think you can merge and close this PR now\n. @helen-dikareva We will do it in the https://github.com/DevExpress/testcafe-hammerhead/issues/331 context\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. FPR\n. lgtm\n. lgtm, @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. @inikulin @AndreyBelym Guys, this is my fault. I did not notice breaking change. I will update the hammerhead to v.7.0.0\n. I will unpublish v6.0.1 from the npm\n. @AndreyBelym I'll take the testcafe upgrade to the new version of hammerhead\n. > I will unpublish v6.0.1 from the npm\ndone\n. @helen-dikareva Tests that fell after @AndreyBelym fix just unstable?\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. What about innerHTML ?\n. I often faced with this property in tests\n. @inikulin I just open our aspxperience tests:\n``` javascript\n'1. Click toolbar item (toolbar item is menu item)': function () {\n        this.prevMarkup = getToolbarInnerMarkup();\n       ....\n    },\n'2. Check changing content after toolbar item click. Other toolbar item click': function () {\n        var currentMarkup = getToolbarInnerMarkup();\n        notEq(currentMarkup, this.prevMarkup);\n       ...\n    },\n```\n. @inikulin I agree, it's bad. But even we do it :)\n. @inikulin \n\nBTW, should we have computedStyle and style properties?\n\nOf course\n. I vote for both at the same time\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. -\\r\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. -\\r\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. May be attempt?\n. lgtm\n. javascript\ntest('Some test')\n   .before(async t => {...})\n   .skip(browserInfo => {...})\n   (async t => {\n        // test code here\n   });\n. @inikulin The last variant - the best\n. @AlexanderMoskovkin \n\u0421an't reproduce in the hammerhead, it looks like a bug in the client driver.\n. https://github.com/DevExpress/testcafe-hammerhead/issues/803\n. I'm working on this\n. https://github.com/DevExpress/testcafe-hammerhead/issues/802\n. Fixed in hammerhead, waiting for release\n. @kaihaase-wd We would be grateful if you could help us implement this feature.\nIf you are interested, I'll tell you the details, and of course, I will help you with everything.\n. @kaihaase-wd This is great news :). I will create a new issue and will try to describe how and what we need to do. I'll let you know.\nThank you. \n. @kaihaase-wd https://github.com/DevExpress/testcafe/issues/955\n. @inikulin  I'll do it\n. lgtm. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. FPR. ping @AlexanderMoskovkin @helen-dikareva @MarinaRukavitsyna. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @helen-dikareva ping. \\\u0441\u0441 @lexkazakov check it please. ping @DevExpress/testcafe-docs. FPR. ping @DevExpress/testcafe-docs. FPR. ping /cc @DevExpress/testcafe-docs . @inikulin ping. FPR. FPR. May be also  SAML and OpenID Connect.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. Hi Umar, \nI have investigated this problem and found out that obsoleted framesets (https://www.w3.org/TR/html/obsolete.html) are used on the problem page. I think this page couldn't ever work. When you succeeded in the tests, did you use framesets or you added them and they failed?. Hi Umar, \nI have investigated this problem and found out that obsoleted framesets (https://www.w3.org/TR/html/obsolete.html) are used on the problem page. I think this page couldn't ever work. When you succeeded in the tests, did you use framesets or you added them and they failed?. @umaar @inikulin  Guys, I need some time to assess the cost of framesets support. @umaar @inikulin  Guys, I need some time to assess the cost of framesets support. @umaar We have created small fix that will allow you to test problem page https://github.com/DevExpress/testcafe-hammerhead/issues/1009\nIn the near future we will release fixed version of testcafe for you.. @umaar We have created small fix that will allow you to test problem page https://github.com/DevExpress/testcafe-hammerhead/issues/1009\nIn the near future we will release fixed version of testcafe for you.. @umaar I've released new 0.12.0-alpha5 version of testcafe, you can try it right now.. @umaar I've released new 0.12.0-alpha5 version of testcafe, you can try it right now.. @mkubrycz I'm researching it now. Hi @mkubrycz,\nI've deployed storybook demo app - https://github.com/kadira-samples/react-storybook-demo. And get a lot of js errors without testcafe:\n\nPlease, try to skip js errors.. Let me know if it helps.\n. @mkubrycz Unfortunately I need example for debugging. Could you share problem link?. @raushen please, add complete html markup so we'll be able to reproduce the problem. duplicate https://github.com/DevExpress/testcafe-hammerhead/issues/1013. @umaar What if we'll add handler for all proxy requests? For example:\njavascript\ntest.onRequest(req => {\n   var url = req.url;\n   ...\n})\nWilI it solve your problem? What request parameters will be useful for you?\n. @testcafe-build-bot /retest. Hi @zhaighin, Unfortunately it is very difficult to implement Kerberos authentication in the testcafe. It has a very complex mechanism to generate authentication tokens and at the moment there is no complete universal nodejs module for this. All we can do is add the ability to set Authentication header value that you will need to generate yourself. For this we have created #1306 issue. At the moment we can't suggest you another solution.. This bug has been fixed at https://github.com/DevExpress/testcafe-hammerhead/issues/1055. @Axel92Dev Please, try 0.14.0-alpha3 version. I think it does not have your problem.. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. Yep. @inikulin \nI suggest to create a public function like this:\njavascript\ntestcafe.injectResource('path.js', {content, contentType});\nit will be useful for these guys:\nhttps://testcafe-discuss.devexpress.com/t/tests-using-mock-data/159\nhttps://testcafe-discuss.devexpress.com/t/how-do-i-inject-javascript-on-dom/213/2. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @inikulin All is ready, we just need to add backupStarage and restoreStorage methods to the hammeread's API. https://github.com/DevExpress/testcafe-hammerhead/issues/1125. rebase required. Hi @CommanderXL,\nAt the moment TestCafe does not have this functionality out of the box, but this task is on our To-Do list and our guys are working on it. I think this feature will be available soon. Please track this issue https://github.com/DevExpress/testcafe/issues/1341 status.. FPR. @testcafe-build-bot \\retest. FPR. Hi @haoshasha,\nI've created small test example and it works perfectly:\n``javascript\nimport { ClientFunction } from 'testcafe';\nfixture#1721.pagehttps://wikipedia.org/`;\ntest(test, async t => {\n    const setCookie = ClientFunction(() => {\n      document.cookie = \"key=value\"\n    });\nconst getCookie = ClientFunction(() => {\n  return document.cookie;\n});\n\nawait setCookie();\nawait t.navigateTo('https://wikipedia.org/');\nconsole.log(await getCookie());\n\n});\n```\nPlease try to update TestCafe to the latest version, and if it doesnt help you, change my example to reproduce the problem. \n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\reset. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. Hi @jdobosz,\nThank you very much for your plugin. We'll gladly add information about it to our documentation and also tell about it to our community. But first we need a little time to test it. . Hi @jdobosz,\nI've checked plugin, all works perfectly. Please rebase your pull request.. Hi @luckylooke,\nI've tried to reproduce the problem, but to no avail. Test passes on my Mac. According to a report a js-error occurs on the page when typing text in the input. Please, use chrome dev-tools to try to catch this error and send us your results. It will be very useful for solving the problem.\nThanks!   . @miherlosev Are we overriding WebSockets?. fixed in 0.18.1. @testcafe-build-bot \\retest. Hi @hang-ren,\nI've reproduced the problem with v0.17.0-alpha1 but it works fine with the latest v0.18.1. \nPlease try to update your TestCafe version and let me know if this solves the problem.. It does not matter, just use \nnpm -g install testcafe. Hi @ixrock,\nCredentials mode is omit by default. It means that cookies will not be sent to the server.\nfetch(\"/auth\", authReqInit); - works fine because authReqInit.credentials is same-origin\nfetch(\"/user\") - fails because credentials is omit by default\nLet me know if I misunderstood your question.. Both of your tests pass on v0.18.1. Thank you\u00a0@ixrock,\nI've found the problem and created\u00a0an issue. It has an easy and fast fix. We plan to fix it in a few days. \n. @Raushen Contact us please. I've reproduced the problem. . @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. @testcafe-build-bot /retest. Hi @raja1313,\nUnfortunately, we do not have built-in functionality to check code coverage. But, I think it is a good idea, we should think about this, thank you.. Hi @edimistra,\nThank you for your suggestion. As I can see, the Gauge's main idea is very similar to that of Cucumber. It uses a highly readable abstract scenario language (Gherkin) that can be translated to many testing frameworks. Some of our users asked us about Cucumber support. Maybe this info will be useful for you. We have a demo (here, here) that shows how it works with TestCafe.. Good work, @zabil! We will recommend your example to our users who are interested in Gauge.\n\u00a0\n@edimistra I hope @zabil's example will help you get started with TestCafe and Gauge.. Hi @agoldenberg01,\nThank you for your screencast. I see the problem now. Let's figure it out.\nIf you add debugger after the await t you'll brake the test controller call chain and will get invalid javascript:\n\u00a0\njavascript\nawait t\n  .click(...)\n  .type(...)\n  debugger;\n  .select(...);\n\u00a0\nUse the following valid code if you really want to stop test execution between actions:\n\u00a0\n```javascript\nawait t\n  .click(...)\n  .type(...);\ndebugger;\nawait t\n  .select(...);\n``\n\u00a0\nWe've created at.debug()action to help our users debug browser behavior during test execution. You can stay on a step, open browser dev tools, and check the current page's state. This action is useless for debugging test code. For this, you should usedebugger(as you did), but do it as I described above.\n\u00a0\nI hope this information will be useful for you.. Hi @mujan5427,\nI've reproduced the problem. This is a bug, and we need more time to fix it.\nThank you for your patience and understanding.. Hi @samuelsh,\nI've investigated this problem and see that in your case you get the \"Uncaught (in promise) DOMException: play() failed because the user didn't interact with the document first.\" exception. It is a browser policy limitation. To disable it, use the--autoplay-policy=no-user-gesture-requiredChrome browser flag:testcafe \"chrome --autoplay-policy=no-user-gesture-required\" test.js. Hi @dmjesus89,\nWould you please clarify what you mean by \"I can't use node in my company\". In the simplest case, a node is just anode.exe` file and you can use it anywhere. So, please elaborate on the issue.. Hi @dmjesus89,\nIs it a technical restriction or it is related to the company policy?. Hi @cmmv91.\nI've created a small example to reproduce the problem:\n```javascript\nimport { Selector } from 'testcafe';\nimport http from 'http';\nfixture Getting Started\n    .page http://localhost:3000/;\ntest.before(()=>{\n    http.createServer((req, res) => {\n        res.statusCode = 500;\n        res.end('500 error!');\n    }).listen(3000);\n})('My first test', async t => {\n    await t.expect(Selector('div').innerText).eql('500 error!\\n');\n});\n```\nHowever, it all works fine in all browsers. Can you show me what details I am missing to see this issue?. Hi\u00a0@cmmv91,\nAs you can see, I've returned 500 page status code from the server in my example. Is this what you are talking about?\njavascript\n...\nres.statusCode = 500;\n.... javascript\ndecorator ['span category'] = str => 'CATEGORY=' + str + '\\n';\n. @inikulin @VasilyStrelyaev \n Guys, I do not like the 'local' and  'path' names. For me, all browsers on my computer - local browsers.\n. messageSandbox.on(messageSandbox.SERVICE_MSG_RECEIVED_EVENT, e => { ?\n. extra \\n\n. typo. Extra dot after \"See Options\".\nI think.. @helen-dikareva  This is a good point, thanks!. Then we have to change all the checks. Have I replace it in all globals?. I do not understand what you mean. for this gulp should be installed globally. missed ;. missed ;. I think that Debugging the Tested Webpage is a bad term because we not test webpage but test a test.\n@AlexanderMoskovkin What do you think?. javascript \ngetCellText: (table, rowIndex, columnIndex) => table.rows[rowIndex].cells[columnIndex].innerText. You can start it from new line. javascript\ngetCellText: (table, rowIndex, columnIndex) => \n    table.rows[rowIndex].cells[columnIndex].innerText\nI like it more. \"program\": \"${workspaceRoot}/node_modules/testcafe/bin/testcafe.js\",. ok. We can't do it because this method can be called twice for the window that will be recreated. Selector: (fn, options = {}). Runs tests concurrently what does it mean? Run all tests three times? Why?\nWhy do I need this? We must first say that this saves time of tests passing.. Here https://github.com/DevExpress/testcafe/blob/c7af41765d752e9d88beaef6e033cddb027292ca/src/test-run/commands/actions.js#L30 we catch errors during the building. Do we need to do this?. Does it ignore cases?. @VasilyStrelyaev May be note about this?. Does it work only one time before starting the test?. Looks good :). I more like in one line:\njavascript \nif (typeof val !== 'string' && val !== null). @AlexanderMoskovkin  ok, but we can merge conditions:\n```javascript\nvar type = typeof val;\nif (type !== 'string' && val !== null)\n    ...\n```\n. with?. But you are using it without await in the expected statement in next code sample. I think we should add note about assertions. . Why? We have discussed with @AndreyBelym and have decided that should.. slip. Should we use this link instead?. prevents --> 'prevented'. Did you forget change tense in this place? Pls. refactor notes as we decided before if you update PR.. test.disablePageReloads?. test.disablePageReloads. What reload will be skipped, before this test or after? Should we describe this unobvious moment? . Can we add some link to glob description?. javascript\nconst { offsetX, offsetY, maxScrollMarginLeft, maxScrollMarginTop } = e.message;. Dont use var. Use const or let instead.. Can we use one this.maxScrollMargin = { left: ..., top ...} property instead of this.maxScrollMarginLeft and this.maxScrollMarginTop?. javascript\nif (browserUtils.isIE) {\n    scrollableHorizontally = scrollableHorizontally || scrollableVertically && overflowX === DEFAULT_IE_SCROLLABLE_OVERFLOW_STYLE_VALUE;\n    scrollableVertically   = scrollableVertically || scrollableHorizontally && overflowY === DEFAULT_IE_SCROLLABLE_OVERFLOW_STYLE_VALUE;\n}. Use const. Because a command does not have it own properties. It is assignable object that assign and initialize all properties from the source and does not know about default values. I want to exclude the case we will have different properties and its default values in the source object and in the constructed command. . const  { source, message } = e;. javascript\nexport function executeJsExpression (expression, testRun, { skipVisibilityCheck, collectionMode }) {\n?. I more like:\njavascript\nconst { \n    filterVisible, \n    filterHidden, \n    counterMode, \n    collectionMode, \n    index,\n    customDOMProperties, \n    customMethods, \n    apiFnChain, \n    boundArgs\n} = this.options;. extract\n```javascript\nlet selectorAncestor = this;\nwhile (selectorAncestor.options.sourceSelectorBuilder)\n    selectorAncestor = selectorAncestor.options.sourceSelectorBuilder;\nconst apiFnID = selectorAncestor.options.apiFnID;\n```\nto the separate method. Add new lines. filter(node, exists);. filtered = filtered.filter(visible);. const typeUtils = hammerhead.utils.types;. Move to utils. const nativeMethods = hammerhead.nativeMethods;. Is it necessary?. javascript\nconst FILTER_ERROR_TO_API_RE = { \n    [SELECTOR_FILTER_ERROR.filterVisible]:  /^\\.filterVisible\\(\\)$/,\n    [SELECTOR_FILTER_ERROR.filterHidden]: /^\\.filterHidden\\(\\)$/,\n    [SELECTOR_FILTER_ERROR.nth]:              /^\\.nth\\(\\d+\\)$/\n};. Should we add links to the documentation?. Why we need to pass roundFn to the getAutomationPoint?. I think it will be more safely to use \njavascript\npath.join('src/', sourcePath). Little thing:\njavascript\nconst isDocumentElement = element === document.documentElement;\nBut It does not matter.\n. let responseText = xhr.responseText || '';. Promise.resolve(res); ?. ",
    "inikulin": "Thanks\n. FPR\n. FPR\n. Thanks\n. Fixed lint errors. Please, review\n. @kirovboris \n1.  https://github.com/superroma/testcafe-phoenix/blob/master/src/utils/read-file-relative.js#L6\n2.  https://github.com/superroma/testcafe-phoenix/blob/master/src/browser/connection.js#L70\n. Thanks\n. NOTE: we need to setup functional tests first\n. I believe with new API tests will be quite stable and as pure statistical tool current approach is good enough. So, closing.\n. FPR\n. FPR\n. Thanks\n. thx\n. FPR\n. squashed, FPR\n. thx\n. Closed via #23 \n. @churkin Any chance it will be reviewed in the near future? )\n. Thx)\n. tests are failing.\n. FPR\n. thx\n. Since we will preserve dirs structure in FS we will have:\ncore/index.js\nui/index.js\nrunner/index.js\nMeanwhile, they will be mapped to the another names by assets manager:\nhttps://github.com/superroma/testcafe-phoenix/blob/master/src/index.js#L24\n. Release seems like a more complex, so it better be performed manually via check lists generated by bot. So, closing in favor of #85 \n. We need publish which will rely on build and perform npm publish, at least to not forget build things before publishing\n. Closed via superroma/testcafe-hammerhead#41.\n. We have eslint/eslint#3226 now. Waiting for fix. :weary: \n. @kirovboris ping\n. thx\n. @AlexanderMoskovkin @churkin ping\n. Thinking of this more I think we have all control flow messed up currently.\nI propose following changes:\n1.  BrowserJob should be considered done not then it's nextTestRunUrl getter is triggered and testRunQueue is empty. Instead we should have pendingTestRunCount variable which is initially equals to the testRunQueue.length and gets decremented once BrowserJob raises test-run-done event. Once it's equal to 0 we'll emit done event for the job.\n2. We should turn nextTestRunUrl in both BrowserJob and BrowserConnection into the function and name it popNextTestRunUrl. This will be definetly more correct in terms of semantics.\n3. BrowserJob should provide hasQueuedTestRuns property. BrowserConnection should check this property once it popped next test run url from the job, and if it's false then shift it's jobQueue.\n4. BrowserJob.abort() should set BrowserJob.aborted flag to true. This flag will disable all events for the job. So, both job and related task will remain silent.\n5. Meanwhile Task.abort() should call abort() for all it's jobs and immediately remove jobs from the corresponding BrowserConnection's. For this purpose we will use pendingBrowserJobsMap object which is a instance of Map. The key of the map is the job and the value is browser connection. Usage of the Map gives us two benefits: we will be able to easily remove completed jobs without boilerplate code which is required for such operation for arrays and we will instantly have browser connection related to job which is helpful for the abort().\n\\cc @kirovboris @AlexanderMoskovkin @churkin I would like to know your opinion. Is this somehow clear and makes sense for you? \n. @AlexanderMoskovkin it's not about browser-specific, but Windows-specific things in our code. Let's keep it open for now.\n. I don't think we need it. Closing for now.\n. \\cc @kirovboris @AlexanderMoskovkin @churkin \n. @kirovboris ping\n. Tests fail due to incorrect ES6 syntax\n. Moreover more likely es7.classProperties will not make it (see: https://github.com/babel/babel/issues/1990), so there will be a task to remove them completely from the codebase.\n. Issued a bug: https://github.com/superroma/testcafe-phoenix/issues/37. @churkin Can you do the same for the hammerhead?\n. I think since it's constants anyway we will replace it with the instance vars, e.g.:\nstatic TIMEOUT = 123; -> this.TIMEOUT = 123;. It's also will simplify some tests, since we will not need to restore constant var value. \n. Yes, this case is an exception. But currently we've used static fields only for the constants which can be modified for testing purposes.\n. Hm, it's quite far from what we've discussed. Can you explain how it works, who it should be used and what separate entities mean (especially I don't get what base and plain-text means now.\n. Emm,\n``` js\nvar formatter = new PlainTextFormatter();\nvar msg = formatter.getErrorText(err);\n``\n. Let's discuss it in person in office tomorrow at first. I thought, and decided that I don't like my approach either. We need a brainstorm.\n. \\r-\n. Can you squash commits, please?\n. lgtm\n. \\\u0441\u0441 @AlexanderMoskovkin \n. #47 is blocking\n. \\r-\n. @VasilyStrelyaev check messages intemplate.jsas well, please\n. \\r-\n. And we should add special comment (see: https://github.com/superroma/testcafe-phoenix/blob/master/src/runner/test-run/command.js#L1) to all files which will be used by the client as well (e.g.type.js)\n. Closed via #45 and #63 \n. 1)Let's move code fromclient/runnertoclient/test-run. NOTE: there are templates where already, use them.\n2)Removeclient/runner/api-v23)In all subpackages, move dependency wrappers to the deps dir, e.g. inuimovetestcafe-core.jsandhammerhead-api.jsto thedeps/testcafe-core.jsanddeps/hammerhead.js` appropriately.\n4)In ui move all cursor related files to the cursor dir and rename files (remove cursor-prefix)\n5)Why ui/core.js contains just logic related to the progressPanel, shouldn't it be in the progress-panel.js?\nIn addition to the TODO list:\nGet rid of jquery. And fill an issue for each item in the todo list, please.\n. We need a ES6 transition plan as well:\n1)Constants (const keyword, new naming format)\n2)Classes (use where possible, any object which has state now or init method or something like this should be turned into the classes and instantiated there necessary)\n3)Arrows\n4)Promises\nMore TODO:\nGet rid of shared constants, use error types from https://github.com/superroma/testcafe-phoenix/blob/master/src/test-error/type.js, test run service message commands from https://github.com/superroma/testcafe-phoenix/blob/master/src/runner/test-run/command.js,\nworker commands from https://github.com/superroma/testcafe-phoenix/blob/master/src/browser-connection/command.js\nPlease, turn all TODOs and ES6 plan into appropriate GH issues.\n. \\r-\n. @AlexanderMoskovkin yes\n. Looking at this now I think we shouldn't move runner into test-run since they need end up in the different files. Really sorry for this.\n\\r-\n. lgtm\n. We need to get rid of callbacks as well and use promises instead\n. I think we can close it for now.\n. No need for this with new API\n. @georgiy-abbasov Yay, looks like a long reading. I'll review on Monday if you wouldn't mind? Need a clear head for this.\n. @georgiy-abbasov Can you ping me then, please?\n. ``` js\nit('Should fail when the first argument is invisible', function () {\n        return runTests('./click.test.js', 'Should fail when the first argument is invisible')\n            .then(function () {\n                throw new Error('Test should fail but was succeed');\n            })\n            .catch(function (err) {\n                var expectedError = [\n                    'Error at step \"1.Click on invisible element\":',\n                    '',\n                    'act.click($input);',\n                    '',\n                    'A target element \\<input id=\"input\"> of the click action is not visible.',\n                    'If this element should appear when you are hovering over another',\n                    'element, make sure that you properly recorded the hover action.'\n                ].join(' ');\n            expect(err['Should fail when the first argument is invisible']).eql(expectedError);\n        });\n});\n\n```\nBTW, maybe we can get rid of this part:\njs\n .then(function () {\n                throw new Error('Test should fail but was succeed');\n })\nBy encapsulating it in runTests, e.g.:\n``` js\nit('Should fail when the first argument is invisible', function () {\n        return runTests('./click.test.js', 'Should fail when the first argument is invisible', { shouldFail: true })\n            .catch(function (err) {\n                var expectedError = [\n                    'Error at step \"1.Click on invisible element\":',\n                    '',\n                    'act.click($input);',\n                    '',\n                    'A target element \\<input id=\"input\"> of the click action is not visible.',\n                    'If this element should appear when you are hovering over another',\n                    'element, make sure that you properly recorded the hover action.'\n                ].join(' ');\n            expect(err['Should fail when the first argument is invisible']).eql(expectedError);\n        });\n});\n\n```\nAlso, maybe if test name is explicitly specified we could return just this test's error, so it will be:\njs\nexpect(err).eql(expectedError)\nWhat do you guys think?\n. I guess we can close it now, since we use functional testing heavily to cover functionality.\n. I like the first option: get things up and running now at least in 4 browsers, then create separate issues for each browser.\n. We need this for the browser-natives as well\n. \\r-\n. Requires rebase BTW\n. \\r-\n. Looks good, just some minor issues.\n\\r-\n. lgtm, nice job\n. We are rethinking now =))\n. NOTE: It's quite important to do that ASAP, because long tests will cause browser disconnection right now, since we've removed old ping mechanism.\n. @AlexanderMoskovkin Refactor shared browser-related functionality into src/client/browser/index.js as we discussed. And move idle page code to src/client/browser/idle-page\n. \\r-\n. lgtm\n. Now then we have design viewer let's work on this issue \\cc @kirovboris @MargaritaLoseva @VasilyStrelyaev @churkin @AlexanderMoskovkin @AndreyBelym @arubtsov @LavrovArtem \n. Now, then all report-related bugs are fixed we need to resolve this one \\cc @VasilyStrelyaev @MargaritaLoseva \n. @VasilyStrelyaev You can change them in https://github.com/superroma/testcafe-phoenix/blob/master/src/reporters/errors/decorators/tty.js FYI\n. @VasilyStrelyaev Possible chalk styles can be found here: https://github.com/chalk/chalk\n. Drag and drop images to the comment text area to insert them\n. @VasilyStrelyaev Please, get the latest version, it has fixed formatting. I like the second though.\n. We need to separate errors somehow. I've added highlighting (locally for now) of the user agent string to achieve this. Here are couple of examples in shitty windows cmd and cmder (because I was too lazy to switch between mac and win machines :tired_face:)\n1.\n\n\n2.\n\n\n\\cc @kirovboris @AlexanderMoskovkin @churkin @arubtsov @LavrovArtem @miherlosev @MargaritaLoseva @AndreyBelym @helen-dikareva \n. @VasilyStrelyaev Can you paste here tty code for your second sample?\n. How about this one:\n\n\n. Increased spaces, removed styling for step name\n\n. Grayed user agent, but doesn't looks like errors for me\n\n. Minimal reporter:\n\n. \\r-\n. \\r-\n. lgtm\n. > This fails when the response is empty. I'll fix it soon\n\\r- then =)\n. \\r-, see comment above\n. lgtm\n. lgtm\n. @AlexanderMoskovkin Too late, but I've just had a thought what the following condition will be more clear:\njs\nfunction checkStatus (statusUrl) {\n    browser\n        .checkStatus(statusUrl, window.XMLHttpRequest)\n        .then((cmd) => {\n            if (cmd !== COMMAND.idle)\n                window.clearInterval(interval);\n        });\n}\nWhat do you think?\n. @AlexanderMoskovkin Yes, please\n. lgtm\n. Closed in favor of #52 \n. By default we should build and run tests in release configuration, unless --dev flag is not specified.\n. I'm working on this\n. tests fail\n. We need closes directive in the commit name as well, since we have issue for this.\n\\r-\n. requires rebase now\n. \\r-\n. lgtm\n. @AlexanderMoskovkin Yep, actually nearly all frameworks follow this approach. More likely first assertion will show you what's going wrong and often other fails occurs because of \"avalanche\" effect. Haven't seen useful multiple failed assertions yet, IMO it's just pollutes the output.\n. Not implementing custom assertion system. Test fails on first assertion\n. @darlanmendonca Do you mean if we have an option to not throw on assertions?. @darlanmendonca This is default behavior currently.. @darlanmendonca Oh, my bad. mocha -- bail fails whole task once there is an error in the test. I guess we can implement it, can you issue separate feature request, please?. Currently we think it would be nice to have something like this in new API:\njs\ntest('Test name')\n    .skipIf( browserInfo => ...)\nThere browserInfo contains UA string, alias and version.\n. Closing in favor of #246 \n. Not doing assertions system\n. @VasilyStrelyaev Please, check texts as well\n. @kirovboris This is the only way we can force linting in all testing configurations. Anyway you will have lint in test gulp-task, what will it change for you?\n. @VasilyStrelyaev check test names, pls\n. FPR\n. FPR\n. Closing due to the fact that it's not related to TestCafe (see build bot repo)\n. - Bot should suggest version number based on list (reading package json and analyzing API MODIFICATION LEVEL labels)\n- Issues list should contain information about API modification level\n- Bot should create warning comment if commit in PR doesn't have closes/fixes/fix directives\n- Bot should create comment which warns about missing API MODIFICATION LEVEL label once the issue gets closed. It should re-issue the warning comment two times a day until the label will not be set.\n. @AlexanderMoskovkin We need also task which will ping developer if label is not set (like for the API modification level labels)\n. Planned in build bot.\n. Have you tried it in MacOS TTY, is everything works as expected there?\n. Please, use Fix word in the commit message, because currently it sounds like you've introduced the issue with the commit :smile: \n. lgtm\n. \\cc @AlexanderMoskovkin \n. We need regression test for this\n\\r-\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. @AlexanderMoskovkin I'd rather keep both. But if you are asking it context of the bot \"release\" functionality, I'd stick with the PR's directive since it's may contain multiple commits.\n. So the rule is: always use both\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm @AndreyBelym Please, fill the issue to other modules to switch to es6-promisify\n. @AlexanderMoskovkin promisify is used only on server side.\n. @AlexanderMoskovkin Oh, I see now. We still using promise lib there. Overall, it would be nice to switch to es6-promise there for consistency.\n. lgtm\n. We will need it for the studio to support run via multiselect - files may contain fixtures with the same name. So, closing this.\n. \\r-\n. lgtm\n. > I have the screeshot overwritten each time... Weird..\nWrong. You will just specifiy the root dir for your screenshots. Then for each test run dir with the unique ID will be created. So, nothing will be overwritten\n. @VasilyStrelyaev @AlexanderMoskovkin Well, if you explicitly specify the path to the screenshot, then it's uniqueness is your burden now. I don't see any problem here.\n. 1)Let's move all error screenshots to the errors dir in the test screenshot path, so you will not need to add suffix for them\n2)In report just give the path to the test screenshots dir\nE.g.:\n```\nRunning tests in: Chrome, Firefox\nfixture1 (./fixture1.js)\n    \u2713 fixture1test1 (unstable) (screenshots: D:\\screenshots\\1445437598847)\n    \u2716 fixture1test2 (screenshots: D:\\screenshots\\144543754328847)\n    1) Chrome\n       Assertion failed at step \"Step\":\n\n           eq([\"12345678901\"], [\"00000000000\"])\n\n       Arrays differ at index 0:\n\n       Expected: [0]: \"12345678901\"\n       Actual:   [0]: \"00000000000\"\n                       ^\n\n\n    2) Chrome\n       Assertion failed at step \"Step\":\n\n           notEq(\"test\", \"test\")\n\n       Expected: not \"test\"\n       Actual:   \"test\"\n\n\n    3) Firefox\n       Assertion failed at step \"Step\":\n\n           ok(false)\n\n       Expected: not null, not undefined, not false, not NaN and not\n       ''\n       Actual:   false\n\n\n\u2713 fixture1test3\n\nfixture2 (./fixture2.js)\n    \u2713 fixture2test1 (screenshots: D:\\screenshots\\4345437598847)\n    \u2713 fixture2test2 (screenshots: D:\\screenshots\\6545437598847)\n2/6 failed (15m 25s)\n```\n. > 1) Which option:\n\nscreenshots-path/errors/{testId}/{userAgent}/file.png\nscreenshots-path/{testId}/errors/{userAgent}/file.png}\nscreenshots-path/{testId}/{userAgent}/errors/file.png ?\n\nI like the third one\n. Additional questions:\nshould we use -f flag as a primary source of the files to run, or it should be used as the filter instead, so e.g. by default all .js files from test dir will be run and flag just filters found files. And which dir we should use by default: test, test/functional, test/automation, test/testcafe or use search in all of them?\n. @miherlosev You've missed the idea of configuration. You can't run tests in all configurations, you need to choose one. Configurations are flexible: it can contain just information about browsers, so you need to specify files to run, or it can contain just file paths, and you need to specify browser to run in. It just the way to save some set of options and give it an alias.\n. @miherlosev So, -f should work as filter?\n. But which files we should run? All files in test directory? I bet there will be unit tests as well.\n. TODOs:\n- ports and hostname options\n- remote browser connections option\n- quarantine mode\n. What about making configurations even more flexible and allow to combine them, e.g.:\nI have configuration for browsers and reporter:\n```\n\ntestcafe add-config all-browsers -b ie,chrome,ff\n```\n\nand configuration for target tests\n```\n\ntestcafe add-config ASPxGridView -f test//*.js -xf ASPxGridView\ntestcafe add-config ASPxTreeList -f test//*.js -xf ASPxTreeList\n```\n\nThe I can use them the following way:\n```\n\ntestcafe all-browsers ASPxGridView\ntestcafe all-browser ASPxTreeList\n```\n\nPlease, let me know what do you think\n. I would like to summarize our discussion (both here and in person). \n1. We decided to get rid of configuration concept. The reasons are:\n   - It's not clear how merger options from multiple configurations: it's make sense to override in some cases (reporters, flags) and merge them in case of test files and browsers. This kind of disambiguation will be a reason for user confusion.\n   - It's not clear where we should store configuration file. All possible options has significant disadvantages.\n   - It's not clear how options should be used in the programmatically: they contain properties which affect construction of the TestCafe. There are now clear ways to achieve usage of both configuration files and API.\n   - Configuration functionality can be easily implemented via shell scripts (or bat files on win) and aliases.\n2. We haven't took into consideration when you need run browsers via path (our ASP farm case). The solution is: -b option should accept browser paths as well. We should try to recognize browser family from path and assign relevant browser info run options in browser-natives (task assigned to @AlexanderMoskovkin , @AndreyBelym )\n3. Since we always require browsers and files to run task, they shouldn't be implemented as options (since they are not optional), command line will look this way:\ntestcafe [options] <comma-separated-browser-list> <file-or-glob...>\nHere is the updated CLI usage:\n```\nUsage: testcafe [options]  \nYou can specify both browser alias and browser path in browser list.\n  You can specify one or more file path or globbing pattern to run tests from.\nMore info: http://http://testcafe.devexpress.com/Documentation/CLI\nOptions:\n-h, --help                         output usage information\n-V, --version                      output the version number\n-b, --list-browsers                output available browser aliases\n-bc, --browser-connection <count>  create remote or local browser connections\n-r, --reporter <name>              specify the reporter to use\n-rp, --report-path <path>          output report to the file on the <path>\n-s, --screenshots <path>           enable screenshots and save them to the <path>\n-sf, --screenshots-on-fails        take screenshots on test fails\n-g, --grep <pattern>               only run tests matching <pattern>\n-f, --fgrep <string>               only run tests containing <string>\n-xg, --fixture-grep <pattern>      only run fixtures matching <pattern>\n-xf, --fixture-fgrep <string>      only run fixtures containing <string>\n-nc, --no-colors                   force disabling of colors\n-p1, --port1 <num>                 specify custom port1 number\n-p2, --port2 <num>                 specify custom port2 number\n-hs, --hostname <name>             specify hostname\n\n```\nPlease, add final corrections, so I can start implementing it.\n. @VasilyStrelyaev It's not a big deal to support:\ntestcafe * <files...>\n. @AndreyBelym I'll be happy too, but AFAIK it's not configurable in commander which I would like to use.\n. @AlexanderMoskovkin AFAIR we've decide to not make screenshots if screenshot path is not provided. We need to decide how to include screenshots in the report BTW, I remember we've got conversation about it with @kirovboris , but I don't remember the conclusion. Anyway, we'll resolve it context of #104 \n. Some additions:\n- quarantine mode\n- don't fail on JS errors\n```\nUsage: testcafe [options]  \nYou can specify both browser alias and browser path in browser list.\n  You can specify one or more file path or globbing pattern to run tests from.\nMore info: http://http://testcafe.devexpress.com/Documentation/CLI\nOptions:\n-h, --help                         output usage information\n-V, --version                      output the version number\n-b, --list-browsers                output available browser aliases\n-bc, --browser-connection <count>  create remote or local browser connections\n-r, --reporter <name>              specify the reporter to use\n-rp, --report-path <path>          output report to the file on the <path>\n-s, --screenshots <path>           enable screenshots and save them to the <path>\n-sf, --screenshots-on-fails        take screenshots on test fails\n-q, --quarantine-mode              enable quarantine mode\n-E, --skip-js-errors               don't fail tests on JS errors\n-g, --grep <pattern>               only run tests matching <pattern>\n-f, --fgrep <string>               only run tests containing <string>\n-xg, --fixture-grep <pattern>      only run fixtures matching <pattern>\n-xf, --fixture-fgrep <string>      only run fixtures containing <string>\n-nc, --no-colors                   force disabling of colors\n-p1, --port1 <num>                 specify custom port1 number\n-p2, --port2 <num>                 specify custom port2 number\n-hs, --hostname <name>             specify hostname\n\n```\n. A little update: ports via single option, remotes now specified via browser list (we can have no alises specified, but browser list is required):\n```\n  Usage: testcafe [options]  \nYou can specify both browser alias and browser path in browser list.\n\nIf you want use remote browser connection (e.g. connect mobile device)\nspecify \"remote\" as browser alias. If you want to connect multiple devices\nthen prefix alias with the number of browsers you want to connect (e.g. \"3remote\").\n\n\nYou can specify one or more file path or globbing pattern to run tests from.\n\nMore info: http://testcafe.devexpress.com/Documentation/CLI\n\nOptions:\n-h, --help                     output usage information\n-V, --version                  output the version number\n-b, --list-browsers            output available browser aliases\n-r, --reporter <name>          specify the reporter to use\n-rp, --report-path <path>      output report to the file on the <path>\n-s, --screenshots <path>       enable screenshots and save them to the <path>\n-sf, --screenshots-on-fails    take screenshots on test fails\n-q, --quarantine-mode          enable quarantine mode\n-E, --skip-js-errors           don't fail tests on JS errors\n-g, --grep <pattern>           only run tests matching <pattern>\n-f, --fgrep <string>           only run tests containing <string>\n-xg, --fixture-grep <pattern>  only run fixtures matching <pattern>\n-xf, --fixture-fgrep <string>  only run fixtures containing <string>\n-p, --ports <port1,port2>      specify custom port numbers\n-hs, --hostname <name>         specify hostname\n\n```\n. Thinking of this recently I came to the following set of options:\n-h, --help                     output usage information\n    -V, --version                  output the version number\n    -b, --list-browsers            output available browser aliases\n    -r, --reporter <name>          specify the reporter to use\n    -p, --report-path <path>       output report to the file on the <path>\n    -s, --screenshots <path>       enable screenshots and save them to the <path>\n    -S, --screenshots-on-fails     take screenshots on test fails\n    -q, --quarantine-mode          enable quarantine mode\n    -e, --skip-js-errors           don't fail tests on JS errors\n    -t, --test <name>              only run tests with <name>\n    -T, --test-grep <pattern>      only run tests matching <pattern>\n    -f, --fixture <name>           only run fixtures with <name>\n    -F, --fixture-grep <pattern>   only run fixtures matching <pattern>\n    --ports <port1,port2>          specify custom port numbers\n    --hostname <name>              specify hostname\nIt's close to the @kirovboris ideas. IMHO we will have more memorizable flags. grep covers contains-functionality anyway. Please, let me know what do you think?\n\\cc everyone \n. \\cc @kirovboris \n. ping @churkin \n. lgtm\n. @LavrovArtem Seems like you've used another rules, e.g. babel/arrow-parens. Moreover it's requires plugin.\n. I'm working on this.\n. Tests fail\n. \\r-\n. \\r-\n. Overall, looks really good. Just some minor issues left.\n. \\r-\n. Just single naming issue \\r-\n. lgtm\n. @miherlosev How about Opera or Yandex Browser?\n. > I think we need to drop support Opera with old non-webkit engine, remove isOpera and rename isOperaWithWebKit to isOpera\nLet's do this\n. Stop, here is the deal: currently only Safari uses WebKit. Chrome, Opera and Yandex Browsers uses Blink - fork of WebKit which is currently is quite distinct from WebKit.\n. Gosh, that's why I'd like to see feature detection instead of this flags.\n. @miherlosev Any progress on this?\n. Is there any pending blocking changes in hammerhead left?\n. Odd, base reporter should fall back to the process.stdout if outStream is not specified\n. lgtm\n. lgtm\n. lgtm\n.  In addition: Hammerhead errors are not handled correctly \nEdit: issued in separate ticket - #120 \n. @AlexanderMoskovkin Definitely no. Need to figure out optimal string lengths with the final texts (which we now have thanks to @VasilyStrelyaev)\n. FPR\n. ping @churkin \n. I'm working on this.\n. I believe it's not a big deal to keep it as is, we don't have much resources. So I would like to not invest time in this feature.\n. \\r-\n. Overall looks great. Just some minor stylistic issues.\n\\r-\n. Just const style fix and lgtm\n. lgtm\n. I guess we should just update browser-natives? \\cc @AlexanderMoskovkin @AndreyBelym \n. I'm working on this\n. Closed via #165 \n. i'm working on this\n. \\cc @kirovboris Seems like in this case diffs fails\n. ping @kirovboris \n. \\cc @AlexanderMoskovkin \n. @AlexanderMoskovkin There were changes on server side, now we use HTML for templates markup. So, HTML content should be escaped to be presented as the text\n. It could be easily done with:\njs\nfunction escapeHTML(s) { \n    return s.replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n}\n. We should correctly determine as well: compare stream with stdout and stderr and check tty.isatty(num). E.g., with current implementation colors doesn't work in WebStorm\n. Arghh, wrong ID in commit was used\n. I'm working on this\n. Tests fail. Seems like we rely on the fact that chrome should be installed in the testing envirionment. Think how we can avoid it.\n. \\r-\n. I don't like Container, it's even more generic then Set (see: http://best-practice-software-engineering.ifs.tuwien.ac.at/patterns/container.html)\n. It's should be something what describes \"collection of items (which may be included in other collections) which allows track their state as a whole\". Something like hub. But I don't like the hub term, because we'll not be able to use it as an argument for the Task and alternative for the browser list. Hub shouldn't be treated as a collection, but a common communication end point. So we will need to pass around a browser list and the hub for it. Which is kinda sucks.\n. lgtm then\n. ping @AlexanderMoskovkin \n. BTW, I don't see code which attaches screenshot path on errors. And we need to add both types of screenshots in report-design-viewer (we need to figure out coloring for them as well).\n. \\r-\n. @AlexanderMoskovkin We've discussed what if there were an error, then screenshot should be attached to the error text: https://github.com/superroma/testcafe-phoenix/issues/104#issuecomment-150202866\nSo the report should look like this:\n```\nRunning tests in: Chrome, Firefox\nfixture1 (./fixture1.js)\n    \u2713 fixture1test1 (unstable) (screenshots: D:\\screenshots\\1445437598847)\n    \u2716 fixture1test2 (screenshots: D:\\screenshots\\144543754328847)\n    1) Chrome\n       Assertion failed at step \"Step\":\n\n           eq([\"12345678901\"], [\"00000000000\"])\n\n       Arrays differ at index 0:\n\n       Expected: [0]: \"12345678901\"\n       Actual:   [0]: \"00000000000\"\n                       ^\n\n       Screenshot: D:\\screenshots\\144543754328847\\errors\\1.png\n\n\n    2) Chrome\n       Assertion failed at step \"Step\":\n\n           notEq(\"test\", \"test\")\n\n       Expected: not \"test\"\n       Actual:   \"test\"\n\n       Screenshot: D:\\screenshots\\144543754328847\\errors\\2.png\n\n    3) Firefox\n       Assertion failed at step \"Step\":\n\n           ok(false)\n\n       Expected: not null, not undefined, not false, not NaN and not\n       ''\n       Actual:   false\n\n       Screenshot: D:\\screenshots\\144543754328847\\errors\\3.png\n\n\u2713 fixture1test3\n\nfixture2 (./fixture2.js)\n    \u2713 fixture2test1 (screenshots: D:\\screenshots\\4345437598847)\n    \u2713 fixture2test2 (screenshots: D:\\screenshots\\6545437598847)\n2/6 failed (15m 25s)\n```\nSorry, seems like I was not quite clear in our discussion.\n. @AlexanderMoskovkin AFAIK you can't create step without a name in current API. Unnamed steps are subject of the new API and we will have a lot of other things to redo because of this. So, I think we shouldn't bother right now.\n. @AlexanderMoskovkin I'll review it on Monday with the clear head, since this is quite big and important\n. \\r-\n. After discussion in person we've decided to refactor current approach. There are some uncool things in the current implementation, such as: assigning property to test outside of ctor, numerous confusing flags. \nSuggested approach:\n1. Each task will have it's own instance of Screenshots object (from src/runner/screenshots/index.js)\n2. Screenshots API:\n    - screenshots.hasCapturedFor(test)\n    - screenshots.getPathFor(test)\n    - screenshots.createCapturerFor(test, userAgent) - returns ScreenshotCapturer (from src/runner/screenshots/capturer.js)\n1. Each test run creates it's own capturer, Capturer API:\n   - screenshotCapturer.capture(url, stepName, customPath)\n   - screenshotCapturer.captureForError(url, stepName)\nAfter some consideration, I think we should always add screenshot path in report item, no matter which kind of screenshot we have.\n\\cc @AlexanderMoskovkin @VasilyStrelyaev \n. @AlexanderMoskovkin we need to pass user agent as well. I'm not pretty happy with 5 argument functions\n. @helen-dikareva They do different things\n. \\r-\n. lgtm\n. ping @helen-dikareva \n. lgtm\n. @AlexanderMoskovkin NOTE: we should close #110 and #54 in context of this. #54 requires some additional work on testcafe side BTW \n. NOTE: There was a breaking change - jsProcessor is not available anymore in Hammerhead API. \nTherefore you shouldn't use jsProcessor.PROCESS_SCRIPT_METH_NAME in testcafe code. In tests you can use hammerhead.get() to reach them. There is only one production code usage: jsProcessor.PROCESS_SCRIPT_METH_NAME. But it can be replaced with \njs\nwindow.location= hammerhead.getProxyUrl(url);\n. @helen-dikareva List of breking changes: https://github.com/DevExpress/testcafe-hammerhead/issues?q=is%3Aissue+label%3A%22API+MODIFICATION+LEVEL%3A+breaking+changes%22+is%3Aclosed\nYou can find notes regardings breaking changes in comments.\n. lgtm\n. lgtm\n. removed\n. \\r-\n. \\r-\n. Style issue and tests fail \\r-\n. lgtm\n. LGTM. Just have a question regarding feature detection. If it's not possible, merge as is.\n. lgtm\n. lgtm\n. Failed in latest node\n. \\r-\n. We need tests for this as well (adding multi line code snippets to the expected-test-errors will be just fine). \n\\r-\n. \\r-\n. \\r-\n. lgtm, But I'm not sure if reduceRight approach is quite clear to read. Your opinion @AlexanderMoskovkin ?\n. lgtm\n. \\r-\n. lgtm\n. test fail\n. lgtm\n. Lgtm\n. lgtm\n. ping @AlexanderMoskovkin \n. @AlexanderMoskovkin Argh, yes, right\n. @AlexanderMoskovkin I just rememberd, we need this in jquery filter, so we can't use arrow here. So, we can merge \n. @AlexanderMoskovkin I like it\n. lgtm\n. \\r-\n. In general, looks good. Just single minor stylistic issue left. \n. \\r-\n. @helen-dikareva It requires rebase now\n. lgtm\n. Any news on this?\n. # Assertion system\nUse only async assertions\nTo increase stability I suggest to get rid of sync assertions. With new powerfull assertion system\nwhere will be no need for them. We will continiously execute assertion condition until it will not be met\nor timeout will not happen (3sec by default). This is the only possible consensus beetween stability\nand speed. E.g.:\n`` js\ntestButton color changes`\n    .save('color', () => document.querySelect('#btn').style.color)\n    .click('#change-color')\n.expect.element('#btn').style('color').not.eql.saved('color');\n\n```\nYou can use custom timeout by using .within()\n`` js\ntestButton color changes`\n    .save('color', () => document.querySelect('#btn').style.color)\n    .click('#change-color')\n.within(3000).ms\n.expect.element('#btn').style('color').not.eql.saved('color');\n\n```\nOr if you want assertion to run once and immediately use now\n`` js\ntestButton color changes`\n    .save('color', () => document.querySelect('#btn').style.color)\n    .click('#change-color')\n.now.expect.element('#btn').style('color').not.eql.saved('color');\n\n```\nActual argument\n\nexpect(func) - no plain values, only funcs, since everything is async and should be calculated\nexpect.stored(name) - stored value\nexpect.element(selector) - element\nexpect.element(selector).attribute(name) - element attribute\nexpect.element(selector).width - element offset width\nexpect.element(selector).height - element offset height\nexpect.element(selector).count - number of elements matching the selector\nexpect.element(selector).text - element inner text\nexpect.element(selector).style(styleProp) - element computed style properties\n\nAssertions\nCommon\n\n.eql(value), .eql(func), .eql.stored(), .eql.element(selector), ... - deep equality\n.to.be.true - boolean true equality\n.to.be.false - boolean false equality\n.to.be.null - null equality\n.to.be.undefined - undefined equality\n.to.be.NaN - NaN equality\n.to.be.ok - non-null, non-undefined, non-false\n.to.be.empty - empty array, object without fields, empty strings\n.more.than(value), .more.than(func), .more.than.stored(value) - more than comparison\n.less.than(value), .less.than(func), .less.than.stored(value) - less than comparison\n.contain(value), .contain(func), .contain.stored(value), .contain.element(selector), ... - string contain substring, array contain value, object contain key, element contain text, element contain element\n\nString-only\n\n.match(regexp) - string matches regular expression\n\nElement-only\n\n.visible - visibility check\n.exists - element present in DOM\n.hasClass(className) - element has one or more classname\n.disabled - element is disabled\n.readonly - input is readonly\n.checked - checkbox is checked\n\nNegation\n\n.not.[assertion] - negotiate assertion\n\nTiming prefixes\n\nwithin(ms).ms.expect, within(ms).expect - test assertion within given time range\nnow.expect - test assertion once and immediately, sync assertion alternative\n. # Fixture before/after/beforeEach/afterEach\n\nE.g.:\n``` js\nimport deleteAllPosts from './mixins';\nfixture example.org forum functionality\n.beforeEach\n   .go('http://example.org')\n.after\n   .do(deleteAllPosts);\n```\n. # Roles\nUse roles to observe results or perform actions from different user perspectives. Also, it's a solution for\nthe forms authentication problem. Role initialization will be executed once per task on first demand and can be shared among tests and fixtures. Technically role saves created cookies and storages state. When we switch role in tests and if it's not initialized yet then initializations steps run and we return back to the page on which we stopped execution. If it's already initialized then page will be just reloaded with the new credentials.\nhelpers.js\n``` js\nimport testcafe from 'testcafe';\nexport var registeredUser = testcafe.role()\n    .go('http://example.org')\n    .type('#login', 'TonyStark')\n    .type('#password', 'swordFish');\n    .click('#login');\nexport var anonymous = testcafe.role();\n```\ntest.js\n``` js\nimport { registeredUser, anonymous } from '../helpers';\nfixture example.org tests;\ntest Anonymous users can see newly created comments\n    .as(registeredUser)\n    .go('http://example.org')\n    .type('#comment', 'Hey ya!')\n    .click('#submit')\n    .as(anonymous)\n    .expect.element('#comment-area').contain('Hey ya!');\n```\n. # Waits\nAutowaits are enabled by default.\nDisable all:\njs\n.autowait(false)\nEnable all:\njs\n.autowait(true)\nOptional:\njs\n.autowait({ xhr: true, pageLoad: false, timers: true })\nForced (fails test if not occure), default timeout 3sec:\njs\n.waitPageLoad(timeout)\n.waitXhr(timeout)\n. @churkin Should we?\n. Well, we can raise error then.\n. @churkin we will need virtual control flow tree anyway\n. Tree will be built in runtime via API calls, syntax analysis will not be involved\n. I think we should restrict usage of the global test, fixture, beforeEach, etc. only to the test file and don't inject them to the globals on the project level, So, any module that will be require by test file will not be able to declare tests. Meanwhile, things like Hybrid and Role can be declared and used anywhere, but on the other hand they don't represent the minimal test harness. So, user will need to require them:\njs\nimport { Hybrid, Role } from 'testcafe';\nLet me know what do you think \\cc @DevExpress/testcafe \n. @miherlosev \n\n1)I prefer the following variant:\n\nBoth will be available\n\n3)Frame switching is good. \nI think we should rename switchToMain -> switchToTop and add switchToParent.\n(simular as window.top and window.parent)\n\ntop frame may have different meaning depending in which frame you are currently. Meanwhile. we have only one main frame\n\n4)Script injection.\nI think that name is not clear.\nI should be injectClientScript, injectClientScriptForFrames, injectClientScriptForPages.\n\nToo long, however, I'm not quite happy with the original naming either\n\n5)I think that Hybrid is a very usable feature. \nTherefore it should be avalible without additional import directive.\n\nThis will require globals pollution even in test dependencies. It's not good at all. Moreover, we will introduce conceptual inconsistency in test declaration interface and this utility API.\n. @AlexanderMoskovkin sure. But I'd prefer to not use predictive model like we had before:\njs\nawait t\n    .click(el) // <-- causes alert\n    .handleAlertDialog();\n. Guys, just found fundamental issue with our current concept of Hybrid functions.\nThe problem:\nCurrenlty we just declare Hybrid functions somewhere and execute them without passing them any test run context. So we don't know in which Hammerhead session given Hybrid function should be executed. It became even worse if we think about calling Hybrid function from fixture dependency.\nThe solutions:\nIn general it's just the same solution with different control directions.\n1. Hybrid function call should always accept TestApiHost as the first argument:\n``` js\nimport { Hybrid } from 'testcafe';\nvar getElementById = Hybrid(id => document.querySelector('#' + id));\ntest('Yo', async t => {\n    var btn = await getElementById(t, 'myId');\n});\n```\nPros: we have explicit way of hybrid function declaration, so there is no room for confusion.\nCons: calling convention is a little bit confusing, it's not as elegant as we hoped.\n2. Hybrid wrapper will be built-in into the TestApiHost:\n``` js\nvar getElementById = id => document.querySelector('#' + id);\ntest('Yo', async t => {\n    var btn = await t.hybridCall(getElementById , 'myId');\n});\n```\nor\n``` js\nvar getElementById = id => document.querySelector('#' + id);\ntest('Yo', async t => {\n    var btn = await t.hybrid(getElementById)('myId');\n});\n```\nPros: calling convention looks a little bit cleaner, but still it's not quite elegant.\nCons:  it's hard to distinguish hybrid function declaration.\nPlease, let me know what do you think and if you have better ideas. \\cc @DevExpress/testcafe \n. I vote for first as well, since it's also looks better in the action calls:\njs\nawait t.click(getElementById(t, 'myId'))\nvs\njs\nawait t.click(t.hybrid(getElementById)('myId'))\nHowever, it's still sucks =(( I was hoping we could create something better\n. Well, actually there is a \"black magic\" way to keep old syntax, without passing t explicitly. We can wrap testrun-fn with the function with special name that will contain test run ID. When in Hybrid fn we can traverse up callstack using v8 StackTrace API to determine the test run. \nWhat's cool about it: we can keep the old syntax. \nWhat's not cool: \n- it's may be fragile, \n- we will need to introduce a global pool of test-runs as well, so Hybrid function will be able to peek appropriate test-run,\n- behavior of the Hybrid function which was called out of the test run context is undetermined (we can just throw, actually).\n. @VasilyStrelyaev initial, without any context. But it's still doubtable and require further research\n. @VasilyStrelyaev we don't have stored values in the APIv2. You can just use plain vars now\n. # New API (25/2/2016)\nFixture defenition\njs\nfixture `My fixture`;\nor\njs\nfixture('My fixture');\nFixture page definition (if not specified then defaults to about:blank)\njs\nfixture `My fixture`\n    .page `https://example.org`;\nor\njs\nfixture `My fixture`\n    .page ('https://example.org');\nTest, actions and assertions\njs\ntest('My test', async t => {\n    await t\n        .click('#myelem')\n        .expect.element('#myelem').visible;\n});\nHybrid functions\n``` js\nvar getElementById = Hybrid(id => document.querySelector('#' + id));\nvar elem = await getElementById('myid'); // -> returns ElementDescriptor (props from recorder)\n                                                                 // Can return any serializable value as well\n// Can be passed to action (in that case evaluated in one round trip to client):\nawait t.click(getElementById('myid'))\n// Or you can pass ElementDescriptor \nawait t.click(elem);\n```\nRoles\n``` js\nvar registeredUser = Role(async t => {\n    // initialization steps\n});\n// Usage\ntest('roleTest', async t => {\n   await t.as(registeredUser);\n});\n```\nFrame switching\njs\nawait t\n         .switchTo('#frame')\n          ...\n         .switchToMain();\nScript injection\n``` js\n// Inject on all pages (and frames)\nt.alwaysInject(() => {\n   // code\n});\nt.alwaysInject('filename,js');\n// Inject ones\nt.inject(...);\n```\nAssertions\nAll assertions are async and chainable:\njs\nawait t\n    .expect.element('div').text.contains('Yo!')\n    .expect.element('span').not.visible;\nActual-expr\nexpect(value) - value,\nexpect.element(selector) - element,\nexpect.element(selector).text - element text\nexpect.element(selector).attr - element attr\nExpected-expr\n.eql(value),  .eql.element(selector). ...- deep equality\n.contains(value)- string contain substring, array contain value, object contain key, element contain text, element contain element\n.matches(regexp) - string matches regular expression\n.is.true - boolean true equality\n.is.false - boolean false equality\n.is.null - null equality\n.is.undefined - undefined equality\n.is.NaN - NaN equality\n.is.ok - non-null, non-undefined, non-false\n.is.empty - empty array, object without fields, empty strings\nElement-only:\n.visible - visibility check\n.exists - element present in DOM\n.hasClass(className) - element has one or more classname\n.disabled - element is disabled\n.readonly - input is readonly\n.checked - checkbox is checked\nNegation\n.not + expected-expr\n.is.not  for expected-expr that starts with .is\n. - Added page, but semantics has changed.\n- beforeEach, afterEach - not sure if we'll be able to finish them for the first version.\n- waits and autowaits - are in discussion and not sure if we'll be able to finish them as well. For now it will work as it worked before (autowaits always enabled).\n- Actions won't change in general, but they now accept regular functions, Hybrid functions, element descriptors returned by Hybrid functions and strings as a selector. No arrays, no jquery objects\n. @VasilyStrelyaev elements are equal if they are the same element.\n. expect(val) works with raw values. So it will examine hybrid functions as plain JS object. To convert hybrid function in the selector you will need to pass it to expect.element()\n. @VasilyStrelyaev this one is still debatable. I'm starting to think that we should use this syntax instead:\n`` js\nfixtureFixture`\n    .useClientHelper('dx', '../dx.js'); // Will be built using browserify\ntest('Some test')\n   .useClientHelper('$', '../vendor/jquery.js')\n   .body(async t => {\n       // Helpers are visible via provided alias in the scope of Hybrid function.\n       var gridElem = Hybrid(() => dx.getGrid())();\n   t.click(() => $('.btn'));\n\n});\n```\n\\cc @DevExpress/testcafe \nWhat do you guys think?\n. @kirovboris how you will access helper without alias?\n. @VasilyStrelyaev it's separate thing. We will need to introduce test-local chains for setups/teardowns, skip functionality, etc. E.g.:\njs\ntest `Some test`\n   .before(t => ...)\n   .after(t => ...)\n   .skip(browser => browser.ie)\n   .body(t => {\n      ...\n    });\n. @VasilyStrelyaev \n\nWhich can be achieved by using a flag to skip the latter. \n\nNope. Test may require additional logic. And it's used for skip and useClientHelper as well. And possibly many other things in the future.\n. > So, you can pass a hybrid function as a selector, or you can pass a regular function that will be wrapped to become hybrid, right?\nYes. I'm still not sure if it's quite clear, BTW. You can pass:\n- string selector\n- hybrid function call result\n- hybrid function (auto-invoke)\n- regular function (auto-transform to hybrid and auto-invoke)\n. @VasilyStrelyaev Yap. You need to introduce arg:\n``` js\ntest('Some test', async t => {\n    var hf = Hybrid(id => document.querySelector(id));\nawait t.click(hf('myId'));\n\n});\n``\n. @VasilyStrelyaev More likely we will allow them to study descriptors. We need to discuss descriptor content first.\n. Okey dokey =)\n.waitForElementhas default timeout that is equal to the one that specified viaelementAvailabilityTimeout, it also has optionalelementAvailabilityTimeoutsecond argument, which will override global option\n. No,waitwill just wait for the specified amount of time. We need to introducewaitForConditionaction for the predicate I guess.\n. On client of course. ButwaitForConditionhas some caveats: it should be executed correctly if it's interrupted by page load. We will need to implement similar machinery for Hybrids and it will require some significant amount of work to be done. So I suggest to postponewaitForConditionimplementation for now.\n. Nothing to discuss left here. Any further API discussion should be continued in the appropriate issues.\n. We need regresion test for this\n. \\r-\n. @AlexanderMoskovkin Doesn't seem so, I can't see how HTML escaping is tested via this modifications\n. lgtm\n. ping @AlexanderMoskovkin \n. FPR\n. FPR added test corrections suggested by @AndreyBelym \n. I'm working on this\n. I'm working on this\n. I'm working on this\n. lgtm\n. Odd, for some reason linting failed for old compiler, but it should be ignored\n. \\r-\n. lgtm\n. Blocking on #142 \n. I'm working on this\n. lgtm\n. Don't merge this, please. I have some additions.\n. Added support for--no-coloroption\n. FPR\n. FPR\n. I'm working on this\n. lgtm\n. lgtm\n. I'm missing linting so much (\n. lgtm\n. FPR\n. @helen-dikareva It's temporary solution, Later it will be moved to the separate package in context of #167 \n. FPR\n. @AlexanderMoskovkin yes, thank you for the reminder \\cc @MargaritaLoseva @VasilyStrelyaev \n. FPR\n. ping @VasilyStrelyaev @helen-dikareva \n. ping @VasilyStrelyaev \n. Somehow you are our chief tech writer and somehow this is docs. So, it's just one of those moments when we enjoy bureaucracy in it's best :sunglasses: \n. You such a party breaker! :weary: Collaborators were **documented** in this list so we'll be able to add them to the new projects and it was a general place to store GH nicknames of the team members. Since we've moved to the org account, we don't need it anymore. ~~Just merge it already~~\n. THANK YOU! :trophy: \n. I guess we can keep it as is now, since we don't have problem with them for a quite long time\n. \\r-\n. We've reached the point, when I can't understand how our browser connection management works :cry: We need to simplify things somehow, let's discuss it tomorrow.\n. I don't get it. How that's possible?\n. Got it.test-run-startis not raised byBrowserJob. I'm working on this\n. \\r-\n. lgtm\n. I guess it can be resolved now?\n. lgtm\n. lgtm\n. ping @churkin \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. ping @AlexanderMoskovkin @churkin \n. ping @churkin \n. lgtm\n. lgtm\n. I'll take a look tomorrow\n. I'm working on this.\n. I suggest to implement mechanism for the reporter plugins. It's already implemented in API, we need to figure out how to do this for the CLI.\n. I'm working on this.\n. \\r-\n. lgtm\n. \\r-\n. @AlexanderMoskovkin FPR?\n. lgtm\n. FPR\n. @AlexanderMoskovkin nope\n. lgtm\n. \\r-\n. Much much better! But there are some minor issues left \\r-\n. \\r-\n. \\r-\n. It requires rebase BTW\n. lgtm\n. ping @AlexanderMoskovkin @helen-dikareva \n. lgtm\n. lgtm\n. **Documentation notes** \nDocumentPluginHostAPI: helper methods, chalk, moment. \nDocument custom error decorator.\nDocumentnoColorsoption.\n. I'm not sure I understand howBrowser` class should be implemented. E.g. if I make saucelabs plugin and I have 50 browser there should I implement 50 classes with that interface?\n\nchrome,ie;local:chrome,ie;path:/../../,sauce:'chrome win 10',username='_',password='_'\n\nIt's a little bit inconsistent and complicated.\nMaybe?:\nsh\ntestcafe-browsers-saucelabs login {username} {pass}\ntestcafe chrome,ie,saucelabs:ie-win10,saucelabs:chrome-win10\n. Also the issue with the class approach is that you need to pass Browser base class somehow and user should not forget to extend their class with provided class. That's why we choose plain object + mixin approach for reporters. It would be nice to have it here as well: just export object and testcafe wil mixin stuff in in it \n. >  listAvailableIDs\nMaybe listAvailableAliases. Since we use term alias for run configurations. Then plugin creates browser instance via open which returns instance id\n. I'm working on this\n. @helen-dikareva Shouldn't we change anything in code because of BC in hammerhead?\n. lgtm then\n. @DevExpress/testcafe Can someone else take care of this?\n. @AndreyBelym thanks!\n. Please, review without me\n. @churkin Any plans for release?\n. lgtm\n. Just use unref for hearbeat timeouts (and other timeouts, if we have them): https://nodejs.org/api/timers.html#timers_unref @DevExpress/testcafe can someone take care of this?\n. And shouldn't we remove src/client/deps/jquery now?\n\\r-\n. \\r-\n. lgtm\n. ping @churkin \n. FPR\n. ping @AlexanderMoskovkin \n. While Andrey is not here, maybe @helen-dikareva could review this?\n. @helen-dikareva Thank you\n. lgtm\n. I guess it shouldn't be part of testcafe package and should be implemented as external helper\n. \\r-\n. @VasilyStrelyaev check comments, please\n. FPR qunit failed because of Chrome 47\n. ping @AndreyBelym \n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. \\r-\n. FPR?\n. lgtm\n. \\r-\n. \\r-\n. Doesn't seems like an accidental fail. One test doesn't work in iOS browsers\n. lgtm\n. I'm working on this\n. lgtm\n. Fixed in #231\n. lgtm\n. @AlexanderMoskovkin you can write functional test already\n. Yep\n. \\r-\n. lgtm\n. I'm working on this\n. Blocked on #265 \n. I'm working on this.\n. > If you need to imitate the browser's behaviour when a user clicks the Cancel button, use the following version of the user action.\nThis is something new to me. What does this mean? \\cc @churkin @AlexanderMoskovkin \n. Let's call it clearUpload or smthg like this then.\n. I still thinking about renaming upload to setUpload. Not quite sure though\n. ???\n. Maybe setFilesToUpload?\n. I agree\n. Yes to both questions. We can close it now\n. I'm working on this\n. We've decided to not use custom assertion system\n. - [x] Add cookie jar switcher on hammerhead side\n- [x] Implement Role constructor\n- [x] Implement useRole\n\nuseRole algorithm:\n1. If testRun in inRoleInitializer phase then throw error and abort these steps;\n2. Let bookmark be result of createBookmark routine.\n3. If testRun.currentRoleId is not null then save previous role extended state snapshot with testRun.currentRoleId as a key;\n4. If there is saved extended state snapshot for the role.id then use it, otherwise run testRun.getStateSnapshotFromRole routine and use obtained snapshot.\n4. Let testRun.currentRoleId be role.id.\n5. Call bookmark.restore routine.\ncreateBookmark routine\n1.  Let \n     - bookmark.dialogHandler be testRun.activeDialogHandler, \n     - bookmark.iframeSelector be testRun.activeIframeSelector, \n     - bookmark.speed be testRun.speed.\n     - bookmark.ctx be testRun.ctx\n     - bookmark.fixtureCtx be testRun.fixtureCtx;\n2. If testRun.activeIframeSelector is not null then execute SwitchToMainWindowCommand\n3. Get current page URL and store it as bookmark.url\n4. Return bookmark\nbookmark.restore routine\n1. Let prevPhase be testRun.phase\n2. Switch testRun to inBookmarkRestore phase. \n3. If bookmark.dialogHandler is not equal to testRun.activeDialogHandler execute SetNativeDialogHandler command with bookmark.dialogHandler value.\n4. If bookmark.speed is not equal to testRun.speed then execute SetTestSpeed command with bookmark.speed value.\n5. Navigate to bookmark.url.\n6. Let testRun.ctx be bookmark.ctx and testRun.fixtureCtx be bookmark.fixtureCtx.\n7. If bookmark.iframeSelector is not equal to testRun.activeIframeSelector then execute SwitchToMainWindow command if bookmark.iframeSelector is null or  SwitchToIframe command with bookmark.dialogHandler value otherwise.\n8. Switch testRun to prevPhase \ntestRun.switchToCleanRun routine\n1. Let testRun.ctx and testRun.fixtureCtx be empty objects.\n2. Set null state snapshot for testRun;\n3. If testRun.activeDialogHandler is not null then execute SetNativeDialogHandler command with null value.\n4. If testRun.speed is not equal to testRuns.opts.speed then execute SetTestSpeed command with testRuns.opts.speed value.\ntestRun.getStateSnapshotFromRole routine\n1. Let  prevPhase be testRun.phase.\n2. Switch testRun to inRoleInitializer phase;\n3. If role.phase is uninitialized then run role.initialize routine, otherwise if role.phase is pendingInitialization then wait for phase to change to initialized.\n4. If role.initErr is not null then throw it and abort these steps;\n5. Switch testRun to prevPhase ;\n6. Return role.stateSnapshot\nrole.initialize routine\n 1. Set role.phase to pendingInitialization;\n 2. Call testRun.switchToCleanRun routine.\n 3. Navigate to role.loginPage;\n 4. Execute role.initFn; \n 5. If there is an execution error then save it to role.initErr, otherwise get current testRun state snapshot and assign it to role.stateSnapshot;\n6. Set role.phase to initialized;\n\n\n[ ] test.useRole\n\n[ ] fixture.useRole. @p-bakker \nI've only made some refactorings to the moment to prepare construction site for the feature. I've decided to outline things before diving into actual implementation, because there are lots of things to consider for this feature. However, I believe we'll be able to ship it in alpha build somewhere in the end of the next week.. Things that left to consider:\n\n\nDo we need Role.anonymous()? I still struggle to believe that Role() (constructor without parameters) is a comprehensive API for that. \n\n\nIs loginPage role constructor parameter should be mandatory? What about scenario when you use server code to create new user and only afterwards navigate to login page? \n. Things that left to consider:\n\n\nDo we need Role.anonymous()? I still struggle to believe that Role() (constructor without parameters) is a comprehensive API for that. \n\nIs loginPage role constructor parameter should be mandatory? What about scenario when you use server code to create new user and only afterwards navigate to login page? \n. @helen-dikareva good point. @helen-dikareva We should keep debugging even in role initializer. @p-bakker We plan to release it today. I'll add note here once it will be available.. @p-bakker \nWhile at that, I realized a function to get the active role would be helpful. Is that already included/possible?\n\n\n\nWe haven't considered such scenario. What's the use case for this?. @p-bakker So, if I understood you correct you just basically have URL-based session management? No cookies involved?. Interesting, so everything will work fine if we'll store URL in Role to which login action led and then on Role switch we redirect to this URL?. @p-bakker OK, it seems easy to implement. I'm only struggling to come up with meaningful option name for such behavior. Any suggestions?. @p-bakker Unfortunately functionality that allows to preserve URL will not make it into next release - we are closing sprint today. However, I've issued a separate ticket for it and more likely we'll implement it in the beginning of the next sprint: https://github.com/DevExpress/testcafe/issues/1339. Meanwhile, you can use following workaround:\n```js\nimport { t, Role, ClientFunction } from 'testcafe';\nconst getLocation = ClientFunction(() => location.href);\nconst someRole = Role('http://page', async () => {\n      // init steps...\n  someRole.preservedUrl = await getLocation();\n\n});\nasync function switchToRoleAndKeepUrl(role) {\n    await t.useRole(role);\nif (role.preservedUrl)\n    await t.navigateTo(role.preservedUrl);\n\n}\nfixture Fixture;\ntest('Test', async () => {\n     //...\n      await switchToRoleAndKeepUrl(someRole);\n     //...\n});\n. @p-bakker I can't reproduce it on my side, this works fine for me:js\nimport { t, Role, ClientFunction } from 'testcafe';\nconst getLocation = ClientFunction(() => location.href);\nconst someRole = Role('http://google.com', async () => {\n    someRole.preservedUrl = await getLocation();\n});\nasync function switchToRoleAndKeepUrl (role) {\n    await t.useRole(role);\nconsole.log('session acivated', role.preservedUrl);\n\nif (role.preservedUrl)\n    await t.navigateTo(role.preservedUrl);\n\n}\nfixture Fixture\n    .page https://devexpress.github.io/testcafe/example/;\ntest('Test', async () => {\n    await switchToRoleAndKeepUrl(someRole);\n});\n``. @p-bakker Did you manage to make it work on your side?. Yep\n.switchToIframe` itself. It's like action error, we fail action if selector doesn't exists.\n. @AlexanderMoskovkin Can we also catch canceled events? @churkin said that it's quite complicated, but as far as I understand we can still do it in some cases? It would be nice to have this heuristics as well.\n. \\r-\n. lgtm\n. ping @AlexanderMoskovkin \n. \\r-\nTests fail. And let's enable eslint for those newly rewritten files.\n. It looks so much better. God bless ES6\n. lgtm\n. \\r-\n. @AlexanderMoskovkin BTW, what SL browser matrix will show now? Results for the qunit or for the functional tests? Or some cumulative results?\n. Good\n. \\r-\n. lgtm\n. It doesn't run on Travis yet, right?\n. Btw tests fail on iOs. And I thought we will have separate travis task for this\n. Guys let's switch to the node:stable for qunit and functional tests in this PR\n. I wonder why it took so long to accomplish tests. Each test takes ~5s. There are 12 tests, so it should take ~60s. Meanwhile cumulative time is 3m. \\cc @AlexanderMoskovkin @georgiy-abbasov \n. lgtm\n. We need build-matrix for this in readme I guess. \\cc @AlexanderMoskovkin @georgiy-abbasov \n. lgtm\n. Don't forget about regression test for this one\n. Seems like it doesn't help: https://travis-ci.org/DevExpress/testcafe/jobs/99439737 \\cc @helen-dikareva \n. It needs regression test\n\\r-\n. lgtm\n. I'm working on this\n. Ok, I've kinda figured out how we can do things right. Ping me tomorrow, pls\n. ## Client driver\n- [x] Create src/client/driver lib.\n- [x] Driver waits page ready event and sends ready hanging message to test run\n- [x] Once it get's message it executes appropriate automation/assertion\n- [x] Save executingCommand flag to true and run automation\n- [x] Set xhr/page load barrier\n- [x] If page not unloaded then send ready with the success status, set  executingCommand flag to false \n- [x] If we have a new page load, check executingCommand flag, if it's true, repeat actions from the step above.\nProcessing commands\n\n[x] Commands should be defined as classes for the clarity, so we will have defined set of fields\n[x] On client we will need to get elements from selectors contained in command, for this we should use our querying mechanism (try to obtain element within 10 seconds).\n\nFirst steps\n\nStart implementing driver \nStart implementing click action in both raw and v2 format (implement options validation, etc.)\nFigure out minimal required assertions mechanims and implement it.\nCreate functional tests for click\n. Closed in #263\n. lgtm\n. I'm working on this.\n. lgtm\n. \\r-\n. \\r-\n. lgtm, just add BrowserSet update pls\n. lgtm\n. This is because of default EventEmitter subscribers limit (see: https://nodejs.org/api/events.html#events_emitter_removelistener_event_listener). It's not a big deal to disable this warning. On the other hand, I wonder which emitter shows warning, because everything was designed to avoid big number of subscribers for the emitter. So this require investigation.\n. Need to cancel subscriptions once race is resolved (see: https://github.com/inikulin/promisify-event)\n. \\r-\n. lgtm\n. @AndreyBelym Do you willing issue a PR to promisifyEvent? =) \n. \\r-\n. lgtm\n. \\r-\n. @testcafe-build-bot \\retest\n. \\r-\n. \\r-\n. Awesome, lgtm.\n. ping @AlexanderMoskovkin @MargaritaLoseva @churkin \n. @VasilyStrelyaev I guess I should transfer https://github.com/VasilyStrelyaev/testcafe-gh-page-assets before merging, so you'll be able to correct URL in context of current PR.\n. @VasilyStrelyaev Oh, transfer email has expired. BTW, why you transfering it to me? You can add me to project collaborators so I'll be able to transfer it directly to the DevExpress org\n. @VasilyStrelyaev nevermind, just promoted you to owners in DevExpress org. You can transfer on your own now.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Tests pass now\n. ping @churkin \n. > build the website locally \n\nWe have task for this already, so it's not a big problem I think\n. @MargaritaLoseva Why close?\n. Can you link PR that closes it here, pls?\n. Let's call it \"Using TestCafe programmatically\" to avoid confusion with the actual test API. With current approach this shouldn't be a common demand to use this thing BTW. \n. @VasilyStrelyaev TEST API missing Actions. Report Test Utils is the part of the Reporter Plugins and I'm not sure if it's need dedicated section, since there will be pluginTestUtils which are used for plugin testing, so it will be described in context of the plugin creation. EXTENDING TESTCAFE should include Selector extensions as well.\n. @mjhea0 I'm not sure it will be possible to cooperate mocha with TestCafe, since later uses a lot of magic in test and fixture calls, so you will need to use them, instead of mocha's methods. However, we have a feature request open to support BDD style tests (nested fixtures + reporting): https://github.com/DevExpress/testcafe/issues/792 Add your \ud83d\udc4d to the issue if you are interested and we consider adding it to the planned feature list.. @mjhea0 We don't have any recipes for circle at the moment.. @mjhea0 Sure, feel free to share anything you have.. I guess so\n. Implemented in #378\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. @testcafe-build-bot \\retest\n. \\r-\n. \\r-\n. @VasilyStrelyaev What about this one: https://github.com/DevExpress/testcafe/pull/298#discussion_r51146210 ?\n. @VasilyStrelyaev it was not about text in brackets. I don't like the whole combination of the sentences:\n\nYou can now use it to create other entities required to execute tests: the remote browser connections (used for connecting remote devices) and the test runner.\nThe test runner is another important thing used to configure and launch test runs.\n\nanother important thing - what was the first important thing? I don't get it from this text.\n. > That's... weird... 'Cause there's not only sentences but whole paragraphs that can be linked in text. In our instance, the second paragraph referred to what the entire first paragraph was about - TestCafe server instance.\nThis would be fair if you told only about server instance in that paragraph. However, you've introduced two more entities.\n. \\r-\n. @testcafe-build-bot \\retest\n. lgtm \\cc @DevExpress/tescafe-docs \n. \\r-\n. lgtm\n. \\cc @DevExpress/testcafe \n. \\r-\n. \\r-\n. \\r-\n. @DevExpress/testcafe Please, proof read\n. @testcafe-build-bot \\retest\n. lgtm\n. Selection tests fail here as well... So, it's not PR-specific. We need to do something to stabilize them. \\cc @AlexanderMoskovkin \n. \\r-\n. lgtm\n. \\cc @DevExpress/tescafe-docs \n. I'm working on this.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Selection tests is a disaster, guys :cry: \n. \\r-\n. FPR\n. Since @churkin is missing today, @kirovboris  can you review instead. please?\n. Rebased\n. FPR\n. ping @churkin @AlexanderMoskovkin @kirovboris \n. \\r-\n. Do we have any kind of clean-up algorithm? So we will not overflow session storage?\n. > Currently we cleaning up storage, when test run is done, or it failed with error. Also, it is implemented using sessionStorage so it will be cleaned by the browser after tab with the page will be closed.\ngood\n. lgtm\n. \\r-\n. \\r-\n. \\r-\n. To fix tests you need to rebase onto latest upstream master\n. @MargaritaLoseva Please, address issues described in this comments: https://github.com/DevExpress/testcafe/pull/314/files#r51394905\n. \\r-\n. lgtm\n. > I propose to use the fs.writeFileSync method instead\nSounds good to me\n. We need a comment why we do it. So we will not accidentally rewrite it back to async version.\n\\r-\n. lgtm\n. I guess it should be blocking for both pending docs PRs\n. lgtm\n. \\r-\n. lgtm\n. BTW, we need a cross-link here to --list-browsers option in CLI that lists aliases of the available browsers\n. lgtm\n. @VasilyStrelyaev I have an idea how we can deal with this burden. Ping me tomorrow, please.\n. Yap, this whole thing is quite fragile. Do you have any ideas about how we can make things better and bulletproof?\n. > Maybe we need to remove browserJob from jobQueue when it emits done, or when browserJob.popNextTestRunUrl returns null.\nAFAIK there were some problems with this options already\n. lgtm\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. BTW, can we rename MouseActionOptions to the MouseOptions for the consistency\n. @helen-dikareva Why not? It's exactly what describes mouse behavior. BTW, why others are called MoveOptions, etc. then?\n. BTW, about image, there it has been taken from? Does it have any licensing information? We can't use image that is not in a public domain.\n. Please, use images from https://commons.wikimedia.org then.\n. BTW, I suggest you to talk with the ASP guys and ask them there whey take images for the demos\n. \\r-\n. - #356\n\\r-\n. \\r-\n. Overall lgtm. Just a minor stylistic issue.\n. lgtm\n. > After some research it was found out, that css on test pages can extend testcafe-client-ui properties\nIt's bug in our stylesheets then\n. I don't get it. We have a generic reset rule. Why we can't add\ncss\nfloat: none;\nto it?\n. > we can\nawesome :smile: \n. @testcafe-build-bot \\retest\n. Press tests are extremely unstable now. I found fails nearly in all PRs. Seems like it's caused by refactoring\n. \\r-\n. lgtm\n. lgtm\n. Blocking on #353 \n. After some time it's clear what there will be no benefits from such option.\n. @georgiy-abbasov You should not sacrifice integrity and correct usage of tooling to achieve pretty printing for the edge cases.\n. I don't get it, so, what's the problem? \n. @georgiy-abbasov There are 3 options here and it feels like 1 doesn't belong here. Am I wrong?\n. > In that case i have false sense, that test pass only because shouldFail option enabled\nAaah, I've finally got it. You've messed it up. But in different way this time\n. When we say Should pass or Should fail we talk about underlying tescafe test, not the mocha test. Is it clear?\n. BTW shouldFailis the helper flag, it shouldn't leak to the test name. It should be just:\nShould fail when performing click action on the missing element\n. Why close?\n. @kirovboris Related source code is always a js-code. So we can always escape it before inserting into template (since template is HTML)\n. @AndreyBelym Yap, any character except whitespace, > and / is perfectly valid in HTML5 tag name: https://github.com/inikulin/parse5/blob/master/lib/tokenizer/index.js#L767\n. lgtm\n. FPR\n. \\r-\n. lgtm\n. \\r-\n. Will be updated in context of #361 \n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. This is currently blocking on the new API implementation\n. @AlexanderMoskovkin I think we can move Update reporters with new errors test data-part to separate issues, because it's not MVP-blocking.\n. Yep\n. @testcafe-build-bot \\retest\n. FPR\n. @AlexanderMoskovkin good catch\n. @AlexanderMoskovkin @kirovboris Can be merged, there were no changes except commit message. Just unstable client test.\n. Commit message and PR name misses closes #issue-num-directive\n. \\r-\n. @DevExpress/testcafe-docs Please, take a look someone else for now, please. I'm a little bit busy and will take a look a later.\n. @testcafe-build-bot \\retest\n. \\r-\n. @MargaritaLoseva ping me tomorrow to review this one, please\n. \\r-\n. @testcafe-build-bot \\retest\n. Overall looks good, just a minor issue.\n@DevExpress/testcafe-docs please, take a look\n. lgtm\n. I don't get it. How happened that hammerhead update broke the build?\n. > The method was a workaround for a bug was appearing in Firefox 30 and below, so presumably it's safe to get rid of it.\nI understand. But I'm wondering how it's happened that we've introduced breaking change in HH and decided to publish it without major version bump, screwing the whole CI.\n\\cc @churkin \n. \\r-\n. \\r-\n. lgtm\n. \\r- We need tests for TypeOptions as well\n. \\r-\n. lgtm\n. I'm working on it\n. After thinking about it more I believe it should be a by design behavior. Imagine I have a project with the tests in the test dir. I do cd ./test && testcafe chrome ./*.js. I should use local testcafe anyway which is in ../node_modules/testcafe relative to this dir.\n. \\r-\n. lgtm\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. I'm working on this\n. _onFatalError rewrites err.pageUrl with the proxied URL for the screenshots: https://github.com/DevExpress/testcafe/blob/master/src/client/runner/runner.js#L142 \n. @testcafe-build-bot \\retest\n. lgtm\n. > It is fixed in the github repo yet\nYou mean already?\n. \\r-\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin you need to rebase to fix problem with left-pad\n. \\r-\n. BTW, if we move barriers to core, shouldn't we move automations to core as well, so we will not need to depend on runner?\n. ok\n. \\cc @DevExpress/testcafe This one is huge and extremely important. It would be if all of you take a look\n. \\r-\n. \\r- \nJust some minor style nits\n. lgtm\n. ping @churkin \n. Can be implemented as plugin.\n. - [x] Extract APIBasedTestFileCompilerBase base class\n- [x] Implement TypeScriptTestFileCompiler\n- [x] Callsites\n- [x] Implement TS definitions\n- [x] CLI *.ts file support\n- [x] TS definition descriptions\n. - [x] Extract APIBasedTestFileCompilerBase base class\n- [x] Implement TypeScriptTestFileCompiler\n- [x] Callsites\n- [x] Implement TS definitions\n- [x] CLI *.ts file support\n- [x] TS definition descriptions\n. \\r-\n. lgtm\n. @MargaritaLoseva It requires rebase\n. lgtm\n. I'm working on this\n. lgtm\n. @AlexanderMoskovkin Note: we now initialize options with the object passed to the constructor. Also, we will not need server-side classe, as we discussed previously.\n. Closing since it's not relevant to this repo anymore, moved to legacy API repo: https://github.com/DevExpress/testcafe-legacy-api/issues/14\n. ~~\\r-~~\nlgtm\n. \ud83d\udc4c \n. lgtm\n. I guess this can be implemented now?\n. I guess this can be implemented now?\n. lgtm\n. I don't get it. How it could be a consequence of #521 when #521 is not fixed yet?\n. Is this test run in some PR. If yes, in which one?\n. So why we need this one if we have DevExpress/testcafe-hammerhead#521?\n. @AlexanderMoskovkin why it's in APIv2 MVP? Is this somehow completely breaks any API? Or it's just a severe bug? If later - it's shouldn't be in MVP milestone\n. I'll take it from the milestone then. For server bugs we just use important label.\n. @AlexanderMoskovkin Do I understand right that it was fixed by #759?\n. What does this mean? Is this should be done in context of some automation?\n. Isn't uploadFile already implemented?\n. idk, let's bikeshed \n. Moved waitForCondition in separate ticket: https://github.com/DevExpress/testcafe/issues/542 We don't need it in MVP\n. Closed in favor of #441\n. \\r-\n. @testcafe-build-bot \\retest\n. There were some new tests added in the latest PR, it would be nice to rebase and take a look if they require fix.\n. > Did you mean the latest open PR ?\nNope\n\nthis PR is based on the latest commit in the master branch\n\ngood\n. >  @inikulin do you agree or it doesn't matter?\nYes\n. lgtm\n. FPR\n. FPR\n. Looks legit. \n. t.click().wait().handleAlert()\nNo need for this. We either have next action or end of test. In both cases we will fail with unhandled alert.\n. > 2) What I should do if I don't care about order of different dialog types?\nWell, you should. It's like you don't care about ordering of actions\n. > 1 - Nice question. I suppose we should ignore wait in this case. In other words t.click().wait().handleAlert() and t.click().handleAlert().wait() is the same for us. Otherwise it may be too complicated.\nWhy?? We should fail on wait with handleAlert callsite. You have unhandled dialog.\n. But, I think no. We've discussed previously that wait actions are observational actions. So, I guess we should make exception for them\n. I guess we will wait for 10 seconds by default for the dialog to appear, like we have with action elements?\n. I suggest t.handleAlert(string) and t.handlerAlert(regularExpression) to check text.\n. > we are waiting for 10 seconds between clicks or until alert dialog is appeared. It's ok for me\nIf 10 seconds exceeds after the first click and dialog doesn't appear - we fail, right?\n. Sounds good to me\n. It should be:\njs\n dialogHandlers: {\n    alert: true | false,\n    confirm: { result: true | false }  | false ,\n    prompt: { result: String | null } | false,\n    beforeUnload: true | false\n}\n. And I guess it should be handleDialogs instead of dialogHandlers\n. >  so what about onHandled ?\nLet's not do this in MVP\n. > Should setAlertDialogHandler and setBeforeUnloadDialogHandler be without argument?\nIt's should accept client function as well, because we need to check their text\n\nI suppose a setDialogHandler function should get a ClientFunction as an argument. \n\nWe should have the same machinery as for selectors: if regular functions is passed - try to convert it to client function.\n\nAnd maybe setDialogsHandler functions should be synchronous?\n\nHow you will pass handler to client after page load then?\n. I would like to not introduce t.getLastDialogInfo() if handler has unexpected text then you will throw from within handler.\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. Require change to functional tests due to #445 \n. \\r-\n. lgtm\n. I was able to localize the issue. IE11 hangs on uncaught error test. \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Ok, I give up trying to fix js-error test hang up in context of this PR. We need to create separate issue and WIP PR with IE logging enabled to figure out the cause. This issue is not caused by this PR anyway.\nFPR (https://github.com/DevExpress/testcafe/pull/457#issuecomment-211549607 - successful test run).\n\\cc @AlexanderMoskovkin @helen-dikareva @AndreyBelym \n. We already have issue for this\n. https://github.com/DevExpress/testcafe/issues/240\n. Looks good, just some minor style issues.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. @AlexanderMoskovkin FYI keeping just unstable tests doesn't work. BTW, you can filter log entries to the single browser, specify DEBUG=\"testcafe:test-run:IE*:*\"\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I'm afraid it wasn't fixed\n. I was talking about this one: https://travis-ci.org/testcafe-build-bot/testcafe/jobs/124314491 (it's latest test run in this PR) and it still fails with the same error\n. lgtm, then =)\n. lgtm\n. \\cc @AndreyBelym \n. > Need to be careful with ,: it may be contained in paths on Unix. Tested on MacOS and Ubuntu.\nI guess we should enforce  \" for path then\n. Oh, just found out that we need to specify chrome only for doubleClick as well. @AndreyBelym can you do this on context of this PR as well?\n. And rightClick...\n. @testcafe-build-bot \\retest\n. Update: nevermind. I thought we have #445 merged\n. lgtm\n. Require change to functional tests due to #445 \n. \\r-\n. lgtm\n. \\r-\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. @helen-dikareva Tests fail due to linting error\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Seems like drag command tests are hanging now \\cc @AlexanderMoskovkin \n. @testcafe-build-bot \\retest\n. \\cc @VasilyStrelyaev check comments please\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. \\r-\n. Overall lgtm, just a minor style issue\n. lgtm\n. @AlexanderMoskovkin I have no idea what this PR fixes\n. lgtm then\n. @georgiy-abbasov  Can you list reviewers, please?\n. lgtm\n. I like it. I guess we will use determinate indicator for elements waiting and indeterminate  for page loads.\n. Not sure if we should implement it, since it's violates black-box testing paradigm. Anyway it can be implemented via ClientFunction by user. Closing for now, until we'll not get significant demand from users.\n. lgtm\n. lgtm\n. lgtm\n. requires rebase\n. @helen-dikareva Tests are broken due to node v6.0.0 release. I'm working on the fix. Meanwhile, I suggest you to switch version in .travis.yml to 5.\n. @AlexanderMoskovkin I haven't participated in review. Is there something specific I need to take a look on?\n. \\r-\n. Just a minor issue, but overall lgtm\n. lgtm\n. lgtm\n. ping @AlexanderMoskovkin \n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. I guess you need to export FormattableAdapter so you will be able to use it externally, like we do for plugin testing utils: https://github.com/kirovboris/testcafe-phoenix/blob/error_formatting/src/index.js#L47 You can export embeddingUtils\n\\r-\n. Also method is not private, since it will be used externally, so you don't need to add underscore before it's name\n. lgtm\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Let's rename it to driverStatus. executed to isCommandResult. fnResult to result. pendingCommand to pendingDriverTask\n. \\r-\n. What's happened with tests?\n. \\r-\n. We still have js-error issue =((((((((((\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. We need docs both for the option in programmatical interface and for this one \\cc @VasilyStrelyaev \n. --timeout is not quite good name for the option. We will have --timeout for the test later. Also it doesn't quite descriptive in that case.\n\\r-\n. \\r-\n. lgtm\n. >  For instance, something that includes contentEditable elements.\nI guess we can not care much about page looking as a real page. Moreover we can have multiple example pages. E.g. copy existing one for getting started (I don't think we need any server-side functionality for it). When we can create some additional example pages for specific actions, e.g. to illustrate contentEditable typing we can just create single page with some popular online editor embedded on it and so on.\n. > BTW, is there a fast way to copy a page?\nYes:\n- Open HTML markup in editor of your choice. \n- Set focus to the editor window\n- Use the following key combination: CTRL+A, CTRL+A\n- Create destination file in your editor\n- Focus it's window\n- Press CTRL+V\n- Decorate it with your CSS\n  ...\n- PROFIT!\n. > Is it okay and I'm calling the designer\nWhat do you mean by that?\n. Unfortunately, I can't access your URL from home\n. > Try http://strelyaev-w8.corp.devexpress.com:8080/testcafe/example\nI don't have VPN here\n. \\r-\n. \\r-\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. Closing in favor of #955 \n. FPR. Unstable mobile client test failed.\n. @testcafe-build-bot \\retest\n. \\\u0441\u0441 @AlexanderMoskovkin @helen-dikareva \n. @helen-dikareva nope, there were no new comments introduced\n. \\r-\n. ok\n. \\r-\n. @helen-dikareva We should use same machinery as for actions. Do we store start time in localStorage there? If not - we should I guess\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. Runner.stop() cancels all task produced by runner. By cancelling Runner.run() promise you cancel individual task.\n. I'd rather go with example like this:\n``` js\nconst taskPromise = runner\n    .src('tests/fixture1.js')\n    .browsers([remoteConnection, 'chrome'])\n    .reporter('json')\n    .run();\nawait taskPromise.cancel();\n```\n. > emm.... I was thinking of something more real-life but if it looks too complicated...\nThis doesn't look like a real life example for me. We use it to cancel task in the studio, but I have no idea how it will be adopted by users. I'd rather describe the possibility of doing so without any premise. I believe it will be really uncommon scenario, so it shouldn't go to recipes. We need just to mention that we have such API\n. \\r-\n. \\r-\n. lgtm\n. ping @VasilyStrelyaev \n. @VasilyStrelyaev To be more precise it's self-invocked anonymous hybrid function without args. It has the same machinery as hybrid function (since it's uses them internally). But I think we should avoid using anonymous hybrid function term in docs because such definition might be confusing. On the one hand it's a shorthand for Hybrids, on the other hand it's improved eval which exists in other frameworks and might be more familiar for the users\n. FPR\n. I guess it can be merged now\n. \\cc @DevExpress/testcafe I still don't have a good idea about what we should do if page unload occurs during Hybrid execution. There are two options here:\n- On page load return undefined as hybrid result, since it was not able to complete on given page\n- Re-execute hybrid on new page\nAlso I think we should use some part of the already machinery for the actions (do not send results on unloads, store result in local storage, etc.). \nSo, let me know what do you think?\n. > I think re-executing hybrid on new page can hide problems in a test, so i prefer the first way.\nYes, but what if hybrid execution happens at the moment of some buffer-redirect page (like on gmail login) and returns undefined? It will be quite confusing.\n. We logged in on gmail. Our page load barrier triggers next action which is Hybrid execution. We execute hybrid. During login gmail redirects through number of pages and at this moment we execute hybrid - user receives undefined result.\n. Also, it's not correct semantically to have function result affected by side effects. If function has determined behavior (it's code) it's result should always be consistent within this determined behavior.\n. Well, the more we discussing it the more I like the second option. We trying to make user to not care about page transitions and side effects, right? And then he executes hybrid and receives error because of page load.\n. > Can we put a barrier, that prevents a page from changing the location, on beforeunload event, when a Hybrid execution start, and change the location after it is finished?\nHybrid function execution is an observation action - it's shouldn't affect page state\n. > I think that behaviour should be customizable.\n\nIf redirect expected then we should execute hybrid on the next page.\nIf not then we shoue raise the error.\n\nToo complicated.\n. > Can we put a barrier, that prevents a page from changing the location, on beforeunload event, when a Hybrid execution start, and change the location after it is finished?\nAlso, it doesn't solve issue with buffer-redirect pages. I don't want state of buffer-page, I need state of the page once I've logged in\n. > As it looks for me, Hybrids execution will be far more predictable, if we will just execute in place where we are now. If we cannot finish it, we should just to inform the user about the incident. Maybe throw an error, or introduce a status code.\nBut it breaks the paradigm we use for actions. I don't understand why we allow it for actions, but don't allow it for hybrids. Also, what about Hybrids passed as action selectors? In that case they will have different behavior which is yet again inconsistent\n. > What if hybrid function executing leads to page location changing? If we will re-execute it after redirect it'll be an endless loop.\nI like this argument.\n. So, in case of page unload we need to throw Client code execution was interrupted by page change error?\n. @AlexanderMoskovkin can you take care on this issue, since you have the best knowledge of the action-related driver code.\n. > BTW I feel like that Hybrids are far more powerful to restrict them for observation use only.\nWell, in functional testing good test shouldn't perform any actions by code, it should use user emulated actions. I think we should stick with paradigm that Hybrids should be used primarily for the observation. Otherwise we need to treat them as actions and e.g. they should be rejectable by page errors (but I believe it's not what you expect in most cases).\n. I'm working on this\n. Ok, I would like to discuss how element descriptor will look like. Here are descriptors for different node types.\nElement\njs\n{\n    nodeType: 1,\n    tagName: String,\n    attributes: { name: value },\n    namespaceURI: String,\n    hasChildren: Boolean,\n    childrenCount: Number,\n    getParentNode: Hybrid,\n    getChildNodes: Hybrid,\n    visible: Boolean,\n    width: Number, // element own width in pixels\n    height: Number, // element own height in pixels\n    offsetWidth: Number,\n    offsetHeight: Number,    \n    focused: Boolean,\n    hasClass: Function,\n    text: String,\n    textContent: String,\n    computedStyle: { prop: value },\n    style: { prop: value }\n}\nCommentNode\njs\n{\n    nodeType: 8,\n    text: String,\n    getParentNode: Hybrid\n}\nTextNode\njs\n{\n    nodeType: 3,\n    text: String,\n    getParentNode: Hybrid\n}\nDocumentFragment\njs\n{\n    nodeType: 11,\n    getChildNodes: Hybrid\n}\nDocument\njs\n{\n    nodeType: 9,\n    getChildNodes: Hybrid\n}\n\\cc @DevExpress/testcafe \n. Ok, I would like to discuss how element descriptor will look like. Here are descriptors for different node types.\nElement\njs\n{\n    nodeType: 1,\n    tagName: String,\n    attributes: { name: value },\n    namespaceURI: String,\n    hasChildren: Boolean,\n    childrenCount: Number,\n    getParentNode: Hybrid,\n    getChildNodes: Hybrid,\n    visible: Boolean,\n    width: Number, // element own width in pixels\n    height: Number, // element own height in pixels\n    offsetWidth: Number,\n    offsetHeight: Number,    \n    focused: Boolean,\n    hasClass: Function,\n    text: String,\n    textContent: String,\n    computedStyle: { prop: value },\n    style: { prop: value }\n}\nCommentNode\njs\n{\n    nodeType: 8,\n    text: String,\n    getParentNode: Hybrid\n}\nTextNode\njs\n{\n    nodeType: 3,\n    text: String,\n    getParentNode: Hybrid\n}\nDocumentFragment\njs\n{\n    nodeType: 11,\n    getChildNodes: Hybrid\n}\nDocument\njs\n{\n    nodeType: 9,\n    getChildNodes: Hybrid\n}\n\\cc @DevExpress/testcafe \n. Well, it doesn't have width property as well, but we add it to simplify things\n. BTW, I wonder if we should add textContent and innerText properties. Difference described here: https://developer.mozilla.org/en/docs/Web/API/Node/textContent\n. @AlexanderMoskovkin it makes sense if you want to assert various properties of element. So you will end up with two hybrids and two hybrid calls.\n. > @inikulin I have a question, what the text property returns. It works the same way as textContent \nI guess it should be more like innerHTML - ignore invisible nodes and <script> and <style> elements content. I guess we need textContent in addition\n. > What about innerHTML ?\nCan be really huge chunk of data. And I can't figure out common usage scenarios from the top of my mind\n. BTW, should we have computedStyle and style properties?\n. @churkin This is an example of lazy poorly written test. It doesn't checks particular changes (e.g. new button appeared), but just checks for any markup changes. You can always create hybrid for innerHTML. But it's really bad usage example.\n. BTW, do we filter hammerhead attributes set on element in sandbox?\n. @churkin I'd rather not add it to descriptor - too huge overhead for each element\n. I mean both. AFAIK in old version we had only computed styles in recorder\n. BTW, I guess we need Location object descriptor as well\n. @churkin https://github.com/DevExpress/testcafe/issues/524#issuecomment-223017242?\n. BTW, do we need additional properties (or subclass with addtional properties) for inputs? Like value, checked, etc.?\n. Just figured out that pure Hybrids concept bring us back to situation then we have action argument which can't be awaited by action. E.g.:\n``` js\nconst someElement = await someHybrid(); // returns null, because e.g. didn't appeared yet \nawait t.click(someElement);\n```\nWhat we can do:\nOption 1\nIntroduce special kind of hybrid: Selector. Forbid elements as return values in regular hybrids with appropriate message: if you want to return DOM nodes use Selector. Selector will behave like hybrids, but will expect null or DOM node as return value and will enable our standard element waiting mechanism. This also cures another issue: we've forbidden hybrids to be executed in beetwen page loads, but it will be possible with implicitly declared selectors.\nOption 2\nKeep everything as is and suggest people to use t.waitForElement. \nOption 3\nUse \"magical ways\" of hybrid's execution with actions:\njs\nt.click(someHybrid()) // don't execute hybrid immidiately, wait for next tick, check if was passed to action and use hybrid function as selector, instead of running hybrid machinery uses element waiting mechanism\nStill has a problem, then we select element before action with separate hybrid call. But can be cured by use of t.waitForElement. If we'll have custom assertions with same machinery as actions things will get even simpler. Optionally, we can forbid passing descriptors as action selectors, because they are \"state snapshots\" (BTW maybe rename it to ElementSnapshot), but allow passing hybrid promises. This will solve main problem with this approach making it most favorable.\n\\cc @DevExpress/testcafe \n. We've done here. Selector functionality and node descriptor discussion moved to #574 \n. Blocked on #524 because it will introduce new machinery by passing hybrid results to action\n. Still not sure about this one. Moved to proposals until we will not get some feedback\n. lgtm\n. Let's postpone mouse events discussion for now, since I think they are not quite important and we don't need them in MVP. The more important is t.scroll which is often used e.g. in mobile devices. What kind of scroll actions should we have:\nt.scrollDocumenToTop,t.scrollDocumenToBottom or should it have selector? Should we have t.scrollToElement version or t.scroll with offset?\n. Let's postpone mouse events discussion for now, since I think they are not quite important and we don't need them in MVP. The more important is t.scroll which is often used e.g. in mobile devices. What kind of scroll actions should we have:\nt.scrollDocumenToTop,t.scrollDocumenToBottom or should it have selector? Should we have t.scrollToElement version or t.scroll with offset?\n. > I think t.scrollDocumenToTop,t.scrollDocumenToBottom insufficiently reusable variants.\nI don't agree. The most common scenario people asked for is to scroll down the document e.g. to load additional comments/items in live feed.\n. @AlexanderMoskovkin PivotGrid team expressed a high interest in scrolling gestures. I guess we can plan it for Sprint#2. Before figuring out final API it's worth discuss it with other teams and maybe test prototypes during development with them as well.\n. lgtm\n. \\r-\n. \\r-\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin Yap, I've published publish-please 2.0 yesterday which eventually broked publish-please 1.0. (I'll issue a ticket to npm today). Everything is fine now\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. Also, we shouldn't repeat ourselves: there are various places there we start to describe functionality like \"there are many reporters, you can create plugins, etc.\". The better way is split getting started into following sections:\n- Install\n- Test code structure\n- User actions\n- Observing page state\n- Adding assertions\n- Running tests and getting results\nAt the end of each section we can have reference to the appropriate articles, e.g. at the end of \"Running tests and getting results\" we can have links \"Learn more about reporters\", \"Learn more about running configurations\", etc. \n. \\r-\n. \\cc @DevExpress/testcafe-docs I'll take a look a little bit later. Can someone else review for now?\n. \\r-\n. In general LGTM, with just a minor issue. However, once we'll have Selector and node descriptors we will need to update GS with this new stuff.\n. \\r-\n. lgtm\n. > We show how to run a test from the command line. Should we say in Getting started that it is possible to use testCafe as a nodejs module and give a link to the Programming Interface topic?\nNo, this is advanced topic and more likely will be needed only for embedders.\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. OK, got it now. I wonder if we have a situation then we need such timeout. Couldn't request just hang infinitly or is there any browser/server limitation?\n. @AlexanderMoskovkin BTW what's happened with functional tests?\n. I wonder if we need it at all. Is there any real test which will not execute command within 4 minutes?\n. OK, let's use 2 minutes timeout. \n. I'll retest just ot be sure that everything works fine.\n@testcafe-build-bot \\retest\n. lgtm\n. Can be easily implemented by users on top of ClientFunction.\n. @AlexanderMoskovkin can we keep tests, but disable them on CI?\n. > We can add the settings like { only: 'local' }\nIt would be nice\n. > fitWindowToDevice(deviceName [, orientation])\nSounds like we are going to fit window to some real device.\nBTW, shouldn't we restore window size once test is done? What do you think?\n. > We can, but it can increase tests execution time. I don't know exactly how much time can it take, but I suppose it can be about 1sec for the each test (resize + restore prev size)\nOK, let's keep it as is for now\n. \\r-\n. > If global screenshots directory is set, enable take screenshots on fail option, and use the screenshots directory as the base for custom paths in takeScreenshot.\nHmm, I thought it is how it works now\n. requires rebase\n. @miherlosev Seems like there was a problem with rebase. I suggest you to rebase locally and open new pull request. \n. I thought we have this functionality already. Or it only works with old API?\n. Moving from MVP milestone. It's not preventing us from releasing a product.\n. I thought we have this functionality already. Or it only works with old API?\n. The thing that really pissed off in previous versions: can we allow openning dev tools via shortcuts - \nF12 for Windows, Cmd+Option+I for Chrome and Safari on MacOS and Cmd+Option+K for Firefox on MacOS?\n. \\r-\n. lgtm\n. ping @AlexanderMoskovkin @helen-dikareva \n. FPR\n. lgtm\n. Is there any drawbacks using excludeLinksToSamePage = false?\n. Let's merge then\n. ping @kirovboris @AlexanderMoskovkin \n. See Skype\n. lgtm\n. > So I propose to put TestRunId in window title instead of page url. \nAs far as I remember we've discussed to use browserWindowId in context of browser providers. Maybe we will switch to it now? TestRun id is intrinsic thing of testcafe it's not quite good to use it in utility library which browser-native will become.\n. OK, let's go with test run id for now\n. lgtm\n. lgtm\n. @AlexanderMoskovkin Once functional tests pass - it's good to merge, also it's currently blocking for all other PRs\n. FPR\n. @AlexanderMoskovkin @helen-dikareva Tests are OK, just server test failed due to #561. I don't want waste time on rebase, so it's ready for review.\n. closed via #566 \n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin Yes, but take a look at first functional tests fail - same happened on my machine - legacy API waitFor test hangs up (looks like in FF or IE), because chrome-only tests afterwards works just fine.\n. FPR\n. Was erroneously closed by #566\n. Wait, do not merge, forgot one detail\n. Done\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Closing in favor of select text in #574 \n. I think it makes sense to have basic saucelabs browser provider as a POC before merging this. More likely we will encounter some caveats which will affect final design.\n. Also let's move all logic to browser top dir. \nRename Browser to BrowserController.\nRename open, close etc. methods of browser provider to openBrowser, closeBrowser, etc.\n. Thinking of it a little bit I guess we should completely get rid of Browser entity. Let's move all logic in browser to BrowserProviderHost. We will use browser connection id as browser id (just switch to short-id). And BTW AFAIR we decided to get rid of Local browser connection. We need new machinery which will decide on provider-level if we need to actually close browsers or not. Because e.g. saucelabs will have remote connections, but we need to gracefully close browsers for it, like we do for local\n. @AndreyBelym I'm quite busy right now, can others review for now, pls. Also, can you give some summary for how it works now and how plugins should be used/implemented. Also, from quick view: I thought that saucelabs provider will be a standalone plugin. Or it's just WIP?\n. \\r-\n. @AndreyBelym It's should be name generator-testcafe-browser-provider\n. \\r-\n. In general looks really good, awesome job! Just some minor issues left.\n. \\r-\n. @AndreyBelym So which properties browserInfo will have?\n. To summarize that we've discussed:\n- Browser alias is {provider-name}:{browser-name}, both parts are optional, we've try to lookup provider first, e.g. for phantomjs alias, then local browser with that name, e.g. chrome alias\n- We should reflect this structure in code\n- Listing of browsers for provider in CLI should show aliases, e.g. saucelabs:win8chrome, phantomjs\n- listAvailableBrowsers should return browser names, e.g. for saucelabs win8chrome\n- openBrowser in provide should accept browser name, e.g. for saucelabs win8chrome \n. For phantomjs case we can have flag isMultiBrowser which if set to false tells that provider name is an alias itself and we don't need to call listAvailableBrowsers\n. \\r-\n. \\r-\n. lgtm\n. @kirovboris @churkin Can you review instead of @AlexanderMoskovkin ?\n. lgtm\n. ## Node snapshots\nElement\njs\n{\n    nodeType: 1,\n    tagName: String,\n    attributes: { name: value },\n    namespaceURI: String,\n    hasChildren: Boolean,\n    childrenCount: Number,\n    getParentNode: Hybrid,\n    getChildNode(idx): Hybrid,\n    visible: Boolean,\n    width: Number, // element own width in pixels\n    height: Number, // element own height in pixels\n    offsetWidth: Number,\n    offsetHeight: Number,    \n    focused: Boolean,\n    hasClass: Function,\n    text: String,\n    textContent: String,\n    computedStyle: { prop: value },\n    style: { prop: value }\n}\nCommentNode\njs\n{\n    nodeType: 8,\n    text: String,\n    getParentNode: Hybrid\n}\nTextNode\njs\n{\n    nodeType: 3,\n    text: String,\n    getParentNode: Hybrid\n}\nDocumentFragment\njs\n{\n    nodeType: 11,\n    getChildNodes: Hybrid\n}\nDocument\njs\n{\n    nodeType: 9,\n    getChildNodes: Hybrid\n}\n. BTW, interesting question: should regular hybrids accept element descriptors as arguments?\n. Should selector accept element descriptors?\n. Or both should accept, but descriptors will not be converted back to actual DOM nodes?\n. @AlexanderMoskovkin This is exactly what I've asked https://github.com/DevExpress/testcafe/issues/574#issuecomment-223592034\nidk\n. We can implicitly execute descriptor's selector if it's passed as argument\n. @VasilyStrelyaev Yes. For selectors we will have t.select\n. > if you want to work with MS Edge and testcafe.\nBad, can we ping them once again about this issue?\n. @AlexanderMoskovkin Can you describe in couple of sentences how it works?\n. Especially it's not clear for me why we have ClientDriverBase with only one descendant class - MainWindowDriver, can't they be merged?\n. Same for DriverAdapter and IFrameDriverAdapter\n. We need some better naming for adapter then, because it's purpose currently unclear from name. \n. Also, is ClientDriverBase is abstract class? Because we use Base only for abstract classes. Otherwise, we shouldn't have common ancestor base class and MainWindowDriver should include ClientDriverBase functionality, while IFrameDriver should be it's successor. Same for adapters.\n. Thinking about it a little bit more: we should have Driver and IframeDriver classes. IframeDriver inherits from Driver. For links we should have abstract DriverLinkBase and ParentIframeDriverLink and ChildIframeDriverLink\n. Driver, IframeDriver\n. I'll review later, meanwhile others can take a look. I suggest to involve more people into review process since it's quite complicated and important piece of functionality.\n. \\r-\n. One last thing: can we rename iframe.js to iframe-driver.js?\n. @AlexanderMoskovkin I guess you will need to rewrite it a little bit, because \"ensure element\" machinery was completely moved to action executor\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. Closing in favor of #287\n. FPR. Note: I've decided to add base class for ClientFunction and Selector\n. OK, I'll address test names issues later. Please, review functionality in the meantime \n. Reverted back to version without base class\n. FPR\n. Just unstable client test\n. ping @VasilyStrelyaev @helen-dikareva @AlexanderMoskovkin \n. FPR\n. Yet another unstable client test. Can be merged\n. Also, in resizeWindow test initial window is not restored correctly: we store initial sizes in global vars, but tests runs in parallel in different browsers, so initial sizes get overwritten. I suggest to save initial values in dictionary there user agent is a key. You can obtain user agent using ClientFunction both to query and write to dictionary.\n. Unfortunately I can't check at the moment (started big new feature in my master :tired_face: ).\n. Nope, still reproduces (unstable) on my side. First test in the fixture fails, no matter which fails it is. I assume it need to resize at least once to pass correctly.\n. What's the status of this one @AndreyBelym ?\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. What happened to client tests? Why they are so unstable again?\n. @testcafe-build-bot \\retest\n. In general lgtm. \n. lgtm \nping @DevExpress/testcafe \nWhat about test fail BTW?\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. \\r-\n. lgtm\n. Can we postpone merging of this a little bit, pls? I'm about to submit selectors PR and it affects really huge part of current code. It will be a hell for me to rebase on top of all your PRs and it will be easier to apply individual narrowly focused on top of selectors-related changes. Thanks in advance.\n. @AlexanderMoskovkin Yeah, arrow worked just fine.\n. FPR\n. @helen-dikareva OK\n. FPR\n. FPR\n. The problem is that source-map-support package can't produce correct callsites for the compiled code. Here is what we can do:\n- [ ] First of all create server regression test to check that our changes works\nThe good\n\n[ ] Try update Babel\n[ ] Try update source-map-support\n[ ] Submit bug to babel and/or source-map-support\n[ ] Try disable retainLines but we will have issue with use strict which added by Babel (may be fixed by Babel update)\n[ ] Try to workaround use strict by testing original source and removing if it was not present in original file\n[ ] Submit bug to Babel\n\nThe bad\n\n[ ] Declare support only for Node 4+\n\nThe ugly\n\n[ ] Disable callsite rendering for Node 10 (keep only stacks) or render frames without actual line pointer. Add this to known issues. \n. I've decided to simplify test run errors rendering instead, it looks much better:\n[x] Highlight UA with red color\n[x] Remove <code> wraps for error messages, use \"`\" instead\n. I'm working on this\n. I'll take care of this\n. To tech writters:\n[x] Update screenshots for all reporters\n[x] Update README for generator and docs where needed:  reporter project should be now published via npm run publish-please, also test data structure changes a little bit\n. \\cc @MargaritaLoseva @VasilyStrelyaev \n. ping @VasilyStrelyaev \n. lgtm\n. In general lgtm, great job! Just some minor style nits left\n. lgtm\n. \\r-\n. lgtm\n. @testcafe-build-bot \\retest\n. What the..\n. Wow, something wrong with Travis, same issue in docs PR: https://travis-ci.org/testcafe-build-bot/testcafe/builds/139281330\n\nIs there something wrong with Travis or gulp itself? \\cc @AlexanderMoskovkin \n. https://travis-ci.org/testcafe-build-bot/testcafe-hammerhead/jobs/139283849 - same in hammerhead repo\n. Yeah, it's Travis issue, can be reproduced without our build bot: https://travis-ci.org/DevExpress/generator-testcafe-reporter/jobs/139285362\n. @testcafe-build-bot \\retest\n. It was a bug in gulp dependency, should be fixed already\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. lgtm\n. Well, for iframe it's still a selector. For browser dialogs - it's wrong, because browser dialog is not an element\n. Well, I guess so, but I think as timeout option for the appropriate functions. \n. Not sure if we need global option for this, since unlike selectors this is something that you will not use very often. \n. Tests fail, more likely rebasing on top of https://github.com/DevExpress/testcafe/pull/606 will fix it\n. Everything else - lgtm\n. Odd, can you fix them in context of this PR, please?\n. \\cc @DevExpress/testcafe-docs \n. > 1. Do we need some introduction about TestCafe or \"Modern functional testing framework\" is enough?\nYes\n\n\nDo we need the Modules section?\n\n\nI think we can get rid of it\n\n\nIn the Documentation section, there will be links to the main sections on gh-pages. They do not work yet.\n\n\nLet's publish gh-pages \n. BTW, since README includes landing page + getting started maybe it makes sense to write gulp script which just basically take these sections from docs and insert it into README, so they will be consistent? \\cc @VasilyStrelyaev \n. BTW, we also should also run documentation tests for README.\n. And I have a question to @VasilyStrelyaev: if we have external link in docs (e.g. to node website) do we just check this link or we crawling node website as well?\n. > we crawl everything\nNot cool. We need some domain filter then\n. @VasilyStrelyaev seems like you dont't get my question. If we have link to nodejs.org, do we just check that nodejs.org is available and stop this crawling branch or we continue crawling links on nodejs.org?\n. @VasilyStrelyaev :+1: \n. Maybe we should place feature list above getting started? Also, we need table of contents at the top of the page\n. \\r-\n. @testcafe-build-bot \\retest\n. We need to add npm version badge under the title as well, for example see https://github.com/inikulin/parse5/blob/master/README.md\n. Yeah, it's just fine for now. Once we publish version with \"latest\" tag - it will be replaced\n. Overall lgtm, just add link as centered text under the logo\n. lgtm\n\\cc @DevExpress/testcafe-docs \n. t.selectByText(regExpOrString, n = 0)\nSelectorByText(regExpOrString, n = 0) or Selector.byText(regExpOrString, n = 0)\nNth element selector:\nt.selectNth(selector, n =0, deps, opts) or we can just add additional parameter to t.select\n\\cc @DevExpress/testcafe What do you guys think?\n. We've decided to rename t.select so we have:\nt.selectNode\nt.selectNodeByText\n. OK, so we have:\nSelector(fn, scopeVars)\nSelector.byText(regExpOrString, idx, scopeVars)\nSelector.nth(fn, idx, scopeVars)\nt.selectNode(fn, scoperVars, opts)\nt.selectNodeByText(regExpOrString, idx, scoperVars, opts)\nt.selectNthNode(fn, idx, scoperVars, opts)\n. BTW, regarding text selector, after a little dog fooding I found out that it extremely useful to specify additional selector for text and then filter it's results by text, so here is how it might look like:\nSelector.byText(fn, textFilter (re or string), index)\nor\nSelector.byText(regExpOrString, subsetSelector, index)\nHere is how it will be used:\n``` js\nSelector.byText('li.items', 'Honda', 0);\n// or\nSelector.byText('Honda', 'li.items', 0);\n```\n\\cc @DevExpress/testcafe \n. Or as a third option we can have compound signature for selector:\njs\nSelector(fn, textFilter, n, scopeVars)\nand we will not need additional functions then.\n. @VasilyStrelyaev What would you say about proposal?\n. OK, so we will have:\njs\nSelector(fn, textFilter, index, scopeVars)\n// and\nt.select(fn, textFilter, index, scoperVars, options)\nI'm thinking about host object for textFilter, index and scopeVars, so we will have:\nt.select('li.item', { withText: 'Honda' })\nAny ideas how to name such object?\n. I predict that question will arose about difference between options object and such host object (let's name it initOptions for now). options specifies optional things, selector will function without them, they just adjust some aspects of behavior. Meanwhile initOptions describes selector itself, it's not an adjustment of the options it's a part of selector definition. \n. One more question: how we should behave if selector fn returns single element and we have index specified? Should we throw in that case or if index > 0 return null?\n. > of if we return 3 nodes and index === 4\nIt will be null then. Regarding initializeOptions: how about filteringOptions or filterOptions or filterSettings?\n. Or we can just completely ignore index if fn returns DOM node.\n. > em... you mean filterOptions will include scopeVars. no, I think\nWe can remove scopeVars from this object then. \n\nIf you write select(selector, 1), you expect that should be more than one elements with this selector on the page. If there is just one, something went wrong\n\nEmm, if you specify select(selector, 1) it doesn't make things better either. Or we should have index: null by default, signaling that we don't expect any collection.\n. Or maybe I'm just over complicate things and we should just merge all options in one object?\n. @DevExpress/testcafe \nIs it clear with such naming:\n``` js\nvar selector = Selector(fn, filterOptions, scopeVars);\n // BTW, I'm thinking about renaming scopeVars back to dependencies\nvar newSelector = selector.with(executionOptions);\n```\n. > Will executionOptions contains scopeVars in second case?\nNope, scopeVars is the part of selector definition\n\nSelector(fn, scopeVars).filter(filteringOptions).with(executionOptions)?\n\nLooks interesting, but we've just discussed if it correct. E.g. fn may return DOM node collection, without filter it will end up in selector error (because we don't allow anything except node as selector return value), so without additional .filter call selector is not functional. In general we should avoid such cases by enforcing correct behavior with API, so I have a strong feeling that filterOptions should be a part of selector definition, like scopeVars\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin note strange test fail in https://github.com/DevExpress/testcafe/pull/616#issuecomment-228100845\n. @testcafe-build-bot \\retest\n. > Does it sound too sophisticated, or are you okay with it?\nNah, sounds just fine, But I'd like to remove functions from the sentence \n. Changed CLI text, @VasilyStrelyaev pls, review and merge\n. FPR\n. FPR\n. Or as better idea: extract both client and functional tests for old API and run them on daily basis as smoke tests, e.g. 2 times a day, like we do for health monitor. The task is quite important, because we need to test our stuff in all browsers before release.\n. Ideally we should test in all browsers for which we declare support\n. @AlexanderMoskovkin  I can't find functional tests from api/legacy, can you point me there are they now?\n. lgtm\n. @AlexanderMoskovkin We will not merge it now, right? It will significantly slow down test runs.\n. ping @helen-dikareva @AlexanderMoskovkin @VasilyStrelyaev \n. \\r-\n. \\r-\n. Guys, please, review it ASAP because it blocking for #601 and I would like to finish it before Wednesday internal showcase\n. @AlexanderMoskovkin this is because I've started implementation on top of selectors branch, after squash everything will be just fine.\n. > I see the first commit in the PR has name Implement \"t.select\". So after merging all commits will be combined into one commit with this name.\nCombined commits will be squashed to commit with PR name\n. Just bumped version, can be merged without tests\n. > Is it this case?\nYep\n. Just an unstable client test. Please, review\n. @kirovboris Seems like an accidental fail, which is quite uncommon in functional tests. However, it's completely unrelated to PR\n. lgtm\n. \\r-\n. BTW, endpointUtils already use ip internally, I'll expose address there\n. @AndreyBelym Just published v1.0.2 with this functionality: https://github.com/inikulin/endpoint-utils#get-ip-address-of-current-machine\n. lgtm\n. \\r-\n. lgtm\n. Please, do not merge yet, there may be hammerhead update.\n. @AndreyBelym Yeah, I know\n. \\r-\n. \\r-\n. lgtm\n. I'm working on this\n. Just a random test fails. Please review\n. Neither. For local installations it should be used from npm scripts, e.g. { \"test\" : \"testcafe myfile.js\" } For all other cases use globally installed CLI\n. \\r-\n. lgtm\n. lgtm\n. We have lots of tests which target only chrome, so they fail if given browser set doesn't have chrome, e.g. in mobile tests\n. I'd like to have everything fixed before merging, including mobile browsers. BTW, what I further steps?\n. @AlexanderMoskovkin we should not merge it now, test runs will take more than two hours then. Create legacy test runs infrastructure first.\n. @AlexanderMoskovkin Can we have badge in this PR as well? I would like to have completely working solution before merging\n. I just have concerns about merging it and in fact completely removing legacy tests for some time from CI. We can completely broke things and don't even know about it\n. OK, then\n. lgtm\n. We need to prefix docs PRs with [docs] to run appropriate CI tasks on them\n. lgtm\n. {task-start-date}/test{num}/{user-agent}/{1,2,3,...}.jpg\n{task-start-date}/test{num}/{user-agent}/errors/{1,2,3,...}.jpg\nIn report we show {task-start-date}/test{num}/ part\n. What's breaking about it?\n. http://semver.org Guys, please read. Is screenshot path is a part of API?\n. Closing in favor of #671 \n. lgtm\n. lgtm\n. @VasilyStrelyaev I guess we can close it now?\n. Nah, I guess it looks just fine now. Let's return to this topic if there will be necessity\n. lgtm\n. @testcafe-build-bot \\retest\n. ping @AlexanderMoskovkin @VasilyStrelyaev @AndreyBelym \n. @AlexanderMoskovkin Do I understand right that it was fixed by #759?\n. Is this affects only legacy API? If so, can you add remark both to PR and issue titles?\n. lgtm\n. lgtm\n. @VasilyStrelyaev Ugh, I forgot we need to add license field to package.json as well: https://docs.npmjs.com/files/package.json#license\n. Closed in #670 \n. We need to expose whole error message here: \n[Unable to take a screenshot due to error: error message]\n. I think we should get rid of inline messages. We will give warnings to stderr as suggested in #651. Meanwhile, if error occurs during screenshots saving we should throw test run error\n. Or, better solution: add warnings at the end of report\n. Closing in favor of #671\n. Reopening, since this ticket also above the actual error\n. @AndreyBelym Is it fixed?\n. @VasilyStrelyaev @MargaritaLoseva \nBreaking changes that affects documentation:\n- Error format changed, warnings added (new reporter screenshots required)\n- Generator/reporter - reportTestDone method now accepts two args: name and testRunInfo object: https://github.com/DevExpress/testcafe/blob/master/src/reporter/index.js#L35\n- Generator/reporter - reportTaskDone now accepts array of warning strings as third argument\n. Closed via #692 \n. \\cc @VasilyStrelyaev Please, check comments\n. Seems like just unstable client test. Please, review.\n. ping @helen-dikareva @AndreyBelym @AlexanderMoskovkin \n. FPR\n\\cc @AndreyBelym \n. \\r-\n. @VasilyStrelyaev Nah, I think it's just fine. We provide some basic generic API on top of which you can build your own if you commonly use it, e.g.:\n``` js\nfunction expectAlert(t) {\n     t.setNativeDialogHandler(() => true);\n}\ntest('yo', t => {\n    expectAlert(t);\n});\n``\n. Overall lgtm, great job! Just some minor issues left.\n\\r-\n. @helen-dikareva Errors now have new format\n. \\r-\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. @kirovboris @georgiy-abbasov @churkin Can you review instead of @AlexanderMoskovkin, please?\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. \\r-\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. If this test run will not be successful - rebase to fix iframes test\n. lgtm\n. I believe it was implemented in context of browser providers? \\cc @AndreyBelym \n. Closed via #573 \n. We can consider switching to another package if this one is abandoned \n. Let' redesign it a little bit:\n- Remove digits\n- Remove top border on title\n- Use same font color for description as for other body parts:#111`\n- Remove horizontal margins on code blocks\n\n\\r-\n. Regarding desing - LGTM. Also, we've decided to add section regarding browser provider plugins and CI (ping @VasilyStrelyaev )\n. Tests fail\n. \\r-\n. \\r-\n. lgtm\n. Whoever have spare time to review this one - please do it. It seems I'll be busy with errors/warnings at least for a couple of days, so it would be nice if someone else actually take a look at it.\n. I've skipped Selector/ClientFunction related stuff, because as mentioned here I would like to have it breaked in separate sections first.\n\\r-\n. @VasilyStrelyaev It's complicated. new Number returns boxed number:\njs\ntypeof new Number('3') // object\nmeanwhile, when called without new it casts object to primitive Number value type:\njs\ntypeof Number('3') //number\nAnd yes, we should use Number term\n. BTW, maybe we'll split this PR in smaller chunks: create separate PR for selectors and client functions and everything else in this PR?\n. Overall - looks really great, outstanding job. Just some minor issues left.\n. \\r-\n. @VasilyStrelyaev :+1: \n. lgtm\n. ping @DevExpress/testcafe-docs \n. Nah. We can introduce browsing context later in the topic with reference to the spec. But it's unlikely that users familiar with it, since it's more intrinsic thing. We need iframe in the title as an eye catcher\n. @VasilyStrelyaev Is this ready for merge?\n. Guys, how do you even review? I've accidentally removed all changes and no one mentioned (((\n. FPR\n. @helen-dikareva iframe test issue should be fixed by #686 \n. lgtm\n. lgtm\n. We need compound tasks now, so we can run things locally: run all client tests, run all functional tests.\n. BTW, can you move legacy client code to src/legacy/client?\n. Just thought it will simplify the process if we'll have all legacy related-stuff in one dir\n. lgtm\n. First line (runs on every PR):\n- Android\n- FF (win)\n- Chrome (win)\n- IE 11\n- iPhone\nIt would be nice to put Safari here as well if it's possible\nSecond line (twice a day):\n- Firefox (mac)\n- Chrome (mac)\n- IE9\n- IE10\n- Edge\n- Safari (?)\nAlso, we need some kind of reporting for smoke tests (badges are untrustable). Can we create an issue for cumulative test run results (functional + legacy) if they fail? \n. Also, we need a way to trigger any of smoke test tasks using bot command, use case: you've fixed some issue in smoke tests and you need to get PR via particular test task\n. @AlexanderMoskovkin Yeah, but at least we need some reporting as well. I'm really worried about broken smoke tasks. \n. @miherlosev Not sure we should. It's not a main pain point currently. The thing that still bothers me the most in the whole framework is still hammerhead and it's endless regressions.\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin do you mind to review? =)\n. > As a result, major CLI upgrades that are depend on runner upgrades will require manual upgrade of these two packages.\nNot a problem actually, CLI code can still be in locally installed TestCafe, we will just perform lookup and delegate handling to testcafe package.\n. We've decided to go with all-in-one approach\n. @testcafe-build-bot \\retest\n. lgtm \n@AlexanderMoskovkin Should someone else take a look?\n. \\cc @helen-dikareva @georgiy-abbasov \n. > I think, this line is redundant.\nCorrect. We can wait till @AlexanderMoskovkin will be back from vacation and then merge it\n. > @inikulin, you know better, what we should do.\nwrong\n. lgtm\n. lgtm\n. Seems like build bot died. Is there anyone except @AlexanderMoskovkin, who can restart it?\n. Seems like build bot died. Is there anyone except @AlexanderMoskovkin, who can restart it?\n. Nevermind, bot was stopped by @churkin \n. Nevermind, bot was stopped by @churkin \n. \\r-\n. \\r-\n. We can do .then(() => delay(0))\n. We can do .then(() => delay(0))\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. Also, it's a bad practice to run node bins this way: you either install it globally or install it locally and run via npm scripts or programmatical API\n. Not sure I understand how it's related, since you have instructions about how to correctly run testcafe in the same doc. \n. > That doc specify this command line to install testcafe:\n\nnpm install testcafe\n\nNo, it's not:\n\nMake sure that Node.js and npm are installed on your computer, then run a single command:\nnpm install -g testcafe\nFor more information, see Installing TestCafe.\n\nThere is a -g flag there.\n\nAndreyBelym committed that that command line should not be used and suggested another command line:\nnpm install testcafe@alpha\nWith this command line I have successfully finished the first test from that topic.\n\nDocs are obviously designed for the release version. Release not happened yet, so meanwhile it's a requirement to  install testcafe via npm install testcafe@alpha command.\n. This happens because current versions which installs by default is an old version that doesn't support new API. Once new version will be released, we will switch release tag from alpha to stable and new version will be available by this install command.\n. BTW I thought we'll host new example page on GH \\cc @VasilyStrelyaev \n. @IgnatovDan Please, provide full source code of the test. \n. That's correct, this is happens because this part of the test was designed for new example page. We've already changed test code in on of PRs, so it reference new example page not the old one.\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. Ping on Monday, pls\n. Ping on Monday, pls\n. @VasilyStrelyaev \nContribution rules:\n1. First create an issue (if there is no issue already for the given bug/functionality).  It may be functionality that unlikely will be landed or bug fix require some bikeshedding, so to avoid doing job that will not be used it's a good idea to discuss functionality and bug details with core team before submitting the PR.\n2. Fork testcafe and create a branch named against the issue number, e.g. gh852, gh853\n3. Commit your changes into the branch\n4. Bug fixes should have regression tests added into the appropriate sections (search for Regression via code). New functionality should be tested as well\n5. Fetch upstream changes and rebase your branch onto master\n6. Run tests: gulp test-server, gulp test-functional-local, gulp test-client before submitting a PR and ensure that everything works properly\n7. Push changes to your fork\n8. Submit a PR. PR name should describe what was done in pull request and contain closes directive with appropriate issue number. Documentation PRs should have [docs] prefix in their title.\n9. Use separate PRs for documentation and functionality\nGitHub supports issue templates: https://help.github.com/articles/creating-an-issue-template-for-your-repository/\nRequired information for the bug report:\n1. Operating system\n2. testcafe version\n3. node version\n4. Test code\n5. Tested page URL\n6. Expected behavior\n7. Actual behavior\n. @VasilyStrelyaev \nContribution rules:\n1. First create an issue (if there is no issue already for the given bug/functionality).  It may be functionality that unlikely will be landed or bug fix require some bikeshedding, so to avoid doing job that will not be used it's a good idea to discuss functionality and bug details with core team before submitting the PR.\n2. Fork testcafe and create a branch named against the issue number, e.g. gh852, gh853\n3. Commit your changes into the branch\n4. Bug fixes should have regression tests added into the appropriate sections (search for Regression via code). New functionality should be tested as well\n5. Fetch upstream changes and rebase your branch onto master\n6. Run tests: gulp test-server, gulp test-functional-local, gulp test-client before submitting a PR and ensure that everything works properly\n7. Push changes to your fork\n8. Submit a PR. PR name should describe what was done in pull request and contain closes directive with appropriate issue number. Documentation PRs should have [docs] prefix in their title.\n9. Use separate PRs for documentation and functionality\nGitHub supports issue templates: https://help.github.com/articles/creating-an-issue-template-for-your-repository/\nRequired information for the bug report:\n1. Operating system\n2. testcafe version\n3. node version\n4. Test code\n5. Tested page URL\n6. Expected behavior\n7. Actual behavior\n. \\cc @VasilyStrelyaev just to make sure that you've seen it\n. \\cc @VasilyStrelyaev just to make sure that you've seen it\n. @AndreyBelym Can we close it now?\n. @AndreyBelym Can we close it now?\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. > What's about packages?\nAre they ready for review? I don't see notification about PR made to appropriate repos with \\cc\n\nGot an idea for generator package just now: ask the user about if the provider is multi-browser, and alter the usage section of README.md according to their answer. Currently it generates usage docs that is more suitable for simple one-browser provider.\n\n:+1: \n. FPR?\n. @AndreyBelym I'd rather go with separate PR. Don't accumulate changes.\n. lgtm\n@MargaritaLoseva note that we need to change description for the CLI command\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. Closing in favor of #287\n. @DevExpress/testcafe-docs please, review as well\n. @MargaritaLoseva https://github.com/MargaritaLoseva/testcafe/blob/5241afb05ddb1141c24e2765aeb61bac8a343fd8/docs/articles/documentation/using-testcafe/command-line-interface.md#remote-browsers - they we bootstrap remote browsers has been changed\n. \\r-\n. Rest of @DevExpress/testcafe-docs Please review as well, don't delay to the last moment as usual. We don't have time for that.\n. @MargaritaLoseva We need to add links to appropriate topics in Continuous Integration topic on landing page\n. @MargaritaLoseva it requires rebase \n@DevExpress/testcafe-docs please, review\n. Guys, please review precisely and merge if it looks good to you \n. What's going on with tests?\n. \\r-\n. lgtm\n. ping @VasilyStrelyaev @MargaritaLoseva \n. @MargaritaLoseva Add closes directive to PR name then\n. \\r-\n. lgtm\n. > I understand what ids are in openBrowser and closeBrowser.\n\nBut in resizeWindow and, moreover, takeScreenshot... Maybe, rename to browserId in these two methods?\n\nDo you mean that we should stick with browserId everywhere? Otherwise it will be inconsistent and even more misleading\n. No, it's not. We should be consistent \n. For me it looks like different ids, but they are the same \n. Parameters should be consistent across whole entity API. \n. lgtm\n. lgtm\n. \\r-\n. Why we still have date format as dependency?\n. lgtm\n. @AlexanderMoskovkin Why it's a breaknig change? Is any public API affected?\n. Please, don't envolve your feelings into versioning - it's a common mistake. We have a well-defined protocol for this. (BTW you all right that this is a major version bump, but you're absolutely wrong why it's a major version bump, it bothers me)\n. Tip: google definition of API\n. > I've also changed the synopsis for async methods from\nPlease don't. First of all, any function that return Promise in JS is async (so it's not quite right that we add async prefix, but it's OK for clarity). But all of them returns Promise and not eventual value. It's just misleading and overall wrong.\n\\r-\n. lgtm\n. This one looks like a serious blocker, any news on it?\n. first of all we can't use different test-N dirs, which one you will specify in report? This is the only thing I care about here. Once you'll find how to deal with it - everything else will be just fine\n. Hmm, overall what's by design, it doesn't support CLI clean up. You will get same results with any animated output, the question is if we can handle it gracefully, e.g. disabling spinner in such envirionments. @AndreyBelym can you investigate, pls?\n. Let's use condition from Ora\n. We have a isTTY var cli/log that enables animated spinner, we can introduce isAnimated var instead that will use condition from Ora (don't forget to give package a credit in code comment)\n. BTW, can you condirm it works well on Travis?\n. Why it writes \"undefined\" in output before error message in provided logs? Is this somehow related?\n. lgtm then\n. lgtm then\n. Seems like it would be nice if our eslint plugin handle this cases \\cc @LavrovArtem \n. ping @LavrovArtem \n. lgtm\n. Seems like it was a bug with Travis output.. \\r-\n. lgtm\n. @AlexanderMoskovkin Can you publish it, please?\n. Just thought it would be better to implement global setup and tearDown functions, like global before and after in Mocha\n. > Implemented in #1047\nNo, it's not. > It looks, the -app does the same. Maybe we should update the initial comment of the issue then?\nNo, it's not. We've discussed it. You need a way to setup and teardown using async function, so if you have some complicated long-running setup you'll be able to just return promise for it.. Sounds good\n. Why iframe test fails again?\n. > We need the name for extending snapshot method, e.g. extendSnapshot\n\nI assume the following use:\n\nIt should look good in with method, so I guess it should be:\njs\nconst selector = Selector('div', { snapshotExtension: () => {} }\n\nAlso should we support function, Selector, ... argument for find method? \n\nYes. it should all arguments that regular selector accepts, it just has contexNode argument always bound to it.\n. BTW, alternative API:\njs\nconst selector = Selector('div', { \n    snapshotExtensions: {\n        someProp: () => {}\n    } \n}\nThis will add property someProp to snapshot. The good thing about this approach is that it will cooperate well with #771. We will be able to create property shortcuts for extensions.\n. \\r-\n. @helen-dikareva What about https://github.com/DevExpress/testcafe/pull/750#discussion_r77179368?\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. Same applies to fixtureName I guess\n. Is anyone working on this? Because we need to fix it ASAP\n. @AlexanderMoskovkin Should be fixed very easy by using RegExp with g flag here, instead of string: https://github.com/DevExpress/testcafe/blob/master/src/test-run/index.js#L80\nBut we need regression test as well\n. lgtm\n. Can you give me some context, because I have no idea what this fix does?\n. @AlexanderMoskovkin Thank you for the explanation. lgtm then.\n. lgtm\n. lgtm\n. lgtm, but can you add comment to gulp file about possible build configurations and how they affect site functionality, please?\n. @VasilyStrelyaev we've just talked to move website assets to this repo, so it makes sense IMO\n. lgtm\n. lgtm\n. Also in README: TestCafe is a simple and powerful framework for testing web sites and apps.\nweb site should be  a one word: website\n. > Or like semi-automatic - run a generating script locally and add the resulting docs/README.md to PR. Build bot can then warn you if your PR affects docs/nav/nav-menu.yml but not docs/README.md.\nThis\n. @AndreyBelym I believe we don't need to run AppVeyor tests for node 10. So, you can get rid of path-is-absolute dependency \n. We don't have latest build bot with multiCI support deployed yet, right?\n. I'm going to release RC today. Is there anything that blocking this from merging?\n. What's the status of this one?\n. @testcafe-build-bot \\retest\n. @AndreyBelym Why we have old bot reports now?\n. OK, cool. But which browsers currently run in which test task? Can we rename the tasks to highlight it?\nWhat's the difference between AppVeyor functional tests and Travis test-functional-desktop task? \n. Also, I guess test-functional-travis-ms-desktop can be renamed to test-functional-travis-ms-edge now?\n. Also, can we merge edge task with test-functional-desktop?\n. > AppVeyor functional tests are local functional tests (with local browsers installed on AppVeyor's Win2012R2 VM), test-functional-desktop runs functional tests in common desktop browsers on Saucelabs.\nSo why we need both?\n. So, did I get it right:\non Travis we run browser on MacOS?\nCan we have combined task test-functional-travis-desktop-osx-and-ms-edge?\n. \\r-\n. ping @AndreyBelym \n. @AlexanderMoskovkin \n\nJust for sure, am I understood your proposal right?\n\nEhh, not sure about it =) Speaking clearly, instead of:\n``` js\nconst elSelector = Selector('#someElem');\nconst el = await elSelector();\nconst offset = el.offsetLeft;\n```\nyou'll be able to write\n``` js\nconst elSelector = Selector('#someElem');\nconst offset = await elSelector.offsetLeft;\n```\n. @miherlosev No, how you imagine that?\n. > When test code performs access to selector properties we perform sync request to client\nCool cool, but I have no idea how we can perform \"sync request to client\"\n. @miherlosev It's not about internal implementation. We use hammerhead for messaging. Does it support sync communication with client?\n. @miherlosev Where is no sync request API in modern browsers. There is sync XHR but it's extremely buggy and deprecated.\n. @MargaritaLoseva I guess it requires rebase\n. \\r-\n. \\r-\n. @MargaritaLoseva it requires rebase\n. lgtm\n. \\r-\n. FPR\n. @AlexanderMoskovkin Yeah\n. FPR\n. \\r-\n. lgtm\n. lgtm\n. FPR\n. lgtm\n. Weird that we don't have tests ran for this PR \\cc @AlexanderMoskovkin @AndreyBelym \n. lgtm\n. @AndreyBelym Can it be closed now?\n. @mjhea0 It's still in the proposal state. We haven't even considered adding it yet, due to low demand. . I'm not sure I understand why you need BDD in that case. Can you just make multiple tests and use role in each of them, e.g. via beforeEach? Or you have same scenario as in https://github.com/DevExpress/testcafe/issues/1339#issuecomment-289529144?. @mjhea0 \n\nRoles are a solution but they are still expensive.\n\nNote that roles perform authentication steps only once, afterwards role switching is basically page reload. We also had idea to implement test.useRole and fixture.useRole - with this API, authentication will be performed only once per role and each test run will start immediately in logged in state.. Wow, it was quick, but unfortunately not on time. We're on code freeze right now, so let's merge it after release, ok? Also, we have a new rule of adding/modifying basic example tests to demonstrate new feature. Can you add such example for find method (for extensions we'll have dedicated topic in docs about selector extensions)\n. @AlexanderMoskovkin It's synthetic example, you can just do:\njs\nconst getStatusBtn = Selector('#statusBtn');\nBut it would be nice if you add more examples, to see how they will fit into new paradigm\n. @helen-dikareva Correct. Child/parent means single level, but we'll have them as well.\n. @kirovboris What do you think? Does fits well for you selector extensions?\n. @kirovboris It applies only to selector combination. Snapshot extensions looks even more meaningful with this one.\n. This one is a serious blocked. Is anyone working on it?\n. \\r-\n. @VasilyStrelyaev fn is shorter and named after the parameter we have currently\n. @kirovboris We can't add directive in body, since we already executing the test.\n. > but where will be after after fn or before\nIt doesn't matter, you can use the way you prefer\n. @helen-dikareva https://github.com/DevExpress/testcafe/issues/802#issuecomment-246989277\nWe need to keep it somehow consistent with the existing API.\n. One more\njs\ntest\n  .before(async t => {...})\n  .skip(browserInfo => {...})\n  ('Some test', async t => {\n      // test code here\n  });\n. https://github.com/DevExpress/testcafe/issues/802#issuecomment-247000714\nThis one looks kinda good, but have problem with easy code modification\n. @churkin Bad thing about it is that title is separated from test directive\n. > PS. Can we use something like that\nIt looks awkward without modifiers. \n\nmocha allows skip usage in the test body. When you use this.skip() inside a test, it throws a special exception, that aborts the test.\n\nIt's an option, but it's inconsistent and it's easy to shoot yourself in the leg with that approach.\n\nAlso, in mocha you do not declare before and after directly in the it test block, you use another describe block.\n\nYeah, but we don't have nested fixtures yet. Also from my own experience you don't need a new fixture for some tests, you just need some test-specific teardown code and introduction of new fixture feels awkward in that case.\n. https://github.com/DevExpress/testcafe/issues/802#issuecomment-249877463 - this one looks interesting\n. ``` js\nimport { expect } from 'chai';\nfixture Click\n    .page http://localhost:3000/fixtures/api/es-next/click/pages/select.html;\ntest Click on an \"option\" element (async t => {\n    await t\n        .click('#simple-select')\n        .click('[value=Second]');\nvar select = await t.select('#simple-select');\n\nexpect(select.value).eql('Second');\n\n});\ntest Click on an invisible \"option\" element (async t => {\n    await t\n        .click('[value=Second]');\n});\n```\nNice! But should we deprecate old API in that case? Or just force usage of the new one and change all examples in documentation to this one.\n\\cc @DevExpress/testcafe \n. Hmm, unfortunately with directives this looks a bit awkward:\n``` js\ntest Click on an invisible \"option\" element\n    .before(async t => {})\n    .skip(browserInfo => {})\n    (async t => {\n        await t\n            .click('[value=Second]');\n    });\n. @miherlosev How test will look like without directives?\n. js\ntest click submit button.\n     .do(async t = {}) //.run or .body or .perform etc.\n```\nUnfortunately it's too excessive for basic case\n. @miherlosev \n\nIn AVA test runner (https://github.com/avajs/ava) possible use any order of test modifiers.\n\nWe're obviously gonna support the same and it's irrelevant to question raised here.\n\nhttps://github.com/avajs/ava#test-placeholders-todo\nhttps://github.com/avajs/ava#failing-tests\n\nI might be wrong, but I find this features enforcing bad practices. I have no idea why and where they can be useful. Do you have any real life scenarios for this? \n. @miherlosev I've read them, but I still don't remember that I've ever needed something like this. That's why I'm asking you for scenarios from your experience.\n. So I propose:\n`` js\ntestMy test name` (async t => {\n  // Test code\n});\ntest My other test \n    .skip\n    .before(() => { ... })\n(async t => {\n  // Test code\n}); \n```\nAs a new recommended test declaration syntax (we'll enforce it in the docs as well).\nPlease add \ud83d\udc4d  or \ud83d\udc4e on this comment if you aggree or disagree so I'll be able to move it from proposal stage.\n\\cc @DevExpress/testcafe \n. @AndreyBelym FPR?\n. @VasilyStrelyaev it doesn't relate to docs or promotional material. I'm asking about functionality.\n. @kirovboris Can you provide use cases, please?\n. So if we'll just restore size of the window to the initial (maximized) before each test run it will work for you?\n. OK, I'll rename the issue and move it to planned.\n. After some discussion, we've decided to move to the original proposal\n. I'm working on this\n. Possible dup of #822 \n. Dup of #822\n. @AndreyBelym Maybe we could give warning in that case?\n. @miherlosev Please, cross-reference them\n. Fixed in hammerhead, waiting for release\n. @churkin Is this a hammerhead issue? If so, please, fill an issue there\n. Error occurs during selector evaluation on client: SyntaxError: Octal literals are not allowed in strict mode.(\u2026). It describes strange nature of error: we don't expect non-testcafe errors in action executor, so we send unwrapped error to server which becomes an empty object after JSON serialization.\n. Same error appeared in #815 :\n`` js\nfixtureTest`\n    .page('https://docs.google.com/spreadsheets/d/10tonOBSY5Umx9tpMtl0ePO39uvbg1cAjh8Rb2Qkrq_E/edit?usp=sharing');\ntest('test', async t => {\n    await t\n        .click('#\\3a r > div')\n        .wait(2000);\n});\n```\n. I'm working on it\n. We've finally figure out how it should look like. See #865 (closing in favor of that issue).\n. We just need to implement TypeScript support. I'm working on this\n. @helen-dikareva Do you mind submitting a bug to hammerhead? \n. @miherlosev It's definitely an error with hammerhead. Please, fill issue there \n. I guess we'll not support Phantom, unless it's using extremely outdated WebKit under the hood.. @testcafe-build-bot \\retest\n. Tests fail due to the bug in lodash. Waiting for fix to be released.\n. @testcafe-build-bot \\retest\n. fpr\n. ping @helen-dikareva \n. > TypeError in chai assertions while using CLI of locally installed testcafe\nDo you run it from npm scripts?\n. @arubtsov We don't support this approach. \n. Tests fail due to the bug in lodash. Waiting for fix to be released.\n. @testcafe-build-bot \\retest\n. fpr\n. ping @AlexanderMoskovkin \n. We don't have CI again \\cc @AlexanderMoskovkin @AndreyBelym \n. @AndreyBelym We're in code freeze (kinda) now, so I would like to not introduce big changes before release. Let's merge it after release, ok?\n. @AndreyBelym It requires rebase. Also, I see that it introduces some new API for browser providers. Can you write s a feature summary in appropriate issues, like https://github.com/DevExpress/testcafe/issues/771 So @VasilyStrelyaev will be aware about what to document. Also, do we need to update existing providers? \n. @VasilyStrelyaev We need to add it to the docs\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. ping  @AlexanderMoskovkin @AndreyBelym\n. @AlexanderMoskovkin Seems like we have opposite results\n. @AlexanderMoskovkin Let's run it one more time, to ensure that it fixes instability\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin Can you elaborate please on how it fixes issue with tests? Also, as far as I understand skipScrolling is not a part of public API, but it's in options object that contains only public API options. I believe we should move it to other parameters object.\nUpdate\nSeems like moveOptions is not a part of public API\n. @AlexanderMoskovkin Can we add code comment that explains why we need to disable scrolling with reference to the issue? Because it's not quite clear from code, so let's take care of future us.\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin Is this caused by https://github.com/DevExpress/testcafe-hammerhead/issues/838? Or it's a separate issue?\n. @VasilyStrelyaev \n\nshould we also change all the links from this Readme to GitHub Pages from http to https\n\nYes\n. @testcafe-build-bot \\retest\n. FPR\n. Note that factors should multiply, so if we have 0.5 set in test controller and 0.5 for action the resulting speed should be 0.25\n. Also I guess it should be between 0.1 and 1\n. @AlexanderMoskovkin I don't think we need test controller option. There should be CLI and programmatical API option. Also, min value should be 0.01\n. @FreeSlave Hi, yes it's not published yet, since we don't have official release yet. Stay tuned \ud83d\udcfb \nMeanwhile, you can use development documentation: https://github.com/DevExpress/testcafe/tree/master/docs\n. @testcafe-build-bot \\retest\n. We've found only one issue locally: https://github.com/DevExpress/testcafe/issues/875 And the fix is on it's way. It seems like that Edge 14 is just unstable on Saucelabs for some reason. Let's try to turn it on a little bit later.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin OK, we have stable fails with upload test. Can we now keep only failing upload test and iframe tests that failed (not whole fixture). Also, disable Appveyor builds by rmoving .appveyor.yml and rebase on top of fix for innertext. Once we'll have tests isolated we can try to debug what's actually going on\n. Interesting, seems like preceding test affects results. Can you enable preceding tests as well?\n. Rebased to fix compiler tests\n. - [ ] Still blocked on npm env variables\n- [x] We need to do something with node10\n. @AndreyBelym Can you provide a test code please?\n. @vzaidman Thank you for sharing this. This feature is moved to the next sprint and more likely will be available in one of the alphas within a couple of weeks.. @testcafe-build-bot \\retest\n. FPR\n. @kirovboris How about fixture.beforeAll and fixture.afterAll? But test.setup/teardown doesn't fit in this paradigm then. . > We already have beforeEach ...test, so beforeAll will be associated with tests for me as well, not browsers.\nIndeed, it has nothing to do with browsers, so it will be correct association. Hi! TestCafe requires page to be served via HTTP(S) protocol. However, you can easily serve static pages by using packages like static-server\n. @lukasoppermann Sure, we have Recipes section for such things. Feel free to contribute or if your're busy we'll take care of it. Meanwhile, I'll convert this issue into documentation feature request.\n. @lukasoppermann No problem, we'll do it \ud83d\ude03  \\cc @VasilyStrelyaev \n. I believe it's worth implementing on our side: add ability to specify browser parameters for aliases. But command line syntax requires some bikeshedding. \nMaybe something like:\nsh\ntestcafe \"chrome --ignore-certificate-errors\",firefox tests/\n. > As for my situation, all I need is it to be opened in the browser as localhost. I noticed you start a server in my machine's IP in the given ports...do testcafe must open it as an IP address? I mean, localhost:port would work as well, and would allow people to even use their hosts file or rules for \"localhost\" special treatments (as in my case, from Service Workers spec).\nYou can specify localhost or your machine instead of IP address via --hostname command line option. Initially, we've used localhost as default hostname for TestCafe server, but it had some performance problems with SauceLabs tunnel (I can't find issue references at the moment, guys can you provide some insights here please \\cc @DevExpress/testcafe). So we decided to use NetBIOS name as a hostname, but it had problems with Edge browser: https://github.com/DevExpress/testcafe/issues/575 So we finally ended up using IP address as a solution that works properly with all platforms. Overall, if you're testing on local machine localhost should work just fine for you.\n. Hi @jkswoods.\nGreat idea! We have two ways how it can be done:\n1. Make screenshots on each test action. So you will end up with gif that is composed of discrete static screenshots, like slide show of test state.\n2. Record full video, like screencast feature in SauceLabs. \nPersonally, I prefer first option. With second option you will have huge screencast files after each test run and I'm not sure if we'll be able to capture screen for browser that run in parallel. Please, let me know if it will work for you.\n. lgtm\n. Hi Jake.\n\nNote that this may need to be two profiles rather than two windows. You may even want to test multiple windows of multiple profiles.\n\nThis is exactly what this function do, it's a part of upcoming Roles functionality.\nUpdate: I've forgot that we decided to use switchRole() instead of as(). I'll edit the example in OP post.\n. Hi @bmcminn.\nUnfortunately we'll not be able to reproduce the problem without a page. However, we have a few options how we can work through this issue:\n- We can sign NDA, so we'll be able to debug on your page.\n- We can try to determine the cause of the issue remotely, but it will require some time and assistance from your side\n- If it's possible, provide a simplified page that reproduces the problem, so it doesn't contain any proprietary code.\nPlease, let me know what works best for you.\n. @bmcminn The first thing we do is try to determine which subsystem causes the bug. From you report it's more likely our hammerhead proxy. \nRun the following commands:\nsh\ngit clone https://github.com/DevExpress/testcafe-hammerhead.git\ncd testcafe-hammerhead\nnpm install && gulp playground\nThis will open page with the input box in your default browser. Then type your website address into the input and hit the Proxy! button. It will open your website via hammerhead. Try to perform the same actions that you test does manually and check if error present in dev tools console.\n. @darlanmendonca Indeed, the issue is very odd. But looking at /home/travis/build/testcafe-build-bot/testcafe/tasks/src/client/.babelrc path in error message makes me think that the issue is in the incorrect source and destination paths of gulp task: previously all paths were relative to the Gulpfile, but now seems like gulp tries to resolve them relative to the task file path.\n. @darlanmendonca Does this problem reproduces if you run tasks locally?\n. I don't have access to my computer at the moment, so If you wouldn't mind I'll review the rest tomorrow.\n. @darlanmendonca \n\n@AlexanderMoskovkin how I can rebase? with\n\nIn your local branch directory:\nsh\ngit remote add upstream https://github.com/DevExpress/testcafe.git\nNow you have upstream remote repo set that points to this repo. The next step is to fetch upstream changes:\nsh\ngit fetch upstream\nand then perform rebase (there may be merge conflicts during rebase, you can resolve them as described here):\nsh\ngit rebase upstream/master\nThen update PR with rebased version:\nsh\ngit push -f\n. @darlanmendonca Hi, any updates on this one? We are really close to finish it.\n. It's because build task has lint as a dependency. My bad, I've mislead you with https://github.com/DevExpress/testcafe/pull/919#discussion_r85299549 \nWe need to modify lint.js the way that it will require eslint and actually do anything only in node >=4.0.0. \n. I believe they will not accept a PR, since eslint itself dropped support for node 0.10\n. Can be covered with unit tests. Hi John.\nThank you for the report. Can you run\nsh\nDEBUG=testcafe:test-run:* testcafe {your-browser} {your-test-files}\nand post the output here, please?\n. @VasilyStrelyaev you forgot about dictionary shorthand methods\n. Wait, @AndreyBelym : https://github.com/DevExpress/testcafe-browser-tools/issues/104 - will it go to current release?\n. https://github.com/DevExpress/testcafe/issues/915 - is missing as well. It's related to DevExpress/testcafe-browser-tools#104\n. Hi @tryggvigy.\nThank you for the contribution! But it was done intentionally, see https://github.com/DevExpress/testcafe/pull/899#discussion_r84576706\n. @tjoskar It will be possible soon, see: https://github.com/DevExpress/testcafe/issues/905\nCurrently there is some tricky (undocumented) way to specify browser parameters, @AndreyBelym could help.\nAlso, I guess we should automatically disable extensions like we going to do with wizards: https://github.com/DevExpress/testcafe-browser-tools/issues/102\n. I doubt we'll ever implement it. Hi @vitalets.\nNative dialogs are handled via pre-specified handlers, see: https://devexpress.github.io/testcafe/documentation/test-api/handling-native-dialogs.html\n. @vitalets Correct. For other dialogs that require actions from user (like confirm) we also execute pre-defined handlers to decide how dialog should be handled.\n. You mean parallel run in different browsers or parallelize task using different instances of the same browser? If the first one, it's already supported (e.g. testcafe chrome,firefox - will run tests in parallel in Chrome and Firefox). If the second one, it's possible from technical perspective, but we haven't received any requests for this feature yet. So once there will be a demand, we'll implement it.\n. lgtm\n. https://www.algolia.com/. lgtm\n. I guess it's a Hammerhead issue, @churkin can you try it via playground?\n. This will violate black box testing paradigm. Don't merge it, please. I've figured out that we need some changes to this mechanism\n. Ready for review. I've added feature summary in the OP post of PR.\n. FPR, there are no changes in the code since the last successful test run, so it's just an unstable test. \n. @arubtsov We allow relative links in navigateTo\n. lgtm\n. Hi @Angelmmiguel,\nWe have a skip feature planned: https://github.com/DevExpress/testcafe/issues/246\nI believe this is pretty much the same thing. Please, let me know if this approach will work for you.\n. We also have a discussion going in https://github.com/DevExpress/testcafe/issues/802 about test flags/extensions syntax. Feel free to participate or vote for the variants that you like.\n. Okay, I'm closing this one then.\n. The issue is caused by https://github.com/babel/babel/issues/2877. This ticket contains workaround for the issue, we can try to do it on our side. @AndreyBelym can you try workaround on our side?\n. Thank you!\n. Actually everyone is welcome to review. \\cc @DevExpress/testcafe \n. @testcafe-build-bot \\retest\n. @kirovboris \n\nI like this features, but gte (greater or equal?) and lte abbreviations look a little bit strange in my opinion.\n\nIt's pretty common, e.g.: https://docs.mongodb.com/manual/reference/operator/query/lte/. The alternatives are: gtOrEql and ltOrEql or atLeast and atMost. TBH, I don't like both.\n. @helen-dikareva \n\n/r-\ngreat work)\n\n\ud83d\ude06 \n. FPR\n. @georgiy-abbasov Is there any real life scenarios for this? The common case is to compare with some constant value or with previous state of element.\n. @georgiy-abbasov I guess we can go with this implementation for now and once where will be a demand implement retries for the actual value as well.\n. @miecio1212 The solution is either to issue a PR, or wait till functionality will be implemented by someone else, or use workaround that @AlexanderMoskovkin suggested.. Can be implemented with custom methods. @helen-dikareva There is a broken link on page. @romanresh If I get it right you can simply workaround it by using:\n```js\nawait t.expect(await getHeaderText(1)).eql(\"Last Name\");\n```. @testcafe-build-bot \\retest. Hi @jgraup,\nI've tried to reproduce the problem on my side but failed, I've used the following test code:\n``js\nfixturetest`.page('http://google.com');\ntest('test', async t=> {\n    var button = await t.select(() => document.querySelector('custom-tag[data-custom-foo=bar]'));\nexpect(button).to.be.null;\n});\n```\nTest passed without selector error in Chrome. Can you clarify which browser you are using, please?\nAlso, note that you can just pass a selector string to Selector or t.select and it will be a shorthand for document.querySelector: \njs\nar button = await t.select('custom-tag[data-custom-foo=bar]');. This is a by design behavior of CSS selectors. According to the spec:\n\nAttribute values must be CSS identifiers or strings. [CSS21] The case-sensitivity of attribute names and values in selectors depends on the document language.\n\nSo, if value in selector is not enclosed in quotes it's treated as indentifier and according to the spec:\n\nIn CSS, identifiers (including element names, classes, and IDs in selectors) can contain only the characters [a-zA-Z0-9] and ISO 10646 characters U+00A0 and higher, plus the hyphen (-) and the underscore (_); they cannot start with a digit, two hyphens.... These pseduo-selectors are not a part of any CSS spec and implementing them as pseudo-selectors will be quite complicated since we'll need to parse queries. We can introduce filter method instead:\njs\nSelector('.hey').hidden(true); // default\nSelector('.hey').hidden(false);\n\nNote that we can't use visible filter since there is a shorthand property with the same name.. Selector('.hey').filterVisible()\nSelector('.hey').filterHidden(). @miherlosev  https://github.com/DevExpress/testcafe/issues/1018#issuecomment-264182318. @VasilyStrelyaev https://derickbailey.com/2014/03/27/double-negatives-in-code-dont-not-avoid-double-negative-boolean-logic/. @miherlosev Apart from it being a bad design decision for the API:\n\nIf you need to get the entire DOM element state, call the selector with the await keyword like you would do with regular async functions. It returns a DOM Node Snapshot that contains all property values exposed by the selector in a single object.\n\nin https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors.html#dom-node-snapshot (BTW, section that explains selector properties points to the DOM Node snapshot, so it's not quite clear that we expose these properties on Selector as well \\cc @VasilyStrelyaev). @VasilyStrelyaev Yep, maybe it's worth mentioning that they are exposed as promises on Selectors and SelectorPromises, and as regular properties on snapshot in https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/dom-node-state.html. @VasilyStrelyaev And we should deprecate snapshots and SelectorPromises for the love of god. It will significantly simplify both codebase and the API.. FPR. @testcafe-build-bot \\retest. FPR \\cc @lexkazakov @DevExpress/testcafe-docs I've also changed PageObject example for selectors.. @testcafe-build-bot \\retest. Just why not to compare with void 0?. Use concurrently module instead.. Use concurrently module instead.. Use concurrently module instead.. @AlexanderMoskovkin We need a recipe for this one and modify existing recipies as well. @AlexanderMoskovkin We need a recipe for this one and modify existing recipies as well. I guess I'd like to revisit it. concurrency is to verbose and you need to add it to every recipe. Built-in functionality would be nice.. I guess I'd like to revisit it. concurrency is to verbose and you need to add it to every recipe. Built-in functionality would be nice.. I guess it's OK to merger, since fail is related to the well-known unstable test. @AlexanderMoskovkin can you publish alpha once it will be merged? . I guess it's OK to merger, since fail is related to the well-known unstable test. @AlexanderMoskovkin can you publish alpha once it will be merged? . Once we'll have #738 implemented it will be possible to do it via Selector('div').child(0) and Selector('div').child(-1). Once we'll have #738 implemented it will be possible to do it via Selector('div').child(0) and Selector('div').child(-1). It's by design. TestCafe recognizes test files by fixture and test definitions, otherwise they considered a regular js file.. I don't get it. index1 doesn't contain any tests, why it should be executed?. We need to filter out TestCafe test files somehow, because you can specify e.g. tests/*.*.js as a source. We treat file a TestCafe fixture if it contains fixture declaration and at least single test. Not relevant anymore. BTW, we need to change all recipes to use this approach instead of concurrently or shell scripts \\cc @DevExpress/testcafe-docs  . FPR. @VasilyStrelyaev It's just a feature description name, it can have any name you like in the docs, e.g. context-dependent: child for .parent filter, parent for .child filter, etc.. @miherlosev Why it's done as a plugin not by contributing env directly to eslint: http://eslint.org/docs/user-guide/configuring#specifying-environments. Got it, thanks for explanation. @miherlosev We need to add it somewhere to the docs. Can be accomplished with https://github.com/DevExpress/testcafe/issues/1270. @VasilyStrelyaev What about same section in README?. I was able to reproduce the issue. The cause of the problem is that browser runs out of memory when we try to serialize enormously large object. I guess the best option here will be a limit for the returned object size, let's just throw an error with some descriptive message.. Hi,\nbeforeEach is executed on the page that is specified as the start page of the fixture. So if you rearrange the order of URLs in your code:\n```js\n// Separated file -> loginHelper.js\n// The login part (this part works ok...)\nimport { Selector } from 'testcafe';\nconst loginInput = Selector(email => document.getElementsByName('email'));\nconst password = Selector(password => document.getElementsByName('password'));\nconst loginBtn = Selector(loginBtn => document.getElementsByName('loginBtn'));\nexport var login = async t => {\n    await t. \n            typeText(loginInput,'sgcp@sgcp.com.br').\n            typeText(password,'123456').\n            click(loginBtn).\n            navigateTo('http://localhost:3000/#/fiel-cadastro/comunidade/');  \n};\n// This code do not works well\nimport { Selector } from 'testcafe';\nimport { login } from '../page/loginHelper';\nfixture Teste comunidade\n    .page('http://localhost:3000/#/login/')\n    .beforeEach(login)\ntest('Deve validar campos obrigat\u00f3rios', async t => {\n    await t.typeText('#nome', 'Comunidade Teste');\n});\n``. @churkin It's odd that we have inconsistent test results if page contains, can we handle it gracefully? Also, I remember that we've discussedsupport, but decided that this obsolete technology doesn't worth the efforts. However, since seems like it's still used in the wild maybe we can support it somehow. I don't remember if we had any technical difficulties with it? . @churkin It's odd that we have inconsistent test results if page contains, can we handle it gracefully? Also, I remember that we've discussedsupport, but decided that this obsolete technology doesn't worth the efforts. However, since seems like it's still used in the wild maybe we can support it somehow. I don't remember if we had any technical difficulties with it? . I guess we can provide such limited support by injecting runtime scripts into the first frame of a frameset (and perform HTML instrumentation only for it). Shouldn't be hard to implement. @churkin what do you think?. I guess we can provide such limited support by injecting runtime scripts into the first frame of a frameset (and perform HTML instrumentation only for it). Shouldn't be hard to implement. @churkin what do you think?. As far as I remember reporter relies on serial execution as well.. BTW, why do we needserial` in the first place? What's the use case? Pure serial execution was never guaranteed by TestCase (same test runs in parallel in different browsers) and it worked well so far, so what itch we try to scratch here? Moreover, it will not work well with our reporting: since we have text-based reporters we can't break the order of tests. If you run \"serial\" tests first: you either don't report them immediately and wait for their fixture to start, or somehow split report in two parts: one for serial and one for parallel tests. . > In theory the concurrently feature can be useful when you run tests in a single browser and some tests can be run concurrently but some tests can't be (for example they change a database state). \nPlease, read carefully: we already have this behavior. Don't we try to solve a problem that doesn't exists here?\n\nFor example if I run tests just in two browsers: testcafe chrome,firefox test.js, and I have a serial test. Should it be run in two browsers concurrently or it should be run one by one? How it should work if I run tests in two browsers with the concurrently option via testcafe chrome,firefox test.js -c 2 ?\n\nI have a great solution for this problem: don't add serial.. ...at least for now.. ping @AlexanderMoskovkin \n@georgiy-abbasov can your review instead of @helen-dikareva, please? . Dup #407. Do we need plugin or built-in reporter? I guess we should make it built-in reporter. @churkin Was you able to reproduce it?. Hi Umar,\nTestCafe starts executing test actions after DOMContentLoaded event fired, all initial XHRs completed and dynamically inserted scripts executed. Is there any cases there this wait mechanism is insufficient?. Hmm, I guess we should revisit autowait tuning options that we've discussed before. How I see it: we add options to test and fixture with which you can adjust what events testcafe should wait for before starting action execution, e.g.:\njs\ntest.setLoadAutoWait({\n     dom: true,\n     scripts: true,\n     images: true,\n     fonts: false,\n     ...\n}) ('Some test', async t => {\n});\nI wonder if these settings should be adjustable during the test run, e.g. via t.setLoadAutoWait. \\cc @AlexanderMoskovkin . But how you'll define this custom load handlers? Function that returns Promise? E.g.:\njs\ntest.addCustomLoadBarrier(() => { /* your logic here */});. @umaar I like it and it shouldn't be hard to implement. BTW, is load barrier handler should be a client function and be executed entirely on client side?. @umaar Will proposed approach work for you?. > What about something like beforeEachAction or beforeAction hook, that will be executed before the next test action? /cc @p-bakker @inikulin\nWhat should we do if beforeEachAction contains... an action?. @p-bakker Selectors already can accept function that is executed on client and it can return Promise which resolves to element (see: https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors.html#selector-initializers). Thus, you can specify when your selector should be resolved with element. Is this suitable solution for you?. We have context window/frame concept, frames are switched using switchToIframe and switchToMainWindow. Hook works in current context.. @mjhea0 Create ClientFunction/Selector query that observes required change and use assertion with 3 minutes timeout.. We usually prevent non-testcafe actions on page to avoid side effects by accidental user actions. Though we've made exceptions for shortcuts that open dev tools, seems like we missed something. Which OS and browser you are using?. I guess it would be nice to publish them automatically as post-publish script for publish-please. publish-please don't have these functionality yet though. It should be very easy to implement. @AndreyBelym would like to issue a PR to publish-please? . ping @AndreyBelym . @testcafe-build-bot \\retest. What's proxy ignore options are for?. @tiagorosendo We are working on it. More likely it will be released in alpha in a couple of weeks.. @anescobar1991 We've decided to start with minimal feature set and add advanced features afterwards if there will be a demand for them. If you are interested in this feature, open new issue, please. PRs are welcome as well.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @georgiy-abbasov Which of them are odd? If you are talking about core-js stuff - yes, they should be filtered out by stack filter. Debug to figure out why they still where.. Hi, good idea. I saw you issued PR already: feel free to contribute.. It would be nice to have a functional test for this . Thank you very much for contribution!. Seems like approach from https://github.com/DevExpress/testcafe/pull/1236/commits/8603d492c2fb62d9a30ba68ce37fef043e577d0d worked, why not stick with it?. @georgiy-abbasov We can enable polyfills for node 10 it's not a big deal: we'll have problem with callsites on node 10, but it's already in maintenance mode and we're about to drop support for it.. @georgiy-abbasov hmm, didn't see the last one. Looks good if it works. Hi @reaktivo,\nwhich OS are you on?. As far as I remember where were problems with nocase option: on case-sensitive file systems you will not be able to run both Test and test dirs. It's an edge case, but still it would be nice to be consistent here. However, we didn't took in consideration that MacOS with default configuration has case-insensitive file system. Therefore, I suggest to change original condition (I guess we should revert it to check for Linux) instead of enabling nocase.. @reaktivo Any update on this?. We need docs at first, so it can be referenced here (I guess it should be described in .page section). @ClaytonAstrom Check out https://github.com/DevExpress/testcafe/issues/527, maybe suggested API will fit your needs. @ClaytonAstrom Can you add \ud83d\udc4d to #527, please? We usually give higher priority to voted issues.. @AlexanderMoskovkin Is it regression after https://github.com/DevExpress/testcafe/issues/1226?. @AlexanderMoskovkin As far as I can tell should work as expected: https://github.com/DevExpress/testcafe-reporter-json/blob/master/src/index.js#L40. Covered by tests as well: https://github.com/DevExpress/testcafe-reporter-json/blob/master/test/data/report-with-colors#L31 I guess there might be confusion in original post when screenshots are made (e.g. t.takeScreenshot is not used)? . Hello @Rask777,\nthank you for the details. We'll investigate it. . Looks like it can be combined API-wise with #1271. We need to bikeshed it a bit.. Yes, we need some feedback and probably time to figure out the shape of this. Anyway, current sprint is fully packed with features already, so we'll not be able to implement it until the next one.. I guess I've figure out how it can be done. At first we'll implement request hooks and provide RequestLogger hook with testcafe:\n```js\nimport { RequestLogger } from 'testcafe';\nfixture Fixture;\ntest('My test', async t => {\n    const logger = new RequestLogger({ logHeaders: true, logBody: false });\nt.addRequestHook(logger);\n\n// Do something...\n\nconsole.log(logger.lastUrl);\nconsole.log(logger.getRequestsFor('http://example.com/*')[0].headers);\n\n// etc. We can exact API for logger helpers later\n\n});\n```\n@umaar What do you think?. Will be implemented with special [request hook](https://github.com/DevExpress/testcafe/issues/1341 RequestMock. E.g.:\n```js\nimport { RequestMock } from 'testcafe';\nconst mock = new RequestMock();\nmock\n      .onRequest('http://example.com/*') \n      .filter({ method: 'POST', isAjax: true })\n      .respond({\n           status: 200,\n           body: 'test'\n      });\nfixture Fixture\n    .useRequestHook(mock);\ntest('My test', () => {\n    //...\n})\n. @thecodejack Sure. I guess it would be nice to have this feature. As a temporary workaround you can represent your text as regexp and set boundaries:js\nimport escapeRegExp from 'lodash/escapeRegExp';\nfunction getWholeTextRe(text) {\n    return new RegExp(^${escapeRegExp(text)}$);\n}\n// use it as t.expect(smthg).contains(getWholeTextRe('myText'));\n// or Selector('div').withText(getWholeTextRe('myText'))\n``. We need to figure out API for that. How aboutSelector.withWholeText()`? \\cc @DevExpress/testcafe @VasilyStrelyaev . @testcafe-build-bot \\retest. ping @AlexanderMoskovkin @AndreyBelym . It's by design. The main purpose of RAW API is that it intended to be created by machine, so we can avoid validation-related burden.. @miherlosev Then you should open issue in studio repo.. @testcafe-build-bot \\retest. FPR. @thecodejack Have you tried HTTP auth feature? It supports NTLM authentication with which Kerberos is back compatible. @brettveenstra If I understood you correct, upcoming Roles feature suggested by @AlexanderMoskovkin should fit your requirements.. Hi,\nid selectors that start with digit are forbidden by CSS spec. Possible workarounds for the issue can be found in this article: https://benfrain.com/when-and-where-you-can-use-numbers-in-id-and-class-names/. @ghiscoding This is caused by the fact that gulp-testcafe uses outdated version of testcafe. Thank you for the report!. I've just published gulp-testcafe@9.0.1. It's now always uses latest testcafe version.. FPR. FPR. ping @helen-dikareva @georgiy-abbasov @AlexanderMoskovkin . @AndreyBelym Can you take a look, please?. \\cc @AndreyBelym take a look pls. Hi!,\nIf you need to read or write value to storage from test code, you can create a bunch of ClientFunctions:\n```js\nimport { ClientFunction } from 'testcafe';\nconst localStorageSet = ClientFunction((key, val) => localStorage.setItem(key, val));\nconst localStorageGet = ClientFunction(key => localStorage.getItem(key));\nfixture Test fixture;\ntest ('Test', async t => {\n    await localStorageSet('foo', 'bar');\nawait t.expect(localStorageGet('foo')).eql('bar');\n\n});\n``. @darlanmendonca Do you mean that you wrapped browser name with quotes as @AlexanderMoskovkin suggested and problems still persists? Because judging from your error message it's not wrapped.. @darlanmendonca Which command prompt/terminal you are using?. @darlanmendonca Can you please post here result oftestcafe -b browserstack` and error that you currently see after running command from https://github.com/DevExpress/testcafe/issues/1330#issuecomment-287751267?. Can you describe in details what are expected and current results, please? Small repro test will be great.. @p-bakker I believe that we shouldn't implement state sharing between tests. If we do so, we will introduce  ambiguity: \n - what should happen if one test fails, does it makes sense to continue the task? What if you have tests that doesn't share URL, should we continue running them?\n- which API should we use to show that tests should be run in sequence on the same page without isolation from each other?\nTherefore, taking in the account this requirements:\n\na: this makes is very difficult to read (the test method would become hundred if not thousands LOC long)\nb: doesn't give the the execution time per individual step (which I would also like to track).\n\nI believe we should implement named sections for tests:\njs\ntest('Some test')\n   .section('Login', async t => {\n       //...\n   })\n   .section('Do smthg', async t => {\n      //...\n   })\n   .section('Do smthg else', async t => {\n      //...\n   });\nIt will still be a single tests, however each section will be reported separately on completion as they progress. Failing single section will fail whole test (which I guess makes sense in your scenario).. @p-bakker I believe that we shouldn't implement state sharing between tests. If we do so, we will introduce  ambiguity: \n - what should happen if one test fails, does it makes sense to continue the task? What if you have tests that doesn't share URL, should we continue running them?\n- which API should we use to show that tests should be run in sequence on the same page without isolation from each other?\nTherefore, taking in the account this requirements:\n\na: this makes is very difficult to read (the test method would become hundred if not thousands LOC long)\nb: doesn't give the the execution time per individual step (which I would also like to track).\n\nI believe we should implement named sections for tests:\njs\ntest('Some test')\n   .section('Login', async t => {\n       //...\n   })\n   .section('Do smthg', async t => {\n      //...\n   })\n   .section('Do smthg else', async t => {\n      //...\n   });\nIt will still be a single tests, however each section will be reported separately on completion as they progress. Failing single section will fail whole test (which I guess makes sense in your scenario).. @p-bakker What do you think about this approach?. @p-bakker What do you think about this approach?. @p-bakker \n\nI wonder if such a section structure isn't going to cause issues with output formats like xunit for example. I rather not loose the ability to have the output of tests generated in 'standard' formats that can be consumed by external tools\n\nFor xunit it will be reported as `'.\n\nhow would this interact with the useRole feature? I'd still need the ability to continue after a useRole call on the url where that role was last.\n\nYou just login in the first section of the test and subsequent steps happen on the same page without reload.\n\nwhat should happen when tests fails: there is already a separate FR for bailing out on first failure #1323\n\nYes, but it's runner option, what if will not enable it and I have mixed tests; some of them use the same page and others not. How we will TestCafe that tests should reuse the page?\n\nwhat API to use: I'd have suggested something like a continueWithPreviousUrl flag on the fixture\n\nThe question is \"previous to what\"? It depends on what set of test files/tests (there can be skipped ones) were run. Too much ambiguity. . @p-bakker \n\nI wonder if such a section structure isn't going to cause issues with output formats like xunit for example. I rather not loose the ability to have the output of tests generated in 'standard' formats that can be consumed by external tools\n\nFor xunit it will be reported as `'.\n\nhow would this interact with the useRole feature? I'd still need the ability to continue after a useRole call on the url where that role was last.\n\nYou just login in the first section of the test and subsequent steps happen on the same page without reload.\n\nwhat should happen when tests fails: there is already a separate FR for bailing out on first failure #1323\n\nYes, but it's runner option, what if will not enable it and I have mixed tests; some of them use the same page and others not. How we will TestCafe that tests should reuse the page?\n\nwhat API to use: I'd have suggested something like a continueWithPreviousUrl flag on the fixture\n\nThe question is \"previous to what\"? It depends on what set of test files/tests (there can be skipped ones) were run. Too much ambiguity. . p-bakker Yeah, forgot to close code section and it was removed by sanitizer =)\nFor xunit it will be:\nxml\n<testcase classname=\"fixtureName\" name=\"testName-sectionName\" ...>\n\nAs for your answer on how your .section approach will work in combination with useRole: so you suggest to also still add the feature described in your first comment on this case, besides the .section approach?\n\nYou will not need this Role feature, since sections are technically a single test (no page reloads happen in between), they just help you arrange test code and you will have them reported separately. . p-bakker Yeah, forgot to close code section and it was removed by sanitizer =)\nFor xunit it will be:\nxml\n<testcase classname=\"fixtureName\" name=\"testName-sectionName\" ...>\n\nAs for your answer on how your .section approach will work in combination with useRole: so you suggest to also still add the feature described in your first comment on this case, besides the .section approach?\n\nYou will not need this Role feature, since sections are technically a single test (no page reloads happen in between), they just help you arrange test code and you will have them reported separately. . > But I guess I can handle that with the work-around you suggested earlier by capturing and storing the url at the appropriate times against a role and navigating back to the captured url when switching to the Role again.\nOh, I see now. Makes sense. I'll create separate ticket for sections then and advance this one to the current sprint.. > But I guess I can handle that with the work-around you suggested earlier by capturing and storing the url at the appropriate times against a role and navigating back to the captured url when switching to the Role again.\nOh, I see now. Makes sense. I'll create separate ticket for sections then and advance this one to the current sprint.. Tests fail. Hello @chadmyers,\nWe've had discussion before about this feature in context of #903, but decided to postpone it's implementation since where was no demand for it at the time. The question is should this hooks have access to TestController and thus to tested page or not (like fixture.before/after hooks)? Can you share your use case, please, so we'll be able to figure out basic capabilities of this feature? \nBTW, for currently you can use the following workaround to achieve desired functionality:\n```js\nfunction once(fn) {\n    var executed = false;\nreturn function() {\n      if (!executed) {\n           executed = true;\n           return fn.apply(this, arguments);\n      }\n};\n\n}\nfixture My fixture\n     .beforeEach(once(async t => {\n           // ...\n      }));\ntest\n.before(once(async t => {\n//...\n}))\n('My test', async t => {\n//...\n});\n. @chadmyers Thank you for the feedback. We need to figure out naming now. I wonder if `test.beforeOnce` and `fixture.beforeEachOnce` fits well.. lgtm. @VasilyStrelyaev let's update website. Seems like a duplicate of https://github.com/DevExpress/testcafe/issues/1267. @churkin Can you confirm?. It's quite messy :/ What if we introduce `disableDebugBreakpoints` var which is checked when we decide if we need to add breakpoint command? In that case we can avoid this multiple reassignments. There are lint errors. lgtm. Hi @nihaux, did you manage to resolve the issue on your side?. @nihaux Are you trying to evaluate `getItem` from console?. Can you give some example of how you expect it to work, please? E.g. if we expose these functions, how test task should be started? Currently you tell TestCafe to run specific file/dir and it lookups for file with `test()` calls and execute them. How workflow will look like with exposed functions? . @reaktivo How aboutjs\nrunner.populateTests('suite/file name', (fixture, test) => {\n    fixture(feature.name);\nfeature.steps.forEach(step => {\n  test(step.name, step.fn);\n});\n\n});\n`` \n?. But on the other hand I guess the better way to solve this will be plugable compilers. You will createtestcafe-compiler-cucumberplugin which will be automatically loaded by TestCafe if installed. Plugin will decide which files to compile (by file extension and content patterns) and will implement logic that converts file content into sequence oftestandfixturecalls. Actually, we almost have this mechanism implemented (TestCafe currently supports 3 different types of test syntax, but it's a big secret ;)), therefore we just need to make its API public. . @AlexanderMoskovkin It's because we spawn another process in CLI and this parent process receives SIGINT, not the actula testcafe. We need just to pass it to the child process.. It uses myv8-flag-filter` module: https://github.com/DevExpress/testcafe/blob/master/bin/testcafe-with-v8-flag-filter.js#L8\nHmm, but seems like it already do signal redirection:\nhttps://github.com/inikulin/bin-v8-flags-filter/blob/master/index.js#L62. Oh, seems like the problem is that in v8-flag-filter we send SIGTERM immediately after SIGINT. It expects program to terminate synchronously. @AlexanderMoskovkin I'll add you as a co-maintainer to module on github and npm, so you will be able to fix it.. Hello, we don't support installs from GitHub and don't plan to implement it. Any valuable changes between major release are published in alpha channel and can be installed via npm install testcafe@alpha. @testcafe-build-bot \\retest. @mjhea0 \nUse selectors:\n```js\nconst dropdown = Selector('.dropdown-wrapper').withText('SOMETHING');\nif (await dropdown.exists) \n   //...\n``. Interesting, can you provide tested markup, please?. @baens Command line arguments resolution happens on terminal level, before hitting any testcafe code. There is nothing we can do with it.. @sagarvora Unfortunately, tested page is unreachable, therefore we'll not be able to reproduce the problem. Is it possible to provide page that is publicly available? If not, we can sign NDA and communicate via private medium.. I'm closing this one as duplicate, to track updates refer to #897.. Ping @helen-dikareva . Already discussed: we'll through error in hammerhead and redirect toabout:error`. Semantically it's pretty much the same as DNS error.. @madmod But what's the purpose of starting tests if task will terminate anyway if one of browsers is not connected?. > A secondary goal of the enhancement could be to add per-browser progress information to reporters, giving the developer more immediate feedback if a test were failing in many/all browsers. For example a reporter could show (1/2) after the test name to indicate that one browser still needs to complete the test like this\nWe can't report progress per browser, because it will require output rewrite, which is impossible if you redirect report to the file or terminal which doesn't support that.. @AlexanderMoskovkin We have a failing test. @georgiy-abbasov So it's a real fail and we're blocked on it?. @mjhea0 We have #1207. We even had had a long in person discussion about original proposal and decided to drastically change proposed approach afterwards. Discussion should have been documented by @kirovboris. However, unfortunately I can't find any notes \ud83d\ude1e . You can add \ud83d\udc4d to the #1207 so we'll know that there is a demand for the feature.. @astanciu We thought about this scenario, but decided to postpone local storage sandboxing implementation for Roles. Now when there is a demand for the feature, I'll add it to the planned.\n@churkin What we need from hammerhead side to implement it?. Why we need separate cdp alias, can we use chrome instead, e.g. chrome:headless?. @AndreyBelym Still looks a bit messy for me. Let's ask others: \\cc @DevExpress/testcafe . @testcafe-build-bot \\retest. @AndreyBelym actually it does. But it only re-evaluates actual value. We've discussed it previously and decided to not implement handling for expected value. Shouldn't be hard to implement.. Window is not a HTML node, therefore then you pass window as a CSS selector it searches for elements with tag name window (the same way as e.g. document.querySelector does). What you need is t.eval that allows you evaluate arbitrary code on client side and obtain its results:\njs\ntest('Some test', async t => \u0425\n     const prop = await t.eval(() => window.top[\"myobj\"]);\n});\nIn case you need a reusable solution, you can stick with ClientFunction:\n```js\nimport { ClientFunction } from 'testcafe';\nconst getWindowTopProp = ClientFunction(prop => window.top[prop]);\nfixture Some fixture;\ntest('Some test', async () => {\n    const prop = await getWindowTopProp('myobj');\n});\n``\nAny additional information can be found in [docs](https://devexpress.github.io/testcafe/documentation/test-api/obtaining-data-from-the-client.html).. Hmm, I've seen this issue once, but was not able to reproduce it since then. @zation Is problem persists after retry?. @zation Is problem persists if you removestty cols 78suggested by @AlexanderMoskovkin ?. @zation No worries!\n@AlexanderMoskovkin I guess as a prevention we can set lower limit on tty string length. E.g. default value should work fine for most cases. I'll add it to current sprint.. \\cc @AlexanderMoskovkin . How you going to figure out which test run caused a rejection?. Oh, you mean on the client side.... You can use theminimalreporter if you are interested in failed tests only.. @AlexanderMoskovkin Actually we have an issue for the visibility filter: https://github.com/DevExpress/testcafe/issues/1018. I guess it makes sense to implement it. The only problem is the proper name for it, sincevisiblewill conflict withvisible` property of the selector.. @AlexanderMoskovkin Unfortunately, no.. I bet it's a nightmare process that is never terminated and blocking node from exit.. It's by design. Take a look at Selector TS tests. You need to declare Selector interface extension. . @AlexanderMoskovkin \n\nI thinks a recipe is an appropriate form to describe this details about the feature. And we can add links to it from Test API documentation section. Do you agree?\n\nNo. It's a basic functionality and should go directly to the docs. How do you imagine that? We state that TestCafe supports TS and we don't have some basic information about it in the docs and moreover I can't even run such tests without a bit of this information. Recipies are about how to accomplish some scenario with TestCafe, not about basic programming API. Therefore, it will be the last place on Earth where I would expect to see this information.. Hi, now you can generate tests by simply using language features, e.g.:\n```js\nconst testCases = [\n    { name: 'button1', selector: '#btn1' },\n    { name: 'button2', selector: '#btn2' }\n];\nfor (const c of testCases) {\n    test(Click ${c.name}, async t => {\n         await t.click(c.selector);\n    });\n}\n. Yes. `const` and `let` are block scoped, whereas `var` is function scoped.. How's that?. ping @AndreyBelym . @jvanoostveen Can you just filter out mocha tests from TestCafe source files? . Did I get it right: you are bundling production code and during compilation of the production code you get complains from TS compiler about mocha and TestCafe tests?. Do you require/import TestCafe or mocha in your production files?. Can someone share their setup? I still don't understand how both mocha and testcafe tests are mixed up and why they simultaneously compiled by TS and what production code bundling has to do with it all.. I believe that's a bug that you can't filter attr by strict name match when string argument is provided. . We have xunit reporter that is pretty much it.. I guess it's a duplicate of https://github.com/DevExpress/testcafe/issues/980. Yes, it is possible via [--ports](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--ports-port1port2) option.. Hmm, I guess it would be better to implement global `beforeEach` and `afterEach`, e.g.:js\nimport { beforeEach } from 'testcafe';\nbeforeEach(...); //This sets before each handler for all tests in the task.\n```\nand it will be a good chance to finally implement https://github.com/DevExpress/testcafe/issues/745. Duplicate of https://github.com/DevExpress/testcafe/issues/980. I like @caseyWebb's variant.. @caseyWebb it can't, how we figure out if it's continuation of reporter parameter value or browser name or file path? You can keep spaces though, but you need to enclose parameter value into quotes.. Shouldn't it be a per-test API options as well?. Yes. @djbreen7 You can wrap individual tests in forEach, I guess covers both of your use cases.. Apart from just increasing complexity, how's that different from specifying testcafe ...options in npm test? Option files make sense if you have some complicated options that doesn't fit in command line paradigm (e.g. in Babel). Why we need it?. > It is not different. It is another way to specify options.\nFamous last words \ud83d\ude00\nDo you scratch some real itch here? Because I recall we already discussed it a few times and was not able to find any real value in it. We even have closed issue for it somewhere around here. It's definitely yarn's bug and should be reported there.. It would be nice to see exact scenarios for this first. For now it sounds like we are going to introduce yet another footgun, there each test results depend on previous one.. > This will optimize test time as well\nIMHO it's a slippery slope. It's not a good idea to sacrifice consistency for performance.. Hmm, the thing is that scripts on page shouldn't be able to modify session id at all. Any page script should see https://appsforoffice.microsoft.com/lib/1/hosted/en-us/outlook_strings.js instead of http://192.168.2.41:62791/bjva1ih9z!s!utf-8/https://appsforoffice.microsoft.com/lib/1/hosted/en-us/outlook_strings.js, so seems like it's a breach in our sandbox rather than ID problem.. @pyry The problem is that page scripts should never have access to real URL, so it's definitely a sandbox breach. . Guys, please don't spam thread with \"+1\" comments. Apart from them creating additional noise in repo's watchers timeline, they are completely useless since team uses standard GitHub reactions on issues to prioritise tasks.. @pablorivera But website is indeed unreachable:\nsh\n\u276f ping develop-i.quid.com \nPING develop-i.quid.com (10.4.0.222): 56 data bytes\nRequest timeout for icmp_seq 0\nRequest timeout for icmp_seq 1\nRequest timeout for icmp_seq 2\nRequest timeout for icmp_seq 3\nRequest timeout for icmp_seq 4\nRequest timeout for icmp_seq 5\n^C\n--- develop-i.quid.com ping statistics ---\n7 packets transmitted, 0 packets received, 100.0% packet los\nI guess the problem here is that we report incorrect network error message here. But as far as I remember we use error provided by Node, so it may be a problem on Node side as well.. Hi @classicalConditioning,\nIt's an intended behaviour of fixture hooks, for further details please refer to https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#fixture-hooks . Please don't. It will kill any opportunity for selector API extensions from our side, since it may conflict with filters introduced by users.. Please don't. It will kill any opportunity for selector API extensions from our side, since it may conflict with filters introduced by users.. Hmm, I completely forgot about it. And now looking at the provided code snippet I realise that you should explicitly create new selector, so it will not pollute all selectors. I guess it's fine then. However, I think we still need to rethink this for v1.0.0, e.g. it would be nice to have a way to create extended selector without calling it and make all these custom stuff propagate throughout selector chain.. @timwis You can use proxy between testcafe and origin to redirect XHR requests (see https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--proxy-host). However, if you want to do that from your test code you'll need this feature.. @timwis You can use proxy between testcafe and origin to redirect XHR requests (see https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--proxy-host). However, if you want to do that from your test code you'll need this feature.. It doesn't feel right to use ctx for test metadata. It's purpose is just to share variables between tests/fixtures in runtime. We have test/fixture tags proposal somewhere here as far as I remember, seems like it's a good fit for this kind of things.. @tk8817 ctx has nothing to do with reporting. The only purpose of this property is to share variables between tests and test hooks: https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#sharing-variables-between-test-hooks-and-test-code. I believe there should be dedicated property for such reporting purposes, otherwise it will be quite confusing.. > if you look at the code, this object is where the reporter gets all of its data from\nIt's not.\n\nit was literally a one line update to further expose the same object...\n\nIt's a doubtful excuse for improper API design choices.. @AlexanderMoskovkin \njs\nt.meta.foo = 'bar';. @MatthewNielsen27 testRunInfo contains ctx property because it contains whole test and lots of other stuff that matters only for testcafe runtime. Please, re-read carefully the link that I've provided above about ctx and it's purpose. It's just wrong from semantical perspective to use this property to report meta information. We need a dedicated property for that.. The problem is that you've constructed incorrect regular expression. * is a quantifier that means 0 or more occurrences of the preceding character. In your case preceding character is 1 and all of the test names that you have, indeed, contain 0 or more occurrences of character 1 at this position. The correct regular expression will be #001.* or just #001.. Internal functions shouldn't be declared via functional expressions.\n. I think it's addDiffIndexPrefix \n. I don't get it, can you explain how it works?\n. Why we return mutable object?\n. Why here and after it's called diffs while it's just diff.\n. This assignment is redundant BTW\n. Why we can't pass just err here, like we did before?\n. This constant is redundant, inline code is just fine\n. Don't use join, use string concat or templates instead\n. I don't get it. What's going on here? What is\njs\n(new Date(date)).toString().match(/\\(.*\\)$/)[0]\n?\n. I think we should just keep builder function instead of class. I thought we will have classes for all diffs and inheritance chain but it's not the true, from that I see.\n. Why not just immediately return here and after?\n. Why?\n. Why not just return?\n. I bet I saw this code in array diff, so seems like array just using object diff?\n. Why it's not a const and why it nearby other constatns?\n. Wait, what? What else type can code be?\n. I don't understand what's going on here\n. Since it returns OVERFLOW_TYPE why it's called getCuttingType?\n. Why not just return here?\n. Use new constant object naming convention here\n. default:? Actually it's why I don't like switch statements.\nMaybe we can go with something like this instead of this function:\njs\nconst MARKER_POSITION_CALCULATORS = {\n     [OVERFLOW_TYPES.noOverflow]: (actualStr, diffIndex) => diffIndex + 1,\n     ...\n     [OVERFLOW_TYPES.leftOverflow]: (actualStr, diffIndex) => {\n          var str  = actualStr.substr(1, actualStr.length - 2); // What does it mean BTW????????\n          return diffIndex - (str.length - maxLength);\n     }\n};\n. No join's, please\n. Same here, can we get rid of switch?\n. Consts is not ctor\n. Why we have this file, with this single const, with ES5 exports? BTW we don't use generic const or utils anymore\n. Shouldn't each test case be a separate test? I bet it should.\n. The second\n. The file should be named just category.js.\n. assertError -> failedAssertion\n. jsError -> unhandledException\n. timeoutError -> timeout\n. buildeTestError -> format\n. You can build regular expressions for tags once and store them in the constant\n. It is re not pattern\n. I don't think it requires constant. Just keep it inline\n. I thought prefixes like Expected will be built-in in template and you will not need to insert them in decorator. You just need to decorate Expected word.\n. Why template here? Why not just:\njs\n'js': str => str\n. And I think js-code is better name for the tag.\n. Use \njs\nerr.message !== void 0\ninstead of typeof comparison\n. What's the difference between js and related-code?\n. We don't have this error anymore\n. Browser disconnection now is the task error, not test run error.\n. As far as I remember we've removed nearly all of this error from the hammerhead. Ask @churkin for details\n. I think it's test-error-formatter-test.js\n. <related-code>%s</related-code>\n. I know it's a lot of code, but it would be nice to test all types of error. So we'll be sure what we doing things right. It's also would b e nice to have a test that checks if error message has test for it.\n. I think it's getAssertionMsgPrefix since it's used only for the assertions\n. Seems like it's getDiffHeader or something like this.\n. No else if here since we have return. Here and in other places, please separate if-statements with the blank line. \n. it's assertMessage\n. Use expect().eql() instead. It's consistent with our code base and it's checks for the deep equality.\n. I've added this comment before, but seems like it's gone now:\nsince now we use HTML markup without custom tags, let's use parse5 (fragment parsing) and just walk tree instead of stack approach.\n. It will not matter if we will move to the parse5, but why callback-approach here? Why not promise?\n. I think !src/client/**/*.js will be just fine. Make array multiline BTW.\n. export default as an object\n. export default as an object all theses constants\n. Decorators should be in `src/reporters/errors/decorators\n. Shouldn't it be\njs\nvar testRunErrMsgs  = testRun.errs.map(err => format(err, userAgent, this.errorFormatter));\n?\nOh, and currently format method should add information about browser in which test failed. So, we need to add this logic as well. And you need to fix test/server/reporters-test.js so it will use new approach (I think we will need to use error-like objects, instead of plain string which are used by tests right now).\n. We don't need it anymore\n. We need better comment which describes why we need this approach. Also, let's move this files from templates dir  to the appropriate module dirs and rename it to index.js.wrapper.mustache.\n. Move this kind of comments in templates to the top of the file. And fix formatting (space before NOTE:)\n. Can we avoid doing it, e.g. by passing XMLHttpRequest ctor to methods (with appropriate comment which clarifies why we do this)? I don't like hammerhead dep here as well.\n. Why not Promise?\n. Here and in all other places: why it's called hammerheadAPI why not just hammerhead?\n. Let's create a separate issue then\n. We should pass XMLHttpRequest request here as well.\n. We need a comment why we pass XMLHttpRequest here.\n. It's should be switchedToIdleOnClose since it represents the state.\n. Maybe this.errDescriptors?\n. Can we align code by 4 spaces and separate it by new lines? IMHO it will look much better and clear\n. Do we still need this mock? Can't plain-text-decorator do the job here?\n. We need to pass this decorator to the reporter's ctor in the bootstrapper as well\n. It's not quite good name for this actually, since it shows reports and not only errors\n. Can we use longer name, e.g. Click element, etc.?\n. Can we have action code here, instead of just code?\n. Formatting is broken\n. Maybe it should be named just browserConnectionMock and just do this.browserConnections = [browserConnectionMock] like it's done for the test? Also it's better to use full UA string (which will be produced by reporter): e.g. Chrome 15.0.874 / Mac OS X 10.8.1\n. It would be nice to spread errors between different tests in different fixtures and to have at least a couple of successful tests to cover more possible layouts.\n. Maybe report-designer or smthg? It'll be nice to have README in this dir as well, which describes why we need this utility. \\cc @VasilyStrelyaev \n. We shouldn't list all reporters here, since the list may change, so it should be something like:\nEnter reporter (e.g. spec, xunit):\n\\cc @VasilyStrelyaev \n. Why we need timeout here?\n. Just put .eslintrc file in the dir which will disable these rules\n. It's should be called index.js\n. Yep, it's just shows you how all errors will look like in the given reporter in TTY.\n. We don't need action for this error, it was accidently addded, but I've removed it in the recent commit.\n. I'm wondering maybe it will be better to pass reporter as a parameter to the gulp task? E.g.:gulp report-design-viewer -spec?\n. Can we make decorator optional as well (with the tty as default)? \n. Move to \njs\nprocess.argv[3].replace(/^-+/, '')\nthe reporter variable for clarity.\n. It's still missing the option for passing decorator\n. Just decorator, it's clear that it decorator in context of report, so no prefix here\n. They are always equal for all decorators?\n. Why not just compare reporter's decorator with the plain text decorator?:\njs\nexpect(reporter.errorDecorator).eql(plainTextDecorator)\n. Both tests should be in Regression section\n. They actually can be combined in one test, test name should include reference to github issue (in format GH-{num}) and meaningful name (check it with @VasilyStrelyaev )\n. It's still incorrect, what about\njs\nit('Should force plain text decorator for reporters that target machine-readable formats')\nwhich reads as\nIt should force plain text decorator for reporters that target machine-readable formats\nand it makes sense, opposite to:\nIt should reporters that target machine-readable formats always use the plain text decorator\n. Even if it not readable \nShould reporters that target machine-readable formats always use the plain text decorator\nstill doesn't makes much sense, since it has question word order =)\n. We've ended up with another message, see our conversation with @VasilyStrelyaev \n. There is no need for this code duplication. Just use Promisify from utlis here\n. Let's use https://www.npmjs.com/package/es6-promisify then. This covers both cases discussed here. We need to replace it in hammerhead/browser-natives as well for consistency, please fill the issue where.\n. The best option will be to prevent caching in all handlers before ensureConnectionReady call. Because if it will respond with 500 it may be cached.\n. @AlexanderMoskovkin Good point\n. We can move this check below, to avoid check for BrowserConnection instance.\n. AFAIK we don't need this check here, because _runTask call happens synchronously right after the browser bootstrapping \n. We need another message here. We don't try to establish connection, we have a connection passed which is already disconnected.\n. We should set this flag in close function. Because currently I can manually close connection and pass it to the runner and it will not cause early error.\n. I think it should be something like cantRunOnDisconnectedBrowsers and the text should be appropriate, something like: 'Can't run tests on disconnected browsers'. @VasilyStrelyaev will help with message.\n. It's better noTestsToRun. I don't like the first sentence as well: found where? It's better: 'No tests were set to run' or smthg. \\cc @VasilyStrelyaev \n. I haven't figured out that we will need to close local connections. From this perspective previous code was much better. So, let's roll it back. Sorry for that. \n. Is there any difference between this and previous test? Seems like they test the same scenario \n. ID shouldn't be all upper case: Id. It's more likely firstConnectionId, BTW @VasilyStrelyaev check test names, please\n. All bootstrapping-related tests should be in this section, because bootstrapping happens on run.\n. We shouldn't assert status here, we need to repeat timeout until we will not get COMMAND.run, then emit error\n. Split long strings using concat\n. I don't like This problem may appear when a browser hangs or is closed, or due to network issues. part here. They may be disconnected if you just called bc.close(). Let's just keep first two sentences.\n. js\nthis.on('error', () => this.close());\n. New line after variable assignments\n. Looks good now, maybe we should refactor this to the separate function? \n. It should be in .run() as well.\n. This should be in .filter()\n. No need for this guard, mocha will automatically fail test if it will not pass withitn 2 sec.\n. You can move interval var in upper scope (but rename it, so it's purpose will be clear)  and clean it in afterEach\n. It' should be _checkForDisconnectedBrowsers\n. good catch\n. Actually we always use this style, for better readability. Unfortunately, we don't have es-rule to enforce it \n. However, looking at the source now, I see different usages, so we don't have consensus on this.\n. You mean I need to bump version in package.json? \n\nWe should increase the timeout to close browsers after the run.\n\nSounds bad. Seems like it should be done on runner level and not CLI. Ideally, we shouldn't stop the task until all browser close() methods not stop working.\n. BTW, can you issue a separate ticket for this, please?\n. Yes!\n. Seems like it's better be named StatusIndicator\n. Do we really need connected arg for the ctor? As I see, it's always used with true value on initializaton.\n. I think we can use just showDisconnection or something like this, since we can't reconnect.\n. No need for brackets here:\njs\n.catch(() => statusMarkupCreator.changeStatus(false))\n. Invalid arrow style. Please, rebase to pick #108 changes, so you will have lingting for this.\n. Since it's now have inner state we can turn it into class: IdlePage\n. In UI messabox is a dialog window with message. But here it more likely a status-text-area or something like that.\n. We have a fixed size here, but does it looks ok on mobile devices? Shouldn't we scale size according to the viewport size?\n. > So, if you typically give \"control-ish\" names to classes that create markup\nYep\n. Can we save logo to svg file and fetch and insert it as resource? This inline SVG code looks scary :fearful: \n. BTW, why we need logo.png if it's already implemented via SVG?\n. It would be nice to remove this condition from hammerhead: https://github.com/inikulin/testcafe-hammerhead/blob/master/src/proxy/index.js#L118 to enable serving of the favicon. And register favicon.ico (not png!) here: https://github.com/superroma/testcafe-phoenix/blob/master/src/index.js#L28 So, favicon will automatically will be served for all pages (including tested), not only browser idle page\n. Ok, posted JFYI\n. This await here doesn't make sense, because event hanlder will be executed in it's own execution context. \n. Refactor this to the separate method, something like _watchWindowResize to not pollute ctor with business logic\n. no extra new line here\n. Make comment lines to not exceed 60-65 characters, Try make lines of equal length. White space befor NOTE:\n. Lines are too long. Avoid multiple nested calls in arguments. Use variables.\n. Line too long, just add new line in argument list\n. Magical numbers here. Consider using contants\n. Magical numbers. Use constants\n. I believe we shouldn't make close async for two reasons:\n1. It involves incosisteny - base close is not actually async, so the child shouldn't. Otherwise we break LSP\n2. We have a weird confusing logic right now, self-subscribing to own close event and then resolving close.\nHow I see it:\nLocal connection should have sync close method and closed event. When close() called it's just sets the forceClose and initiates timer. On the other hand in getStatus we await browser natives closeBrowser, call super.close() and emit closed event. If event doesn't occur in the time given by timer which was set in close(), we force closed event.\n. Then we can encapsulate closing logic for the bunch of LocalConnections in freeBrowserConnections methods (like we have right now in the runner). But seems like something very similar currently used in bootsrapper as well. So, I think we should move it to the separate reusable module. I'm starting to think, that we should implement something like BrowserConnectionSet, which will server all this needs during browser connections life span. E.g.: bootsrapper adds all newly established and existend BC's to the set. Set has error event, so both bootstrapper and runner could subscribe to it and fail appropriately, without a need to subscribe/unsubscribe to each BC. Set also provides async method to close local connections. Moreover, we can make task accept Set as browser list, instead of array. I'm not sure about Set name, need to discuss with @VasilyStrelyaev \n. Can we make those one liners?\njs\nconst START_GRADIENT_POINT_OFFSET = { x: 0.75, y: 0.7 };\n. I don't like enableScreenshots, maybe takeScreenshots? \\cc @VasilyStrelyaev \n. What is reportItem.screenshotCreated? Maybe it should be named reportItem.hasScreenshots?\n. Why we need to store sreenshotPath in test? And when it can be already specified?\n. Refactor user agent escaping into static utility function\n. We don't need this custom code here (and custom utilities), because we already have external module for this purposes: https://github.com/superroma/testcafe-phoenix/blob/master/src/cli/argument-parser.js#L15\n. Why not?\n``` js\nawait takeScreenshot(pageUrl, filePath)\nthis.screenshotCreated = true;\n``\n. We need to highlight it with color\n. Old-style var declaraion. We still haven't eslint enabled for the client code?\n. Old-style var declaration\n. Blank line after declaration\n. I don't see any reason why we can't use ES6 features in new code before global refactoring. So, please, use arrows here\n. This is cryptic. Why tabs instead of whitespaces. Naming is confusing. Why not use indent module, BTW?\n. No need forelsehere, since we havereturnin previous condition\n. Just curios, can we get rid of browser detection here and just use the feature detection here?\n. It should be namedalignCodeor something like what\n. Whitespace count is always equals to 12. Let's move it to the constant, along with the RegExp\n. Let's name itCODE_ALIGN_SPACES. It'sLEADING_SPACES_RE. Check comment with @VasilyStrelyaev \n. Here and below: use arrows\n. Why notsplit` here? BTW, we shouldn't replace multiple new lines with just single new line to preserve original formatting, so we need to change RegExp, In general it can be rewritten as:\n``` js\nfunction getStepCode (str) {\n    var lines = str.split(/\\r\\n?/g);\n    var last  = lines.length - 1;\nreturn lines\n    .map((line, idx) => {\n        return idx === last ? `<last-code-line>${line}</last-code-line>` : `<code-line>${line}</code-line>`\n    })\n    .join('');\n\n}\n``\n. It will be semantically correct to assignscreenshotPathonce in the_createReportItem. Can we useelements for lines with attributescode-lineandlast-code-line?\nping @kirovboris \n. No need to dedent here, since it's single line. I'd prefer to wrap both text and path into thewith attributescreenshot-info. And we should useafor the path\n.getScreenshotInfoStr. We don't need this anymore\n. Can we extractpath.dirname(test.fixture.path)to theuploadsRootvar for the clarity?\n. Let's refactor this to the function\n. Btw, usepath.joininstead for parts of the path, since separators may differ on different OSes\n. We shouldn't set this flag for errors. BTW, maybe we should rename it, since it meanshas non-error screenshots, \\cc @VasilyStrelyaev \n. Let's make screenshot infatalErrorandassertionFailedservice messages if this functionality is enabled, instead of making everything in this service message. \n. I think it should beerr.screenshotPathfor the consistancy\n. Why not exposeIdlePageto thewindowand just callnew IdlePage(...)in theindex.html?\n. Separate field definition with the method calls with the blank line\n. Argh, just realized that we can turnstatusUrlinto theIdlePagefield and don't pass it around.\n. Now need for_checkStatusparameter here.\n. This was about_loadUploads. Calling itgetElementDescriptionwas just fine.\n. It feets diff window, so it's fine as is.\n. It should besrc/compiler/old/*/.js. yep\n. nice catch\n. No need forresolvecall here, just return the promise\n. No need for resolve here\n. Rename it to thetransport.fatalError. Rename it to_onTestError. Whole this promise can be refactored to function, let's name it_reportErrorToServer` or smthg\n. The whole promise can be rewritten:\n``` js\nvar errorProcessingChain = Promise.resolve();\nif (err.screenshotRequired)\n   errorProcessingChain.then(() => this._beforeScreenshot());\nerrorProcessingChain.then(() => this._reportErrorToServer(isAssertion));\nif (err.screenshotRequired)\n   errorProcessingChain.then(() => this._afterScreenshot());\nreturn errorProcessingChain;\n``\n. Use arrow here instead ofbind. RenameTAKE_SCREENSHOT_ON_FAILStoTAKE_SCREENSHOTS_ON_FAILSfor consistency\n.ifinstead of ternary will look much better here.\n.screenshotPathshould be renamed toscreenshotsPathIMHO\n. Semantically more correct to assignnullif screenshots are disabled\n. No need for empty string fallback here\n.// NOTE: swallow error silently if we can't make screenshots for some reason (e.g. we don't have permissions to the write screenshots file). Anyway requires @VasilyStrelyaev check\n. Same comment corrections as above\n. We can't close non-local connections, since they maybe shared with the other runner.\n. Good catch\n. Here and everywhere else: don't use underscore in camel cased names\n. We can do it without condition\n.$(target)` is used 4 times. Let's  cache it:\njs\nvar $target = $(target);\n. Use the following formatting:\njs\nmessageSandbox\n    .pingIframe(iframe, CROSS_DOMAIN_MESSAGES.IFRAME_TEST_RUNNER_PING_DISPATCHER_CMD)\n    .then(callback);\n. We should should do this on idle:\njs\nthis.once('idle', () => {\n...\n});\n. Please, don't\n. Don't complicate things. Just use arrows on subscriptions\n. It's no cool that we need task here, can we avoid it?\n. I don't get this API. Things are still too complicated. We should have just 3 methods:\n1)useConnections(connections) - adds and waits till connections will be ready, throws error if browsers disconnected, since then it will emit error event\n2)freeConnection(connection) - closes/frees connection\n3)dispose - closes/frees all connections, also called from error event\n. Let's rename it to the BrowserSet and move it to the src/runner\n. I can't parse it. Why we have promiseClose which is equal to the asyncClose, please refactor it.\n. Why?\n. What will happen if timeout will be triggered, then idle will be triggered, then closed will be triggered? Handler will be called 3 times. Use https://github.com/isaacs/once\n. Rename it to async _waitIdle(bc)\n. Rename it to async _closeConnection\n. _checkForDisconnections\n. _error (msg)\n. _waitConnectionsReady\n. Don't use term close here. We are freeing connections, not always closing them. Use close only there the actual close meant. \n. Just thougt the best way will be to not expose BrowserSet ctor directly, and use factory method instead.\ncreateBrowserSet will do all preparations: wait till connections ready, check for the disconnected connections and will throw error. BrowserSet will have error event and just two methods: freeConnection and dispose.\n. Just a stylistic suggestion: let's move this.ready = false; here\n. Let's name it from (connections). So it will be var set = BrowserSet.from(connections); \n. Just assign passed connections, no need for concat here\n. We shouldn't assign set's handler here. Because while we are in factory function we should throw, instead of error emission. So we need to subscribe to error, and reject promise BrowserSet.from if it's occurs. Then after all waits, delegate error handling to the set with it's error event.\n. Why not just use async sugar here?\n. If we'll remove freed connection instantly before performing any action you will not need promisedActions\n. dispose at first and only then throw, so you will not need disposed event.\n. no need for curly braces here. It could be one-liner\n. AFAIK errors in events, are always strings\n. Why we need to wait for closed here?\n. Why we dont' have timeout for close like we have for idle?\n. Overall, we can simplify all this Promise or timeout logic here and above using Promise.race\n. Ok, then\n. If we'll have variables for both promises with the meaningful names, then this will look really handy.\n. We don't need async arrow here, let's just use pure Promises. Same as above - let's use vars for this promises.\n. Same here: use vars\n. Let's move it to the utils inside compiler since the whole code from there will be moved to the separate package soon. And let's rename it to readSourceFile\n. It's good to cache NodeList length, since it's live property and causes unnecessary recalculations. Btw, maybe we should implement forEachChildNode in utils? \n. Please simplify expression, by moving it's parts into the variables with the meaningful names\n. Don't use Array.prototype methods (like some, map, forEach, etc.). They can be overriden by the client code. You can implement their standalone versions in utls.\n. Use this:\njs\nreturn Object.prototype.toString.call(arg) === '[object Array]';\nBecause instanceof only checks if Array.prototype is on an object's [[Prototype]] chain. It fails when checking arrays across frames since the Array constructor used for the instance will likely be different to the one used for the test.\n. Don't use slice, just copy items manually. Also don't use it for the arguments object. because of https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments. Just copy items inline there and add appropriate comment with this doc\n. Don't add additional semantics like stop, it will render it unusable for the arrows, e.g.:\njs\nforEach(array, item => /* something that returns boolean*/);\nUse regular cycles if you need conditional stop.\n. No need for brackets here.\n. No need for brackets here.\n. Anyway it's incorrect and doesn't copy the original forEach behavior and may be a common source of errors.\n. Self-review =)): It should be RELEASE_TIMEOUT\n. Var declaration style is incorrect\n. It's problematicBrowsers\n. clickCausesChange or shouldRaiseChangeEvent?\n. This definitely should be refactored to the utility function \n. Why not call it isTextInput, move re test logic there and move it to the DOM utils?\n. No need for the blank line before it\n. Maybe we'll use Promise for new API?\n. Maybe we should use constant for this message cmd? And shouldn't it be more specific to avoid collisions, e.g. automation|scroll or smthg\n. No need for brackets here, it could be one-liner\n. Odd check, don't we have some kind of isDocument in DomUtils?\n. It should be ScrollAutomation\n. This can be refactored to method\n. No need for this odd line break\n. Why they are static? If you'll make them instance methods there will be no need to pass this arguments around.\n. What's the difference? I don't get it.\n. What relation means exactly in this context?\n. Shouldn't it be SCROLL_RESPONSE_CMD with value automation|scroll|response?\nSCROLL_REQUEST_CMD should have value automation|scroll|request in that case btw.\n. Site is not ctor, it should be lowercased\n. I have the feeling that most of this code can be refactored into named functions\n. I think setup.js will be the most appropriate name for this file.\n. We don't need additional dir for this file. BTW, since it's exports just one function - getTestError this module should be named get-test-error.js. \n. Export on definition:\njs\nmodule.exports = function getTestError(testReport, browserInfo) {\n...\n}\n. deleted\n. We can't do this. Runner can spawn more than one task simultaneously. \n. Well, the best way will be to stop by gracefully shutting everything down. I think we should start from other point. For testcafe-studio we will need ability to cancel task Promise which is returned by the runner.run(). So we need to extend this Promise with the cancel() method which will behave like if we have fatal run error: aborts tasks and gracefully closes remaining unused connection. So, if we we'll implement it, we can have pendingTaskPromises array in runner, so testcafe will just cancel all such Promises in all runners and then just close proxy. \n\\cc @AndreyBelym \n. We need a separate issue and PR for taskPromise.cancel() BTW.\n. Add NOTE: prefix to the comment\n. I'd prefer to keep async/await syntax for this. We need to refactor this part to separate function with some meaningful name then.\n. I wonder if it can cause problems if we cancel after run promise gets fulfilled? \n. Maybe getTaskResult since it doesn't waits actually, but returns promise for the task result\n. This can be moved to the getTaskResult I guess\n. I don't get the point of this part\n. As far as I can tell we can avoid doing this by just:\njs\nreturn this._runTask(reporterPlugin, browserSet, tests);\ninstead of\njs\nreturn await this._runTask(reporterPlugin, browserSet, tests);\n. This will be implemented in the separate PR, right?\n. I guess we should lint any *.md files that present in repo, e.g. README.md\n. Why it's rely on linting? I suppose build-website should rely on it\n. Nevermind.\n. Let's put this config file in docs\n. Why we need prompt-web-server-close task since it's all the same as preview-website?\n. No need for this task at all. I can just press Ctrl-C in my terminal to terminate server\n. No need to store this sockets\n. server-website resolves immediately without waiting for listening event. So, in theory, page can be opened before it can be served. \n. What is jekyll.bat? This is windows-specific. So, I will not be able to run docs site on my Mac\n. Why it depends on put-in-articles? Can't it be done in parallel?\n. No need for closure, just cb directly to del\n. For publish I suggest you to use https://github.com/SBoudrias/Inquirer.js/ instead of readline\n. No need for relative paths in gulpfile and for globs here as well. Just del('stie', cb); See clean implementation above. Also, maybe we should rename it to clean-site for consistency. Also, some tasks use term website others just site, dir is named site as well. We should end up we one common term. I prefer website\n. Maybe we just remove this dead code then for now and create a GH issue for this functionality?\n. Let's keep here then\n. You can drop snippet in the issue\n. Use https://www.npmjs.com/package/cross-spawn-async module then. You will not need to write platform specific code with it: just use jekyll as executable\n. BTW, you should set { stdio: 'inherit' } option I guess. So the output of the jekyll will be shown in terminal\n. I think it shouldn't rely on fetch-assets-repo, since other tasks already rely on it\n. We can combine server-website and preview-website into the one task. Since I don't see usage scenarios for the server-website alone\n. Do we really need to follow jekyll's weird naming here. I think it will be better to keep this in docs/nav instead of docs/_data. Then on build step we can copy it to the appropriate dir.\n. Here and in all other place: newline after gulp\n. Let's name it cancelTask instead of cancellationMethod\n. Let's rename it to runTaskPromise\n. Arggh, really not happy with this thing\n. New line before cancel declaration\n. It's completeTask I guess\n. It would be nice to make it multiline for clarity:\njs\ncompletionPromise\n    .then(completeTask)\n    .catch(completeTask);\n. No need for this. The rule is that gulp deps chain should be as clean as possible. It's much easier to understand that's going on this way.\n. Let's rename it to comleted and put this declaration at the top.\n. We can remove new line beetwen these single-line declarations and join them with declarations above.\n. Refactor it's to the external micromodule and don't return the promise, it will make code much cleaner:\n``` js\nvar promise = createPromise();\nonceDone(promise, doSomething);\n``\n. To complicated. Refactor it by introducing intermidiate vars\n. Rename toremoveFromPendingmaybe\n. We need a comment aboutsliceas well. This is not quite ovbious thing, so we need to describe it (see BrowserSet)\n. Class with static methods only is just a plain object. You can decalrex,y,currentActiveWindowas the object fields and they will be available viathis. Gettes/setters?\n. Same here\n.visiblegetter\n. Naming is not quite clear. What's the difference betweenonMoveToIframeRequestandonMoveFromIframeRequest`. \\cc @VasilyStrelyaev for the assistance\n. You can use destructing assignment here (and in other similar places):\njs\nvar { startX, startY } = e.message;\n. New line before and after multi-line declaration\n. What I don't like about these promise chain is that significant pieces of code comes without any annotation. So it's hard to get what they are actually do. Can we refactor them, so we will have nice Promise chain, like:\njs\ndoSomething()\n.then(() => this._doSomethingElse(args))\n.then(() => this._doOneMoreThing())\n. This complcates things a bit. I suggest to avoid using upper-scope Promise here. It can be refactored, by subsequent Promise chain to the separate method, so you will have:\n``` js\nreturn this\n      ._scroll()\n      .then(() => {\n           ... \n           if (x >= 0 && x <= windowWidth && y >= 0 && y <= windowHeight) {\n                   this.endPoint = { x, y };\n               return this._refactoredSubsequentChain();\n       }\n   });\n\n``\n. I don't think it should be inutilssince it's not some generic thing, but some piece of business logic that is tightly coupled with the automations. So just put insrc/client/runner/automation.Cursosshouldn't be use as Ctor, it's an object, so it should becursor. The formatting here is quite weird\n. Let's move the whole file to the generic utils\n. Rename file topromise-whilst. It's shouldn't be a class\n. I have a note that there is such thing as astatic class` in JavaScript. You have a singleton, which is in JS is basically an object.\n. I like free function implementation\n. Nice!\n. Why it's still a class? You can just do:\n``` js\nexport default {\n    x: 50,\n    y: 50,\n...\n_ensureActiveWindow() {\n ...\n}\n\n}\n```\n. This one it too long. Consider splitting it into boolean vars with meaningful names\n. Too long. Same as above\n. Make these long assignments multiline, splitting them on operators, e.g.:\n``` js\n    var isLinkOrChildExpected  = expectedElement.tagName.toLowerCase() === 'a' || \n                                 domUtils.getParents(expectedElement, 'a').length;\n  var isTopElementChildOfLink = isLinkOrChildExpected &&  \n                                domUtils.containsElement(expectedElement, topElement) && \n                                topElement.textContent.length;\n\n```\nNote that multiline declarations should be split with the blank line\n. Make these multiline as described above.\n. Formatting is still extremely weird. Maybe refactor subexpressions in to vars to make this look better?\n. Maybe rename to pointsDistance?\n. Since it's some entity and not a bunch of utility methods it's should be exported as object:\njs\nexport default {\n    move(x, y) {\n    }\n    ...\n}\n. Once it has a constructor and internal state it shouldn't be \"all-static\" class, it's should be regular class\n. Yep\n. Let's keep slice then\n. > global function\nWhat?\n. Use our formatting for code snippets (align eq-sign on the longest declaration). Use ES6 var declaration keywords in code snippets (const and let). The rule is the following: for any immutable variable use const, in all other cases use let. We don't do that in our source code currently, but it's a subject for the further refactoring\n. We need to describe args, I guess. What do they mean? Moreover, they are all optional.\n. ~~Also, I think we should move this func description from the TestCafe class description and describe it in index I guess~~. I see now that it's done already\n. separate statements with the blank line here. Use once for the ready event instead of on\n. All connections and pending test runs.\n. It's a factory function\n. \"Global\" is incorrect word for this. Globals is the global variable, available across all modules: https://nodejs.org/api/globals.html#globals_global_objects\n. It's TestCafe module or smthg like that\n. I guess it requires a mention that you can omit waiting for the ready in your code. Runner will automatically wait for 30 seconds for all it's connections to be ready before firing the error \n. String|Array\n. Use arrow-syntax here.\n. Typo in \"Connection\"\n. We should mention that you can pass both array or list of args\n. BTW, is it necessary to add anchor class here and do the whole hyperlink wrapping thing? AFAIK, e.g. github automatically renders titles as anchors or it's not a case with Jekyll?\n. > reporter(name, outStream])\nHanging ]\n. I know it's somehow right to use punctuation in the lists. But it looks so bad here =) \n. Worth mention that any test that has different results in quarantine test run despite it's final results will be marked as unstable in report. So it can be failed and unstable or passed and unstable. Final result calculated from the majority of the results. And I think we can mention this article here: http://martinfowler.com/articles/nonDeterminism.html\n. > The port that will be reserved for internal needs.\nThat's not true. Both ports are used by TestCafe to server testable pages.\nWe need to mention that all args are optional, \nRegarding hostname: if it's not specified TestCafe will try to use one of the following (in that order, until it will not resolved to the current machine):\n1. OS hostname\n2. Network IP address of the current machine.\nAlso, if you want to test external devices you need to specify hostname via which your machine is visible in the network shared with that device.\n. Ok, got it now\n. Yep\n. I know the purpose of anchors. I just wonder if we need explicit anchors here or Jekyll's markdown parser will do a job for us\n. Can you do the same for the BrowserSet in context of this PR, pls?\n. Let's name it update-greenkeeper\n. Refactor promisified readFile to the var and move it tot the top of the file. BTW, utf8 is default encoding, no need to specify it explicitly.\n. No need for this var. Just call readFile('package.json') since we always run from the gulp in the root of the project\n. watchDepsRe?\n. Same as with readFile\n. Why we need this press-old?\n. This needs example here\n. This needs example here\n. This needs example here with description\n. Need clarification about that is alias, need to reference --list-browser command here\n. This needs example here\n. It can be any plugin-reporter, not only built-in. E.g. if you have testcafe-reporter-my-reporter installed yo can use it by calling testcafe with --reporter my-reporter option.\n. No need for duplicates here, just specifiy the long version e.g. --screenshots. BTW, it's not an argument, it's an option\n. Headers, are inconsistent. H4 immediately follows H1\n. These should be headers, so I'll be able to copy link to the particular option or have ability to reference them\n. This needs example here\n. This needs example here\n. This needs example here\n. This needs example here\n. Require mention that if not specified TestCafe will automatically pick ports. \n. We need expand term remote testing here.\n\nIf it is not specified, localhost is used.\n\nIt's not true in current version. TestCafe will use operating system hostname or network IP address of the current machine.\n. Need reference to the remotes alias\n. Need to split this into 3 different topics:\n1. Local browsers\n2. All browsers\n3. Remotes\n. I wonder should we mention how to save report to file here? Or it should go to Recipes?\n. I might surprise you but this should be a header with the link inside. Since it's a paragraph title. We need it as a header as well to make search engine happy.\n. Like here: https://github.com/DevExpress/testcafe/pull/298/files#diff-8726dc00e9fc3a3a0affaafefa409693R33\n. @VasilyStrelyaev all variables declared here should be const since they are immutable. Alignment should be done only in blocks without blank line. Separate require's from other declarations.  So:\n``` js\nlet createTestCafe   = require('testcafe');\nlet testCafe         = await createTestCafe('localhost', 1337, 1338);\nlet remoteConnection = testcafe.createBrowserConnection();\n```\nshould be:\n``` js\nconst createTestCafe = require('testcafe');\nconst testCafe         = await createTestCafe('localhost', 1337, 1338);\nconst remoteConnection = testcafe.createBrowserConnection();\n```\n. Can we keep original formatting of the comment? It's hard to read, when it's that long.\n. Incorrect var declaration formatting. Please, setup WS formatting according to our rules\n. :+1: \n. Nope, this is a part of the deprecated API: https://nodejs.org/api/globals.html#globals_require_extensions\nIt was used by require.extensions and currently appear in many popular packages across npm. However, we shouldn't worry about it, because:\n\nSince the Module system is locked, this feature will probably never go away. However, it may have subtle bugs and complexities that are best left untouched.\n. I wonder is it possible to make navigation links relative, so we'll be able to navigate not only on the website but in GH repo as well?\n. ping\n. Formatting, var declaration\n. We use async/await in all other places. Why plain promises here?\n. const\n. const\n. async/await\n. async/await\n. const\n. const\n. SyntaxError: await within regular function\n. const\n. async/await\n. const\n. Maybe just call it createTestCafe, no need for this Module-Level Members?\n. I don't like this separation on Point of Entry and Contents. Maybe Point of Entry and Classes or smthg like that.\n. I don't think we should have it here, since we already have a reference to createTestCafe above\n. In addition to alias you can specify the path to the local browser as well.\n. testcafe --list-browsers lists aliases for the browsers available on the current machine. We need to list all possible aliases with their transcription as well\n. Use code highlighting (wrap in single ticks - ) for the options/keywords/code one-liners\n.globis not an abbreviation and should be lower-cased\n. >tests from files located in the /TestCafe/Tests`\n\nnope. It will run tests from /test or /tests directories \n. > c:\\Tests*Page*.js\nLegacy HTML-encoded value here?\nUse code (ticks - `) to highlight: paths, code blocks, opts, etc. here and after. \n. This titles should be one-liner:\n-r , --reporter \n. We need an example with custom reporter-plugin as well\n. > c:\\Tests\\test-results.txt\nHere and after: use relative paths, since c:\\Tests\\test-results.txt is windows specific. Prefere lower-cased file and dir names:\nsh\ntestcafe all /tests/sample-fixture.js > /tests/test-results.txt\nDon't use .test.js as extension for test files, it should be .js\n. I guess It's worth mention that test file should have *.js extension\n. Don't use term folder  - it's Windows-specific. Use directory instead\n. You need to escape * in command line, so it will be:\nsh\ntestcafe ie c:\\Tests\\ -T Click\\*\n. Escape *\n. It requires QR-code options cross-ref somewhere here.\n. I don't like this change. Can we keep old code structure? And just modify the text on line 15?\n. all titles\n. > and the test runner (an object that controls test runs).\n... \n\nThe test runner is another important thing used to configure and launch test runs.\n\nThis repetition doesn't sound right\n. No need for this sub-section\n. This repeats the sentence above in the shorter form. I'd rather keep the one that above\n. I'd rather create here custom node WritableStream\n. This should be referenced somehow. Currently it lucks context\n. Yes\n. I feel like we don't need this  two sentences at all. We can remove Synopsis header as well, and just insert\nsh\n testcafe [options] <browser-list-comma-separated> <file-or-glob ...>\nright after the Command Line Interface header\n. > (see below)\nThis is ain't cool. Maybe we can rephrase is it, so we will have inline link, e.g.:\nA list of all the available aliases can be obtained by the [--list-browsers](#b) command.\n. The term alias first appears here without any explanation. I feel like we need separate section for the aliases, which we can cross-link both from here, list-browsers and programmatical API section. \\cc @VasilyStrelyaev \n. It doesn't assigns more likely it uses or smthg like that. We need to move this to the separate section (see above).\n. It lists aliases of the browsers available on this computer\n. This is a short repetition of the paragraph above:\n\nYou can also use the --qr-code option to get a QR-code that represents the same URL. \n Scan the QR-code by a device on which you are going to test the application.\n As a result, the browser will be connected to TestCafe and tests will start.\n. I prefer @AndreyBelym's implementation. But don't forget to use our stored version of reduce, since Array.prototype methods can be overriden\n. promise-wait is not quite obvious name, since it's sounds like something that waits for promise. Let's call it delay instead\n. runOrEnqueue\n. AFAIK sessionId is already in Hammerhead settings\n. Let's rename it to testRunId then\n. yep\n. Just use browser(s) to avoid this code duplication. No need for \\n, it's a template string, just use dedent and new line (e.g. https://github.com/DevExpress/testcafe/blob/master/src/cli/argument-parser.js#L18)\n. Need blank line here. Don't insert new line here: `\\nBrowser #${i + 1}:. Just keep it as it was\n. need blank line here\n. Just style nit IMHO: put entities in the order of significance - test runner first\n. Add blank line after log.hideSpinner();\n. Use dedent as function instead of tag (babel has a nasty bug in the latest version, which breaks template tags)\n. > Shouldn't All Browsers be a subsection or Local Browsers ?\n\nYes\n. I prefer table with 'Browser | Alias' columns.\n. > Since we mention reporters here and in the CLI topic, are we going to create a separate section about them (like Aliases)?\nIt's don't make much sense since: a)unlike aliases, reporter is a simple and common concept that doesn't require any additional explanation b)we have link to the officially supported reporters there we have visual explanation in form of screenshots\n. Well, I think we should have list at the single place (it should be the list of the officially maintained plugins), but this is really a big separate task, so we just keep going with the lists for now\n. I like it as-is\n. This should be declared in the if(remoteCount) body to avoid unnecessary dedenting. Also, it's not a constant, but regular var\n. I'm ok with this, we could add link to the following section: https://github.com/isaacs/node-glob#glob-primer\n. Don't use leading slash in paths to the files. Leading slash means that your path starts from the root of FS (like with URLs). The common practice to use paths within current working directory, so it should be tests/sample-fixture.js. Note that for browser /applications/safari.app path is perfectly valid.\n. Same as comment in #304 : don't use absolute paths\n. With this approach we will always have one job left in the queue. However, I agree with @AlexanderMoskovkin points. We need something conceptually better.\n. OK, let's try this one\n. Both _hasQueuedJobs and _currentJob can be getters like hasQueuedTestRuns in BrowserJob\n. It's inconsistent: it'should be delay\n. Here and after: it's incorrect - wait will start executing with the currentShortcutHandler, so delay include time spent in currentShortcutHandler, while it should run after it.\n. Don't do nested promise chains\n. Can we test that file is actually uploaded?\n. BTW, why we use images. Can we use just plain text, so we will not add big unnecessary data to the repo? \n. What it's actually doing?\n. It's not that long - can be one-liner\n. Why this can't be in the upload-test file in the sub-fixture Regression, like we have for the server tests?\n. I was asking what _contextmenu method do. It doesn't contain verb in it's name and doesn't even imply any action to me.\n. > Or it's better to separate it into two lines:\nThis\n. It should be Regression instead of regression\n. Ping\n. ~~These tests requires GH issue reference in the name~~\n. I've just found out that we don't have any other tests for the quarantine mode and regression tests test some very basic scenarios. I guess we shouldn't name it regression tests then. They should be just regular functionality tests.\n. You can compare with void 0 here, without doing typeof\n. This is huge and needs refactoring into the smaller functions\n. I guess it should be in the automation class\n. wrong is not correct word here, I guess. \\cc @VasilyStrelyaev \n. Move to end of what? I guess it's the moving with the selection. We need a better name for this one\n. Please, never use global, just forget it exists\n. I don't like this approach. The good thing about templates was it' declarative nature. Now we have some black magic going on under the hood. From quick observation I don't get which properties should be escaped? BTW, do we really need to escape a lot properties? I'm still for the inline escaping in the template code. \n. Wiki says that builtin is valid\n. Yep\n. Why not module.exports = { ... ?\n. It's an object not a ctor. Should be lower camel-case\n. Reporter package name should always follow the pattern: testcafe-reporter-{name}, otherwise TestCafe will not be able to see it.\n. ReporterPluginHost is not a public object. Reporter plugin exports the single function - reporter factory. Factory should return newly created reporter object. Object should implement 4 methods listed below. TestCafe will mixin several methods (that currently listed in the ReporterPluginHost reference) into reporter, so they can be used by it.\n. The path points to the data in the generator, not in the generated content. BTW, I think this lacks continuity. I think from this point we need to start implementing some pretty simple reporter and reference mixed-in API here. Then we will go to testing we can mention test data\n. Error decorator is some really advanced stuff, really rarely used. We should describe it only once we will finish with the main functionality.\n. Never use this topic, see here, etc. Link should have descriptive title\n. works well is excessive here. Just To test your reporter\n. What do you mean by etalon reports?\n. Publish to npm\n. Why this here? We can install it only then we finish developing it and publish to npm. Which is not a topic of this article.\n. We need to describe somewhere here how it can be tested with the testcafe, using npm link without the need to publish it to the npm.\n. reporterpluginhost.md - we use hyphen to separate words in file names: reporter-plugin-host.md\n. Nope. Your reporter should implement some methods. And TestCafe will mixin some helper methods into it.\n. We need some really simple example. E.g. output data in some plain text format: {passed,failed}-fixture-test, then passed/failed - duration: {duration}. And build example on top of it. \n. This needs more detailed description.\n. All this methods lacks examples, e.g. what does prefix means and how it can be used?\n. Actually it sets indentation for all writes\n. It enables word wrapping for all following writes. It can be enabled/disabled\n. All this methods needs examples and it requires metnion that they are chainable. Also, API description is not consistent with the format used here: https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/using-testcafe/programming-interface/Runner.md]\n. We need to mention somewhere, how to use and install reporters. \n1. You need to install reporter from npm globally or locally\n2. TestCafe reporters always have name testcafe-reporter-{alias}\n3. Then you can specify them by alias\n. Let's name it RawFileCompiler\n. Let's use async arrow instead\n. We need to handle JSON parsing errors\n. Can we use msg.type instead, e.g. msg.type === 'done', msg.type === 'failed'. In which case we can have msg.commandAccomplished === null?\n. Implement _resolvePendingCommand and _rejectPendingCommand methods which will assing null to pendingCommand internally. Code will look much better\n. Looking at it currently I wondering why we need all this? wait can be just promise that resolves on timeout, we don't need response from page for it\n. We need a guard that will throw if command was when we have pending command, like here: https://github.com/DevExpress/testcafe/blob/master/src/reporter/plugin-host.js#L120\n. We should avoid tests that rely on heavy mocking. Once we will have client part of this, I suggest to replace it with the functional tests. But it's ok for now.\n. Yes, so I suggest to not make any wait related code for now. Let's just start with the raw actions. And once we'll figure out the basic machinery we will implement all kinds of waits in separate issue (we need a ticket for this).\n. Yes. \n. BTW, we can rename msg to commandResult. And we will have commandResult.status === 'done', commandResult.status === 'failed'\n. BTW, testcafe also mixins this.chalk (that can be used for ANSI-coloring of the text) (API - https://github.com/chalk/chalk) and this.moment (can be used to deal with dates and time) (API - http://momentjs.com/). Reporter can also have noColors property (e.g. https://github.com/DevExpress/testcafe-reporter-json/blob/master/src/index.js#L3) which indicates that chalk and any coloring should be disabled for this reporter. This is useful for the machine-targeted formats, e.g. JSON or xUnit\n. I don't see any reason why we need this constant\n. test_config.json belong to testcafe tests. They should be in testcafe-fixtures dir\n. No need to put mixins and helpers in the separate dir. Also they belong to testcafe tests, so they should be in testcafe-fixtures dir as mixins.js and helpers.js respectively.\n. Just use full path inline\n. It's important. The name of the directory is usually the name of the project (e.g. it will be strange to have testcafe source in MyProject dir, we have a testcafe dir instead).  And generator's prompt tries to obtain suggested project name from the dir name.\n. This var is excessive\n. Message lacks filename, it needs mention that file in raw format.\n. We don't need dedicated method for this I guess\n. It shouldn't be GeneralError and it shouldn't be promise. It's an internal assertion, this should break TestCafe and we can write text inline here. This is just guard for us to avoid regressions. See https://en.wikipedia.org/wiki/Assertion_(software_development)\n. We've decided to not implement it for now\n. It's inconsistent. What if we've nulled pending request just now? Client will never know that we've finished task. The best way will be to run executeCommand to use same consistent machinery\n. We need constants for statuses. Or, better let's use boolean flag commandResult.failed\n. As far as I understand currently it's misses branch that handles the situation, then we have pending command, but it was not accomplished and we need to tell client run it once again.\n. These two tests above are not error-related, so their name shouldn't start with Should pass or Should fail. It should be something like Should upload a file\n. Same here\n. Why we need this var?\n. No need for this vars\n. No need for this vars\n. Use double quotes here to avoid escaping:\njs\n it(\"Shouldn't upload files with a removed input\", function () {\n. ok\n. This could be moved to the general purpose utils. I don't like idea of local utils in general - it's easy to end up with the code duplication.\n. We should call proxied querySelector here.\n. I think we should make selector always a function. It will be easier to maintain. For string selectors we will just wrap them in the function server-side.\n. It's a test. We can't use ES6 in tests\n. It's -v not -V\n. I would rather include the whole page to the Creating Reporter Plugin section. There it will fit good into the narrative canvas after the Implementing Reporter section without any subtitle:\nGenerating Reporter Project\nImplementing Reporter\nBuilding Reporter\nTesting Reporter\nPreviewing Report\nPublishing Reporter to NPM\nBTW, In Publishing Reporter to NPM it will be good to include reference to the Using Reporter section. And move Development Version section from  Using Reporter section to the Implementing Reporter section and insert it into narrative. Because, if I'm consumer of the already built reporters I don't care about dev version of reporter and this section may confuse me. But if I want to implement reporter I would like to have all required info in one section in form of tutorial.\n. Why we need to do it this way? Can we create instance in driver and then pass it to action executors?\n. Otherwise, it shouldn't be a class, but object with single instance\n. I believe we can just rid of this code now with logToConsole\n. I thought we name it autowaits and move it to driver code. There is no reason for this to exist in core\n. Same here\n. This is inconsistent. The \"unit of execution\" is Promise returned by execute function. But we raise event on executor. I believe we should return two promises: one for start, and one for completion. Also, seems like it doesn't maintain any internal state, so we can just turn into the module with single entry function called execute-action-command\n. No need for this module, this can be done inline in the driver\n. Create error using ctor and provide new message for it (see #421)\n. It better be done with object passed to ctor, like we did for options. Command class should use options class internally and call it's ctor (to trigger validation). Also, it should validate selector.\n. Missing header about usage on client and server\n. Use type constants\n. It was my bad idea to split them into different files, let's use single file for all commands (we will not need separate server-side and client-side classes for this anymore)\n. Which legacy errors do we use here?\n. Oh, I thought we will switch to new errors in context of this PR\n. executeCommand should accept callsite as additional argument and store it with pending command. So if error occurs we will take callsite from the pending command and pass it to adapter.\n. So why it's move to core then? I thought we will have new impl for new api anyway\n. Sure\n. You should navigate to your project directory, there you have tests. Locally means project-scoped, not OS-scoped\n. You should save it as dev dependency. So it will be:\njs\nnpm install --save-dev testcafe-reporter-list\n. > use reporters within other modules as well\nI guess it should be changed to use reporters within other projects as well\n. > powerful application\nI'm not sure if application is a correct word here. TestCafe can be used as command line tool or node module. Term application primarily used for the programs with user interface. Maybe framework or library? \\cc @VasilyStrelyaev \n. I think we shouldn't provide Helper Methods link here. Without proper context it can be really confusing.\n. As I mentioned before we should name dir as our project, and testcafe reporter should have name that starts with testcafe-reporter-{your_suffix}\n. I don't think we need this enumeration. It could be a subject of change. Something like answer a series of questions by generator to customize your reporter project. Then Yeoman will automatically scaffold out your reporter...\n. I guess it should be Once the reporter has been \\cc @VasilyStrelyaev \n. It's already your reporter. TestCafe will mixin methods in your reporter, not vice versa\n. It's not quite clear. You need to say that TestCafe will mixin useful helper methods to your reporter, which you can access using this keyword.\n. It would be nice to show example output of this reporter. \n. I still don't like baseline term. Really haven't seen it in this context elsewhere. Isn't reference more suitable word?\n. 1) The link is incorrect, it refers to the file in generator source. This files will be copied to your project. We should provide link for the file in generated project.\n2) It's hard to understand the purpose of this file and what assumptions I should make studying it. Better describe that this file contains test input data in form. Input data is the sequence of 4 reporter methods (which we've implemented earlier) calls. \n. No need for the explicit link, just make list reporter a link\n. You don't need step 2. Step 1 is enough. npm link works like global install. So your reporter is already accessible for any project.\n. Make npm link a link to https://docs.npmjs.com/cli/link\n. Don't use uppercase filenames in examples\n. We need to describe why it should be used instead of regular npm publish:\n1)It will perform additional checks before publishing to ensure that everything works fine\n2)It will built project before publishing\n. Not all of them. All formatting helpers are not chainable, since they return strings\n. But all output helpers are chainable\n. It returns string\n. want is unnecessary here.\n. Weird formatting. We use 4-spaces indentation. No need for this ellipsis here - the methods will be just fine without it.\n. returns string\n. Returns string\n. returns string\n. I guess we should introduce output helpers before formatting helpers, since output helpers are used in formatting helpers examples\n. It would be nice to have output example as in indentString\n. It would be nice to have output example as in indentString\n. Don't place second sentence to the newline. it recognized by markdown as an additional row\n. It's force disable, we need to describe that it's useful for the machine-readable formats. And it needs example. Because it's not quire clear how this property should be set\n. BTW, it's a quite important bit of code. Maybe it worth mentioning in the main \"implementing reporter\" article. \n. We need validator for this \n. Use assignment via ctor\n. Update. I believe text shouldn't be part of options, it should be an argument, like in action\n. Use ctor here\n. Use ctor\n. And here\n. Ctor\n. ctor\n. Missing assignment test\n. ../command-line-interface.md#-b---list-browser This link still doesn't work\n. Yep, something wrong with browser\n. Shouldn't we use native methods like here: https://github.com/AlexanderMoskovkin/testcafe-phoenix/blob/client-driver/src/client/core/utils/delay.js#L8 ?\n. I wonder if we need element description now? We have a callsite now, so there is no big difference between this and  ElementNotFoundError\n. inCommandExecution\n. As far as I remember we've discussed start command, so we can start executing server code, before ready. It isn't implemented yet?\n. What should be here?\n. I guess it should be below there all other action error are. Currently it's in base classes section\n. ActionElementNotFoundError\n. ActionElementIsInvisibleError\n. Also let's rename it to ActionSelectorTypeError\n. You should pass type, not value here. Value could be non-serializable object with circular ref and then you screwed up.\n. Maybe createCommandFromObject? Then you will not need this awkward alias in compiler.\n. I don't get it. How it suppose to work? Validator doesn't assign returned value it will just throw in case of error.\n. You need to validate that options either null or undefined, or an object\n. Then in command ctor just call ctor for the options:\njs\nthis.arguments.options = new ClickOptions(this.arguments.options);\n. Need to return if obj null or undefined\n. Let's use running for consistency (all other entities use this naming)\n. It's a current command callsite.\n. BTW, why we don't pass screenshotPath here?\n. Yep, moreover, we will be able to validate this way, but we will not filter unnecessary properties and defaults.\n. Can you add comment with TODO, please?\n. OK\n. Sure, it's completely different states\n. Let's name it UncaughtErrorOnPage since we will have UncaughtErrorInTestCode\n. !obj check should work just fine here\n. BTW, why we need this var if we store callsite in pendingCommand? I think we should use it from there: this.pendingCommand && this.pendingCommand.callsite\n. Oh, pendingCommand may not exist. Then we shouldn't store callsite in pendingCommand I guess.\n. > because we set pendingCommand to null when it's resolved/rejected\nBut why we need to store it in pendingCommand then? We have currentCommandCallsite already\n. Why we need dedicated file for this? It's used only in setup.js\n. > thought this variant better, than overflowed setup.js file.\nNope. Refactoring with functions just fine here.\n. It's just a single function that used in one place. It's definetly belongs to the place there it was called.\n. Should be renamed to _createExtendedPromise\n. It's a test\n. We use arguments in both cases. Arrows doesn't have arguments object.\n. integer number. integer already means number.\n. IntegerNumber\n. Number.isInteger not available in IE and Safari. It's ES2017 proposal. Use this polyfill instead:\njs\nvar isInteger =  typeof value === 'number'\n                        && isFinite(value)\n                        && Math.floor(value) === value;\n. Runtime is disabled for client code\n. > no generators/awaits on a client, very sad. \nNah, Promises just fine =)\n. We shouldn't use term sourceSelector. We have just selector which is first argument of the action. Use it.\n. Avoid having inconsistent function results based on input value. Rather have two functions, or call ensureElement for each argument and pass error Ctor (use standard error Ctor as default value)\n. Refactor this so we will have function createAutomation which will use switch internally, so you will not need automation variable. The rest part which is automation.run().. can be called inline then.\n. Consider changes mad by @AndreyBelym in #452: fractional numbers check and NaN check. I guess we should better land #452 first.\n. Rename to ~~assertErrorContains~~ errorInEachBrowserContains\n. Just put in test/functional dir.\n. Why not just testError[key][0]?\n. js\nexports.errorInEachBrowserContains = function errorInEachBrowserContains(error, message) {\n. Here and in all other cases: rename err var to errs since it's now always contains multiple errors\n. Also, what if each browser has multiple errors? How can I check second error? We need to pass index as parameter here\n. I'd prefer direct imports\n. You can reduce callsite checks just to the exact string. Callsite are already heavily tested, so we need just to check that we get the correct one, so it could be just:\njs\nexpect(err).to.contains(' > 15 |    await t.rightClick(\\'#button\\');');\n. Why we need this comment?\n. Yep\n. This requires comment which describes why we need this.\n. Have you checked this with tech writers?\n. Why we need it here? We already did it in Runner.\n. It's not part of test API and it should be in the fixtures dir\n. Can we set it to 200 by default for all tests except those which specify timeout explicitly?\n. We don't do any checks for the programmatical API\n. @AndreyBelym please, address this problem\n. No. Bad advice. Always try to export named functions. This way you will have proper stack traces\n. This link doesn't work\n. IMHO We can throw away  first sentence completely\n. Do we really need this additional page? Can we merge it with developing plugin page?\n. According to intro this section should describe plugins in details. However, it just describes how to develop plugins. And we don't have information about using them. We need either change title or premise. BTW, we don't have description on how to find plugins anywhere. E.g. it's not quite obvious that you should search npm for packages with name testcafe-reporter- to find reporter plugins. \n. I guess we can move search information to common-concepts/index.md.\n. Also, you can find one in npm\n. In all code snippets: we don't use var. We use const for immutable variables or let for the muttable\n. Well, I don't like it's non-normative tone I guess. Can we replace it with something like:\nTestCafe functionality can be extended using plugins or smthg like that?\n. Nah, it's just fine. Otherwise, we have additional page transition which doesn't have any branching\n. Can we refactor whole ensure element part (including progress panel) to the separate method?\n. Let's name it ensureCommandElements so it will not be confused with ensureElement\n. Incorrect integer check, see: https://github.com/DevExpress/testcafe/blob/master/src/test-run/commands/options.js#L22\n. TypeActionTextArgumentTypeError\n. Better\n. npm search is quite slow and requires local npm index building. I'd rather give a link to online version: https://www.npmjs.com/search?q=testcafe-reporter\n. It's parseBrowserArg I guess?\n. It's really complicated using RegExp. Can we use simple state machine instead?\n. I don't get this error message. Can we just keep it as it was before?\n. We need a comment here, why we use this order of execution. \n. Hover\n. Nope. We should use in-place eval here to close on lexical context (we will need it lately). Also, I'm not sure if saved eval will behave correctly \\cc @churkin \n. Seems like isInQuotedPart var is redundant. We can set quoteChar to null when we are not in quote (this is actually what happens currently) and use it as flag.\n. Let' rename browser to currentBrowser to avoid confusion with browsers\n. Let's use null instead of ''. Then you will not need this comment.\n. Is ther any need to include quote char into the parsed browser name?\n. nonEmptyStringArgument =)\n. Unnecessary new line\n. You can now use Hybrid + chai assertions. No need to throw in tests which should complete successfully.\n. Nope, but my version was incorrect as well. The meaning is that binding doesn't change original function's binding, but creates new bound function instead.\n. Yep, thanks\n. Let's make it Assignable instead and pass object to ctor.\n. All options without shortcuts should be at the end of the list\n. I believe executors should return driverStatus\n. Should be one liner\n. This incorrect Array check. Use Array.isArray\n. We can use <ms> instead of <milliseconds> to save horizontal space and avoid line wrap in CLI\n. this.opts.elementTimeout =\n. We have command in raw API for hybrid evaluation, but we don't have assertions in raw api, so it won't help =)\n. Why we need another command for the multi-upload?\n. What is strict positive integer?\n. Why we need selectActionSelectorTypeError when we have this error? Use \"\" instead of empty\n. What is this?\n. Why they should? Error message is unclear\n. Got it. Nevermind\n. Shouldn't it be The ${err.argumentName} selector is expected...? We can combine it with dragDestinationSelectorTypeError and name something like actionaAddtionalSelectorTypeError where we pass selector name, like destination, etc. (it should same name as in API description and wrapped in <code>)\n. Same for this two errors and dragDestination errors. Can be compound into actionAdditionalElementIsInvisible\n. actionElementNonEditableError. Try to avoid action-specific naming as much as possible, to make error messages reusable.\n. Can't this error be combined with error above? Both of them require contentEditable\n. yes, good catch\n. err.argumentName should be enclosed in <code></code> as well.\n. I'd rather use term parseKeyCombination\n. IncorrectKeyCombinationError?\n. keyCombination, otherwise we have command inside command - it's confusing\n. We should implement wait server side, so it will not be interrupted by page loads\n. I guess wait is not an action, so we can create separate executor for it and refactor ensureElement into separate module\n. available for what?\n. > available for use or available for performing actions on\nThis.\n. Or, even better we should define what available means (becomes visible and present in the DOM).\n. Why we need two errors for this? Can we just have actionNonEmptyArrayArgumentError which will cover both cases?\n. actionCanNotFindFIleToUploadError, actionElementIsNotFileInputError\n. Make texts action-agnostic, so we can potentially reuse errors. So it wil be:\nAction selector does not match a file input element.\n. Will it give us appropriate error message?\n. Let's stick with Array term\n. Good catch! Auto-renaming...\n. If we can do it on server-let's do it on server\n. Yes\n. It's debatable. But I think we shouldn't since we not operate with page. The reason we reject actions with js errors is: \na)to have early errors \nb)associate action with error (error may be a side effect of the action or action is performed on already broken page)\nI think wait's doesn't meet the second criteria, since we don't perform any actions. It's like with Hybrids we just perform observation (especially in case of waitForElement)\n. Yes =)\n. OK, since it require some additional investigation/work I suggest to keep it as is. Because we don't have time for this now.\n. Maybe we will just use hybrids which will return selectionStart and selectionEnd and assert their values instead of status?\n. Do we really need this delay? Wouldn't page load barrier handle this?\n. I think we need to validate protocol as well (it should be http, https, relative protocol - // or relative URL). BTW, I guess we should allow relative urls, I'm not sure if current navigateTo implementation in hammerhead supports relative URLs - we need to check this and create a separate issue for this one.\n. Use named functions for default exports (for proper stack traces):\njs\nexport default function ensureElement (selector, timeout, createNotFoundError, createIsInvisibleError)\n. I guess we can move ensureElementEditable, ensureTextAreaElement, etc. to this file as well\n. I think waits (like Hybrids) shouldn't be rejected by JS error (BTW is it possible to have JS error here? Or we just handle errors in selector this way currently?).\n. isCommandRejectableByPageError should be false for waitForElement\n. Ok, then we need tests for 3 scenarios: \n- URL with protocol \n- URL with relative protocol \n- relative URL\n. Can we do \njs\nimport { waitFor, positionUtils, ... } from '../deps/testcafe-core';\ninstead? Same for hammerhed.\n. We also need to test scenario then element appears after page load: e.g. create page that redirects after some timeout to the page with element. Run waitForElement with timeout bigger then the one that is for the redirect and test action completion.\n. > We just call the hammerhead.navigateTofunction , I suppose it should be tested in hammerhead\nI have no idea. Also, I have no idea what will happen if we pass incorrect URL that's why I want tests which will describe this behavior (and help us avoid regressions).\n. Well, actually it's bad. We've used it the wrong way. Initially we've used it there we can't reach internal object, e.g.:\n``` js\nimport hammerhead from 'hammerhead';\nvar someMethod = hammerhead.someUtil.someMethod;\n```\nIt's kinda makes sense there, but then this approach erroneously spread all other the code. We don't have time currently to refactor it, but at least we can avoid it in the new code. \n. Can we just use phrase element at index {num} to avoid dealing with ordinal number formatting?\n. This is not quite what I meant. I've asked why we needed two errors for non-empty array check:\nhttps://github.com/DevExpress/testcafe/pull/508#discussion_r62314255 - actionListArgumentError expected non-empty array, and then we have actionListArgumentLengthError which is just check for non-empty error. Why we can't use actionListArgumentError in both cases? So here we need two errors: actionListArgumentError and error that checks that all elements in list has expected type.\n. Nope. We add methods to prototype, if we do it constructor we will add unnecessary memory overhead\n. BTW, maybe we need t.focus? \\cc @AlexanderMoskovkin @helen-dikareva \n. Or we should add selector for pressKey. Because we always need some element to address keys to, right? What do you think?\n. > What does pressKey(selector, keys) mean, click(selector) + press(keys)?\nWhat about focusing via tab?\n. OK, let's keep it as is for now. We will adjust behavior lately if we'll have any feedback on this\n. But what if it will be e.g. number?\n. Got it. But why we have part of the logic in validator and here? Can we just always pass actualValue and assign [] or \"\" in validator?\n. You will throw incorrect error for empty string here.\n. stringOrStringArrayArgument?\n. I'd rather rewrite it as:\n``` js\nvar type = typeof val;\nif (type === 'string' && !!val.length) \n    throw new ActionStringOrStringArrayArgumentError(argument, '');\nelse if(Array.isArray(val)) {\n    if(!val.length)\n         throw new ActionStringOrStringArrayArgumentError(argument, '[]');\nfor (var i = 0; i < val.length; i++)\n     nonEmptyStringArgument(argument, val[i], ActionStringArrayElementError, i);\n\n}\nelse\n     throw new ActionStringOrStringArrayArgumentError(argument, type);\n``\n. It's getting too complicated, let's rather passcreateErrormethod, like @helen-dikareva did in her PR : https://github.com/helen-dikareva/testcafe-phoenix/blob/b9cdd839286957f049fc2ed3c566472ae22563b9/src/client/driver/command-executors/execute-wait-for-element-command.js#L12\n. Anyway, too complicated\n. Legacy API is in maintance state now. Try to keep everything as is there\n. Let's do it this way\n.actionUnsupportedUrlProtocolError.urlArgument. Why we needPROTOCOL_REtest?\n. Got it. Can we do this in context of single regular expression?\n. Can we use something like./navigation.htmlinstead?\n. I'd rather move it tocreateAutomationwhere we already have conditions for command types\n. Nope. OK, let's leave it as is then. I don't see any good solution for now.\n. lgtm\n. We can create single instance of hanging Promise and refactor it to var.\n.Date.now()might have low precision. I suggest using [Performance.now](https://developer.mozilla.org/ru/docs/Web/API/Performance/now) if it's available and fallback toDate.now() + Math.random()` if not. \n. Use lru-cache\n. I've had a hard time understanding this workflow. As I see it, we should split handler into transport layer and execution layer:\njs\n ServiceMessages[CLIENT_MESSAGES.ready] = function (msg) {\n  // 1. Check status id and return cached response here\n  // 2. Get response by calling `handleDriverRequest`\n  // 3. Cache response and send it back\n};\nSo, business logic will be isolated from transport-related stuff.\n. BTW, we need a comment which will describe why we need it and which scenarios it handles\n. I believe we should test it in all browsers\n. But it's ok to keep error tests just for single browser, since their processing is implemented on server\n. Still not the best solution, but it looks better to me. Let's do this\n. AFAIK it is possible to get response from local machine within 1ms. So, yes, we need better precision\n. Yes\n. js\nthis.lastDriverResponse  = { statusId, response };\nLet's split it into two vars to avoid confusion like we had we driver command:\njs\nthis.lastDriverStatusId = driverStatus.id;\nthis.lastDriverStatusResponse = response;\n. We already use Math.random in various places, I don't think someone will replace it. However it's possible that people will replace performance.now\n. Do we really need this? Is there someone who don't know what \"Getting started\" is?\n. I suppose this should be a note (introduced by @VasilyStrelyaev ), also I don't think we should add it to the header, just put it after first runnable test sample.\n. Do we need this reference? We don't have anything like this on other pages. Also, I'm not sure it makes sense to put it in the page header (it should be in a menu if we really need this)\n. There is no such concept as TestCafe project in current version. You can run any tests from any locations. More likely your tests will be in test directory of your website project, but it's not a limitation or required behavior\n. We don't need to describe how npm works\n. We need links to node.js website\n. It's not true in current version. File can contain one or more fixture. Fixtures not limited to the single URL. You can just optionally specify start page for all tests in fixture.\n. fixture is not a keyword. It's a function, which also can be optionally used as a ES6 template literal tag (whichever you prefer more) \n. It's optional\n. What is func t? It's invalid javascript\n. We need to mention that action/action chain call is async and should be handled appropriately\n. Should be context link in the section above\n. Before introducing assertions we need to introduce hybrids, since we don't have any tool to observe page state yet.\n. You can use node built-in assert module. So, it's not always necessary to install anything\n. We can remove it from GettinStarted since we need to describe some very basic concepts here. Everything else should be described in recipes + API reference\n. Same as with Dialog handling\n. TestCafe application we've discussed it before - we don't use term application for the CLI version\n. Test reports are generated by TestCafe [reporters](../using-testcafe/common-concepts/reporters.md). you already said that in different words above. \n. OK, then\n. BTW, why not chaining here?\n. why we need this var? Can't we just do:\njs\nif(msg.status.id === this.lastDriverStatusId)\n     return this.lastDriverStatusResponse;\nAFAIK, we don't need to return promise from the handler BTW.\n. Can we move it to const, smth like TestDoneConfirmationCommand or smthg. Because it's a little bit confusing, because function has too much return types: empty object, command, null.\n. No need for Promise.resolve here\n. I guess it should be in driver tests dir, not in click\n. wron formatting, also there is no need to test whole callsite, just test for the expected line:\njs\n\"> 13 | await t.click('#btn');\"\n. BTW, I'm not sure I understand how this test works. Can you describe it in the comment, please?\n. Too bad we don't have :// after protocol name in error message. Can we add this functionality in context of this PR?\n. :// should be in <code> content as well\n. TEST_DONE_CONFIRMATION_RESPONSE? Because, if it's a command we should use command ctor then. BTW, maybe we should add some data to this object for debugging purposes? Like returning string test-done-confirmation instead of object?\n. In which case we have statusId, but don't have response?\n. It should be ClientCodeExecutionIterruptionError. We use generic term client code to share error beetween hybrids and t.eval\n. It's should be synchronizationError like MissingAwaitError\n. I'd rather say by page load. Also, maybe we should figure out scenarios when it could happend and give some suggestions in error message how to avoid it? \\cc @VasilyStrelyaev \n. by page reload or redirect - not quite semantically correct, I'd rather stick with unload\n. @AlexanderMoskovkin To be honest, I don't get what both your sentences mean =)\n. More likely the reason will be changing triger of page navigation from Hybrid code. This is what we should suggest, smthg like: This problem may appear if you trigger page navigation from client code.\n. Base classes should be in Base section: https://github.com/AlexanderMoskovkin/testcafe-phoenix/blob/5d9a3e870a3eaca01241efb0e8257425eab64b6e/src/errors/test-run/index.js#L9\n. Evertyhing else LGTM\n. Can you describe (preferably in comment) when this situation occurs?\n. If we use _resolvePendingRequest wouldn't it break lastDriverStatusResponse machinery?\n. Why we need to run it through client? Can't it be implemented just server-side, like wait?\n. OK, got it now. But why we need to pass resize info through the client? All we need to do is just change title and then change it back. I guess we will use same machinery for screenshots? Can we just save pendingBrowserWindowCommand in TestRun (which is screenshot or resize window), then run some kind of ExecutePendingBrowserWindowCommand which will change title and trigger TestRun which will run appropriate code and then change title back. \n. Actually it's executePendingBrowserWindowCommandCommand because we give a command to execute another command, but it's not quite cool. Maybe we should rename it to executePendingBrowserOperationCommand. \\cc @VasilyStrelyaev \n. We have a pendingBrowserWindowTask term in TestRun, so maybe executePendingBrowserWindowTaskCommand?\n. Let's refactor it to function isBrowserWindowCommand and move it to commands file (like we have for isRejectableByPageError\n. I think we should do it the way we do it with Hammerhead and URL-related errors: provide error message with HTML formatting in browser natives, but wrap it with our error, so we can attach callsites\n. Well, feel free to name it whatever you want. The main requirement: we should understand after e.g. 3 months how's this thing works and able to re use it's machinery.\n. Well, I guess it makes sense to move this assignment into condition body as well\n. Both\n. Or... The only possible error here is device type, right? If so, can we expose supportedResizeDevices or smthg like this in browser-natives and use it to validate parameter on our side? \n. Yep\n. I like it. Even better: runWindowManipulationCommand \\cc @VasilyStrelyaev \n. As I see it, e.g. ResizeCommand creates pendingWindowManipulation and runs executePendingWindowManipulationCommand\n. command - executePendingBrowserManipulationCommand\nmethod - executePendingBrowserManipulation\nremove -command suffix for all files in command-executors, rename their default exports as well\n. I guess we can use sync version in tests to simplify code\n. Use del package instead - it supports promises out of the box\n. I don't like some reason part. Maybe smthg like was unable to save screenshot due to error?\n. I don't like that we use state variable, because it creates action side effect. Can we return screenshotPath as result of TakeScreenshotOnFailCommand action?\n. Why we need executionError var?\n. I think it makes sense to move browser manipulation logic to separate class BrowserManipulationManager and store screenshotCapturer inside it, instead of TestRun. Test run will own browserManipulationManager instanse and will call it's methods like takeScreenshot and takeScreenshotOnFail \n. screenshotRequired was used in old API. I guess we can avoid whole roundtrip just by checking this.opts.takeScreenshotsOnFails in _addError\n. Yes\n. This commands can't be rejected by error, so I still don't get why we need it\n. What kind of execution error may happen here?\n. FYI, this question relates to https://github.com/DevExpress/testcafe/pull/552#discussion_r64570866\n. I guess it's just a poor wording on their side. It's not a testing framework, yes, but it's widely used and works just fine as an assertion library.\n. https://github.com/nodejs/node/pull/3330#issuecomment-162093661 :tired_face: Anyway. it works just fine for almost al scenarios I've met. So, we need this note anyway.\n. I just thought that we choose not quite correct name for this client command. It's actually prepares browser manipulation execution, while manipulation executed on server. Maybe rename it to PrepareBrowserManipulation? Rename executor to prepare-browser-manipulation.js. And client message to ready-for-browser-manipulation. \\cc @VasilyStrelyaev \n. Also, missing ) after actualText and actualText is not called. Also it makes sense use t.eval here:\n``` js\nconst actualText = await t.eval(() => document.querySelector('#article-header').text);\nexpect(actualText).to.equal('Thank You, John Smith!');\n``\n. Hybrid functions are intended for the cases there you need pass arguments or reuse client code. This example demonstrates neither, sot.evalfits better here. But we haven't introducedt.eval` yet. I suggest to rewrite example the way we will reuse hybrid function in it and also pass parameters to it.\n. >  perform custom actions on a page element\nthis is bad practice.\n\nYou wrap your code into this function\n\nYou don't \"wrap\" anything. You create function with code which will be executed on client. \n. No need for this, it's right below it.\n. OK\n. BTW, if we already have this mechanism in legacy API and it differ - why it's in core? Shouldn't we move it to driver?\n. > It's seem like we need pageUrl to create error message in some case\nI don't get it. In which cases?\n. title -> windowId\n. title -> windowId\n. I thought we will have client-code machinery and hybrid functions on top of them and will use client-code machinery in raw API (since we don't have hybrids there). But then I realized that once we will need client code parameters in raw API (and we will need them) we will use hybrids machinery anyway (but it will be implemented a little bit differently for raw API). Therefore, it makes sense to use hybrid term in code. Meanwhile, end-user doesn't know about our intrinsics, so we use term \"client code\" in error message to make them generic (e.g. because we have Hybrid and t.eval)\n. No need for website. Just into a project you are going to test\n. Don't like this whole part about website, non-website projects. Too much prerequisites. Can we skip it and just describe installation process? \n. We can just shorten this whole section to First, make sure that Node.js and npm are installed on your computer.\nand npm install --save-dev testcafe\n. If we installed test cafe we assume that we already in the project dir\n. Get rid of website project term\n. I don't like this imperative mood. We just need to tell that testcafe tests are just reqular *.js fiiles\n. Also it's worth mention that you can put test file anywhere and pass their path to testcafe\n. Technically it's not within test function, it's specified as test function argument. But it's better to rephrase it as Test code is specified using test function \n. upload action was rename to setFilesToUpload\n. I have no idea how to run tests yet. Maybe it makes sense to move running test and Viewing test results sections after we have the first runable code snippet?\n. asynchronous is not common term in JS-land. async-function (which implies async syntax) usually used\n. We need to show how declared hybrid function is used in this example\n. tested project -> project\n. Skip go to the tested project directory (*my-project*) part. \nIt should be npm install --save-dev chai\n. Let's refactor await getElementTextById('article-header') result into variable \n. I'd rather use JS comments to annotate what's happening. \n. https://github.com/inikulin/testcafe/blob/fb8f2e00475adb5d878d045d7e04177ff0aec0d0/src/test-run/index.js#L174 - nope\n. Yes, but it breaks straightforward narrative of GS\n. No, I think we should actually let people learn how to run examples first. So on each step they will be able to try an example\n. I think it makes sense to have options object with { portrait: Boolean } property. If set to false - use landscape orientation (default).\n. I'd rather go with our own list implementation from browser natives, because this one fetches data on install, which may break testcafe installation and require additional install-time only dependencies.\n. I guess it makes sense to switch to short-id like we did in hammerhead: https://github.com/DevExpress/testcafe-hammerhead/blob/master/package.json#L31\n. Why getter and not just this.id field?\n. I guess we should use browserId instead of handle\n. Since we have browser entity now we should implictily call it _getBrowserConnections. Also in general we try to avoid names like _getBrowser and _getBrowsers, because it' may be confusing. Name it _getBrowserConnectionList instead\n. It's better move require logic out of here to bootstrapper and rename it to BrowserProviderHost like we have for reporters.\n. Also, it's currently missing logic for handling unknown provider: see https://github.com/AndreyBelym/testcafe/blob/28b0b77f72f7973a1dbc9c9939ae8a4d0d6d1042/src/runner/bootstrapper.js#L111 for example\n. I guess it doesn't make sense to create browser provider each time we need it. It is something that should have one instance per testcafe instance. I think we need browser-providers-pool which will a)store built-in providers, b)maintain pool of available providers c)maybe move alias parsing logic there as well d)will have getAvaliableAliases method which will return aggregated results\n. await is not a function, it's a keyword\n. I don't like Implementing Test Logic either. Maybe Creating Basic Test or smthg?\n. Maybe we'll go just with plain structure, so we'll not have this problem?\n. Is it OK that we have @MargaritaLoseva credentials in example or it's better create TestUser account? \\cc @VasilyStrelyaev \n. It's ClientFunction, not Client. Also \n\nit offers special functions\n\nI think it's better to say special kinds of functions, because we don't offer the functions themselves, but the way to construct them.\n. I think it's better be rephrased as something like code of this functions will be executed by client, but you can pass observe their result and call them with parameters from test just like regular async functions\n. No need for () around id argument\n. BTW, I think we should rename Executing Client Code to Page State Observation or smthg like that.\n. We can go without headerText intermediate var now. BTW, I think innerText suits better here then textContent (I'm not sure if textContent will be actually equal to Thank you, John Smith!).\n. Yes, we don't have functions as return value for hybrids. So there is no way compiled code can get here anymore\n. Page code\n. I will take care of errors later (see Error text adjustment for Hybrids and Selector in #574 ). Otherwise this PR will have enormous size.\n. Right!\n. https://github.com/DevExpress/testcafe/pull/583#discussion_r66263947\n. It's should be IE doesn't havechildrenfor non-element nodes\n. Let's keep it as is for now. I'll do work on errors later\n. There is a third option: describe code structure using comments in code\n. Let's refactor ternaries to vars\n. I find it hard to parse this. Can we refactor it to make it clear when command rejectable and when not? BTW, in some places we have browser manipulation and in other window manipulation, can we come up with consistent terminology? \n. It should be manipulationTask I guess\n. manipulationCommandType?\n. For this particular example I don't think that  growing step-by-step is a good approach. It's quite minimal and describes code organzation for tests, so it preferable to be observed all at once.\n. Can I have a look at step-by-step version?\n. Need to remove parenths around id here as well\n. OK, got it. Let's keep it as is.\n. Why? Digits are preferable in technical docs.\n. Same here\n. You can turn onMessage into Promise and then use Promise.race for message and other part of functionality. This will help to get rid of tearDownAndResolve arrow and awkward resolved var \n. Can we use ctors for inter messages?\n. Seems like this method is used only by driver links. Why it's not a part of the class then?\n. ok\n. Same as above: you can simplify code by Promise.race with timeout\n. Oh, OK. Let's rename it to sendMessageToDriver maybe?\n. PageLoadError?\n. Error message shouldn't be wrapped in <code> (see hammerhead errors). And I think we don't need any prefix - we can pass hammerhead error as is.\n\n. Why we need this error recovery here?\n. Nope, doesn't make much sense until we will not get error recovery which should be tested separately\n. Comment doesn't make sense now\n. it's better be named warning-messages.js\n. As far as I remember in that case Babel desugaring causes problems with callsite. But I'll give it a try.\n. ACTIVE_IFRAME_SELECTOR\n. activeChildDriverLink\n. iframeErrorCtors.IsInvisibleError, etc.\n. https://github.com/DevExpress/testcafe/blob/master/src/errors/runtime/message.js#L26\n. I think we should wrapactualValuehere not index. BTW, it worth cheking ifactualValuenot wrapped elsewhere\n. One generic and one for Actions\n. OK, keep it as is\n. We need to filter node internal modules as well see: https://github.com/DevExpress/testcafe/blob/master/src/errors/stack-filter.js#L23 and https://github.com/DevExpress/testcafe/blob/master/src/errors/stack-filter.js#L24\n. BTW, seems like we don't needstackOnlyoption anymore (need to check this), so we can remove it now fromgetCallsiteMarkup. Nah, solutions with shared variable is even uglier.Promise.prototype.finally` would solve this issue, but it's not in standard yet. @VasilyStrelyaev's code is just fine\n. ``` js\nvar getBrokenLink = function (result) {\n    return Promise.resolve()\n        .then(function () {\n            if (result.broken)\n                return result.url.resolved || result.url.original;\n        var link       = result.url.resolved;\n        var parsedLink = url.parse(link);\n\n        if (parsedLink.hash) {\n            if (checkedHashes[link])\n                return checkedHashes[link];\n\n            return isHashValid(link)\n                .then(function (isValid) {\n                    return isValid ? null : link;\n                });\n        }\n        else\n            return null;\n    })\n\n};\n```\nAlso, isHashValid can check for cache (which makes sense). BTW, we don't use functional expressions (only for predicates). And since this whole thing has inner state it's better be implemented as class, e.g. WebsiteTester\n. I guess it's not ready for review yet - we've decided to significantly change code (see discussion above)\n. No need for resolve here, since _parsePage is already async you can just attach .then to it\n. It's better be written as:\n``` js\n Promise\n    .all(pageTests)\n    .then(res => {\n          const brokenLinksCount = res.reduce((acc, value) => acc + value);\n       resolve(!!brokenLinksCount);\n\n}));\n``\n. What isevaland for what it used for?\n. Let's rename it tobuilt-in-providers.js.plugin-host.js.BrowserProviderPluginHost. Why we need this trick with$? \n. I guess we need to hide our vars using symbols to avoid accidental overwriting, like it's done inReporterPluginHost. It would be really nice to get rid of this dep. First of all it's huge and npm programmatical API is unreliable. \n. BTW, what if I publishtestcafe-browser-provider-localto npm? At first I thought we will publish built-in plugins to npm as separate packages, like we did for built-in reporters. But for providers I guess we should try to pick npm version first and only after that fallback to built-ins\n. Shouldn't it be field of provider object?\n. BTW, since we now haveprovidername:descrnotation, maybe we should useremote:1,remote:2and so on?\n. Let's name itsaucelabs. Does it search only for globally installed modules? Because we need to find locally installed modules as well (if it's possible)\n. OK, I thought so. Can we have better naming for this then? Something likerunBrowserInitializationScriptor smthg like that?\n. Because in all other places actual value can't contain spaces\n. ping @AndreyBelym \n. Too hacky, can we just choose another names to avoid mangling?\n. Not cool. I have a feeling that this logic just doesn't belong here. Ideally we should get rid of any non-overridable methods. Or move them to prototype as symbols to avoid overwrite\n. Yeah, definetly should stay in BrowserManipulationManager\n. See https://github.com/DevExpress/testcafe/pull/573/files#r68586647\n.HandleAlertDialogCommand, ...\n.handleAlertDialog, ...\n.NativeDialogTracker. JustunexpectedDialog?\n. What about selectors interrupted by unexpected dialog?\n. Can we move all this dialog-related stuff toDialogMonitor?\n. Can we refactor this piece of code to the function with the meaningful name? This functions is already huge.\n. This is incorrect. All errors will have callsite of the last command\n. I think we can go withoutdialogTexthere. It may be huge and break error reporting\n. Same here\n. What it \"handle...\" function?\n. What isresulthere?\n. Why usesetTimeoutwhen we already havenextTick?\n. Is thiscommandCallback?\n. What's going on here?\n. Yep\n. AFAIK it's sync\n. Well it'shandlerReturnValuethen\n. I bet it can be simplified. It's really hard to figure this out from code currently\n. Why it's in UI?\n. BTW, do we have tests for the legacy API to ensure that we didn't break anything?\n. Maybe \\cc @VasilyStrelyaev \n. Ok then\n. Nah, just keep it as is. it will be screwed up by WebStorm auto-formatting anyway\n. It's better be moved toRegressionsub-fixture oft.click. We create dedicated fixtures only for tests that involve different API.\n. Ok\n.initialHandleDialogCommands?\n. Don't rely on command type here, better useswitchstatement.\n. This file needs header comment that it used both by client and server\n. What issuccesshere?\n. Not cool\n.currentCommand. soinitialDialogcontainsExpectedDialogobjects? It should beinitiallyExpectedDialogs` or smthg like that. Same in driver\n. See: https://github.com/DevExpress/testcafe/pull/621#discussion_r68941568\n. I'm not sure how error propagation will work without execution chain (if it will work at all):\nawait t\n         .click('1')\n         .click('2')     // error occurs here, will it reject click(3)? Will it propagate? Because now they are not connected with promise chain\n         .click('3');\n. Well, it's not correct and completely kills any possibility for the error recovery.\n. We have too much args now, maybe constructor(testRunId, communicationUrls, options) instead?\n. Not quite safe way to do that, because func code can be augmented by Babel artifacts. It's better to pass string here.\n. Do we need to store helpers in plugin? Can we just use helpers from the outside? So we will not have methods that can be augmented?\n. What is generic provider?\n. Internal methods should be prefixed with _\n. Why we throw error without message here?\n. ~~I think we can keep just 9.x according to this stats: https://david-smith.org/iosversionstats/~~\nNah, ~10% is too much. Let's stick with 2 latest major versions\n. This is not how it used usually. You need to add it to npm scripts\n. I don't understand why whole installation topic belongs to command-line-interface. I have strong feeling that it shouldn't be here and more likely should implemented as separate topic. For programmatic usage you will have the same steps. Also we need to reference full installation topic from GS\n. Yeah\n. First of all it's prefered for CI scenarios. There you need to distribute as dev dependency so it can be run in CI env\n. IMHO we shouldn't even mention programming interface here\n. It's better pass options for consistency here. It should also accept client function as fn\n. Use builder.getCommand to achieve function descriptor. The use ClientFunctionExecutor.getResult() to achieve function result on client (since it will be executed multiple times, I gues it makes sense to extract function evaluation to ctor in ClientFunctionExecutor.\n. Better extract process.env.TESTING_ENVIRONMENT || config.testingEnvironmentNames.localBrowsers into var\n. In which case err doesn't have errMsg?\n. Let's just keep expect(err.errMsg) we need to fail on fulfill, it's not important to have exact error message comparison \n. It's better use existing error here\n. browserProviderNotFound\n. The specified browser provider \"{providerName} is not found\n. What is warnings log?\n. What kind of warnings we can get from providers?\n\nAlso it's logging warning messages using debug package, I found it very useful for myself when debugging providers.\n\nWarnings are things that should go to reports, debug is used for internal debug messages, they shouldn't be mixed\n. I would like to keep warnings system as simple as possible. So far all warnings are isolated in BrowserManipulationQueue it would be nice to keep them there as just events. Regarding debugging warnings - they should be implemented separately and shouldn't be leaked to providers (implementers should choose their own logging implementation) \n. I think we should have feature support list exposed by provider in that case and perform reporting on testcafe side\n. Oh, just found out that you use lineNum, it's not a part of public API, it's better to render callsite and check that rendered string contains > 19 |        .method1() \n. Ok, then. But this shouldn't leak into Builder then. We need separate validation in setNativeDialogHandler\n. Here and in many other places - weird blank lines before/after section comments. We add 2 blank lines before section comment, and we don't have blank lines after section comment\n. Should be a class: BrowserProviderCacheItem\n. Error in message: ot. Have you checked it with @VasilyStrelyaev ?\n. Why we need to explicitly init provider? Can't we do it on BrowserProviderPool.getProvider? BTW, BrowserProviderPool is an object, not ctor, so it should be named in lower camel-case\n. Why?\n. Wrongly placed closing \"\n. Stop, I thought we can open browser on Linux? Does this mean TestCafe doesn't work on Linux at all? Can't we open browser by executing binary and providing it an URL?\n. What kind of error we can have here?\n. Just use https://www.npmjs.com/package/sanitize-filename package\n. Why we need this DESCRIPTION parts? Can we get rid of them?\n. Wow, this is release-stopper. In previous version we've used opening via basic exec. Why we can't go at least this approach for now? This renders TC completely unusable on Linux, we can't release in current state.\n. ok, then\n. OK\n. No need to put whole callsite here. It's enough to check that it contains > 24 |        .method1() string.\n. Put this file in test/server/data/test-suites/regression-gh-599 dir\n. No, why?\n. As for fixture you can use template literal here too: \njs\n.page `url`\n. As far as I remember it's not requirement for test name to be unique now (pls, check). Same for fixture name\n. handleAlert is obsolete\n. It's a little bit misleading, since getSomethingOnTheClient is not defined on client side and not passed as dependency. It's better use comment here, e.g.:\njs\nexpect(await t.eval(() => {/* get something on the client */})).to.be.true;\n. Or it's not... =)\n. It should be switching between <iframes>\n. Better create Selector here or even better pass arrow directly to t.select\n. switchToIframe\n. switchToMainWindow\n. Avoid frame term. Frames are parts of legacy <frameset> element. This term also used by some browser implementers internally. But it never appears in that meaning in any specs and it's not familiar to end users\n. Use import\n. Pass arrow directly to t.select\n. I have a strong feeling that we should extract selector-related stuff from here. Yes, they have look-a-like machinery. But selectors are really different from client functions. And I will not search selector-related stuff in Executing Code in the Browser section\n. It would be nice to make dialog names links to MDN\n. 'alert' | 'confirm' | 'beforeunload' | 'prompt' \nThis part is not rendered correctly, I guess because it's malformed markdown\n. It's worth mention that it will be triggered on client side and therefore you shouldn't use any node API in handler\n. Default handling: No button - I guess it's better be 'No' button\n. No break after return\n. Here and in many other places: it's quite misleading that we show signatures without host object. It looks like a standalone global function. Maybe it's better use t.getNativeDialogHistory() \u2192 [{type, text}] signature?\nUse thegetNativeDialogHistoryfunction for this -> Use test controllergetNativeDialogHistorymethod for this\n. We can reference such FIFO array as a \"stack\"\n. No break after return\n. to click a checkbox element?\n. All examples are missing fixture and page declaration. Are these tests can be run on example page or they are just synthetic examples? \n. We need mention that you can use selectText or press('ctrl+a') for this purpose\n. Also dragging never invokes copy/paste, it performs text selection. We need to mention t.selectText. Also, here and in other actions: why we don't use notes markup for these notes?\n. <textarea>\n. Don't reference W3C spec, it's outdated. Use WHATWG living standards: https://dom.spec.whatwg.org/#concept-range-bp\n. Presses the specified keyboard keys.\n. I guess it's worth mention that URL can be relative to current page URL\n. According to example below it can be an array of strings as well\n. AFAIK it's a bad practice to use here, where, etc. for links. It better be written as The name of the device as listed on http://viewportsizes.com/\n. You should pass resizeOptions now, not just variable \n. Here and for screenshots it's worth mention corresponding https://github.com/DevExpress/testcafe-browser-natives/issues/12. Also it seems like it should be warning, not note\n. We've already discussed it: extend view area. Don't sacrifice meaning for presentation\n. It's implied\n. Why? Just throw regular error, why do this weird trick assigning isTestCafeError to runtime error, why not throw test run error in that case?\nJust throw new Error('yo')\n. Not used\n. It's better use err.message || String(err)\n. We use double quotes to wrap API-related things \"setNativeDialogHandler\"\n. Please, wait till #685 landed, errors have a little bit different format now\n. Not quite cool. Ideally we should use runable tests. Current structure is just incorrest: you either remove imports and just keep test or use full structure with fixture declaration\n. By why we need err.isTestCafeError assignment then?\n. It will preserver callsite for APIError anyway: https://github.com/DevExpress/testcafe/blob/master/src/errors/process-test-fn-error.js#L30\nAssigning this flag to APIError is just incorrect\n. Just throw new APIError('method1')\n. > So, it was me angry at the suggestion to remove imports (they are crucial).\n:walking: \n. Yeah, it would be nice to have warning here\n. Let's convert function to string once on init:\njs\nconst initScript = (function getDataFromBrowser () {\n     return { width: window.innerWidth, height: window.innerHeight, title: document.title };\n }).toString();\n. Since we have inheritance here, it makes sense to implement these providers as classes and export newly created instances. Also, maybe it makes sense to move them to separate files?\n. export default class BrowserProviderCacheItem extends BrowserProviderPluginHost\nBTW, not sure I understand how it works, why it extends BrowserProviderPluginHost? Shouldn't it just store already constructed provider?\n. Wrong formatting\n. If you move all built-ins in separate files in dir built-in-providers, you can export default this object from index.js in that dir\n. Maybe implement all as separate provider and use unified mechanism to handle it?\n. It doesn't implement list available browsers, what testcafe -b phantomjs will show?\n. Ideally it should show phantomjs\n. It's hard to read nested calls here. Extract intermediate variables instead \n. No new line wrap here\n. No need for SauceLabs prefix. URL is just enough\n. This one is huge. Can we split it into methods?\n. Multiline arrows should have {}\n. I think we should list local browser of provider is not specified\n. Let's go without warning then\n. Yeah, just figured out that provider can work only with one browser at a time. \n\nWhat if someone will implement a custom browser provider for a company internal CI, and they want to run tests in all available browsers?\n\nThey will name it {mycompany}-all\n. Nope, they are optional. Required here means a little bit different thing: create options object for command, even if it's not specified. I guess we should rename it \n. Do we really need all this scripts just for the gallery? Looks like a huge overhead\n. I suggest fn, it's common acronym for functions in JS\n. function - bad, it's a keyword\n. WrongNativeDialogHandlerTypeError? \\cc @VasilyStrelyaev \n. Weird formatting\n. UncaughtErrorInNativeDialogHandler\n. UnhandledNativeDialogError\n. Oh, just figured out that we don't have initializer in command, which means native dialog handler can't be set from raw API. We need to move handler validation/initialization logic from t.setNativeDialogHandler here, e.g. like it's done for selector\n. NativeDialogNotHandledError - good\n. > Oooh... It will be painful. We have a bunch of common text.\nCopy/paste?\n\nMaybe we'll just rename it to Selectors and Client Code, Observing Page State or something?\n\nI'm 99% sure they should be separated, except some intrinsics they don't have much in common\n. Maybe rename it to userAgentAdditionalInfo or even better userAgentProviderMetaInfo\n. Shouldn't we enclose info in brackets here, e.g. for saucelabs URLs?  If we expect userAgentCustomPart to already have brackets - it's wrong, we shouldn't expect data properties do formatting\n. Why not inline initialization? Variable name doesn't follow const naming notation\n. No need for additional var here, it's quite clear that if we have OS.win we should use resize correction\n. BrowserProviderBase\n. Also, do we need base class here? We do base classes only if they are abstract classes. I don't see here any abstract methods\n. ~~What's this? I think we shouldn't return any browsers here~~\n. Nevermind, it's good as is\n. So what about flag what we've discussed on Friday? How TestCafe recognizes that we have single-browser provider?\n. Well, we've decided to emit warning only if it fails, don't we?\n. Don't do such weird formatting. Do single line, or extract vars\n. It's better have one filter here, with vars extracted. Because I still have no idea what each of these four filters trying to filter. \n. Let's get rid of this method. Let's always use async method and initialize provider. We can make createBrowserProvider async in API\n. We need to change DESCRIPTION text as well for new remote syntax. ping @VasilyStrelyaev \n. For local provider we shouldn't print ${providerName}:${alias}, we should use ${alias} only. Also, I've asked to reflect in code structure that alias is providerName+browserName.\n. OK, then. But we should fix naming\n. Got it now. We now expect that provider can be used via alias without browser name, if listAvailableBrowsers returns null or empty array (BTW, I believe it should return null in that case, not empty array). Also, I don't like naming of this method then, maybe listAvailableMutlibrowserOptions or smthg, discuss with @VasilyStrelyaev \n. @AndreyBelym https://github.com/DevExpress/testcafe/pull/573#discussion_r72950372\n. > If listAvailableBrowserNames returns [], it means that provider doesn't support multiple aliases, isn't that sufficient?\nIt's implicit and not clear. Regarding method name, yet another variant: listAvailableOptionalBrowserNames + I believe we should have hasOptionalBrowserNames flag.\n. Also, listAvailableOptionalBrowserNames should throw if not implemented by default. And we should perform check of hasOptionalBrowserNames flag before using it\n. We need a comment about it then\n. Add link to issues page\n. Add link to contributing.md\n. Just write MIT here\n. We need link to website in header\n. Why we need err.stack here?\n. Shouldn't it be a note instead of warning?\n. Callback is not an async function therefore await is forbidden there. \n. Maybe make this warnings?\n. A selector is a function that...? \n. There is no selector in this example\n. Warnings?\n. Important part of functionality, as well as index - requires example and highlight in the main article \n. Also, it's applied to collections only, if selector fn returns single element - we apply filter as well, so if element doesn't have specified text - selector returns null. And BTW, if selector is used as dependency on client - filter and index applies anyway\n. We need a note that it will be ignored if selector fn returns single element\n. appear in DOM and become visible (if options is specified)\n. Maybe just DOM Node Snapshot? Members is overlapping in side menu and looks like a separate menu item\n. value and checked is undefined for elements that doesn't support them\n. use relative URLs\n. use relative URLs\n. OK, then\n. E.g. you have online document viewer. You refresh document from server and would like to see if image that you added to document appeared in the viewer\n. I was wrong, let's stick with base class approach\n. Let's set this flag explicitly for all providers\n. OMG ) Maybe we can go without rxample here and just reference client fn section?\n. More schematic example kinda looks better, but it's missing top-level promise that provides resolve\n. Ehhh, what's going on here?\n. Will isDomElement return true for text node?\n. It seems like it should be ||\n. Too complicated, can we just have switch by nodeType?\n. Oh, can we change formatting a little bit? Everything else - lgtm\n. I don't see how integration with project is related. Programming is not strictly related either\n. Saucelabs and phantom will not be built-in, they will ship as separate plugins.\nIn this paragraph we should highlight that you can easily run CI on popular CI platforms using browser providers mechanism (we need link to CI topic here) and what if you haven't found provider for your platform/needs you can be build your own.\n. What about document it should be always visible \n. Indentation is off here\n. Indentation...\n. Let's completely disable auto playback in gallery. It's painful to read text above then something is constantly scrolling below\n. I believe we just need next tick here. Returning delay(0) in the previous promise should do a trick.\n. it's also applied if it's called from another selector \n. We need to mention that it's 0 by default\n. Not sure if it's an appropriate place for this\n. Maybe put in getting started in Running test?\n. OK, let's add it to getting started as well\n. We can replace with localIy-installed. Regarding path - it's just fine\n. Let's not refactor existing code for now, it's just fine as is.\n. takeScreenshot?\n. Change to Automated browser testing for modern web development stack.\n. Seems like you misunderstand what the active tab is\n. Nah, we use JavaScript types. There is no positive integer type\n. See: https://github.com/DevExpress/testcafe/pull/683#discussion_r73838971\n. No, they are not. Client functions can't return DOM elements\n. It will be created in context of https://github.com/DevExpress/testcafe/issues/703 I guess\n. Just add link to CONTRIBUTING.md in the root of the repo\n. It depends on browser provider now, if it supports resizing and screenshots - it will work\n. > May be more clear will be to say: ... like the first test action.\nNo\n. BTW, if so we should add page URL both to history and handler arguments\n. BTW, why not:\n``` js\n{\n    modifiers: {\n        ctrl:  Boolean,\n        alt:   Boolean,\n        shift: Boolean,\n        meta:  Boolean,\n    },\noffsetX: Number,\noffsetY: Number\n\n}\n```\n?\n. That's bad. Everything optional should be in options object.\n. Yes. Most common scenario is to check the latest entry in the history, so you will write:\njs\nhistory[0]\ninstead of\njs\nhistory[history.length - 1]\n. @VasilyStrelyaev We need to describe this new behavior\n@helen-dikareva Feel a separate issue for this, please\n. Can't we do this via CSS @media query?\n. DeterminateIndicator and IndeterminateIndicator. DeterminateBehavior is ambigious\n. OK, then\n. We can store processed script\n. Should named in constant notation\n. BTW, we have a moment exposed for formatting purposes\n. http://momentjs.com/docs/#/displaying/format/\n. Moment is available via this: https://github.com/MargaritaLoseva/testcafe/blob/4b27df2b5251f27b90d61fd6e68acb22520b1f8d/docs/articles/documentation/extending-testcafe/custom-reporter/helper-methods.md#moment\nBTW, I guess we should rename Helper methods topic to Helpers since it contains not only helpers\n. According to my calendar it's 2016\n. testing websites and apps -> testing websites and web apps\n. covering all user actions - I'm not sure if we cover all actions\n. Highlight async/await as code\n. For general purpose questions and discussions use https://testcafe-discuss.devexpress.com/\n. @MargaritaLoseva link is still missing\n. CONTRIBUTING.md file\n. I don't like the whole paragraph to be honest, because it doesn't describes what browser provider plugin is. Browser provider is a plugin that tells TestCafe how to start/gracefully close and perform actions with browser windows from specific sources (e.g. cloud services)\n. We need to mention that it's a requirement that plugin name should start from testcafe-browser-provider-, otherwise TestCafe will not be able to find it\n. We need to do the same for reporter plugin BTW. Also, this note in reporter plugin doc, doesn't formatted using our new note markup\n. Why we have such a strange templates here, we don't use this format as far as I remember \\cc @AndreyBelym \n. Use import here\n. Why exec is called without callback? Shouldn't we return promise here? \\cc @AndreyBelym \n. Also use template literals\n. BTW, why we need this method to be exposed by provider? Can't we just check names via calling getBrowserList \\cc @AndreyBelym \n. I have no idea what this section doing here. It should belong to browser provider development section. Also, this lib shouldn't be presented as built-in. Yes, TestCafe requires it, but custom providers should install it as own dependency.\n. TestCafe comes with a [built-in library](#built-in-library) I don't get it. We have just built-in support for popular browsers, remote browsers and specifying browser via path. browser-natives has nothing to do with it from end-user perspective, it's just an utility library that we use internally and that can be used by provider plugins. Also it has another name now \n. We don't provide them out of the box, so we should show them here as an example. Because currently it doesn't sound so\n. Here and in other places: why we put prefix and name in braces? I will definetly not find anything by {testcafe-browser-provider-saucelabs} query. Also, it's wrong to say that I should use {testcafe-browser-provider-} prefix\n. testcafe- is a part of plugin name already, it should be:\nbash\nnpm install --save-dev {pluginName}\n. Why it's a startPage and not pageURL? Who cares if it's start or end or whatever. Also if it's URL, it should contain URL in it. \\cc @AndreyBelym \n. What kind of actions I can perform with pageInfo on close action? \\cc @AndreyBelym \n. switdh -> width\n. I have no idea how it can be used? Is it called each time browser is initialized or what? I have no idea how it fits into life cycle of the provider (also because I have no idea how it's life cycle looks like)\n. We need to elaborate on id a little bit. Mention that it's some unique identifier generated by TestCafe which you can use to identify browser window through the lifecycle. \n. Why it async then? We need to elaborate on this subject, because it's not quite obvious\n. We need to describe it as well. Because from use perspective it's not obvious for me why I need title when I have e.g. id. BTW, don't we set title to id on actions?\n. pageUrl I guess\n. Need to highlight it in description, we can use path example\n. This should be highlighted in description\n. It's not the point of my question. You've copied generator's template. Once generator made it's job \"<%= providerName %>\" should be replaced with the actual provider name. Since, it's an example of generated provider we shouldn't have generator's templates here.\n. It could be created by hand and it's important requirement, we need to mention it anyway, even if generator enforces it. BTW, regarding {testcafe-browser-provider-my-provider}-like templates - we need to fix it in reporters as well.\n. What is pageSize? Maybe currentWidth and currentHeight instead?\n. Same here\n. But in current context it should be pageWidth and pageHeight I guess\n. Did I get it right: pageSize is a size of content window, while width and height are sizes of content window + borders?\n. Then I don't understand why we should have width, height, currentPageWidth, currentPageHeight instead of  width, height, currentWidth, currentHeight\n. We have moment package for this\n. quarantineAttemptNum\n. sanitizedPath\nand do we need to perform split here? I thought sanitize can handle it\n. sanitizeFilename\n. _getTaskStartDate\n. Also it's not quite correct (and startDate var name as well) - it's not a date object, it's formatted date and more likely it's semantically baseDir or something like that.\n. Why we need this check? Is there was some case that we need to check here?\n. > It's worth to mention that it will work only if testcafe was installed globally.\nNot quite true. It will lookup for linked version even if it's installed locally (we use node.js module resolution, right?). It will not work only if locally installed version has installed plugin version in the lookup path, which is unlikely \n. @kirovboris Eeh, why not? I don't get your point. Make your plugin configurable to allow it accept keys and passwords. We suggest npm as a primary plugin distribution system\n. I don't get it, what remote browser has to do with it? This whole section is about browser provider plugins\n. Hi there. We've discussed how our plugin system will operate a couple of months ago, where have you been? And yes you should publish it, our plugin system is built on top of npm. If you don't wish to make it public you can use private npm repo or use npm link. But we don't encourage people to do so.\n. No, we did it in person. Anyway, it was already discussed and implemented. There is nothing we will do for now. If you have some real scenarios that can't be implemented with current approach feel free to develop and share with others your own proposal on how we can extend plugin system. \n. As I mentioned above you need either publish module or npm link it\n. Can we have link below the logo as a regular link?\n. Maybe better secondStarted? And don't reset it in Second test?\n. Why we need this wait here? Also, why not t.wait?\n. This parameter is used to resize the window correctly. - What does this mean?\n. Here and in all other places: npm should be lowercased\n. Let's keep it single line, just refactor this.opts.quarantineMode ? quarantineAttemptNum : null into var\n. I don't like pathForScreenshot name, BTW. path is path for screenshot too. Just get rid of ternary here and make conditional assignment of joinPath(path,run-${this.quarantineAttemptNum}) to path\n. Why not ternary here?\n. First of all instanceof Array is not frame-safe. Also, do we really need this deep comparison? If so, why it's not named deepEquals? \n. Use const or let\n. Needs space after deps here\n. Also it's node6, you can use ES6 features: const, arrow-functions, etc.\n. Can we have something not as specific as native dialogs in example? Maybe some button which makes greeting visible when clicked (add assertion for visible text). \n. Formatting\n. Specify * as testcafe version here\n. We need to elaborate on what's going on in this script. Because, e.g. I have no idea. How I can modify it for my needs? AFAIK you don't need ' around tests/index-test.js\n. Why we need this whole section? Isn't it the same you described above?\n. Just reference example project somewhere at the beginning of the article \n. Example project missing README which will describe how to run this project, one-liner description on what this project is about with cross-reference to recipe\n. There is not special term in HTML spec that fits well for this meaning, e.g. see textarea categories. However isEditorElement sounds good to me\n. Pick some meaningful name for this project like running-tests-using-travis-and-saucelabs. Also, it's better to run npm init on the repo and fill missing fields\n. Maybe we just make a package for this already? =)\n. > can we use the word \"intake\"\nNo.\n\nThe word editor has a narrower meaning (more specified) in my opinion.\n\nCall it isEditableFormElement\n. generateDirectory\n. Can you scope all this functions into generate-docs-readme, please?\n. Much better not quite good wording, I'd rather say that it's easier to browse it on website due to persistent TOC. Also, this docs may be a subject of change, since we use master branch for development this directory may contain documentation for functionality which is not release yet.\n. Speaking clearly we need to highlight that it's a development version of the docs and suggest to use website instead.\n. In which case arr2 can be null?\n. tag -> tagName\n. Need to add chai to deps\n. It's too long, will not fit into the single line of terminal\n. You can do t.select('#click-here'); instead of using function here\n. In our case TestCafe integrates Travis with Sauce Labs, you don't need to perform steps provided by the link. Therefore, this sentence is a little bit misleading.\n. AFAIK, it's enabled by default\n. Which application? Do you mean website?\n. This doesn't tell me much, what EXIT_CODE=$?; kill $!; exit $EXIT_CODE command do? Can you explain in details?\n. It's yml language and it can be properly highlighted\n. Sentences in list should begin with capital letter\n. should is not quite correct word here. E.g. I may have site deployed somewhere else. In that case I will just need to  run testcafe command.\n. Well, at first I need to install testcafe locally.\n. We can use fixed version of chai\n. It doesn't catch my eye at all\n. Can we follow README style that we have for https://github.com/DevExpress/testcafe/blob/master/examples/basic/README.md ?\n. No need for included files description\n. Just write how to checkout files for further steps just give a link to recipe. No need to duplicate info here\n. How I can copy files? You need to checkout files first and install dependencies, see https://github.com/DevExpress/testcafe/blob/master/examples/basic/README.md\n. Yes\n. I guess it can be moved to utils. Also, we need to import Promise.\n. Isn't it too long for bootstrapping? \n. Weird formating\n. Why it's a set of samples files when it's an example?\n. Declarations should be aligned by =\n. Why?\n. Test\n. We need a comment that describes this behavior then. It's not obvious at all from code why we need it\n. Just put them in separate rows:\n- For Travis: All Travis tasks (server, client, functional mobile, etc.)\n- For AppVeyor Functional desktop\n. MacOS\n. Also add [docs] to PR title - we don't need full CI and we need to lint README\n. Hmm, ok then\n. Actually, we don't wait for animations\n. PhantomJs is not a cloud browser. You can run it locally on your machine with this plugin\n. It's not correct for all providers, some providers can have browser name omitted, e.g. phantomjs. The better way to obtain available aliases for provider is to run testcafe --list-browsers {shortProviderName}, there shortProviderName is what follows after testcafe-browser-provider- prefix, e.g. saucelabs in testcafe-browser-provider-saucelabs\n. Is there any link that shows how can I do that? It should be referenced here.\n. I can do that from CLI as well.\n. Can I have a link to the page that describes what the heck is browser provider plugins, please?\n. Don't leak another package documentation here. It's enough to share a link to recipe here.\n. getWindowDimensionsInfo - it's not related to Mac on it's own, so we can ommit Mac from the name\n. BTW, can we get rid of duplication and just use getSize for this purpose (also rename it)? \n. exceedsMaxScreenSize\n. Shouldn't it be in base provider? (like resize corrections). I wonder how I can use this functionality in my browser provider (e.g. for redistributable browsers)\n. It's not hacks anymore, since I can call calculateMacSizeLimits a hack. We need better name for this one \\cc @VasilyStrelyaev \n. Throw APIError here.\n. Can't we have early error in resize action? We have max available dimensions on startup, can't we check against them before going to client?  Note that it should work in raw API as well\n. WindowDimensionsOverflowError\n. windowDimensionsOverflowError\n. We need better description for this one: we should describe that on MacOS window can't be bigger than screen size, so you can't resize to given dimensions\n. Why? If I create provider for redistributable chrome that runs on macOs this will not work?\n. isValidResizeCommandDimensions\n. Event better move this function to provider and name it canResizeWindowToDimensions (width, height)\n. What is apiBridge and why we need it?\n. > Can we introduce the Fixture object to the documentation?\nYeah, that makes sense\n. It looks weird here with this name, maybe we can somehow describe it better in title?\n. e.g. afterEach is not global\n. Both Objects and Objects with Members sounds weird. Maybe we'll get rid of this subtitles?\n. We don't guarantee anything, we just test TestCafe in these browsers\n. > the latter can be omitted\nThis phrase implies that it can be always omitted, but it's provider specific \n. beforeMouseDownActiveElement - I can't understand meaning of this var due to bad wording. Is it activeElementBeforeMouseDown?\n. Why one test is in regression section and the other one is in click? That's the logic behind it?\n. It should be subsection of How would you reproduce this behavior (if this is a bug)?\n. We need question about actual behavior\n. ivann@devexpress.com is not my email. Use ivannikulin@devexpress.com or even better ifaaan@gmail.com\n. Export as separate constants as it was before. We export const objects only if it's enum.\n. We need them to go one after another then.\n. That's OK and it's actually true, I don't want to re-trigger CI for that. \n. It's a good approach if you use it for end user application, which can't be a dependency itself or shipped with dependencies included. See ongoing discussion in https://github.com/yarnpkg/yarn/issues/1067. The issue with checking in a lock file is that we'll not have the same configuration that our end users have. E.g. we use lock file and always have a fixed set of dependencies. Everything works fine for us. Meanwhile, our end user may use npm to install testcafe and they'll end up with another set of dependencies, which may broke functionality for them. And we'll be not even aware about it. \n. Here and in other places: we don't need intermediate named function here, just pass it directly to gulp.task\n. Our code style requires assignments to be equally aligned:\njs\nvar gulp    = require('gulp');\nvar config = require('./config.js');\nUnfortunately I'm not aware about eslint rule that enforces this behavior. Maybe you could help?\n. I have a feeling that this helper functions has nothing to do with config, maybe move it to helpers.js file?\n. It would be nice to separate task files by directories, e.g.: lint, website, functional-tests, server-tests, etc.\n. > as this standard, I dont like this, because cause hard diffs in code-review/github, but it is just my opnion\nYeah, it's a common opinion. But from our experience it's not a big deal when it comes to diffs. But on the other hand, variable definitions are more readable.\n. I mean we can do:\njs\ngulp.task('build-website-development', ['prepare-website'], function (cb) {\n     config.buildWebsite('development', cb);\n});\n. Yeah, good catch, it can be rewritten as then:\njs\ngulp.task('build-website-development', ['prepare-website'], function buildWebsiteDevelopmentTask(cb) {\n     config.buildWebsite('development', cb);\n});\n. > for now, I change to follow the rule right?\nYes\n. The second one. \n\nEslint probaly not can lint our code because we dont have a rule in .eslint, at now, to force this, I believe\n\nYeah, I just get my hand on it to issue them a PR for such rule.\n. @darlanmendonca There is an issue with requiring eslint on node 10, it uses ES6 syntax. I guess we can just do:\n``` js\nvar nodeVersion = require('node-version');\nif(Number(nodeVersion) < 4) \n    require('../tasks/test-server');\nelse\n    requireAll(path.join(__dirname, '/tasks/'));\n```\n. > if I commit it now, nothing ensures that I dont forget anyone, or give a wrong space before =\nYes, this makes sense. Let's skip this issue for now.\n. Oh, my bad, your code snippet is correct.\n\nI just dont understand the directory test-server, this be related to create subdirectories inside tasks? (comment more above)?\n\nYes. \n. OK, let's do this in separate PR.\n. invalidSpeedValue\n. Also, we don't need validation here, since it will be validated in Runner\n. We should give links to issues, not pull requests\n. We need to make features bold:\njs\n- **Improved automatic wait mechanism.**\n. I guess related issue number can be in the title:\njs\n- **Improved automatic wait mechanism. ([#933](https://github.com/DevExpress/testcafe/pull/933))**\n. Oh, this could break tests. We need to run tests without [docs] tag if we want land this change with this PR.\n. We need to update a data\n. It's clear. If you do Selector('.i-m-the-only-element').nth(3), we should return null.\n. Let's keep title as is.\n. It's not a big deal\n. We can't. It's client code and we trying to avoid using prototype or static methods there.\n. https://api.jquery.com/siblings/\n. I guess it makes sense to add them in the separate PR if there will be a demand.\n. CI reports that this link is broken, I guess it's because it should be #step-3.. instead of #step-5\n. I guess it would be nice to highlight it as json:\njson\n\"scripts\": {\n     \"test\":  \"concurrently -k \\\"http-server\\\" \\\"http-server ./dist -p 4000\" \\\"testcafe chrome ./test/acceptance/**\\\"\"\n }\nAlso you forgot to escape \" after -p 4000\n. I guess it makes sense to enforce clean output by default in the original example.\n. We need a comment with the link to the workaround description and testcafe issue\n. include is not the same as within. It's an alias for contains: it checks that actual value contains some value. within checks that actual value is within some range. \n. Yes, just decided to not create additional PR for this one.\n. I've posted to the wrong thread =) I'll add border conditions check\n. But thinking about it a little bit more, I guess we shouldn't because:\n1. There is no need to test chai functionality, it's already well tested.\n2. It will require to modify callsite for other tests and I'm too lazy to do that \ud83d\ude0b \n. Use our assertions in this example as well. Also, I guess we should redesign this page model to be a class (so we'll be able to create selector derivatives). E.g. we can create single label selector: const label = Selector('label') and then expose other selectors as derivatives: label: label.withText('Support for testing on remote devices'). interfaceSelectOption can be a derivative of interfaceSelect: interfaceSelect.find('option'). I guess it shouldn't be an example here we demonstrate the general structure of assertions. Instead of eql we should use [assertionType] placeholder and link to the possible assertions types.. We should declare how our assertions are differ from the existing libraries from the start. We need to describe the motivation and mechanisms of our assertions here. . It's makes options.timeout ambiguous. Also it shouldn't be presented as Assertion Timeout. Our assertions mechanism should be described in details above.. We should elaborate details about why it's cool and how it works.. We've decided to encourage people to not use snapshots there possible. So I guess it'll be better redesigned to use parametrized selector.. Use ... instead?. Use built-in assertions. It would be better to split tables by method groups find, parent, etc. Also it would be nice to have links for them in table of contents for quick navigation. List is malformed: new lines are not preserved in the rendered markdown. Move // Page model comment above all page model-related stuff. Can be combined into a single chain. I guess we need a note that this selector properties are async. We need an Example: subtitle here. . Here and in other places: we need a link for client function. We need to give a note about ordering: first element in the set will be the closest parent. It's important, because snapshots and snapshot shorthands return values for the first element in the set.. We need links for snapshot and properties. It's not quite good connected with previous paragraph. We need to highlight that you can get all state properties at once as a state snapshot by just calling the selector. . > This is convenient when you need to get several properties of a DOM node in the same moment.\nIt's better highlight that it's not quite good practice, because it will not let you use our assertions. The only good use case for now is to pass snapshots e.g. to actions.. We need a note that in that case property will not be calculated immediately, but only then assertion will be executed.. you should always look bad in the docs. Well, if it's not an <option> element, what value it will be?. We need Example title here. Don't enumerate properties, just note that snapshot contains all property values exposed by selector in single object.. This should be highlighted as a note and use It's not recommended to pass.. instead of  But it's not quite good practice. We need to mention smart query mechanism here. Let's keep it. For which other? Other than <option>? But it's <select> property. > Use the index option when a function or CSS selector string that was used to initialize the selector returns more than one DOM node. Otherwise, this option will be ignored.\nIt's not ignored anymore, see note in https://github.com/DevExpress/testcafe/pull/960. Deep Equal. Not Deep Equal. We need a code example here, e.g.:\nPage markup:\n```html\n\n\nvar btn = document.getElementById('btn');</p>\n<p>btn.addEventListener(function() { \n    window.setTimeout(function() {\n        btn.innerText = 'Loading...';\n    }, 100);\n});\n \n```\nTest code:\n```js\ntest('Button click', async t => {\n    const btn = Selector('#btn');\nawait t\n    .click(btn)\n     // NOTE: Regular assertion will fail immediately, but TestCafe retries\n     // DOM state assertions for some period of time, so this assertion will pass.\n    .expect(btn.textContent).contains('Loading...');\n\n});\n. We can completely remove two first sentences here: `The main feature of TestCafe assertions...` and `To watch the state of web page elements...`. `Selector's DOM node state property`. `Everything you need at  your fingertips.` - let's remove this sentence. Instead of `The built-in assertions work fine with...` maybe rephrase it to `Use assertions with Selector's DOM node state properties to enable Smart Assertion Query Mechanism..`. . `The approach described above`, `Using this approach`. Rephrase into single sentence without awkward `this/that approach` references . It shouldn't have text, otherwise what test will check then?. ` system that provides **with** rich capabilities` . I guess it's better to give links to our plugins here. Or even better to recipies. Replace Nightmare with `headless` here. Here and on landing page: make `Page Object` a link to http://martinfowler.com/bliki/PageObject.html. Remove the following sentence `This methodology is based on wrapping the pages...`, since link describes PageObject in details . I mean we already have recipe for saucelabs - link it. For nightmare - just give link to plugin. Here and in other places: better use `.gt(0)` for `count`. Here and on landing page: `Flexible Selector System`. I guess it's better be rewritten as:js\nvar properties = SNAPSHOT_PROPERTIES;\nif (snapshotExtensions)\n    properties = properties.concat(Object.keys(snapshotExtensions));\n. We are getting rid of snapshot term in the first place. Maybe we'll rename it to `addCustomDomProperty`?. Why we need to escape `'` in property name here? Also I guess it's better to change text to `Snapshot extensions method` or smthg like that. It would be good to catch errors from extension methods and report them appropriately, e.g.:js\nsomeProp custom selector DOM property error:\n[error text]\n. We need to pass extensions to replicator and appropriate transformers somehow. If you attach them afterwards, newly added properties will not be processed by replicator and thus circular references will throw errors and you will not be able to encode advanced data types. Also, note that selector can work in `counter` and `collection` modes: https://github.com/kirovboris/testcafe-phoenix/blob/5e34753e68f732c0ad639f9076c349330422014f/src/client/driver/command-executors/client-functions/selector-executor/filter.js#L101 First one used to calculate `.exists` and `.count` and the second one is used in chains. Make sure everything works correctly with extensions in this mode.. Why you decided to use arguments instead of descriptive object: http://www.codereadability.com/what-are-javascript-options-objects/? Let's stick with options object instead. Use type assertions from: https://github.com/DevExpress/testcafe/blob/master/src/errors/runtime/type-assertions.js. Why we need dedicated error message for auth? Just use generic ones. We have a callsites to point out a functions . I guess it's better to start with an example where you use inline selectors, e.g. `t.click('#developer-name')`. One of the biggest advantages of PageModel is the abstraction from the actual page markup. With inline selectors you'll need to change selectors in each test, with PageModel you will need to modify selector only in single place.. Give links to wikipedia articles about authentication methods. Well, we can:js\nt.expect(Selector('#test').id).eql('smthg');\n``. I've asked to use type assertions in previous review. Well, in practice we've seen a lot people performing repetitive actions like this in tests. No, just use them for the new code.. If you use type assertions you will have generic message, like:\"password\" options is expected to be a string, but it was {type}. Don't produce additional messages, use generic ones.. I suggest to useconcurrently` package, as shown here: http://devexpress.github.io/testcafe/documentation/recipes/test-static-html-pages.html\nNote you also need to specify -s first flag to concurrently, it's missing in original topic.. We need to reflect the fact that page markup/design may changes often, therefore abstracting \"page description\" into a single place allows you to not modify all tests, but just do it in the single place. It's a separation of concerns with all its benefits: you describe page representation in the PageModel and you describe how it should behave in your tests. . Highlight as yaml. Never use you should in docs. I don't like it in the form of if you need, then you should. It should smthg like: \"if you need to run tested app server as well, you can use TestCafe --app-command flag: TestCafe will start server before testing and terminate it once the testing is done\". Also, it shouldn't be marked as Important. It's just a note. It's just --app in the final implementation. Malformed link. It may be not the preceding selector result (it's preceding selector result only in case of filter function), in other cases it's a matching set, e.g. \njs\nSelector('.test').child((el, idx) => ...)\nIn that case idx is the index of child, not the .test which is preceding selector. It's not quite clear from description what originNode is.. Shouldn't it be RegExp instead of Any type?. Same as above. Malformed link. Why not give here a link to the dependencies description in ClientFunction section?. As a concept it will be pretty obvious. Just highlight that it's not an option object, but dependencies list itself. I've discussed it with @VasilyStrelyaev, he didn't see addCustomDOMProperties variant. Let's stick with it. Also, make sure that naming is consistent across codebase. Custom property of what?. No need to extract methods this way for replicator, just keep it as is. In selector constructor just create SelectorTransform and add it to replicator manually.. Use built-in assertons. @kirovboris yes. BTW, we need to specify here what should be set as fixture.page here. Here and in other places don't use ' in npm commands, it's interpreted incorrectly (at least on Windows), use escaped \\\" instead:\njson\n\"test\":  \"testcafe saucelabs:Chrome@beta tests/index-test.js --app \\\"node server.js\\\"\". Use escaped \\\" here. Use escaped \\\" here. Formatting issue, assignments should be aligned. custom Selector DOM property? I guess it's worth enclosing property name into quotes: \"${err.property}\". It should be implemented already, try to rebase onto latest changes. It shouldn't be a function, but getter instead:\n```js\nawait t\n       .debugger\n       .click(...)\n```\nSee how it's done here for t.ctx: https://github.com/DevExpress/testcafe/blob/master/src/api/test-controller.js#L117 You need to rebase to the latest source.\n. showDeprecationMessage. showDebuggerMessage. As far as I know we can use babel as a parser, without introducing additional dependency. Just run babel without transforms and it will return an AST.. I guess it better be named getTestList or smthg like that. This file should be in compiler/es-next dir. It's already declared in compiler/es-next, also this REs are out of date (they don't work with modifiers like skip). Already declared in compiler/es-next. It would be nice if analyze just return fixtures instead of passing it around as parameter. It would be nice to have tests for fixtures and tests with modifiers like skip, before, etc.. Can we have start and end source code offsets as well?. We can't use env because source will be compiled according to the version of node installed on dev machine. Meanwhile, we should always compile for node 10.. No, we've decided to use pinkie promise, so enabling es6 will not report about Promise global. I guess it's worth mentioning that unlike test hooks these hooks executed completely on server side and only once per fixture. Also it would be nice to provide possible use case, e.g. setup or teardown tested page server or something like that.. We should mention that hooks run for each test run of the test, so if test runs in 3 browsers before hooks will be executed 3 times: once for each browser.. This is exactly what you can't do. You can only assign properties to it, otherwise you just override variable in local scope. It's not quite clear: introduce property to what? The explanation is simple: you can assign and add properties to t.fixtureCtx but you can't overwrite whole object.. > when tests are not running\nI don't like this part, sounds like they run then all tests are stalled. It's better be described as hooks that run in between tests and they don't have access to tested page. . Let's move dependencies to separate var to make code cleaner. Why this code duplication? Also, do we really need to add methods to snapshot? I guess it should be just Selector methods. This method has grown too much, let's refactor it.. There is no need to abuse functional tests for these type checks. Use unit tests instead. It would be nice to have tests for mote than one argument function. There is a consistency problem: It's not snapshot methods, it's selector methods. This comment thing is not necessary. Make user mention a link to github account. Mention method names in title. Actually this will throw immediately if nameInput doesn't exists in the DOM. You can wait for element to become visible or exists by using nameInput.count or nameInput.exists first.. Relative to what it will be then in your opinion?. Yep. But you don't need await in\njs\n.expect(await nameInput.exists).ok(). Oh, you speaking about file: protocol, your example shows URL. If so, yes, it would be nice to have relative path support (I suppose we don't have one at the moment). Why you need to obtain snapshot to execute client function, consequently making 2 client-server round trips?. Better use generic expected and expected2 variables. There is no need for this validation. Assertion type is not argument. create-assertion-executor.js. executor. createAssertionExecutor. It's fine to keep start and finish here, because it has context. But in generic assertion command structure they will be converted to expected and expected2. good catch. This is a huge overhead to call getFunction for each method. Moreover, this will not work correctly: we should use selector with bound args here. Also, I struggle to understand why you don't want to just reuse addCustomMethods from add-api.js . Move it from commands directory. I guess it's worth to move executor to src/assertions/index.js. It's become way to complicated. Can we refactor it a bit? Also it would be nice to use vars for time-related stuff with some meaningful name.. We used it initially, but we don't do that anymore. There is no need for duplication.. It should be named debugLogger.\nshow -> showBreakpoint,\nremove -> hideBreakpoint\nid -> testRunId. canHaveDebuggerBreakpoint. canSetDebuggerBreakpointBeforeCommand. Enumerate commands on which I could set breakpoint  . It better be put in section named Authentication and move HTTP Authentication to that section as well. We need a note that you can't switch role within role initializer. Give wiki links for mentioned auth types. It's worth mention that Role are like switching between real users. Thus, if you already used role in the particular test after switching from it and back to it all cookies that were set for this role in test previously will persist. E.g. you have role of user authenticated on Facebook. You switch to this role and perform authentication for Gmail. Then you switch to another role and back to facebook user role. Facebook user roll will be authenticated both on Facebook on Gmail. However, if other test will use this role it only will be authenticated on Faceebook. So, figuratively, branch of role state is created for each test run.. Yes, good catch. Yes. Indeed, it's a state of role which can be applied to test run.. Yes it can and will make code more compact, but it will ambiguous which code we expect will throw. It's a bad practice to put everything in the try/catch . It's not. How do you imagine that? One-line function that does exactly the same? And it's fine to modify test run phase outside of test run - it's a public property. Moreover, it's already done in fixture-hook-tracker.. How it can be used? Note that I don't want to introduce any ad-hoc solutions here and just use basic commands machinery.. I'd rather change the order. My intuition here is that people more likely will look up for forms authentication scenarios.. Same here. I don't like phrasing here, especially you will be authenticated to just one website. That's not true if role was initialized for more than one site.. The thing is that they are not stored in the role. More correct analogy will be that after switching to role once test run creates it's own branch of role state and use it further if it will be switched back and forth to this role.. Oh, I didn't mention an elephant in the room! Role ctor always accepts two argument, first being a login page URL.. We need a couple of words about how switching happens: if role is not initialized yet, you will be navigated from the current page to Role login page and role initialization steps will be performed, then page from which you were navigated will be reloaded with new credentials. If role is already initialized current page will be reloaded with role credentials.. That's weird. Can we join validation code and code that throws?. All it does is attaching protocol if it's not present, therefore name it ensureUrlProtocol. There is no such thing as FILE protocol. Just use schema in supported protocol enumeration:\nOnly relative URLs or absolute URLs with http://, https:// and file:// protocols are supported. \nWhat is protocol-relative URL though?. It should API error, not general error. And also that's fine to use runtime APIError in action validation if it happens only on server. We can avoid using test-run errors if error happens only on server and we don't need to serialize it back and forth. Actually, whole error reporting system became a bit messed up and requires simplification.. No need for multi line conditions. Just refactor it into variables with meaningful names. I can't see any tests for absolute file:// URLs. We need to test navigateTo action as well. @AndreyBelym Then it should be named resolvePageUrl or smthg like that. BTW, it shouldn't be placed in utils dir, since it's not about some generic URL, it's specific to URLs in API. inLogging - bad name. Who restores debug log here?. We have lodash find for this. It would be nice to show usage of that in assertions. Extending selectors maybe?. It shouldn't resolve to file protocol. If we are on HTTP or HTTPS page we should resolve relative to current URL.. Also I guess it will fix https://github.com/DevExpress/testcafe/issues/965. Worth adding a test. Also add it to closes directive. Please, don't.. Just use arrow function. Please, try to use consistent returns. Do if/else here. Please avoid this kind of nested multi line conditions. Just refactor them into variables with meaningful names.. Why you need to return anything? Just name it assertUrl and let it just throw in case of invalid URL. What about test for relative http url?. I'd rather move it out of actions sections, since it's not action like e.g. navigation. The footer of what?. no longer responds. ES6 method syntax -> ES6 class method syntax.TestCafe now reports errors that occur during browser provider initialization. I guess we need for screenshot with new buttons to be landed? Or it can be updated independently? . We need a screenshot and mention of current breakpoint shown in console. No need for reassign here. Role switch is not reentrant. It would be nice to avoid class-level variable here. Let use local var and just pass it togetSnapshotFromRole. Let's move it to dedicated sub section. I guess we can move it to utils and avoid declaring new function of each call. . But how we'll specify sourcemaps forsourceMapSupportthen?.startDockeralways returnstrue. What the purpose of this condition?. Quite odd general phrasing. It sound likeissues with source maps while debugging test filesis some kind of feature and to enable it you need to avoid specifyingprotocol.  .specifies the Node.js debugger wire protocol. Note that inspector protocol is supported in Node.js v6.3 (or v6.9 for Windows) or later. For early versions omit this property. In that case legacy debugger protocol will be used. Legacy protocol is well known for it's issues with source map support, therefore newer versions of Node.js are recommended.`\n\\cc @VasilyStrelyaev . isElementVisibilityRequired. In which case we need this error?. Nice catch. Formatting: add new line before else if. TestCafe provides a preconfigured Docker image with TestCafe \ud83d\ude15 . therefore you can avoid manual installation of browsers and the testing framework on the server. image from its repository -> image from repository. a stable version. You can map any host directory to any container directory. - colon here instead of period.. semicolon after the list item. semicolon. is run in  unprivileged mode - extra space between in and unprivileged. \"The\" article required.. Why we need this remark? I believe just \"Using TestCafe Docker Image\" list item will work pretty well.. You don't need manual sandboxing. ClientFunctions and their dependencies are automatically sandboxed.. If those method are used in ClientFunctions they are better be declared as ClientFunctions, otherwise code recompilation and sandboxing will happen on every use.. Combine with filter method. Move to src/utils. Rename to makeRegExp. arg -> filterArgs. Let's skip the second sentence entirely. . why rename?. Keep proxy. It has nothing to do with test API and shouldn't be in this directory. We need to highlight that attrValue is optional here.. It's not a hostname, it's host, since it's can contain port as well.. It's host. It's host. It's host not URL. In this context it's not task status, but browser job status. Browser job can be  done at this point, but whole task is still running. Therefore, maybe it makes sense to rename it to reportBrowserJobStatus throughout the codebase?. Here we report error for all browsers, however as far as I understand it makes sense to report errors only in this particular browser.. Taking in the account all the remarks above,  guess it's makes sense to move this functionality to the BrowserJob class. If we call it status then where should be a value for all phases of the browser job. E.g. running and pending are missing. However, if we'll rename it to \"browser job result\" these values will be legit.. Why not abort for consistency?. @RichiCoder1  Is there any problem with having ts as dependency? Unlike e.g. babel it has zero dependencies and package size is quite small. Moreover, if you already have ts installed package manager will more likely link already installed version.. Yeah, but we'll be open for such issues anyway, i.e. programmatical API that we use could change with a major version bump.. js\nreturn Math.max(detectedViewportWidth, DEFAULT_VIEWPORT_WIDTH);. Why it's named select-or-attribute? What it's even mean? Also, maybe it makes sense putting these in separate filters dir?. My bad, GH UI misleaded me. However, it's still makes sense to have a separate dir for filters.. First part of this RegExp will match anything that starts with //@flow, e.g. //@flowwhatever.. It should be r?\\n, since where can be Windows line endings. Why?. TypeScript. It would be nice to have a comment here about the reasons of this choice. . This should be referenced in \"Local Browsers\" section. Why I need to do that? Can we point to the CDP docs or smthg for those who don't familiar with protocol?. We have a special decoration styles for notes. For two separate examples we need two separate code blocks, otherwise it looks like I need to run both commands to make this functionality work.. enables \"headless mode\". I don't see \"chrome arguments\" in usage scheme. Where can I find the list of available device names?. \"enables touch support\". \"If the custom port is not specified, then TestCafe automatically assigns a free port.\". Can we have a table (like we use in other API descriptions) with property type and defaults values, instead of this notation?. Why int here? Can I specify -13371337\" as a port number?. This basically justifies my request: I have no idea what's it for.. It was a rhetoric question. Nope, first of all it's inconsistent: we use \"Number\" everywhere (there is no such thing as \"int\" in JS). Also, we usually specify valid range for port number. Imagine I never worked with TestCafe before and heard it supports TypeScript, where would I look for the documentation for that? Somewhere in the very end of the content table? Guys, it's **BASIC** stuff it should be my **FIRST** steps in learning TestCafe if I prefer to use TypeScript.. We need to rephrase all entries here. Why?. Error message name should be more specific and show that it's related to concurrency option.. Don't use \"magic\" strings. Create enum.. We have this check in CLI. Do not repeat yourself. Keep only this check here.. Create class or factory method for this object. It's purpose is absolutely unclear and we should isolate it's construction point.. I don't understand it. We will haveready()called fromDOMContentLoadedalready (which always triggered beforewindow.onload. I thought the algorithm will be:\n1. Wait forDOMContentLoaded2. Wait forwindow.loadorpageLoadTimeoutwhichever comes first.. I'd say it's a bug fix, not a feature.. MaybeInternal improvements` or smthg. . > 5 minutes to set up\n\nInstall TestCafe with one command and you\u2019re ready to test: npm install -g testcafe\n\nFolks, are you experiencing problems with Internet connection speed or something?. ```sh\n~/Work\n\u276f npm cache rm -force    \nnpm WARN using --force I sure hope you know what you are doing.\n~/Work\n\u276f time npm install -g testcafe\n/Users/inikulin/.nvm/versions/node/v8.1.2/bin/testcafe -> /Users/inikulin/.nvm/versions/node/v8.1.2/lib/node_modules/testcafe/bin/testcafe-with-v8-flag-filter.js\n\ntestcafe-browser-tools@1.2.4 postinstall /Users/inikulin/.nvm/versions/node/v8.1.2/lib/node_modules/testcafe/node_modules/testcafe-browser-tools\nnode ./bin/fix-permissions.js\n\nFile permissions fixed\n+ testcafe@0.17.0\nadded 248 packages in 15.055s\nnpm install -g testcafe  11.68s user 4.85s system 106% cpu 15.588 total\n``. I'd rather usein a few seconds. Minute is too much even if you open new shell and type command.. GH names should be links to user pages. Prefix them with@`.\n\n\u0426\u0435\u043b\u044c \"\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044e\" \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c, \u043d\u0430\u0437\u0432\u0430\u0432 \u0438\u0445 \u043f\u043e \u0438\u043c\u0435\u043d\u0438\n\nI bet abelym is not @AndreyBelym's name.. Ehmm, we can run out of storage quite quickly with this approach. It makes sense to use JSON5 rather than standard JSON: it has relatively relaxed grammar and allows code comments which can be quite handy sometimes. AFAIK many popular tools use it.\nAlso, there is a trend recently to use JS files that export configuration object instead of dealing with all the JSON-related shenanigans. Thus, you can have arbitrary configuration logic that depends on environment, for example. . ",
    "kirovboris": "Tests don't pass. Fix it.\n. LGTM\n. LGTM\n. Modules \"callsite\" and \"useragent\" were added, but they are nowhere used.\n. ok, LGTM\n. LGTM\n. lgtm\n. lgtm\n. I think it's definitely clearer and has more semantics.\n. lgtm\n. Base formatter provides capability format error message in base format use tags.\nLike: some code... -> <related-code>some code</related-code>\nPlain text formatter converts base format to plain text.\n``` javascript\nvar baseErrMsg = \"some message\" + baseFormatter.wrapLink(\"http://some_link\") + \"...\";\n//format \"some messagehttp://some-link\" to target format, \n//in this case to plain text\nvar formattedMsg = formatPlainText(baseErrMsg);\n...\n```\nWhat needs restructure? What a way to use expected?\n. Ok, I'll fix it. base.js is just base class, I thought we discussed the using the Decorator pattern for this functionality.\n. Ok\n. lgtm\n. FPR\n. squashed, FPR\n. FPR\n. FPR\n. \\cc @VasilyStrelyaev \nPlease check messages\n. FPR\n. FPR\n. FPR\n. FPR\n. ping @AlexanderMoskovkin \n. Thanks\n. FPR\n. FPR\n. FPR\n. FPR\n. FPR\n. FPR\n. FPR\n. FPR\nUsage: gulp report-design-viewer --reporter [reporter] --decorator [decorator]\nE.g. gulp report-design-viewer --reporter spec --decorator tty\n. ping @VasilyStrelyaev \n. FPR\n. I think we should do it. If assertion failed, the page has unexpected state and next actions don't make sense.\n. Anyway failed assertion is the same error like failed action. We can check the start of action, e.g. click the button, but only assertion can check - is it working or no. We should not separate fatal/non-fatal errors.\n. Why do we have to run \"lint\" before every running? It makes debug more difficult.\n. lgtm\n. FPR\nYes the output to MacOS TTY works as expected, I renamed the commit. \n. Okay, FPR\n. FPR\n. FPR\n. FPR\n. Ok, i'll fix it ASAP.\n. lgtm\n. I like it too\n. lgtm\n. I'm executing node bin/testcafe chrome,ie test.js, and getting \nERROR Cannot read property 'isTTY' of null\n. /r-\n. lgtm\n. lgtm\n. This error causes on client side, reporter mustn't receive html markup, we have to escape html in src/client/runner/api/assertions.js.\n. It works with the 15.1, because i had made the escaping all markdown messages on the server side. It was necessary for markdown module. There were some problems with rendering html.\n. FRP\n\n. FPR\n. I left the indentation logic in the templates, because dedent removes all leading spaces in the step source. \nThus we lose all indentation in the step source.\nE.g. string \njavascript\n<code data-type=\"step-source\">act.waitFor(function(cb) {\\n    cb();\\n}, 1000);</code>\nafter dedent is:\njavascript\n<code data-type=\"step-source\">act.waitFor(function(cb) {\ncb();\n}, 1000);</code>\nand after decorator:\njavascript\n   act.waitFor(function(cb) {\n   cb();\n   }, 1000);\n. FPR\n. FPR\n. FPR\n. Ok, I'll change on span tags.\n. FPR\n. # Conditional statements\nI suggest to use next syntax:\n``` javascript\n.if(() => isBtnVisible())\n    .click('#button')\n.if(() => isFormOpened('testForm'))\n    .click('#submit')\n.endif\n\n.elif(() => getCheckboxes().length === 1)\n    .click('input[type=\"checkbox\"]')\n.else\n    .click('#close-btn')\n.endif; \n```\nif(func), elif(func) parameter is function, which will used as condition of statement.\n. I like the first variant too, but i think 'hybrid function'  is still a complicated conception for novice. The term  'hybrid' doesn't associate with the call function on the client side.\n. I like this way. Also I think an alias should be the second argument, because it isn't always required.\n. E.g. if i want to prepare loaded site in a certain way - set start sizes or change css or someone else.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. I agree with Ivan. It doesn't look logically.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. The relatedSourceCode is always a string. We can't detect whether it's html or string with brackets on the templates side.\n. @inikulin, @AndreyBelym \nI agree. Let's implement html escaping in the templates.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. lgtm\n. FPR\n@VasilyStrelyaev check the strings, please\n. lgtm\n. lgtm\n. I think re-executing hybrid on new page can hide problems in a test, so i prefer the first way.\n. In this case user doen't understand at which moment the hybrid is executing. It's confusing me too. And what does mean result of hybrid on buffer-redirect page if we have calculated it? \n. Probably, we should throw the test error in this case. Isn't it?\n. I afraid of unpredictable result of hybrid. If buffer page loads significant time i will have different results on every test machine, in continuous integration etc.\n. I dislike the third option, because:\n1. It waits extended time if element doesn't exist on page.\n2. It's unclearly and can causes unstable tests.\nFirst and second options are ok for me, but Selector hybrid function looks redundant.\nThe main point - I want to have the full control on my test and avoid \"magical ways\", when i don't understand how it works. Also similar machineries can cause large-scale and inexplicable failure of tests if we changed anything in the waiting of element.\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm, but we need discuss the reason of this change.\n. /r-\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. Markdown is broken\nhttps://github.com/MargaritaLoseva/testcafe/blob/208f5075f15c61b73e91c6eb0a0056ca92255e02/README.md\n. lgtm\n. Selector.byText(regExpOrString, n = 0)\nSelector.nthOfType(selector, n = 0)\n. lgtm\n. Functional tests are failed with assertion error. Is it ok?\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. /r-\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. Why do we use querySelector for getting element by id in the examples? Why not document.getElementById?\nE.g. https://github.com/VasilyStrelyaev/testcafe/blob/815e785e7b0f680586ad961e189bd7e7d14097f3/docs/articles/documentation/test-api/actions/index.md#selecting-target-elements\n. > Looks awkward to you?\ndefinitely yes\n. We use Numeric and Number in different parts of documentation. We have to standardize it.\n. /r-\n. In according to mdn we should use Number\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n. Is it ok, that some examples doesn't contain fixture and page defenition? E.g.\nhttps://github.com/VasilyStrelyaev/testcafe/blob/dfea8e2364d913add9eaa1971d543480784000ea/docs/articles/documentation/test-api/actions/upload.md\nhttps://github.com/VasilyStrelyaev/testcafe/blob/dfea8e2364d913add9eaa1971d543480784000ea/docs/articles/documentation/test-api/handling-native-dialogs.md\n. /r-\n. We still don't have the fixture defenition in some examples. E.g. \nhttps://github.com/VasilyStrelyaev/testcafe/blob/c8805f0589292a96e4f69af6e374424b05dfca10/docs/articles/documentation/test-api/actions/navigate.md\nIt needed check all examples. In others lgtm.\n. https://github.com/VasilyStrelyaev/testcafe/blob/78329c0ee920258e008917966cab219ac2821490/docs/articles/documentation/test-api/selecting-page-elements/selectors.md#one-time-selection\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. /r-\n. Please check list of actual supported browsers\n/r-\n. lgtm\n. We decide to add find method for DOM Node snapshot. This method will be looking for DOM snapshot element on the page and after that looking for element inside of found DOM element. \nfind method should provide Selector functionality.\nE.g. \n``` javascript\nvar body = await Selector(() => document.body)();\nt.click(body.find('#element'));\n``\n. We need the name for extending snapshot method, e.g.extendSnapshot`\nI assume the following use:\n``` javascript\nvar extendedSnapshot = await Selector('div', {\n    extendSnapshot: (snapshot, node) => {\n        snapshot.customField = node.tagName + '.' + node.className;\n    return snapshot;\n}\n\n})();\n```\nAlso should we support function, Selector, ...  argument for find method? \nE.g. we can do:\n``` javascript\nvar body = await Selector(() => document.body)();\nvar button = body.find(cont => cont.firstElementChild);\n```\n/cc @inikulin @VasilyStrelyaev \n. In according to #798 we don't need the find method anymore.\n. lgtm\n. > What do you guys think?\n:+1:  I like it.\n. lgtm\n. lgtm\n. lgtm\n. > let's merge it after release, ok?\nOf course, I'll switch on the actual tasks now and will add an example later.\n. @inikulin @AlexanderMoskovkin \nIn according to the last API changes, i suggest the following usage of snapshot extensions:\n```javascript\nconst el1 = Selector('.my-class').extendSnapshot({\n    prop1: node => ...\n});\nexpect(await el1.prop1).eql(...); \nconst el2 = el1.extendSnapshot({\n    prop2: node => ...\n})\nexpect(await el2.prop1).eql(...); \nexpect(await el2.prop2).eql(...); \nI.e. we add.extendSnapshotmethod instead of .with({snapshotExtensions: {...} })and provide possibility its hierarchical using.\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. Yes, i agree, also `extend` is shorter for typing.. @testcafe-build-bot \\retest. FPR. FPR. FPR, we've discussed with @VasilyStrelyaev the name of method and decided to keep `.addCustomDOMProperties()`. So, we can extend a snapshot / `Selector` the following way:javascript\n//Add the new property 'contentEditable' to the Selector\nconst el = Selector('.my-el').addCustomDOMProperties({\n    contentEditable: node => node.contentEditable\n});\n//Now, we can use it as shorthand property \nawait t.expect(await el.contentEditable).eql(...);\n//Or as a snapshot's property\nconst snapshot = await el();\nawait t.expect(await snapshot.contentEditable).eql(...);\n//Also we can extend / override custom properties\nel = el.addCustomDOMProperties({\n    contentEditable: node => /some_new_logic/,\n    tabIndex: node => node.tabIndex\n});\n``. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. FPR. Looks good, but in my opiniondescendantandancestortoo long to type. \n. If we're discussing the selector extensions, not the snapshot extension, it looks useful.\nI mean this change can't replace the snapshot extending forreact-selectorsplugin.\n. The fourth option we can addt.skip` action.\n``` javascript\ntest('Some test', async t => {\n    t.skip(browserInfo => {...})\n// test code here\n\n});\n```\nI like the second option because it doesn't complicating the test reading.\n. /r-\n. lgtm\n. ``` javascript\nfixture('habr').page('habrahabr.ru');\ntest('test', async t => {\n    await t\n        .click('.tab.tab_menu')\n        .typeText('.global_search_form input', 'testcafe');\n});\n. I have several different sites in my test directory. For one of them i use `t.resizeWindow`, e.g. for checking adaptive content. After that i should restore window size for another sites. Let's say window size is `1920*1080`. After that i want to run test on the virtual machine with another screen resolution and now i should use the condition or something like that and it makes my test not flexible.\n. Yes, it sounds good.\n. lgtm\n. lgtm\n. I think the `speed` option for one action is almost useless, because it's hard to support and requires to much attention for separate actions. It's almost the same as random placed `t.wait` actions. In my opinion, the speed option is usefull, when i want to make slower test if it's requires more time between actions or to see what's going on at during test time.\n. The `teardown` handler will be run after a fixture or test passed/failed in all browsers, right?\n+1 in this case. In my opinion it's still not clear, that it will be run once, e.g. if I writetest.setupfirst time, i'll expect it will execute several times, because I'll met the famous term `setup` and will be think, that it's occur for every test run, in other words for each browser. If I met term e.g. `setupOnce` instead of `setup`, I'd would tried to know what does it do.. From these two options (`beforeAll/afterAll` and `setup/teardown`) I prefer the second one. We already have `beforeEach` _...test_, so `beforeAll` will be associated with tests for me as well, not browsers.. ping @churkin \n. I will close the pull request, because no activity has been encountered for a long time.. I like this features, but `gte` (greater or equal?) and `lte` abbreviations look a little bit strange in my opinion.\n. Are we calculatingSelectorautomatically in the following case?javascript\nconst firstElm     = Selector('div:first-child');\nconst getActiveElm = Selector('div.active');\nexpect(firstElm).eql(getActiveElm);\n```. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR\n/cc @AlexanderMoskovkin @churkin . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @churkin . @AlexanderMoskovkin, Can we merge this pr?. After discussion we decide to simplify layout testing the following way:\nWe look for an etalon automatically and user should just call t.checkLayout() method.\nt.checkLayout() is searching for a screenshot for test in according to index of using in the test code body, starting with 0.\njs\ntest('testName', async t => {\n    await t\n        .click('#el')\n        .checkLayout() //looking for .../<testName>/<workerName>/1.png        \n        .type('.inputClass', 'value')\n        .checkLayout() //looking for .../<testName>/<workerName>/2.png\n        ......\n        .click(...)\n        .checkLayout() //looking for .../<testName>/<workerName>/<N>.png\n});\nIf etalon isn't exists it should be created.\nFor test run, you can specify path to screenshots --screenshots and path to etalons --etalons\nPath to etalons can be relative or absolute.\nIn screenshot directory we generate file with meta infotamation about screenshot comparison.\nIf test fails, we output path to this file to the report.\nAfterward you can run testcafe etalon-manager <path-to-diff-file>. It will launch the application for management the screenshots and etalons and show differences in screenshots for failed tests.. @mdstaff, @ttiurani Thanks for the idea, we'll check this out.. rebase required. FPR. ping @inikulin . Hi @CrashyBang.\nWe are planning to support testing of electron applications soon, you can subscribe to notifications to be informed about our progress:\nhttps://github.com/DevExpress/testcafe/issues/224\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. It's still not fixed. I've tried to run test in testcafe@0.16.0-alpha1. Watch video\nhttps://www.screencast.com/t/GcOGmAGai\n. What's the difference between window.onerror and window.onunhandledrejection? Why can't we detect failed test?. Hi @Hotell,\nCould you please check your firewall settings? You can specify custom ports\nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--ports-port1port2\nAlso if you use proxy server to access the Internet, please specify your proxy settings\nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--proxy-host\n. Please try to specify localhost or 127.0.0.1 as hostname.\nbatch\ntestcafe chrome test.js --hostname 127.0.0.1. It is a known issue, we plan to improve the hostname detection https://github.com/DevExpress/testcafe/issues/986. Thank you for the idea, @Hotell. We're going to create a new section on our site that will describe known issues.. I'm working on it.. I'm working on this.. I'm working on this.. @testcafe-build-bot \\retest\n. It's OK now. I suggested to add a separate section about the waiting ClientFunction and snapshot properties in the smart assertion topic, or highlight it somehow.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. ping @helen-dikareva . I'm working on this.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. ping @helen-dikareva . Hi @sijosyn, we plan to implement this feature in next sprint (0.21.0 version). We'll let you know when the dev build will become available.. Yep, but we've already made it with .addCustomMethods. What's the difference?. I believe key and cert are path to files, why should it be <Buffer>? It works this way in nodejs, but it's not quite usable. Why should we choose this approach?. I believe key and cert are path to files, why should it be <Buffer>? It works this way in nodejs, but it's not quite usable. Why should we choose this approach?. ping @AndreyBelym. ping @AndreyBelym. Hi @bdwain, \nIn your example, simple parsing of the main test file won't find the fixture as well. \nBesides, it'll be much slower than regexp. If we start parsing all dependencies, it can require much time, because it should also parse all your modules/libraries/node_modules... which were imported in the test file.\nWe can't get fixture/test names during script execution, because it can cause side effects. E.g. you have a .js file to setup test database script in a directory with tests. We can't execute it to check if it's a fixture file. So we need static file analysis anyway.. >It seems like it\u2019s only used to filter out source files that have no tests and fixtures. \nYes, it's correct.\n\nBut you could just assume there are tests in each file and error if there are not.\n\nAs I said before, we can't run every file by glob patterns like test/**/*.js because of side effects in non test files.\nFor now, we suppose a user doesn't have to concern whether the passed files have code with side effects or not, e.g. you can just run \nsh\ntestcafe chrome tests/**/*.js\ninstead of \nsh\ntestcafe chrome tests/e2e/fixtures/**/*.js\nIt can matter if you're going to add testcafe tests to an existing project with a complex directory structure.\nIf you need a single entry point for tests in your libraries, you can implement a nodejs runner using TestCafe programming API and get rid of export statements in your fixtures.\n. Hi @bdwain @bxt,\nI agree that the current implementation can cause problems with test generators. \nWe decided to add an option that enables the behavior you described in the upcoming releases. \nLater, when we release a major update, we will enable this behavior by default.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @helen-dikareva @AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @AndreyBelym. FPR. Hi @dv297,\nThanks for you proposal, it sounds reasonable.\nWe need to know what will be returned by Selector methods (a DOM node or something else). Obviously, we can't determine it in case of the map function. \nTo implement these methods, we would have to rethink the internal Selector methods mechanism.\nWe'll discuss the possibility to do this in the future.\nAs a workaround, you can create a ClientFunction, e.g.:\n```js\nconst getInnerTextArr = ClientFunciton((selector) => {\n    return document.querySelectorAll(selector).map(el => el.innerText);\n});\ntest('Test', async t => {\n    await t.expect(getInnerTextArr('li')).eql(...);\n});\n```\n/cc @AlexanderMoskovkin . Hi @tomasbeloch,\nThanks for you proposal.\nCould you please provide an example of assumed ./test/test-case-1 file?\nFor now this functionality requires significant changes under the hood, so could you describe your test case? Probably you could refactor the test structure the other way.\nE.g. test cases can import dependent variables:\n```js\nimport getTestParams from './test-params';\nconst params = await getTestParams();\ntest(Test case - ${params.environmentName}, async t => {\n    await t.click(params.value);\n});\n```. @tomasbeloch, Thank you for clarification!\nCurrently, I see two possible workarounds:\n\nGetting input data in test code. For this purpose, you need to create a helper function that sends a request to REST API. It's the best way in my opinion.\n\n```js\n//helpers.js\nconst request = require('request-promise');\nfunction parseRequest(response) {\n    //getting value from response\n}\nexport function getInput(opts) {\n    return request('http://www.google.com', someOpts).then(parseResult);\n}\n//test-file.js\nimport { Selector } from 'testcafe';\nimport { getInput } from './helpers';\nfixture Google Search\n    .page http://www.google.com/ncr;\ntest('Test', async t => {\n    const el = Selector(() => document.getElementsByName('q'));\n    const input = await getInput(someOpts);\nawait t\n    .typeText(el, input.search)\n    .takeScreenshot('screenshot.png');\n\n});\n```\n\nPutting input data in a separate data store. In this case, we initialize the required data in test runner code making it available from all tests.\n\n```js\n//input-store.js\nmodule.exports = {\n    _value: null,\nset value (newValue) {\n    if (!this._value)\n        this._value = newValue;\n    else\n        throw new Error('Test parameters are already set!');\n},\n\nget value () {\n    return this._value;\n}\n\n};\n//test-runner.js\nexports.Testcafe = async function (input, output, session) {\n    const createTestCafe = require('testcafe');\n    const inputStore     = require('./input-store');\nlet testcafe = null;\n\ncreateTestCafe('localhost', 1337, 1338)\n    .then(tc => {\n        testcafe     = tc;\n        const runner = testcafe.createRunner();\n\n        inputStore.value = 'test';\n\n        return runner\n            .src('test-file.js')\n            .browsers(['chrome', 'safari'])\n            .run();\n    })\n    .then(failedCount => {\n        console.log('Tests failed: ' + failedCount);\n        testcafe.close();\n    });\n\n};\n//test-file.js\nimport { Selector } from 'testcafe';\nimport inputStore from './input-store';\nfixture Google Search\n    .pagehttp://www.google.com/ncr;\ntest('Test', async t => {\n    const el = Selector(() => document.getElementsByName('q'));\nawait t\n    .typeText(el, inputStore.value)\n    .takeScreenshot('screenshot.png');\n\n}); \n```. Hi @andrewbranch,\nYes, this behavior can cause a false positive result.\nI like the first approach. I think we could throw a warning for Promise inside of .expect() and ignore it with an assertion option like \njs\nawait t\n    .expect(getResult())\n    .ok({ allowUnawaitedPromises: true //false by default })\n@AndreyBelym @AlexanderMoskovkin  what do you think?. @adrianaisemberg \nYes, I think an error would be a better choice.\nAlso I don't see any cases we need the global flag. Using a regular Promise in t.expect is a bad practice and a very rare case when you actually want to check\njs\nt.expect(callAsyncFn()).eql(smth);\ni.e. compare Promise === smth. Hi @smockle, \nThank you for your contribution! I'll take care of tests.. @testcafe-build-bot \\retest. ping @AlexKamaev. Hi @GregoryCBT,\nCould you please check if the tested page loads without testcafe? Also are there any js errors in the developer tools console during tests?. We have problems with import statement because of babel-plugin-add-module-exports, i.e. you can't use import for the importing dependancies of ClientFunction, only via require, it's not obvious at all.. ping @DevExpress/testcafe-docs. Hi @Kavignon,\nCould you please provide the test code? TestCafe looks for a fixture definition in files passed to the test runner. Otherwise, the fixture is not defined. To create a sequence of actions, you can use testController .. Hi @gsachdev,\nWe plan to implement this feature in the next version. We will be able to create a dev release with this changes once we merged it.. This functionality is released in testcafe@0.22.0. Now fixture and test descriptors have meta field:\n```js\n{\n    name: 'Fixture',\n    loc : ;\n    start: 0;\n    end: 1;\nmeta: {\n    field1: 'value1',\n    field2: 'value2'\n};\n\ntests: [];\n\n}\n```. Hi @hdorgeval, \nThank you for reporting it. We'll fix it ASAP, this fix will be included in testcafe@0.20.0. If it's necessary we can provide the dev version as well.. It'll take some time, because, obviously, we have different lists of excluded items for other modules. Besides, you can do it yourself.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. ping @VasilyStrelyaev, check the strings please. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @arubtsov Please, take a look. @testcafe-build-bot \\retest. So, do we have enough statistics to start fixing unstable tests?. ping @churkin @AndreyBelym @VasilyStrelyaev . Hi @GeoffreyBooth, \nWe decided to include the CoffeeScript support to testcafe. Thank you for this great pr! \n@AndreyBelym will review your changes soon and assist with it.. ping @churkin . ping @churkin. @testcafe-build-bot /retest. FPR. @testcafe-build-bot /retest. ping @AndreyBelym @helen-dikareva . @testcafe-build-bot retest. Should we describe in the docs the unstableNetworkMode as well?. @testcafe-build-bot retest. The following code takes about 1.5s on my machine\njs\nconsole.time('import');\nrequire('testcafe').embeddingUtils;\nconsole.timeEnd('import');\nImport of './api/exportable-lib' takes the most part of  time, because we initialize it implicitly here - https://github.com/DevExpress/testcafe/pull/2984/files#diff-1fdf421c05c1140f6d71444ea2b27638R64.\nIt should be patched as well.. ping @miherlosev . ping @VasilyStrelyaev @MargaritaLoseva . ping @VasilyStrelyaev @MargaritaLoseva . rebase required. @VasilyStrelyaev Let's not to mix pull requests, because  regrouping other recipes is out-of-scope for this pr. This pr is called \"Refactor CI topics\" by the way.. rebase required. @testcafe-build-bot /retest. AFAIK it's all about async.. @testcafe-build-bot /retest. @testcafe-build-bot /retest. It doesn't look right (image wasn't loaded), is it ok?\nhttps://github.com/DevExpress/testcafe/blob/4ca3cce9d982d28e47a7561c01962882f3fc79e6/README.md\nOk, apparently it looks it'll appear after the merge.. I suggest to add \"Automatic selector generation\" as a studio feature.. Also we should structurize the roadmap.. Is it like:\njavascript\nconst OVERFLOW_TYPES = {\n   noOverflow:         'NO_OVERFLOW'\n}\nor like: \njavascript\nconst OVERFLOW_TYPES = {\n   noOverflow:         'noOverflow'\n}\n?\n. Js code is just highlighted code. Related code uses in UI for the transition to the failed step and has other look.\n. (resolve) -> resolve ?\n. Why are we making empty line here?\n. Indentation is broken\n. Indentation is broken\n. There's not import expect function in this example.\nAlso we have to import Hybrid.\n. We write \"clicks element\", \"double clicks\" etc, but we just simulate this actions. I know we have note in the end of the action description, but perhaps it would be better honestly write \"simulates element click\"?\n. This definition is more accurate in my opinion.\n. This note relates to dragToElement as well.\n. Can we format the elements of this list? It's hard to read this enumeration.\n. Missed space after endPos.\n. Missed fs import in this example\n. I think we can get rid of native dialogs handling in this example to simplify it. What do you think?\n. Array of Strings ?\n. We use function instead of func on the other pages. \nE.g. \nhttps://github.com/VasilyStrelyaev/testcafe/blob/13db3aa493012ee5a484fdf9eff54388039dfd1e/docs/articles/documentation/test-api/handling-native-dialogs.md\n. Indentation is broken.\n. I'm not sure this extra line is increasing readability.\n. Why not:\njavascript\nif (this.currentJob)\n    this.currentJob.warningLog.addWarning(...args);\n?\n. javascript\nif (initScriptPromise)\n    initScriptPromise.resolve(JSON.parse(data));\n. ``` javascript\nvar openParameters = await browserNatives.getBrowserInfo(alias) || this._handleJSON(alias);\nif (!openParameters)\n    throw new Error('The specified browser name is not valid!');\n```\n. Need an empty line before this comment.\n. It's not a big problem, but you use such style in other files\n``` javascript\nvar browserNames = await this.listAvailableOptionalBrowserNames();\nreturn browserNames.indexOf(browserName) > -1;\n. It looks like \"callback hell\". Let's refactor this.\n. Extra line.\n. javascript\nvar provider = this._getProviderFromCache(providerName) ||\n               this._getProviderModule(providerName) ||\n               this._getBuiltinProvider(providerName);\n``\n. Do we check extra conditions every time?if/else if,if/returnetc.\n. We don't useswitchstatements because of eslint rules?\n. Is it only for the current example? If i have 2 browsers i can't keep their active simultaneously.\n. Got it, all is ok.\n.t.resizeWindow( width, height ).t.resizeWindowToFitDevice( deviceName [, options] ). Slashes aren't needed here.\n.t.setNativeDialogHandler( fn(type, text), options ). It has good readability now, but look pretty strange. Maybe we should refactor it somehow?\n. Tag is not highlighted. It should be`\n. It's not true. If i need create browser provider i will do the following steps:\n- Generating Browser Provider Project\n- Implementing the Browser Provider\n- Building the Provider\nAnd i won't publish in npm my provider if it uses ssh keys, passwords etc.\n. In other documentation articles the next style is used (with gaps):\nasync openBrowser( id, pageUrl, browserName )\n. Why not? Of course you can, but we are coercing to make extra actions just for the connection remote browsers, when we describe these steps.\n. Browser provider plugin is just a way to open/close/resize etc browser which we can't  access from box. If i have custom connection logic for my browser, should i publish npm module? Why?\n. Do you mean #207? In according with this topic we have to have package.json with id for plugin, not published npm plugin. Besides, DevExpress/testcafe-docs have not been invited to this discussion.\n. This pull request about documentation, not plugin system and in current plugin system we have not to publish npm module as far as I understand.\n. Anyway it just my opinion, i don't claim we have to change the current plugin system.\n. Link markup is broken. Tag is closed in ...provider-plugin\"/>\n. Is it ok \"Custom Reporter Plugin\" link returns 404?\n. Please, fix indentation here.\n. <p> tag is not closed\n. '.content' -> .content. We should specify the default timeout in this topic.. state of page elements?. Let's use let and const in examples.. In other topics we use the style await t.expect( actual ).eql( expected, message, options ); E.g. https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/test-api/actions/drag-element.md. I'm still not sure about the phrase will be determined as a constructor's name. Can i use number, Number, NUMBER? I can't understand it from docs.. typo. return isNumber(value) && value >= 0; ?. Why don't we use lodash.isNumber() function?. I don't know details of implementation, but it looks like you can subtract the number of localBrowserPromises from number of connections. Or even \njavascript\nvar isRemoteBrowsersExists = this.connections.map(connection => !connection.provider.plugin.isLocalBrowser());\nOtherwise, variable name is confusing me.. ```javascript\nfor (var i = 0; i < this.connections.length; i++) {\n    var isLocalBrowser = await this.connections[i].provider.plugin.isLocalBrowser();\nif (!isLocalBrowser) \n    return REMOTE_BROWSERS_READY_TIMEOUT;\n\n}\nreturn LOCAL_BROWSERS_READY_TIMEOUT;\n. Is project on github a mandatory condition? Why?. It looks strange. In general you build before tests. Probably, did you mean publish task or something else?. Extra comma. Should we write something like \"... custom Selector property &lt;prop&gt;\"?\n@inikulin . I'm not sure I understood your comment. If I add `ClientFunctionTransform` in constructor of the base class `ClientFunctionExecutor`, I can't add `SelectorTransform` in `SelectorExecutor` constructor, because we can't add two transforms with the same type `Node` to the replicator.. It should be javascript, not text.. missed `;`. missed `;`. missed `;`. In these cases we write a formal description, so it should be something like:\n`Selector().addCustomDOMProperties( { [...propertyHandlers] } );` or\n`Selector().addCustomDOMProperties( { property1 => fn1, ... propertyN => fnN } );`\nBesides, several strings of code without highlighting look awful in my opinion.. Incorrect indentation, should bejavascript\ndomain:      'CORP-DOMAIN',\nworkstation: 'machine-win10'\n. Incorrect indentation, should bejavascript\ndomain:      'CORP-DOMAIN',\nworkstation: 'machine-win10'\n. Please add `.catch(error => { /* ... */ })` in examples where you use `run(...).then(failedCount => ...)`. Yep, i'll add it.. I think it would be better to highlight: `1` to `0.01`. Why is it `Basic Options`? It work only for several actions (`t.selectText`, `t.pressKey`, `t.selectTextAreaContent`, `t.selectEditableContent`). It's Execution Action Options or Speed Action Options, in my opinion.. Will be the test speed and action speed multiplied by test speed? We should write about it.. I mean test run speed, which we define in CLI and `.run()`. Action speed overrides test speed, but multiply by test run speed. Why?. It's correct for internal code structure, but as an user i think basic options, it are options, which work for all actions.. What is about https://github.com/DevExpress/testcafe/pull/1224/files#diff-8e662184507eb3363796c47b173723e2R74\n`the action speed is multiplied by test speed` ?. Ok, it seems the current structure of documentation is according to this description.. You should import `Selector`. This example won't work.. It is a good question, @DevExpress/testcafe-docs @miherlosev What do you think?. I think we should add custom methods to snapshot, at least for consistency. Besides, are there any performance problems with it?. I don't get it, what's the difference between `snapshot.hasClass()` and `snapshot.hasMyCustomProperty()`?. We use this approach everywhere, e.g. https://github.com/DevExpress/testcafe/blob/master/test/functional/fixtures/api/es-next/client-function/testcafe-fixtures/client-fn-test.js#L32. AFAIK, we can use relative path as well.js\n    fixture MyFixture\n        .page ../my-website/index.html;\n. It should be relative to current test file, e.g. if i have `.html` pages for every test and i store them in repository.. It seems this regex too weak for function name, e.g. you can use `_` or numbers.. Should be:js\nreturn runner.run({\n    skipJsErrors:     true,\n    quarantineMode:   true,\n    selectorTimeout:  50000,\n    assertionTimeout: 7000,\n    speed:            0.1\n});\nWrong indentation and semicolon is missed.. Perhaps `tests/*.js` ? `.test.js` is extension for old API files.. Or even `tests/**/*.js`. Will it work for `beforeEach` actions?. In this case we should describe it in docs.. extra space before the last bracket. Please highlight `mouseenter`, `mouseleave` and all others API calls below.. `window.history.replaceState`. `EventSource `. `window.Promise.reject`. `querySelector`. `fetch`. `meta[rel=\"import\"]`. 'innerHTML' -> `innerHTML`. `MutaionObserver`. Please highlight `HTMLInputElement`, `HTMLTextAreaElement`,  `HTMLCollection`, because they are the objects of DOM API. Never mind, i'll refactor it.\n. Specify appropriate names for fixture and test, and it's not a 'Test Speed' test, it's 'Page Load Timeout'.. I agree with @AlexanderMoskovkin, it doesn't have any worth for users.. `JSON.stringify` and `Object.keys`. `MessageEvent`. It's html, not text.\n. It needs to specify the required node js version.. Wrong indentation. Lack of formatting here, I suppose it needs some padding between gif and this text or we can highlight this sentence somehow. See\nhttps://github.com/VasilyStrelyaev/testcafe/blob/1c522c487fcd7b5a28ba33415ac1cf0a0e1fbae1/README.md#viewing-the-results\nIt doesn't look neatly.\n. Probably this link should be - https://github.com/DevExpress/testcafe/issues/new. Did you check this [util](https://github.com/MicrosoftEdge/edge-launcher) out?. Ok. It would be better to configure `npm run flow` than write `./node_modules/.bin/flow` every time.. Does the order of reporters matter? Can i use `xunit:report.xml,spec,nunit:report-nunit.xml` ?. Yes, I mean we should add this info.. Ok, then.. Missed semicolon. Missed comma before \"so that you...\". remove list's header?. Look likejs\nprocessList.splice(1, processList.length - 2) \nor\nprocessList = processList.slice(1,-1);\n. Please add an empty line before `return`. Please add a space before 'Settings ->'. I think we shouldn't mention SauceLabs here, also `the latest available on SauceLabs` means nothing without the link to supported platforms,. It should bejs\nawait t\n    .typeText(AureliaSelector.byValueBind('newTodoTitle'), 'new item')\n    .pressKey('enter')\n    .expect(AureliaSelector.byShowBind('items.length').exists).ok();\n. Do we have any warning messages about that peculiarity during test run?. Why? We need only coordinates. It's not difficult at all.js\nconst height = ...;\nconst width = ...;\nbottom = top + height;\nright = left + width;\nAt my opinion this option set looks confusing.. Please explain the term `visible` here. At first sight I'd think it `visibility:visible` and `visibility:hidden` correspondingly.. So let's just keep `{ left, top, bottom, right }` in options. I mean we don't need width and height.. As I said before it's pretty simple to calculate correct coordinates, but\nThis is how the crop rectangle position and dimensions are determined.\nIf the left, right, bottom and top fields are specified, the width and height fields are ignored.\nIf only right and bottom are specified, left and top are calculated using width and height.\nIf only left and top are specified, right and bottom are calculated using width and height.\nIf neither left and top nor right and bottom are specified, left and top are assumed (0, 0) and right and bottom are calculated using width and height.\nlooks confusing. At least I should read all this rules before I can start using this action. I'd like to say it doesn't simplify of usage the `taskElementScreenshot` it significant complicates the understanding of documentation.. `rCheckBoxes ` is a bad name for variable, What does `r` mean?. Let's choose a clear name.. Add import statement for `RequestHook`.. `export default` is an extra noise for this example, just `class RequestHook...` Also you forgot to close `}`. it should close `}`. We need to describe class interface before detail explanation.js\nclass RequestHook {\n    constructor (requestFilterRules, responseEventConfigureOpts) {\n        ...\n    }\nonRequest (event) {\n    ...\n}\n\nonResponse (event) {\n    ...\n}\n\n}\n. These option tables contain a lot of stuff, let's add new item to the table of contents. It should be done for other huge option tables as well.. It would be great to describe `credentials` option in detail or to add a link if it's possible.. You can use all power of es6 and writejs\nconst { request } = logger.requests[0];\n`logRecord` is ok for me too.. AFAIK, It should throws a warning/error as well. /cc @AndreyBelym  . I'd describe shortly what these examples mean. . Same here.js\nthis.currentFixtureName = name;\nthis.currentFixtureMeta = meta;\nthis.write(Starting fixture: ${name} ${meta.fixtureID})\n    .newline();\nBut in my opinion it'd better to format in the following way (everywhere in docs):js\nthis.currentFixtureName = name;\nthis.currentFixtureMeta = meta;\nthis\n    .write(Starting fixture: ${name} ${meta.fixtureID})\n    .newline();\nE.g.js\nreportTaskDone (endTime, passed) {\n    const time        = this.moment(endTime).format('M/D/YYYY h:mm:ss a');\n    const durationMs  = endTime - this.startTime;\n    const durationStr = this.moment.duration(durationMs).format('h[h] mm[m] ss[s]');\nconst result = passed === this.testCount ?\n            `${this.testCount} passed` :\n            `${this.testCount - passed}/${this.testCount} failed`;\n\nthis\n    .write(`Testing finished: ${time}`)\n    .newline()\n\n    .write(`Duration: ${durationStr}`)\n    .newline()\n\n    .write(result)\n    .newline();\n\n}\n. Probably http://www.chaijs.com/api/bdd/#method_members will be more suitable?. We need to discuss in private the report format, I'm not sure about the current format for now.. I agree we need extract this code to a separate file, but I am against to refactor `Gulpfile.js` on dozens of small files now. .js\nconst scriptSrc = fs.readFileSync(script.src).toString();\nconst filename  = path.basename(script.src);\n...\netc.. It looks terrible, can we refactor this \"callback hell\" somehow?. We discussed it in private and we should do some checks with real existing tests, because  we need to be sure the throwing unhandledRejaction will works in all base scenarios and won't create a breaking change. If we have any  troubles, of cource we should keep it behind some `debug` option.. I'd refactor it the following way:js\nsuper(obj, testRun, TYPE.click, /validateProperties/)\n. Why did we remove the class members initializing in constructor? The dynamic defining of class members works slower, because of the v8 hidden classes implementation. I believe it's a good practice to define class members with default values in constructor body always.. It returns `null` as a value, but I missed that a value of meta field can be only a string, so I need to add corresponding fixes in this pr.. It should be `testcafe-chrome-profile` to avoid the name conflicts.. `testcafe-firefox-profile` . Solved in favor of top-level `testcafe-tmp`.. Solved in favor of top-level `testcafe-tmp`.. Incorrect indentation. Do we really need so many empty string between constants. I wouldn't say it improve the readability..js\nawait cleanupProcess.init();\nawait cleanupProcess.addDirectory(this.path);\n. It's not a public method.. Why notjs\nexports.TEMP_DIRECTORIES_ROOT = TEMP_DIRECTORIES_ROOT = ;\n?\nOtherwise a static variable should be initialized in the class.. Incorrect indentation.. The stack printing could be useful as well.. Can we use smth like `promisify` for such cases?. How does it work? Is it the workaround for the concurrent `init`?. Why does this function needed, if we already execute it in module context?. I prefer `noop`, because our auto-complete settings unfolds `() => {}` injs\n() => {\n}\n. Why do we use `default` here, is it for the eslint purposes?. We can add flag in `writeFileSync` as well.. IMO, smth like \"until it fails or passes three times\" looks simpler.. We definitely should leave the mention about the number of runs.. Please make a meaningful error message.. I think `timeLimit` is not exactly what this function does. It's smth like `getTimeLimitedPromise`.. Why we don't mention the `unstableNetworkMode` option?. Also can we define this option w/ CLI?.js\n}, {\n    preserveUrl: true\n});\n.js\ntest('My test', async t => {\n    await t\n        .navigateTo('http://example.com/')\n    // Does not return to http://example.com/ but\n    // stays at http://example.com?sessionId=abcdef instead\n    // because options.preserveUrl is enabled.\n    .useRole(role);\n\n});\n. In fact, we get the first ul and its first parent. Although we use \"all parents\" in the description of method, here we describe the specific element selector. I think for others examples it should be clarified as well.. IMO, `or the 'foobar' value.` looks weird in this sentence. \nI'd rephrase it like \"Does not match the 'attrName1' attribute or the `attrName` attribute with the 'foobar' value.\". But for `ClientFunction` it always doesn't work. I mean you can't use a function imported with `import` statement in a `ClientFunction` at all. So I suggest to rephrase \"not always work\" to smth more meaningful.. So, we decided to leave it as is.. Probably it'd be better smth like:\nPlease notice, TestCafe internally processes test files with Babel, so you should use a require statement instead of import to avoid issues caused by code transpiling.\n``. Please add an empty line here.. Probably you want to say TestCafe no longer throws errors in the following cases:...? \nOrFixed mechanism of filtration the internal attributes/Fixed testcafe-hammerhead/testcafe proxy errors?\nI mean, if i were a customer I'd take this message literally,TestCafe no longer throws errors in the console` - What does it mean, does TestCafe never throws an error in console?\n/cc @miherlosev . We should keep the regular require for TestRun. \nIf I understand correctly, we have an issue with import-lazy here. \nWhen it calls Reflect.construct it requires the real TestRun constructor, so the real require work occurs during calling the constructor of base class and we don't have a place where we can expand the prototype. \nSo we miss TestRun.prototype which changes for the RecordRun inheritor.. Why did you get rid of .once?. Just curious, what is the problem with synchronous EventEmitter, we have some specific case or it's just an optimisation?. Please add an empty line before. > you may need to add 'await t' before each of them.\nIt doesn't seem like the good idea.. It looks like it doesn't work in the following case:\nbash\nnode C:\\...\\node_modules\\testcafe\\lib\\cli\\index.js chrome D:\\...\\test.js\nWe will try to run C:\\...\\test.js instead. But I agree the current implementation doesn't look very readable.. ```js\nif (typeof outStream !== 'string') \n    return outStream;\nconst fullReporterOutputPath = resolvePathRelativelyCwd(outStream);\nawait makeDir(path.dirname(fullReporterOutputPath));\nreturn  fs.createWriteStream(fullReporterOutputPath);\n. We use the following notationjs\nconst DEFAULT_TIMEOUT = {\n    selector:  10000,\n    assertion: 3000,\n    pageLoad: 3000\n};\n. Let's refactor it:js\nconst  = ...\nif()\n    throw new GeneralError(...);\n. Perhaps we could refactor `FlagList` to throw an exception in a field setter?  Thus we won't need all the `if(this.apiMethodWasCalled)` conditions.. It had better use pure functions everywhere it's possible.js\nexport async function ensureOptionValue (optionName, optionValue) {\n    const convertedValue = convertToBestFitType(optionValue);\nreturn ensureFileOptionValue(optionName, convertedValue);\n\n}\n. Also use this pattern here - https://github.com/DevExpress/testcafe/pull/3147/files#diff-4a70fd82331cb2921ccb359a82ce00f1R51. I think this message doesn't reflect that json is can't be parsed. Probably it suppose `well-formed`, but anyway it should describe expected format (json is not well-formed).. It's a `GeneralError`, isn't it?. We should keep all strings in constants.. Is it ok, that eslint doens't throw error here?js\nhostname: this.getOption('hostname'),\nport1:    this.getOption('port1'),\nport2:    this.getOption('port2'),\noptions: {\n     ssl:             this.getOption('ssl'),\n     developmentMode: this.getOption('developmentMode'),\n     retryTestPages:  !!this.getOption('retryTestPages')\n}. Sure, it makes sense, just the error with a disk letter is more common.. Ok, but anyway it should be checked by tech writers.. I like this idea and I have nothing to add to the mentioned pros. \n@inikulin, I glad to see you too :smile:.. @AndreyBelym, I don't think the outputting this message as a warning is a good idea. It's just a log message.. item -> ([key, value])\nHere and in the other usages of Object.entries. It's should be just a method of Configuration class\n```js\nconst configuration = new Configuration(...);\nawait configuration.init(...);\n. Why does this constant is a class field, AFAICU we never change it.. A function name must start with a verb. `setNothingToStopStatus` or smth like that.. Please, add an empty line here.. Please keep strings in constants..js\n...\ntoggleWatching: () => {},\nexit:           () => {},\nerr: err => {\n    errors.push(err);\n}\n. You can use [lodash.noop](https://lodash.com/docs/4.17.11#noop) instead of `() => {}`. I think `100` is too long timeout for server tests.. I wouldn't kept the same strings outside of constants, even in tests.. `parentLog` -> `globalLog`. Why not just?js\nthis.lockFiles[file] = setTimeout(() => {\n    this._onChanged(file);\n    delete this.lockFiles[file];\n}, EVENT_AGGREGATION_TIMEOUT);\n. Also I suggest to increase timeout up to `500`-`700`ms..js\nreturn fileListPromise\n    .then(files => this.controller.init(files))\n    .then(() => this._createRunnableConfiguration())\n    .then(() => this.runTests(true))\n    .then(() => this._waitInfinite())\n    .then(() => {\n         this.preventRunCall = false;\n    });\nor probably justjs\nreturn new Promise(async resolve => {\n    const files = await fileListPromise();\nawait this.controller.init(files);\nawait this._createRunnableConfiguration();\nawait this.runTests(true);\nawait this._waitInfinite();\n\nthis.preventRunCall = false;\n\n});\n. Probably it'd better call it `LiveModeController`?. `restart`, `stop`, `toggleWatching`, `exit` are not public methods.. Why do we need `Promise.resolve`, we don't wait for exit promise anywhere? Is it for `eslint` purposes? Besides, why we even return smth in this method? The only `exit` call occurs in the event handler.. The same for others methods..js\nif(!children) return;\nchildren\n    .filter(...)\n    .forEach(...)\n. I'd preferjs\nparentEdges\n    .map(edge => edge.v)\n    .forEach(parent => this.clearParentsCache(cache, parent));\nit's not obligatory, though.. I think it's a good practice to add empty string around multiline statements..js\nconst statusMessage = sourcesChanged ? this.MESSAGES.sourceChanged : this.MESSAGES.testRunStarting;\nthis._status(statusMessage);\n. We can refactor the similar logic in all methods consistently..js\nconst varName = this.testWrappers.filter(w => w.state !== TEST_STATE.created);\nif(!varName.length) ...\n.js\nasync _createRunnableConfiguration () {\n    if (this.liveConfigurationCache)\n     return this.liveConfigurationCache;\nconst configuration  = await super._createRunnableConfiguration();\n\nthis.liveConfigurationCache = configuration;\n\nreturn configuration;\n\n}\n. It looks likejs\nasync _finishPreviousTestRuns () {\n    if (!this.liveConfigurationCache.tests) return;\nthis.testRunController.run(this.liveConfigurationCache.tests.filter(t => !t.skip).length);\n\n}\n. It'd better to create meanful names for this files, add more semantic, because obviously they describe the different test cases.. Ok. Should we write \"You cannot call\" for each method? I think it's enough to add this info in the migration guide.. `TestCafe prints a message in the console when this happens.` I think it could be rephrased, we need say we print the information about the overridden properties.. Lets add a couple words about `json5` usage.. I think we need an example file with all defined options or smth like that. . Ok then, but we usually try to avoid the adding of production code for testing purposes.. `const frameData = ...` ?. Why not justjs\nreturn await requireFFMPEGModuleFromCwd() || \n    requireFFMPEGModule() || \n    findFFMPEGinPath()  || \n    process.env.FFMPEG_PATH;\n. Probably we can replace it by some npm module? Besides it can be simplify:js\nfunction parseOptionsString (optionsStr, optionsSeparator, keyValueSeparator) {\n    const splittedOptions = optionsStr.split(optionsSeparator);\n if (!splittedOptions.length)\n    return null;\n\n return splittedOptions.reduce((prev, item) => {\n    const [key, value] = item.split(keyValueSeparator);\n\nprev[key] = key && !value ? true : value;\n\n    return prev;  \n}, {});\n\n}\nor smth like that.. Do you handle reading errors somewhere?. Strings like that should always be in constants.. It'd be great to add a comment about chosen options, because it looks like a spell now =).. A function name should start from a verb,. /cc @VasilyStrelyaev \nCheck the strings please.. Do we need the second slash in `reports/screen-captures/`?. Probably we should rephrase this sequence, it looks like a flaw of testcafe?\n`TestCafe server can handle only one watcher`. In fact we watch all passed files, not only test files, isn't it?. Why the commands instead of shortcuts, IMO a console command supposes it should been submitted (press enter) its after all. Am I wrong?. I'd like to say, it's not the main reason we forbid more than one run call. This is our design decision, you don't need more than one `LiveModeRunner` in the most cases. It's just a interactive mode, but I believe it's possible to create another `LiveModeRunner` if one more testcafe instances is created.. It's not obligatory, you can still use it without `async`.. Please add an empty line.. Please add empty lines between methods.. It's not obligatory as well.. It needs some motivation IMO.. We should mention supported browsers here.. We should add a couple words about\nhttps://github.com/DevExpress/testcafe/pull/3356\nhttps://github.com/DevExpress/testcafe/pull/3177\nAlso I'm not sure we should put the breaking changes before new features.. We can improve this example. If we said about dynamic test creation the following example is more accurate. We should add some dynamic data.\n**external-lib.js**js\nexport default function runFixture(name, url) {\n    fixture(name)\n        .page(url);\ntest(`${url} test`, async t => {\n    // ...\n});\n\n}\n**test.js**js\nimport runFixture from './external-lib';\nconst fixtureName = 'My fixture';\nconst url = 'https://testPage';\nrunFixture(fixtureName, url);\n.js\nfunction hasDuplicates(codes) {\n    return new Set(codes).length !== codes.length;\n}\n```. Ok. Do we really need this bureaucratic disclaimer?. ",
    "VasilyStrelyaev": "Test names:\nShould fire \"ready\" event once established and redirect to idle page -> Should fire \"ready\" event and redirect to idle page once established\nShould respond with error on queries if not ready -> Should respond to queries with error if not ready\n. /r-\n. LGTM\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. Sure, let me play around with colors a bit\n. yep, thx, I figured it out\n. that's what I've also figured out =)\n. Try this one\nhttps://gist.github.com/VasilyStrelyaev/7f9388870eb92d4432ee\n. not so good with <strong> (I can't figure how to show it yet)\n. oh, cool!\nthen, I have more than one to choose from\n1)\n\n2)\n\n. https://gist.github.com/VasilyStrelyaev/affda1394c2b3589a62f\n. /r-\n. btw, README is on the way\n. /r-\n. lgtm\n. I won't go on - just make sure that we have \"Error at step\" everywhere\n. /r-\n. lgtm\n. 1) A postfix probably - to preserve the sort order in case steps are numbered? 3.My third step - Fail.png ? And, yeah, Fail, not to confuse with JS errors that can be skipped and all... Agree?\n2) I like it. Although, if the test fails on page load, we will have no more screenshots... But, for clarity, we probably should add - Page Load\n3) Can it somehow affect the gallery in Control Panel / Studio (even if this option will be available in code only - still - I could save the report to the same folder as I usually do in Studio - right ) ? If no, than OK.\n. > We should replace the / symbol \nWith @, hm?\n. Or enclose the OS name in brackets\n. Why do I use act.screenshot(filePath) anyway?\nI have the screeshot overwritten each time... Weird...\n. Cool!\n. I like the configurations and they are clear enough to me. And quite useful, I should say.\nNot sure that the --files flag used as a filter is something I could figure without reading the docs. Maybe it's because I'm totally unexperienced with CLIs. But still it's +1 to @AlexanderMoskovkin from me.\nAnd, finally, regarding what @helen-dikareva noticed.\nDoes this look better?\n-g, --grep <pattern>           only run tests matching <pattern>\n   -fg, --fgrep <string>           only run tests containing <string>\n   -xg, --fixture-grep <pattern>  only run fixtures matching <pattern>\n   -xf, --fixture-fgrep <string>  only run fixtures containing <string>\n. lgtm so far\n. Shouldn't we add a browser alias to run a task against all installed browsers?\nI feel like that's a rare scenario but there's going to be a couple of folks who request it...\n. nice\n. ok then, if we need to get rid of two-letter flags:\n-h, --help                     output usage information\n    -V, --version                  output the version number\n    -b, --list-browsers            output available browser aliases\n    -r, --reporter <name>          specify the reporter to use\n    -p, --report-path <path>       output report to the file on the <path>\n    -s, --screenshots <path>       enable screenshots and save them to the <path>\n    -S, --screenshots-on-fails     take screenshots on test fails\n    -q, --quarantine-mode          enable quarantine mode\n    -e, --skip-js-errors           don't fail tests on JS errors\n    -g, --grep <pattern>           only run tests matching <pattern>\n    -f, --fgrep <string>           only run tests containing <string>\n    -G, --fixture-grep <pattern>   only run fixtures matching <pattern>\n    -F, --fixture-fgrep <string>   only run fixtures containing <string>\n    --ports <port1,port2>          specify custom port numbers\n    --hostname <name>              specify hostname\n. flags are better this way, yeah\n. /r-\n. lgtm\n. \\r-\n. \\r-\n. /r-\n. lgtm\n. I'd rather prefer Container since it has much business logic within\n. yellow is not too much of warning\nit's rather highlighting - we use it to mark inline code and so on\nI'd go for yellow or no accent (the third screenshot)\n. /r-\n. lgtm\n. capture and captureForError...\nmaybe capture and captureError? What for do we have For here?\n. /r-\n. /r-\n. lgtm\n. /r-\nvery-very minor articles\n. lgtm\n. \\r-\n. Let's try to make assertions grammatically consistent.\nIf we stick to the expect smth to phrase, we would have to add a lot of wording:\n.to.eql(value), .to.eql(func), .to.eql.stored(), .to.eql.element(selector), ...- deep equality\n.to.be.true - boolean true equality\n.to.be.false - boolean false equality\n.to.be.null - null equality\n.to.be.undefined - undefined equality\n.to.be.NaN - NaN equality\n.to.be.ok - non-null, non-undefined, non-false\n.to.be.empty - empty array, object without fields, empty strings\n.to.be.more.than(value), .to.be.more.than(func), .to.be.more.than.stored(value) - more than comparison\n.to.be.less.than(value), .to.be.less.than(func), .to.be.less.than.stored(value) - less than comparison\n.to.contain(value), .to.contain(func), .to.contain.stored(value), .to.contain.element(selector), ...- string contain substring, array contain value, object contain key, element contain text, element contain element\n.to.match(regexp) - string matches regular expression\n.to.be.visible - visibility check\n.to.exist - element present in DOM\n.to.haveClass(className) - element has one or more classname\n.to.be.disabled - element is disabled\n.to.be.readonly - input is readonly\n.to.be.checked - checkbox is checked\nMy suggestion is to use the phrase expect [that] smth\n.eqls(value), .eqls(func), .eqls.stored(), .eqls.element(selector), ...- deep equality\n.is.true - boolean true equality\n.is.false - boolean false equality\n.is.null - null equality\n.is.undefined - undefined equality\n.is.NaN - NaN equality\n.is.ok - non-null, non-undefined, non-false\n.is.empty - empty array, object without fields, empty strings\n.is.more.than(value), .is.more.than(func), .is.more.than.stored(value) - more than comparison\n.is.less.than(value), .is.less.than(func), .is.less.than.stored(value) - less than comparison\n.contains(value), .contains(func), .contains.stored(value), .contains.element(selector), ...- string contain substring, array contain value, object contain key, element contain text, element contain element\n.matches(regexp) - string matches regular expression\n.is.visible - visibility check\n.exists - element present in DOM\n.hasClass(className) - element has one or more classname\n.is.disabled - element is disabled\n.is.readonly - input is readonly\n.is.checked - checkbox is checked\n. So, which is the final variant?\n. > Actual argument\n\nexpect.stored(name) - stored value\n\nWe have the capability to pass a stored value as the expected argument, which does make sense.\nBut does it make sense to use a stored value as the actual argument?\n. Where can I see an updated version of APIv2?\n. Cool!\nNotice no beforeEach, afterEach, page in fixture... No waits or autowaits...\nActions won't change from what I gather...\n. > .eql(value), .eql.element(selector). ...- deep equality\ndoes \"deep equality\" relate to both value and element?\n. Thanks!\none more thing - no expect(hybridFunc) so far?\n. Seems that t.alwaysInject is more like t.injectEverywhere, isn't it?\n. > test('Some test').body(\nOh, changes arrive so fast... :(\n\nuseClientHelper\n\nmakes sense to me\n. > t.click(() => $('.btn'));\nSo, you can pass a hybrid function as a selector, or you can pass a regular function that will be wrapped to become hybrid, right?\n. > test('Some test').body(\nAnd, BTW, is introduction of body() connected with useClientHelper or is it a separate thing?\n. >  test-local chains for setups/teardowns\nSo, the main purpose of them is to override fixture-level setups and teardowns?\nWhich can be achieved by using a flag to skip the latter. However, this way we'll have local setup/teardown logic mixed with test code, which you think is not ok?\n. What about https://github.com/DevExpress/testcafe/issues/163#issuecomment-199717730\n. One more thing.\nI'm not sure if my js skills allow me to say it properly, so I'll use an example.\nIt's about closures in hybrid functions\nI suspect that\njs\ntest `Some test`\n    .body( t => {\n        var id = 'myId';\n        var hf = Hybrid(() => document.querySelector(id));\n        await t.click(hf);\n    });\nwon't work, while\njs\n'@test'['myTest'] = {\n    var id = 'myId';\n    act.click(() => document.querySelector(id));\n}\nused to?\n. Okay.\nNow...\nDo we expect users to study DOM element descriptors returned by hybrid functions, or just use them as tokens to pass to actions/assertions?\n. We are really waiting for the final API design to be posted here.\n. It may have sounded harsh, but API is the main thing still to be documented.\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. mmm... what does this have to do with me?\n. (I must be missing something)\n. Oh, yeah, I know this tech writer stuff.\nIt just seems I don't understand what you are doing here.\nI guess you remove everyone from collaborators since all the necessary rights are provided via our DevExpress account.\nAnd you say this is docs... Please explain.\n. Meh!\n. /r-\n. lgtm\n. \\r-\n. /r-\n. lgtm\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. > I still thinking about renaming upload to setUpload. Not quite sure though\nThat was the right state of mind. I just realized that uploadFile simply populates the input... well, there's not too much of upload...\nAnd it does not pair well with clearUpload\n. fillUpload, populateUpload as options\n. Is anyone receiving? @inikulin @AlexanderMoskovkin @helen-dikareva @AndreyBelym \n. @inikulin could you please scroll up a bit \n. sounds good\n. Meaning \"clear the upload object\"... I, personally, don't mind.\n. \\r-\n. lgtm\n. lgtm\n. /r-\n. lgtm\n. \\r-\n. /r-\n. lgtm\n. /r-\n. yep, lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. Will anyone else have a say, or just merge?\n. @inikulin  ok, let's try\n. I'd be surprised if collaborators could transfer repositories\n. @inikulin thx, transfered\n. @testcafe-build-bot \\retest\n. And, yeah, consider using  https://github.com/SBoudrias/Inquirer.js/ for prompting\n. Unfortunately, the GitHub Pages engine disables all custom Jekyll plugins for safety reasons.\nSo, if we want to go with automatic anchor links (which I'm going to implement via a plugin), we need to build the website locally and then push it to gh-pages instead of pushing Jekyll sources\n. yep, I just post this as a reminder\n. ~~Before building the website, this task should check that the local Jekyll is > 3.0\n(we happen to use extensionless permalinks)~~\nwe don't use extensionless permalinks anymore\n. ~~Before building the website, this task should check that the local Jekyll is > 3.0\n(we happen to use extensionless permalinks)~~\nwe don't use extensionless permalinks anymore\n. I thought of test API as test framework\n. To me, API is how you interact with TestCafe from the outside, while tests do this \"from the inside\".\nThat's why I was thinking of \"TestCafe API\" and \"Test Framework\"\n@inikulin \n. Anyway, Using TestCafe programmatically (i.e., How to use TestCafe programmatically) is a name for a how-to topic, a recipe, while we need a name for a reference section.\nSo, as long as we don't want anything to be confused with Test API, that's what my first thought is:\nGETTING STARTED\nTEST API\n    Test Structure\n    Actions\n    Assertions\n    Hybrid Functions\n    Roles\nUSING TESTCAFE\n    Command Line Interface\n    Programming Interface\n        TestCafe Class\n        BrowserConnection Class\n        Runner Class\n        Global Members\nEXTENDING TESTCAFE\n    Reporter Plugins\n    Browser Provider Plugins\n    Selector Extensions\nRECIPES\n    Recipe No. 1\n    Recipe No. 2\n@inikulin \n. other names, like Test Structure, Assertions, Hybrid Functions, Roles, Reporter Plugins, Browser Provider Plugins, Report Test Utils are just for clarity here - don't take them serious\n. ...or take, if you can come up with a better name right away\n. @inikulin Ok, thx, updated the TOC\nAnd since we are here to discuss the reference - I guess this time the section names are ok...\n. Working on the using with gulp recipe. @eltiare, we've just published a topic about debugging in WebStorm:\nhttps://devexpress.github.io/testcafe/documentation/recipes/debug-in-webstorm.html. \\r-\n. FPR, BTW\n. @testcafe-build-bot \\retest\n. FPR\n. Note that I've also added the Summary section to\nusing-testcafe/programming-interface/index.md\n. FPR\n. @testcafe-build-bot  \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. oops... something went wrong... I've lost a commit \n. Seems like I restored everything.\nCheck please\n. FPR\n. There's no more.\nI removed text in brackets\n. Does anyone else have a similar problem? @DevExpress/tescafe-docs \n(I see a different issue here - but first I want your opinion on this)\n. That's... weird... 'Cause there's not only sentences but whole paragraphs that can be linked in text. In our instance, the second paragraph referred to what the entire first paragraph was about - TestCafe server instance.\nAnyway, another important thing was too informal and evaluative for docs - so this piece had to be rewritten.\n. @testcafe-build-bot \\retest\n. FPR\n. ping\n. FPR\n. I also have issues with you saying the command tells TestCafe to (as well as, in other places, a user commands TestCafe to).\nThis sounds a bit childish to me as it excessively personifies TestCafe.\n. \\r-\n. (I'm not saying you should remove all tells immediately - that's just an overall impression)\n. \\r-\n. lgtm\n. Add the appropriate links (to this topic) to\ndocs/nav/nav-menu.yml\ndocs/articles/documentation/using-testcafe/index.md\n. \\r-\n. You may need to rebase on the upstream for this\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. Both DevExpress/testcafe-gh-page-assets#2 and #426 are merged, so I close this issue.\n. closed by DevExpress/testcafe-gh-page-assets#1 and #359\n. lgtm\n. Fixed by #322 \n. FPR\n. It seems useful to \\cc @DevExpress/testcafe for documentation but you wouldn't know when to merge... \nAnd, also... Does anyone besides @inikulin, honestly, reads all this?\n. If few - maybe it will be more useful to have the team review the docs after everything is finished?\n. FPR\n. ping\n. Anyone else?\n(I'm bored, I want to go ahead)\n. @inikulin cool\nI think someone can already merge\n. thanks!\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. @georgiy-abbasov \nShould success is not a correct phrase at all\nShould be successful seems too long\nShould pass is ok. Let's stick to it if we want our tests to be named uniformly.\n. I didn't get the second question.\nit('Shouldn\\'t fail when performing click action on the missing element with the shouldFail option enabled', function () {\nThis name looks pretty. If it's not correct as to whether the test fails or not, we should change the first two words accordingly, choosing between should fail and should pass.\nIs there a different problem?\n. interchangeable in this context \n. @testcafe-build-bot \\retest \n. https://www.npmjs.com/package/broken-link-checker\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. now, when #311 is fixed, links must comply with the new rules\n. \\r-\n. \\r-\n. overall - supercool now\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. the click -> click (auto replace will probably do)\nand lgtm\n. lgtm\n. the unexpected -> an unexpected\nand lgtm\n. the unexpected -> an unexpected\nand lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. WIP is over. Welcome to take a look.\n. \\ping @churkin @kirovboris @MargaritaLoseva @AlexanderMoskovkin \n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. It's not experimental anymore. We're just waiting for @AlexanderMoskovkin  to tweak test-cafe-build-bot a bit\n. @MargaritaLoseva - fix these broken links pls\n. @DevExpress/testcafe-docs \nFolks, please review but don't merge.\nWe just need to ensure that our approach is okay before @AlexanderMoskovkin begins tweaking the test bot to run this test\n. In addition, this PR downcases all filenames and links for cross-platform compliance and removes a couple of broken links\n. does anyone interested?\n. FPR\n. @testcafe-build-bot \\retest\n. Hey! @DevExpress/testcafe-docs \nWe are done with this.\n. FPR\n. Bot seems to work as expected, thanks to @AlexanderMoskovkin \n. @MargaritaLoseva In case I haven't told you: from now on, all PRs for docs must start from the [docs] prefix.\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. even handledDialogs\n. I wonder if we could add a server-side onHandled that's called after the handling - purely for assertions\njs\nhandleDialogs: {\n    alert: true | false,\n    confirm: { result: true | false }  | false ,\n    prompt: { result: String | null } | false,\n    beforeUnload: true | false,\n    onHandled: (type, text) => {}\n}\n. @DevExpress/testcafe so what about onHandled ?\n. > It's should accept client function as well, because we need to check their text\nAs far as I understand, the only way to check text is outside of the handler - via t.getLastDialogInfo().\nThe handler is just to return the value to close the dialog with. Although it can depend on the text.\nSo, I can't imagine what a handler would do in setAlertDialogHandler and setBeforeUnloadDialogHandler\n. \\r-\n. lgtm\n. lgtm\n. /r-\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. /r-\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. Why not?\nTest in Progress... if we use title capitalization. I'm not sure...\nCompare:\nTest in Progress... Loading Web Page...\nTest in progress... Loading web page...\nAfter all, Google suggests that we use sentence capitalization everywhere except buttons. Which is the most common practice nowadays, from what I notice.\n. And yeah, no bar for test in progress\n. And yeah, no bar for test in progress\n. > After all, Google suggests that we use sentence capitalization everywhere except buttons.\nApple doesn't, but...\n\nI don't like being addressed by a Title\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. Closed by https://github.com/DevExpress/testcafe-gh-page-assets/pull/17\n. Minor things, so just take a quick look\n\\cc @inikulin \n. lgtm\n. @testcafe-build-bot  \\retest\n. @testcafe-build-bot  \\retest\n. done\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. First, I assume that we can technically borrow the existing Example page. Despite it's MVC while our GitHub pages website is static. Cause this page does not make much use of MVC currently.\n. But we may probably want something more. For instance, something that includes contentEditable elements.\n. OK, sounds good.\n\nE.g. copy existing one for getting started \n\nBTW, is there a fast way to copy a page?\n. Had to make it from the ground up and... managed to create such a thing so far:\nhttp://strelyaev-w8:8080/testcafe/example/\nIs it okay and I'm calling the designer - or did I do it wrong? \n. If it's ok, I'll ask the designer to improve the visual part (mostly, the layout) and then open a PR.\n. Even using VPN?\n. okay then, we'll get back to it later...\ndoes anyone else have something to say?\n. \\r-\n. Oh, to be just, I'll also add articles to test names since I'm doing this in other PRs now\n. \\r-\n. \\r-\n. lgtm\n. @inikulin Key combination is Ctrl+F\nWhile Alt+R delete space backspace is not. It's a sequence (or series) that includes keys and one key combination\n. we can call all the internals using the word sequence\n. lgtm\n. lgtm\n. lgtm\n. FPR\n. Hope it didn't get too sophisticated\n. \\r-\n. lgtm\n. @inikulin  I guess using the stop() function and cancelling individual tasks are both valid scenarios?\n. I understand what they do, I just wanted to make sure that we expect users to use both.\nThanks!\n. @inikulin  Does such an example make sense?\n``` js\nconst tasks = [];\ntasks.push( runner\n    .src('tests/fixture1.js')\n    .browsers([remoteConnection, 'chrome'])\n    .reporter('json')\n    .run()\n);\ntasks.push( runner\n    .src('tests/fixture2.js')\n    .reporter('xunit')\n    .run()\n);\nserver.on('request', function (request, response) {\n    const parsedUrl = urlUtils.parse(request.url, true);\n    if (parsedUrl.pathname == '/cancel')\n        await tasks[parsedUrl.query['taskNum']].cancel();\n});\n```\n. I was just trying to imagine what can trigger the cancel...\n. pardon\njs\nserver.on('request', async (request, response) => {\n//...\n});\n. emm.... I was thinking of something more real-life but if it looks too complicated...\nMaybe we'll have a real-life sample in Receipts.\n. ok, got it\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. @inikulin BTW, is anonymous hybrid function the official term we should now use for t.eval() ?\n. @inikulin yeah, that's exactly what I was thinking\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. @MargaritaLoseva I've cut and destructured the Test Code Structure topic, so that it no longer duplicates this Getting Started\n. quite lgtm, overall\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. what about https://github.com/DevExpress/testcafe/pull/541#discussion_r63663889 ?\n. Now it's my turn to be sorry that I didn't notice the last comment =)\n. \\r-\n. lgtm\n. \\r-\n. BTW, does anyone like\nresizeWindow(width, height)\nfitWindowToDevice(deviceName [, orientation])\nbetter?\n. \\r-\n. What about that?\nhttps://github.com/DevExpress/testcafe/pull/543#discussion_r63851226\n. \\r-\n. An insight has just visited @helen-dikareva, on behalf of whom I am writing this comment...\nSo, the screenshot action... We now require that the path to the screenshot directory is specified via a global option. Otherwise, we do not take screenshots at all.\nAt the same time, we allow users to specify this path right when they call the takeScreenshot action.\nNow imagine a user who has to set the global option only to override it in several takeScreenshot calls.\nWhat if, in case the global option is not set, we ignore only screenshots on fails and parameterless takeScreenshot, while allowing to call takeScreenshot with the parameter?\n@inikulin \n@DevExpress/testcafe \n. smart... that's smart\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. \\r-\n. (not sure there was a need to correct TODOs, but... there's nothing more permanent than temporary)\n. lgtm\n. And it looks like it supports node 6 now\n. cool! the workaround revealed a previously unnoticed broken link\n...exactly as expected\n. I've filed an issue for that bug... so, we'll probably wait a little before applying this workaround.\nThe cause of this bug is rather straightforward, so that there's a chance it's going to be fixed soon.\n. Am I too naive?\n. well... actually, no,,,\nif sometimes the broken-link-checker becomes able to check if anchors exist, excludeLinksToSamePage = false will even be useful\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. Regarding waitForElement...\nLet's assume I'm using a Hybrid to return a value I need to assert. What if I need to wait for a particular element in order to calculate that value? What if this element is invisible?\nI may need waitForElement as well as waitForElementVisible- right?\n. @DevExpress/testcafe ?\n. Doesn't accepting element descriptors duplicate the dependencies mechanism for Hybrids - in a sense?\n. And just to confirm - t.eval acts as a regular Hybrid, doesn't it?\n. What about t.eval? https://github.com/DevExpress/testcafe/issues/574#issuecomment-223911488\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. get rid of ClientFunction function\nand lgtm\n. lgtm\n. lgtm\n. in essence, lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. I'll do it!\n. \\r-\n. lgtm\n. That was a kind of demonstration that tests work.\n. Now what fails is what is meant to fail.\n. Please review\n. Added stubs for the tests\n. FPR\n. thanks!\nFPR\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. Maybe I'm a bit unfamiliar with the terms, but I do understand what context means, I can understand what environment means (although context seems better), but scope variables as a parameter name leaves me puzzled.\nMaybe it's just me.\n. \\r-\n. lgtm\n. lgtm\n. Good idea! I'm totally ok with that.\n. lgtm\n. we crawl everything\n. > Not cool. We need some domain filter then\nWhat's wrong with that? I thought it's great if we know that an id we refer to no longer exists.\n. Oh, no, of course we don't crawl external websites. We check that the page is available and then if the link has a hash, we parse that single page and check if the id exists. And that's all.\n. > BTW, since README includes landing page + getting started maybe it makes sense to write gulp script which just basically take these sections from docs and insert it into README, so they will be consistent? \\cc @VasilyStrelyaev\nWell, the landing page is not Markdown but HTML...\n. t.select\nt.selectByText\nt.selectText\nWhich is the odd-one-out?\n. One more:\nSelector -> SelectFunction (like ClientFunction)\n+ SelectByTextFunction\n. ohh, I've nearly finished documenting all this stuff...\nokay, so I stop updating documentation until we have a release version finalized.\nOnce we finalize it, allow a few days for docs to be updated accordingly.\n. I prefer the last one (3rd) option\n. I think we should return null if index > the number of returned nodes\n. > Regarding initializeOptions: how about filteringOptions or filterOptions?\nem... you mean filterOptions will include scopeVars. no, I think\n. As long as index belongs to filtering...\nWhat if we go with\n``` js\nvar selector = Selector(fn, options, scopeVars);\nvar newSelector = selector.with(executionOptions);\n``\n. yeah, it brings mess tot.select(fn, options, scopeVars, executionOptions)though\n. what stops us from merging all options in... justoptions`.\njs\nvar selector = Selector(fn, options, scopeVars);\nt.select(fn, options, scopeVars);\nwhere\njs\noptions = {\n    text: String | RegExp,\n    index: Number,\n    timeout: Number,\n    visibilityCheck: Boolean\n}\nYou may redefine them all via with. (we are creating a new selector anyway)\njs\nvar newSelector = selector.with(options);\nor, if it hurts the ideology, we can get rid of with and use\njs\nvar newSelector = Selector(selector, options);\ninstead\n. > It's still missing CLI text for selector-timeout options\nset the amount of time within which selector functions make attempts to obtain the page element to be returned\nDoes it sound too sophisticated, or are you okay with it?\n. \\r-\n. oh, I didn't even review the rest. so one moment\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. \\r-\n. lgtm\n. lgtm\n. Just one moment:\nAre you sure that\ntestcafe -v\nis an apt sample to show testcafe 'running'\n. mmm.... probably it's good... I'm just thinking out loud\n. lgtm\n. \\r-\n. lgtm\n. We sure have a full list of aliases\nhttps://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/using-testcafe/common-concepts/browser-aliases.md\n. So we have to update the docs\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. You also wanted a separate top menu with top-level sections (GETTING STARTED, USING TESTCAFE, TEST API, EXTENDING TESTCAFE...)\nSee item 1\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. So far getNativeDialogHistory returns the list of dialogs from the earliest to the most recent one.\nWhat if we reverse that order?\nThe most common scenario is getting the latest dialog - let it be [0].\nAnd this is also what the word 'history' implies.\nWhat do you think? @helen-dikareva @inikulin @AlexanderMoskovkin \n. So, if I expect just one alert in my test and simply want to handle it, what I write is\njs\nt.setNativeDialogHandler(() => {});\nwhich looks... hm...\n@helen-dikareva @inikulin @AlexanderMoskovkin \n. \\r-\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. Let me deploy it for the folks:\nhttp://strelyaev-w8:8080/testcafe/\nPoke me if it goes offline\n. There are actually three things we need\n- [ ] a section regarding browser provider plugins and CI \n- [ ] a button to give stars - see https://buttons.github.io/\n\n- [ ] some \"call to action\" at the bottom. To read the getting started or something.\n  See the bottom of the babel's page \n  \n  Or the React's\n  \n  So far we the only way out of the main page is the top menu, which is not quite good design.\n. and, yeah, LGTM what we have so far\n. And please wait for DevExpress/testcafe-gh-page-assets#9 to rebase your DevExpress/testcafe-gh-page-assets#8 onto.\nWe need to look at how the narrow menu bar looks with the landing page.\n. ~~Maybe it makes sense to rebase it on DevExpress/testcafe-gh-page-assets#11 once it lands and then see how it looks...\nWe may need to increase the banner's padding~~\nSorry, this one is about content\n. \\r-\n. almost excellent, but...\n. \\r-\n. lgtm\n. @testcafe-build-bot \\retest\n. Please ignore it and review\nthat's a pretty unstable thing I should say...\ndifferent broken links each time\nlocally the test runs pretty well and actually all the links are alive.\n. I'll try to figure out what's happening while you are reviewing the text\n. http://strelyaev-w8:9090/testcafe/documentation/\ndeployed\n. @kirovboris drew my attention to a different thing in the Action Options topic.\nIt's the caretPos option description\n\n@kirovboris suggested that we go with a more formal description in the Default column.\nSomething like the length of the input field content since this is a numeric field that actually holds the index.\nI'm not sure about that. I like the way it is worded now - more simple (which I've taken from the current docs). What do you think?\n. If we stick to formality everywhere, we should change The center of the target element for offsetX and offsetY to half-height and half-width of the target element...\n. mmm... a tradition, I suppose. Looks awkward to you?\n. > We use Numeric and Number in different parts of documentation. We have to standardize it.\n@kirovboris Thanks, I didn't notice.\nAm I right that these are technically different things?\n\n. Yeah, I see\n. Ohh... And I'll create a lot of stub topics in each of these chunks 'cause the whole Test APi section has a lot of cross-links.\n. I don't mean that it's a bad idea... But we've almost finished reviewing this PR...\n. FPR, BTW\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. I want the Documentation link from the site navigation menu to lead to Getting Started instead of the \"root\" topic that has little use.\nhttp://strelyaev-w8:9090/testcafe/\nWhat do you think?\n\\cc @DevExpress/testcafe-docs \n. Oh, missed\nhttps://github.com/DevExpress/testcafe/pull/683#discussion_r73895628\nJust posting it here not to forget it myself\n. BTW, after all the mess with the frame, iframe, main window, etc, decided to rename the topic from Switching between iframes (through Switching to and between iframes) to Switching Browsing Context - the term @inikulin showed me.\nWhat do you think?\n. I somehow decided on a rather general title Working with <iframes>\n. FPR\n. I sort of checked all examples... But it turns out that not all...\n. Double-checked\n. Yep, it's already too big - many small tweaks that don't relate to Test API are accumulating...\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. So, I guess we first need to figure out the contribution rules.\nAnd what are issue and bug report templates? I've seen a kind of check lists: \n\n\n[ ] I haven't found info in the docs\n[ ] I've tried it on Linux\n[ ] I've tried it on the latest version\n\n\nDo you mean these things?\n. So, I guess we first need to figure out the contribution rules.\nAnd what are issue and bug report templates? I've seen a kind of check lists: \n\n\n[ ] I haven't found info in the docs\n[ ] I've tried it on Linux\n[ ] I've tried it on the latest version\n\n\nDo you mean these things?\n. a monday ping, sir\n. a monday ping, sir\n. see https://github.com/DevExpress/testcafe-gh-page-assets/pull/15\ntry http://strelyaev-w8:9090/testcafe/\n. If we merged https://github.com/DevExpress/testcafe-gh-page-assets/pull/15, merge this please not to leave the whole thing broken\n. Your approach to examples is to show how to build an entire reporter. Including saving things to this and so on.\nThat's a perfect approach.\nBut I'm thinking of a different one. Write methods that just print everything they get at every stage and show the output.\nThis is quite useful for reference.\nI think we should use both approaches. Maybe use the second one in sections about individual methods and then show an integral reporter in a separate section? Or even a recipe?\n. \\r-\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. So, we need to figure out the right verb that conveys the relationships between a browser and browser provider.\n. mmm... I must be offering that illusory choice in my own topics from time to time...\nI need to check it =)\n. \\r-\n. \\r-\n. everything else looks just great!\n. lgtm\n. I understand what ids are in openBrowser and closeBrowser.\nBut in resizeWindow and, moreover, takeScreenshot... Maybe, rename to browserId in these two methods?\n. \\r-\n. lgtm\n. I mean\nopenBrowser(id)\ntakeScreenshot(browserId)\nAnd it is good.\nopenBrowser(browserId) - excessive\ntakeScreenshot(id) - unclear\nParameters should be understandable in the context of their method. There's no inconsistency.\n. \\r-\n. lgtm\n. lgtm\n. I have a couple of late thoughts about https://github.com/DevExpress/testcafe/issues/650\n@helen-dikareva said I'd better post them here\nso, we have test{num} in the screenshot path, e.g. test-1, test-2, ...\nif the test is quarantined, we use test{num}{run}, e.g. test-1-1, test-1-2, ...\nOne may think we are talking about tests number 1.1, 1.2, ...\nI'd add some descriptive word like test-1-run-1, test-1-run-2, ...\nWhat do you think?\n. Nope, these are not attempts. An attempt is something we expect to either succeed or fail. From the point of view of testing framework, all runs are successful - we have determined the test status - failed or passed.\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. > The good thing about this approach is that it will cooperate well with #771. \nAnd it also justifies the use of a noun extensions. Since we have an object not function,\n. Oh, it also adds a tagline to the front page, but I think that's okay\n. @testcafe-build-bot \\retest\n. \\r-\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. Did I get it right that tests fail because I can't use spawn(..., { env : { ... } } in Travis - I can only assign environment variables in .travis.yml?\n. okay, trying it with .travis.yml\n. WIP!\n. have to make sure the spawned process inherits environment variables and it's actually built in testing mode.\n. yep, it does\n. FPR\n. Meh, I surely can but, most probably, noone will update this comment ever.\nThe way build configurations affect site functionality is implemented in a different place - in website assets.\nWho will remember to update a comment in Gulpfile.js when changing website assets?\n. \\r-\n. lgtm\n. 'Auto-generated' - like completely automatic? A bot that regenerates it on each PR that affects the TOC at docs/nav/nav-menu.yml (if it is possible at all)?\nOr like semi-automatic - run a generating script locally and add the resulting docs/README.md to PR. Build bot can then warn you if your PR affects docs/nav/nav-menu.yml but not docs/README.md.\n. @AlexanderMoskovkin, how difficult is it to upgrade the bot in such a way?\n. lgtm\n. the feature looks nice\n. lgtm\n. A strange thing happens with that broken link to Travis Docs\n\nCheck it out: https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings\nIt works.\nWhat strange is... Look at the id on the page\n\nWell, and that's how parse5 parses this element\n\nIs it intended that it lower-cases the anchors?\n. A strange thing happens with that broken link to Travis Docs\n\nCheck it out: https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings\nIt works.\nWhat strange is... Look at the id on the page\n\nWell, and that's how parse5 parses this element\n\nIs it intended that it lower-cases the anchors?\n. We've figured out that the Travis site uppercases anchors via scripts - so it's correct that we get lower case anchors in the markup... but have to use title case anchors in the links...\n@MargaritaLoseva , please add this to test/website/test.js\n\n```\n                let hash = parsedLink.hash.substr(1);\n            // NOTE: The Travis Documentation website contains lower case\n            // anchors in the markup but uppercases them using scripts\n            // before displaying the page.\n            // So, we expect a lower case anchor to appear in the markup.\n            if (parsedLink.host === 'docs.travis-ci.com')\n                hash = hash.toLowerCase();\n\n            let res = this._hasHash(tree, hash);\n\n```\n. We've figured out that the Travis site uppercases anchors via scripts - so it's correct that we get lower case anchors in the markup... but have to use title case anchors in the links...\n@MargaritaLoseva , please add this to test/website/test.js\n\n```\n                let hash = parsedLink.hash.substr(1);\n            // NOTE: The Travis Documentation website contains lower case\n            // anchors in the markup but uppercases them using scripts\n            // before displaying the page.\n            // So, we expect a lower case anchor to appear in the markup.\n            if (parsedLink.host === 'docs.travis-ci.com')\n                hash = hash.toLowerCase();\n\n            let res = this._hasHash(tree, hash);\n\n```\n. \\r-\n. \\r-\n. \\r-\noverall, lgtm\n. \\r-\noverall, lgtm\n. @testcafe-build-bot \\retest\n. I'll try one more time tomorrow.\nThis link doesn't have a hash, so it's not my code... This test passes locally...\nSo, I'd wait a bit.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. http://phantomjs.org/ today... funny\n. lgtm\n. lgtm\n. > \\r-\nYou are reviewing your own PR? Nice...\n. rebase plsss\n. \\r-\n. lgtm\n. and enhanced TOC internal representation\n. \\r-\n. lgtm,\nbut I wonder how we can update the documentation tests to not only lint the Gulpfile but also check that we don't add anything wrong to it.\nmaybe add a dummy (empty) gulp task and execute it with the oldest supported node? does it make sense? will it help?\n. \\r-\n. lgtm\n. lgtm\n. lgtm, meanwhile\n. As far as I understand your recent changes in the docs, we now use the term snapshot for an object that is explicitly awaited, When talking about DOM node properties accessed by using a selector in general, we say state.\nSince custom properties can also be accessed through shorthands, we may need to rename the method to extendState or simply extend.\nDoes it make sense?. \\r-\n. lgtm\n. \\r-\n. lgtm\n. > fn looks a little bit akward.\nlast time we called it body\n. If RC for the public beta includes publishing things then... I suppose everything in the Doing list in Trello\n. ping\npls hurry up folks - a little bit more than one day left\n. > pls hurry up folks\nI mean pls review ASAP, @DevExpress/testcafe-docs \n. 4 hours left until it's [semi]automatically merged\n. I'll add [WIP] if you don't mind\n. hang tight, I'm rewriting it all a bit\n. 4 hours left until it's [semi]automatically merged\n. @MargaritaLoseva  Armina didn't respond so let's leave it as it is. I'll change this dozens of thing as soon as Armina replies.\n. Oh, I can push here it turns out - there was no reason to hurry up.\nSo, we'll wait for Armina to respond.\n. \\cc @DevExpress/testcafe-docs \n. @DevExpress/testcafe-docs do we have to remove PhantomJS from the docs as well?\nI think it's connected to whether we are going to remove the plugin from npm... Or it's not?\n. We'll be having a new landing page design soon\nhttp://take.ms/Ei8a5\nAnd it requires just one little <br/> in this repo.\nI don't really want to make a separate PR - let it be here (this PR is already a dump)\n. \\cc @churkin \n. 4 hours left until it's [semi]automatically merged\n. Let's wait till DevExpress/testcafe-gh-page-assets#19 is merged - tests should pass then.\n. oh, link - not line\n. The post is a draft BTW - just to make it all build okay.\n. > I'll update the top post a little later\n@AlexanderMoskovkin  Taking into account the discussion, the top post doesn't seem to be up-to-date yet. Have you already decided on all the things? Can you pls update it?\n. \\cc @DevExpress/testcafe-docs \n. see https://vasilystrelyaev.github.io/testcafe/\n. I'll merge without review if you don't mind (I wouldn't expect you to)\n. And one fix by myself\nhttps://github.com/DevExpress/testcafe/pull/895/files#diff-df4ad039ceec6ddb2453b37e082926dfL46\n. Thanks for noticing that, @radarhere \n. ping  @DevExpress/testcafe-docs\nwill anyone else review? are we merging?\n. so we don't have everything in the milestone?\nhttps://github.com/DevExpress/testcafe/milestone/13\n. Let's figure out how I should search for issues then.\n. What do you think we should use instead of visible?\nI guess visible is the only right word for this, so we will have to take something not quite correct yet simple enough.\nIs it\n1. displayed\n2. shown (plays sort of nice with hidden)\n3. ..?. Oh, after reading the user's issue I thought we were going to have two methods with bool parameters like hidden(bool) and visible(bool) and I was going to ask what's the difference between hidden(false) and visible(true).\nIt turns out that we don't. So, we need either two methods with no parameters or one parameterized.\nYet I can't choose between hidden(bool) and filterVisible + filterHidden. @inikulin The topic that lists the DOM Node State members no longer uses the word snapshot. Now we say that it lists the State API.\nAnd that topic is linked from a section that says about the selector API. \n\nSelectors and promises returned by selectors expose API to get the state (size, position, classes, etc.) of the matching element. See DOM Node State.\n\nDid I get right what you were asking about?. Oliver suggested to refactor the entire Selectors topic (https://github.com/DevExpress/testcafe/issues/1760) so I'll think of it as a part of this complex task. . Will do the docs. Will do the docs. Will do the docs. Will do the docs. FPR\nyeah, it looks good with inline selectors. FPR. ping @inikulin . Will do the docs. Are node and element words in parameter names are correct? \nI mean, the current is element and the origin is node?. Let's try it this way. Looks better?. @AlexanderMoskovkin this way better?. Please also pay attention to this commit\nhttps://github.com/DevExpress/testcafe/pull/1088/commits/33ed858b364cba00035f0f7ba4ef240f72f55f36\nI've renamed several sections so that they now use different terms. Do you like it or was the previous terminology better.. ping @inikulin . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Done. @testcafe-build-bot \\retest. > Note for tech writers: Current fixture.beforeEach and fixture.afterEach hooks section in documentation is not quite accurate. It's worth mentioning that hooks are run for each test run of the given test. So e.g., if we have 3 browsers set for the test run, each hook will be executed in each browser right before and after the test.\nI feel like it can be excessive. Test runs are our internal stuff. We should just say: \"Your test needs some initialization code? Put it here!\", And it is our job to ensure that it runs in every browser. Users shouldn't bother.. Check out the extended signatures with fixtureName, testName, etc.\nI can't say I like it . FPR. @testcafe-build-bot \\retest. Test will fail but it's ok - these links will be alive when the website updates. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @WillemMali ,\nThis example uses async/await syntax that isn't supported by the version of Node.js you use.\nWe have an issue about that https://github.com/DevExpress/testcafe/issues/989.\nWith Node.js v0.10.29, use promises\n```js\nconst createTestCafe = require('testcafe');\ncreateTestCafe('localhost', 1337, 1338)\n    .then(testcafe => {\n        testcafe\n            .createRunner()\n            .src('tests/fixture1.js')\n            .browsers(['chrome', 'safari'])\n            .run();\n    });\n```\n. Dunno, I like this one.. Can we merge this?. ping. Don't mind the picture - it will be landed in https://github.com/DevExpress/testcafe/pull/1195. ping. FPR. maybe proxy-bypass instead of proxy-ignore (if I get it right)?. Are we going announce this as a feature? If we are, let's create an issue, add it to the milestone and assign all the necessary labels.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. https://github.com/DevExpress/testcafe/pull/1251. Well, this PR actually adds one sentence and an example to .page section. If we are not going to do https://github.com/DevExpress/testcafe/issues/1286 in this sprint, let's review this as is. @testcafe-build-bot \\retest. Ignore the tests - links will be fixed with https://github.com/DevExpress/testcafe/pull/1255. waits for https://github.com/DevExpress/testcafe-gh-page-assets/pull/31. \\cc @DevExpress/testcafe-docs . ping. Agree, will do it. Should this issue be added to a milestone? Should it have the documentation: required label?. what about withTextStrictly or withStrictText. @testcafe-build-bot \\retest. Tests will pass after https://github.com/DevExpress/testcafe-gh-page-assets/pull/32 is merged. @testcafe-build-bot \\retest. proxy-server looks okay. Try rebase pls. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. ping @churkin @kirovboris . ping @churkin . Created the Debugging subsection in the Using TestCafe section (not Test API). Divided the debugging recipe in two parts.\nPreview: http://strelyaev-w8:8080/testcafe/ . ignore the tests. ping @churkin . Will do this. @AlexanderMoskovkin we've never included info about plugins to what's new - do you think we should start?. oh, I'm wrong, we did\nokay, I'll add info about the react selectors plugin. FPR. Ignore the test - the broken link will be alive when the website is published. if path includes the filename - what is the default filename if path is not specified?. if path includes the filename - what is the default filename if path is not specified?. @miherlosev We need to add two more items to the changelog. Place them at the beginning, before hammerhead bugs.\n* A typo in RoleOptions typedefs was fixed ([#1541](https://github.com/DevExpress/testcafe/issues/1541))\n* TestCafe no longer crashes on node 4 with an unmet dependency ([#1547](https://github.com/DevExpress/testcafe/issues/1547)). Since we decided to change the behavior to an intuitive one, this issue doesn't require documentation anymore. Am I wrong?. @dhoko, it just so happened that I already have the draft of such a recipe. You are welcome to review the pull request: https://github.com/DevExpress/testcafe/pull/1586. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @kirovboris I like step-by-step guides, they don't seem excessive for me. @DevExpress/testcafe-docs , what do you think about Boris' remarks?. Hi @cowchimp, \nThank you for your suggestion! We'll keep this in mind the next time we'll update the readme.. Hi @cowchimp \nWe have updated Readme.md. Although we didn't add much info about how TestCafe works under the hood, I think it's worth checking out.\nBTW, we have also added an FAQ section to our website: https://devexpress.github.io/testcafe/faq/\nIt contains some description of how TestCafe works.. Thanks, I've fixed it here and in the docs!. It was a little bit early to merge this because the Slack reporter wasn't republished on npm yet.. @AlexanderMoskovkin What about the description?\nhttps://github.com/DevExpress/testcafe/pull/1622#discussion_r137240418. Hi @ganlanyuan ,\nThis docs says about officially supported browsers, i.e. those against which we test TestCafe. In fact, TestCafe works in many legacy browsers. This depends on whether a particular browser supports basic HTML5 features.\nWe haven't investigated in what particular versions of legacy browsers TestCafe works.. I guess now we can review and merge it.. Added info about the returned client function\nhttps://github.com/DevExpress/testcafe-vue-selectors/pull/23\nhttps://github.com/DevExpress/testcafe-react-selectors/pull/57. What else should we do regarding this issue?. Please look through carefully. I was in a hurry.. @AndreyBelym . Ignore the tests please. @AndreyBelym . Anybody home?. I don't remember. Did we?. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. We only need to add code for badges. And I'd like to show it to the correctors. @testcafe-build-bot \\retest. HTML spec page is down for some reason. The links are not broken.. @Nuarat We should also do something in regard of https://github.com/DevExpress/testcafe/issues/1597 before merging this. FPR. Errors will disappear once we merge https://github.com/DevExpress/testcafe-gh-page-assets/pull/37. @testcafe-build-bot \\retest. Hi @darrylgrant ,\nWe've decided to keep this feature 'for internal use' for now. That's why we didn't announce it in our release notes or mention in the documentation.\n\u00a0\nThere are several reasons behind this decision:\n\u00a0\n- We assume that it's hard to write tests so that they don't require page reloads, which makes this feature difficult to use.\n- We think that writing tests in such a way affects their stability. \n- There are some aspects of this feature that aren't finished yet. For example, using this feature when tests are run concurrently.. @testcafe-build-bot \\retest. Or... I'd better add the reason. Because if this reason becomes outdated, someone will come across this note and tell us that we can implement support for MS Edge now.. Finish looks good. I've manually added the puppeteer browser provider to the list in README.md.\nThanks, @jdobosz !. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I think it's about time to review, isn't it?. @helen-dikareva . FPR\n@DevExpress/testcafe-docs @AlexKamaev . FPR\n@DevExpress/testcafe-docs @AlexKamaev . FPR. FPR. Please double-check that nothing new made its way to this PR. Tunneled access: https://9b65fad2.ngrok.io/testcafe/. Will someone look at it pls. Thanks, good catch!. Closed by https://github.com/DevExpress/testcafe/pull/1929. @Nuarat says it's okay\nothers - FPR please. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. New gallery images, Google Analytics attached to the Get Started button, fix a broken link (browsers in the Works on all popular environments section) and Search drop-down resized to the full input width (via a script, which is a little bit shitty). New gallery images, Google Analytics attached to the Get Started button, fix a broken link (browsers in the Works on all popular environments section) and Search drop-down resized to the full input width (via a script, which is a little bit shitty). Closed by https://github.com/DevExpress/testcafe-gh-page-assets/pull/41. Closed in https://github.com/DevExpress/testcafe-gh-page-assets/pull/41. Hi @sunainajain , let's continue our discussion on our forum: https://testcafe-discuss.devexpress.com/t/steps-for-jenkins-setup/607. @testcafe-build-bot /retest. @testcafe-build-bot \\retest. @wintermute42 You'll be able to try the fix once we update the website (in a couple of days) . @testcafe-build-bot \\retest. Working on docs. Working on docs. Umph, it's only fixed in Chrome on Linux, not Firefox. Wait a bit.. Oh, now these line endings. Oops, the second commit is not meant to be here. But since it is here, let's review it too,\n. Michael Herman removed his publication. Or it was fixed by an Edge update. hello, anybody here?. FPR. @churkin @helen-dikareva . This seems to work in all browsers. ...following https://github.com/DevExpress/testcafe-gh-page-assets/pull/46. @kirovboris @AndreyBelym @helen-dikareva @AlexanderMoskovkin . FPR. FPR. Are you saying that the example after the images (https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/test-api/actions/take-screenshot.md) is bad because it has a path? Or you don't like crop?. Though, I should admit that crop dimensions are not quite realistic. fixed in https://github.com/DevExpress/testcafe/pull/2165. \\cc @churkin @MargaritaLoseva . Ignore the tests - the links will be fixed when we update the website. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. (plus a small correction from Dirk). Hi @binarykitchen and thanks for your interest in TestCafe.\nWe at DevExpress have been working on TestCafe since the beginning of 2010s. The first version debuted in 2013. It was a commercial testing framework shipped both as a part of the DevExpress Subscription and separately. You can find more information about it here: https://testcafe.devexpress.com/.\nIn 2016, we have decided to open-source the core of TestCafe. Since then, we've grown to more than 80K downloads per month and still counting actively.\nAnd we have huge plans for TestCafe. In the nearest future, we are releasing a new commercial testing IDE called TestCafe Studio (currently in limited beta). It will be built on top of the open-source TestCafe. Thus, we are going to keep developing TestCafe because this will add new features to TestCafe Studio.\nOne more argument for TestCafe is that it has a trusted company behind it. DevExpress is known as a software component vendor since the beginning of 2000s. We have a huge community of customers and we earned multiple industry awards.\nAs for the WebDriver API, currently we don't have plans to support it.. You can read more about our motivations regarding WebDriver API on our forum: https://testcafe-discuss.devexpress.com/t/why-not-use-selenium/47. When does a user need to add shared directories when using TestCafe Docker image? Is it required to map the test directory if tests are located outside of C:\\Users? Or probably some other cases?. Hi @timwis,\nThank you for your observation.\nWhen we just started working on TestCafe here at DevExpress, our first users were DevExpress teams that work on ASP.NET projects and run NUnit tests against them. So we borrowed the term fixture from NUnit meaning a set of tests.\nI agree that most frameworks use the word fixture with a different meaning. However, the describe keyword is mainly used in BDD frameworks that support nested test sets. Note that we also have a suggestion to support BDD testing: https://github.com/DevExpress/testcafe/issues/792. And that's where we use describe instead of fixture.\nAs to our current test workflow, I feel like it is too late to make such a fundamental change switching from fixture to describe. This would be a major breaking change for all our users and we already have a number of them. After all, it is a matter of taste to rather prefer one or another keyword, isn't it?. Not quite polished. just the first try, please review. oh, and I forgot @miherlosev . Don't merge this before we update the website for v0.20.0 (at least).\nIdeally, we should merge this before releasing Studio.. There is nothing special in how you require modules in TestCafe test files. Are we going to duplicate documentation for Node.js?. ah, I see, okay. @testcafe-build-bot \\retest. @dirk-pieterse , please check the docs. @dirk-pieterse , please check the changes (or the whole doc if you wish). Duplicates https://github.com/DevExpress/testcafe/issues/2346. ping @MarinaRukavitsyna. @testcafe-build-bot \\retest. Fixed by https://github.com/DevExpress/testcafe/pull/2520. @AndreyBelym \n\nMaybe we should explain it using the z-index CSS property: MDN.\n\nWhich problem does mentioning z-index solve? If better (simpler) explanation - then I disagree, the word overlay is more simple and rather strict. If you want to say how the user could avoid overlaying (by specifying z-index), then that's a different story. A question to @miherlosev and @kirovboris:\nTo access the logger.requests property, we must wait for the request to happen, and, since we don't have waitFor, the only way to do this is to write an assertion.\nDon't you think that something is not okay with this? Write an assertion just to wait.... Discussed with @kirovboris in private. He said we should not introduce waitFor again. Since it's obvious that waiting via an assertion is awkward, I'll change the comment to remove words about waiting and pretend that this is a regular use of assertion. @kirovboris said that this example is synthetic, not a valid user scenario.\nWhen we learn about real use cases when custom waiting is necessary, we'll continue the discussion.\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. We have to wait until https://github.com/DevExpress/testcafe/issues/2216 is documented, don't we?. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @eaorak, could you please provide an example of a webpage and test code I could use to reproduce this behavior.\nI've tried testing a random website with a sticky footer with TestCafe v0.23.2. When I run my test in the UI mode, TestCafe seems to scroll to an element behind the footer automatically, I didn't have to scroll manually within a client function.\nAs to the headless mode, I haven't found good content that would allow me to ensure that TestCafe scrolls down correctly and clicks the correct element.\nSo, it would be of great help if you send a reproducible example.. I have questions regarding terminology.\n\nWhen I came across the root directory term I thought that maybe it's the base directory rather than the root** one. Root is something on the topmost level, while this is just a directory used as the base for relative paths to individual screenshots. @MargaritaLoseva What do you think?\nThe screenshot's relative path. I don't think that screenshots have a relative path. They have just the actual path to them, which is specified relatively to the base directory. Don''t get me wrong, when you say about how to specify this path, you can say that this is a relative path to the screenshot, but when you are talking about screenshots as in https://github.com/DevExpress/testcafe/pull/2620#discussion-diff-203966564R280 you'd better say something like: The captured screenshots are organized into subdirectories within the base directory. The default screenshot path patterns are used to define screenshots' path and name: (taking into account Dirk's correction).\n. @testcafe-build-bot  \\retest. Ignore the tests - when we update the website links will be alive.. BTW, please don't merge this until we establish the release date (I will rename the file accordingly). @testcafe-build-bot \\retest. All topics are ready. Oops, [WIP] actually. @dirk-pieterse please check the new portion of changelog. > Also update TypeScript definintions for these methods - https://github.com/DevExpress/testcafe/blob/master/ts-defs/index.d.ts#L1275\n\nIs this to me or to @LavrovArtem?. @dirk-pieterse please check the Quarantine Mode section. Ignore the tests - this link will be valid when we update the website. Ignore the tests - this link will be valid when we update the website. > When an incorrect call occurs in a chain of selector methods, the test run report now identifies the exact method that failed to match any DOM element.\n@churkin didn't like incorrect call in this phrase. I also have doubts regarding this part. Do you think it's okay? @DevExpress/testcafe-docs\nI implied that if a chain of selector methods includes a method that does not match any element, its call can be considered as incorrect.. > When an incorrect call occurs in a chain of selector methods, the test run report now identifies the exact method that failed to match any DOM element.\n@churkin didn't like incorrect call in this phrase. I also have doubts regarding this part. Do you think it's okay? @DevExpress/testcafe-docs\nI implied that if a chain of selector methods includes a method that does not match any element, its call can be considered as incorrect.. Dirk is on sick leave, but I still hope that someone could check this piece. So please don't merge until, say, 16:00.. Dirk is on sick leave, but I still hope that someone could check this piece. So please don't merge until, say, 16:00.. You are free to merge it now (regardless of the tests).. You are free to merge it now (regardless of the tests).. There are so many changes because locally on my and @MargaritaLoseva's machine Jekyll parses code in different ways (we will need to synchronize Jekyll and parser versions later). Now ignore it.. Thanks for fixing tests, @AndreyBelym. I forgot to update Travis settings. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Changed line endings manually, but the next time we will build the website, these changes will appear again.\nSo, we will commit them next time (when @AlexKamaev won't see them).. Theoretically, a hostname should be chosen in a way that allows the TestCafe server to be accessible from the outside world (the BrowserStack server, in your case). So, it depends on how your application is deployed on the Google App engine.\n\u00a0\nI've found a document for Google App that describes how to test and deploy apps: https://cloud.google.com/appengine/docs/flexible/nodejs/testing-and-deploying-your-app\n\u00a0\nTry to use a hostname specified in the Viewing your application section of this document and let me know if this works.\n\u00a0\nAs for the ports, if you can determine which ports are free on the Google App machine, specify two of them in the createTestCafe method. Otherwise, you can omit them - TestCafe will automatically select free ports.. @NickCis, @AndreyBelym, @miherlosev,\n\u00a0\nIn this release cycle, we have decided to change the way we store documentation for new features. Now we push docs for unreleased features to DevExpress:new-docs, while bug fixes in existing docs are still pushed to DevExpress:master. This way, we can update the website against DevExpress:master without risking publishing docs for unreleased features. We will merge DevExpress:new-docs into DevExpress:master before the release.\n\u00a0\nWith that said, I have to revert this pull request. I will open a new one against the DevExpress:new-docs branch with this content.\n\u00a0\nAnyway, @NickCis, thank you for contributing to TestCafe and I apologize for any inconvenience.. > Move testcafe-live-promo div in features div, because now there is extra indent\nWhy not just remove the indent? I'm tired of moving things specially for the mobile version - hate extra js.. > Bottom part looks broken on ipad\nDo you mean only the Twitter/GitHub part or the Studio promo too (the screenshot)? (I hope not the screenshot because I don't want it to scale)\n. > Look at the line (on ipad event without cookie note)\nIsn't it a browser artifact? It appears only when you zoom - and it doesn't appear at 100%.\nOr you think the reason is in CSS?\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. phhhhhhh... even if I create a new pull request, the same tests as in the previous pull request run. Maybe we need to tweak the @testcafe-build-bot? Or this is not because of it?. why? is hangs too informal?. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @mornatan, you can use both types of quotes in the configuration file.\nYou are right, standard JSON supports only double quotes, but TestCafe configuration file uses JSON5, a superset of JSON. It adds support for single quotes.. @testcafe-build-bot \\retest. Also, we have a strange link in the Documentation section:\nhttp://devexpress.github.io/testcafe/documentation/using-testcafe/\nIs it deliberately Using TestCafe even though the default help topic is Getting Started?\nhttps://devexpress.github.io/testcafe/documentation/getting-started/\n(and it's not HTTPS by the way). Not checked with Dirk yet, just for your consideration (don't merge until it's checked pls). @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @sijosyn,\n\u00a0\nI've tried to reproduce the behavior you described but most of the time the test failed at the last assertion. Only once Edge tried to reload the tested page as you said.\n\u00a0\nAt the same time, I've noticed that the website produces a lot of errors:\n\u00a0\n\n\u00a0\nThe markup is also incorrect (note the <script> tag after the closing </html> tag):\n\u00a0\n\n\u00a0\nTaking all this into consideration, it is hard to say whether the cause of the described behavior lies in TestCafe or the website itself. Could you please fix the website and try running this test again.. @sijosyn We faced such an error when a browser tried to open a page to which it navigated in a new window. This error occurs because TestCafe does not support testing in multiple windows.\n\u00a0\nTo determine if this is what happens in your case, we need you to collect debug information.\n\u00a0\nExecute the following command before running TestCafe:\n\u00a0\nsh\nexport DEBUG=\"testcafe*\"\n\u00a0\nThen, run the test and send us the output.\n\u00a0\nRegarding performance issues, how many times did you run tests to collect these statistics? Taking into account that your demo website is rather unstable, we need statistics based on 10 runs or more in different browsers.. Test will fail with the following link \nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--sf---stop-on-first-fail\nBut it will be alive as soon as we publish the website. So ignore it and merge.. The same link that can be ignored for now.. Hi @dwaltrip,\nDocumentation at https://testcafe.devexpress.com is not out of date, it describes a different tool - a paid web testing framework released in 2013. This tool is still in use.\nYou can learn more about TestCafe versions in our FAQ.\nAlthough we cannot remove these docs, we will try to come up with a better way to indicate a TestCafe version to which this documentation relates.. @testcafe-build-bot \\retest. Of course, links to the Support page are broken until we merge the main PR. We may wait until that.. @testcafe-build-bot /retest. Let's show it to Dirk before we merge. But first, @Nuarat, please check that Analytics works okay. @Nuarat is busy, I've checked the analytics and it seems to work (as far as I understand). found a bug, one moment. Commited a fix here and pull requested to the repo: https://github.com/DevExpress/testcafe-gh-page-assets/pull/69\nNow the popup is opened at the right position.. oookay. I have managed to replicate this behavior. Our team will research it and find a suitable solution if any.. Renamed the topic, reflected changes regarding 'mock requests not responses' and added info about access-control-allow-credentials.\nHope everything is correct now.. Renamed the topic, reflected changes regarding 'mock requests not responses' and added info about access-control-allow-credentials.\nHope everything is correct now.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Done\nhttps://devexpress.github.io/testcafe/documentation/continuous-integration/. Moved to https://github.com/DevExpress/testcafe/issues/3270. This test fail has nothing to do with the changes. It's just that http://viewportsizes.com/ is down.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @helen-dikareva proposed to group some other recipes as well (not in a tab - just a section): for instance, debugging.\nLet's try that.. http://strelyaev-w8:8080/testcafe/documentation/recipes/. Removed the excessive commit, so everyone approved, can we merge?. @testcafe-build-bot \\retest. @nicgirault, thank you for your proposal.\nI agree that TestCafe could benefit from more informative assertion messages. However, we are technically unable to implement the message you propose with the current assertion system.\nRegarding custom assertion messages, you can pass them in the assertion's message parameter. See https://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#ok.\nYou can hardcode a custom message for each assertion or generate messages dynamically if required (so that they can include a CSS selector). However, the best practice is to provide a detailed individual message for each assertion instead of generating them from a template.\n@hdorgeval, thank you for your idea. However, it is difficult to process two proposals in one issue. Could you please create a separate issue for your suggestion?. @timnederhoff, thanks, I have reproduced the behavior you describe with v0.23.3-alpha.4.\u00a0This behavior looks incorrect.\u00a0We will research it and provide a fix.. I tried to reproduce the described behavior on several websites, but my attempts were unsuccessful.\nThe src-hammerhead-stored-value attribute did not change regardless of the hook. The img[src=...] selector also did not fail because it takes into account src-hammerhead-stored-value rather than src.\nCould you please provide a webpage where I could reproduce the behavior you encountered?. Technically, there are user actions processed by webpages and actions that use integrated browser features. For instance, when you press Ctrl+A to select text, this action is processed by a webpage. When you double-click a word, it is selected by the browser.\nTestCafe can only emulate actions processed by webpages. This limitation is imposed by TestCafe specifics and cannot be overcome. The action you are asking about is processed by the browser and thus cannot be emulated by TestCafe.. We tried to open this webpage in a regular way in Chrome and discovered that this notification bar appears only when the HTTPS connection is used.\nTestCafe connects to websites over HTTP by default. However, you can configure it to use HTTPS.\nSee the Connect to TestCafe Server over HTTPS topic to learn how to do this.. Thank you for your proposal. We will take it into account during further planning.. Note that every line in the callstack shows line and column numbers that locate a place in code where the exception occurred. This helps pinpoint the error origin while keeping the report brief.\nHowever, I agree that a verbose report could be useful in certain cases. At the same time, I cannot promise that we will create such a reporter in the nearest future. You can try to do this yourself. Use our Reporter Plugin guide for help.\nAnd feel free to ask us for assistance should you face any difficulties.. Thank you for your proposal. We will consider this feature during our future planning.. oops, fixed. Although some people say that --net=host is not secure, what do you think, @AndreyBelym \nBut it's easy - and that's what's good about it . phew, how complex it is! now it's all correct I hope?. FPR. Oh, @miherlosev is not in @DevExpress/testcafe-docs , sorry. @AndreyBelym What do you mean?\nWe have links like these:\nhttps://github.com/DevExpress/testcafe/pull/3271/files#diff-86632aca5e5461a2e4b0661566184cbbR123\nin the bottom of every section in the config file topic.. @dej611, we really appreciate your efforts.\nYet, is there any particular reason why you did not use the TestCafe Docker image\u00a0in this tutorial? We generally recommend it if there are no factors that prevent this. This image is based on Alpine Linux and contains Node.js, TestCafe, Chromium and Firefox. This should be enough for the tutorial purposes - you won't need to install anything.\nBefore you start making changes (if you decide to do so), I'd like to draw your attention to the specifics connected with this approach. The CI system should run the /opt/testcafe/docker/testcafe-docker.sh script instead of the testcafe command to prepare the image for running browsers. You can use the GitLab recipe\u00a0as an example. Yet, unlike GitLab, Bitbucket doesn't seem to require overriding the entrypoint - you can try to omit this setting.\nAt the same time, I believe we should leave your approach as an alternative option. We could start with a description of how to use the TestCafe image and then mention that users can also install TestCafe in a different image. Just as we do in the GitLab\u00a0recipe.\nWhat do you think about this option?. @dej611, I apologize for the delayed response. There was too much work with the upcoming v1.0.0 release.\nI was going to give this doc a closer look and suggest specific changes.\nAnyway, thank you for taking the initiative - I appreciate it a lot!\nAt first glance, the topic looks great, good\u00a0job!\nI wish I could review it in detail ASAP, but I'm afraid I won't be available for one more week.\nI'm thinking of taking this pull request over from you and fixing some minor things by myself - I don't want to bother you with commas, indentation or word choice.. One thing though - now the parameter that specifies the output file in the config is called outStream, just as in JS API.\nWhen I look at the discussion in the chat, I see you've suggested a better version - file or fileName.\noutStream is good in API because you can pass a Stream object, but in config it's just a name.\nCan we rename it to fileName or file in the config and leave it as outStream in JS API?\n. You are right, we are getting this kind of reports occasionally. However, we were not able to reproduce this error on our side so far, that's why we could not address it.\n\u00a0\nThis makes us believe that these issues are caused by resource shortage or network problems.\n\nThere's apparently some half-implemented retrying for the proxy already\n\nDo you mean the retryTestPages flag? Have you tried it?\n\u00a0\nIf you haven't, please take note of it. You can pass retryTestPages as the sixth (undocumented) parameter to the createTestCafe function when you create a TestCafe server from JavaScript API.\n\u00a0\njs\nconst createTestCafe = require('testcafe');\n\u00a0\ncreateTestCafe('localhost', 1337, 1338, null, false, true)\n    .then(testcafe => {\n        const runner = testcafe.createRunner();\n        /* ... */\n    });\n\u00a0\nThis flag was designed to make TestCafe work stable in harsh network conditions. Please try it and let us know if it helps.\n\u00a0\nIf you still see this error, then we need to do further debugging and that's where we may need your help. As long as it's hard to reproduce this issue on our side, it would be great if we could collect some additional debugging info in your environment. In this instance, we will ask you to fork TestCafe, add some console output in certain places in code and try to run your tests as you usually do.\n\u00a0\nWould you be able to do that?. Thank you for reporting this!\nI'll try your approach in Travis CI and if it works for me as well, I'll update the tutorial accordingly.. Thank you for noticing that and your contribution!. FPR. Thanks, @AndreyBelym , it's fine now. This way it looks better. FPR. Made the following changes:\n\nRemoved the trailing slash as @kirovboris suggested,\nDescribed the default video recording behavior,\nRenamed a section Paths Where Screenshots and Videos Are Saved -> just Where Screenshots and Videos Are Saved,\nRestored some lost old info in the CLI topic (about cmd.exe specifics).. @testcafe-build-bot \\retest. After we merged that PR https://github.com/DevExpress/testcafe/pull/3391 test will fail.\nIgnore them if they're just about the config file link.. FPR. @testcafe-build-bot \\retest. Please review the What Improved sections (do you feel like the name is okay?) - and I'll copy them to the changelog.. @testcafe-build-bot \\retest. We could probably move the examples closes to the wording I've just added... but... I kind of like how they are organized into subsections and referenced from the topic's introduction now.. Note that it's PRed against master not new-docs so let's merge it when we release.\n\nJust check now pls.\n. A link to the migration guide will be broken.\n. no, a different link is broken - and that's totally okay. Oops, oh, sorry, fixed. Reopened as https://github.com/DevExpress/testcafe/pull/3471. FPR. What about a table?\n\n. @helen-dikareva \nNot exactly how I imagined it... What about this?\n\n. okay, done\nhttp://strelyaev-w8.corp.devexpress.com:8080/testcafe/faq/#what-is-the-difference-between-testcafe-studio-and-open-source-testcafe. Reopened https://github.com/DevExpress/testcafe/pull/3462 to fix tests. As far as It's been approved previously, I'm merging it. Thanks, @AlexKamaev . It was the Past tense - was and were - in the message approved by Dirk, not are and is.. > Also, we decided to add in the roadmap the features that are implemented already - configuration file, video recording and live mode. This should show that we are already implementing the features from the roadmap.\nWe now say that here are the features we are working on. It's clear and understandable. The roadmap is \"dynamic\" - we add and remove features as we progress.\nIf we do as you say, we should write something like Roadmap 2019 - here are the features planned for the year 2019. And then, yes, we can have a static list of features and update their statuses.. Otherwise, it will be confusing. FPR. @miherlosev , take a look please!. @AndreyBelym please check. we use tag names that differ from html tags to ensure unambiguous correspondence\n. add gaps with length equal to the length of the actual prefix\n. Abnormally long loading time of the IFrame occurred\n. or just: IFrame target loading timed out\n. probably: XMLHttpRequest timed out\n. maybe: IFrame loading timed out\n. When using local connections, we should close the browser before closing the connection. For this, we close connections in the getStatus function.\n. We should have the capability to initialize scripts with different contexts. This is required for iframes without the src attribute because Hammerhead does not inject scripts into such iframes. So, we wrap all scripts with initialization functions.\n. We should have the capability to initialize scripts with different contexts. This is required for iframes without the src attribute because Hammerhead does not inject scripts into such iframes. So, we wrap all scripts with initialization functions.\n. We should have the capability to initialize scripts with different contexts. This is required for iframes without the src attribute because Hammerhead does not inject scripts into such iframes. So, we wrap all scripts with initialization functions.\n. WARNING: this file is used by both the client and the server. Do not use any browser or node-specific API!\n. The global __waitFor is used to ensure that the page is ready for the next step to be executed.\nUsage: call the global __waitFor wherever required (test file, wrappers, modules, etc). The arguments are identical to the act.waitFor function arguments.\n. should one override THIS METHOD or THESE METHODS?\nI suppose the first, so:\nOverride this method to suppress native dialogs until the test runner in the iFrame gets initialized.\nBut check if this is what you actually meant!\n. Then OK\nOverride these methods to suppress native dialogs until the test runner in the iFrame gets initialized.\n. test-fail-report-lister ?\n(no)\n. if I get it right, this tool displays all possible reports' copy and that's it. Designer is something that allows you to create, edit and save things.\nSo... \n. Join the brainstorm, @MargaritaLoseva \n. reporter-message-lister\nreporter-message-inspector\n?\n. report-design-viewer\n. oh, I seem to have missed it\nError at step\n. Error at step\n. Error at step\n. Error at step\n. Error at step\n. Error at step\n. Error at step\n. Error at step\n. Error at step\n. strings differ\n. strings differ\n. strings that differ\n. strings that differ\n. strings differ in the middle\n. objects that are \n. objects that are \n. Check for...\n. Compare...\n. Enter the reporter type (e.g...\n. maybe, report decorator? or just \"decorator\"?\n. Wait for...\n. Wait for...\n. Wait for...\n. Should xunit and json reporters use the plain text decorator\nor, if we want a really thoughtful one,\nShould reporters that target machine-readable formats always use the plain text decorator\n. oh, 'it' reads...\nthen, yes, let's take your version\n. yeah, that's what always puzzled me in test names =)\n. I like the name noTestsToRun, and I'd use it as the first sentence.\nNo tests to run. Either the test files contain no tests or the filter function is too restrictive.\n. I feel like the fact that you can't run tests against disconnected browsers is a truism, though it fits well as a property name. So, I would go for something like:\ncantRunAgainstDisconnectedBrowsers: 'The following browsers disconnected: {userAgents}. Tests won't be run. This problem may appear when a browser hangs or is closed, or due to network issues.',\n(unchecked)\n. okay then, the final (and checked) version:\ncantRunAgainstDisconnectedBrowsers: 'The following browsers disconnected: {userAgents}. Tests won't be run.',\n. Should raise an error if the browser gets disconnected before bootstrapping\n. Should raise an error if multiple browsers get disconnected before bootstrapping\n. an error\n(while I'm hunting for articles)\n. an exception\nthe filter\n. Should raise an exception if the connection breaks while tests are running\n. NOTE: the '-list-browsers' option only lists browsers and immediately exits the app.\nTherefore, we don't need to process other arguments.\n. NOTE: give a process time to flush the output.\nIt's necessary in some environments.\n. NOTE: add a blank line\n. optionValueIsNotValidRegExp:        'The \"{optionName}\" option value is not a valid regular expression.',\nportNumberIsNotInteger:             'A port number should be a valid integer.',\nportsOptionRequiresTwoNumbers:      'The \"--ports\" option requires two numbers to be specified.',\nportIsOccupied:                     'The specified {portNum} port is already in use by another program.',\ninvalidHostname:                    'The specified \"{hostname}\" hostname cannot be resolved to the current machine.'\n. the correctors need some more time\n. ```\nIn the browser list, you can use aliases (e.g. \"ie9\", \"chrome\", etc.) as well as paths to executables.\nTo run tests against all installed browsers, use the \"all\" alias.\nTo use a remote browser connection (e.g. to connect a mobile device), specify \"remote\" as a browser alias. If you need to connect multiple devices, prefix the alias with the number of browsers you want to connect (e.g., \"3remote\").\nYou can use one or more file paths or glob patterns to specify which tests to run.\nMore info: http://testcafe.devexpress.com/Documentation/CLI\n-b, --list-browsers             output the available browser aliases\n-r, --reporter            specify the reporter type to use\n-p, --report-path         specify the path to which the report file should be saved\n-s, --screenshots         enable taking screenshots and specify the path to save them to\n-S, --screenshots-on-fails      take a screenshot whenever a test fails\n-q, --quarantine-mode           enable the quarantine mode\n-e, --skip-js-errors            make tests not fail when a JS error happens on a page \n-t, --test                run only tests with the specified name\n-T, --test-grep        run only tests matching the specified pattern\n-f, --fixture             run only fixtures with the specified name \n-F, --fixture-grep     run only fixtures matching the specified pattern \n--ports            specify custom port numbers\n--hostname                specify the hostname\n--qrcode                        display QR-code you can use to easily establish remote connections\n. one more - `it's` -> `its`\n. or even better\n`Should parse the screenshot path and ensure it exists`\n. What we discussed was the _Markup Creator_. If it's actually the _Indicator_ - that's a different story. I feel like that's a technical question for you, guys,\nIf it was .NET (sorry), the first thing would be non-visual, while the second would probably be a visual control. I think this is not the same with JS... So, if you typically give \"control-ish\" names to classes that create markup - then yes, this is an _indicator_.\n. then ok, `StatusIndicator`\n. oops... 'them' doesn't relate to anything anymore...\n`enable screenshot capturing and specify the path to save the screenshots to`\n. yep\n. The test should not fail if we can't make a screenshot for some reason\n. //NOTE: we remove indentation before the first line because the message template already contains the indent.\n.\n    //NOTE: In MS Edge, if an iframe is removed from DOM, the browser throws an exception when accessing window.top\n    //and window.frameElement. Fortunately, setTimeout is set to undefined in this case.\n.\n    //NOTE: Cross-domain iframes in Firefox have null in frameElement even if they are in DOM\n    //But Firefox doesn't execute scripts in removed iframes, so we suppose that the iframe is in DOM\n. _action screenshots_ (`hasActionScreenshots`) ? ... matches `act.screenshot()`\nor even _test screenshots_ (`hasTestScreenshots`) may well oppose _error screenshots_\n.\n//NOTE: We should save the last hovered element between runs because of T286582\n.\n                    //NOTE: if lastHoveredElement was in an iframe that has been removed, \n                    //IE raises an exception when we try to compare it with the current element\n```\nI suggest that we rename the variable\n. asyncTest('T286582 - A menu item has a hover state in jssite tests, but it is not hovered', function () {\nI've renamed the ticket\n. To connect a remote browser #${i + 1}, use it to open \n. or scan\n. oops\n. console.log('or scan this QR-code:\\n');\n. Can a directive be defined or redefined? It's not a variable or an identifier so... I guess no.\n'(line %s): @fixture duplicated. The @fixture directive can only be used once per test fixture file.',\n. '(line %s): @page duplicated. The @page directive can only be used once per test fixture file.',\n. m('(line %s): Network authentication credentials have an incorrect format. Use the following format ' +\n              'for the @auth directive: \"@auth username:password\".',\n. '(line %s): The required file \"%s\" is already included.',\n. '(line %s): Misplaced directive. Directives (@fixture, @page, etc.) should be declared ' +\n                'in the global scope.',\n. '(line %s): Misplaced test directive. Tests should be declared in the global scope.',\n. '(line %s): Test with name \"%s\" already exists.',\n. '(line %s): Test with name \"%s\" already exists.',\n. '(line %s): Test name is not specified.',\n. '(line %s): Invalid test assignment. A test should be an object.',\n. '(line %s): Action call is not the last statement in a step. Test steps ' +\n                'should not contain statements that follow an action call.',\n. '%s: Fixture name is undefined. Test files should contain the @fixture directive.',\n. '%s: Page URL is undefined. Test files should contain the @page directive.',\n. '(line %s): Async function call. Tests should not call asynchronous functions. ' +\n                'Use act.wait() instead.',\n. '(line %s): Action call in shared code. Actions can be used within test steps only.',\n. '%s: Failed to load the required file \"%s\".',\n. '(line %s): The required module \"%s\" does not exist.',\n. 'Failed to write test fixture code to \"%s\".',\n. '(line %s): Misplaced mixin directive. Mixins should be declared in the global scope.',\n. '(line %s): Mixin name is not specified.',\n. '(line %s): Invalid mixin assignment. A mixin should be an object.',\n. '(line %s): Test step is not a function or mixin.',\n. '(line %s): Mixin step is not a function.',\n. '(line %s): Mixin step doesn\\'t contain any code.',\n. '(line %s): Mixin doesn\\'t contain any code.',\n. '(line %s): Test case name is not a string.',\n. '(line %s): Duplicated test case name \"%s\". A test case should have a unique name.',\n. // NOTE: we should not stop the test run if an error occured during page unloading because\n    // we would destroy the session in this case and wouldn't be able to get the next page in the browser.\n    // We should set the deferred error to the task to have the test failed after the page reloading.\n. // NOTE: we should not create multiple screenshots for a step. Create a screenshot\n    // if it's the first error at this step or it's an error that occurs on page initialization.\n. //NOTE: since v.14.1.5 it's recommended to run actions using the inIFrame function. But we should support old-style iframes,\n                //so it'll be resolved here.\n. Nope - it will be grammatically incorrect\n. cool! almost perfect! =)\n// NOTE: swallow the error silently if we can't take screenshots for some reason (e.g. we don't have permissions to write a screenshot file).\n. sht... sorry, my mistake - have the test fail\n// We should set the deferred error to the task to have the test fail after the page reloading.\n. // NOTE: we should keep the page url in document.title\n    // while the screenshot is being created\n. // NOTE: in fact we can suspend the iterator before\n    // the next step or an async action run\n. // NOTE: these options will be handled by chalk internally\n. // NOTE: To support piping, we use stderr as the\n. // NOTE: we can use the spinner only if stderr is a TTY,\n        // otherwise we can't repaint animation frames\n(if repaint is ok here)\n. // NOTE: we should escape the test name because it may contain markup (GH-160)\n. // NOTE: Android and iOS ignore the size and multiple attributes, all select elements behave like select with size=1\n. asyncTest('in select elements with \"size\" more than 1, click on an option raises an error when the option list is collapsed', function () {\n. asyncTest('in select elements with the \"multiple\" attribute, click on an option raises an error when option list is collapsed', function () {\n. asyncTest('click on the \"select\" element with the \"size\" attribute greater than one, then click on an option', function () {\n. asyncTest('click on the \"select\" element with the \"multiple\" attribute, then click on an option', function () {\n. asyncTest('click on an option (the select size is more than the option count)', function () {\n. //NOTE: IE11 sets selectedIndex = -1 after setting attribute size != 1\n. ...sets..\n. ...sets..\n. asyncTest('press down/up in select with \"size\" more than the option count', function () {\n. asyncTest('press right/left in select with \"size\" more than the option count', function () {\n. ...sets...\n. module('mouse actions with the \"select\" element with the \"multiple\" attribute');\n. module('mouse actions with select with the \"groups\" option and size more than one');\n. //NOTE: when setting the selected option, IE and Mozilla scroll the select\n. //NOTE: when setting the selected option, IE and Mozilla scroll the select\n. //NOTE: when setting the selected option, IE and Mozilla scroll the select\n. //NOTE: when setting the selected option, IE and Mozilla scroll the select\n. //NOTE: when setting the selected option, IE and Mozilla scroll the select\n. module('press actions with select with the \"groups\" option and size more than one');\n. // NOTE: shallow-copy connections, because `this.connection`\n        // will be modified inside `releaseConnection`.\n. standard calls such fields fields that blocks implicit submission\nso, maybe blocksImplicitSubmission(el)\n. this is a weird name, but it's standard - I'm not sure we need to coin a new one\n. <code data-type=\"api\">__waitFor</code>: user function's timeout exceeded.\n. yep, so\n<code data-type=\"api\">__waitFor</code> action's timeout exceeded.\n. // We must delete both listeners from the browser connection after\n        // one of them is executed to avoid exceeding the subscribers limit.\n. // NOTE: If a thenable is returned from the onResolved/onRejected handler, it will be resolved.\n                // So, in order to get a promise from a `then` block, we need to wrap it in another object.\n. // NOTE: Don't let the test finish by emitting the task's 'done' event\n. yeah, after the docs is ready so that it's safe to deploy\n. VS Code looks for it in the root.\nOf course, I can live without VS Code highlighting rule violations - if this file is a mess here.\n. I was thinking in a different way: we have nothing to do until docs are not okay, So, lint is executed at first, without a parallel task.\n. Cool! Didn't know that!\n. I was afraid of losing working code... \nBut you're right, I'll keep it somewhere else so far\n. As far as we now stop the server with Ctrl-C - yeah, no need\n. No longer need - thanks to Ctrl-C\n. That's what I tried to do at first, but got some strange mess and resorted to sequential execution.\nShould have investigated it, sure...\n. Ooops. Forgot about Macs. Need to use jekyll for Mac and jekyll.bat for Windows\n. jekyll doesn't work on Windows with spawn\nhttp://stackoverflow.com/questions/17516772/using-nodejss-spawn-causes-unknown-option-and-error-spawn-enoent-err/17537559#17537559\n. yeah, I know, I added it to make the prepare-website task describe what this preparation consists of.\n. This does not describe createTestCafe - it describes the TestCafe class.\nArgs are listed where createTestCafe is described - /testcafe/documentation/using-testcafe/programming-interface/global/#createTestCafe\n. Look at the following lines\n```\nsrc(source) \u2192 this\nsrc([source, ...]) \u2192 this\n```\nThey already imply that you can pass a source or an array of source\nOr do you think that src([source, ...]) is non-standard and confused with optional arguments?\n. I use the anchor class to make scrolling to anchors work ok with the fixed top menu.\nhttp://stackoverflow.com/questions/10732690/offsetting-an-html-anchor-to-adjust-for-fixed-header\nAnd I just got used to hyperlink wrapping - we use it on our current site.\nSo, you say that GitHub renders the whole thing of reporter(name, outStream) \u2192 this as an anchor?\n. Oh, I feel like I need some details on this...\n. // NOTE: T299665 - Incorrect click automation for images with an associated map element in Firefox\n    // All browsers return the <area> element from document.getElementFromPoint, but\n    // Firefox returns the <img> element. We should accomplish this for Firefox as well.\nI have changed the ticket subject accordingly\n. //NOTE: try to find a multi-line link by its rectangle (T163678)\n. //NOTE: the 'mousemove' event is raised before 'mouseover' in IE only (B236966)\n. //NOTE: we need to add an extra 'mousemove' if the element was changed because sometimes\n        // the client script requires several 'mousemove' events for an element (T246904)\n. // NOTE: the mousemove event can't be simulated at the point where the cursor\n            // was located at the start. Therefore, we add a minimal distance 1 px.\n. // NOTE: in all browsers except Firefox, the 'focus' event fires as we simulate a click on a label with the 'for' \n// attribute. So, we should call 'focus' in Firefox manually in this case.\n. // NOTE: if a line and rect have two intersection points, we return the nearest to startLinePoint\n. // HACK: we can't get the element under the cursor in a cross-domain iframe in IE without hiding the cursor.\n// Instead, we make the 'getElement' method asynchronous and set the cursor to a position one pixel farther.\nDid I get it right? We make the 'getElement' method asynchronous?\n. // NOTE: For IE, we can't use the touch cursor in a cross-domain iframe\n        // because we won't be able to get an element under the cursor\n. // NOTE: in touch mode, the pointer should be in the center of the cursor\n. In most browsers, the iframe's getElementFromPoint function ignores elements from the parent frame. But in IE it doesn't, and our cursor overlaps the target element. So, we move the cursor to a position one pixel farther to avoid this.\n. What about this?\n. Copy a link? Reference?\n. I mean, this is a good thing to implement but it has nothing to do with headers... currently, at least.\n. ah, search engine - I see\n. this one\nhttps://github.com/DevExpress/testcafe/pull/298#discussion_r50410478\n. I thought about it but finally decided that it's better to show as much as possible in the example, while adding a note that it's not always required.\nThis example is not a getting started after all.\n. I'd rather have it here.\n. BTW, looking for a way to do this automatically - both generating anchors from headers and adding a way for a user to copy a link to an anchor\n. it('Should fail when there is no onerror handler', function () {\n. it('Should fail when the loaded page throws an error', function () {\n. it('Should success when an error is raised in a cross-domain iframe', function () {\n. it('Should fail when there is no onerror handler (skipJsErrors enabled)', function () {\n. it('Should success when the onerror handler returns true', function () {\n. it('Should success when the loaded page throws an error (skipJsErrors enabled)', function () {\n. '@test'['cross-domain iframe test'] = {\n. '@test'['same-domain iframe test'] = {\n. // NOTE: When taskPromise is cancelled, it is removed from the pendingTaskPromises array, which leads to shifting indexes\n        // towards the beginning. So, we must copy the array in order to iterate it, or we can perform iteration from the end to the beginning.\n. // NOTE: When taskPromise is cancelled, it is removed from the pendingTaskPromises array, which leads to shifting indexes\n        // towards the beginning. So, we must copy the array in order to iterate it, or we can perform iteration from the end to the beginning.\n. // HACK: for npm v2 installations, we need to expose our node_modules,\n        // so that Module will be able to require babel-runtime.\n. // NOTE: remove global API so that it will be unavailable for the dependencies\n. Would be great! What if we file an issue and do this in a separate PR.\nI'm already working on anchors in my master\n. I also didn't like that this text was duplicated.\n. So we had to change code structure\n. As I see, a good output would be\n```\nConnecting remote browsers...\nNavigate to the appropriate URL from each of the remote browsers.[ You can either enter the URL or scan the QR-code].\n browsers are expected to connect. [1 browser is expected to connect.]\nBrowser #: \n[]\n.\n        // Unnecessary typing happens if an element was changed after the keydown/keypress event (T210448)\n        // In IE, this error may occur when we try to determine if the removed element is in an iframe\n.\n        // NOTE: if a user presses enter when a form input is focused and the form has a submit button,\n        // the browser sends the click event to the submit button\n.\n    // NOTE: we should separate the '+' symbol that concats other keys and the '+'  key to support commands like the 'ctrl++'\n. to provide the reference and to outline the workflow are quite different things\n. Don't think so.\nWe have two parts here: a brief _overview_ like a 'getting-started' and _reference_.\nAnd they are two different parts.\nSo, you suggest that the overview is the introduction to the reference...\n. You must mean way no. 4 \nhttp://stackoverflow.com/a/21583831/4762842\n?\n.\nBrowser List\n    Local Browsers\n    All Browsers\n    Remote Browsers\n```\nShouldn't All Browsers be a subsection or Local Browsers ?\n. > The browsers can be specified by aliases as well as by paths.\nIf you are talking about the sample, 'the browsers are specified'\nIf you are saying this in general, this should belong to the previous paragraph (which already says this, BTW)\n. An unexpected (or incomplete) imperative sentence.\nJust specify! (or what?)\n. > You can also use the --qr-code option to get QR-codes that represent the same URLs.\nTo display ?\n. > _Enables screenshot capturing and _specify the directory path to save the screenshots to.\n. > For example, the following command launches the Internet Explorer browser and runs only the \"Click a label\" test from the sample-fixture.js file in it.\nIn it - in the test?\n(can be omitted, I think)\n. may we add a modifier to file-or-glob ?\nlike src or fixture?\nsh\ntestcafe [options] <browser-list-comma-separated> <src-file-or-glob ...>\ntestcafe [options] <browser-list-comma-separated> <fixture-file-or-glob ...>\n@MargaritaLoseva @inikulin \n. See the up-most comment about the modifier for file-or-glob\nIt all started with me looking at this title at thinking like it doesn't say a lot.\nSo, I'd change it accordingly\n. > You can also specify only a directory to run tests from.\nDo we really need to repeat this?\n. Sure.\nFirst, I wanted to make it in the same pull request, but then, for some reason, I decided (or @inikulin convinced me to) do it in a separate PR - I don't remember why\n. Probably, that reason does not make sense any longer \n. Right!\n. > we have link to the officially supported reporters \nSo, if we don't make a separate doc, we have to add these links to the CLI topic as well\n@MargaritaLoseva \n. I'll go through typos a bit (if you don't mind)\n\nfiles that matches\n. > directories(separated by a space)\n\nseparated by a space is not... well... separated by a space\n. > prefix alias\nneeds an article\n. > tells TestCafe generate\nto got lost\n. Seems like it slightly differs from what we have in \nhttps://github.com/DevExpress/testcafe/pull/298/files#diff-679a3d497074db631b0e722a5db01a5eR238\nParticularly, the point about marking tests failed if they fail in all attemts\n. Style:\nTo me, it offends the eye a little bit when you say by itself about software.\n. > the certain\nif you don't mean 'inevitable' - let's remove the article\n. > runs test\nan article required\n. in the command line ?\n. in the command line ?\n. time to add the link destination\nand lgtm\n. // NOTE: in IE, focus is not raised if the element was focused\n                // before the click, even if focus is lost during the mousedown\n. // NOTE: if focus is called for a non-contentEditable element (like 'img' or 'button') inside\n        // a contentEditable parent, we should try to set the right window selection. Generally, we can't\n        // set the right window selection object because after the selection setup, the window.getSelection method\n        // returns a different object, which depends on the browser.\n. // NOTE: in WebKit, if selection was never set in an input element, the focus method selects all the text\n        // in this element. So, we should call select before focus to set the caret to the first symbol.\n. // NOTE: we should call focus for the element related with a 'label' that has the 'for' attribute\n. // NOTE: if a different element was focused in the focus event handler, we should not set selection\n. // NOTE: we can't avoid the element being focused because the setSelection method leads to focusing.\n            // So, we just focus the previous active element without handlers if we don't need focus here\n. //NOTE: we need setTimeout to wait for focus in IE\n. //NOTE: we need setTimeout to wait for focus in IE\n. // NOTE: strange behavior in Chrome - for some elements (e.g., for the 'font' element)\n    // scrollHeight is 0, so we use getBoundingClientRect\n. // NOTE: the second action argument is a dom element or a text node\n. // NOTE: We should find a common element for the nodes to perform the select action\n. // NOTE: if selection ends on an invisible symbol, we should try to find the last visible selection position\n. // NOTE: in WebKit and IE, the mousedown event opens the select element's dropdown,\n                // Therefore, we should prevent mousedown and hide the dropdown (B236416)\n. // NOTE: If the target element is a child of a contentEditable element, we need to call focus for its parent\n. // NOTE: The same cursor position may correspond to different nodes, so, if we\n        // know which nodes should be selected eventually, we should select them directly.\n. excessive comma\n. // NOTE: If the calculated startNode and endNode do not match the automation options, we should recalculate them\n. Well, it may well be enough, but since we decided that it's a rough place and we should leave a comment here, I would go with a couple of words in addition.\n// NOTE: uploadedFileArrays contains arrays of files\n        // added for upload from each of the browsers.\n        // uploadedFileArrays = [browserXUploadedFiles, browserYUploadedFiles, ...];\n. it('Should succeed when uploading a file', function () {\n. it('Should succeed when uploading multiple files', function () {\n. '@test'['Upload by using an added element'] = {\n. '@test'['Upload by using a replaced element'] = {\n. '@test'['Upload by using a removed element'] = {\n. // HACK: prototype properties don't work with built-in subclasses\n. just thought that we don't specify a test source file - we specify the path\nthat's why we can just say\ncantFindTestSource:        'Cannot find a test source file at \"{path}\".',\ncan't we?\n. // FIXME: Babel errors always contain POSIX-format file paths.\n. // (it treats error messages as stack frames).\n. // NOTE: we need to workaround the compiler's test file assertion\n// (to treat a file as a test, it requires at least one fixture definition\n//  with the string argument).\n. // NOTE: we need to workaround the compiler's test file assertion\n// (to treat a file as a test, it requires at least one fixture definition\n//  with the string argument).\n. // NOTE: use named functions so that they appear in the stacks\n. > Last step is 4th\nWhat do you mean? '4 steps in total'?\n. hmmm... you are talking about how many times a test is launched in a quarantine, don't you?\nso maybe they are not steps but rather attempts or runs?\n. // NOTE: 4 runs in total:\n    // failing sequence: 1st run - fail, 2nd - pass, 3rd and 4th - fail\n    // passing sequence: 1st run - fail, 2nd, 3rd and 4th - pass\n. // NOTE: Failing sequence: 1st run - fail, 2nd - pass, 3rd and 4th - fail\n. // NOTE: 4th run is the last one\n. // NOTE: Passing sequence: 1st run - fail, 2nd, 3rd and 4th - pass\n. throw new Error('Test should have failed but it succeeded');\n. here it's better to use when instead of if\nand an iframe\n. // NOTE: in WebKit and IE, mousedown event opens the select element's dropdown,\n                // therefore we should prevent mousedown and hide the dropdown (B236416)\n. // NOTE: In some cases, mousedown may lead to active element change (browsers raise blur). We simulate\n        // the blur event if the active element was changed after the mousedown, and the blur event does not get raised automatically\n        // (B239273, B253520)\n. // NOTE: In whatever way an element is blurred from the client script, \n                // the blur event is raised asynchronously in IE (in MSEdge focus/blur is sync)\n. // NOTE: For contentEditable elements, we should call focus directly for action's element because\n        // the 'caretPos' option is indicated for this element and eventArgs.element may be a child of this element\n. // NOTE: If the element under the cursor has changed after\n        // the 'mousedown' event, we should not raise the 'click' event\n. // NOTE: Emulating the click event on the 'select' element doesn't expand the dropdown\n        // with options (except chrome), therefore we should emulate it.\n. // NOTE: In Chrome, document.activeElement is 'select' after mousedown. But we need\n        // to raise blur and change the event for a previously active element during focus raising.\n        // That's why we should change the event order and raise focus before mousedown.\n. mmm.... the removed version was right - why's that?\n. again - the removed version was right - what's happening?\n. I take this one\n. what a pretty comment!\n. marvelous!\n. my favorite!\n. // NOTE: If an element under the cursor has changed after the second\n        // 'mousedown' event, we should not raise the 'dblclick' event\n. is this text meant to be readable? cause it isn't...\n. oh, I managed to read it - is it quotes that are missing?\nUnexpected system alert dialog \\'alert button clicked\\' appeared.\n. ok then\n. > poackage.\n. > which will further mixed in\n. pls, use spaces instead of tabs\n. Maybe Formatting Helpers - what do you think?\n. Output Helpers probably?\n. I suspect it's numbering.\n. allows... to be able to...\nsounds like the same thing said twice - doesn't it?\n. I suspect it toggles rather than enables cause you can disable wrapping as well, can't you?\n. Similarly to wrapping - can't you pass zero to disable indentation?\n. indentation, BTW\n. > src/index.cs\nC# ?\n. I'm not quite sure that testing, preview and publishing is actually managing.\nIsn't it a part of the creation process?\nProbably not, but anyway, to my mind, managing is something that begins after the reporter is ready and published.\n. Are you sure we need to say about custom plugins right here - in the very introductory sentence?\nIt's just one of the means to achieve our goals and we can keep it for more detailed topics.\nWhat do you think?\n. Mmm... I think we could come up with a better section name here\n. // NOTE: let the last real XHR handler finish its job and try to obtain\n        // any additional requests if they were initiated by this handler\n. // NOTE: let the last real XHR handler finish its job and try to obtain\n        // any additional requests if they were initiated by this handler\n. // NOTE: previously, this error was used in 'possible fail causes', which are\n        // R.I.P. now. So we just throw this error to the console for debugging\n        // purposes. In IE9, console.log is defined only if dev tools are open.\n. same as above\n. asyncTest('Should resolve wait promise if there is no page redirect', function () {\n. // NOTE: ignore slow connection on the testing\n        // farm that leads to unstable tests appearing\n. same as above\n. it('Should perform click on a submit button and wait for page redirect', function () {\n. it('Should wait for the page load barrier to finish after an action', function () {\n. it('Should fail when a js-error appears on page load', function () {\n. it('Should fail when a js-error appears during click execution', function () {\n. it('Should wait for the next action element to appear', function () {\n. No-no, even managing was more meaningful\nI would say that all four sections in this file relate to Creating...\n. @inikulin, what do you think?\n. Is it really necessary to say about node.js? I can't imagine how someone without node.js installed (and, hence, without testcafe) tries to follow this tutorial.\n. This is the only place where we mention a custom error decorator (I tried searching for the word 'decorator') =))\nWe need to explain it somehow.\n. yeah, framework seems ok\n. you must've forgotten to remove this content:\nor do you mean this item is a folder?\n. I am immediately getting afraid that we are losing integrity.\nProbably, we'd better add context than remove this link.\nSomething like\n```\nFor more information on how to implement a plugin, refer to\n\nCreating Reporter Plugin\n\nWhen creating the reporter plugin, you will need to use some helpers to format the report. You can find the reference in the following topic:\n\nHelper Methods\n```\n. refer to, BTW\n. Another integral solution is to remove Helper Methods from Custom Reporter Plugin AND  the side menu as well. This way, we'll have it as a kind of hidden topic.\nAnd I still have reservations...\n. For instance, the side menu will become like:\n\nCustom Reporter Plugin\n    Creating Reporter Plugin\nwith no clear need in the second level\n. Right\n. Reference is ok.\nFor instance, baseline and reference are both used in tools that compare screenshots, so both are ok.\n. it('Should restart a user action after redirect', function () {\n. '@test'['Redirect before the target element appears - should fail'] = {\n. note that I renamed the test\n. '@test'['Click on the element in iframe after redirect occurs in the iframe - should pass'] = {\n. can't find where this one is used\n. works pretty fine for me\n. '@test'['Type and wait in iframe in an obsolete manner'] = {\n. // NOTE: some browsers raise the 'input' event after the element\n    // content is changed, but in others we should do it manually.\n. // NOTE: fn() result used for testing purposes\n. // NOTE: check if the last command in the test\n            // function is missing the `await` keyword.\n. // NOTE: we track missing `awaits` by exposing a special custom Promise to user code.\n. // In both scenarios, we check that callsite that produced Promise is equal to the one\n    // that is currently missing await. This is required to workaround scenarios like this:\n. it('Should support chaining [ONLY:chrome]', function () {\n. it('Should produce correct callsites for chained calls [ONLY:chrome]', function () {\n. incorrect option you mean?\nit('Should fail if action has an incorrect option', function () {\n. // NOTE: to preserve callsites, add new tests AFTER the existing ones\n. // NOTE: to preserve callsites, add new tests AFTER the existing ones\n. //NOTE: if the test failed in different browsers with the same error, we combine these errors into one\n. asyncTest('non-numeric x or y argument raises an error', function () {\n. it('Should drag an element by an offset', function () {\n. // NOTE: we need to use a sandboxed jQuery to process the 'style' element content. Since\n        // Hammerhead 8.0.0, proxying is performed on prototypes (instead of elements)\n. cantFindBrowser:                    'Unable to find the browser. \"{browser}\" is not a browser alias or a \"path:${PATH}\" string, where ${PATH} is an enquoted path to an executable file.',\n. it('Should raise an error if an unprefixed path is provided', function () {\n. it('Should raise an error if the path descriptor is unquoted', function () {\n. rename this test pls where it resides\nreturn runTests('./testcafe-fixtures/click.testcafe', 'Wait for the next action target to appear',\n. it('Should pass if the element's availability timeout exceeds the time required for the element to appear', function () {\n. it('Should fail if the element's availability timeout is less than the time required for the element to appear', function () {\n. it('Should fail if the element's availability timeout is less than the time required for the element to appear (legacy)', function () {\n. A have always thought that it goes this way: we use this to refer to the global object; and we also use it to access the global object's fields, including helper methods.\nProve me I'm wrong pls)\n. The following example demonstrates how to enable word wrapping in case the title string is long.\n. to the report - or am I wrong?\n. disable coloring a reporter output\nseem to be a wrong construction. The verb disable implies that coloring works like noun, while the direct link coloring a reporter output implies that coloring works like a verb\n. you can say\nenable or disable reporter output coloring\nor\nenable or disable coloring of the reporter output\n. Can we really say test smth does smth ?\n. This was my mistake, BTW, but still\n. The text to type is expected to be a string, but it was <code>${err.actualType}</code>.\n. Got better or worse, @inikulin @AlexanderMoskovkin ?\n. To access the helper methods, use this.\n. To access smth\nAccess to smth\n. are marker and mark the same thing? then\n// OPTIMIZATION: we start traversing from the bottom of the stack,\n        // because we'll more likely encounter a marker there.\n        // Async/await and Promise machinery executes lots of intrinsics\n        // on timeouts (where we have a marker). And, since a timeout initiates a new\n        // stack, the marker will be at the very bottom of the stack.\n. // NOTE: If a user forgot to specify a browser, but has specified a path to tests, the specified path will be\n        // considered as the browser argument, and the tests path argument will have the predefined default value.\n        // It's very ambiguous for the user, who might be confused by compilation errors from an unexpected test.\n        // So, we need to retrieve the browser aliases and paths before tests compilation.\n. The action element is expected to have the contentEditable attribute enabled.\n. The action element is expected to be editable (an input, textarea or element with the contentEditable attribute).\n. The action elements do not have a common ancestor.\n. it(\"Should fail if any node isn't content-editable\", function () {\n. > content-editabl\n. it(\"Should fail if nodes don't have a common ancestor\", function () {\n...as soon as we started\n. Wouldn't it be better if we keep old names and just format it this way? @inikulin \nconst durationMs  = endTime - this.startTime;\n    const durationStr = this.moment\n                            .duration(durationMs)\n                            .format('h[h] mm[m] ss[s]');\n. the same about this one\n. // NOTE: binding should not modify the test run \n    // bound to the Hybrid function originally, so it should throw an error.\n. Did I get it right?\n. So, we can say it does not modify the function itself, can't we?\n// NOTE: binding does not modify the original function,\n    // but creates a new bound function instead, so here we should throw an error.\n. it('Should raise an error if the \"--timeout\" option value is not an integer', function () {\n. Am I right that the action argument is a selector here?\nIf so, it matches rather than contains \nThe specified selector does not match a file input element.\nOr we probably want to be more specific about the upload action?\n. Then we can say something like\nThe upload action selector does not match a file input element.\n. it('Should fail if the action element is not a file input', function () {\n. it('Should fail if the specified file does not exist', function () {\n. it('Should fail if the action element is not a file input', function () {\n. it('Should fail if the specified file does not exist', function () {\n. it('Should fail if the file list is empty', function () {\n. it('Should fail if the file list contains an empty string', function () {\n. it('Should clear the upload', function () {\n. it('Should fail if the action element is not a file input', function () {\n. \"name\": \"Action element is not a file input\",\n. \"name\": \"The specified file does not exist\",\n. \"name\": \"Action element is not a file input (multiple files)\",\n. \"name\": \"The specified file does not exist (multiple files)\",\n. \"name\": \"File list contains an empty string\",\n. \"name\": \"Clear the upload\",\n. \"name\": \"Action element is not a file input (clearing upload)\",\n. it('Should clear the upload', function () {\n. So, are you saying that available for use or available for performing actions on is better?\nOr do we need to rename the whole thing from available to a more strict descrption like added to DOM, loaded or whatever is technically correct in this situation IDK\n. // NOTE: This symbol is used for storing the hybrid function's compiled code for its\n// later use as a dependency. Also, it's used as a hybrid function marker.\n. it('Should execute an anonymous hybrid function', function () {\n. it('Should execute an anonymous hybrid function with dependencies', function () {\n. it('Should have the correct callsite if an error occurs on instantiation', function () {\n. it('Should have the correct callsite if an error occurs during execution', function () {\n. it('Should navigate to another page', function () {\n. it('Should navigate to a page using a url that contains a protocol', function () {\n. it('Should navigate to a page using a protocol-relative url', function () {\n. it('Should navigate to a page using a relative url', function () {\n. it('Should navigate to the 404-page using a non-existent url', function () {\n. it('Should navigate to the 404-page using an incorrect url', function () {\n. \"name\": \"Navigate to a page using a url that contains a protocol\",\n. \"name\": \"Navigate to a page using a protocol-relative url\",\n. \"name\": \"Navigate to a page using a relative url\",\n. \"name\": \"Navigate to a page using a non-existent url\",\n. \"name\": \"Navigate to a page using an incorrect url\",\n. it('Should wait for the specified time', function () {\n. The <code>${err.argumentName}</code> argument is expected to be a non-empty string or a string array, but it was ${err.actualValue}.\n. nice!\n. it('Should validate the url argument', function () {\n. ok, I agree that there are protocols like mail or application protocols that may need :// in the error message to make it clear what we are talking about. But that's hardly the case with HTTP and HTTPS...\nThe <code>${err.argumentName}</code> argument specifies a URL that uses an unsupported '<code>${err.protocol}</code>://' protocol. Only HTTP and HTTPS are supported, as well as protocol-relative and relative URLs.\n. // NOTE: the driver sends the status for the second time if it didn't get a response at the first try.\n    // This is possible when the page was unloaded after the driver sent the status.\n. // NOTE: this test scenario is not trivial, so here's what it does:\n        // 1) The TestRun sends the Click command to the driver.\n        // 2) The driver executes the click action and sends the status to the server, but doesn't get the response immediately because\n        //    TestRun has no pending command in the queue.\n        // 3) 900 ms after the click the page location is changed. But the server response with the new page is delayed and the\n        //    current page stays in the unloading state for about 2 seconds.\n        // 4) 1 sec after the click the TestRun sends a new command to the driver, but the driver ignores it because the page is unloading.\n        // 5) After the page is reloaded, the driver resends the last status (since it didn't get the response for the previous request).\n        // 6) The TestRun should not process this status. It should just return the cached response.\n. it('Should validate the selector argument', function () {\n. it('Should validate the filePath argument', function () {\n. it('Should validate the selector argument', function () {\n. > maybe we should figure out scenarios when it could happen\nAgree! If would be supercool if we could!\n\nI'd rather say by page load\n\nWe just thought that it's technically unload that interrupts the client code. In any case, I wouldn't say it's load 'cause... It literally implies that the code was being executed while the page was not loaded, then at some moment the page began loading, which interrupted the execution. Which is nonsense.\nAnyway, page load is not the prime cause. It was either triggered by reload of the same page or by navigating away. \nThe question is - can we restrict navigating away to redirection? If I remember the discussion, all examples were about redirects.\nIf so, we can say, by page reload or redirect.\n. // HACK: The iOS browser performs unexpected scrolling in some cases (https://github.com/DevExpress/testcafe/issues/471)\n    // With this hack, we only allow setting the scroll by a script and prevent native browser scrolling.\n. lgtm\ncorrectors approved as well\n. // NOTE: Hybrids should be used primarily for observation. We raise\n        // an error if the page was reloaded during Hybrid function execution.\n. it('if an error is raised while waiting for the next command', function () {\n. // NOTE: the driver gets an empty response if TestRun doesn't get a new command within 10 seconds\n. // NOTE: we should keep the page url in document.title\n    // while resizing\n. it('Should resize the window', function () {\n. it('Should resize the window to fit a device', function () {\n. it('Should resize the window to fit a device with portrait orientation', function () {\n. used it before fixing or used it before to fix ?\n. // NOTE: we'll be using this until a testcafe-browser-natives bug with setting the browser size is fixed\n. // NOTE: browsers abort an opened xhr request after a certain timeout (the actual duration depends on the browser).\n    // To avoid this, we send an empty response if we don't get any command within 2 minutes.\n. > executeExecutePendingBrowserWindowCommand\nexecuteExecutePendingBrowserWindowCommandCommand =))\n. hold on, we're in progress\n. So, as far as I understand @AlexanderMoskovkin, there is a pending command\nPendingBrowserWindowCommand\nWe have a command that executes it\nExecute[PendingBrowserWindowCommand]Command\nAnd we need to name a function that executes that command\nExecute[Execute[PendingBrowserWindowCommand]Command]\nFirst, let's get rid of duplications\nExecute[Run[PendingBrowserWindowTask]Command]\nIsn't it still too complicated?\n. So let's get rid of something else...\nDo we really need the ...PendingBrowser... thing here?\nWe have no other window than browser's. And... is it the only possible task's lifecycle: it becomes pending and then gets executed?\nIf yes for both, let's stick to:\nRunWindowTaskCommand\nand as to the function that triggers it - if it's function not command can it be just ExecuteWindowTask? By triggering the respective command, this implies.\nDid i get rid of too much?\n. And if ExecuteWindowTask does not comply with the current rules (of glueing Execute to the name of command), let it be \nExecuteRunWindowTaskCommand\n. The question that remains - Task or Operation?\nI'm beginning to feel more like Operation\n. That's a tricky question - so we say that screenshot and resize are browser operations, by contrast to click and hover that are page actions.\nHm... It makes sense\n. runWindowManipulationCommand - okay\nSo we need ExecuteRunWindowManipulationCommand in addition - right?\nokay again - let's settle this already\n. @inikulin  and what is the client function then?\n. or you mean\nPendingWindowManipulationCommand - the command name\nexecutePendingWindowManipulationCommand - function name\n. lgtm, I should say\n. If somehow this PR is ready for merge before the Resize command... You know...\nhttps://github.com/DevExpress/testcafe/pull/543#discussion_r63851226\n. it('Should take a screenshot', function () {\n. it('Should take a screenshot with a custom path', function () {\n. it('Should not take a screenshot without setting screenshotPath', function () {\n. fixture `Take a screenshot`\n. test('Take a screenshot', async t => {\n. test('Take a screenshot with a custom path', async t => {\n. it('Should take a screenshot if the ensureElement method fails', function () {\n. it('Should take a screenshot if an error on the page is raised', function () {\n. it('Should take a screenshot if an error in test code is raised', function () {\n. it('Should take a screenshot if an assertion fails', function () {\n. it('Should take a screenshot if beforeEach raises an error', function () {\n. it('Should take screenshots if a test error occurs and if afterEach raises an error', function () {\n. it('Should not take a screenshot if the ensureElement method fails with no screenshotsOnFails flag set', function () {\n. it('Should not take a screenshot if the ensureElement method fails with no screenshotPath specified', function () {\n. test('Screenshot on a beforeEach error', async t => {\n. test('Screenshots on afterEach and test errors', () => {\n. test('Screenshot on the ensureElement method fail', async t => {\n. test('Screenshot on page error', async t => {\n. test('Screenshot on test code error', async () => {\n. test('Screenshot on the assertion fail', async () => {\n. const SCREENSHOT_CAN_NOT_BE_SAVED_MESSAGE = '[was unable to save the screenshot for some reason]';\n. @inikulin As far as I understand, such a use is discouraged\n\nThe module is intended for internal use by Node.js, but can be used in application code via require('assert'). However, assert is not a testing framework, and is not intended to be used as a general purpose assertion library.\n\nhttps://nodejs.org/api/assert.html\n. // to JSON with a command or command result.\n. // an old eslint version (v1.x.x). We should migrate to v2.x.x\n. // an old eslint version (v1.x.x). We should migrate to v2.x.x\n. const SCREENSHOT_CAN_NOT_BE_CREATED_MESSAGE = '[was unable to take a screenshot due to some error]';\n. ok if that's what it actually does.\nSo, PrepareBrowserManipulationCommand for the command and prepare-browser-manipulation for the executor - if we stick to the same naming\n. });\n. // NOTE: don't use async/await here to enable\n        // sync errors for resolving the context test run.\n. // NOTE: expose Promise to the function code\n. // NOTE: it is safe to use a test run error here, because this code\n    // will be hit only if the context test run has already been validated.\n. it('Should accept a function as an argument', function () {\n. it('Should raise an error if a function argument contains async code', function () {\n. it('Should accept a hybrid as an argument', function () {\n. // NOTE: Opening browser tools with F12, CTRL+SHIFT+<SYMBOL KEY> on PC or with OPTION(ALT)+CMD+<SYMBOL KEY> on Mac.\n. // NOTE: when test is running, we should block real events (from mouse or keyboard), \n// because they may lead to unexpected test result.\n``\n. // NOTE: this will allow pressing hotkeys to open developer tools\n. // If an element loses focus because of becoming invisible, the blur event is raised. We must not prevent this blur event.\n        // In IE, an element loses focus only if the CSS 'display' property is set to 'none', other ways of making\n        // an element invisible don't lead to blurring (in MSEdge, focus/blur are sync)\n. //NOTE: fix for a jQuery bug. An exception is raised when calling .is(':visible') for a window or document on page loading (when e.ownerDocument is null)\n. it('Driver should prevent a real action', function () {\n. sorry, missed it!\nthanks to @AlexanderMoskovkin for noticing this\n// NOTE: when tests are running, we should block real events (from mouse\n// or keyboard), because they may lead to unexpected test result.\n. The <code>${err.argumentName}</code> argument specifies an unsupported <code>${err.actualValue}</code> device. For a list of supported devices, refer to http://viewportsizes.com\n. What about that?\n. it('Should click at the center of the target if offset options are not specified', function () {\n. // NOTE: evalFunction is isolated into a separate module to\n// restrict access to TestCafe intrinsics for the evaluated code.\n. // NOTE: store hybrid function code to avoid recompilation\n            // if it will be used later as a return value.\n. // NOTE: all functions that come to the client are hybrid functions\n. // NOTE: in case we couldn't find an element for event\n                // simulation, we raise an error of this type (GH - 337)\n. // NOTE: in case we couldn't find an element for event\n    // simulation, we raise an error of this type (GH - 337)\n. it('Should fail if the first argument is out of the visible area', function () {\n. '@test'['Should fail if the first argument is out of the visible area'] = {\n. it('Should fail if an action target is out of the visible area', function () {\n. \"name\": \"Click a button that is out of the visible area\",\n. it('Should fail if an action target is out of the visible area', function () {\n. \"name\": \"Hover on a button that is out of the visible area\",\n. nonono\n. https://github.com/DevExpress/testcafe/pull/572#discussion_r65505201\n. nonono\n. I'd better choose a header like Implementing Test Logic or something. Because adding code tells nothing about the purpose.\nI'm like: \"Are you telling me how to add code? I know how to add code, I just don't know what code.\"\n. ok, good\n. The <code>${err.argumentName}</code> argument is expected to be a boolean value, but it was <code>${err.actualValue}</code>.\n. Not much difference with Adding Test Code\n. Moreover, the whole flow gets strange\nRunning the Test\nViewing Test Results\nWriting Test Code\n. What if we get rid of this section and place \"Performing Actions on a Page\" to the same level as \"Viewing results\"?\n. and so on\n. //NOTE: in Firefox and WebKit, frameElement is null for cross-domain iframes even if they are in the DOM.\n    //But these browsers don't execute scripts in removed iframes, so we suppose that the iframe is in the DOM.\n. // NOTE: an iframe driver should have its own context, so it should have an id.\n    // To keep this id during iframe reloads, we store it in the top window driver.\n. // NOTE: the driver sends status to the server as soon as it's created,\n        // but it should wait until the page is loaded before executing a command.\n. // NOTE: If an iframe was removed or became hidden while a\n            // command was being executed, we consider this command finished.\n. // We should check if the iframe is visible and exists before executing the next command,\n        // because the iframe might be hidden or removed since the previous command.\n. // inject scripts into such iframes. So, we wrap all scripts in initialization functions.\n. // NOTE: we set elementAvailabilityTimeout to a large value in some tests to wait\n// for an iframe to load on the farm (it is fast locally but can take some time on the farm)\n. it('Should ensure the iframe element exists before switching to it', function () {\n. it('Should raise an error is the switchContext argument is not an iframe', function () {\n. it('Should raise an error when trying to execute an action in an unavailable iframe', function () {\n. it('Should raise an error when trying to execute an action in an invisible iframe', function () {\n. it('Should raise an error when trying to execute an action in an iframe that is not loaded', function () {\n. it('Should fail if an error occurs in a same-domain iframe while an action is being executed', function () {\n. it('Should fail if an error occurs in a same-domain iframe while an action is being executed in the main window', function () {\n. it('Should fail if an error occurs in the main window while an action is being executed in a cross-domain iframe', function () {\n. it('Should fail if an error occurs in a same-domain iframe while an action is being executed in another iframe', function () {\n. test('Click in a slowly loading iframe', async t => {\n. test('Click in a iframe that's loading too slowly', async t => {\n. test('Click in an iframe that is not loaded', async t => {\n. it('Should not take a screenshot if screenshotPath is not set even if a custom path is specified', function () {\n. For some time, we consider it ok to show our names on screenshots... But this particular image... Oh, there's too much of MargaritaLoseva in it. I feel like it grabs attention.\n. Yep, I would create a TestUser\n. user code?\n// NOTE: save original ctors because they may be overwritten by user code\n. // NOTE: for non-element nodes, which don't have 'children' =/\n. Can we pass the function type here, so that it becomes\nhybridFunctionCodeIsNotAFunction:   '{functionType} function code is expected to be specified as a function, but \"{type}\" was passed.'\n. And here?\n. and here\n. and here\n. and here\n. Client functions cannot return DOM elements. Use <code>Selector</code> functions for this purpose.\n. Ignore this if that TODO is here until the next PR.\nOtherwise,\n// TODO needs its own error and should accepts strings\n. Ignore this if that TODO is here until the next PR.\nOtherwise,\n// TODO needs its own command\n. it('Should raise an error if the ClientFunction argument is not a function', function () {\n. it('Should raise an error if the ClientFunction's function is unable to resolve test run', function () {\n. it('Should raise an error if the ClientFunction's function contains async/await syntax', function () {\n. it('Should raise an error if the ClientFunction's function contains a generator', function () {\n. it('Should be able to bind a test run using the `.bindTestRun(t)` method', function () {\n. it('Should raise an error if a ClientFunction is bound to a non-TestController object', function () {\n. it('Should handle errors in ClientFunction code', function () {\n. it('Should handle errors in a Promise in ClientFunction code', function () {\n. it('Should raise an error if a DOM node is returned', function () {\n. it('Should provide basic properties in HTMLElement snapshots', function () {\n. it('Should provide basic properties in SVGElement snapshots', function () {\n. it('Should provide input-specific properties in element snapshots', function () {\n. it('Should provide the `innerText` property in element snapshots', function () {\n. it('Should raise an error if the ClientFunction argument is not a function', function () {\n. it('Should raise an error if the ClientFunction argument is not a function (if called as ctor)', function () {\n. it('Should raise an error if ClientFunction's function is unable to resolve the test run', function () {\n. it('Should raise an error if ClientFunction's function uses an async function', function () {\n. it('Should raise an error if ClientFunction's function uses a generator', function () {\n. it('Should raise an error if ClientFunction's dependency is not an object', function () {\n. it('Should raise an error if ClientFunction's dependency is not a hybrid function', function () {\n. Executing Client Code is about selectors as well as client functions.\nI don't like Executing Client Code much though...\n. ClientFunction function x 5\n. It's always a little bit weird when we describe several steps of writing code in words with no examples in the middle.\nThere are two better ways:\n1) show the code growing step-by-step,\n2) first show the code and then describe.\n. It looks like specifying the start page is optional in this tutorial. But that's not true.\nI'd better place a direct instruction here.\n. I don't think any other way will look better and more clear than step-by-step\n. ?\n. space missing\n. yeah, it's usually recommended for tech docs to write out one through nine and use numbers in all other cases.\nBTW, exceptions are:\n- when two numerals < 10 and >= 10 are connected, as in ranges - in this case both numbers: from 1 inch to 12 inches\n- when two numerals are used directly one after another: 52 twelve-inch displays\n. DO_NOT_SETTED\n. SCREENSHOT_PATH_NOT_SET_MESSAGE\nor - don't we use DIR now?\nSCREENSHOT_DIR_NOT_SET_MESSAGE\n. canNot - that's one word\ncannotBeCreated\n. why not cannotCreate BTW ?\n. using what?\n. it('Should be able to bind a test run using the boundTestRun option', function () {\n?\n. test('Element does not appear', async () => {\n. Can't find where this message is built in code, so I'll put it here...\nWhat do you mean by saying that selector code is expected to be specified as a string? CSS selectors? But that's not code. I would think of \"code specified as a string\" as a string with js code.\nWhat's the template this string is built from?\n. maybe, this will be a bit clearer?\nit(\"Pressing CTRL+SHIFT+key combinations shouldn't be prevented\", function () {\n. // report when there are chai module files on top of the error stack.\n. // NOTE: filter out the internals of node.js and assertion libraries\n. oops, that's because I used parse5 v2 at first, thx\n. I just thought that this code belongs to Gulpfile.js.\nIt's strange that I launch websiteServer in Gulpfile.js and pass it here just to close.\n. // NOTE: filter out the internals of node, Babel and TestCafe\n. .option('--selector-timeout <ms>', 'set the amount of time within which selectors make attempts to obtain a node to be returned')\n. // OPTIMIZATION: Selectors are executed lazily (once someone subscribes to their result).\n        // It's especially useful for situations when the selector's result is passed to\n        // an action, e.g.: `t.click(someSelector(42));` In that case, we create a new selector\n        // inside this action, but we are not interested in the result of ongoing execution.\n. // NOTE: we should save changes that could be made via 'shift' and 'push' methods.\n. I'm never sure if I should check TODOs but still\n// TODO: this.dialogMonitor check will be removed when we add native dialogs support for iframes\n. // NOTE: We should not modify the status if it is resent after the page load because the server has cached the request\n. see above\n. // NOTE: we should find a command that triggered the native dialog to add information on how to\n        // handle this dialog. If there's no such a command, we assume that the first page load invoked the native dialog.\n        // We save information about the expected initial dialogs only before the first page load.\n. it('Should pass if the wait timeout exceeds the time required for the dialog to appear', function () {\n. it('Should fail if the wait timeout is less than the time required for the dialog to appear', function () {\n. it('Should fail if an unexpected dialog appears while waiting for another dialog', function () {\n. Well, I didn't want to introduce a new term (like a dialog handler or dialog handling function) or enumerate all functions. So, this way I referred to dialog handling functions in general.\nThat's something we do in our main docs from time to time. Feels awkward?\n. ok, let's go with dialog handling function where applicable\n. OR\nthe best is to have its name in err.expectedHandleFunction\n@inikulin @helen-dikareva \n. // NOTE: we should not execute a command if we already have a pending page error and this command\n                // is rejectable by page errors. In this case, we immediately send status with this error to the server.\n. // NOTE: we should execute a command in an iframe if the current execution context belongs to\n                // this iframe and the command is not one of those that can be executed only in the top window.\n. ${err.instantiationCallsiteName} execution was interrupted by a native ${err.dialogType} dialog. Make sure that ${err.instantiationCallsiteName} code does not trigger native dialogs. If this dialog appears as a result of the previous test action, call the ${err.expectedHandler} function after the action.\n. An unexpected native ${err.dialogType} dialog appeared. If this dialog was invoked as a result of a test action, call the ${err.expectedHandler} function after the action.\n. asyncTest('Press action should only accept a string as an argument', function () {\n. I must've overthought with the enumeration NodeList or HTMLCollection, null or undefined. Let's put it simple\nFunction that specifies a selector can only return a DOM node, an array of nodes, NodeList, HTMLCollection, null or undefined. Use ClientFunction to return other values.\n. // NOTE: we have to use this regexp because the innerText field\n. // NOTE: we can't run tests on iOS 9.3 because of a bug in this version\n            // (see https://github.com/DevExpress/testcafe-hammerhead/issues/672#issuecomment-232043366).\n            // This bug is fixed in iOS 9.3.2 but it's not available on the farm.\n. asyncTest(\"The 'assertion-failed' command should be sent earlier than 'done' if the 'takeScreenshotOnFail' option is enabled (GH-660)\", function () {\n. // TODO: eslint supports node version 4 or higher.\n    // Remove this condition once we get rid of node 0.10 support.\n. pls change the name as we discussed, as long as you modify this file\n. the existing error states that something\nis expected to be specified as a function\nbut the handler is actually\nexpected to be specified as a regular or client function\n. note that\na regular or client function\nor\na regular function or ClientFunction\nbut not\n~~a regular or ClientFunction~~\ncause the latter does not contain the word function to which regular could relate\n. no, we have just removed r\n.click('#developer-name', { caretPos: 5 })\n.keyPress('backspace');\n. The native dialog handler is expected to be specified as a regular function or ClientFunction, but ${err.actualType} was passed.\n. super, thanks!\n. Lines on the website are too short for this.\n. Yes, but... if two fixtures with the same name are declared in the same file they are treated like one fixture. If they are placed to different files, they are treated like different fixtures.\nIs that okay? @inikulin @AlexanderMoskovkin \n. They are synthetic and intended to be self-explanatory. Right now we use the Example page only for Getting Started.\n. > We need to mention t.selectText.\nSo, we should say that despite dragging invokes selection, use t.selectText instead? @inikulin \n. > Current structure is just incorrest\nWhy is that? The example is not runnable, so I can write anything I find useful to illustrate the matter. In particular, it's useful to let users know where from each of the variables gets. It's not good when they appear out of the blue. That's why all the imports.\nLook at the Node.js docs - it's full of examples like:\n``` js\nconst Writable = require('stream').Writable;\nconst myWritable = new Writable({\n  write(chunk, encoding, callback) {\n    // ...\n  },\n  writev(chunks, callback) {\n    // ...\n  }\n});\n```\n...which makes perfect sense. It's schematic but clear.\n@inikulin \n. So, it was me angry at the suggestion to remove imports (they are crucial).\nWell... adding\njs\nfixture `My fixture`\n    .page('http://www.example.com/')\neverywhere won't hurt (nor make any of the examples runnable =) )\n. Yeah, that's why it's\ntext\nsetFilesToUpload( selector, filePath )\nsetFilesToUpload( selector, [filePath, ...] )\nin the synopsis\n. oops... and they are... required?\njs\n{ name: 'options', type: actionOptions, init: initResizeToFitDeviceOptions, required: true }\nportrait was optional...\n. I think it's rather array of strings if it's in a sentence or Array of String if we pretend it's code-ish\n. When I dealt with .NET only, I would definitely choose function as a parameter name (actually, no, because I would name it meaningfully). But the more I work with js, the more I get used to contractions like func as parameter names.\n. and we use func as parameter names almost everywhere - except for handling-native-dialogs.md you've mentioned\n. Parameter names is not something we definitely need to standardize, but still... If you see function in the list of parameters (not as type) - tell me =)\n. test controller's api looks great\ntext\nt.click(selector)\ntext\nt.getNativeDialogHistory() \u2192 [{type, text}]\nBut do you like this (like in MDN):\ntext\nSelector.prototype.with(options) \u2192 Selector\nBecause \ntext\nSelector.with(options) \u2192 Selector\nwould mean it's static and\ntext\nselector.with(options) \u2192 Selector\ndoesn't make a big difference.\nI like\ntext\nSelector.prototype.with(options) \u2192 Selector\nbut, on the other hand, we don't write\ntext\nTestController.prototype.click(selector)\n@inikulin \n. // NOTE: wait for dragging scripts to finish (it can take some additional time on a slow vm)\n. yeah, good\n. okay\n. mmm... Unhandled dialog or unhandled error?\nNativeDialogHandlerNotSetError is less descriptive (doesn't imply that dialog invocation actually triggered the error) but less ambiguous...\nwhat can I come up with...\nNativeDialogNotHandledError may be...\n. Oooh... It will be painful. We have a bunch of common text.\nMaybe we'll just rename it to Selectors and Client Code, Observing Page State or something?\n@inikulin \n. > Copy/paste?\nOne of the worst things you can do with docs. Have the same thing in different places.\nLike copy/pasting code\n. > I'm 99% sure they should be separated\nokay, I'll look into it\n. 1) You cannot make separate consequent blockquotes (which we render as notes and warnings) with the redcarpet processor. It merges them into one.\n2) This fact is not so bad because the header seem to be enough to emphasize this piece of information. A lot of additional 'ink' (warning borders and icons) will hardly be of great help.\n. oops, missed it...\nit's even harder to figure out why one may need to call a selector from a callback...\n. This entire feature... You can always call a selector or a client function before you trigger an asynchronous server-side action. Why on earth would you need to fetch something from a tested webpage at the very moment a server-side operation on a test server is completed.\n. > TestCafe provides all testing features:\nmaybe covers all testing phases or something?\n. > TestCafe tests are written with ES2016\nI'm not sure about that but maybe use imperative mood here? Because tests are not yet written - they are to be written,\nWrite TestCafe tests with ES2016...\nBUT I may be wrong and test are written is a common way to say it that suits here well - I just don't know it\n. > It also ships with built-in support for source maps\nIs debugging really so important that it goes even before simple, but powerful test API ?\nMaybe it's because I've never heard of source maps... but I'd move the debugging thing a little bit down.\nAfter all, we first get to know the technology (ES2016), then learn about the API, [write the test], and only then we think about debugging...\n. > to observe the page state as if you are inside the page \nWow, that's truly powerful, man! :fearful: \n. Please, revise the whole composition of this paragraph. Don't start with special kind of functions. It's lame. No one needs special kind of functions, honestly.\nStart with capabilities\n...observe the page state...\n...code executed on the client side...\n...direct access to DOM elements or obtaining some data from the client...\nMeans by which you can do this are the second-class citizen in this marketing part. At least, they shouldn't go at the first place.\n. okay, but anyway does TestCafe tests are written sound ok to you?\n. OMG\nWill the following thing be okay?\n``` js\nimport { http } from 'http';\nimport { querystring } from 'querystring';\nimport { expect } from 'chai';\nimport { Selector } from 'testcafe';\nfixture My fixture\n    .page('http://www.example.com/');\nconst getElementById = Selector(id => document.getElementById(id));\ntest('Title changed', async t => {\n    const boundSelector = getElementById.with({ boundTestRun: t });\nconst match = await new Promise(resolve => {\n    const title = querystring.stringify({\n        'title' : 'New title'\n    });\n\n    const reqOptions = {\n        hostname: 'www.example.com',\n        path: '/setTitle',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Content-Length': Buffer.byteLength(postData)\n        }\n    };\n\n    const req = http.request(reqOptions, res => {\n        if(res.statusCode === 200) {\n            boundSelector('article-title').then(titleEl => {\n                resolve(titleEl.textContent === 'New title');\n            });\n        }\n    });\n\n    req.write(title)\n    req.end();\n});\n\nexpect(match).to.be.true;\n\n});\n```\n. Or a more schematic example:\n``` js\nimport { http } from 'http';\nimport { expect } from 'chai';\nimport { Selector } from 'testcafe';\nfixture My fixture\n    .page('http://www.example.com/');\nconst getElementById = Selector(id => document.getElementById(id));\ntest('Title changed', async t => {\n    const boundSelector = getElementById.with({ boundTestRun: t });\n    const match         = await new Promise(resolve => {\n    // A request that changes the article title on the page.\n    const req = http.request(/* request options */, res => {\n        if(res.statusCode == 200) {\n            boundSelector('article-title').then(titleEl => {\n                resolve(titleEl.textContent === 'New title');\n            });\n        }\n    });\n\n    req.write(/* new title */)\n    req.end();\n});\n\nexpect(match).to.be.true;\n\n});\n```\n. it's there\njs\n    const match         = await new Promise(resolve => {\n. > So, you can pass parameters to it and get the function result.\nSo, you can pass parameters to them and get the result [or maybe return value].\n. > powering you to obtain some data from the client.\nempowering you to obtain specific [or probably better no adjective at all] data from the client.\n'some' is no good\nthe verb 'to power' seem to have a meaning that's different from what is expected\n. I also have purely stylistic issues with\n\nwrite JavaScript code within the Selector or ClientFunction function\n\nbut I can't immediately come up with a better phrase.\n. > an actions\njust actions?\nThat's because I used to blow your mind with those articles, I know, sorry =)\n. It's good to add it to Getting Started also but Getting Started cannot contain unique information\n. I spent some time searching for a place to insert this note but found no better place than this, plus the Programming Interface -> run() topic.\n. // NOTE: A warning would be really nice here, but it can't be done while log is stored in a task.\n. // HACK: The browser window has different border sizes in normal and maximized modes. So, we need to be sure that the window is\n        // not maximized before resizing it in order to keep the mechanism of correcting the client area size working. When browser is started,\n        // we are resizing it for the first time to switch the window to normal mode, and for the second time - to restore the client area size.\n. maybe just installed ?\n. > We can replace with localIy-installed\nso, the path provider is purely for portable browsers and makes no sense if a browser is installed? what about exotic browsers?\n(if I'm getting right what this all is about)\n. listAvailableOptionalBrowserNames nooo\nThey are not 'optional'. Like if you could go with just testcafe saucelabs.\nMmmm.... have to think about it\n. @inikulin  What's wrong with listAvailableBrowserNames or listAvailableBrowsers ? Why is that optional?\n. browserOpeningFailed -> cannotOpenBrowser\n. messages are on the way\n. STOP!\nunableToOpenBrowser\n. it('Should create a warning on attempt to resize the window on Linux', function () {\n. To use a remote browser connection (e.g., to connect a mobile device), specify \"remote\" as the browser alias. If you need to connect multiple devices, add a colon and the number of browsers you want to connect (e.g., \"remote:3\").\njust from the correctors.\n\nadd a colon and the number\n\nthat's from me\n\n(e.g.,\n\na comma after e.g. - from the correctors\n. output the aliases for local browsers or browsers available through the specified browser provider.\n. The specified \"{providerName}\" browser provider was not found.\n. \"{name}\" option is expected to be a string or a regular expression, but it was {type}.\n. Was unable to open the \"{alias}\" browser due to an error.\\n\\n{errMessage}\n. Was unable to resize the window due to an error.\\n\\n{errMessage}\n. The screenshot and window resize functionalities are not supported in a remote browser. They can function only if the browser is running on the same machine and in the same environment as the TestCafe server. \n. The screenshot and window resize functionalities are not yet supported on Linux. Subscribe to the following issue to keep track: https://github.com/DevExpress/testcafe-browser-natives/issues/12\n. It won't look cool if we put this into options.\n. I feel like it's good to put in options things that enable a specific mode or provide additional information. Or whose default value is used in most cases.\nThings like selection position are not additional, they are essential. They just have their default values which are not expected to be used more often than specific values, I guess.\n. Hmmm... When I asked this question\n\nOr do you think that src([source, ...]) is non-standard and confused with optional arguments?\n\nbefore - it was okay\nhttps://github.com/DevExpress/testcafe/pull/298#discussion_r50427565\n. nevertheless, @inikulin , I agree that this thing is confusing. I'll change it everywhere...\n. ~~why? they are stacked. the most recent is the first~~\nI just didn't refresh the page on time\n. Please use more strict types that match the standard.\nDate\nArray of String\nNumber\nYou can then use the description to specify that this number is an integer. Although, there seems to be no need for that in this case - we are talking about something users get rather than what they are expected to provide.\n. and you can save things to this\n. Oh, my... You've invested so much labor in it... Cool...\nI really hate to say it - but why not startTime.toLocaleString() or any of these\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#Conversion_getter\n. // NOTE: if we add a slowly loading iframe via markup, IE9 sometimes raises the DOMContentLoaded\n        // event after this iframe is completely loaded (in other browsers, this event never waits for \n        // an iframe to load). To avoid this collision, we create the iframe on the DOMContentLoaded event.\n        // It helps us get rid of an unstable functional test in IE9.\n. // NOTE: we get a child element by its offset index in the parent\n... if I'm right\n. of this type\n// NOTE: check that the list of error types contains an error\n    // of this type and remove tested messages from the list\n. Please do not uncomment what's not ready yet\n. custom browser means a web browser application tailored to the needs of a specific person... which is not what we want to say. we mean an arbitrary web browser - just any browser.\nand the browser provider does not supply browsers.\nand neither custom nor arbitrary stand together with local and remote because neither is the third alternative to local and remote\n. also, I'm not sure if a browser provider introduces a browser\n. Well, you can use a specific browser without a browser provider. Please be more specific on when we need to use the browser provider.\n. Do we need to say about remote browser connections here?\n. This part seems to be far more important than the previous paragraphs, but it gets lost here.\n. Maybe consider not using a note here? The first two paragraphs can be plain text, while the third one Important!?\n. Let's not use specific when we mean something closer to special. Because we more often use specific meaning particular.\n(btw, special also doesn't fit here well)\nI wouldn't say can here - the only way to connect to an otherwise unsupported browser is to create a browser provider plugin\nAlso, I would place a period after the word plugin. We need it to use the browser. That's it. Not opening, closing or screenshoting - just to test against it. Everything else is secondary and distracts the reader at this point.\n. Let's not reference sections of the current topic with phrases like for more information or for details. They are for external references. Just say something like to implement a plugin, you need to complete the following steps.\n. organize testing is too fancy - we need something more simple here\n. as far as I remember, the generator asks you for information but doesn't provide any settings itself.\n. To learn, not to know\nin a different way not in another way\nI'd better encourage users to learn from actual browser providers or something like that - not to learn how you can do this in a different way. That's strange.\nAnd I don't think you need to point to src/index.js - those who read about custom browser providers should know where to look for code.\n. Now I get that you use specific meaning special but it still doesn't explain how can I tell if my case is special enough to implement a browser provider.\n. wow, I'm not yet tracking https://github.com/DevExpress/testcafe-browser-tools/issues/12, why d'you say to keep tracking it? Maybe subscribe to keep track as I wrote somewhere - that's a different story.\n// NOTE: generateThumbnail is not available on Linux yet. Subscribe to https://github.com/DevExpress/testcafe-browser-tools/issues/12 to keep track.\n. during testing? what do you mean?\n. So, we've just coined a new term: directly supported browsers, as opposed to browsers available through a browser provider. And that's how we are going to introduce it.\nFirst, we should contrast it to 'browser-provider' browsers as early as possible. At that point, the readers have little idea of what we are talking about.\nThat's why, you are right, we give a link to the corresponding section, but this section should also contain the word directly in its name. And the first paragraph is where we can describe it in other words to make it finally clear what we are on about.\nLike this:\n```\nTestCafe allows you to test against different web browsers.\nThe most popular browsers are supported directly,\nwhile others require a browser provider plugin.\nIf you are working with TestCafe through the command line,\nlist the desired browsers\nwithin the testcafe command. In case you are using the API, specify the browsers\nwith the runner.browsers method.\nDirectly Supported Browsers\nTestCafe supports testing against the following browsers out-of-the-box.\n```\nNote that I've got rid of meaningless words like easily or just and wordy constructions: allows you to set up testing -> allows you to test.\nIt's also not quite rignt to make an impression like users have a choice how to specify target browsers: through the command line or API. They first choose the interface according to their needs and then seek for information on how to use it. They don't have a choice at that moment.\n. We've already said where to specify browsers and now we are talking about how to identify them.\nTo identify browsers, use short browser names (see the table above) or paths to their executables.\n. The name is lame by the way. Everyone knows how to use a browser.\n. So, nothing about remote connections?\n. I'm not sure about that within the testcafe command. thing though\n. unsupported by default - not cool.\nWe have a word directly now. So, maybe\nIf you need to use a browser besides those supported directly, create a browser provider plugin.\n. not quite good for a section name\n. That's not quite right to introduce such a section - with just a link. Can you find a way to avoid this?\n. yep, and why this dollar sign anyway?\n. no-no, I didn't mean literally asks for information, sorry... I must've been unclear...\n. Move this sentence to the Implementing... section please. It doesn't make sense here.\n. same as in https://github.com/DevExpress/testcafe/pull/725/files#r76282948\nsorry)\n. both these sentences are unclear. \nwhat does testcafe-browser-tools give me? I want to know why you want me to click the link.\nfor details about what? about testcafe-browser-tools? 'cause we were talking about testcafe-browser-tools a second ago!\n. your is redundant here\n. provider in the following provider methods is also redundant\n. I feel puzzled about that life cycle you are talking about here and there. Give more details or, most probably, be more simple and don't use life cycle.\n. existing is redundant here\n. and here existing can also be omitted\n. again - illusory choice\n. I guess you decided to get rid of life cycle.\nYou seem to miss one here.\n. As long as we have now two entries for the String type (which is fair) may be it's better to reconfigure the table to avoid having the same content in two rows of the first column. Because usually the first column is what distinguishes the rows.\n. > After a browser provider plugin is created, it can be published to npm.\nThis sentence should be worded in a little bit different way. Now it looks a little bit alien here. As if it's taken from an instruction, while this paragraph is not an instruction.\n. Sounds way too general. Like Selecting Personnel for Training.\nMaybe something with words like specify and test task?\n. It doesn't feel like a good title but I can't come up with a better one. Are you sure we need this subsection at all?\n. asyncTest(\"Should resolve the waiting promise when clicking a link with javascript that doesn't lead to unload (GH-608)\", function () {\n. If it's going to be removed I won't check it... \n. > I see some unnecessary words here. \nasyncTest(\"Should resolve the promise when clicking a link that doesn't lead to page unload (GH-608)\", function () {\n. > serveral\n. and in the test name\n. > been has changed\n. are you sure about this accept value ?\nwhat do these elements have in common? is this about 'accepting values'?\n. see\nhttps://github.com/DevExpress/testcafe/pull/753/files#r77666902\n. except in Firefox\n. except in Firefox\n. // NOTE: sometimes the page isn't actually unloaded after the beforeunload event\n    // fires (see issues #664, #437). To avoid test hanging, we resolve the unload\n    // barrier waiting promise in MAX_UNLOADING_TIMEOUT. We can improve this logic when\n    // the https://github.com/DevExpress/testcafe-hammerhead/issues/667 issue is fixed.\n. @georgiy-abbasov hmm... if not input than probably editor?\nisEditorElement ? @inikulin \n. What about more a specific link\nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html ?\nOr you think it should be memorable?\n. *A set of sample tests that illustrate how to use TestCafe API.*\n. Clone the repository to your machine and install the dependencies:\n. Then, run\u00a0the `test`\u00a0command:\n. You probably mean pick where you write peek in this file?\n. > recipes on\nAre you sure we can say recipes on smth? I don't know, just asking, but my feeling is that we can't.\n. > Suppose\nAssume?\n. 1.\n\nreal browsers in the cloud\n\nI have issues with this phrase... Though I understand what you mean.\n2.\nIt's not quite good style to have two consecutive sentences end in the same way in the cloud.\nWe can easily go without it:\nFurthermore, Travis CI integrates with [Sauce Labs](https://saucelabs.com/)\nthat provides access to multiple cloud browsers\n(see [Using Sauce Labs with Travis CI](https://docs.travis-ci.com/user/sauce-connect/)).\nThus you can run your tests completely in the cloud.\nOr if cloud browsers is not okay... we can come up with something else without sacrificing style. \n. okay, it turns out they are synonymous in this sense \n. AFAIK, you can use instruct without a preposition:\ninstruct Travis CI how to...\nsounds more natural\n. > tell npm on\nas Armina once said\n\nI know why you Russians are always saying 'tell on' and 'inform on' - that's because of 1937\n\nBecause both these expressions mean 'to write a report about someone to the authorities'\n. Or was it me who said about 1937? Anyway, it's a common mistake =)\n. \"description\": \"Automated browser testing for the modern web development stack.\",\n. help you learn\n. Something like\nThe following files are included:\n. > go through\nwe can use complete not to repeat the previous sentence.\n. // NOTE: the default position should be outside of the page (GH-794)\n. > help you to\nplease, not again =)\n. Shouldn't wait for the maximum time... Does it mean it should wait for some moderate time? I guess it shouldn't wait at all if the js code doesn't lead to unload, right?\nit(\"Shouldn't wait for page unload if a link with javascript that doesn't lead to unload is clicked\", function () {\n. Unable to resize the window because the specified size exceeds the screen size. On macOS, a window cannot be larger than the screen.\n. doesn't this formatting seem awkward to you?\n. it('Should be a delay between mouseup, click and dblclick events', function () {\n. > before delay mouseup\ndelay before mouseup?\nit('Should not add an additional delay before mouseup if mousedown handlers worked for a long time', function () {\n. That's my version of Browser Support, so I'll explain...\nYes, I do think that we need to clearly list which cloud providers we support. Not just \"for example... search further for yourself\". Each new provider is a good feature and when we support, say, BrowserStack, I would like to have it listed somewhere in the docs.\nBTW, the parallel with Yeoman is not a good one.\n. objects with members - not sure it makes sense.\nMaybe we can call them just members?\nThis topic lists test API members in alphabetical order.\n. We only have two global functions - fixture and test.\nThe page, afterEach and beforeEach functions are exposed by Fixture objects in the global scope. (check this with @inikulin). I'm not sure but it seems we have to formally mention this Fixture objects in this topic.\n. I wonder what's right for this - global functions or maybe factory functions (like createTestCafe)?\n. Maybe just Objects?\n. Again, with members is not quite clear.\nMaybe members in italics as a single child item?\n* [DOM Node Snapshot](selecting-page-elements/dom-node-snapshots.html)\n    * *[members](selecting-page-elements/dom-node-snapshots.html)*\n. We can surely name it Index but nothing will be more simple and eye-catching for an alphabetical list than A-Z.\nThis topic is aimed to provide fast reference, for example, when someone gets puzzled with someone else's test code. A-Z will stand out from other topics.\n. hmmm... if only A-Z Index\n. // NOTE: we should not perform scrolling because the active window was already\n            // scrolled to the target element before the request (GH-847)\n. // NOTE: We should not move the cursor out of the iframe if the cursor path does not\n        // intersect with the iframe borders.\n. // NOTE: we use a flag to confirm file download because if unload is raised the browser can respond with an empty string\n. // NOTE: If elements are not in the parent-child relationships, non-ff browsers\n            // raise the 'click' event for their common parent.\n. // NOTE: In case the target element and the top element are the same, non-FF browsers are dispatching the 'click'\n        // event if the target element hasn't changed its position in the DOM after mousedown.\n. // NOTE: We should raise the `dblclick` event on an element that\n                // has been actually clicked during the second click automation.\n. // NOTE: In Firefox, <option> elements don't have `innerText`.\n        // So, we fallback to `textContent` in that case (see GH-861).\n. Argh, I copy-pasted from Mehul's email =)\n. Don't we have it?\nhttps://github.com/DevExpress/testcafe/pull/868/files#diff-1a1c3dd142f76a5fad803a0c52839881R5\n. ah, okay\n. // OPTIMIZATION: use buffer function as selector not to trigger lazy property ahead of time\n. Yep, I thought that it's just Armina who doesn't like contractions but MS Word also treats all contractions as \"poor style\" - so yes.\nCannot obtain information about the node because the specified selector does not match any node in the DOM tree.\n. it('Should provide snapshot property shorthands on selector', function () {\n. describe.only('[Regression](GH-882) Test should not hang when content is scaled or in Hi-DPI mode', function () {\n    // NOTE: Test must run on a zoomed page or in Hi-DPI mode\n. .option('--speed <factor>', 'set the speed of test execution (0.01 ... 1)')\n. @inikulin examples, please\neveryone gives links to pull requests\n. https://github.com/facebook/react/blob/master/CHANGELOG.md\nhttps://github.com/babel/babel/blob/master/CHANGELOG.md\n. oh, yeah, I forgot, should have checked... though @AndreyBelym said it's surely only a single file that needs to be changed.. but let's run them anyway\n. > using with\n. parameterized\n. parameterized\n. Again\n. And... since we deprecated t.select, we cannot do an assertion with inline selector\nhttps://github.com/DevExpress/testcafe/pull/1061/files#diff-fd8a16d9c18cfd8fe0301ad64d6daeccR28\nAm I right?. Anyway, repeating a constant three or four times in a row is too weird even for demonstrational purposes IMO. Even someone who has no idea about TestCafe selectors will immediately introduce a string constant\njs\nconst nameInput = '#developer-name';\nOtherwise, as a reader, I would feel like I'm disrespected a bit.. ... or maybe not\nok, I'll think about it again.  .option('-a, --app <command>', 'launch the tested app using the specified command before running tests')\n            .option('--app-init-delay <ms>', 'specify how much time it takes for the tested app to initialize'). testedAppFailedWithError:                       'Tested app failed with an error:\\n\\n{errMessage}',. That's why we have an example below.\nI don't know how to describe originNode in words without blowing up reader's mind.\nSometimes a brief description and an example do the job better.. I would rather show dependencies in examples. I don't like the idea of having a wide description here duplicated five times in the topic.. I'm not sure if such a connection would be obvious.\nAlso, in a ClientFunction example they will see an options object\n{ dependencies: { fn } }\nWhile in selector's filter it's just dependencies\n{ fn }\nIt can be misleading.. where needed\n// NOTE: symbols may have the same keyCode, but their \"event.key\" will be different, so we\n        // need to get the \"event.key\" property for each key, and add the 'shift' key where needed.. An error occurred when trying to calculate a custom ${err.property} property:. you're right, I misunderstood @miherlosev . >Suppose you have a project with Gulp.js set to run build tasks.\nWe assume it is.. Or, am I wrong and people use gulp without installing it globally? \\cc @DevExpress/testcafe-docs . Of selector? Don't think so. I have no other thoughts though. Custom DOM element state property?\n@kirovboris, whose property is this?. This description looks pretty formal to me, it isn't an example.. We use the name client function everywhere so far.. No, we do this only when the described function can be a template string (page). We don't do this in beforeEach,  afterEach, etc.. what's the good style replacement?\nis it\n```js\n    let result;\nif(testRunInfo.skipped)\n    result = 'skipped';\nelse {\n    const hasErr = !!testRunInfo.errs.length;\n    result = hasErr ? `passed` : `failed`;\n}\n\n```. A link to documentation will be enough. > And what about to include eval in a-z index for Test Controller?\neval is already there.\n\nwe want to list all for test controller we should mention eval and ctx\n\n1) this part is old - not added recently. diffs are wrong\n2) I didn't mean to list everything test controller is used for. what is it about parent? you mean it doesn't accept negative index?. Speed is expected to be a number between 0.01 and 1, but ${err.actualValue} was passed.. my bad. you mean the second assertion, like\n```js\ntest('My test', async t => {\n    await t\n        .setNativeDialogHandler(() => true)\n        .click(populate)\n    // Waits for the element to appear.\n    .expect(await nameInput.exists).ok()\n\n    // Keeps recalculating nameInput.value\n    // until the assertion passes.\n    .expect(nameInput.value).eql('Peter Parker');\n\n});\n?. ping @inikulin . @LavrovArtem is it true?. ok.\n            // NOTE: we should send the assertion command to the client only if the test is executed\n            // step-by-step in debugging mode to show debugging status in the status panel\n.\n            .option('--proxy-host ', 'specify the hostname of the proxy server')\n. Okay, will do this. Basically, it's a bad sign that we need to include such complex descriptions to the documentation. It means that we've made an unintuitive API. . For example, `branch of the role state` means nothing to the users.\n    unsupportedUrlProtocol:                'The specified test page URL {url} uses an unsupported {protocol}:// protocol. Only HTTP, HTTPS and FILE protocols are supported, as well as protocol-relative and relative URLs.',\n.\n        The \"${err.argumentName}\" argument specifies a URL that uses an unsupported ${err.protocol}:// protocol. Only HTTP, HTTPS and FILE protocols are supported, as well as protocol-relative and relative URLs.\n. I don't like horizontal scroll bars below the code . maybe. I'll update the screenshot separately.\n protocol - specifies the Node.js debugger wire protocol. Set to inspector to use the Inspector protocol. This protocol is available in Node.js v6.3 (or v6.9 for Windows) or newer. If you are using an older Node.js, do not specify the protocol option. In this instance, the Legacy protocol will be used.\n. removing this note.\n protocol - specifies the Node.js\ndebugger wire protocol.\nSet to inspector to use the Inspector protocol.\nThis protocol is available in Node.js v6.3 (or v6.9 for Windows) or newer.\nOlder Node.js versions do not support the protocol option.\nThey use the Legacy protocol that has issues with source maps.\n```. we now call this\n.option('--proxy <hostname>', 'specify the hostname of the proxy server'). * Markup imported via meta[rel=\"import\"] is now processed. (testcafe-hammerhead/#1161)\n The correct context is passed to MutationObserver. (testcafe-hammerhead/#1178)\n The innerHtml property is no longer processed for elements that don't have this property.  (testcafe-hammerhead/#1164). > Test run stopping\nWill this message be shown if I press Ctrl+C when tests are not running, e.g. when TestCafe is waiting for the remote worker to connect?. Then Stopping TestCafe... is the phrase to go. js\n            .option('-c, --concurrency <number>', 'run tests concurrently'). js\n    invalidConcurrencyFactor:               'The concurrency factor should be an integer greater or equal to 1.',. The number of remote browsers. what is <program>?. // NOTE: The first argument of emit() is a source file to be compiled. If it's undefined, all files in <program> will be compiled.\n        // <program> contains a file specified in createProgram() plus all its dependencies. This mode is much faster than\n        // compiling files one-by-one, and it is used in the tsc CLI compiler.. Oops, it was copy-paste, thanks for noticing. After some thinking, we didn't come up with a more detailed description. Good question, I guess it works for all page loads in the test. Am I right, @AlexanderMoskovkin ?\nThen it should be\n.option('--page-load-timeout <ms>', 'set the amount of time within which TestCafe waits for the `window.load` event to fire on page load before proceeding to the next test action'). If we want to differentiate these channels from Google Canary, it could make sense. Google Chrome Canary has a dedicated chrome-canary alias now. Is it a common thing to call these channels regular in contrast to the Canary channel?. Don't understand what it all means. Cannot evaluate the \"${err.actualValue}\" expression in the \"${err.argumentName}\" parameter because of the following error:. TestCafe automatically waits for page loads and XHRs before the test starts and after each action.\nIt also features smart test actions and assertions that wait for page elements to appear.\nHow d'you like this?. .option('-r, --reporters <name[:outputFile][,...]>', 'specify the reporters and optionally files where reports are saved')\nIs switching to plural reporters worth making a massive breaking change?. ok. If we do, and when MS allows invoking multiple Edge windows, this note will immediately become false.\nIf we don't, it will still be true until we change browser-natives to support MS Edge.\nThat's why I don't like documenting the functionality of someone else's products.. text\n            .option('--debug-on-fail', 'pause the test if it fails'). Is there really no such type?\nI've seen it in Helen's examples\nhttps://github.com/DevExpress/testcafe/pull/1783/files#diff-70e36160da834fc09f9ab211e6fd2d9dR251. I don't think we should add it. That's intuitive enough.\nWe don't write that we can specify browsers or pass command line parameters in any order. Why should we say that?. Agree about promise. Should we leave Value or Object? AFAIK, they are all objects so we should leave Object, but you say that value includes object?. I wasn't going to specify the page since we can omit it, but if you think it's better to add it I'll do this.. Hmm, we were going to get rid of Any type. Maybe we just remove Value?. I have no control over the anchor IDs. As long as we name the section DragToElement Action Options, the ID is dragtoelement-action-options.. fs.writeFile on the client?. /**\n     * Messages output to the browser console by the console.log() method.\n     */. /**\n     * Warning messages output to the browser console by the console.warn() method.\n     */. /**\n     * Error messages output to the browser console by the console.error() method.\n     */. /**\n     * Information messages output to the browser console by the console.info() method.\n     */. /**\n     * Returns an object that contains messages output to the browser console.\n     *\n     * This object exposes the following properties.\n     *\n     * -- `log` contains log messages written by the console.log() method\n     * -- `error` contains error messages written by the console.error() method\n     * -- `warn` contains warning messages written by the console.warn() method\n     * -- `info` contains information messages written by the console.info() method\n     */. Do we need to list the return object's properties here? If not, just remove them.. okay, I see. I'll add a separate feature. Yep, I'm definitely going to do this. Yeah, that's what I said above =)\nThat might be because this time I used my local testcafe-gh-page-assets instead of cloning the repo. Why did I do this? Because https://github.com/DevExpress/testcafe-gh-page-assets/pull/44 is not merged yet.. Maybe\nuse patterns to compose screenshot file names and paths: %BROWSER%, %BROWSERVERSION%, %OS%, %OSVERSION%, %USERAGENT%, %DATE%, %TIME%, %FIXTURE%, %TEST%, %TESTNUMBER%, %FILENUMBER%'. What commands do you mean? Only SetFilesToUploadCommand?. > the screenshot file where screenshot should be saved\na file where screenshots are saved? \nmaybe just \"relative path to the screenshot file\"?. maybe rename to includeMargins?. What about @AlexanderMoskovkin 's suggestion scrollToCenter?. Or what we have now: The relative path and the name of the screenshot file to be created.. I'd better add this to https://devexpress.github.io/testcafe/documentation/test-api/waiting-for-page-elements-to-appear.html. if this scheme really matches the way CSS works then I'm for it. So, regarding negative values, does it work this way now?\nField    | Type   | Description\n-------- | ------ | --------------\ntop    | Number | The top edge of the cropping rectangle. If a negative number is passed, the top edge coordinate is calculated from the element's bottom edge.\nleft   | Number | The left edge of the cropping rectangle. If a negative number is passed, the left edge coordinate is calculated from the element's right edge.\nbottom | Number | The bottom edge of the cropping rectangle. If a negative number is passed, the bottom edge coordinate is calculated from the element's top edge.\nright  | Number | The right edge of the cropping rectangle. If a negative number is passed, the right edge coordinate is calculated from the element's left edge.. \\cc @AlexanderMoskovkin we are waiting for you here. oops, I don't remember why I called it this way. Ah, because they start with 'R'. \\cc @AlexanderMoskovkin . No, it actually works. \nhttps://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach. I see nothing wrong here.\nAt the first time, we create a selector in the easiest way possible. Because the main point here is getting selector properties. We don't worry much about how the selector is created.\nIn the next section, we show that we can create a selector not only with a CSS string, but also with a function.. \\cc @AlexanderMoskovkin  - maybe you see something wrong?. Okay, changed it according to your example. hmm... I think that with DOM elements looks okay to me. They all start with a space for some reason. @miherlosev seems to be very worried about older browsers. And since we got rid of NodeList.forEach because of this, let's not spoil it adding arrow functions.. Tried an arrow function. the following works in Chrome but it doesn't in IE\n```js\nimport { Selector } from 'testcafe';\nfixture My fixture\n    .page https://devexpress.github.io/testcafe/example/;\ntest('My test', async t => {\n    const checkBoxesStartingWithR = Selector(() => {\n        var allCheckboxes = document.querySelectorAll('input[type=checkbox]');\n    allCheckboxes = Array.prototype.slice.call(allCheckboxes);\n\n    var targetElements = allCheckboxes.filter(checkbox => checkbox.labels[0].textContent.startsWith(' R'));\n\n    return targetElements;\n});\n\nawait t.click(checkBoxesStartingWithR.nth(0));\n\n});\n. False alarm, this is because of `HTMLInputElement.labels`.\n        Unable to capture an element image because the resulting image dimensions are zero or negative.\n. still can't believe we can use them in client code \ud83d\ude04 .\n     * the corners where top and left (or bottom and right) edges of the element's content area intersect\n.\n     * Specifies the X coordinate of the scrolling target point.\n.\n     * Specifies the Y coordinate of the scrolling target point.\n. no, it failed when it was `.expect(hiddenInput.value).eql(1)`\nafter I added brackets `.expect(hiddenInput.value).eql('1')` it passes.\n        Unable to scroll to the specified point because a point with the specified ${err.properties} is not located inside the element's cropping region.\n.\n            .option('--proxy-bypass ', 'specify a comma-separated list of rules that define URLs accessed bypassing the proxy server')\n``. Regarding https://github.com/DevExpress/testcafe/pull/2187#discussion_r172121922 we can just addRules consist of URLs with wildcards enabled.\nIs that simpler. @AndreyBelym ?. Maybe this topic doesn'tcontaincases butdescribesthem orillustrates?. 1. I suspect thatall child elements of all nodes within a DOM hierarchyinclude literally all elements on the page. That's not what we are going tofind. Maybe you wanted to say that we cansearch throughall these elements? And, BTW, I would sayall nodes in the DOM hierarchy- notwithin a2. I can't figure out whatexactly child nodesmeans. Child nodes of an exact parent node?\n. @helen-dikareva , can we do this using theSelector.addCustomDOMPropertiesmethod more easily?.This text is considered as a child node`\nNot sure but maybe as here is redundant. only from particular two columns\ndoes from two particular columns only sounds more correct?. but can do this seems incorrect\nI would say but you can obtain the childNodes property from the client side. I'm not sure that but can is grammatically correct. Please ask the correctors. . > This text is considered as a child node\nDo you think as is in place here?. This phrase is rather difficult to grasp because there are many node and element words and you need to track where we use one or the other. How about this?\nFor each DOM node, TestCafe allows you to search through its child **elements** using the [Selector.child](../selecting-page-elements/selectors/functional-style-selectors.md#child) method. However, if you need too include child **nodes** in your search results, use client functions.. I still think that two particular is grammatically better. Again, talk with the correctors please.. Oh, I thought you duplicated them deliberately https://github.com/DevExpress/testcafe/pull/2211#discussion_r174173455 . asyncTest('an active input should be blurred and a parent of a disabled input should be focused after a click on the disabled input', function () {. I don't usually check test names, is this one a very important test?. that's ok, I'm not against checking test names. I know neither minimatch nor match-url-wildcard syntax but judging by npm pages I better understand match-url-wildcard because it's designed specially for URLs and all the examples show URLs.\nWith minimatch,  I have questions like does it handle schemas the way match-url-wildcard does?\n```\nvar rule = 'google.com';\nexpect(matchUrl('http://google.com', rule)).to.be.true;\nexpect(matchUrl('https://google.com', rule)).to.be.true;\n```. @AndreyBelym It's okay. > Maybe just requestFilter?\nIf it's a rule it should be requestFilterRule. What I don't understand is why init is here.. So what about request for request @AlexanderMoskovkin mentioned? Do you mean response for request or, if you actually mean that you cannot find a recorded version of this request, maybe it's better to say A request with ID ${event.id} was not recorded?. Did I understand it right that logOptions are public? Let's then call them without contractions. \nlogResponseBody\nstringifyResponseBody\netc.. throw new RequestHookConfigureAPIError(RequestLogger.name, 'Cannot stringify the response body because it is not logged. Specify { logResponseBody: true } in log options.');\nBTW, aren't these lines duplicated?. throw new RequestHookConfigureAPIError(RequestMock.name, \"The 'respond' method was not called after 'onRequestTo'. You must call the 'respond' method to provide the mocked response.\");. throw new RequestHookConfigureAPIError(RequestMock.name, \"The 'onRequestTo' method was not called before 'respond'. You must call the 'onRequestTo' method to provide the URL requests to which are mocked.\");. ```\n        There was an error while configuring the request hook:\n    ${err.requestHookName}: ${err.errMsg}\n\n. `Cannot find a recorded request with id=${event.id}. This is an internal TestCafe problem. Please contact the TestCafe team and provide an example to reproduce the problem.`. That's why contractions are not a good idea =). @miherlosev once said that grouping requests by the origin test is a use case. I've changed the variable name to `logRecord`. ehm, I used to have `console.log` here instead of assertions, I guess I will go back to them.. I thought the body is just some custom object and that we don't know anything about it (i.e. can't give more details).\nSo you are saying that we can give more info here?.\n    screenshotMarkNotFound:                  'Unable to locate the page area in the browser window screenshot at {screenshotPath}, because the page area mark with ID {markId} is not found in the screenshot.',\n```. an array. not quite good. Yes, it throws. Yeah, I didn't think about wildcards in the middle. I don't like these two points:\n* You can specify one metadata entry for a fixture or a test.\n* You can specify a set of metadata entries for a fixture or a test.\nAfter reading the first one, I begin thinking that I can specify only one entry. I personally got surprised. And then after reading the details I see the second point that contradicts the first one.\nLet's either add either...\n* You can either specify one metadata entry for a fixture or a test...\n* ...Or a set of metadata entries.\n(but that's not quite good)\n... or add a phrase before this list.\n``\nTo specify metadata, use themeta` method. You can call this method both for a fixture and a test.\nThe 'meta' method allows you to specify one or several metadata entries.\n\nSpecifying one metadata entry for a fixture or a test.\n\nblablabla\n\nSpecifying a set of metadata entries for a fixture or a test.\n\nblablabla\n```\nor even \n```\nSpecifying one metadata entry for a fixture or a test\nblablabla\nSpecifying a set of metadata entries for a fixture or a test\nblablabla\n.\n    const incompatibleLicenseAssertionMsg = Alert! The module '${module}' contains an incompatible license '${license}' and cannot be used with TestCafe!;\n.\n    const unknownModuleAssertionMsg       = The module '${module}' contains an unknown license '${license}'. You can add this license to the list of known permissive licenses. But be cautious and do this only if you are sure that this license is compatible with TestCafe;\n. I have doubts regarding this phrase. Does it sound awkward?. Maybe, I was thinking about it. If only... This is the first place we mention auto-detected browsers. In my version, we implicitly describe what these browsers are (these are browsers that can be detected and referred to by their alias). In your version, we just mention `'auto-detected browsers'`.... We can only find automatically detected browsers, not all locally installed. But you're right, other sentences in this section already say what you can do with the aliases, so that it's redundant to say it once again.. Which problem does mentioning `z-index` solve? If better (simpler) explanation - then I disagree, the word `overlay` is more simple and rather strict. If you want to say how the user could avoid overlaying (by specifying `z-index`), then that's a different story. `quarantineAttemptID` -> `quarantineAttempt` - isn't it just a count, not an ID?\n. `onFail` -> `takenOnFail`. Should I check this also? Will users face this? If so, what does it mean?. `isPassed` -> `passed`. okay then, let it be. okaaaay.js\n            .option('--ssl', 'run TestCafe proxy server over the HTTPS protocol')\n```\nMaybe we should rename the flag to --https considering the description? . > specify ssl options\nSo, you can actually specify some options after this flag? Which options?. Cool!\nAs far as I understand, options are not required, so we can write\njs\n            .option('--ssl <options>', 'enable access to TestCafe via the HTTPS protocol and specify SSL options'). js\n            .option('--ssl <options>', 'specify SSL options for starting TestCafe proxy server over the HTTPS protocol');. js\n            .option('--ssl <options>', 'specify SSL options to run TestCafe proxy server over the HTTPS protocol');.             .option('--no-page-reload', 'disable page reloads between tests'). disablePageReloads everywhere. can't we name it disablePageReloads in JS API?. Maybe make it a little shorter?\n.option('-p, --screenshot-path-pattern <pattern>', 'use patterns to compose screenshot file names and paths: ${BROWSER}, ${BROWSER_VERSION}, ${OS}, etc.')\nUsers will have to read documentation to use this feature anyway. So there's no need to list here all the variables. We can do it in the docs,. My version is\nThe path to the base directory where screenshots are saved. The actual path to a screenshot file is defined by the default path patterns. You can override them with a custom pattern using the screenshotPathPattern parameter.\nThe first and second sentences are linked by contrast between path to the base directory and the actual path to a screenshot file. So, I agree that it better reads if you leave The actual path to a screenshot file at the beginning of the sentence,\nThe third sentence is linked to the second one by contrasting defined by the default and you can override. That's why I leave you can override at the beginning and use using at the end.\nMaybe my theory about links between sentences is completely wrong, @dirk-pieterse ?. > The path to the base directory where screenshots are saved. The default path patterns specify the actual/relative path to a screenshot file.\nIn this sentence, the default path patterns is 'new' information. If we leave it at the beginning, it would look as if we spoke about something already familiar to the reader, while it is not so. To my taste, it is natural to put it to the end, linking (again) the first and second sentences with path to the base directory vs the actual path to a screenshot file.. 1. served over HTTPS\nI've picked this up from our developers. I've googled a bit and found this expression in some articles (https://www.itnews.com.au/news/firefox-blocks-insecure-content-served-on-https-352592) and in Google documentation describing error messages (https://support.google.com/blogger/answer/6286127?hl=en).\n\nAnother popular alternative is `served on HTTPS`. If you feel like it's better - I can use it instead.\n\n\n\nin a regular way\nYou're right, I should be more specific\n\n\nTests fail with errors\nHm... I thought this is a correct phrase, but probably it is a calque from Russian.\n\n\nVersion 2\nSome browser features (like Service Workers, Geolocation API, ApplePaySession, or SubtleCrypto) require secure origin. This means that the website should be served over the HTTPS protocol. If you run tests against pages with this kind of browser API through HTTP, these tests fail because of JavaScript errors.. 1. serve?\nYes, the server **serves** web pages. You can find this verb even on Wikipedia.\n\nhttps://en.wikipedia.org/wiki/Static_web_page\nhttps://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server#Static_vs._dynamic_content\n\n\nthat... that?\nYep, I didn't like it either.\n\n\nVersion 2\nTestCafe can serve the proxied tested page over the HTTPS protocol. When this option is enabled, the client browser connects to the TestCafe proxy server over HTTPS. This allows you to test web pages with browser features that require secure origin.. OK\nThe hostname or IP you use to access the TestCafe server.. > Pages that are tested with this kind of browser API through HTTP fail because of JavaScript errors.\nSorry, my bad, my sentence was ambiguous. Pages with this kind of browser API - not tested with this kind of browser API. And tests fail because of JavaScript errors - not pages fail...\nAlso, test through HTTPS seems not strict enough.\nSo, we need one more version. How about this (got rid of pages)?\nSome browser features (like Service Workers, Geolocation API, ApplePaySession, or SubtleCrypto) require a secure origin. This means that the website should use the HTTPS protocol. If TestCafe proxies such a website through HTTP, tests fail because of JavaScript errors.. Got more details from the developers. I think we can write it this way:\n* HTML5 drag events are no longer simulated if event.preventDefault is called for the mousedown event ([#2529](https://github.com/DevExpress/testcafe/issues/2529)). maybe add first released in *first released in 2013, commercial web application*?\notherwise, when there's just a date, you may get an impression that the product is not modern. *first released in 2016, free and open-source node.js application*. *first released in 2018, commercial desktop application*. run through correctors:\n.option('--ignore-uncaught-errors', 'ignore uncaught errors and unhandled promise rejections, which occur during test execution'). @kirovboris said today that it would be good to know the number of attempts to estimate the performance loss, so maybe we'll leave three to five times?. This was my first version, but I thought that it could be understood as \"runs three times\".. > allows you not to wait\nI feel like this expression is not quite easy to read\n\nallows focusing\n\nAre you sure this is correct?\nI would say something like\n\nStops the entire test run once any test fails. Enable this option if you don't want to wait for all the tests included in the test task to finish and instead want to focus on the first error.\n. An assertion method is not specified.. Like... Make it the first step in this section saying \nLook at the report's error message to learn [which selector has failed](#debug-selectors). Add the t.debug() method before this selector to stop test execution before it reaches the selector... bla-bla-bla\n\n?. Not sure I understand what these changes mean.. A guy responsible for texts suggests the following descriptions:\njs\n            .option('--test-meta <json>', 'run only tests with matching metadata')\n            .option('--fixture-meta <json>', 'run only fixtures with matching metadata'). Hm... Not sure I got it. Why would we give a link to the Actions topic if a selector can fail anywhere - in an assertion for instance.. Aren't we being too aggressive with this clear and concise everywhere? Can we be more friendly instead?. Is this section mandatory? Can we make it optional (and say it here)?. okay, let it be this way. I don't think it matters actually, but if you like.... I feel like the way it is, this option is emphasized a bit (at least). The way you suggest - it could be lost behind a larger code block.. @AlexKamaev says test won't be reported as failed - everything just finishes. yeah, and probably the test run finishes is a good diplomatic way to say about this.. Okay, I'm probably wrong about diplomacy. We can say the test run finishes and an error is thrown . Although, I don't think we should post a screenshot with this global error.. According to what @AndreyBelym  said, you cannot use it if you pass it as the dependency under the same name. I assume that if you specify a different name, it will work. Am I wrong?. okay (I didn't see @AndreyBelym's reply). > Yep, just show the right way to import CF's deps.\nI thinks that we should say don't use import explicitly.\nBecause, well... Do you remember me asking what is special about the way we import functions?\nhttps://github.com/DevExpress/testcafe/issues/2346#issuecomment-383896279\nThe thing is that this bare example doesn't suggest that we shouldn't use import.\n(If I use import in my code, face problems with passing the imported function to the ClientFunction and find this example... I wouldn't think that the reason is import. Even if I see the difference between my code and the example, I may scan it through thinking \"okay, here's import, here's require, there's no difference...\"). Although... maybe I'm wrong and a simple advice to use require is enough.... Yeah, good. In my version, I don't like that it sounds like it's critical towards Babel. Your version is okay.. @AndreyBelym Is that okay if we leave it as is?. So, we expect people to look for info in the Community section in case they need help? I wouldn't think that I need Community in this case.\nWhat about a separate section Get Help?. > For questions...for community support\nNot good - these phrases sound like they contradict each other.\n<!-- In case you want to ask a question, we strongly recommend StackOverflow to get community support. -->. Firefox 100 (no capital second f). Well, we don't describe much here...\nWhat if we say, for instance,\njs\n            .option('--disable-test-syntax-validation', 'allows you to provide .js files that do not contain tests, while tests are imported or generated dynamically')\n(not checked with Dirk, just a suggestion)\n. Dirk's version:\ndisables checks for 'test' and 'fixture' directives to run dynamically loaded tests. If we write it in plain text, it will be \"is client-executable command\". We make up the word \"client-executable\", which is not good.\nMaybe call it simpler:\njs\nexport function isExecutableOnClientCommand (command) {. Yeah, I forgot, I wanted to ask about this.. well, the topic is called Mocking HTTP Responses so it says we're mocking responses not requests.. Is the topic title wrong?. Well, I begin thinking that we need a recipe for TFS as well.. Even if we never write about TFS, how is this explanation going to help people who use TFS?. I didn't want to make them too noticeable. We need a simple cross-reference here.\nThe NOTE style brings too much graphics - icon, borders, italics... - in each section. I don't want so much visual noise.\nAs to where they are placed in CLI and JS API - this is dictated by the way they correspond to each other.\nIn CLI, one flag corresponds to one option in most cases. So, each cross-reference is placed at the end of the corresponding section.\nIn API, some config options correspond to one API method. In this case, they are placed at the end of the section, like in CLI. Other config options correspond to a method's argument. In this case, I could place them inside the table in a new column. I've tried this, but it makes tables too wide and it introduces inconsistency. So, I ended up with lists at the end of each section.. So, that's what my logic is. We can fix it if we come up with any counterarguments. \\cc @helen-dikareva . Maybe we'll do this in a separate PR (since we'll also have to do this for CLI and it's not so obvious how to group them)?. Good idea, I was thinking about it, I just don't know how to test this file to ensure all options together are valid and non-contradictory. (I'm not sure I could possibly run TestCafe on my computer with all the possible options set).\nAnyway, I'll add a file to /examples.. You want to add marks to the command syntax line (the very first line)?\nWell, I wouldn't do that. It would indicate that you can go completely without these arguments being specified (before we even talk about the configuration file).\nI don't want to lead readers into thinking that these arguments are actually optional. They are not, we are just providing a new way to specify them.\nThat's why I added a note about them being optional after the paragraph about the configuration file.. let it be cannot. Has it always been so, or was it introduced as a breaking change at some stage?\nDo we need to detail this object's structure or the formatError helper will be enough?. Well, if it's a limitation, we should say so, but we can probably do better to attribute it to Node.js/file system/common sense?\nHow can we better explain the fact that only one watcher can exist?\n@AlexKamaev @kirovboris . So what about this:\n\nWhen you use a LiveModeRunner, you can call the runner.run method only once. In rare cases when you need multiple live mode sessions running in parallel, you can create several TestCafe server instances.. Okay, we decided to document only formatError. > we can do it only for Chrome and Firefox\n\nwow, how come I didn't know it till now?. I know, I know, it's just... I just wanted to keep the signature as simple as possible... But if you are saying it's important, okay.... I'll copy motivation from here once it's approved:\nhttps://github.com/DevExpress/testcafe/pull/3388/files#diff-1ce235e72b3786322b3f4b017ce27cd7R80\nWill it be enough?. Not sure. Now they are highlighted as key features of the TestCafe product family. If we move them to TestCafe, they could get lost among other features.\nMaybe we should do the opposite - move a couple of key features, like Smart Assertion Query, Automatic Waiting Mechanism and Concurrent Test Execution to the first \"common\" block?\nWhat do you think? @helen-dikareva . Why do we revert to an old error message here?. As long as we are focused on 'cannot', \njs\nconst cannotGetListOfProcessError     = 'Cannot get a list of processes';. Dirk's version:\njs\n    problematicPathPatternPlaceholderForVideoRecording: 'The {placeholderList} path pattern placeholder{suffix} cannot be applied to the recorded video.\\n' +\n                                                        '\\n' +\n                                                        'The placeholder{suffix} {verb} replaced with an empty string.'\nwhere {suffix} is s and {verb} is either was or were.. a) behavior: I thought that if we speak about TestCafe, we mean its behavior, but, okay, we can say:\nTestCafe v1.0.0 introduces minor changes to the framework's behavior and programming interface.\nor\nVersion 1.0.0 introduces minor changes to TestCafe behavior and programming interface.\nb) address: I didn't use the expression \"breaking change\" here, but I did mean breaking changes. So, yes, they are sort of issues for our customers. Can breaking changes be \"addressed\" or is it still incorrect? We can say something more neutral instead, like:\nThis document lists these changes and describes how to migrate to the new version.. I think we can remove the version number, but probably, as long as we talk about breaking changes (a thing that should be meticulously documented, like legal stuff), maybe we can reiterate things here?. Well, this is a blog post, not a doc, so I thought that the opening phrase could be something like that... However, if we choose to go with something more neutral, we can write:\nTestCafe v1.0.0 is our first major update that includes features like video recording, configuration file, \"live mode\" for rapid test development and much more.. (the same response as in the previous case). I don't see a problem here - if you tell users that they should create a file, it's natural to say where to place it (how can you not say about it).\n. To do what is written in the first sentence - 'access warnings'. Will adding 'to do this' help?\nYou can now access warnings that appeared during the test run from the reportTestDone method. Use the warnings property of the testRunInfo object to do this.. Because this function actually escapes strings (https://en.wiktionary.org/wiki/escape#Verb, meaning no 5). \nHowever, we can use 'encode' instead.\nThe following example demonstrates how to encode the fixture name *Tests for the \"Example\" page* for HTML.. Yes, stringify.\nhttps://en.wiktionary.org/wiki/stringify\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\nOf course, we can say 'convert to strings' instead.\nUse the formatError helper to convert objects in this array to strings.. Yes, it's \"ing\" and - do you mind \"bypass\" at all? Anyway, there seems to be no expression with \"bypass\" that doesn't involve \"ing\". So, what's the right synonym - I came across \"in circumvention of\" - is it okay?\nSpecifies the resources accessed in circumvention of the proxy server.. Oh, yes, I don't like this phrase at all, not just because of 'allows':\nUse this option when you are intended to fix failed tests one-by-one, and do not need a report on all the failures.\n. It seems like you've pasted a sentence from the previous reply here (I judge by the 'videos' being mentioned). What's the right version? Is it:\nTestCafe allows you to take screenshots of the tested webpage at any moment during test run, or automatically whenever a test fails.. We pass these encoding options directly to FFmpeg, so, yes, you can specify any of them. We can't list them here because they are subject to change by FFmpeg, so we can just say - use anything FFmpeg supports - and give a link to their docs.\nDo you find this confusing?\n. So, we can say 'do one of the following:' - you usually approve it - but 'use either of the following:' requires a noun? In this case, I think 'options' is the right one.. By saying 'you specify', I mean 'you normally specify'. Or, we can be more explicit, because actually you cannot enable screenshots without specifying the base path. So, we can say:\nYou should specify the base path to the directory that stores screenshots or videos to enable these features.. Well, many (or even most) libraries do search for configuration files in subdirectories and then merge them with the base directory's configuration file. We don't do this, but I think some people could assume that we do. That's why I thought it was worth mentioning.. I'm not sure about 'reflects'. TestCafe runs tests, so that you can look at the browser (not TestCafe) and see the changes. Like, TestCafe doesn't directly 'reflect' changes. Or you think it's okay?. Oh, I meant a verb.\nIf you launch TestCafe from the console, this option outputs a QR-code that represents URLs used to connect the remote browsers.. (the same reply as in the previous case). No, circumvent was a very bad idea, the common word is bypass.\n\n. So, something like:\nRequires that TestCafe bypasses the proxy server to access the specified resources.. ",
    "AndreyBelym": "lgtm\n\u0432\u0442, 25 \u0430\u0432\u0433. 2015 \u0433. \u0432 18:08, AlexanderMoskovkin notifications@github.com:\n\nlgtm\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/superroma/testcafe-phoenix/pull/43#issuecomment-134617004\n.\n. lgtm\n. FPR\n. Some frameworks stops execution after failed assertion(using default assertion mechanism), examples are JUnit, Visual Studio Team System, NUnit, Selenium. \n\nBut most of them have mechanisms to continue test case execution: Soft Assertions in Selenium, Error Collector in JUnit, Multiple Asserts in NUnit; so I'd give my vote for 'Stop on error' option.\n. FPR\n. FPR\n. Note on es6-promisify: we've discovered a difference between it and Promise.denodeify (and our own promisify implementation from hammerhead).\nIf node-style function has callback with conventional  two arguments (error, data), everything is identical: Promises returned from both es6-promisify and Promise.denodeify resolve data, and reject error. But if callback is called with more arguments, like request - (error, response, body), then function promisified with es6-promisify will resolve array [response, body], unlike Promise.denodeify and our own promisify, that resolves just response.\n. lgtm\n. LGTM except that it's more conventional to use -v (small v) as shortcut for --version. I can't remember any other CLI tool, that uses big V, except  Mocha. And our other shortcuts  have small letters first, so -V looks out of order a bit. \n. Cool, I like it.\n. FPR\n. FPR\n. FPR\n. Travis messed with node 0.10 again\nThe command \"eval npm install \" failed. Retrying, 2 of 3.\nnpm WARN package.json @ No repository field.\nnpm WARN unmet dependency /home/travis/build/testcafe-build-bot/testcafe-phoenix/node_modules/del/node_modules/rimraf/node_modules/glob/node_modules/inflight requires once@'^1.3.0' but will load\nnpm WARN unmet dependency undefined,\nnpm WARN unmet dependency which is version undefined\n. I'm working on it.\n. I'm working on it.\n. This issue depends on DevExpress/testcafe-hammerhead#294.\n. I'm working on it.\n. I'm working on it\n. FPR\n. Nevermind, missed last commit about BrowserConnectionsSet\n. Created #131 to implement BrowserConnectionSet.\n. I'm working on it.\n. Things we learned after some discussion:\n- There are two kinds of connections: local and non-local. When finishing test runner, we must wait until local connections are closed. Also we need to wait for non-local connection going to idle state, if it isn't shared with other runners.\n- Local connections must be closed when an exceptions occurs or test is done.\n- They belong exclusively to a test runner, so it's allowed to clear their job queue.\n- Non-local connections may be shared between different test runners, so their job queue contains jobs form a number of runners. Therefore we cannot empty their queue by demand.\n- When test is done successfully, we must check  job queue of non-local connection. If it's empty, runner are waiting until browser goes into idle state. If job queue is not empty, it means that connection has jobs from another runners, and finished runner doesn't have to wait for browser idle state.\n- When a some connection is failed, we need to remove job of current runner from queue in all other non-local connections, and what for idle of connections, that have empty job queue. Same as above, if non-local connection has non-empty job queue, we are not waiting for it.\n. I'm working on it\n. FPR\n. FPR\n. FPR\n. I'm working on it.\n. The issue has become a duplicate of #131.\n. You need to rename _convertBrowserAliasToBrowserInfo to_convertAliasOrPathToBrowserInfo in tests: https://github.com/superroma/testcafe-phoenix/blob/master/test/server/runner-test.js#L469, here and below\n. Can you also change mock browser names in https://github.com/superroma/testcafe-phoenix/blob/master/test/server/runner-test.js#L520 and https://github.com/superroma/testcafe-phoenix/blob/master/test/server/runner-test.js#L542, please? E.g chrome to foo, ff to bar or smth.\n. lgtm\n. FPR\n. FPR for now\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. Closing the PR because #162 was merged in #131. I'll create a new PR to fix #131.\n. FPR\n. FPR\n. FPR\n. I'll put here my thoughts about all the stuff, and update it as more will come out :smile: \nA BrowserProvider plugin\n\nmust be a package with name testcafe-provider-${pluginName}. pluginName serves as id of the provider. \nshould export following functions:\n\n``` js\n    //required\n    async open(descriptor: object, startPage: string) => object;\n    async close(handle: object, pageInfo: object) => void;\n//optional\nasync listAvailableAliases() => [string];\nasync isValidAlias(alias: string) => boolean;\nasync getDescriptorDefaultValues(alias: string) => object;\n\n//optional\nasync resize(handle: object, pageInfo: object, width: integer, height: integer) => void;\n//optional\nasync screenshot(handle: object, pageInfo: object, screenshotPath: string) => void;\n\n```\nA BrowserDescriptor object\n\nplain JS key-value object with required key alias. Any other properties may be defined by each browser provider implementation. Some of these implementation-defined properties may be required, other may have default values.\nalias is not required to be unique, or to contain all required information about browser. In fact, it is just textual human-friendly identifier that allows user distinguish between different browsers, e.g. an short browser name for autodetected local browser, or a path to a generic browser, or a capability string for saucelabs.\nthe browser descriptor itself must store all required info for starting the browser.\n\nExample:\n- LocalBrowserDescriptor: { alias: 'chrome', args: '--new-window', path:'C:\\\\Google\\\\chrome.exe };\n- SaucelabsBrowserDescriptor: { alias: 'chrome canary windows 10', sauceLogin: '****', saucePass: '******' }\nA Browser class\n\nasync listAvailableAliases() => [string] - list identifiers that are guaranteed to be valid as a browser alias. It's not required to return all possible aliases: it is impossible in some cases, e.g. for direct browser paths.\nasync isValidAlias(alias: string) => boolean - validates the specified alias. If it returned true, you can use the argument with getDescriptorDefaultValues, and can not otherwise.\nasync getDescriptorDefaultValues(alias: string) => object - should return a key-value object with default values for keys (properties), that may be used in a browser descriptor. alias parameter allows to have different default values for different browsers. This is how the descriptor is formed: user-specified through CLI or GUI alias + getDescriptorDefaultValues(alias) + user-specified values.\nasync open(descriptor: object, startPage: string) => object - starts the browser by given descriptor on a specified page url. Returns a handle object, that represents a running browser instance. For local browsers, this method is supposed to return an OS-specific id of the created window for being able to address it in close, resize, and screenshot.\nasync close(handle: object, pageInfo: object) => void - closes the browser. pageInfo contains at least title and url properties - the page's title and URL respectively. Most likely it must contains also width and height properties - the values of window.innerWidth and window.innerHeight.\nasync resize(handle: object, pageInfo: object, width: integer, height: integer) => void - optional, allows to resize the browser specified by handle. Conversion from viewport names to numeric sizes can be performed internally by testcafe stuff.\nasync screenshot(handle: object, pageInfo: object, screenshotPath: string) => void - does a screenshot.\n\nHelper functions\nAt least we need error reporting. \nAlso I will really appreciate, if we will find a way to allow an execution of Hybrid functions. It will allow to execute code on a client, which is needed e.g. to solve https://github.com/DevExpress/testcafe-browser-natives/issues/57: guys from ASP team use clientWidth/clientHeight to determine actual client area of the browser, and then use it to calculate needed browser window adjustment and resize client area to exact specified size\nAccess through CLI\nI'll try to explain handling of the browser arg on  a example:\nchrome,ie;local:chrome,ie;path:/../../,sauce:'chrome win 10',username='***',password='***'\nSo it has grammar like:\nBrowserArgument := ProviderString [';' ProviderString]\nProviderString := [PluginName ':' ] ID [',' ID]* [',' KeyValue]*\nKeyValue := String '=' String\nID := String\nString := NonControlChar* | ' \" ' NonQuoteChar* ' \" '\nNonControlChar := Any character, except ' , ' ' ; ' ' = ' ' \" ' \nNonQuoteChar := Any character, except ' \" '\nLegend:\n[] - optional occurence\n* - repeat 0..Inf\n'x' or ' x ' - literal x\n| - alternative\nif PluginName ':' part is omitted, PluginName becomes local. ID is an alias, or path, or capability string - previously mentioned BrowserDescriptor.id. \nSo it's mostly compatible with our current super-nice simple syntax, because chrome,ie,firefox =>  local:chrome,ie,firefox => local:chrome;local:ie;local:firefox. \nAbout remotes: we can just filter them from local IDs, it is similar what we are doing right now. But also it will be interesting to implement it as a provider, so you can write like chrome,ff;remote:3;path:/usr/bin/firefox.\n. > I'm not sure I understand how Browser class should be implemented. E.g. if I make saucelabs plugin and I have 50 browser there should I implement 50 classes with that interface?\nNope, you implement a class, that starts a tunnel to Sauce, and starts a browser by specified capability string. Then testcafe create 50 instances of this class with different capability strings.\n. Ok, I'll do it.\n\u0441\u0431, 5 \u0434\u0435\u043a. 2015, 2:55, Ivan Nikulin notifications@github.com:\n\n@DevExpress/testcafe https://github.com/orgs/DevExpress/teams/testcafe\nCan someone else take care of this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/211#issuecomment-162112880\n.\n. I'm working on it.\n. FPR\n. FPR\n. FPR\n. I'm working on it.\n. Depends on DevExpress/testcafe-hammerhead#318.\n. The issue in hammerhead was just fixed, so this issue can be closed after publishing a next version of hammerhead.\n. Fixed in testcafe-hammerhead@3.1.2.\n. lgtm\n. Looks nice, but let's wait for #226, just to be sure :) So rebase the PR after #226 will be merged, please.\n. lgtm\n. lgtm\n. I'm working on .rightClick now.\n. I'm working on .doubleClick now.\n. Working on .hover now.\n. Working on .drag and dragToElement now.\n. Working on .type now.\n. According to our documentation for 15.1:\n\nact.upload\nUploads a file or a set of files.\nact.upload( target, path )\nThis action uploads an individual file.\nUse the following variant of the user action to implement the uploading of multiple files at once.\nact.upload( target, paths )\nIf you need to imitate the browser's behaviour when a user clicks the Cancel button, use the following version of the user action.\nact.upload( target )\nSo am I correct , that we need .uploadFiles and, ugh, .uploadCancel actions as well? \\cc @inikulin.\n. Hello, @p-bakker! I'm happy to let you know that testcafe@0.14-alpha4 is released, and now you can try the Role feature! Install it with npm install testcafe@alpha. You can get the Role API reference using this link: User Roles. As you can see, unfortunately currently there is no function to get the active role.. @testcafe-build-bot \\retest\n. FPR\n. Thanks!\n. lgtm\n. Wrong project, it's  DevExpress/testcafe-hammerhead#347.\n. FPR\n. lgtm\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. New modules: onceDone and mapReverse.\n. FPR\n. FPR\n. I'm working on it.\n. lgtm\n. I think, it will be nice to have a modification of Promise.race that will be automatically cancel pending promises.\n. Ok, I'll do it sometime.\n. @testcafe-build-bot \\retest\n. I'm working on it.\n. Fixed in hammerhead.\n. @testcafe-build-bot \\retest\n. I'm working on it.\n. Oh, the PR cannot be merged until current master branch of testcafe-hammerhead will be published to npm. Sorry!\n. \\r-, mostly stylistic issues, plus possible promise-each refactoring (need to consider @inikulin 's and @AlexanderMoskovkin 's opinions through). \n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. Currently we cleaning up storage, when test run is done, or it failed with error. Also, it is implemented using sessionStorage so it will be cleaned by the browser after tab with the page will be closed. \nGuys from 'testcafe-hammerhead' are promising to implement API for performing cleanup just after session was finished, but there is only plans now.\n. Maybe we need to remove browserJob from jobQueue when it emits done, or when browserJob.popNextTestRunUrl returns null.\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @MargaritaLoseva, please, check test's names.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. lgtm\n. lgtm\n. For those who are interested, the image was created by Eva Galesloot (the original image is here). BTW there is no information about license.\n. lgtm\n. lgtm\n. lgtm\n. I'm working on it.\n. Just a fun fact: can you find a tag in an expression below? parse5 can :)\nok(5<x-x>5)\nShame, no spoilers in GitHub markdown, but tag is <x-x>.\nWhat is more interesting, that it's a valid JS expression after all.\n. I'm working on it.\n. lgtm\n. FPR\n. \\r-\n. FPR\n. @testcafe-build-bot \\retest\n. Breaking change in testcafe-hammerhead@6.0.1: https://github.com/DevExpress/testcafe-hammerhead/commit/68efea1ed3718a3e9a7adb3bc20f63b88cdc9cc6\n. @testcafe-build-bot \\retest\n. The problem is caused by specifying fractional dragOffsetX and dragOffsetY. For the new API we need to implement a validation for offsets: #439. For the legacy API we decided to round offsets in drag, click and select automations.\n. I'm working on it.\n. Found that offsetX and offsetY is already rounded by getOffsetOptions (https://github.com/DevExpress/testcafe/blob/master/src/client/runner/utils/mouse.js#L52). So we need to round dragOffsetX and dragOffsetY only.\n. Caused by DevExpress/testcafe-hammerhead#446.\n. DevExpress/testcafe-hammerhead#447 fixed it for me. @inikulin, please check it on your side.\n. Fixed since testcafe-hammerhead@6.0.1.\n. lgtm\n. Closed by #383.\n. There was a commit intestcafe-hammerhead on February 24 - https://github.com/DevExpress/testcafe-hammerhead/commit/68efea1ed3718a3e9a7adb3bc20f63b88cdc9cc6, that removed method isInputWithoutSelectionPropertiesInFirefox from domUtils. Unfortunately, the metod is still used in our master code in key-press-simulator and type automation - here, here, and here. Plus in QUnit automation regression test - here. \nThe method was a workaround for a bug was appearing in Firefox 30 and below, so presumably it's safe to get rid of it. \n. @testcafe-build-bot \\retest\n. It's based on top of master: master tree, PR tree. Test results looks very suspicious BTW. \n. Ookay, just found an awesome link for this case : checking out pull requests locally:smile:\n. @testcafe-build-bot \\retest\n. Closing the PR, all changes will be integrated in type automation refactoring by @helen-dikareva.\n. lgtm\n. What's about https://github.com/DevExpress/testcafe/pull/387#discussion-diff-55019565?\n. lgtm\n. It's already done.. Now I can not reproduce the original issue, but it looks that I've found the reason of the problem.\nTest page:\n``` html\n\n\nTest iframe\n\n\nClick\n    <script type=\"text/javascript\">\n        document.querySelector('button').addEventListener('click', function () {\n            setTimeout(function(){\n                alert('Test')\n            }, 1000);\n        });\n    </script>\n</body>\n\n\n```\nTest itself:\n``` js\n\"@fixture test\";\n\"@page http://localhost:8080/test.cshtml\";\n__waitFor(function (cb){\n    setTimeout(cb, 1000);\n}, 20000)\n\"@test\"[\"1\"] = {\n0: function () {\n\n    act.click('button');\n},\n1: function () {\n    handleAlert();\n    act.wait(5000);\n},\n\n};\n```\nAs a result:\n1) Chrome 49.0.2623 / Windows 10 0.0.0\n       Error at step \"1\":\n       Unexpected system alert dialog Test appeared.\ndespite handleAlert() in step 1.\nIf alert is called on timeout big enough for stepIterator to call globalWaitFor, and before globalWaitFor will call callback, it will rise an error. Also I think that globalWaitFor behavior may be affected by VM performance, so it will give more delay when farm is under high load.  So disappearance of the problem is likely reasoned by decreased farm load due to scheduling tests for running once per day at night, so globalWaitFor delay is smaller and it returns control to stepIterator before alert call.\n. LGTM, also works for ASP tests.\n. lgtm. Fixes ASP test.\n. lgtm. Fixes ASP test.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. I'm working on uploadFile now.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. I'm working on it.\n. Looks nice.\nThere is some questions though.\n1) What if alert is raised after some action, but with a significant delay? (e.g. file uploading). Obvious solution is to use wait action here, so we should write like:\nt.click().wait().handleAlert()\nright?\n1.a) What if delay between click and raising alert is variable, and alert may be raised both between click and wait, and during wait? \n2) What I should do if I don't care about order of different dialog types? \n. OK, I'll describe a situation. It's exactly how it goes on ASPxDemos. Test page is file manager.\n1) Test selects a file for upload, and clicks 'Upload' button.\n2) File takes some time to upload.\n3) Test tries to upload the same file again.\n4) Duplicate file takes some time to upload.\n5) Server checks the duplicate file's name, and rejects it because a file with the same name was already uploaded. Page should display alert message. \n6) Test performs clean-up by deleting the first file (which involves some clicks) \nWhat should I do in this case to handle alert?\n. Also, what's about allowing user to check handled dialog message?\n. @VasilyStrelyaev, please, check test names  here and here, and also a comment here\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. lgtm\n. @testcafe-build-bot \\retest\n. Strange test error https://travis-ci.org/testcafe-build-bot/testcafe/jobs/124152994#L1290, looks like error message was doubled:\n+ expected - actual\n      -Error at step \"1.Click link \"This page\"\": The expected system beforeUnload dialog did not appear. Error at step \"1.Click link \"This page\"\": The expected system beforeUnload dialog did not appear.\n      +Error at step \"1.Click link \"This page\"\": The expected system beforeUnload dialog did not appear.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I'm working on it.\n. lgtm\n. Working on this.\n. Need to be careful with ,: it may be contained in paths on Unix. Tested on MacOS and Ubuntu.\n. FPR\n. FPR\n. I've seen this test failing frequently before:\nhttps://travis-ci.org/testcafe-build-bot/testcafe/jobs/124989990#L1188\n[UPD]: added to the list\n. lgtm\n. lgtm\n. I don't think that tests failure is caused by unstable tests. I have tried update hh to v8.*.* by myself and got stuck with this hover error. So it's definitely need fixing.\n. @testcafe-build-bot \\retest\n. Tests failed due to unstable QUnit tests on iOS.\n@testcafe-build-bot \\retest\n. @VasilyStrelyaev. please, check the new explanatory comment here.\n. fpr\n. FPR\n. lgtm\n. FPR\n. It needs to be rebased now.\n. \\r-\n. lgtm\n. FPR\n. FPR\n. FPR\n. An unstable mobile test failed, please review.\n. FPR\n. FPR\n. FPR\n. lgtm then\n. lgtm\n. @testcafe-build-bot \\retest\n. FPR\n. lgtm\n. lgtm\n. Can we put a barrier, that prevents a page from changing the location, on beforeunload event, when a Hybrid execution start, and change the location after it is finished?\n. > Also, it doesn't solve issue with buffer-redirect pages. I don't want state of buffer-page, I need state of the page once I've logged in\nIf you aware of buffer pages in your app, you can just wait, or check the location of current page, return something that indicates an error (e.g. null) and try again.\n. As it looks for me, Hybrids execution will be far more predictable, if we will just execute in place where we are now. If we cannot finish it, we should just to inform the user about the incident. Maybe throw an error, or introduce a status code. \n. > What if hybrid function executing leads to page location changing? If we will re-execute it after redirect it'll be an endless loop.\nLooks like it conflicts with\n\nHybrid function execution is an observation\n. BTW I feel like that Hybrids are far more powerful to restrict them for observation use only.\n. Unstable iOS test failed :disappointed:\n. FPR\n. FPR\n. FPR\n. FPR\n. Okay, I'll take a look.\n. Have found on screencast, that first two tests failures was caused by Chrome hanging. \n- 11:06 - Missing 'await' tracking | Should track missing 'await' with disrupted chain, \n- 13:36 - [Raw API] Click action | Should fail if action has incorrect selector\n\nOther browsers are passing test and then waiting on idle page at these times.\nBut the next failure is very strange, because all browsers are just waiting 30 secs at \n- 14:37 - [Raw API] Drag actions  drag-to-element Should fail if a dragged element is invisible\nAt the last failed test:\n- 17:52 -  [Raw API] Wait for element action Should fail if the wait-for-element command's timeout is less than time required for the element to appear\nChrome waits 30 secs on idle page before starting it, then runs it and the next one. Firefox and IE wait 30 secs after this test, then run the next one. \nInteresting, that this commit has passed functional tests on my travis account: https://travis-ci.org/AndreyBelym/testcafe/jobs/130527378\n. FPR. Unable to reproduce previous problem; I'm totally sure it was not caused by this PR. Most likely it was a Saucelabs overload, because one time before it was unable to start a VM with IE11(link). However we need to pay attention to the strange timeouts in next functional test runs, to be 200% sure that it was not our issue.\n. \\r-\n. It makes sense, but what if the path specified in takeScreenshot is relative? Which folder will be the base folder?\n. Hmm...\njs\nvar filePath = customPath ?\n                       joinPath(this.testDirPath, customPath, fileName) :\n                       joinPath(this.path, fileName);\nhttps://github.com/DevExpress/testcafe/blob/master/src/runner/screenshots/capturer.js#L32\nOkay, I have found the answer to my question. But, personally, if I'd have specified a path to screenshots directory, I'd expect from it to be the base directory for all my screenshots, even for screenshots with custom path. Currently we are always using the tests directory.\nSo, my proposal is to always allow usage of takeScreenshot with a specified custom path, even if a global screenshots directory is not specified, and use the tests directory in that case. If  global screenshots directory is set, enable take screenshots on fail option, and use the screenshots directory as the base for custom paths in takeScreenshot.\n. lgtm, but what's about https://github.com/DevExpress/testcafe/pull/543#discussion_r65163222? @inikulin @AlexanderMoskovkin \n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. Mobile test failed on android.\n. That's fine, except I thought that this is urgent. In that case fix for this issue will be delayed until browser providers will be merged.\n. FPR\n. lgtm\n. lgtm\n. Please, review.\n. ##### SUMMARY\n1. IMPLEMENTATION\nCreate a node module with name testcafe-provider-${providerName} that exports an object with following properties:\n```\nrequired:\nasync getDescriptorDefaultValues (alias) - transform string alias to browser metainformation (path and cmdline args, desired capabilities etc.), a.k.a descriptor\n\nasync openBrowser (id, descriptor, startPage) - opens the browser by information contained in descriptor on the specified startPage, using assigned id. id is a shortid unique identifier assigned by testcafe, and the plugin can use it to distinguish between opened browsers.\n\nasync closeBrowser (id, pageInfo) - closes the browser, which has the specified id. Page info contains title and url of idle page.\n\n//optional\nasync listAvailableAliases () - list aliases, supported by the plugin\n\nasync isValidAlias (alias) - check if the specified alias is supported by the plugin\n\nasync init () - called once  before creating connections\n\nasync dispose () - called once before closing testcafe\n\nasync resizeWindow (id, pageInfo, width, height) - resize the browser window\n\nasync screenshotWindow (id, pageInfo, screenshotPath) - take screenshot of the browser window\n\n```\nThere is also a helper method evalOnClient(id, code),  that can be used to evaluate the specified code inside the browser associated with id. E.g. local browser provider uses it to check client area size after resizing, and perform an additional resize to correct https://github.com/DevExpress/testcafe-browser-natives/issues/71.\n2. USAGE\nInstall testcafe-provider-${providerName} in directory with testcafe. To use it with CLI type in command line:\ntestcafe ${providerName}:alias ${tests}...\nTo use it through API:\nrunner.\n        .browsers('${providerName}:alias')\n        .tests(...)\n        .reporter(...)\n        .run()\nInside testcafe code, you can get browser provider by name through BrowserProviderPool:\nBrowserProviderPool.getProvider(providerName)\n3. HOW IT WORKS (NOW)\nWhen testcafe instance is created, it initializes the BrowserProvidersPool, that contains built-in providers (local, path, and remote) and fetches all available provider plugins by using npm to query installed modules. Saucelabs provider is supplied as built-in now to simplify the code review, but will be extracted as a separate package. Fetched plugins are wrapped in BrowserProviderPluginHost and are added to the common pool of providers.\nWhen bootstapping, Bootstrapper uses BrowserProvidersPool to parse list of browser descriptions (in form providerName :alias), to get required providers, and to transform aliases to descriptors before compiling the tests. After tests compilation and reporter setup is done, Bootstrapper initializes required providers and creates browser connections. Also, when testcafe is closing, it disposes all browser providers.\nWhen browser connection is created, it opens a browser using supplied browser provider and browser descriptor, using its id and idle page url. Browser connection id is the shortid now. Also, when connection is closing, it closes the associated browser. When BrowserManipulationManager is created, it saves browser provider and browser connection id and uses them afterwards to create screenshots and to resize the browser.\n. FPR. \nNote: saucelabs-connector@2.0 is required to run test on mobile devices from Saucelabs. It is not in master yet: https://github.com/AlexanderMoskovkin/saucelabs-connector/pull/18. \n. FPR\n. FPR. Generator draft is here: https://github.com/AndreyBelym/generator-testcafe-provider\n. FPR\n. After some thoughts, I've decided that getDescriptorDefaultValues(alias) is very nondescriptive name, and it must be named just getBrowserInfo(alias). It extracts from the string alias any information about the browser, that is required to open it, and represents this information as JS key-value object browserInfo. This properties plus properties providerName and alias defined by TestCafe will be passed to the openBrowser function as second argument: openBrowser(id, browserInfo, startUrl).\n. browserInfo always has providerName and alias properties. It also has userAgent property, but you need to call waitConnectionReady to use it inside openBrowser function. You can add additional properties by implementing the getBrowserInfo() function and returning them from the function.\n. Currently listAvailableBrowsers just returns [] if the provider can't list available browsers, CLI detects it and shows only provider name: https://github.com/DevExpress/testcafe/pull/573/files#diff-867becf4a9c2c6c6d4e7c1278750724eR83 .\nBut I've completely forgot about the path provider. Obviously it can't list available browsers, but it's still requires an browserName which specify a path.\n. FPR\n. FPR, but I need to make some changes in testcafe-legacy-api.\n. FPR\n. Also @VasilyStrelyaev, please, check strings, docs, names of API functions and provider plugins.\n. FPR\n. \\cc @churkin @AlexanderMoskovkin \n. FPR\n. I will try it again. The second bad news is that you cannot access a machine via NetBIOS name through Saucelabs tunnel.\n. lgtm\n. lgtm, sorry for inconveniences, the graduation is just eating all my time :sob: \n. Did #589 fixed that? I can't reproduce it now.\n. See part 1 of https://github.com/DevExpress/testcafe/issues/722#issuecomment-240043450. Need to add some delays between native operations in resize hack.\n. I'm working on it.\n. I'm confirming, that it fixes problem in the ASP test for local browsers, thanks. However, it is not sufficient for saucelabs.\n. Okay, we have solved my troubles with the ASP test and Saucelabs by just rebooting my machine. LGTM then.\n. Looks nice. But... would not it be a little better if it would be like\nSelector(fn, scopeVars).filter(filteringOptions).with(executionOptions)?\n. Please be careful when publishing if you are using node>=6.0.0 && npm<3.10.1: https://github.com/npm/npm/releases/tag/v3.10.1\n. Please, wait for https://github.com/DevExpress/testcafe-browser-natives/issues/76.\n. Required code is merged. I didn't found any occurrences of ff,so @VasilyStrelyaev, please, fix the docs, or confirm that they are fine in their current state.\n. Ok, I will fix them.\n. lgtm\n. Rebased, please review.\n. nice, lgtm :smile_cat: \n. lgtm\n. Just an unstable QUnit test.\n. According to the old docs, the argument of act.press must be a sting. So it violates our API, and likely we need to fix the test but not the  testcafe. \\cc @inikulin @AlexanderMoskovkin \n. lgtm\n. The error that caused this message was fixed in DevExpress/testcafe-browser-natives#80 and #643.\n. Fixed in DevExpress/testcafe-browser-natives#80 and #643.\n. @moffsugita, could you please post the full test report here?. lgtm\n. Also, IMHO it worth to note that we need to show the full text of the error (in case of screenshot error), and maybe some ways to overcome the problem.\n. lgtm\n. Yes, it was implemented: https://github.com/DevExpress/testcafe/blob/master/src/browser/provider/plugin-host.js#L81\n. https://github.com/substack/node-mkdirp/issues/70, almost two years old :sob: \n.  I'm working on it.. Also what's about https://github.com/DevExpress/testcafe/pull/683/files#r73840189?\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. It's still WIP now.\n. It's still WIP now.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I was able to reproduce issue with hanging tests on IE9 on my own VM. Looks like the iframe-driver fails to initialize sometimes, and not sends 'ready' messages to the server, judging by IE DevTools Network Log.\n. I was able to reproduce issue with hanging tests on IE9 on my own VM. Looks like the iframe-driver fails to initialize sometimes, and not sends 'ready' messages to the server, judging by IE DevTools Network Log.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Okay, \\cc @inikulin. Honestly, I do not know what exactly is going on in IE9, and the hack is ugly, but at least we need to increase test timeout.\n. Okay, \\cc @inikulin. Honestly, I do not know what exactly is going on in IE9, and the hack is ugly, but at least we need to increase test timeout.\n. The first failure is caused by Saucelabs VM, the second by overlapped drag unstable test, because I forgot to rebase my PR.\n. The first failure is caused by Saucelabs VM, the second by overlapped drag unstable test, because I forgot to rebase my PR.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Hi Dan, we changed the name of the executable file in version 0.0.24-alpha, now it is called testcafe.js. So likely you need to update your runtest.cmd and change the way the testcafe is started:\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Web\\External\\node.exe\" \"node_modules\\testcafe\\bin\\testcafe.js\" ie C:\\Projects\\example.test.js\n. Oh, also since you didn't specified the version in npm install testcafe, it has installed testcafe@15.1.3. You must explicitly specify the alpha tag while we are in alpha stage:\nnpm install testcafe@alpha\n. The test from the docs must be used with the new version of the example page. It's not available online yet.\nYou need to check and replace selectors you are using:\n``\nfixtureGetting Started`\n    .page('http://testcafe.devexpress.com/example');\ntest('My first test', async t => {\n    await t\n        .typeText('#Developer_Name', 'John Smith') // see: #Developer_Name\n        .click('#submit-button');\n});\n```\n. The test from the docs must be used with the new version of the example page. It's not available online yet.\nYou need to check and replace selectors you are using:\n``\nfixtureGetting Started`\n    .page('http://testcafe.devexpress.com/example');\ntest('My first test', async t => {\n    await t\n        .typeText('#Developer_Name', 'John Smith') // see: #Developer_Name\n        .click('#submit-button');\n});\n```\n. lgtm\n. lgtm\n. just the unstable dragging test\n. just the unstable dragging test\n. Implemented in #709\n. Implemented in #709\n. All of packages above are ready for review, except that links are pointing to repositories in my profiles. IMHO we will need to transfer this repos in DevExpress org, but we can do it at any moment later, so criticism is welcome on all except links.\n. Enabled :anchor:TravisCI  builds for packages.\n. Repositories moved to DevExpress org, links are fixed, except the one to browser providers docs.\n. What's about packages?\nGot an idea for generator package just now: ask the user about if the provider is multi-browser, and alter the usage section of README.md according to their answer. Currently it generates usage docs that is more suitable for simple one-browser provider.\n. I will fix #722 here too.\n. FPR then\n. Looks like it will help with #422 \n. There are actually 2 issues:\n1. Performing window operations while window is in transition state from a previous window operation (window open, resize, maximize). It is the reason why local resize test fails sometimes.\n2. When performing calculation of resize corrections, the maximized window is resized to the same client area, that in maximized state. But because the normalized window has borders(unlike maximized), the resulting window area is bigger than desktop working area. After the window goes  back to maximized state, something is wrong, and window is a bit bigger that it was before resize. This causes the bug when lower part of status bar is not visible, because it goes out of desktop working area.\n. Working on it.\n. @MargaritaLoseva new syntax for remotes is similar to providers: use remote, or remote:${count} (e.g. remote:3) \n. @testcafe-build-bot \\retest\n. lgtm\n. FPR\n. FPR\n. \\cc @VasilyStrelyaev @AlexanderMoskovkin @georgiy-abbasov \n. FPR\n. Nice in general, but TestCafe.close() is async too: https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/using-testcafe/programming-interface/testcafe.md#close\nPlease, correct the docs for close().\n. lgtm\n. Looks like that the key is CI environment variable. It's not documented in Travis CI docs (but it is described in AppVeyor docs ), but https://github.com/sindresorhus/ora/blob/master/index.js#L34 uses it. \n. Yep: https://travis-ci.org/DevExpress/testcafe-browser-provider-saucelabs/jobs/153573126, https://travis-ci.org/DevExpress/testcafe-browser-provider-saucelabs/jobs/153573127\n. No, \"undefined\" belongs to provider debugging (In more words, it tries to print out the secret environment var SAUCE_USERNAME, but fails, because Travis CI doesn't pass secrets to pull requests). \n. lgtm\n. lgtm\n. Thank you for your interest in TestCafe. Of course, your contribution will be warmly welcomed.\nThe API design is the most difficult part here. Could you please elaborate on the place from where we should call these methods. We can't call them in any test file because of problems with overriding hooks. We need a special CLI switch like\u00a0--app\u00a0(and corresponding options in API and configuration files) for specifying a script that will be allowed to set up global hooks.\nI am also thinking about methods for configuring global hooks. Right now I think that it's better to simply export global hooks from a script.\n. You can use fixture and test hooks in any test, it doesn't matter how do you start it via CLI or Runner API. So I don't like the idea of limiting this feature to the Runner API only. Also, it still introduces the problem\nwith overriding hooks.\nAs I said, it's better to use a dedicated script that will export hooks:\nhooks.js\n```js\nexport beforeAll () {\n}\nexport afterAll () {\n}\nexport beforeFixture () {\n}\nexport afterFixture () {\n}\nexport beforeTest () {\n}\nexport afterTest () {\n}\n```\nAnd use the corresponding API/CLI flags to connect them to tests:\n```\ntestcafe --hooks hooks.js\nrunner.hooks('hooks.js');\nrunner.hooks({\n    beforeAll () {\n}\n\n});\n``. @testcafe-build-bot \\retest\n. \\cc @inikulin @AlexanderMoskovkin \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. QUnit testsB253370 - Event handlers are called in the wrong order (click on option in select with size more than one)andB253370 - Event handlers are called in the wrong order (click on the same option in select with size more than one)are failing in currentmasterbecause of Chrome 53 update: https://github.com/DevExpress/testcafe/pull/786\n. It's revealed that flaws in functional harness masked a test failure in MS Edge: https://github.com/DevExpress/testcafe/pull/793. We didn't caught it before, because we tested Edge and other MS browsers concurrently. \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. It's because Travis CI is disabled.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. AppVeyor functional tests are local functional tests (with local browsers installed on AppVeyor's Win2012R2 VM),test-functional-desktopruns functional tests in common desktop browsers on Saucelabs.\n. Because of macOS desktop browsers, and MS Edge. It is possible to use macOS VM on Travis to run local functional tests - https://github.com/DevExpress/testcafe/issues/791, but there is some screenshoting issues that are preventing to do it right now. And MS Edge is going be likely not available until AppVeyor migrates to Win2016 (still TechPreview now).\n. FPR\n. \\cc @helen-dikareva, please, review it too.\n. \\cc @AlexanderMoskovkin, please\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. lgtm\n. It's easy enough to grab the screen with [ffmpeg](https://ffmpeg.org), but it will capture the entire screen, not the specific browser window. JFYI, SauceLabs uses it to make screencasts, but SauceLabs provides dedicated VM for each browser, so they don't face the problem with multiple browsers inside the same VM. \n. Looks like that Travis macOS VM's doesn't have enough performance to run 3 browsers at the same time, so to use it we need to create 3 separate tasks, one for each browser (Firefox, Chrome, Safari). Also keep in mind that total number of macOS VM's is very limited (128 at now), so it will drastically  increase tests time. By these reasons @AlexanderMoskovkin and I decided not to implement this. \n. lgtm\n. I'm working on it.\n.mochaallowsskipusage in the test body. When you usethis.skip()` inside a test, it throws a special exception, that aborts the test. \nAlso, in mocha you do not declare before and after directly in the it test block, you use another describe block.\nSo what's about \n``` js\ncontext('context', () => { //maybe allow to omit the context name\n   before(async t => {});\n   after(async t => {});\n   skip(...args => {}); \n   only(...args => {});   \ntest('test 1' , async t => {});\n})\n```\nbut it doesn't have the fancy chained look.\nFor chaining, I really like the @churkin's variant. If it is hard to implement, the first one from https://github.com/DevExpress/testcafe/issues/802#issue-176882339 looks very good.\nPS. Can we use something like that \njs\ntest('The test') (\n    async t => {}\n);\nfor simple tests in order to add modifiers easily afterwards? You just need to add your modifier before the second opening bracket.\n. Or maybe even\njs\ntest `Test` (async t => {\n})\n. @FDiskas, there is an issue about nested fixtures and BDD interface: https://github.com/DevExpress/testcafe/issues/792. There is an option to add Travis mascot to the badge, but the logo must be encoded in base64, so the image url will be huge:\n\nhttps://img.shields.io/travis/rust-lang/rust.svg?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAABmJLR0QA%2FwD%2FAP%2BgvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AkQCxYCeVq%2F1gAABB5JREFUOMt9k19IW3ccxc%2Fv5ppfshQqNrdeSTCK2dS1ZaAZVglhHb2rCCtD7agihc039Wn41JfVlxXGBnsrpTA2h9IhhRUfLMvdw1xFk8xai2KNN9f%2F%2BWc0sWuMmpt899IOt0HP6%2BF8OA%2FnMPxHra2tePToETwez3vt7e2fS5L0sc1mqzQM4%2BXu7u50OBz%2B%2Fs6dO2N4kzo6OgAA169f%2F3ZlZYU2NjZI0zSKRCIUiUQoHA5TKpWioaGhA6%2FXK70RNjg4%2BNP8%2FDxlMhkaGRmhjs5O6u7upvb2dvrq9m2amJigVCpFo6OjeQDliqL8H9LZ2fnZwsICxeNxisfj9ODBA%2FpjcpKuXbtGqqpSIBCgu3fvUjKZJE3T6N69e0EAUBQFwkliV1fXkCiKSKfTCIVCEAQBtXV1AACr1QpZlhGPx5FIJKBpGrxe7%2Ftut%2Fsjv98Pk67r8Pl8lr6%2BvtDVq1drp6en4XQ6MTc3BwDgnGNhcRHb29twOBx48eIFzp07h6WlJbjdbjQ3N3%2BaSqWemgDg4sWL39y8efMTi8WCUCiEo6MjbG1tYW9vDxsbG3jLagXnHJFIBIZhIJfLwWq1QhRF1NfXi7Isd4sAQERGPp9HMBhEWVkZAWAOpxO7qRQZhsHMZjMKhQKdPn0apaWlKCkpYcViEeFwGJxzyuVyjAFAT0%2BPp6ysLLS2tga7JOEgm4XNZqN0Os24xQJXZSUqKiow%2B%2BQJOOfIpNNoaGiAKIq0tbXFDg8PY0xRFBARt0vS%2FvHREW9ra0NVVRWePXuGGzduQBAELC8v4%2F79%2B%2FD5fKivr4MgmKBpGqYeP8ba%2BvpmLBarEwFYGGML9jNn4oyxyt7eXra%2Bvo5fHj7ETCAAgTGoqkomk4k1Njair38Awz%2F%2BgKqqKhQKBdhOnaowm81mAcAlv9%2FvbmlpsdrtdtJ1HZIk4W13DXGzGVNTUxgYGGBOp5MWFxfx4aUPKBaNIpfLYXV1FdXV1aLD4Tg06bquvdpJc01NzbvBYBCrq6sUiUSws7MDQRBw5coVtrS0hOfPn6NYLOLP2VnMzMywZDJJ58%2Bf3xseHv6avR6jx%2BM5JcvyO16vd1aWZVy4cAGbm5v0m6oyo1Cgv16%2BZCBCb28vysvLkc%2FnMT4%2B%2Fp2qqr9yzidMr0HRaPTY5XI1ulyuaH9%2Ff8vy8jJGRkdZidkMAhjnHBaLBYFAAIlEgqLb22xycrKhWCz%2B7Pf7V9jJr12%2BfPlLm812i4hglyRwzkFEAADDMCCKIgCAMQbGGHaSyZmxsbFmRVHwTyNFUaCq6u%2B1tbU%2Bh9NZbTK9shhD7uAA%2BeNjYoLAGGPIZDJIxONPs9lsq67rOV3X8a9GiqJgf3%2B%2FpFyWvzAJQhuATcZYU1NTk%2Fvs2bPw%2B%2F0TsVjs1kE2uxAMhQ5OZv8GNznvA%2FCwUGoAAAAASUVORK5CYII%3D\nFull-size logo (https://travis-ci.com/logo) is here: https://cdn.travis-ci.com/images/logos/TravisCI-Mascot-grey.png\n. FPR\n. We cannot resize a window to the size bigger than the desktop size on Mac. Can you specify your Mac desktop size as well?\n. Sure! \n. ## Browser provider API changes:\ncanResizeWindowToDimensions(browserId, width, height)\nAllows to validate the specified width and height of browser window browserId before the actual resize. The result is true if browser window can be resized to the specified dimensions, false otherwise. In case of false value TestCafe will stop resizing and throw an error.\nhasCustomActionForBrowser(browserId)\nEnables feature querying for the specified browser window browserId. The function should return an object with the following properties:\nhasResizeWindow - the browser window supports resizing,\nhasMaximizeWindow - the browser  window supports maximizing,\nhasTakeScreenshots - the browser window image can be captured to the file,\nhasCanResizeWindowToDimensions - the requested window dimensions can be validated before resize.\nIf a property in the returned object has the true value, the provider should have an implemented function with the name corresponding to the property. (e.g. hasTakeScreenshot => takeScreenshot). The default implementation for hasCustomActionForBrowser checks for the function names by calling hasOwnProperty on provider object.\nisLocalBrowser(browserId)\nReturns true if the specified browser browserId is a local browser. Default implementation ignores browserId and always returns false.\n. FPR\n. Okay\n. All introduced changes are backward-compatible with existing saucelabs and phantomjs providers, but we have to implement newly supported  functionality.\nmaximizeWindow (browserId)\nMaximizes the browser window browserId.\ncanResizeWindowToDimensions(browserId, width, height)\nAllows to validate the specified width and height of browser window browserId before the actual resize. The result is true if browser window can be resized to the specified dimensions, false otherwise.\nhasCustomActionForBrowser(browserId)\nEnables feature querying for the specified browser window browserId. The function should return an object with the following properties:\nhasResizeWindow - the browser window supports resizing,\nhasMaximizeWindow - the browser  window supports maximizing,\nhasTakeScreenshots - the browser window image can be captured to the file,\nhasCanResizeWindowToDimensions - the requested window dimensions can be validated before resize.\nIf a property in the returned object has the true value, the provider should have an implemented function with the name corresponding to the property. (e.g. hasTakeScreenshot => takeScreenshot). The default implementation for hasCustomActionForBrowser checks for the function names by calling hasOwnProperty on provider object.\nisLocalBrowser(browserId)\nReturns true if the specified browser browserId is a local browser. Default implementation ignores browserId and always returns false.\n. @testcafe-build-bot \\retest\n. \\cc @VasilyStrelyaev @AlexanderMoskovkin \n. It's related to https://isc.devexpress.com/Thread/WorkplaceDetails/T432527, I'll post a regression test and the page for the test here. \n. An another example of the page:\nhtml\n<html>\n<head>\n<title></title>\n</head>\n<script>\n    for (var i = 0; i < 200; i++)\n        document.write(`<div>Child ${i}</div>`);\n</script>    \n</body>\n</html>\nAttempt to do a click on a div that is not on visible part of the page gives 'Element is not visible error', instead of performing scroll to the element.\n. The problem was caused by incorrect document.documentElement.clientHeight usage in scrollAutomation. This property represents height of the whole page in Chrome, not just the viewport height. The document.body.clientHeight must be used for this purpose in Chrome.\n. Working on it.\n. Hi! Do you mean that resizeWindowToFitDevice must set correct Window.devicePixelRatio for the specified device, right?\n. Setting the correct Window.devicePixelRatio doesn't look hard, but making CSS queries working with different DPR may be so. I doubt DevTools uses some browser internal  API to do the trick, but we are restricted to the standard JS APIs. We need some time for investigation, if it's possible at all, Please, stay tuned! \n. The test is here: https://github.com/AlexanderMoskovkin/stored-functional-tests/blob/master/tests/scroll/scroll.test.js#L105\n. @amirse80, this method is not implemented yet.\nToday I've found that Xiaomi Mi Browser creates a new tab every time it navigates to a different URL. It means that TestCafe won't work in Mi Browser until this feature is implemented.. @bkd705, I think this feature is not required if you want to test a live chat. \nYou can specify two browser instances  when starting TestCafe:\ntestcafe chrome,chrome test.js\nThen you can use the test context and conditional operators to perform different actions in different browsers:\n```js\nconst roles = [\n    {\n        name: 'User1',\n        free: true, \n    },\n    {\n        name: 'User2',\n        free: true, \n    },\n];\nfixture fixture\n    .page example.com\n    .beforeEach(async t => {\n        const currentRole = roles.filter(role => role.free)[0];\n    if (!currentRole)\n        throw new Error('Found no free role');\n\n    currentRole.free = false;\n    t.ctx.roleName = currentRole.name;\n})\n\nfunction actAsUser1 () {\n    console.log('I am User1');\n}\nfunction actAsUser2 () {\n    console.log('I am User2');\n}\ntest('Do things', async t => {\n    switch (t.ctx.roleName) {\n        case 'User1': return actAsUser1();\n        case 'User2': return actAsUser2();\n        default:      throw new Error(Unknown role name \"${t.ctx.roleName}\")\n    }\n});\n```\n. Hi! Thank you for the issue! Browser autodetection do not work currently on non-Debian distros, but of course testcafe should be able to start browsers by path. BTW we will implement different mechanism to detecting browsers soon: https://github.com/DevExpress/testcafe-browser-tools/issues/104. Until it's done you can use remote browsers as workaround.\n. Hello, currently you can pass a serialized JSON object with keys path and cmd to the path: provider, but you have to properly escape quotes, e.g. for bash:\ntestcafe path:\\''{\"path\":\"/usr/bin/chromium-browser\",\"cmd\":\"--disable-extensions --no-first-run --new-window\"}'\\' test.js\nI'm implementing a simplified syntax for it in this iteration, so it's going to be soon just\ntestcafe 'path:/usr/bin/chromium-browser --disable-extensions --no-first-run --new-window' test.js\n. Hello Kai! Unfortunately, we do not support HTTP Authorization yet in npm version of TestCafe (including JWT). But we are going to implement it soon, you can check the progress here: https://github.com/DevExpress/testcafe/issues/509.\n. @kaihaase-wd it will be here in next few iterations, might be even just in the next one. It's about a couple of weeks, I think. \n. Looks like the error is not related to the bug, the test passes successfully with the error using Mobile (no touch) emulation mode. So likely we have problems with touch events in automations.\n. Fixed by now.. Hello @s-adachi2016, testcafe-browser-provider-saucelabs internally uses wd.js, that is actually a Node.js Selenium  WebDriver client, but only for SauceLabs remote browsers and only in order to do the following:\n1. Start/stop the remote browser\n2. Resize the browser window\n3. Take a screenshot of the browser window\nAll test-related things are handled by the our proxy.\n. Okay, I will try it.\n. Yep, the workaround works. I am creating the PR.\n. FPR. Do not merge it, please, found a bug now, working on it!. FPR\n\\cc @helen-dikareva @MarinaRukavitsyna . FPR. \\\u0441\u0441 @MarinaRukavitsyna . Hello, Rico! Thank you for your feedback. What do you think about dedicated debugger action, you can add it as the last expression in the test or as additional pseudo-test, and open devtools for debugging.. Looks like AppVeyor is broken, I have created an issue: https://github.com/appveyor/ci/issues/1195. What do you call a pseudo selector? Could you give a part of the HTML markup?\nFrom you code, they looks like regular CSS classes, so you would write something like\nawait t.click('release-description edit-icon');. Fixed by https://github.com/DevExpress/testcafe/pull/1040. Hello, @gowram! Currently you can't use Selector for querying shadowRoot in that manner. Instead, try to use Selector with a function, that returns the desired element, e.g.\n```js\nSelector(() => {\n    ct = document.querySelector('#sbPageContainer').shadowRoot.querySelector(\"#content < sb-line-editor\").children[0];\nreturn ct.shadowRoot.querySelector(\"#lineEditorPageHeader\").querySelector(\"#actions\").children[0].shadowRoot.querySelector(\"#mainButton\");\n\n})\n```. Can you provide me the link to your page and/or the test code? I tried a page with Shadow DOM, it have worked fine for me.\n```js\nimport { Selector } from 'testcafe';\nfixture My fixture\n    .page https://chrisbateman.github.io/guide-to-web-components/demos/shadow-dom.htm;\nconst paragraph = Selector(() => {\n    return document.querySelector('#demo1').shadowRoot.querySelectorAll('p');\n});\ntest('Get text within shadowroot', async t => {  \n    await t.click(paragraph.nth(0));\nvar text = await paragraph.nth(0).textContent;\n\nawait t.expect(paragraph.nth(0).textContent).eql('These paragraphs are in a shadow root.');\n\n});\n```. Hello @IhostVlad!\nActually, you can start a browser with a shell script, e.g. check a discussion here: https://testcafe-discuss.devexpress.com/t/launching-browser-in-virtual-x-mode/76\nthrough\ntestcafe path:/path/to/runbrowser.sh /testsuite\nand the test url will be the second argument of the script\n```\n!/bin/bash\n/usr/bin/magic-preparation-utility\n/usr/bin/browser-binary --magic-flag-1 --magic-flag-2  $2\n```\nAlso, since testcafe@0.11.0 you can use CLI to pass browser arguments, e.g.\ntestcafe \"chrome --flag1 --flag2\" test\ntestcafe \"path:/usr/bin/browser-bin --flag1 --flag2\" test\nAbout first run modal dialog: have you tried testcafe@0.11.1? We have improved launching of fresh-installed browsers in this version, so, please try it, and if it will not help you, please specify your OS and Chrome versions.. FPR. FPR. FPR. There is an example that explains it: \nhttp://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors.html#examples. Closing this issue in favor of https://github.com/DevExpress/testcafe/issues/2618.. Part of #1117 . \\\u0441\u0441 @VasilyStrelyaev . Hello, Eldar! Likely it's because the nightmare browser requires an X11 display server on Linux, which is not enabled by default on Amazon EC2. It required to install and run Xvfb; required commands depend on a distribution that you use in your instance. E.g. for Debian-based distros, including Ubuntu, it is like:\nbash\napt-get install xvfb\nXvfb :99 -ac -screen 0 1024x768x16\nexport DISPLAY=:99.0\ntestcafe nightmare tests/. Hello @jackyxiao126, it's likely\nxvfb-run --server-num=99 --server-args='-ac -screen 0 1024x768x16' testcafe ...\nCheck the xvfb-run manual.. Chrome needs the --no-sandbox flag in a Docker container, or container should be started in privileged mode.\ntestcafe 'chrome --no-sandbox' tests/. Hello, Daniele! Please, can you give us some more information about your issue: the Chrome version, your test code and the tested page URL or source code?. Hello @Darmody! We've just released the new TestCafe alpha version that fixed your issue! You can try it by executing npm install testcafe@alpha. So I'm closing the issue, but feel free to reopen it if the fix didn't help you!. Okay. FPR. Hello, @WillemMali! Unfortunately, the problem is in lodash package, just try require('lodash') with node --harmony: https://github.com/lodash/lodash/issues/2324. The reason is that some some ES6 classes have incomplete implementation under --harmony flag. However, lodash uses a polyfill, so it works fine without that flag. What's about ES6 features, you can use a transpiler, e.g. babel. It takes couple of minutes to setup, but it's not so hard with yeoman template - https://www.npmjs.com/package/generator-babel.. Hello, @sirgallifrey! What window manager are you using? Currently we need full EWMH support: https://github.com/DevExpress/testcafe-browser-tools/issues/112. . Are you using Wayland or X11?. Can you give me the outputs of pacman -Q and ps aux, please?. Really thank you! Unfortunately, you are using Wayland (search for wayland in ps aux). GNOME Shell has very limited support for EWMH under Wayland: https://wiki.gnome.org/Initiatives/Wayland/Gaps#ICCCM.2BAC8-EWMH. With X11 Gnome Shell it must be fine, I have tested X11 GNOME on Fedora 24. As workaround, please, try to log out, get to the password input screen, press the gear and select regular GNOME (not GNOME on Wayland), like on the screenshot below.\n\n. Yes, we have, and I think that we have to develop it ASAP, because GNOME is quite popular desktop environment, and meanwhile Wayland is getting more common.. Closed in favor of https://github.com/DevExpress/testcafe/issues/2415. OK, I will do a PR to publish-please.. Hello @jameswlane! Yeah, the image should accept any arguments that you can specify for the regular TestCafe CLI. But currently you can only use Chrome and Firefox that are built into the image, not the Nightmare.. If you want to use --app 'node server.js', you should map the directory with server.js into the TestCafe volume. About Error: Cannot find module 'tap': are you sure that you've installed the tap module in the ${PWD}/node_modules?. Hello @YamiOdymel! Quite strange, I just ran it successfully with the command from the PR starting post:\ndocker run -v //c/Users/belym.andrey/tests:/tests -it testcafe/testcafe:alpha 'chromium --no-sandbox,firefox' /tests/test.js\nHow did you exactly run the image?. OK, I figured out, you mapped the entire project directory as tests and tried to use /tests/**/*.js as the wildcard for test files, and TestCafe started to execute every .js file from your project directory, including the ones from node_modules. I guess you can try\ndocker run -v $PWD:/project -it testcafe/testcafe:alpha 'firefox' /project/tests/**/*.js --app \"node /project/server.js\" --app-init-delay 4000. There is no benefit in using this module now.. Hello @umaar! We discovered that we have problems with <frameset>, you can track the issue here: https://github.com/DevExpress/testcafe-hammerhead/issues/1070 . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. FPR (Fixed test naming). FPR. Checked it with functional tests in a small-sized window, seems to be OK.. Issue from the forum: https://testcafe-discuss.devexpress.com/t/odd-browser-resize-behavior/162. It's gone after implementing temporary profiles.. My fault, I was misleading, initial-scale doesn't help with this one, cursor is still displaced with this meta. Something is wrong with pointerOffsetX and pointerOffsetY in cursor UI.. I'm working on a fix in this PR: #2112. This one is quite stale.. @adamgen, I think the scrolling action won't work for your case, you need something that will emulate the mouse wheel to cover your scenario. Your page likely reacts to the mousewheel event because it is created when a user tries to scroll a page with the mouse wheel. The programmatic scroll techniques  TestCafe uses for page scrolling create only scroll events, like when a user drags the page scrollbar to scroll a page. \nIt will be nice if you create a separate issue about introducing the t.scrollMouseWheel action and describe your use-case there.\nAlso if you need the t.scroll action too, take a look at the issuehttps://github.com/DevExpress/testcafe/issues/527, I think it provides a better alternative for this proposal.. We can use chrome-remote-interface to start emulation with the setDeviceMetricsOverride.. It happens because you don't call testcafe.close() https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/testcafe.html#close. and the process keeps waiting on opened sockets.. Hello, Eldar!\nWhat's about TestController import? You can write something like this:\nhelpers.js:\n```js\nimport { t } from 'testcafe';\nexport async function prepareWindow () {\n    await t.resizeWindow(1024, 768);\n}\nexport async function login({login, password}) {\n    await t\n      .navigateTo(\"/login\")\n      .typeText(\"#email\", login)\n      .typeText(\"#password\", password)\n      .click(\"button[type='submit']\")\n}\n```\ntest.js:\njs\nfixture `Fixture`\n    .page `page.html`\n    .before(async () => {\n        await prepareWindow();\n        await login({login, password});\n    });. Hello, Dmitry! I guess, you want something likeSelector('*').withText(theText). It matches every element on the page, and then filters it with the specified text.\n. FPR. FPR. FPR. Hello @varunkumar! I can confirm your issue, working on the fix now. Looks like it's a bug in TestCafe.. Hello @varunkumar! We've just released the new TestCafe alpha version that fixed your issue. You can try it by executing npm install testcafe@alpha. Feel free to reopen the issue if the fix didn't help you!. Ok, so we should perform a request to the SauceLabs REST API when tests are finished to set the status of the SauceLabs session to passed/failed. It requires some interaction between reporter and browser provider.. It doesn't related to the browser count, as you can see: https://travis-ci.org/AndreyBelym/surveyjs#L2615.. Oh now I see. So we have to check that the number of requested browsers doesn't exceed the concurrency limit, and throw a meaningful error if it isn't so.. Looks like it's very hand to implement session-balancing on the TestCafe. It's better to split requested browsers manually, and then use it like testcafe browser1,browser2 tests; testcafe browser3,browser4 tests;.... So showing an error that too much browsers was requested is the best thing that we can do.. @row1 I think for the use case you described it would be better to switch TestCafe to the debug mode when a test failed.. Hi @chinjon, I agree that the fast fail (or bail) mode is a very useful feature. But currently we are working on improving our infrastructure and increasing overall stability of TestCafe, so implementing new features is not the first priority for some time. But of course we will be happy to accept a PR, as always \ud83d\ude09 . FPR. FPR. ### Summary\nFlow is stand-alone type checker for JS by Facebook: https://flow.org/\n\n\nInstall flow\nnpm install flow-bin\n\n\nCreate testcafe.js file in ${PROJECT_ROOT}/flow-typed:\ndeclare var fixture: any;\ndeclare var test: any;\n\n\nAdd a // @flow comment at  the begging of each of your test files and also add type definitions, e.g. https://github.com/DevExpress/testcafe/blob/master/test/server/data/test-suites/flow-type-declarations/testfile.js, https://github.com/DevExpress/testcafe/blob/master/test/server/data/test-suites/flow-type-declarations/rocket.js\n\n\n./node_modules/.bin/flow\n\n\nRun test files as regular TestCafe tests.. @darlanmendonca You can try to prepend the spaces in browser name with backslashes, like\ntestcafe \"browserstack:chrome@56:OS\\ X\\ Sierra\" test.js\nAlso, please tell us what OS you are using. I guess it's macOS, right?. In this case you can try to surround $browser with double quotes (\") in your script.. Thank you for using TestCafe \ud83d\ude09 \ud83d\udc4d . @amirse80, could you please share the code of the tRunner.js file?. I've restarted the failed test\nhttps://travis-ci.org/testcafe-build-bot/testcafe/jobs/212921627. webmake@0.3.43 is broken on old node.js (dependency of gulp-webmake): https://github.com/medikoo/modules-webmake/commit/a12fba1fa77add1f41a61f766b063123b1648a08#diff-3fab227e34d65fe9bb2d6ea53eec41cfR569.. Server tests passed, should be ok. FPR.. Hello, @Darmody! Browser storages are sandboxed by testcafe-hammerhead, so page scripts that use storages API (e.g. localStorage.getItem('token')) will be fine and you can not worry about how the real browser sandbox is actually used. Does something not work because of this?. Ahh, ok, got it now, querying by [] is not sandboxed.. Actually, I tried to use localStorage['someKey'] and localStorage.someKeythey are sandboxed. So how did you figured out the fact that the storage is saved to the different key? . Actually, I tried to uselocalStorage['someKey']and localStorage.someKey they are sandboxed. So how did you figured out the fact that the storage is saved to the different key? . No-no, you can use localStorage[] and localStorage., I was wrong about it. testcafe-hammerhead do some script processing, so for scripts on your page everything will seem that they directly use the window.localStorage, but actually they will use values from localStorage['hammerhead|storages-sandbox-temp']. So while it's looks frightening in the debugger console, in scripts everything should be OK.. No-no, you can use localStorage[] and localStorage., I was wrong about it. testcafe-hammerhead do some script processing, so for scripts on your page everything will seem that they directly use the window.localStorage, but actually they will use values from localStorage['hammerhead|storages-sandbox-temp']. So while it's looks frightening in the debugger console, in scripts everything should be OK.. You can use\n```js\nimport { ClientFunction } from 'testcafe';\n\n\nconst getPageHTML = ClientFunction(() => document.documentElement.innerHTML);\ntest('Test', async t => {\n    var html = await getPageHTML();\n});\n. Hello @gpsarkar! I confirm the issue and I'm working on the fix now.. FPR\n\\cc @helen-dikareva . \\cc @inikulin . FPR. Tests are failed because of Saucelabs failure. \\\u0441\u0441 @AlexanderMoskovkin @helen-dikareva . It happens because `process.kill` doesn't work properly on Windows, it just silently terminate the child process: https://github.com/nodejs/node/issues/12378. PM2 (popular process manager for Node.js https://www.npmjs.com/package/pm2) uses special `shutdown` message on Windows: http://pm2.keymetrics.io/docs/usage/signals-clean-restart/#windows-graceful-stop. IMHO we can use it in our case.. Hello @mmakarios! Are you sure that Chrome installed in `/Applications/Google_Chrome.app`? Can you try to delete Chrome, then in terminal execute `rm-rf /Applications/Google_Chrome.app`, and install Chrome back?. Hello @mbbaldwin! Can you show me the text of the error and output of the \nls -l /Applications/\ncommand?. Can you please try to execute\nopen -n -a \"/Applications/Google Chrome.app\" --args http://www.google.com --no-first-run --new-window\nWill it launch Chrome or not?. Thank you, please try to run\ntestcafe 'path:/Applications/Google Chrome.app' $TESTS\nwhere `$TESTS` is your tests file/directory.. Please, can you submit an output of\ndiskutil info /\nAnd also\ntestcafe --version\n```\nAlso, please, try\ntestcafe 'path:/Applications/Google Chrome' $TESTS\nand\nln '/Applications/Google Chrome.app' /Applications/Chrome.app\ntestcafe chrome $TESTS\ntestcafe path:/Applications/Chrome $TESTS\ntestcafe path:/Applications/Chrome.app $TESTS\n. Sorry, my mistake, the first commands must be ln -s:\nln -s '/Applications/Google Chrome.app' /Applications/Chrome.app\ntestcafe chrome $TESTS\ntestcafe path:/Applications/Chrome $TESTS\ntestcafe path:/Applications/Chrome.app $TESTS. Have you tried renaming /Applications/Google Chrome.app to /Applications/Chrome.app as suggested in @dylanharrington's comment?\nAlso, please note that in Google Chrome.app Chrome starts with the capital C and in the recent TestCafe versions, the path provider requires that a browser path with spaces must be surrounded with the backticks (`):\ntestcafe 'path:`/Applications/Google Chrome.app`' uitests/tests/peopletest.js -r xunit:res.xml -e. I see that you try to start Chrome from the Jenkins shared user account. Jenkins CI needs additional configuration to start a browser from build jobs. Please refer to this comment for the instructions.\nAlso, it can be a good idea to start a browser from Jenkins without TestCafe to debug your configuration. Close all Chromes window and quit from the Chrome app (Chrome -> Quit in the main menu). Then specify the following command in your Jenkins build job and start a build:\nopen -n -W -a \"/Applications/Google Chrome.app\"\nIf your configuration is correct, a Chrome window should appear. Otherwise you will get an error in your Jenkins build log.. I'm happy to hear that you have resolved the problem, thank you for sharing the details with me. I've created issue\u00a0#3370\u00a0about updating our Jenkins recipe to include the steps you described. . @TestAndunR, yes, it works. Do you have a page which has a problem with typeText?. @TestAndunR, thanks for the test, I'll check it.. Hello @YacheLee! Currently we don't support ngrok, The best way in this case is using VPN-based solution, like Hamachi to create virtual network.\nHowever, if you really want to use ngrock, it's possible but with some limitations:\n - Cross-domain iframes are not supported\n - TestCafe  needs to be started at port 80\n - This way requires editing hosts file.\nSo, \n\n\nStart ngrok http 80. Store your public url somewhere. I will refer to it as ngrok-url. Do not include http:// or https:// in ngrock-url.\n\n\nAppend 127.0.0.1 ngrock-url to the hosts file. The full file path is C:\\Windows\\System32\\drivers\\etc\\hosts on Windows and /etc/hosts on macOS and Linux.\n\n\nStart TestCafe as testcafe remote --hostname ngrock-url --ports 80,81 test.js\n\n\nOpen an url provided by TestCafe in a remote browser.. Hello @jimthedev! An offtopic first: you don't have to use json to specify the browser, you can just use\ntestcafe 'path:`/Applications/Google Chrome Canary.app` --headless --remote-debugging-port=9222' test.js\nUse backticks if path to the app contains spaces: docs.\n\n\nTo the point: currently we use native OS routines to take screenshots, it means that if there is no window -there will be now screenshot. But we are planning to create an additional browser provider that will use Chrome Debugging Protocol. It's related to mobile emulation mode: https://github.com/DevExpress/testcafe/issues/1274. I think we also can implement screenshots through CDP in this provider, and you will be able to start it in headless mode using command line switch.\n. Hi @TestAndunR, we are about to release a next TestCafe version, which mustn't report this warning. I will notify you when it is published to NPM. . # Feature summary\nUsage\nchrome[:pathToBrowser][:headless][:emulation][:arg1=value;arg2=value][ --cmd-args]\nE. g.\n```sh\n// Default headless mode\n\"chrome:headless\"\n// Device emulation\n\"chrome:emulation:device=iphone 6\"\n\"chrome:emulation:width=100;height=200;scaleFactor=1;mobile=false;orientation=vertical;userAgent=abc;touch=true\"\n// Headless device emulation\n\"chrome:headless:emulation:device=iphone 6;cdpPort=9223\"\n// Headless with cdpPort setting\n\"chrome:headless:cdpPort=9223\"\n// Headless/device emulation for a portable version\n\"chrome:path/to/chrome:headless:cdpPort=9223\"\n```\nConfig\npath - for the case if you want to run headless or device emulation mode for a portable browser;\nheadless - enable headless mode;\nemulation - enable device emulation;\nAvailable arguments:\n- for device emulation: device=<string>,width=<number>, height=<number>, scaleFactor=<number>, mobile=<bool>, orientation=<vertical|horizontal>, userAgent=<string>, touch=<bool>.\n- cdp args: cdpPort=<int>\n. Hello @ls-guillaume-lambert, it depends on your CI. Generally, it's enough to install Chrome 59 (current stable) on Mac/Linux and Chrome 61 (current canary) on Windows. E.g. for Travis you can follow our recipe, but use another config for the Step 3:\n```yaml\ndist: trusty\naddons:\n  apt:\n    sources:\n     - google-chrome\n    packages:\n     - google-chrome-stable\n```\nAnd on step 4 use the following configuration:\njson\n\"scripts\": {\n    \"test\":  \"testcafe chrome:headless tests/index-test.js\"\n}\nWe will update the recipe soon to note Chrome Headless mode.. Here is an example for Travis CI: GitHub repo, Travis build.. Hello @okvv, you can connect any number of browsers using this URL, so if remoteCount == n, TestCafe will wait until n browsers will navigate to the URL. . > 2. Navigate to non-existing file.\nTestCafe opens an empty page. So this test is passed.\nIt's the same behavior when a failed HTTP(S) request to a page has no body and has non-2xx error code. So should we report an error too if a request to the test page has status 404 or 500? . https://github.com/DevExpress/testcafe-hammerhead/issues/1115. FPR. \\cc @inikulin @AlexanderMoskovkin. FPR. # Feature summary\nUsage\nchrome[:pathToBrowser][:headless][:emulation][:arg1=value;arg2=value][ --cmd-args]\nE. g.\n```sh\n// Default headless mode\n\"chrome:headless\"\n// Device emulation\n\"chrome:emulation:device=iphone 6\"\n\"chrome:emulation:width=100;height=200;scaleFactor=1;mobile=false;orientation=vertical;userAgent=abc;touch=true\"\n// Headless device emulation\n\"chrome:headless:emulation:device=iphone 6;cdpPort=9223\"\n// Headless with cdpPort setting\n\"chrome:headless:cdpPort=9223\"\n// Headless/device emulation for a portable version\n\"chrome:path/to/chrome:headless:cdpPort=9223\"\n```\nConfig\npath - for the case if you want to run headless or device emulation mode for a portable browser;\nheadless - enable headless mode;\nemulation - enable device emulation;\nAvailable arguments:\n- for device emulation: device=<string>,width=<number>, height=<number>, scaleFactor=<number>, mobile=<bool>, orientation=<vertical|horizontal>, userAgent=<string>, touch=<bool>.\n- cdp args: cdpPort=<int>\n. FPR. > > remote: Indicates that a local browser instance should not be started by provider.\n\nWhy we need this. Isn't specifying host enables remote debugging\n\nIf you've started browser with CDB manually (on the port 9222), you can just write remote instead of host=localhost:9222. Also, you can use remote to connect Chrome on Android if you have a device connected by USB.\n\n\nnoCdb: Start local browser instance without Chrome Debugging Protocol support (no headless, no emulation)\n\nWhy we need this in the first place. isn't it the same as testcafe chrome test.js?\n\nI would like that CDB will be enabled by default, because it gives better screenshots: even if Chrome is in background, and without browser UI, on all platfroms (currently we don't include Chrome UI in screenshots only on Windows).\n\n\nargs: Optional user-specified arguments\n\nAFAIK we already have the way to specify args for providers, so why we need this?\n\nYou can specify arguments in the old way if you don't use any other options. Without it it will be harder to extract provider-specific options from user-supplied args. So if you don't plan to use emulation/headless/etc. you can still use\ntestcafe 'chrome --my-arg --my-arg2'\nBut if you are using emulation, you will use args option (live example from V. Gein):\ntestcafe \"chrome:args=--disable-infobars --disable-session-crashed-bubble --kiosk;device.name=iPhone \n 4\"\n\n\nhost: Specifies a host to connect via CDB. May be specified with port, e.g. localhost:9222 , port: Specifies a port to connect via CDB\n\nHaving a host is just enough, moreover it makes sense to name it `remote, e.g.:\n\nCDP requires a free TCP port, so if you have port 9222 occupied, you may want just to start Chrome on another port:\ntestcafe 'chrome:port=9222'\nvs\ntestcafe 'chrome:remote=localhost:9222'. Summary updated. FPR. @testcafe-build-bot \\retest. FPR. Hello @mulyoved! We need some time to discuss that feature. At the moment, you can vote for this feature : Automatically copy remote worker URL to the system clipboard. Just add \ud83d\udc4d to the post. Also, if you are talking about iOS simulator, you can try FBSimCtl browser provider, or we can consider creating a dedicated browser provider. So what is the simulator you are talking about?. FPR. Hi @sibliss! You've got the error because TestCafe was installed locally with npm install testcafe.To use TestCafe as a regular CLI application, install it globally with npm install -g testcafe. Also if you have to stick with local installation, you can use testcafe script from node_modules folder: ./node_modules/.bin/testcafe chrome tests/ or even add ./node_modules/.bin to the PATH environment variable.. Please note, that node_modules/.bin folder is automatically added to the PATH when NPM runs its scripts, so you can just use testcafe command in NPM scripts, e.g. npm test even if TestCafe is installed locally! . \\cc @AlexanderMoskovkin . https://github.com/ryx/testcafe-browser-provider-nightmare/pull/13. Fixed in testcafe-browser-provider-nightmare@0.0.5.. > Also, there are some restrictions on syntax: fixture and page can only be written in function form, tagged template literals are not supported\nWe can tweak definitions to allow them! \ud83d\ude03 \ninterface FixtureFn {\n    (name: string | TemplateStringsArray): this;\n    page(url: string  | TemplateStringsArray): this;\n.... Yes, that's mostly right, there will be no `{testName}` in path, and it differs slightly when quarantine mode is enabled. So if quarantine mode is not enabled:\n{screenshotsFolder}{currentDate}\\test-{testIndex}{userAgent}{screenshotIndex}.png\nand if quarantine is enabled, it is:\n{screenshotsFolder}{currentDate}\\test-{testIndex}\\run-{quarantineAttempt}{userAgent}{screenshotIndex}.png\n. Yes, that's mostly right, there will be no `{testName}` in path, and it differs slightly when quarantine mode is enabled. So if quarantine mode is not enabled:\n{screenshotsFolder}{currentDate}\\test-{testIndex}{userAgent}{screenshotIndex}.png\nand if quarantine is enabled, it is:\n{screenshotsFolder}{currentDate}\\test-{testIndex}\\run-{quarantineAttempt}{userAgent}{screenshotIndex}.png\n``. Hello @GitScrum, I reproduced the problem withresizeWindowand Edge 15. It's related to the OS-specific native module: https://github.com/DevExpress/testcafe-browser-tools/issues/117. Need some to investigate and fix it. I will inform you when the fix will be available in a next alpha/release.. Hello @GitScrum, I reproduced the problem withresizeWindow` and Edge 15. It's related to the OS-specific native module: https://github.com/DevExpress/testcafe-browser-tools/issues/117. Need some to investigate and fix it. I will inform you when the fix will be available in a next alpha/release.. Hello @GitScrum, we discovered that some apps can prevent TestCafe from accessing browser windows. In this case, relogin without session restore might be helpful.. Hello @GitScrum, we discovered that some apps can prevent TestCafe from accessing browser windows. In this case, relogin without session restore might be helpful.. Hi @marcin-chwedczuk-meow, thanks for feedback! You can automatically take screenshots on failures using the corresponding option, but it will take only the visible part of a page? of course. Could you please explain, what useful or important things can be in the invisible part of a page? Could you share your experience?. Hi @marcin-chwedczuk-meow, thanks for feedback! You can automatically take screenshots on failures using the corresponding option, but it will take only the visible part of a page? of course. Could you please explain, what useful or important things can be in the invisible part of a page? Could you share your experience?. https://github.com/DevExpress/testcafe-hammerhead/pull/1170. @pkundu06, IMHO the solution proposed in this comment is very idiomatic for JS. . Ok, surprisingly Flow was better at generics, TypeScript has some issues:\n - This one prevents is required for inferring custom methods arguments: https://github.com/Microsoft/TypeScript/issues/5453\n\nand this one for inferring custom methods/properties return type:\nhttps://github.com/Microsoft/TypeScript/issues/9366\n\nWithout typechecking for arguments and return type it looks like:\n```js\ninterface CustomPropertiesMap {\n    {[prop: string]: (node: Element) => any})\n}\ninterface CustomPropertiesOnSnapshot {\n    [P in keyof T]: any\n}\ninterface CustomPropertiesOnSelector {\n    [P in keyof T]: Promise\n}\ninterface TestController {\n    //...\n   addCustomDOMProperties(props: T): CustomSelector;\n   //...\n}\ninterface CustomSelector extends Selector, CustomPropertiesOnSelector {\n    (...args: any[]): CustomSelectorPromise;\n}\ninterface CustomSelectorPromise extends SelectorPromise, CustomPropertiesOnSelector, Promise> {\n}\n```\n. @gregorycv, you get the error because the nested iframe failed to load. I can't reproduce this error without access to your website. We will provide a way to configure the iframe loading timeout in the context of https://github.com/DevExpress/testcafe/issues/2387.. Hi @elaygl, I reproduced the problem, trying to fix it ASAP.. Thanks for the catch, fixing it now! . Now current \"latest\" Firefox 55 works on Travis, so recipes are functional.. FPR. FPR. Hi @jesperalmstrom, result of ClientFunction is an async function, you can call it and await the result:\nconst el1 = Selector('#errorArea');\nconst getErrorMessage = ClientFunction(() => document.getElementById('errorMessage').innerHTML);\nconst errorMessage = await getErrorMessage();\nawait t.expect(el1.visible).notOk('Error visible: ' + errorMessage);\nor use t.eval instead of ClientFunction:\nconst el1 = Selector('#errorArea');\nconst errorMessage = await t.eval(() => document.getElementById('errorMessage').innerHTML);\nawait t.expect(el1.visible).notOk('Error visible: ' + errorMessage);. You can pass Selectors into t.eval or ClientFunction as a dependencies:\nconst el = Selector('#errorMessage');\nconst getErrorMessage = ClientFunction(() => el().innerHTML, { dependencies: { el } });\nconst errorMessage = await getErrorMessage();\nawait t.expect(el1.visible).notOk('Error visible: ' + errorMessage);\nconst el = Selector('#errorMessage');\nconst errorMessage = await t.eval(() => el().innerHTML, { dependencies: { el } });\nawait t.expect(el1.visible).notOk('Error visible: ' + errorMessage);. Also please note that there is no await in el = Selector(..., in the previous case too. Hello @afcbpeter, unfortunately there is a little information about what's going on. Stacktrace shows that there is an error in your test code (/Users/peterki/IdeaProjects/hermes-ui-tests/test/storage/subscription-store.js at line 14, column 25). Can you give the test code, and full TestCafe output, please?. Also the command that runs TestCafe looks very strange (because of npm test in the place of testfile), are you sure that it isn't wrong?. From the original post I understand that audit-search-page.test.js located in /Users/peterki/IdeaProjects/hermes-ui-tests/test/spec directory. So if this directory is not your current directory when you run TestCafe, you will get no test file error because the file doesn't exists here. You can try to specify absolute path for the test file: testcafe \"chrome:./Users/peterki/Library/Application Support/Google/Chrome:headless\" /Users/peterki/IdeaProjects/hermes-ui-tests/test/spec/audit-search-page.test.js.. Hello @marchugon, TestCafe started to support Chrome Headless since v0.16.0, but you have reported \n\ntestcafe version: 0.15.0\n\nPlease, check your TestCafe version.\nYou can pass any Chrome options after :headless, so you can try testcafe 'chrome:headless --disable-gpu' test.js, but this GPU error shouldn't prevent starting the browser.\nI'm installing Debian 8.8 now, and I assume that you use Chrome from Google repo ( not Chromium from Debian repos)  on x86_64 arch, right?. Also, did you try to start Chrome Headless without X11? Or maybe under root user?. Works on fresh-installed Debian Jessie 8.8 amd64, testcafe v0.16.0, node 6.11.0, google-chrome 59.0.3071.109, no X11 at all, with command testcafe chrome:headless tests.js.. \\\u0441\u0441 @AlexanderMoskovkin @helen-dikareva . FPR. FPR. Checked on Linux & macOS. Hello @caseyWebb, thank you for benchmarking \ud83d\ude04 I'm investigating the problem now, and I'll post any updates that I will have.. Hello @manuelkiessling, currently we use is-ci package to disable CLI animation on CI systems like Jenkins. Maybe it's a bug in that package. BTW, you can declare/export the CI environment variable, and the hipster wheel must go away. \ud83d\ude09  Examples:\nfor bash:\nCI=1 testcafe ...\ncmd\nset CI=1 \ntestcafe ...\npowershell\n$env:CI=1; node .\\bin\\testcafe.js chrome .\\examples\\basic\\test.js. It's a part of https://github.com/DevExpress/testcafe/issues/2544 now.. Hello @Freak613! Unfortunately, the error text is quite misleading, (I've created an issue about that: https://github.com/DevExpress/testcafe/issues/1606). Of course in the localhost case, it's not related to DNS, but likely to the port or server connection in general. So:\n\n\nCheck that you server is running on localhost:3000. Try to navigate to it with your browser.\n\n\nCheck that there is no firewall rules that prevents Node.js or TestCafe from accessing localhost.\n. Hello @lzxb  , due to new multiprocess rendering in Firefox 54, it has troubles with running on Travis with Xvfb. Please, try to use Firefox 53, you can specify version (53.0) here.. Hello again, @lzxb! Looks like the issue was fixed in Firefox 55. Can you try to switch back to the firefox: \"latest\" in your travis.yml?. I forked you repo and it works with Firefox 55: https://travis-ci.org/AndreyBelym/vuet/builds/263057293. Hello @peterwestendorp, unfortunately it's a very serious design-level change, and I'm afraid we can't afford it yet. The recommended approach is to extract myBeforeFunction and myAfterFunction to a dedicated file, and then import and use them in your fixtures. E. g. https://github.com/surveyjs/surveyjs/blob/master/testCafe/settings.js, https://github.com/surveyjs/surveyjs/blob/master/testCafe/validation/standardValidators.js#L22. Also there is a similar feature that we are considering for implementation, you can vote for it if it may be useful for you: https://github.com/DevExpress/testcafe/issues/792, . Actually, you can just create an empty directory, and use it in -profile argument. Also, probably you will use some arguments to start a new instance (-no-remote -new-instance). So the result is:\nmkdir /tmp/firefox-tmp-profile\nfirefox -no-profile -new-instance -profile /tmp/firefox-tmp-profile. Hello @satispunk! If you are starting the TeamCity agent as a service, can you please try to start it from CLI: https://confluence.jetbrains.com/display/TCD9/Setting+up+and+Running+Additional+Build+Agents#SettingupandRunningAdditionalBuildAgents-StartingtheBuildAgent? . Hi @satispunk, @panupetteri, @viraxslot, from what I have now it looks like it's a technical limitation in Windows. Maybe there is group policy or something to keep desktop GUI operational for remote connections. Currently you could try to use browsers in headless mode.. This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492. I'll notify you when a build with the fix will be published on NPM. Feel free to try the fixed build and reopen the issue if the problem isn't solved in your environment.. Hi @ricwal-richa @hex0cter @chinjon, unfortunately there is a design flaw in our report system, which leads to reporting wrong number of runned and failed tests when canceling tests after test suite is started. So we need to redesign reporting plugins API and make a breaking change to properly support this feature. \n\n\nDue to this complications, I should say that implementation for this feature will take a long time, but PRs are welcome as always.. Hello @Hotell! The example from docs was written for cmd shell, but it seems like you are using bash. The case with double quotes didn't work for you because backticks have special semantics in bash, and should be escaped with \\ or should be inside single quotes (bash does some interpretation for strings inside \" but not for strings inside ').  I think we should fix docs at least, add an example for *NIX-like shells. \nAlso I'll try to improve quotes handling to allow using regular quotes to separate spaces-containing path and arguments in the path provider. Because experience shows that backticks are counter-intuitive, and people regularly runs into issues with them.. Hi @eliw00d, don't use backticks inside double quotes in bash, because shell will execute the text quoted with backticks as a command: https://www.gnu.org/software/bash/manual/html_node/Command-Substitution.html#Command-Substitution. Just use single quotes (') not double ones. We can't do much in this case because shell performs command substitution even before starting a TestCafe process.\nTo solve this problem, we need to find some argument syntax that is neutral to all major shells (bash, cmd.exe, PowerShell), convenient enough and has backward compatibility with current syntax. . @mojjy, if we don't close the stdin stream of a child process. the child_process.exec won't call its callback on real Linux systems until the child process is terminated. I think we should use child_process.spawn instead: https://github.com/DevExpress/testcafe-browser-tools/issues/159. It's a testcafe-browser-tools issue: https://github.com/DevExpress/testcafe-browser-tools/issues/122. Unfortunately, it seems like currently Edge can't be launched reliable in concurrency, because there is no known way to start it in a new window with the specified URL. Docs should be changed to note this.. Hello @fiws, unfortunately we do not fully support Wayland now: https://github.com/DevExpress/testcafe-browser-tools/issues/123. We'll fix the problem in testcafe-browser-tools and then it will be fixed here. As a workaround, have you installed the xorg-server-xwayland package?. Hello again, do you have xorg-xwininfo installed?. Hello @watermelonjuice, can you provide the output of pacman -Q and note what window manager/desktop environment do you use? Currently we need xwininfo utility installed + EWMH-compatible window manager (https://en.wikipedia.org/wiki/Comparison_of_X_window_managers). Also I didn't get about headless chrome, it shouldn't have visible windows at all.\n. Also as I see Gnome Shell on Wayland still lacks EWMH-support, so it may be the reason why it doesn't work. BTW, I found that installing xorg-server-xwayland is not enough, it should be enabled in Wayland config: https://wiki.archlinux.org/index.php/wayland#XWayland. @watermelonjuice, please install xorg-xwininfo package. I've created a separate issue about headless Chrome: https://github.com/DevExpress/testcafe/issues/1700. If you don't mind, can you please try to terminate Chrome (killall chrome) and then run tests in Headless Chrome again, and check process existence (ps aux|grep [Cc]hrome). . @varunkumar, do you use Xvfb / X11 / Wayland? What Desktop Environment do you use? . X11 Forwarding is not supported, browsers and X11 server should be started on the same machine with TestCafe. . Closed in favor of https://github.com/DevExpress/testcafe/issues/2415. Hello @3562Nathan and @redfox256! Do you start Jenkins as a service? If so, you may need to set 'Allow service to interact with desktop' in the service properties: https://github.com/SeleniumHQ/selenium/issues/3349 and on Windows 10 you have to toggle the NoInteractiveServices registry key, or try to start it as a regular Windows CLI process from the terminal or a batch file. \nIf TeamCity is also running as a service on Windows, you can try to apply similar tweaks to its service too.. Can you please try so start Jenkins from the command line and check how browsers will start? \ncd \"C:\\Program Files (x86)\\Jenkins\" && java -jar jenkins.war. @arobertsf, TestCafe can't handle this problem because it's fundamental OS-level restriction. Windows prevents running GUI apps from services. So I won't reopen this issue, and will close any new issue with the same subject. You can try to ask a question in the Jenkins chatrooms or on Microsoft Community about configuring the Jenkins service. There are some configuration options, but seems they don't work well too in latest Windows versions, so I strongly suggest you to avoid using Jenkins as a service. \nInstead of using the service, you can create a Batch or PowerShell script that start Jenkins from its JAR file, and add this script to the startup directory. If you need to restart your Jenkins machine frequently, you can configure automatic logon.. Hello @avozicov, are you running tests only in Firefox or together in the same time with some other browsers?. Have you monitored resource usage (especially memory) during tests? I would suggest you to try running just one browser, and monitor memory usage. On Linux you can add this:\nsh\nwhile true; do free; sleep 3; done &\nbefore testcafe ... in your test command.. Looks like it is a Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=754708\nWorkaround is on the way.\nBTW, headless is available in the latest Chrome stable on Windows, we should change the docs to get rid of Canary notes.. There are linting errors, fix'em please. That's because you should escape backslashes in Bash: http://wiki.bash-hackers.org/syntax/quoting. e.g. C:\\\\Users\\\\barrybadpak\\\\chrome\\\\GoogleChromePortable\\\\chrome.exe. Or use regular slashes: C:/Users/barrybadpak/chrome/GoogleChromePortable/chrome.exe. FPR. Hi @watermelonjuice, I think 5fbd334a, can potentially fix this problem, could you please try how testcafe@v0.22.0-alpha.3 works on your machine?. I close this issue due to a long inactivity period. Please feel free to reopen the issue if you still can reproduce the problem with the latest TestCafe version.. Could you please clarify what do you mean by \n\ninformation or actions performed by TestCafe method?\n\nRaised DOM events? Method arguments? IMO TestCafe methods have self-descriptive names like t.click, t.typeText, etc.. You can use console.log or console.error to output something to the console.. Hello @zhangtasdq! I can confirm, there is a mistake in TypeScript definitions. We'll fix it shortly. Until then you can pass strings as arguments to a ClientFunction:\n```js\nimport { ClientFunction } from \"testcafe\";\nlet testMsg:string = \"hello\";\nlet myFunc = ClientFunction(testMsg => ${testMsg} ${window.location.href});\ntest('My test', async t => {\n   await myFunc(testMsg);\n});\n``. Hello @cmbirk!maximizeWindowuses OS functions to maximize windows, so TestCafe setsdocument.titleto a unique ID (like[ BJ761BFOZ ]`) to be able to find the browser window among all other opened windows. So a title like this is normal.\nThere are third-party applications that can significantly delay browser window searching. Usually logging out without saving the session helps in this situation, did you try it?. Hi @cmbirk, the issue should be fixed by https://github.com/DevExpress/testcafe-browser-tools/pull/132, which is merged in current stable version 0.18.0! So i'm closing it, but feel free to reopen if you still have the problem.. Hello @avozicov! Have you followed our recipe for Travis CI: https://devexpress.github.io/testcafe/documentation/recipes/running-tests-in-firefox-and-chrome-using-travis-ci.html? . Currently TestCafe requires ICCCM/EWMH-compliant window manager for this functionality, e.g. fluxbox. Check this fragment of .travis.yml from the Travis CI recipe:\n```\naddons:\n  apt:\n    packages:\n     - fluxbox\nbefore_script:\n  - fluxbox >/dev/null 2>&1 &\n```. @farhd, please consider creating a new bug report and provide an example that can be used to reproduce the problem.. @NickCis, @bitjoo - thank you for providing additional details. You can solve these issues by using RequestMock to handle specific page requests. Take a look at the following topics in the documentation: \n - Mocking HTTP responses\n - Attaching hooks to tests and fixtures\nFor example, you can mock a service worker script for browsers that don't support this feature using the following code:\n```js\nimport { ClientFunction, RequestMock } from 'testcafe';\nconst supportsServiceWorkers = ClientFunction(() => 'serviceWorker' in navigator);\nfixture ServiceWorker\n    .page('http://my-site.com')\n    .beforeEach(async t => {\n         const canUseServiceWorkers = await supportsServiceWorkers();\n     if (canUseServiceWorkers)\n         return;\n\n     await t.addRequestMocks(\n         RequestMock()\n             .onRequest('http://my-site.com/service-worker.js')\n             .respond('');\n     );\n });\n\n``. @Worie, I guess you can useaxe-corewith TestCafe without the suggested feature. Please check a demo project made by @helen-dikareva, which integratesaxewith TestCafe: https://github.com/helen-dikareva/axe-testcafe. Hello @mqliutie, your question is about \"TestCafe Pro\", not about the open-source version which resides in this repository. \n\u00a0\nPlease submit your \"TestCafe Pro\" inquiries to our Support Center at www.devexpress.com/ask. This GitHub repo is reserved for the free TestCafe version only.\n\u00a0\nBTW, looks like your worker has been disconnected for some reason. Some more information about your setup and working scenario is needed to say something more helpful.. Hello @LasaleFamine! Do you usemomentpackage in your project? It's very likely thatyarnhasn't installed dependencies correctly, we had a similar issue before: https://testcafe-discuss.devexpress.com/t/promise-rejection-warning-on-test-completion/184/16. If you use it, try to change the package version to^2.10.3'.. Hi @s-robertson! Thanks for pointing on it. It's a very important issue, I'll try your solution and provide a fix for TestCafe ASAP.. Can you install testcafe@0.17.2 and check how it works there, please?. Is it the same error, can you post it here? What browser do you use?. So you mean that you can't run tests with 0.17.2? Or that tests was finished, but screenshots hadn't been created and there was no warning in the log? Have you tried to perform a fresh install (remove the node_modules durectory and install TestCafe locally)?. Just to be sure, can you please post the output of testcafe -v and give me the exact command you use to run tests? Was the browser closed successfully by TestCafe after tests? . Hello again, unfortunately we couldn't be able to reproduce the problem. Can you please try to install a debug build (npm install testcafe@0.17.3-git201709131433), run your test, and post the contents of the testcafe-browser-tools.log and find-window.log files from your home directory?. Hello @Li34!\nDo you have the \"find-window.log\" file in your home directory? How did you start TestCafe? Are you sure that you have posted the complete testcafe-browser-tools.log file?. By the way, could you try testcafe@0.18.0-git201709141633 please, and try to attach the find-window.<some number>.log files and the testcafe-browser-tools.log file, please?. Hello @varunkumar! It's likely unrelated to #1670.  There should be a warning in the test log if screenshots have failed, can you post it here?. All browser-related functionality should not require admin access. Something may be wrong with your installation. You can try to find a directory in which you have write & execution rights, install TestCafe locally there, and run it.. Can you please try to install testcafe@0.17.2 and check if the problem persists?. Do you have some kind of antivirus software? . Hello @planet71, I've encountered similar type of issue, but not with version 0.17.2. If you are using npm, try to clean cache npm cache clean -f, remove node_modules and install TestCafe. If it won't help, try to install npm@4.x.x.. Hi @lixualinta, our team is discussing this feature right now. I've made a prototype build without test page reloading. It's really dirty and can be extremely unstable, USE IT AT YOUR OWN RISK. \nAll tests in all fixtures must have the same test page URL, otherwise it won't work. \nYou can download it from GitHub: https://github.com/AndreyBelym/testcafe/releases/download/no-reload-demo-1/testcafe-0.20.0-alpha.3.tgz and then install the TGZ archive with npm, or just install it with npm i https://git.io/vp6Pf.. It's not ready for production use, because it's not documented and its API can be changed or removed completely, but you could try it in v0.20.4. Take a look at https://github.com/DevExpress/testcafe/commit/29621ec7f8132f0d7b387a29c0c0bec5e304bcca.. Hi @chinjon, currently it doesn't reload a page between tests only if second test's page is same as the page where the first test finished. E. g.\n``js\ntest\n  .pagea.html`\n  (t => t.navigateTo('b.html');\ntest\n  .page b.html\n  (t => { ... })\n```\nwon't reload the b.html page, but \n``js\ntest\n  .pagea.html`\n  (t => t.navigateTo('b.html');\ntest\n  .page a.html\n  (t => { ... })\n``\nwill return the browser fromb.htmltoa.html`. \nI've discussed with the team and we decided to simplify this behavior and just keep first test's page in the second test.. Also I've realized, that changed URL hashes can lead to reload.. Hi @Worie, it's implemented in v0.21.0 but is not documented, because the implementation isn't polished yet. You can use it at your own risk: there is no guarantee that TestCafe will ever work in your case with this option enabled. It can become broken in future updates or be removed completely.\nYou can enable it by specifying the --disable-page-reloads CLI switch, the disablePageReload API option, or using the fixture.disblePageReloads and test.disablePageReloads modifiers. There are also fixture.enablePageReloads and test.enablePageReloads for enable page reloads for a particular fixture/test if they were disabled globally/at fixture level.\nNote that you will likely need to write a code that will perform clean-up tasks after each tests, like resetting page layout, removing event listeners, cleaning storages, etc. This mode can also memory leaks if you don't write proper clean-up code.   . @subbiah2806, it's not a TestCafe Studio, but the old TestCafe (15.x) test file. Old test file syntax is in legacy state, and won't get any new features. So disabling page reloads won't work with the old test file syntax.. There are no updates about this feature, this comment completely describes the situation.. FPR. Currently this error means that TestCafe was unable to reach the specified website. It is not related only to DNS resolving issues, because it is displayed on any network error: #1606. Likely it's a problem with network connection or with the server. You can use the curl utility to check it: run several times curl http://develop-i.quid.com -o /dev/null. it should not report errors if network connection is working stable.. Currently this error means that TestCafe was unable to reach the specified website. It is not related only to DNS resolving issues, because it is displayed on any network error: #1606. Likely it's a problem with network connection or with the server. You can use the curl utility to check it: run several times curl http://develop-i.quid.com -o /dev/null. it should not report errors if network connection is working stable.. We can't ignore this error, because it means TestCafe cannot access the test page, there is no network connection or webserver is not responding. The only option here is to retry to fetch the page several times and hopefully some attempt will be successful.\n. We can't ignore this error, because it means TestCafe cannot access the test page, there is no network connection or webserver is not responding. The only option here is to retry to fetch the page several times and hopefully some attempt will be successful.\n. Thanks for you for your investigation @vampolo, the problem definitely relates to hammerhead, but AFAIK this code should not affect XHR requests. Anyway we will look at this part closely, thank you!. Thanks for you for your investigation @vampolo, the problem definitely relates to hammerhead, but AFAIK this code should not affect XHR requests. Anyway we will look at this part closely, thank you!. @aphofstede, could you please share more details about your problem? What are your operating system and Node.js versions? Does it happen sporadic or in every build, in a specific test or a random one? Can you provide a complete test report or an example that can be used to reproduce the problem?\nTestCafe doesn't retry any requests by default, but you can try to enable the undocumented pageRetryMode mode. When this mode is enabled. TestCafe retries failed requests to test pages up to 5 attempts with 300 milliseconds delay between each failed attempt. There are no options to configure the maximum attempts count or the delay between failed attempts.\nCurrently, you can't enable this mode from the command line interface; you should supply the true Boolean value as the 5th argument of the createTestCafe function to enable this mode. You also can configure your web server to send the Cache-Control header with a big expiration time (e.g., max-age=3600) to get maximum effect from this mode.. @aphofstede, could you please share more details about your problem? What are your operating system and Node.js versions? Does it happen sporadic or in every build, in a specific test or a random one? Can you provide a complete test report or an example that can be used to reproduce the problem?\nTestCafe doesn't retry any requests by default, but you can try to enable the undocumented pageRetryMode mode. When this mode is enabled. TestCafe retries failed requests to test pages up to 5 attempts with 300 milliseconds delay between each failed attempt. There are no options to configure the maximum attempts count or the delay between failed attempts.\nCurrently, you can't enable this mode from the command line interface; you should supply the true Boolean value as the 5th argument of the createTestCafe function to enable this mode. You also can configure your web server to send the Cache-Control header with a big expiration time (e.g., max-age=3600) to get maximum effect from this mode.. @pwaller yes, there is the only one error message type for all types of network problems. We plan to change the situation in the context of #3492.. @pwaller yes, there is the only one error message type for all types of network problems. We plan to change the situation in the context of #3492.. Hello @varunkumar! We have a function that scroll all element's parents, and this function retrieves list of parents using getParents function of testcafe-hammerhead . It's quite simple - just loops on parentNode's and perform some checks on them. So when it reaches a root of ShadowRoot, it stops and doesn't get out to the other part of DOM, because it has host property instead of parentNode.\nSo would you kindly try to make getParents  using host property for retrieving ShadowRoot's parent element, and check if it fixes the problem? \ud83d\ude04 \nThe tricky part here is that testcafe-hammerhead is a NPM dependency, and likely you will have to build it together with TestCafe. Personally, for cases like this one, I prefer to npm link a clone of testcafe-hammerhead repository. So likely for the first time you will need:\n\n\nclone https://github.com/DevExpress/testcafe-hammerhead and https://github.com/DevExpress/testcafe-hammerhead, \n\n\ninstall their dependencies  (npm i), \n\n\nbuild it (npx gulp build), \n\n\ngo to the testcafe-hammerhead and link it to global scope (npm link), \n\n\ngo to the testcafe, and link testcafe-hammerhead (npm link testcafe-hammerhead).\n\n\nNow you can try to run some tests to be sure that the build is okay, and if it's so, you can just make some changes to testcafe-hammerhead and rebuild it to get the changes recognized by TestCafe, no other steps required. . Hello @varunkumar! We have a function that scroll all element's parents, and this function retrieves list of parents using getParents function of testcafe-hammerhead . It's quite simple - just loops on parentNode's and perform some checks on them. So when it reaches a root of ShadowRoot, it stops and doesn't get out to the other part of DOM, because it has host property instead of parentNode.\nSo would you kindly try to make getParents  using host property for retrieving ShadowRoot's parent element, and check if it fixes the problem? \ud83d\ude04 \nThe tricky part here is that testcafe-hammerhead is a NPM dependency, and likely you will have to build it together with TestCafe. Personally, for cases like this one, I prefer to npm link a clone of testcafe-hammerhead repository. So likely for the first time you will need:\n\n\nclone https://github.com/DevExpress/testcafe-hammerhead and https://github.com/DevExpress/testcafe-hammerhead, \n\n\ninstall their dependencies  (npm i), \n\n\nbuild it (npx gulp build), \n\n\ngo to the testcafe-hammerhead and link it to global scope (npm link), \n\n\ngo to the testcafe, and link testcafe-hammerhead (npm link testcafe-hammerhead).\n\n\nNow you can try to run some tests to be sure that the build is okay, and if it's so, you can just make some changes to testcafe-hammerhead and rebuild it to get the changes recognized by TestCafe, no other steps required. . Hello @luckylooke, there might be something with you profile, maybe some Chrome settings. I think so because chrome:headless uses a completely empty temporary profile and it works, but chrome --incognito doesn't. Until we are in process enabling empty profiles by default, you can use --user-data-dir=$SOME_DIR flag. E.g.:\nmkdir /tmp/temp-chrome-profile\ntestcafe 'chrome --user-data-dir=/tmp/temp-chrome-profile' test.js. FPR. FPR. Hello @gyopiazza!\nHow do you start TestCafe? It seems like you're using TestCafe API, do you? Could you provide a code that runs TestCafe please?\nThis error means that a browser stopped responding in the testing process. There is a lot of reasons why it can happen, so sharing your tests and the test page would be really helpful, can you afford this?\nBTW, if we can't figure the actual reason why browsers hangs, at least we can restart the browser (#1815), or if it's concurrency mode, just we can just keep using another instances that stayed alive. I think it will be not so hard to implement it \\cc @AlexanderMoskovkin \n. @viveleroi, the page from the original post throws an error when a user navigates from it to a different page while it is still being loaded. So Alex's suggestion was about fixing the error that occurs when page loading is interrupted. If you think that it is a requirejs problem, you can contact the requirejs team and ask how this error can be avoided. . @viveleroi, you can check if window['%hammerhead%'] is not undefined.. Since the original problem is resolved, please consider creating a new issue or asking a question on Stack Overflow if you need any assistance.. Hello @KaneMorgan!\nWe already have a note about --no-sandbox flag in our docs:\nAdd the --no-sandbox flag to Chromium if the container is run in the unprivileged mode.\nSo if you run the image with docker run --privileged, you won't need this flag.\nAlso, official TestCafe image based on Alpine + Chromium works fine without --disable-gpu flag on Docker Toolbox for Windows and Mac. Could you please try to run your image without it, only with --no-sandbox flag?\n. Hello @ggrimbert, could you please try the latest TestCafe alpha? You can install it with npm i testcafe@alpha.. Do you have some proxy? If so, could you disable it and try to run tests without it? If you need your proxy to access the Internet, you can install http-server (npm i -g http-server), run it from an another terminal window (just http-server), disable proxy and use the following test:\n``\nfixtureSimple. pagelocalhost:8080`;\ntest('Test', t => t.wait(3000));\n. @Foxandxss, unfortunately you have to compile you app to the plain JS before importing its code from TestCafe test files.. @Foxandxss, unfortunately you have to compile you app to the plain JS before importing its code from TestCafe test files.. It happens only on macOS when size is lesser than 335x25.. Yep. Closing was failed due hanged headless process.. Duplicate of https://github.com/DevExpress/testcafe/issues/2095. Another variant of the same problem:js\nimport { Selector } from 'testcafe';\nfixture Check Unlock Button UI\n    .page http://example.com;\ntest('Test with Debuggers', async t => {\n    t.click(Selector('blabla'), { timeout: 1000 });\nawait new Promise(r => setTimeout(r, 500));\n\nawait Selector('body').exists;\n\n});\n```. Hello @ai !\nThank you, nice job! I'll figure out why tests are failing, likely it's something with Firefox on Browserstack. So your PR will be merged when I resolve issues with tests. \nOne more point: we are using shortid in testcafe-hammerhead (https://github.com/DevExpress/testcafe-hammerhead) too. Are you going to replace it with nanoid there? Otherwise I'll do it by myself.. Hello @ai !\nThank you, nice job! I'll figure out why tests are failing, likely it's something with Firefox on Browserstack. So your PR will be merged when I resolve issues with tests. \nOne more point: we are using shortid in testcafe-hammerhead (https://github.com/DevExpress/testcafe-hammerhead) too. Are you going to replace it with nanoid there? Otherwise I'll do it by myself.. You are awesome!. You are awesome!. It's introduced in https://github.com/DevExpress/testcafe/commit/7dc8cd4911c5526e23db98a3543da8f18da424b9. It's introduced in https://github.com/DevExpress/testcafe/commit/7dc8cd4911c5526e23db98a3543da8f18da424b9. Importing the assignIn function from lodash in BrowserConsoleMessages class causes the error. We can use Object.assign, it's polyfilled by Babel, so it's available event in old browser. I'm preparing a hotfix now.. \\\u0441\u0441 @churkin . Hello @pablorivera !\nThis feature is not supported in 0.17.2. It is implemented in 0.18.0, so try to upgrade your installation.. Hello @richardxia !\nI agree with you about that we have to correct the docs about usage of the Docker image.\nI'm afraid we can't avoid changing hostname and ports, because we use special proxy server that analyzes and modifies content of a tested page (so-called URL rewritting). The only possibility here is to detect external IP/ports somehow, but I didn't find any information about how it could be done.\n. Hi @bertBruynooghe, I've checked the Docker image on a Mac, and it works this way for me:\ndocker run -it -rm -v $HOME/Documents/Tests:/tests -p 1337:1337 -p 1338:1338 testcafe/testcafe remote /tests/test.js --hostname localhost\nKey points are using the localhost for the hostname, explicitly publishing ports with -p, and not using -- after the image name. You don't need -- because Docker automatically threats everything after an image name (e.g. testcafe/testcafe) as arguments for a container.. Hello @Emmanux !\nThere was a breaking change in 0.18.0. The --reporter key was renamed to --reporters due to support of multiple reporters. We have to fix docs and allow to use the old version (maybe with some deprecation warning).\nYou can use short version of this key (-r) as a workaround:\nsudo /usr/bin/docker run --rm -e CI=1 -v `pwd`/tests:/tests --net=dockernet testcafe/testcafe 'chromium --no-sandbox --kiosk --disable-translate --disable-infobars' -r json /tests/test.js. Hello @Thomblin !\nI'm investigating the problem. Looks like screenshots do not work well when concurrency mode is enabled ( ..,\"-c\", \"2\",..). Does it work better when concurrency is disabled?. This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492. I'll notify you when a build with the fix will be published on NPM. Also we have added a section in the docs about configuring Docker for testing heavy websites: Using TestCafe Docker Image/Testing Heavy Websites. Feel free to try the fixed build and reopen the issue if the problem isn't solved in your environment. . Hello @Thomblin!\nUnfortunately, I can't reproduce your problem. Could you specify your host OS version and version of Docker, please? Also, does it works better when concurrency mode is disabled?. Thanks @gytisgreitai, I think we should add a note to the docs and describe how to configure Docker and provide additional resources for Docker containers.. I thinks it's a duplicate of https://github.com/DevExpress/testcafe/issues/912, judging by the this answer.. Hello @tamlyn!\nI got your point, but the expected log which you wrote looks like just a log with concurrency === 1. I think, with concurrency > 1, it will be look more like:\n```\n One\n--> Before one\n--> One: A\n--> One: B\n \u2713 One: a\n--> One: C\n \u2713 One: b\n--> After one\n \u2713 One: c\nTwo\n--> Before two\n--> Two: A\n--> Two: B\n \u2713 Two: a\n--> Two: C\n \u2713 Two: b\n--> After two\n \u2713 Two: c\n``` \nSo some tests are started before previous was completed.\nWe discussed it and it seems like a good idea. We can create a barrier, that will ensure, that before hook and tests from the second fixture will not run before the after hook from the first fixture will be finished. But it will not stop starting tests from the second fixture if fixtures don't have hooks, because it will significantly increase overall tests execution time.. Hi @morph027, I can't reproduce it, could you please share your Dockerfile and HTML markup?. Hi @morph027, I can't reproduce it, could you please share your Dockerfile and HTML markup?. Hi @darina-techery, I assume your login page checks authorization tokens while it is loading. It means you can't set tokens in a beforeEach hooks, because its code is executed only after the page loading is finished.\nI think you can extract your auth procedure into a Role. Roles execute their auth code only once, and then restore cookies and storages before login page is loaded.. Hi @darina-techery, I assume your login page checks authorization tokens while it is loading. It means you can't set tokens in a beforeEach hooks, because its code is executed only after the page loading is finished.\nI think you can extract your auth procedure into a Role. Roles execute their auth code only once, and then restore cookies and storages before login page is loaded.. Hello @FredrikSeidl!\nI've reproduced the bug, need some time to investigate it, thank you for the feedback, I'm trying to find a workaround now.. Hello @FredrikSeidl!\nI've reproduced the bug, need some time to investigate it, thank you for the feedback, I'm trying to find a workaround now.. I have found that it happens when Chrome window resized to be bigger that virtual screen size. I can't figure out why but looks like that Chrome doesn't works well with Xvfb in this case. The problem can't be reproduced on a real X11 server. \nAs a workaround, you can set bigger virtual screen size by passing environment variables SCREEN_WIDTH and SCREEN_HEIGHT to container, e.g.:\ndocker run -it -e \"SCREEN_WIDTH=3840\" -e \"SCREEN_HEIGHT=2160\" -v ~/tests:/tests testcafe/testcafe -s /tests/screenshots 'chromium --no-sandbox' /tests\nI think we need to increase default screen size to 1920x1080 and emit descriptive warning or error on resizing if the specified size is bigger than the screen size.. I have found that it happens when Chrome window resized to be bigger that virtual screen size. I can't figure out why but looks like that Chrome doesn't works well with Xvfb in this case. The problem can't be reproduced on a real X11 server. \nAs a workaround, you can set bigger virtual screen size by passing environment variables SCREEN_WIDTH and SCREEN_HEIGHT to container, e.g.:\ndocker run -it -e \"SCREEN_WIDTH=3840\" -e \"SCREEN_HEIGHT=2160\" -v ~/tests:/tests testcafe/testcafe -s /tests/screenshots 'chromium --no-sandbox' /tests\nI think we need to increase default screen size to 1920x1080 and emit descriptive warning or error on resizing if the specified size is bigger than the screen size.. Hi @shaikatz @neilmatillano, could you try to increase Xvfb screen size, and use headless mode?\ndocker run -it -e \"SCREEN_WIDTH=3840\" -e \"SCREEN_HEIGHT=2160\" -v ~/tests:/tests testcafe/testcafe -s /tests/screenshots 'chromium:headless --no-sandbox' /tests. Hi @shaikatz @neilmatillano, could you try to increase Xvfb screen size, and use headless mode?\ndocker run -it -e \"SCREEN_WIDTH=3840\" -e \"SCREEN_HEIGHT=2160\" -v ~/tests:/tests testcafe/testcafe -s /tests/screenshots 'chromium:headless --no-sandbox' /tests. This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492. I'll notify you when a build with the fix will be published on NPM. Feel free to try the fixed build and reopen the issue if the problem isn't solved in your environment.. This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492. I'll notify you when a build with the fix will be published on NPM. Feel free to try the fixed build and reopen the issue if the problem isn't solved in your environment.. \\cc @AlexanderMoskovkin . Yes, we should include \"browser.usedOnWindows10\" flag to generated profile.. Hi @dineshpaduchuri, let's keep the conversation in #2795.. Hello @lustoykov!\nUnfortunately, I wasn't able to find something specific to your website. Microsoft browsers, especially IE, are known for memory leaks in large JS scripts. It can cause browser crashes and hangs. We have an issue to restart browsert that became unresponsive: #1815, you can vote for it to show its importance and promote it for next development iteration. Hello @danielabar! \nUnfortunately, disabling instrumentation is not an option, because it is used to emulate user actions. I think we need some time to implement support of new ES201x syntax features in Hammerhead's script processing.\nThe simplest workaround is to remove targets property from the preset config. In that case babel-preset-env will enable all available transformations and will transpile code to ES5 supported by TestCafe.. Hello @hauptrolle! What is your display resolution?. Actual usable screen area is actually smaller, because some place is reserved for Dock and menu bar.  It's better to use t.maximizeWindow() in this case. \nThe problem is that there should be a warning in this case, but I got hanging test on my machine.. Unfortunately, this information is not enough. Could you please try to install a debug build (npm install testcafe@0.17.3-git201709131433), run your test, and post the contents of the testcafe-browser-tools.log and find-window.log files from your home directory?. Hello @tamlyn!\nI reproduced the issue. You can try paste: true for typing options as a workaround:\njs\n.typeText('div[contenteditable=true]', 'This is some text which does not work', { paste: true }). Hi @adrianaisemberg, we are working out a way to enable more flexible screenshots path, but now you can use the following approach as a workaround:\n```js\nimport { ClientFunction } from 'testcafe';\nimport { parse } from 'useragent';\nfixture Take a screenshot\n    .page example.com;\nconst getUserAgent = ClientFunction(() => navigator.userAgent.toString());\ntest('Take a screenshot with a custom path', async t => {\n    const ua       = await getUserAgent();\n    const parsedUA = parse(ua);\nawait t.takeScreenshot('custom/' + parsedUA.family + '.png');\n\n});\n```\nIt will save screenshots to files according to browser names, e.g. custom/Chrome.png, custom/Firefox.png, etc.. Hi @adrianaisemberg, we are in process of designing extensions of screenshoting API, and they will make screenshot paths more flexible. Stay tuned for the next couple of weeks!\nRight now, it's possible to use JSON reporter: https://github.com/DevExpress/testcafe-reporter-json to get more structured screenshot information.. Hello @edoardocavazza!\nIt's a useful feature, because some browser API's (e.g. Apple Pay) are available only on HTTPS pages, and TestCafe HTTP end-point prevents access to them.\nRight now, you can configure stunnel to encrypt traffic from TestCafe to browser. You can check \"TLS front-end to a web server\" on https://www.stunnel.org/config_windows.html for an example configuration.. Hello @edoardocavazza!\nIt's a useful feature, because some browser API's (e.g. Apple Pay) are available only on HTTPS pages, and TestCafe HTTP end-point prevents access to them.\nRight now, you can configure stunnel to encrypt traffic from TestCafe to browser. You can check \"TLS front-end to a web server\" on https://www.stunnel.org/config_windows.html for an example configuration.. Requires Safari on macOS or iOS.\nExample page: https://andreybelym.github.io/test-pages/gh-1985.html\nTest:\n``\nfixtureApplePay.pagehttps://andreybelym.github.io/test-pages/gh-1985.html`;\ntest(test, t => t.wait(10000));\n``. Hi @intermike, thanks for contributing. Let's focus first ontestcafe-hammerheadpart, then when it's merged, we will discuss end-user API and CLI switches in TestCafe. I need some time to look at your work, but at first glance it's mostly fine, except a one strange expression at https://github.com/DevExpress/testcafe-hammerhead/pull/1590/files#diff-f17475e116c70c73c37dd369b8d12b6bR30 and absence of tests.. Hi @intermike, thanks for contributing. Let's focus first ontestcafe-hammerhead` part, then when it's merged, we will discuss end-user API and CLI switches in TestCafe. I need some time to look at your work, but at first glance it's mostly fine, except a one strange expression at https://github.com/DevExpress/testcafe-hammerhead/pull/1590/files#diff-f17475e116c70c73c37dd369b8d12b6bR30 and absence of tests.. @awithy, what do you mean by \n\nrun locally against a remote https endpoint*? \n\nYou can test websites served over HTTPS as easy as websites served over HTTP, since our proxy accepts both HTTPS and HTTP as input. However all websites regardless their original protocol are served over HTTP in testing session, because our proxy supports only HTTP output. The proposed changes enable HTTPS output for proxy, so connection during testsing session will be encrypted.. @awithy, what do you mean by \n\nrun locally against a remote https endpoint*? \n\nYou can test websites served over HTTPS as easy as websites served over HTTP, since our proxy accepts both HTTPS and HTTP as input. However all websites regardless their original protocol are served over HTTP in testing session, because our proxy supports only HTTP output. The proposed changes enable HTTPS output for proxy, so connection during testsing session will be encrypted.. @intermike, I think it's ok to disable this check here with\n/*eslint-disable no-restricted-properties*/\nprotocol = ...\n/*eslint-enable no-restricted-properties*/. @intermike, I think it's ok to disable this check here with\n/*eslint-disable no-restricted-properties*/\nprotocol = ...\n/*eslint-enable no-restricted-properties*/. 1. I think we should also support PFX certificates (because it's more convenient to use) and rejectUnauthorized property to enable self-signed certificates for testing purposes. @miherlosev's proposal for Runner API extension is already fine with this, but for CLI we should use more general approach like:\ntestcafe --ssl pfx=path/to/some.pfx;rejectUnauthorized=true;... \nWe already have such options syntax for browser providers' options.\n\nI would argue that we should support only Buffers and threat strings as a kind of Buffer. Yes, Node.js API works this way, but it makes harder switching from CLI to a custom runner. We went a similar way with globs and runner.src, and now this feature is in top 5 of the requested features. IMHO our API must be as convenient as the CLI. . Hello @Hack4Life!\n\nUnfortunately, it's hard to say something without the full page source code. If you concern about privacy, you can send a link/source through private messages on our forum: https://testcafe-discuss.devexpress.com/ to me, Helen Dikareva or Alexander Moskovkin.\nIf you can't share your code, could you please try to write minimal reproducible example, please?\nTestCafe will consider element visibile if its width or height have a non-zero value, and it is not hided using CSS properties like display: hidden and visibility: none . You can check it in Computed CSS Properties in DevTools.  In your case #confirmation-button might be an invisible button hidden somewhere in an actual visible element.\nAlso, you can try to resize browser window using resizeWindow action. It may help if your layout is adaptive or it is a scrolling issue.\n. Hi @florentpeyrard!\nIf your page doesn't request location during it is loading, you can write a simple Client Function to mock the location API:\njs\nconst mockLocationAPI =  ClientFunction(() => {\n    navigator.geolocation.getCurrentPosition = success =>  success({ coords: { latitude: 30, longitude: -105, }, timestamp: Date.now() });\n});\nThen you can use it in a test body or in a beforeEach section.\njs\ntest('test', async t => {\n    ...\n    await mockLocationAPI();\n    ...\n});js\nfixture Fixture\n    .beforeEach(async t => {\n        await mockLocationAPI();\n    });\n```\nBut, if you need to mock location before a page is completely loaded, you will need to wait for https://github.com/DevExpress/testcafe/issues/1739 to be implemented.. @charlieg-nuco, AFAIK Nightwatch and Selenium don't have a feature that is similar to the concurrency mode. In the regular mode, TestCafe executes tests preserving the order they were described in fixture files. . Closed by https://github.com/DevExpress/testcafe/commit/ac21fdb27f9f87fd8761884635d9d80d9db3d8a6. Hi @operatino! Unfortunately, it's not possible to handle Command + Q gracefully in a command line app. This key combination sends close command to the Terminal app, and it will terminate its children command-line process unconditionally if you agree to close running processes. It means TestCafe has no possibility to detect termination and sends close command to browsers.. Hello Christian!\nYou can use the --user-data-dir flag for Chrome and the -profile`for\nFirefox:\ntestcafe \"chrome --user-data-dir=\ntestcafe 'firefox -profile \"\"'\n. Hi @alejandro-martinez, have you switched on 'Allow all sites download multiple files automatically' in the profile, whose path is specified with --user-data-dir? You can follow this article, if you don't how to do it. \nI can enable this flag for temporary profiles, generated by TestCafe. But I need some time to figure out which flag in the $PROFILE_DIR/Default/Preferences file actually controls this functionality. I'll very appreciate, if someone directs me to the flag name or maybe some documentation of the Preferences file structure..  Hi @cdroulers, @alejandro-martinez! I've missed that automatic downloads must be allowed in TestCafe-generated profiles in the latest release build. Could you please try to install testcafe@0.19.1 and check your pages without the --user-data-dir flag?. \\\u0441\u0441 @VasilyStrelyaev Please, check the new error message and t.takeElementScreenshot new options: includePaddings and includeBorders.. FPR. It should be handled by --no-first-run flag in browser tools, but some dialog was reported in the issue. I'm checking it on Linux.. Hello @ameyagholkar, thank you for feedback. I've reproduced the problem. Could you please try to use :userProfile advanced Chrome Mode as a workaround? E.g.\ntestcafe chrome:userProfile --concurrency 4 test.js\n@lukaszblasz, it can be a problem with your Jenkins setup. A user that runs Jenkins service needs Administrator privileges. Check this gist for instructions. Also, the user should be logged in through the Mac's Login Screen.   . Unfortunately. userProfile can't be used together with headless.. Hello @evanniedojadlo!\nWe've found a problem with browser manipulation binaries, which prevented setting correct executable permissions during the post-installation phase, and fixed it the version 0.19.0-alpha1. So could you please try to install it and check if the problem still affects you? . Hello @dcsaszar!\nWe encountered some scroll issues before, especially on mobile devices. Currently I'm doing some work to improve scrolling functionality, so maybe it will fix your problem too. I'll let you know when a developer build with a fix will be available. . Hi @dcsaszar, we've significantly improved scrolling in the last versions. Could you please try to install testcafe@0.22.0 and check if you can reproduce the issue? . Hello @neilmatillano! \nWe have fixed some visibility detection issues in recent developer build. Could you please try to install the latest dev build and check if the problem is still reproducible? You can install it with npm i testcafe@0.18.7-20180117.. Hi @hang-ren, I've just published testcafe@0.20.5 with the fix! Please, update your TestCafe installation, and feel free to reopen the issue if the problem isn't fixed in your environment.. Hello @roboweaver !\nWe've found a problem with browser manipulation binaries, which prevented setting correct executable permissions during the post-installation phase, and fixed it the version 0.19.0-alpha1. So could you please try to install it and check if the problem still affects you? \nBTW, the stable 0.19.0 release is planned by the end if this week, so you can wait a bit and try the stable instead installing alpha.\nFeel free to reopen issue, if you still have the problem.. The issue will be closed after updating testcafe-hammerhead.. Hello @AhnpGit, it looks like interpolation problem with quotation marks in the shell (note the Command failed: 'node & ''node' is ... messages). I assume that it is the standard cmd.exe because you specified Windows in the original post. In cmd.exe, single quotation marks can't be used for specifying string argument, double quotation marks (\") should be used instead:\nyarn testcafe chrome:headless e2e/**/**.spec.ts --app \"node server.js\". Hi @adback03 @berrutti  @arenddeboer! The fix is released in testcafe@0.22.0, you can install it with npm i testcafe@latest and try it on your machine.. Unfortunately, we can't use %VARIABLE% syntax for placeholders, because Windows cmd.exe uses it for interpolating environment variables. Moreover, %DATE% and %TIME% are predefined variables. Also, rules of escaping aren't obvious (you need to put escaping character - ^ - not only before % signs, but also before quotes):\n```\nD:\\testcafe-phoenix>node -e console.log(process.argv[1]) %DATE%    \nFri                                                                  \nD:\\testcafe-phoenix>node -e console.log(process.argv[1]) \"%DATE%\"  \nFri 02/02/2018                                                       \nD:\\testcafe-phoenix>node -e console.log(process.argv[1]) \"^%DATE^%\"\n^%DATE^%                                                             \nD:\\testcafe-phoenix>node -e console.log(process.argv[1]) ^\"^%DATE^%^\"\n%DATE%                                                             \n```\nI think, we have to use shell-neutral template syntax, like Mustache. I would like to have standard JS template strings syntax: ${VAR}, but it will interfere with variable substitution on Unix shells (but for them you can just put single quotes around the pattern to disable substitution).  . @beyondcompute, really thank you for the excellent research! :clap: Yes, Systems Events likely can help in this case, but we try to avoid requesting Assistive Permissions as much as possible. \nAs a workaround, you can try to use Headless mode for both Chrome and Firefox. TestCafe uses DevTools and Marionette debug protocols to capture screenshots in headless browsers, so they shouldn't be affected by problems with Applescripts. . I've finally found the way to get screenshots in concurrency working on macOS even without requiring Assistive Perimssions. There is a method SBApplication.applicationWithProcessIdentifier for getting an AppleScript application object by a specified UNIX process ID. Unfortunately, it's only accessible from Objective C, and it means that I have to rewrite all our AppleScripts in Objective C, because each script needs access to an application object. . Hi @bramroop @SolaTest  @shiveshyadav, thanks for sharing your problems. I close this because it's duplicated by https://github.com/DevExpress/testcafe-hammerhead/issues/1486. You can use https://github.com/DevExpress/testcafe-hammerhead/issues/1486 to track the progress in resolving this issue, and I will inform you when a fix is available on NPM.. Hi @sommcz! Thank you for your research! I've found a way to enable WebGL in Firefox. I'll update Dockerfile and dev build on Docker Hub.. Hi @rhymes, could you please try to use \"yarn start >/dev/null 2>&1\" for the app command?. Hello @ananddharne!\nUnfortunately, I can't figure out the problem without access to your site. I will try to fix it ASAP if you provide me a link to your repository.\nI also suggest you to try the following steps:\n\n\nMake sure that the error doesn't happen when you browse locally served website without TestCafe.\n\n\nIf you can, install a debug TestCafe build by executing 'npm i https://github.com/AndreyBelym/testcafe/releases/download/debug-20180306-1/testcafe-0.19.1-dev20180305.tgz' or addding \"testcafe\": \"https://github.com/AndreyBelym/testcafe/releases/download/debug-20180306-1/testcafe-0.19.1-dev20180305.tgz\" into dependencies in your package.json. Start your tests and open DevTools in the browser. When the error occurs, the string 'Error message:' and a dump of two objects will be printed to the browser's console. Please, send this print to me as a screenshot. Pay attention to the filename, lineno. colno properties in the first object, and to the stack property in the second. I hope you will be able to locate a piece of code that causes the exception by using information form the properties. Please send screenshot of the code to me.\n\n\nYou can get rid of the error by using the --skip-js-errors or -e command-line flags or the skipJsErrors property in the Runner.run method. But you won't be able to catch a real exception in your JS scripts when using these options.\n. Hi @bdwain! \n\n\nDoes the browser window close when TestCafe process doesn't finish? Have you tried to run other browser besides Chrome?\nAlso, could you please enable debug print by running\nDEBUG=testcafe:* node runner.js\nand send me the output?. Hi @bdwain! \nDoes the browser window close when TestCafe process doesn't finish? Have you tried to run other browser besides Chrome?\nAlso, could you please enable debug print by running\nDEBUG=testcafe:* node runner.js\nand send me the output?. Hi @keerthana07, I think you've posted a wrong link, could you please provide me your runner code and its console output?. Hi @keerthana07, I think you've posted a wrong link, could you please provide me your runner code and its console output?. Hi @lucidtech, you should use the build and docker-build Gulp tasks for building the container.\nnpm i -g gulp\ngulp build\ngulp docker-build. Hi @AngeIII, it must be fixed in 0.19.0-alpha1, could you please try it with npm i testcafe@0.19.0-alpha1?. Implementation of the feature is delayed due to unclear consequences of adding LGPL licensed FFMPEG to TestCafe dependencies. I'm in process in process of clarifying legal considerations with our lawyer. . Closed by https://github.com/DevExpress/testcafe/commit/daa552b48863249036a6e435e3b6317dbba85669.. Hi @justrhysism! Thank you for your proposal. It must be useful to have just one command for running tests on different platforms. We need to discuss the necessary command=line keys and API.. Hi @leegee! I see console.log('***', t); in your test, could you please provide me the TestCafe output for this command, or the whole TestCafe report? Also, could you give me a code where FrontPage is instanced and selectHierarchyOption is actually called?. Looks like you misprinted t with this.t at line 20. Could you please check that it is just t (without this) in your code?. Hi @rick-schubert!\nYou can't mark a class constructor as an async function, it's a language-level limitation. So you could you a class constructor and an async method (you already tried it) and (optionally) static async method which calls constructor internally (IMHO it's a bit better) to create a page object and asynchronously wait for its loading:\n```\nclass Page () {\n    constructor () {\n        // do stuff\n    }\nasync waitForLoading () {\n\n}\n\nstatic async create () {\n    const page = new Page();\n    await page.waitForLoading();\n    return page;    \n}\n\n}\nFor loading condition you could check if some element exists on the page. Checking element, which won't appear on the page, is useless.. Hi @sorin-davidoi! Thank you for your proposal, we need some time to discuss it. Right now, you can [extend Selector with a custom method](https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/extending-selectors.html#custom-methods), e.g.:\nconst app = Selector('x-app').addCustomMethods({\n    getShadowRoot: host => {\n        return host.shadowRoot;\n    };\n});\n. Option named checked with @VasilyStrelyaev . Hi @AhnpGit! It's a flaw in TestCafe TS definitions, but you can just add parentheses around the string as a workaround:\nimport { Selector } from \"testcafe\";\nconst testConditions = \"A test condition\";\nfixture(This is a demo test with with ${testConditions})\n    .page(example.com);\ntest(\"1\", (t) => t.wait(5000));\n``` . FPR \\cc @miherlosev @helen-dikareva . This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492.. Tests failed because of changes in script processor. See the test data https://github.com/DevExpress/testcafe/blob/master/test/server/data/client-fn-compilation/basic/expected.js https://github.com/DevExpress/testcafe/blob/master/test/server/data/client-fn-compilation/basic/expected-node10.js. Yes, we can safely remove it.. @aphofstede, this problem can be specific to the site and the Docker container. Could you please provide the Dockerfile for the container that runs problematic tests?. @aphofstede, this problem can be specific to the site and the Docker container. Could you please provide the Dockerfile for the container that runs problematic tests?. Hello @czdiaz! Thank you for the research done. However, I need time to do similar tests in my environment to check it in more controllable environment.\nAlso, when a webserver and testing server are on different machines, and they aren't connected in a dedicated LAN segment, network can significantly interfere in testing delays. I would suggest you to try to measure test execution time when both webserver and TestCafe are on the same machine, and maybe a simpler scenario, when only basic HTTP request to the webpage is measured.\nAlso, I'm implementing capturing video of tests running in Chrome & Firefox (https://github.com/DevExpress/testcafe/issues/2151), it'll be a very insightful feature for your case.\n. Hi @jianentrinsik!\nWe already have plans to allow execution of ClientFunctions and Selectors in the browser console. I've created an issue about it: https://github.com/DevExpress/testcafe-live/issues/14\nBTW, you can easily generate unique CSS selector using Chrome DevTools. Just right-click on an element in the elements tree, and use the Copy menu:\n\n. Fixed by #2198.. Hello @AhnpGit!\nUnfortunately, I can't reproduce the issue. Try to run basic tests from https://github.com/DevExpress/testcafe/tree/master/examples/basic (you can download archive of the directory with GitZip). If they fail in headless mode, rerun them some times to see if they fail after a specific test or just randomly. If basic tests pass, there is something in your site that causes the browser to hang. You can try to increase virtual window size in headless mode by using device emulation options. If emulation doesn't help, I'm afraid I will need access to your webpage for debugging.. After you have added a screenshot of the console, it looks like something is wrong with proxy settings. Could you provide me the command which you use to start tests?. Hi @operatino!\nUnfortunately, there is no debug mode that will help you with the issue. Likely you have two problems in your setup:\n\n\nYou don't have all required dependencies for headless Chrome (look at this command which installs them).\n\n\nYou should run Chrome with the --no-sandbox flag in unprivileged Docker mode as it is stated in the docs.. Hi @bsmithb2,\n\n\nYou are right, currently we don't support installing browser providers from scoped packages. Also please note that testcafe -b command outputs a list of locally installed browsers, if no provider name is specified. Currently you can't get a list of available providers.\n. Of course, your contribution will be welcome!. Hi @bsmithb2, I think you have already figured it by yourself, but just to be sure:\n1. Run npm i and gulp build or gulp fast-build (build without linting) in the project directory\n2. Run node ./bin/testcafe.js chrome tests.js -S ...  in the project directory. Hi @xMort! This issue looks like a duplicate of https://github.com/DevExpress/testcafe/issues/1374, so I will close your issue. Feel free to reopen it if #1374 doesn't meet your needs. . Hi @nmackey @graeme-plangrid @Sushindhran!\nUnfortunately, I can't reproduce issue on Macs here. I need time to make a debug build. Meanwhile, if you have some free time, you can check how the lookup and kill functions from the ps-node module works on your machine. When closing a browser, TestCafe tries to find a browser process by using lookup with a piece of a command line parameter passed when browser was opened, and then uses kill to terminate the process. So you have to:\n\n\nStart the browser with a command line parameter\nopen -n -a /Applications/Google\\ Chrome.app --args http://google.com\n\n\nOpen Node.js REPL in a directory with the installed psnode module, and type something like:\npsnode = require('psnode')\npsnode.lookup({ arguments: 'google' }, (err, processList) => {global.err = err; global.processList = processList; console.log('done')})\n\n\nWait until 'done' will be printed to console, and then type err and processList in CLI. If you have have ReferenceError: err is not defined and some list printed in console, it's fine, try the last step. Otherwise share you can share the err output here and in the psnode issues.\n\n\nTry to execute\nprocessList[0]\npsnode.kill(processList[0].pid, (err) => console.log(err || 'done'))\nIf all is OK, you will have an object dump and the word 'done' printed in you console (with some delay). If it displays some error, share the object dump and the error here.. Hi @frankmariette @Sushindhran, I didn't expect that the app path (/Applications/Google Chrome/bla-bla-bla) goes to the arguments on macOS. Could you please try to use different URL (like http://example.com, http://bing.com, etc.) and accordingly run psnode.lookup({ arguments: 'example' }, ... or psnode.lookup({ arguments: 'bing' }, ... in the 2nd step?\n\n\nppid means Parent Process ID. You have captured info for a Chrome render process, that can be started and finished by browser time-to-time, and when you kill it's parent you kill the main process of the browser. It happened because google was specified as a keyword for search in arguments of process, and it matched to the Chrome app path. It can't happen with TestCafe, because TestCafe passes a special generated identifier in the browser arguments, which is quite guaranteed to be unique.. Hi @vigneshwar-v. it works. I've caught a cold, so the fix was delayed a bit, but I will try to ship it ASAP now.. Hi @gregorycv, please check the testcafe@0.22.0, I've made some improvements to the browser process termination code in this version.. The psargs: 'aux' options was used in testcafe@0.21.0, could you please check that it works on your machine? I've changed the psargs value to -ef because some users still reported the problem with the aux parameter, but not with the -ef parameter.\nI've never reproduced the problem with hanging node process on macOS, so I will think about how to collect debug information for your case. \nTestCafe can't terminate Safari process in general, because all Safari windows and tabs in the system share the same process. It means that if TestCafe terminate the process, TestCafe will close also windows and tabs opened by a user, it would be too frustrating. Maybe it's possible to check if TestCafe's window is the only Safari window opened, and close it in this case.. @RichieAHB, could you please try to install testcafe@0.23.1 and check if it fixes the problem?. Yes, my mistake, you should try testcafe@0.23.1-alpha.2.. The current estimate for the testcafe@0.23.1 stable release is the middle of November. I'll post a message here as soon as it is released.. Hi @vivekpant28, @guptaakhil, please specify your Node.js and TestCafe version, installation method(NPM/Yarn, local/global, official or custom Docker image, etc.) and command that is used to start TestCafe or contents of runner file that uses TestCafe API.\nAlso, could you please try to run the following test:\n``\nfixtureConcurrent.pageexample.com`;\nconst timeline = [];\ntest('Long test', async t => {\n    timeline.push('long started');\nawait t.wait(5000);\n\ntimeline.push('long finished');\n\n});\ntest('Short test', async t => {\n    timeline.push('short started');\nawait t.wait(1000);\n\ntimeline.push('short finished');\n\n});\ntest('Results', async t => {\n    await t.wait(6000);\nawait t.expect(timeline).eql(['long started', 'short started', 'short finished', 'long finished']);\n\n});\nwith the following command:\ntestcafe chrome test.js --concurrency 2\n. Hi @guptaakhil, could you please provide me the command you have used to start TestCafe together with the report?. @guptaakhil, please, run Testcafe using the following command\ntestcafe chrome test.js --concurrency 2\nfor the following test:\n//test.js\nfixture Concurrent.pageexample.com;\nconst timeline = [];\ntest('Long test', async t => {\n    timeline.push('long started');\nawait t.wait(5000);\n\ntimeline.push('long finished');\n\n});\ntest('Short test', async t => {\n    timeline.push('short started');\nawait t.wait(1000);\n\ntimeline.push('short finished');\n\n});\ntest('Results', async t => {\n    await t.wait(6000);\nawait t.expect(timeline).eql(['long started', 'short started', 'short finished', 'long finished']);\n\n});\n```\nand provide me the output of the command.\nOr, you can send me your test code if your webpage is accessible not only from your company network.. @guptaakhil, you need at least 2 tests to run them concurrently with -c 2, or at least 4 tests with -c 4. It doesn't run a test in each browser multiple times, it dispatches different tests to run in a number of browser instances. Copy this testscript to different files (testile1.js, testfile2.js, testfile3.js, testfile4.js) and then run TestCafe with the following command:\ntestcafe chrome -c 2 testfile*.js. You can just repeat chrome n times in command line arguments:\ntestcafe chrome,chrome,chrome test.js\nor use for loop with concurrency:\n``\n// test.js\nfixtureExample.pageexample.com`;\nfor (let i = 0; i < 4; i++) {\n    test('Test', sync t => ...);\n}\n\ntestcafe -c 4 test.js\n``. Yes, I think it's more convenient to write@scope/myproviderinstead of@sccope/testcafe-browser-provider-myprovider. I think it's good to have naming convention, because we will be able to distinguish browser providers from all other NPM packages just by looking at the name.. I can do it by myself along with rebasing, if you don't have time to do it. Just let me know, please.. Hi @bsmithb2, I've created a PR to your repository to show what I had meant about reducing the class into a function, check it, please: https://github.com/bsmithb2/testcafe/pull/1. Hello @srikanthrbc! When you run Jenkins service on a macOS machine, you should do some additional configuration steps for launching GUI apps from build jobs. Could you please try to follow this answer from the forum and report your results here?. Hello @Hotell! We warmly welcome any contributions \ud83d\udc4f I've tried to use generics for Selectors, but found some issues: https://github.com/DevExpress/testcafe/issues/1529#issuecomment-308712970. It will be great if you accomplish this task!. I think it can be considered as a duplicate of #1529. Yes, you have to do this if you want to mount a directory outside of C:\\Users.. Hi @viking2917, I've updated the chrome-emulated-devices-list package, so it might be necessary to remove package-lock.json and reinstall node_modules or completely re-install TestCafe.. Hi @viking2917, I reproduced the issue. Strange, but looks like Chrome doesn't emit touch events when emulating touch devices in some cases. We have to find a workaround for this. . Chrome devs changed emulation API: method setTouchEmulationEnabled was renamed to setEmitTouchEventsForMouse.. Just for reference, reinstalling of node_modules is required.. Hi @sachs7, currently only Chrome 64 & Firefox 58 are available in Alpine repositories: chromium, firefox. Unfortunately, you have to build your own Ubuntu/Debian/Arch based image, if you want to use Firefox 59 & Chrome 65.. Hi @sachs7, currently only Chrome 64 & Firefox 58 are available in Alpine repositories: chromium, firefox. Unfortunately, you have to build your own Ubuntu/Debian/Arch based image, if you want to use Firefox 59 & Chrome 65.. I will update the official image as soon as updated browser versions will appear in the repository. I will update the official image as soon as updated browser versions will appear in the repository. Hi @tk8817, of course I'll be happy to get your feedback and learn something from it \ud83d\udc4d . Hi @tk8817, of course I'll be happy to get your feedback and learn something from it \ud83d\udc4d . Thanks @tk8817, I feel I should add --shm-size=1gb to the documentation.. Thanks @tk8817, I feel I should add --shm-size=1gb to the documentation.. @alxtgda, when you use chrome in a Docker container, you should specify the ---no-sandbox flag for Chrome (starting it as docker run ... testcafe/testcafe 'chrome --no-sandbox') or starting the Docker container in the privileged mode using the --privileged flag (docker run --privileged ...).. @alxtgda, when you use chrome in a Docker container, you should specify the ---no-sandbox flag for Chrome (starting it as docker run ... testcafe/testcafe 'chrome --no-sandbox') or starting the Docker container in the privileged mode using the --privileged flag (docker run --privileged ...).. Hi @amits1995, this switch controls size of the /dev/shm pseudo-file inside a Docker container. /dev/shm represents shared memory, that can be used for inter-process communications (IPC) and for high-speed temporary data storage, e,g. for storing browser's cache. Google Chrome actively uses shared memory, so increasing /dev/shm size helps in avoiding shared memory overflow.\nI've found that since Chrome 65, you can tell the browser to not use shared memory by specifying the --disable-dev-shm-usage switch: Google Chrome in Docker tips.  It will be nice if you check if this switch works for you and report the result here. It's a browser switch, so it must be specified to the TestCafe image like:\ndocker run -it testcafe/testcafe 'chromium -- no-sandbox --disable-dev-shm-usage' tests. Hi @amits1995, this switch controls size of the /dev/shm pseudo-file inside a Docker container. /dev/shm represents shared memory, that can be used for inter-process communications (IPC) and for high-speed temporary data storage, e,g. for storing browser's cache. Google Chrome actively uses shared memory, so increasing /dev/shm size helps in avoiding shared memory overflow.\nI've found that since Chrome 65, you can tell the browser to not use shared memory by specifying the --disable-dev-shm-usage switch: Google Chrome in Docker tips.  It will be nice if you check if this switch works for you and report the result here. It's a browser switch, so it must be specified to the TestCafe image like:\ndocker run -it testcafe/testcafe 'chromium -- no-sandbox --disable-dev-shm-usage' tests. There is a problem with legacy quarantine tests. Trying to figure out what's going wrong.. There is a problem with legacy quarantine tests. Trying to figure out what's going wrong.. Rebase is needed to incorporate changes from https://github.com/DevExpress/testcafe/pull/2295. It must fix the tests.. Rebase is needed to incorporate changes from https://github.com/DevExpress/testcafe/pull/2295. It must fix the tests.. @ancafolo, fixture.before hooks are executed before starting browsers, and you can't use test controller  t inside these hooks: docs. Use the beforeEach hook instead.. @ancafolo, how do you run Safari 11 on Windows?. So it falls in Safari on macOS and in IE on Windows?. And Chrome and Firefox are resized correctly on Mac too?. Also, are IE and Safari closed automatically by TestCafe when tests are finished, or they are still opened?. You can close the issue if you feel that it's enough for you. However, maybe I can figure out what's wrong with IE if you give me some more information.. Hi @jdc0m, could you please share your screenshots from Mac Mini?. Hi @jdc0m, could you please open chrome://flags/#force-color-profile in Chrome on your Mac Mini, change value of the Force color profile flag to sRGB:\n\nThen start your tests using chrome:userProfile as a browser:\ntestcafe chrome:userProfile $YOUR_TESTS\n. Hi @vigneshwar-v, thanks for sharing your problem. I close this because it's duplicated by https://github.com/DevExpress/testcafe-hammerhead/issues/1486. You can use https://github.com/DevExpress/testcafe-hammerhead/issues/1486 to track the progress in resolving this issue, and I will inform you when a fix is available on NPM.. Hi @bsmithb2, I guess you use caret version range \"testcafe\": \"^0.19.2-alpha2\" in your package.json. We've realized that using alpha and dev prefixes for alpha and nightly builds is a quite semver-breaking way, because devXXXX will always take precedence over alphaXXXX by semver rules.\nI think we'll fix versioning in future releases, but now you shouldn't use version ranges with preliminary builds: use the exact version (\"testcafe\": \"0.19.2-alpha2\" - pay attention: no caret), or use\"alpha\" or \"dev\" npm tags (\"testcafe\": \"alpha\").. Hi @bsmithb2, we've just published a new stable release 0.19.2, so now you can specify \"testcafe\": \"^0.19.2\" in your pacakge.json.. \\\u0441\u0441 @miherlosev . Hi @hdorgeval, TestCafe expects that your reporter plugin module is a CommonJS module, so you should use \nexport = reporterPlugin;\ninstead of\nexport default reporterPlugin\nIt's a special TypeScript syntax, that makes your module CommonJS compatible: TypeScript docs.\n. Hi @Gwerlas, thanks for the hint! I think I will try to get the official image status next sprint (2-3 weeks usually).. Hi @TheBeachMaster!\nI've reproduced your issue with a disconnected browser. Unfortunately, testcafe-browser-provider-nightmare is unusable, because conflict between Nightmare and our proxy, testcafe-hammerhead. \nSo it's a problem in the provider, and I've created an issue in its repository: https://github.com/ryx/testcafe-browser-provider-nightmare/issues/14. \nYou can use it to check the progress of resolving this problem.\nAlso there is another problem with 'Error launching app'. You've got it, because you had installed Linux version of Nightmare on Windows. Windows Subsystem for Linux a.k.a. Bash for Windows can't run Linux binaries of Electron apps such as Nightmare in its current state. You have to force npm to install Windows version:\nexport npm_config_platform=win32\nnpm install testcafe-browser-provider-nightmare\nCheck this thread for details: https://github.com/electron-userland/electron-prebuilt/issues/260#issuecomment-335149362. Also I've forgot to mention that you can use Firefox and Chrome in headless mode! You don't even need things like xvfb-run for it. For Firefox, it's just enough to install it from Ubuntu's repositories (sudo apt-get firefox), however for Chrome you have to install some additional dependencies, check this comment for the command that will install them.. Closed by #2327.. FPR. Hi @ancafolo, currently quarantine mode is hardcoded to run a failed test until there is 3 passed or failed runs in total.. Hi @lixualinta, I've reproduced the issue with the Samsung Browser on Galaxy S7 with Android 6 and Galaxy S8 with Android 7. It looks like a bug. We need some time to find the reason of the problem.. Hi @bsmithb2, could you please provide the Chrome version information that is printed to console when Chrome on Samsung S5 connects to TestCafe? . @bsmithb2, Chrome version on Galaxy S5 is outdated:\nS5 - Chrome Mobile 55.0.2883 / Android 6.0.1\nIt's not Chrome 65, but Chrome 55. It can be easily upgraded to a more recent Chrome version through Play Market, and it doesn't matter what Android version is installed on the phone. As you've said, Chrome versions older than 63 have about 7% of market share. JFYI, I have an Android 6 phone with the latest Chrome version installed.\n. \\cc @miherlosev . Hi @deepticake, if you use private NPM registry mirror or some proxy software in your company, you might have to update packages in your mirror. Also it can be temporary issue caused by network problems, you could wait for some time and try to reinstall TestCafe. If it don't help, try to upgrade NPM to v6.0.0 (npm i -g npm). If even upgrading of NPM don't help, try to create an issue at https://github.com/npm/npm/issues. It's definitely not a TestCafe issue and we can't do anything about it.. Hi @xubian0619! How did you install TestCafe: globally or locally? If locally, do you have moment or moment-related packages (e.g. moment-duration-format) in your package.json?. Hi @imzhang1! Could you please provide the TestCafe command line with arguments that you have used? Do you use a CI system (e,g, Jenkins), or non-standard environments like WSL, MinGW or Cygwin? Could you also please try to run TestCafe from a shell with Administrator privileges?. Hi @Seeker9889, the issue is fixed in the testcafe@0.20.5-alpha.1 build. Please, try to install this build and feel free to reopen the issue if the problem isn't fixed in your environment.. Hi @Seeker9889, @sorin-davidoi I've just published testcafe@0.20.5 with the fix! Please, update your TestCafe installation, and feel free to reopen the issue if the problem isn't fixed in your environment.. Hi @bdwain, you can just append additional command line flags after the chrome alias when specifying browsers:\nreturn runner\n    .browsers(['chrome --autoplay-policy=no-user-gesture-required'])\nDo you have warnings in your test reports? Could you please share a test report with me? . Hello @martianmartian, unfortunately I can't reproduce the issue on my side. Please, specify your Node.js, NPM, TestCafe and macOS versions. Likely the problem sin't related to TestCafe, you can try to clean NPM cache (npm cache clean -f), reinstall Node.js and TestCafe, and the try to reinstall TestCafe.. So I close the issue since it looks like a problem in NPM. You can reopen it as a NPM issue.. Hi @dragonwasrobot, thanks for feedback. However it looks like a feature request to me, for an additional dialog type. I think invoking setNativeDialogHandler(() => false) is an anti-pattern, because you won't be able to catch unexpected alert or confirm dialogs on a page. I feel we need to find a proper way to handling such kind of dialogs.  . Hi @tamlyn, @hdorgeval. Such behavior means that the target element is visible, but it's box is in background, hidden by some other element's box. E.g. on http://wtfforms.com the input's box is hidden behind the caption's box:\n\n\nBecause a user can click only on foreground elements, it would be incorrect to click on the target element that is in background. In this case, TestCafe gives some time for the element to get into foreground, and if it isn't happen, TestCafe clicks on a foreground element that is placed over the target element's box. \nIt's not a bug, it's designed behavior for complex JS-based animations. You should check that your selectors point to foreground elements, or just set selector's timeout to 0.. @tamlyn, I agree, we should make it clear in our docs. I've created an issue about it: https://github.com/DevExpress/testcafe/issues/2389. @MariaRyadchikova, I think I'll fix it next week, and publish an alpha build with the fix.. Duplicate of #1057. Hi @Andgoncharov, I've found that due to changes in Chrome autoplay policies you might need to specify the --autoplay-policy=no-user-gesture-required flag for the browser. Could you please try it and check if your player can switch to the full screen mode with this flag?. Specifying this flag fixes the issue for me, but feel free to reopen it if you still have problems or questions.. I close the issue because it is a duplicate of https://github.com/DevExpress/testcafe-hammerhead/issues/1325. Use https://github.com/DevExpress/testcafe-hammerhead/issues/1325 to track progress in resolving the issue.. @kkowalczuk, could you please specify your OS version?\nAlso, @Arawnh, @kkowalczuk could you please try to run the following test and report result to me?\n``\nfixtureTest DPR.pageexample.com`;\ntest(get DPR, async t => {\n    console.log(await t.eval(() => window.devicePixelRatio));\n});\n```\n\nI noticed that the problem occurs when the browser window opened on testcafe does not fit into the screen resolution - when parts of the browser are cropped or split into multiple screens.\n\nIt's very hard to make screenshot in this situation, because a browser window is logically tied to specific screen, and it's really tough to find remaining pieces of a window on other screens. I think you can make correct screenshot in this situation only for Chrome or Firefox through debugging protocols. If you need a window bigger than your screen, you can use Chrome emulation mode. https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/using-chrome-device-emulation.html. I can reproduce the issue by setting scaling in Windows display settings to fractional values, like 125% or 150%. . This issue must be fixed by https://github.com/DevExpress/testcafe/pull/2492. I'll notify you when a build with the fix will be published on NPM. Feel free to try the fixed build and reopen the issue if the problem isn't solved in your environment.. Hi @GregoryCBT! I need access to your testing page to reproduce the problem. This error means that the browser has crashed. You could try to run your tests on directly on your machine without docker, or customize the official image and try to use X11 SSH Forwarding or pass-through  X11 socket into virtual machine to see what's going on with the browser.. Duplicate of https://github.com/DevExpress/testcafe/issues/2387. Let's make a list of features that will help to improve reproducing and debugging issues:\n\n[ ] Unminified client scripts - better and clearer stack traces in errors from browsers\n[ ] Source maps - better stack traces for both server and client\n[ ] unhandledRejection and unhandledException handlers in server code - capture stack traces on server when something unexpected happens\n[ ] capturing all console output on client and saving it on server - detailed debug information about client code execution\n[ ] debug log of browser connections & providers systems and native modules -  debugging issues with browser starting/stopping and window manipulations\n[ ] debug log of automation client scripts - debugging issues with element existence & visibility, events simulation\n[ ] debug log of driver client scripts - debugging pages & iframes loading issues\n[ ] capturing all network requests and responses to a file - reproducing issues on specific private pages\n[ ] capturing video of running browsers - useful for debugging automations and examining page's layout\n[ ] client-server communication channel when browser doesn't send heartbeat requests - debugging problems when hammerhead fails to load, scripts started an infinite loop or browser window crashed.. @testcafe-build-bot retest. @testcafe-build-bot retest. We also should enable license checking in our plugins and utilities:\n[ ] https://github.com/DevExpress/testcafe-live\n[ ] https://github.com/DevExpress/testcafe-browser-provider-browserstack\n[ ] https://github.com/DevExpress/testcafe-browser-provider-saucelabs\n[ ] https://github.com/DevExpress/testcafe-browser-provider-electron\n[ ] https://github.com/DevExpress/generator-testcafe-reporter\n[ ] https://github.com/DevExpress/generator-testcafe-browser-provider\n[ ] https://github.com/DevExpress/testcafe-angular-selectors\n[ ] https://github.com/DevExpress/testcafe-react-selectors\n[ ] https://github.com/DevExpress/testcafe-vue-selectors. Hi @fpoppinga, you can use process.env to pass strings from runner to test code.. Hi @ls84, I've reproduced the issue. I'll notify you when we will publish a new version with the fix to NPM.. Could you please provide me the screenshot file that caused this warning?. Hi @psi-4ward! Unfortunately, I can't reproduce the issue on my machine. I would try to figure out what's wrong with screenshots if you could provide me a remote session (trough VNC, TeamViewer, etc.). Also, I'm working on the screenshots code to enable capturing images through browsers' debug protocols. It must fix the issue, but I can't say it for sure without reproducing the issue. I'll notify you when a debug build is available.. Hi @amits1995. this functionality is implemented in https://github.com/DevExpress/testcafe/commit/2a748edbc31c98577d8ea3c89dd4c32e9a19b11a. I think we will release an alpha build next week. . Hi @iegor-zabielin , I've just published testcafe@0.20.5 with the fix! Please, update your TestCafe installation, and feel free to reopen the issue if the problem isn't fixed in your environment.. Hi @rquellh! This is not an error, it's warning. Since v0.19.0 we implemented a cross-platform mechanism for removing browser UI controls from taken screenshots and capturing screenshots of specified elements. Before this TestCafe version, only screenshots taken in IE and Chrome didn't have browser UI elements. In v0.20.0 we introduced such warnings to give us debug information when TestCafe can't determine page's or element's area on a screenshot. \n\nIf you don't mind that screenshots of Firefox have browser UI like menus and bars, you can just ignore the warnings. But I suggest you to share the exact warning message and the taken screenshot to help me understand what's wrong in the captured image.. Unfortunately, there is no way to disable warnings yet.. Hi @ferencbeutel, could you please specify your TestCafe (you can get it with testcafe -v) and Chrome versions?. I've reproduced it in the latest TestCafe and Chrome. Looks like commands required to start touch emulation changed again, I'll fix it today.. @testcafe-build-bot \\retest. @testcafe-build-bot retest. @testcafe-build-bot retest. \\\u0441\u0441 @helen-dikareva . @testcafe-build-bot retest. @rupeshmore, you should override both onRequest and onResponse methods, check the documentation.. @testcafe-build-bot retest. @testcafe-build-bot retest-force. @testcafe-build-bot retest-all. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @ferencbeutel4711, I've reproduced the problem, but I need some time to figure out its reason.. Hi @harryCompu, try to use chrome --kiosk. Or chrome --start-fullscreen must work too,. I've fixed definitions in v0.20.2 but we really should do something to prevent such situations in future.. Closed by https://github.com/DevExpress/testcafe/commit/ca2b2dc167ae23a22dd0f01533a2a01e1bfa2e07. @Masiako, it's not a bug, it's just the way how JavaScript exceptions handling works. You suppressed exceptions by wrapping code in the try { } catch () {}  block. You should allow TestCafe to handle exceptions in tests, in other words, you should add throw error; to the catch clause of the block. \nAlso note, that if you just want to take screenshot on a test failure, you can just use the Screenshots on Fails feature.. Hi @lixualinta, unfortunately I can't reproduce the problem. Do you connect to the machine by RDP or using some CI system? Can you record a screencast on the machine where IE is installed?. If you run Jenkins as a service, you should check that you've enabled interactive services in the Windows Registry, and ticked 'Allow service to interact with desktop'  checkbox in the 'Log On' tab of Jenkins service properties window. \nIf you configured the Jenkins service correctly, you can try to start Jenkins from the command line. Running GUI apps from services is deprecated, and it's a high risk that some apps can't be started from a service after an app or Windows upgrade.. Hi @dgieselaar, this message is shown when browser can't find a find a resource specified by URL. It can be caused by a number of reasons. Only live session can help to figure out what's going wrong. Because you've said that you don't have problems when using VPN, I think it's a network overload or topology problem. You can use VPN for manual tests, but for Browserstack you likely have to change your server location to a place which has better connection with the BrowserStack infrastructure.. Hi @dgieselaar, make sure that you've specified the --no-sandbox flag for chromium. Unfortunately I can't reproduce you problem with concurrency. You might have to change Docker's virtual machine settings to increase available RAM size. Do you use native Docker for Windows or Docker Toolbox/Docker Machine?. @iegor-zabielin, likely it's due to high resources consumption by browsers in a virtual machine, especially if you use concurrency. Unfortunately I can't give you a specific configuration which is guaranteed to run fine. Try to increase available RAM size by using the --shm-size option:\ndocker run --shm-size=1gb. Hi @PriyoBh, it's an implementation flaw in the testcafe-browser-provider-puppeteer. I've created an issue about it: https://github.com/jdobosz/testcafe-browser-provider-puppeteer/issues/3, you can track it to receive notifications about the progress in solving the problem. \nAs a workaround, you can use puppeteer only as a browser installler, and use Chromium with TestCafe by specifying chromium:$PATH_TO_CHROMIUM_BINARY as a browser alias. Judging by the code, puppeteer installs a Chromium copy into the $PROJECT_ROOT/.local-chromium directory.. Hi @PriyoBh, the issue is fixed in testcafe-browser-provider-puppeteer@1.3.1, you can update your installation and give it a try.. Hi @alexschwantes, unfortunately we don't support key combinations for clipboard operations. As it's  stated in the documentation, I think it's more like a feature request than  a bug. \nAs a workaround, you can take a text from a textarea with a Selector, and then use the typeText action with the paste option to simulate pasting from the system clipboard.. Hi @alexschwantes, unfortunately we don't support key combinations for clipboard operations. As it's  stated in the documentation, I think it's more like a feature request than  a bug. \nAs a workaround, you can take a text from a textarea with a Selector, and then use the typeText action with the paste option to simulate pasting from the system clipboard.. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Hi @johnwebbcole, I've reproduced the issue. Looks like it's a regression in the testcafe-hammerhead proxy caused by the overridden document.write method:\nTypeError: Unable to get property 'parentNode' of undefined or null reference\n      at Anonymous function (Unknown script code:1:755)\n      at Global code (Unknown script code:1:87)\n      at write (http://172.22.11.0:58561/hammerhead.js:9062:17)\n      at _overridedDocumentWrite (http://172.22.11.0:58561/hammerhead.js:8551:17)\n      at document.write (http://172.22.11.0:58561/hammerhead.js:8664:21)\n      at B (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:5:223)\n      at A (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:4:811)\n      at m (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:10:1)\n      at Anonymous function (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:11:57)\n      at d (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:7:55)\n@LavrovArtem take a look at it, please. Hi @johnwebbcole, I've reproduced the issue. Looks like it's a regression in the testcafe-hammerhead proxy caused by the overridden document.write method:\nTypeError: Unable to get property 'parentNode' of undefined or null reference\n      at Anonymous function (Unknown script code:1:755)\n      at Global code (Unknown script code:1:87)\n      at write (http://172.22.11.0:58561/hammerhead.js:9062:17)\n      at _overridedDocumentWrite (http://172.22.11.0:58561/hammerhead.js:8551:17)\n      at document.write (http://172.22.11.0:58561/hammerhead.js:8664:21)\n      at B (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:5:223)\n      at A (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:4:811)\n      at m (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:10:1)\n      at Anonymous function (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:11:57)\n      at d (http://172.22.11.0:58561/Isuz9CHcw!s!utf-8/https://docs.plm.automation.siemens.com/tdoc/tdoc_client/tdoc_client.nocache.js:7:55)\n@LavrovArtem take a look at it, please. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. \\cc @miherlosev @kirovboris . FPR. \\cc @miherlosev @kirovboris . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @damorton, have you found the reason of the issue?. @vzaidman, I think we have found the reason of the issue - https://github.com/DevExpress/testcafe-hammerhead/issues/1639. @LavrovArtem is working on a fix now.. @testcafe-build-bot \\retest. @testcafe-build-bot retest. @testcafe-build-bot retest. \\cc @VasilyStrelyaev . Hi @vigie, yeah, definitions aren't in the image due to missing entry in https://github.com/DevExpress/testcafe/blob/master/.dockerignore. I'll fix it and rebuild the image ASAP.. .dockerignore is fixed and Docker image is updated, you can run docker pull testcafe/testcafe to get version with the fix. Feel free to reopen the issue if it doesn't work with your configuration.. Hi @nicholas-valiente, I've reproduced the issue. I need time to investigate the problem.. Hi @karolisgrinkevicius, unfortunately I can't reproduce the issue. Try to reinstall v0.20.2 together with all Node.js modules of your project. Also you can try the Browserstack Automate backend by setting the BROWSERSTACK_USE_AUTOMATE environment variable to 1.. Have you tried to run Chrome, Firefox, Safari, Edge? What testcafe-browser-provider-browserstack-version is installed?. Could you share a video of a Browserstack IE session?. Hi @karolisgrinkevicius, @tjkb, @mpham-r7 , sorry for the late answer. I've watched the video of @karolisgrinkevicius's testing session and noticed that TestCafe stopped at page loading. Likely it means an incompatibility between TestCafe and page scripts. Unfortunately, I need access to the testing page for debugging. \n@mpham-r7, you could also upgrade Browserstack provider to v1.4.0.. @testcafe-build-bot \\retest. Hi @cmichon! Unfortunately the H2DB control page is built upon the obsolete frameset feature, and we don't support pages that contain the <frame> and <frameset> tags. Only the <iframe> tag is supported. . @testcafe-build-bot retest. Hi @hauptrolle!\nIn your particular case your reporter doesn't write anything at all. However, if you use output helpers(which is highly recommended) to output something, it will be reported to stdout by default, and it might break some other reporter's output. To prevent this, you should redirect output to a file.\nI understand that using stdout for both reporters can be useful for debugging while implementing a reporter. You can use the tail -f $filename & command to read contents of a file in the background and output it to the console.. @testcafe-build-bot retest. @testcafe-build-bot retest. \\cc @kirovboris. Hi @ZayanNadeem, unfortunately I can't reproduce the problem without the tested page. Maybe sorting takes too much time, and you have to put await t.wait() between the click and assertion code. Maybe sorting causes only changes in visible order of the elements, but doesn't change their order in DOM.\nThere also errors in your assertions:\n1) When you use t.expect, you always should use an assertion method as the second part of an assertion. E.g. await t.expect(row1.exists).ok();\n2) row1 has the value of the innerText property of a Selector, it is just a string and doesn't have the exists property. You should check a Selector for existence, and then retrieve its innerText property:\n```\nconst row1Selector = await trustloanCol.child('[id*=\"_2\"]').nth(0);\nawait t.expect(row1Selector.exists).ok();\nconst row1 = await row1Selector.innerText;\n``. Hi @hdorgeval, thanks for sharing this issue! I think that TestCafe definitions must pass the strictest typechecks, so it's a bug. I will fix definitons and write a test. Right now you have to add\"skipLibCheck\": trueto yourtsconfig.jsonto keep strict typechecking for your code, and disabling them for TestCafe definitions.. Hi @Andrei1982! I've visited [the error link](https://reactjs.org/docs/error-decoder.html?invariant=32&args[]=128) and the error messageUnable to find element with ID 128` implies that React renderer failed to render an element. \nDo you have this error in the browser console without TestCafe? Could you please give me access to the tested page? You can send an email to me for a private discussion. . @testcafe-build-bot retest. Hi @awilkins, likely it's related to require.cache invalidation, or installed modules structure. Could you share a minimal example project similar to your setup? Do you use packages that can modify package's cache?. Working on it. Looks like that jest prevents module caching: https://github.com/facebook/jest/issues/4940, we can work around it.. We haven't made much progress in this direction. Different TestCafe subsystems like \u0441ompilers and browser connections are tightly coupled, so it will take a lot of time to separate the browser automation subsystem from other TestCafe code.\n\u00a0\nHowever, we would like to have this feature in TestCafe, so it will be nice if you make a PR.. I'm working on it.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @amits1995! I think I've found the reason of the problem: the redirect to the login page happens too late to be detected by TestCafe. I've increased the amount of time that TestCafe waits for a possible redirect request, so could you please try to install a debug build and report the feedback here? Just specify the following URL:\nhttps://github.com/AndreyBelym/testcafe/releases/download/gh-2508/testcafe-0.20.2-1.tgz\nas a version of TestCafe in your package.json file. . It's blocked by #912. Please, use #912 to track progress in resolving this issue. I will inform you when a fix is available, feel free to reopen the issue after examining the fix in your environment. . Hi @Mihai0909, the .setFilesToUpload methods should be used with an upload input (<input type=\"upload\">). You should find it in the DOM tree of your page, and use its selector as the first argument of the .setFilesToUpload method. E.g. for the simplest case you can use something like Selector('input[type=upload]').. Hi @vvedachalam, it's better to create a new ticket. Likely there is an invisible upload input somewhere on your page. You can try to detect it by executing the following code in Chrome DevTools console:\n$$('input[type=\"upload\"]'). Hi @tobinus, thanks for the proposal, I see the point for using such alias in the package.json.. @testcafe-build-bot retest. Hi @Lumca, I can't reproduce the issue. What is the full path of the test1.js file? Could you please create a new GitHub repo which can reproduce the problem?. Hi @StanTheIV, I've just published testcafe@0.20.5 with the fix! Please, update your TestCafe installation, and feel free to reopen the issue if the problem isn't fixed in your environment.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @davidcunha, I've just published testcafe@0.20.5 with the fix! Please, update your TestCafe installation, and feel free to reopen the issue if the problem isn't fixed in your environment.. Hi @gytisgreitai! Looks like you've missed ] in the Selector expression (line 8 in the test, take a look a the error stack trace). Please, correct the mistake, and then feel free to reopen the issue if it don't fix the problem. . @rpolishetti, could you please post an example?\nThere must be no exception if you try get a state snapshot for a non-existing Selector (using const state = Selector('...')()). The best practice in JS (and many other languages) is avoiding exceptions when it's possible. E,g. instead of catching exception you can just check if returned state is not null. If you don't care about exceptions, you can just use state's properties without checking the state, or just get this properties directly from Selector (e.g. use Selector('...').textContent instead of (await Selector('...')()).textContent). If you need to check if an element exists on a page, assert the Selector('...').exists  property.. It's connected with DevExpress/testcafe-hammerhead#1650. A PR with a fix is on the way: https://github.com/DevExpress/testcafe-hammerhead/pull/1663.. This task is divided into two subtasks:\n\n\n[ ] Firefox #2623\n\n\n[ ] Chrome #2624. Closed by #2616 . Hi @vvedachalam, I would consider it resolved if you don't get \nTypeError: frames[i].getFunctionName is not a function\nin error messages. \n\n\nI agree that the error message about non-existent element is quite unclear, but we have another issue for improving it: https://github.com/DevExpress/testcafe/issues/2568.. Closing this issue because the problem with the frames[i].getFuncitonName error is fixed in v0.20.2, and #2568 is closed too. . AFAIR we've already discussed it with @kirovboris, and decided to release without docs for #2216.. Tests in PR the are fine, let's merge it and wait for master badges to update:\n\n. Hi @hdorgeval, thanks for the feedback! It happened because you had passed stringifyResponseBody: true and logResponseBody: false. You can't stringify a request body, if you don't log it. I think we can throw a more descriptive error in this case, or just ignore the stringifyResponseBody option in the context of this issue: #2555. . An additional reason is that RequestHookConfigureAPIError is an instance of TestRunErrorBase. It must use the APIError class as a base class.. Hi @TestAndunR, in your case assertions are not awaited - the Array#forEach method doesn't await results of the iterator function. Use Promise.all or for..of loop instead of the forEach method.. @VasilyStrelyaev, please check the new option description: https://github.com/DevExpress/testcafe/pull/2562/files#diff-032d695d390a3643d7f0e829fdb8097cR91. Hi @jburgs, could you please share the output of docker run -it --rm testcafe/testcafe -v?. Could you please try to use chromium:headless --no-sandbox as the browser?. So I close it, because the problem was resolved by updating TestCafe version in package.json.. Hi @dsayerjp, you should set  the NODE_PATH variable to /app/node_modules or to the directory where your Node.js modules are installed (in this case probably you will need to mount the directory as an additional volume):\ndocker run -v `pwd`:/app -e \"NODE_PATH=/app/node_modules\" -i testcafe/testcafe chromium /app/tests/web/auth/emailLoginTests.js -e. Hi @dylang, thanks for the proposal! I think it's a good idea.. Hi @vvedachalam, I guess you use some kind of Cucumber integration judging by this comment. I think you get this error text because TestCafe isn't properly integrated into Cucumber, could you please specify the name of the package that is used for integration?. Hi @bdwain, could you please upgrade your TestCafe to the latest version v0.20.4 or at least to the v0.20.2? The macOS-specific code of window manipulation modules (including window resizing module) was completely rewritten in this version, so the problem can be already resolved.. Hi @qualityshepherd, the fixture.before and fixture.after hooks are designed for server-side test environment setup actions and are executed before a test page is loaded in a browser. It means you can't use a test controller in these hooks, check the documentation.. You can take this approach to execute fixture.beforeEach only once.. Hi @Turkirafaa, please update your TestCafe installation to v0.20.4. What Chrome and macOS versions do you use? Which command do you use to start TestCafe? Could you please try to specify chrome:userProfile as a browser?. npm install -g testcafe@latest or npm install testcafe@latest if you've added TestCafe into your project's package.json.  . Do you have this artifacts when running Chrome without TestCafe? Have you tried to specify chrome:userProfile as a browser?. Hi @ferencbeutel4711, @Turkirafaa, thank you for investigation! chrome:userProfile starts the browser with the default Chrome profile that you use for regular browsing. It means test URLs will be recorded in your browsing history, and installed extensions can have unexpected and unpredictable impact on the testing environment. Also, due to technical limitations you can't use concurrency mode together with userProfile mode, because each browser instance needs a separate profile. . @gaborari, please create a new bug report and try to provide an example that can be used to reproduce the problem.. It's a bug in Firefox: https://github.com/mozilla/geckodriver/issues/931. Hi @hiruthre, please check the documentation for the .setNativeDialogHandler method. The third parameter of handler function is an URL of a page that triggered the dialog. To pass a variable to a dialog handler, you should use the dependencies option:\n```\ntest('Expected confirm after an action', async t => {\n    var que = 'Confirm?'\nawait t\n    .setNativeDialogHandler((type, text) => {\n        if (type === 'confirm' && text === que)\n            return true;\n\n        return null;\n    }, { dependencies: { que } })\n    .click('#buttonConfirm');\n\nexpect(await getResult()).equals('true');\n\n});\n``. Hi @ericorruption, I agree, looks like it was a problem on the tested site, so I close the issue.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @helen-dikareva, could you please check it?. Hi @pranshu1995, unfortunately I need your test and tested site to reproduce the problem. As a general advice, try to add a wait step before the click step.. Hi @pranshu1995, sorry for the late response, you can find my email on my GitHub profile page.. I close this issue because of the long period of inactivity. Feel free to reopen it if you have any updates.. @testcafe-build-bot retest. @testcafe-build-bot retest\n. Don't merge it until @Nuarat confirms that we have permission to do it.. Hi @trodrigues, it's interesting, TestCafe doesn't useopnto open browsers :) Justchild_process.exec`, wrapped in a Promise: https://github.com/DevExpress/testcafe-browser-tools/blob/master/src/utils/exec.js#L23, https://github.com/DevExpress/testcafe-browser-tools/blob/master/src/api/open.js#L75. \nIt's great that you've reported the problem here, because we need to take some measures to deal with this change:\nWhen you execute \u201cstart cmd\u201d from a Command Prompt window, a new Command Prompt tab will now be created if you have Sets enabled.. I think it's enough for now that we are aware of the problem, thanks to you. For me, it looks like a regression, and I hope Microsoft will fix it in next builds. I'll try to download the problematic build at the weekend and check if we can provide an easy workaround for this.\nI think that your issue with MS Edge is important despite it's an Insider Build and you should create a separate issue about it. In this issue your message is quite out of context and can be missed easily. . Hi @sorin-davidoi, this issue looks as a duplicate of https://github.com/DevExpress/testcafe/issues/2371. Please, check the #2371 to be notified when the issue is fixed, and then feel free to reopen the issue if a provided solution doesn't fix your problem.. Hi @trodrigues, do you experience the problem on newer WIndows builds?. I close the issue because I can't reproduce it with Edge 18.17763, Windows 1809 and TestCafe 1.0.0. Feel free to reopen the issue if you can provide additional details that can be used to reproduce the problem.. Hi @berrutti, it's not a bug, it's a language limitation. Parameters of function calls must be evaluated before the calls, so in a chain of calls all parameters are evaluated before the first call of the chain. In your specific case, await googlePage.results.findResult('Test') is executed before .typeText(googlePage.searchBar,'This is a test').. Hi @ErikHellman, unfortunately I can't reproduce it on my Mac, could you please provide me the command that you use to run TestCafe, and do the steps described in this comment?. Hi @srijitdas8, I've reproduced the problem.. Hi @srijitdas8, I'm working on this.. @testcafe-build-bot retest. Hello @qualityshepherd, unfortunaly you can't test a site if it opens additional tabs/windows. You can subscribe to the issue https://github.com/DevExpress/testcafe/issues/912 for getting notifications about this feature. So I close this issue because it's a duplicate of #912.. @testcafe-build-bot retest. Could you please explain why have you decided to not throw an error and emit a warning instead?. Hi @marchcorpse, what language do you use on your machine? Could you please try to execute \nchcp 65001\nbefore starting TestCafe?. Please check the PATH environment variable and correct it as described in this StackOverflow answer.. Hi @lsklyut, you need to install https://github.com/gulpjs/gulp and build the project with gulp build. Unfortunately, this issue is a duplicate of #2074, so let's move our discussion there.. @testcafe-build-bot \\retest. @testcafe-build-bot retest. 1. Agreed, but it won't be a client but functional test. because we need to run both client and server scripts to test this.\n\nAgreed, It's #2361, and I've told about it at the last sprint planning. . Additionally to the things mentioned by @miherlosev, I think we should also note problems, when a browser is connected, but test execution hangs indefinitely, until TestCafe process is interrupted, e.g. by pressing <Ctrl> + C:\ntestcafe and hammerhead code problems\nnetwork problems (resulting in failed driver requests to server)\ninfinite redirect. Hi @gknapp, currently RequestHooks are the only options to work with request. The purpose of test hooks is to execute some code when a fixture or a test started/finished to perform initialization/clean-up steps. You can't intercept a request and modify its response from a test hook.. Hi @cmaree, please check that you have all required dependencies installed.. Tests failed due to known problems with functional mobile tests.. @testcafe-build-bot retest. @testcafe-build-bot retest. I think we should merge the PR about HTTPS before processing this PR.. Hi @vvedachalam, TestCafe aborts test execution when an uncaught exception is raised on a page. If you don't like this behavior, you can turn it off by using the -e CLI switch or the skipJsErrors runner's option: -e, --skip-js-errors, Runner#run . You can also use a RequestMock instance to replace the content of the third-party site with a test data.. Hi @kot-lex, I've reproduced the issue. We need some time to investigate what's going wrong on the page.. Hi @kot-lex, unfortunately page's code is very complex, and we don't have any significant results.. Hi @kot-lex! The fix is released in testcafe@0.22.0, you can install it with npm i testcafe@latest and try it on your machine..  Hi @testcafeninja! It's not a bug. The documentation for Test Hooks has a note about this behavior:\nIf test.before or test.after is specified, it overrides the corresponding fixture.beforeEach and fixture.afterEach hook, so that the latter are not executed.. There is a proposal (https://github.com/DevExpress/testcafe/issues/2230) that suggests to run test hooks in the way that you described in this issue. You can add \ud83d\udc4d to it to help us decide what features we should consider for implementation.. Hi @Ventajou, could you please specify Node.js & Chrome versions, Windows 10 edition & build number.. Hi @Ventajou, thank you for investigation. Have you tried to specify the --no-sandbox flag, e.g. \ntestcafe \"chrome --no-sandbox\" test.js\nThis comment says that it can help.\n\nUnfortunately I can't reproduce the issue on my machine, However I've seen such problems on our old build server, which used CruiseControl.NET to run builds.\n. Hi @GeoffreyBooth! Thank you for the great job done.\nCould you please take a moment to help us better understand what this feature will give us. Nobody in our team has ever worked with CoffeeScript closely, so please clarify some points:\n\n\nWhich features are important for you in CofeeScript that can't be found in ES6 and TypeScript?\n\n\nDo you believe there will be many TestCafe users who would prefer to write E2E tests using the CoffeeScript syntax? Have you heard from any of your colleagues or acquaintances about such a desire? . @testcafe-build-bot retest. @testcafe-build-bot retest. @vvedachalam, native upload window can't be automated, because it's a native OS window, and TestCafe can automate only HTML elements.. @patrykkopycinski, thank you, TestCafe works exactly as you described.\n\n\n@aboe026, yes, unfortunately we don't support specifying custom compilation options for test, neither through API or by using .babelrc files. You have to precompile your tests if you need to use additional Babel plugins.\nIt seems more like a feature request to me, so I close this issue in favor of #2659.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Closing this in favor of a new PR for #2727. Hi @lucidtech, I think it's a duplicate of https://github.com/DevExpress/testcafe/issues/2677 if you need to inspect Selectors and corresponding Snapshots. Otherwise you can attach a Node Inspector or any compatible third-party JS debugger to the TestCafe process to inspect any variable in your code.. I think this issue was about handling the default value of the dialog input. The resulting value is supposed to be returned from the handler. . The workaround is to override the document.execCommand method with a ClientFunction:\n```js\nconst overrideClipboardCopy = ClientFunction(() => {\n    const execCommand = document.execCommand;\ndocument.execCommand = (action, ...args) => {\n    if (action === 'copy') {\n        //handle copy here\n    }\n    else\n        return execCommand.call(document, ...args);\n}\n\n});\n```. Thank you for referencing this part of API.\nOf course, we should support ClipboardEvents too. As far as I know, they don't let copy arbitrary data to the clipboard at any time; you can only modify content that goes to the clipboard when a user initiates a copy/cut operation by pressing\u00a0Ctrl + C/Ctrl + X.\nI think TestCafe should provide a virtual clipboard for a page under test. The page can use\u00a0document.execCommand\u00a0to change the state of this virtual clipboard directly or use\u00a0ClipboardEvent.setData when a ClipboardEvent is generated by the\u00a0t.pressKey('cltr+c')/t.pressKey('ctrl+x')\u00a0actions.\nIn the meantime, you can use the\u00a0ClipboardEvent\u00a0constructor and the\u00a0dispatchEvent\u00a0function in\u00a0my workaround to simulate these events in the place where the\u00a0copy\u00a0command is handled: \n```js\nconst overrideClipboardCopy = ClientFunction(() => {\n    const execCommand = document.execCommand;\u00a0    document.execCommand = (action, ...args) => {\n        if (action === 'copy') {\n            //handle copy here\n            const event = new ClipboardEvent(...);\n        document.activeElement.dispatchEvent(event, ...);\n    }\n    else\n        return execCommand.call(document, ...args);\n}\n\n});\n```. Hi @palpatine1991! I think this feature request is duplicated in https://github.com/DevExpress/testcafe/issues/2677 and https://github.com/DevExpress/testcafe/issues/2568. Please, use this issues to share your feedback.. Hi @palpatine1991, I've got your point. However there are tips that can help you right now:\n\n\nYou can access the element specified by a Selector in a ClientFunction by specifying the corresponding Selector as a dependency.\n\n\nYou can wrap Selector constructor with your own function, and store CSS selector as a property on the Selector:\n```js\nfunction createSelector (cssSelector) {\n    return Object.assign(Selector(cssSelector), { cssSelector });\n} \n//...\nconst mySelector = createSelector('...');\n\n\nconsole.log(mySelector.cssSelector);\n. The problem is that browsers use sophisticated algorithms to determine how to represent space symbols typed in content editable elements in HTML code. E.g. a browser can use a non-breaking space or a regular space for a sequence of space symbols depending on its position in the line, the presence of hard-coded non-breaking spaces, the presence of empty lines and other factors. What's worse, different browsers use slightly different algorithms to solve this task.\n\u00a0\nIt means we would need to invest a lot of time to solve it for different browsers and different platforms if we want to emulate browsers' behavior , or use browsers' automation protocols (Chrome debug protocol/Firefox Marionette protocol) to perform text typing.. Hi @raja1313, I guess you should specify the [timeout](http://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/selector-options.html#optionstimeout) option for the `Selector` of the button. . Closed in favor of #3244.. Hi @emildimitrov, try to specify protocol in the links specified in the `navigateTo` action, e.g:\nawait t.navigateTo('http://desktop.ttqa4.xyz/register')\n. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @rafrsr, TestCafe doesn't have problems with Web Audio API, I've checked it on Visualizer example:\nfixture Audio\n    .pagehttps://webaudioapi.com/samples/visualizer/;\ntest(Test audio, async t => {\n    await t.wait(10000).click('button').wait(30000)\n})\n```\nCould you please share the code of your page?. Hi @rafrsr! I've discovered that this exception happens due to the new autoplay policy in Chrome: https://developers.google.com/web/updates/2017/09/autoplay-policy-changes. Try to add the --autoplay-policy=no-user-gesture-required flag to the Chrome arguments, e.g.:\ntestcafe \"chrome --autoplay-policy=no-user-gesture-required\" test.js\nI close the issue because adding the flag fixed it on my machine. Feel free to reopen the issue, if you still have the problem even with the flag.. Hi @dsayerjp! It happens likely due to https://github.com/DevExpress/testcafe/issues/2386.\nIt means when you try to assert the visible property of an element and the element doesn't appear on the page during the specified selector timeout, you'll get the Cannot obtain information about the node because the specified selector does not match any node in the DOM tree exception regardless of the configured assertion timeout, because assertion also will be interrupted by the exception.\nYou should try to configure  availabilityIndicatorHeading's selector timeout, or add an additional assertion that checks element's exists property, as in your workaround.. # Allow to use HTML5 Clipboard API in tests\nBrowser prevent access to the HTML5 Clipboard API (document.execCommand('copy')) when it is invoked not from a user-generated event. It means, that the Clipboard API enabled code don't work under the TestCafe testing environment.. # Support iframes with Data URI sources\nTestCafe can't handle <iframe>s that have the src attribute set to a Data URI. # Enable handling of window.print() dialog with t.setNativeDialogHandler\nDialogs created with window.print() are not handled by the handler installed with the t.setNativeDialogHandler method.. # Make t.pressKey to work for elements that are descendants of Shadow DOM roots\nCurrently TestCafe can't emulate keyboard events if the target element is inside a Shadow DOM root.. # Emulate HTML 5 Validation API\nThe checkValidity function always return true even when an element fails constraint validation.. # Support pages that open additional windows\nTestCafe can't test pages that create new windows using the window.open API, hyperlinks and forms with the target=\"_blank\" attribute. \n. Hi @chinjon! Despite we cleaned our repositories from the code that supported IE 9 & IE 10 not so long time ago, we stopped running our tests in these browser regularly before the 0.9.0-rc1. So the last known version that works in IE 9 & 10 is 0.3.1-alpha.. Hi @vvedachalam! Sorry for the late response, unfortunately I can't reproduce it with my example:\ntest.html\n```\n<!DOCTYPE html>\n\n\n</head>\n<body>\n    <button style=\"margin:3000px;margin: 3000px\" onclick=\"window.clicked=true\">Click</button>\n    <div style=\"position:fixed;bottom:0;left:0;right:0;height:50px;background-color:black\">\n        <button>Click Fixed</button>\n    </div>\n</body>\n\n\n```\ntest.js\n```\nimport { ClientFunction } from 'testcafe';\nfixture Test fixture\n.page(./test.html);\ntest('Click close button to dismiss modal', async t => {\n    await t\n        .click('button')\n        .expect(ClientFunction(() => window.clicked)()).eql(true);\n});\n```\nCould you please provide me an example layout with the problem?. @vvedachalam, in my test click happens on the first button that isn't fixed and it's over 3 screens in height (given 1600x900 screen resolution) to scroll:\nhtml\n<button style=\"margin:3000px;margin: 3000px\" onclick=\"window.clicked=true\">Click</button>\nHowever, I've increased margins and removed the position: fixed property, the test still passes:\n```\n<!DOCTYPE html>\n\n\n</head>\n<body>\n    <button style=\"margin:6000px\" onclick=\"window.clicked=true\">Click</button>\n    <div style=\"bottom:0;left:0;right:0;height:50px;background-color:black\">\n        <button>Click Fixed</button>\n    </div>\n</body>\n\n\n```\nPlease note that you must avoid interacting with the browser as much as possible while automated tests are running. If TestCafe can't find an element after you've manually scrolled the page, it's not a bug. AFAIK there is no test automation framework that can prevent scrolling caused by a real user. . Can't reproduce the issue without a proper example. Feel free to reopen the issue if you have an example where the problem can be reproduced.. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @row1! Because Windows doesn't provide a reliable API to take a screenshot of a specific window, so in general case TestCafe have to capture screenshot of the desktop and cut a image of the window from it. Of course if you lock you computer, you will get a screenshot of the lockscreen instead.\nTestCafe uses this general approach for IE and Edge. Fortunately, Chrome and Firefox provide the possibility to capture screenshots of a browser window using their debug protocols, so the lockscreen shouldn't cause troubles with them.\nTL&DR: If you experience this with IE and Edge, it's a Windows technical limitation, and I'm afraid you  have to disable your lockscreen. If it happens in Firefox or Chrome, it's a bug, so please provide me the TestCafe command that you used to run tests and the corresponding test report.. @row1, thanks for feedback!. @testcafe-build-bot retest. Hi @ericyuri, looks like your test is written using TestCafe Legacy API. If you use TestCafe 15.x to run tests, please create a ticket in DevExpress Support Center. Also please provide access to your test page or test page's source code and your test code. . Hi @maeriens, I've reproduced the issue. Looks like a regression in the testcafe-hammerhead package.. @LavrovArtem, it can be reproduced with the latest master (55c3d75) in hammerhead's playground. @testcafe-build-bot retest. Hi @dawiddylowicz, I've rebuilded the official TestCafe image (testcafe/testcafe) on my machine, and can't reproduce the problem with new Chromium. Could you please share your image or Dockerfile?. I've found that the node:8.11.2-alpine image is based on the alpine:3.6 image: Dockerfile. I don't think that it's possbile to mix packages from edge and 3.6 in a single installation.\nI 've tried to modify first two steps of your Dockerfile to be:\n```\nFROM alpine:edge\nhttps://github.com/facebook/flow/issues/3649\nRUN \\\n  addgroup -g 1000 node && \\\n  adduser -u 1000 -G node -s /bin/sh -D node && \\ \n  apk --no-cache add ca-certificates wget && \\\n  wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub && \\\n  wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.27-r0/glibc-2.27-r0.apk && \\\n  apk add glibc-2.27-r0.apk && \\\n  apk add nodejs nodejs-npm && \\\n  npm i -g yarn\nand it fixed the issue for me.. So closing this as resolved.. Hi @sambegin @DaAitch! The fix is released in `testcafe@0.22.0`, you can install it with `npm i testcafe@latest` and try it on your machine.. \\cc @MargaritaLoseva . Hi @ericyuri, you should add quotes around the value of the `id` attribute selector:\n.click('input[id=\"2021AFMDINDS 111\"]')\n```. Mobile tests are failed because of netwrok problems.. Hi @vvedachalam! Could you please check the folowing things:\n\n\nThat this error is not shown when visiting the problematic page with TestCafe. If it's shown there is an error on your page, and it's better to find and fix it on your side or turn on the Skip JS Errors mode.\n\n\nThat this error doesn't come after changes in your tested site: install and try to run tests with different TestCafe versions. I think testing v0.20.5, v0.21.0 and finally v0.21.1 wll be enough as you say that the v0.20.5 worked fine.\n\n\nThat turning on the Skip JS Errors mode won't help TestCafe session won't be continued or finished properly even in this mode.\n\n\nIf the above steps don't help, I'm afraid we'll need access to the problematic page to investigate the problem.. Hi @mwhebert! The fix is released in testcafe@0.22.0, you can install it with npm i testcafe@latest and try it on your machine.. We shouldn't document this behavior, because it's a bug: https://github.com/DevExpress/testcafe/issues/2195. @testcafe-build-bot retest. Hi @bdwain, we officially support only the latest versions of Google Chrome: Browser Support. We can't guarantee backward compatibility with outdated browsers in next TestCafe releases. Could you please tell me why you need to support Chrome 55? . TestCafe injects its scripts to tested pages, and these scripts limits browser versions that can be used for testing with TestCafe. It doesn't matter how a browser is started - locally on your machine, or in the Browserstack cloud. TestCafe version requirements stay the same. Browserstack just provides a convenient way to test you site in different browsers without installing them on your machine. It's especially useful in Continuous Integration systems that run tests on Linux servers even with no GUI subsystem installed. . @olingern, this error message is emitted when the browser stopped responding to the TestCafe server. It can happens by a number of reasons. I think you problem is not related to #1493 (because it's for a very different browser provider), or this issue (because it's about problems with old Chrome versions). It would be very helpful if you created a new issue and provided information like your runner code, test suite code, Saucelabs test session video recordings.\n@bdwain, I'm sorry but I can't say when we actually dropped these versions, because v0.18.2 was released almost a year ago, and we made hundreds of commits to both testcafe and testcafe-hammehead repositories.. @bdwain I understand your frustration and dissatisfaction about this problem, but BrowserStack support doesn't mean that we support all browsers available on the platform, You can say that you have Chinese customers with Windows XP and IE6, so TestCafe must support IE6 for declaring BrowserStack support. As I said, in our opinion BrowserStack is a cloud provider for Continuous Integration services and headless machines.\nMaintaining backward compatibility is hard, and we've discussed a lot about what we will support and what we won't.\nI can see at least two ways to resolve this problem:\n1) Most obvious, try to upgrade browsers on your devices. Which Android version do you have on you devices? With Android 6 & newer, you can just install Chrome from the Google Play market. For older Android version, you can try to install Firefox.\n2) You can help us fix the issue. I've discovered an issue in testcafe-hammerhead that caused the problem in older Chrome browsers: https://github.com/DevExpress/testcafe/issues/2732, you can fix it and create a Pull Request to the testcafe-hammerhead repository.. I've got Chrome 55 working during the debugging session with the following changes:\n1) Due to different property descriptors structure in older Chrome browsers, the following code in the src/client/sandbox/native-methods.js:515 file is invalid:\njs\nthis.winLocalStorageGetter   = win.Object.getOwnPropertyDescriptor(storagesPropsOwner, 'localStorage').get;\n        this.winSessionStorageGetter = win.Object.getOwnPropertyDescriptor(storagesPropsOwner, 'sessionStorage').get;\nIn Chrome 55, win.Object.getOwnPropertyDescriptor(...) doesn't return an object with the get and set properties, the returned object has the value and writable properties instead. You need to emulate getter e.g. by using an arrow function that returns descriptor's value property:\njs\nthis.winSessionStorageGetter = () => win.Object.getOwnPropertyDescriptor(storagesPropsOwner, 'sessionStorage').value\n2) Due to the same reason, the code from the src/client/utils/property-overriding.js#L17 doesn't work:\n```js\nconst descriptor = nativeMethods.objectGetOwnPropertyDescriptor.call(window.Object, obj, prop);\nif (getter !== null)\n    replaceNativeAccessor(descriptor, 'get', getter);\n\n```\nYou can't mix get/set and value/writable structure in the same descriptor, so when the createOverriddenDescriptor works in an older browser which returns value/writable descriptors, creating the get property generates an error. The easiest way to tackle the problem is removing the value and writable properties from descriptors before adding getters and setters to them.. Hi @Lupiano! I've reproduced the issue. TestCafe creates temporary directories for Chrome and Firefox profiles for each test session using the tmp module. Looks like the module can't properly remove directories when TestCafe execution is finished. I will fix it ASAP. . Hi @Lupiano! The fix is released in testcafe@0.22.0, you can install it with npm i testcafe@latest and try it on your machine.. FPR. \\cc @miherlosev @kirovboris \nI've tested in on Windows 10, Ubuntu 16.04 VM, macOS 10.13 VM. \nAdditional detached process for killing browsers and cleaning temp dirs works even for https://github.com/DevExpress/testcafe/issues/2013\nYou can grab a debug build here for testing: https://github.com/AndreyBelym/testcafe/releases/tag/build-gh-2735. Hi @cullophid! The fix is released in testcafe@0.22.0, you can install it with npm i testcafe@latest and try it on your machine.. Hi @Gwerlas, thanks for explaining how GitLab CI actually works! You were right about overriding image's entrypoint, but you had missed the -c argument of /bin/sh that tells the shell that next arguments aren't a script files, but a command. So correct `gitlooks like:\ne2e:\n  image: \n    name: testcafe/testcafe\n    entrypoint: [\"/bin/sh\". \"-c\"]\n  script:\n    - /opt/testcafe/docker/testcafe-docker.sh \"chromium --no-sandbox\" -a \"npm start\" tests/e2e/ \nCheck my example: .gitlab-ci.yml, GitLab Pipeline. Hi @stavalfi, you can connect this browser as a remote: Remote Browsers. And optionally use TestCafe Live to keep the browser connected between different test sessions.. @testcafe-build-bot retest. Hi @nabond240, I can't reproduce it, could you please try to run my version and post your version here?\n``js\nfixtureYahoo.pagelogin.yahoo.com`;\ntest(Login, t => t.typeText('#login-username', 'temporary').wait(4000))\n. @miherlosev, @LavrovArtem, looks like the hash symbol breaks URL parsing when used as a path element.. @link89, @nabond240, could you please install the `testcafe@0.22.1-alpha.1` build and try it in your environment? We've implemented printing stack traces of JS errors in browsers, so it can give precise location where the error is created. . Could you please check that your version of IE11 doesn't have the `origin` property in the `location` object?\n![image](https://user-images.githubusercontent.com/4479386/45409726-a972bd80-b678-11e8-9fe4-b9b2ab01092c.png)\n. @nabond240, I don't have a proxy in my network. From what I've got, it's a bug of older IE11 versions as @link89 said. Could you please try to update your Internet Explorer installation?. It's a mistake, I've just accidentially uninstalled Chrome Canary from my machine.. Hi @MohamedRasool786, I think you can check element's color using the CSS `color` property:\nawait t.expect(Selector('...').getStyleProperty('color')).eql('rgb(0, 255, 0)');\n``. Hi @davidarce, sorry for the late response. Your issue is missing thestart.shfile, where I guess TestCafe is actually started. You don't install Xvfb, so make sure you have enabled the [Headless mode](https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/testing-in-headless-mode.html), otherwise you need to install and start Xvfb.. Hi @Aniku2009, if your login page performs authentication request while it is loading, you can't set cookies in a test body or hooks, because they are executed after the page loading is finished. Try to set cookies in a [Role](https://devexpress.github.io/testcafe/documentation/test-api/authentication/user-roles.html), and then use it in your tests. . Try to log thecookieheader on your server. You can't see thecookierequest header in DevTools, because request shown in DevTools aren't processed directly by your server, but go to thetestcafe-hammerhead` proxy server, which stores cookies independently and sends them to your server.\nI'm afraid I can't help you much without access to your server and full test suite code. Simplified basic scenario works fine on my machine:\nserver.js\n```js\nconst http = require('http');\nconst COOKIE = 'blabla=foobar';\nconst render = ({ authorized } = {}) => `\n<!DOCTYPE html>\n\nTest\n\n${authorized ? 'Authorized' : 'Not authorized'}\n\nAdd Cookie\nRemove Cookie \n",
    "georgiy-abbasov": "After the research we have an interface that we are going to implement for functional tests running.\nImplement functional harness\n/cc @inikulin Is it all ok?\n. @inikulin, ok, we will discuss it together on Monday.\n. #### testcafe-functional-harness\nAllows to run functional tests in local browsers or on SauceLabs.\nWhat it's doing\n1) Start server for test pages.\n2) Open the specified browsers (locally or on SauceLabs).\n3) Run mocha tests.\n4) Close the browsers and stop the server after the tests.\nInstall:\n$ npm install testcafe-functional-harness\nUsage:\njs\nfunctionalHarness\n    .src(...sources)\n    .sitePorts(port1, port2)\n    .browsers(...{alias, url, name, platform})    //name and platform - for saucelabs\n    //optional\n    .saucelabs(username, accessKey, jobName)\n    .timeout(sec) //by default 180s\n    //run tests\n    .run();\n. #### TestCafe\nGulpfile.js\n``` js\nvar functionalHarness = require('test/functional/harness.js');\nvar FUNCTIONAL_TESTS_SETTINGS = {\n    testCafePort1: 2000,\n    testCafePort2: 2001,\n    sitePort1: 3000,\n    sitePort2: 3001\n};\nvar FUNCTIONAL_TESTS_BROWSERS = {\n    platform:    'Windows 10',\n    browserName: 'microsoftedge',\n    alias:       'edge'\n};\nvar SAUCELABS_FUNCTIONAL_SETTINGS = {\n    username:  process.env.SAUCE_USERNAME,\n    accessKey: process.env.SAUCE_ACCESS_KEY,\n    build:     process.env.TRAVIS_JOB_ID || '',\n    tags:      [process.env.TRAVIS_BRANCH || 'master']\n    name:      'testcafe functional tests'\n};\ngulp.task('test-functional', function () {\n    var testsTimeout = 180;\nreturn gulp\n    .src('test/functional/fixtures/**/*-test.js')\n    .pipe(functionalHarness.run(FUNCTIONAL_TESTS_SETTINGS, FUNCTIONAL_TESTS_BROWSERS,\n                            testsTimeout, SAUCELABS_FUNCTIONAL_SETTINGS));\n\n});\n```\ntest/functional/harness.js\nWhat it's doing:\n1) Create testcafe instance from the sources.\n2) Exports testcafe and browsersInfo for test-runner.\n3) Run tests via testcafe-functional-harness.\ntest/functional/test-runner.js\nWhat it's doing:\n1) Provides the runTests function that runs testCafe tests via the testCafe instance from harness.js. It is called from mocha tests.\n2) Returns the object with failed tests in the following format:\njs\n{\n    testName1: 'test1Error',\n    testName2: 'test2Error'...\n}\nHow it works:\n``` js\nvar harness  = require(test/functional/harness.js);\nvar testCafe    = harness.testCafe;\nvar browserInfo = harness.browserInfo;\nexport runTests(fixture, testName) {\n    var tc     = harness.testCafe;\n    var runner =  tc.createRunner();\nreturn runner\n.filter(function(){\n...\n})\n.src(fixture)\n.browsers(browserInfo)\n.run()\n.then(function()\n{\n    // modify testcafe report to the following way:\n    //<testName>: [testError]\n    // throwing report if there was errors\n});\n\n}\n```\ntest/function/fixtures/\n--- index.html    // tested page\n--- test1.test.js // testcafe test\n--- test1-test.js // mocha test\nmocha test example\n``` js\nvar runTests = require('../../../../test-runner.js').runTests;\nvar expect   = require('chai').expect;\ndescribe('api click test', function () {\n    it('Should fail when the first argument is invisible', function () {\n        return runTests('./click.test.js', 'Should fail when the first argument is invisible')\n            .then(function () {\n                throw new Error('Test should fail but was succeed');\n            })\n            .catch(function (err) {\n                var expectedError = [\n                    'Error at step \"1.Click on invisible element\":',\n                    '',\n                    'act.click($input);',\n                    '',\n                    'A target element \\<input id=\"input\"> of the click action is not visible.',\n                    'If this element should appear when you are hovering over another',\n                    'element, make sure that you properly recorded the hover action.'\n                ].join(' ');\n            expect(err['Should fail when the first argument is invisible']).eql(expectedError);\n        });\n});\n\nit('Pointer events test (T191183) [ONLY:ie]', function () {\n    return runTests('./click.test.js', 'Pointer events test (T191183) [ONLY:ie]')\n        .catch(function (err) {\n            expect(err['Pointer events test (T191183) [ONLY:ie]']).eql('');\n        });\n});\n\n});\n``\n. @testcafe-build-bot \\retest\n. FPR\n. For now we know the reason of this problem.\nThe problem relates to thetestcafe-browser-natives` module: https://github.com/DevExpress/testcafe-browser-natives/issues/58\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @inikulin, it takes about 2 minutes to open SauceLabs tunnel and start 4 virtual machines. These actions take place in setup.js, i.e. mocha 'before all' method.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @VasilyStrelyaev, @inikulin\nfpr\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. fpr\n. @testcafe-build-bot \\retest\n. fpr\n. @inikulin, i'll do this.\n. FPR\n. I'm working on this.\n. fpr\n. I think, recipe with TDD example may be usefull. @testcafe-build-bot \\retest\n. After the lot of client tests with the new qunit-harness, we decided to merge this PR.\n. Looks like the issue duplicated\n. @AndreyBelym, lgtm. Thanks for explanation.\n. @AlexanderMoskovkin, yes, they will be added with pull-request for this task (#293)\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n@VasilyStrelyaev, check comments and strings, please.\n. @AlexanderMoskovkin, this failed test will be successfull with new testcafe-hammerhead release.\n. \\cc @VasilyStrelyaev, check this comment, please.\nComment\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. After some research it was found out, that css on test pages can extend testcafe-client-ui properties, so, it was a problem with the test page.\n. FPR\n. FPR\n\\cc @helen-dikareva, take a look, please\n. FPR\n. I'm working on this.\n. FPR\n\\cc @miherlosev, take a look, please\n. @AlexanderMoskovkin, thanks\n. 1. This was done for pretty print if test unexpectedly fails.\nComparsion:\nrunTests without then\nrunTests with then\n. @inikulin, we discussed first and second paragraphs with @AlexanderMoskovkin, and found complexity.\n`` js\nit(Should success when peforming click action on the present element`,function () {\n    return runTests(); // it resolves when success, and rejects when error occures\n})\nit('Shouldn\\'t fail when performing click action on the missing element and shouldFail option enabled', function () {\n    return runTests('fixture.test.js', 'testName', {shouldFail:true}); // it always rejects\n})\n```\nWe can refuse shouldFail argument, in that case \"should fail\" tests might look like this:\njs\nit('Shouldn\\'t fail when performing click action on the missing element and shouldFail option enabled', function () {\n    return runTests('fixture.test.js', 'testName')\n        .then(function () {\n           throw new Error('Test should be failed but it is succeed');\n        })\n        .catch(function (err) {\n           expect(err).eql(expectedError);\n        });\n})\nWhat do you think ?\n. Cause we started work to refactor functional tests, i want to ask tech writers. \\cc @VasilyStrelyaev, \\cc @MargaritaLoseva \nWe have different test naming, for example:\nShould success\nShould be successful\nShould pass\nIt's clear, that names are valid, but i think, test names should be more uniform.\nAnd i have one more question. As @inikulin said, it's not clear why tests with name \"Should fail\" succeed. I have a one variant, @AlexanderMoskovkin  suggested another two.\n1. it('Should success when element isn't present on the page and an exception is thrown')\n2. it('Should not fail when element isn't present on the page if the shouldFail opt is enabled')\n3. it('Should success when element isn't present on the page if the shouldFail opt is enabled')\nWhat do you think ?\n. Ok, let it be 'Should pass when performing click action on the missing element with the shouldFail option enabled'. In that case i have false sense, that test pass only because shouldFail option enabled.\n. Yes, we mean testcafe behavior.\n. Clicked wrong button, sorry.\n. @VasilyStrelyaev, should we use if instead of when ?\n\nShould fail if \nShould pass if  when 'skipJsError' is enabled\n. \"Display intranet sites in Compatibility View\" option is enabled in Internet Explorer on Sauce Labs side, so it sends user agent like: \nMozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E)\n. Functionality for disabling this option has been added in saucelabs-connector 0.1.1, so we need just update version of this package\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin, @AndreyBelym, \\cc @VasilyStrelyaev\nFPR\n. @testcafe-build-bot \\retest\n. FPR\n. ping @AlexanderMoskovkin \n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. Fixed in testcafe-hammerhed issue #484.\nWaiting for update of testcafe-hammerhead version in package.json.\n. Fixed via Type automation refactoring commit - testcafe-hammerhead updated to ^7.0.0\n. lgtm\n. At this moment natively only Firefox, unlike other browsers, doesn't fire 'click' event, if element under cursor has changed during 'mousedown' event handling.\n. Blocked by testcafe-hammerhead-issue-199\n. FPR\n. @helen-dikareva, there was a little mistake with this name, correct name should be t171129-index.htm. Do you mean, t171129.html is enough for \"single-page\" tests ?\n@AlexanderMoskovkin, in that case these tests will be ungrouped in travis log. They will lose common describe('Regression tests') description.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin, FPR\n. FPR\n. FPR\n. ping @inikulin\n. I'm working on this.\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. @inikulin, this PR is based on the latest commit in the master branch. Did you mean the latest open PR ?\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. These [ONLY:...] entries have been deleted from testcafe test names.\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. \\cc @AlexanderMoskovkin\n. After discussion with @AlexanderMoskovkin we decided to leave as is. Waiting for loaded iframe was just side effect of obsolete runner behavior, and cause has been eliminated while refactoring.\n. At the current moment most falling tests are (descending on occurence):\n\nContent-editable (/fixtures/runner/content-editable/api-actions-content-editable-test/index-test.js)\n\n[x] Test: only dom element as a parameter\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: difficult inverse select\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: $startElement and $endElement\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: without args\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n\nSelect (/fixtures/runner/api/select-test/index-test.js)\n\n[x] Test: positive offset as a parameters\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: startLine, startPos less than endLine, endPos as a parameters\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: zero offset as a parameters\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n\nCross-domain - in-iframe (/fixtures/runner/cross-domain/in-iframe-test.js)\n\n[x] Test: shared data\n  message: failed, expected argument to be truthy, was: false\n  expected: true\n  actual: false\n\nCross-domain - run-test (/fixtures/runner/cross-domain/run-test.js)\n\n[x] Test: run test\n  message: failed, expected argument to be truthy, was: false\n  expected: true\n  actual: false\n\nPress (/fixtures/runner/api/press-test.js)\n\n[x] Test: B253200 - TestCafe doesn't emulate browsers behavior for press \"enter\" key on the focused HyperLink editor (link with javascript)\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n[x] Test: B253200 - TestCafe doesn't emulate browsers behavior for press \"enter\" key on the focused HyperLink editor (link with href)\n  message: Timeout is exceeded\n  expected: true\n  actual: false\n\nDom utils (fixtures//core/dom-utils-test.js)\n\n[x] Test: isIFrameWindowInDOM\n  message: Timeout error\n  expected: true\n  actual: false\n\nThe list can be extended.\n. Thanks @AndreyBelym, i updated comment above.\n. EDIT: Found next behavior in IOS:\nIf safari just opened the page and we have called window.scrollTo () method, the page will scroll to specified coords, then to the top position, then to last scroll position (if we were on this page before) and after this all it will scroll again to our specified position. If we have immediatly called window.scrollTo() method  several times after page has been opened and without (or with small) delay between calls, this odd chain will be executed after our last method call. This is a part of odd scrolls, which behavior i can describe.\nAnother case is independent from first one: browser can duplicate our calls window.scrollTo(), performing them himself randomly without JavaScript after us.\n. Discovered the following behavior on the Android simulator platform:\nOverriding a native dialog method, like in the example below, will make the native environment call the overriden method. This leads to an unexpected dialog error being raised, and tests where we check that an error wasn't raised fail.\nwindow.alert = function() {\n};\nThis is only reproduced on saucelabs VM's with automated testing in the WebView browser.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin, FPR\n. \\cc @VasilyStrelyaev, check the comment, please\nhttps://github.com/DevExpress/testcafe/pull/476/files#diff-15454f369c87c574b6885fdfb5bd6489R99\n. @inikulin, mocha timeout affects the \"before all\" method, in other words it has the same timeout as tests, so functional tests task falls while connecting to Sauce Labs and starting VM.\nAlso, Sauce Labs virtual machines are configurated so the maximum running time is 30 minutes.\nWe had cases, when two machines have already worked for about 25 minutes and the third just started. The result - browsers are turned off in the middle of tests\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin, FPR\n\\cc @helen-dikareva \n. @helen-dikareva, 2 times on travis, more than 10 times on local machine with Sauce Labs. Generally changed assertion part - it became async.\n. @inikulin, what about property hasFocus or isFocused for Element ?\njs\n{\n  hasFocus: Hybrid\n}\n. @AlexanderMoskovkin, i think it's easier\nUsing this\njs\ntest('Test', async t => {\n// defining ourElement\n ok(ourElement.focused);\n});\ninstead of\n``` js\nconst getFocusedElement = Hybrid(() => document.activeElement);\ntest('Test', async t => {\n// defining ourElement\n var focusedElement = await getFocusedElement();\nequal(focusedElement, ourElement);\n});\n``\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Now client tests status badge should look like:\n [![Sauce Test Status](https://saucelabs.com/browser-matrix/testcafe-pr.svg)](https://saucelabs.com/u/testcafe-pr)\n. \\cc @inikulin, @AlexanderMoskovkin \n. @AlexanderMoskovkin, yes, at current moment [this](https://github.com/DevExpress/testcafe/pull/544#issuecomment-220554210) badge, that i put above, displays latest statistics ontestcafe-pr(all browsers were on badge, when i posted).\n. @testcafe-build-bot \\retest\n. \\cc @VasilyStrelyaev, check the comment please. Anyway, i will retest at least 5 times.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin, FPR\n. I'm working on this.\n. Looks like the problem gone. I'll open this issue, if it appears again\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. FPR\n. @VasilyStrelyaev, FPR\n. It looks like MS Edge got stuck, i'll investigate this.\n. lgtm\n. lgtm\n. FPR\n. \\cc @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. rebased, please review\n. FPR\n. I've opened task with this issue on the Babel tracker\nhttps://phabricator.babeljs.io/T7436\n. I've opened PR with workaround to discuss this problem in Babel repository.\nhttps://github.com/babel/babel/pull/3545\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. I'll do this in the context of https://github.com/DevExpress/testcafe/issues/437\n. We decided to get rid ofif (e.isFakeIEEvent)check. See https://github.com/DevExpress/testcafe/pull/748#issuecomment-244110031\n. @AlexanderMoskovkin, i think, there is no need for this approach anymore (cause we merged https://github.com/DevExpress/testcafe/pull/759, separeted legacy and next-api, ). I think we should open separate PR when newbeforeUnload` will be ready (we can take tests for it from this PR).\n. @AndreyBelym wrote:\n\nAccording to the old docs, the argument of act.press must be a string. So it violates our API, and likely we need to fix the test but not the testcafe\n\nSo we decided to notify tests owners.\n. In private discussion with @inikulin we decided to notify test owners. Thanks @AndreyBelym.\n. I'm working on this.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. ping @inikulin\n. @testcafe-build-bot \\retest\n. FPR\n. @AlexanderMoskovkin, my mistake, forgot to update title of this PR and commit message.\n. ping @AlexanderMoskovkin \n. ping @inikulin \n. lgtm\n. FPR\n. ping @AlexanderMoskovkin \n. FPR\n. @testcafe-build-bot \\retest\n. rebased, but not related tests still blink\n@testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. I think, this line is redundant. I'm checking without this, if it will be ok, we should get rid of this line in next another PR\n. > I think, this line is redundant. I'm checking without this\nTests are ok, overall.\n@inikulin, you know better, what we should do.\n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. lgtm. Thanks\n. \\r- Just few minor remarks, i explained in private\n. lgtm\n. @AlexanderMoskovkin, yes, the arguments still ok.\n. After some investigation of e.isFakeIEEvent we came to a conclusion, that we don't need this check generally, because next check is enough for IE browsers.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n\\cc @VasilyStrelyaev, check please\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. Thanks. Somebody, merge please.\n. lgtm\n. The approach is more common, as it was before. I like it\n. @AlexanderMoskovkin, just rebase on master\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. ping @VasilyStrelyaev \n. ping @inikulin \n. @testcafe-build-bot \\retest\n. FPR\n. Cause @inikulin isn't around, \\cc @churkin, review please\n. Rebased. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. I'll place only 'test-functional-travis-legacy' in travis.yml for a moment, because this task isn't tested on Travis CI for now (forgot about that)\n. @testcafe-build-bot \\retest\n. FPR (do not merge)\n. ping @helen-dikareva \n. FPR\n. FPR\n. FPR\n. FPR\n. FPR\n. \\cc @inikulin \n. ping @inikulin, @VasilyStrelyaev \n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. > Multiply\nImho, there should be  action speed option priority upon testController speed option and they should be independent. \nIs possible a scenario where all actions are slow and one should be executed quickly ? :\njs\ntest `my test` (async t => {\n    t.speed = 0.5;\n    // ... bunch of slow actions\n    await t.click({ speed: 1 });\n    // ... bunch of slow actions\n});\n. @AndreyBelym, can we add the test for this behavior ?\n. Hi @eriklharper! \nIt's hard to determine the cause of the problem because we don't see your page markup. Could you please provide the page markup, or page url, if it's deployed ?. @eriklharper, thank you for information! I have reproduced problem and created separate issue, you can track it here,\nAs a temporary workaround you can use \" --skip-js-errors\" launch option:\ntestcafe --skip-js-errors chrome test.js. @crudo, we have fixed this in our new version (it's with alpha tag now). Please check whether the fix works with your site. To install fix, run npm install testcafe@alpha.\n. Hi @s-adachi2016 \nThank you for your reply. Let's try TestCafe via CLI. For this, follow next steps:\n1) Create a temporary directory:\ncmd\nmkdir temp\ncd temp\n2) Create the test.js file in the temp directory:\n`` js\nconst assert = require(\"assert\");\nimport {Selector} from 'testcafe';\nconst getElementById = Selector(id => document.querySelector(#${id}`));\nfixture('Example page')\n    .page('http://devexpress.github.io/testcafe/example');\ntest('Type the developer name, obtain the header text and check it', async t => {\n    await t\n        .typeText('#developer-name', 'John Smith')\n        .click('#submit-button');\nconst articleHeader = await getElementById('article-header');\nconst headerText = articleHeader.innerText;\n\nassert.equal(headerText, 'Thank you, John!');\n\n});\n```\n3) Install TestCafe:\ncmd\nnpm install -g testcafe\n4) Run TestCafe via CLI:\ncmd\ntestcafe chrome test.js --ports 1337,1338\nAlso try to set-up your firewall: add TestCafe to exceptions and open ports that were specified in the command line.\n. @s-adachi2016, thank you for your reply. \nIt seems that nodejs applications on your machine don't have access to the resources without proxy settings. Please perform the following steps to check this. Once we get the result from you, we will be able to continue the investigation of this issue.\n1) Create a temporary directory:\ncmd\nmkdir test-request\ncd test-request\n2) Create the request.js file in the test-request directory:\n``` js\nvar http = require(\"http\");\nhttp.get('http://www.example.com', function (res) {\n    var statusCode = res.statusCode;\nif (statusCode !== 200) {\n    console.log(` Request Failed.\\n Status Code: ${statusCode}`);\n\n    res.resume();\n    return;\n}\n\nconsole.log(` Request Success.\\n Status Code: ${statusCode}`);\n\n});\n```\n3) Run request.js via Node.js:\ncmd\nnode request.js\nPost the output here, please.\n. Thanks for details. We need an additional time, to investigate this.\n\\cc @churkin, please research it.\n. I'm working on this. I've checked this on the current alpha version - it works properly. I'll close the issue. Hi @ClaytonAstrom.\nThank you for the report. We have reproduced the problem and we are working on it.\n. Waiting for solving https://github.com/DevExpress/testcafe-hammerhead/issues/942\n. @ClaytonAstrom, we have fixed this in our new version (it's with alpha tag now). Please check whether the fix works with your site. To install fix, run npm install testcafe@alpha.. @ClaytonAstrom, it's great news! Can we close the issue ?. I'm working on this\n. afaik we can use SelectorResultPromise only as 'actual' argument, not as 'expected', in nutshell we can't write something like next:\n``` js\ntest('.eql() assertion', async t => {\n    const el1 = Selector('#el1');\n    const el2 = Selector('#el2');\nawait t.expect(el1.getStyleProperty('float')).eql(el2.getStyleProperty('float'));\n\n});\n```\nJust want to know, what do you think about it ?\n. @inikulin, irl i saw when mixed up 'actual' and 'expected' (not here), only it.\n. \\cc @MarinaRukavitsyna, check please\n. FPR. FPR. ping @AlexanderMoskovkin . I'm working on this. ping @helen-dikareva, @MarinaRukavitsyna . FPR. I'm working on this. We need to dispatch events with event.key and event.keyIdentifier (Safari) properties when simulating keyboard events. At the current moment we have an empty values for these props - https://github.com/DevExpress/testcafe-hammerhead/blob/master/src/client/sandbox/event/simulator.js#L334. \n@miherlosev, i decide to make a dictionary with keyCodes as keys and key\\keyIdentifier as value in the context of testcafe-hammerhead.\nThis will help to solve problem with angular2 and humble.\nAnother situation with other 3 sites - jquery keypress handler executes correctly, but script, which adds note to list, is not loaded yet at the moment of t.pressKey execution. There is same situation on the original resources (without testcafe-hammerhead). FPR. FPR. FPR. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. \\cc @AlexanderMoskovkin, may we try to use this approach ?. FPR. @AlexanderMoskovkin, yes, here it's.\nIframe location path always should contain i! postfix, @LavrovArtem can approve it\n. I'm working on this.. FPR. FPR. FPR. lgtm\n\\cc @VasilyStrelyaev . Working on it. Hello Vitaly !\nThank you for reply. Specify, please, has your browser special network settings like proxy or not ? Is TestCafe added to your firewall exceptions ?\nAt first we need to know, whether node.js has the access to the network. Run next steps, please:\n1) Create a temporary directory:\ncmd\nmkdir test-request\ncd test-request\n2) Create the request.js file in the test-request directory:\n``` js\nvar http = require(\"http\");\nhttp.get('http://www.example.com', function (res) {\n    var statusCode = res.statusCode;\nif (statusCode !== 200) {\n    console.log(` Request Failed.\\n Status Code: ${statusCode}`);\n\n    res.resume();\n    return;\n}\n\nconsole.log(` Request Success.\\n Status Code: ${statusCode}`);\n\n});\n```\n3) Run request.js via Node.js:\ncmd\nnode request.js\nPost the output here.\n. Hi!\nThanks for log, we need some time to investigate this behavior.\nPlease, bear with us.. >> I don't see any proxy settings in browser, but most probably we have it for all outgoing traffic somewhere on network level.\nIf i correctly understand, you have LAN settings in Internet options like this, right ?\nAbout firewall and script result - it looks like dns requests are blocked for node.js application (meanwhile they are allowed for browser). Can you run cmd with administrator privileges ? If yes, try to re-run script above and also run next command:\nping www.example.com. Hi @andrewdang17 \nDid you try to run this snippet, that i recommended ? If no, please run it, cause your problem looks little different. It would be worth, if you also run this snippet and post the result here.. @andrewdang17 , It's possible. Please, try perform request from my first reply with your page - http://localhost/3000. @andrewdang17, in that case it's hard to determine the cause of this behavior. Can you provide a link to your project page, if it's deployed ? You can do it privately.. After running tests it was found, that the problem is actual for the most of browsers, so title changed.. Target iframe changes src after page is opened. TestCafe getting stuck, when try to perform an action on iframe with \"old\" src, while iframe has the new value as src. It's due to the fact, that ParentDriverLink of the first iframe window has established connection with top window Driver, and it begin executing next command at the same time, when iframe src changes (in most of cases on this page). As the result, top window Driver infinitely waits for response from previous iframe content window.. @inikulin, of course. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. \\cc @AlexanderMoskovkin \nThe original issue will reproduce with new page markup, i've checked it.. Hello Daniel ! Thanks a lot for report. We reproduced the issue and have found, that Firefox 51 doesn't allow to call method setSelectionRange for input elements, which type isn't text. \nWe are working on it, i'll let you know, when it'll be fixed.. Hi Daniel! We have fixed this issue in our new version (it's with alpha tag now). Please check whether the fix works with your site. To install fix, run:\ncmd \nnpm install testcafe@alpha.. Hi Paul.\nAt current moment TestCafe already has the mechanism, which is called \"request barrier\". It waits after each action until xhr requests are completed, and only then allows to perform next action (click, hover etc). I have a question - what we should do with iframes ? I see three variants:\n\nWe execute onEachPage by default in the main window and also have an option for iframe selector\n\njs\nfixture.onEachPage(hookFn)           // main window\nfixture.onEachPage(hookFn, selector) // `selector` is string or `Selector` object\n\nWe run hook in the window, where last command was executed\nJust:\njs\nfixture.onEachPage(hookFn)\nMixed variant - second variant by default, and option for main window or selector\n\njs\nfixture.onEachPage(hookFn)                                              // last execution context\nfixture.onEachPage(hookFn, { switchToIFrame: false })                   // main window context\nfixture.onEachPage(hookFn, { switchToIFrame: true, selector:selector }) // selector context\nFor me last variant is little complicated. I faced with situations, where most of actions are executing in iframe (portable device emulators). Currently client driver fixes active window and send the command from server to it, so i prefer second variant, cause it's easier to realize.\nWhat do you think /cc @inikulin, @umaar, @p-bakker ?. @umaar, @p-bakker, we have faced with some ambiguity during implementation of this feature, so i would clarify some information about it.\n1. Shall we restart hook function or throw an error, if reload has occurred during hook execution ?\n2. Also content of hook function is under question - do we really need to have an ability to run actions like click and server-side expressions inside this hook, or it's enough only to run ClientFunction or\\and perform waiting for specified selectors ? In last case it would be like:\njs\ntest.waitOnEachPage(condition)\nwhere condition variable may be array which contains Selector objects, ClientFunction and String objects, or just an object of one of types above\njs\ntest.waitOnEachPage([Selector('#target1'), Selector('#target2')])\ntest.waitOnEachPage(ClientFunction() => {/*some code*/});\n``. @AlexanderMoskovkin, we can specify proxy port in the url, if it necessary. I mean, change 'x.x.x.x' to 'x.x.x.x:yyyy' in these snippets (in the docs in the future).. @umaar, i'm sorry for late response, afaik it't doesnt relate to SauceLabs running, because i've reproduced it on local machine. I've created separate issue for investigating this problem - https://github.com/DevExpress/testcafe/issues/1336\n![Screenshot](https://content.screencast.com/users/GeorgeZA/folders/Jing/media/4cee9059-8ef4-433c-b1a4-d85963f6cb75/2017-03-21_1458.png). try to rebase. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot . As i expected, gh-1154 test crashes TestCafe without fix - [link](https://travis-ci.org/testcafe-build-bot/testcafe/jobs/200320045#L363). @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. \\cc @AlexanderMoskovkin . We should come up with another approach, i will reopen when it will be ready. Lines marked with exclamation point are related to asyncToRegenerator calls (it replacesasync` keyword in the original code). It placed in the first line of transpilled code\n```js\n'use strict';var _promise = require('D:\\Work\\testcafe-phoenix\\node_modules\\babel-runtime\\core-js\\promise.js');var _promise2 = _interopRequireDefault(_promise);var _help = require('./help.js');var _help2 = _interopRequireDefault(_help);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new _promise2.default(function (resolve, reject) {function step(key, arg) {try {var info = genkey;var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return _promise2.default.resolve(value).then(function (value) {step(\"next\", value);}, function (err) {step(\"throw\", err);});}}return step(\"next\");});};}\nfixtureFixture.\npagehttp://devexpress.github.io/testcafe/example/;\ntest('test', (() => {var _ref = _asyncToGenerator(function* (t) {\n        yield (0, _help2.default)(t);\n    });return function (_x) {return _ref.apply(this, arguments);};})());\n```\n@inikulin says, that it should be imported, not placed in the code.. During testing approach, which @inikulin recommended, i've found that odd lines still here:\nat <anonymous> (D:\\work\\testcafe-phoenix\\gh-1226\\help.js:2:11)\nat F (D:\\work\\testcafe-phoenix\\node_modules\\core-js\\library\\modules\\_export.js:35:28)\nat exports.default (D:\\work\\testcafe-phoenix\\gh-1226\\help.js:3:42)\nat <anonymous> (D:\\work\\testcafe-phoenix\\gh-1226\\node.test.js:7:11)\nIt's due to the fact, that transpilled require and export keywords are shifted too.. It won't work, re-export still broken.. Asked for help on Babel forum. Anyway, i'm still working on it.\nhttps://discuss.babeljs.io/t/passperpreset-option-brokes-transformruntime/919. @testcafe-build-bot \\retest. @inikulin, i've got some problems with promises in server tests on v0.10. @inikulin, ok, we can do it, but it seems, that last approach works too.. @testcafe-build-bot \\retest. FPR. Duplicate of https://github.com/DevExpress/testcafe/issues/739. Some information about work implementation with this type of input:\n1. Internet explorer 11\n\n2. Firefox 52 && 54.0a2\n\n3. Edge older than 13\n\nWork with this type isn't implemented. If we try to get input type, browser will return 'text'.\n\n\nEdge since 13\n\nEdge has native popup control with spinners for editing time, which is showing on click on the input. It allows to select only correct time, because it's not allowed to directly type  value to input . If input has attribute specified limiters like min and max, it limits the popup spinners. Input raises \"change\" and \"input\" events on popup closing and only if actual value has changed.\n\n\nChrome \n\nChrome allows to directly type to input, so value can be changed partially, if input was filled before. If value limits exceeded, input just show hint, when are under mouse cursor. Events are raised when the value has been filled by 'HH:MM' template as minimum and even when value is changed.. keyword async brokes lines in transpilled test file\nBefore\nhttps://gist.github.com/georgiy-abbasov/7955e6d3494168afe150a70aa8da0728\nAfter\nhttps://gist.github.com/georgiy-abbasov/c679f3a512123d15723f099302d21da2\n\n\nAs workaround it's possible to use functional expression instead of function declaration.\nBefore\nhttps://gist.github.com/georgiy-abbasov/82f9b8a4660d8b1484b8e0bf76032f02\nAfter\nhttps://gist.github.com/georgiy-abbasov/1b931e5b36ae857f471cdb3d869dcdd0\nIt's still investigating\n. At the current moment we have only 2 (as max) concurrent browser sessions on BrowserStack, which is strange, cause i have information from @AlexanderMoskovkin , that this count should be greater. @testcafe-build-bot \\retest. FPR. \\cc @inikulin, @helen-dikareva, @AndreyBelym . Waiting for https://github.com/DevExpress/testcafe-hammerhead/pull/1050. Waiting for https://github.com/DevExpress/testcafe-hammerhead/issues/1078. >> Waiting for DevExpress/testcafe-hammerhead#1078\nWe decided with @AlexanderMoskovkin to ignore that behavior in this PR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Waiting for https://github.com/DevExpress/testcafe/pull/1383. Obviously waiting for https://github.com/DevExpress/testcafe/pull/1414. @testcafe-build-bot \\retest. FPR. Last check is ok. \\cc @inikulin . Done. @testcafe-build-bot \\retest. It works in chrome-dev tools on Ubuntu 16.04 . Also it works on OS X with node js 7.8.0, chrome dev 59 and chrome canary 59\nhttps://screencast.com/t/xOZc7KWEL. Comparsion\nPrevious approach\nhttps://www.screencast.com/t/sYt1uzw9F\nhttps://www.screencast.com/t/BTG4SKdle\nCurrent approach\nhttps://www.screencast.com/t/qaqhp0eWq4\nhttps://www.screencast.com/t/YFKdf7pF. FPR. \\cc @DevExpress/testcafe-docs\nFPR. FPR. FPR. @testcafe-build-bot /retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Chrome 58 already released, but it's not present in SL platform configurator yet, only beta is available (it will be removed from Gulpfile.js if PR willl be approved).\n\\cc @AlexanderMoskovkin, @helen-dikareva . >> update the config to use beta version on Windows and latest version on MacOS (as it is now)\nOk. @inikulin, it's not relate to PR, i am working on it. No, just fix the test. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. It relates to testcafe-hammerhead - https://github.com/DevExpress/testcafe-hammerhead/issues/1101. @AlexanderMoskovkin, it's not relate to PR, Firefox has been updated to version 53 on Sauce Labs side. I'm investigating now. Here (this build) is green too. It's blinking test. No, this is the simple template for comparing TestCafe output if the test fails. \nIOW, it's defined in TestCafe right here\nhttps://github.com/DevExpress/testcafe/blob/master/src/legacy/test-run-error/templates.js\n. For the same reason as the file get-test-error.js is dedicated too. I thought this variant better, than overflowed setup.js file.\n. Can we discuss in private ?\n. Not yet. \\cc @MargaritaLoseva, take a look, please.\n. This test should run only in chrome too.\n. Nope, forgot to fix this typo.\n. I should explain some of nuances about the keypress event. After keydown, in Safari this event has the same value of keyCode property as the value of key charCode. In other words:\njs\ne.type === 'keypress' && browserUtils.isSafari && event.keyCode === event.charCode // true\nAnd here e.keyCode is  in [231, 94, 8710, 730];\nIn Firefox there is another situation:\nkeyCode property is 0, and charCode is simular as the keycode, which was before in keydown event\njs\ne.type === 'keypress' && browserUtils.isFirefox && !event.keyCode && event.charCode // true\ne.charCode is in  [67, 73, 74, 75]\n. Yes, it is. Source page will not process this keypress anyway, but browser will. I forgot this when simplified conditions. I can use this \nconst KEYPRESS_CHARCODES = [231, 94, 8710, 730];\n. >  I think we should not prevent any key events if shift+ctrl or command (on Mac) keys are pressed. \nI'm totally agree.\n@inikulin, what do you think ?\n. ping @inikulin\n. Unfortunately this doensn't work. Object command comes via xhr, so it's just key\\value object, not instance of class.\n. If the \"test\" was successful , this line leads to err object, which has no errMsg property , and doesn't matter that we are throwing here -  a string object or an error \n. Original problem was able to reproduce, when we were declaring and initializing a variable after a call chain. \nThere is no specific reason to use const instead of var\n. Simple error will have it relational callsite, in other words it would be:\njs\n\" > 8 |        throw new Error('yo') \\n\"\nWe need to track method1 (keep it on top), because its callsite was wrong originally.\n. I use this flag, for keeping error here to preserve this property for callsite rendering\n. Ok. I'll render callsite another way.\n. I think, we should replace this expression too\n. I've got error on IE 11 when tested without this condition locally with Sauce Labs - \"Access is denied\"\nhttps://assets.saucelabs.com/jobs/ee41e00cebdf41c48f42ddb9ebfaff6f/0037screenshot.png\n. I agree, that this.eventArgs.options and this.eventArgs.point should be recalculated, but click should be raised on previous element.\n. !topElementEventArgs.element.contains(this.eventArgs.element) - there is no scenario for this condition, my fault.\n. We should check whether target element is changed position in the DOM. If it changes parent, but still on previous place, click doesn't raised natively in all browser (exc. Firefox)\n. My fault, we don't need deep comparsion in this case (incorrectly assumed that it can be useful in the future in other places).\n. @VasilyStrelyaev, in common these elements are input elements (they are placed for taking input data from user).\nCan we pick an another common word or words combination for grouping these elements? \n. The word editor  has a narrower meaning (more specified) in my opinion. \n@VasilyStrelyaev, can we use the word \"intake\" ?\n. > Call it isEditableFormElement\nThat's better. Thanks @inikulin \n. There is no case. domUtils.getParents returns empty array, if argument was top element\n. Nope:\n['firefox'].indexOf('firefox-osx') // returns -1\n. In that case this line will be another:\nconst expectedEvents = ['target2 mousedown', 'target2 mouseup', 'target2 mouseup'];, \nSo, you think, that we shouldn't check, was even raised event on appended element ?\n. Yes, you're right.\n. Small typo\n. Unfortunately no. Active element can change after performing mousedown.\n. My fault, i've placed them correctly for now.\nI've missed some details in issue description, so i changed it to be clear, what we fix.\n. It was in original test and it caused to a problem (reason)\n. I got timeout error when testing this test in loop locally with Travis. I repeated it and i've got this error again (looks like it's better to increase selectorTimeout too)\n. Yes. Looks like legacy-API pass assertions like:\neq(200, '200')\n. I know, just want to use these variables just  as targetElement, topElement in _getElementForClick method, cause it simply. I guess, i should define these variables in this method instead of passing ?\n. I prefer static method\n. We decided with @AlexanderMoskovkin  to get rid of this timeout, because original reason of timeout error isn't in this PR\n. Sorry, i've messed it up. The top\\left margin must be a half of the parent container height\\width, but not greater than 'MAX_SCROLL_MARGIN'. I'll rollback this change.. We already have getter function with name 'key'  - link. Original page doesn't check keypress event. As well Safari doesn't fill 'keyIdenfier' property in keypress event while pressing 'enter'. There is ambiguity, i acknowledge, but i decided to leave it as is, cause it will be completed [asap] (https://github.com/georgiy-abbasov/testcafe-phoenix/commit/4e18b45ac589a263735045673a3eb07c2cc2e441). selected | Boolean | Indicates that <option> element is currently selected. For other elements, undefined.  See HTMLOptionElement.\nIs the '  See HTMLOptionElement.' sentence unnecessary in that case ?\n. To get rid of this function, cause it implemented in bowser package\nhttps://github.com/DevExpress/testcafe/pull/1070/files#diff-dec5c80a08927d045521c13f0e9ba927L25. For expression 'shift+!', in case with second symbol '!' - key will be '1', originKey will be '!'. key needed to retrieve the button, what we actually press (button '1'), originKey needed to fill event.key property or event.keyIdentifier. Exactly! Thanks. @AlexanderMoskovkin, i think there is no need for the test, cause original reason for changing this rule was this test - it was failed. Arguments of  _calculateEventArguments changed. We used this.currentCharCode, this.currentCharCode as args before, so i see no reason to pass object field into non static method.. We extract symbols of the typing text into the key, so we can face only with '\\r\\n' symbols, which should be defined as 'enter' key. It was a mistake, we have this test already. I've got \"'keyIdentifierRequiredForEvent' is not defined\" message when linting without this comment. I decide to stay on @AndreyBelym remark, cause in this case it will be look next:\n```js:\n_mouseup () {\n        var elementForMouseupEvent = browserUtils.isIE ? this.parentSelect : this.eventsArgs.element;\n    eventSimulator.mouseup(elementForMouseupEvent, this.eventsArgs.options);\n\n    if (browserUtils.isIE && this.clickCausesChange)\n        this.parentSelect.selectedIndex = this.childIndex;\n\n    var unexplainedCondition = browserUtils.isFirefox || browserUtils.isSafari ||\n                                       browserUtils.isChrome && browserUtils.version >= 53;\n\n    var shouldSimulateInput = unexplainedCondition && this.clickCausesChange;\n\n    var shouldSimulateChange = (unexplainedCondition || browserUtils.isIE) && this.clickCausesChange;\n\n    if (shouldSimulateInput)\n        eventSimulator.input(this.parentSelect);\n\n    if (shouldSimulateChange)\n        eventSimulator.change(this.parentSelect);\n\n    return Promise.resolve();\n}\n\n``\nOnly if you can suggest a meaningfull name forunexplainedConditionvariable\n. They will obtain automatically, retrieveSourceMap:argument is used as custom implementation of this process insteadsource-maps-supportdefault.. Maybe it should be called \"trusted-proxy\" ?. Misseddescribeannotation. Ivan's remark:\nmethod should be calleduseProxy`\njavascript\nrunner.useProxy(). Yes, you're right.. ",
    "helen-dikareva": "I'm working on this\n. Closed by https://github.com/DevExpress/testcafe/pull/187\n. lgtm\n. lgtm\n. lgtm\n. Rename is done. Please merge.\n. Use  var domUtils           = testCafeCore.get('./utils/dom');  instead of  var DOM           = testCafeCore.get('./utils/dom'); \n. lgtm\n. Now -f  for --files and -f for --fgrep\nAnd I think shortcuts for \n-g, --grep            only run tests matching \n-f, --fgrep            only run tests containing \n-fg, --fixture-grep   only run fixtures matching \n-ff, --fixture-fgrep   only run fixtures containing \nis really easy to confuse\n. lgtm\n. I'm working on this\n. Closed by https://github.com/DevExpress/testcafe/pull/187\n. I'm working on this\n. All problems are not related to definition of 'isWebKit' or 'isSafari' was solved\n. We'll push required changed after testcafe-hammerhead update. @miherlosev \n. No, to facilitate merging I'll push it after first part of https://github.com/DevExpress/testcafe/issues/56 which almost ready \n. lgtm\n. FPR\n. FPR\n. I'm working on this\n. What about steps with empty test names? For all of them will be saved pageLoad.png\n. May be we don't need both of screenshotCapturer.capture and screenshotCapturer.captureForError. Because they are internal and do the same thing.\n. They just put result in different path. E.g., we could have 'forError' argument. But I have nothing against  'capture' and 'captureError'.\n. \\r-\n. lgtm\n. I'm working on this.\n. I'm working on this.\n. I'm working on this.\n. It's dublicate of https://github.com/superroma/testcafe-phoenix/issues/136\n. It's already fixed https://github.com/superroma/testcafe-hammerhead/pull/56\n. I'm working on this\n. I'm working on this\n. I'm working on this\n. We'll fix it after https://github.com/superroma/testcafe-phoenix/issues/142\n. I'm working on this\n. lgtm\n. FPR\n. Done\n. in result it's dublicate of https://github.com/superroma/testcafe-phoenix/pull/150\n. Done\n. FPR\n. FPR\n. FPR\n. It's done, but wait for some commits from @AlexanderMoskovkin\n. What should be wait and waitForElement parameters?\nShould waitForElement(selector, [timeout]) has timeout as required parameter or not?\n. And what about wait command? We still need predicate for it?\n. Where predicate will be evaluated: on server or on client?\n. ok, thanks for your clarification\n. @inikulin  We check currentError.actual, currentError.expected for failed assertions. We expect escaped dom-elements' descriptions https://github.com/helen-dikareva/testcafe-phoenix/commit/96b385f54cd0981abf3f24510a66bb0dc172cdee#diff-ea383fc53abbf39a18fcd9ffa701c855R215 \n. FPR\n. lgtm\n. FPR\n. lgtm\n. lgtm\n. Sorry, it's done. FPR\n. I don't really like that path for compiler is 'src/compiler/index.js' by default LegacyCompilerAdapter class (not Compiler) is exported.\n. lgtm\n. lgtm\n. Wait for version testcafe-hammerhead with fix https://github.com/DevExpress/testcafe-hammerhead/issues/271\n. FPR\n. https://github.com/DevExpress/testcafe/pull/187/files#diff-81b2ac50068bd4a9ca12caedf8146fb8R740\n. FPR\n. FPR\n. FPR\n. lgtm\n. lgtm\n. changes are in recorder only\n. lgtm \n@VasilyStrelyaev please check new test names\n. I'm working on this\n. Fix done, we're waiting for chrome 47 version on sauce labs\n. /cc @inikulin @AlexanderMoskovkin \n. Not yet. Some not-trivial case of using of jQuery left.\n. Check list was changed, I'll specify items after merging of PR. \n. In this PR:\nGet rid of util jquery functions using\nGet rid of jquery using for create, select and manipulate with dom-elements\n. FPR\n. ping @inikulin @AlexanderMoskovkin\n. FPR\n. Should we wait for arrayUtils in testcafe-hammerhead for this PR or we'll change it later? @churkin \n. Ok. Last check please and may merge @inikulin \n. FPR\n. lgtm\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. Argh, tests fails only with @testcafe-build-bot When I try to reproduce this with manual session on SauceLabs thay absolutely stable.\nDon't look at this I'll do disgusting things to stable it)\nWait for my FPR comment\n. @testcafe-build-bot \\retest\n. FPR\n. Sorry, I forgot about approved by Vasily comment. Now it's FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR again\n. lgtm\n. - [x] scroll\n- [x] move\n- [x] press\n- [x] rclick\n- [x] drag\n- [x] hover\n- [x] select\n- [x] click\n- [x] dblclick\n- [x] type\n. What about t.ctx: it'll be shared between test and role or not?. If we run test step-by-step we will continue debugging in role? And after?\nOr if  debug() was set in role, will we continue debugging test?. Wait for ASP tests on farm\n. All tests done. @AlexanderMoskovkin please review\n. It's dublicate of https://github.com/DevExpress/testcafe-hammerhead/issues/340\n. \\r-\n. lgtm\n. Let's make sure that tests are stable\n. @testcafe-build-bot \\retest\n. lgtm \nonly let @VasilyStrelyaev check strings\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @VasilyStrelyaev please check test name.\nI think we should add issue ID to test name.\n. lgtm\n. FPR\n@AndreyBelym please review too\n. lgtm\n. \\r-\nall the rest's nice, merge please\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. /cc @AndreyBelym please review\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Blinking tests due to known Hammerhead problem https://github.com/DevExpress/testcafe-hammerhead/issues/379\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. It seems it's time to modify them\n. Wait for my FPR comment\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. ping @AlexanderMoskovkin @AndreyBelym \n. /r-\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. skipDrag flag was removed because of https://github.com/DevExpress/testcafe/issues/337\n. We think MouseOptions is not quite good title for object tha contains offsetX, offsetY and modifiers\n. Ok, I renamed it\n. FPR\n. We fixed it in https://github.com/DevExpress/testcafe/pull/342\n. we already have https://github.com/DevExpress/testcafe/issues/340\nI'll do it in this PR, so please wait for my FPR comment again\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. FPR\n. FPR ping @AlexanderMoskovkin @AndreyBelym \n. FPR ping @AlexanderMoskovkin @AndreyBelym \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR \nplease review @AndreyBelym @inikulin \n. /r-\n. lgtm\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. Ok, so wait for my refactoring clickAutomation and FPR commit\n. FPR\n. FPR\n. Changes are OK. But these tests make me sick, I was sure that thay are stable. Did you make rebase before making PR?\n. I think test's behavior is not connected to PR so they still unstable. I'll try to fix it later in  https://github.com/DevExpress/testcafe/pull/376\n. \u0421omments checked by tech writers\n. Wait for my FPR comment\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @VasilyStrelyaev check comments please\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin  In this commit we're using testcafe-hammerhead 6.0.0\nLet's use it in https://github.com/DevExpress/testcafe/pull/383 \n. I forget about this. Now it's done.\n. @testcafe-build-bot \\retest\n. FPR\n. please merge\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @AlexanderMoskovkin  Can we leave version without fix ESLint errors in this PR?\nOr I should fix these blinking tests now?\n. Yes, I checked it on our CC task 'TESTCafe ASPxperienceDemos tests - Get Rid Of JQuery '\n. lgtm\n. I'm working on this\n. @VasilyStrelyaev please check tests\n. I don't like naming like this 'T171129-index.html'\n. I agree with @AlexanderMoskovkin structure and e.g in subfolder 'T171129' page can be just 'index.html'\n. lgtm\n. lgtm again\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. \\cc @AndreyBelym \n. lgtm\n. I think we just need add this check in 'positiveNumber' validator src\\test-run\\commands\\options.js\n. I'm working on rclick now\n. I'm working on dblclick now\n. I'm working on hover now\n. I'm working on type now\n. I'm working on select now\n. I'm working on wait and waitElement now\n. I'm working on navigateTo now.\n. I'm working on takeScreenchot now.\n. @inikulin In context of takeScreenchotCommand we decided to implement taking screenshots on fails. What do think should we take screenshots for errors are raised on server (error in test code, including assertion errors) or not?\n. Let's discuss @DevExpress/testcafe \n. I'm working on resizeWindow\n. We decided to implement two command\nt.resizeWindow(widht, height)\nt.resizeWindowToFitDevice(device, [orientation])\nlike in testcafe-browser-natives https://github.com/DevExpress/testcafe-browser-natives/blob/master/API.md\nIs it ok?\n. @testcafe-build-bot \\retest\n. /cc @AndreyBelym ping\n. ping @AlexanderMoskovkin \n. \\cc @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. We decided to kill getAutomation method\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. lgtm\n. I agree on all points.\nAnd now we can take into account sequence of dialogs handlers (like this t.click().handleAlert().handlePrompt()) In previous version we didn't do it.\n. Now we decided to give up ideas of:\n1) check the order and number of dialogs\n2) check the dialogs' text\nWe decided to introduce the concept that dialog is always the result of action.\nIn this case if you have a dialog appearing during page loading (before the first step was running) you should use t.navigateTo() as first step in test. The only way we can process dialogs.\nInformation about dialogs will included in action this way:\ntest('Click button', async t => {\n    await t.click('#btn', {\n        offsetX:        -3,\n        dialogHandlers: {\n            alert: true,\n            confirm: true/false,\n            prompt: inputValue/false,\n            beforeUnload: true\n        }\n    });\n});\nAll alerts and beforeUnload we will just close, for all confirms we will return true/false, for all prompts we return inputValue, or null (it's browser behavior for press on button Cancel).\nDefault options will look like:\ndialogHandlers: {\n            alert: null,\n            confirm: null,\n            prompt: null,\n            beforeUnload: null\n        }\nDid I miss anything?\nPS: If we don't have t.navigateTo() as first action and dialog was raised during page loading should we raise error or just skip it?\n. So, now we have new idea. Let's discuss @DevExpress/testcafe \nWe'll have overridable dialog handler for all dialog types, we can set it in any time in test.\nE.g.:\ntest('Confirm', async t => {\n    //set handler for dialogs appearing on page load\n    await t\n    .setConfirmDialogHandler(text => {\n        if(text === 'confirm1')\n            return true;\n             ...\n        return false;\n    })\n        .click('#button');\n});\nShould setAlertDialogHandler and setBeforeUnloadDialogHandler be without argument?\nIf dialog appears and we don't have handler for it we should raise error.\nAnd we should have something like that for checking raised dialog:\n{type, text} = t.getLastDialogInfo()\n. How to check was expected dialog or not?\nping @inikulin \n. \\r-, just one remark for consistency of comments\n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. lgtm\n. I'm working on it\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. /cc @VasilyStrelyaev \n. This PR'll be merged after DragCommand https://github.com/DevExpress/testcafe/pull/456\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. Ooops, I didn't notice.Fixed now.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. I've already fixed it in this PR and had passed tests local. I'll fix it now on Sauce Labs\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. \nDesigner proposed to implement status indicator similarly like in google-design\nhttps://www.google.com/design/spec/components/progress-activity.html\nWhat do you think?\n. Last question about appearance when just test in progress. \nShould we show grey line instead of progress bar? I think no.\nWhat about text: \"Test in progress...\" ? @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. Ok\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. @VasilyStrelyaev \n. FPR\n. FPR\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. looks even better)\n. FPR\n. FPR\n. How many times tests passed with this fix in a row?\n. lgtm\n. You should add required tests to testcafe-phoenix\\test\\server\\test-run-commands-test.js and for new errors to testcafe-phoenix\\test\\server\\test-run-error-formatting-test.js\n. lgtm\n. lgtm\nShould we call @VasilyStrelyaev to review?\n. lgtm\n. @testcafe-build-bot \\retest\n. We used to keysCommand parameter http://testcafe.devexpress.com/Documentation/API_Reference/Test_Fixture_API/User_Actions/#actpress\nOk, I will rename it to keyCombination\n. FPR\n. Now if during wait-for-element action was page reloading we start waiting on new page again and forget about part of timeout, which was already passed. Is it ok? or we should save passed time on pageUnload via localStorage? @inikulin \n. We don't do it for actions\n. FPR\n. FPR\n. FPR\n. review please before merge again @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. lgtm\n. FPR\n. @testcafe-build-bot /retest\n. FPR\n. FPR\n. ok. lgtm\n. 1) I vote for t.mouseDown(selector, clickOptions);\n2) t.mouseUp without arguments\n3) I think we should support native behavior for combination of simple actions\n4) move looks more attractive \n. 1) I vote for t.mouseDown(selector, clickOptions);\n2) t.mouseUp without arguments\n3) I think we should support native behavior for combination of simple actions\n4) move looks more attractive \n. I think t.scrollDocumenToTop,t.scrollDocumenToBottom insufficiently reusable variants.\nI think we should have command t.scrollToElement because t.scroll looks like we should scroll element itself\n. Let's call it t.scrollDocument and send offsets to it\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. @VasilyStrelyaev \n. lgtm\n. lgtm\n. lgtm\n. @testcafe-build-bot \\retest\n. FPR\n. ping @AlexanderMoskovkin @inikulin \nhttps://github.com/DevExpress/testcafe/pull/543#discussion_r64209928\nhttps://github.com/DevExpress/testcafe/pull/543#discussion_r64209313\n. Wait for https://github.com/DevExpress/testcafe/pull/560/\n. FPR\n. ping @inikulin @DevExpress/testcafe about screenshots paths\n. It works different way now. So, we need to changes:\n1) if screeshotPath specified we need to enable screenshotOnFail option\n2)  if screeshotPath specified we should use it like base for customPath in takeScreenshot action\n3)  if screeshotPath is not specified we should use testDir like base for customPath in takeScreenshot' action\nThat's all right?\nI'll do it in another PR\n. Ok, I misunderstood. Forget about 1) point.\n. \"screenshotPath - is always base path for the customPath\" now it looks better\n. resize FPR\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. FPR @VasilyStrelyaev \n. lgtm\n. lgtm\n. \\r-\n. lgtm\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. lgtm\n. ok\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n@VasilyStrelyaev \n. lgtm\n. FPR\n. @AndreyBelym please review \n. lgtm\n. lgtm\n. I'm working on this\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. FPR\n. @inikulin review please instead of @AndreyBelym \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. lgtm\n. lgtm\n. I think it fixed, I could not reproduce too after https://github.com/DevExpress/testcafe/pull/589\n. I like it, lgtm\n. @testcafe-build-bot \\retest\n. FPR\n. ping @inikulin \n. lgtm\n. lgtm\n. May be better use justvalidationsinstead ofprop-validationsin e.g.src/test-run/commands/prop-validations/argument.js. lgtm\n. lgtm\n. lgtm\n. lgtm\n. We useelementAvailabilityTimeoutalso for waiting for establishment connection with child driver link (duringswitchToIframecommand https://github.com/DevExpress/testcafe/blob/master/src/client/driver/driver.js#L203) and for waiting for browser dialog duringhadleAlert(and etc.) command\n. Do we need tunable timeout for dialogs?\n. WillexecutionOptionscontainsscopeVarsin second case?\n. lgtm\n. I think we need to add test with expired of global timeout waiting for element\n. other lgtm\n. FPR\n. FPR\n. FPR\n. FPR\n. ping @AlexanderMoskovkin  @inikulin \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. need rebase because of https://github.com/AlexanderMoskovkin/qunit-harness/issues/35\n. we decided to introduce new approach https://github.com/DevExpress/testcafe/issues/451#issuecomment-230255979\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. It's can break existent tests. Especially it concerns Legacy api tests.\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Just blinking tests, please review @inikulin @AlexanderMoskovkin @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. Ok, thanks\n. @testcafe-build-bot \\retest\n. I just guessed\n. @testcafe-build-bot \\retest\n. only unstable qunit, FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Just blinking tests, FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @testcafe-build-bot \\retest\n. lgtm\n. Yep. I fixed it in https://github.com/DevExpress/testcafe/pull/675, but forget here\n. @testcafe-build-bot \\retest\n. lgtm\n. lgtm\n. lgtm\n. we done it https://github.com/DevExpress/testcafe/pull/697\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n/cc @inikulin @georgiy-abbasov \n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. please merge\n. please merge\n. I'll fix tests\n. I'll fix tests\n. FPR\n. FPR\n. FPR\n. FPR\n. yahoo\n. yahoo\n. lgtm\n. FPR\n. it's really genius)\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. no reason\n. FPR\n. @testcafe-build-bot \\retest\n. FPR\n. I'm working on this. I think it's not really serious, don't worry\n. This behavior is caused throwing Error in moduleerror-stack-parserhttps://github.com/stacktracejs/error-stack-parser/blob/04b29272bff2047496b822d165f7c0b0fd211b31/dist/error-stack-parser.js#L74\nThe modulecallsite-recorddoesn't handle this scenario, but I think it should return empty or null object in this case.\nSteps to reproduce intestcafe(error which can't be parsed byerror-stack-parser`):\ntest.test.js\n```\nimport error from './error';\nfunction func () {\n    return new Promise((resolve, reject) => {\n        reject(new error.BadRequest());\n});\n\n}\nfixture myFixture;\ntest('myTest', async t => {\n    await func();\n});\n```\nerror.js (simplified version of https://github.com/mikedeboer/node-github/blob/8af72a317c91ca114f194f3a535202b1d2e4cf62/lib/index.js#L169)\n```\nvar Util = require('util');\nexports.HttpError = function () {\n    Error.call(this, 'Bar request error');\n    this.message = 'Bar request error';\n    this.code    = 400;\n};\nUtil.inherits(exports.HttpError, Error);\nvar error = (function () {\n    return function () {\n        exports.HttpError.call(this);\n    };\n})();\nUtil.inherits(error, exports.HttpError);\nexports.BadRequest = error;\n``\n. Part withcallsite-recordfixed in3.2.1version\n. @inikulin so what do think about @VasilyStrelyaev comment https://github.com/DevExpress/testcafe/pull/732#issuecomment-241020421 ?\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. if all's ok, please merge @VasilyStrelyaev \n. FPR\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. What do ypu think? @inikulin \n. ok\n. Sorry, I didn't notice it\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. /cc @inikulin @AlexanderMoskovkin \n. lgtm\n. ok, I working on it\n. it looks good, but we should explain in docs differece between using snapshot (not recalculate selector) and this mechanism\n. lgtm\n. lgtm\n. FPR\n. lgtm\n. lgtm\n. I like it\n. maybechild/parent@VasilyStrelyaev \n.child/parentlooks like we'll searching for one level\n. I think first variant looks better than others, but where will beafterafterfnor before?\n. can we use someting more descriptive thanfn`?\nlike just variant like in mocha:\nit('Some test')\n   .before(async t => {...})\n   .skip(browserInfo => {...})\n   .test(async t => {\n        // test code here\n    });\nOr may be do \ntest('Some test')\n   .before(async t => {...})\n   .skip(browserInfo => {...})\n   .do(async t => {\n        // test code here\n    });\nor may be smtng better.\n. In progress\n. rebase will be required\n. You need to remove simulateFocus from here https://github.com/DevExpress/testcafe/blob/master/src/client/automation/playback/click/index.js#L53\n. ok\n. For IE we need to wait for https://github.com/DevExpress/testcafe-hammerhead/pull/821\n. @testcafe-build-bot \\retest\n. Unstable test which will be fixed in https://github.com/DevExpress/testcafe/pull/842\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @VasilyStrelyaev please check test name\n. lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR at last\n. @testcafe-build-bot \\retest\n. FPR /cc @AndreyBelym \n. it's another problem\n. /cc @VasilyStrelyaev \n. I don't really like idea to multiply factors. May be just use speed factor specified for action, if we don't have it - use factor specified for test controller.\n. By default it will be slow mode? speed === 1?\n. Sure, sorry\n. It's not enough. behavior should be further investigated. I'll create another PR later.\n. I'm working on it\n. First problem was was associated with page's markup. \n. Fixed in https://github.com/DevExpress/testcafe/pull/893\n(And associated fixed https://github.com/DevExpress/testcafe/issues/913)\n. invalid test markup\n. I'm working on this. \n. It was fixed https://github.com/DevExpress/testcafe-hammerhead/issues/903\nIt's fixed in the 0.11.0 version that will be released soon, but it's available already with the alpha tag, just call npm install -g testcafe@alpha.. ping @VasilyStrelyaev \n. @testcafe-build-bot \\retest\n. I'm working on it. https://github.com/DevExpress/testcafe-hammerhead/pull/910\n. Wait for update Hammerhead version\n. Hello William. Thank you for your interest in TestCafe. Here is how you can focus an element using ClientFunction.\n``` js\nvar focus = ClientFunction(() => {\n    document.getElementById('element').focus();\n});\nawait focus();\n```\nIn common case for focus element you can use action click. If these methods don't work for you or you have a specific scenario please let us know.\nEarlier we've decided not to create a separate action for focus.\nLet's discuss it again @DevExpress/testcafe\n. Calling defineProperety and defineProperties for window raise error if configurable property is true  TypeError: Not allowed to define a non-configurable property on the WindowProxy object\nNow it seems like feature https://www.fxsitecompat.com/en-CA/docs/2016/defining-non-configurable-property-on-window-will-throw-currently-only-on-nightly-and-developer-edition/ \nbut it may change https://bugzilla.mozilla.org/show_bug.cgi?id=1178638\nWe will check it later\n. Now our basic example tests passe on all latest versions of Firefox:\n\nLast oficial version\nBeta\nDeveloper Edition\nNightly\n. I'm working on this\n. https://github.com/DevExpress/testcafe-hammerhead/issues/934\n. Yahoo. No, now to execute them you should call\nexpect(await firstElm()).eql(await getActiveElm());\nUP: but two snapshots of one element will not equal. Offset options define a point inside source element. Now we don't have offset options to target element, so may be we should implement it.. After discussion about touch-mode option we decided just not to emulate touch events for touch monitors (mouse events'll be emulated in this case). FPR. FPR. FPR. It's known problem with tests, sorry but I'll close this PR and open a new one. https://github.com/DevExpress/testcafe/pull/1001. @testcafe-build-bot \\retest. Better to implement Assertion like a command before do these changes https://github.com/DevExpress/testcafe/issues/1170. I know it https://github.com/DevExpress/testcafe/pull/1013#issue-192600216. FPR. @testcafe-build-bot \\retest. The  tag defines an embedded object within an HTML document. It's used to \nembed multimedia (like audio, video, Java applets, ActiveX, PDF, and Flash).\nWe do not have access to  contents because it's not a DOM structure. So we cannot execute actions and perform assertions with it. That's why we do not support testing of  contents.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Wait for https://github.com/DevExpress/testcafe-hammerhead/pull/990\nand\nhttps://github.com/DevExpress/testcafe-legacy-api/pull/24. Wait for https://github.com/DevExpress/testcafe-hammerhead/pull/990\nand\nhttps://github.com/DevExpress/testcafe-legacy-api/pull/24. /cc @churkin  new testcafe-hammerhead version is required, publish please. /cc @churkin  new testcafe-hammerhead version is required, publish please. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @georgiy-abbasov . /cc @georgiy-abbasov . /cc @VasilyStrelyaev . @testcafe-build-bot  \\retest. FPR. @testcafe-build-bot \\retest. /cc @kirovboris . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. \n. FPR. For running test:\n``js\nfixturefixture.pagehttp://localhost/testcafe/`;\n\ntest('test', async t => {\n    await t\n        .debug()\n        .click('#b1')\n        .click('#b2')\n        .click('#b3');\n});\nstep by step log:\n![step_by_step](https://cloud.githubusercontent.com/assets/12034551/22241586/0e507008-e231-11e6-9d9c-454bb05b32e2.png)\n. FPR /cc @inikulin @AndreyBelym . Debugger should stop on assertions https://github.com/DevExpress/testcafe/issues/1010\nWill be done in separate PR. Dublicate of https://github.com/DevExpress/testcafe/issues/1010. https://github.com/DevExpress/testcafe/pull/1290 fixed it. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. /cc @inikulin . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @inikulin  Is that what you mean about renaming and moving?. @inikulin what do you think about this variant?. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot /retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. /cc @inikulin . Please do not merge!. @testcafe-build-bot \\retest. FPR\n/cc @AndreyBelym . May be `withExactText`. @testcafe-build-bot \\retest. FPR. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. FPR. FPR. @testcafe-build-bot \\retest. /cc @AlexanderMoskovkin . /cc @AndreyBelym . What do you think about this variant?js\nvar browsersWithInputEventSimulation = browserUtils.isFirefox || browserUtils.isSafari ||\n                                   browserUtils.isChrome && browserUtils.version >= 53;\nvar browsersWithChangeEventSimulation = browsersWithInputEventSimulation || browserUtils.isIE;\nif (browsersWithInputEventSimulation && this.clickCausesChange)\n        eventSimulator.input(this.parentSelect);\nif (browsersWithChangeEventSimulation && this.clickCausesChange)\n        eventSimulator.change(this.parentSelect);\n```. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. waits for https://github.com/DevExpress/testcafe-hammerhead/pull/1080. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. I'm working on this. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @noderat you can find it here in Method section\n. After click on GridView's caption (\"Products\") page's activeElement was not changed. So our algoritm for tab pressing detect next element for focusing from the start of the page.\nIt seems like browser have some logic of detection next element for focusing not only by information about activeElement. We need take it into account.\nBTW workaround for your case is click and change activeElement:\n```js\nimport { Selector } from 'testcafe';\nfixture test\n    .page https://demos.devexpress.com/aspxgridviewdemos/Accessibility/ComplianceEditing.aspx;\ntest(\"Wrong tab focusing after click\", async t => {\n    await t\n       //click on radio button (it's checked already)\n        .click('#ContentHolder_rblEditMode_RB0_I_D')\n        .pressKey(\"tab tab\")\n        .expect(Selector(\"#ContentHolder_grid_col1 a\").focused).ok();\n});\n```. We've investigated this issue and decided to close it because:\n1) this behavior is not described in specification\n2) FF has own bahavior for this case\n3) it's pretty uncommon case\n4) we found simple workaround\nWe will be able to reopen this issue if it would be required.. Thank you for the good catch. It's a known problem: we need to add support for HTML5 drag & drop simulation (please see the corresponding issue).\nWe've decided to add a fix for this issue in one of the upcoming releases.. Done. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Ok, let's change this behaviour. We should. Thank you for your assistance. We have found a problem that persists since version 15.6.0 of the\u00a0react-dom\u00a0package. We will fix it ASAP.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. /cc @AndreyBelym . I'm agree with @kirovboris. We can e.g. don't dublicate (for this part of recipe):\n```js\nimport { Selector } from 'testcafe';\nfixture Test select element\n     .page http://localhost:8080;\nconst citySelect = Selector('#city');\ntest(Select an option from the drop-down menu, async t => {\nAnd only write:js\nawait t\n        .click(citySelect);\n. Hello @gowram.\nTo determine that the page is fully re-rendered, you can check whether some specific element that appears after re-rendering is actually displayed. Use our [Smart Assertion Query Mechanism](https://devexpress.github.io/testcafe/documentation/test-api/assertions/#smart-assertion-query-mechanism) and introduce an appropriate timeout, e.g.:js\nimport { Selector } from 'testcafe';\nfixture fixture\n    .page http://localhost/testcafe;\ntest('test with Assertion', async t => {\n    await t\n        .expect(Selector('#textarea').exists).ok({ timeout: 20000 })\n        .click('#textarea');\n});\n```\nAlternatively, you can check any condition that is met when the page is loaded\nusing the ClientFunction, e.g.:\n```js\nimport { ClientFunction } from 'testcafe';\nfixture fixture\n    .page http://localhost/testcafe;\ntest('test with ClientFunction', async t => {\n    var waitForElementLoading = ClientFunction(() => {\n        return new Promise(resolve => {\n            window.setInterval(() => {\n                if (document.getElementById('textarea'))\n                    resolve();\n            });\n        });\n    });\nawait waitForElementLoading();\n\nawait t.click('#textarea');\n\n});\n``\n. It's not quite clear. What was the result of usingAssertionfor waiting for page loading? Does this approach work for you?. So far, you can specify a custom path to save a screenshot to only when you take screenshots using the [takeScreenshot`](https://devexpress.github.io/testcafe/documentation/test-api/actions/take-screenshot.html) action. Anyway, we like your idea to create a template for the screenshot path, we will think about a better way to implement it.. Hello @thireven \nThis feature request is not included in our nearest sprints, but we are going to implement setting templates for screenshot paths. You can create your own TestCafe fork, PRs are always welcome.\nAnd please vote for the features you like.. Hello @ClaytonAstrom.\nWe have reproduced this issue only in the case when a legacy API is used in a test and a test page is unreachable. It's a known problem; see more in\u00a0this ticket.\n\nLegacy API\u00a0is an old TestCafe API format; it was in the paid TestCafe version. An open source TestCafe has a\u00a0new API\u00a0but still can run legacy API tests.\n\nWe also faced the\u00a0problem \u00a0when installed project packages break our testing time calculation mechanism. Do you use\u00a0a globally or locally\u00a0installed TestCafe? If the latter, please try to run the problematic test outside your project.\nLet us know about any your results. If your issue is different, please provide us with a test scenario so that we will be able to reproduce the issue on our side.. Thank you @ClaytonAstrom. I could reproduce your scenario, I will investigate this behavior and fix it it current sprint.. Didn't we decide to swap Troubleshooting and General Questions?. Thank you so much for your remark and PR! We've sent some changes to your branch: we applied this fix for the selectTextAreaContent method too and added tests.. @kirovboris said me about parsing .ts files based on already parsed ast structures.\nBut may be we should add test for real .ts test, like here . @testcafe-build-bot \\retest. 1) Do we need first action debug() in test when we use this option? I think we don't.\n2) After click('nothing') test fails and we can see title Test failed but I think we should change button title to Finish test run or smth like this because we will not resume test we just finish test run (Resume looks like we can skip failsed action).. > No, we don't need.\nOk, it means I understood it right.\n\nWe can write just Finish\n\nLooks good for me. This PR is waiting for https://github.com/DevExpress/testcafe-hammerhead/pull/1307. I'm working on it. I'm working on it. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I suppose the issue is specific to your page. Could you please provide us with an url of your page? If it is not possible, create a simple example that reproduces the problem.. @hang-ren, thank you for your report. We are aware about this problem - it occurs when the colsole.log method is called in the iframe before we initialize some of our stuff (you can see more information in this issue).\nWe will fix it ASAP.. There are some JS errors in the console when I try to open the page with this url\u00a0in Chrome (without TestCafe): http://ezhome-alpha-3d.shejijia.com/?brand=ezhome&assetId=ecd6dc0a-6a64-459a-9c3c-24431d9a09b9.\n\nTo skip failure on throwing JS errors during test running, you can use\u00a0--skip-js-errors\u00a0flag\u00a0in the Command Line Interface or\u00a0skipJsErrors\u00a0options in\u00a0runner.run()\u00a0method\u00a0in the Programming Interface.. This functionality is fully supported in TestCafe and works properly on my side. You can try the following test:\n```js\nimport { ClientFunction } from 'testcafe';\nconst getLocation = ClientFunction(() => window.location.href);\nfixture fixture\n    .page http://google.com;\ntest('test history navigation', async t => {\n    await t\n        .expect(getLocation()).contains('google')\n        .navigateTo('http://js.devexpress.com/')\n        .expect(getLocation()).contains('/js.devexpress');\nconst goBack = ClientFunction(() => window.history.back());\n\u00a0   await goBack();\nawait t.expect(getLocation()).contains('google');\n});\n``\nIt seems that the problem may be related to your page or test scenario. Could you please provide us with a link to your page if it's possible or create a simple example to reproduce the problem? Also please provide us with full code of your test.\nIn addition, specify the TestCafe version and the browser where the problem occurs.. Thank you for your detailed description and sample.\nThe mechanism of checking ourSelector.visibleworks as described [here](https://github.com/DevExpress/testcafe/issues/1186#issuecomment-275762330):el.visibleis false in the following cases:\n- thedisplaystyle isnone;\n- thevisibilitystyle ishidden;\n- an element has width or height that is equal to zero.\n\u00a0\nSo, we think that yourconfirmPasswordInputelement (or others depend on the screen resolution) is visible, because we take into account the fact that TestCafe can scroll a page to place this element in the visible area. We've already thought about improving the mechanism of checking the visibility (you correctly mentioned the related [issue](https://github.com/DevExpress/testcafe/issues/1186)). If you wish to share your ideas regarding this, feel free to contact us and share them.\n\u00a0\nWe've found an error with our scrolling mechanism. Because of this error, thetypeTextaction could be performed with thevisible` element. We'll fix it in the context of this issue - please keep track of our progress.. > Is the scrolling mechanism error the same error as described in the other issue I mentioned in the original post?\n\u00a0\nUnfortunately this is a new problem. It related with your markup and we never faced with something like this scenario before.\nYour page looks like documentElement has scroll bar, but actually the body element has it. \nWe need some additional time to investigate the problem in our scrolling mechanism and fix it for general case ASAP. Then, we will be able to explain all corresponding questions.. FPR. @testcafe-build-bot \\retest. You can use the run method's skipJsErrors argument. Please take a look at corresponding documentation.. Thank you for your suggestion. We will think about implementing this functionality.\nThe browser recognizes pressing the space or enter, or a click on the submit button as equivalent actions, and these actions are default browser behavior. So it isn't of importance here what action is used - you can use pressKey('enter') or click('#submit-button') instead of pressKey('space').. Anyway we are going to implement this functionality). Thanks for your report. I've reproduced the issue and we'll fix this.. Hello @PierreRott.\nThank you for your request. We've planned the paste option for the typeText action primarily to reduce time for typing operations which are carried out symbol by symbol. \nNow we are going to implement typing with the paste option as an equivalent of a paste operation including raising of the paste event.. > two images in one row would look better.\n+1. Please add to a-z-index. It's not bad, I think it should be clear that I can use options without setting path:\n.takeElementScreenshot(Selector, path, options) and .takeElementScreenshot(Selector, options) both possible. Hello @vikramvi \n1. You can find TestCafe benefits over Selenium here.\n2. Please take a look at\u00a0this topic\u00a0on our forum to find Cucumber integration examples.\n3. There are some good reasons to choose TestCafe for functional testing.\nTestCafe doesn't use WebDriver under the hood in contrast to most analogues. This means that:\n\nYou don't have to use any plugins for browsers support.\u00a0All modern browser\u00a0are supported out of the box.\nEasy installation and quick start testing\nNo need to include waiting for element availability or callback finishing in tests\nExtremely stable tests due to assertions' auto-waiting mechanism\n\nAnd also:\n- Support for all latest JavaScript features\n- Support for concurrent testing\n- Integration with popular CI systems\nPlease visit\u00a0TestCafe site\u00a0and documentation  to get more details about our features.\n. Hello @TauPan,\nTestCafe doesn't raise any error during navigation to the page with status 404. It was done to allow checking a custom UI of page 404, for example. So you do not need the try...catch construction.\nPlease take a look at an example for eql assertion in our docs. To check that innerText is equal to Page not found (404), use the assertion below:\nawait t.expect(Selector('h1').innerText).eql('Page not found (404)');.\nIf you just want to check the page status, you can use the following code:\n```js\nimport { ClientFunction } from 'testcafe';\nfixture fixture\n    .page http://localhost/testcafe;\ntest('test', async t => {\n    const getRequestResult = ClientFunction(url => {\n        return new Promise(resolve => {\n            var xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n\n        xhr.onload = function () {\n            resolve(xhr.status);\n        };\n\n        xhr.send(null);\n    });\n});\n\nconst status = await getRequestResult('http://localhost/testcafe/non-exist.html');\n\nawait t.expect(status).eql(404);\n\n})\n. Hello @korsun\nIn your example, a click on `saveButton` will be executed after `ClientFunction` execution. You can use a [smart assertion query mechanism](https://devexpress.github.io/testcafe/documentation/test-api/assertions/#smart-assertion-query-mechanism):js\nawait t\n    .click(saveButton)\n    .expect(localStorageGet('somekey')).eql('somevalue')\nor extract execution `ClientFunction` from action chain:js\nawait t.click(saveButton);\n\u00a0\nconst stor = await localStorageGet('somekey');\n\u00a0\nawait t.expect(stor).eql('somevalue');\n. Hello @filoxo \nPlease try this working example of request execution:js\nimport https from 'https';\nfixture fixture\n    .page http://google.com;\ntest('test', async t => {\n    const executeRequest = () => {\n        return new Promise(resolve => {\n            const options = {\n                hostname: 'encrypted.google.com',\n                port:     443,\n                path:     '/',\n                method:   'GET'\n            };\n        const req = https.request(options, res => {\n            console.log('statusCode:', res.statusCode);\n            console.log('headers:', res.headers);\n            resolve();\n        });\n\n        req.on('error', e => {\n            console.error(e);\n        });\n\n        req.end();\n    });\n};\n\nawait executeRequest();\n\n});\nIt seems like you forget to call `req.end();`.\nAlso you can take a look at the corresponding [question ](https://stackoverflow.com/questions/46830313/testcafe-check-for-images/46831540?noredirect=1#comment80617127_46831540)about request execution.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. Hello @morninng \nWhen your test fails you are supposed to get callsite information, including line number. Refer to an example of console output below:js\nfixture name\n \u00d7 test name\n1) The specified selector does not match any element in the DOM tree.\n  Browser: Chrome 65.0.3325 / Windows 10.0.0\n\n      4 |    .page `http://localhost/testcafe`;\n      5 |\n      6 |test('test', async t => {\n      7 |    await t\n      8 |        .click(Selector('p').withText('foo'))\n   >  9 |        .click(Selector('div').withText('Bar'))\n     10 |        .click(Selector('b').withText('foo'));\n     11 |});\n     12 |\n\n     at <anonymous> (D:\\GitHub\\new_studio\\testcafe-studio\\1.js:9:10)\n     at test (D:\\GitHub\\new_studio\\testcafe-studio\\1.js:6:1)\n\n1/1 failed (11s)\n``\nIf you don't have such info in console, please provide us the whole test scenario including the page url. Please also specify the TestCafe version, browser version, Node js version and the way in which you start tests.. little [artifact ](https://www.screencast.com/t/9QYYtPh8cR4)with code block for PageModel . Please, don't forget to close this issue with corresponding comment. @testcafe-build-bot \\retest. please review. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Finally FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Button is sticking out little bit (under search panel)\n![image](https://user-images.githubusercontent.com/12034551/42383202-3e862b7e-813f-11e8-8249-c94918944321.png)\n. Sorry for the very late response.\nTake a look at the TestCafe\u00a0[Programming Interface](https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/). You can use [a\u00a0remote browser connection](https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#passing-a-remote-browser-connection)\u00a0but you should patch thetestcafe-cucubmerplugin. Please refer to the [runTestmethod](https://github.com/rquellh/testcafe-cucumber/blob/master/features/support/hooks.js#L33); here you should pass theremoteConnectionas an argument for\u00a0therunner.browsers()method.. I don't like it neither.\nWe can say it simpler, e.g:Now the test run report can identifies which selector's method failed to match any DOM element.I think it is obvious that it isin case if selector does not match any element in the DOM tree.. I don't like it neither.\nWe can say it simpler, e.g:Now the test run report can identifies which selector's method failed to match any DOM element.I think it is obvious that it isin case if selector does not match any element in the DOM tree.. ping @AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot retest. I'll reply in private. I could find information about using selectors in actions onUsing Selectorspage in section [Define Action Targets](https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/using-selectors.html#define-action-targets) section on the last line.\nAlthough there is no required info about getting selector property in [Obtain Element State](https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/using-selectors.html#obtain-element-state).  This info in [Exampleson different page](https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/functional-style-selectors.html#examples).\nAlso ourSelectorhas different type of properties: all of them will be executed for the first element in the set butcountandexists` (!) work different way. We have this info here.\nSo I think Using Selectors is a good place to describe how selectors could be used and how they will work in different case. After that we will be able to give a link to this section in all required sections (actions, assertions, nth filter, etc.).\nAnd I'm not sure about Selector Timeout section here, because we have separate Selector Options, maybe we could give a link here and move all info there.\n. Maybe this recipe should be in CI section too?. We need also have all error data separately in error object, such as a incorrect argument/option value, callsite, other. . There is now Live Mode item on this page https://vasilystrelyaev.github.io/testcafe/documentation/using-testcafe/common-concepts/ (I mean in the content part on the right side)\nIt's important for the mobile version. @testcafe-build-bot \\retest. It would be great if you provided different errors (and error codes) for all hammerhead errors. In this case we will be able to decorate them in Studio.. I agree we don't need it\n. we discussed it with techwriter\n/cc @VasilyStrelyaev \n. ok\n. It's not a final version. Please wait for my FPR comment.\n. May be use var legacyCompiler = ... for consistency\n. Let's move it to const\n. look at before-test.js\n. I left it like this for calling break only if 'false' value's returned\n. I don't like 'is TextInput' title. This method's used only for this scenario for form and doesn't correspond only inputs with 'type=text' (or inputs look like input 'type=text'). I think we can use just\nvar inputTypeRegExp = getInputTypeRegExp();\n. These checks now are the same:\n(to !== document.documentElement) and (!/html/i.test(to.tagName)\nCan we merge them?\n. Does this make sense? newElementOffset.left - elementOffset.left;\nBecause earlier elementOffset  calculate before scrolling but now after like newElementOffset \n. No, Sizzle returns required array\n. I don't think we need use it like exetendJQuerySelectors. I'll rewrite it another way.\n. yep\n. We don't need this function anymore (and we should use 'Iframe' instead of 'iFrame')\n. We don't need this check now. And also we can send 'iframe' instead of 'iIframeWin'\n. IFrame -> Iframe\nAnd in vars too\n. May be better use var referer = location = 'http://localhost/sessionId/https://example.com';\nOr even use one variable instead of two\n. Thanks for your attentiveness\n. I think we should have the same type of return value. I'll separate them, thanks for notice.\n. Sorry, I misunderstood first question and miss second comment\n. We decided context menu for method because we have 'contextmenu' event\n. Remove comment\n. Let's use new principle of naming everywhere: 'iframe'\n. This logic stored historically, I'll rewrite behavior for contenteditable elements and 'startNode', 'endNode' options\n. https://github.com/DevExpress/testcafe/issues/391\n. We decide to use just switch for this case because we'll have different arguments for different command in future. I'll fix it\n. We really need export this function to another file? Now it used only ones, will we use it again later?\n. May be we can use arrow function here, but it's not so important\n. I see\n. ok\n. // NOTE: Need to round offsets due to GH-365\n. I think actionSelectorTypeError should be in previous group now. \n. Absolutely agree thise time\n. should we use native eval here?\n. (startNode, startOffset) and (endNode, endOffset). you little mixed it up.\nBut I think we don't really need in _calculateAbsolutePoint \n. Also may be we should mention about it in selectEditableContent command description in future\n. Not now, but it will. need more refactoring)\n. import { noop } from 'lodash';\n. client/runner/automation/utils.js too\n. Not. One of themeditable(an input, textarea or element with the contentEditable attribute) and the other onlycontenteditable. @VasilyStrelyaev propose usethis.keys = '';for external API\n. I prefer style like inpolyfill` above\nObject\n.keys(dependencies)\n.reduce((code, name) => {\n. https://github.com/DevExpress/testcafe/issues/163#issuecomment-216821244\n. Add tests: Should create UploadCommand from object and Should create ClearUploadCommand from object\n. These two tests (Should fail if the file list is empty, Should fail if the file list contains an empty string) are redundant because we should have test server verification logic in test/server/test-run-commands-test.js\n. Hammerhead supports relative URLs now.\n. We use this style of naming everywhere. May be it is not so bad?)\n. Ok, lets use this for new code, I'll fix it. \n. May be better to do it in constructor (like _createAPIMethodsList)\n. I think we can add t.focus() and I think pressKey without selector is conveniently, because activeElement can be changed during execution key sequence.\n. I think single regex will be too complicated.\nI suggest rewrite it:\n```\nfunction navigateToUrlArgument (name, val) {\n    nonEmptyStringArgument(name, val);\nvar url      = val.trim();\nvar protocol = url.match(PROTOCOL_RE);\n\nif (protocol && !SUPPORTED_PROTOCOL_RE.test(protocol[0]))\n    throw new ActionUnsupportedProtocolError(name, protocol);\n\n}\n```\nAnd use protocol in errror's text:\nThe <code>${err.argumentName}</code> argument specifies a URL that uses an unsupported <code>err.protocol</code> protocol. Only HTTP and HTTPS are supported, as well as protocol-relative and relative URLs.\nWhat do you think @inikulin ?\n. Remove this redundant empty line and lgtm\n. May be we should include pageUrl to error's text?\n. May be we should delegate error creation to browserNatives.resizeWindow method and return just err (not ActionUnsupportedDeviceTypeError), because it can be another error instead of this?\nSo in this case we should create error message like this: Browser natives returns error:....\nWhat do you think @inikulin @VasilyStrelyaev ?\n. I'm sorry, now I think we shouldn't have _addPendingBrowserWindowTask, because really we don't have pending browser window task. So this method should be renamed into _addPendingBrowserWindowCommand'\nI we'll don't have pendingBrowserWindowTask term in TestRun\n. I don't quite understand. Do you want to browser-natives add some html-formating in error message to testcafe can decorate it (for deviceName for example)? All browser-natives messages here https://github.com/DevExpress/testcafe-browser-natives/blob/master/src/messages.js \nOr we just need to create new category 'BrowserNativesError' and add our text to errors resieved from browser-natives?\n. rename vars too\n. I think we don't need this vars\n. delete extra indent for this block\n. delete extra indent for this block too\n. I think this test is redundant (Isn't  it the same like test above? https://github.com/DevExpress/testcafe/pull/548/files#diff-5b3b1295f2f653bab8bc18410ccaba81R201)\nAnd test below too\n. And move .then to new line)\n. Ok. I got it.\n. Yes, we can\n. I vote for RunWindowTaskCommand\n. @inikulin what about runWindowOperationCommand or ExecuteRunWindowTaskCommand\nor RunBrowserOperationCommand\n. ping @inikulin \n. all will be the same except Execute[Execute[PendingBrowserWindowCommand]Command] -> runWindowManipulationCommand. Or I miss something?\n. TestRun now has pendingWindowManipulation.\nWhich command we should have RunWindowManipulationCommand or PendingWindowManipulationCommand?\nFunction on client executePendingWindowManipulationCommand or executeRunWindowManipulationCommand?\n. Ok\n. When we get here this.opts.takeScreenshotsOnFails === true because we check it https://github.com/DevExpress/testcafe/pull/552/files#diff-a21f56bee759db22062e32250e3df48cR102\nWe just can send screenshotRequired:true\n. I added it for consistent https://github.com/DevExpress/testcafe/pull/543/files#diff-945208629fe0c4eea6d7e13aaeb4ca5bR44 \n. We have one command for two action (resize and scrennshot) executePendingBrowserManipulation.\nIn first case we return error, in second - screenshotPath. https://github.com/DevExpress/testcafe/pull/552/files#diff-945208629fe0c4eea6d7e13aaeb4ca5bR42\nWhat should we do?\n. Which text for SCREENSHOT_CAN_NOT_BE_SAVED_MESSAGE do you suggested? I cann't find your comment. @inikulin \n. By pageError not executionError\n. No longer need\n. Check this message again please @VasilyStrelyaev @inikulin \n. Yes, because of https://github.com/DevExpress/testcafe/pull/552/files#diff-15454f369c87c574b6885fdfb5bd6489R125\n. we don't need in this brackets (e.shiftKey && e.ctrlKey)\nso, please add new files to lint task in Gulpfile\n. We can do not send it, because we have testRunId on server side\n. It's seem like we need pageUrl to create error message in some case\n. This and others\n. Better call it one time and do nothing if options don't contain offset options\n. Use existing methods in src\\client\\runner\\utils\\mouse.js\n. OK\n. It stayed from previous version on browser-natives\n. ping @inikulin \nbrowser-natives use landscape in any cases except portraitdefined \nhttps://github.com/DevExpress/testcafe-browser-natives/blob/master/src/api/resize.js#L20\n. you forget about this.currentDriverTask\n. oh, I see\nlgtm\n. Isn't it expected returns object not like DOM method getBoundingClientRect? https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMClientRect\n. I like more previous text for error 'Client code is expected to be specified as a function, but \"string\" was passed.'\nBecause now it look strange, we no longer have term 'Hybrid ' in API. I think we should not use it.\nMay be we can get rid of Hybrid using message Code executed on client for Selector and Client function\nOr some other way\n. Ok\n. https://github.com/DevExpress/testcafe/pull/598/files#diff-f9f4a656b17573b16cd155de3e706528R205\nwe expect exactly null\n. Why we need to two groups of Selector errors? https://github.com/DevExpress/testcafe/pull/603/files#diff-ab5af4bc525a2e3c00245caa5503456eR219\n. OK\n. ...unsupported \"${err.actualValue}\" device....\nIn all other places we don't use \"...\" for actualValue\n. ok, I see\n. ok, you understood right\n. https://github.com/DevExpress/testcafe/pull/621/files#diff-75274200b56a969c95196140e48eb0b5R202\n. It's what we need to return from handler function.\nhttps://github.com/DevExpress/testcafe/pull/621/files#diff-6e63fd8c94cb30d26fd63d78cf8d0342R73\n. it was @VasilyStrelyaev proposal\n. Wait command should be in driverTaskQueue, but it should be executed on server.\nSo when server has request for next command and this next command is wait we should execute waiting on server (for request server answers null). Execution of wait command performed in executeOnServer method. After execution of waiting server answer to client wtih next command in driverTaskQueue.\n. See below\n. We also have result here https://github.com/DevExpress/testcafe/pull/621/files#diff-e2bf5c5891285c6f72a00b881eb9b4a5R235\nmay be just returnValue?\n. I think it better looks\nreturn runTests('./testcafe-fixtures/click-on-select-child-test.js', 'Click on an invisible \"option\" element', \n{ shouldFail: true })\n. He agree)\n. We manyally reject commands in driverTaskQueue.\nIt's the same like we had before for executionChain\nhttps://github.com/DevExpress/testcafe/pull/621/files#diff-a21f56bee759db22062e32250e3df48cR235\n. @inikulin Could you give me a test example brocken with new approach?\n. So, we found one\n. Should we add {...} for function in this case?\n. It's based on Node type constants https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#Node_type_constants\n. For text node isDomElement returns false\n. ok\n. argh\n. No problem with switch for new lint, I'll rewrite it\n. ...may be later)\n. Before \"new\" option caretPos added in the end of list https://github.com/DevExpress/testcafe/pull/683/files#diff-8e662184507eb3363796c47b173723e2R49 But here \"new\" option replace added to the beggining. For more readability let's do it consistent.\n. I think not only Selector, Client Function is allowed too.\n. I think that for resize and takeScrenshot actions we should say about remote devices, not only about Linux\n. May be more clear will be to say: ... like the first test action.\n. I think we should add a couple of words about native dialogs in iframes: we have one handler for all frames (top window's and iframes') and also one history stack for them all.\n. I don't know what does mean regular text. I think we should specify elements for this action: input, textarea, contenteditable elements\n. It will not work because getThirdElemWidth Client Function required getThirdElemByClass by dependencies. We need refactor this example.\n. Oops, of course they can't\n. All arguments except selector for actions selectText and selectTextAreaContent are not reqired. I think we should explain how it works.\n. I think in this case startPos and others must be arguments. Otherwise API will looks strange.\n. Not, it doesnot work in all IEs\n. yep\n. The reason of bug in common code\n. Because sanitize removes / symbols\n. we get \"strange error\" because we forgot include type 'actionElementNotIframeError' in type.js https://github.com/DevExpress/testcafe/pull/735/files#diff-9496e797b89e8d22aebbb62b66c64b4aR37\n. Yep, so we really need auto check\n. Before we assing this.eventArgs before raise mouseup. And raise click for this.eventArgs.element.\nShould not we do it?\n. we usually calculate eventArgs before raise event, so I like more just eventArgs\n. Why you use e.currentTarget not e.target? I think better use e.target to check for what element event was raised. \n. let's. lgtm then\n. We can do not init it and after rewrite, just init after first resize. \n. We can extract these two lines in method\n. subtract\n. Do we need this button?\n. actually we don't need in arg for this function\n. Let's move this check in utils. Is it possible?\n. We just can compare document.activeElement and document.body\n. The same as above\n. If now this.eventState.simulateFocus is assigned only in focus method for IE https://github.com/DevExpress/testcafe/pull/843/files#diff-0b8d22328e7dddcc102e65786aa60657R224\nwe can move this part of code there too\n. may be just isElementFocusable\n. We don't need else because previous if has return in any cases\n. agree\n. Why we shouls not set skipScrolling flag for onMoveToIframeRequest?\n. use null\n. Why we need to send this.eventState.clickElement, this.eventArgs.element, ... in not static method? We can use it without args\n. use [Regression] to unify test naming\n. In top window we set flags to false in any way, but in iframe only in case of inCommandExecution === true. May be we should do it in iframe the same?\n. yep\n. I know, it was just proposal\n. may be\n. Use https://github.com/DevExpress/testcafe/blob/master/src/client/core/utils/dom.js#L28\n. I thing we should remove  document form comment, because no one browser have innerText for document, only for documentElement === html element\n. oooook\n. As far as I remember better to use the full version Cannot for message and even for vars. Am I right ? @VasilyStrelyaev \n. I think it should be null\n. Should raise an error if the \"--speed\" option value more than 1\n. In think it's not quite clear comment\n. It can be number too. May just use incorrect in test's title, we have expected type of this arg in test code.\n. We can use toArray method https://github.com/DevExpress/testcafe/blob/master/src/client/core/utils/array.js#L10\n. I think this is an unusual approach use sibling. Why not use previousSibling and nextSibling?\n. ok\n. ok\n. ok\n. I didn't know about this method\n. In most common case we need to use nextElementSibling (and may be previousElementSibling), but now it's not become easier\n. Don't we check canShowFullElementWidth taking into account the indent? @AlexanderMoskovkin \n. I don't really like this style of formatting\n. Does this test raise error? May be the title is wrong\n. But assert has include and notInclude\n. Redundant empty line\n. Maybe we should add check of border conditions to be sure that the boundaries are included\n. oh, I see\n. ok =)\n. I think it should not.\nLook at other examples:\ntext https://github.com/DevExpress/testcafe/pull/997/files#diff-70e36160da834fc09f9ab211e6fd2d9dR29\ncode  https://github.com/DevExpress/testcafe/pull/997/files#diff-70e36160da834fc09f9ab211e6fd2d9dR42. 'Assertion with snapshot API shorthands' is below. Do you offer completely get rid of example with DOM node snapshot property?. Ok, you right!. @lexkazakov. OK. Tech writer says states of page elements. better use ok and notOk. please use ok() too and it'll lgtm. we usually use 'strings in \"this\" format'. May be let's use build-in assertions, TestCafe eql is deep. we usually use 'strings in \"this\" format'. Let's add text to button\nhtml\n<div id=\"btn\">Button \"Loading...\"</div>. We do not use NOTE: prefix in comments in documentation. thanks. we never use //NOTE: prefix in documentation. The same as above and there is no #snapshot-api-shorthands in selectors.md. We gave Selector DOM node state property link in this sentence in assertion documentation, let's chose one variant for this. I think we should add optional attributes check (e.g. domain). Usually  we use Should ....(something to do) in test names \nlook at https://github.com/DevExpress/testcafe/blob/master/test/functional/fixtures/api/es-next/click/test.js#L6. I think this test should have flag shouldFail and we should check error message and callsite. Remove this comment. I think it's strange to check OS type and browser version, should we check browser type and browser version together with OS type?. May be open brackets. Please subtract some vars to simplify condition. we usually specify name for function. Do we really need this condition?. I think this file can be placed in automation/utils too. Please add a corresponding comment for this logic. Because we need exactly isFinite check https://lodash.com/docs/4.17.2#isNumber.\nBut we can simplify it. We should add info about query mechanism for client function in https://devexpress.github.io/testcafe/documentation/test-api/assertions/#smart-assertion-query-mechanism section\nE.g. in sentence If the TestCafe assertion receives a Selector's DOM node state property as an actual value and may be in other places.\nAnd https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--assertion-timeout-ms\nand for assertionTimeout here https://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#run. You can pass an object, a Selector's DOM node state property or a client function.\nIt seems like it's list all the possible types of the actual value. And though all is object in javascipt, may be better to rephrase?. Should we add another way to use?\nfixture `la-la`.http({}). AFAIN Ivan asked stay away from like double ternary operator :). Are you sure about invoke selectors here? Because I think clarification is needed need the test controller object when they are called from Node.js callbacks.. I don't like variants without fixtureName and testBody, because now it looks too complicated. And one other place https://devexpress.github.io/testcafe/documentation/test-api/assertions/#optionstimeout\nThe amount of time, in milliseconds, allowed for an assertion to pass before the test fails if a selector property was used in assertion.\nadd please about client function too. And https://devexpress.github.io/testcafe/ in Smart Assertions section :)\nUse assertions with Selector's DOM node state properties to enable the Smart Assertion Query Mechanism. let's stay as it is here. But for more difficult cases please use condition and ternary). https://devexpress,github.io/... --> https://devexpress.github.io/.... I think we should give links for corresponding documentation topics for other section (e.g. HTTP authentication support). For our repo we use lint rule for this {Selector} --> { Selector }. May be it's important for examples too.. Should we say about overriding fixture.beforeEach, fixture.afterEach here?. aFlag?). May be better to specify list of methods which take negative index (e.g. parent method works another way). I think it's unclear. If we want to list all for test controller we should mention eval and ctx. And what about to include eval in a-z index for Test Controller?. My bad, that's ok. Sorry. Now client function can be in assertion, it can look better. ok, let's. better use setter pls. accident :). Should we add server tests for use Proxy in test\\server\\runner-test.js? What do you think?. May be even smth like this\n```js\n_mouseup () {\n        var elementForMouseupEvent = browserUtils.isIE ? this.parentSelect : this.eventsArgs.element;\n    eventSimulator.mouseup(elementForMouseupEvent, this.eventsArgs.options);\n\n    if (browserUtils.isIE && this.clickCausesChange)\n        this.parentSelect.selectedIndex = this.childIndex;\n\n    var shouldSimulateInputBeforeChange = (browserUtils.isFirefox || browserUtils.isSafari ||\n                                           browserUtils.isChrome && browserUtils.version >= 53) &&\n                                          this.clickCausesChange;\n\n    if (shouldSimulateInputBeforeChange)\n        eventSimulator.input(this.parentSelect);\n\n    eventSimulator.change(this.parentSelect);\n\n    return Promise.resolve();\n}\n\n. It's can be just after [this line](https://github.com/DevExpress/testcafe/pull/1315/files#diff-7583ad80662fdf889e6e058fbf571d42R39). When I saw it first time I decided that `stateSnapshot ` is some state of role, may be in `role` context it should call `testRunStateSnapshot`. I think it better set in `testRun`. We have a [special error](https://github.com/DevExpress/testcafe/blob/2ecabd2a04a7411abf13839a3c6a90149d68ca00/src/errors/test-run/templates.js#L203) for cases when iframe does not exist anymore.\nMay be we should raise it in this case, wht do you think?\n. I think better to move this error (and `WindowDimensionsOverflowError ` too) above [this line](https://github.com/inikulin/testcafe/blob/ddb507d6ef72b46d87f78b692558cc265d25a94c/src/errors/test-run/index.js#L353) because another way the located in group of `// Native dialog errors`. You can make it better). Actually [a few types of errors ](https://github.com/DevExpress/testcafe/blob/d420397f895edb9bd75d788ef729347128057686/src/client/driver/driver.js#L62)can be raised during execution of switching command. Debugging does not stop on ClientFunctions and Selectors. I think we should add information.. We need, because during execution role's actions step-by-spep user can click on button `Resume test` so `testRun.debugging` flag should be reasigned. It would be nice but we can't (see comment above). `var callsite = getCallsiteForMethod('getAttribute'); ` -> `var callsite = getCallsiteForMethod('hasAttribute');`. May be declare a variable for `this.customCommandHandlers[command.type]`. We should call `initElementListening` only once. Please check it. If you place `new DriverStatus({isCommandResult: true,, result})` in one line linter will not detect wrong indent after pressing `ctrl+alt+L` :). ok. Please check: can `select` have nested `optgroup` elements?. Issue contains information about wrong `value` and `selectedIndex`. Maybe we should add assertion of `selectedIndex` too.. ok. as you wish. There is `The footer displays buttons that allow you to continue test execution or step to the next test action.` in our [`Debugging` section](https://devexpress.github.io/testcafe/documentation/test-api/debugging.html#client-side-debugging). No word about assertions. May be we need to add this?. Yep, it works for `test.before`/ `test.after` and `fixture.beforeEach`/`fixture.afterEach`. Why we need so complicated var? May bejs\nvar isKeyActivatedInput = KeyPressSimulator._isKeyActivatedInputElement(activeElement);\nvar isButton            = domUtils.isButtonElement(activeElement);\nvar raiseClickOnEnter   = !browserUtils.isFirefox && (isKeyActivatedInput || isButton);\n. Let use another `index` in example because `await Selector('div').withAttr('attributeName', 'value').nth(0)` is the same  `await Selector('div').withAttr('attributeName', 'value')`. We also need include information about option for Programming API: `runner.run({ debugMode: true })`.\nAnd in [basic documentation topic](https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/using-testcafe/programming-interface/runner.md#run) too.. We can get extensions once, after compilers' creation . we can use `static get` for this. may be use `get` for `ts`. I think declare a const and use `static get` will be more in es6 style. ok, do not mind. forget it). `{}` is required. may better to extract this in method . may be combine options required for drag&drop mode in one objest, smth like `this.dragAndDropState = {element: null, ...}`. I think properties should be assigned in constructor. I think file name should be `drag-and-drop-first-move`. typo `instaed`, may be better to remove this comment. the `'1'` argument is redundant. May be better to export this long condition in a var. Let's add cmd example for using `remote` and `concurrency`. it's should be  `runner.concurrency...`. it's case sensitive. `city` is name attribute but you [use it](https://github.com/DevExpress/testcafe/pull/1586/files#diff-cd94f71b09ce72ec3b745dce1ea5febcR44) like `id` and test will not work\nI think we should run our examples on simple pages to avoid similar things. Let's call it `cityOption`?. Let's write it on one line, without line break. Here London is `London`, but [there ](https://github.com/DevExpress/testcafe/pull/1586/files#diff-cd94f71b09ce72ec3b745dce1ea5febcR20) it'a just London.. typo, it should be  `heartbeat`. Let's call if `setNativeStorageKey `.\nAnd we can do not return value from this method. `_firstClick` method [doesn't take arguments](https://github.com/DevExpress/testcafe/pull/1582/files#diff-53be1c4f24f5c08436b2c7abedc26614R38). Let's declare a variable `clickAutomation` here. `isTarget` name looks complicated:\n`isTarget` [means than `targetElementFound`](https://github.com/DevExpress/testcafe/pull/1582/files#diff-74fd963d00e947790f5a2095dbef5ac5R101)\nand `isTarget` is true when either `corrected (foundElement !== this.element)` or `foundElement === this.element`\nCan we create crearer name for `isTarget` var?. let's call it `getElementForEvent` by analogy with `ensureElement`. We reach [the line](https://github.com/DevExpress/testcafe/pull/1582/files#diff-74fd963d00e947790f5a2095dbef5ac5R59) `domUtils.containsElement(expectedElement, foundElement);` only if `expectedElement = this.element`. And in this case:js\narrayUtils.indexOf(domUtils.getParents(foundElement), this.element) > -1\nis the same with `domUtils.containsElement(expectedElement, foundElement);`\nSomething's wrong here, isn't?). It's not quite perfect that 'DblClickAutomation' contains 'this.eventArgs' and 'ClickAutomation' doesn't.. Why we need change it?. wrong formating. We avoid to use `cant` for `cannot`. It should be e.g. `incorrectConcurrencyFactorErrorMessage`. Even better. ok, thanks. Should we mention default timeout value here?. I think now we have a little confusion of two concepts: `ActionElementIsInvisibleError` is raised when element really is invisible and `elementIsInvisibleError` (is raised when `elementFromPoint` method returns null). . Why we should not hide statusBar in case of `status.executionError`? Also if we have `status.executionError` we always don't have `status.result`.. there is typo `deriative -> derivative` (the same in test). we've already done it in `_adjustConfigurationWithCommand` method and even return null [here](https://github.com/DevExpress/testcafe/pull/1648/files#diff-a21f56bee759db22062e32250e3df48cR403). `Selector` is not a module. No need to change test page. May be add anchor link to Plugins section here?. Let's write just `then create a test and place your code there`? Or smth like this.\n I think it's better because without redundant information and this sentence is easier. I think this is redundant comment. You said [above](https://github.com/DevExpress/testcafe/pull/1783/files#diff-7ca810eb42a80a987817c213a8b94b34R136) that assertion receives a client function *promise* .\nShould we write `ClientFunction` -> `ClientFunction promise`?\nWhy we need to specify `Value` and `Object`, `value` doesn't include `Object` type?. Do we forget specify `page`?. `Value` is not a type, so I don't know what is this) \nMay be write smth like this: `Any type (include Selector's Property and ClientFunction promise)`. I don't mind. Should link be `drag-to-element`?. May be [DragToElement Action Options](action-options.md#dragtoelement-options)?. Sorry, you right. lets use some simple async function e.g. `fs.writeFile` or something. oops, you right. let's rename `fixture`. wrong formating. Can we move it (and [this](https://github.com/DevExpress/testcafe/pull/1849/files#diff-2554eb3e168f40fd07e2bd9e3e175644R195)) in less? Or we need to set `display` here because of size calculation?. For me better looks following check:\nawait t.expect(error.length).notOk();\nBecause strictly saying if `error[0]` will empty string this assertion will be ok and it's not what's expected.. I don't quite agree but it's not big deal. I expect no errors at all and if there are some than something went wrong and I need to debug. I agree `A value expected to be 'undefined' but it was 'Prop Type Error: a specific type error is wrong'` variant is much more informative but I just said about one border case: when e.g. `error -> ['', '','']`.\nAny way I don't mind staying `await t.expect(error[0]).notOk();` :). May be we should add special sections at least for 'Integration with CI Systems'? . Default value for `visibilityCheck` parameter is `false`. Lets write ` Selector(cta-button, { visibilityCheck: true });`. I think it's too long condition. Can we simplify it by extraction some vars? . let's extract `10` in a const. may be better to extract this method to another file. What do you think?. wrong indent . Should we mention here [actions](https://github.com/DevExpress/testcafe/blob/3638f55ec4285630a6e8d5a2ae129727ec5eb429/src/test-run/commands/actions.js#L355) which don't check element visibility?\n. May be add `await`?. SetFilesToUploadCommand and ClearUploadCommand. Maybe we need subdirectory for elements screenshots?\nSmth like this `{currentDate}\\test-{testIndex}\\{userAgent}\\elements\\{screenshotIndex}.png`. Yes, we have. You can use these options for cropping image of big element.  It's quite conveniently e.g. to use bottom border (`right` coord) and just set width/height area which you interest in. May be should try to describe them clearer.. We can use not only CSS selector for `Selector` argument. `Many websites contain elements that may be invisible or non-existent at times.`\nThere is just conditional execution of an action.. ok, I don't mind. still `page DOM`. you can use arrow function here. redundant brackets (here and below). we can use arrow functions in our tests independently of browsers at all. We usually use this variantjs\nvar cursorPosition   = inverseSelection ?\n        textSelection.getSelectionStart(textarea) : \n        textSelection.getSelectionEnd(textarea);\n. Let's use everywhere `domUtils.setElementValue` and `domUtils.getElementValue` instead of e.g. `nativeMethods.textAreaValueGetter.call(...)`.\nWhat do use think?. May be create `getChildCount` method in `domUtils`?. Can we use this methods everywhere instead of duplications [here](https://github.com/DevExpress/testcafe/pull/2026/files#diff-6c23a69054af00eb47668bb28db269bdR1)\n. may be add folder for `browser-manipulation` command, because `ensureCropOptions` is used only there. let use just `window.top === window` \nAFAIR we [get rid of `window.self`](https://github.com/AlexanderMoskovkin/testcafe/commit/cf325a85fb3eee193f46dbd9e0dfc32460562058). may be move this function to `src/utils/` and call e.g. `enforceInRange` to get rid of two [similar functions](https://github.com/DevExpress/testcafe/pull/2026/files#diff-6f3455b3adb657ef8e557804aba41f0aR4). we could specify here which dimension raises error, what do you think will it helpful?. wrong formating for these two lines. Do we need this file?. may be better use fancy `const/let` here like in the other examples. extra brackets. Should we mention 'screenshot path' option? This example will not work without it.. `no lnoger`. we can use `ClientFunctions` in assertions directly, e.g.\n`await t.expect(getInternalScrollEventsCount()).lte(1);`. Shall we add a section about `TestCafe Live` in our [`Recipes`]?(https://devexpress.github.io/testcafe/documentation/recipes/). Let's put these aseertions in chainjs\nawait t\n    .expect('...')\n    .expect('...');\n. @miherlosev ask you to change `.expect(hiddenInput.value).eql('1')` -> `.expect(hiddenInput.count).eql('1')` because otherwise the test fails. Please add chain here too. wrong formating. Ok) didn't notice. As far as I know `srcElement` exists only in IE 6-8 so we can get rid of it.. can we just check here `target.isDisabled`?. Later we return `false` in this case. we always add line break after a vars declaration:js\nvar/const/let a = 'foo';\n//other code\nORjs\na.foo = 'for';\n//other code\n. extra blank line. Let @VasilyStrelyaev check the text, if it's not done yet. Test contains click only on the `option` with text `\"Two\"`.\nLet's do not check the `one` option here, e.g.js\nif (select !== e.target && optTwo !== e.target)\n    throw new Error('Shadow element appeared in user event handler');\n. We don't need it anymore. Strange name for the test. This is the same line as above. we don't need this blank line. We can use just string here, can't we?. We need to check type of url template value and create error for a case when we cannot parse it. Please use here `DEFAULT_SELECTOR_TIMEOUT` too. All TestCafe assertions are `expect`. May be better just say 'assertion' or '`contains` assertion method'. There is should be a semicolon. This timeout is redundant. The test should work properly without it.. Let's add space before comment (after semicolon). Wrong formating. Please check formating in all examples (including html).. Maybe we should add brackets `runner.browsers(['safari','chrome'])`. There is a space before the text after `//`. But there aren't in other comments. Let's make them consistent.. Let's get meaningful name, e.g. `getElementText`. I offer write assertion: `await t.expect(getElementText()).contains('expectedText');` instead of `console.log`. According to conts it should be `Customer ${customerName}: ${saleAmount}`. I don't sure in this case, but I still prefer real assertions. Extra `});`. TestCafe Selector can return DOM Node, e.g.js\nconst textNode = Selector(() => document.getElementsByTagName('span')[0].childNodes[0]);\nawait t.expect(textNode.exists).ok();\nThis example makes sense only if we need to use a selector in dependencies, so maybe we should say about in description of this example.. let's move `else if` to the next line. Discussed in private. Discussed in private. `stateSnapshot` isn't 'string or null' anymore, is it?. please add new line after new var. Can we move `useRole` to `fixture.beforeEach`?. should we use `isVisibleTextNode` for textNodes?. faster will be use `arrayUtils.some(node.childNodes,...`. To do it we need to extract predicate function from `get Visible Children`.. We ussually simplify this type of ternary expression `:isContentEditableRoot || breakLineElements.length`. we already have had `styleUtils.isNotVisibleNode` please check methods. Can we merge them?. [yep](https://github.com/DevExpress/testcafe/pull/2285/files#diff-ef5c498529d63a584dbbfbbeeada71e1R110), I see now. We don't have to find all `br` elements, so we can use `arrayUtils.some`  here. It seems like `isNotVisibleNode` method has incorrect name, because it used only for text nodesjs\nif (domUtils.isTextNode(el))\n        return !styleUtils.isNotVisibleNode(el);\n```\nBut the name doesn't contains info about that.. > I think we need to review all these methods and try to refactor them. But I would prefer to creafe the separate issue.\nI agree with this, but please rename isNotVisibleNode -> isNotVisibleTextNode now. Don't you mind?. Why we need to wait? Can we increase selectorTimeout here?. Let's add includeDescendants  arg to hasSelectableChildren method and use it here. Meaningful name for this const is const request = logger.requests[0];. But in this case you have to write ugly code\nconsole.log(request.request.url); . Thus, an array of requests  contains no request but logs, otherwise e.g. id would be in request.request.id. Don't you think so? @VasilyStrelyaev @churkin @AlexanderMoskovkin Could we find more suitable name?. I think we should give an example of using testRunId. We have style recommendation for RegExp vars: const START_FROM_VOWEL_RE = .... window.screenLeft  ||  window.screenX;. We can avoid so many comments for linter in this file. Please rename this.text -> this.typingText. Why we do not use native method to get realOption's text ?. ok, right. we usually write comments this way\njs\n// NOTE: some text\n// text without tab indent. In this method almost all textInput logic is written for Safari. May be it would be more clear if we e.g.: \n```js\nfunction simulateTextInput (element, text) {\n    //logic only for Safari\n}\nvar beforeContentChanged = () => {\n        if (browserUtils.isSafari)\n            needProcessInput = simulateTextInput(element, text);\n        else\n            needProcessInput = browserUtils.isFirefox || eventSimulator.textInput(element, text) || browserUtils.isIE11;\n    needRaiseInputEvent = needProcessInput && !browserUtils.isIE11;\n\n};\nWhat do you think @AlexKamaev @AndreyBelym ?. Usually I don't like nested methods, but in this case I would love to encapsulate logic for Safari in `simulateTextInput` method. We can move `forceInputInSafari`, `onSafariTextInput`, and `onSafariPreventTextInput` in it.\n@AndreyBelym . It's preferred to use strait condition where it's possible \n`var expectedInputEventRaisedCount = browserUtils.isIE11 ? 0 : 12;`. I don't get it. I can paste text in contenteditable by `ctrl+v` shortcut in IE. I think we should execute `typeText` action with `replace` option for IE. Do we?. we can store required elements (such as `const contentEditableWithModify = document.getElementById('contentEditableWithModify')`) and use DOM element `contains` method. Can we skip only `input` event check for IE and leave check for typing itself?. Oh, ok then. For me it seems little awkward that method named `checkTextNodeVisibility` can do not check visibility if we pass `onlyVisible === false` .\n@AndreyBelym . please add a blank line. I think we don't need this function anymore. Maybe we should move modules names into consts?. we can assign `const { sideMomentModulePath, mainMomentModulePath, durationFormatModulePath } = modulesPaths;` to make code more readable. For me it sounds good. Should it be in plural: `getScreenshotsInfo`?. Now we store not only passed/failed test count, but also their indexes. So. let's name these properties `passedAttempts/failedAttempts`. Except `upload` action: we do not check even element visibility for it.\n. typo -> `length`. We should not add ` this.debugLog.command(command);` for these commands (see [line](https://github.com/churkin/testcafe/blob/19ab20585dd46cf79456f6755e1e3b604b846a7e/src/test-run/index.js#L485)). Yes, we should, I mix up different methods. `this.quarantine.attempts.length > 1` ? Do we have tests for unstable/stable tests?). You've already approved it yesterday) \nIf you want to make notes in the same style create a separate PR.. Can we export this method?. May be better to extract `getCommandCtor` method and after call it with`obj, testRun` args. [`ActionBooleanOptionError`](https://github.com/DevExpress/testcafe/blob/27fb1e7195db32bb2acf9721b1d23330c2458cb4/src/errors/test-run/templates.js#L49) has a text for options, not for argument. rename please `options` -> `initOptions` (here and below), to avoid mix it up with `actionOptions`. IMHO better to declarate which options can be set in context.. What if we will set `null` as a _default_ value for not required fields?. may be replace `expression, skipVisibilityCheck, testRun` -> `expression, testRun, skipVisibilityCheck`, it's better because \n1) option `skipVisibilityCheck` become optional\n2) more common with CommandBase constructor, less chance to use wrong order. `_evaluate` method declared as sync. May be better to combine these two conditions\nexpression = ${resultVariableName} = ${isAsyncExpression ?await : ``}{expression}, ${resultVariableName};\n. Let's check smart assertions mechanism work for saved variables in some test. We have [`skip-js-errors` flag](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-e---skip-js-errors). Why not to call this one `skip-uncaught-errors`? But I'm not sure that `uncaught-errors` is enough descriptive name? @VasilyStrelyaev . Should we use these different round functions for `getAutomationPoint` only in this place? What about `drag` or `move` automation and etc.?. IMHO better to add NOTE with info e.g.: \"With TestCafe version <0.22.0 tests could pass even if they have unhandled promise rejections, but these tests will fail with new version\". Yep, let's create separate issue for IE. now we can remove this element. we can merge two this conditions\n`if(options.collectionMode && options.index !== null)`. You're right). Now we can get rid of `printStackJsErrors` setting. Should it be `1/3` according to [this](https://github.com/DevExpress/testcafe/pull/2738/files#diff-1bafe409c44a5b6770b4a40c4ab73a0eR75)?. ok, thanks for clarification. let's leave it \"private\": `_instantiateRequestFilterRules`. typo `errorSupressed->errorSuppressed`\nHere and below. maybe `isTimeoutExpired`. But the behavior didn't change.\nPlus, I think better to leave private methods with private indicator `_` in public API class.. Can we get rid of `mkdirp`?. What if we return only `forbiddenCharsList` and will check its length. We don't have any separator between two forbidden symbols' description. It could be hard to read, what do you think?. Why do we give `5` as index?\n`'path:with*forbidden|chars'.charAt(5)` -> `w`\nI think we should give 4. I'm not sure. I think testcafe users are programmer and they get used to zero-based index in the strings.\nBut I don't mind ask other opinions.. I prefer more `originalThen` or even `nativeThen`. But if you disagree it could be just `promiseThen`.. Should we focus next element if `domUtils.isSelectElement(element) === true` ?. `skipRadioGroups` (here and in the domUtils) could be `true` by default. please rename this var into `iframeElement` because we agreed to use this style. Is domUtils the good place for `focusNextElement `? What do you think @AndreyBelym . If we do not want to call `focus` if `!nextElement === true` we should call return.\nmaybe we need test for this case. we can simplify `focusBlurSandbox.focus(nextElement, () => resolve(nextElement));`. What if we rename this method `filterRadioButtonElements` and will call itjs\n//before\nallFocusable = filterFocusableElements(allFocusable, element, skipRadioGroups); \n//after\nif (isRadioButtonElement(element))\n    allFocusable = filterRadioButtonElements(allFocusable, element, skipRadioGroups); \n(not necessary). extra blank line after comment. Could we get more descriptive name for tests and fixture (I mean `describe` section)?. The best practice is adding blank lines to divide into semantic parts. yes. 1) you I describe only reports for failed tests in this section so may be we need to give it more specific title\n2) IMO this info is  quite general: reports `may also include` or may not, `most popular`.. and so on.\n3) Maybe we should  add report examples for cases described in [`Reports may also include`](https://github.com/DevExpress/testcafe/pull/2932/files#diff-ca20d2ebd78df1d64222528b9352ecc8R69) section (warnings, links to screenshots, quarantine mode). It could be a static method. Could we use `styleUtils.getScrollTop(document)`?. if we change `!fixedElement.contains(this.element)` -> `!fixedElement.contains(element)` this method can become static either. Let's make signatures more consistent:\n` const scrollToPoint    = this._getScrollToPoint(parentDimensions, maxScrollMargin, childPoint);` -> \n` const scrollToPoint    = this._getScrollToPoint(parentDimensions, childPoint, maxScrollMargin );`. (minor)\nI think it's better to divide long string like this by logic operators, e.g.:js\nreturn !this._isTargetElementObscuredInPoint(x, y) &&\n               left === parentDimensions.scroll.left && top === parentDimensions.scroll.top;\n. Is it ok that when I ran testjs\ntest('test', async t => {\n    await t.expect();\n});\nI get ` 1) Assertion method is not specified.`\nBut when I ranjs\ntest('test', async t => {\n    await t\n        .expect()\n        .click('body');\n});\nI get ` 1) TypeError: t.expect(...).click is not a function`. Yep, I know how it works. But at first this behavior seemed to me odd.\nI've seen initial issue, now I see we are trying to avoid false-positive test passing.\nSo, ok.. Should we add a link to this topic in [FAQ](https://devexpress.github.io/testcafe/faq/#my-test-fails-because-testcafe-could-not-find-the-required-webpage-element-why-does-this-happen)?. Better to give link:\n... one of the [target elements](https://devexpress.github.io/testcafe/documentation/test-api/actions/#selecting-target-elements) ...\nTo cover all scenarios. Previous variant was faster. \nI noticed we always use `getAncestorsAndSelf` and then find some element by predicate (visible, hidden, fixed), what if we add parameter: `getAncestorsAndSelf(node, predicate)`. It seems like redundant change. can it be just ` domUtils.findParent(element, true, styleUtils.isFixedElement);`. What will happen with this test run? I guess it will be failed.  We can be more specific here and event give the console screenshot. . I disagree, this selector will work strictly in described way. In all examples above we say: `Selects all elements which ....`, because nowhere we use `nth(0)`. \nProbably we should have little topic with information about difference between:\n`const allDivElements = Selector('div')` and `const firstDivElement = await Selector('div')`, I've already faced with questions about it. This conception is not obvious for some users because requires deep level of Selector understanding.. (minor)\nI prefer firstly give an example without optional parameter and then with it. For `withAttribute` method we can also mention that its `argName` and `argValue` string parameters are case sensitive . I think these two sections `Get Help` and `Issue Tracker` must go one after the other because they're pretty much connected.. typo `midule`\nAFAIK we should check all text lines including comments and test names.. Let's move this check to the other [command utils](https://github.com/DevExpress/testcafe/blob/master/src/test-run/commands/utils.js). I think we should check that other checks work correctly for `executeExpression` command:\n`isCommandRejectableByPageError`\n`canSetDebuggerBreakpointBeforeCommand`\n. I'd say justsuggestion\n    > If you are going to update the documentation follow the steps described in Contribute to Documentation.\nBecause now all procedure is different not only the fifth step.. We give links to this section from `Code contribution` section and here we again say `the procedure is similar to code contribution.` \nIMO this phrase can make me think that I need to check `Code contribution` guide, but we have all required info here.\nCan we just say e.g.:suggestion\nIf you want to fix a bug in the current documentation or make an enhancement that relates to the existing functionality, follow the instructions below.\n. What if we specify that `you have two options...` with corresponding links and the reasons which differ them beforehand. ` some screenshots the real data ` without any further explanation could make you think that you need to use a particular version. ` and main browsers` -> ` and browsers`. Should we add some note for those guys who asked us about TFS integration (why we provide this recipe instead)?. (minor) Marked list make me think that probably I have some options to choose but here we have just lower level headers. we can use `let { offsetX = defaultOffsets.offsetX , offsetY = defaultOffsets.offsetY} = this.options;`. Subject of the issue is not descriptive enough. Do we have to say what will happen if I have several config files in subfolders?. `debugOnFail` probably should be closer to `debugMode` and `appInitDelay` to `appCommand`. Maybe better to divide options into some meaningful sections . These messages are difficult to distinguish from the main text, in this file they are in the end of each paragraph but [here](https://github.com/DevExpress/testcafe/blob/4de7432773293fa82c9daaf649403e1e8387beaf/docs/articles/documentation/using-testcafe/programming-interface/runner.md) they placed in  different way.\nMaybe we should use smth like NOTE style for them. ok, I see you really have thought this through.. ok. somewhere we have `cant` and somewhere `cannot`, let's choose one form. IMO ` src/utils/get-options` is too generic name for only `getVideoOptions` and `getSSLOptions` could we make it little bit more specific?. We definitely should create an issue to support native dialogs invoked on page loading\nProbably it should be something like a hook in addition to test controller's method. We can remove this handler because we have handling of false-positive result in `runTests` method (if `shouldFail` is true), in this case we will get an error `new Error('Test should have failed but it succeeded');`. Don't you think this message is not quite clear, e.g. I try to run tests in several browser including those that are not supported\ntestcafe chrome,firefox,ie test.js --video ./video\nI'd get a correct warning but without information about browser name\n Warnings (1):\n --\n  The video recording functionality is not supported by the \"locally-installed\" browser provider.\n. IFAIK we have a common limitation about making screenshots and videos on remote browsers (see [here](https://devexpress.github.io/testcafe/documentation/test-api/actions/take-screenshot.html)). I think we can place it in this section and add a cross-link to the `Take Screenshot` action` section.. we can also mention about limitation for video recording: we can do it only for Chrome and Firefox \n. idk). Would you like to store this error close to others in `src/errors/runtime/index.js`. I know that we use it only here but maybe it'd be better to store all runtime error constructors in one place?. Seems like formatting is wrong. typo `Dublicates` -> `Duplicates `\nYou can use lodash methods id you like: `uniq` to check duplicates (`testRunErrorCodeDublicates.length === uniq(testRunErrorCodeDublicates).length)` and `intersection` to check duplicates in both arrays. I don't insist I've just offered the same assertions but with lodash util methods. Ok, I see. we probably should set `errorMessage` as `data` param for this error. I have been trying to find a good solution to get rid of unclear operations with adding/removing something in `args` and using extra class `ProcessTemplateInstruction`. I couldn't find something flawless, but maybe the following approach would be more clear:js\nexport class APIError extends Error {\n    constructor (methodName, codeOrTemplate, ...args) {\n        const template = TEMPLATES[codeOrTemplate] || codeOrTemplate; \n        //OR const template = RUNTIME_ERRORS.includes(codeOrTemplate) ? TEMPLATES[codeOrTemplate] : codeOrTemplate;\n    const rawMessage = renderTemplate(template, ...args);\n    //....\n}\n\n}\nexport class ClientFunctionAPIError extends APIError {\n    constructor (methodName, instantiationCallsiteName, code, ...args) {\n        const template = TEMPLATES[code].replace(/{#instantiationCallsiteName}/g, instantiationCallsiteName);\n    super(methodName, template, ...args);\n}\n\n}\n``\nIn this case we will not have to changeargs, use_prepareTemplateAndArgsIfNecessaryandProcessTemplateInstruction. Yep, we still need passcode toAPIError. Oook,  let's stay as it is . I think we can useerrorMessagein data as string instead an object . Corresponding list's item in the top of FAQ topic should be fixed (including an anchor link). (proposal)\nNow it looks like Studio and TestCafe version have only these two the same features and the others, described below are different. Maybe we should include these two common features in TestCafe open source block too, because in Studio we sayBased on the open-source TestCafe, and supports its major features....we can addIn addition you can.... (discussed in private). IMO it's not pretty clear name, what aboutConditional Test ExecutionorConditional Test Skip(not sure). We are going to implement a predicate function for skipping some tests, not only depends on browsers.. Nice!\nOnly absentEasy integration with popular CI systemsin Studio colon looks sad for me. Maybe call this statement justIntegration with popular CI systemsand check it for both Open source and Studio?)\nWe also can tick*forExtendable with plugins and other Node.js modulesfor Studio and give e.g. following description:Studio supports custom reporter plugins[link to docs] and you can use any Node js modules in coded tests`. I've just thought, maybe it would be useful for current/possible testcafe users to have powerful and flexible Run Configuration Manager? Should we mention about it?. ",
    "MargaritaLoseva": "\u0421an we create the Stop on error option? If the option is enabled, test execution ends if an error occurs.\n. https://github.com/DevExpress/testcafe/pull/304\n. @VasilyStrelyaev @inikulin I suppose this issue is about custom reporters. Can we close it?\nhttps://github.com/DevExpress/testcafe/pull/378 is merged\n. fpr\n. fpr\n. FPR\n. @DevExpress/testcafe Does anybody else have comments?\n. @testcafe-build-bot \\retest\n. @VasilyStrelyaev, fpr\n. @VasilyStrelyaev, fpr\n. fpr\n. fpr\n. fpr\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. fpr\n. /r-\n. I've updated my comments.\n. lgtm\n. /r-\n. lgtm\n. /r-\n. lgtm\n. FPR\n. fpr\n. FPR\n. fpr\n. fpr\n. fpr\n. fpr\n. /r\n. /r\n. lgtm\n. //cc @inikulin @VasilyStrelyaev \n. FPR\n. //cc @inikulin @VasilyStrelyaev\n. @testcafe-build-bot \\ retest\n. lgtm\n. Broken links fixed in #493 pull request\n. As for broken links, lgtm\n. lgtm\n. fpr\n. lgtm\n. lgtm\n. FPR\n. @AlexanderMoskovkin Yes, I saw the broken links. They don't work because test api topics are not complete yet. Review only the text, please.\n. FPR\nThere are still broken links to API topics, don't mind them.\n. fpr\n. fpr\nI've replaced Hybrid with Selector\n. \\cc @DevExpress/testcafe-docs \nPlease review \n. @kirovboris, @churkin  please review\n. Tests still fail due to broken links as @VasilyStrelyaev doesn't pull topics about API yet.\n. @testcafe-build-bot \\retest\n. @churkin, @kirovboris please review and merge\n. Tests fail because we have broken links in GS that is already merged.\nRebasing on top of #606 does not solve this problem.\n. @testcafe-build-bot \\retest\n. @kirovboris Yes, it's my mistake, I'll repair this.\n. FPR\n@inikulin  The current npm version badge shows v. 15.1.3. Is it normal?\n. lgtm\n. > testcafe -v\n\nis an apt sample to show testcafe 'running'\n\nYou are right. I'll change this.\n. fpr\n. fpr\n. fpr\n. fpr\n. Deployed at http://loseva-w8:8080/testcafe/\n. FPR\nDeployed at http://loseva-w8:8080/testcafe/\n. fpr\n. I'll add links to test API and browser providers after the topics are completed.\n. fpr\n. fpr\n. \\cc @DevExpress/testcafe-docs\n. lgtm\n. lgtm\n. fpr\n. fpr\n. fpr\n. FPR\n. FPR\nTests failed as there are broken links to the published providers, but they are not published yet.\n. closes #726\n. FPR\n@DevExpress/testcafe-docs\n. @inikulin Tests failed as there are broken links to the published providers, but they are not published yet.\n. fpr\n. fpr\n. I've updated this 3 hours ago in this pull request - https://github.com/DevExpress/testcafe/pull/725\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. fpr\n. fpr\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. Yaml highlighting doesn't work in the help. I still have no idea why.\n. Yaml highlighting doesn't work in the help. I still have no idea why.\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. fpr\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. \\cc @DevExpress/testcafe-docs\n. \\cc @DevExpress/testcafe-docs \n. \\cc @inikulin \n. \\cc @DevExpress/testcafe\n. I'm working on this. Starts describing this in PR #2643. I'm working on this\n. @dirk-pieterse Review the Examples of Using Client Functions.md file, please.. @testcafe-build-bot \\retest\n. I'm working on this. @dirk-pieterse @miherlosev please review. @kirovboris @miherlosev fpr. fpr @AndreyBelym @VasilyStrelyaev . fpr\n. @dirk-pieterse Please review these changes -- https://github.com/DevExpress/testcafe/pull/2372/files#diff-6b4328e517bb70724f546fb3796f8436\n. @testcafe-build-bot \\retest. @AndreyBelym Please, view if all information is technically correct after Dirk's corrections. @testcafe-build-bot \\retest\n. @AndreyBelym fpr\n. @dirk-pieterse please review. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. \\cc @kirovboris @miherlosev . Broken links in Release notes have been fixed\n. I'm working on this\n. @testcafe-build-bot \\retest. #2607 was merged (instead of this PR). @dirk-pieterse Please review only the changed text, not the whole files.. Add a short name for the --skip-uncaught-errors option: -u\nand place this option after -e, --skip-js-errors in the list. @dirk-pieterse Please, review only the changes (New section: v0.20.5 (2018-7-17)), not the whole file. Yes, let's merge this PR after the PR about HTTPS.. We'll describe this feature later. I've opened another PR #2645 instead of this. @testcafe-build-bot  retest\n. Maybe, Report Messages Lister or Report Messages Validator\n. Namely these titles or such titles (all the pairs of options)? \n. @inikulin, Do you like the Vasily's variant? Should I change the code according this variant?\n. Since we mention reporters here and in the CLI topic, are we going to create a separate section about them (like Aliases)? Should we do this right now or later?\n. The topic about custom reporters doesn't exist yet. After creating it, we'll add a link.\n. I'll change to \"runs tests\". We don't know which tests are in the file, we only know the name of file.\n. https://github.com/DevExpress/testcafe/pull/330/files#diff-619aff4845280917d61f0dfe5e1a6071R82\nReplace with: \n//NOTE: decrease the step counter if the action restarts while waiting for an element to be available (T230851)\n. Replace with:\n\"// NOTE: we should not stop the test running if an error occurs during page unload. As a result, we\n// would destroy the session and wouldn't be able to get the next page in the browser.\n// We have to set the deferred error to the task to have the test fail after page reload.\"\n. Replace the text with \"should be successful when the expected beforeUnload dialog appears\"\n. Replace the text with \"should fail if the expected beforeUnload dialog does not appear\"\n. Replace the text with \"should fail if an unexpected beforeUnload dialog appears\"\n. > Unexpected before unload dialog - should be failed\nReplace with \"An unexpected beforeUnload dialog - should fail.\"\n. > No expected before unload dialog - should be failed\nReplace with \"No expected beforeUnload dialog - should fail.\"\n. > Before unload dialog - should succeed\nReplace with: \"The expected beforeUnload dialog - should be successful.\"\n. > The expected system beforeUnload dialog did not appear.\nThe expected beforeUnload system dialog has not appeared.\n. >   ' Unexpected system beforeUnload dialog message appeared.'\nArticle has been added: \"An unexpected system beforeUnload dialog appeared.\"\n. Replace with \"The expected beforeUnload dialog - should be successful.\"\n. Replace with \"An unexpected beforeUnload dialog - should fail.\"\n. Replace with \"No expected beforeUnload dialog - should fail.\"\n. Correctors said that \"should\" can be used as well. Let's use \"should\". I'll update my comments.\n. > Native dialogs handling\nReplace with \"Handling native dialogs\"\n. Ok, let's use the variant that was earlier. Don't mind my previous comment.\n. Should pass when attaching files with an added input\n. Should pass when attaching files with a replaced input\n. Should fail when trying to attach files with a removed input\n. Should fail when uploading a non-existent file\n. Should fail when uploading multiple files including non-existent files.\n. Upload multiple files - should fail\n. Upload a single file - should fail\n--or--\nUpload a non-existent file - should fail\n. Upload multiple files - should fail\n. Upload for an added element\n. Upload for a replaced element\n. Upload for a removed element - should fail\n. Upload a single file - should fail\n. If a target element is a child of a contentEditable element, we need to call focus for the contentEditable element.\n. Test fails on sending a request\n. Should pass if an unstable test passes in most of runs\n. Should fail if an unstable test fails in most of runs\n. Should pass when using an external library in a cross-domain page.\n. Using shared code in iframe pages\n. Should pass when using an external library in a same-domain page\n. Should pass when using an external library in a iframe page without source\n. Should pass when using a mixin in a cross-domain page\n. Should pass when using a mixin in a same-domain page\n. Should pass when using a mixin in a iframe page without source\n. Let's omit \"the\" as we omit articles in other step names. So, it should be:\nNavigate to test page\n. Let's omit \"the\" as we omit articles in other step names. So, it should be:\nNavigate to test page\n. reporterpluginhost is the object name spelt as one word. Should I separate the words in this case?\nFor example, the words are not separated by a hyphen here, they are in CamelCase:\nhttps://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/using-testcafe/programming-interface/createTestCafe.md \nI'll write \"reporterpluginhost\" in CamelCase\n. > What do you mean by etalon reports?\nbaseline reports\n. Ok, I'll mention this in another place. \nAs I understand, the directory name is not important.\n. > And generator's prompt tries to obtain suggested project name from the dir name.\nI've added this info to the topic.\n. Omit \"the\" before reporter, add \"the\" before Yeoman:\nThe Yeoman generator for reporter plugins.\n. the library for performing platform-dependent actions on browser windows\n. the website assets\n. Before each reporter add the. For example:\nthe \"Spec\" reporter plugin.\n. the legacy API support\n. Please, add \"the\" before Yeoman:\nThe Yeoman generator for reporter plugins\n. Article is needed:\nin the raw format\n. An attempt to execute a command when a previous command is still being executed was detected.\n. +// TODO: move this file to the 'client' dir.\n+// It should be placed in the new client runner directory. Currently, we have only the legacy client runner.\n+// We leave this file here and will move it when we start to implement the new client runner.\n. Should raise an error if it cannot parse a raw file.\n. Promise rejection is expected\n. Should be resolved if the test passed\n. // NOTE: simulates page reload before the pending step is\n// executed. This leads to a repeating ready message.\n. The command should be rejected\n. Should call test.fn() and complete the test after the function is resolved\n. Should call test.fn() and complete the test with an error after the function is rejected\n. Should raise an error on an attempt to execute a new command while the previous command execution is not yet finished.\n. The command should be rejected\n. Error: An attempt to execute a command when a previous command is still being executed was detected.\n. Should reject the pending command if an js-error is raised\n. The command was executed successfully, but it had to be rejected\n--or--\nPromise rejection is expected\n. Should reject the next command if there is no pending command and a js-error is raised.\n. Should create the pending error when the test is done.\n. Of course, .js. \n)) I'm still in developing the OData service.\n. Yes, I had the same doubt\n. @inikulin, do you mind if I'll locate the Using Reporter Development Version within TestCafe section between the Previewing Report and Publishing Reporter to NPM sections, not in the Impementing Reporter section? \n. This method should return either a dictionary or array object with errors depending on the number of browsers and errors. The possible variants:\n\u00a0\nIf tests run in one browser, the method returns an array with errors regardless of the number of errors.\n\u00a0\nIf tests run in several browsers and the same error occurs in all of them, the method returns an array as well. \n\u00a0\nIf different errors occur in several browsers, a dictionary object is returned. In this case, browser aliases are keys, and values are arrays of errors.\n. When the topic doesn't contain this sentence (it contains only info about the capability to extend TestCafe functionality by using plugins), Vasily asks me to write some intro.\n. I'm afraid that the topic will be too long.\n. I like the current structure with separate topics. @VasilyStrelyaev, what do you think?\n. yes, I've lost \"of\" in my phrase\n. I've checked this sentence with Elsa Castanjo. She suggests the following variant: \"To test your reporter operates well, you can use the test Gulp task.\"\n. We have such references in other topics: Custom Reporter Plugin, Helper Methods. \nWe've discussed this with @VasilyStrelyaev and decided to add TOC to big topics.\n\nit should be in a menu\n\nThe topic's sections can be in the menu, if we divide it to separate topics/page. However, I think, GS should be a single page, so that users can go through the GS steps without additional clicks to switch to the next section (as we do for Custom Reporter Plugin)\n. It's a standard intro for GS, that quickly describes what the topic covers.\n. I think we shouldn't use Node's assert in the example. Firstly, the official Node documentation says that it \"is not intended to be used as a general purpose assertion library\".\nSecondly, there is no problem to use an assertion from another library. \nIt would be strange to use node's assert in the example and to say about some restrictions.\n. We can simply add the link to the Running test section.\n. Don't understand this comment. worth or worse mention??\n. It's the instruction on how to create a test file - it's normal for a tutorial, I think.\n. Ok, I'll delete this sentence at all.\n. As for \"Creating Basic Test\", we already have the \"Creating a Test\" section. How about \"Writing Test Code\"?\n. > Moreover, the whole flow gets strange\nIt will also be strange if we name this section \"Creating Basic Test\" or \"Implementing Test Logic\" (as we already have section \"Creating a Test\". \n\nWhat if we get rid of this section and place \"Performing Actions on a Page\" to the same level as \"Viewing results\"?\n\nI'd better leave \"Adding/Writing/Modifying Test Code\"\n. I have used the first way - growing step-by-step\n. I also like the current variant (with growing step-by-step).\nI don't want to use comments to describe this code, because comments will litter the test's clear structure. \nAlso, it's not good idea to describe all the test elements below the code - too much info at once.\n. Step-by-step version is already commited\n. I suppose, this is because one-word number should be written out.\n. Can we rename the getDescriptorDefaultValues method to getDescriptor?\n. > Pete\nIs it a typo? Should be \"Peter\"?\n. Ok, now I understand\n. > use navigateTo action\n\"the\" is required\n. > Relative path to the folder where screenshots should be saved resolved from the screenshot directory specified via an [API]\n1) I would divide this into two sentences.\n2) An article is required before relative path\n. > Screenshot directory\nan article missed again\n. > maybe use imperative mood here?\nImperative mood is already used in the section header.\n. Let's rename this method - screenshotWindow. \"Screenshot\" is not a verb, so it should be named vice versa, for example, windowScreenshot or browserScreenshot or takeBrowserScreenshot\n. Andrey said that \"browser\" should configure in the method name as in the openBrowser and closeBrowser methods. I'd use \"takeScreenshot\",  we've used such a method in browser-natives as well.\n. There is no Contributin.md file yet. Should we create it?\n. @inikulin  There is no Contributing.md file yet. Should we create it?\n. I've written about this in index.md and helper-methods.md. I think, it is enough.\n. @inikulin  Why should we mention about this as a requirement? We don't specify the whole plugin name manually, the name is created automatically (the testcafe-browser-provider- prefix is added automatically), we only need to specify the last part.  And we've already mentioned about the provider package name.\n. @inikulin  It was copied from here: https://github.com/DevExpress/generator-testcafe-browser-provider/pull/1/files#diff-bd5f502f79263fa643dbf5dac06d9878R48\nMaybe, it would be better to use throw new Error('Not implemented'); as we have in https://github.com/DevExpress/generator-testcafe-reporter/blob/master/generators/app/templates/src/index.js\n. We've already written: \"Suppose you have a GitHub project, you installed TestCafe to that project, ....\"\n. @inikulin \nOk, I'll write about cloning the repository, but I don't yet understand why we need to run npm install from examples\\running-tests-using-travis-and-saucelabs? We aren't going to run this example locally. So, it is enough to perform the following steps:\n1. Clone the TestCafe repository to your machine.\n   git clone https://github.com/DevExpress/testcafe.git\n   cd examples/running-tests-using-travis-and-saucelabs\n   npm install\n2. Create a new GitHub repository and copy the sample files from the examples/running-tests-using-travis-and-saucelabs to your repository.\n3. Go through steps described in the topic.\nIs it right?\n. @inikulin This paragraph already contains info about CLI. What do you mean?\n. @inikulin Can we introduce the Fixture object to the documentation? Currently, when we describe page, afterEach and beforeEach, we use the fixture declaration term.\n. I don't understand what you mean.. I'll add this info to the topic about meta, not to Changelog.. this link is added in the onRequestTo description. It is necessary to add it here\n. It isn't convenient to perform this from Vasily's fork.\nI'll rename this topic and fix links to it from my fork in a separate PR after merging this PR.. It's not an error. This section (https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/using-selectors.html#define-assertion-actual-value) provides an example where you do not need to use await or set the allowsUnawaitedPromise option to true. As we assert a selector property, TestCafe uses Smart Assertion Query Mechanism, that means it automatically waits for the property to obtain a value.\n. The request part of the logged request. The response part of the logged request. Attaches. Creates RequestMock. Creates RequestLogger. The RequestHook class used to create a custom HTTP request hook. Creates a request hook. The URL of the webpage where tests start.. Specifies the additional information for all tests in the fixture. This information can be used in reports.. Specifies the additional information for all tests in the fixture. This information can be used in reports.. The set of the RequestHook subclasses.  Specifies the additional information for the test. This information can be used in reports.. Specifies the additional information for the test. This information can be used in reports.. The set of the RequestHook subclasses. May be: Use the ... command to output aliases for all the auto-detected browsers.. As we are in the Local Browsers section, we can write: Use the ... command to output aliases for locally installed browsers. . to learn more -> for more information. >will\nfuture tense . The TestCafe server?. Yes, we'll merge this string with a string from the PR about HTTPS. The Drag action works incorrectly. The mousemove event is sent to a wrong element during dragging. Click is raised but should not. Should not raise the drag and drop events if the mousedown event is prevented. if the mousedown event. // NOTE: we should skip simulating drag&drop's native behavior if the mousedown event was prevented (GH - 2529). the onclick handler. >'element whose screenshot'\nYes, TestCafe provides functionality to take a screenshot of a separate element on a webpage. Element is a term.. At first we give information about the root path. Then we describe how to specify the relative path. And I think we should start this sentence from \"The relative path is specified\" as in my version. Why you revert this sentence?. I think that we can use passive voice here. If we use Dirk's variant \"The root path where the screenshots are saved.  The default path patterns or the method's screenshotPathPattern parameter specifies the relative path.\", users can think that default path patterns relates to the root path. \nWhat do you think? @VasilyStrelyaev @AndreyBelym . No!\nThe 'path' parameter specifies the base path to which the screenshots are saved. The relative path to a screenshot path is defined by the default path patters. You can override the default patterns with a custom pattern using the screenshotPathPattern parameter.. In the last rules from Ray, there are no rules about Passive Voice. He uses Passive Voice in his examples:\n\nIn our situation, I think we can use Passive Voice because users can easily understand a concepts about root path and relative path.. @Nuarat , the latest ?\nShould we add correctors to reviewers?. Execute a sync expression and save to a variable. Execute an async expression. Should store an async property value to a variable. Store an execution result to a variable. The same. Article is required.. The same. Article is required.. The same. Article is required.. was an object. Should format the \"actionBooleanArgumentError\" message. > the tests directory\nmay be, the test (singular) directory ?. Rename this option to skipUncaughtErrors like the cli option.. Yes, good idea to rename the option to \"skip-uncaught-errors\". Also, rename the option for the run method.. The phrase is checked with correctors, it is ok.. I think \"stop\" is ok. We have the same description for --skip-js-errors\nAs about note about concurrency, I'll add it.\n. I think my phrase is good. My text was checked by Yana Orlova, it is correct.. suggestion\n* [Issue Tracker](#issue-tracker). suggestion\nGo to our website for full [documentation](https://devexpress.github.io/testcafe/documentation/getting-started/) on TestCafe.. suggestion\nTo create your own plugin for TestCafe, you can use these plugin generators:. suggestion\n* TestCafe no longer fails with the `ERR_STREAM_WRITE_AFTER_END` error after restarting tests in live mode ([#3322](https://github.com/DevExpress/testcafe/issues/3322)). suggestion\n* TestCafe no longer fail with the `ERR_STREAM_WRITE_AFTER_END` error after restarting tests in live mode ([#3322](https://github.com/DevExpress/testcafe/issues/3322)). suggestion\n* Now TestCafe doesn't ignore video options and encoding specified in a configuration file ([#3415](https://github.com/DevExpress/testcafe/issues/3415)). suggestion\n* Live mode: TestCafe no longer stops test execution in multiple browsers if tests do not contain actions ([#3410](https://github.com/DevExpress/testcafe/issues/3410)). suggestion\n* Now TestCafe allows passing the `headers` option of the `fetch` function as an Array ([testcafe-hammerhead/#1898](https://github.com/DevExpress/testcafe-hammerhead/issues/1898)). ",
    "darlanmendonca": "@inikulin when my spec fails, the testcafe continues run.\nhas an option to stop if fails?. @inikulin no, I meant to stop the tests once the first break. Exactly like mocha --bail. @inikulin nice, I will do. here https://github.com/DevExpress/testcafe/issues/1323 :D. anyone can help me with the CI? I dont know if is an error in my files, or if is anything with .babelrc (CI instable?) \n. @inikulin thanks, you're right, in client-scripts-bundle.js:34 I have a relative path that I dont update.\nI fix, and now find for relative paths that I forget\n. yep, when you can of course :D\n. from \"Does this problem reproduces if you run tasks locally\" @inikulin,\nI try run the tasks that I know locally, but has many tasks in different environtments, etc.\nI need a help of team, or who know the tasks, to a nice code review, and test tasks\n. ok, thanks @AlexanderMoskovkin\n. @AlexanderMoskovkin how I can rebase? with\nsh\ngit rebase upstream/gulp-tasks-by-file\n?\n. thanks @inikulin, rebased.\n. :D oh yeah, let's go\n. any idea why task 'travis' broken in CI?\nI see  in log an error using gulp-eslint module writed and exported in es6\nI will check the env GULP_TASK\n. humm, I think is better do a PR to gulp-eslint to add support in es5\nfor now we can do this, only require gulp-eslint in node > 4\nbut if gulp-eslint accept our PR, we back and remove this \"conditional requirement\" from our lint.js\n. humm, ok\nif they dont want add support to node 0.10 (with babel transpile), we can continue with conditional require\nI push, waiting CI to tests\n. @inikulin know the problem in CI? The number of free machines (2) is less than requested (3)\n. @AlexanderMoskovkin sorry by delay, running with a work these days. To night I will have time, then I continue to we can complete this PR :D\n. @AlexanderMoskovkin looking now, anyone can help me? \nthe task test-website-travis broke because cant access close method of websiteServer (config.js:142)\n. @AlexanderMoskovkin oh yes, I wrap with quotes. This, I was already using quotes, and also had already tried without. And the error occurs in both cases. @AlexanderMoskovkin first thanks, we need try all, :D\nbut I already do it this, I get the name from this command testcafe -b browserstack\ntestcafe and testcafe-browser-provider-browserstack exists too, in my node_modules (locally only)\nI really guess that is a bug, because on parse process.argv, they split the script (a string), by space, and we dont have flags like --browser, or --files, just a string separated by space. @AlexanderMoskovkin I tried now the alpha version, but problem persists :(\nsame error. @inikulin my script is that\nsh\n./node_modules/.bin/testcafe 'browserstack:chrome@56.0:OS X Sierra' \\\n./sources/scripts/*.spec.js \\\n--app './node_modules/.bin/http-server . -s'\nbrowserstack allow to use last chrome, just using \"browserstack:chrome\", but to use an iphone for example, we need to fix this. @AndreyBelym I tried now, same error, oth in the latest version and in the alpha of testcafe :(. sure, the list of testcafe -b browserstack is\nsh\n\"browserstack:iPhone 4@4.0\"\n\"browserstack:iPhone 3GS@3.0\"\n\"browserstack:iPhone 7 Plus@10.0\"\n\"browserstack:iPhone 7@10.0\"\n\"browserstack:iPhone SE@10.0\"\n\"browserstack:iPad Pro (9.7 inch)@10.0\"\n\"browserstack:iPhone 6S Plus@9.3\"\n\"browserstack:iPhone 6S@9.3\"\n\"browserstack:iPad Pro@9.3\"\n\"browserstack:iPad Air 2@9.3\"\n\"browserstack:iPad Mini 4@9.3\"\n\"browserstack:iPhone 6 Plus@8.3\"\n\"browserstack:iPhone 6@8.3\"\n\"browserstack:iPad Air@8.3\"\n\"browserstack:iPad Mini 2@8.3\"\n\"browserstack:iPhone 5S@7.0\"\n\"browserstack:iPad Mini@7.0\"\n\"browserstack:iPad 4th@7.0\"\n\"browserstack:iPhone 5@6.0\"\n\"browserstack:iPhone 4S (6.0)@6.0\"\n\"browserstack:iPad 3rd (6.0)@6.0\"\n\"browserstack:iPhone 4S@5.1\"\n\"browserstack:iPad 3rd@5.1\"\n\"browserstack:iPad 2 (5.0)@5.0\"\n\"browserstack:iPad 2@4.3.2\"\n\"browserstack:iPad@3.2\"\n\"browserstack:Sony Xperia X10@1.6\"\n\"browserstack:HTC Hero@1.5\"\n\"browserstack:Google Nexus 4@4.2\"\n\"browserstack:HTC Wildfire@2.2\"\n\"browserstack:Samsung Galaxy S@2.2\"\n\"browserstack:Motorola Droid Razr@2.3\"\n\"browserstack:Samsung Galaxy Note@2.3\"\n\"browserstack:Samsung Galaxy S2@2.3\"\n\"browserstack:HTC One M8@4.4\"\n\"browserstack:Samsung Galaxy S5 Mini@4.4\"\n\"browserstack:Samsung Galaxy S5@4.4\"\n\"browserstack:Samsung Galaxy Tab 4 10.1@4.4\"\n\"browserstack:Samsung Galaxy Note 2@4.1\"\n\"browserstack:Samsung Galaxy S3@4.1\"\n\"browserstack:Google Nexus 7@4.1\"\n\"browserstack:Google Nexus 5@5.0\"\n\"browserstack:Google Nexus 6@5.0\"\n\"browserstack:Google Nexus 9@5.0\"\n\"browserstack:Sony Xperia Tipo@4.0\"\n\"browserstack:HTC One X@4.0\"\n\"browserstack:Google Nexus@4.0\"\n\"browserstack:Motorola Razr@4.0\"\n\"browserstack:Samsung Galaxy Tab 2 10.1@4.0\"\n\"browserstack:Samsung Galaxy Note 10.1@4.0\"\n\"browserstack:Amazon Kindle Fire HD 8.9@4.0\"\n\"browserstack:Samsung Galaxy Note 3@4.3\"\n\"browserstack:Samsung Galaxy S4@4.3\"\n\"browserstack:Amazon Kindle Fire HDX 7@4.3\"\n\"browserstack:Nokia Lumia 520@8.1\"\n\"browserstack:Nokia Lumia 630@8.1\"\n\"browserstack:Nokia Lumia 925@8.1\"\n\"browserstack:Nokia Lumia 930@8.1\"\n\"browserstack:Motorola Atrix 4G@540x960\"\n\"browserstack:Motorola Droid X@480x854\"\n\"browserstack:Samsung Galaxy S II@480x800\"\n\"browserstack:Nokia 5800 XpressMusic@360x640\"\n\"browserstack:LG Optimus One@320x480\"\n\"browserstack:HTC Wildfire@240x320\"\n\"browserstack:Samsung Galaxy Tab 10.1@1280x800\"\n\"browserstack:Samsung Galaxy Tab@1024x600\"\n\"browserstack:yandex@14.12:OS X Sierra\"\n\"browserstack:firefox@53.0 beta:OS X Sierra\"\n\"browserstack:firefox@52.0:OS X Sierra\"\n\"browserstack:firefox@51.0:OS X Sierra\"\n\"browserstack:firefox@50.0:OS X Sierra\"\n\"browserstack:firefox@49.0:OS X Sierra\"\n\"browserstack:firefox@48.0:OS X Sierra\"\n\"browserstack:firefox@47.0:OS X Sierra\"\n\"browserstack:firefox@46.0:OS X Sierra\"\n\"browserstack:firefox@45.0:OS X Sierra\"\n\"browserstack:firefox@44.0:OS X Sierra\"\n\"browserstack:firefox@43.0:OS X Sierra\"\n\"browserstack:firefox@42.0:OS X Sierra\"\n\"browserstack:firefox@41.0:OS X Sierra\"\n\"browserstack:firefox@40.0:OS X Sierra\"\n\"browserstack:firefox@39.0:OS X Sierra\"\n\"browserstack:firefox@38.0:OS X Sierra\"\n\"browserstack:firefox@37.0:OS X Sierra\"\n\"browserstack:firefox@36.0:OS X Sierra\"\n\"browserstack:firefox@35.0:OS X Sierra\"\n\"browserstack:firefox@34.0:OS X Sierra\"\n\"browserstack:firefox@33.0:OS X Sierra\"\n\"browserstack:firefox@32.0:OS X Sierra\"\n\"browserstack:firefox@31.0:OS X Sierra\"\n\"browserstack:firefox@30.0:OS X Sierra\"\n\"browserstack:firefox@29.0:OS X Sierra\"\n\"browserstack:firefox@28.0:OS X Sierra\"\n\"browserstack:firefox@27.0:OS X Sierra\"\n\"browserstack:firefox@26.0:OS X Sierra\"\n\"browserstack:firefox@25.0:OS X Sierra\"\n\"browserstack:firefox@24.0:OS X Sierra\"\n\"browserstack:firefox@23.0:OS X Sierra\"\n\"browserstack:firefox@22.0:OS X Sierra\"\n\"browserstack:firefox@21.0:OS X Sierra\"\n\"browserstack:firefox@20.0:OS X Sierra\"\n\"browserstack:firefox@19.0:OS X Sierra\"\n\"browserstack:firefox@18.0:OS X Sierra\"\n\"browserstack:firefox@17.0:OS X Sierra\"\n\"browserstack:firefox@16.0:OS X Sierra\"\n\"browserstack:firefox@15.0:OS X Sierra\"\n\"browserstack:firefox@14.0:OS X Sierra\"\n\"browserstack:firefox@13.0:OS X Sierra\"\n\"browserstack:firefox@12.0:OS X Sierra\"\n\"browserstack:firefox@11.0:OS X Sierra\"\n\"browserstack:safari@10.0:OS X Sierra\"\n\"browserstack:chrome@56.0:OS X Sierra\"\n\"browserstack:chrome@55.0:OS X Sierra\"\n\"browserstack:chrome@54.0:OS X Sierra\"\n\"browserstack:chrome@53.0:OS X Sierra\"\n\"browserstack:chrome@52.0:OS X Sierra\"\n\"browserstack:chrome@51.0:OS X Sierra\"\n\"browserstack:chrome@50.0:OS X Sierra\"\n\"browserstack:chrome@49.0:OS X Sierra\"\n\"browserstack:chrome@48.0:OS X Sierra\"\n\"browserstack:chrome@47.0:OS X Sierra\"\n\"browserstack:chrome@46.0:OS X Sierra\"\n\"browserstack:chrome@45.0:OS X Sierra\"\n\"browserstack:chrome@44.0:OS X Sierra\"\n\"browserstack:chrome@43.0:OS X Sierra\"\n\"browserstack:chrome@42.0:OS X Sierra\"\n\"browserstack:chrome@41.0:OS X Sierra\"\n\"browserstack:chrome@40.0:OS X Sierra\"\n\"browserstack:chrome@39.0:OS X Sierra\"\n\"browserstack:chrome@38.0:OS X Sierra\"\n\"browserstack:chrome@37.0:OS X Sierra\"\n\"browserstack:chrome@36.0:OS X Sierra\"\n\"browserstack:chrome@35.0:OS X Sierra\"\n\"browserstack:chrome@34.0:OS X Sierra\"\n\"browserstack:chrome@33.0:OS X Sierra\"\n\"browserstack:chrome@32.0:OS X Sierra\"\n\"browserstack:chrome@31.0:OS X Sierra\"\n\"browserstack:chrome@30.0:OS X Sierra\"\n\"browserstack:chrome@29.0:OS X Sierra\"\n\"browserstack:chrome@28.0:OS X Sierra\"\n\"browserstack:chrome@27.0:OS X Sierra\"\n\"browserstack:opera@43.0:OS X Sierra\"\n\"browserstack:opera@42.0:OS X Sierra\"\n\"browserstack:opera@41.0:OS X Sierra\"\n\"browserstack:opera@40.0:OS X Sierra\"\n\"browserstack:opera@39.0:OS X Sierra\"\n\"browserstack:opera@38.0:OS X Sierra\"\n\"browserstack:opera@37.0:OS X Sierra\"\n\"browserstack:opera@36.0:OS X Sierra\"\n\"browserstack:opera@35.0:OS X Sierra\"\n\"browserstack:opera@34.0:OS X Sierra\"\n\"browserstack:opera@33.0:OS X Sierra\"\n\"browserstack:opera@32.0:OS X Sierra\"\n\"browserstack:opera@31.0:OS X Sierra\"\n\"browserstack:opera@30.0:OS X Sierra\"\n\"browserstack:opera@29.0:OS X Sierra\"\n\"browserstack:opera@28.0:OS X Sierra\"\n\"browserstack:opera@27.0:OS X Sierra\"\n\"browserstack:opera@26.0:OS X Sierra\"\n\"browserstack:opera@25.0:OS X Sierra\"\n\"browserstack:opera@24.0:OS X Sierra\"\n\"browserstack:opera@23.0:OS X Sierra\"\n\"browserstack:opera@22.0:OS X Sierra\"\n\"browserstack:opera@21.0:OS X Sierra\"\n\"browserstack:opera@20.0:OS X Sierra\"\n\"browserstack:opera@19.0:OS X Sierra\"\n\"browserstack:opera@18.0:OS X Sierra\"\n\"browserstack:opera@17.0:OS X Sierra\"\n\"browserstack:opera@16.0:OS X Sierra\"\n\"browserstack:opera@15.0:OS X Sierra\"\n\"browserstack:opera@12.15:OS X Sierra\"\n\"browserstack:opera@12.14:OS X Sierra\"\n\"browserstack:opera@12.12:OS X Sierra\"\n\"browserstack:yandex@14.12:OS X El Capitan\"\n\"browserstack:firefox@53.0 beta:OS X El Capitan\"\n\"browserstack:firefox@52.0:OS X El Capitan\"\n\"browserstack:firefox@51.0:OS X El Capitan\"\n\"browserstack:firefox@50.0:OS X El Capitan\"\n\"browserstack:firefox@49.0:OS X El Capitan\"\n\"browserstack:firefox@48.0:OS X El Capitan\"\n\"browserstack:firefox@47.0:OS X El Capitan\"\n\"browserstack:firefox@46.0:OS X El Capitan\"\n\"browserstack:firefox@45.0:OS X El Capitan\"\n\"browserstack:firefox@44.0:OS X El Capitan\"\n\"browserstack:firefox@43.0:OS X El Capitan\"\n\"browserstack:firefox@42.0:OS X El Capitan\"\n\"browserstack:firefox@41.0:OS X El Capitan\"\n\"browserstack:firefox@40.0:OS X El Capitan\"\n\"browserstack:firefox@39.0:OS X El Capitan\"\n\"browserstack:firefox@38.0:OS X El Capitan\"\n\"browserstack:firefox@37.0:OS X El Capitan\"\n\"browserstack:firefox@36.0:OS X El Capitan\"\n\"browserstack:firefox@35.0:OS X El Capitan\"\n\"browserstack:firefox@34.0:OS X El Capitan\"\n\"browserstack:firefox@33.0:OS X El Capitan\"\n\"browserstack:firefox@32.0:OS X El Capitan\"\n\"browserstack:firefox@31.0:OS X El Capitan\"\n\"browserstack:firefox@30.0:OS X El Capitan\"\n\"browserstack:firefox@29.0:OS X El Capitan\"\n\"browserstack:firefox@28.0:OS X El Capitan\"\n\"browserstack:firefox@27.0:OS X El Capitan\"\n\"browserstack:firefox@26.0:OS X El Capitan\"\n\"browserstack:firefox@25.0:OS X El Capitan\"\n\"browserstack:firefox@24.0:OS X El Capitan\"\n\"browserstack:firefox@23.0:OS X El Capitan\"\n\"browserstack:firefox@22.0:OS X El Capitan\"\n\"browserstack:firefox@21.0:OS X El Capitan\"\n\"browserstack:firefox@20.0:OS X El Capitan\"\n\"browserstack:firefox@19.0:OS X El Capitan\"\n\"browserstack:firefox@18.0:OS X El Capitan\"\n\"browserstack:firefox@17.0:OS X El Capitan\"\n\"browserstack:firefox@16.0:OS X El Capitan\"\n\"browserstack:firefox@15.0:OS X El Capitan\"\n\"browserstack:firefox@14.0:OS X El Capitan\"\n\"browserstack:firefox@13.0:OS X El Capitan\"\n\"browserstack:firefox@12.0:OS X El Capitan\"\n\"browserstack:firefox@11.0:OS X El Capitan\"\n\"browserstack:firefox@10.0:OS X El Capitan\"\n\"browserstack:firefox@9.0:OS X El Capitan\"\n\"browserstack:firefox@8.0:OS X El Capitan\"\n\"browserstack:firefox@7.0:OS X El Capitan\"\n\"browserstack:firefox@6.0:OS X El Capitan\"\n\"browserstack:firefox@5.0:OS X El Capitan\"\n\"browserstack:firefox@4.0:OS X El Capitan\"\n\"browserstack:safari@9.1:OS X El Capitan\"\n\"browserstack:chrome@56.0:OS X El Capitan\"\n\"browserstack:chrome@55.0:OS X El Capitan\"\n\"browserstack:chrome@54.0:OS X El Capitan\"\n\"browserstack:chrome@53.0:OS X El Capitan\"\n\"browserstack:chrome@52.0:OS X El Capitan\"\n\"browserstack:chrome@51.0:OS X El Capitan\"\n\"browserstack:chrome@50.0:OS X El Capitan\"\n\"browserstack:chrome@49.0:OS X El Capitan\"\n\"browserstack:chrome@48.0:OS X El Capitan\"\n\"browserstack:chrome@47.0:OS X El Capitan\"\n\"browserstack:chrome@46.0:OS X El Capitan\"\n\"browserstack:chrome@45.0:OS X El Capitan\"\n\"browserstack:chrome@44.0:OS X El Capitan\"\n\"browserstack:chrome@43.0:OS X El Capitan\"\n\"browserstack:chrome@42.0:OS X El Capitan\"\n\"browserstack:chrome@41.0:OS X El Capitan\"\n\"browserstack:chrome@40.0:OS X El Capitan\"\n\"browserstack:chrome@39.0:OS X El Capitan\"\n\"browserstack:chrome@38.0:OS X El Capitan\"\n\"browserstack:chrome@37.0:OS X El Capitan\"\n\"browserstack:chrome@36.0:OS X El Capitan\"\n\"browserstack:chrome@35.0:OS X El Capitan\"\n\"browserstack:chrome@34.0:OS X El Capitan\"\n\"browserstack:chrome@33.0:OS X El Capitan\"\n\"browserstack:chrome@32.0:OS X El Capitan\"\n\"browserstack:chrome@31.0:OS X El Capitan\"\n\"browserstack:chrome@30.0:OS X El Capitan\"\n\"browserstack:chrome@29.0:OS X El Capitan\"\n\"browserstack:chrome@28.0:OS X El Capitan\"\n\"browserstack:chrome@27.0:OS X El Capitan\"\n\"browserstack:chrome@26.0:OS X El Capitan\"\n\"browserstack:chrome@25.0:OS X El Capitan\"\n\"browserstack:chrome@24.0:OS X El Capitan\"\n\"browserstack:chrome@23.0:OS X El Capitan\"\n\"browserstack:chrome@22.0:OS X El Capitan\"\n\"browserstack:chrome@21.0:OS X El Capitan\"\n\"browserstack:chrome@20.0:OS X El Capitan\"\n\"browserstack:chrome@19.0:OS X El Capitan\"\n\"browserstack:chrome@18.0:OS X El Capitan\"\n\"browserstack:chrome@17.0:OS X El Capitan\"\n\"browserstack:chrome@16.0:OS X El Capitan\"\n\"browserstack:opera@43.0:OS X El Capitan\"\n\"browserstack:opera@42.0:OS X El Capitan\"\n\"browserstack:opera@41.0:OS X El Capitan\"\n\"browserstack:opera@40.0:OS X El Capitan\"\n\"browserstack:opera@39.0:OS X El Capitan\"\n\"browserstack:opera@38.0:OS X El Capitan\"\n\"browserstack:opera@37.0:OS X El Capitan\"\n\"browserstack:opera@36.0:OS X El Capitan\"\n\"browserstack:opera@35.0:OS X El Capitan\"\n\"browserstack:opera@34.0:OS X El Capitan\"\n\"browserstack:opera@33.0:OS X El Capitan\"\n\"browserstack:opera@32.0:OS X El Capitan\"\n\"browserstack:opera@31.0:OS X El Capitan\"\n\"browserstack:opera@30.0:OS X El Capitan\"\n\"browserstack:opera@29.0:OS X El Capitan\"\n\"browserstack:opera@28.0:OS X El Capitan\"\n\"browserstack:opera@27.0:OS X El Capitan\"\n\"browserstack:opera@26.0:OS X El Capitan\"\n\"browserstack:opera@25.0:OS X El Capitan\"\n\"browserstack:opera@24.0:OS X El Capitan\"\n\"browserstack:opera@23.0:OS X El Capitan\"\n\"browserstack:opera@22.0:OS X El Capitan\"\n\"browserstack:opera@21.0:OS X El Capitan\"\n\"browserstack:opera@20.0:OS X El Capitan\"\n\"browserstack:opera@19.0:OS X El Capitan\"\n\"browserstack:opera@18.0:OS X El Capitan\"\n\"browserstack:opera@17.0:OS X El Capitan\"\n\"browserstack:opera@16.0:OS X El Capitan\"\n\"browserstack:opera@15.0:OS X El Capitan\"\n\"browserstack:opera@12.15:OS X El Capitan\"\n\"browserstack:opera@12.14:OS X El Capitan\"\n\"browserstack:opera@12.12:OS X El Capitan\"\n\"browserstack:yandex@14.12:OS X Yosemite\"\n\"browserstack:firefox@53.0 beta:OS X Yosemite\"\n\"browserstack:firefox@52.0:OS X Yosemite\"\n\"browserstack:firefox@51.0:OS X Yosemite\"\n\"browserstack:firefox@50.0:OS X Yosemite\"\n\"browserstack:firefox@49.0:OS X Yosemite\"\n\"browserstack:firefox@48.0:OS X Yosemite\"\n\"browserstack:firefox@47.0:OS X Yosemite\"\n\"browserstack:firefox@46.0:OS X Yosemite\"\n\"browserstack:firefox@45.0:OS X Yosemite\"\n\"browserstack:firefox@44.0:OS X Yosemite\"\n\"browserstack:firefox@43.0:OS X Yosemite\"\n\"browserstack:firefox@42.0:OS X Yosemite\"\n\"browserstack:firefox@41.0:OS X Yosemite\"\n\"browserstack:firefox@40.0:OS X Yosemite\"\n\"browserstack:firefox@39.0:OS X Yosemite\"\n\"browserstack:firefox@38.0:OS X Yosemite\"\n\"browserstack:firefox@37.0:OS X Yosemite\"\n\"browserstack:firefox@36.0:OS X Yosemite\"\n\"browserstack:firefox@35.0:OS X Yosemite\"\n\"browserstack:firefox@34.0:OS X Yosemite\"\n\"browserstack:firefox@33.0:OS X Yosemite\"\n\"browserstack:firefox@32.0:OS X Yosemite\"\n\"browserstack:firefox@31.0:OS X Yosemite\"\n\"browserstack:firefox@30.0:OS X Yosemite\"\n\"browserstack:firefox@29.0:OS X Yosemite\"\n\"browserstack:firefox@28.0:OS X Yosemite\"\n\"browserstack:firefox@27.0:OS X Yosemite\"\n\"browserstack:firefox@26.0:OS X Yosemite\"\n\"browserstack:firefox@25.0:OS X Yosemite\"\n\"browserstack:firefox@24.0:OS X Yosemite\"\n\"browserstack:firefox@23.0:OS X Yosemite\"\n\"browserstack:firefox@22.0:OS X Yosemite\"\n\"browserstack:firefox@21.0:OS X Yosemite\"\n\"browserstack:firefox@20.0:OS X Yosemite\"\n\"browserstack:firefox@19.0:OS X Yosemite\"\n\"browserstack:firefox@18.0:OS X Yosemite\"\n\"browserstack:firefox@17.0:OS X Yosemite\"\n\"browserstack:firefox@16.0:OS X Yosemite\"\n\"browserstack:firefox@15.0:OS X Yosemite\"\n\"browserstack:firefox@14.0:OS X Yosemite\"\n\"browserstack:firefox@13.0:OS X Yosemite\"\n\"browserstack:firefox@12.0:OS X Yosemite\"\n\"browserstack:firefox@11.0:OS X Yosemite\"\n\"browserstack:firefox@10.0:OS X Yosemite\"\n\"browserstack:firefox@9.0:OS X Yosemite\"\n\"browserstack:firefox@8.0:OS X Yosemite\"\n\"browserstack:firefox@7.0:OS X Yosemite\"\n\"browserstack:firefox@6.0:OS X Yosemite\"\n\"browserstack:firefox@5.0:OS X Yosemite\"\n\"browserstack:firefox@4.0:OS X Yosemite\"\n\"browserstack:firefox@3.6:OS X Yosemite\"\n\"browserstack:safari@8.0:OS X Yosemite\"\n\"browserstack:chrome@56.0:OS X Yosemite\"\n\"browserstack:chrome@55.0:OS X Yosemite\"\n\"browserstack:chrome@54.0:OS X Yosemite\"\n\"browserstack:chrome@53.0:OS X Yosemite\"\n\"browserstack:chrome@52.0:OS X Yosemite\"\n\"browserstack:chrome@51.0:OS X Yosemite\"\n\"browserstack:chrome@50.0:OS X Yosemite\"\n\"browserstack:chrome@49.0:OS X Yosemite\"\n\"browserstack:chrome@48.0:OS X Yosemite\"\n\"browserstack:chrome@47.0:OS X Yosemite\"\n\"browserstack:chrome@46.0:OS X Yosemite\"\n\"browserstack:chrome@45.0:OS X Yosemite\"\n\"browserstack:chrome@44.0:OS X Yosemite\"\n\"browserstack:chrome@43.0:OS X Yosemite\"\n\"browserstack:chrome@42.0:OS X Yosemite\"\n\"browserstack:chrome@41.0:OS X Yosemite\"\n\"browserstack:chrome@40.0:OS X Yosemite\"\n\"browserstack:chrome@39.0:OS X Yosemite\"\n\"browserstack:chrome@38.0:OS X Yosemite\"\n\"browserstack:chrome@37.0:OS X Yosemite\"\n\"browserstack:chrome@36.0:OS X Yosemite\"\n\"browserstack:chrome@35.0:OS X Yosemite\"\n\"browserstack:chrome@34.0:OS X Yosemite\"\n\"browserstack:chrome@33.0:OS X Yosemite\"\n\"browserstack:chrome@32.0:OS X Yosemite\"\n\"browserstack:chrome@31.0:OS X Yosemite\"\n\"browserstack:chrome@30.0:OS X Yosemite\"\n\"browserstack:chrome@29.0:OS X Yosemite\"\n\"browserstack:chrome@28.0:OS X Yosemite\"\n\"browserstack:chrome@27.0:OS X Yosemite\"\n\"browserstack:chrome@26.0:OS X Yosemite\"\n\"browserstack:chrome@25.0:OS X Yosemite\"\n\"browserstack:chrome@24.0:OS X Yosemite\"\n\"browserstack:chrome@23.0:OS X Yosemite\"\n\"browserstack:chrome@22.0:OS X Yosemite\"\n\"browserstack:chrome@21.0:OS X Yosemite\"\n\"browserstack:chrome@20.0:OS X Yosemite\"\n\"browserstack:chrome@19.0:OS X Yosemite\"\n\"browserstack:chrome@18.0:OS X Yosemite\"\n\"browserstack:chrome@17.0:OS X Yosemite\"\n\"browserstack:chrome@16.0:OS X Yosemite\"\n\"browserstack:opera@43.0:OS X Yosemite\"\n\"browserstack:opera@42.0:OS X Yosemite\"\n\"browserstack:opera@41.0:OS X Yosemite\"\n\"browserstack:opera@40.0:OS X Yosemite\"\n\"browserstack:opera@39.0:OS X Yosemite\"\n\"browserstack:opera@38.0:OS X Yosemite\"\n\"browserstack:opera@37.0:OS X Yosemite\"\n\"browserstack:opera@36.0:OS X Yosemite\"\n\"browserstack:opera@35.0:OS X Yosemite\"\n\"browserstack:opera@34.0:OS X Yosemite\"\n\"browserstack:opera@33.0:OS X Yosemite\"\n\"browserstack:opera@32.0:OS X Yosemite\"\n\"browserstack:opera@31.0:OS X Yosemite\"\n\"browserstack:opera@30.0:OS X Yosemite\"\n\"browserstack:opera@29.0:OS X Yosemite\"\n\"browserstack:opera@28.0:OS X Yosemite\"\n\"browserstack:opera@27.0:OS X Yosemite\"\n\"browserstack:opera@26.0:OS X Yosemite\"\n\"browserstack:opera@25.0:OS X Yosemite\"\n\"browserstack:opera@24.0:OS X Yosemite\"\n\"browserstack:opera@23.0:OS X Yosemite\"\n\"browserstack:opera@22.0:OS X Yosemite\"\n\"browserstack:opera@21.0:OS X Yosemite\"\n\"browserstack:opera@20.0:OS X Yosemite\"\n\"browserstack:opera@19.0:OS X Yosemite\"\n\"browserstack:opera@18.0:OS X Yosemite\"\n\"browserstack:opera@17.0:OS X Yosemite\"\n\"browserstack:opera@16.0:OS X Yosemite\"\n\"browserstack:opera@15.0:OS X Yosemite\"\n\"browserstack:opera@12.15:OS X Yosemite\"\n\"browserstack:opera@12.14:OS X Yosemite\"\n\"browserstack:opera@12.12:OS X Yosemite\"\n\"browserstack:yandex@14.12:OS X Mavericks\"\n\"browserstack:firefox@53.0 beta:OS X Mavericks\"\n\"browserstack:firefox@52.0:OS X Mavericks\"\n\"browserstack:firefox@51.0:OS X Mavericks\"\n\"browserstack:firefox@50.0:OS X Mavericks\"\n\"browserstack:firefox@49.0:OS X Mavericks\"\n\"browserstack:firefox@48.0:OS X Mavericks\"\n\"browserstack:firefox@47.0:OS X Mavericks\"\n\"browserstack:firefox@46.0:OS X Mavericks\"\n\"browserstack:firefox@45.0:OS X Mavericks\"\n\"browserstack:firefox@44.0:OS X Mavericks\"\n\"browserstack:firefox@43.0:OS X Mavericks\"\n\"browserstack:firefox@42.0:OS X Mavericks\"\n\"browserstack:firefox@41.0:OS X Mavericks\"\n\"browserstack:firefox@40.0:OS X Mavericks\"\n\"browserstack:firefox@39.0:OS X Mavericks\"\n\"browserstack:firefox@38.0:OS X Mavericks\"\n\"browserstack:firefox@37.0:OS X Mavericks\"\n\"browserstack:firefox@36.0:OS X Mavericks\"\n\"browserstack:firefox@35.0:OS X Mavericks\"\n\"browserstack:firefox@34.0:OS X Mavericks\"\n\"browserstack:firefox@33.0:OS X Mavericks\"\n\"browserstack:firefox@32.0:OS X Mavericks\"\n\"browserstack:firefox@31.0:OS X Mavericks\"\n\"browserstack:firefox@30.0:OS X Mavericks\"\n\"browserstack:firefox@29.0:OS X Mavericks\"\n\"browserstack:firefox@28.0:OS X Mavericks\"\n\"browserstack:firefox@27.0:OS X Mavericks\"\n\"browserstack:firefox@26.0:OS X Mavericks\"\n\"browserstack:firefox@25.0:OS X Mavericks\"\n\"browserstack:firefox@24.0:OS X Mavericks\"\n\"browserstack:firefox@23.0:OS X Mavericks\"\n\"browserstack:firefox@22.0:OS X Mavericks\"\n\"browserstack:firefox@21.0:OS X Mavericks\"\n\"browserstack:firefox@20.0:OS X Mavericks\"\n\"browserstack:firefox@19.0:OS X Mavericks\"\n\"browserstack:firefox@18.0:OS X Mavericks\"\n\"browserstack:firefox@17.0:OS X Mavericks\"\n\"browserstack:firefox@16.0:OS X Mavericks\"\n\"browserstack:firefox@15.0:OS X Mavericks\"\n\"browserstack:firefox@14.0:OS X Mavericks\"\n\"browserstack:firefox@13.0:OS X Mavericks\"\n\"browserstack:firefox@12.0:OS X Mavericks\"\n\"browserstack:firefox@11.0:OS X Mavericks\"\n\"browserstack:firefox@10.0:OS X Mavericks\"\n\"browserstack:firefox@9.0:OS X Mavericks\"\n\"browserstack:firefox@8.0:OS X Mavericks\"\n\"browserstack:firefox@7.0:OS X Mavericks\"\n\"browserstack:firefox@6.0:OS X Mavericks\"\n\"browserstack:firefox@5.0:OS X Mavericks\"\n\"browserstack:firefox@4.0:OS X Mavericks\"\n\"browserstack:firefox@3.6:OS X Mavericks\"\n\"browserstack:safari@7.1:OS X Mavericks\"\n\"browserstack:chrome@56.0:OS X Mavericks\"\n\"browserstack:chrome@55.0:OS X Mavericks\"\n\"browserstack:chrome@54.0:OS X Mavericks\"\n\"browserstack:chrome@53.0:OS X Mavericks\"\n\"browserstack:chrome@52.0:OS X Mavericks\"\n\"browserstack:chrome@51.0:OS X Mavericks\"\n\"browserstack:chrome@50.0:OS X Mavericks\"\n\"browserstack:chrome@49.0:OS X Mavericks\"\n\"browserstack:chrome@48.0:OS X Mavericks\"\n\"browserstack:chrome@47.0:OS X Mavericks\"\n\"browserstack:chrome@46.0:OS X Mavericks\"\n\"browserstack:chrome@45.0:OS X Mavericks\"\n\"browserstack:chrome@44.0:OS X Mavericks\"\n\"browserstack:chrome@43.0:OS X Mavericks\"\n\"browserstack:chrome@42.0:OS X Mavericks\"\n\"browserstack:chrome@41.0:OS X Mavericks\"\n\"browserstack:chrome@40.0:OS X Mavericks\"\n\"browserstack:chrome@39.0:OS X Mavericks\"\n\"browserstack:chrome@38.0:OS X Mavericks\"\n\"browserstack:chrome@37.0:OS X Mavericks\"\n\"browserstack:chrome@36.0:OS X Mavericks\"\n\"browserstack:chrome@35.0:OS X Mavericks\"\n\"browserstack:chrome@34.0:OS X Mavericks\"\n\"browserstack:chrome@33.0:OS X Mavericks\"\n\"browserstack:chrome@32.0:OS X Mavericks\"\n\"browserstack:chrome@31.0:OS X Mavericks\"\n\"browserstack:chrome@30.0:OS X Mavericks\"\n\"browserstack:chrome@29.0:OS X Mavericks\"\n\"browserstack:chrome@28.0:OS X Mavericks\"\n\"browserstack:chrome@27.0:OS X Mavericks\"\n\"browserstack:chrome@26.0:OS X Mavericks\"\n\"browserstack:chrome@25.0:OS X Mavericks\"\n\"browserstack:chrome@24.0:OS X Mavericks\"\n\"browserstack:chrome@23.0:OS X Mavericks\"\n\"browserstack:chrome@22.0:OS X Mavericks\"\n\"browserstack:chrome@21.0:OS X Mavericks\"\n\"browserstack:chrome@20.0:OS X Mavericks\"\n\"browserstack:chrome@19.0:OS X Mavericks\"\n\"browserstack:chrome@18.0:OS X Mavericks\"\n\"browserstack:chrome@17.0:OS X Mavericks\"\n\"browserstack:chrome@16.0:OS X Mavericks\"\n\"browserstack:opera@43.0:OS X Mavericks\"\n\"browserstack:opera@42.0:OS X Mavericks\"\n\"browserstack:opera@41.0:OS X Mavericks\"\n\"browserstack:opera@40.0:OS X Mavericks\"\n\"browserstack:opera@39.0:OS X Mavericks\"\n\"browserstack:opera@38.0:OS X Mavericks\"\n\"browserstack:opera@37.0:OS X Mavericks\"\n\"browserstack:opera@36.0:OS X Mavericks\"\n\"browserstack:opera@35.0:OS X Mavericks\"\n\"browserstack:opera@34.0:OS X Mavericks\"\n\"browserstack:opera@33.0:OS X Mavericks\"\n\"browserstack:opera@32.0:OS X Mavericks\"\n\"browserstack:opera@31.0:OS X Mavericks\"\n\"browserstack:opera@30.0:OS X Mavericks\"\n\"browserstack:opera@29.0:OS X Mavericks\"\n\"browserstack:opera@28.0:OS X Mavericks\"\n\"browserstack:opera@27.0:OS X Mavericks\"\n\"browserstack:opera@26.0:OS X Mavericks\"\n\"browserstack:opera@25.0:OS X Mavericks\"\n\"browserstack:opera@24.0:OS X Mavericks\"\n\"browserstack:opera@23.0:OS X Mavericks\"\n\"browserstack:opera@22.0:OS X Mavericks\"\n\"browserstack:opera@21.0:OS X Mavericks\"\n\"browserstack:opera@20.0:OS X Mavericks\"\n\"browserstack:opera@19.0:OS X Mavericks\"\n\"browserstack:opera@18.0:OS X Mavericks\"\n\"browserstack:opera@17.0:OS X Mavericks\"\n\"browserstack:opera@16.0:OS X Mavericks\"\n\"browserstack:opera@15.0:OS X Mavericks\"\n\"browserstack:opera@12.15:OS X Mavericks\"\n\"browserstack:opera@12.14:OS X Mavericks\"\n\"browserstack:opera@12.12:OS X Mavericks\"\n\"browserstack:opera@12.0:OS X Mavericks\"\n\"browserstack:opera@11.6:OS X Mavericks\"\n\"browserstack:opera@11.1:OS X Mavericks\"\n\"browserstack:yandex@14.12:OS X Mountain Lion\"\n\"browserstack:firefox@48.0:OS X Mountain Lion\"\n\"browserstack:firefox@47.0:OS X Mountain Lion\"\n\"browserstack:firefox@46.0:OS X Mountain Lion\"\n\"browserstack:firefox@45.0:OS X Mountain Lion\"\n\"browserstack:firefox@44.0:OS X Mountain Lion\"\n\"browserstack:firefox@43.0:OS X Mountain Lion\"\n\"browserstack:firefox@42.0:OS X Mountain Lion\"\n\"browserstack:firefox@41.0:OS X Mountain Lion\"\n\"browserstack:firefox@40.0:OS X Mountain Lion\"\n\"browserstack:firefox@39.0:OS X Mountain Lion\"\n\"browserstack:firefox@38.0:OS X Mountain Lion\"\n\"browserstack:firefox@37.0:OS X Mountain Lion\"\n\"browserstack:firefox@36.0:OS X Mountain Lion\"\n\"browserstack:firefox@35.0:OS X Mountain Lion\"\n\"browserstack:firefox@34.0:OS X Mountain Lion\"\n\"browserstack:firefox@33.0:OS X Mountain Lion\"\n\"browserstack:firefox@32.0:OS X Mountain Lion\"\n\"browserstack:firefox@31.0:OS X Mountain Lion\"\n\"browserstack:firefox@30.0:OS X Mountain Lion\"\n\"browserstack:firefox@29.0:OS X Mountain Lion\"\n\"browserstack:firefox@28.0:OS X Mountain Lion\"\n\"browserstack:firefox@27.0:OS X Mountain Lion\"\n\"browserstack:firefox@26.0:OS X Mountain Lion\"\n\"browserstack:firefox@25.0:OS X Mountain Lion\"\n\"browserstack:firefox@24.0:OS X Mountain Lion\"\n\"browserstack:firefox@23.0:OS X Mountain Lion\"\n\"browserstack:firefox@22.0:OS X Mountain Lion\"\n\"browserstack:firefox@21.0:OS X Mountain Lion\"\n\"browserstack:firefox@20.0:OS X Mountain Lion\"\n\"browserstack:firefox@19.0:OS X Mountain Lion\"\n\"browserstack:firefox@18.0:OS X Mountain Lion\"\n\"browserstack:firefox@17.0:OS X Mountain Lion\"\n\"browserstack:firefox@16.0:OS X Mountain Lion\"\n\"browserstack:firefox@15.0:OS X Mountain Lion\"\n\"browserstack:firefox@14.0:OS X Mountain Lion\"\n\"browserstack:firefox@13.0:OS X Mountain Lion\"\n\"browserstack:firefox@12.0:OS X Mountain Lion\"\n\"browserstack:firefox@11.0:OS X Mountain Lion\"\n\"browserstack:firefox@10.0:OS X Mountain Lion\"\n\"browserstack:firefox@9.0:OS X Mountain Lion\"\n\"browserstack:firefox@8.0:OS X Mountain Lion\"\n\"browserstack:firefox@7.0:OS X Mountain Lion\"\n\"browserstack:firefox@6.0:OS X Mountain Lion\"\n\"browserstack:firefox@5.0:OS X Mountain Lion\"\n\"browserstack:firefox@4.0:OS X Mountain Lion\"\n\"browserstack:firefox@3.6:OS X Mountain Lion\"\n\"browserstack:safari@6.2:OS X Mountain Lion\"\n\"browserstack:chrome@49.0:OS X Mountain Lion\"\n\"browserstack:chrome@48.0:OS X Mountain Lion\"\n\"browserstack:chrome@47.0:OS X Mountain Lion\"\n\"browserstack:chrome@45.0:OS X Mountain Lion\"\n\"browserstack:chrome@44.0:OS X Mountain Lion\"\n\"browserstack:chrome@43.0:OS X Mountain Lion\"\n\"browserstack:chrome@42.0:OS X Mountain Lion\"\n\"browserstack:chrome@41.0:OS X Mountain Lion\"\n\"browserstack:chrome@40.0:OS X Mountain Lion\"\n\"browserstack:chrome@39.0:OS X Mountain Lion\"\n\"browserstack:chrome@38.0:OS X Mountain Lion\"\n\"browserstack:chrome@37.0:OS X Mountain Lion\"\n\"browserstack:chrome@36.0:OS X Mountain Lion\"\n\"browserstack:chrome@35.0:OS X Mountain Lion\"\n\"browserstack:chrome@34.0:OS X Mountain Lion\"\n\"browserstack:chrome@33.0:OS X Mountain Lion\"\n\"browserstack:chrome@32.0:OS X Mountain Lion\"\n\"browserstack:chrome@31.0:OS X Mountain Lion\"\n\"browserstack:chrome@30.0:OS X Mountain Lion\"\n\"browserstack:chrome@29.0:OS X Mountain Lion\"\n\"browserstack:chrome@28.0:OS X Mountain Lion\"\n\"browserstack:chrome@27.0:OS X Mountain Lion\"\n\"browserstack:chrome@26.0:OS X Mountain Lion\"\n\"browserstack:chrome@25.0:OS X Mountain Lion\"\n\"browserstack:chrome@24.0:OS X Mountain Lion\"\n\"browserstack:chrome@23.0:OS X Mountain Lion\"\n\"browserstack:chrome@22.0:OS X Mountain Lion\"\n\"browserstack:chrome@21.0:OS X Mountain Lion\"\n\"browserstack:chrome@20.0:OS X Mountain Lion\"\n\"browserstack:chrome@19.0:OS X Mountain Lion\"\n\"browserstack:chrome@18.0:OS X Mountain Lion\"\n\"browserstack:chrome@17.0:OS X Mountain Lion\"\n\"browserstack:chrome@16.0:OS X Mountain Lion\"\n\"browserstack:opera@37.0:OS X Mountain Lion\"\n\"browserstack:opera@36.0:OS X Mountain Lion\"\n\"browserstack:opera@35.0:OS X Mountain Lion\"\n\"browserstack:opera@34.0:OS X Mountain Lion\"\n\"browserstack:opera@33.0:OS X Mountain Lion\"\n\"browserstack:opera@32.0:OS X Mountain Lion\"\n\"browserstack:opera@31.0:OS X Mountain Lion\"\n\"browserstack:opera@30.0:OS X Mountain Lion\"\n\"browserstack:opera@29.0:OS X Mountain Lion\"\n\"browserstack:opera@28.0:OS X Mountain Lion\"\n\"browserstack:opera@27.0:OS X Mountain Lion\"\n\"browserstack:opera@26.0:OS X Mountain Lion\"\n\"browserstack:opera@25.0:OS X Mountain Lion\"\n\"browserstack:opera@24.0:OS X Mountain Lion\"\n\"browserstack:opera@23.0:OS X Mountain Lion\"\n\"browserstack:opera@22.0:OS X Mountain Lion\"\n\"browserstack:opera@21.0:OS X Mountain Lion\"\n\"browserstack:opera@20.0:OS X Mountain Lion\"\n\"browserstack:opera@19.0:OS X Mountain Lion\"\n\"browserstack:opera@18.0:OS X Mountain Lion\"\n\"browserstack:opera@17.0:OS X Mountain Lion\"\n\"browserstack:opera@16.0:OS X Mountain Lion\"\n\"browserstack:opera@15.0:OS X Mountain Lion\"\n\"browserstack:opera@12.15:OS X Mountain Lion\"\n\"browserstack:opera@12.14:OS X Mountain Lion\"\n\"browserstack:opera@12.12:OS X Mountain Lion\"\n\"browserstack:opera@12.0:OS X Mountain Lion\"\n\"browserstack:opera@11.6:OS X Mountain Lion\"\n\"browserstack:opera@11.1:OS X Mountain Lion\"\n\"browserstack:firefox@44.0:OS X Lion\"\n\"browserstack:firefox@43.0:OS X Lion\"\n\"browserstack:firefox@42.0:OS X Lion\"\n\"browserstack:firefox@41.0:OS X Lion\"\n\"browserstack:firefox@40.0:OS X Lion\"\n\"browserstack:firefox@38.0:OS X Lion\"\n\"browserstack:firefox@37.0:OS X Lion\"\n\"browserstack:firefox@36.0:OS X Lion\"\n\"browserstack:firefox@35.0:OS X Lion\"\n\"browserstack:firefox@34.0:OS X Lion\"\n\"browserstack:firefox@33.0:OS X Lion\"\n\"browserstack:firefox@32.0:OS X Lion\"\n\"browserstack:firefox@31.0:OS X Lion\"\n\"browserstack:firefox@30.0:OS X Lion\"\n\"browserstack:firefox@29.0:OS X Lion\"\n\"browserstack:firefox@28.0:OS X Lion\"\n\"browserstack:firefox@27.0:OS X Lion\"\n\"browserstack:firefox@26.0:OS X Lion\"\n\"browserstack:firefox@25.0:OS X Lion\"\n\"browserstack:firefox@24.0:OS X Lion\"\n\"browserstack:firefox@23.0:OS X Lion\"\n\"browserstack:firefox@22.0:OS X Lion\"\n\"browserstack:firefox@21.0:OS X Lion\"\n\"browserstack:firefox@20.0:OS X Lion\"\n\"browserstack:firefox@19.0:OS X Lion\"\n\"browserstack:firefox@18.0:OS X Lion\"\n\"browserstack:firefox@17.0:OS X Lion\"\n\"browserstack:firefox@16.0:OS X Lion\"\n\"browserstack:firefox@15.0:OS X Lion\"\n\"browserstack:firefox@14.0:OS X Lion\"\n\"browserstack:firefox@13.0:OS X Lion\"\n\"browserstack:firefox@12.0:OS X Lion\"\n\"browserstack:firefox@11.0:OS X Lion\"\n\"browserstack:firefox@10.0:OS X Lion\"\n\"browserstack:firefox@9.0:OS X Lion\"\n\"browserstack:firefox@8.0:OS X Lion\"\n\"browserstack:firefox@7.0:OS X Lion\"\n\"browserstack:firefox@6.0:OS X Lion\"\n\"browserstack:firefox@5.0:OS X Lion\"\n\"browserstack:firefox@4.0:OS X Lion\"\n\"browserstack:firefox@3.6:OS X Lion\"\n\"browserstack:safari@6.0:OS X Lion\"\n\"browserstack:safari@5.1:OS X Lion\"\n\"browserstack:chrome@49.0:OS X Lion\"\n\"browserstack:chrome@48.0:OS X Lion\"\n\"browserstack:chrome@47.0:OS X Lion\"\n\"browserstack:chrome@46.0:OS X Lion\"\n\"browserstack:chrome@45.0:OS X Lion\"\n\"browserstack:chrome@44.0:OS X Lion\"\n\"browserstack:chrome@43.0:OS X Lion\"\n\"browserstack:chrome@42.0:OS X Lion\"\n\"browserstack:chrome@41.0:OS X Lion\"\n\"browserstack:chrome@40.0:OS X Lion\"\n\"browserstack:chrome@39.0:OS X Lion\"\n\"browserstack:chrome@38.0:OS X Lion\"\n\"browserstack:chrome@37.0:OS X Lion\"\n\"browserstack:chrome@36.0:OS X Lion\"\n\"browserstack:chrome@35.0:OS X Lion\"\n\"browserstack:chrome@34.0:OS X Lion\"\n\"browserstack:chrome@33.0:OS X Lion\"\n\"browserstack:chrome@32.0:OS X Lion\"\n\"browserstack:chrome@31.0:OS X Lion\"\n\"browserstack:chrome@30.0:OS X Lion\"\n\"browserstack:chrome@29.0:OS X Lion\"\n\"browserstack:chrome@28.0:OS X Lion\"\n\"browserstack:chrome@27.0:OS X Lion\"\n\"browserstack:chrome@26.0:OS X Lion\"\n\"browserstack:chrome@25.0:OS X Lion\"\n\"browserstack:chrome@24.0:OS X Lion\"\n\"browserstack:chrome@23.0:OS X Lion\"\n\"browserstack:chrome@22.0:OS X Lion\"\n\"browserstack:chrome@21.0:OS X Lion\"\n\"browserstack:chrome@20.0:OS X Lion\"\n\"browserstack:chrome@19.0:OS X Lion\"\n\"browserstack:chrome@18.0:OS X Lion\"\n\"browserstack:chrome@17.0:OS X Lion\"\n\"browserstack:chrome@16.0:OS X Lion\"\n\"browserstack:opera@37.0:OS X Lion\"\n\"browserstack:opera@36.0:OS X Lion\"\n\"browserstack:opera@35.0:OS X Lion\"\n\"browserstack:opera@34.0:OS X Lion\"\n\"browserstack:opera@33.0:OS X Lion\"\n\"browserstack:opera@32.0:OS X Lion\"\n\"browserstack:opera@31.0:OS X Lion\"\n\"browserstack:opera@30.0:OS X Lion\"\n\"browserstack:opera@29.0:OS X Lion\"\n\"browserstack:opera@28.0:OS X Lion\"\n\"browserstack:opera@27.0:OS X Lion\"\n\"browserstack:opera@26.0:OS X Lion\"\n\"browserstack:opera@25.0:OS X Lion\"\n\"browserstack:opera@24.0:OS X Lion\"\n\"browserstack:opera@23.0:OS X Lion\"\n\"browserstack:opera@22.0:OS X Lion\"\n\"browserstack:opera@21.0:OS X Lion\"\n\"browserstack:opera@20.0:OS X Lion\"\n\"browserstack:opera@19.0:OS X Lion\"\n\"browserstack:opera@18.0:OS X Lion\"\n\"browserstack:opera@17.0:OS X Lion\"\n\"browserstack:opera@16.0:OS X Lion\"\n\"browserstack:opera@15.0:OS X Lion\"\n\"browserstack:opera@12.15:OS X Lion\"\n\"browserstack:opera@12.14:OS X Lion\"\n\"browserstack:opera@12.12:OS X Lion\"\n\"browserstack:opera@12.0:OS X Lion\"\n\"browserstack:opera@11.6:OS X Lion\"\n\"browserstack:opera@11.1:OS X Lion\"\n\"browserstack:firefox@48.0:OS X Snow Leopard\"\n\"browserstack:firefox@47.0:OS X Snow Leopard\"\n\"browserstack:firefox@46.0:OS X Snow Leopard\"\n\"browserstack:firefox@45.0:OS X Snow Leopard\"\n\"browserstack:firefox@44.0:OS X Snow Leopard\"\n\"browserstack:firefox@43.0:OS X Snow Leopard\"\n\"browserstack:firefox@42.0:OS X Snow Leopard\"\n\"browserstack:firefox@41.0:OS X Snow Leopard\"\n\"browserstack:firefox@40.0:OS X Snow Leopard\"\n\"browserstack:firefox@39.0:OS X Snow Leopard\"\n\"browserstack:firefox@38.0:OS X Snow Leopard\"\n\"browserstack:firefox@37.0:OS X Snow Leopard\"\n\"browserstack:firefox@36.0:OS X Snow Leopard\"\n\"browserstack:firefox@35.0:OS X Snow Leopard\"\n\"browserstack:firefox@34.0:OS X Snow Leopard\"\n\"browserstack:firefox@33.0:OS X Snow Leopard\"\n\"browserstack:firefox@32.0:OS X Snow Leopard\"\n\"browserstack:firefox@31.0:OS X Snow Leopard\"\n\"browserstack:firefox@30.0:OS X Snow Leopard\"\n\"browserstack:firefox@29.0:OS X Snow Leopard\"\n\"browserstack:firefox@28.0:OS X Snow Leopard\"\n\"browserstack:firefox@27.0:OS X Snow Leopard\"\n\"browserstack:firefox@26.0:OS X Snow Leopard\"\n\"browserstack:firefox@25.0:OS X Snow Leopard\"\n\"browserstack:firefox@24.0:OS X Snow Leopard\"\n\"browserstack:firefox@23.0:OS X Snow Leopard\"\n\"browserstack:firefox@22.0:OS X Snow Leopard\"\n\"browserstack:firefox@21.0:OS X Snow Leopard\"\n\"browserstack:firefox@20.0:OS X Snow Leopard\"\n\"browserstack:firefox@19.0:OS X Snow Leopard\"\n\"browserstack:firefox@18.0:OS X Snow Leopard\"\n\"browserstack:firefox@17.0:OS X Snow Leopard\"\n\"browserstack:firefox@16.0:OS X Snow Leopard\"\n\"browserstack:firefox@15.0:OS X Snow Leopard\"\n\"browserstack:firefox@14.0:OS X Snow Leopard\"\n\"browserstack:firefox@13.0:OS X Snow Leopard\"\n\"browserstack:firefox@12.0:OS X Snow Leopard\"\n\"browserstack:firefox@11.0:OS X Snow Leopard\"\n\"browserstack:firefox@10.0:OS X Snow Leopard\"\n\"browserstack:firefox@9.0:OS X Snow Leopard\"\n\"browserstack:firefox@8.0:OS X Snow Leopard\"\n\"browserstack:firefox@7.0:OS X Snow Leopard\"\n\"browserstack:firefox@6.0:OS X Snow Leopard\"\n\"browserstack:firefox@5.0:OS X Snow Leopard\"\n\"browserstack:firefox@4.0:OS X Snow Leopard\"\n\"browserstack:safari@5.1:OS X Snow Leopard\"\n\"browserstack:safari@5.0:OS X Snow Leopard\"\n\"browserstack:safari@4.0:OS X Snow Leopard\"\n\"browserstack:chrome@49.0:OS X Snow Leopard\"\n\"browserstack:chrome@48.0:OS X Snow Leopard\"\n\"browserstack:chrome@47.0:OS X Snow Leopard\"\n\"browserstack:chrome@46.0:OS X Snow Leopard\"\n\"browserstack:chrome@45.0:OS X Snow Leopard\"\n\"browserstack:chrome@44.0:OS X Snow Leopard\"\n\"browserstack:chrome@43.0:OS X Snow Leopard\"\n\"browserstack:chrome@42.0:OS X Snow Leopard\"\n\"browserstack:chrome@41.0:OS X Snow Leopard\"\n\"browserstack:chrome@40.0:OS X Snow Leopard\"\n\"browserstack:chrome@39.0:OS X Snow Leopard\"\n\"browserstack:chrome@38.0:OS X Snow Leopard\"\n\"browserstack:chrome@37.0:OS X Snow Leopard\"\n\"browserstack:chrome@36.0:OS X Snow Leopard\"\n\"browserstack:chrome@35.0:OS X Snow Leopard\"\n\"browserstack:chrome@34.0:OS X Snow Leopard\"\n\"browserstack:chrome@33.0:OS X Snow Leopard\"\n\"browserstack:chrome@32.0:OS X Snow Leopard\"\n\"browserstack:chrome@31.0:OS X Snow Leopard\"\n\"browserstack:chrome@30.0:OS X Snow Leopard\"\n\"browserstack:chrome@29.0:OS X Snow Leopard\"\n\"browserstack:chrome@28.0:OS X Snow Leopard\"\n\"browserstack:chrome@27.0:OS X Snow Leopard\"\n\"browserstack:chrome@26.0:OS X Snow Leopard\"\n\"browserstack:chrome@25.0:OS X Snow Leopard\"\n\"browserstack:chrome@24.0:OS X Snow Leopard\"\n\"browserstack:chrome@23.0:OS X Snow Leopard\"\n\"browserstack:chrome@22.0:OS X Snow Leopard\"\n\"browserstack:chrome@21.0:OS X Snow Leopard\"\n\"browserstack:chrome@20.0:OS X Snow Leopard\"\n\"browserstack:chrome@19.0:OS X Snow Leopard\"\n\"browserstack:chrome@18.0:OS X Snow Leopard\"\n\"browserstack:chrome@17.0:OS X Snow Leopard\"\n\"browserstack:chrome@16.0:OS X Snow Leopard\"\n\"browserstack:opera@25.0:OS X Snow Leopard\"\n\"browserstack:opera@24.0:OS X Snow Leopard\"\n\"browserstack:opera@23.0:OS X Snow Leopard\"\n\"browserstack:opera@22.0:OS X Snow Leopard\"\n\"browserstack:opera@21.0:OS X Snow Leopard\"\n\"browserstack:opera@20.0:OS X Snow Leopard\"\n\"browserstack:opera@19.0:OS X Snow Leopard\"\n\"browserstack:opera@18.0:OS X Snow Leopard\"\n\"browserstack:opera@17.0:OS X Snow Leopard\"\n\"browserstack:opera@16.0:OS X Snow Leopard\"\n\"browserstack:opera@15.0:OS X Snow Leopard\"\n\"browserstack:opera@12.15:OS X Snow Leopard\"\n\"browserstack:opera@12.14:OS X Snow Leopard\"\n\"browserstack:opera@12.12:OS X Snow Leopard\"\n\"browserstack:opera@12.0:OS X Snow Leopard\"\n\"browserstack:opera@11.6:OS X Snow Leopard\"\n\"browserstack:opera@11.1:OS X Snow Leopard\"\n\"browserstack:yandex@14.12:Windows 10\"\n\"browserstack:firefox@53.0 beta:Windows 10\"\n\"browserstack:firefox@52.0:Windows 10\"\n\"browserstack:firefox@51.0:Windows 10\"\n\"browserstack:firefox@50.0:Windows 10\"\n\"browserstack:firefox@49.0:Windows 10\"\n\"browserstack:firefox@48.0:Windows 10\"\n\"browserstack:firefox@47.0:Windows 10\"\n\"browserstack:firefox@46.0:Windows 10\"\n\"browserstack:firefox@45.0:Windows 10\"\n\"browserstack:firefox@44.0:Windows 10\"\n\"browserstack:firefox@43.0:Windows 10\"\n\"browserstack:firefox@42.0:Windows 10\"\n\"browserstack:firefox@41.0:Windows 10\"\n\"browserstack:firefox@40.0:Windows 10\"\n\"browserstack:firefox@39.0:Windows 10\"\n\"browserstack:firefox@38.0:Windows 10\"\n\"browserstack:firefox@37.0:Windows 10\"\n\"browserstack:firefox@36.0:Windows 10\"\n\"browserstack:firefox@35.0:Windows 10\"\n\"browserstack:firefox@34.0:Windows 10\"\n\"browserstack:firefox@33.0:Windows 10\"\n\"browserstack:firefox@32.0:Windows 10\"\n\"browserstack:edge@14.0:Windows 10\"\n\"browserstack:edge@13.0:Windows 10\"\n\"browserstack:ie@11.0:Windows 10\"\n\"browserstack:chrome@56.0:Windows 10\"\n\"browserstack:chrome@55.0:Windows 10\"\n\"browserstack:chrome@54.0:Windows 10\"\n\"browserstack:chrome@53.0:Windows 10\"\n\"browserstack:chrome@52.0:Windows 10\"\n\"browserstack:chrome@51.0:Windows 10\"\n\"browserstack:chrome@50.0:Windows 10\"\n\"browserstack:chrome@49.0:Windows 10\"\n\"browserstack:chrome@48.0:Windows 10\"\n\"browserstack:chrome@47.0:Windows 10\"\n\"browserstack:chrome@46.0:Windows 10\"\n\"browserstack:chrome@45.0:Windows 10\"\n\"browserstack:chrome@44.0:Windows 10\"\n\"browserstack:chrome@43.0:Windows 10\"\n\"browserstack:chrome@42.0:Windows 10\"\n\"browserstack:chrome@41.0:Windows 10\"\n\"browserstack:chrome@40.0:Windows 10\"\n\"browserstack:chrome@39.0:Windows 10\"\n\"browserstack:chrome@38.0:Windows 10\"\n\"browserstack:chrome@37.0:Windows 10\"\n\"browserstack:safari@5.1:Windows 10\"\n\"browserstack:opera@43.0:Windows 10\"\n\"browserstack:opera@42.0:Windows 10\"\n\"browserstack:opera@41.0:Windows 10\"\n\"browserstack:opera@40.0:Windows 10\"\n\"browserstack:opera@39.0:Windows 10\"\n\"browserstack:opera@38.0:Windows 10\"\n\"browserstack:opera@37.0:Windows 10\"\n\"browserstack:opera@36.0:Windows 10\"\n\"browserstack:opera@35.0:Windows 10\"\n\"browserstack:opera@34.0:Windows 10\"\n\"browserstack:opera@33.0:Windows 10\"\n\"browserstack:opera@32.0:Windows 10\"\n\"browserstack:opera@31.0:Windows 10\"\n\"browserstack:opera@30.0:Windows 10\"\n\"browserstack:opera@29.0:Windows 10\"\n\"browserstack:opera@28.0:Windows 10\"\n\"browserstack:opera@27.0:Windows 10\"\n\"browserstack:opera@26.0:Windows 10\"\n\"browserstack:opera@25.0:Windows 10\"\n\"browserstack:opera@24.0:Windows 10\"\n\"browserstack:opera@23.0:Windows 10\"\n\"browserstack:yandex@14.12:Windows 8.1\"\n\"browserstack:firefox@53.0 beta:Windows 8.1\"\n\"browserstack:firefox@52.0:Windows 8.1\"\n\"browserstack:firefox@51.0:Windows 8.1\"\n\"browserstack:firefox@50.0:Windows 8.1\"\n\"browserstack:firefox@49.0:Windows 8.1\"\n\"browserstack:firefox@48.0:Windows 8.1\"\n\"browserstack:firefox@47.0:Windows 8.1\"\n\"browserstack:firefox@46.0:Windows 8.1\"\n\"browserstack:firefox@45.0:Windows 8.1\"\n\"browserstack:firefox@44.0:Windows 8.1\"\n\"browserstack:firefox@43.0:Windows 8.1\"\n\"browserstack:firefox@42.0:Windows 8.1\"\n\"browserstack:firefox@41.0:Windows 8.1\"\n\"browserstack:firefox@40.0:Windows 8.1\"\n\"browserstack:firefox@39.0:Windows 8.1\"\n\"browserstack:firefox@38.0:Windows 8.1\"\n\"browserstack:firefox@37.0:Windows 8.1\"\n\"browserstack:firefox@36.0:Windows 8.1\"\n\"browserstack:firefox@35.0:Windows 8.1\"\n\"browserstack:firefox@34.0:Windows 8.1\"\n\"browserstack:firefox@33.0:Windows 8.1\"\n\"browserstack:firefox@32.0:Windows 8.1\"\n\"browserstack:firefox@31.0:Windows 8.1\"\n\"browserstack:firefox@30.0:Windows 8.1\"\n\"browserstack:firefox@29.0:Windows 8.1\"\n\"browserstack:firefox@28.0:Windows 8.1\"\n\"browserstack:firefox@27.0:Windows 8.1\"\n\"browserstack:firefox@26.0:Windows 8.1\"\n\"browserstack:firefox@25.0:Windows 8.1\"\n\"browserstack:firefox@24.0:Windows 8.1\"\n\"browserstack:firefox@23.0:Windows 8.1\"\n\"browserstack:firefox@22.0:Windows 8.1\"\n\"browserstack:firefox@21.0:Windows 8.1\"\n\"browserstack:firefox@20.0:Windows 8.1\"\n\"browserstack:firefox@19.0:Windows 8.1\"\n\"browserstack:firefox@18.0:Windows 8.1\"\n\"browserstack:firefox@17.0:Windows 8.1\"\n\"browserstack:firefox@16.0:Windows 8.1\"\n\"browserstack:ie@11.0 Metro:Windows 8.1\"\n\"browserstack:ie@11.0:Windows 8.1\"\n\"browserstack:chrome@56.0:Windows 8.1\"\n\"browserstack:chrome@55.0:Windows 8.1\"\n\"browserstack:chrome@54.0:Windows 8.1\"\n\"browserstack:chrome@53.0:Windows 8.1\"\n\"browserstack:chrome@52.0:Windows 8.1\"\n\"browserstack:chrome@51.0:Windows 8.1\"\n\"browserstack:chrome@50.0:Windows 8.1\"\n\"browserstack:chrome@49.0:Windows 8.1\"\n\"browserstack:chrome@48.0:Windows 8.1\"\n\"browserstack:chrome@47.0:Windows 8.1\"\n\"browserstack:chrome@46.0:Windows 8.1\"\n\"browserstack:chrome@45.0:Windows 8.1\"\n\"browserstack:chrome@44.0:Windows 8.1\"\n\"browserstack:chrome@43.0:Windows 8.1\"\n\"browserstack:chrome@42.0:Windows 8.1\"\n\"browserstack:chrome@41.0:Windows 8.1\"\n\"browserstack:chrome@40.0:Windows 8.1\"\n\"browserstack:chrome@39.0:Windows 8.1\"\n\"browserstack:chrome@38.0:Windows 8.1\"\n\"browserstack:chrome@37.0:Windows 8.1\"\n\"browserstack:chrome@36.0:Windows 8.1\"\n\"browserstack:chrome@35.0:Windows 8.1\"\n\"browserstack:chrome@34.0:Windows 8.1\"\n\"browserstack:chrome@33.0:Windows 8.1\"\n\"browserstack:chrome@32.0:Windows 8.1\"\n\"browserstack:chrome@31.0:Windows 8.1\"\n\"browserstack:chrome@30.0:Windows 8.1\"\n\"browserstack:chrome@29.0:Windows 8.1\"\n\"browserstack:chrome@28.0:Windows 8.1\"\n\"browserstack:chrome@27.0:Windows 8.1\"\n\"browserstack:chrome@26.0:Windows 8.1\"\n\"browserstack:chrome@25.0:Windows 8.1\"\n\"browserstack:chrome@24.0:Windows 8.1\"\n\"browserstack:chrome@23.0:Windows 8.1\"\n\"browserstack:chrome@22.0:Windows 8.1\"\n\"browserstack:safari@5.1:Windows 8.1\"\n\"browserstack:opera@43.0:Windows 8.1\"\n\"browserstack:opera@42.0:Windows 8.1\"\n\"browserstack:opera@41.0:Windows 8.1\"\n\"browserstack:opera@40.0:Windows 8.1\"\n\"browserstack:opera@39.0:Windows 8.1\"\n\"browserstack:opera@38.0:Windows 8.1\"\n\"browserstack:opera@37.0:Windows 8.1\"\n\"browserstack:opera@36.0:Windows 8.1\"\n\"browserstack:opera@35.0:Windows 8.1\"\n\"browserstack:opera@34.0:Windows 8.1\"\n\"browserstack:opera@33.0:Windows 8.1\"\n\"browserstack:opera@32.0:Windows 8.1\"\n\"browserstack:opera@31.0:Windows 8.1\"\n\"browserstack:opera@30.0:Windows 8.1\"\n\"browserstack:opera@29.0:Windows 8.1\"\n\"browserstack:opera@28.0:Windows 8.1\"\n\"browserstack:opera@27.0:Windows 8.1\"\n\"browserstack:opera@26.0:Windows 8.1\"\n\"browserstack:opera@25.0:Windows 8.1\"\n\"browserstack:opera@24.0:Windows 8.1\"\n\"browserstack:opera@23.0:Windows 8.1\"\n\"browserstack:opera@22.0:Windows 8.1\"\n\"browserstack:opera@21.0:Windows 8.1\"\n\"browserstack:opera@20.0:Windows 8.1\"\n\"browserstack:opera@19.0:Windows 8.1\"\n\"browserstack:opera@18.0:Windows 8.1\"\n\"browserstack:opera@17.0:Windows 8.1\"\n\"browserstack:opera@16.0:Windows 8.1\"\n\"browserstack:opera@15.0:Windows 8.1\"\n\"browserstack:opera@12.16:Windows 8.1\"\n\"browserstack:opera@12.15:Windows 8.1\"\n\"browserstack:opera@12.14:Windows 8.1\"\n\"browserstack:opera@12.10:Windows 8.1\"\n\"browserstack:opera@12.0:Windows 8.1\"\n\"browserstack:yandex@14.12:Windows 8\"\n\"browserstack:firefox@53.0 beta:Windows 8\"\n\"browserstack:firefox@52.0:Windows 8\"\n\"browserstack:firefox@51.0:Windows 8\"\n\"browserstack:firefox@50.0:Windows 8\"\n\"browserstack:firefox@49.0:Windows 8\"\n\"browserstack:firefox@48.0:Windows 8\"\n\"browserstack:firefox@47.0:Windows 8\"\n\"browserstack:firefox@46.0:Windows 8\"\n\"browserstack:firefox@45.0:Windows 8\"\n\"browserstack:firefox@44.0:Windows 8\"\n\"browserstack:firefox@43.0:Windows 8\"\n\"browserstack:firefox@42.0:Windows 8\"\n\"browserstack:firefox@41.0:Windows 8\"\n\"browserstack:firefox@40.0:Windows 8\"\n\"browserstack:firefox@39.0:Windows 8\"\n\"browserstack:firefox@38.0:Windows 8\"\n\"browserstack:firefox@37.0:Windows 8\"\n\"browserstack:firefox@36.0:Windows 8\"\n\"browserstack:firefox@35.0:Windows 8\"\n\"browserstack:firefox@34.0:Windows 8\"\n\"browserstack:firefox@33.0:Windows 8\"\n\"browserstack:firefox@32.0:Windows 8\"\n\"browserstack:firefox@31.0:Windows 8\"\n\"browserstack:firefox@30.0:Windows 8\"\n\"browserstack:firefox@29.0:Windows 8\"\n\"browserstack:firefox@28.0:Windows 8\"\n\"browserstack:firefox@27.0:Windows 8\"\n\"browserstack:firefox@26.0:Windows 8\"\n\"browserstack:firefox@25.0:Windows 8\"\n\"browserstack:firefox@24.0:Windows 8\"\n\"browserstack:firefox@23.0:Windows 8\"\n\"browserstack:firefox@22.0:Windows 8\"\n\"browserstack:firefox@21.0:Windows 8\"\n\"browserstack:firefox@20.0:Windows 8\"\n\"browserstack:firefox@19.0:Windows 8\"\n\"browserstack:firefox@18.0:Windows 8\"\n\"browserstack:firefox@17.0:Windows 8\"\n\"browserstack:firefox@16.0:Windows 8\"\n\"browserstack:ie@10.0 Metro:Windows 8\"\n\"browserstack:ie@10.0:Windows 8\"\n\"browserstack:chrome@56.0:Windows 8\"\n\"browserstack:chrome@55.0:Windows 8\"\n\"browserstack:chrome@54.0:Windows 8\"\n\"browserstack:chrome@53.0:Windows 8\"\n\"browserstack:chrome@52.0:Windows 8\"\n\"browserstack:chrome@51.0:Windows 8\"\n\"browserstack:chrome@50.0:Windows 8\"\n\"browserstack:chrome@49.0:Windows 8\"\n\"browserstack:chrome@48.0:Windows 8\"\n\"browserstack:chrome@47.0:Windows 8\"\n\"browserstack:chrome@46.0:Windows 8\"\n\"browserstack:chrome@45.0:Windows 8\"\n\"browserstack:chrome@44.0:Windows 8\"\n\"browserstack:chrome@43.0:Windows 8\"\n\"browserstack:chrome@42.0:Windows 8\"\n\"browserstack:chrome@41.0:Windows 8\"\n\"browserstack:chrome@40.0:Windows 8\"\n\"browserstack:chrome@39.0:Windows 8\"\n\"browserstack:chrome@38.0:Windows 8\"\n\"browserstack:chrome@37.0:Windows 8\"\n\"browserstack:chrome@36.0:Windows 8\"\n\"browserstack:chrome@35.0:Windows 8\"\n\"browserstack:chrome@34.0:Windows 8\"\n\"browserstack:chrome@33.0:Windows 8\"\n\"browserstack:chrome@32.0:Windows 8\"\n\"browserstack:chrome@31.0:Windows 8\"\n\"browserstack:chrome@30.0:Windows 8\"\n\"browserstack:chrome@29.0:Windows 8\"\n\"browserstack:chrome@28.0:Windows 8\"\n\"browserstack:chrome@27.0:Windows 8\"\n\"browserstack:chrome@26.0:Windows 8\"\n\"browserstack:chrome@25.0:Windows 8\"\n\"browserstack:chrome@24.0:Windows 8\"\n\"browserstack:chrome@23.0:Windows 8\"\n\"browserstack:chrome@22.0:Windows 8\"\n\"browserstack:safari@5.1:Windows 8\"\n\"browserstack:opera@43.0:Windows 8\"\n\"browserstack:opera@42.0:Windows 8\"\n\"browserstack:opera@41.0:Windows 8\"\n\"browserstack:opera@40.0:Windows 8\"\n\"browserstack:opera@39.0:Windows 8\"\n\"browserstack:opera@38.0:Windows 8\"\n\"browserstack:opera@37.0:Windows 8\"\n\"browserstack:opera@36.0:Windows 8\"\n\"browserstack:opera@35.0:Windows 8\"\n\"browserstack:opera@34.0:Windows 8\"\n\"browserstack:opera@33.0:Windows 8\"\n\"browserstack:opera@32.0:Windows 8\"\n\"browserstack:opera@31.0:Windows 8\"\n\"browserstack:opera@30.0:Windows 8\"\n\"browserstack:opera@29.0:Windows 8\"\n\"browserstack:opera@28.0:Windows 8\"\n\"browserstack:opera@27.0:Windows 8\"\n\"browserstack:opera@26.0:Windows 8\"\n\"browserstack:opera@25.0:Windows 8\"\n\"browserstack:opera@24.0:Windows 8\"\n\"browserstack:opera@23.0:Windows 8\"\n\"browserstack:opera@22.0:Windows 8\"\n\"browserstack:opera@21.0:Windows 8\"\n\"browserstack:opera@20.0:Windows 8\"\n\"browserstack:opera@19.0:Windows 8\"\n\"browserstack:opera@18.0:Windows 8\"\n\"browserstack:opera@17.0:Windows 8\"\n\"browserstack:opera@16.0:Windows 8\"\n\"browserstack:opera@15.0:Windows 8\"\n\"browserstack:opera@12.16:Windows 8\"\n\"browserstack:opera@12.15:Windows 8\"\n\"browserstack:opera@12.14:Windows 8\"\n\"browserstack:opera@12.10:Windows 8\"\n\"browserstack:opera@12.0:Windows 8\"\n\"browserstack:yandex@14.12:Windows 7\"\n\"browserstack:firefox@53.0 beta:Windows 7\"\n\"browserstack:firefox@52.0:Windows 7\"\n\"browserstack:firefox@51.0:Windows 7\"\n\"browserstack:firefox@50.0:Windows 7\"\n\"browserstack:firefox@49.0:Windows 7\"\n\"browserstack:firefox@48.0:Windows 7\"\n\"browserstack:firefox@47.0:Windows 7\"\n\"browserstack:firefox@46.0:Windows 7\"\n\"browserstack:firefox@45.0:Windows 7\"\n\"browserstack:firefox@44.0:Windows 7\"\n\"browserstack:firefox@43.0:Windows 7\"\n\"browserstack:firefox@42.0:Windows 7\"\n\"browserstack:firefox@41.0:Windows 7\"\n\"browserstack:firefox@40.0:Windows 7\"\n\"browserstack:firefox@39.0:Windows 7\"\n\"browserstack:firefox@38.0:Windows 7\"\n\"browserstack:firefox@37.0:Windows 7\"\n\"browserstack:firefox@36.0:Windows 7\"\n\"browserstack:firefox@35.0:Windows 7\"\n\"browserstack:firefox@34.0:Windows 7\"\n\"browserstack:firefox@33.0:Windows 7\"\n\"browserstack:firefox@32.0:Windows 7\"\n\"browserstack:firefox@31.0:Windows 7\"\n\"browserstack:firefox@30.0:Windows 7\"\n\"browserstack:firefox@29.0:Windows 7\"\n\"browserstack:firefox@28.0:Windows 7\"\n\"browserstack:firefox@27.0:Windows 7\"\n\"browserstack:firefox@26.0:Windows 7\"\n\"browserstack:firefox@25.0:Windows 7\"\n\"browserstack:firefox@24.0:Windows 7\"\n\"browserstack:firefox@23.0:Windows 7\"\n\"browserstack:firefox@22.0:Windows 7\"\n\"browserstack:firefox@21.0:Windows 7\"\n\"browserstack:firefox@20.0:Windows 7\"\n\"browserstack:firefox@19.0:Windows 7\"\n\"browserstack:firefox@18.0:Windows 7\"\n\"browserstack:firefox@17.0:Windows 7\"\n\"browserstack:firefox@16.0:Windows 7\"\n\"browserstack:firefox@15.0:Windows 7\"\n\"browserstack:firefox@14.0:Windows 7\"\n\"browserstack:firefox@13.0:Windows 7\"\n\"browserstack:firefox@12.0:Windows 7\"\n\"browserstack:firefox@11.0:Windows 7\"\n\"browserstack:firefox@10.0:Windows 7\"\n\"browserstack:firefox@9.0:Windows 7\"\n\"browserstack:firefox@8.0:Windows 7\"\n\"browserstack:firefox@7.0:Windows 7\"\n\"browserstack:firefox@6.0:Windows 7\"\n\"browserstack:firefox@5.0:Windows 7\"\n\"browserstack:firefox@4.0:Windows 7\"\n\"browserstack:firefox@3.6:Windows 7\"\n\"browserstack:firefox@3.0:Windows 7\"\n\"browserstack:ie@11.0:Windows 7\"\n\"browserstack:ie@10.0:Windows 7\"\n\"browserstack:ie@9.0:Windows 7\"\n\"browserstack:ie@8.0:Windows 7\"\n\"browserstack:chrome@56.0:Windows 7\"\n\"browserstack:chrome@55.0:Windows 7\"\n\"browserstack:chrome@54.0:Windows 7\"\n\"browserstack:chrome@53.0:Windows 7\"\n\"browserstack:chrome@52.0:Windows 7\"\n\"browserstack:chrome@51.0:Windows 7\"\n\"browserstack:chrome@50.0:Windows 7\"\n\"browserstack:chrome@49.0:Windows 7\"\n\"browserstack:chrome@48.0:Windows 7\"\n\"browserstack:chrome@47.0:Windows 7\"\n\"browserstack:chrome@46.0:Windows 7\"\n\"browserstack:chrome@45.0:Windows 7\"\n\"browserstack:chrome@44.0:Windows 7\"\n\"browserstack:chrome@43.0:Windows 7\"\n\"browserstack:chrome@42.0:Windows 7\"\n\"browserstack:chrome@41.0:Windows 7\"\n\"browserstack:chrome@40.0:Windows 7\"\n\"browserstack:chrome@39.0:Windows 7\"\n\"browserstack:chrome@38.0:Windows 7\"\n\"browserstack:chrome@37.0:Windows 7\"\n\"browserstack:chrome@36.0:Windows 7\"\n\"browserstack:chrome@35.0:Windows 7\"\n\"browserstack:chrome@34.0:Windows 7\"\n\"browserstack:chrome@33.0:Windows 7\"\n\"browserstack:chrome@32.0:Windows 7\"\n\"browserstack:chrome@31.0:Windows 7\"\n\"browserstack:chrome@30.0:Windows 7\"\n\"browserstack:chrome@29.0:Windows 7\"\n\"browserstack:chrome@28.0:Windows 7\"\n\"browserstack:chrome@27.0:Windows 7\"\n\"browserstack:chrome@26.0:Windows 7\"\n\"browserstack:chrome@25.0:Windows 7\"\n\"browserstack:chrome@24.0:Windows 7\"\n\"browserstack:chrome@23.0:Windows 7\"\n\"browserstack:chrome@22.0:Windows 7\"\n\"browserstack:chrome@21.0:Windows 7\"\n\"browserstack:chrome@20.0:Windows 7\"\n\"browserstack:chrome@19.0:Windows 7\"\n\"browserstack:chrome@18.0:Windows 7\"\n\"browserstack:chrome@17.0:Windows 7\"\n\"browserstack:chrome@16.0:Windows 7\"\n\"browserstack:chrome@15.0:Windows 7\"\n\"browserstack:safari@5.1:Windows 7\"\n\"browserstack:safari@5.0:Windows 7\"\n\"browserstack:safari@4.0:Windows 7\"\n\"browserstack:opera@43.0:Windows 7\"\n\"browserstack:opera@42.0:Windows 7\"\n\"browserstack:opera@41.0:Windows 7\"\n\"browserstack:opera@40.0:Windows 7\"\n\"browserstack:opera@39.0:Windows 7\"\n\"browserstack:opera@38.0:Windows 7\"\n\"browserstack:opera@37.0:Windows 7\"\n\"browserstack:opera@36.0:Windows 7\"\n\"browserstack:opera@35.0:Windows 7\"\n\"browserstack:opera@34.0:Windows 7\"\n\"browserstack:opera@33.0:Windows 7\"\n\"browserstack:opera@32.0:Windows 7\"\n\"browserstack:opera@31.0:Windows 7\"\n\"browserstack:opera@30.0:Windows 7\"\n\"browserstack:opera@29.0:Windows 7\"\n\"browserstack:opera@28.0:Windows 7\"\n\"browserstack:opera@27.0:Windows 7\"\n\"browserstack:opera@26.0:Windows 7\"\n\"browserstack:opera@25.0:Windows 7\"\n\"browserstack:opera@24.0:Windows 7\"\n\"browserstack:opera@23.0:Windows 7\"\n\"browserstack:opera@22.0:Windows 7\"\n\"browserstack:opera@21.0:Windows 7\"\n\"browserstack:opera@20.0:Windows 7\"\n\"browserstack:opera@19.0:Windows 7\"\n\"browserstack:opera@18.0:Windows 7\"\n\"browserstack:opera@17.0:Windows 7\"\n\"browserstack:opera@16.0:Windows 7\"\n\"browserstack:opera@15.0:Windows 7\"\n\"browserstack:opera@12.16:Windows 7\"\n\"browserstack:opera@12.15:Windows 7\"\n\"browserstack:opera@12.14:Windows 7\"\n\"browserstack:opera@12.10:Windows 7\"\n\"browserstack:opera@11.6:Windows 7\"\n\"browserstack:opera@11.5:Windows 7\"\n\"browserstack:opera@11.1:Windows 7\"\n\"browserstack:opera@10.6:Windows 7\"\n\"browserstack:yandex@14.12:Windows XP\"\n\"browserstack:firefox@52.0:Windows XP\"\n\"browserstack:firefox@51.0:Windows XP\"\n\"browserstack:firefox@50.0:Windows XP\"\n\"browserstack:firefox@49.0:Windows XP\"\n\"browserstack:firefox@48.0:Windows XP\"\n\"browserstack:firefox@47.0:Windows XP\"\n\"browserstack:firefox@46.0:Windows XP\"\n\"browserstack:firefox@45.0:Windows XP\"\n\"browserstack:firefox@44.0:Windows XP\"\n\"browserstack:firefox@43.0:Windows XP\"\n\"browserstack:firefox@42.0:Windows XP\"\n\"browserstack:firefox@41.0:Windows XP\"\n\"browserstack:firefox@40.0:Windows XP\"\n\"browserstack:firefox@38.0:Windows XP\"\n\"browserstack:firefox@37.0:Windows XP\"\n\"browserstack:firefox@36.0:Windows XP\"\n\"browserstack:firefox@35.0:Windows XP\"\n\"browserstack:firefox@34.0:Windows XP\"\n\"browserstack:firefox@33.0:Windows XP\"\n\"browserstack:firefox@32.0:Windows XP\"\n\"browserstack:firefox@31.0:Windows XP\"\n\"browserstack:firefox@30.0:Windows XP\"\n\"browserstack:firefox@29.0:Windows XP\"\n\"browserstack:firefox@28.0:Windows XP\"\n\"browserstack:firefox@27.0:Windows XP\"\n\"browserstack:firefox@26.0:Windows XP\"\n\"browserstack:firefox@25.0:Windows XP\"\n\"browserstack:firefox@24.0:Windows XP\"\n\"browserstack:firefox@23.0:Windows XP\"\n\"browserstack:firefox@22.0:Windows XP\"\n\"browserstack:firefox@21.0:Windows XP\"\n\"browserstack:firefox@20.0:Windows XP\"\n\"browserstack:firefox@19.0:Windows XP\"\n\"browserstack:firefox@18.0:Windows XP\"\n\"browserstack:firefox@17.0:Windows XP\"\n\"browserstack:firefox@16.0:Windows XP\"\n\"browserstack:firefox@15.0:Windows XP\"\n\"browserstack:firefox@14.0:Windows XP\"\n\"browserstack:firefox@13.0:Windows XP\"\n\"browserstack:firefox@12.0:Windows XP\"\n\"browserstack:firefox@11.0:Windows XP\"\n\"browserstack:firefox@10.0:Windows XP\"\n\"browserstack:firefox@9.0:Windows XP\"\n\"browserstack:firefox@8.0:Windows XP\"\n\"browserstack:firefox@7.0:Windows XP\"\n\"browserstack:firefox@6.0:Windows XP\"\n\"browserstack:firefox@5.0:Windows XP\"\n\"browserstack:firefox@4.0:Windows XP\"\n\"browserstack:firefox@3.6:Windows XP\"\n\"browserstack:firefox@3.0:Windows XP\"\n\"browserstack:ie@8.0:Windows XP\"\n\"browserstack:ie@7.0:Windows XP\"\n\"browserstack:ie@6.0:Windows XP\"\n\"browserstack:chrome@49.0:Windows XP\"\n\"browserstack:chrome@48.0:Windows XP\"\n\"browserstack:chrome@47.0:Windows XP\"\n\"browserstack:chrome@46.0:Windows XP\"\n\"browserstack:chrome@45.0:Windows XP\"\n\"browserstack:chrome@44.0:Windows XP\"\n\"browserstack:chrome@43.0:Windows XP\"\n\"browserstack:chrome@42.0:Windows XP\"\n\"browserstack:chrome@41.0:Windows XP\"\n\"browserstack:chrome@40.0:Windows XP\"\n\"browserstack:chrome@39.0:Windows XP\"\n\"browserstack:chrome@38.0:Windows XP\"\n\"browserstack:chrome@37.0:Windows XP\"\n\"browserstack:chrome@36.0:Windows XP\"\n\"browserstack:chrome@35.0:Windows XP\"\n\"browserstack:chrome@34.0:Windows XP\"\n\"browserstack:chrome@33.0:Windows XP\"\n\"browserstack:chrome@32.0:Windows XP\"\n\"browserstack:chrome@31.0:Windows XP\"\n\"browserstack:chrome@30.0:Windows XP\"\n\"browserstack:chrome@29.0:Windows XP\"\n\"browserstack:chrome@28.0:Windows XP\"\n\"browserstack:chrome@27.0:Windows XP\"\n\"browserstack:chrome@26.0:Windows XP\"\n\"browserstack:chrome@25.0:Windows XP\"\n\"browserstack:chrome@24.0:Windows XP\"\n\"browserstack:chrome@23.0:Windows XP\"\n\"browserstack:chrome@22.0:Windows XP\"\n\"browserstack:chrome@21.0:Windows XP\"\n\"browserstack:chrome@20.0:Windows XP\"\n\"browserstack:chrome@19.0:Windows XP\"\n\"browserstack:chrome@18.0:Windows XP\"\n\"browserstack:chrome@17.0:Windows XP\"\n\"browserstack:chrome@16.0:Windows XP\"\n\"browserstack:chrome@15.0:Windows XP\"\n\"browserstack:safari@5.1:Windows XP\"\n\"browserstack:safari@5.0:Windows XP\"\n\"browserstack:safari@4.0:Windows XP\"\n\"browserstack:opera@36.0:Windows XP\"\n\"browserstack:opera@35.0:Windows XP\"\n\"browserstack:opera@34.0:Windows XP\"\n\"browserstack:opera@33.0:Windows XP\"\n\"browserstack:opera@32.0:Windows XP\"\n\"browserstack:opera@31.0:Windows XP\"\n\"browserstack:opera@30.0:Windows XP\"\n\"browserstack:opera@29.0:Windows XP\"\n\"browserstack:opera@28.0:Windows XP\"\n\"browserstack:opera@27.0:Windows XP\"\n\"browserstack:opera@26.0:Windows XP\"\n\"browserstack:opera@25.0:Windows XP\"\n\"browserstack:opera@24.0:Windows XP\"\n\"browserstack:opera@23.0:Windows XP\"\n\"browserstack:opera@22.0:Windows XP\"\n\"browserstack:opera@21.0:Windows XP\"\n\"browserstack:opera@20.0:Windows XP\"\n\"browserstack:opera@19.0:Windows XP\"\n\"browserstack:opera@18.0:Windows XP\"\n\"browserstack:opera@17.0:Windows XP\"\n\"browserstack:opera@16.0:Windows XP\"\n\"browserstack:opera@15.0:Windows XP\"\n\"browserstack:opera@12.16:Windows XP\"\n\"browserstack:opera@12.15:Windows XP\"\n\"browserstack:opera@12.14:Windows XP\"\n\"browserstack:opera@12.10:Windows XP\"\n\"browserstack:opera@11.6:Windows XP\"\n\"browserstack:opera@11.5:Windows XP\"\n\"browserstack:opera@11.1:Windows XP\"\n\"browserstack:opera@10.6:Windows XP\". and error about running is \n\n. hey guys maybe be my approach passing a variable\nmy full script is that \n```sh\n!/bin/bash\nset -e\n: ${browser:=nightmare}\n./node_modules/.bin/testcafe $browser \\\n./sources/scripts/*.spec.js \\\n--app './node_modules/.bin/http-server . -s'\n```\nwhen I give a echo in variable, I receive the right output, but the process dont recognize the full string, like errors that I mention above\nnow, if I pass directly, with escapes, like\nsh\n./node_modules/.bin/testcafe browserstack:chrome@56:OS\\ X\\ Sierra \\\n./sources/scripts/*.spec.js \\\n--app './node_modules/.bin/http-server . -s'\nworks fine :D. the problem now is can pass a environment variable to script. yeahh, that works @AndreyBelym \nmy script now\n```sh\n: ${browser:=nightmare}\n./node_modules/.bin/testcafe \"$browser\" \\\n./sources/scripts/*.spec.js \\\n--app './node_modules/.bin/http-server . -s'\n```\nthanks guys, in the end, is just an user (me) error :D. thanks for all, testcafe and help :D. awesome!!\nthank you so much  @AndreyBelym !!. I dont understand, you talk about middlewares (array of tasks), or named the callback task (the function in last argument)?\n. probaly is a bug in eslint with that rule (key-spacing align value)\nto fix that, only opening a issue in eslint, I believe.\nas this standard, I dont like this, because cause hard diffs in code-review/github, but it is just my opnion\nfor now, I will change all variables when eslint dont can validate, to follow the pattern\n. agree? or have a chance to change this pattern?\n. yeah, it has pros and cons.\nfor now, I change to follow the rule right?\n. even with the rule somewhat bug in eslint\n. I suggest named functions, lets suppose you dont have a variable config, or another error inside that function, if is a anonymous function, the error will be simillar to:\nerror on anonimous function in file.js\nnow if we name the function\nerror on 'methodName' in file.js\n. a last thing, say to me if you like/agree :D\n```\nusers\n   .get()\n   .then(parseToJSON)\n   .filter(activeUsers);\nfunction parseToJSON() {\n      // code here\n      // return anything\n}\nfunction activeUsers() {\n      // code here\n      // return anything\n }\n```\ndeclare functions out of callback, help to produce a clean code, where you can read the top of file and understand the logic flow.\nnow, if we write callbacks inside arguments, is more ugly, like below:\nusers\n   .get()\n   .then(parseToJSON() {\n      // code here\n      // return anything\n   })\n   .filter(activeUsers() {\n      // code here\n      // return anything\n   });\n. ok, the right is:\njs\nvar gulp =   require('gulp');\nvar config = require('./config.js');\nor \njs\nvar gulp   = require('gulp');\nvar config = require('./config.js');\nreading the key-spacing align value, I believe the rule get only values inside a object, not variable assigns, because of that rule is called key and not variable-spacing :D\nEslint probaly not can lint our code because we dont have a rule in .eslint, at now, to force this, I believe\n. all right, I'm doing now, but dont be better do this in another PR?\nbecause we dont have a eslint rule to validate this pattern, I'm looking for one, but not found anyone\nif I commit it now, nothing ensures that I dont forget anyone, or give a wrong space before =\n. nodeVersion return a object, so, we wish\njs\nif(Number(nodeVersion.major) < 4) \n    require('../tasks/test-server');\nelse\n    requireAll(path.join(__dirname, '/tasks/'));\nI just dont understand the directory test-server, this be related to create subdirectories inside tasks? (comment more above)?\n. @inikulin, I'm thinking about it too\nI believe that is better to do it in a new PR, so we can create a new scope to talk about a subject in specific, like \"subdivide the test-server tasks  or \"turn redundant tasks in just one\" (test-client-legacy-travis-mobile, test-client-legacy, test-client-old-browsers-travis are examples).\nMy point with this PR is just create little scopes by file/task, to allow us see better each task, instead has all in a single file (gulpfile)\n. if the all tasks run without bugs, we can finish this PR, and begin to see in details a task, or group of tasks, to improve it\n. @AlexanderMoskovkin what I do with websiteServer in line 142?\n. ",
    "saeidzebardast": "@AlexanderMoskovkin is there any option to disable creating thumbnails?. ",
    "graeme-plangrid": "I can't seem to find anywhere so I'l ask here. Has there been any talk of supporting screenshot name pattern? I'd love if the created screenshots generated on failure could be named based on the test name...but currently it only seems to be named via the index, as I get: 1.png. Also experiencing this as well on v.19.1. Curious if there's a fix incoming.. ",
    "peterpfberlin": "@AlexanderMoskovkin\ni would appreciate a clarification: \nIf im running old testcafe tests, which were recorded manually from the browser recorder, is this currently the only was in which screenshots are still supported when Testcafe is integrated in a command line/CI environment. ",
    "graemeRharvey": "@AlexanderMoskovkin Yes, this looks good! Thanks for pointing me in the right direction.. ",
    "miherlosev": "looks good.\nI think we need use the following syntax:\ntestcafe run  - run all files in all configurations from the current directory\ntestcafe run -f test/**/*.js - run all found files in all configurations\n. ok.\ntestcafe run - run all files in default configurations from the current directory\n. good\n. I think we need to rename isWebKit to isChrome.\nWe support only chrome and safari. We don't support other webkit-based browsers\n. I think we need to drop support Opera with old non-webkit engine, remove isOpera and rename isOperaWithWebKit to isOpera.\nIf we support all webkit-based browsers then need to revert my change (!isSafari for isWebKit check)\n. I think we need to revert my changes (https://github.com/DevExpress/testcafe/issues/113#issuecomment-147323077). \nThen we need to create separate issue for feature detection instead of browser detection\n. 1)I prefer the following variant:\njavascript\nfixture `My fixture;`\n2)If Hybrid function executing on client maybe we will name it as Client of ClientCode.\n3)Frame switching is good. \nI think we should rename switchToMain -> switchToTop and add switchToParent.\n(simular as window.top and window.parent)\n4)Script injection.\nI think that name is not clear.\nI should be injectClientScript, injectClientScriptForFrames, injectClientScriptForPages.\nThe main goal - describe where we will inject script.\n5)I think that Hybrid is a very usable feature. \nTherefore it should be avalible without additional import directive. \n. I prefer the second variant:\n``` javascript\nvar getElementById = id => document.querySelector('#' + id);\ntest('Yo', async t => {\n    var btn = await t.hybridCall(getElementById , 'myId');\n});\n```\nBecause for this variant we directly declare that we call hibrid function in the specified test context.\nAlso it is simular to http://api.qunitjs.com/QUnit.test.\nI think for actions we need to create build-in selector instructions:\njavascript\nawait t.click(t.findById('myId'))\nawait t.click(t.findByContainClass('myClass'))\nawait t.click(t.findByContainText('myText'))\netc.\nor maybe\njavascript\nawait t.findById('myId').click()\n. Also add recipes for \n - circleci (react, vue, angular)\n - houndci (bootstrap). hi @mjhea0\nWe will create a recipe for circle ci in one of the upcoming sprints. What bdd tool do you want to couple with testcafe?. 3 functional tests will be added:\n1)upload for added element\n2)upload for replaced element (Node.replace child method)\n3)upload for removed element.\n. lgtm\n. \\r-\n. We need to release hammerhead.\n@georgiy-abbasov writed the test for fixed but not released issue (https://github.com/DevExpress/testcafe-hammerhead/issues/399).\nWe have a BC (https://github.com/DevExpress/testcafe-hammerhead/issues/410).\nSo the first version number should be increased.\n@inikulin\n. New hammerhead was released.\nLet's continue to work on this pull request.\n. lgtm\n. \\r-\n. Lgtm\n. 1)Use domUtils methods from hammerhead\n2)Remove dublicates from https://github.com/DevExpress/testcafe/blob/master/src/client/core/utils/dom.js (see isTextEditableElement)\n. Lgtm\n. Try http://strelyaev-w8.corp.devexpress.com:8080/testcafe/example\n. http://strelyaev-w8.corp.devexpress.com:8080/testcafe/example is public url.\nIt will work without VPN\n. I think that behaviour should be customizable.\nIf redirect expected then we should execute hybrid on the next page.\nIf not then we should raise the error.\n. > @churkin #524 (comment)?\nhttps://github.com/DevExpress/testcafe-hammerhead/blob/master/src/client/utils/dom.js#L339\n. Also remove unused xhrBarrier._removeXhrFromQueue method.\nhttps://github.com/DevExpress/testcafe/blob/master/src/client/core/xhr-barrier.js#L49\n. lgtm\n. Waiting for https://github.com/DevExpress/testcafe-hammerhead/issues/602\n. Yes. I will do it after merge https://github.com/DevExpress/testcafe-hammerhead/pull/607\n. I opened the another pull request - https://github.com/DevExpress/testcafe/pull/570\n. > rebase to fix server tests.\nDone\n. FPR\n. I will do same in hammerhead repository.\n. I think we should add perfomance tests for testcafe.\nFor example:\n- average time for tests with basic actions (click, type, etc).\n- average time for large test suite (full asp or devexteme test suite)\n- perfomance comparison with Selenium.\nWhat do you think @inikulin @AlexanderMoskovkin ?\nNote: we know about perfomance degradation in testcafe-hammerhead (health-monitor). But we don't know about it in testcafe.\n. lgtm\n. @AndreyBelym \nFor this feature, I propose to use only programmatic API (such as for fixture and test hooks)\nProposed API\njs\nrunner\n    .beforeEachTest(async t => {})\n    .afterEachTest(async t => {})\n    .beforeEachFixture()\n    .afterEachFixture(). Can we just drop await keyword before Selector properties access?\n. When test code performs access to selector properties we perform sync request to client, getting result from client and execute next statement from test code.\n. Ok. I don't know internal implementation. It just view from the outside.\n. > It's not about internal implementation. We use hammerhead for messaging. Does it support sync communication with client?\nNow it does not suppoeted. We can investigate it.\n. I like this variant:\n`` js\nfixtureClick.pagehttp://example.com`.\n         .before(async t => {})\n         .after(async t => {});\ntest click submit button.\n     .skip(browserInfo => {})\n     .before(async t => {})\n     .do(async t = {}) //maybe another word\n    .after(async t => {})\n```\nProc:\n- consistent api for fixture and test\n- minimum code to skip test\n- at once I understand where test body is placed\n. js\ntest `click submit button`.\n     .do(async t = {}) //.run or .body or .perform etc.\nversus\n`` js\ntestClick on an invisible \"option\" element` \n    (async t => {\n });\n\n```\n. > Unfortunately it's too excessive for basic case\nAbsolutely.\nRequiments:\n- possibility skip test using minimum code\n- test definition should be simplest\nbefore, after will used seldom. skip  will used very seldom.\nSo I vote for directive Directives afterwards (see https://github.com/DevExpress/testcafe/issues/802#issue-176882339)\nAlso I don't like syntax with template string.\nfixture('grid sorting').page('http://example.com') - it is simple chain of the two function  calls.\njs\nfixture `grid sorting`.page `http://example.com`\nI dont understand logic of this.\nNew keyword fixture, then extention method of template string that redirect page, then again templated string - it is very strange and it is not clear\n. In AVA test runner (https://github.com/avajs/ava) possible use any order of test modifiers.\nsee https://github.com/avajs/ava#chaining-test-modifiers.\nI think it is a good solution.\nAlso I found features that we can to do in testscafe:\nhttps://github.com/avajs/ava#test-placeholders-todo\nhttps://github.com/avajs/ava#failing-tests\n. > Do you have any real life scenarios for this? \nSee description for AVA's specified features.\n. I will create issue\n. Fixed in hammerhead. Waiting for a new version.\n. See https://support.smartbear.com/viewarticle/80861/.\nIt named as 'Delay between events'\n. I don't like idea to multiply factors too.\n. Hi @skogman and @Lukukas \nUnfortunately, I cannot provide a strong timeline.\nWe have plans to investigate the possibility of multiple window testing in one of the nearest sprints. We will publish investigation results as soon as they appear.\nAt present, you can try this workaround for the 'Logging in via a social network' case.. I've reproduced the problem and created a separate issue in our proxy repository  - https://github.com/DevExpress/testcafe-hammerhead/issues/1260.. Yes, TestCafe supports IE11 (Officially supported browsers). Yes, see Take screenshot documentation topic.. Same for \nhttp://todomvc.com/examples/backbone_require/\nhttp://todomvc.com/examples/flight/\nhttp://todomvc.com/examples/humble\nhttp://todomvc.com/examples/troopjs_require/. And getInnerHtml method too.\nIt is usefull for checking rendering that change according the user input. \nFor example for WYSIWYG and markdown editors.. In most cases we need a visible and accessible element (in viewport and etc.), \nso I prefer Selector('.class').visible(true|false). > Note that we can't use visible filter since there is a shorthand property with the same name.\nI don't see logic problem for this (I don't know technical context).\nDOMNode State has visible property, but Selector has visible method.\n. It will not work then attribute value equals ''. \nI saw this case in animations (class name value toggles from empty to a some value) \njs\n<div class=\"fade\"></div>\n...\n<div class=\"\"></div>. More\njs\n<input type=\"text\" name=\"lname\" disabled>. Yes, we can check a returned value.\nBut, it's more redable to use hasAttribute\nExample\n```js\n\n.expect(input.getAttribute('wrong')).eql(null)\n.expect(input.getAttribute('disabled')).eql('') //attribute without value returns ''\n.expect(input.getAttribute('test')).eql('')\nversus\n.expect(input.hasAttribute('wrong')).notOk()\n.expect(input.hasAttribute('disabled')).ok()\n.expect(input.hasAttribute('test')).ok()\n```\n. Testcafe should show following error message.\nI lost content from index1.js.\nI can change content of index1.js to \ntest('t1', async t => {});\ntest('t2', async t => {});\ntest('t3', async t => {});\nand behaviour will be same. https://github.com/DevExpress/testcafe/issues/2567#issuecomment-401779617\nhttps://github.com/DevExpress/testcafe/issues/2849#issuecomment-420385291. I'm working on this. Unfortunately, we cannot contribute testcafe environment directly to eslint.\nAll build-in environments from eslint are placed in globals\nPhrase from its description:\n\nThis module no longer accepts new environments. If you need it for ESLint, just create a plugin.\n\nHowever, we can contribute testcafe environment to modules that agregate eslint rules and plugins - xo. https://www.npmjs.com/package/eslint-plugin-testcafe. > It looks like the proxy is stripping the Content-Type header off the fetch\nI am trying to reproduce this behavior on the latest version of the proxy and all works right.\nSee video.\nExample to reproduce - 1134.zip\nCould you provide an example that reproduces the problem, please.\n. > It looks like the proxy is stripping the Content-Type header off the fetch\nI think I've reproduced your problem. See https://github.com/DevExpress/testcafe-hammerhead/issues/1116. @maheshjag\nI am afraid this information is not sufficient to reproduce. Could you please provide a page or a small example so that we can reproduce it on our side?. Make sure that setupMock specifies the CORS headers (Access-Control-Allow-Origin and etc). You can check this using the 'Network' panel of the Google Chrome DevTools.\n. document.cookie doesn't have the url parameter. (https://developer.mozilla.org/ru/docs/Web/API/Document/cookie)\nPlease, try to update your ClientFunction as follows:\njs\nconst setCookie = ({ name, value, domain = 'localhost', path = `http://localhost:${appPort}` }) => ClientFunction(() => {\n    document.cookie = `${name}=${value};domain=${domain};path=${path}`;\n}, {\n    dependencies: { name, value, domain, path }\n});\n. I don't have any ideas of  how to find the cause of the problem without an example.\nWould you please provide a simple example that I can download and run on my computer?. At first glance, your mountebank setup has two issues:\n you mock a relative url (remotedownload/download) instead of the full (https://secure-epgservices.sky.com/remotedownload/download/5394973) url \n credentialed requests should specify the precise domain (change the value of the Access-Control-Allow-Origin header to http://localhost:3000) \nI suggest using TestCafe's built-in RequestMock for route mocking instead of mountebank. I've modified your example to show this (\nremote-download-spec.zip). \n. @alexistaocognite \nCould you please provide an example on which I can reproduce the problem on my computer?. @alexistaocognite \nWe need a complete example. It should contain the test code and the tested web page (public web site, web app example or something else). We need to be able to easily download and run this code and reproduce the problem on our side.\nPlease don't write any message to the closed ticket. Create a separate ticket with all necessary information.. I cannot reproduce this issue. I've created a simple web_worker_example.zip that works well.\nPlease, try to modify this example to reproduce your issue.\n. Thanks, I've reproduced the problem and created a separate issue.\n. I ran test-example.js from your repo and got an error:\n\nIt looks like you don't add a file with page model definitions.\nPlease, provide this file.\n. Cannot reproduce.\n\nTry to update to the latest testcafe version - 0.12.1 and reproduce the bug with this version.. Run 10 times on 0.19.2. Tests are passed.. See https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html. @guptaakhil \nIt is difficult to understand the cause of the problem using the provided information .\nPlease, create a separate issue and specify operation system name, nodejs and testcafe versions.\nIn issue description telling us how you run the tests.. Done. For more information see the https://github.com/DevExpress/testcafe/issues/1341#issuecomment-386626497. @rhymes \nCould you please provide a full example that I can run on my computer without writing additional code?\nIt will allow me to find the reason of the problem quickly.. Done. For more information see the https://github.com/DevExpress/testcafe/issues/1341#issuecomment-386626497. Ok. Then we should add more details about this in 'Programmic Interface' section.\nSomething like that - 'Then your tests are finished you should call testcafe.close() method to close testcafe connection. Otherwise a process will keep waiting for opened sockets.'\n@VasilyStrelyaev . This raw api file was created by testcafe-studio.\nSee video from https://github.com/DevExpress/testcafe-studio/issues/640#issuecomment-281352626. We decide to add in compiler a checking of not well formatted file structure.. @karolisgrinkevicius \ntestcafe@0.22.0 doesnot include this feature. Stop task on failed feature will be  available in the next  TestCafe version (major, minor or alpha). . ### Request Hook\nAPI for adding/removing\n\nfixture.requestHooks(...)\ntest.requestHooks(...)\nt.addRequestHooks(...), t.removeRequestHooks(...)\n\nwhere ... is rest parameter. Also passed array will be flatten to plain list.\nExamples of usage\njs\nfixture.requestHooks(hook1);\ntest.requestHooks(hook1, hook2, ...);\nfixture.requestHooks([hook1, hook2], hook3);\ntest.requestHooks([hook1, hook2], hook3, [hook4, hook5]);\nExporting classes\n\nRequestLogger - allows to collect http requests by specified rules (see RequestFilterRule section).\nRequestMock - allows to return test responses for specified http requests\nRequestHook - the base class, allows to implement a custom logic to intercept http requests.\n\nRequestLogger\nRequestLogger(filter, logOptions)\nfilter - rule for filtering http requests  (see RequestFilterRule description below)\nlogOptions - determinate which parts of request should collect.\nDefault values for logOptions:\njs\n{\n    logRequestHeaders: false,\n    logRequestBody: false,\n    stringifyRequestBody: false,\n    logResponseHeaders: false,\n    logResponseBody: false,\n    stringifyResponseBody: false\n}\ni.e. by default the RequestLogger collects only url, statusCode, userAgent, sessionId(internal) request properties.\nAPI\nMethods\n|Name                   | Returned type    | Description                                              |\n|-------------------------- | ------------------- | ------------------------------------------------------|\n|async contains(predicate)| Promise           | Finds requests by predicate and returns true/false depending on result |\n|async count(predicate)   |Promise            | Finds requests by predicate and returns their count.          |\n|clear ()                 | None                | Clears collected requests |\nProperties\n| Name | Type   | Description\n|----------|-------|----------\n|requests| Array | returns collected requests as Array\nFor async function the build-in Smart Assertion Query mechanism will be applied.\nExample\n```js\nimport { RequestLogger } from 'testcafe';\nconst logger = RequestLogger('https://example.com');\nfixture test\n    .page('https://example.com');\ntest\n    .requestHooks(logger)\n    ('test', async t => {\n        await t.expect(logger.contains(r => r.response.statusCode === 200)).ok();\n    });\n```\nRequest Mock\nAPI\nWe build our API depending on nock library.\nRequestMock configures with pairs of methods .onRequestTo(requestFilterRule).respond(responseMock).\nExample\njs\nvar mock = RequestMock()\n            .onRequestTo(requestFilterRule1)\n            .respond(responseMock1)\n            .onRequestTo(requestFilterRule2)\n            .respond(responseMock2)\nwhere information about RequestFilterRule see below, ResponseMock - allows to construct response using various arguments.\nExample\n```js\nimport { RequestMock } from 'testcafe';\nconst requestMock = RequestMock()\n    .onRequestTo('http://external-service.com/api/users'}) /see RequestFilterRule/\n    .respond({data: 123}) / JSON response /\n    .onRequestTo(...)\n    .respond('The error is occured!!!') /HTML response/\n    .onRequestTo (...)\n    .respond(null, 204) /custom statusCode/\n    .onRequestTo(...)\n    .respond('', 200, { 'server': 'nginx/1.10.3' }) / custom headers /\n    .onRequestTo(...)\n    .respond(function (req, res){ / respond function /        \n          res.headers[\u2018x-calculated-header\u2019] = \u2018calculated-value\u2019;\n          res.statusCode = \u2018200\u2019;\n      const responseBody = fs.readFileSync(req.params['filename']).toString();\n      res.setBody(responseBody);\n});\n\nfixture Fixture\n    .page(\u2018http://example.com/\u2019)\n    .rquestHooks(requestMock);\ntest('test', () => {\n    await t.click(\u2018body\u2019);\n})\n````\nRequestFilterRule\nAllows to specify request filtering rule for requests.\nIt's a public term that implemented with an internal class. \nIn public API we will use a simple object construction syntax.\nExamples\n``js\n/*String*/\n'http://example.com' -> RequestFilterRule('http://example.com'`) \n/Regular expession/\n/example.com/ -> RequestFilterRule(/example.com/) \n/Object with properties/\n{ url: 'http://example.com', method: 'GET', isAjax: false } -> RequestFilterRule({ url: 'http://example.com', method: 'GET', isAjax: false }) \n/Custom function/\nRequestFilterRule(function (request) {\n            return request.url === 'http://example.com' &&\n                   request.method === 'post' &&\n                   request.isAjax &&\n                   request.body === '{ test: true }' &&\n                   request.headers['content-type'] === 'application/json';\n}\n```. > Will you be able to assert that a request-hook has been triggered?\nI am not sure understand your question. \nFor which case does it need?. @elgreco247 \nThank you for your interest in this feature.\n\u00a0\nThe Request Hooks feature significantly affects the TestCafe subsystems. First, we will perform internal testing. After that a public development version will be released.. Feature Request Hooks is ready for testing. Anyone can try this.\nBefore testing you need to install the latest alpha version - testcafe@0.20.0-alpha.3.\nFinal documentation is in progress, but you can already use this PR.\n. @zoejobson \nI've answer for your https://github.com/DevExpress/testcafe/issues/1341#issuecomment-385405328 in https://testcafe-discuss.devexpress.com/t/testcafe-not-always-catching-requests-from-browser/818/10. The TypeScript typings will be added in separate PR. . fixture.beforeAll\nfixture.afteAll\nor\nfixture.beforeEachOnce\nfixture.afterEachOnce. It is not working on testcafe@0.17.0@alpha-5.\nhttps://www.screencast.com/t/ob1S43IJ. Duplicate of the https://github.com/DevExpress/testcafe/issues/2017.\nFixed in https://github.com/DevExpress/testcafe/commit/f45f4a0dc73429a6e16ae427c1fd5bd353f228b1. I cannot reproduce this behavior.\nI've attached an example that performs the steps your provided in the post below.\n1421.zip\nEverything works correct for me.\nCould you provide an example that reproduces the problem, please.\n. Yes. HTTP headers are case-insensitive. \nThe http module lower-cases all incoming headers to make accessing them easier.\nSo, header lowercasing is not the reason why \n\nnote that lower-cased headers are not supplied in Requests.\n\nCould you provide an example that reproduces the problem, please. I think we should emulate browser behavior in this case.\nIf I open a nonexistent file in browser then I am getting the following message:\n\n. It is difficult to read and understand for me.\nWe have two feature requests: device emulation and headless mode.\nWe are implementing their using Chrome running via Chrome debug protocol.\nSo, browser provider name should tell about this.\njs\nchrome:cdp;mobileEmulation={name=iPhone 4;orientation=horizontal}\nchrome:cdp;headless\nchrome:cdp;args={port:2222}\ncdp suffix indicates that chrome run via CDP instead of normal run via command line\nmobileEmulation and headless mode are most interesting options and they should be placed in top config level. \narg - for all parameters as host, port and etc.\nI use mobileEmulation term as in ChromeDriver documentation\n\nI would like that CDB will be enabled by default, because it gives better screenshots: even if Chrome is in background, and without browser UI, on all platfroms (currently we don't include Chrome UI in screenshots only on Windows).\n\nI don't think so. It is a big change. It's need to measure but I propose that Chrome running via CDP is slower than Chrome running via command line.\n\ntestcafe \"chrome:args=--disable-infobars --disable-session-crashed-bubble --kiosk;device.name=iPhone \n\nSome of these options we can add by default. For example, --disable-infobars.\nSame as in https://github.com/DevExpress/testcafe-browser-tools/commit/9966ffa7f97498888623e65bd5c57d05ca4f6fa3\nAso I don't understand why we need incognito mode option.\n. Fine. One more user case - https://testcafe-discuss.devexpress.com/t/using-testcafe-with-vue/981/4. It's synthetic scenario. We will wait until a real-user case.. I see you provide a non-public url to reproduce this issue - http://local.caranddriver.com:3000\nHowever, with http://www.caranddriver.com/bmw/3-series/specs/2017/3-series-Sedan/387943 I have reproduced another problem - https://github.com/DevExpress/testcafe-hammerhead/issues/1131.\nWe will fix it during the [next sprint] (https://github.com/DevExpress/testcafe-hammerhead/milestone/12)\nWe also want to be sure that the original problem is fixed.\nCould you provide a public url to reproduce the problem described above?. Bug in our proxy. These issues will be fixed during move to the Android 7.1. Don't need an additional issue.. If path does not specified the full path will be calculated as:\nscreenshots folder + {current-date}\\{testName-testIndex}\\{userAgent}\\screenshotIndex.png\nExample:\nscreenshots folder: c:\\\\temp\njs\ntest('test', asynct t => {\n    await t.takeScreenshot();\n});\nScreenshot will be saved in c:\\temp\\2017-07-05_02-34-34\\test-2\\Chrome_59.0.3071_Windows_8.1_0.0.0\\.1.png file.\n@AndreyBelym correct me if I don't right. If path does not specified the full path will be calculated as:\nscreenshots folder + {current-date}\\{testName-testIndex}\\{userAgent}\\screenshotIndex.png\nExample:\nscreenshots folder: c:\\\\temp\njs\ntest('test', asynct t => {\n    await t.takeScreenshot();\n});\nScreenshot will be saved in c:\\temp\\2017-07-05_02-34-34\\test-2\\Chrome_59.0.3071_Windows_8.1_0.0.0\\.1.png file.\n@AndreyBelym correct me if I don't right. I guess you can use two tsconfig.json files: one for E2E tests and the second one for mocha tests.\njs\ntsconfig.testcafe.json\ntsconfig.mocha.json\nEach config will filter the appropriate files.\nThen you will run the appropriate tests using -p Typescript compiler parameter.\nhttps://www.typescriptlang.org/docs/handbook/compiler-options.html. @testcafe-build-bot \\retest. FPR. > We need to add two more items to the changelog. \nDone. ping @VasilyStrelyaev . Hi @NaukhaizAhmad,\nI tried to open the Angular 4 sample app - 'Tour of Heroes' (https://angular.io/tutorial) with the recorder, and it all works fine for me.\nPlease see this video - https://www.screencast.com/t/HqakqCOnpr.\nTestCafe version - 15.1.3\nAngular version - 4.2.4.\nCould you specify versions of TestCafe and Angular you are using?\nIn addition, provide a simple example to illustrate the issue or share your app with me.. Unfortunately, I cannot reproduce the issue using your attachments.\nI need a simple example that I could run on my side.. Please, export your WebStorm settings and send them to us.. I've imported your settings and my WebStorm still indexes typescript definitions from TestCafe.\nPlease, hover the cursor over the hightlighted word with an error and provide the displayed error message (as in video).\nI've reproduced your issue when I turned off the Use TypeScript Service option.\n\nMake sure that typescript is installed and WebStorm finds it.\nThen check that Use TypeScript Service option is turned on.\n. We've published the new TestCafe version - v0.17.0-alpha1.\nTo install it use the following command:\nnpm install testcafe@0.17.0-alpha1\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @moffsugita \nI am afraid this information is not sufficient to find the cause of your problem. Could you please provide a page or a small example so that we can reproduce it on our side?. Hi @maqpratika \nStarting with 0.20.4 version, TestCafe uses a build-in browser functionality for making screenshots (only for Chrome and Firefox). It allows TestCafe to prevent all platform-specific problems with screenshots.\nTry this version and tell us about your results.. > Hi, thanks a lot. Now I have no errors on making screenshots in TFS + testcafe 0.20.4\nExcellent.\n\nIs there any options to shoot window with scroll?\n\nPlease describe in more detail what options do you need?. At present, it is not possible.\nTrack an issue https://github.com/DevExpress/testcafe/issues/1520 to be aware about progress.. I've converted the issue to proposal.\n\nAlso I'll try to improve quotes handling to allow using regular quotes to separate spaces-containing path and arguments in the path provider. Because experience shows that backticks are counter-intuitive, and people regularly runs into issues with them.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi, @ls-guillaume-lambert .\n\nSpecify reply headers instead of reqheaders.\nAlso need to add the response body.\nSee https://github.com/node-nock/nock#specifying-reply-headers.\nSo, you will need to change your code as follows.\njs\nnock(/localhost:910[01]/).get('/available').reply(500, 'reply body', {\n        'Access-Control-Allow-Origin': '*'\n});\nAlso I've created the example of testcafe with nock integration.\n. '222' is an internal http status code. Testcafe performs validation of a cross-domain request by itself (see https://github.com/DevExpress/testcafe-hammerhead/blob/master/src/request-pipeline/xhr/same-origin-policy.js).\nIf a request does not pass CORS rules, the proxy responds with 222 status code. \nOn the client side, we emulate the native browser behavior: all appropriate getters will return '0' http status code (eg. xhr.statusCode).\nIn your case, '222' status code means that nock's request mock was configured wrongly and it does not pass CORS rules.\nBy using .reply((uri, requestBody) => {}, you cannot setup response headers and status code. You just return [500, 'Error', {...}] as a response body.\nTry to set the debugger on this line https://github.com/node-nock/nock/blob/master/lib\\request_overrider.js#L373 and run your tests.\nYou can also use a working example from the https://github.com/DevExpress/testcafe/issues/1680#issuecomment-321550932.. I will try to understand why nock does not work.\nWe planned to do it as build-in feature in the nearest release.\nSee issues:\n https://github.com/DevExpress/testcafe/issues/1341\n https://github.com/DevExpress/testcafe/issues/1271. Try to use the latest TestCafe version (testcafe@0.19.2) and let us know about your results.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot \\retest. > how's that different from specifying testcafe ...options\nIt is not different. It is another way to specify options.\nIt will be usefully (just easier to read them) then specified options take a several lines.. To work properly, TestCafe processes all scripts on the page (actually, the testcafe proxy does it). \nThe Angury extension adds its own script to a page using the chrome-extension protocol. \nhttps://www.screencast.com/t/Vgh4HlmGzUiy.\nTestCafe can't process scripts loaded by this protocol.\nThat's why we can't guarantee that these unprocessed scripts will work correctly.\nIn the case of Angury, an unprocessed script is failed and we can't handle it.\nYou can turn off the Angury extension before running the test.\nMeanwhile, we plan to disable all chrome extensions before running tests by default.\nWe will work on it as a part of the #1623 issue. Fixed in https://github.com/DevExpress/testcafe-hammerhead/pull/1287\nThe fix will be included to the next release version. You can try it in the latest dev version (npm install testcafe@0.17.3-dev20170913 or npm install testcafe@dev)\nFeel free to reopen the issue if the problem still occurs on your page\n. Hi @pittdewaard\nWe tried to reproduce the problem with the data you provided. But we did not succeed.\nYou problem seems to be an edge case. \nTo reproduce the problem, we need an example that we can run on our side.\nCould you, please, provide one?. > but this servlet fails with a Null Pointer Exception, what means it can't get a handler to the uploaded file...\nAs I understand, your backend is written in Java.\nYour servlet contains a method that processes file upload. With TestCafe, this method returns the 951 HTTP status code.\nThe request from your logs:\njs\nPOST http://10.11.32.149:50526/rkYXyK-lM/http://localhost:7029/ibf/10008-1011-20171121112548/root/web2/json/Z7_2_UploadDTA 951 (unknown)\nI guess that NullPointerException is raised when some field or variable (from servlet state or HttpServletRequest request parameter) from target servlet's method equals null.\nCould your, please, provide:\n- code of a method that processes file upload\n- stack trace of the raised NullPointerException\n- full data of the HttpServletRequest request parameter (with TestCafe and without it)\nIf the information I ask you to provide contains sensitive data, you can send it to me on mikhail.losev@devexpress.com email.. Note: we already have build-in support for accessing console messages. Hi @juliusgonawan \nWould you please describe a real life case for which you need this functionality?. @testcafe-build-bot \\retest. I've created the separate issue in another repository https://github.com/DevExpress/testcafe-hammerhead/issues/1297. Fixed in https://github.com/DevExpress/testcafe-hammerhead/issues/1289.\nWaiting for update the testcafe-hammerhead dependency.. Fixed in https://github.com/DevExpress/testcafe-hammerhead/pull/1290.\nThe fix will be included to the next release version. You can try it in the latest dev version (npm install testcafe@0.17.3-dev20170913 or npm install testcafe@dev).. @gytisgreitai \nWe will add a note about it in our documentation. I've created an issue for this task - https://github.com/DevExpress/testcafe/issues/2712. @coakeson \nVote the Add ability to perform testing in multiple browser windows issue.. There are very few sites that will work properly with small resolutions (200, 100). So, we will not think about bottom action page redesign.. We found a piece of code that generates the error you described.\nBut to fix it completely, we need to understand what your client script does.\nCan you provide a page on which I could reproduce the problem?\nIf information on the page contains sensitive data, you can send me the source to mikhail.losev@devexpress.com. @testcafe-build-bot \\retest. Let me know when it will be fixed. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @pablorivera\nTry the latest TestCafe version (testcafe@0.19.2) and let us know your results.\nIf there is a possibility to hold a remote session using Skype or TeamViewer to access your app, we would be happy to do this.. Hi @pablorivera\nTry the latest TestCafe version (testcafe@0.19.2) and let us know your results.\nIf there is a possibility to hold a remote session using Skype or TeamViewer to access your app, we would be happy to do this.. @kel30a @Esteban26 and everyone\n\u00a0\nThe problem does not relate to TestCafe.\nThere are numerous reasons a web page cannot be loaded: a virtual amazon machine is not available, a DNS resolving problem or something else).\n\u00a0\nYou can run your tests in quarantine mode.\n. @kel30a @Esteban26 and everyone\n\u00a0\nThe problem does not relate to TestCafe.\nThere are numerous reasons a web page cannot be loaded: a virtual amazon machine is not available, a DNS resolving problem or something else).\n\u00a0\nYou can run your tests in quarantine mode.\n. Hi @varunkumar.\nThank you for informing us that the original issue was fixed. \nAs for the other issues, usually we avoid discussing several problems in a single thread. Please create a new issue and describe the problem in detail there. We will be happy to help you.. Hi @varunkumar.\nThank you for informing us that the original issue was fixed. \nAs for the other issues, usually we avoid discussing several problems in a single thread. Please create a new issue and describe the problem in detail there. We will be happy to help you.. TestCafe should restart the browser when the latter starts to slow down.\nI suggest using the following algorithm:\n implement a user-defined option to specify the memory usage limit\n track the browser memory usage (only for IE) and restart the browser when it exceeds this limit. There is a more one use case:\nI want to use JQuery in ClientFunction. \njs\nvar getElementHeigth = ClientFunction(() => { $(element()).heigth(); }, { dependencies: element});\nThen I run TestCafe, I get an error message Cannot find name $.\nIn this way, I need a way to extend tsconfig used by testcafe for compiling tests.. There is a more one use case:\nI want to use JQuery in ClientFunction. \njs\nvar getElementHeigth = ClientFunction(() => { $(element()).heigth(); }, { dependencies: element});\nThen I run TestCafe, I get an error message Cannot find name $.\nIn this way, I need a way to extend tsconfig used by testcafe for compiling tests.. No. This feature is in progress.. No. This feature is in progress.. There is a separate issue related to the WebSocket support. Currently, this feature is in progress. \nWe will publish a new testcafe version right after a WebSocket support will be implemented.. I've reproduced the issue.\nOn the latest commit of hammerhead(https://github.com/DevExpress/testcafe-hammerhead/commit/9e41e1c500f76b15e79840f77239fcfc091a99c5) the problem does not reproduce.\nSo, search a problem place in testcafe.\nNote: the problem appeared between between v0.18.0-alpha1 and v0.18.0-alpha2 versions.. I've reproduced the issue.\nOn the latest commit of hammerhead(https://github.com/DevExpress/testcafe-hammerhead/commit/9e41e1c500f76b15e79840f77239fcfc091a99c5) the problem does not reproduce.\nSo, search a problem place in testcafe.\nNote: the problem appeared between between v0.18.0-alpha1 and v0.18.0-alpha2 versions.. Also do not use functions from libraries (assignIn from lodash) on client side. Functions may use overriden methods that will cause potential client errors.\nReview TestCafe code.. Hi @Thomblin.\nUnfortunately, we cannot reproduce the issue. Try the latest docker image with testcafe@0.19.2. \nFeel free to reopen the issue if you can create an example on which we can reproduce the problem.. The fix is already in PR.. Link http://xafbuilder2/MainDemo.Mobile/Static/17.2.0.0/player.html does not work. \nI request a working link.. After discussing with issue's author in private we decide to close it.. Hi @pablorivera .\nConsole error, you provided, is a consequence of the problem.\nThe cause of the problem - request to https://develop-i.quid.com/api/autocomplete finished with 500 http status code.\nIt is difficult to understand why it is happen without direct access to the your application.\nCould we do a remote session with you using Skype, TeamViewer or something else?\nOr we need to example which we can run on our side.. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Hi @avozicov,\n\u00a0\nI see the problem in our proxy.\nI've created a separate issue regarding it: https://github.com/DevExpress/testcafe-hammerhead/issues/1349. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. FPR. Fixed in https://github.com/DevExpress/testcafe/pull/1943. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. Hi, @thomasbrueggemann \nI've reproduced the problem and created a separate issue in our web proxy repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1419. Hi @pgrivachev.\nIt's not a bug. \nAccording to the documentation, getStyleProperty returns the computed value of the CSS property. For your markup, the computed properties are overflow-x and overflow-y.\n\nSo, you need to change your assertion code to the following one:\njs\n.expect(documentElement.getStyleProperty(\"overflow-x\")).eql(\"hidden\");\nand it will pass.. Hi @gpsarkar \nThe fields outside of the form should not be submitted.\nI've created a simple example demonstrating this behavior.. Hi @gpsarkar \nThe fields outside of the form should not be submitted.\nI've created a simple example demonstrating this behavior.. Reproduced in Safari 11.0.2.\nWith TestCafe browser is raised an error:\njs\nInvalidAccessError (DOM Exception 15): Trying to call an ApplePaySession API from an insecure document.. It's time to discuss API, because testcafe-hammerhead's part of this feature already completed (nearly).\nI propose the following API for this feature:\n```js\n//Programming Interface\ncreateTestCafe (hostname, port1, port2, sslOptions)\nsslOptions.key -  - private key in PEM format\nsslOptions.cert -  - cert in PEM format\n//Command line\ntestcafe chrome my-tests --ssl-key test/key/agent2-key.pem --ssl-cert test/key/agent2-cert.pem\n--ssl-key -  path to key file\n--ssl-cert -  path to cert file\n```\n@kirovboris @AndreyBelym . It's time to discuss API, because testcafe-hammerhead's part of this feature already completed (nearly).\nI propose the following API for this feature:\n```js\n//Programming Interface\ncreateTestCafe (hostname, port1, port2, sslOptions)\nsslOptions.key -  - private key in PEM format\nsslOptions.cert -  - cert in PEM format\n//Command line\ntestcafe chrome my-tests --ssl-key test/key/agent2-key.pem --ssl-cert test/key/agent2-cert.pem\n--ssl-key -  path to key file\n--ssl-cert -  path to cert file\n```\n@kirovboris @AndreyBelym . > It works this way in nodejs, but it's not quite usable. Why should we choose this approach?\nNodejs api is polymorphically for this option. It takes string, Buffer and Object (see createsecurecontext_options).\nEventually, all of this will transformed to Buffer.\nIn my opinion, Buffer is the best way to specify ssl keys in programming interface.\nAlso, in https example from the nodejs documentation used this way.\n```js\nconst https = require('https');\nconst fs = require('fs');\nconst options = {\n  key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),\n  cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem')\n};\nhttps.createServer(options, (req, res) => {\n  res.writeHead(200);\n  res.end('hello world\\n');\n}).listen(8000);\n```. > It works this way in nodejs, but it's not quite usable. Why should we choose this approach?\nNodejs api is polymorphically for this option. It takes string, Buffer and Object (see createsecurecontext_options).\nEventually, all of this will transformed to Buffer.\nIn my opinion, Buffer is the best way to specify ssl keys in programming interface.\nAlso, in https example from the nodejs documentation used this way.\n```js\nconst https = require('https');\nconst fs = require('fs');\nconst options = {\n  key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),\n  cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem')\n};\nhttps.createServer(options, (req, res) => {\n  res.writeHead(200);\n  res.end('hello world\\n');\n}).listen(8000);\n```. @intermike\nYes you are right.  sslOptions should be declared in a factory method. I've updated the https://github.com/DevExpress/testcafe/issues/1985#issuecomment-387341594. @intermike\nYes you are right.  sslOptions should be declared in a factory method. I've updated the https://github.com/DevExpress/testcafe/issues/1985#issuecomment-387341594. After discussing with @AndreyBelym, we introduce the following API:\nProgramming interface\njs\ncreateTestCafe (hostname, port1, port2, sslOptions)\nsslOptions are nodejs https options\nCommand-line interface\njs\ntestcafe --ssl pfx=path/to/some.pfx;rejectUnauthorized=true;...\nssl is a parameter that contains semicolon-separated options in the key-value format.\nFor the key, cert and pfx properties, the following processing algorithm is used:\nif a property has a string type and its length is less that the MAX_PATH limit,\nwe interpret the value as a file path. Thus, we read the file content and replace the property value with this content.\n@kirovboris Take a look please. After discussing with @AndreyBelym, we introduce the following API:\nProgramming interface\njs\ncreateTestCafe (hostname, port1, port2, sslOptions)\nsslOptions are nodejs https options\nCommand-line interface\njs\ntestcafe --ssl pfx=path/to/some.pfx;rejectUnauthorized=true;...\nssl is a parameter that contains semicolon-separated options in the key-value format.\nFor the key, cert and pfx properties, the following processing algorithm is used:\nif a property has a string type and its length is less that the MAX_PATH limit,\nwe interpret the value as a file path. Thus, we read the file content and replace the property value with this content.\n@kirovboris Take a look please. Hi @intermike \nWe've updated the testcafe-hammerhead dependency with changes related to the https support feature.\nYou can continue to develop this feature on the TestCafe side.\nSee an API description in https://github.com/DevExpress/testcafe/issues/1985#issuecomment-389488983.\nLet us know if you need any help about with our development workflow.. Hi @intermike \nWe've updated the testcafe-hammerhead dependency with changes related to the https support feature.\nYou can continue to develop this feature on the TestCafe side.\nSee an API description in https://github.com/DevExpress/testcafe/issues/1985#issuecomment-389488983.\nLet us know if you need any help about with our development workflow.. Hi @eliw00d \nI've created a simple test for Material-UI Popover.\n```js\nimport ReactSelector from 'testcafe-react-selectors';\nfixture Material UI Popover\n    .page('http://www.material-ui.com/#/components/popover');\ntest('test', async t => {\n    const clickMeLinks      = ReactSelector('RouterContext').find('span').withText('CLICK ME');\n    const clickMeLinksCount = await clickMeLinks.count;\nfor (let i = 0; i < clickMeLinksCount; i++)\n    await t.click(clickMeLinks.nth(i));\n\n}); \n```\nand it works good.\nIt's difficult to locate a problem without an example.\nCould you, please, provide an example on which this issue is reproduced?. Ok. I get it. I will try to reproduce the problem myself.\nCould you please provide:\n- material-ui module version\n- markup and code for the Dialog that leads to another Dialog with an AutoComplete. I've created an example based on the create-react-app template and Material UI Demos.\nYou can find it here.\nI was trying to reproduce the issue. But unfortunately, I did not succeed.\nCould you please try to modify my example and reproduce the problem?\nAlso I need some additional information from you: please, tell the version of the browser you are using.\n. Hi, @harryurban\nThanks for your report.\nI've reproduced the problem and created a separate issue in the our web proxy repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1418. >did the closed issue above solve our issue?\n@harryurban .\nUnfortunately, it is very difficult to fix this problem.\nTestCafe adds a lot of elements to the tested page: custom scripts, stylesheets, attributes, comments, etc. \nThe AMP site building technology prohibits using custom scripts and attributes. Also, our proxy handles all content using the http protocol (from page to proxy). Also, AMP doesn't allow using the http schema for media sources.\nSee the links below:\n https://www.ampproject.org/docs/fundamentals/spec#html-tags \n https://www.ampproject.org/docs/fundamentals/spec#links \n* https://www.ampproject.org/docs/reference/components/amp-video \nAMP Validator tool uses regular expressions internally to parse html markup. So, there is no good way to hide the TestCafe part from it.. @testcafe-build-bot \\retest. FPR\n/cc @helen-dikareva , @AlexanderMoskovkin . The issue did not reproduce in 0.19.2.. Hi, @jpke.\nThe test page URL you provided, https://beta.carfax.com/Used-Honda_m11/, does not open.\nSo, I cannot reproduce the problem.\n\n. Unfortunately, I cannot reproduce this issue on OSX or Windows platform, with either the development or productions domains.\n\n. I'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.. Fixed in testcafe@0.19.2. Hi @xMort .\nI ran your test using testcafe@0.19.2 and it passed.\nI will close the issue. Feel free to reopen it if the problem persists.. Hi @javiercbk.\nI've reproduced the problem and created the separate issue in another repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1446.\nWhen the issue is fixed, we will release a new version of TestCafe immediately.. Hi @cortezcristian .\ntestcafe@0.18.7-dev20180206 contains the fix of this problem. Try to install this version and tell us about the results.\n. Fixed in https://github.com/DevExpress/testcafe-hammerhead/pull/1459. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @berrutti\nSince v0.17.0, TestCafe clears local and session storages automatically after each test (see https://github.com/DevExpress/testcafe/pull/1590).\nTry upgrading TestCafe to the latest version (0.18.6) and remove your code that clears storages.\nIf the problem still occurs, please provide a page with which we can reproduce the problem.. @testcafe-build-bot \\retest. I'm working on this. On the latest TestCafe version (0.20.2) all works fine.. Hi, @zoejobson.\nAs I see, you use Angularjs (1.x) in your application. It does not seem possible to reproduce the problem using the markup you've sent, because journalListGrid performs client-side initialization. It is indicated by initialized=\"ctrl.journalListGrid.init(s)\" and items-source=\"ctrl.data\" attributes from your markup. \nWe cannot reproduce the problem without an example. If you prepare one, please place it on http://jsfiddle.net, http://jsfiddle.net or send us directly.. I don't like this way.\nTemplate string with separators has the following cons:\n- difficult to use conditional logic, \n- difficult to format datetime and useragent\n- potential problems with path separator char (https://nodejs.org/api/path.html#path_path_sep).\nI propose to use a single function (packed as module) to build a custom screenshot path. \nThe function was named as CustomScreenshotPathProvider.\nExample:\njs\ntestcafe chrome -s screenshots -p OrganizationShare.js\ntestcafe ie -s screenshots -p DevFTP.js\nWhere OrganizationShare.js\n```js\n/Import necessary modules/\nexport default function (runnerInfo, userAgent) {\n    /Custom logic/\n    return path.combine(runnerInfo.fixtureName, runnerInfo.testName, userAgent.browser...)\n}\n```\nPros of this way:\n- complex pattern is incapsulated to file with human-readable alias.\n- flexible and power (allows to use all nodejs modules)\nWhat do you think about it?. > What conditional logic would you like in screenshot path template. I can't imagine a real-life case for that\nI don't want to invent user cases. \nYou option from previous comment covers known cases.\nSo, let it be.. This PR has intersections of the files changed with https://github.com/DevExpress/testcafe/pull/2476.\nI will continue to work after merge https://github.com/DevExpress/testcafe/pull/2476.. It will take time to resolve all the conflicts. It'll be more convenient to create a separate PR.\nSo, I will close this PR.. Hi @green-arrow \nPlease, describe in more detail how you do this:\n\nCalling document.cookie returns an empty string within the application being tested.\n\nDid you write a ClientFunction that returns document.cookie? Or you just call document.cookie in DevTools Console?\n. Ok, I understand you. We need additional time to reproduce the problem.\nWhen it is done, I'll notify you about the result.. We found the problem looks like the one described above.\nSee the separate issue in our proxy repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1491. Hi @snowl \nThanks for your proposal.\nWhen the Request Hooks Feature will be implemented, it will be possible to use Client Sertificate Autentification in tests. I'll create an example.\nFor myself: the detailed article about 'Client Sertificate Autentification' in nodejs.. > Why wouldn't it render the angular view on CI, but succeed to do so locally?\nIt's difficult to understand the cause of the problem without an example to reproduce.\nCould you please provide a full example to reproduce (site + tests)?. Hi @bdwain \nThis issue looks like a duplicate of https://github.com/DevExpress/testcafe/issues/2226.\nTry the latest TestCafe alpha version (testcafe@0.20.0-alpha.3) and let us know about your results.. Hi @bdwain \nThis issue looks like a duplicate of https://github.com/DevExpress/testcafe/issues/2226.\nTry the latest TestCafe alpha version (testcafe@0.20.0-alpha.3) and let us know about your results.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists.. Unfortunately, I can not reproduce the issue on my side.\nI'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. Unfortunately, I can not reproduce the issue on my side.\nI'm closing this since there were no activity here for a long time. Feel free to reopen the issue if it's still needed.\nAlso, you can try to run your tests on the latest TestCafe version.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Implemented in https://github.com/DevExpress/testcafe/pull/2562. Starts from 0.18.4 version, we send websocket requests through our proxy. \nNet logs from issue description show this updated behaviour.\nOur tests cover many cases of using WebSocket requests (ws and wss protocols, cookie processing and etc.).\nIf your application work right with 0.18.3 version and it does not work with 0.18.4 and later - it is a bug. \nTo understand a reason of the problem, we need a direct access to the your application (public link or remote session) or example demonstrating the problem.. @LavrovArtem need to change code in provided links. @AndreyBelym \nAs I understand the https://github.com/DevExpress/testcafe/blob/master/test/server/data/client-fn-compilation/basic/expected-node10.js related to node 0.10.0 version.\nAt present, we don't support this version. Can we remove this file?\n. The issue does not relate with docker or headless chrome.\nIt is the duplicate of the Add ability to perform testing in multiple browser windows issue.\nThe fact is that TestCafe opens browser windows created with window.open function call in the same window.\nI've created a test with steps from issue description and run it using TestCafe.\nThe test opens the 'Login via Facebook' page in the same window instead of secondary browser window.\nRespectively, 'Login via Facebook' window will not closed after login (see video).\nTo 'Login via Facebook' try to use workaround from https://github.com/DevExpress/testcafe-hammerhead/issues/1428\n@AhnpGit @leojh @ameyagholkar \nNote that the error browser <browser-name> disconnected. ... can occur due to a variety of reasons.\nIt is necessary to investigate each case separately.\n. I closed this issue because it is a duplicate.\n@AhnpGit @ameyagholkar Please create separate issues and provide more details about your environment there.. @operatino\nSince that error occurred randomly, it indicates that it is not a docker related problem.\nIn the current development sprint, we have planned to implement video recording of test running. This feature should help you find the reason of the problem. We can publish an early dev release with the video recording feature.\nTrack https://github.com/DevExpress/testcafe/issues/2151 to be notified about our progress.\n\u00a0\n. @neilmatillano \nTry to specify the --no-sandbox flag for Chromium browser.\njs\ndocker run -v //d/tests:/tests -it testcafe/testcafe 'chromium --no-sandbox,firefox' /tests/**/*.js. @neilmatillano \nTry to specify the --no-sandbox flag for Chromium browser.\njs\ndocker run -v //d/tests:/tests -it testcafe/testcafe 'chromium --no-sandbox,firefox' /tests/**/*.js. Hi @mfestrada\n\u00a0\nIf tests hang with the --no-sandbox flag, it means there is a problem with TestCafe.\nPlease try to create a simple example to reproduce this problem so that I can run it on my machine.\nI will lock this issue because other comments are not connected with the original problem.\n\u00a0\n@neilmatillano @ameyagholkar and others\nIf the problem still persists, try to do the followings:\n- update to the latest TestCafe version (testcafe@1.1.0)\n- specify the --no-sandbox and --shm-size flags (see the Using TestCafe Docker Image help topic)\n\u00a0\nIf it does not help you, please create separate tickets for each problem and provide all the necessary information.. Hi @mfestrada\n\u00a0\nIf tests hang with the --no-sandbox flag, it means there is a problem with TestCafe.\nPlease try to create a simple example to reproduce this problem so that I can run it on my machine.\nI will lock this issue because other comments are not connected with the original problem.\n\u00a0\n@neilmatillano @ameyagholkar and others\nIf the problem still persists, try to do the followings:\n- update to the latest TestCafe version (testcafe@1.1.0)\n- specify the --no-sandbox and --shm-size flags (see the Using TestCafe Docker Image help topic)\n\u00a0\nIf it does not help you, please create separate tickets for each problem and provide all the necessary information.. This bug is a result of fix the https://github.com/DevExpress/testcafe/issues/1803 issue.\nChanges were make in the both repositories (testcafe and hammerhead).\nSee related issue in hammerhead - https://github.com/DevExpress/testcafe-hammerhead/issues/1318.. This bug is a result of fix the https://github.com/DevExpress/testcafe/issues/1803 issue.\nChanges were make in the both repositories (testcafe and hammerhead).\nSee related issue in hammerhead - https://github.com/DevExpress/testcafe-hammerhead/issues/1318.. @testcafe-build-bot \\retest. Let's start to review this PR.\n/cc @AlexanderMoskovkin @AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. FPR. ping @AlexanderMoskovkin @AndreyBelym @churkin @VasilyStrelyaev . FPR. > @miherlosev rebase to upstream please\nIt will be do after hammerhead version will be updated.. FPR. ping @AlexanderMoskovkin @AndreyBelym . @AndreyBelym  Review but don't merge until hammerhead version was updated.. @testcafe-build-bot \\retest. Hi @czdiaz \nThere are many reasons why the test execution can require different time for your complex system. \nFor example: database and webserver performance, network delays, browser updates, etc.\nI will close the issue.\nTry the latest stable TestCafe version (0.19.2). \nIf the problem persists, feel free to reopen the issue and provide us with a simple example showing it in action. \n. Hi @panda-go-panda \n\u00a0\nCould you please provide a page where I can reproduce the behavior described above?\nAlso, specify the mobile device and browser where you reproduced the problem.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @vivekpant28.\nIt's a difficult to understand the reason of the problem without information from your side.\nWe need an example which we can reproduce locally.\nI will close the issue.\nTry to use the latest TestCafe version - testcafe@0.19.2.\nFeel free to reopen the issue if problem persists and you can provide example to reproduce it.. Hi @viking2917 \nI've reproduced the issue. I need additional time to investigate the cause of the problem.. Hi @phoet \nThanks for your proposal. We have the separate issue testcafe-hammerhead/1429 in our proxy repository for this case .\nTrack testcafe-hammerhead/1429 to be notified about our progress.\n. Hi @sbenyo.\nI've found the reason of the problem and created the separate issue in our proxy repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1603.. Fixed in https://github.com/DevExpress/testcafe/pull/2437. Done in https://github.com/DevExpress/testcafe/commit/d4be3b190755b613e73ae3c69894ef523b55ff0d. Hi @hang-ren.\nThe problem is not reproduced in testcafe@0.19.2.\nTry this version and let us know if the problem persists.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @AlexanderMoskovkin FPR. Need to check all tests and replace all instrumented method calls for window.postMessage, location.assign, location.replace.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. The question was answered - https://github.com/DevExpress/testcafe/issues/2278#issuecomment-379763423. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I suspend this task until we found a way to stabilize the takeElementScreenshot tests.\n@AndreyBelym . I suspend this task until we found a way to stabilize the takeElementScreenshot tests.\n@AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR @AlexanderMoskovkin . FPR @AlexanderMoskovkin . Hi @SayedShahidi \nI cannot reproduce the issue because site markup was changed and test from description now failed.\nCould you please provide a simple example to reproduce?. Hi, @jdc0m \nWe discussed the issue with @AndreyBelym and came to the conclusion that we can reproduce it only with direct access to your computer. We can do this using TeamViewer, Skype, or some other means. If direct access is suitable to you, let us know the preferred way for it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if your can provide us the direct access to your computer.. Hi @Andrei1982 \nCould you please send me your test credentials (login/password) so I can reproduce the issue on a real-life web site?\nMy corporate email is mikhail.losev@devexpress.com.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. ping @AlexanderMoskovkin . I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @ZayanNadeem \nThe current development sprint is already planned. We will consider this issue during planning the next development sprint.\n. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Don\u2019t review it. I will to check an another way to fix problem. Waiting for fix problem with Node 10. @testcafe-build-bot \\retest. FPR @AndreyBelym . @testcafe-build-bot \\retest. FPR @AndreyBelym. I'm working on this. Hi @lixualinta and @bsmithb2\n@AndreyBelym reproduced the problem using Samsung Internet Browser on Galaxy S7. He used a browser from the BrowserStack.com infrastructure.\nSamsung Internet Browser installed on this device has a very old version - 4.0.01-89. This version was released in early 2016 (see https://en.wikipedia.org/wiki/Samsung_Internet_for_Android#History).\nIt means that the browser has an old script engine that does not support modern script engine possibilities.\nThis is why TestCafe does not work with it.\nYou wrote that  - 'Bug appears to be introduced in 0.19.2-alpha1 release. If we install v0.19.2-dev20180323 the problem goes away'.\nThis can happen. We constantly refactor our code to provide a faster and bugless product that should work with modern browsers. See TestCafe's browser support.\nIf you need to run tests in Samsung Internet Browser try to use the previous testcafe version (0.19.1) or upgrade Samsung Internet browser to the latest version.. @lixualinta @bsmithb2\nWe support and run our tests only on the latest desktop Chrome and on the Chrome Mobile 64 provided by Saucelabs. \nChrome Mobile 55 is a very outdated browser and we will not support it.\n@psi-4ward\nSamsung Internet 6.4.0 is a Chromium-based browser with an old script engine that equivalents Chrome 56. We will not support it.\n\n. Such page exists - https://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/browser-support.html#officially-supported-browsers.\nWe will think about adding link to this page for new issue template.. @psi-4ward \n\nand tells you if the browser is supported\n\nI've created a separate issue for this task - https://github.com/DevExpress/testcafe/issues/2446. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR @AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I've created a separate PR for this feature.\nI will close this PR. . I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide information about your environment.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot \\retest. ping @helen-dikareva . @testcafe-build-bot \\retest. Hi @vzaidman \nCould you please provide a page on which I can reproduce described above behavior?. I've registered at https://www.powtoon.com/ and run your test using the appropriate email and password. \n\nYou can see in the report that test execution fails before that problematic step.\nCould you please modify your code so that the test fails at the problematic step?\n. Unfortunately, the test execution fails before the problematic step again.\n\nCould you please record a video (we use the Jing tool for this) in which you manually perform the actions from your test?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Feel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @Seeker9889 \nThanks for your bug report. I've reproduced the issue. But I need an additional time to investigate the reason of the problem.. @testcafe-build-bot \\retest. Hi @d7ark,\n\u00a0\nThank you for this suggestion. Please note that it should be implemented in the code linting tool.\nWe already have an issue regarding this - https://github.com/miherlosev/eslint-plugin-testcafe/issues/1.\nTrack this issue to get more information or feel free to contribute. . Hi @aruns-git\nUnfortunately, I cannot reproduce the issue.\nI've tried testcafe@0.19.2 and test execution does not hang on Windows and Mac OS X.\nTry the latest stable TestCafe version (0.19.2). If the problem persists, please provide us with the stack trace of the unhandled promise rejection.\nYou can do it by adding this code piece to the main executed file:\njs\nprocess.on('unhandledRejection', function(reason, p){\n    console.log(\"Possibly Unhandled Rejection at: Promise \", p, \" reason: \", reason);\n});\n. I will close the issue because no activity has been encountered for a long time.\nTry with testcafe@0.20.0 and feel free to reopen the issue if the problem persists.. Hi @prerna001, \n\u00a0\nThank you for your report. \n\u00a0\nCould you please provide a screenshot of the test report?\nI want to see the full error message text and the position of the arrow that points to a line with an error.\n\u00a0\nAlso, while investigating the issue, I've found a separate problem - https://github.com/DevExpress/testcafe/issues/2386. \n\u00a0\nAs a workaround, try changing if(await chatBttn.visible){ to if(await chatBttn.exists){\n\u00a0. It looks like a bug related to the TestCafe's click action.\nBut to reproduce it, we need an example. Could you please provide a page on which we can reproduce this behavior?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @nzav \nThanks for your bug report.\nWe've encountered some problems with MSEdge 17 related to typing, focus changing and etc.\nIt will be fixed ASAP.\nThe first part of fix is already in progress - https://github.com/DevExpress/testcafe-hammerhead/pull/1606. I cann't reproduce the problem with the latest commit (https://github.com/DevExpress/testcafe/commit/a9a1c1e5841d5923b0970df168fc0ce35618c223).\n```js\nimport { Selector } from 'testcafe';\nfixture test\n    .page('http://builder03/Demos-18.2/Bootstrap/CardView/Adaptivity.aspx');\ntest('test', async t => {\n    const demoIframe = Selector('.demo-frame');\n    const body       = Selector('body').exists;\nawait t\n    .switchToIframe(demoIframe)\n    .expect(body).ok();\n\nawait t.switchToMainWindow();\n\n});\n```. @Andgoncharov\nYes, my problem description looks different from the problem you described.\nBut\n We will fix all problems found on the provided site \n I haven't investigated the problem deeply and the real reason of the problem can be DevExpress/testcafe-hammerhead#1614 . At present, it's impossible to send request to any resource with cookie (without accessing to internal api)\nAlso if response contains 'Set-Cookie` header need an additional helper code to apply cookie for request chains (see https://testcafe-discuss.devexpress.com/t/making-http-requests-in-helpers/621/3).\n. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. The problem does not relate to iframes.\nWe don't correctly check a same-origin policy for second-level domains web.elk.co and app.elk.co.\nIt's a general restriction of our web-proxy. I've created a separate issue in its repository - https://github.com/DevExpress/testcafe-hammerhead/issues/1787.\nAs a temporary workaround, try to run Google Chrome with the --disable-web-security flag.\n. Done. At preset, we don't have unstable tests. All test problems are related to unstable and slow emulators.. We need the following info:\n stack trace for unhanded Promise rejection and uncaught exception \njs\nprocess.on('unhandledRejection', (reason, p) => { ...}\n             .on('uncaughtException', err => {})`\n stack trace for TestCafe related scripts (testcafe.js, hammerhead.js, etc.) - add possibility to use unminified scripts and pass stack trace to report. > Source maps - better stack traces for both server and client\nFor client side I don't know how it will work because we modify the origin scripts.\n\ncapturing all network requests and responses to a file\n\nShould be done without testcafe or hammerhead to find problem with hammerhead server side proxying.\nFor other items there are no questions or remarks.\n. Done. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @MargaritaLoseva review please. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @Aporrasniche \nAt present, iOS 10.1.1 is in the discontinued state (see IOS_version_history).\nWe support and run our tests with iOS 10.3.3 and OS X 11.0 operation system versions.\nNevertheless, you can try to use the previous TestCafe releases (for example 0.18.0) for testing on iOS 10.1.1.\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. This PR is not actual now. Hi @danroshko \nType definitions is already in PR.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. To check other our repositories we need a module with simple interface: \n if there are problem then log messages; \n if all is ok then log success message.\n@kirovboris Combine your code to the separate module devexpress/license-checker and after it we will apply license checking to all other repositores.. Try the 0.20.4 version and feel free to reopen issue if problem still persists.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @AndreyBelym FPR. Hi @iegor-zabielin \nThank you for your report. Unfortunately, it's very difficult to reproduce the problem without a real page.\nCould you please provide a page on which we can reproduce the problem?. @iegor-zabielin \nI need an example which I can run on my computer. Without it I cannot find the reason of the problem.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @hex0cter \nIt's difficult to determine the cause of the problem by your description.\nPlease provide us with a simple example to reproduce the issue so that we will be able to fix this problem ASAP.. @hex0cter \nUnfortunately, I cannot reproduce the issue (see video).\nWhich Firefox version do you use?. @hex0cter  I've reproduced the problem with Firefox on MacOS 10.13. But I need an additional time to investigate the reason of the problem.. Fixed in https://github.com/DevExpress/testcafe/commit/94c4d6c6d8f8e24741b7140c85b8afbc7c3ecde6. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. The original question was answered. So I will close the issue.. Hi @anamariaoros\n\nAny idea how I can use testcafe on webgl stuff?\n\nWebGL graphic is rendered on the canvas element. You need to locate the target canvas element and then you can perform various actions with it.\nSee a test code example below and its video:\n```js\nfixture Fixture\n    .page('http://learningwebgl.com/lessons/lesson01/index.html');\ntest('i2445', async t => {\n    await t\n    .setTestSpeed(0.1)\n    .click('#lesson01-canvas', { offsetX: 130, offsetY: 230 });\n });\n```\n\nIs there some feature implemented already? Do you recommend any flow/tools? I can't find any documentation on that.\n\nCould you please specify what you want to test using TestCafe? \n. I will close the issue because no activity has been encountered for a long time.\nIf you have any other questions then feel free to contact us.. Hi @rupeshmore\nThis problem has already been fixed in testcafe@0.20.1.. Let's add test for this. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @dgieselaar\nThe test run will fail only if the page specified in the page or fixture directives causes the Failed to find DNS record... error. If the error is caused by other resources, the test run will not fail.\nI will close the issue until we arrange a remote session.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. ping @kirovboris . ping @kirovboris . Hi @davidcunha \n\nAt this moment I'm not able to test a lot of features because I simply cannot get different responses\n\nCould you please clarify your scenario in more detail?\n. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @davidcunha \nYes, your are right. It's a CORS issue. You need to change your code as follows:\njs\nconst mock = RequestMock()\n  .onRequestTo('http://remote-api.com/api/auth?user_type=customer')\n  .respond({\n    result: null,\n    errors: [\n      {\n        message: 'Incorrect username or password.',\n      },\n    ],\n  }, 200, {'Access-Control-Allow-Origin': '*'});\nFrom our side we will add a warning with a clear message for this case. . I am working on it. Hi @snowl \nThe current development sprint is already planned. We will consider this issue during planning the next development sprint.. @testcafe-build-bot retest. @AndreyBelym FPR please. @testcafe-build-bot retest. FPR @AndreyBelym @VasilyStrelyaev. At present, you can do it by running TestCafe for each browser.\njs\ntestcafe \"browserstack:Chrome@67.0:Windows 10\" /tests\ntestcafe \"browserstack:Firefox@60.0:Windows 10\" /tests\ntestcafe \"browserstack:Internet Explorer@11.0:Windows 10\" /tests\netc.\nTestCafe does not allow running tests in several browsers sequentially at the level of one test run.\n. @ZayanNadeem \nI found that you didn't specify an assetion method  in your code\njs\nawait t\n      .expect(row1.exists); // Should be replaced with .expect(row1.exists).ok();\n    await t\n      .expect(row2.exists);// Should be replaced with .expect(row2.exists).ok();\nThis fact can be the reason of the problem.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @awilkins \nThank you for the example to reproduce. I've reproduced the bug.. > Execute some browser automation outside of a test fixture.\nCould you please describe the scenario where it is necessary?. After discussing in private, we decided to convert this bug to an enhancement.. TestCafe should properly handle this case. I'm working on it. Test cases:\n- [x] element (https://github.com/DevExpress/testcafe/pull/2683)\n- [ ] <body>\n- [ ] <html>. > Sorry if this is a duplicate from testcafe-browser-provider-saucelabs, it doesn't look like anyone has been active in the repo for a few months and wanted to make sure it was seen\nYes, it's a duplicate of the https://github.com/DevExpress/testcafe-browser-provider-saucelabs/issues/21.\nI will close this issue.. Hi @Horsetoast \nThank you for your report. I've reproduced the problem.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @StanTheIV \nI've reproduced the issue. I need an additional time to investigate the reason of the problem.. Fixed in https://github.com/DevExpress/testcafe/commit/94c4d6c6d8f8e24741b7140c85b8afbc7c3ecde6. > Don't you think that something is not okay with this? Write an assertion just to wait...\nI agree with you that it is not clear. Sometime we see customer cases when custom waiting is necessary. In this case we suggest assertion or wait methods. I propose to create proposal for waitFor (predicate).. ping @VasilyStrelyaev . Yes, @josephj is right.\nYou should change your code as follows:\n``js\ntest.pagehttps://stackla-testing.s3.amazonaws.com/automation/prod/Slider.html`(\n  \"Test whether a slider widget gets loaded\",\n  async t => {\n    await t.switchToIframe('iframe');    \nconst container = Selector(\".container\").exists;\nawait t.expect(container).ok();\n\n}\n);\n```. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR @VasilyStrelyaev @AndreyBelym . FPR @VasilyStrelyaev @AndreyBelym. ping @VasilyStrelyaev . @testcafe-build-bot retest. Hi @biot023 \nChange your code as follows:\n```js\nimport { Selector } from 'testcafe';                             \nfixture Landing \n  .page http://localhost:3000 \n;                                                            \ntest('Landing on the homepage', async t => {               \n  const headerText = await Selector('.Header').textContent;\n  await t                                                  \n    .expect(headerText).eql('Disordered Personality')      \n  ;                                                        \n});                  \n``. I'm working on it. Need to do:\n*testcafeandtestcafe-hammerheadwill ship with 2 script versions: minified and non-minified.\nNaming conversion (same as forjquery,vuejs, etc.):hammerhead.js- non-minified scripthammerhead.min.js` - minified script\n\nadd --debug-mode option. Use non-minified version of scripts when this option will be specified.. One more issue - https://github.com/DevExpress/testcafe/pull/2547#discussion_r198110880. @VasilyStrelyaev Fix broken links . Hi @vvedachalam \n\nCould you please provide a full example on which I can reproduce the described above behavior?. I understood your proposal.\nIf selector is initialized with string then add selector value to an error message.\nFor another cases we will use a common message The specified selector does not match any elements in the DOM tree.. Ok, then I will remove from the changelog an information about #2216 . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. We already have a code that handles this case - https://github.com/DevExpress/testcafe/blob/master/src/api/request-hooks/request-logger.js#L31.\nProblem is in src/errors/stack-cleaning-hook.js. I'm working on this. For a command-line interface, other test runners such as mocha and ava don't store any state between test runs. TestCafe also will not do it. . Hi @berrutti \nThank you for the detailed description. I've reproduced the problem. . I'm working on this. Hi @berrutti \nThis problem is related to IE11. It takes a lot of RAM and CPU.\nThere is an issue - Restart browser if it became unresponsive - that should help to fix it. Track this issue to be aware about progress.. Hi @apiel \nCould you please provide an example of user-defined test action?. We already have issue for your scenario - https://github.com/DevExpress/testcafe/issues/1535.\nTrack this to be aware about progress.. FPR @AndreyBelym @VasilyStrelyaev . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR @churkin . Hi @vvedachalam\nYou should write the assertion method after expect action.\nRewrite your code as follows:\nawait testController\n.expect(signuppage.getEmailAddress().visible).ok()\n.expect(signuppage.getFirstName().visble).ok()\n.expect(signuppage.getLastName().visble).ok()\nAlso, we have an issue https://github.com/DevExpress/testcafe/issues/1063 that should help you prevent this unclear behavior. Track it to be aware of any progress there.. Dublicate of https://github.com/DevExpress/testcafe/issues/2551. Hi @kafeterio \nIt's a restriction of the current 'Event emulation' subsystem implementation. \nActually, we type via programmatic event creation.\nThe problem will be fixed once we implement Automations using browser-specific API.. We cannot reproduce the issue, but there is a workaround. So, I will close the issue.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot retest. FPR. > Could you please explain why you decided to not throw an error and emit a warning instead?\nThis case should not stop a test execution. So, it is not an error.. @testcafe-build-bot retest. FPR. Hi @salesgu \nThank you for your report.\nYour test page performs a cross-domain ajax request to the mocked url. The mocked url should pass a CORS validation. 222 is an internal status code that means request failed the CORS validation.\nYou should to modify your code as follows:\njs\nconst mock = RequestMock()\n    .onRequestTo('https://jsonplaceholder.typicode.com/posts/1')\n    .respond(null, 500, {'access-control-allow-origin': '*'});\nAlso I've added a clear warning message for this case - https://github.com/DevExpress/testcafe/commit/3cd7b7d61359a6200e8204534b1a3d25ba6c5435. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR @kirovboris . Causes of the The {userAgent} browser disconnected problem:\n testcafe and hammerhead code problems\n unexpected system dialogs (Allow multiple downloads, Choose color, Print and etc.)\n not enough memory\n  network problems (firewall misconfiguration, packet loss, etc.)\n absence of system components (some actions require an ICCCM/EWMH-compliant window manager on Linux)\n bad code on the tested page (Infinite loops, long synchronous XHRs). @testcafe-build-bot retest. Hi @kennychua \nThank you for your interest in TestCafe. At present, we don't have a final API design for this enhancement.  We will discuss about it and let you know about results.. Fixed in https://github.com/DevExpress/testcafe/pull/2779. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @willgarcia \nWhich version of the TestCafe do you use?. @willgarcia \nTry to use the latest TestCafe (0.21.1) version and let us know about your result.. Hi @andrzej-kodify\nTo collect request/response info, use a built-in RequestLogger class.\nIf RequestLogger doesn't have the required functionality, clarify your use case and we will try to help you.. @andrzej-kodify \nI've investigated the example and found the reason of the problem:\nonRequest and onResponse methods were called twice for a single request with 204 http status code. \nIt's a bug.\n. I'm working on this. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @arenddeboer \nThank you for your PR. We are happy to inform you that this problem has been already fixed. \nRequestLogger will throw errors for case that you fixed in this PR.. @arenddeboer \n\nEven though loggerReq exists and I hit this null object error.\nI run into this without having imported / created RequestLogger while clicking on a button which does an ajax call and updates the DOM.\n\nIt looks like an another problem. \n\nbut I might be able to provide a working example.\n\nIt would be great.. Fixed in https://github.com/DevExpress/testcafe/pull/2779. @raja1313 \nPlease specify the timeout option for the Selector of your button.\n```js\nconst button = Selector('you button selector', { timeout: 60000});\nawait t.click(button);\n```. Fixed in https://github.com/DevExpress/testcafe-hammerhead/commit/6ff79ed73b6efa4e3cb8dd76d7ddceb2ed09f862. Hi @markselby9 \nI've investigated the issue and found the cause of the problem.\nAs workaround, try to specify all CORS headers in lowercase.\njs\n.respond((req, res) => { // a custom response\n    res.headers[\"content-type\"] = \"application/json;charset=UTF-8\";\n    res.headers[\"access-control-allow-credentials\"] = 'true';\n    res.headers[\"access-control-allow-origin\"] = \"*\";\n    res.headers[\"access-control-allow-methods\"] = \"POST, GET, OPTIONS\";\n    res.headers[\"access-control-allow-headers\"] = \"X-Requested-With\";\n    res.headers[\"access-control-allow-headerx-frame-options\"] = \"SAMEORIGIN\";\n    res.statusCode = 200;\n. Also, note that res.setBody(value) accepts only string parameter at present (see documentation).\nI've create a suggestion  to support additional parameter types.. @markselby9 \nI cannot reproduce the problem using the code you provided (see example_i2681.zip).\nCould you please provide a small runnable example where the problem is reproduced?\n. @markselby9 \nThank you for your detailed investigation. You described two problems.\nOne of them was already fixed (https://github.com/DevExpress/testcafe-hammerhead/issues/1704).\nThe second problem will be fixed in the next development sprint.\n. @noamaankhan \nWe already have an issue for your use case: (https://github.com/DevExpress/testcafe-hammerhead/issues/1706).\n\u00a0\nThis feature is not in our Road Map. It means I cannot provide you with an estimated time frame for this feature. If this feature is very important to you, you can try to implement it yourself. We will provide you all the necessary information. . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. @testcafe-build-bot retest. @LavrovArtem FPR. @LavrovArtem \nSee the health monitor run for this site.. @bdwain \nWe have plans to release a new version this week. . Fixed in https://github.com/DevExpress/testcafe/pull/2708. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. @testcafe-build-bot retest. FPR. Hi @ricovitch \nThank you for the detailed description. I've reproduced the problem. . Hi @ricovitch \nIt is difficult to understand a cause of the problem without a direct access to the tested app.\nCould you please share a link to the tested app or provide a simple example to reproduce?\nIn this case, I can fix the problem very fast and provide you a build with fix ASAP.. > Basically, what i observe is that the RequestLogger instance 'requests' array does not allow to access a particular logged request by it's index if there are multiple logged requests.\nI don't observer this behavior.\nSee an example:\n```js\nimport { RequestLogger, Selector } from 'testcafe';\nconst DEMOS_PAGE_URL = 'https://www.devexpress.com/support/demos/';\nconst PAGE_URL       = 'https://www.devexpress.com/';\nconst logger = new RequestLogger(new RegExp(PAGE_URL));\nfixture Fixture\n    .page(PAGE_URL)\n    .requestHooks(logger);\ntest('test', async t => {\n    await t.expect(logger.contains(r => r.response.statusCode === 200 && r.request.url == PAGE_URL)).ok();\nconsole.log(logger.requests.length);\nconsole.log(logger.requests[logger.requests.length - 1]);\n\nconst demosLinkSelector = Selector('a').withAttribute('href', DEMOS_PAGE_URL);\n\nawait t.click(demosLinkSelector)\n    .expect(logger.contains(r => r.response.statusCode === 200 && r.request.url == DEMOS_PAGE_URL)).ok();\n\nconsole.log(logger.requests.length);\nconsole.log(logger.requests[logger.requests.length - 1]);\n\n});\n```\n\nSorry i can not give access to our apps/apis.\n\nCould you please provide us a simple example to reproduce.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @AndreyBelym FPR. Hi @sijosyn \nThank you for the detailed description. I've reproduced the problem. . Fixed in https://github.com/DevExpress/testcafe/pull/2743. Hi @Lupiano \nIn some scenarios IE11 take a lot of memory. If you perform a search in Google by the 'ie memory leak' phrase, you will find a lot of information about it.\nWe have a suggestion, whose implementation should fix the problem - Restart browser if it became unresponsive.\nVote for this suggestion and track it to be aware about of our progress with it.. Fixed in https://github.com/DevExpress/testcafe/pull/2743. @testcafe-build-bot retest. > Overall I think the test speed should be ignored in headless mode.\nThe test speed option works the same way for normal and headless browser. It's by design.\n\nBut it'd be even better to have testcafe's CLI or browsers' params to set the desired speed if the current execution is headless.\n\nYou can do it without an additional parameter. Set the 'test speed option' manually if you run browser in headless mode.\n```js\nconst createTestCafe = require('testcafe');\nlet testcafe         = null;\ncreateTestCafe('localhost', 1337, 1338)\n    .then(tc => {\n        testcafe     = tc;\n        const runner = testcafe.createRunner();\n    const isHeadlessMode = true;\n    const browser              = 'chrome';\n    const runOptions         = {};\n\n    if (isHeadlessMode) {\n       browser += ':headless';\n       runOptions = { speed: 0.5 };\n    }\n\n    return runner\n          .src('tests/test.js')\n          .browsers(browser)\n          .run(runOptions);\n})\n\n```. Fixed in https://github.com/DevExpress/testcafe/pull/2743. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Fixed in https://github.com/DevExpress/testcafe/pull/2743. Hi @mwhebert \nI will try to reproduce this behavior.. @marcusrc\nThank you for your work. At present, we have some problems with running our tests in mobile browsers.\nYou can continue your PR despite the red tests.. Hi @marcusrc \nWe've discussed your PR and decided not to include ctx and fixtureCtx in reportItem (see discussion in this issue for more detail).\nWe are thinking about an API that should cover your needs.. Hi @RD0916 \nCould you please describe the use case for which you need this option?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @okurichenko \nCommand docker run --network host -v $(pwd):/tests -i testcafe/testcafe \"firefox -S /tests/*.js\" \nruns TestCafe with only one parameter - \"firefox -S /tests/*.js\".\nTestCafe command line interface requires two parameters: <browser-list-comma-separated>, <file-or-glob ...>.\nThe error message ERROR No test file specified. tells that you did not specify the second command line argument.\nI've corrected your example:\njs\ndocker rmi -f testcafe/testcafe\ndocker run --network host -v $(pwd):/tests -i testcafe/testcafe firefox -S /tests/*.js\nSee more detail in the Using TestCafe Docker Image help topic.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR @AndreyBelym . Hi @eug48 \nThank you for your report. I've reproduced the problem.\nAlso, I've attached a simple example that demonstrates the problem.. The fix was published in testcafe@0.22.1-alpha.3. I'm working on this. @bdwain \nGoogle Chrome automatically updates on customer computers.\nIt means that the most customers have the latest Google Chrome version on their computers.\nThis is why, TestCafe supports only the latest version of Google Chrome.\nDuring TestCafe development, we test this tool only in modern browsers.\nIf you need support of outdated browsers, try to use the TestCafe versions that will be released when outdated browsers will be released.. You can use the older TestCafe versions with browserstack (0.17.0 and older).. Hi @dwightjack \nAt present, TestCafe does not support javascript files with type=module.\nI've created a separate issue in our proxy repository. Track this to be aware about progress.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @AndreyBelym FPR. I'm working on it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @nabond240 @link89\nThe fix was published in testcafe@0.23.0.. At present, you cannot include additional scripts during your test run. There is an issue for this - https://github.com/DevExpress/testcafe/issues/1739.\nIf your page included the JQuery library then use this code snippet:\ntest.js\n```js\nimport { Selector } from 'testcafe';\nimport { getScreenSize } from './screen_size.js';\nfixture Test Screen Size\n    .page http://devexpress.github.io/testcafe/example;\ntest('Test screen size', async t => {\n    console.log(await getScreenSize());\nawait t\n    .typeText('#developer-name', 'John Smith')\n    .click('#submit-button');\n\nconst articleHeader = await Selector('.result-content').find('h1');\n\n// Obtain the text of the article header\nlet headerText = await articleHeader.innerText;\n\n});\n```\nscreen_size.js\n```js\nimport { ClientFunction } from 'testcafe';\nexport async function getScreenSize() {\n    const fn = ClientFunction(() => {\n        return {\n            width: $(window).width(),\n            height: $(window).height()\n        };\n    });\nreturn fn();\n\n}\n``\n. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @VasilyStrelyaev you can do itself.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot retest. @testcafe-build-bot retest. @AndreyBelym FPR. @testcafe-build-bot retest. @testcafe-build-bot retest. ping @kirovboris @helen-dikareva . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. At present, you cannot use a standard 'Watch' window of the VS Code or Chrome DevTools to evaluate values ofSelectororClientFunction`.\nBut, there is a workaround.\nYou can write required expresssions before the debugger statement. Their values will be displayed in the 'Local' panel.\n\n. @AndreyBelym FPR. I will close the issue because no activity has been encountered for a long time.. @testcafe-build-bot retest. @testcafe-build-bot retest. Travis tasks are green. But comment is red. If the same situation will repeat then it needs to investigate.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Running tests in headless mode with --debug-on-fail or --debug-mode options will cause an unexpected pause of the tests execution. For customers, it looks like a hung up.\nIn this case, we need to show a clear message about it.. I'm working on this. Hi @stalniy \n\nIt's recommended to use spawn for long running processes instead of exec. So, if you ok with suggestion to replace exec with spawn I can create PR.\n\nI've created a separate issue for this - https://github.com/DevExpress/testcafe/issues/2857. \nYour PR is welcome. \n\nWhen I press CTRL+C my dev server process is not killed when testcafe is killed. It still occupies port and I need to kill -9 it manually\n\nI cannot reproduce the issue with Ubuntu 16.04 using the steps you detailed (node - 10.9.0, @vue/cli - 3.0.3.).\nCould you please share your project?\n. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @bdwain \nAt present, TestCafe doesnot collect all necessary debug information in development mode. We can determine the cause of problem only with a small example to reproduce or direct access to your web site. So, we are waiting for it.\n@robodude \nThere is a separate issue addressed to your https://github.com/DevExpress/testcafe/issues/2849#issuecomment-420385291\n. I will close the issue because no activity has been encountered for a long time.\nTry to run with the latest Testcafe version (0.22.1-alpha.3) and feel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. @AndreyBelym FPR. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I've tried to reproduce the problem with testcafe@0.22.1-alpha.3 and TestCafe works fine.\nTry to run tests with the latest TestCafe version (testcafe@0.22.1-alpha.3).\nIf the problem persists, please specify the Google Chrome version in which you run your tests.\n\n. Thank for your detailed report. I've reproduced the problem using TestCafe's device emulation.\njs\ntestcafe \"chrome:emulation:device=iphone x\" test.js. Hi @leofavre \nThank you for the completed example. I've reproduced the problem.. Hi @leofavre \nThank you for the completed example. I've reproduced the problem.. Hi @nabond240 \nI cannot reproduce the problem. \nIt looks like the https://www.youtube.com/user/CBSNewsOnline page has JavaScript errors. TestCafe handle these errors on the tested page and report about it.\nUse the --skip-js-errors option to ignore JavaScript error handling.. Hi @nabond240 \nI cannot reproduce the problem. \nIt looks like the https://www.youtube.com/user/CBSNewsOnline page has JavaScript errors. TestCafe handle these errors on the tested page and report about it.\nUse the --skip-js-errors option to ignore JavaScript error handling.. Hi @samuelsh \nIt's a restriction of the current 'Event emulation' subsystem implementation. \nActually, we click via programmatic event creation. Video player requires real user actions. \nIt confirms a warning in the browser console: Failed to exectute 'requestFullscreeen; on 'Element': API can only be initiated by a user gesture.\nThe problem will be fixed once we implement Automations using browser-specific API.. Hi @samuelsh \nIt's a restriction of the current 'Event emulation' subsystem implementation. \nActually, we click via programmatic event creation. Video player requires real user actions. \nIt confirms a warning in the browser console: Failed to exectute 'requestFullscreeen; on 'Element': API can only be initiated by a user gesture.\nThe problem will be fixed once we implement Automations using browser-specific API.. Unfortunately, I cannot reproduce the problem with testcafe@0.22.0. We need another example in which we can reproduce the problem.\n\n. Unfortunately, I cannot reproduce the problem with testcafe@0.22.0. We need another example in which we can reproduce the problem.\n\n. I don't know. I will check with macOS.. I don't know. I will check with macOS.. Hi @mixtur \nAt present, TestCafe does not support calling fetch with data urls. I've marked this issue as enhancement.. Hi @mixtur \nAt present, TestCafe does not support calling fetch with data urls. I've marked this issue as enhancement.. The fix was published in testcafe@0.22.1-alpha.3. The fix was published in testcafe@0.22.1-alpha.3. Hi @vigneshwar-v \nI am afraid this information is not sufficient to find the cause of the issue. Could you please provide a page or a small example so that we can reproduce it on our side?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @gregorycv \nCould you please provide a page or small example to reproduce?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. The fix for DevExpress/testcafe-hammerhead#1769 was published in testcafe@0.23.0. \nTry to run tests with this TestCafe version. If the problem persists, please, provide us a simple example in witch  we can reproduce the problem.. I will close the issue because no activity has been encountered for a long time.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. https://github.com/DevExpress/testcafe-hammerhead/issues/1849. The problem reproduces when the fixture directive is commented.\n``js\n// fixtureFixture`;\ntest('test', async t => {});\n```\nParser does not takes into account that directive is commented.\nNeed to fix for both test and fixture directives.. I've tried to reproduce the problem with the following test:\n``js\nfixtureFixture`\n    .page('http://example.com');\ntest('test', async t => {\n    await t.eval(() => location.reload(true));\n});\n```\nand it works fine.\nCould you please provide a small example to reproduce or direct access to the tested page?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. It's not a bug. TestCafe displays the version which useragent module retrieves from browser's navigator.useragent property.. You can use the filter option.. @testcafe-build-bot retest. I see the parameters are incorrectly used in your example.\nTry this command line:\njs\ntestcafe \"chrome --allow-insecure-localhost --allow-running-insecure-content\" e2e/tests/analyze/ --ssl key=~/.localhost-ssl/localhost.key;cert=~/.localhost-ssl/localhost.crt  --dev --hostname=localhost. Could you please provide a simple example that I can run on my computer?. Application sources, test code and certificates.. Ok. I am investigating the problem. Yes, it's a bug. We will fix it in the current development sprint.. The fix is already in PR.\n\nI would never have guessed that the right way to use the SSL params will be --ssl key=./certs/localhost.key;cert=./certs/localhost.crt\n\nWe have an example of using the --ssl option  and a help topic that describes the main concepts.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @bdwain \nWould you please provide a screenshot of the 'Network' panel of the Firefox DevTools and mark slow asserts on it?\n\n. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and or you have additional questions.. I am afraid this information is not sufficient to find the cause of the issue. Could you please provide a page or a small example so that we can reproduce it on our side?. I don't think that running your tests in a Vargant VM is the cause of the problem. Only the operation system and the list of the installed browsers can affect the work of the 'testcafe -b' command.\nWould you share your Vargant VM image?. I am glad to hear this. I've created a separate issue to improve the 'Unable to find the browser' message of the CLI interface.. > You can remove \"It usually happens when you run tests in Chromium.\" from the documentation, because it seems to affect Firefox as well.\nYes, you are right. It's not related to the Chromium browser.\n@VasilyStrelyaev remove the \"It usually happens when you run tests in Chromium.\" phrase from Using TestCafe Docker Image topic.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Links:\n* https://github.com/DevExpress/testcafe/issues/2406#issue-322994436. You need to specify the Request logger options as a second parameter.\njs\nconst options = { logResponseBody: true, logResponseHeaders: true, stringifyResponseBody: true };\nconst logger  = RequestLogger(/.*/, options);\nSee the Creating a logger help topic.\n. I am afraid this information is not sufficient to find the cause of the issue. Could you please provide a page or a small example so that we can reproduce it on our side?. As far as I understand, you are trying to navigate to a non-html page.\n@AndreyBelym provided the necessary information.\nSo, I will close this issue.\n\u00a0\nIf you have additional questions, please address them in separate issues.. I am afraid this information is not sufficient to find the cause of the issue. Could you please provide a page or a small example so that we can reproduce it on our side?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Fixed in https://github.com/DevExpress/testcafe/commit/fcacaa30323fafbf80a7d5a74d8da3bbdf2b2193. Fixed in https://github.com/DevExpress/testcafe/commit/fcacaa30323fafbf80a7d5a74d8da3bbdf2b2193. @testcafe-build-bot retest. Close in favor https://github.com/DevExpress/testcafe/pull/2987. Hi @bdwain \nA response consists of two parts: a body and headers. A pull request that allows modifying response headers is already in progress.\nDoes it suit your needs? Or, do need to modify a request body too?. We know a user case for which it's  necessary to change response headers (https://github.com/DevExpress/testcafe-hammerhead/issues/1657#issuecomment-427021262).\nWould please clarify a real use case for which you need to change the response body?. At present, we don't have plans to extend the Selector's features for a canvas element.\nThere is no common way to get component tree is drawing on canvas.\nHowever, you can try to implement this by using the Extending Selectors mechanism.\nThis mechanism is used by TestCafe React Selectors, TestCafe Angular Selectors and TestCafe Vue Selectors. . According to the documentation, you need to put the waitForAngular method into the beforeEach fixture hook. \nIf my suggestion doesn't fix the problem, please create a separate issue in the testcafe-angular-selectors repository and attach to it an Angular application with which I can reproduce the problem.. Hi @ljowen \nWe have an issue to use the browser specific automation API for Chrome and Firefox. Track this to be aware of our progress.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if you can provide an example to reproduce it.. Also, need to add an error message when you run docker-publish not in DockerToolbox environment.\nFor example, if you run docker publishing with a Windows CMD terminal then image publish will be hung.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @hdorgeval \nThanky for your note. publish-please is a development dependency. We will migrate to the latest publish-please module version.. \n. @testcafe-build-bot retest. @aha-oretama \nThank you for your contribution in TestCafe.. Unfortunately, without direct access to your website, it's difficult to understand the cause of the problem. Could you please set up access to your website or provide a small example in which we can reproduce the problem?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hi @szrharrison \nYour code uses an internal functionality. Could you please provide an example with a common way to access localStorage and sessionStorage?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Thank you for your inquiry. Please route your questions on StackOveflow where you will receive community support. Don't forget to set the testcafe tag when asking. We reserved this repo for bugs and feature requests: Contributing.\nYou may also find answers in our up-to-date documentation and answered questions.. > The page is very slow to load when run via TestCafe. \nWe will investigate it more deeply. I will notify you of our results later.\n\nThe CPU usage also goes 100% \n\nI cannot reproduce this behavior. On my machine I have CPU usage about 60 %. Google Chrome takes about 20%. It's a normal behavior because TestCafe emulates user actions very fast.\n\nTest scripts keep failing in Firefox (on Mac & Win) & Edge on Win\n\nI cannot reproduce it.\n\n\n\nAlso test execution fails in Chrome on Windows. Getting 'write ECONNABORTED' in a console (see screenshot below)\n\nThere is a separate issue for this - https://github.com/DevExpress/testcafe-hammerhead/issues/1744.\nWe will fix it during the current development sprint.. @sijosyn \n\nAlso test execution fails in Chrome on Windows. Getting 'write ECONNABORTED' in a console (see screenshot below)\n\nWe've fixed this problem in testcafe@0.23.1. Try to run your tests with this version and let us know if the other issues from your list above are reproduced. \n@lukastaegert \n\nA simple hello world test took 1m 19s where most of this time was spent navigating to the initial page.\n\nIt's a very strange. Could you please provide a simple example so that we will reproduce it on our side?. @testcafe-build-bot retest. Hi @madroneropaulo\nThank you for the detailed information. I've reproduced the problem.. I cannot reproduce the issue on the latest commit (https://github.com/DevExpress/testcafe/commit/437fbb4ce4a97425b4e6d74ccf8ed51546d526ec). @testcafe-build-bot retest. Fixed in testcafe@0.23.0-alpha.1.. @testcafe-build-bot retest. Thank you for your clarification. However, the information you provided is insufficient for us to determine the cause of the issue and find a precise solution. Feel free to reactivate this issue when you get a chance to provide us with an example where\u00a0we can see the issue in action and find a suitable solution, if any. . @testcafe-build-bot retest. Don't describe this. Now it's implemented as an internal feature.\n```js\nclass CustomRequestHook extends RequestHook {\n    _onConfigureResponse (event) {\n      super._onConfigureResponse(event);\n event.setHeader('x-frame-options', 'allow-from https://example.com/');\n event.removeHeader('x-header-name');\n}\n\n}\n```\nTo move this functionality into onResponse event need to make breaking change. We will plan this before testcafe@1.0.0. . Hi @ZeddEn\nWe've fixed this problem in the testcafe@0.23.1 version.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. After discussion, we decide to implement the following concepts:\n .testcaferc.json is a name of the configuration file.\n <browser_name> and <sources> parameters become optional.  I.e. it's a possible to run TestCafe with testcafe command.\n configuration file are searched in the current directory (process.cwd()). If it exists then TestCafe reads the options from it.\n if user-defined options merge with options from the configuration file then TestCafe shows the inform message 'The values for  from the configuration file will be ignored'.\n BREAKING CHANGES: at present, it's forbidden to use multiple calls for src, browsers and reporter methods (see code exampe). Instead of this, pass an array of the arguments to the appropriate method.\n Programmatic .reporter method supports the path to saved report as a second parameter \njs\n  return runner\n      .reporter('json', '/reports/report.json')\n* Configuration file uses a command line naming convention\n```js\n.testcaferc.json\n{\n             'hostname': '123.456.789',\n             'port1':    1234,\n             'port2':    5678,\n             'src':      'path1/folder',\n             'ssl':      {\n                 'key':                keyFile.name,\n                 'rejectUnauthorized': 'true'\n             },\n             'browsers':    'ie',\n             'concurrency': 0.5,\n             'filter':      {\n                 'fixture':     'testFixture',\n                 'test':        'some test',\n                 'fixtureGrep': '^Unstable'\n             },\n             'reporter': 'json'\n         }\n```. Implemented in https://github.com/DevExpress/testcafe/pull/3147. @testcafe-build-bot retest. @kirovboris @AndreyBelym FPR. @testcafe-build-bot retest. @kirovboris @AndreyBelym Review please.\nTests are red due to BrowserStack problems. The fix is in progress in the another PR.. @testcafe-build-bot retest. FPR. ping @kirovboris . FPR. @sophiecdd @andrzej-kodify\nI've tried to run simple test code:\n``js\nimport { ClientFunction } from 'testcafe';\nfixtureFixture`\n    .page('https://example.com');\ntest('test', async t => {\n    const getLocation = ClientFunction(() => window.location);\nconsole.log(await getLocation());\n\n});\n```\nand found a problem in our code - https://github.com/DevExpress/testcafe-hammerhead/issues/1866. But, it's not related to the issue you described.\nThe problem is likely related to your website and I need an example showing this issue to find its cause.\nFeel free to reopen this issue if you can provide such an example.. I've reproduced the problem with testcafe@0.23.3-alpha.4.. Hi @sebpalluel \nThank you for providing the additional details.\nDue to security reasons, it's impossible to get a full path of the uploaded file.\nAfter you selected a file using a native browser's 'Select File' dialog, the value attribute of the target input will contain a filename with this prefix: C:\\fakepath\\.\nAs a browser passes only filenames during the file upload, there is no way to implement your suggestion.\nTestCafe emulates the native browser behavior and stores uploaded files in the <UPLOAD_ROOT> folder using their names.\nSee these links for detailed information:\n https://html.spec.whatwg.org/multipage/forms.html#fakepath-srsly\n https://developer.mozilla.org/ru/docs/Web/HTML/Element/Input/file#Value. @jwineman \nAs you can see in the report, TestCafe cannot capture a stack trace of the occurred error. \nTherefore, it's difficult to provide any future debug instructions.\nThe problem is likely related to your website and I need an example showing this issue to find its cause.\nFeel free to reopen this issue if you can provide such an example.\n. I would need to understand the cause of the problem to give you further instructions.\nUnfortunately, I can't find it quickly and require additional time to investigate the issue.\nOnce I find the cause, I'll let you know.. Hi @BigYu\nWe've already encountered similar behavior. In this case, you need to specify the --no-sandbox flag for the Google Chrome browser.\nTake a look at this example:\njs\ntestcafe 'chrome --start-fullscreen --no-sandbox' Spec/index.js\n. Hi @shyedhu\nI see that you mount the testcafe_sample_repo-master/test folder as a root test directory, but your page model classes are located in the sibling folder. All resources (utilites, page models, etc.) necessary for running tests should be in the mounted folder.\nTo fix the problem, move your page folder to the test folder or change the test run command as follows:\njs\ndocker run -v /testcafe_sample_repo-master:/project -it testcafe/testcafe 'chromium:headless --no-sandbox' /project/test/case1/sampleTest.js. If I run your example on my computer, I get the following report:\n\nIt means that I need all dependent files to reproduce the problem.\nIf you test an internal application, I would need a simple copy of your application.\nIt's easy to organize this example as a repository on GitHub.\nFeel free to reopen this issue if you are able to provide us with such a sample.\n. Hi @sorin-davidoi \nThe docker image (node:8-slim) you are using doesn't contain the ps utility.\nThis is why, the getProcessOutputUnix function will fail.\nSee the problematic code line:\n https://github.com/DevExpress/testcafe/blob/41525a9dcb1ddda7582119c2179aa84d02b51897/src/utils/process.js#L17.\nTo fix the error, you need to install it by running this command: apt-get install procps.. Hi @rpolishetti\nThe behavior you described looks like a bug. However, I cannot find the cause of the problem without a small example. Also, specify the TestCafe version you are using.\nSo, could you please run your tests with the latest TestCafe version (testcafe@0.23.3-alpha.2)?\nIf the problem persists, provide us with a small example in which we can reproduce this issue.. Duplicate of the https://github.com/DevExpress/testcafe/issues/3189. Debug mode doesn't work too.. https://github.com/DevExpress/testcafe/issues/1991. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. FPR. @kirovboris @AndreyBelym FPR. Hi @nickroth \nThank you for your suggestion. TestCafe should automatically restart the browser when the latter starts to slow down. It's a core feature and we have plans to improve this behavior.\nTrack this issue to be notified of progress. . Hi @raDiesle \nAt present, TestCafe doesn't reset/restore indexedDB databases when roles are switched.\nThere is a feature request for your case - https://github.com/DevExpress/testcafe/issues/2420.\nTrack https://github.com/DevExpress/testcafe/issues/2420 to be notified of our progress.. Hi @link89 \n\u00a0\nTestCafe has several built-in mechanisms which control the web page state.\n The Roles feature manages the localStorage and sessionStorage states.\n The Disable page reloads feature allows you to\ncontrol test page reloading during test execution.\n* Test and fixture hook allows you to perform initialization and clean up actions for your tests (this feature covers your use case with database state sharing). \n\u00a0\nImplementation of the API you described makes sense if there are a lot of other use cases which the current TestCafe API doesn't cover. Could you please elaborate on such use cases? . Thank you for the detailed explanation. I've marked this issue as a suggestion.. @testcafe-build-bot retest. FPR. @VasilyStrelyaev \n\nCan we rename it to fileName or file in the config and leave it as outStream in JS API?\n\nI will do it in a separate PR.\n. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. After discussing this issue with @kirovboris , we decided to interpret it as an enhancement.. Hi @StrangeKarma \nAt first glance, the problem is related to the folder mounted to the docker image.\nIf you are using the Docker Toolbox, note that Docker containers can only access the C:\\Users directory by default. If you need to run tests from other directories, share these directories as described in the Docker documentation.. Ok. I need more time to investigate the problem in detail.. Your environment is too complex. It takes a lot of time to setup it on my machine.\nThe problem can be related to wrong docker setup, communication with Rancher or issues with the 'selenium:chrome' browser's provider, or something else.\nWould you please create a simple example to reproduce which I can run on my machine?. Hi @aboe026\nYou mentioned that your tests works fine locally and fails with the docker image. This means that performance of your application so considerably degraded when it was run with the docker image that this broke some TestCafe mechanisms. \nTry to use the --shm-size docker option (see Testing Heavy Websites) and make sure you are using the latest TestCafe version.\n\nIf it does not help you, we will need an example which we can run on our side.\nYour application is rather complex and it's difficult to understand the cause of the problem without direct access to it. . I am happy to hear this. Unfortunately, it's difficult to find the cause of the problem without a small example to reproduce which I can run on my machine. Feel free to reopen this ticket if you can provide such an example.. I didn't get any notifications regarding it. Please give me a direct link to the repository.. Thank you for the provided example. I need additional time to investigate the problem.. @testcafe-build-bot retest. TestCafe allows you to test your application in various browsers.\nSee more detail in the following help topics:\n Testing with locally installed browsers\n Testing using Chrome device emulation\n* Testing via browser-provide plugins\nWe tested TestCafe in many browsers (desktop and mobile) using Saucelabs and BrowserStack provides.\nIn the future, please ask your question on StackOverflow.\nStackOverflow is an amazing platform for users to ask and answer questions: the community will see and answer your question there.\nWe try to keep GitHub issues tracker for bugs and feature requests only (see also: Contributing). If you find a bug, feel free to open a new issue, but please make sure to follow the bug template. Thank you in advance.. Hi @djbreen7\nThe problem was fixed in testcafe@1.0.0-alpha.2.. Hi @Lupiano \nTry to run your tests using the latest TestCafe version - testcafe@1.0.0-alpha.3.\nIt the problem still persists, then we need more information about your environment to find the cause of the problem.\nCould you please\n run your tests with the latest TestCafe version and send us the stack trace of the unhanded rejection error described above (TestCafe will show the whole stack trace, not only an error message)\n specify your operating system and version and also the current locale name on your computer .. @Lupiano \nThank you for the provided stack trace. We checked our code that changed the console encoding.\nAt present, the algorithm is the following: testcafe-browser-tools change the console encoding to utf8 to find the browser's installation path. After that, the original encoding will be restored.\nThis encoding manipulation occurred before test execution. So, we don't have any ideas on how it can affect the reporter output. \n\u00a0\nLet's try the following experiment.\nRun this script with the node run-test.js command. \n\u00a0\nrun-test.js\n```js\nconst cp = require('child_process');\nconst createTestCafe=require('testcafe'); \n\u00a0\n(async () => {\n\u00a0\u00a0\u00a0 const tc = await createTestCafe(); \u00a0\u00a0\u00a0 \nconsole.log(String(cp.execSync(`chcp`)));\n\nawait tc\n\n.createRunner()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .src('test.js')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .browsers('chrome')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .run(); \u00a0\u00a0\u00a0 await tc.close();\n})();\ntest.jsjs\nfixture1; \ntest(1, t => console.log(String(require('child_process').execSync('chcp'))))\nThen, please send us the whole console output. \n. Hi @presha1 \n\u00a0\nThank you for bringing this to our attention. As I see, our documentation is correct because\u00a0JavaScript allows you to use two notations for property accessing:js\nobject.property\nobject[\"property\"]\n`` \nSo, these calls are equal and valid:testMeta.mobileandtestMeta['mobile']as well asfixtureMeta.envandfixtureMeta['env']. \n\u00a0\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors#Syntax. @testcafe-build-bot retest. Your example contains two TestCafe launches. Sometimes the second launch starts before the first one completely ends. This causes the temporary folder to be cleaned in the wrong way.\nAs a workaround, you can add a small timeout between runs.\n. TestCafe uses own TypeScript configuration for test compilation. There is an enhancement for allowing to specify custom typescript compilation options - https://github.com/DevExpress/testcafe/issues/1845. Please track this issue to be aware of our progress.\n\u00a0\nThere is one more workaround: you can add the// @ts-ignorecomment for all rows that produce the error.. Could you please clarify why you want to upgrade the TypeScript version to 3.x?. OK, I understand you. I will mark this issue as a suggestion -Upgrage embedded TypeScript version to 3.x`.. Hi @eric-burel \nThe problem is related to the relative url in your Role definition.\nTo fix it, use an absolute url.\nI will mark the issue as a suggestion - Support relative urls in Roles.. Thank you for your suggestion. We will research it and consider implementing it in the future. . @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. @kirovboris FPR. @eMTe123\n@Farfurix  marked this issue as a duplicate of #1920. Track this issue to be notified about our progress.\nIf this problem is not related to the one from #1920 please consider creating a new issue with a complete example to reproduce.. Yes, we got all necessary information. We deal with this problem. We will inform you when we have any news.. Hi @Muthuvenaktesh\nInitially, we don't think about the described case, so we will interpret this issue as an enhancement of our reporting system.. @testcafe-build-bot retest. @VasilyStrelyaev FPR. We've received the credentials. However, the 'Invalid username or password.' error message is displayed when I logged in.\nPlease check them or resend the new credentials to us.. @Zebirdman \nThe issue is related to the docker image setup. It's not related to the TestCafe. If you can isolate the problem and it requires to make changes in the official TestCafe docker image or improve the Docker documentation help topic - feel free to reopen issue and provide us more detail about it.. Hi @palpatine1991 \nThank you for your suggestion.\nIn the future, we will consider ways to improve displaying browsers in which tests are executed.\nNow, we display the user agent, but in my opinion the browser alias is more readable. . Hi @viveleroi \nTry to use the PreserveUrl option.\n. Did PreserveUrl option help you?. OK, I understand. According to your description, it's difficult to determine the cause of the problem. It can be a known issue - https://github.com/DevExpress/testcafe/issues/2195 or something else.\nIn general, I need to look at your application and tests to say something definite.\nIf you can provide us with a simple example to reproduce the issue, please feel free to reopen the issue.. Thank you for the detailed description. I've reproduce the problem.. Hi @doomleika \nIn your case, you need to add the --no-sandbox flag to Chromium.\njs\ndocker run -v `pwd`:/tests testcafe/testcafe 'chromium --no-sandbox' /tests/dummy.js\n\nFor more details, see the Using TestCafe Docker image help topic.. Hi @walidanwar75 \nTestCafe uses different ways to run browsers. TestCafe starts Google Chrome and Firefox browsers using debug protocols (Chrome Debug Protocol and Marionette) and spawn a new process with specified parameters for other browsers. Start to debug the browser starting mechanism here.\n\u00a0\nHowever, it's too complex. If you can provide us with a simple example, we can try to run TestCafe for websites with 'Single Sign On' and answer all your questions.\n. Hi @andres-kovalev \nThank you for the detailed description. I've reproduced the problem.\nFor TestCafe Team\nThe focus event does not raise for label component when TestCafe clicks on this.\nindex.html\n```js\n\n\n\n            label { background: red; }\n            label:focus {background: green;outline: 0}\n        \n\n\n\n... \n\n\n",
    "testcafe-build-bot": ":x: Tests for the commit 1d7832122a88d59c5528e10d85d438ba05b64015 have failed. See details.\n. :white_check_mark: Tests for the commit 1d7832122a88d59c5528e10d85d438ba05b64015 have passed. See details.\n. :x: Tests for the commit 9e9a695373aad7563cf9b5d2c1ec0ebdcf0c4563 have failed. See details.\n. :x: Tests for the commit efa5a319046912abd7d384d2c302791d3cad8ed1 have failed. See details.\n. :white_check_mark: Tests for the commit d97d6d5183ad2bad09882418d0ea66c5f13a4f2f have passed. See details.\n. :x: Tests for the commit 5de063c43b672f1c710318b766d6d077cd7dec47 have failed. See details.\n. :white_check_mark: Tests for the commit 1857c76e3ac1792c21562ce4865dc68184615116 have passed. See details.\n. :white_check_mark: Tests for the commit f7a4b735113c0e062878ea81265e5be31dfc7c15 have passed. See details.\n. :white_check_mark: Tests for the commit 40218b6c6e9fdeb77e35f767890f2db8b9a18ad4 have passed. See details.\n. :white_check_mark: Tests for the commit 409ebf1bff8d452caadd64c6dde2e4a2f37f4ba2 have passed. See details.\n. :x: Tests for the commit 0bde16aadeeeef05094d39be445109da7d0111aa have failed. See details.\n. :x: Tests for the commit 7ed82f499a04def79523b49e309409a6927e0eb7 have failed. See details.\n. :white_check_mark: Tests for the commit 2344d06d2ec40764d20dbb96bb08bd6dedff74e5 have passed. See details.\n. :white_check_mark: Tests for the commit 3201606bfc7a84f5c4c6723b854d39fadd9b4eb7 have passed. See details.\n. :white_check_mark: Tests for the commit 70bfb89ffede41def665518ae75d1a968dcd4423 have passed. See details.\n. :white_check_mark: Tests for the commit edfc038cbd06c013f3cb4cb69c2f1593fadbe461 have passed. See details.\n. :white_check_mark: Tests for the commit 24f1f3b6472fdabf6905c0c8d6ef86bcb233d856 have passed. See details.\n. :white_check_mark: Tests for the commit 37c3dd3ca8b19c52bc9edc01fa3cde027b658192 have passed. See details.\n. :x: Tests for the commit cb0cae6dde3ec7685e2e2528a5ec591d0dc45c57 have failed. See details.\n. :white_check_mark: Tests for the commit 03028994c2d97cce9af9c59e716ff0d54bfc4211 have passed. See details.\n. :x: Tests for the commit f4231d8a27bb0f2866b4aa522b1e3a03596e1d90 have failed. See details.\n. :white_check_mark: Tests for the commit 36226613f4db2af4a1b0ecee78f912285f996774 have passed. See details.\n. :white_check_mark: Tests for the commit 3520ca307cde5fd4a22c2a2b5001de699f1a4926 have passed. See details.\n. :white_check_mark: Tests for the commit a2242df6399dd6ce0e8519c41309dba883a32107 have passed. See details.\n. :white_check_mark: Tests for the commit db65e154d59df5ce8fe378126bc57782143e11b4 have passed. See details.\n. :x: Tests for the commit e420d18b0ba25a3b0774a292edb32ddbdee60aa9 have failed. See details.\n. :white_check_mark: Tests for the commit e420d18b0ba25a3b0774a292edb32ddbdee60aa9 have passed. See details.\n. :white_check_mark: Tests for the commit 2976756b219ed7b6bd7556e8e44582bbe2b04e2f have passed. See details.\n. :white_check_mark: Tests for the commit ef012950e1120a3173fc4427c7f4206fe71bd0ee have passed. See details.\n. :x: Tests for the commit 6c9054e6e361dae44363ac51d032a780a14f134f have failed. See details.\n. :white_check_mark: Tests for the commit 6c9054e6e361dae44363ac51d032a780a14f134f have passed. See details.\n. :white_check_mark: Tests for the commit 4164f69710cdc7f90abf3361ffc5411423b88bc2 have passed. See details.\n. :x: Tests for the commit 2e896886dd2fe153070d7571a3b4789db03b99fd have failed. See details.\n. :x: Tests for the commit 8a838c66cc09b55b10ce70921d12594db58853d2 have failed. See details.\n. :white_check_mark: Tests for the commit cf67d5508881f52ce5a9c01824564ae23de4556c have passed. See details.\n. :white_check_mark: Tests for the commit a696ea4e07beb516beefbbb95ba9cc4eec197881 have passed. See details.\n. :x: Tests for the commit ca708d3f6eb2a70e77257fb86a5a9c9af5d43f74 have failed. See details.\n. :white_check_mark: Tests for the commit ca708d3f6eb2a70e77257fb86a5a9c9af5d43f74 have passed. See details.\n. :white_check_mark: Tests for the commit 9d3f6eb1a77030264d41cf20b4c0066bf82f519a have passed. See details.\n. :white_check_mark: Tests for the commit c804a48bc6189104fff3ff23bab58b9945252eba have passed. See details.\n. :white_check_mark: Tests for the commit 1c7704fadb4907890a94c75560a013c1c0b0a2cb have passed. See details.\n. :x: Tests for the commit f7a72138acc36fee65ecc5eab18e73969528d516 have failed. See details.\n. :white_check_mark: Tests for the commit 7614dbda8549c03108664a3962a4aa12e8f81086 have passed. See details.\n. :white_check_mark: Tests for the commit 7f3228e84be6ff64a1233605e14c077727df4ab3 have passed. See details.\n. :white_check_mark: Tests for the commit b0108e14a77973193c795a85a56b733a3253d740 have passed. See details.\n. :white_check_mark: Tests for the commit bee81e72c85f9a4e270c2558a9ed8f49305c67da have passed. See details.\n. :white_check_mark: Tests for the commit 1768a35858444e843eee5a24b062f4fcfb3c666c have passed. See details.\n. :white_check_mark: Tests for the commit d81f15fac81b5c55c887d4ed6162bf37fd1aaba2 have passed. See details.\n. :white_check_mark: Tests for the commit 933ae6f4b1ac490312988a2dfa8d0fea4d7b0a46 have passed. See details.\n. :white_check_mark: Tests for the commit 937b98f102e4f1fb50fd2b3e3b7a9bce3e764687 have passed. See details.\n. :white_check_mark: Tests for the commit 921b3a291768ae91343fc6ecc958cdcc419af481 have passed. See details.\n. :x: Tests for the commit 7713633a6de0e10a96be70a404d29a296346d701 have failed. See details.\n. :x: Tests for the commit a36ec551dca5b715d226e0b9886f533b965f690a have failed. See details.\n. :white_check_mark: Tests for the commit 0a439107853813e1ab9102b7a50cb3209933a76c have passed. See details.\n. :x: Tests for the commit 9a7835bf53db760b12425654ce228d3a53828194 have failed. See details.\n. :x: Tests for the commit c682186b6d97b8f3e46f2d0b846137de22c78a75 have failed. See details.\n. :x: Tests for the commit fdf7b568f6b817b1bbc2dfed21449b3d6ad7f0ad have failed. See details.\n. :white_check_mark: Tests for the commit 8033254d64fc9f8ebe78fd309b01ae68f142921b have passed. See details.\n. :white_check_mark: Tests for the commit 41a4faca0d1caee22fb50042fd0d08d4c99c7e7e have passed. See details.\n. :white_check_mark: Tests for the commit a6513ec23754877be00dc37f5875d94b59c1bd38 have passed. See details.\n. :x: Tests for the commit 8cb7a1c97f1dce494901709970798b971d76f131 have failed. See details.\n. :white_check_mark: Tests for the commit e3c1ae338a5be780ac068baef9e77a67dc621800 have passed. See details.\n. :x: Tests for the commit 633d76eabb03d7aefd088509ce722170f25222f1 have failed. See details.\n. :x: Tests for the commit b75e2ff337b04550a19c1d45e4cac851aee5b57c have failed. See details.\n. :white_check_mark: Tests for the commit 5c56059f25379de2e1795d8d2b5ed08049491b1f have passed. See details.\n. :white_check_mark: Tests for the commit 72b9a11d45312d3b610150191d11ddb3df87caed have passed. See details.\n. :x: Tests for the commit 897c3cf9d9836ddacae1c5929ae2956384753896 have failed. See details.\n. :white_check_mark: Tests for the commit 7ef13c28296c17faea68439df298a95bd5ef6ede have passed. See details.\n. :white_check_mark: Tests for the commit 9839d11031dbaa94a805c74ed6546b97823ebdd6 have passed. See details.\n. :white_check_mark: Tests for the commit 8a697689ae7cedd2fc633db5f57626a8f90ce40a have passed. See details.\n. :white_check_mark: Tests for the commit fce08bbcf9135d029c6a50e7e58819d89e44185c have passed. See details.\n. :white_check_mark: Tests for the commit 4ed51019a0b70c5345a57996469c10401ab9c825 have passed. See details.\n. :white_check_mark: Tests for the commit 9df55501d747aae212501d268aa0139cff6cc6f7 have passed. See details.\n. :x: Tests for the commit 086b871a9b2885f181d6951c1774af42e8af019c have failed. See details.\n. :white_check_mark: Tests for the commit 086b871a9b2885f181d6951c1774af42e8af019c have passed. See details.\n. :x: Tests for the commit 1901cc05e4cc1c7543847cf8f902f7fd35f19722 have failed. See details.\n. :white_check_mark: Tests for the commit a5eb7c0f554c3085d8bb8a4fb690d5a11398e227 have passed. See details.\n. :white_check_mark: Tests for the commit 81ab598a58842ae2d4990838bf0316ceda19bf00 have passed. See details.\n. :x: Tests for the commit b0723b88d2aad37466137411706774c98ad9042a have failed. See details.\n. :white_check_mark: Tests for the commit b0723b88d2aad37466137411706774c98ad9042a have passed. See details.\n. :white_check_mark: Tests for the commit cac36b1f47af3d7b53c484f82ffe847421605ad1 have passed. See details.\n. :white_check_mark: Tests for the commit 0e73fc0397f244f0b921b2a54a6647836f62228e have passed. See details.\n. :x: Tests for the commit efbef49f13f8b706a3a9de64ee486d0ffab31553 have failed. See details.\n. :white_check_mark: Tests for the commit efbef49f13f8b706a3a9de64ee486d0ffab31553 have passed. See details.\n. :white_check_mark: Tests for the commit d818dfd65beacb3fdb278f16550844115ec0e311 have passed. See details.\n. :white_check_mark: Tests for the commit 8e76a2178474b9462a30194d699b61a75f4d0e57 have passed. See details.\n. :white_check_mark: Tests for the commit 8e76a2178474b9462a30194d699b61a75f4d0e57 have passed. See details.\n. :x: Tests for the commit 7a9bfd3cae99151e457bb8dbe5965717ce2beaa1 have failed. See details.\n. :white_check_mark: Tests for the commit 917d788159845748b544b8a8ace9023795aee8cb have passed. See details.\n. :x: Tests for the commit ae06d263a85441d2483e71ba7ceb51233130902f have failed. See details.\n. :white_check_mark: Tests for the commit ae06d263a85441d2483e71ba7ceb51233130902f have passed. See details.\n. :white_check_mark: Tests for the commit 364e77a3694c511abbeb99c8e180ef4326604069 have passed. See details.\n. :white_check_mark: Tests for the commit 96b385f54cd0981abf3f24510a66bb0dc172cdee have passed. See details.\n. :white_check_mark: Tests for the commit b4e37c55f8fcca0b91b2af95f5c7aba198da3cbd have passed. See details.\n. :x: Tests for the commit 6eec0ca68576ad31b105a772a0bdb57159c15392 have failed. See details.\n. :white_check_mark: Tests for the commit ab8cd3ba24ae63f2c9abbbac92896c0f7a4aa52a have passed. See details.\n. :white_check_mark: Tests for the commit 62347b5ed90f5aa6a13be089f56e16dbf8f8be31 have passed. See details.\n. :white_check_mark: Tests for the commit 2eca3877f641e37030c9a7e777b1f9e9b21bba12 have passed. See details.\n. :white_check_mark: Tests for the commit 0c352adfc4692975003b2e625b383db329566c98 have passed. See details.\n. :white_check_mark: Tests for the commit 2d0c713aa335acc82b51803f1419e66e421c437e have passed. See details.\n. :x: Tests for the commit 3478fab4480c857fe65d3b8652e8eea5da85d330 have failed. See details.\n. :x: Tests for the commit 3478fab4480c857fe65d3b8652e8eea5da85d330 have failed. See details.\n. :white_check_mark: Tests for the commit 985afd4d7c0d8478a384aeff5787126f55a96209 have passed. See details.\n. :white_check_mark: Tests for the commit 46e3f11f545764a32116e8f35de1b58e9c37b474 have passed. See details.\n. :white_check_mark: Tests for the commit 9b6d5b344ec37f3d8a9cb5639e6d9d4a6fadcf88 have passed. See details.\n. :white_check_mark: Tests for the commit a4e1570446c46779be6d557247f2f6afdba1582a have passed. See details.\n. :white_check_mark: Tests for the commit 1dfa578ce48fca4de74402f4da987c72f208bd43 have passed. See details.\n. :x: Tests for the commit 7f1a76c5954e55cb6656daeeea46738cbf04ffcb have failed. See details.\n. :white_check_mark: Tests for the commit 7f1a76c5954e55cb6656daeeea46738cbf04ffcb have passed. See details.\n. :white_check_mark: Tests for the commit 1761a81a7c7d57309705e7709246e487de947163 have passed. See details.\n. :white_check_mark: Tests for the commit 65b65acfbb8660ef598402e00146cd031dc85117 have passed. See details.\n. :white_check_mark: Tests for the commit d829e328597d97c5189a09e5af0d709fc13f5c9e have passed. See details.\n. :white_check_mark: Tests for the commit 28fc0ed7264e10db82c3df5393c24e0607437a83 have passed. See details.\n. :white_check_mark: Tests for the commit 68bf57d8173482d59d092829eb2bc1b54a007310 have passed. See details.\n. :white_check_mark: Tests for the commit 2852cf3434c2fcc54c189179df84863bfc45d527 have passed. See details.\n. :x: Tests for the commit aa192b83c2eafacdddc6f3a782942670f6c855c3 have failed. See details.\n. :white_check_mark: Tests for the commit 5745a900db1d7688bd5a4dc3b0099a0b8e512dd2 have passed. See details.\n. :white_check_mark: Tests for the commit 90d3ad030a5d692680df3dbfb8096f5af1b624aa have passed. See details.\n. :white_check_mark: Tests for the commit 6b770005b829129d8bb34a7e88dd3bf36ab0067d have passed. See details.\n. :x: Tests for the commit 19b582fcb5bab06b7e2b684d0ba7edf1decbf67f have failed. See details.\n. :white_check_mark: Tests for the commit 19b582fcb5bab06b7e2b684d0ba7edf1decbf67f have passed. See details.\n. :white_check_mark: Tests for the commit 6118df2f16fc3e178ea014f3a8580b22e8cf3f7c have passed. See details.\n. :x: Tests for the commit 1a86843bc0bc29ecc4c253b35325ef20be9d8f82 have failed. See details.\n. :white_check_mark: Tests for the commit 3affc591b46b80df873f802bacc0d6143eb1f33c have passed. See details.\n. :white_check_mark: Tests for the commit a7e7a6af0ea19059f8c925107d8263f9262c97f3 have passed. See details.\n. :x: Tests for the commit d7c4436185c227ac10d9e648b584da6506431e39 have failed. See details.\n. :x: Tests for the commit d7c4436185c227ac10d9e648b584da6506431e39 have failed. See details.\n. :x: Tests for the commit d7c4436185c227ac10d9e648b584da6506431e39 have failed. See details.\n. :white_check_mark: Tests for the commit 3f255c81ee7bb7992257dce7e782e6f8ac131e77 have passed. See details.\n. :white_check_mark: Tests for the commit 218b03f816be81206f80f11b0ed1082edc664f65 have passed. See details.\n. :x: Tests for the commit 95a22d3c3a145ecd7c2dce75167880f825fe94f5 have failed. See details.\n. :x: Tests for the commit 1c99a339a4aea514090c07bb3bcd8aa3c31686be have failed. See details.\n. :x: Tests for the commit 2286887ef9f283b8288c0581b98bb97864710697 have failed. See details.\n. :x: Tests for the commit 2286887ef9f283b8288c0581b98bb97864710697 have failed. See details.\n. :white_check_mark: Tests for the commit 595b0bfe52c4766d483bc747499c7f5499bc8ad6 have passed. See details.\n. :white_check_mark: Tests for the commit f7560356e870196f203489319e1aaac8e8235042 have passed. See details.\n. :white_check_mark: Tests for the commit a4d6cae60af7dcbc8b81d335da1201cc5e603843 have passed. See details.\n. :white_check_mark: Tests for the commit e3fe9be41d53fe046438fdd0b0035152c59ba95d have passed. See details.\n. :white_check_mark: Tests for the commit bc39bf5a3d30aceedca420206ca212b387a82578 have passed. See details.\n. :x: Tests for the commit 2794b526e5f8be18303af1fef12df80b61653734 have failed. See details.\n. :white_check_mark: Tests for the commit 2794b526e5f8be18303af1fef12df80b61653734 have passed. See details.\n. :x: Tests for the commit 62ddc49382853eee6a691a6bd24aad582703dc89 have failed. See details.\n. :x: Tests for the commit 62ddc49382853eee6a691a6bd24aad582703dc89 have failed. See details.\n. :x: Tests for the commit 62ddc49382853eee6a691a6bd24aad582703dc89 have failed. See details.\n. :x: Tests for the commit 62ddc49382853eee6a691a6bd24aad582703dc89 have failed. See details.\n. :white_check_mark: Tests for the commit 62ddc49382853eee6a691a6bd24aad582703dc89 have passed. See details.\n. :x: Tests for the commit 1e82cf0670a760219014ae31f223d8c9b28b8d43 have failed. See details.\n. :white_check_mark: Tests for the commit f1a40e031f15f39fb2c9eda4596acb2ceffb4a45 have passed. See details.\n. :white_check_mark: Tests for the commit e9731f95ee1e6f5c785659d7e6b021c6062d4805 have passed. See details.\n. :white_check_mark: Tests for the commit fe2da33079a477f8ea03bc9966612e572a3a4d69 have passed. See details.\n. :white_check_mark: Tests for the commit b0cf5fef89b1701b8011a50db1756ed065a2317e have passed. See details.\n. :white_check_mark: Tests for the commit a69517256ccd3b0c5e7c308b824b848ffb8bcd93 have passed. See details.\n. :white_check_mark: Tests for the commit ca7ca9cb3842f3a1c96b120e3ce435cb97260171 have passed. See details.\n. :white_check_mark: Tests for the commit 9ba7af03b9f75e83aa4b59bd8ac417af90525dcf have passed. See details.\n. :white_check_mark: Tests for the commit a29f4b5e5b595f9743aa581e83a749396fd5c01f have passed. See details.\n. :x: Tests for the commit f4c3386a266cb7bb4572adfe18a3a75ee884d2a0 have failed. See details.\n. :white_check_mark: Tests for the commit 27f354fe79e2550ec5876c28bb01d8aae5f6b50e have passed. See details.\n. :white_check_mark: Tests for the commit e49aadd8c92bc2e8394894e2e40a5f699c40280f have passed. See details.\n. :white_check_mark: Tests for the commit cb03d6683367d79d1a1f57135ad1eb0ed5b8cd39 have passed. See details.\n. :white_check_mark: Tests for the commit 6e165e4cd729ce3a551a9eda7e1677d5f02c8ed0 have passed. See details.\n. :white_check_mark: Tests for the commit 8cabbf67bb1b3a3d17e379b9fec5263d005adf4a have passed. See details.\n. :white_check_mark: Tests for the commit 4c9e0b1671e2d5e6052acbcaac7c2fcf3533f37a have passed. See details.\n. :white_check_mark: Tests for the commit 41eb3a9c520c43d078bc2a77ba69af1cb572f3b0 have passed. See details.\n. :white_check_mark: Tests for the commit fd85706aa2ddbfae5b22287e8ad9e71922f65fe6 have passed. See details.\n. :white_check_mark: Tests for the commit 829aee81a6f284992abe3a4e7effa95598f392bc have passed. See details.\n. :white_check_mark: Tests for the commit 6553ff6360e3a1bc218a9acfee9ee7440ebcbce0 have passed. See details.\n. :white_check_mark: Tests for the commit e8335c88bcac3cf939fd1a24a9fc4b72894421f5 have passed. See details.\n. :white_check_mark: Tests for the commit e5692d7c551f600f88973eab71ee6b24efd6348d have passed. See details.\n. :x: Tests for the commit 1f9929d13cb2a809a876dc98abc7c6793c0352b4 have failed. See details.\n. :white_check_mark: Tests for the commit 8d3e1c218e664f148c4abe94c465bbf2b31152a5 have passed. See details.\n. :x: Tests for the commit 2467b9447266f5ed64cd762dba21ec32b9c46dd6 have failed. See details.\n. :white_check_mark: Tests for the commit 2467b9447266f5ed64cd762dba21ec32b9c46dd6 have passed. See details.\n. :white_check_mark: Tests for the commit e25ebbc83ca039df02e984692f4deefd89733540 have passed. See details.\n. :white_check_mark: Tests for the commit c3a6bc1155bb9033d04f60f1fbf64c782766dbbf have passed. See details.\n. :white_check_mark: Tests for the commit 446b661b16b362eff77a8a21e883be28938c8c60 have passed. See details.\n. :white_check_mark: Tests for the commit 89901073759f6921b99fb1080aa20a553705a88d have passed. See details.\n. :x: Tests for the commit 1216d822d417b3f9edf50c61c7e70c241ee0324e have failed. See details.\n. :white_check_mark: Tests for the commit 5ae28555a8ddb920389fc5ddbab1a262d45e0909 have passed. See details.\n. :white_check_mark: Tests for the commit 9e05c2e49cb047e8d4833e582779776944761645 have passed. See details.\n. :x: Tests for the commit 2c7ee5634a0af59e857e342a33ee636ce2be21fc have failed. See details.\n. :x: Tests for the commit f30c34c15bf4f2df665dfc917526fda01dfafd9e have failed. See details.\n. :x: Tests for the commit 40888a059bcbac6cc074298daffeaef40b83a723 have failed. See details.\n. :white_check_mark: Tests for the commit 2c8e9ddd01e0585e2498da30d3a44f3d1328eecf have passed. See details.\n. :x: Tests for the commit 9c3e4ce92fe639a667f1832fbaab59af06888704 have failed. See details.\n. :white_check_mark: Tests for the commit 9c3e4ce92fe639a667f1832fbaab59af06888704 have passed. See details.\n. :white_check_mark: Tests for the commit 287fa7c1d6c9d75d038313643c9acd82737a99ed have passed. See details.\n. :x: Tests for the commit 3b9ce42e2061f4acc4451ae4580c715373708347 have failed. See details.\n. :white_check_mark: Tests for the commit 9029f13427758e840d79d15bd675d7662715e23e have passed. See details.\n. :white_check_mark: Tests for the commit dfc1a15d7aa26641dbf178933a99478979560d8b have passed. See details.\n. :white_check_mark: Tests for the commit a0b01097b81000dc00b2d15f3cf96a9728e2d618 have passed. See details.\n. :white_check_mark: Tests for the commit b4342236f15b3243abad437b40a627b8629343b5 have passed. See details.\n. :x: Tests for the commit 465d534cb5e5f2c2bc2c8b10830663e6c3f91feb have failed. See details.\n. :white_check_mark: Tests for the commit 43cff3c2fa81abd2d56eac8cd3a8cd51d83e5124 have passed. See details.\n. :x: Tests for the commit 33e1588aeaf3ad6c1e9a298161f938fa1b4224a6 have failed. See details.\n. :white_check_mark: Tests for the commit 33e1588aeaf3ad6c1e9a298161f938fa1b4224a6 have passed. See details.\n. :white_check_mark: Tests for the commit 1f333ff7bacf555ea3979741b2f4f86abcf6d23f have passed. See details.\n. :white_check_mark: Tests for the commit e6c3285742baf3bd69ff178484a5040cd36877ca have passed. See details.\n. :x: Tests for the commit 465d05c167fafb57ea64cee6764f8ee0fe7e62c5 have failed. See details.\n. :x: Tests for the commit 8315225f67134a87f8abbd41647b3668faeb719e have failed. See details.\n. :x: Tests for the commit 9aa758d621c8cc5d0e2aa4d8f744ac898116a329 have failed. See details.\n. :x: Tests for the commit a99c39c692517ae76250206e8d63baa471a3004e have failed. See details.\n. :x: Tests for the commit 5f08fbf94da1edc510c10c9563776855907820fc have failed. See details.\n. :x: Tests for the commit 5f08fbf94da1edc510c10c9563776855907820fc have failed. See details.\n. :x: Tests for the commit 19225677345ba321829366fb0dc7b9312e7050e9 have failed. See details.\n. :x: Tests for the commit 62f2b176ae51ede9a882a439898bcc5fcb64ad71 have failed. See details.\n. :x: Tests for the commit 126397bae6c9cd7344a8290db20d4df2117168a3 have failed. See details.\n. :x: Tests for the commit 0ffed5ca7480c65442bca1be7f4ed0c078db337d have failed. See details.\n. :x: Tests for the commit 88de7738fe742c1c48433b11272407688d655929 have failed. See details.\n. :x: Tests for the commit 2a7c4dc7c03c760b39fa7913aa6b637b9e69c2d7 have failed. See details.\n. :x: Tests for the commit 78eaf53da9425df49d2836996affd1e94af9e512 have failed. See details.\n. :x: Tests for the commit 6b7ee7c346d3e1dcc5e2f67df45d392f874fe6eb have failed. See details.\n. :x: Tests for the commit e52727ea574330c13646a225abc6206178f12cdc have failed. See details.\n. :x: Tests for the commit 916a8e5da6fe3c1a93a2afe6187a8acda4f34217 have failed. See details.\n. :white_check_mark: Tests for the commit 916a8e5da6fe3c1a93a2afe6187a8acda4f34217 have passed. See details.\n. :x: Tests for the commit 5a3013e7769de4489118408bc8f95304ae287f32 have failed. See details.\n. :white_check_mark: Tests for the commit 5a3013e7769de4489118408bc8f95304ae287f32 have passed. See details.\n. :white_check_mark: Tests for the commit 8bd24fd3e071cf55efa17ee93aceee1f6bdc1d59 have passed. See details.\n. :white_check_mark: Tests for the commit 6678713ac5b4b390eac17517c40299f5e9bf5552 have passed. See details.\n. :white_check_mark: Tests for the commit 243b21e168acd0dc3f0b8073c50fd5199fb4052e have passed. See details.\n. :white_check_mark: Tests for the commit 3b3301e7a6003609e36aa9b4fc316ac8cfa0b03d have passed. See details.\n. :white_check_mark: Tests for the commit 50a3156af0c6e6a6e4676fca6c1c2d5df4d0c11b have passed. See details.\n. :x: Tests for the commit d1417c03d01185425cf069b87edf223e2aa7a1bf have failed. See details.\n. :white_check_mark: Tests for the commit d1417c03d01185425cf069b87edf223e2aa7a1bf have passed. See details.\n. :x: Tests for the commit 0ae6f5c4c25912137fa72f0e31a24126a3c9e64a have failed. See details.\n. :white_check_mark: Tests for the commit 0ae6f5c4c25912137fa72f0e31a24126a3c9e64a have passed. See details.\n. :white_check_mark: Tests for the commit 0253f4114b0248649dbc4cc7114993ecde131ada have passed. See details.\n. :white_check_mark: Tests for the commit c104c3d29d8b4b8c3b045e217f67429cadf77b69 have passed. See details.\n. :white_check_mark: Tests for the commit 9816df52bc71d672ed2a56a400ce210f3877c7fd have passed. See details.\n. :x: Tests for the commit 86ec3cb979c8f6e4898a22f01a69c76e22626513 have failed. See details.\n. :x: Tests for the commit ab47580c396324dcffd1160623b3f7cadd2bd0b1 have failed. See details.\n. :white_check_mark: Tests for the commit b1641ba0ff37ccd9457eead15c7068bb40cd6c9f have passed. See details.\n. :white_check_mark: Tests for the commit 0c45b0531d962eeef50cb01f01793c27ac41d251 have passed. See details.\n. :x: Tests for the commit e29bc79920ddca557f75486ac6c86cd8aa96b079 have failed. See details.\n. :white_check_mark: Tests for the commit e29bc79920ddca557f75486ac6c86cd8aa96b079 have passed. See details.\n. :white_check_mark: Tests for the commit 223f086dbd27b64a81f9d6a9162f9a77c44f2925 have passed. See details.\n. :white_check_mark: Tests for the commit 781ad05921e3e74dc952e826fe5f4ba1b7d98b5e have passed. See details.\n. :x: Tests for the commit d2cfc9e465df8c020bf0c1700d03279721c5aa41 have failed. See details.\n. :x: Tests for the commit 98a5533f4dd8534fafc36cd2afe8227f6e0c0b41 have failed. See details.\n. :white_check_mark: Tests for the commit d4709411b31a402d0412bdfe434cb3e9a5c466bd have passed. See details.\n. :x: Tests for the commit 86c401e0f535b34ed993f594599f46e946b8eee0 have failed. See details.\n. :white_check_mark: Tests for the commit 294a5bac581aee25fd5289d33795cf5dacba753c have passed. See details.\n. :white_check_mark: Tests for the commit 294a5bac581aee25fd5289d33795cf5dacba753c have passed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :x: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have failed. See details.\n. :white_check_mark: Tests for the commit 4bc89f8bc3d95635833e7beaca16d30aba8b04b3 have passed. See details.\n. :x: Tests for the commit 37cae35c4649326c847afd0ea3419111079d9ee0 have failed. See details.\n. :x: Tests for the commit 37cae35c4649326c847afd0ea3419111079d9ee0 have failed. See details.\n. :white_check_mark: Tests for the commit 37cae35c4649326c847afd0ea3419111079d9ee0 have passed. See details.\n. :x: Tests for the commit 745601e3b6caa1ed016973a595e53afed6625e6c have failed. See details.\n. :white_check_mark: Tests for the commit 745601e3b6caa1ed016973a595e53afed6625e6c have passed. See details.\n. :x: Tests for the commit 9e4b50326e211205ee3a0172538f0a2f7c84f250 have failed. See details.\n. :x: Tests for the commit 9e4b50326e211205ee3a0172538f0a2f7c84f250 have failed. See details.\n. :x: Tests for the commit 5fa9ede45346f88394e15181947f3e4322e2dc3a have failed. See details.\n. :white_check_mark: Tests for the commit 5fa9ede45346f88394e15181947f3e4322e2dc3a have passed. See details.\n. :x: Tests for the commit f1af899fa8d97340a348d11456876b46da07a341 have failed. See details.\n. :x: Tests for the commit f1af899fa8d97340a348d11456876b46da07a341 have failed. See details.\n. :x: Tests for the commit f1af899fa8d97340a348d11456876b46da07a341 have failed. See details.\n. :x: Tests for the commit e83f2158105c343d1ac8ad7a385aeaea9dc8f9da have failed. See details.\n. :x: Tests for the commit 477ed83374f624befd86fbb15be7dcb40a36e479 have failed. See details.\n. :white_check_mark: Tests for the commit 477ed83374f624befd86fbb15be7dcb40a36e479 have passed. See details.\n. :white_check_mark: Tests for the commit 477ed83374f624befd86fbb15be7dcb40a36e479 have passed. See details.\n. :white_check_mark: Tests for the commit 477ed83374f624befd86fbb15be7dcb40a36e479 have passed. See details.\n. :white_check_mark: Tests for the commit a22a07315d30cecff8c586331d8d990b8a6a59d5 have passed. See details.\n. :white_check_mark: Tests for the commit 39d184ffec68491b327163d78e792715913c892a have passed. See details.\n. :white_check_mark: Tests for the commit c07a1eb1fdf6ec27910972efba71d45dd09c4312 have passed. See details.\n. :x: Tests for the commit c43f5467362e6e4e655774f10d9d19b2906dd8f4 have failed. See details.\n. :white_check_mark: Tests for the commit d612fa8665e3f5bfbda65b424d1d9f09cc8b7163 have passed. See details.\n. :white_check_mark: Tests for the commit f0f156c6166c6fa6a59506a8b61aeb0cce1a990c have passed. See details.\n. :white_check_mark: Tests for the commit 882cb82a74e09ef2e57beb0ed4bda139e259e554 have passed. See details.\n. :x: Tests for the commit f7f5c5435e49521355c68426ead7dcd707a0ab7f have failed. See details.\n. :white_check_mark: Tests for the commit f7f5c5435e49521355c68426ead7dcd707a0ab7f have passed. See details.\n. :white_check_mark: Tests for the commit e5f398ce3a5596754f5ef8354a5354c1341ceeb4 have passed. See details.\n. :x: Tests for the commit 9ed6108a10da78975232107be11480aa43831bac have failed. See details.\n. :x: Tests for the commit d9c431eaa27527870a9fceba970ccedd78f21c69 have failed. See details.\n. :white_check_mark: Tests for the commit 067c3a232effec061f06e1f5581afa6707f59e85 have passed. See details.\n. :x: Tests for the commit 6ad56a5b7df5a2caead7a527d3faae60855e7d6a have failed. See details.\n. :white_check_mark: Tests for the commit b02872db1d0b499bd4c91b4d18f6fddecc5c8999 have passed. See details.\n. :x: Tests for the commit 85cb685e2cb90722df5d7402cf04a19075b0c921 have failed. See details.\n. :x: Tests for the commit 1122c04de60097a60690863981aaf5a64aca02f9 have failed. See details.\n. :white_check_mark: Tests for the commit 1122c04de60097a60690863981aaf5a64aca02f9 have passed. See details.\n. :x: Tests for the commit a8599e1f753582c61a3d441e172747590ff36266 have failed. See details.\n. :x: Tests for the commit d4aec2508b4939ff3308661a7726b9aec925d430 have failed. See details.\n. :white_check_mark: Tests for the commit d4aec2508b4939ff3308661a7726b9aec925d430 have passed. See details.\n. :x: Tests for the commit 4aa4e0ec6b9d4f0f23efa23b2d7b695f385a0e98 have failed. See details.\n. :white_check_mark: Tests for the commit 4aa4e0ec6b9d4f0f23efa23b2d7b695f385a0e98 have passed. See details.\n. :white_check_mark: Tests for the commit c302e75e5ea098e851b5f984c863bce25758e174 have passed. See details.\n. :x: Tests for the commit 88609365011df4aea1a0573ed546ea21c908590f have failed. See details.\n. :x: Tests for the commit e0db86e4728dfa873d8fb85a34f9279f017f0fbb have failed. See details.\n. :x: Tests for the commit 0a1a0ed203132b742131fb6f1f9927a5e4fe8175 have failed. See details.\n. :x: Tests for the commit 7c074db4d747915f7c400cd37bf1393e6f2f4392 have failed. See details.\n. :white_check_mark: Tests for the commit 7c074db4d747915f7c400cd37bf1393e6f2f4392 have passed. See details.\n. :x: Tests for the commit 257ae34b227822a8c562a4a75d2ff5086c7194be have failed. See details.\n. :x: Tests for the commit 257ae34b227822a8c562a4a75d2ff5086c7194be have failed. See details.\n. :x: Tests for the commit 257ae34b227822a8c562a4a75d2ff5086c7194be have failed. See details.\n. :white_check_mark: Tests for the commit 01ba0e29a6f6fddf1a0d86b0133b7c4d5b59b67f have passed. See details.\n. :white_check_mark: Tests for the commit e177427b3e85cab379294574c40ad923706ddf9c have passed. See details.\n. :white_check_mark: Tests for the commit 971cb6ff5e2b2440fa3ed4e0cb2779621daac88e have passed. See details.\n. :x: Tests for the commit 995080bfd738f69aba2dc8a1a3d94dd846e3569f have failed. See details.\n. :x: Tests for the commit f02625c90006f5714ba88464ad0705b4c209a7b4 have failed. See details.\n. :x: Tests for the commit 894e79be44426b1ba8ab153239595f01afa588bf have failed. See details.\n. :x: Tests for the commit c74be87d03ad381a6a9c9afb0bffacf3ebd3d7ba have failed. See details.\n. :x: Tests for the commit 1af77a7878d688aaaa25bff98ecdfe6866d5a5b8 have failed. See details.\n. :white_check_mark: Tests for the commit 1af77a7878d688aaaa25bff98ecdfe6866d5a5b8 have passed. See details.\n. :x: Tests for the commit bfe2f5ebe8ac7a1f67df6724193976671e8fdc2b have failed. See details.\n. :x: Tests for the commit e8527ab824f56293c86fc787f97cf428983f5411 have failed. See details.\n. :white_check_mark: Tests for the commit e8527ab824f56293c86fc787f97cf428983f5411 have passed. See details.\n. :x: Tests for the commit d5c77a8f7df6f92486c5931748352a4099a06955 have failed. See details.\n. :white_check_mark: Tests for the commit d5c77a8f7df6f92486c5931748352a4099a06955 have passed. See details.\n. :x: Tests for the commit 7e2dfb7edd7cb84125704e8201be5f06276f7bc9 have failed. See details.\n. :x: Tests for the commit fa5d91dbe5df28201357cee69c7b3d6fbcbabb42 have failed. See details.\n. :white_check_mark: Tests for the commit fa5d91dbe5df28201357cee69c7b3d6fbcbabb42 have passed. See details.\n. :x: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have failed. See details.\n. :x: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have failed. See details.\n. :x: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have failed. See details.\n. :x: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have failed. See details.\n. :x: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have failed. See details.\n. :white_check_mark: Tests for the commit 7e793fcf75c6b370d33e3c0686afbd2b2815af34 have passed. See details.\n. :x: Tests for the commit 43b18f45359a7113cc012d3c717e017ec2964fd7 have failed. See details.\n. :x: Tests for the commit 43b18f45359a7113cc012d3c717e017ec2964fd7 have failed. See details.\n. :white_check_mark: Tests for the commit 43b18f45359a7113cc012d3c717e017ec2964fd7 have passed. See details.\n. :x: Tests for the commit b7a76d9d70adfd2324590f889eb82e35127da0a4 have failed. See details.\n. :x: Tests for the commit b7a76d9d70adfd2324590f889eb82e35127da0a4 have failed. See details.\n. :white_check_mark: Tests for the commit b7a76d9d70adfd2324590f889eb82e35127da0a4 have passed. See details.\n. :x: Tests for the commit ecd31a35d98285214f8c34235042e24a446a7dbc have failed. See details.\n. :x: Tests for the commit ecd31a35d98285214f8c34235042e24a446a7dbc have failed. See details.\n. :x: Tests for the commit ecd31a35d98285214f8c34235042e24a446a7dbc have failed. See details.\n. :x: Tests for the commit 7100ea257a5ef7be1ec67eb590c8cee5545b6f00 have failed. See details.\n. :x: Tests for the commit 999c547571fd2bfea0e2541d3d196ab25b272191 have failed. See details.\n. :x: Tests for the commit cfe84a5440997f54165f06ea5f968c50cbb31baa have failed. See details.\n. :x: Tests for the commit b9df5aa6802f76e5179f2be3708c5c34e56c976f have failed. See details.\n. :white_check_mark: Tests for the commit c4add231000b92c33db41e460d568940f0e01fc4 have passed. See details.\n. :x: Tests for the commit 7094eb5b2bf14bea7459a4d1e4d75189b15a277f have failed. See details.\n. :x: Tests for the commit 62219970ac7a683714f56288b805b2c9b453ca5d have failed. See details.\n. :white_check_mark: Tests for the commit 62219970ac7a683714f56288b805b2c9b453ca5d have passed. See details.\n. :x: Tests for the commit 84fcb401fb4099986ea7527c0dd9be33be770906 have failed. See details.\n. :white_check_mark: Tests for the commit 84fcb401fb4099986ea7527c0dd9be33be770906 have passed. See details.\n. :x: Tests for the commit bd9244feb430709922621e7c88889d64b0b42577 have failed. See details.\n. :x: Tests for the commit bd9244feb430709922621e7c88889d64b0b42577 have failed. See details.\n. :white_check_mark: Tests for the commit 266212161078f899cfbb612567705010e6efe7bd have passed. See details.\n. :x: Tests for the commit 0f237307f4c074441132e792fd16d25f11748e58 have failed. See details.\n. :white_check_mark: Tests for the commit 0f237307f4c074441132e792fd16d25f11748e58 have passed. See details.\n. :x: Tests for the commit e846251ace15accf98660b430b365d03eaae36b5 have failed. See details.\n. :white_check_mark: Tests for the commit e846251ace15accf98660b430b365d03eaae36b5 have passed. See details.\n. :white_check_mark: Tests for the commit 79a30635ca5d161c4a6bf2faa8d4e32dd9801693 have passed. See details.\n. :x: Tests for the commit 50201cf1be35b84e75b54e07e78267da71a278d4 have failed. See details.\n. :x: Tests for the commit 50201cf1be35b84e75b54e07e78267da71a278d4 have failed. See details.\n. :x: Tests for the commit 50201cf1be35b84e75b54e07e78267da71a278d4 have failed. See details.\n. :x: Tests for the commit 50201cf1be35b84e75b54e07e78267da71a278d4 have failed. See details.\n. :white_check_mark: Tests for the commit 50201cf1be35b84e75b54e07e78267da71a278d4 have passed. See details.\n. :x: Tests for the commit 3f37a6f6b4cfbbf15109fdbb3ec85c304e782b9b have failed. See details.\n. :x: Tests for the commit 600fe417469c4903eefdb48e85254dfab6b5c3f8 have failed. See details.\n. :white_check_mark: Tests for the commit 0fce9c0b968203b0e137a6f012ec45945fe68f77 have passed. See details.\n. :x: Tests for the commit 554f7ba229033be86af7fe4ab917c400513aef24 have failed. See details.\n. :white_check_mark: Tests for the commit 554f7ba229033be86af7fe4ab917c400513aef24 have passed. See details.\n. :x: Tests for the commit 7adb37dc23336f05fb302b3c9405682bfb7172a6 have failed. See details.\n. :white_check_mark: Tests for the commit 7adb37dc23336f05fb302b3c9405682bfb7172a6 have passed. See details.\n. :x: Tests for the commit 0fc7268592396b53440589918c8f8a172e0fd651 have failed. See details.\n. :x: Tests for the commit 0fc7268592396b53440589918c8f8a172e0fd651 have failed. See details.\n. :white_check_mark: Tests for the commit 7e2bafd15e5f0f3446f459d26934f41d52b92dd0 have passed. See details.\n. :x: Tests for the commit f428730389899e149b48f48eddd5920a2bd39ad7 have failed. See details.\n. :x: Tests for the commit 3a0d3adc955edf1f07648572e617adb33158aea2 have failed. See details.\n. :white_check_mark: Tests for the commit 3a0d3adc955edf1f07648572e617adb33158aea2 have passed. See details.\n. :x: Tests for the commit ab203ee7e3c177b7b0ba6e9954bee1bce410230f have failed. See details.\n. :white_check_mark: Tests for the commit 1514fba9ad07041662d1b99656ea6bd997a6ac3f have passed. See details.\n. :white_check_mark: Tests for the commit 361f3286fd2666a14803ae38df7a0531113ab239 have passed. See details.\n. :white_check_mark: Tests for the commit f9390e1c2fc52cd62249529bb664754d7ebbd178 have passed. See details.\n. :white_check_mark: Tests for the commit 02f4e3a36ed19f9171367178acc7f2330826f07d have passed. See details.\n. :white_check_mark: Tests for the commit de691c6ab1cc6420895a130928d93ae1b310bf06 have passed. See details.\n. :x: Tests for the commit 5670dc23a34051b42b0c4f811110a07fbd3e4794 have failed. See details.\n. :x: Tests for the commit 896e1510fce018737e64f1be0315173a0c5692e6 have failed. See details.\n. :white_check_mark: Tests for the commit 896e1510fce018737e64f1be0315173a0c5692e6 have passed. See details.\n. :x: Tests for the commit be2ea6fd52a66f4bdf50aec900b979b68c0dfbe8 have failed. See details.\n. :x: Tests for the commit be2ea6fd52a66f4bdf50aec900b979b68c0dfbe8 have failed. See details.\n. :white_check_mark: Tests for the commit be2ea6fd52a66f4bdf50aec900b979b68c0dfbe8 have passed. See details.\n. :x: Tests for the commit 624698ca1b9383c7bfd949cd9d7498aa78ad5748 have failed. See details.\n. :x: Tests for the commit 624698ca1b9383c7bfd949cd9d7498aa78ad5748 have failed. See details.\n. :white_check_mark: Tests for the commit 6def064bd7c58e8b10c551255e246e60906233f0 have passed. See details.\n. :x: Tests for the commit a79a6fe5af172550ec07768f603b6102a9d2ef7b have failed. See details.\n. :white_check_mark: Tests for the commit 34d28966f909a7c3d971769401d05b199b55c26a have passed. See details.\n. :x: Tests for the commit d344b150d0de0a6535f7a1a861a3b81318607761 have failed. See details.\n. :white_check_mark: Tests for the commit 47f64df3a404bda58ab4d66b5fac2b2b0f0ecfe9 have passed. See details.\n. :x: Tests for the commit 64d7bf6ce0e736b3a207bd635b90fab39b7f7841 have failed. See details.\n. :x: Tests for the commit 1d02172d4f524ac4e3d79c6130c166768daf0e1b have failed. See details.\n. :x: Tests for the commit 1d02172d4f524ac4e3d79c6130c166768daf0e1b have failed. See details.\n. :white_check_mark: Tests for the commit 1d02172d4f524ac4e3d79c6130c166768daf0e1b have passed. See details.\n. :white_check_mark: Tests for the commit 1d02172d4f524ac4e3d79c6130c166768daf0e1b have passed. See details.\n. :x: Tests for the commit d1d98a01a0295b3971fe0e48af88a192fdabe1d6 have failed. See details.\n. :white_check_mark: Tests for the commit d1d98a01a0295b3971fe0e48af88a192fdabe1d6 have passed. See details.\n. :x: Tests for the commit a19fd6625f40a09d2176d3b682ec0344d100296f have failed. See details.\n. :x: Tests for the commit a19fd6625f40a09d2176d3b682ec0344d100296f have failed. See details.\n. :x: Tests for the commit a19fd6625f40a09d2176d3b682ec0344d100296f have failed. See details.\n. :white_check_mark: Tests for the commit a19fd6625f40a09d2176d3b682ec0344d100296f have passed. See details.\n. :x: Tests for the commit ae53fabe7e49bf8c8ddcf6852c5418cc3dab823c have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :white_check_mark: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have passed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :x: Tests for the commit 1d3e4593504b88cf50d77c18b770d1a6b52b47d7 have failed. See details.\n. :white_check_mark: Tests for the commit 2132de32f0322a4ded216e7d372ec321a114e753 have passed. See details.\n. :x: Tests for the commit 9fcb394db18a1b01bbf722fc22b1191b6d90239f have failed. See details.\n. :x: Tests for the commit 56dc8492c3e89b299ecd7ff66adea08762112031 have failed. See details.\n. :x: Tests for the commit 56dc8492c3e89b299ecd7ff66adea08762112031 have failed. See details.\n. :white_check_mark: Tests for the commit a9f7586f50e1acd91353f8af55574af30834dedd have passed. See details.\n. :x: Tests for the commit 398f85563c15b11580557a8188b8eca3a7f9dcc0 have failed. See details.\n. :x: Tests for the commit 1079118157ca0f8ea20d5adc2d038254ca7496d0 have failed. See details.\n. :x: Tests for the commit 2d20556c7119ff301c887a32a01693c65f9d58a4 have failed. See details.\n. :x: Tests for the commit 2d20556c7119ff301c887a32a01693c65f9d58a4 have failed. See details.\n. :x: Tests for the commit f43a4caed109d421370a1d2a3b184f9ec70de2ac have failed. See details.\n. :white_check_mark: Tests for the commit 872193b812662709cc45f3502224f9634325a34e have passed. See details.\n. :x: Tests for the commit 872193b812662709cc45f3502224f9634325a34e have failed. See details.\n. :x: Tests for the commit 41fc642c71ed9ab53043d01e8681af0c28926705 have failed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :white_check_mark: Tests for the commit cb3f0eb469c5d7529a6ff952d5ed15b7a2660099 have passed. See details.\n. :x: Tests for the commit afbee16e6b0e74a4235840913cdc63c29dff21d2 have failed. See details.\n. :white_check_mark: Tests for the commit afbee16e6b0e74a4235840913cdc63c29dff21d2 have passed. See details.\n. :white_check_mark: Tests for the commit afbee16e6b0e74a4235840913cdc63c29dff21d2 have passed. See details.\n. :white_check_mark: Tests for the commit afbee16e6b0e74a4235840913cdc63c29dff21d2 have passed. See details.\n. :white_check_mark: Tests for the commit db55f37d6a46ab6658c1b4b97858281436f79c1d have passed. See details.\n. :x: Tests for the commit 021e624d9e124d76bff30835b048b1baac593380 have failed. See details.\n. :white_check_mark: Tests for the commit 18ee157604eeb3562e84fa26e33c218da2be646a have passed. See details.\n. :x: Tests for the commit a663e4dfe687bd9d6dedc4b6d7f0367189007e13 have failed. See details.\n. :white_check_mark: Tests for the commit a663e4dfe687bd9d6dedc4b6d7f0367189007e13 have passed. See details.\n. :white_check_mark: Tests for the commit 3d09332ba89834fb4a70c1e29b0dd18afda04dc4 have passed. See details.\n. :white_check_mark: Tests for the commit 21da99829cd01e858f9bcfcb75b481d87ea71265 have passed. See details.\n. :white_check_mark: Tests for the commit 62f9ac3893aaf977c097f97775dca60a4152d826 have passed. See details.\n. :x: Tests for the commit ce35b24bdbd9c354eb6a0bd795c04e25bd8a7a7d have failed. See details.\n. :x: Tests for the commit 8a9cf6d7de98f33b8d5dfa623e749c273c7fd258 have failed. See details.\n. :x: Tests for the commit 2d3eaea8da71be9aed2c4131e9c288603ba1bc02 have failed. See details.\n. :x: Tests for the commit 2d1102f2eecaecfa7168141762286cec64b5fbb8 have failed. See details.\n. :white_check_mark: Tests for the commit 2d1102f2eecaecfa7168141762286cec64b5fbb8 have passed. See details.\n. :x: Tests for the commit f0043dcee3d7db526edff9943e98c96450230103 have failed. See details.\n. :x: Tests for the commit f0043dcee3d7db526edff9943e98c96450230103 have failed. See details.\n. :x: Tests for the commit f0043dcee3d7db526edff9943e98c96450230103 have failed. See details.\n. :white_check_mark: Tests for the commit f0043dcee3d7db526edff9943e98c96450230103 have passed. See details.\n. :x: Tests for the commit 44ffbd1c1c8ebaa65e854c9b2163cb68936226a9 have failed. See details.\n. :white_check_mark: Tests for the commit ba5724c959e0352d9bc45024ae64a85cd41092e2 have passed. See details.\n. :x: Tests for the commit 42dd0580f5568c58ad67e0d5ebb12680b93a7c14 have failed. See details.\n. :x: Tests for the commit 42dd0580f5568c58ad67e0d5ebb12680b93a7c14 have failed. See details.\n. :x: Tests for the commit d0f8e97dd445cc95da6fd1fcca3444e866866ffe have failed. See details.\n. :x: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have failed. See details.\n. :x: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have failed. See details.\n. :x: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have failed. See details.\n. :x: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have failed. See details.\n. :x: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have failed. See details.\n. :white_check_mark: Tests for the commit 980c72cb2b235482fe9d67e397960d07bebdcea8 have passed. See details.\n. :x: Tests for the commit 7bd38825e9db4662d05e92e7e853f994fc284e20 have failed. See details.\n. :white_check_mark: Tests for the commit 16b88454181712133fdaa3e138342a8ac7bf6c67 have passed. See details.\n. :x: Tests for the commit fc429820ead8b7166662232bdf11b3a1e25d3c90 have failed. See details.\n. :white_check_mark: Tests for the commit fc429820ead8b7166662232bdf11b3a1e25d3c90 have passed. See details.\n. :white_check_mark: Tests for the commit 807d2a4565a8e0d32be15177ee7c2b056b3a1f0a have passed. See details.\n. :x: Tests for the commit 0c9c8d590845aeecead9f3690571618dfd49f908 have failed. See details.\n. :white_check_mark: Tests for the commit fb055c4ab217961aac4b5bffa8a48f1a1b146db8 have passed. See details.\n. :white_check_mark: Tests for the commit 36a1b7f1d21dd0d491226a040f0f8ed9de2b1772 have passed. See details.\n. :white_check_mark: Tests for the commit 7aab7a7f02d9210edf09dbd3d45acd262e372ea9 have passed. See details.\n. :white_check_mark: Tests for the commit 3a36344425136e434d7c1e28e6880c8a97660832 have passed. See details.\n. :x: Tests for the commit 6280be192ca442eaeec51911ede8af9209ac099d have failed. See details.\n. :x: Tests for the commit 74284a91b9114cfe5e159381ccb55d978d5eaccf have failed. See details.\n. :white_check_mark: Tests for the commit 74284a91b9114cfe5e159381ccb55d978d5eaccf have passed. See details.\n. :x: Tests for the commit 54ece8e8209494e826322a3e2f89fd67952f0cb3 have failed. See details.\n. :white_check_mark: Tests for the commit 54ece8e8209494e826322a3e2f89fd67952f0cb3 have passed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 1b08c427886e4b4a337376e06f069f2476e6d1f2 have failed. See details.\n. :x: Tests for the commit 376f3ca87a3c637a5b82b91237be51ef987d25cf have failed. See details.\n. :white_check_mark: Tests for the commit 376f3ca87a3c637a5b82b91237be51ef987d25cf have passed. See details.\n. :white_check_mark: Tests for the commit fd5428811cc338b0c3b3b0aaca0d135f656088cf have passed. See details.\n. :white_check_mark: Tests for the commit 0d29e9641c9edc76f23eb230d0da45de528e6df9 have passed. See details.\n. :x: Tests for the commit b41f6ed55e6cb3f15889f228ac2f488aea3b0f5b have failed. See details.\n. :white_check_mark: Tests for the commit b41f6ed55e6cb3f15889f228ac2f488aea3b0f5b have passed. See details.\n. :x: Tests for the commit b4e6c0ec4f25600371d437d2bf60f7648b922e80 have failed. See details.\n. :white_check_mark: Tests for the commit 9e6ef13cb77f416cb8c0c167ed520db483663800 have passed. See details.\n. :x: Tests for the commit 3b975f00ce7e034069ca7fdf62bf363269503c07 have failed. See details.\n. :x: Tests for the commit 3b975f00ce7e034069ca7fdf62bf363269503c07 have failed. See details.\n. :x: Tests for the commit e10f31d3deba82951b88e188b46204383dc4f834 have failed. See details.\n. :x: Tests for the commit e10f31d3deba82951b88e188b46204383dc4f834 have failed. See details.\n. :white_check_mark: Tests for the commit e10f31d3deba82951b88e188b46204383dc4f834 have passed. See details.\n. :white_check_mark: Tests for the commit 3c15e30b814b163653a27d8b71fe64ff1218d44a have passed. See details.\n. :white_check_mark: Tests for the commit 923b869e423ffda04df68d168b6d64d2541d2cb4 have passed. See details.\n. :x: Tests for the commit c0d8b23bfc3a7dc1d52a89991e88f3e5d965aac8 have failed. See details.\n. :white_check_mark: Tests for the commit 77163424bb5602e5b2185301418debd5b78d4834 have passed. See details.\n. :white_check_mark: Tests for the commit aa07d1b3d30389ffc051a01fd0d7171f51282350 have passed. See details.\n. :x: Tests for the commit 7de010672a7fa6793bb71d9f63e4bf1a8f672752 have failed. See details.\n. :white_check_mark: Tests for the commit 851c6c4aa65beb7334af8325b3c15f6d5ecabf39 have passed. See details.\n. :x: Tests for the commit 88f20cb3c1c6e13a8c2af601b189fb3b198fb908 have failed. See details.\n. :x: Tests for the commit 88f20cb3c1c6e13a8c2af601b189fb3b198fb908 have failed. See details.\n. :white_check_mark: Tests for the commit 88f20cb3c1c6e13a8c2af601b189fb3b198fb908 have passed. See details.\n. :white_check_mark: Tests for the commit 39488da0887fa8b8221489eb37952f137133c01d have passed. See details.\n. :x: Tests for the commit f3fcea0383bfc75b29634723fd9d57ac5101b504 have failed. See details.\n. :white_check_mark: Tests for the commit 2cdc400294faa00134742c06ea01992823a99704 have passed. See details.\n. :white_check_mark: Tests for the commit 48a2e8d276afabdcc2f52acc6f3d86b06dc32b21 have passed. See details.\n. :x: Tests for the commit 8bb9b13e066a8c0d897f9f067ced722c7bc5c573 have failed. See details.\n. :white_check_mark: Tests for the commit 8bb9b13e066a8c0d897f9f067ced722c7bc5c573 have passed. See details.\n. :x: Tests for the commit 933c5296b03bbb32f3ab55582e3b4dbe73c783da have failed. See details.\n. :x: Tests for the commit 382b60b5442783c067ef330beb136d40f9ee3428 have failed. See details.\n. :white_check_mark: Tests for the commit 382b60b5442783c067ef330beb136d40f9ee3428 have passed. See details.\n. :x: Tests for the commit 2939d803c1313822d152fe253b0d32f0dcb89ad6 have failed. See details.\n. :x: Tests for the commit 2939d803c1313822d152fe253b0d32f0dcb89ad6 have failed. See details.\n. :white_check_mark: Tests for the commit f68b287b2dc12690202a83e59c1e10ce5cae4898 have passed. See details.\n. :x: Tests for the commit ecba57c341fedb87dbc6ebfc748a65e6c21bdd8f have failed. See details.\n. :white_check_mark: Tests for the commit cae688d0056426abd288545f09679f3f1029b7bf have passed. See details.\n. :x: Tests for the commit ab7f0eaa3b2aa4f3a51364bf6dd42f8abae47c88 have failed. See details.\n. :white_check_mark: Tests for the commit 4531a359f202403ff20d1f6cdb430d5f7b3d3635 have passed. See details.\n. :white_check_mark: Tests for the commit df695e879a44a1ebc19f37962b2d7e73b20f4568 have passed. See details.\n. :x: Tests for the commit 1bc436b077221837e5b494c3da7a9245f83282dd have failed. See details.\n. :white_check_mark: Tests for the commit 1bc436b077221837e5b494c3da7a9245f83282dd have passed. See details.\n. :white_check_mark: Tests for the commit e23b65cddd0358fe1080f3f90b0418801b97f0e1 have passed. See details.\n. :white_check_mark: Tests for the commit 300c63e39c218cd7203eca43ab76a32f5cf7224f have passed. See details.\n. :x: Tests for the commit 3f7e768ac87861887fbf5c91015cc92c4afeee3e have failed. See details.\n. :x: Tests for the commit 3f7e768ac87861887fbf5c91015cc92c4afeee3e have failed. See details.\n. :x: Tests for the commit 3f7e768ac87861887fbf5c91015cc92c4afeee3e have failed. See details.\n. :x: Tests for the commit 3f7e768ac87861887fbf5c91015cc92c4afeee3e have failed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit 7b1b381741add8ef1a9dd6f53465632e89b75936 have passed. See details.\n. :white_check_mark: Tests for the commit b7e83825793f474831f3642fb2664a16f5319e40 have passed. See details.\n. :white_check_mark: Tests for the commit b7e83825793f474831f3642fb2664a16f5319e40 have passed. See details.\n. :white_check_mark: Tests for the commit b7e83825793f474831f3642fb2664a16f5319e40 have passed. See details.\n. :white_check_mark: Tests for the commit b7e83825793f474831f3642fb2664a16f5319e40 have passed. See details.\n. :white_check_mark: Tests for the commit db10f145aedca1e8ed74bdd834c3ccdd08db03ae have passed. See details.\n. :white_check_mark: Tests for the commit db10f145aedca1e8ed74bdd834c3ccdd08db03ae have passed. See details.\n. :white_check_mark: Tests for the commit 1ad02ac0fb688d2802075f07b6336ffcb61a9c22 have passed. See details.\n. :white_check_mark: Tests for the commit 1ad02ac0fb688d2802075f07b6336ffcb61a9c22 have passed. See details.\n. :white_check_mark: Tests for the commit 1ad02ac0fb688d2802075f07b6336ffcb61a9c22 have passed. See details.\n. :white_check_mark: Tests for the commit 1ad02ac0fb688d2802075f07b6336ffcb61a9c22 have passed. See details.\n. :white_check_mark: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have passed. See details.\n. :white_check_mark: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have passed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :x: Tests for the commit 1257354f00037ffa1c43b18a8e8e82d9377bcb7e have failed. See details.\n. :white_check_mark: Tests for the commit e953c25e544c913eba10c9357a60d0cba8ee95bc have passed. See details.\n. :white_check_mark: Tests for the commit e953c25e544c913eba10c9357a60d0cba8ee95bc have passed. See details.\n. :x: Tests for the commit e953c25e544c913eba10c9357a60d0cba8ee95bc have failed. See details.\n. :x: Tests for the commit e953c25e544c913eba10c9357a60d0cba8ee95bc have failed. See details.\n. :white_check_mark: Tests for the commit 16fcd76529dfcd2cc96e7cdb6a83e1f1616eb31a have passed. See details.\n. :white_check_mark: Tests for the commit 16fcd76529dfcd2cc96e7cdb6a83e1f1616eb31a have passed. See details.\n. :white_check_mark: Tests for the commit 16fcd76529dfcd2cc96e7cdb6a83e1f1616eb31a have passed. See details.\n. :white_check_mark: Tests for the commit 16fcd76529dfcd2cc96e7cdb6a83e1f1616eb31a have passed. See details.\n. :white_check_mark: Tests for the commit 16fcd76529dfcd2cc96e7cdb6a83e1f1616eb31a have passed. See details.\n. :white_check_mark: Tests for the commit 16816afd6b4838123e3a30e3fd404aaaa7227b63 have passed. See details.\n. :white_check_mark: Tests for the commit 16816afd6b4838123e3a30e3fd404aaaa7227b63 have passed. See details.\n. :white_check_mark: Tests for the commit 8e87b6ebf75df1d410aa5eb0fc39a045884527a0 have passed. See details.\n. :white_check_mark: Tests for the commit 8e87b6ebf75df1d410aa5eb0fc39a045884527a0 have passed. See details.\n. :white_check_mark: Tests for the commit 8e87b6ebf75df1d410aa5eb0fc39a045884527a0 have passed. See details.\n. :x: Tests for the commit 545eed02a86ae2321b2293592cefbd9415eedc8b have failed. See details.\n. :white_check_mark: Tests for the commit 61259e573940688f11d0154f6e7991b9b45169f9 have passed. See details.\n. :white_check_mark: Tests for the commit c02f6b58455ef3449d304a5cc920fd0e4e925cc5 have passed. See details.\n. :x: Tests for the commit 023c6978e951f990b35c36181f54b819363e5314 have failed. See details.\n. :white_check_mark: Tests for the commit 023c6978e951f990b35c36181f54b819363e5314 have passed. See details.\n. :x: Tests for the commit be0b67db1c9f50bb0b5fc892d9421169912f2f83 have failed. See details.\n. :x: Tests for the commit 27e46ec8cc78193bc878d4f93abea769783de94e have failed. See details.\n. :x: Tests for the commit 27e46ec8cc78193bc878d4f93abea769783de94e have failed. See details.\n. :x: Tests for the commit 27e46ec8cc78193bc878d4f93abea769783de94e have failed. See details.\n. :x: Tests for the commit 88a7f38b3941fa6243941d5b3a60e2fd15db0106 have failed. See details.\n. :x: Tests for the commit bf7e987d88889af432417ece957c707e6a4ee0ea have failed. See details.\n. :x: Tests for the commit d404299aaad3e410e62589153a7f45ff695e394f have failed. See details.\n. :x: Tests for the commit 9b13d2cfbb9b7db2ca4cab924f09804be3de436b have failed. See details.\n. :white_check_mark: Tests for the commit 9b13d2cfbb9b7db2ca4cab924f09804be3de436b have passed. See details.\n. :white_check_mark: Tests for the commit b881596870278bb33e8b13932992e9ebfb089575 have passed. See details.\n. :white_check_mark: Tests for the commit 8f57d6879f2013380e88da42d5c4913243673085 have passed. See details.\n. :x: Tests for the commit 3033ef94991a2d951f7704043f407525fd77930f have failed. See details.\n. :white_check_mark: Tests for the commit 96debaaf0b665134988c81032b374868bdda6b3e have passed. See details.\n. :x: Tests for the commit c00e83da53c894f04b4ff3a048a3930e472d802f have failed. See details.\n. :x: Tests for the commit c00e83da53c894f04b4ff3a048a3930e472d802f have failed. See details.\n. :x: Tests for the commit c00e83da53c894f04b4ff3a048a3930e472d802f have failed. See details.\n. :x: Tests for the commit e25e236e52c40fe54f819b6c979e61b22341b645 have failed. See details.\n. :white_check_mark: Tests for the commit e25e236e52c40fe54f819b6c979e61b22341b645 have passed. See details.\n. :white_check_mark: Tests for the commit efd12e2bfbbea11ad8022527979e8a82e980f92b have passed. See details.\n. :x: Tests for the commit 8094862a51272d1a32344312026adec74846e63d have failed. See details.\n. :x: Tests for the commit 3dfd8e3b122d8234e318bf375e404ac4f86639bc have failed. See details.\n. :white_check_mark: Tests for the commit dbdb2f6c6d0048fd3812c713921a35ca448ec2e0 have passed. See details.\n. :white_check_mark: Tests for the commit 361644f2793cd7a58d8ed83864a09cc510dd291c have passed. See details.\n. :white_check_mark: Tests for the commit 466b262426bd7831c1ae458e6a6296921a2a6ddf have passed. See details.\n. :x: Tests for the commit 6f993a523f9aeb5969af680ab6e08e32fae0b9dd have failed. See details.\n. :white_check_mark: Tests for the commit 10fa3610bf3ccbc88f2b7b8483ec5de167d98170 have passed. See details.\n. :white_check_mark: Tests for the commit 053c91da819d9c9d5f851e24032ce717dc29d073 have passed. See details.\n. :white_check_mark: Tests for the commit d54cdbd529da4ca016687d28f2e6dec3bddae822 have passed. See details.\n. :white_check_mark: Tests for the commit 3093f84633fc2d46a2e3fd8861127f517d49ed0b have passed. See details.\n. :white_check_mark: Tests for the commit 022f6b1217a0d3b6e6dee829a49c6106a604e8ad have passed. See details.\n. :x: Tests for the commit 9eeb20c493e7bac06c1eb159a6bdbcf91084aa7c have failed. See details.\n. :x: Tests for the commit 9eeb20c493e7bac06c1eb159a6bdbcf91084aa7c have failed. See details.\n. :white_check_mark: Tests for the commit 9eeb20c493e7bac06c1eb159a6bdbcf91084aa7c have passed. See details.\n. :x: Tests for the commit b82254f60522fc9035fb3c0d129bf94d6fa52245 have failed. See details.\n. :white_check_mark: Tests for the commit b82254f60522fc9035fb3c0d129bf94d6fa52245 have passed. See details.\n. :white_check_mark: Tests for the commit 24771920f2e3fb4ad73b2460746235388562fd6b have passed. See details.\n. :x: Tests for the commit 6a7f00948869d7500d413e81c21a8e99377aa29b have failed. See details.\n. :white_check_mark: Tests for the commit 6a7f00948869d7500d413e81c21a8e99377aa29b have passed. See details.\n. :white_check_mark: Tests for the commit 385d6691a5419d993090a92c0352f2e4446ab59d have passed. See details.\n. :white_check_mark: Tests for the commit 1b1078628e026d77034c0230c503cacdfb9fcd43 have passed. See details.\n. :white_check_mark: Tests for the commit f3d85cf75128b8f2d8746d49837eee702c762ac1 have passed. See details.\n. :x: Tests for the commit 252f92c903e26d0808b329ff0454a3d91e0ff07f have failed. See details.\n. :white_check_mark: Tests for the commit 252f92c903e26d0808b329ff0454a3d91e0ff07f have passed. See details.\n. :x: Tests for the commit ad53f047c581ff08d5a5b4183147e7ba74d68904 have failed. See details.\n. :white_check_mark: Tests for the commit ad53f047c581ff08d5a5b4183147e7ba74d68904 have passed. See details.\n. :x: Tests for the commit fdaa684dcd888158bc27d285a70698f593adfb79 have failed. See details.\n. :white_check_mark: Tests for the commit 56e26d8a20896db8ba40e6b7943674863de02eb3 have passed. See details.\n. :x: Tests for the commit b2421d3478b04b443a758c5cf08d3f9c2fe29642 have failed. See details.\n. :white_check_mark: Tests for the commit b2421d3478b04b443a758c5cf08d3f9c2fe29642 have passed. See details.\n. :x: Tests for the commit ddee5cf8f7b7a119bbd6952bd79520c7f4051854 have failed. See details.\n. :x: Tests for the commit ddee5cf8f7b7a119bbd6952bd79520c7f4051854 have failed. See details.\n. :x: Tests for the commit ddee5cf8f7b7a119bbd6952bd79520c7f4051854 have failed. See details.\n. :x: Tests for the commit d417f32b141d6752560edeb6225a7889011cce81 have failed. See details.\n. :x: Tests for the commit 92ada68e04ba7100aa0aa1799e76aa506214ab71 have failed. See details.\n. :x: Tests for the commit 92ada68e04ba7100aa0aa1799e76aa506214ab71 have failed. See details.\n. :white_check_mark: Tests for the commit 92ada68e04ba7100aa0aa1799e76aa506214ab71 have passed. See details.\n. :white_check_mark: Tests for the commit c910e6277add8b1e3670b1866972e188ae04097b have passed. See details.\n. :white_check_mark: Tests for the commit 020b29c6d16a2afe90532d1559b257dac5ba7ed7 have passed. See details.\n. :x: Tests for the commit 9dfc0f161c27f10285a98789c43add8790378f04 have failed. See details.\n. :x: Tests for the commit 9dfc0f161c27f10285a98789c43add8790378f04 have failed. See details.\n. :white_check_mark: Tests for the commit 9dfc0f161c27f10285a98789c43add8790378f04 have passed. See details.\n. :x: Tests for the commit 142e4a12b79f5940bd59af708dde1655a0e99722 have failed. See details.\n. :x: Tests for the commit 9f482a857d25ccd806f3aa2e7db68ab55611a7b2 have failed. See details.\n. :x: Tests for the commit 7289938fe112181e4edf8001547fb48a4b0a5aa9 have failed. See details.\n. :x: Tests for the commit f77afb4b68ba3e0012ab21a179bf86b7441d4b42 have failed. See details.\n. :x: Tests for the commit f77afb4b68ba3e0012ab21a179bf86b7441d4b42 have failed. See details.\n. :x: Tests for the commit 472a168f3ca31c0bf111e05bdd768ce3a14345d1 have failed. See details.\n. :white_check_mark: Tests for the commit 9929feefaa2127ca6fe5b57e321c03f97b63c09b have passed. See details.\n. :x: Tests for the commit 973c2f562df7110bb87910836e049d9f38a2b239 have failed. See details.\n. :x: Tests for the commit 2ba443e02177390eadf1729d2160a2635498a913 have failed. See details.\n. :white_check_mark: Tests for the commit 2ba443e02177390eadf1729d2160a2635498a913 have passed. See details.\n. :white_check_mark: Tests for the commit b0155741c3d8c90e4341c48771c45ba5398c4277 have passed. See details.\n. :white_check_mark: Tests for the commit 0f283587127cd3179cb642d3bfa2a1ab020468f9 have passed. See details.\n. :x: Tests for the commit fa41d2039dac9bbb5f486282d6b6660c3854fbcc have failed. See details.\n. :x: Tests for the commit fa41d2039dac9bbb5f486282d6b6660c3854fbcc have failed. See details.\n. :x: Tests for the commit fa41d2039dac9bbb5f486282d6b6660c3854fbcc have failed. See details.\n. :x: Tests for the commit 4bd8b35892db9db5efa23647c4e82c9f7822a834 have failed. See details.\n. :white_check_mark: Tests for the commit 3c70661c044030b14e357246f13603c9c7218077 have passed. See details.\n. :x: Tests for the commit f991cec687dd0c38b119feff13356c787084888c have failed. See details.\n. :white_check_mark: Tests for the commit 44675415cff884976601e7d398c95ff22d9ec435 have passed. See details.\n. :x: Tests for the commit 01362e1a54f2bdc458a61f0065d33731f75beec6 have failed. See details.\n. :x: Tests for the commit 6816b62896b740c37451b58324c1427bea10be8d have failed. See details.\n. :x: Tests for the commit 4209d7e2d4518b8af132a05fb5e6ce56a93577c7 have failed. See details.\n. :x: Tests for the commit 665891bd5c0ed1864f5c8c06058a2616ecfc1d1a have failed. See details.\n. :x: Tests for the commit cfbf8372766395dcd42ca56c96edea1f0d80f0ed have failed. See details.\n. :x: Tests for the commit e0e61647927144daa83fdd32e2d0e6fb1fa28dfa have failed. See details.\n. :x: Tests for the commit bb61e451884f9fac61df898d2a972537754fd68d have failed. See details.\n. :x: Tests for the commit f0835e1a2ab1c30448084f321670660861c9b90c have failed. See details.\n. :x: Tests for the commit 2f415d842f5bdc15e40bc400f4a7c3fc2637eab2 have failed. See details.\n. :x: Tests for the commit 018ca82b6481a82634dba87663eb42e9a9b3b793 have failed. See details.\n. :x: Tests for the commit 3a5d7d3ee4a606e5af7506774456220ee9db7c5f have failed. See details.\n. :x: Tests for the commit d54828754bcd3c96855e970a9b259e8dab0365d3 have failed. See details.\n. :x: Tests for the commit 5b9cd95635f29bcb8a95bfdbbb92be9ec532548b have failed. See details.\n. :white_check_mark: Tests for the commit 4de4e2f3f8735ae91e511d5004dff56761a4bcfb have passed. See details.\n. :x: Tests for the commit 50c46f49ab84c6c7fd6988509535ef90bca67fc7 have failed. See details.\n. :white_check_mark: Tests for the commit 9b1f33fd3c3aa5c2be386a42d2ad0ac07e35564e have passed. See details.\n. :x: Tests for the commit 55d997595bac82a6a2777135f6d8c52ca6def4e7 have failed. See details.\n. :x: Tests for the commit 05ff300e95b0724a7a850ec39beb7f0d5239b651 have failed. See details.\n. :x: Tests for the commit 410a62bb8d90d46b2d5b3845d08b89fbb7485baf have failed. See details.\n. :x: Tests for the commit 03b46fb918d3d8afdddd051d562a525905a7585e have failed. See details.\n. :white_check_mark: Tests for the commit d21f9fe5f59030f670e83fddc795524d2f691469 have passed. See details.\n. :x: Tests for the commit 4893e96fc9f0df69006d67ae4a49b40df379411b have failed. See details.\n. :x: Tests for the commit 4893e96fc9f0df69006d67ae4a49b40df379411b have failed. See details.\n. :white_check_mark: Tests for the commit c3c15aabc0070ae03c828d1e4d5959a4b43c1efb have passed. See details.\n. :x: Tests for the commit 76d95cff0d698a94fbc803aaa428bb4d76fa4781 have failed. See details.\n. :x: Tests for the commit 76d95cff0d698a94fbc803aaa428bb4d76fa4781 have failed. See details.\n. :white_check_mark: Tests for the commit 76d95cff0d698a94fbc803aaa428bb4d76fa4781 have passed. See details.\n. :white_check_mark: Tests for the commit ce17fe402c6b17acb412ea23c783802fad2df087 have passed. See details.\n. :x: Tests for the commit 2202af24fb223b49858370a891b155140d447b3b have failed. See details.\n. :x: Tests for the commit 2202af24fb223b49858370a891b155140d447b3b have failed. See details.\n. :white_check_mark: Tests for the commit 2202af24fb223b49858370a891b155140d447b3b have passed. See details.\n. :white_check_mark: Tests for the commit 44d276a305907a5866caf4d5e4dfd5c29d37742c have passed. See details.\n. :x: Tests for the commit 4cdf16de43b9c7349b63677e992ab603bb30b758 have failed. See details.\n. :x: Tests for the commit 6b135afc2f599b077b4f32c11fc47a5d08700b07 have failed. See details.\n. :x: Tests for the commit f2e8ded9091a5f82e15be72bc81a462d9ab50995 have failed. See details.\n. :white_check_mark: Tests for the commit 164203ec95570044efbe0f021c000b213aae8d81 have passed. See details.\n. :white_check_mark: Tests for the commit 315cfd8cd4ee38defcbb5081cd8b42a86df97e50 have passed. See details.\n. :x: Tests for the commit 3f8b64197c60174e75c9d0beaece0dedf7146003 have failed. See details.\n. :x: Tests for the commit 3f8b64197c60174e75c9d0beaece0dedf7146003 have failed. See details.\n. :white_check_mark: Tests for the commit 3f8b64197c60174e75c9d0beaece0dedf7146003 have passed. See details.\n. :x: Tests for the commit 0409713f2033fc8550cf95a44ea79da4d87113f5 have failed. See details.\n. :white_check_mark: Tests for the commit 0409713f2033fc8550cf95a44ea79da4d87113f5 have passed. See details.\n. :x: Tests for the commit 96c2c37465eeaa14b6bf89424de8847b30c840e1 have failed. See details.\n. :white_check_mark: Tests for the commit 96c2c37465eeaa14b6bf89424de8847b30c840e1 have passed. See details.\n. :x: Tests for the commit 98cfae0692dcf472aa1158f16dff73aecac4631a have failed. See details.\n. :x: Tests for the commit 98cfae0692dcf472aa1158f16dff73aecac4631a have failed. See details.\n. :x: Tests for the commit 98cfae0692dcf472aa1158f16dff73aecac4631a have failed. See details.\n. :x: Tests for the commit 98cfae0692dcf472aa1158f16dff73aecac4631a have failed. See details.\n. :white_check_mark: Tests for the commit 98cfae0692dcf472aa1158f16dff73aecac4631a have passed. See details.\n. :x: Tests for the commit f7c5c9f6ee5f56b8db9d15f1606f59e02ee2ab86 have failed. See details.\n. :white_check_mark: Tests for the commit f7c5c9f6ee5f56b8db9d15f1606f59e02ee2ab86 have passed. See details.\n. :x: Tests for the commit db653a17200474b85ee732e211d044b48298252d have failed. See details.\n. :x: Tests for the commit 21ff32ba6116cb4388b5eee072cd7383e59b9d66 have failed. See details.\n. :x: Tests for the commit 21ff32ba6116cb4388b5eee072cd7383e59b9d66 have failed. See details.\n. :x: Tests for the commit 21ff32ba6116cb4388b5eee072cd7383e59b9d66 have failed. See details.\n. :x: Tests for the commit 21ff32ba6116cb4388b5eee072cd7383e59b9d66 have failed. See details.\n. :x: Tests for the commit 21ff32ba6116cb4388b5eee072cd7383e59b9d66 have failed. See details.\n. :x: Tests for the commit 6826291678461a7c490fa0a3e69ef34fd73ae0b3 have failed. See details.\n. :white_check_mark: Tests for the commit 6826291678461a7c490fa0a3e69ef34fd73ae0b3 have passed. See details.\n. :white_check_mark: Tests for the commit e0063c6377ab868e1897cb9b777bcb580bbd4e61 have passed. See details.\n. :white_check_mark: Tests for the commit b1bc48358c7005e5afb2202b42f0bfa421e129f1 have passed. See details.\n. :x: Tests for the commit e54fb80b679c3239a83427114ca6c88917407ff2 have failed. See details.\n. :x: Tests for the commit e54fb80b679c3239a83427114ca6c88917407ff2 have failed. See details.\n. :x: Tests for the commit e54fb80b679c3239a83427114ca6c88917407ff2 have failed. See details.\n. :white_check_mark: Tests for the commit e625a3e04df7fe48b881f81d045a05cc32ba93d1 have passed. See details.\n. :white_check_mark: Tests for the commit e625a3e04df7fe48b881f81d045a05cc32ba93d1 have passed. See details.\n. :x: Tests for the commit 478c1fc3cb60fd7f5474e62f51507adeb908cc88 have failed. See details.\n. :x: Tests for the commit d0285ad5ec895d0ae92cd6f5b67776d9b1b5c744 have failed. See details.\n. :x: Tests for the commit ef8bc0fb5bd992f39ef03be594ab6cb2290e8470 have failed. See details.\n. :x: Tests for the commit ef8bc0fb5bd992f39ef03be594ab6cb2290e8470 have failed. See details.\n. :white_check_mark: Tests for the commit ef8bc0fb5bd992f39ef03be594ab6cb2290e8470 have passed. See details.\n. :x: Tests for the commit 34e9edde11a9bc1fd7f354202d90a80dd63b1aae have failed. See details.\n. :x: Tests for the commit 34e9edde11a9bc1fd7f354202d90a80dd63b1aae have failed. See details.\n. :white_check_mark: Tests for the commit 34e9edde11a9bc1fd7f354202d90a80dd63b1aae have passed. See details.\n. :x: Tests for the commit da7fab414c897904943c48ce68d0e41909b0118f have failed. See details.\n. :x: Tests for the commit da7fab414c897904943c48ce68d0e41909b0118f have failed. See details.\n. :x: Tests for the commit da7fab414c897904943c48ce68d0e41909b0118f have failed. See details.\n. :x: Tests for the commit eb7d2cdf8bbcd974547d6843126bd69e85fade95 have failed. See details.\n. :x: Tests for the commit 83a309cbe8db5645d211d18186718026e58550fd have failed. See details.\n. :x: Tests for the commit e8e587ced978231ee1645e75ca8814b4f4938ebd have failed. See details.\n. :white_check_mark: Tests for the commit d4ff8c02e71de1dc376b30ff34ad1241a6eae3f8 have passed. See details.\n. :white_check_mark: Tests for the commit 28ac2326cf9541d0b61e8eecbbdd8eb084865cee have passed. See details.\n. :white_check_mark: Tests for the commit 982528727f4c6bbd9d0d87b4616eee63c0ea16b2 have passed. See details.\n. :x: Tests for the commit 576c45cfafa94aaa61192803486c254f52bc999a have failed. See details.\n. :x: Tests for the commit 4b8b2690f1ddc612039d4dc25ffb19714ea2ff51 have failed. See details.\n. :white_check_mark: Tests for the commit 4b8b2690f1ddc612039d4dc25ffb19714ea2ff51 have passed. See details.\n. :white_check_mark: Tests for the commit 97cce6198888f694b1915db140e3bb122e65940c have passed. See details.\n. :white_check_mark: Tests for the commit c91b3ca00f8e1ca4818ddf8a2a8d9ff73eb15dc6 have passed. See details.\n. :x: Tests for the commit 1a753180ed92e2cdc2648acb4cb39e2763b772a9 have failed. See details.\n. :x: Tests for the commit b38abc350c040cc10c0ebcda253c29d5ab384b36 have failed. See details.\n. :x: Tests for the commit b38abc350c040cc10c0ebcda253c29d5ab384b36 have failed. See details.\n. :white_check_mark: Tests for the commit b38abc350c040cc10c0ebcda253c29d5ab384b36 have passed. See details.\n. :x: Tests for the commit 68499efb0804400829bf37a9c00667252b855f27 have failed. See details.\n. :x: Tests for the commit 7f23c580e80ae2ad74d2399e664a1028fe2a92e9 have failed. See details.\n. :white_check_mark: Tests for the commit 7f23c580e80ae2ad74d2399e664a1028fe2a92e9 have passed. See details.\n. :white_check_mark: Tests for the commit 10b929a5c12cd73d44a90405e941d8e3ec76c4e8 have passed. See details.\n. :white_check_mark: Tests for the commit 020741ae6be3d7a24411f06420932480336fee30 have passed. See details.\n. :x: Tests for the commit 1ff5d4824558753f72b7932aaf8913a60e6ee065 have failed. See details.\n. :white_check_mark: Tests for the commit 4b3948a41e343934e896fc134a9eb07e9f59d348 have passed. See details.\n. :x: Tests for the commit 749e64c2f95985560545a1a400dd8d0ab099723b have failed. See details.\n. :white_check_mark: Tests for the commit f591b2ddea696ef6060a654c02c67a15d89919ff have passed. See details.\n. :white_check_mark: Tests for the commit 93a4f9f96106c9d5e97a1ac280f1bc5c729f2882 have passed. See details.\n. :white_check_mark: Tests for the commit 10a9871dc02f70631a5495e97f9dc4dd14034ed9 have passed. See details.\n. :x: Tests for the commit ce41714841903ed11d5844178d43f9e64d75331f have failed. See details.\n. :x: Tests for the commit c56e100a8e746e3bde723ddccbdaa668624d7c98 have failed. See details.\n. :x: Tests for the commit c56e100a8e746e3bde723ddccbdaa668624d7c98 have failed. See details.\n. :x: Tests for the commit f3267f1c92f702593851491dd0eec5fba4f3f9c9 have failed. See details.\n. :x: Tests for the commit f3267f1c92f702593851491dd0eec5fba4f3f9c9 have failed. See details.\n. :white_check_mark: Tests for the commit f3267f1c92f702593851491dd0eec5fba4f3f9c9 have passed. See details.\n. :white_check_mark: Tests for the commit 011b4cc1396b0591bee8336b325912613038f84a have passed. See details.\n. :x: Tests for the commit d4e682777f48b85dc72da6143d76dc9c380bbabe have failed. See details.\n. :x: Tests for the commit d6235de2b13cfc2f9f75621f53465655b79e078c have failed. See details.\n. :x: Tests for the commit 5f3b8246f0018d056385b8748c183fa7e8a4492e have failed. See details.\n. :x: Tests for the commit db884e98c07189a1ad247833443e310bceede7d9 have failed. See details.\n. :x: Tests for the commit fd399778d091356f4a7480867c925a550fec5f5f have failed. See details.\n. :x: Tests for the commit 30f6c851f2bb1707bf00130820a5f284f4fa78ae have failed. See details.\n. :x: Tests for the commit 02809b483c200a7f15c1779a98a283ecf7f4e137 have failed. See details.\n. :x: Tests for the commit b26db5e31881dae4ce1b48d28eddca0d1532d29b have failed. See details.\n. :x: Tests for the commit 65e6708284fff858c32e2d9dcf319a2ecae0bf55 have failed. See details.\n. :white_check_mark: Tests for the commit c58a9400e3e8f915ecdeb80c4557f242f24c1130 have passed. See details.\n. :x: Tests for the commit 5adb9ec0cd845387356f6eb1183907e46343be3e have failed. See details.\n. :x: Tests for the commit f219354bcaabb580436e52c8b24b26b21e7e5342 have failed. See details.\n. :x: Tests for the commit f219354bcaabb580436e52c8b24b26b21e7e5342 have failed. See details.\n. :white_check_mark: Tests for the commit 327506eaff771bc0d67ba20815db0a6d6e3a8215 have passed. See details.\n. :x: Tests for the commit bb858a32db88a22bff0647fcd49691aeba5e3714 have failed. See details.\n. :white_check_mark: Tests for the commit bb858a32db88a22bff0647fcd49691aeba5e3714 have passed. See details.\n. :x: Tests for the commit 5475bb00638d902c1e5416d42ff41dcb16820a9e have failed. See details.\n. :x: Tests for the commit 5475bb00638d902c1e5416d42ff41dcb16820a9e have failed. See details.\n. :white_check_mark: Tests for the commit 92a17905397660f4ec733729cf91881d86b0c094 have passed. See details.\n. :white_check_mark: Tests for the commit 5131ab9567a607e42fad790e4a591bf481590359 have passed. See details.\n. :white_check_mark: Tests for the commit 8866e51b8f3025d863dc21b641a8bf9ef87c2442 have passed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit ff0ebb704a2fe61d6784752f31b71fe79cf95536 have failed. See details.\n. :x: Tests for the commit c809d8bb8b7b9c4153b68450fd407358d67645b5 have failed. See details.\n. :x: Tests for the commit c809d8bb8b7b9c4153b68450fd407358d67645b5 have failed. See details.\n. :x: Tests for the commit c809d8bb8b7b9c4153b68450fd407358d67645b5 have failed. See details.\n. :x: Tests for the commit c809d8bb8b7b9c4153b68450fd407358d67645b5 have failed. See details.\n. :white_check_mark: Tests for the commit 54dbbf8a9271f7db4c1e6c4a6f09ab02d5697dbe have passed. See details.\n. :white_check_mark: Tests for the commit 54dbbf8a9271f7db4c1e6c4a6f09ab02d5697dbe have passed. See details.\n. :x: Tests for the commit 1c993d0d076d64a5d0a6c0d83a4cdde0455a2d19 have failed. See details.\n. :x: Tests for the commit 1c993d0d076d64a5d0a6c0d83a4cdde0455a2d19 have failed. See details.\n. :x: Tests for the commit 1c993d0d076d64a5d0a6c0d83a4cdde0455a2d19 have failed. See details.\n. :white_check_mark: Tests for the commit b238146948bb90ea8513a966b39f51a2932e8495 have passed. See details.\n. :x: Tests for the commit 320ab8cde55c0f80d877b046f829bcbd37abc968 have failed. See details.\n. :x: Tests for the commit 320ab8cde55c0f80d877b046f829bcbd37abc968 have failed. See details.\n. :x: Tests for the commit afa415ecaa5e34513d5f1ce24b04c0ea69546023 have failed. See details.\n. :white_check_mark: Tests for the commit bac54be0894b403968201bae33e811348a1eb686 have passed. See details.\n. :x: Tests for the commit bac54be0894b403968201bae33e811348a1eb686 have failed. See details.\n. :white_check_mark: Tests for the commit bac54be0894b403968201bae33e811348a1eb686 have passed. See details.\n. :x: Tests for the commit 5cf27a29bade543c241429cbdfee92edf3b4880f have failed. See details.\n. :x: Tests for the commit 5cf27a29bade543c241429cbdfee92edf3b4880f have failed. See details.\n. :x: Tests for the commit 5cf27a29bade543c241429cbdfee92edf3b4880f have failed. See details.\n. :white_check_mark: Tests for the commit 364aa2fa1cd4368067b699acc23ea05706883dff have passed. See details.\n. :white_check_mark: Tests for the commit 364aa2fa1cd4368067b699acc23ea05706883dff have passed. See details.\n. :white_check_mark: Tests for the commit 364aa2fa1cd4368067b699acc23ea05706883dff have passed. See details.\n. :white_check_mark: Tests for the commit 364aa2fa1cd4368067b699acc23ea05706883dff have passed. See details.\n. :white_check_mark: Tests for the commit 364aa2fa1cd4368067b699acc23ea05706883dff have passed. See details.\n. :x: Tests for the commit 4a936bf2998fdb78f2cccbb4e90368bd5d6cb02c have failed. See details.\n. :x: Tests for the commit ee9d1087cff18a1b4d315d244b2d53be2d5aeea1 have failed. See details.\n. :white_check_mark: Tests for the commit ee9d1087cff18a1b4d315d244b2d53be2d5aeea1 have passed. See details.\n. :white_check_mark: Tests for the commit ee9d1087cff18a1b4d315d244b2d53be2d5aeea1 have passed. See details.\n. :x: Tests for the commit ee9d1087cff18a1b4d315d244b2d53be2d5aeea1 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 22498bb80299ee690a356f1b1685d711c823dbc7 have failed. See details.\n. :x: Tests for the commit 8e3fd0655c355792a1f98dcc061f90264be268d9 have failed. See details.\n. :x: Tests for the commit 8e3fd0655c355792a1f98dcc061f90264be268d9 have failed. See details.\n. :white_check_mark: Tests for the commit 511b63be91aaa6648b225aa72a48ef45b0a51a78 have passed. See details.\n. :x: Tests for the commit 511b63be91aaa6648b225aa72a48ef45b0a51a78 have failed. See details.\n. :x: Tests for the commit 511b63be91aaa6648b225aa72a48ef45b0a51a78 have failed. See details.\n. :white_check_mark: Tests for the commit ea51ad7f281dca29843d0d7fab7b560288c487c7 have passed. See details.\n. :x: Tests for the commit ea51ad7f281dca29843d0d7fab7b560288c487c7 have failed. See details.\n. :x: Tests for the commit 40ccabb403ab1d480917ab4ed11d969d50d7db87 have failed. See details.\n. :white_check_mark: Tests for the commit 40ccabb403ab1d480917ab4ed11d969d50d7db87 have passed. See details.\n. :x: Tests for the commit 3e5012cce5dae975fbaaf751189514f56abeead0 have failed. See details.\n. :white_check_mark: Tests for the commit 3e5012cce5dae975fbaaf751189514f56abeead0 have passed. See details.\n. :x: Tests for the commit 6dd2371c528b15de3d3d7ff8f885fc2359eb3386 have failed. See details.\n. :white_check_mark: Tests for the commit cb836b6b077c30cee30f8c9040c46337543e1586 have passed. See details.\n. :x: Tests for the commit 1c170e7d5ecf6ad90c4fb4d6b30d2108f21f96d2 have failed. See details.\n. :white_check_mark: Tests for the commit 67de375fac1b73dfd642b4b33efe90bfa0ee95f6 have passed. See details.\n. :x: Tests for the commit 987de9649080e77ca5a5868d98315e3ccae2c83a have failed. See details.\n. :white_check_mark: Tests for the commit 987de9649080e77ca5a5868d98315e3ccae2c83a have passed. See details.\n. :x: Tests for the commit 48a2cae82a10c910f0f80f21ed4ae2a883b8ab5c have failed. See details.\n. :white_check_mark: Tests for the commit f6a1aec29c860cb89b72c3e226bbff748ddd8c62 have passed. See details.\n. :white_check_mark: Tests for the commit 6f9be1e50c859303a3770d7617e1dd9f3e0df90c have passed. See details.\n. :x: Tests for the commit 04b8ea85be87230c16cdb6d5aff35e02623846c4 have failed. See details.\n. :white_check_mark: Tests for the commit 04b8ea85be87230c16cdb6d5aff35e02623846c4 have passed. See details.\n. :white_check_mark: Tests for the commit 1132034f1f3a9bd9090fd286d6b6945f6c7d1b10 have passed. See details.\n. :white_check_mark: Tests for the commit b3b39be9d94542b7fc12411e35f08fcba7ab5a9e have passed. See details.\n. :white_check_mark: Tests for the commit 8f9921bc059e4caf441e6828bec55942bb63f009 have passed. See details.\n. :x: Tests for the commit b189c513d51e0892f8b1eb31a865a70a1134c062 have failed. See details.\n. :x: Tests for the commit b189c513d51e0892f8b1eb31a865a70a1134c062 have failed. See details.\n. :white_check_mark: Tests for the commit b189c513d51e0892f8b1eb31a865a70a1134c062 have passed. See details.\n. :x: Tests for the commit 42d00a3d2fa356a419dfc4199ea669b705fe0c12 have failed. See details.\n. :x: Tests for the commit 42d00a3d2fa356a419dfc4199ea669b705fe0c12 have failed. See details.\n. :x: Tests for the commit 42d00a3d2fa356a419dfc4199ea669b705fe0c12 have failed. See details.\n. :white_check_mark: Tests for the commit f37520243f5baf7b12a988ce470abc16a3aee3e1 have passed. See details.\n. :x: Tests for the commit 030d2335116f798d5af192fb75a0f563dd92158f have failed. See details.\n. :white_check_mark: Tests for the commit 030d2335116f798d5af192fb75a0f563dd92158f have passed. See details.\n. :x: Tests for the commit 94d1044bee2e9c0f0458741f64f44d1da0dbbaec have failed. See details.\n. :white_check_mark: Tests for the commit 94d1044bee2e9c0f0458741f64f44d1da0dbbaec have passed. See details.\n. :x: Tests for the commit 0f20c72cc5daac1d8479aa1b7ae92b871dea8c0d have failed. See details.\n. :white_check_mark: Tests for the commit 0f20c72cc5daac1d8479aa1b7ae92b871dea8c0d have passed. See details.\n. :x: Tests for the commit 62ea1f181c4099ae3843cfea2567ce64978e85a8 have failed. See details.\n. :x: Tests for the commit 8e87d7fcea6650cb50548884e9a78cb8024bf659 have failed. See details.\n. :x: Tests for the commit 8e87d7fcea6650cb50548884e9a78cb8024bf659 have failed. See details.\n. :x: Tests for the commit 8e87d7fcea6650cb50548884e9a78cb8024bf659 have failed. See details.\n. :x: Tests for the commit 2d0bfbd1adc08a9b16690df800a6c182e89a8b4e have failed. See details.\n. :white_check_mark: Tests for the commit 2d0bfbd1adc08a9b16690df800a6c182e89a8b4e have passed. See details.\n. :white_check_mark: Tests for the commit ebae3626fd049a6d07b13688b8d366277aa13a6e have passed. See details.\n. :white_check_mark: Tests for the commit c60594ae61fdf84840617be2f4c7bae33542f1a4 have passed. See details.\n. :x: Tests for the commit a32a639929c9d07da8e86535061f8bf9c23fc768 have failed. See details.\n. :x: Tests for the commit 86f84be78d0180571e4a3efd1c2a19ccd9d4b187 have failed. See details.\n. :white_check_mark: Tests for the commit 86f84be78d0180571e4a3efd1c2a19ccd9d4b187 have passed. See details.\n. :x: Tests for the commit daf0135813614340c39f6df716026b0938c43d59 have failed. See details.\n. :x: Tests for the commit daf0135813614340c39f6df716026b0938c43d59 have failed. See details.\n. :x: Tests for the commit daf0135813614340c39f6df716026b0938c43d59 have failed. See details.\n. :x: Tests for the commit daf0135813614340c39f6df716026b0938c43d59 have failed. See details.\n. :white_check_mark: Tests for the commit daf0135813614340c39f6df716026b0938c43d59 have passed. See details.\n. :white_check_mark: Tests for the commit 40e3d72e8b49079afd9b9a3e7f0154cebd6742de have passed. See details.\n. :x: Tests for the commit ae0719481f47e1c257eb08a33e001a5676415d02 have failed. See details.\n. :x: Tests for the commit ae0719481f47e1c257eb08a33e001a5676415d02 have failed. See details.\n. :white_check_mark: Tests for the commit ae0719481f47e1c257eb08a33e001a5676415d02 have passed. See details.\n. :x: Tests for the commit 04ab4059b9276169da5274263fb5134c70c0ce61 have failed. See details.\n. :x: Tests for the commit 88a71a9c276c060b320fd27e08b1ae51ab959612 have failed. See details.\n. :x: Tests for the commit 88a71a9c276c060b320fd27e08b1ae51ab959612 have failed. See details.\n. :x: Tests for the commit 88a71a9c276c060b320fd27e08b1ae51ab959612 have failed. See details.\n. :x: Tests for the commit 88a71a9c276c060b320fd27e08b1ae51ab959612 have failed. See details.\n. :x: Tests for the commit ea613e9c759e25a110f8659cf55b49242193ecee have failed. See details.\n. :white_check_mark: Tests for the commit 7ba7583c332dec3d690094d6164ccae7480bf1af have passed. See details.\n. :x: Tests for the commit 6fca718feee364b33758a6b95effbdaeb793d92c have failed. See details.\n. :x: Tests for the commit 6fca718feee364b33758a6b95effbdaeb793d92c have failed. See details.\n. :white_check_mark: Tests for the commit 83b1111d5f987292fcf0974bd02dac32d7411a90 have passed. See details.\n. :white_check_mark: Tests for the commit 9b0a617671472be2175a31c8596b98f4aefd0b1c have passed. See details.\n. :x: Tests for the commit 4bcb167c1ff074663567ca5df4714b0122dd5662 have failed. See details.\n. :x: Tests for the commit 0d1ecc1691b562c207e783f4bf4c605d8d60ce97 have failed. See details.\n. :white_check_mark: Tests for the commit 2a9170e902bee2eef86be636820de03df74fa7bd have passed. See details.\n. :x: Tests for the commit 4cf0702810667d8bc196606580c08313a2f5c438 have failed. See details.\n. :x: Tests for the commit 4cf0702810667d8bc196606580c08313a2f5c438 have failed. See details.\n. :x: Tests for the commit 4cf0702810667d8bc196606580c08313a2f5c438 have failed. See details.\n. :x: Tests for the commit 4cf0702810667d8bc196606580c08313a2f5c438 have failed. See details.\n. :white_check_mark: Tests for the commit 4cf0702810667d8bc196606580c08313a2f5c438 have passed. See details.\n. :white_check_mark: Tests for the commit 640489d9b05ed62966534ed681ab87a820a81808 have passed. See details.\n. :x: Tests for the commit e0555828d35d6c88ab992bb29024a536c69e29d5 have failed. See details.\n. :x: Tests for the commit e0555828d35d6c88ab992bb29024a536c69e29d5 have failed. See details.\n. :x: Tests for the commit 92a39de0eba50cebc8c0b2a02cc4cb4085a8df65 have failed. See details.\n. :x: Tests for the commit 92a39de0eba50cebc8c0b2a02cc4cb4085a8df65 have failed. See details.\n. :x: Tests for the commit 92a39de0eba50cebc8c0b2a02cc4cb4085a8df65 have failed. See details.\n. :white_check_mark: Tests for the commit 92a39de0eba50cebc8c0b2a02cc4cb4085a8df65 have passed. See details.\n. :white_check_mark: Tests for the commit edd303e6c9c9e8d75c584112ccf93be19d249bea have passed. See details.\n. :x: Tests for the commit f5926bcb2af320d16a21e2424f01a82351618b05 have failed. See details.\n. :x: Tests for the commit 659d0bb6c1dea0bc670d4b87a117d071a16e8c64 have failed. See details.\n. :white_check_mark: Tests for the commit 659d0bb6c1dea0bc670d4b87a117d071a16e8c64 have passed. See details.\n. :x: Tests for the commit 250ce0008b5d79444a1bb7d8811e8e72cff3ca4e have failed. See details.\n. :white_check_mark: Tests for the commit 250ce0008b5d79444a1bb7d8811e8e72cff3ca4e have passed. See details.\n. :x: Tests for the commit 6b358f1a03a32b7ddeff7ec139587c89eafd1cd8 have failed. See details.\n. :x: Tests for the commit ecaed1032bc1e303a2360dfac64c536f03485775 have failed. See details.\n. :x: Tests for the commit ecaed1032bc1e303a2360dfac64c536f03485775 have failed. See details.\n. :x: Tests for the commit be503a6f539591aef63c917e0cac07bdf3c36234 have failed. See details.\n. :white_check_mark: Tests for the commit f6146252f24cbf09a085d85ca5ca1fcedca58eef have passed. See details.\n. :x: Tests for the commit 2f87b79507786b5d1404ce8c493b5f4c1ba81519 have failed. See details.\n. :white_check_mark: Tests for the commit 2f87b79507786b5d1404ce8c493b5f4c1ba81519 have passed. See details.\n. :x: Tests for the commit b656fe9a59c81ecb785a7b7df2729b2c8ed33ce5 have failed. See details.\n. :white_check_mark: Tests for the commit 493ecbd8ccd67fcfd324ce448f79447b7034b039 have passed. See details.\n. :x: Tests for the commit 493ecbd8ccd67fcfd324ce448f79447b7034b039 have failed. See details.\n. :white_check_mark: Tests for the commit 493ecbd8ccd67fcfd324ce448f79447b7034b039 have passed. See details.\n. :x: Tests for the commit 493ecbd8ccd67fcfd324ce448f79447b7034b039 have failed. See details.\n. :white_check_mark: Tests for the commit 493ecbd8ccd67fcfd324ce448f79447b7034b039 have passed. See details.\n. :x: Tests for the commit 3b199a9461ba2b99c18499dd5d66232cb60a40f0 have failed. See details.\n. :x: Tests for the commit f3d9a6f5bd2b2862d7f0158537169e0564a2689d have failed. See details.\n. :x: Tests for the commit f3d9a6f5bd2b2862d7f0158537169e0564a2689d have failed. See details.\n. :x: Tests for the commit f3d9a6f5bd2b2862d7f0158537169e0564a2689d have failed. See details.\n. :x: Tests for the commit a885c3214127f07f3be7814eda146dcdf3ee8340 have failed. See details.\n. :x: Tests for the commit a885c3214127f07f3be7814eda146dcdf3ee8340 have failed. See details.\n. :x: Tests for the commit a885c3214127f07f3be7814eda146dcdf3ee8340 have failed. See details.\n. :x: Tests for the commit a885c3214127f07f3be7814eda146dcdf3ee8340 have failed. See details.\n. :white_check_mark: Tests for the commit a885c3214127f07f3be7814eda146dcdf3ee8340 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :white_check_mark: Tests for the commit 77f7133abfe16f1c4596f8faa923018e1835a3a0 have passed. See details.\n. :x: Tests for the commit 20fb021e473da80f83c0ff76ff47e0e2befa9d6c have failed. See details.\n. :white_check_mark: Tests for the commit 8da6fbe04d0ed22e60149c6eeea2113b42fe62f4 have passed. See details.\n. :white_check_mark: Tests for the commit 8da6fbe04d0ed22e60149c6eeea2113b42fe62f4 have passed. See details.\n. :white_check_mark: Tests for the commit 8da6fbe04d0ed22e60149c6eeea2113b42fe62f4 have passed. See details.\n. :x: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have failed. See details.\n. :x: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have failed. See details.\n. :white_check_mark: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have passed. See details.\n. :white_check_mark: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have passed. See details.\n. :x: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have failed. See details.\n. :x: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have failed. See details.\n. :x: Tests for the commit 5d314255a99e90e25775e48cc378a8df7156d9a1 have failed. See details.\n. :white_check_mark: Tests for the commit ec0ba8466e08b42ad80695022745f7603ee18a33 have passed. See details.\n. :x: Tests for the commit a46e6146cd13a0e527c04207dfffb685fa9ee74c have failed. See details.\n. :white_check_mark: Tests for the commit a46e6146cd13a0e527c04207dfffb685fa9ee74c have passed. See details.\n. :x: Tests for the commit be595ae3b8811dce355f624f435cfe0178880970 have failed. See details.\n. :white_check_mark: Tests for the commit be595ae3b8811dce355f624f435cfe0178880970 have passed. See details.\n. :white_check_mark: Tests for the commit b9895ce7ab3e46bdedf97bdb2cbbd435f239f5c6 have passed. See details.\n. :x: Tests for the commit ff38adc0d97f45f0d63c77cddb5c36200d6b1aea have failed. See details.\n. :x: Tests for the commit c123657ee1b8b0ba4c9e6dddfc54b7f9de8b2ad4 have failed. See details.\n. :white_check_mark: Tests for the commit 4fb39d01bc1e72d96d62fc4a64a7f176dfe0cbf8 have passed. See details.\n. :x: Tests for the commit 890c4fa3dc5ea1b0dfb0ad81d32dca72ff05926d have failed. See details.\n. :x: Tests for the commit 84cecc233ffd8a97568963bf0c6b870a5a637722 have failed. See details.\n. :white_check_mark: Tests for the commit 84cecc233ffd8a97568963bf0c6b870a5a637722 have passed. See details.\n. :x: Tests for the commit 0851b633c5442cc23a0acb7e4d46712e092a4319 have failed. See details.\n. :x: Tests for the commit 0851b633c5442cc23a0acb7e4d46712e092a4319 have failed. See details.\n. :x: Tests for the commit 0851b633c5442cc23a0acb7e4d46712e092a4319 have failed. See details.\n. :x: Tests for the commit 0851b633c5442cc23a0acb7e4d46712e092a4319 have failed. See details.\n. :x: Tests for the commit ea886b050cf69e1d519adf8cff134c6a5176fedd have failed. See details.\n. :x: Tests for the commit c432e79b600ea685404bc83c141a0135136cac1b have failed. See details.\n. :white_check_mark: Tests for the commit c432e79b600ea685404bc83c141a0135136cac1b have passed. See details.\n. :x: Tests for the commit 6c0a9f5aa67d65f39255206e5e5f61a0fdca2697 have failed. See details.\n. :x: Tests for the commit 6c0a9f5aa67d65f39255206e5e5f61a0fdca2697 have failed. See details.\n. :x: Tests for the commit 6c0a9f5aa67d65f39255206e5e5f61a0fdca2697 have failed. See details.\n. :x: Tests for the commit 672e406429ba5d7eba3932410f797da315a8a811 have failed. See details.\n. :white_check_mark: Tests for the commit 8db09727843b9ed36da319014d6e397f6c5c1bb7 have passed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :x: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have failed. See details.\n. :white_check_mark: Tests for the commit 4dedf09ebacccc939b073d5dd39b42e666f877c0 have passed. See details.\n. :x: Tests for the commit 857a665ab92b35ba1720c89d10a3e4dc8095967e have failed. See details.\n. :x: Tests for the commit da89a1b42c71b2af27c840d5ee0f421d605dde10 have failed. See details.\n. :x: Tests for the commit da89a1b42c71b2af27c840d5ee0f421d605dde10 have failed. See details.\n. :x: Tests for the commit da89a1b42c71b2af27c840d5ee0f421d605dde10 have failed. See details.\n. :white_check_mark: Tests for the commit da89a1b42c71b2af27c840d5ee0f421d605dde10 have passed. See details.\n. :x: Tests for the commit b0863433f0b5dd11815f8b185130d9789e172ded have failed. See details.\n. :x: Tests for the commit 41fa162110602dd1a254bac4bebbf28371cfe50c have failed. See details.\n. :x: Tests for the commit 41fa162110602dd1a254bac4bebbf28371cfe50c have failed. See details.\n. :x: Tests for the commit d4b8d4e21c06ed9dbcdedc4764da85b1e0e5b4d1 have failed. See details.\n. :white_check_mark: Tests for the commit d4b8d4e21c06ed9dbcdedc4764da85b1e0e5b4d1 have passed. See details.\n. :x: Tests for the commit 6aa98e21cb7df8455c4d40c12b7b0a785e01820a have failed. See details.\n. :white_check_mark: Tests for the commit 4bf40a12ee552b255e81a8255343fee336b576f6 have passed. See details.\n. :white_check_mark: Tests for the commit 57ebac28c27b365f0479bb84e90ec7eab69f9a8a have passed. See details.\n. :white_check_mark: Tests for the commit 57ebac28c27b365f0479bb84e90ec7eab69f9a8a have passed. See details.\n. :x: Tests for the commit 0da7af55412d56e392dbbf6c0634fc8fb4cda48d have failed. See details.\n. :x: Tests for the commit 0a91a8a33c872ca2977a3d5af8a85a475ba3454d have failed. See details.\n. :x: Tests for the commit 0a91a8a33c872ca2977a3d5af8a85a475ba3454d have failed. See details.\n. :x: Tests for the commit 0a91a8a33c872ca2977a3d5af8a85a475ba3454d have failed. See details.\n. :white_check_mark: Tests for the commit 0a91a8a33c872ca2977a3d5af8a85a475ba3454d have passed. See details.\n. :x: Tests for the commit 2e9993bd40a2a7f61371f1ab9fa607bb3d4c5004 have failed. See details.\n. :white_check_mark: Tests for the commit 2e9993bd40a2a7f61371f1ab9fa607bb3d4c5004 have passed. See details.\n. :x: Tests for the commit 76b87dd504a9e50d8ce63bbc07cc3872b5853ecf have failed. See details.\n. :x: Tests for the commit 5124e8da8d58656580b4d5f84fdc594ad02c00c5 have failed. See details.\n. :x: Tests for the commit 1809fffa1d0a35b5b7a77826073453f395978a57 have failed. See details.\n. :x: Tests for the commit b196e9cc035ef3f6cafa3ee86e9e4995428f4ba9 have failed. See details.\n. :x: Tests for the commit b196e9cc035ef3f6cafa3ee86e9e4995428f4ba9 have failed. See details.\n. :white_check_mark: Tests for the commit b196e9cc035ef3f6cafa3ee86e9e4995428f4ba9 have passed. See details.\n. :x: Tests for the commit d72491e51d804dbf1bb95da6702b8666c1a93ace have failed. See details.\n. :x: Tests for the commit 6902a3ed09f926f43e005491e70ce7239de46c51 have failed. See details.\n. :white_check_mark: Tests for the commit c9eb092bd6882a88842f977312fd3685f96adb53 have passed. See details.\n. :x: Tests for the commit ed9e218f2b6f4e373e0a67b3bee3b652ba5f7c9c have failed. See details.\n. :x: Tests for the commit ed9e218f2b6f4e373e0a67b3bee3b652ba5f7c9c have failed. See details.\n. :white_check_mark: Tests for the commit ed9e218f2b6f4e373e0a67b3bee3b652ba5f7c9c have passed. See details.\n. :x: Tests for the commit d1a9ed1e0f3b02d58c03866623893bb5f672318e have failed. See details.\n. :white_check_mark: Tests for the commit d1a9ed1e0f3b02d58c03866623893bb5f672318e have passed. See details.\n. :white_check_mark: Tests for the commit 538cde40253c58d45d96be143c270886221e8b18 have passed. See details.\n. :x: Tests for the commit c313e55e81157150c1cf74f998196328fa67402c have failed. See details.\n. :x: Tests for the commit c313e55e81157150c1cf74f998196328fa67402c have failed. See details.\n. :x: Tests for the commit c313e55e81157150c1cf74f998196328fa67402c have failed. See details.\n. :white_check_mark: Tests for the commit c313e55e81157150c1cf74f998196328fa67402c have passed. See details.\n. :x: Tests for the commit 8b3953a16d688ba35e2925baa09c84ab8ff708ac have failed. See details.\n. :x: Tests for the commit 12b4fed73cf65c4197aa1bdd2122337a163f6491 have failed. See details.\n. :white_check_mark: Tests for the commit 5c065c1a1b63c5e82f711dabdc509fcd97045654 have passed. See details.\n. :x: Tests for the commit c7c489895bb663c412b7fcb40feae0db2f2cd120 have failed. See details.\n. :x: Tests for the commit c7c489895bb663c412b7fcb40feae0db2f2cd120 have failed. See details.\n. :white_check_mark: Tests for the commit c7c489895bb663c412b7fcb40feae0db2f2cd120 have passed. See details.\n. :x: Tests for the commit 09d4e62075656403a6784a127d62c9f7df497979 have failed. See details.\n. :x: Tests for the commit 09d4e62075656403a6784a127d62c9f7df497979 have failed. See details.\n. :white_check_mark: Tests for the commit 09d4e62075656403a6784a127d62c9f7df497979 have passed. See details.\n. :white_check_mark: Tests for the commit e39a41c04ac345d75d591ee05546fcfda6658a40 have passed. See details.\n. :x: Tests for the commit 56773eb535077f60d0925e19db800707a17dcb81 have failed. See details.\n. :white_check_mark: Tests for the commit 56773eb535077f60d0925e19db800707a17dcb81 have passed. See details.\n. :x: Tests for the commit 7afb857ef14c479b47738a72f9b1d377c1df584c have failed. See details.\n. :x: Tests for the commit 519661b120e8d8648be28ba5af6891ab77abf91b have failed. See details.\n. :white_check_mark: Tests for the commit 519661b120e8d8648be28ba5af6891ab77abf91b have passed. See details.\n. :white_check_mark: Tests for the commit 4fcafd6a8188c92cbaeabb6711f2d818b521a4a5 have passed. See details.\n. :white_check_mark: Tests for the commit 738e6bf4c5c7ae2806f084fd3320686b7132c421 have passed. See details.\n. :white_check_mark: Tests for the commit 7ce1cb9b6a31dae8befa925448dadfffd24ea3d2 have passed. See details.\n. :white_check_mark: Tests for the commit 09f96ac7cc6e25215c15f65eae7cc5d8c16c7a83 have passed. See details.\n. :x: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have failed. See details.\n. :x: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have failed. See details.\n. :x: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have failed. See details.\n. :x: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have failed. See details.\n. :white_check_mark: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have passed. See details.\n. :white_check_mark: Tests for the commit 15dbe23fc306822ad6efabd3eb8d145790bf6565 have passed. See details.\n. :x: Tests for the commit 505db4ed3676888def66821e017cc92c1a37161a have failed. See details.\n. :x: Tests for the commit 505db4ed3676888def66821e017cc92c1a37161a have failed. See details.\n. :x: Tests for the commit 77bd15de34975516517bbf1f5be56d174b7045fe have failed. See details.\n. :white_check_mark: Tests for the commit 77bd15de34975516517bbf1f5be56d174b7045fe have passed. See details.\n. :white_check_mark: Tests for the commit b0ed0e70ae91cbb1244619c7d68f85cf7d25c8bf have passed. See details.\n. :white_check_mark: Tests for the commit ab6a0df41da001d339bec17553bdf7dd69780afe have passed. See details.\n. :x: Tests for the commit 8ed8e8082e4a34704edd4a1a42e4124280b4978b have failed. See details.\n. :white_check_mark: Tests for the commit 00d2138b7513d142f1abbc2d07f7860c3e74ffd3 have passed. See details.\n. :white_check_mark: Tests for the commit 0ab350e0994a3099f7a0fbd3aa3805f6ebc9d293 have passed. See details.\n. :x: Tests for the commit 88d2669d97c7003b8769f89321a1a5050ce9b755 have failed. See details.\n. :white_check_mark: Tests for the commit 88d2669d97c7003b8769f89321a1a5050ce9b755 have passed. See details.\n. :x: Tests for the commit 60cd6bd05e11b251ec371bbb288effa6a12258ac have failed. See details.\n. :white_check_mark: Tests for the commit 60cd6bd05e11b251ec371bbb288effa6a12258ac have passed. See details.\n. :x: Tests for the commit c002130273285f3d0e9e0163b6094d55e17feaa4 have failed. See details.\n. :white_check_mark: Tests for the commit c002130273285f3d0e9e0163b6094d55e17feaa4 have passed. See details.\n. :white_check_mark: Tests for the commit e76cd80ea37794d1b3023c3d4b544d5761cf0134 have passed. See details.\n. :x: Tests for the commit ebf82cf440aec5b4e93e6d117d9d99399e3c3c04 have failed. See details.\n. :white_check_mark: Tests for the commit ece409e0b332b651139d47304de3dd5527610e00 have passed. See details.\n. :white_check_mark: Tests for the commit b541cff64f655d6b9c5e01ee537e5554ce1b94d0 have passed. See details.\n. :x: Tests for the commit fbee465cae53abebf6d7e1096aef4bcac99e15c4 have failed. See details.\n. :white_check_mark: Tests for the commit a47b8bc50e5ab478d22cf2385636ce2409cef70b have passed. See details.\n. :white_check_mark: Tests for the commit dc56ce0cf94ddcf9cb0e266ac7107828230f73f1 have passed. See details.\n. :x: Tests for the commit e57c09226aedae2e363cb777ca641efce58896b3 have failed. See details.\n. :x: Tests for the commit e57c09226aedae2e363cb777ca641efce58896b3 have failed. See details.\n. :white_check_mark: Tests for the commit ceb8c10c34579b09be4a5ddace5a39c0676e144d have passed. See details.\n. :x: Tests for the commit a133a1c8131fc25ece2cefd6135b8b799af0f983 have failed. See details.\n. :white_check_mark: Tests for the commit a133a1c8131fc25ece2cefd6135b8b799af0f983 have passed. See details.\n. :x: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have failed. See details.\n. :x: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have failed. See details.\n. :x: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have failed. See details.\n. :x: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have failed. See details.\n. :x: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have failed. See details.\n. :white_check_mark: Tests for the commit 73f234ca0203106ea0db49c1d146f760fa1337cc have passed. See details.\n. :x: Tests for the commit b500fbb8182a1736ee7dd72092fd4c8f38a66a73 have failed. See details.\n. :white_check_mark: Tests for the commit b500fbb8182a1736ee7dd72092fd4c8f38a66a73 have passed. See details.\n. :x: Tests for the commit 45cb1ae998c1db16a7c44545fc13e89c4a19101b have failed. See details.\n. :x: Tests for the commit ada0c5f437bb53231b896ccc47d8cebd5e98832f have failed. See details.\n. :x: Tests for the commit ada0c5f437bb53231b896ccc47d8cebd5e98832f have failed. See details.\n. :x: Tests for the commit bc8de2b32584b4c21fccdda80d5da4352b0253b7 have failed. See details.\n. :white_check_mark: Tests for the commit bc8de2b32584b4c21fccdda80d5da4352b0253b7 have passed. See details.\n. :white_check_mark: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have passed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :white_check_mark: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have passed. See details.\n. :white_check_mark: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have passed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :x: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have failed. See details.\n. :white_check_mark: Tests for the commit f233da7be3d5dede0a61989d0144d6201a8aea34 have passed. See details.\n. :white_check_mark: Tests for the commit 9ba284a9af705b768ce737cbb106ce45b0721f5d have passed. See details.\n. :white_check_mark: Tests for the commit cc004988309e0c628ada2d39085fd49060898374 have passed. See details.\n. :x: Tests for the commit 983c312fa7396583128b9a77604cb8cf8649aef3 have failed. See details.\n. :white_check_mark: Tests for the commit 983c312fa7396583128b9a77604cb8cf8649aef3 have passed. See details.\n. :x: Tests for the commit 7717050aabdb4a64bf705c02f217424ad794acee have failed. See details.\n. :x: Tests for the commit 7717050aabdb4a64bf705c02f217424ad794acee have failed. See details.\n. :white_check_mark: Tests for the commit 7717050aabdb4a64bf705c02f217424ad794acee have passed. See details.\n. :x: Tests for the commit e4e280f01de50706b950a755309c24647de8e8dd have failed. See details.\n. :x: Tests for the commit e4e280f01de50706b950a755309c24647de8e8dd have failed. See details.\n. :white_check_mark: Tests for the commit 35a6b2397a5393e19e0edaaa57777bd03b9fc196 have passed. See details.\n. :x: Tests for the commit 8cbd12475033d65cb26228bcc9f113c7d7a8d0b3 have failed. See details.\n. :white_check_mark: Tests for the commit 0b59a53acf0b59652ac8b59cf54cd57f6f75187f have passed. See details.\n. :white_check_mark: Tests for the commit b2c360706e59448a024cfde43ce48a5db10f55b2 have passed. See details.\n. :x: Tests for the commit 6b9d0496c3fff2e0252d4b130d200861cafb6d5c have failed. See details.\n. :x: Tests for the commit 2f9fee4d8299eff33f4e441bae53a1a924faa09a have failed. See details.\n. :x: Tests for the commit 85f986df1ec22472a48ea413c372de2d53103e05 have failed. See details.\n. :x: Tests for the commit b7e3e9f6d12c3bad6e0751d3bfae0e091c150c1f have failed. See details.\n. :white_check_mark: Tests for the commit caf3f077ba7526e1cbfed4f297471b8174b163d0 have passed. See details.\n. :white_check_mark: Tests for the commit 2a2abe46528d35a48aa7118de6caf43357e9f4e9 have passed. See details.\n. :x: Tests for the commit 6c98200d769d3d00be9e469b94437755eeedaa91 have failed. See details.\n. :white_check_mark: Tests for the commit 6c98200d769d3d00be9e469b94437755eeedaa91 have passed. See details.\n. :x: Tests for the commit a3541fbaf60b9c2210807c918a320bc73963b16f have failed. See details.\n. :white_check_mark: Tests for the commit a3541fbaf60b9c2210807c918a320bc73963b16f have passed. See details.\n. :white_check_mark: Tests for the commit 6bcac7bbbcb8d90eb96449c58f72555d640043f9 have passed. See details.\n. :white_check_mark: Tests for the commit fd3577cac5bcabe2d7e4d587814208865d845d47 have passed. See details.\n. :x: Tests for the commit 9a187e52cddd081fb31b7210fb01093ff67c5b29 have failed. See details.\n. :x: Tests for the commit 140fc073faddb44982ce77c2a38d6b4eeee69f6a have failed. See details.\n. :x: Tests for the commit 140fc073faddb44982ce77c2a38d6b4eeee69f6a have failed. See details.\n. :white_check_mark: Tests for the commit 140fc073faddb44982ce77c2a38d6b4eeee69f6a have passed. See details.\n. :white_check_mark: Tests for the commit 1f75b79d97ee57b09a53e5009eb605baa9682771 have passed. See details.\n. :white_check_mark: Tests for the commit 9e0f1640da2bec76e8e55e7adb5f3341663157a8 have passed. See details.\n. :white_check_mark: Tests for the commit 9e0f1640da2bec76e8e55e7adb5f3341663157a8 have passed. See details.\n. :white_check_mark: Tests for the commit 9e0f1640da2bec76e8e55e7adb5f3341663157a8 have passed. See details.\n. :white_check_mark: Tests for the commit 9e0f1640da2bec76e8e55e7adb5f3341663157a8 have passed. See details.\n. :x: Tests for the commit 7650f952c6dd65d0cb2aa5ca579e7e93bbd11439 have failed. See details.\n. :x: Tests for the commit 7650f952c6dd65d0cb2aa5ca579e7e93bbd11439 have failed. See details.\n. :white_check_mark: Tests for the commit 6b57f58351f0938125d87d5c9fa55b0a0b321c97 have passed. See details.\n. :x: Tests for the commit c6fe4ac894fc19596c77b483922c241dd270a47c have failed. See details.\n. :white_check_mark: Tests for the commit c6fe4ac894fc19596c77b483922c241dd270a47c have passed. See details.\n. :x: Tests for the commit f5c1f0c06083b83ba631bcede124283ae41b5340 have failed. See details.\n. :x: Tests for the commit f5c1f0c06083b83ba631bcede124283ae41b5340 have failed. See details.\n. :white_check_mark: Tests for the commit f5c1f0c06083b83ba631bcede124283ae41b5340 have passed. See details.\n. :white_check_mark: Tests for the commit 51bf9949f409cf2bb79e9dacfbeab3b36b401216 have passed. See details.\n. :white_check_mark: Tests for the commit 04e70d2528ae64a818c88c49c8be5687a1010c30 have passed. See details.\n. :white_check_mark: Tests for the commit 153ebb4b2d484d184112b54b683c21bbe5056e4d have passed. See details.\n. :x: Tests for the commit 4a640cd8487459cfe1b0f241948634d70a5dd684 have failed. See details.\n. :white_check_mark: Tests for the commit 2fdbdc47b79e986f56cf3a14f6476ba737b2dd12 have passed. See details.\n. :white_check_mark: Tests for the commit 4dd45113e437d3044cb9895da45f242234c074d7 have passed. See details.\n. :x: Tests for the commit b421abb0c8cac3c50b3bfb3438bb480f83b88fa5 have failed. See details.\n. :white_check_mark: Tests for the commit b421abb0c8cac3c50b3bfb3438bb480f83b88fa5 have passed. See details.\n. :white_check_mark: Tests for the commit b9cdd839286957f049fc2ed3c566472ae22563b9 have passed. See details.\n. :x: Tests for the commit e2f4bc915c45dc89e009b05a24714b115590e1f8 have failed. See details.\n. :x: Tests for the commit e2f4bc915c45dc89e009b05a24714b115590e1f8 have failed. See details.\n. :x: Tests for the commit e2f4bc915c45dc89e009b05a24714b115590e1f8 have failed. See details.\n. :x: Tests for the commit e2f4bc915c45dc89e009b05a24714b115590e1f8 have failed. See details.\n. :white_check_mark: Tests for the commit e2f4bc915c45dc89e009b05a24714b115590e1f8 have passed. See details.\n. :x: Tests for the commit d03cb5f9af57050f68278a2f75dbc02b30681fa4 have failed. See details.\n. :white_check_mark: Tests for the commit 319f1b7d3743d25bcc561e93ff44ca44d9e9bdba have passed. See details.\n. :white_check_mark: Tests for the commit 344a069d92496b923688d80c341345f0e59719e2 have passed. See details.\n. :x: Tests for the commit f20b82f7123d884c76d4a7223e0b197ea24c4fcb have failed. See details.\n. :x: Tests for the commit f20b82f7123d884c76d4a7223e0b197ea24c4fcb have failed. See details.\n. :white_check_mark: Tests for the commit 1f0051275ddcc8851925cdb63ec4504d973394aa have passed. See details.\n. :x: Tests for the commit 74c9090770572eec262dc3bee00da4ca977709a3 have failed. See details.\n. :white_check_mark: Tests for the commit 74c9090770572eec262dc3bee00da4ca977709a3 have passed. See details.\n. :white_check_mark: Tests for the commit 8446b0a81e80ecb26e408e7fbde2df8c793893bc have passed. See details.\n. :white_check_mark: Tests for the commit a4eef17a5cf7c0d7cbf8ef5a99af78e7257b3cd6 have passed. See details.\n. :x: Tests for the commit 71b3af8aa18ec52292daafa2cd387d159e642a6f have failed. See details.\n. :white_check_mark: Tests for the commit 71b3af8aa18ec52292daafa2cd387d159e642a6f have passed. See details.\n. :white_check_mark: Tests for the commit a1b003c4ae21dfb640c588efb231e746b1a27844 have passed. See details.\n. :white_check_mark: Tests for the commit bee36c1f0d9faaa43affcf2860c5726a2be6a6e4 have passed. See details.\n. :white_check_mark: Tests for the commit 8d677365a25b9cadea60950e69a16d1922395bc2 have passed. See details.\n. :x: Tests for the commit df3211b79935af9d2c5e3d290cb1e83f6c082c29 have failed. See details.\n. :x: Tests for the commit 221e366426dea0881e1f34a67b0089ee3f1cada8 have failed. See details.\n. :white_check_mark: Tests for the commit 221e366426dea0881e1f34a67b0089ee3f1cada8 have passed. See details.\n. :white_check_mark: Tests for the commit 11ab33a1782218394cb09dae1f13583c9be68b6d have passed. See details.\n. :white_check_mark: Tests for the commit 240aaa62f714353955fd0ea14d3668aebb768890 have passed. See details.\n. :white_check_mark: Tests for the commit 46f051d360d358fc09e6d4dcf0ee0dd04271601e have passed. See details.\n. :white_check_mark: Tests for the commit bb58606e954631a13a89981e97b5daf27e3c6725 have passed. See details.\n. :x: Tests for the commit 67b0e9592393e5127f46d5be9943fc80ba972b36 have failed. See details.\n. :white_check_mark: Tests for the commit cbb9a842dd0fd10a18de37dda629f6a013d0b79d have passed. See details.\n. :white_check_mark: Tests for the commit cbb9a842dd0fd10a18de37dda629f6a013d0b79d have passed. See details.\n. :x: Tests for the commit cbb9a842dd0fd10a18de37dda629f6a013d0b79d have failed. See details.\n. :white_check_mark: Tests for the commit cbb9a842dd0fd10a18de37dda629f6a013d0b79d have passed. See details.\n. :white_check_mark: Tests for the commit 6c257d19e3903b851d950f41fc6488a47500ed72 have passed. See details.\n. :white_check_mark: Tests for the commit 6c257d19e3903b851d950f41fc6488a47500ed72 have passed. See details.\n. :white_check_mark: Tests for the commit 839ed5573ab82c3b0a53f3d6e6134bc69b6964c9 have passed. See details.\n. :x: Tests for the commit c1f1c54281e6918d92bdfb6584d27490bc6e276e have failed. See details.\n. :white_check_mark: Tests for the commit c1f1c54281e6918d92bdfb6584d27490bc6e276e have passed. See details.\n. :x: Tests for the commit 3ba747708ddc529cf51a30125b756f7705cd5e29 have failed. See details.\n. :x: Tests for the commit 3ba747708ddc529cf51a30125b756f7705cd5e29 have failed. See details.\n. :white_check_mark: Tests for the commit 036579a7c0aa582121b863594a0fd62bcdc372cd have passed. See details.\n. :white_check_mark: Tests for the commit 7b1ae3b3b741a35802a6821df4e01f40f665a098 have passed. See details.\n. :white_check_mark: Tests for the commit 387a861275ba3c4e1a0dd79cd9a56aaec7217862 have passed. See details.\n. :white_check_mark: Tests for the commit 316c20b34b0a0d531819a652db35ab511a08cec9 have passed. See details.\n. :x: Tests for the commit 72762250386dbd7d9e45460b3294929d3426eada have failed. See details.\n. :x: Tests for the commit b21b4f1fd282a79d76f0add1e4bff1b3fdfc9c09 have failed. See details.\n. :x: Tests for the commit c4803e6678aa1dfe21fb50c38b54d16ee0ea93fb have failed. See details.\n. :x: Tests for the commit a06c0937ab885ab311bb54eeb01ad50b2946922b have failed. See details.\n. :x: Tests for the commit 4a01a7544a504cfd5e51826dce1fce6de26c082e have failed. See details.\n. :x: Tests for the commit 97e73a2a66ee46d0a39c8f8217786e92ccb41f30 have failed. See details.\n. :x: Tests for the commit 90ec5d0ff7137dbab34d61df60523d8462724c55 have failed. See details.\n. :x: Tests for the commit fc6192ff31d33784f3ad6b72b9982759c4a3971d have failed. See details.\n. :x: Tests for the commit ccfef9e6cf445f5f72d4d4640e87092133eb88ab have failed. See details.\n. :x: Tests for the commit b457e38c94962759b23f3ea09f4fce0ce5180923 have failed. See details.\n. :x: Tests for the commit b457e38c94962759b23f3ea09f4fce0ce5180923 have failed. See details.\n. :white_check_mark: Tests for the commit e8033ac3f9c04da9d74e513d8d54edfac5c78126 have passed. See details.\n. :white_check_mark: Tests for the commit 380a6a4c29dc0add16a4442cca31a87c6ef3bb46 have passed. See details.\n. :x: Tests for the commit 2538802f0453c7f9bb5f80efaad63065252b4f8b have failed. See details.\n. :x: Tests for the commit 2538802f0453c7f9bb5f80efaad63065252b4f8b have failed. See details.\n. :white_check_mark: Tests for the commit 2538802f0453c7f9bb5f80efaad63065252b4f8b have passed. See details.\n. :white_check_mark: Tests for the commit 4e9a04ff3983514c8aa25b976c489d3988a52dfb have passed. See details.\n. :x: Tests for the commit fa54252c100b55f500e22119348d36615218f492 have failed. See details.\n. :white_check_mark: Tests for the commit fa54252c100b55f500e22119348d36615218f492 have passed. See details.\n. :x: Tests for the commit 3ab3ca53314e1f4c97d536a22f53fbc871c1d968 have failed. See details.\n. :white_check_mark: Tests for the commit c18e91b84bc8409084c61ce21fe7a74dd18e5c8e have passed. See details.\n. :white_check_mark: Tests for the commit 8bedc016df95be859f8abbad40d9fbcb7bfcf133 have passed. See details.\n. :white_check_mark: Tests for the commit 40fb05957be28862c5ba850d80eebc503442b0ee have passed. See details.\n. :white_check_mark: Tests for the commit ea70dd78836ddd218bad41e868793e4c6d665125 have passed. See details.\n. :white_check_mark: Tests for the commit ea70dd78836ddd218bad41e868793e4c6d665125 have passed. See details.\n. :x: Tests for the commit 9797d18e78d9d5b543183bcbc30ae42c46cc9c4b have failed. See details.\n. :x: Tests for the commit 42a0ba0f2708f99333c2dc3286b98d23878d0f3f have failed. See details.\n. :white_check_mark: Tests for the commit 42a0ba0f2708f99333c2dc3286b98d23878d0f3f have passed. See details.\n. :white_check_mark: Tests for the commit 42a0ba0f2708f99333c2dc3286b98d23878d0f3f have passed. See details.\n. :white_check_mark: Tests for the commit 42a0ba0f2708f99333c2dc3286b98d23878d0f3f have passed. See details.\n. :white_check_mark: Tests for the commit 42a0ba0f2708f99333c2dc3286b98d23878d0f3f have passed. See details.\n. :x: Tests for the commit 78953c93626b0c488c0851fdf4ea0192fc4342e9 have failed. See details.\n. :white_check_mark: Tests for the commit 26893df0007c9a21cd6ad9cddaf4f8addd65cea8 have passed. See details.\n. :white_check_mark: Tests for the commit 26893df0007c9a21cd6ad9cddaf4f8addd65cea8 have passed. See details.\n. :white_check_mark: Tests for the commit 7f9982e344257a6601e1529c5481ec7c69afe071 have passed. See details.\n. :white_check_mark: Tests for the commit d4f980a92fa1ce5730226275aa004b7c20dab421 have passed. See details.\n. :white_check_mark: Tests for the commit b6cf62d5e18b8f45fff6ff67c48f0924d07026b7 have passed. See details.\n. :x: Tests for the commit 43dcb49749d1d2698ee333419aac895eaa6b0b69 have failed. See details.\n. :white_check_mark: Tests for the commit 43dcb49749d1d2698ee333419aac895eaa6b0b69 have passed. See details.\n. :x: Tests for the commit 0a2b2dff88725c239610cd7cab1bcd8ea49be75c have failed. See details.\n. :x: Tests for the commit 3635dbe69e0c563c1d94f2a5b04336c6d1eb2ba4 have failed. See details.\n. :x: Tests for the commit 1f8c3c7a626cf38ccef0028b5446c8b984e692e7 have failed. See details.\n. :white_check_mark: Tests for the commit 1f8c3c7a626cf38ccef0028b5446c8b984e692e7 have passed. See details.\n. :white_check_mark: Tests for the commit 73af5756ecb69fa219c5cd74b04f1b9b4b2665ea have passed. See details.\n. :white_check_mark: Tests for the commit 7eab10051be5cadd632649c16d9e32b31413eff1 have passed. See details.\n. :white_check_mark: Tests for the commit ff387e61e352187e80674ee5ba7cc8f81011a37d have passed. See details.\n. :white_check_mark: Tests for the commit 2f65c9de187464bdd92b7ab66651934ecfd09a2a have passed. See details.\n. :white_check_mark: Tests for the commit f92653347db0db0a1a610c07f918a5a26f657c43 have passed. See details.\n. :white_check_mark: Tests for the commit 1ade6f60d1f051ef995904f49ee1aa31d2040bc7 have passed. See details.\n. :white_check_mark: Tests for the commit 80a1c616927a0287c3da7b927fa5298ebbc52cc2 have passed. See details.\n. :x: Tests for the commit e7dc5e70605ffe5901ef719654be0e9f18555389 have failed. See details.\n. :white_check_mark: Tests for the commit e7dc5e70605ffe5901ef719654be0e9f18555389 have passed. See details.\n. :white_check_mark: Tests for the commit 8d0786a9a04fce500db0ab0fe2c42cf910280153 have passed. See details.\n. :white_check_mark: Tests for the commit 1e342d075880efae6aa8351497aa5f416e318291 have passed. See details.\n. :white_check_mark: Tests for the commit ca0a91fb853c37adf49514a974f258cf9d0b8bc4 have passed. See details.\n. :white_check_mark: Tests for the commit ca0a91fb853c37adf49514a974f258cf9d0b8bc4 have passed. See details.\n. :white_check_mark: Tests for the commit ca0a91fb853c37adf49514a974f258cf9d0b8bc4 have passed. See details.\n. :white_check_mark: Tests for the commit 8f934a6cc584cc23d7f2a07309f68961fa3fe9dc have passed. See details.\n. :white_check_mark: Tests for the commit 8f934a6cc584cc23d7f2a07309f68961fa3fe9dc have passed. See details.\n. :white_check_mark: Tests for the commit 8f934a6cc584cc23d7f2a07309f68961fa3fe9dc have passed. See details.\n. :x: Tests for the commit e6a8f83d8ba6d0e3bff583c38adcd503645b9e36 have failed. See details.\n. :x: Tests for the commit 194edc4798a66c4d7878f58d5554b11788cffa10 have failed. See details.\n. :white_check_mark: Tests for the commit baaff524bac7ddf4f3ee7626132807a6a00b432b have passed. See details.\n. :x: Tests for the commit 925afcf6556620d859a79b9228beee35de7634e7 have failed. See details.\n. :x: Tests for the commit d69074ec6ce01712a7f1ebd8038bfdf4aecec25b have failed. See details.\n. :x: Tests for the commit e3ae8ab1a74f90eaef4524aa35c7dc6981d6adf7 have failed. See details.\n. :x: Tests for the commit de39707d02bfbea6895e965b3f26cc0aaf3fe1be have failed. See details.\n. :white_check_mark: Tests for the commit fe46ce4291a1ed3c41e4e3f751463d3ec9a8c85e have passed. See details.\n. :white_check_mark: Tests for the commit fe46ce4291a1ed3c41e4e3f751463d3ec9a8c85e have passed. See details.\n. :x: Tests for the commit 95008672b2ddce22bf9a2e8b1c9728d6e5631871 have failed. See details.\n. :x: Tests for the commit 95008672b2ddce22bf9a2e8b1c9728d6e5631871 have failed. See details.\n. :white_check_mark: Tests for the commit 172fdc5d7ec4201a6b9910b40963442c06ada486 have passed. See details.\n. :white_check_mark: Tests for the commit 5184551b39c874b0e6ac9203f224fd82db07378c have passed. See details.\n. :white_check_mark: Tests for the commit fc568c5e1cea44fb0a5f201fe050dfff0c274aa0 have passed. See details.\n. :x: Tests for the commit 07dc85147a74b54f46e12eccf76ad18faa5bcf4a have failed. See details.\n. :x: Tests for the commit d8545e983cef8a89a6b332116a062cd2e2c754d8 have failed. See details.\n. :x: Tests for the commit 40f97a3b884b789b1f1eae77c5fff43446e7c63c have failed. See details.\n. :white_check_mark: Tests for the commit 70d1f35483dc3169291fcc32c5753b9218611e41 have passed. See details.\n. :white_check_mark: Tests for the commit fb730bf12191434ba45a9ecd78bf318cae231696 have passed. See details.\n. :x: Tests for the commit 7297afc3a97272d953678ece43a7b6fec375124f have failed. See details.\n. :x: Tests for the commit 7297afc3a97272d953678ece43a7b6fec375124f have failed. See details.\n. :white_check_mark: Tests for the commit 7297afc3a97272d953678ece43a7b6fec375124f have passed. See details.\n. :x: Tests for the commit 95e28fdf6f5c842a89084114d4d2129d9cbb0de0 have failed. See details.\n. :white_check_mark: Tests for the commit 95e28fdf6f5c842a89084114d4d2129d9cbb0de0 have passed. See details.\n. :white_check_mark: Tests for the commit cfbc8e9da8bef05cae539a72b508117b277f5673 have passed. See details.\n. :white_check_mark: Tests for the commit 49a7bef3e2096a0af1b4f5dc7abae18de5761e2c have passed. See details.\n. :x: Tests for the commit c4c3d16800b888336e693fbf95258f40480415dc have failed. See details.\n. :white_check_mark: Tests for the commit 3717cead1ba3b4671986f30a9196d281363e15b5 have passed. See details.\n. :white_check_mark: Tests for the commit 1251fc297485d72d2d9b0d841a987068a55b6bea have passed. See details.\n. :white_check_mark: Tests for the commit c104fdd50d2685f2c9c83a2000a0c45ec4afd08d have passed. See details.\n. :x: Tests for the commit fd22022df7f407e4019295fae8eee640b7400d94 have failed. See details.\n. :white_check_mark: Tests for the commit fd22022df7f407e4019295fae8eee640b7400d94 have passed. See details.\n. :white_check_mark: Tests for the commit 85fc5cbdf2167704993a84b709f04f9467eadf5b have passed. See details.\n. :white_check_mark: Tests for the commit 10f9ca11ae2c68cd037065bfa434fc52560da8ec have passed. See details.\n. :x: Tests for the commit 629290cb0f8bdad3614a88cc3404671f680511a6 have failed. See details.\n. :white_check_mark: Tests for the commit 2dcfeb01feeb69c666d3fc13d34a3061fe34163c have passed. See details.\n. :x: Tests for the commit ed026d361f0fa7c067f22ed67f8d293341ecfc94 have failed. See details.\n. :x: Tests for the commit 6f4bdc676c940ed75e24dff3986f92bade41771d have failed. See details.\n. :white_check_mark: Tests for the commit 3a1e987599b883c7d7beff5a0e86ecabbba28a94 have passed. See details.\n. :white_check_mark: Tests for the commit a619dbe48791e74cf438146d1303f53b10364aa6 have passed. See details.\n. :x: Tests for the commit 7edfbea0d139164a34be40dc96f060c0c48f2785 have failed. See details.\n. :x: Tests for the commit 7edfbea0d139164a34be40dc96f060c0c48f2785 have failed. See details.\n. :x: Tests for the commit fb8f2e00475adb5d878d045d7e04177ff0aec0d0 have failed. See details.\n. :white_check_mark: Tests for the commit fb8f2e00475adb5d878d045d7e04177ff0aec0d0 have passed. See details.\n. :white_check_mark: Tests for the commit eb94f87c47e1886dec3e242c616693801b8aeb7f have passed. See details.\n. :x: Tests for the commit e6936afcb80548060a216c36696ff48d80bfd523 have failed. See details.\n. :white_check_mark: Tests for the commit e6936afcb80548060a216c36696ff48d80bfd523 have passed. See details.\n. :x: Tests for the commit 5b792e6e7bf67575a70d304bb3e7ec1b73d68c84 have failed. See details.\n. :white_check_mark: Tests for the commit 088cd86874272cf6a9f0c86b6f8d6796b5d42aeb have passed. See details.\n. :x: Tests for the commit bc9f03bcbfd219cd2cf1a7669491636d8ae816c0 have failed. See details.\n. :white_check_mark: Tests for the commit ed769ffba8478817fb1752c1cf714b7979d58b24 have passed. See details.\n. :white_check_mark: Tests for the commit ade2d99f66da761471bb795f8e2cf5fcda61e86a have passed. See details.\n. :white_check_mark: Tests for the commit 28b0b77f72f7973a1dbc9c9939ae8a4d0d6d1042 have passed. See details.\n. :x: Tests for the commit 7176184d3a92497daceec57e50a615c879e7b39a have failed. See details.\n. :x: Tests for the commit e0473f2868be29183815e7dae40c0cbecc5cda5d have failed. See details.\n. :x: Tests for the commit 02419a60de64e074217739569288265c31d9f924 have failed. See details.\n. :x: Tests for the commit 2a7f10f1ec3398eb74693787d33e881ff4b420bc have failed. See details.\n. :white_check_mark: Tests for the commit 78022c009366f8992226510a08d0268ccf1b61a2 have passed. See details.\n. :x: Tests for the commit cf76c46da90c71f85466ffca1f6d918569c48721 have failed. See details.\n. :x: Tests for the commit 44e3f3a8105eddccc912c48000275074824b434a have failed. See details.\n. :white_check_mark: Tests for the commit 4039bccf1496ef75c9c32351491717f4a15a50aa have passed. See details.\n. :x: Tests for the commit 554650bb50dbce0b588e571a321861f5f19c7f50 have failed. See details.\n. :x: Tests for the commit af22f8a9da42999b8eeed3ef065356f6d7b1a9d9 have failed. See details.\n. :white_check_mark: Tests for the commit e59be97c72146c53ca7573e324dc3bc7213967fd have passed. See details.\n. :x: Tests for the commit dc31a9c7b9a5f99a616a31bc9bf5935dacea3c72 have failed. See details.\n. :x: Tests for the commit 7e4fdd99cf9f2699c2f6d709d69348c43b7ab947 have failed. See details.\n. :white_check_mark: Tests for the commit 4b81fa4c64439372bb46a547fecbd00965d75719 have passed. See details.\n. :white_check_mark: Tests for the commit e6afc1ecfba3005730463f504ab13a05bc9a1bc0 have passed. See details.\n. :x: Tests for the commit 76c1792c65916f53c76855245735fa6b185a1eb0 have failed. See details.\n. :x: Tests for the commit a41ea9535753baeb8e3a4ef120ec8fcc4c0270ee have failed. See details.\n. :white_check_mark: Tests for the commit 173ce1097a891e5aaf35c17b8808fdb122350ebc have passed. See details.\n. :x: Tests for the commit 67cb5419bce4326d640f9c3ef2cd7a46b42d3fa5 have failed. See details.\n. :white_check_mark: Tests for the commit 67cb5419bce4326d640f9c3ef2cd7a46b42d3fa5 have passed. See details.\n. :x: Tests for the commit 58ae2bc5c583d21250969e6b1211334092bf4f49 have failed. See details.\n. :x: Tests for the commit 1171b6ac23c3a93140f4cac91c5e2254f85f0c13 have failed. See details.\n. :x: Tests for the commit ba85ecd243564d55204ba572f57e62b84afef1d3 have failed. See details.\n. :x: Tests for the commit 4c71047dd1e962a15de397c6eca2de39b2c3c7eb have failed. See details.\n. :x: Tests for the commit 4c71047dd1e962a15de397c6eca2de39b2c3c7eb have failed. See details.\n. :white_check_mark: Tests for the commit 4c71047dd1e962a15de397c6eca2de39b2c3c7eb have passed. See details.\n. :x: Tests for the commit 48672bf58978d918ec97e6c906617e3ba2041ac1 have failed. See details.\n. :white_check_mark: Tests for the commit 48672bf58978d918ec97e6c906617e3ba2041ac1 have passed. See details.\n. :white_check_mark: Tests for the commit f1504858e89cc17ef85649761ca53ab38a6aa88e have passed. See details.\n. :x: Tests for the commit 1c605e7f75728ffcebfc29799b181d259b0f1ba3 have failed. See details.\n. :x: Tests for the commit 1c605e7f75728ffcebfc29799b181d259b0f1ba3 have failed. See details.\n. :white_check_mark: Tests for the commit 1c605e7f75728ffcebfc29799b181d259b0f1ba3 have passed. See details.\n. :x: Tests for the commit c7f085eef143938e01daa5e8ec7506c60801899c have failed. See details.\n. :x: Tests for the commit c2ca38c4410025fe145277a937c7d7149e2eab50 have failed. See details.\n. :x: Tests for the commit cd60f8254bdb07fcb677d85ee0da2327c9db15fe have failed. See details.\n. :x: Tests for the commit cd60f8254bdb07fcb677d85ee0da2327c9db15fe have failed. See details.\n. :x: Tests for the commit cd60f8254bdb07fcb677d85ee0da2327c9db15fe have failed. See details.\n. :x: Tests for the commit cd60f8254bdb07fcb677d85ee0da2327c9db15fe have failed. See details.\n. :x: Tests for the commit 91fee7905ab9bb54e1c3309b4ce541556e5935f1 have failed. See details.\n. :x: Tests for the commit 91fee7905ab9bb54e1c3309b4ce541556e5935f1 have failed. See details.\n. :x: Tests for the commit 91fee7905ab9bb54e1c3309b4ce541556e5935f1 have failed. See details.\n. :white_check_mark: Tests for the commit e4cca5303730a2f4a58c36f56786fe93932c994f have passed. See details.\n. :x: Tests for the commit 964aa936711896734da2ff55527090f160265460 have failed. See details.\n. :white_check_mark: Tests for the commit 964aa936711896734da2ff55527090f160265460 have passed. See details.\n. :x: Tests for the commit 19de13ebc177c73b2a6b005c4610515e2fb25c1b have failed. See details.\n. :white_check_mark: Tests for the commit 19de13ebc177c73b2a6b005c4610515e2fb25c1b have passed. See details.\n. :x: Tests for the commit c90172d2e2128c2159699dbd451c87a9fe5c98be have failed. See details.\n. :x: Tests for the commit b685656e38ac6ed648b5a2a6ad30e55133b1afba have failed. See details.\n. :x: Tests for the commit eb6055d0cb01b0fbd6f1cf8e93b21890faf9a6ae have failed. See details.\n. :x: Tests for the commit ae266d03020fd3cae0f3d2b0825727d3b41a9982 have failed. See details.\n. :white_check_mark: Tests for the commit ae266d03020fd3cae0f3d2b0825727d3b41a9982 have passed. See details.\n. :white_check_mark: Tests for the commit f445e8d59c9cb6c79241ca123fc5ab844bb7666d have passed. See details.\n. :x: Tests for the commit 8b2601b0459862cc2a1a236d7afa43dfda0072a5 have failed. See details.\n. :x: Tests for the commit 8b2601b0459862cc2a1a236d7afa43dfda0072a5 have failed. See details.\n. :x: Tests for the commit 0863f1856c447f7465acda5eaff59f0b8f484081 have failed. See details.\n. :white_check_mark: Tests for the commit e262add2e195a78f84002071ab682234f535c45c have passed. See details.\n. :white_check_mark: Tests for the commit c0ae5db43364cad9116dd722052978d180d33e75 have passed. See details.\n. :x: Tests for the commit 8147c771176da0b3334990244d042b0c75828395 have failed. See details.\n. :x: Tests for the commit cc63731dc28b9aa227d21db36f8440c9491529e6 have failed. See details.\n. :white_check_mark: Tests for the commit 540260803a3fdd628f4a4c0cee4de7990087742c have passed. See details.\n. :x: Tests for the commit e0c2690dd6ac09859fa58ae23588b64a925e0d16 have failed. See details.\n. :white_check_mark: Tests for the commit 6c1593032234225d5fb658957738450f1e34ff26 have passed. See details.\n. :white_check_mark: Tests for the commit c2a82ab3712b7621c588521ad6c4064240f9b1ab have passed. See details.\n. :white_check_mark: Tests for the commit a74518bd82121e6de584ef3e1139dbb1700252e9 have passed. See details.\n. :x: Tests for the commit 63f65afe9af5e1edb66402d4da4022e5979cce59 have failed. See details.\n. :x: Tests for the commit 084543c47c35374d3dbf9707d93bd3736bcb2771 have failed. See details.\n. :x: Tests for the commit 084543c47c35374d3dbf9707d93bd3736bcb2771 have failed. See details.\n. :white_check_mark: Tests for the commit 084543c47c35374d3dbf9707d93bd3736bcb2771 have passed. See details.\n. :white_check_mark: Tests for the commit b9a5582cf801d1e47a0c7c61c4b8479324a9ee78 have passed. See details.\n. :x: Tests for the commit a55658748ab8a128f5727cb59cf391a79360fee6 have failed. See details.\n. :white_check_mark: Tests for the commit a55658748ab8a128f5727cb59cf391a79360fee6 have passed. See details.\n. :x: Tests for the commit edc190ab75ee14fadad2d56d7c2c154900a6a2a9 have failed. See details.\n. :x: Tests for the commit 359f90ff56d09ac41426ddc198ddf7a6b709f08b have failed. See details.\n. :white_check_mark: Tests for the commit 359f90ff56d09ac41426ddc198ddf7a6b709f08b have passed. See details.\n. :x: Tests for the commit 03685571ab02bc06d7710db89cb214cdeb822cab have failed. See details.\n. :white_check_mark: Tests for the commit 03685571ab02bc06d7710db89cb214cdeb822cab have passed. See details.\n. :x: Tests for the commit 616897a2dc9f3e696fc0aadaec224c799d8c99ec have failed. See details.\n. :x: Tests for the commit 43f9844e1f5d8d52f11c832666234f7b3aaa4fd5 have failed. See details.\n. :x: Tests for the commit 43f9844e1f5d8d52f11c832666234f7b3aaa4fd5 have failed. See details.\n. :white_check_mark: Tests for the commit 43f9844e1f5d8d52f11c832666234f7b3aaa4fd5 have passed. See details.\n. :white_check_mark: Tests for the commit 90bc9bc42ccd742b2a0790aa3d2aceba541a0db0 have passed. See details.\n. :x: Tests for the commit 5e1427ad49a5f3f3d1ce26a981c9ccd401c290bd have failed. See details.\n. :x: Tests for the commit 5e1427ad49a5f3f3d1ce26a981c9ccd401c290bd have failed. See details.\n. :x: Tests for the commit 5e1427ad49a5f3f3d1ce26a981c9ccd401c290bd have failed. See details.\n. :white_check_mark: Tests for the commit 5e1427ad49a5f3f3d1ce26a981c9ccd401c290bd have passed. See details.\n. :x: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have failed. See details.\n. :x: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have failed. See details.\n. :x: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have failed. See details.\n. :x: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have failed. See details.\n. :x: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have failed. See details.\n. :white_check_mark: Tests for the commit 7c4ff395f1bcc2cf6a0a359527497a84018df274 have passed. See details.\n. :x: Tests for the commit 0e4703b159fd07de8ccb48b12a2c909d3c644e59 have failed. See details.\n. :white_check_mark: Tests for the commit 88f66ccab78363a9f27f6bbcf32bdb0fc4d1fe9e have passed. See details.\n. :x: Tests for the commit e0d2681427ff5b5ebc97cc7156a75a6a047bb2cf have failed. See details.\n. :x: Tests for the commit e0d2681427ff5b5ebc97cc7156a75a6a047bb2cf have failed. See details.\n. :x: Tests for the commit e0d2681427ff5b5ebc97cc7156a75a6a047bb2cf have failed. See details.\n. :x: Tests for the commit e0d2681427ff5b5ebc97cc7156a75a6a047bb2cf have failed. See details.\n. :white_check_mark: Tests for the commit e0d2681427ff5b5ebc97cc7156a75a6a047bb2cf have passed. See details.\n. :x: Tests for the commit bf9492cb6dd78130ded8d9825174f21693b59009 have failed. See details.\n. :white_check_mark: Tests for the commit bf9492cb6dd78130ded8d9825174f21693b59009 have passed. See details.\n. :white_check_mark: Tests for the commit cbe9e3b04ef79ce15d20be7757da9b183038fbf5 have passed. See details.\n. :white_check_mark: Tests for the commit cbe9e3b04ef79ce15d20be7757da9b183038fbf5 have passed. See details.\n. :x: Tests for the commit e9edebf7c18d61aff39cb2073164554e0e8719fa have failed. See details.\n. :x: Tests for the commit 57f84e05b66f9b7ed0a7c18b66448b6bf28c232b have failed. See details.\n. :white_check_mark: Tests for the commit 57f84e05b66f9b7ed0a7c18b66448b6bf28c232b have passed. See details.\n. :x: Tests for the commit 1343fe0c990b59c6e399943c331a816b69af061d have failed. See details.\n. :x: Tests for the commit 1343fe0c990b59c6e399943c331a816b69af061d have failed. See details.\n. :x: Tests for the commit 1343fe0c990b59c6e399943c331a816b69af061d have failed. See details.\n. :white_check_mark: Tests for the commit 1343fe0c990b59c6e399943c331a816b69af061d have passed. See details.\n. :white_check_mark: Tests for the commit 3fb22848a813010d59525c573622b2ad4b7a739f have passed. See details.\n. :x: Tests for the commit 112c74953ce914331009c533deb2e820797cd884 have failed. See details.\n. :white_check_mark: Tests for the commit 112c74953ce914331009c533deb2e820797cd884 have passed. See details.\n. :x: Tests for the commit 112c74953ce914331009c533deb2e820797cd884 have failed. See details.\n. :white_check_mark: Tests for the commit 112c74953ce914331009c533deb2e820797cd884 have passed. See details.\n. :x: Tests for the commit 31ad32462dbdfab094ed25d511159b39b22dc69c have failed. See details.\n. :white_check_mark: Tests for the commit 31ad32462dbdfab094ed25d511159b39b22dc69c have passed. See details.\n. :x: Tests for the commit ccdccb9f2de05ff432b21bd2862c66eecff5697d have failed. See details.\n. :white_check_mark: Tests for the commit ccdccb9f2de05ff432b21bd2862c66eecff5697d have passed. See details.\n. :x: Tests for the commit 7147633ca0d1b11f142838d6f64cda7ace78f4f9 have failed. See details.\n. :x: Tests for the commit ab1a8d6c3e7d861138655f050e3f6e824b8b134d have failed. See details.\n. :white_check_mark: Tests for the commit 4a05dce2dcfc3de255f0ab44d4cf1cd4e95c34cb have passed. See details.\n. :x: Tests for the commit 7cfe596265bda7b20cdd3ed5e1140195c97c89c3 have failed. See details.\n. :white_check_mark: Tests for the commit 7cfe596265bda7b20cdd3ed5e1140195c97c89c3 have passed. See details.\n. :white_check_mark: Tests for the commit 95ec425adf628ecf8721cb9ebf736afa465ef8d1 have passed. See details.\n. :white_check_mark: Tests for the commit 2bbfd061f1d8078c70db470b86fd7d63c32fe1fd have passed. See details.\n. :x: Tests for the commit 178dcfeadbfa522bb0fc478f3764726cdc177254 have failed. See details.\n. :x: Tests for the commit 261963d86e42dff1edf13e645461aed446efb8e2 have failed. See details.\n. :white_check_mark: Tests for the commit 261963d86e42dff1edf13e645461aed446efb8e2 have passed. See details.\n. :white_check_mark: Tests for the commit 77d176bb34da64fecb2b5d16a34c9e84ba0f6b3c have passed. See details.\n. :white_check_mark: Tests for the commit da937bd5b855c9a9e9c406aa22da20bbb9c30246 have passed. See details.\n. :white_check_mark: Tests for the commit da937bd5b855c9a9e9c406aa22da20bbb9c30246 have passed. See details.\n. :x: Tests for the commit 2d22c488cc8807bd3b1eb618b21895e026c68bd5 have failed. See details.\n. :white_check_mark: Tests for the commit 3014120ea15d43f79a5c33611a5b4ede134f6df3 have passed. See details.\n. :white_check_mark: Tests for the commit ced796a859ad53b308f18c2bb3cd8a8cd4482ac0 have passed. See details.\n. :x: Tests for the commit 2152445ad81fcec019792dd8238b3da80a583966 have failed. See details.\n. :white_check_mark: Tests for the commit 2152445ad81fcec019792dd8238b3da80a583966 have passed. See details.\n. :white_check_mark: Tests for the commit da925829144093db27e87a2861e5b4a0afc547ea have passed. See details.\n. :x: Tests for the commit da925829144093db27e87a2861e5b4a0afc547ea have failed. See details.\n. :x: Tests for the commit da925829144093db27e87a2861e5b4a0afc547ea have failed. See details.\n. :white_check_mark: Tests for the commit da925829144093db27e87a2861e5b4a0afc547ea have passed. See details.\n. :white_check_mark: Tests for the commit da925829144093db27e87a2861e5b4a0afc547ea have passed. See details.\n. :white_check_mark: Tests for the commit 36402bfff1bd2c35691aa0483e1cb29dd379dc6e have passed. See details.\n. :x: Tests for the commit 00d058e7947270df05ace8ac012c4d8b8c4e5121 have failed. See details.\n. :x: Tests for the commit db8592fe5bed0c57e55e5344583a28beb1f02b87 have failed. See details.\n. :x: Tests for the commit e41dee43b73799a470b13390065589e372e7d0e8 have failed. See details.\n. :x: Tests for the commit 5a3b9e10786d67f2e8fc397cb6e6ec9e2f3e635f have failed. See details.\n. :white_check_mark: Tests for the commit 02e43f0555b1d0512b706a4a3dfe9f9180d68392 have passed. See details.\n. :white_check_mark: Tests for the commit c588e076fe3a95d26e27122075b87b1e8aabe489 have passed. See details.\n. :white_check_mark: Tests for the commit 6f85dd4bd8aa8bef7980f4b48cfd9d5fc87ea906 have passed. See details.\n. :x: Tests for the commit 6d396c921fece1e4361340f9a1296b8426bced25 have failed. See details.\n. :x: Tests for the commit 1a2b4084f8577ccc57dc80f63850f05f939d1346 have failed. See details.\n. :x: Tests for the commit 90618b3ded74cbf7d8622974c29d6a962d341165 have failed. See details.\n. :white_check_mark: Tests for the commit 347c9df8536af25ce82ee78674cae1ef121086c3 have passed. See details.\n. :x: Tests for the commit fbc6418fb11ad720382885e4e966a5cc3da26b4e have failed. See details.\n. :x: Tests for the commit a4b87bde3b35ac03de9b8581e3ad977bc1dff9e3 have failed. See details.\n. :x: Tests for the commit a4b87bde3b35ac03de9b8581e3ad977bc1dff9e3 have failed. See details.\n. :x: Tests for the commit eaa131df297b0b6469ed0cf3945b27a4b2e4aa22 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :x: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have failed. See details.\n. :white_check_mark: Tests for the commit 75b779c40386c3031a29ca5241ac3abe95afd054 have passed. See details.\n. :white_check_mark: Tests for the commit 6f17f5169fc336e438e9ce72ee4b8922e630a3eb have passed. See details.\n. :x: Tests for the commit b6bb2c738c8b4e5861148e9f6c3c91f5eb0cae39 have failed. See details.\n. :x: Tests for the commit 3decf6d0ad1ec7a43862bcbdb4ab8a241500a614 have failed. See details.\n. :x: Tests for the commit 3decf6d0ad1ec7a43862bcbdb4ab8a241500a614 have failed. See details.\n. :x: Tests for the commit 89ac57efde4c39e9d6d41cab1d8a7911530b7c4a have failed. See details.\n. :white_check_mark: Tests for the commit 9617c4e9aac345299257dd5274ecb9d99863426b have passed. See details.\n. :x: Tests for the commit 208f5075f15c61b73e91c6eb0a0056ca92255e02 have failed. See details.\n. :x: Tests for the commit 0908dea9c3d26598e54c0c53af0faf10156909c6 have failed. See details.\n. :white_check_mark: Tests for the commit e2d134bb71841fd8ed1fdcf99e9748d9c96b8de6 have passed. See details.\n. :white_check_mark: Tests for the commit 85f5ffb7f2dc3f5b7b92fcffc3f11b03362ae175 have passed. See details.\n. :white_check_mark: Tests for the commit 729c8cce15082349e2683e0a5e50a1b7f7ceaa12 have passed. See details.\n. :white_check_mark: Tests for the commit 729c8cce15082349e2683e0a5e50a1b7f7ceaa12 have passed. See details.\n. :white_check_mark: Tests for the commit 451d43a5a57f0462f6f3fe7cbb354d595acfe9fe have passed. See details.\n. :white_check_mark: Tests for the commit d70abbf08c58c4b6c110903581560be118bcc006 have passed. See details.\n. :x: Tests for the commit f8caf1e0edea9431456ab70beb2a452e6f9e1e9d have failed. See details.\n. :x: Tests for the commit c9617953bc327bf34e8218fb251d33f5799cee16 have failed. See details.\n. :x: Tests for the commit 243c029acf69238eb02f9f0992179bce64ef2909 have failed. See details.\n. :white_check_mark: Tests for the commit 243c029acf69238eb02f9f0992179bce64ef2909 have passed. See details.\n. :white_check_mark: Tests for the commit dac0782df9a28d486fadc5366111049a3c9f1e97 have passed. See details.\n. :x: Tests for the commit fadd3e22da0c6be51f8cbbb797db0076a7b8a273 have failed. See details.\n. :x: Tests for the commit df30c3068f10a3f9d19f8794c455b90a82f13afc have failed. See details.\n. :x: Tests for the commit 524df9dfd8f482a87f7db39d4652acf222726776 have failed. See details.\n. :x: Tests for the commit de96e44deca04fd92124f3aba5011608a1715ff6 have failed. See details.\n. :white_check_mark: Tests for the commit fd4226047d11c1a1b11b44eb931d6d66aa45f8a4 have passed. See details.\n. :white_check_mark: Tests for the commit 22964e9a711aad9203de75f158255f114ffbc464 have passed. See details.\n. :x: Tests for the commit 23054752ccbc08ff7974e6ecfd183b75779a7f30 have failed. See details.\n. :white_check_mark: Tests for the commit 2523823078a7af0b93a97d15ea78fe0740d2e5e2 have passed. See details.\n. :x: Tests for the commit c1a1cb4e2efd433747fe6e22e0bf9408d8cb2979 have failed. See details.\n. :x: Tests for the commit c4963df04a0701968b70dc9170b3075d760dc9db have failed. See details.\n. :white_check_mark: Tests for the commit ac610e31eb2224831ab6d611e20e666f8cfc2170 have passed. See details.\n. :x: Tests for the commit d849a390358831cfc838e5bb529b8c3b154c498a have failed. See details.\n. :white_check_mark: Tests for the commit d63f93032e1257cb7ebafeaf5af8d536f7a0e609 have passed. See details.\n. :white_check_mark: Tests for the commit e0266fc0ef8870be3f797bee560da0bc5c1be241 have passed. See details.\n. :x: Tests for the commit 3c79d2ef5c4aaed74d69cfa60e3df41277c1ca3e have failed. See details.\n. :white_check_mark: Tests for the commit a42a627e04aaeb2570e9dd51890a587b31dc88bf have passed. See details.\n. :x: Tests for the commit 781bdf5d306afcd8b25eddcd7d8f632228497cfc have failed. See details.\n. :x: Tests for the commit 781bdf5d306afcd8b25eddcd7d8f632228497cfc have failed. See details.\n. :x: Tests for the commit 43756beb70515df3b5d7a592d535a91c2c5d8cd6 have failed. See details.\n. :x: Tests for the commit 43756beb70515df3b5d7a592d535a91c2c5d8cd6 have failed. See details.\n. :x: Tests for the commit 28e64813cc2ee4d6e1206b6716a022ddd13f9403 have failed. See details.\n. :x: Tests for the commit 28e64813cc2ee4d6e1206b6716a022ddd13f9403 have failed. See details.\n. :x: Tests for the commit 5deb08bf2f34e38a4381ad4474b142ac9eb2a6e7 have failed. See details.\n. :white_check_mark: Tests for the commit 7b92774c3fc3b9fbcb47adfc79bf08b77c92f0c2 have passed. See details.\n. :x: Tests for the commit adb97cc5a6d074ac222cfa8cb269c964306dcb14 have failed. See details.\n. :white_check_mark: Tests for the commit a7118478fc0adee767bc94dbdf6fa1236b06d66e have passed. See details.\n. :white_check_mark: Tests for the commit 0bd17de98b4b3a12a8e25d04e0b999c609deb6a3 have passed. See details.\n. :x: Tests for the commit ebd3975edf553480aa69dec054503e0d12157bef have failed. See details.\n. :x: Tests for the commit 11b59719b0f5727232f40605f84c51d66c918dd8 have failed. See details.\n. :white_check_mark: Tests for the commit 11b59719b0f5727232f40605f84c51d66c918dd8 have passed. See details.\n. :white_check_mark: Tests for the commit 815d37b3ab8646d545203c422b44c085070308a2 have passed. See details.\n. :white_check_mark: Tests for the commit 7af1d935dff71b3ad7cd0418c4517c8e73871ee9 have passed. See details.\n. :x: Tests for the commit 5cf23aa0839d36b83fbe919e3bd0095ad37150c4 have failed. See details.\n. :white_check_mark: Tests for the commit b333ac55dd50afcb3964c32bf96ced9b38ce72b9 have passed. See details.\n. :white_check_mark: Tests for the commit 8590532308b78d9017e7bbc3f7de7d3d56954dbc have passed. See details.\n. :white_check_mark: Tests for the commit 38b87123803678278aff7b0c4e69cf5cd7ad56db have passed. See details.\n. :white_check_mark: Tests for the commit 357adefdcc41285a3feef4421d561ac22419c7c8 have passed. See details.\n. :white_check_mark: Tests for the commit d834f930ee85e4efdfcdb76dc4dbc2ae5a0e603d have passed. See details.\n. :white_check_mark: Tests for the commit bee6efaed528ec20a70a6cd7fd983ac06c0e0c1a have passed. See details.\n. :white_check_mark: Tests for the commit f729e5151af11403f07b00cd0cbb2436ff046afc have passed. See details.\n. :x: Tests for the commit 3c761edc5471f802674a0255c3d05106895b2d7f have failed. See details.\n. :x: Tests for the commit bef51301614e8b9674721db01e4e771f27fea9ac have failed. See details.\n. :x: Tests for the commit 66bbd9622aeecaf9cfb124c446a3c0130cc73aba have failed. See details.\n. :x: Tests for the commit 140962fbe33b839de6f9af2c07a53f6a6c4ce7ef have failed. See details.\n. :white_check_mark: Tests for the commit 05b49e8f586783985c7c961f4ee1f6c7f625a3b3 have passed. See details.\n. :white_check_mark: Tests for the commit 741b53956bb9a308cc11669db2f30faadff2e282 have passed. See details.\n. :x: Tests for the commit dbd37f1e90bededcef81cc25ed983fda58f9a83b have failed. See details.\n. :x: Tests for the commit cb5fe6ee7c10e4374ffc77810daddd3cb7dbce11 have failed. See details.\n. :x: Tests for the commit cff817e4a2eab0afef9305cb749d3d7f42fea95b have failed. See details.\n. :x: Tests for the commit cff817e4a2eab0afef9305cb749d3d7f42fea95b have failed. See details.\n. :x: Tests for the commit 7acf92f7335977aa980c5e5fa9fc7c98caba0754 have failed. See details.\n. :x: Tests for the commit 880f767bd199d51df0786c2a7d07546e94f7cdc2 have failed. See details.\n. :x: Tests for the commit 49071af0f5a18a2899d4065d7aeceb9394409b97 have failed. See details.\n. :x: Tests for the commit e11b5f71e8643cdf1c2bb1bf5f64843451bdf84f have failed. See details.\n. :x: Tests for the commit e11b5f71e8643cdf1c2bb1bf5f64843451bdf84f have failed. See details.\n. :x: Tests for the commit e39c043a46285aad6c1cf4cff2483d0c7585e1a1 have failed. See details.\n. :x: Tests for the commit e39c043a46285aad6c1cf4cff2483d0c7585e1a1 have failed. See details.\n. :x: Tests for the commit 0aae7b25100ce46111f137bed3aa7d43f5f74f17 have failed. See details.\n. :x: Tests for the commit b6951bf1bec6a5447ebce22fca2e8a73cd438b25 have failed. See details.\n. :x: Tests for the commit f72cbddd0550c3e4b383df2b4cb305b69a9fecc6 have failed. See details.\n. :white_check_mark: Tests for the commit a65dd39e5cc6b6fa48dbccc663bfbd44d79648dd have passed. See details.\n. :x: Tests for the commit 6e4c8d4ac6c2e469b6976e52dad4d400a6fb767d have failed. See details.\n. :x: Tests for the commit 45d67a7e2672701ead53f318fb24fcad632178c7 have failed. See details.\n. :x: Tests for the commit 45d67a7e2672701ead53f318fb24fcad632178c7 have failed. See details.\n. :x: Tests for the commit 2edbf1ab1c1dafbd5b8dfe31d87a6dfac7fa40a0 have failed. See details.\n. :x: Tests for the commit ed6c5c659017230dba9a2fd831dbe1464ca4b29b have failed. See details.\n. :x: Tests for the commit ed6c5c659017230dba9a2fd831dbe1464ca4b29b have failed. See details.\n. :x: Tests for the commit 9704f3f8683af19f180a3d5010af58c1638c4274 have failed. See details.\n. :x: Tests for the commit cdf39fba478bcf50c8aebd437bfa2e6777d1dc92 have failed. See details.\n. :white_check_mark: Tests for the commit cdf39fba478bcf50c8aebd437bfa2e6777d1dc92 have passed. See details.\n. :x: Tests for the commit 4a54e177104645f4e17493cd418c4204c5f34c53 have failed. See details.\n. :white_check_mark: Tests for the commit 79b6865fdd622217bc3b98b083d03e5c086265b5 have passed. See details.\n. :x: Tests for the commit f536f562485ac004410d184f0629d02521c608c4 have failed. See details.\n. :white_check_mark: Tests for the commit f536f562485ac004410d184f0629d02521c608c4 have passed. See details.\n. :white_check_mark: Tests for the commit f7b2bd26c17606fced86ca8ac03ea6a81ef10242 have passed. See details.\n. :white_check_mark: Tests for the commit dc90aeacdb5230103578987e603d71e5f9384736 have passed. See details.\n. :x: Tests for the commit c0b38738f674ff914dad693413462c9e400c2e22 have failed. See details.\n. :x: Tests for the commit a5b9f61c05cea3623c5fdc0076a4502f7c0a72c3 have failed. See details.\n. :white_check_mark: Tests for the commit a5b9f61c05cea3623c5fdc0076a4502f7c0a72c3 have passed. See details.\n. :x: Tests for the commit a9f78391a7edfbaf8ece73982257a1444d5b796e have failed. See details.\n. :white_check_mark: Tests for the commit a9f78391a7edfbaf8ece73982257a1444d5b796e have passed. See details.\n. :white_check_mark: Tests for the commit ef9f7e36d7acb32d60ea8960561f4f4dbc73deb2 have passed. See details.\n. :white_check_mark: Tests for the commit 2ceff4648dfda830f1d648f6a1b5fdb889308691 have passed. See details.\n. :x: Tests for the commit 4404945ab01c90ab06880e36661d363c0c8132cd have failed. See details.\n. :x: Tests for the commit 4404945ab01c90ab06880e36661d363c0c8132cd have failed. See details.\n. :white_check_mark: Tests for the commit 789a907a1995907255ccf9cc063847a7a1584c7b have passed. See details.\n. :white_check_mark: Tests for the commit 2885d854606d36a270e1b90f0dcff26deddfcbad have passed. See details.\n. :white_check_mark: Tests for the commit f11cb0ac2fd6b087ad19489d99ce8ce9babe7893 have passed. See details.\n. :x: Tests for the commit 39a4f94415cdd0a0497c71a9bd028734d6a25fea have failed. See details.\n. :x: Tests for the commit 39a4f94415cdd0a0497c71a9bd028734d6a25fea have failed. See details.\n. :white_check_mark: Tests for the commit 39a4f94415cdd0a0497c71a9bd028734d6a25fea have passed. See details.\n. :x: Tests for the commit dfd1e6e5637a1c1b6a1ac99bdcd1f388ad07775b have failed. See details.\n. :white_check_mark: Tests for the commit dfd1e6e5637a1c1b6a1ac99bdcd1f388ad07775b have passed. See details.\n. :x: Tests for the commit f17c3df4e6f9cef8bff25e96bbc4da907d971336 have failed. See details.\n. :white_check_mark: Tests for the commit f17c3df4e6f9cef8bff25e96bbc4da907d971336 have passed. See details.\n. :x: Tests for the commit 2387d4a26d5e16e158aa56a771b987bb24ea7c1c have failed. See details.\n. :white_check_mark: Tests for the commit 2387d4a26d5e16e158aa56a771b987bb24ea7c1c have passed. See details.\n. :white_check_mark: Tests for the commit ee95016d149b15fc0820ad6c8953aafd88a8b057 have passed. See details.\n. :white_check_mark: Tests for the commit 2f4602b561a4a376aaa6f08105dfcc6dbf731a09 have passed. See details.\n. :x: Tests for the commit a9caca270ea423cf2d47ea4b07e985039642bb04 have failed. See details.\n. :x: Tests for the commit 045eeba6a232240bed327086d3e86c288ac4e1ec have failed. See details.\n. :x: Tests for the commit aa31d5f2b95a46a7c16c25ce901a3f65b98d1331 have failed. See details.\n. :white_check_mark: Tests for the commit d7ea803669f765c041b008bf05d4d53b8fd0dba2 have passed. See details.\n. :x: Tests for the commit 3cb8f93e687906e0a6158e430f8a0bc1f8e85173 have failed. See details.\n. :x: Tests for the commit 855a1727c11ff32e8a2638285aeb59c370c07d71 have failed. See details.\n. :x: Tests for the commit c1bcc4ffcc9b34ac2876a9f8dcdfd930acddd878 have failed. See details.\n. :x: Tests for the commit 187d6df40484d86d9168df793c551752f22a1064 have failed. See details.\n. :x: Tests for the commit 96dd1433335785fcec6c932773713f54cfae1e6c have failed. See details.\n. :x: Tests for the commit 9d73afb1abf0a544a1c7d814ef5d91330a6aa317 have failed. See details.\n. :x: Tests for the commit 9d73afb1abf0a544a1c7d814ef5d91330a6aa317 have failed. See details.\n. :x: Tests for the commit e0f41c151393ba452d2d813b52f5bbef7a1521d2 have failed. See details.\n. :x: Tests for the commit 4c7260dceb191c5817757c1ec1ec8ff0c8369d89 have failed. See details.\n. :x: Tests for the commit 4c7260dceb191c5817757c1ec1ec8ff0c8369d89 have failed. See details.\n. :x: Tests for the commit c9e1dd7588ec7706f163dcfc663d2250bcdabbd1 have failed. See details.\n. :x: Tests for the commit c9e1dd7588ec7706f163dcfc663d2250bcdabbd1 have failed. See details.\n. :white_check_mark: Tests for the commit c9e1dd7588ec7706f163dcfc663d2250bcdabbd1 have passed. See details.\n. :x: Tests for the commit db1b245b0b7d0531356ed708085c97a90c506990 have failed. See details.\n. :x: Tests for the commit 2d0ad8ab13c4fe0e327ec2c64674b29bde383e5c have failed. See details.\n. :x: Tests for the commit 2d0ad8ab13c4fe0e327ec2c64674b29bde383e5c have failed. See details.\n. :x: Tests for the commit ec70c44bfa6056d1e2e122f2abd3607e0b1346fe have failed. See details.\n. :x: Tests for the commit a3f7198d8e8bea9c616f46d43e5d490cd121c27c have failed. See details.\n. :x: Tests for the commit a3f7198d8e8bea9c616f46d43e5d490cd121c27c have failed. See details.\n. :x: Tests for the commit 2c6ec35d0dade5dd44ebe86722160bfd40492588 have failed. See details.\n. :x: Tests for the commit 10e1a5f99770dba0b8a753c06e8c06feed03458f have failed. See details.\n. :x: Tests for the commit 10e1a5f99770dba0b8a753c06e8c06feed03458f have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 1c65d86bf98b153308fb8ff0fcc62bf0c7417436 have failed. See details.\n. :x: Tests for the commit 736d38ec0d9da7c80e6d3cf3a41a59b3c769aefc have failed. See details.\n. :white_check_mark: Tests for the commit 6f630b67ec025308ae9bd23f73d41e9d30169029 have passed. See details.\n. :x: Tests for the commit 6e2361ad678ac371a36af6a975de18d5af7835e7 have failed. See details.\n. :white_check_mark: Tests for the commit 6e2361ad678ac371a36af6a975de18d5af7835e7 have passed. See details.\n. :x: Tests for the commit 8a638148ca94c8917addf5fa8e4a6e7cf455a6d5 have failed. See details.\n. :x: Tests for the commit 8a638148ca94c8917addf5fa8e4a6e7cf455a6d5 have failed. See details.\n. :x: Tests for the commit 8a638148ca94c8917addf5fa8e4a6e7cf455a6d5 have failed. See details.\n. :white_check_mark: Tests for the commit 8a638148ca94c8917addf5fa8e4a6e7cf455a6d5 have passed. See details.\n. :x: Tests for the commit 2af1129e5ea5a6f916040d336dc9530cd09c4a6d have failed. See details.\n. :white_check_mark: Tests for the commit 2af1129e5ea5a6f916040d336dc9530cd09c4a6d have passed. See details.\n. :white_check_mark: Tests for the commit aaf680fb3c582ecf0b55886e831ffd7bce156ddf have passed. See details.\n. :white_check_mark: Tests for the commit 791c7b53d7adcd5889bd094f03187c44d0e95dec have passed. See details.\n. :x: Tests for the commit 67a59e32212dd45427e09239c6802d0f74a4066c have failed. See details.\n. :x: Tests for the commit 5f909e2fc4b7633b2173ef6e46e1e257a437a99e have failed. See details.\n. :white_check_mark: Tests for the commit 5f909e2fc4b7633b2173ef6e46e1e257a437a99e have passed. See details.\n. :x: Tests for the commit 7fe565878e4124ee522c26a82c368d152612fa16 have failed. See details.\n. :x: Tests for the commit 7fe565878e4124ee522c26a82c368d152612fa16 have failed. See details.\n. :x: Tests for the commit 7fe565878e4124ee522c26a82c368d152612fa16 have failed. See details.\n. :x: Tests for the commit 7fe565878e4124ee522c26a82c368d152612fa16 have failed. See details.\n. :x: Tests for the commit 62dc5ed3067e733e23fa5be2a68779849f6937ec have failed. See details.\n. :x: Tests for the commit 62dc5ed3067e733e23fa5be2a68779849f6937ec have failed. See details.\n. :white_check_mark: Tests for the commit 62dc5ed3067e733e23fa5be2a68779849f6937ec have passed. See details.\n. :x: Tests for the commit 3b0e50a0c95efc833f2caad9cac1ece55e61cf4f have failed. See details.\n. :white_check_mark: Tests for the commit 3b0e50a0c95efc833f2caad9cac1ece55e61cf4f have passed. See details.\n. :white_check_mark: Tests for the commit 91aa37db77538dca8a8ec6cfb7d1cd95820f4850 have passed. See details.\n. :white_check_mark: Tests for the commit d5fec61922d8c939b4a17fde7fce61d02a7a36f5 have passed. See details.\n. :x: Tests for the commit 71344d408f1ac6f4c823dad6490b43690ec28a76 have failed. See details.\n. :x: Tests for the commit a3c6c913ea897145d7aba8344e88058c9c74d3af have failed. See details.\n. :x: Tests for the commit cda7c8f90d73730c64e66a21eb282dffa55b4fbd have failed. See details.\n. :white_check_mark: Tests for the commit 7614370a9e55d3d1639ff7761ef45e68709e7de3 have passed. See details.\n. :white_check_mark: Tests for the commit 55957ec69f168d67e65698de116f0edce5419a71 have passed. See details.\n. :x: Tests for the commit 8e8b21d4b83df6ff4eb467a79f42c613d7626bd4 have failed. See details.\n. :x: Tests for the commit 8e8b21d4b83df6ff4eb467a79f42c613d7626bd4 have failed. See details.\n. :white_check_mark: Tests for the commit 815e785e7b0f680586ad961e189bd7e7d14097f3 have passed. See details.\n. :white_check_mark: Tests for the commit ad01448c511bbf5436fa27b4b35f83eaeba2de75 have passed. See details.\n. :white_check_mark: Tests for the commit 13db3aa493012ee5a484fdf9eff54388039dfd1e have passed. See details.\n. :white_check_mark: Tests for the commit 9ec0662382306169e04b2a2a9530b873e8ada848 have passed. See details.\n. :x: Tests for the commit 06bcc63c3e883f3b7d27e241acea9d5792349828 have failed. See details.\n. :x: Tests for the commit 06bcc63c3e883f3b7d27e241acea9d5792349828 have failed. See details.\n. :x: Tests for the commit 2185bf03d1f79bd0f0ae148499b816f957f9c88f have failed. See details.\n. :white_check_mark: Tests for the commit 2185bf03d1f79bd0f0ae148499b816f957f9c88f have passed. See details.\n. :white_check_mark: Tests for the commit 73b6afe81ca7c33fb1593aaaf7dc815d1ad982f6 have passed. See details.\n. :white_check_mark: Tests for the commit d338ff5e7df3d2fcdb60e9ae4a4ef819a9dfe7bd have passed. See details.\n. :white_check_mark: Tests for the commit dfea8e2364d913add9eaa1971d543480784000ea have passed. See details.\n. :white_check_mark: Tests for the commit fcc03a626ea3735dfed4df84fec4247a06159de4 have passed. See details.\n. :white_check_mark: Tests for the commit dbb7f098433abd34950bf5fc0ee6d1df94fa62cb have passed. See details.\n. :white_check_mark: Tests for the commit c8805f0589292a96e4f69af6e374424b05dfca10 have passed. See details.\n. :white_check_mark: Tests for the commit 78329c0ee920258e008917966cab219ac2821490 have passed. See details.\n. :white_check_mark: Tests for the commit c2841073030daedfc82e6c66b8c242f53da17dee have passed. See details.\n. :white_check_mark: Tests for the commit 8d92da7fe9d6180b47f316e0e95d3b0090846f5c have passed. See details.\n. :white_check_mark: Tests for the commit 2c2a3b885505ed59234db91cb24f55dccdcbf07e have passed. See details.\n. :x: Tests for the commit a20a046ffbdd9f6d1300a510dca3834a820e1ea5 have failed. See details.\n. :white_check_mark: Tests for the commit a20a046ffbdd9f6d1300a510dca3834a820e1ea5 have passed. See details.\n. :x: Tests for the commit cbdd1a5d3e6b4238c24873f53e30e459da0764b1 have failed. See details.\n. :x: Tests for the commit 6f7354947f149b60512172154d8c34f120e52bfa have failed. See details.\n. :x: Tests for the commit 6f7354947f149b60512172154d8c34f120e52bfa have failed. See details.\n. :white_check_mark: Tests for the commit d4d85922392134eb1abd34e1852b1b6b35788e04 have passed. See details.\n. :x: Tests for the commit 3e83545e79ef83156b7670bc46ddb9a2b4444c9d have failed. See details.\n. :x: Tests for the commit 5dacca3966e58509d1cec880097f405768b5c60d have failed. See details.\n. :x: Tests for the commit 6e8294532ab07d99f634d014d634a70f65bfae1b have failed. See details.\n. :white_check_mark: Tests for the commit 6e8294532ab07d99f634d014d634a70f65bfae1b have passed. See details.\n. :x: Tests for the commit bb8db3dcd66dac8139bbaf91aa78cfca96d6f4b3 have failed. See details.\n. :x: Tests for the commit a81be0b520ec6989f9ecfdf573cc21d259bdda0c have failed. See details.\n. :x: Tests for the commit 28234aff049ca27843c70ce1a7a1ff9bc3fd0d46 have failed. See details.\n. :x: Tests for the commit f4bace1005561089688f8e31d37fa8b21cbdded8 have failed. See details.\n. :x: Tests for the commit f4bace1005561089688f8e31d37fa8b21cbdded8 have failed. See details.\n. :white_check_mark: Tests for the commit f4bace1005561089688f8e31d37fa8b21cbdded8 have passed. See details.\n. :white_check_mark: Tests for the commit 89fb52210118d77acbe42fdf7454084acc1d6a09 have passed. See details.\n. :white_check_mark: Tests for the commit ade7f49b5203cf61b728db2253d161e0edda240e have passed. See details.\n. :x: Tests for the commit 27e932998b11f0c646d0e3e51404e7a5e59fe127 have failed. See details.\n. :x: Tests for the commit 0ca8a1d11ef896b88ddbfe648aab554bf9939af4 have failed. See details.\n. :x: Tests for the commit 25273188e2e78ebb5f2d970edd09be66fa384aa3 have failed. See details.\n. :white_check_mark: Tests for the commit 25273188e2e78ebb5f2d970edd09be66fa384aa3 have passed. See details.\n. :x: Tests for the commit 25273188e2e78ebb5f2d970edd09be66fa384aa3 have failed. See details.\n. :white_check_mark: Tests for the commit 1307ce75206eef088f0961e0fea7ca913fc334a2 have passed. See details.\n. :white_check_mark: Tests for the commit 1307ce75206eef088f0961e0fea7ca913fc334a2 have passed. See details.\n. :white_check_mark: Tests for the commit 1307ce75206eef088f0961e0fea7ca913fc334a2 have passed. See details.\n. :white_check_mark: Tests for the commit 5e4fba664e8e586f306e355e70ca720682db67e5 have passed. See details.\n. :x: Tests for the commit f6f17e7b62340099c43c8692c4beec9edb468076 have failed. See details.\n. :white_check_mark: Tests for the commit db083e467b4f6a850116c3bfb655f78d3a68e3b8 have passed. See details.\n. :x: Tests for the commit db083e467b4f6a850116c3bfb655f78d3a68e3b8 have failed. See details.\n. :white_check_mark: Tests for the commit db083e467b4f6a850116c3bfb655f78d3a68e3b8 have passed. See details.\n. :white_check_mark: Tests for the commit 259372fc246ec4aca87308b0b78467bef1dd5a4e have passed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :white_check_mark: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have passed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :x: Tests for the commit 260c44441db19c4b3335e7102a306441ea0f27a3 have failed. See details.\n. :white_check_mark: Tests for the commit 0ae1260a90ad80936a25152813df81af90729496 have passed. See details.\n. :white_check_mark: Tests for the commit 0ae1260a90ad80936a25152813df81af90729496 have passed. See details.\n. :x: Tests for the commit 5433cc58c3334b13a5dc2bc26a9db18b7cd5e897 have failed. See details.\n. :x: Tests for the commit 5433cc58c3334b13a5dc2bc26a9db18b7cd5e897 have failed. See details.\n. :white_check_mark: Tests for the commit 5433cc58c3334b13a5dc2bc26a9db18b7cd5e897 have passed. See details.\n. :white_check_mark: Tests for the commit 5433cc58c3334b13a5dc2bc26a9db18b7cd5e897 have passed. See details.\n. :x: Tests for the commit 6b4973c8ffe710249a256f4dd38d04fa0675a127 have failed. See details.\n. :x: Tests for the commit 6b4973c8ffe710249a256f4dd38d04fa0675a127 have failed. See details.\n. :white_check_mark: Tests for the commit 550e8778eaf12b9bf9d8ba3081b62766582d72e3 have passed. See details.\n. :white_check_mark: Tests for the commit 550e8778eaf12b9bf9d8ba3081b62766582d72e3 have passed. See details.\n. :white_check_mark: Tests for the commit eb5701ef55902e762628f62cde01cbbbe0b08e44 have passed. See details.\n. :white_check_mark: Tests for the commit eb5701ef55902e762628f62cde01cbbbe0b08e44 have passed. See details.\n. :white_check_mark: Tests for the commit 0fbccc23468ba71d98eb219cb91b085e3619ca1f have passed. See details.\n. :white_check_mark: Tests for the commit 0fbccc23468ba71d98eb219cb91b085e3619ca1f have passed. See details.\n. :white_check_mark: Tests for the commit 0fbccc23468ba71d98eb219cb91b085e3619ca1f have passed. See details.\n. :white_check_mark: Tests for the commit 0fbccc23468ba71d98eb219cb91b085e3619ca1f have passed. See details.\n. :white_check_mark: Tests for the commit 34cb2d870699404723b77bdeeb96292eb3a0cf75 have passed. See details.\n. :x: Tests for the commit 1c7ad230488741ada9920879478d8ec3ba0ba157 have failed. See details.\n. :white_check_mark: Tests for the commit 94386cfd0aa73573876d3c159c5d1dc5ac907632 have passed. See details.\n. :white_check_mark: Tests for the commit 94386cfd0aa73573876d3c159c5d1dc5ac907632 have passed. See details.\n. :white_check_mark: Tests for the commit 94386cfd0aa73573876d3c159c5d1dc5ac907632 have passed. See details.\n. :white_check_mark: Tests for the commit 94386cfd0aa73573876d3c159c5d1dc5ac907632 have passed. See details.\n. :x: Tests for the commit 437e851a7a749e2e0106e8d7327e3c2945d9c0e0 have failed. See details.\n. :x: Tests for the commit 502850b6b8f652dcc2d90ac0dbe24a4db212a1a6 have failed. See details.\n. :x: Tests for the commit 07a8da18fc23ee0c5f113af17070b6777154b901 have failed. See details.\n. :white_check_mark: Tests for the commit 07a8da18fc23ee0c5f113af17070b6777154b901 have passed. See details.\n. :x: Tests for the commit 07a8da18fc23ee0c5f113af17070b6777154b901 have failed. See details.\n. :white_check_mark: Tests for the commit 7b983c516764773c125500881ee0eecad19b060b have passed. See details.\n. :white_check_mark: Tests for the commit 7b983c516764773c125500881ee0eecad19b060b have passed. See details.\n. :white_check_mark: Tests for the commit 7b983c516764773c125500881ee0eecad19b060b have passed. See details.\n. :white_check_mark: Tests for the commit 7b983c516764773c125500881ee0eecad19b060b have passed. See details.\n. :white_check_mark: Tests for the commit 75324110c2ac91f528c1259f889dbc3900ee434c have passed. See details.\n. :white_check_mark: Tests for the commit 75324110c2ac91f528c1259f889dbc3900ee434c have passed. See details.\n. :x: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have failed. See details.\n. :x: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have failed. See details.\n. :x: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have failed. See details.\n. :x: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have failed. See details.\n. :white_check_mark: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have passed. See details.\n. :white_check_mark: Tests for the commit 31ba0c78eec542ed57022ccca03bceebb5183786 have passed. See details.\n. :x: Tests for the commit 7aa39e5d88c0c512c4b29eb9778b82cc02ece95b have failed. See details.\n. :x: Tests for the commit 7aa39e5d88c0c512c4b29eb9778b82cc02ece95b have failed. See details.\n. :x: Tests for the commit e367ce96990e9e716db4cf5d4bcfb16ef25b3397 have failed. See details.\n. :white_check_mark: Tests for the commit ce8d5ded1f627f3e56541217122d47020f17f6f1 have passed. See details.\n. :white_check_mark: Tests for the commit 54be5b56ec16f38354f6d1cb7d90a8e7a0d38e8a have passed. See details.\n. :white_check_mark: Tests for the commit 72aa493bc1ed36feb7aadf0e8298d5e0bbb1b2f7 have passed. See details.\n. :white_check_mark: Tests for the commit 40d9423c77141ddc3f33eb93aab58dd133871bec have passed. See details.\n. :white_check_mark: Tests for the commit fda045debe90197eafbaf1a655c3a5f14bde4fc1 have passed. See details.\n. :white_check_mark: Tests for the commit 874429d0b0b2a8bbdb7ea9a0ed59e4ff7fb5197e have passed. See details.\n. :x: Tests for the commit c9aa36802be5aa5e8ab37e4df9c439641ec6db59 have failed. See details.\n. :white_check_mark: Tests for the commit 5a8d89b02ba7fc7d0ba67242d698726e1f530c4c have passed. See details.\n. :x: Tests for the commit 6040be321b03df62fc53e16d273a7fc63473e7b2 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :white_check_mark: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have passed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :x: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have failed. See details.\n. :white_check_mark: Tests for the commit 4e9e3b258bb0a75d85e2f859c86a669f9d0ed945 have passed. See details.\n. :x: Tests for the commit c07e48668ac1f75375ee26e00db41c063dc5e4b6 have failed. See details.\n. :white_check_mark: Tests for the commit 2deff3a8d64da3a186d83d330a21ed25cdebced3 have passed. See details.\n. :white_check_mark: Tests for the commit 2deff3a8d64da3a186d83d330a21ed25cdebced3 have passed. See details.\n. :x: Tests for the commit 2deff3a8d64da3a186d83d330a21ed25cdebced3 have failed. See details.\n. :white_check_mark: Tests for the commit 2deff3a8d64da3a186d83d330a21ed25cdebced3 have passed. See details.\n. :x: Tests for the commit bc0963d158866df9059b539cf8ea49481532e4c7 have failed. See details.\n. :white_check_mark: Tests for the commit bc0963d158866df9059b539cf8ea49481532e4c7 have passed. See details.\n. :white_check_mark: Tests for the commit 9f2fa54bc96bb4f27b0f03cb29c2c2377e0403ff have passed. See details.\n. :x: Tests for the commit bdf98407427cc97a858b5b732b71796253cd260b have failed. See details.\n. :x: Tests for the commit bdf98407427cc97a858b5b732b71796253cd260b have failed. See details.\n. :white_check_mark: Tests for the commit d5850580051536dabb671f1776b071dc543d9849 have passed. See details.\n. :x: Tests for the commit ada9ee189adecb8a49fa71a77a2028dc80a13dc4 have failed. See details.\n. :white_check_mark: Tests for the commit f0343de73b3a726580a62b76da75c449aef0cacd have passed. See details.\n. :x: Tests for the commit f0343de73b3a726580a62b76da75c449aef0cacd have failed. See details.\n. :x: Tests for the commit f0343de73b3a726580a62b76da75c449aef0cacd have failed. See details.\n. :x: Tests for the commit 14ed03e053cd3b05e2a1a0c7db0a65bcffa7baa3 have failed. See details.\n. :x: Tests for the commit 07ecd65d96f48e19b695a13e466fc24611a37c22 have failed. See details.\n. :x: Tests for the commit 3bf0327d5c377743dbf445efde8703091b719e2e have failed. See details.\n. :white_check_mark: Tests for the commit 978b15e1fd8055b73e1d604a493745ee216c8f2c have passed. See details.\n. :white_check_mark: Tests for the commit 978b15e1fd8055b73e1d604a493745ee216c8f2c have passed. See details.\n. :x: Tests for the commit 5fd11e910a75eff524ba05fc9b6553280d65b4b8 have failed. See details.\n. :x: Tests for the commit 95e6dcb8a169c7899a80a0191e43d814a5275f67 have failed. See details.\n. :x: Tests for the commit 95e6dcb8a169c7899a80a0191e43d814a5275f67 have failed. See details.\n. :x: Tests for the commit 95e6dcb8a169c7899a80a0191e43d814a5275f67 have failed. See details.\n. :white_check_mark: Tests for the commit 95e6dcb8a169c7899a80a0191e43d814a5275f67 have passed. See details.\n. :white_check_mark: Tests for the commit 2025be3eee15533de4d01c26f507089f8b2095d9 have passed. See details.\n. :x: Tests for the commit ccf5766a38a2bad7822917beb9c105ac19328c20 have failed. See details.\n. :x: Tests for the commit ccf5766a38a2bad7822917beb9c105ac19328c20 have failed. See details.\n. :x: Tests for the commit ccf5766a38a2bad7822917beb9c105ac19328c20 have failed. See details.\n. :white_check_mark: Tests for the commit 0b2799ce58c9a233c28ff6143229e73a99948549 have passed. See details.\n. :x: Tests for the commit 5241afb05ddb1141c24e2765aeb61bac8a343fd8 have failed. See details.\n. :white_check_mark: Tests for the commit 234cfafbbeeed03d2db130bbff4095a4cfa0f2db have passed. See details.\n. :x: Tests for the commit 1513c6cd03d3f46f3760bf24e10e956f3b96ec93 have failed. See details.\n. :white_check_mark: Tests for the commit 7ad980ab1eb1302eb5dc6a29e755d651bca2d733 have passed. See details.\n. :white_check_mark: Tests for the commit c839b53b63c00da6881d7cf17818e253932e9ae3 have passed. See details.\n. :x: Tests for the commit 7fc41edb0d8eaaf810cfc2ac2781e061a16b55e9 have failed. See details.\n. :white_check_mark: Tests for the commit c5929f58540d821736013c01efe5b7c3869a958e have passed. See details.\n. :x: Tests for the commit b5239d9fc6e9406793a4a3834a931574b998ee92 have failed. See details.\n. :x: Tests for the commit d6e75cee92611bb3d2d7aa6d6ff645eb787787c1 have failed. See details.\n. :x: Tests for the commit 3faca7784f19688e54c287f38330ceccae6b0a5b have failed. See details.\n. :x: Tests for the commit 7f57f965f7c5fa09f78d5bd89927731615d55c42 have failed. See details.\n. :x: Tests for the commit 189f189beec279023b72c75e823e5a67abc876c4 have failed. See details.\n. :x: Tests for the commit dcec3637b5eea99546f9f407a9ad8d583ad4b253 have failed. See details.\n. :x: Tests for the commit 822f85f7bed4c5128b67400f6da3132cd173f603 have failed. See details.\n. :x: Tests for the commit 3a14471abf03ae24b7933d7681878e4865f9e4b5 have failed. See details.\n. :x: Tests for the commit 33be033c1e420b676be390abd5ce2c8420ed34cf have failed. See details.\n. :white_check_mark: Tests for the commit 33be033c1e420b676be390abd5ce2c8420ed34cf have passed. See details.\n. :x: Tests for the commit 14652e3ac92f8c99746bc187217eeb59f8833a3e have failed. See details.\n. :x: Tests for the commit a94fbf93c0cd2020d75d01bbf98b49a4a17877c9 have failed. See details.\n. :x: Tests for the commit cc201a1a2ebd690b42aa9e0dba73517d35789a02 have failed. See details.\n. :x: Tests for the commit 7b3fbc0102a323d049112aaae440fe8ec0ec4c93 have failed. See details.\n. :white_check_mark: Tests for the commit 9b2720869d5eac770d5a28cffb290f05132fff59 have passed. See details.\n. :x: Tests for the commit 38c31052d1212db2a8391d318a41ef3eb0cfdcbd have failed. See details.\n. :x: Tests for the commit f67e65b084e8365ff90cecb1eb35d77334f9cb04 have failed. See details.\n. :white_check_mark: Tests for the commit f67e65b084e8365ff90cecb1eb35d77334f9cb04 have passed. See details.\n. :white_check_mark: Tests for the commit c8dd2c48eef5e59ea0355d035b03a51c771fffe7 have passed. See details.\n. :white_check_mark: Tests for the commit 234ce08b33a72246bb4652eafaa380b84a69c152 have passed. See details.\n. :x: Tests for the commit 6fde2801920ee66533474b79b52824455f86f215 have failed. See details.\n. :x: Tests for the commit 6fde2801920ee66533474b79b52824455f86f215 have failed. See details.\n. :white_check_mark: Tests for the commit 6fde2801920ee66533474b79b52824455f86f215 have passed. See details.\n. :x: Tests for the commit 8135a87f5b95cfdf7a35d407545007f5b2ca34a0 have failed. See details.\n. :white_check_mark: Tests for the commit 8135a87f5b95cfdf7a35d407545007f5b2ca34a0 have passed. See details.\n. :x: Tests for the commit 6c239e80706e8660e0d40888b65d629590ab30f0 have failed. See details.\n. :white_check_mark: Tests for the commit 6c239e80706e8660e0d40888b65d629590ab30f0 have passed. See details.\n. :white_check_mark: Tests for the commit 1a3cdf7c050fcf0a4263621172192bd201b7bf92 have passed. See details.\n. :white_check_mark: Tests for the commit e05513b56ef3fffeffbd2a8cd8eebbf1cb3e2d1c have passed. See details.\n. :white_check_mark: Tests for the commit b0e5acb63a4390da504c0a682e20a525f6328a44 have passed. See details.\n. :white_check_mark: Tests for the commit 33230a6f396422e8ce29b4e12f4c25587a4ac7dd have passed. See details.\n. :x: Tests for the commit 22df3dc34e64410134bd9418c81824458bf74494 have failed. See details.\n. :x: Tests for the commit 22df3dc34e64410134bd9418c81824458bf74494 have failed. See details.\n. :x: Tests for the commit 22df3dc34e64410134bd9418c81824458bf74494 have failed. See details.\n. :white_check_mark: Tests for the commit 22df3dc34e64410134bd9418c81824458bf74494 have passed. See details.\n. :x: Tests for the commit 84f00878bb1e975437ed753834c1ef73c3fd0922 have failed. See details.\n. :white_check_mark: Tests for the commit 84f00878bb1e975437ed753834c1ef73c3fd0922 have passed. See details.\n. :white_check_mark: Tests for the commit f2c47459f19cfbfdc717cf15be0ef9542bda266b have passed. See details.\n. :x: Tests for the commit 33e5f40696dcbb1955c6ac4ba4ca95568301119c have failed. See details.\n. :x: Tests for the commit 33e5f40696dcbb1955c6ac4ba4ca95568301119c have failed. See details.\n. :x: Tests for the commit 33e5f40696dcbb1955c6ac4ba4ca95568301119c have failed. See details.\n. :x: Tests for the commit 33e5f40696dcbb1955c6ac4ba4ca95568301119c have failed. See details.\n. :white_check_mark: Tests for the commit 33e5f40696dcbb1955c6ac4ba4ca95568301119c have passed. See details.\n. :white_check_mark: Tests for the commit 7eaf5575b34221622fbb5a662dedf0a76ffacd9d have passed. See details.\n. :x: Tests for the commit 0484f3b2f591f65a7e48d3c7fa27d1f17331d203 have failed. See details.\n. :white_check_mark: Tests for the commit 0484f3b2f591f65a7e48d3c7fa27d1f17331d203 have passed. See details.\n. :white_check_mark: Tests for the commit 4197ae82e82607f0d07866e75e8f46fa1315ef4d have passed. See details.\n. :x: Tests for the commit f91d575c12fc2905a699ce6be779ca2085a9fdbc have failed. See details.\n. :x: Tests for the commit c02e8b79f69d27fb7527a1c24e47a2318e42120d have failed. See details.\n. :x: Tests for the commit c02e8b79f69d27fb7527a1c24e47a2318e42120d have failed. See details.\n. :x: Tests for the commit c02e8b79f69d27fb7527a1c24e47a2318e42120d have failed. See details.\n. :white_check_mark: Tests for the commit c02e8b79f69d27fb7527a1c24e47a2318e42120d have passed. See details.\n. :x: Tests for the commit 20b42d61430b352a1585c93bb6f6c940f0beb375 have failed. See details.\n. :x: Tests for the commit 076eda60a33ceb3ec8ee81489c7410fc572da2b7 have failed. See details.\n. :x: Tests for the commit 2f926b99bb4c760b215631d475e05eaf77ee212c have failed. See details.\n. :x: Tests for the commit 2f926b99bb4c760b215631d475e05eaf77ee212c have failed. See details.\n. :white_check_mark: Tests for the commit 2f926b99bb4c760b215631d475e05eaf77ee212c have passed. See details.\n. :x: Tests for the commit acb0bc8a5fb5640e5bd4eb74d6a719ae0623b97b have failed. See details.\n. :white_check_mark: Tests for the commit acb0bc8a5fb5640e5bd4eb74d6a719ae0623b97b have passed. See details.\n. :x: Tests for the commit 8be428f88cbb879cdcc39138c50bf1ea5212d89c have failed. See details.\n. :x: Tests for the commit 8be428f88cbb879cdcc39138c50bf1ea5212d89c have failed. See details.\n. :x: Tests for the commit 1e7846b2190d4df787fc51a2656d423bff5bebf3 have failed. See details.\n. :x: Tests for the commit 262794531adf2ceba34906a2e35f0c481c4264cd have failed. See details.\n. :white_check_mark: Tests for the commit 262794531adf2ceba34906a2e35f0c481c4264cd have passed. See details.\n. :x: Tests for the commit 0b0b183e02f7e01463c383de747ff004cd471ab8 have failed. See details.\n. :x: Tests for the commit af9552a7c64082223ab5e95f08c422c987eb5360 have failed. See details.\n. :white_check_mark: Tests for the commit 809f40e27977861cc7beb04f1655ad11fe201b1d have passed. See details.\n. :x: Tests for the commit 39803aeedbb6ea6ba27b9680dd5346c29e1a9e88 have failed. See details.\n. :x: Tests for the commit 39803aeedbb6ea6ba27b9680dd5346c29e1a9e88 have failed. See details.\n. :white_check_mark: Tests for the commit 39803aeedbb6ea6ba27b9680dd5346c29e1a9e88 have passed. See details.\n. :x: Tests for the commit 39803aeedbb6ea6ba27b9680dd5346c29e1a9e88 have failed. See details.\n. :white_check_mark: Tests for the commit 39803aeedbb6ea6ba27b9680dd5346c29e1a9e88 have passed. See details.\n. :white_check_mark: Tests for the commit 5f25262e2d9bb01eca39109eab1d9cfc3ca14122 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit e2a08b6ba81c81ee7fa7cdbc1ceb81e131d09bbf have passed. See details.\n. :x:\u00a0Tests for the commit 9efb4c3d706d9f23a04460c5b6e26d69348f7664 have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9efb4c3d706d9f23a04460c5b6e26d69348f7664 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9efb4c3d706d9f23a04460c5b6e26d69348f7664 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 9efb4c3d706d9f23a04460c5b6e26d69348f7664 have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark: Tests for the commit 019d116ea09d3b6d1fa3fe151782e064e225f1b5 have passed. See details.\n. :x: Tests for the commit 43cdbab0d72941711f46fa791b633e075014f2b0 have failed. See details.\n. :x: Tests for the commit 43cdbab0d72941711f46fa791b633e075014f2b0 have failed. See details.\n. :x: Tests for the commit 43cdbab0d72941711f46fa791b633e075014f2b0 have failed. See details.\n. :white_check_mark: Tests for the commit 43cdbab0d72941711f46fa791b633e075014f2b0 have passed. See details.\n. :x: Tests for the commit f118244eeb29d91ddadc0e539205919a1279a5bc have failed. See details.\n. :white_check_mark: Tests for the commit f118244eeb29d91ddadc0e539205919a1279a5bc have passed. See details.\n. :white_check_mark: Tests for the commit 881969af03632fbf31d3b07c85dcdff821bc6b47 have passed. See details.\n. :x: Tests for the commit b9a71792bce26478d6f6b42deb633698ad16de9e have failed. See details.\n. :x: Tests for the commit 6e2ff40231f2c2e6c391a7fcc8cdcc356b761cf2 have failed. See details.\n. :white_check_mark: Tests for the commit 52d939a81eab558f91626a1150fc96f7b2b0836a have passed. See details.\n. :white_check_mark: Tests for the commit 174a0a584bf230f381f3269597ac15e2001043b2 have passed. See details.\n. :white_check_mark: Tests for the commit 64a1ff04aff470a5ca98063a34e20138a6fa2174 have passed. See details.\n. :white_check_mark: Tests for the commit cb7ea62fc7cc0615cb49b8bb6211850980051b60 have passed. See details.\n. :white_check_mark: Tests for the commit 93faa868fa50f28ae534509799036c8315fc4e4c have passed. See details.\n. :x: Tests for the commit 7a65db7a373a8e6b0026fc3b948604faf2bce21d have failed. See details.\n. :x: Tests for the commit cf0ffc2832f144449e80c0eec140bea6e5a95598 have failed. See details.\n. :white_check_mark: Tests for the commit 854f7ac1d850e6483146df9b42cd5a21655bfa83 have passed. See details.\n. :x: Tests for the commit 2ccc87385ed1934a06aa7b922c70b67ddb339f65 have failed. See details.\n. :white_check_mark: Tests for the commit 6feca72945fa9888b70cfb1017c044cf2901aedd have passed. See details.\n. :x: Tests for the commit 74b081416319880b137680b6aeea699f23b48c5e have failed. See details.\n. :white_check_mark: Tests for the commit 5518c712d87fbae04648a4924209299a20e9bf38 have passed. See details.\n. :x: Tests for the commit 0aaacf35dcf508d6a5014f088ccd1bfb93801aed have failed. See details.\n. :x: Tests for the commit 0aaacf35dcf508d6a5014f088ccd1bfb93801aed have failed. See details.\n. :white_check_mark: Tests for the commit 0aaacf35dcf508d6a5014f088ccd1bfb93801aed have passed. See details.\n. :x: Tests for the commit cb6602bcc75b88145c206148eadb02dd80de5773 have failed. See details.\n. :white_check_mark: Tests for the commit cb6602bcc75b88145c206148eadb02dd80de5773 have passed. See details.\n. :x: Tests for the commit abb5234f5742737be32a07cfff4a0cdcf5576bb7 have failed. See details.\n. :white_check_mark: Tests for the commit abb5234f5742737be32a07cfff4a0cdcf5576bb7 have passed. See details.\n. :x: Tests for the commit 1b587ea8615e7fa9fbf55e8ba50f2a092943a641 have failed. See details.\n. :x: Tests for the commit 9076d6b3ff7c9c8327d5a138ce6e85bd93c87b6c have failed. See details.\n. :white_check_mark: Tests for the commit 816444d172b500a6c661d6a13ca5f3117ca2ba16 have passed. See details.\n. :x: Tests for the commit 816444d172b500a6c661d6a13ca5f3117ca2ba16 have failed. See details.\n. :white_check_mark: Tests for the commit 81dd1183f50f5baa23ff79a0309b13db376c5f1b have passed. See details.\n. :x: Tests for the commit a72cd520f44a2d3609b5712c3b52d7d63a084c98 have failed. See details.\n. :white_check_mark: Tests for the commit a72cd520f44a2d3609b5712c3b52d7d63a084c98 have passed. See details.\n. :x:\u00a0Tests for the commit 09008165c2252bfb4c4c253a22b4f1379ee4145c have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 09008165c2252bfb4c4c253a22b4f1379ee4145c have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 09008165c2252bfb4c4c253a22b4f1379ee4145c have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 744058352abe09e41e71763775c9b08873191b8e have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 4c559c492056f1ecd8b5a59bf4fc56cad9fe4d28 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c2c62bb33c29f5ecd9f08093abc38b0a7c94dd34 have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ba5798811fdd81f819a7e988e65e7f2ab4ac542a have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 09008165c2252bfb4c4c253a22b4f1379ee4145c have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 453b7cc79ea517fac38e89f6f1208c6f99915dc7 have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ff8e2d28af36091455de005c286d6c335af89f27 have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0a0343f77735acfbcb6224d67422cb480645adad have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8f776873ea614e6d29239c03a0263166ea75bc79 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8f776873ea614e6d29239c03a0263166ea75bc79 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8f776873ea614e6d29239c03a0263166ea75bc79 have failed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 717d4845222709c598df54f06f6f30a6bea4f7f0 have failed. See details:\n- :x:\u00a0continuous-integration/travis-ci/push\n- :x:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 717d4845222709c598df54f06f6f30a6bea4f7f0 have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit e5b90383918f7963a69ad5da866726504d9de3b7 have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit e5b90383918f7963a69ad5da866726504d9de3b7 have failed. See details:\n- :x:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 45391ec7ff0e71d47af9eaf751f92f9f5d0857dc have failed. See details:\n- :x:\u00a0continuous-integration/travis-ci/push\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit b0a1012c0b7ef2f6cb331f6ccc0da0b68d9b04c8 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 26c226e258cc3b7323f0b983bc3860c51f7f462b have passed. See details.\n. :x:\u00a0Tests for the commit 26c226e258cc3b7323f0b983bc3860c51f7f462b have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9a041705b790f4f44908708546d5f164f39fbdfd have passed. See details.\n. :x:\u00a0Tests for the commit 9a041705b790f4f44908708546d5f164f39fbdfd have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit b1662bfdf714ff26ac8d8d0bf63fa8b0925fbfcd have passed. See details.\n. :x:\u00a0Tests for the commit b1662bfdf714ff26ac8d8d0bf63fa8b0925fbfcd have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9bf37c9ceb8aded2de072d0881c4ffb95f4a4666 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9bf37c9ceb8aded2de072d0881c4ffb95f4a4666 have passed. See details.\n. :x:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :x:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5880d853e4140194cca35f91f0a679678a8f3482 have passed. See details.\n. :x:\u00a0Tests for the commit 188e19bde27bde948537d408cf8044e9a1ab0638 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 43136ce61a9cff522c6b2451a9a86d839db9b39e have passed. See details.\n. :x:\u00a0Tests for the commit a55767f6f31239560719643a17e7d49b5b62ca45 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c1bd30f2ef3ea08d21d61f160f3559feb6d26d25 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit deff631d577bb65c2f0a7e1754a73d0b110989f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit deff631d577bb65c2f0a7e1754a73d0b110989f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit deff631d577bb65c2f0a7e1754a73d0b110989f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit deff631d577bb65c2f0a7e1754a73d0b110989f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit deff631d577bb65c2f0a7e1754a73d0b110989f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9fc5eb75a8379b5e3d968936a6530c1b584dd0cb have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 9fc5eb75a8379b5e3d968936a6530c1b584dd0cb have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 3cff1ee895707ce217c21b89365cd78e23788b65 have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit d65a622c716e92fb4cf6e37d86a720f7fdbd24e2 have passed. See details:\n- :white_check_mark:\u00a0continuous-integration/appveyor/branch\n- :white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x: Tests for the commit c45f9b3db846b1a9978c65ca7f3258049eec608d have failed. See details.\n. :white_check_mark: Tests for the commit c45f9b3db846b1a9978c65ca7f3258049eec608d have passed. See details.\n. :white_check_mark: Tests for the commit 424d47693152b17b383be38f34221088518477f3 have passed. See details.\n. :x: Tests for the commit df008f1733a5654a8de7b40bf0f86414dffbfeb8 have failed. See details.\n. :x: Tests for the commit df008f1733a5654a8de7b40bf0f86414dffbfeb8 have failed. See details.\n. :x: Tests for the commit fee5736137dc2eca33f3313f1f79b67e241f0098 have failed. See details.\n. :x: Tests for the commit fee5736137dc2eca33f3313f1f79b67e241f0098 have failed. See details.\n. :x:\u00a0Tests for the commit fee5736137dc2eca33f3313f1f79b67e241f0098 have failed. See details.\n. :x:\u00a0Tests for the commit fee5736137dc2eca33f3313f1f79b67e241f0098 have failed. See details.\n. :x:\u00a0Tests for the commit 7ea2879487d101477153e503468416191126edb9 have failed. See details.\n. :x:\u00a0Tests for the commit 7ea2879487d101477153e503468416191126edb9 have failed. See details.\n. :x:\u00a0Tests for the commit 7ea2879487d101477153e503468416191126edb9 have failed. See details.\n. :x:\u00a0Tests for the commit 7ea2879487d101477153e503468416191126edb9 have failed. See details.\n. :x:\u00a0Tests for the commit c1cd07d2b5b1aa6d3d927fcd0cecb0077b745fb5 have failed. See details.\n. :x:\u00a0Tests for the commit c1cd07d2b5b1aa6d3d927fcd0cecb0077b745fb5 have failed. See details.\n. :x:\u00a0Tests for the commit 60c05d60fd7bc68564efb891c9d1d0648b9f79b1 have failed. See details.\n. :x:\u00a0Tests for the commit 60c05d60fd7bc68564efb891c9d1d0648b9f79b1 have failed. See details.\n. :x:\u00a0Tests for the commit d470802a0d5d8be63a151ae602af8edccc78b6b9 have failed. See details.\n. :x:\u00a0Tests for the commit d470802a0d5d8be63a151ae602af8edccc78b6b9 have failed. See details.\n. :x:\u00a0Tests for the commit ef49b8dc31e43b76a526252b1a5482a24fedc69a have failed. See details.\n. :x:\u00a0Tests for the commit ef49b8dc31e43b76a526252b1a5482a24fedc69a have failed. See details.\n. :x:\u00a0Tests for the commit ef49b8dc31e43b76a526252b1a5482a24fedc69a have failed. See details.\n. :x:\u00a0Tests for the commit ef49b8dc31e43b76a526252b1a5482a24fedc69a have failed. See details.\n. :x:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have failed. See details.\n. :x:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have failed. See details.\n. :x:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have failed. See details.\n. :x:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have failed. See details.\n. :x:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 0da9e89cc88c5d7d9c7b2716aed3a8548ce1b0f6 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit f14333dd9ec814448b0a67cc595285bd56686b55 have passed. See details.\n. :white_check_mark: Tests for the commit 71516666d9e1b716ca0b8097446a5c65b05d4121 have passed. See details.\n. :x: Tests for the commit f95900b9a2d60cf5553ab9ff532668c9a5878eb3 have failed. See details.\n. :white_check_mark: Tests for the commit f0ab9b521f306a40e3e67e2998f2d033e9b2ceda have passed. See details.\n. :x: Tests for the commit 8ba93d1e57bdbf1776be1b6c52c7d39748052a4f have failed. See details.\n. :white_check_mark: Tests for the commit 824fadd86b257255f0385d997aa0eaa1c0ea9d83 have passed. See details.\n. :white_check_mark: Tests for the commit f2a39d3d597ddd5b3a50e25525c73826c8622b96 have passed. See details.\n. :white_check_mark: Tests for the commit a38169c536ac83bc48900e7dcaf41c13b8bbe29d have passed. See details.\n. :white_check_mark: Tests for the commit 9ee01e873eb2b92f378a2d29e651a754f7493e0b have passed. See details.\n. :white_check_mark: Tests for the commit e6fc51567d627d49ca47f20408b903fc8e9ac797 have passed. See details.\n. :white_check_mark: Tests for the commit 375214dbc462d5168df7f1460cd834c43c629e71 have passed. See details.\n. :white_check_mark: Tests for the commit 902c2f62fe0fe5e6bad425031191c07d71208d1e have passed. See details.\n. :x:\u00a0Tests for the commit de8efc5cd3399c5c041515957a6e31d338165099 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit e504ed7466bc0093836ac6fe1b75dc350b112ffe have passed. See details.\n. :x:\u00a0Tests for the commit 71e7b09c5082d09539b26cfa032fda695f15bf51 have failed. See details.\n. :x:\u00a0Tests for the commit f7197063f0b5aef3e9a5e593f34cabce8c5cdb6e have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit c531f833ec25c45aee50f8301324f481a588fbc7 have passed. See details.\n. :x:\u00a0Tests for the commit 286a95aa912a4fc1236edde1f32b8b0fe09fdf82 have failed. See details.\n. :x:\u00a0Tests for the commit 286a95aa912a4fc1236edde1f32b8b0fe09fdf82 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 511ff2ff7564593a4a20c23ff0638b22563210ae have passed. See details.\n. :x:\u00a0Tests for the commit c2d1cda590e8329f6086c5ad6817673219022fd5 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit b15426e619c3f7cb651e2924b1d5536fe78974cc have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit cc2f714fe353bbb0c9d4252fa26f09c3d161f01a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e1325a52ed6a5835c6eaa879388acac70faf7130 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e34753e68f732c0ad639f9076c349330422014f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e34753e68f732c0ad639f9076c349330422014f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e34753e68f732c0ad639f9076c349330422014f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5e34753e68f732c0ad639f9076c349330422014f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b63632c79526b150122b4282585e32af0250999a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b63632c79526b150122b4282585e32af0250999a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b63632c79526b150122b4282585e32af0250999a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d20a0d3c85efb1a3b9792d56a98c3d249995c9bf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d20a0d3c85efb1a3b9792d56a98c3d249995c9bf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5840473b1c2fc6956e5d99e0f5a197ffcd1538f1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 541d615d27c655e1e9f223c00651588a6351c32a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53d31bb30eed3f5bc132588b86566a269d689c09 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 53d31bb30eed3f5bc132588b86566a269d689c09 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 04bd3885aeabd9a87f354384e11483105b67db08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 04bd3885aeabd9a87f354384e11483105b67db08 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 72c97d592460778529d62ad27d7a2e39cb2e1a26 have failed. See details.\n. :x:\u00a0Tests for the commit 72c97d592460778529d62ad27d7a2e39cb2e1a26 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 72c97d592460778529d62ad27d7a2e39cb2e1a26 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 7cee6a703ef751679abd39cc4a0eff0d48a5e8ba have passed. See details.\n. :x:\u00a0Tests for the commit 6ee2725b96ceb460a0d8e31ad80ec300cc5aff32 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 6ee2725b96ceb460a0d8e31ad80ec300cc5aff32 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 4868e97ddd0c5544b38452dd19dcadd78526a05c have passed. See details:\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 42b1232b35fddf7b70d74e7954b65d30bb73a144 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 42b1232b35fddf7b70d74e7954b65d30bb73a144 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit f087fb3b2841cd6780ca65373ce43ceac4ad8957 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit f087fb3b2841cd6780ca65373ce43ceac4ad8957 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit d16a05a043e310219c71c72bc1603d024b1001cf have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit d16a05a043e310219c71c72bc1603d024b1001cf have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit b7c3d5178f4a972611a689d3629e435d28ad589a have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit a04afa544a350e06e6196ab4c98d6c482f6a35d7 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit a04afa544a350e06e6196ab4c98d6c482f6a35d7 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 28ae8855c92dd0593eeebc23fa569db83cfbd577 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 57a05699432d74afdf02bb0ec2c100bedf0a57d7 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 57a05699432d74afdf02bb0ec2c100bedf0a57d7 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 57a05699432d74afdf02bb0ec2c100bedf0a57d7 have failed. See details.\n. :x:\u00a0Tests for the commit e6e07e62f026e1259f296f868a4082e1194d27b8 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit e6e07e62f026e1259f296f868a4082e1194d27b8 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1c3d1fa99a1ef9519876b0d92321a6cf61dada41 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit d6abdb60308cf3a5e7e95ff1238f4bb4e1864f15 have passed. See details.\n. :x:\u00a0Tests for the commit 3364a71621e0b2c670ec57f570034453e0d6793a have failed. See details.\n. :x:\u00a0Tests for the commit bb91bd4f2b22c1daad9e733de607a3d3435a81db have failed. See details.\n. :x:\u00a0Tests for the commit 4fc9865f92c9f34c63ff9586bab71e19ba054b4f have failed. See details.\n. :x:\u00a0Tests for the commit 1df6c6c0435c2b515cc3c58bbfee4adf55d09df8 have failed. See details.\n. :x:\u00a0Tests for the commit 46e94563c795c9901ffa2efb04ddad25650dc121 have failed. See details.\n. :x:\u00a0Tests for the commit e9f6d5f72182471b22db9ec7ed1f54a84e561c59 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit b8bb73fcda78ec79cf9d745f89cb2e3eda5d2c00 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c68634b49d3ed9684a36bd5ee25f80f0d125d28b have passed. See details.\n. :x:\u00a0Tests for the commit d691894108073760408b914f40370ffd8c570412 have failed. See details.\n. :x:\u00a0Tests for the commit 37203a7681c8b4d1e6ed26ae8db44a320f84ab85 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit f38d55de203be4a51d5b21b342b1677e665f8fea have passed. See details.\n. :x:\u00a0Tests for the commit 33157d3539d906c3dfd046197c9fb18ec52c9cf9 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 3c05be2d5fd90a07eb57255bd4a87c40bdadfe73 have passed. See details.\n. :x:\u00a0Tests for the commit 8123ad1cae7834ddcceb16a4d1eb15842675724c have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit f4d96cf8afc1ec88348531b67df4581dd1e32e31 have passed. See details.\n. :x:\u00a0Tests for the commit d1c43f2ac67b8728a7bc69c6b5a71c372aaa62fc have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit f4d96cf8afc1ec88348531b67df4581dd1e32e31 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 50f5bcd329601a04bfc9385d4efd0baa80a27269 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 30c2bd49bd06f3e12a46d0777ef5c15c485dbdad have passed. See details.\n. :x:\u00a0Tests for the commit 19009cce373bf55db12d9ec4e136d34c3ce5bb0c have failed. See details.\n. :x:\u00a0Tests for the commit 19009cce373bf55db12d9ec4e136d34c3ce5bb0c have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 19009cce373bf55db12d9ec4e136d34c3ce5bb0c have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 97436b3fbc44708b8ee035f7834311b469300273 have passed. See details.\n. :x:\u00a0Tests for the commit e9d77ff89d32bfa0cbf5490e4a582d3e1d43ef09 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit e9d77ff89d32bfa0cbf5490e4a582d3e1d43ef09 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ca94d46633d6494516442ee2ace759eb760d8c9a have failed. See details.\n. :x:\u00a0Tests for the commit ca94d46633d6494516442ee2ace759eb760d8c9a have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit f390b3ce33355800ebce75754cdb04943d707a3d have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ccaab815f95c26c56d3800eeecf6fd08d6d47738 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ccaab815f95c26c56d3800eeecf6fd08d6d47738 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit ccaab815f95c26c56d3800eeecf6fd08d6d47738 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit a73899894862b14fc454709aac893b17049e90c5 have failed. See details.\n. :x:\u00a0Tests for the commit e61917e5973a6f1633d2a763759986e1ab6b404b have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit e22c727b7926e05150eb956d8a21f86fc5265c8f have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit acc8bd0b357b6f60eb4ac555675cc55c69d31d7b have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit e6f2b2ee4fe126899e70ec0356e8de834c30cf3d have passed. See details.\n. :x:\u00a0Tests for the commit 9400ead909c47edf01cc8cce643fa59a1dea0028 have failed. See details.\n. :x:\u00a0Tests for the commit 1db38a37b741dc65f92fdcdd1de094b24201398f have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1b0baea34e04b1025fadb9bd6ce4bf668b9b476b have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 502128271931394867f632163b624fd79c0fd4de have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit e1b1ecb2e688b7a9533298e53bca0bcb26a0afae have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit bb9d19eedf5ddbc51927ba34518a1b4e7be38a6e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit e2540d81b4c938ea905de709b76244f9d1cce1a7 have passed. See details.\n. :x:\u00a0Tests for the commit 84231b73470e824edb9bc0be0a7b03ee551d6910 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 5e112567d1ee13e8ff388b76155c23c231b80791 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit fd239de3b5d06c67277058cc276656f0beacdd38 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 7a674dc04492adb297bec7f06b06396cc4b11d3a have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 60f6d9a63eb82f14527f7b30b5f65582611ed3df have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit 60f6d9a63eb82f14527f7b30b5f65582611ed3df have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9c0410a4f8aa07d8063a2fe6ff71099d226dd3d4 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 9c0410a4f8aa07d8063a2fe6ff71099d226dd3d4 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 33ae745314f57f0b1c623553c0ce6fa0430570f8 have passed. See details.\n. :x:\u00a0Tests for the commit 7745d7c6c0420d78a6831e3f57fd9c150f92a8d0 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0ea1755235d2c4c61d82157d289403cd46b8d3c4 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0ea1755235d2c4c61d82157d289403cd46b8d3c4 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 0ea1755235d2c4c61d82157d289403cd46b8d3c4 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit f60b523a119efe7def1080c6c4ce120638e677e5 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cc9842baff7e62d6a85a084ae701ded67de043c2 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit cc9842baff7e62d6a85a084ae701ded67de043c2 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cc9842baff7e62d6a85a084ae701ded67de043c2 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 29f2424daea1019e06b2de48cb8a64d3391ecf59 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 7f6df462169aee320ac312a9d05fc99e851729fc have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 7f6df462169aee320ac312a9d05fc99e851729fc have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 7f6df462169aee320ac312a9d05fc99e851729fc have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 7f6df462169aee320ac312a9d05fc99e851729fc have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 21c50a9567d7896b41a244964b588793a419df0f have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit e511fae7607156c8ddf2176fadc13422028b7615 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit dd938ce53e5a2770ddc84934c29ac9cdddf43bc2 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit dd938ce53e5a2770ddc84934c29ac9cdddf43bc2 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit fbf11226109b3aa295974bf255bb013c6ccfb373 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1332fc89f5b6aec8aa0c3f49e4007082af5c20d2 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1332fc89f5b6aec8aa0c3f49e4007082af5c20d2 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1332fc89f5b6aec8aa0c3f49e4007082af5c20d2 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 1332fc89f5b6aec8aa0c3f49e4007082af5c20d2 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit bc2aa539dc59d46e9a63ec1923ac8f9ccb20885c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit bc2aa539dc59d46e9a63ec1923ac8f9ccb20885c have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit bc2aa539dc59d46e9a63ec1923ac8f9ccb20885c have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1a78f8cdc3043040885f80c5e1c045389efe1062 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1a78f8cdc3043040885f80c5e1c045389efe1062 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1a78f8cdc3043040885f80c5e1c045389efe1062 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1a78f8cdc3043040885f80c5e1c045389efe1062 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit 66837cb936c07f3601f6837c5e3153d9087ca623 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c58bc828d9173d291f7d4f7f42700e4db946fd48 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit c58bc828d9173d291f7d4f7f42700e4db946fd48 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ddb262b0a2e3698429d1e5a3758e2023db9fc505 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cc72787375b8d55181aabce310bf43a1737de574 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit cc72787375b8d55181aabce310bf43a1737de574 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit b11a9384f7cf3e094839af96ad0f1f2434c66179 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 065115651d2af51718e13ba049981ec38d7d7210 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 07165383a6d424a788725a354db7ef3ce0f70f33 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9715097726c492b39b8156fe487d504561f82b3d have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 915416ea42303def7bf30e1a096df78e3d52f9cb have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 4afc7dcb06251e2a82a076f9e43acdd5e7c4e1ce have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit ea7a3762e4bf032a3fbebbee3bf64f410f8afba9 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 245a12c336f3a6f1daae30212bfc5ffa0f7522f3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1b2d0c398dc33e7fbf2347f8e888a421f3aa45de have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1dcc31ab7159c065395b2b5327a58c5aa113f22f have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1dcc31ab7159c065395b2b5327a58c5aa113f22f have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1dcc31ab7159c065395b2b5327a58c5aa113f22f have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 1dcc31ab7159c065395b2b5327a58c5aa113f22f have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8141f8bacd68dd463a70132c8a628944e99d2f08 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8141f8bacd68dd463a70132c8a628944e99d2f08 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 8141f8bacd68dd463a70132c8a628944e99d2f08 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit a5c4830c9251bdf8c78d2929a532c19ebcee5169 have passed. See details.\n. :x:\u00a0Tests for the commit 38a074b1ac53d8411a323a25e59d520316ada072 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit e99602873d908d470f729beba46d192716f9c107 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 240ced01eec18a2cc00b0dd661e6546f785e25bf have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit fb38cfc3c4c16da1ae1f0e78cd0e5286ab0e2aa1 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 582fbd8579a9fa5b13c42382f1f24c2c12ae4132 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 0f77835ac1f7dee2325219db7538bdda34a8bac8 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit c44ffdf7f772be5e099956a454174e26fb8a7034 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 273bcd3db43c8095c859e7f8602c25dd4c2dc7e9 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit b6446b5a40149fd7a948a64b0ce36ccfc2712fdb have failed. See details.\n. :x:\u00a0Tests for the commit b6446b5a40149fd7a948a64b0ce36ccfc2712fdb have failed. See details.\n. :x:\u00a0Tests for the commit 5d1beb6720b19b076efdd718a28a06baa82a7600 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 5d1beb6720b19b076efdd718a28a06baa82a7600 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit 2be134d3f2e9ecf552a7d7e017943879503e3f54 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 02c3ed16241b150daba8d60baa7abe74bafa534d have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit b4132377a58839630a252ab946106b0cf9648009 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit d6ab02fb0973657e515a5d3a8ca61692b407e5a3 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 95ebe02f8fa3a7ca6a1a475f02607c0a96861712 have failed. See details.\n. :x:\u00a0Tests for the commit 95ebe02f8fa3a7ca6a1a475f02607c0a96861712 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit fa6bcaeb047c82e235f92147d767e4dc3a07d2fb have passed. See details.\n. :x:\u00a0Tests for the commit 792e5ced176383596f9cdde35b2208658b4778c7 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 636fdc8cb5b2d4d773cf737f0bcc319a2a09e302 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 636fdc8cb5b2d4d773cf737f0bcc319a2a09e302 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit be1ccbba3890b23e08196b125286b40765bb70af have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cdd873c97d78d8cd5c34b6fcbd721f357df416e9 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 3403230b5c0b3e0b55c3a180fd01d73ce8c55d8c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9eb64cfa1c8e5e34875895d6c4864cadd96761cc have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9eb64cfa1c8e5e34875895d6c4864cadd96761cc have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9eb64cfa1c8e5e34875895d6c4864cadd96761cc have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9eb64cfa1c8e5e34875895d6c4864cadd96761cc have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c12971d52891e87be570a50e85e6e9055b4b060d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c12971d52891e87be570a50e85e6e9055b4b060d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c12971d52891e87be570a50e85e6e9055b4b060d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit c12971d52891e87be570a50e85e6e9055b4b060d have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 95f68eb2fe777c09f7cddb143e052a27131dc1ac have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 95f68eb2fe777c09f7cddb143e052a27131dc1ac have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 55b2fc805a63d77283b698a004677b466ce6f051 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 1dbeac08484f357b275cd32bb94da11c8cc261ad have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 6878d86e7b0bf567f306032c2ce037856c4fa35f have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 449ef2aa63893238595218c96cd911fe37f2bfaf have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 24bff0c7234fc9e9be3413d9659d7c0d2584a329 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit bdced9f53b34edc71d290c09637a1823f7c422be have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 6bd036ca048b3668d7e71c125b7b99550809ff9e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit e2f5f4fd6ae38c98a108fd78ed610b55d7711ae6 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit e2f5f4fd6ae38c98a108fd78ed610b55d7711ae6 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit a2039aa65070d9d6fd9880d6c6214d6a05c272cb have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit a2039aa65070d9d6fd9880d6c6214d6a05c272cb have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit a2039aa65070d9d6fd9880d6c6214d6a05c272cb have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit a2039aa65070d9d6fd9880d6c6214d6a05c272cb have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23f0df24e7c2a91cb4ddbba05eefb48c31118600 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 7bf25d7b06987edaa5bc02550958671a36e6dbfd have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 89d3b1b2373ecd3deefd0c23d8a7d52f1bf4d796 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 602739270d91bb22ce700d8d6b508d88ac059803 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 401a5e83453a25f53555235d6b3dbefdfe8f8bde have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 4a2401ee2107a968fd431f37b4b4766870fd713d have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit d52e4c69f38dc47dfefcd9b5b91e7e72ecfc4260 have passed. See details.\n. :x:\u00a0Tests for the commit dd51a0c6ab98f2ae6b9dcb61390b51188676aab7 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit dd51a0c6ab98f2ae6b9dcb61390b51188676aab7 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit dd51a0c6ab98f2ae6b9dcb61390b51188676aab7 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 958e96c8b66bcaca48b15481080ebd0a62d09fad have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 958e96c8b66bcaca48b15481080ebd0a62d09fad have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 65a42329600a4686722922b59964030ac8171d28 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cbb700dcf7d3093178884716a34578e91bc31cdd have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit cbb700dcf7d3093178884716a34578e91bc31cdd have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 492ed1ddc4ec5283fb467c4eef204d39890c642c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 492ed1ddc4ec5283fb467c4eef204d39890c642c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 492ed1ddc4ec5283fb467c4eef204d39890c642c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 492ed1ddc4ec5283fb467c4eef204d39890c642c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9e3b4b22142a6a57bea7a91cb526ef829edbbf47 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9e3b4b22142a6a57bea7a91cb526ef829edbbf47 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 9e3b4b22142a6a57bea7a91cb526ef829edbbf47 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit af5c5f6cb76bd577c6717fcc082dbb443d07e80c have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5e21ae86bb3fa1685f9c713b11aa17f6b16f2c4b have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 767e639a1586ff9a7a400f3ef0f906511724194e have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 17d8edc80953dde31c17187f2a5ca5d92c76a267 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 0c5f4cdca0a02cddbe5b5d8a2c87534e095b3e99 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit c089ee5650ce28a2f70ebef272f7d5f776418c7b have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 95f0141c4caf5fee07331982567eeb0ca8ed798e have passed. See details.\n. :x:\u00a0Tests for the commit 2b7e0cdafe0361f8dfcda19ac85df5d5832ab5de have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 95571e0971c8bbadf9ec0ffeb9eb6afaa9572d5a have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 2da192d5263c42b34beaaa909c7ee022526109db have passed. See details.\n. :x:\u00a0Tests for the commit 7485da657cd816065d5837e38e607d4313464925 have failed. See details.\n. :x:\u00a0Tests for the commit 94874800c96e7ef9faece487bd6447bafe640e87 have failed. See details.\n. :x:\u00a0Tests for the commit 94874800c96e7ef9faece487bd6447bafe640e87 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 94874800c96e7ef9faece487bd6447bafe640e87 have passed. See details.\n. :x:\u00a0Tests for the commit 08c7de83a7c5fcac1b9e8085e2f974683da86482 have failed. See details.\n. :x:\u00a0Tests for the commit ef0012e2620c1d9cc2e8b4b99b8d8eb26655c750 have failed. See details.\n. :x:\u00a0Tests for the commit ef0012e2620c1d9cc2e8b4b99b8d8eb26655c750 have failed. See details.\n. :x:\u00a0Tests for the commit 41fd0c20f5fef48713cdb7294499363dc9756d14 have failed. See details.\n. :x:\u00a0Tests for the commit 6ce016b130235d0500769f613b9c3c0e0caa3c71 have failed. See details.\n. :x:\u00a0Tests for the commit 6ce016b130235d0500769f613b9c3c0e0caa3c71 have failed. See details.\n. :x:\u00a0Tests for the commit dc7e044b26d957ba54efcda9845856bb5debd4c5 have failed. See details.\n. :x:\u00a0Tests for the commit f794221b8563878e19759f59f029d59e170ea361 have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have passed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :x:\u00a0Tests for the commit 5dd13a87a1ddd923fbab3baa235299f077d9cecf have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit c3e7d98d1573c77dba94476ad7ed4547fc0fe7ce have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cff069c655563768c11c13f15f8a0c9613edef89 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 367017a075ec8468ca2fa7e2a769b67ce119cf6e have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit e3c6de176ccd13393cedda419bcf034a9c38247a have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 28f7c0ceb6c239e28d26769cc28036d4aaa0572d have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 7a09d001f5999edb99850dbb22be08ffb13b6de6 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 73ad3294d01420d99f4eb22aed8a729108d311bc have passed. See details.\n. :x:\u00a0Tests for the commit cfe290ea00024255a357ff924bbd2138179e2cb1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cfe290ea00024255a357ff924bbd2138179e2cb1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit cfe290ea00024255a357ff924bbd2138179e2cb1 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit b7b959b49a677a49060a6b2d37790236777869cb have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit b7b959b49a677a49060a6b2d37790236777869cb have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit b7b959b49a677a49060a6b2d37790236777869cb have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 8b66fe7b23e967058a650ed85a680bbc22135591 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 17a880e04578dfc84a9d6202f24f7c2d0d25f180 have failed. See details:\n:x:\u00a0continuous-integration/travis-ci/push\n:x:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit e3fc96e110823e58103b15d8bf3b1a0993a984c5 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 4499931c86858ae95af6909d859f2f4016e3a90e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 4499931c86858ae95af6909d859f2f4016e3a90e have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit ee2d71511d5eac898ca1226d2fe4e0ad8ffe0c67 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit f8a09d39cc94e41d5cfeffe66bb242fcad5ccd31 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1c40e93f66cae0462190b7cc6c4f1283e297b6f5 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit 183d064157bf09b870ef4b2d474eea0ead32d7ed have passed. See details.\n. :x:\u00a0Tests for the commit 72965b980af8e2b2efb21ad688d56faf58d92449 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 16beeebd7bdc5c8e93ac50b28ef8fc5d10a3248c have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 153f25830bc62eb3e70278ca684f6ceac67d3468 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 55a405db29520d71168fdddefa693ec2e85f41ac have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0fae4b52c61a9048b0166b89312fddb9c520401f have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 3761d8750e5dfdf1f9bf04f63a960d9f6c0f27c3 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23b45d962602df38babbe4dafe4631fe6c62efca have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 23b45d962602df38babbe4dafe4631fe6c62efca have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 23b45d962602df38babbe4dafe4631fe6c62efca have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 11a5f85399ad85b2b5da39cd43712b94ba5deb10 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 526d8f75925feab56b782998e9677c9b5d37c484 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1c92b4e3f0bab2141786b56a0e56a615e9be787e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1c92b4e3f0bab2141786b56a0e56a615e9be787e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1c92b4e3f0bab2141786b56a0e56a615e9be787e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1c92b4e3f0bab2141786b56a0e56a615e9be787e have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 5b621c0419c048bc7e12b382496486941d9d8d18 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 5b621c0419c048bc7e12b382496486941d9d8d18 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have failed. See details.\n. :x:\u00a0Tests for the commit 489d0faad7d09d748c463fa6cb843e7d6c9577c1 have failed. See details.\n. :x:\u00a0Tests for the commit 47cb5a373ad8e85896baea00bf6fbbf8c759593c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 47cb5a373ad8e85896baea00bf6fbbf8c759593c have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 1e039e5aa8253175c71b5ae279da5c89586ec1e0 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1fd1b133673c7ac2e2f6dfd2185e9867b8a92da5 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 0455a8058e36295ba9e5f016f0ca4e0acda213f9 have passed. See details.\n. :x:\u00a0Tests for the commit 36a412562b652375ef4cf7c970d90c3aaf428e62 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 87886918dfcc83913f41779118423e543d5933d9 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 87886918dfcc83913f41779118423e543d5933d9 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit ef2868a33fa3be54d4fef99fbc7876d0ebe07a23 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 9dd9e4ffe600796e0ae427a5fa0780e2c5a32807 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit 1a52207838f1e13e1d58ba7183bcb91153908037 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 3be598800db9bbe33e45908c0742e142f80521c1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit b9ca28f666616847fe0aef475e3909b981b3a72e have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 35dd0d1ddcb9881ef0e0a92dccd7f22828cbf9a7 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 696f3686f6960b604c6caffac306ef7408f8797d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 696f3686f6960b604c6caffac306ef7408f8797d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit af90c19a40871f525067f2bece555bc6ce3e1383 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 042e37736dfaa1ba3124745f6eb5d02fe0cbd908 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 8b6896ad9be7976e8e2a6fd608fd40fc9ecc8cc6 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 8b6896ad9be7976e8e2a6fd608fd40fc9ecc8cc6 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit ce6255d3bb7b77f867d52e063753b40de03eb11f have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 3862143f82d374fec4d38502e135e0c61dc9f27a have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 3862143f82d374fec4d38502e135e0c61dc9f27a have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 900d4d21fb60a740a2e487873f63dab1800e1ad5 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 900d4d21fb60a740a2e487873f63dab1800e1ad5 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :white_check_mark:\u00a0Tests for the commit 8057578282c80ceab01caf6ee99560145975ee68 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 8858e9b65708b311b6abf454b6f1a1de20d88e26 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit e732eeb158151b73d22b1d19c4c016d1ad1714e3 have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit e732eeb158151b73d22b1d19c4c016d1ad1714e3 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit e732eeb158151b73d22b1d19c4c016d1ad1714e3 have passed. See details.\n. :x:\u00a0Tests for the commit 74d4525ba8eebf1a75239d560fc4364ea383227c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 74d4525ba8eebf1a75239d560fc4364ea383227c have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 74d4525ba8eebf1a75239d560fc4364ea383227c have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 9b622cfebffd92564ef92cc167b94b79a0260be2 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 2a147df953225cbf8bc922d939dd3343008504d5 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c9d2dcce3a34f0c94e3231e8623d3f5e2b277a9b have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c9d2dcce3a34f0c94e3231e8623d3f5e2b277a9b have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit c9d2dcce3a34f0c94e3231e8623d3f5e2b277a9b have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit b3032171bc14da6da338627809ca3e68156a237d have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit b3032171bc14da6da338627809ca3e68156a237d have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit cca82c8e1fab1086a43c6389c6897d38fb5ca8ad have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 5e8e55629432d6b469dc41213c4d2a552e8023c6 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 5e8e55629432d6b469dc41213c4d2a552e8023c6 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 238b9e030027802ffc98e6122a47ca7ae35bdd2c have failed. See details.\n. :white_check_mark:\u00a0Tests for the commit 5b338e3ade48e88daab9cfbb1d0766681a2c5b4d have passed. See details.\n. :x:\u00a0Tests for the commit fbf55b1f3e1a8f449a79cb76ad222ad407fa9c48 have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 0a44449bfe11e710445e72952233f9bb367cdc16 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 1abdbb04b803d2bf2e8fe3073883a7cf26af1d58 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 1abdbb04b803d2bf2e8fe3073883a7cf26af1d58 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 13a50369baa6b50098b47565b3eb6cf6f715125b have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 52115f1446ef50957bcb2fb9156bb3adc0c5618f have failed. See details:\n:x:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 52115f1446ef50957bcb2fb9156bb3adc0c5618f have passed. See details:\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.\n. :x:\u00a0Tests for the commit 7acdc79da89b52557cffa8c19b2e3c15f9ac5bd1 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 7acdc79da89b52557cffa8c19b2e3c15f9ac5bd1 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c8c086ae119ed472d9051911f85e880f52f71a01 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c8c086ae119ed472d9051911f85e880f52f71a01 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit c8c086ae119ed472d9051911f85e880f52f71a01 have failed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit c8c086ae119ed472d9051911f85e880f52f71a01 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 7766f342c13cf444c4b2d0a95dc59778a90efc7a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5b0007b58e671c355439b52d84d93d64b4005589 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e58b5c4423d78062fdcd020961461c1d7be385d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e58b5c4423d78062fdcd020961461c1d7be385d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2cb81dc2331283d01f19faff1f5bbc39aea9f443 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c3f207d670b49f3d3a0ce71362c959679c8c0ecf have failed. See details.. :x:\u00a0Tests for the commit 97a420e95b5248f56ac8a6be565bcc6423c9c94f have failed. See details.. :white_check_mark:\u00a0Tests for the commit 86ac799ae29dca54d25f1fff3a736070746a0a13 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e8ae94ee01092468f8bc6a919999da24ee67e14c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit be2244a5d933613524f6321a291711531b44f8d8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit be2244a5d933613524f6321a291711531b44f8d8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit be2244a5d933613524f6321a291711531b44f8d8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit be2244a5d933613524f6321a291711531b44f8d8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af1adfac02031260a8c3663bdc950ed7ad1973b8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit af1adfac02031260a8c3663bdc950ed7ad1973b8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2859cca04a9ef454972780a283f7f02cec24b371 have failed. See details:\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n:x:\u00a0continuous-integration/travis-ci/push.\n. :white_check_mark:\u00a0Tests for the commit 2859cca04a9ef454972780a283f7f02cec24b371 have passed. See details:\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit 19473754d24782280b517d74c09579c5d354e30c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 04a019e9f1a4885647ee53d2be8079f27a32afbf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d0a146a16259db683dccf014bbc3e8594160a983 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d0a146a16259db683dccf014bbc3e8594160a983 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0830a1aacd60c886a73e0eaec14f7070f99ed84a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0830a1aacd60c886a73e0eaec14f7070f99ed84a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 769f999ad20bcfeb1106d7a1ab7ff96dcf867103 have passed. See details.\n. :white_check_mark:\u00a0Tests for the commit a0017d2637269c40153798a79157c263d0f063f2 have passed. See details:\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.\n. :x:\u00a0Tests for the commit a9832c43d6a34b1f165ead7a249efe2b13d17cd2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a9832c43d6a34b1f165ead7a249efe2b13d17cd2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 802a8ab8181b3e49afbfbb4d35cfa85f3ccb3490 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 802a8ab8181b3e49afbfbb4d35cfa85f3ccb3490 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dff8c0cb807ed903079b8678c1265ffaf507e713 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1c46812fe12733dc2f0f659bf76a00090311ad5c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1c46812fe12733dc2f0f659bf76a00090311ad5c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1c46812fe12733dc2f0f659bf76a00090311ad5c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3877672a98b04a0a18df115a6abb644ffc425c3d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0a28525c0f2df8c22b3bdde2cd2d0dfb062d71d6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0a28525c0f2df8c22b3bdde2cd2d0dfb062d71d6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0d233108a30be2772be0f40f1a41bef67e5011e7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c629b8861d53783a8f7fb1ca3861297ba2485dec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c629b8861d53783a8f7fb1ca3861297ba2485dec have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6651075dbe01c4e87fbe2bba57b7b6be86ebaff2 have passed. See details.. :x:\u00a0Tests for the commit e26ea999cc4663938548071f9d089087175729f1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit f0b3fa1e920555274bc3132cacce04e656c421d1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4c208f0721ba904cdc6724b7bc6ccb01dc7b7488 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fef6ba4d174c88cc85ce2dd1ea0a136f8200f9d8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5d860e4441cd9cff82ac535721b22cd9016e57cd have passed. See details.. :white_check_mark:\u00a0Tests for the commit 46a97d95222cdf0064265c45083793ecb8664689 have passed. See details.. :x:\u00a0Tests for the commit 2820b5123d631e1f482f648b203e1b135b51b67c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2820b5123d631e1f482f648b203e1b135b51b67c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1c14099c3993a462cf9f861c25404d7e4921a271 have failed. See details.. :x:\u00a0Tests for the commit e7e5b295457e8a9ef4b1d84e77ff933d0ecb4ea6 have failed. See details.. :white_check_mark:\u00a0Tests for the commit b087d0fb6be1df9367d17292db562d5cae30d25b have passed. See details.. :x:\u00a0Tests for the commit 80e80a0f72515eb2cff3125ffbe06f0e2ef2ba12 have failed. See details.. :x:\u00a0Tests for the commit afa679f5ca6e9f0cb0a99244fb162dd2bf6b984d have failed. See details.. :white_check_mark:\u00a0Tests for the commit 03548393fe5f571b02096a696048d2e1a6603f2a have passed. See details.. :x:\u00a0Tests for the commit 417ecb8cc9a4cf64d8b6e837cd720194a24cabe7 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 6e3f5f8f9833bcd2b080b0d1f626a53f575cfd26 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2f92f236ee3d640657d03724e73e6ccb15521233 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8d2088f971e8e9da11bd4983aaa324f16afd568f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2e5b7b57dbbed2806fc1530fad7ae2fd1b83d59f have passed. See details.. :white_check_mark:\u00a0Tests for the commit e18500cee6b283398d997bfa3def3a9bb1065dad have passed. See details.. :x:\u00a0Tests for the commit 9893f70b7ddfd4123d7679076b280f36ae77a5d3 have failed. See details.. :white_check_mark:\u00a0Tests for the commit ecb6184a781f4e45dfb897151515674e71640960 have passed. See details.. :x:\u00a0Tests for the commit 71fd24ad048e4830675c74b9edaee538f9085e7a have failed. See details.. :x:\u00a0Tests for the commit 2af2952a3cb9878431bbbd4b5fcfbcfd21103e6f have failed. See details.. :x:\u00a0Tests for the commit c06d7729b9262c3224e155f10150f1b1f286b3b6 have failed. See details.. :x:\u00a0Tests for the commit ac73c2d95b203137da00c4d02cc187c47867622c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ac73c2d95b203137da00c4d02cc187c47867622c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ac73c2d95b203137da00c4d02cc187c47867622c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f6948aee3aec1f5e04a691c4d3e8dd5f1eb3e23 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f6948aee3aec1f5e04a691c4d3e8dd5f1eb3e23 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f6948aee3aec1f5e04a691c4d3e8dd5f1eb3e23 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit de9027c5176f38772a4f64ace6ee07df0e334f1c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit de9027c5176f38772a4f64ace6ee07df0e334f1c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ab1c47011cde3b3602f6e264a5c5a8800ad3306e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 93d77a563c814b293586d23c5903ce8f1521729d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 93d77a563c814b293586d23c5903ce8f1521729d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 547ccfaac3da85322746b70d8229904f501280e1 have failed. See details.. :x:\u00a0Tests for the commit a32163a7073c76ea17ed99248a2b23d3d01732c1 have failed. See details.. :x:\u00a0Tests for the commit 1983d95c48fdc57fe5bf580b93db32af8aa96512 have failed. See details.. :x:\u00a0Tests for the commit 92b82b4de7124fdf5349eee726ab3b85faebccef have failed. See details.. :x:\u00a0Tests for the commit b98449ed127a36e6481dae1d0813df59e5112cfb have failed. See details.. :x:\u00a0Tests for the commit e794e3e775af58ad2aaba85e754b9e11462b6229 have failed. See details.. :x:\u00a0Tests for the commit 3f685d09baa85498fd7cb76001f2ecd118368593 have failed. See details.. :x:\u00a0Tests for the commit d2463e973d67ee7e1fda7ab681caf266d359f1c2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c465f98f4186973ae5278174726a56e40067b92 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8c465f98f4186973ae5278174726a56e40067b92 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c30f4d5fbaf104cea4e1190f873fcbe3b258fce8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ee1f9bbba873cb78a9d487e4b8ecb367dbdaf1c3 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6d2ed33b95e55f4fb219ec579691eb77063841c0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4d61e4fe84781c930f4655b359db35051e6f5d82 have passed. See details.. :x:\u00a0Tests for the commit cf5b0564d1bc3c91b54f9f5aaa93eba6a06b873f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 060a0d98ea58e618eaaa384e4c355eee6adbc465 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 060a0d98ea58e618eaaa384e4c355eee6adbc465 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 060a0d98ea58e618eaaa384e4c355eee6adbc465 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 060a0d98ea58e618eaaa384e4c355eee6adbc465 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 86c370c31046f4e0c2ee0cf65d58ee2afaee70d6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 9f8b385347db5d674c50a03e4c8a005a7e5c6796 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8609762377a5be35668ffffe0d972f83a95e91b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8609762377a5be35668ffffe0d972f83a95e91b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8609762377a5be35668ffffe0d972f83a95e91b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8609762377a5be35668ffffe0d972f83a95e91b6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2c79e4b89af617547b44e6af4af1f1ade1947f8f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2c79e4b89af617547b44e6af4af1f1ade1947f8f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3c26241916a1c891b7fa1aa5ec577caa130a2ca7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3c26241916a1c891b7fa1aa5ec577caa130a2ca7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7573d1bf5b6bfe3c71c86dda7e08bff1afb3cb19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7573d1bf5b6bfe3c71c86dda7e08bff1afb3cb19 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 70e236e91a39eac9230ba7d3ea01958f528681a4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4aed5153afa92ba3783f90aee8898ee07e615e03 have passed. See details.. :x:\u00a0Tests for the commit a1b78c14ddf85673f1ceb32066e295587be806ed have failed. See details.. :white_check_mark:\u00a0Tests for the commit 68c3d84d2991722305e08be21627dd1bbc991b62 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a90e300a599c1c833042a69211b3d3d05d138d7f have passed. See details.. :white_check_mark:\u00a0Tests for the commit d5d8369b83a9baf1471b32110a73d718bdda3c1e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6a81cb386b7a4c50dda6474fc5e5f54a74a6d03b have passed. See details.. :x:\u00a0Tests for the commit 3d841dbd416a0d92f903dcd595b5d09d746fe50f have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4502771a86341d53f51be4f5a391f1a062cec49c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 89648993f310c66c9bf8b7ca8315b10a01b609e7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1f6d81b366b80fa0056b7995f7bc51dbec001ede have passed. See details.. :white_check_mark:\u00a0Tests for the commit 20aba2f8e02489240ea949122e362ee0c2d819cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c72875f657c51e720bbba270aeea56a04ebf3e2a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 191824f8cd886489e97ba3da978ad64af9caa89c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 191824f8cd886489e97ba3da978ad64af9caa89c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 191824f8cd886489e97ba3da978ad64af9caa89c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 191824f8cd886489e97ba3da978ad64af9caa89c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42070685ef59765a7ae4277f8a03e27d4f20be3b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 42070685ef59765a7ae4277f8a03e27d4f20be3b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 88414c64467c0b95625e3a20dbcc0c36fcdf7922 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e36f6162f55d59ab82a785a401cace63a90b32cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 292c09141abd9ddb81918fc94823688f3007bfca have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aad6838e8cd6e91c859ac1474d31e1dc96792da have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aad6838e8cd6e91c859ac1474d31e1dc96792da have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aad6838e8cd6e91c859ac1474d31e1dc96792da have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3032e511a032b24f17169a5e897677d43e54e2df have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e4fba76f19b4070c9ee8c6c001c2ca71e1f462f2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8dc91a7a7373a237ecf404b0c38ac88ad995c559 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4e1ecc8f47f76e044302d65085ec63db3d27749 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4e1ecc8f47f76e044302d65085ec63db3d27749 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c4e1ecc8f47f76e044302d65085ec63db3d27749 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4e1ecc8f47f76e044302d65085ec63db3d27749 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c4e1ecc8f47f76e044302d65085ec63db3d27749 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 17a80deef5bd396b0b3a4e7788feedc0fb0e6f65 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0baff3798e23abbc5bfe65ebf9e540c28cb7779c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0baff3798e23abbc5bfe65ebf9e540c28cb7779c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0baff3798e23abbc5bfe65ebf9e540c28cb7779c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0baff3798e23abbc5bfe65ebf9e540c28cb7779c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9ba5e1cd12e90b4852da28f28b91bf4938389219 have failed. See details.. :x:\u00a0Tests for the commit 14a3eda8d1180e46609a96a45c4b0473b3345a71 have failed. See details.. :white_check_mark:\u00a0Tests for the commit ef304d17cefb0bd4cb8bb4f4d1f9bb336bd7467c have passed. See details.. :white_check_mark:\u00a0Tests for the commit eaa933e24ac69a99c2d9aaeef5b65d41e3185a63 have passed. See details.. :x:\u00a0Tests for the commit 3e81c3d4e13bcaed7754d3dfbdd144d403625774 have failed. See details.. :x:\u00a0Tests for the commit 0b58cdb918441287f5225e953652203136bbe8dc have failed. See details.. :x:\u00a0Tests for the commit 887a14064e9603c95e08f6ed4bff39f425b93671 have failed. See details.. :x:\u00a0Tests for the commit ac6fceb238087ec619c9e8076472455863b21c6e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1b647058adecd5aa8eaad88f01cf70dcc3bc9e44 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1b647058adecd5aa8eaad88f01cf70dcc3bc9e44 have passed. See details.. :x:\u00a0Tests for the commit 1796db9f51a5ae1c81364393849322fabea5ad38 have failed. See details.. :x:\u00a0Tests for the commit ec92e2fb00908f600ef80fd95c20608aa1bb20d0 have failed. See details.. :white_check_mark:\u00a0Tests for the commit ec92e2fb00908f600ef80fd95c20608aa1bb20d0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fff8bd4c6237e0ad43af33580a78c9125d59f59a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2bf01c7de439ba62e314fbffe5a1db24cd71b4fb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2bf01c7de439ba62e314fbffe5a1db24cd71b4fb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6c195dbef3d66499f0c3d7bc7dc4e3111d7084a8 have passed. See details.. :x:\u00a0Tests for the commit 724083511c895373557d100d732d2d99f6d045fd have failed. See details.. :x:\u00a0Tests for the commit 724083511c895373557d100d732d2d99f6d045fd have failed. See details.. :x:\u00a0Tests for the commit 64ad26144b6b08bebbc379c54bc9b243dd730e49 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42ff76fb7537e0cc77f2148288b7c294d6a5b7ac have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 13da5c2c65c466c8876554dfca45d7d43e3af68d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 25d86aba2228d577be940e522728d0d4f68e8cbb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 25d86aba2228d577be940e522728d0d4f68e8cbb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 25d86aba2228d577be940e522728d0d4f68e8cbb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9766510d46ad0deb3aa8c208a185c744d262447c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 376f28012486b6bcd16c1885d55ad0cd1ede1343 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 376f28012486b6bcd16c1885d55ad0cd1ede1343 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 376f28012486b6bcd16c1885d55ad0cd1ede1343 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 376f28012486b6bcd16c1885d55ad0cd1ede1343 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d32077b0b2eca8fcf830e6064a18c58eb415445 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d32077b0b2eca8fcf830e6064a18c58eb415445 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d32077b0b2eca8fcf830e6064a18c58eb415445 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8d32077b0b2eca8fcf830e6064a18c58eb415445 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dd66291f2c3f3912a40183207b93fa51fe53f376 have passed. See details.. :x:\u00a0Tests for the commit 2f7a3e125ee0cf2bbf3f97f88db9c6a24400ad7d have failed. See details.. :white_check_mark:\u00a0Tests for the commit fb5150132fa191b8946a8dc80738d1b798ccb647 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1c06943877d859f6bc35b4b9663a754980d5d836 have passed. See details.. :white_check_mark:\u00a0Tests for the commit de90044c70970ad31383981b8b6625592f49520c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 058ebaa3ee5b5b0cceb4a7215ca5118a753b411e have passed. See details.. :x:\u00a0Tests for the commit 933161c2245b8d14c851ed758fd052a180a1d426 have failed. See details.. :x:\u00a0Tests for the commit 933161c2245b8d14c851ed758fd052a180a1d426 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 72c70f1b04b0ce0de1281efd884a6c0361b104cf have passed. See details.. :x:\u00a0Tests for the commit 8481d6a148392b8bcc899d1c488230d6dc1e87cf have failed. See details.. :x:\u00a0Tests for the commit 8481d6a148392b8bcc899d1c488230d6dc1e87cf have failed. See details.. :white_check_mark:\u00a0Tests for the commit 9475f2cb9b85d24438feeff3b508eacde93ff392 have passed. See details.. :x:\u00a0Tests for the commit 1c814b5b7f7673e46ebfe3302de50e692ff8ec4a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 783a0876df2ffeca89d643eb9f841462521b6eea have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4552e4cb5876dd3f06fd64c3ffc41a5d977e6f98 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 14212055f5a2e86d75d31857fc2ed1cbb53e6a0e have passed. See details.. :x:\u00a0Tests for the commit 0efd7dfd806014c2e2ad13ac2d78e0049328e107 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0efd7dfd806014c2e2ad13ac2d78e0049328e107 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4ca4649776d50e0e139785d521d9bc93251250de have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4ca4649776d50e0e139785d521d9bc93251250de have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cd941765e4846a284b43c0dee241e740b1d1a623 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc092e40ca250e8ad8bdb75d064cd7342602e2e0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc092e40ca250e8ad8bdb75d064cd7342602e2e0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bc092e40ca250e8ad8bdb75d064cd7342602e2e0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bc092e40ca250e8ad8bdb75d064cd7342602e2e0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc092e40ca250e8ad8bdb75d064cd7342602e2e0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 02c0aac02b8ff726b4eb0d65cbf63e38e73968c9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 02c0aac02b8ff726b4eb0d65cbf63e38e73968c9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6301ce35bd9e3ec7684747b82e867ee04d25a1e1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 131fb2a8a5a4a10c50f4c3ea898e3e8fb602c5c7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 131fb2a8a5a4a10c50f4c3ea898e3e8fb602c5c7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ea3fd79f276a655da1122090e1a83feb7e961dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ea3fd79f276a655da1122090e1a83feb7e961dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc6d68a62e32698578e5b6bb023c11bb64955c59 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc6d68a62e32698578e5b6bb023c11bb64955c59 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a19c5146908cc7460137e26cd9ba1cf3e2c23e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a19c5146908cc7460137e26cd9ba1cf3e2c23e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bbcf8aa079ea153ba2479494a7efc9b5dcc34422 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a124d5f98aa2e2f15e2af72af320a8a987675fa9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a124d5f98aa2e2f15e2af72af320a8a987675fa9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ed23a64fb3fa5ebea10614adee1ed19dc97bac6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d56a0ce5845e73cc00f02328ba326febef106a9b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1bae6ad532282dd3931fdcc1af67292873dab51b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 12d0e73e709ae255a192cd2bb0ec0ca385ed17c5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 12d0e73e709ae255a192cd2bb0ec0ca385ed17c5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 12d0e73e709ae255a192cd2bb0ec0ca385ed17c5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6d12be133f1ddf09cf46af772875502ab5a4a17a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9539fe5f4d391ef6d6c871a558a988ab0a949c79 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a4c2d516ccefd1816bb3709a3ccfc764d827dc6f have passed. See details.. :white_check_mark:\u00a0Tests for the commit b196f8d287aad907c6c1611cc79db59be9242350 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1849e8d4ec57f1643eb23ed1c7fe333aa21c2bbe have passed. See details.. :white_check_mark:\u00a0Tests for the commit a8b79da4a296bfc9f38aa7a79e8037fc7134bc25 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6ca1324a0875195585a8d877e5cccb44e3fb1c86 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2a8e101bca80e7c39ff96ae1cfc634d0f476010e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c468c491b012cf116358c43d5c44b5cfd40f662c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c468c491b012cf116358c43d5c44b5cfd40f662c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c468c491b012cf116358c43d5c44b5cfd40f662c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 909a918b6659c20935407f10599049e6009d941a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 909a918b6659c20935407f10599049e6009d941a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 909a918b6659c20935407f10599049e6009d941a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1f807d6e73f48f2392b8fb1bc24048e1e539beae have failed. See details.. :x:\u00a0Tests for the commit f34a99b2c1b8f065fc7477c53ea5ae30cf9b8768 have failed. See details.. :x:\u00a0Tests for the commit 361564afefb6cc878f8671632bbfc1ff4c69c94a have failed. See details.. :x:\u00a0Tests for the commit ded81adba76f385415876c9945f2cdacef43b2b5 have failed. See details.. :x:\u00a0Tests for the commit e37016d6d4e997141d924a209a61398d115b0cdd have failed. See details.. :x:\u00a0Tests for the commit 3993c00d2f76254d1fb297c95f698358ce629d1e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 095e70dec57e688f64586b9f89c0228f87d99753 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0de2acef31f4f91c81f2a67d0b575558fd6fc7c7 have passed. See details.. :x:\u00a0Tests for the commit 6e761381befb062e4e46593023c85f95953fdf35 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1dc21083c12d745f083067b97e06eda4121edf4a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a1c6c976e77e7e4524413543d6f9a780aaa2d09d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a1c6c976e77e7e4524413543d6f9a780aaa2d09d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 627606a26eadc6c89b70d2270e5dc4d0b261aa21 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 627606a26eadc6c89b70d2270e5dc4d0b261aa21 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c63c186ed801f15ad900780bebda17c320f6e453 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3fd2503aa6215716577b415551c0abd5d8614894 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 52aea6740b4d8f4d68de2e1da88d15fd4bd5e292 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 52aea6740b4d8f4d68de2e1da88d15fd4bd5e292 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ac3ed7401aef1ef31dc9f09213426f2ac3c7eadc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ac3ed7401aef1ef31dc9f09213426f2ac3c7eadc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 40edabdfbfcdcdc2cced24c9aae0948cdd2c4959 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 584418a1b1fb018cd6e98405d46863a78b3c39d7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9389ba4c55d7daded1ab99addff60c276bfd24ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9389ba4c55d7daded1ab99addff60c276bfd24ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9389ba4c55d7daded1ab99addff60c276bfd24ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9389ba4c55d7daded1ab99addff60c276bfd24ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9389ba4c55d7daded1ab99addff60c276bfd24ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74f1f425154409aeda00a6bd9ee88a791eaaa1b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74f1f425154409aeda00a6bd9ee88a791eaaa1b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fd38709527bd2a151a0138e57ef7f34acf78b34 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fd38709527bd2a151a0138e57ef7f34acf78b34 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 347e19982ca408951bfa7fe2047d58d34efd44c5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 347e19982ca408951bfa7fe2047d58d34efd44c5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 347e19982ca408951bfa7fe2047d58d34efd44c5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 83f4d405b51467ee48514b24593e046b4450717d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 306cce9e977e08c91741f784a4d28227179ba803 have passed. See details.. :x:\u00a0Tests for the commit ea0496e89f36b08d03612cfb4aec925c0a72d82d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 86a6cf83ffdbf036d5757dfdb469694d3b3ed3dc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 86a6cf83ffdbf036d5757dfdb469694d3b3ed3dc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fcc8addb7f97700c56b6ad378fda6b94883e8c0c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fcc8addb7f97700c56b6ad378fda6b94883e8c0c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fb4303f4cd9f544e1899c69c9627ffaad477acc3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fb4303f4cd9f544e1899c69c9627ffaad477acc3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fb4303f4cd9f544e1899c69c9627ffaad477acc3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a216b366d8553222a171a1c3fe1e314bcfac21f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0128db97db6623c71073b9e4fde445070b825107 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 471d5646a16cdd51ee0c63a936e7be58e8bd212e have passed. See details.. :white_check_mark:\u00a0Tests for the commit b8baab8a62130460ef7ca70e2a0e2d15d96d8524 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3c3ca3a1571707e2b745c26212909e9fc782cd43 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea502207c36de9dbd7fb1416ea36c7e6c44ed1c7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5de35c7dc23bfe9d9a7f663b13b8e86927a1d313 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 46f7f5b5c796c3c12f05c8a69b1a85f86574d4b6 have passed. See details.. :x:\u00a0Tests for the commit 135995e69c32da6effb2105f3824cc3a4dde18aa have failed. See details.. :white_check_mark:\u00a0Tests for the commit 188ee861468d811154d0d0ea3264b1e552994f73 have passed. See details.. :white_check_mark:\u00a0Tests for the commit de80bd11e150b6c7527b28207454ee2ab2bd9b50 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 33ed858b364cba00035f0f7ba4ef240f72f55f36 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fb43c4cb04ca004812c0f5939c0b07ccf1d07a44 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 98fd653618f134086ec283c6856799c90c6d3246 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 040a422c8ed1539879a561840f426889e2be52f5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 42dcd3bfd9ab65e296d835cd7b41d1b8686fe0f2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit dc3a41dbef60f74a25402a7ee274b13e43d9c786 have passed. See details.. :x:\u00a0Tests for the commit 8b55c8177ebe3ffbb5b420446969647f3842e97d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8b55c8177ebe3ffbb5b420446969647f3842e97d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ed6c27ddab960c0fbb8060f93092e110ebfc348d have passed. See details.. :x:\u00a0Tests for the commit 39935fbf0a90b7b727f7f61acfdd494e52ef0901 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 39935fbf0a90b7b727f7f61acfdd494e52ef0901 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 438c9531732bef07a920ca420537d1fbf9971e2f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 678c0e2b8ea8a47392cdd49b42d1f653a90ef759 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 89597f156bc38fcc9d572a68e0869d188c4dc172 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 89597f156bc38fcc9d572a68e0869d188c4dc172 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 89597f156bc38fcc9d572a68e0869d188c4dc172 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 96992f546bd88589e565d736a3641b8c0cf05334 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 96992f546bd88589e565d736a3641b8c0cf05334 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e5ce4f093e2cb547bbf95d31354c6edbc0210976 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e5ce4f093e2cb547bbf95d31354c6edbc0210976 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c7d2c8c6b31728de03c411a593e90e9871ad44cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5374bf203afe0d6cdd53830f6775356c90efbfec have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ee521a50ed4f685ef7f1e2f31925b44cb2ec982 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ee521a50ed4f685ef7f1e2f31925b44cb2ec982 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ee521a50ed4f685ef7f1e2f31925b44cb2ec982 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7ee521a50ed4f685ef7f1e2f31925b44cb2ec982 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d988b88d244c1feec00b8309706fdf17852cdf85 have failed. See details.. :x:\u00a0Tests for the commit 3f8968fe6cae78cdeb3aee5809d452d0231585f7 have failed. See details.. :x:\u00a0Tests for the commit 3f8968fe6cae78cdeb3aee5809d452d0231585f7 have failed. See details.. :x:\u00a0Tests for the commit 3f8968fe6cae78cdeb3aee5809d452d0231585f7 have failed. See details.. :x:\u00a0Tests for the commit 3f8968fe6cae78cdeb3aee5809d452d0231585f7 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d407613bd9415ddd6126e643b183d887b733e688 have passed. See details.. :x:\u00a0Tests for the commit 4b3aae70187a5067cb87b1609e5502661c5fbc1a have failed. See details.. :x:\u00a0Tests for the commit fdc5cc78cc6fa1b268c75e9f82431cbb343190df have failed. See details.. :x:\u00a0Tests for the commit fdc5cc78cc6fa1b268c75e9f82431cbb343190df have failed. See details.. :x:\u00a0Tests for the commit f46c2a2b8f6e00a45dacf1f06ce85e0f449679cc have failed. See details.. :white_check_mark:\u00a0Tests for the commit f46c2a2b8f6e00a45dacf1f06ce85e0f449679cc have passed. See details.. :white_check_mark:\u00a0Tests for the commit 796d61e5c85e27722a6c3d2b04e4e4699f5731a2 have passed. See details.. :x:\u00a0Tests for the commit 1533f7def49a4640a5eb1fb45a0f9c931125db17 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3cedf53ac6cce6f864ec483b7c964b99886803f8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7abd617b4a67c237961e2e4f5034fa3fc5dd8774 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6e37e1398375fe832b1735a215dfa7fae61d7c98 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e43659bbf82b21242a64d47458b9f55f4597d312 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 50fea7aae70c6325db0af5ca6334e77749c3c6b2 have passed. See details.. :x:\u00a0Tests for the commit 97ba4609b1f05a70ebcad0e418f5f30d30ad6c07 have failed. See details.. :x:\u00a0Tests for the commit 5581320b9b690a1dee7f15c30455f3360050df64 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 5581320b9b690a1dee7f15c30455f3360050df64 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 594da2ae3fad9d0496b8411954472acb0aeb05de have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dd05e6b2f83bf4e6b032d5f5f7328e1d068702b9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8b63848cae10008d215341c3dbfe4e197070690b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 67e79693cd847771b8c2140c078f6da5f5b49bb8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3bd3933cfdaa1b841f8858c3b86733290b5f8bc4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22133dc33c45f401c40f076ed1411c029a26ba37 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6dab10232a10f10c0a1d9f935cbefe242d129609 have failed. See details.. :x:\u00a0Tests for the commit 6dab10232a10f10c0a1d9f935cbefe242d129609 have failed. See details.. :x:\u00a0Tests for the commit 6dab10232a10f10c0a1d9f935cbefe242d129609 have failed. See details.. :x:\u00a0Tests for the commit 6dab10232a10f10c0a1d9f935cbefe242d129609 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4fab135e029c3cba15e0e38acbf1bfd4f404909c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4fab135e029c3cba15e0e38acbf1bfd4f404909c have passed. See details.. :x:\u00a0Tests for the commit 4bd53339d1ea54ec23e8556bf113744b6d78b2e3 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d966e990762126aa06ec9378b6596d2e72ab6e9b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 293a8d013cf43ae12ac94f54bf33561dc48aad03 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 62abd27c335f8b166a645be1085bb6f6827828d2 have passed. See details.. :x:\u00a0Tests for the commit b71f7bab8dda226d90fd7310912f988ef21298d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b71f7bab8dda226d90fd7310912f988ef21298d1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e89d03977364e29ced99e890425b1f415c694181 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb2be4d9a05c11cad1bd41f9ea0f78fa457b88cd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb2be4d9a05c11cad1bd41f9ea0f78fa457b88cd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb2be4d9a05c11cad1bd41f9ea0f78fa457b88cd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bb2be4d9a05c11cad1bd41f9ea0f78fa457b88cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b979fa2f95b2f1a980a497143f9c1604a532ecec have passed. See details.. :x:\u00a0Tests for the commit b18af570fcb95aa789e86e48dc474dcaea790657 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b18af570fcb95aa789e86e48dc474dcaea790657 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b26001d3d9df562e891fadd5a9bb907f98a548b have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3d74489da6b8b9b8741b87496ee9729baa1b48a7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c0a734a3eb376dc1bed9beab7b809ed317cbc72c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2de81eb94b061d1654e89b97b282331df4aa88cb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2de81eb94b061d1654e89b97b282331df4aa88cb have passed. See details.. :white_check_mark:\u00a0Tests for the commit c5cb3742997ea420f1ca90fc1490a8a8fd90c878 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e5bcc3320cf1f4d155dc72be8ccd93d1462cb57b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 73809b209e1937f6b987d929211ae34279889d3d have passed. See details.. :white_check_mark:\u00a0Tests for the commit bf03cb750a484f485a8ac4f1d41e425f302b03ad have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4421ec572fa8f55ceefacdbe29275fe13bdfed3a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 68892f91a09abc12d3d047107ec5cc4bd20c9522 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f501ff949cd172da27f4843bf38f53b0fcb6ff01 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e51b119d2a251efd670ac4d2a28360dc11466f4d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e967f6e912dda64567100551fcc78fde965ba97d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e967f6e912dda64567100551fcc78fde965ba97d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 15081f2fb8eda8c272643fce41b38b59ac5ab78f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 15081f2fb8eda8c272643fce41b38b59ac5ab78f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 15081f2fb8eda8c272643fce41b38b59ac5ab78f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 87e162bda69748f8c170aac533a9af255dfcf576 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 48582d372e0f4543c747ebb7d50db8c2c1f256ef have passed. See details.. :white_check_mark:\u00a0Tests for the commit b7e65e0362f0dc7dc5014e97dbf7846643e593ae have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6ee802351d9378ba65b57baf1337219e23f1b934 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5bacb76b58306db5ea5867c5d73fa2d899517139 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9884838650d6f6673f369d2f3b4a6f2b77e8d009 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f003b29a4e900d635eb398c11461ee245be2e214 have passed. See details.. :x:\u00a0Tests for the commit c48b08d5d698e0c31d0d797b68ab71b0e90ce578 have failed. See details.. :x:\u00a0Tests for the commit c48b08d5d698e0c31d0d797b68ab71b0e90ce578 have failed. See details.. :white_check_mark:\u00a0Tests for the commit c48b08d5d698e0c31d0d797b68ab71b0e90ce578 have passed. See details.. :x:\u00a0Tests for the commit c8d701958b29c7dee444164a7de4c70dd151e0bb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c8d701958b29c7dee444164a7de4c70dd151e0bb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fa7f6c88813707cf2edff63e3f5e5f99412c7d57 have failed. See details.. :x:\u00a0Tests for the commit fa7f6c88813707cf2edff63e3f5e5f99412c7d57 have failed. See details.. :x:\u00a0Tests for the commit 8ebc97147866f121124395b0702b7cf21c0ef523 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 27518b222ba55a857081207a22afa954eedf2f93 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d85faf568823e68ab7e9ca61909a2bc26be9192d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3327daa97bde37d141e495e2cfe97442065c52e8 have passed. See details.. :x:\u00a0Tests for the commit cd8aafa72bc88dfdf6f67e196eed7fc9af9922db have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8eec023e6d59932256aeb8899c575cbe78264d77 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5e33ec828aa3b6411032b0f45dd23cab2b2368f8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1e87854d727b44481566cab5fc196f0cdf3dca4b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 29d6b07a077c4bb538cefeb6f7af1c04a82b3d68 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 586c3f9f8f1c17813a5d9babebf69fe150d5ab14 have passed. See details.. :x:\u00a0Tests for the commit 80ba1dbb476876435f39b6301d44b1dd7e9cf120 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8c9817dd785a772a389de5d476a4b83cebc4f9d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8c9817dd785a772a389de5d476a4b83cebc4f9d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8c9817dd785a772a389de5d476a4b83cebc4f9d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22517a2563ee407d3ee8c4f6430040568b36a5a0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22517a2563ee407d3ee8c4f6430040568b36a5a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22517a2563ee407d3ee8c4f6430040568b36a5a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22517a2563ee407d3ee8c4f6430040568b36a5a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9e218dffde36842341ce1a8a913a38f33c2b9bd0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7f1b218717fe7cf36dd8856e616f246c81892b8a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7d8034ea4c2efdec6c07adcc6b36aae2b1d08b2b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7d8034ea4c2efdec6c07adcc6b36aae2b1d08b2b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7d8034ea4c2efdec6c07adcc6b36aae2b1d08b2b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 90458650581fdbc663eb0177c413030565de6cc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 90458650581fdbc663eb0177c413030565de6cc5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 90458650581fdbc663eb0177c413030565de6cc5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 97e6315fefb9a0e5bd12ed1a2d8a448b1144f9c1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bca934fab9a51b05e5fb1402478d3f54826dfeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2bca934fab9a51b05e5fb1402478d3f54826dfeb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1408267ddf0681edd185025d6b1125b8fb92366 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1408267ddf0681edd185025d6b1125b8fb92366 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b815788d1c99da97d452704a80dc460a3bb48f01 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b815788d1c99da97d452704a80dc460a3bb48f01 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e9544200952b254967b62734650c3742c4bc57c1 have failed. See details.. :x:\u00a0Tests for the commit 712ccc6a6846763b5a84c6278c9b64474396f7a6 have failed. See details.. :x:\u00a0Tests for the commit 0b8d51521c816cfb798f875a1a7b2581111a636e have failed. See details.. :x:\u00a0Tests for the commit 49dbb76ed56e7b94b56c03997a52c21aaec5dd09 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3f5db16dfe2b4a3237dd68a8c50dad406b984d05 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6a84b4cfea4372b3a1852044673a5ddce2514e61 have passed. See details.. :x:\u00a0Tests for the commit c12df86e71839b485e2a1164df9917e251e7c23c have failed. See details.. :white_check_mark:\u00a0Tests for the commit ecd3a8c27e80c8cc7a3e48247da1286cca7d3675 have passed. See details.. :x:\u00a0Tests for the commit 03903c05d3fd67e7c6024f2c824456d55b11afa2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 03903c05d3fd67e7c6024f2c824456d55b11afa2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d2c3c9f0808926c344368489376d359b4ae06ff6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f02efa4651cb9d09820f381ce3f74fd10b752e63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f02efa4651cb9d09820f381ce3f74fd10b752e63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f02efa4651cb9d09820f381ce3f74fd10b752e63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f02efa4651cb9d09820f381ce3f74fd10b752e63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f02efa4651cb9d09820f381ce3f74fd10b752e63 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ed6c1f7c231ac7760a6fb27892db9cfd02a866c8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ed6c1f7c231ac7760a6fb27892db9cfd02a866c8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84e06fb1113bf67c511813a1c3b4b8ff0f978dec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b49b4b6c6e67913870d75a440dc564a1eac85c9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b6845922149e66654b4b29c492c0cdcefb774c6d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b6845922149e66654b4b29c492c0cdcefb774c6d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b6845922149e66654b4b29c492c0cdcefb774c6d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b6845922149e66654b4b29c492c0cdcefb774c6d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b6845922149e66654b4b29c492c0cdcefb774c6d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dc54985f7d113751b463c0145444fdee4660833b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84777d03d37aeb6e2b758758e4cc5e29da280a46 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 468b0f685e9ba2de5a841834cdb8feeeac5e3c20 have failed. See details.. :x:\u00a0Tests for the commit 85f4c9c3ee127cc1e48688441401207f529a7b54 have failed. See details.. :x:\u00a0Tests for the commit 65a99a5a4b618c32332f32629f6ac0ac2623094d have failed. See details.. :x:\u00a0Tests for the commit b9cb76c4c823ac43eb4b9fca22bd18a7d147e291 have failed. See details.. :x:\u00a0Tests for the commit b9cb76c4c823ac43eb4b9fca22bd18a7d147e291 have failed. See details.. :x:\u00a0Tests for the commit ab7087a373a292a52bb87052ade57e6ff795b099 have failed. See details.. :x:\u00a0Tests for the commit 1b9037c414cb2b7d78a630a79a6d615725b7e266 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 8c24a1ad5b82d494e851a53b94c8290d080d51bd have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8c24a1ad5b82d494e851a53b94c8290d080d51bd have passed. See details.. :x:\u00a0Tests for the commit 8c24a1ad5b82d494e851a53b94c8290d080d51bd have failed. See details.. :white_check_mark:\u00a0Tests for the commit d5edad58380c5b9438a2d2169edc49a366abd89b have passed. See details.. :white_check_mark:\u00a0Tests for the commit d5edad58380c5b9438a2d2169edc49a366abd89b have passed. See details.. :white_check_mark:\u00a0Tests for the commit d5edad58380c5b9438a2d2169edc49a366abd89b have passed. See details.. :white_check_mark:\u00a0Tests for the commit d5edad58380c5b9438a2d2169edc49a366abd89b have passed. See details.. :x:\u00a0Tests for the commit f430fa41bf75ba1fe1f14467bc35ac234e919bce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f430fa41bf75ba1fe1f14467bc35ac234e919bce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a0dc894e5a10e1f87bb1007d5df852c516f74fe7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 44f7b4aa5e43448be7e98f56599532b6bd2059fc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 51240d6a250fbabaf1cb572b73b49a8daca5d99d have failed. See details.. :x:\u00a0Tests for the commit ee0b1733055fa96983bd7fa6ca9e9f40cd180704 have failed. See details.. :x:\u00a0Tests for the commit ee0b1733055fa96983bd7fa6ca9e9f40cd180704 have failed. See details.. :x:\u00a0Tests for the commit e52d9a12ebf4655e68cf279c81df2e7a99fd06c2 have failed. See details.. :x:\u00a0Tests for the commit 438a3e43cde20868ebb942ff9b0be71c0b135e09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3e60f4e906250ba19e684cfe01c39ca92c59fada have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3e60f4e906250ba19e684cfe01c39ca92c59fada have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c6ae766380c032301b4467062ee4d3ca8077cd2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c6ae766380c032301b4467062ee4d3ca8077cd2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8c6ae766380c032301b4467062ee4d3ca8077cd2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c5052831ea1acdb31df90a792eb20400086d4c56 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ca77d1a50c213dd51afb85103d9ffe1ce367712a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3cd3293c732246c3efade84928322df1751d6be0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3cd3293c732246c3efade84928322df1751d6be0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3cd3293c732246c3efade84928322df1751d6be0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8633effda58f2539894df025d82d0e331442cab3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f45abbb0b7a37e3e0bf90addc81bcc266f948f46 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f45abbb0b7a37e3e0bf90addc81bcc266f948f46 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 57913afd57ebc1af73ce119f823b2e37bcc63e43 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7e8bc631a8dee167bfb0bb5408fcc50b60858f93 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2ad6d4ad2961fb083c48e2d90e15ef46eba2890b have passed. See details.. :x:\u00a0Tests for the commit 20803d3a6133cc5eb019c839f2061c69cd70e63c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 20803d3a6133cc5eb019c839f2061c69cd70e63c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3fb9da65b83a78ff1a117aa27ef02a8000bbe51d have passed. See details.. :white_check_mark:\u00a0Tests for the commit a3609f96dfc9801a25a642ce6f70a0d77094663c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3b6d5c5cd1c0bfea9efeb708b88bca8524317364 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b6d5c5cd1c0bfea9efeb708b88bca8524317364 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b6d5c5cd1c0bfea9efeb708b88bca8524317364 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b6d5c5cd1c0bfea9efeb708b88bca8524317364 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3b6d5c5cd1c0bfea9efeb708b88bca8524317364 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee4b156a1a87a7afc6490dae32474ec95ca7da04 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee4b156a1a87a7afc6490dae32474ec95ca7da04 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee4b156a1a87a7afc6490dae32474ec95ca7da04 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee4b156a1a87a7afc6490dae32474ec95ca7da04 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee4b156a1a87a7afc6490dae32474ec95ca7da04 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18540c098c7654143e1ee1c559fee210013e27a1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18540c098c7654143e1ee1c559fee210013e27a1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18540c098c7654143e1ee1c559fee210013e27a1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18540c098c7654143e1ee1c559fee210013e27a1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 18540c098c7654143e1ee1c559fee210013e27a1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9881e06e0d9b2fdcf3cf92033bed2269174ad2f0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a8c5931fb8c810ac9c46b56cf062c3acaf39b3ed have passed. See details.. :x:\u00a0Tests for the commit efc9f1c36ca58258929821ffee7414c51afec0be have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 173baa559252181fc78c0e006c133de7450e0ee7 have failed. See details.. :x:\u00a0Tests for the commit 7a15c0dd94d5f722573ffea7db039cbfb747a42c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4ee47af4dbf70c7faee12877c5308790754d4066 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97c04170a684f1febaad28c26df0d288a92ac5b5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f467339b1ecc3171b1c9b97fed075f4e95055ab7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f467339b1ecc3171b1c9b97fed075f4e95055ab7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f467339b1ecc3171b1c9b97fed075f4e95055ab7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2f7ab61fc93cf5de2ef6831becf9fbff8ad9091d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 00375d6700db24f110ad246388553a2589e0a629 have passed. See details.. :x:\u00a0Tests for the commit 6a70d590fdada44b3c8a59d37e97240599a61e50 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4327b65c6f6d4c7f7e5cbc9d56aa0247380bcc6f have passed. See details.. :white_check_mark:\u00a0Tests for the commit b66ceb9b893d0e289a9fb46507747ca2c2bc0685 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 746cd34deab202ca8b4cba3d5c43fcdd142bc0b0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9edb9fb75656c8e15c17eefeac016dd3c3820a98 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8cc4a3a783708b8b49f07407b32576c7c1e21b57 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fccf510b07a7689b02246c41f009f4e250f464f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4fccf510b07a7689b02246c41f009f4e250f464f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b50f1f5f1ebeb108a2815437148422b61ac2691e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a8ecefa7e13c628652bf68c0785343963ac7eee have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a8ecefa7e13c628652bf68c0785343963ac7eee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a8ecefa7e13c628652bf68c0785343963ac7eee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a8ecefa7e13c628652bf68c0785343963ac7eee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3a8ecefa7e13c628652bf68c0785343963ac7eee have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74d0344701e67fe20ed71f1ca4a9d2d4cbf42b68 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8603d492c2fb62d9a30ba68ce37fef043e577d0d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8603d492c2fb62d9a30ba68ce37fef043e577d0d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 219fe150a51701c44e0b3ff36546f89e64587c63 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5e0f21dc435ab52355d0be3ac0e69bcdb765e654 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f9b26591c28eeef00e8d5ea8d2e799a5cfe6aece have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8a6dba73d997fd0c92e5ebc8d8795a6aa249f5a3 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 665e2fd1eb25981897f37605ab4a16d058e75178 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c6f67b06c3f8c0122ed321d2db9d61830a1b464b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 06648d943f9e6d9d7222735a96275d417cbd0b1a have passed. See details.. :white_check_mark:\u00a0Tests for the commit be405e7436927f32e90d713ac2ace78bd2ce96e0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8ba465905143cad14f6cd55e41704deebd9913e5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5903b6d2482f2570c6a0a1a8d6b4fce8835ba62d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6fc8dbf772b542a24baa5f6ee0247ceb74eac42d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 09eede70dcdf867018a2f0771665fd4ec3ae1d73 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c5b168e05bec2eb8323eb1c22f2555f8754b8b82 have failed. See details.. :x:\u00a0Tests for the commit cf0bc82b0628b1da3b9cadbf3904e58708760b2e have failed. See details.. :white_check_mark:\u00a0Tests for the commit a2eac1d34bfd95ece63a2bf4f8dbd8ddc586c8cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ec83346846be91abf833138bf766f6116465fba7 have failed. See details.. :x:\u00a0Tests for the commit 781f0cb37b7d061f3c81ad2a12488be6a0dc5dd7 have failed. See details.. :x:\u00a0Tests for the commit 781f0cb37b7d061f3c81ad2a12488be6a0dc5dd7 have failed. See details.. :x:\u00a0Tests for the commit 781f0cb37b7d061f3c81ad2a12488be6a0dc5dd7 have failed. See details.. :x:\u00a0Tests for the commit f3c86431fc6ac290d2dbf47d0bb09f435ab03ef7 have failed. See details.. :x:\u00a0Tests for the commit 9160e4f69ff2d1e003168b93860bcb6cb5732d37 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9160e4f69ff2d1e003168b93860bcb6cb5732d37 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8bc4a825af21f8d23e1f851e289801e3f4cc90c1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 32fc2586d826a561789da275ce30489c3d6aaf28 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 492047d91f67c49d9cf0c75950454651be6d1c7c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8ccb7402f8518c7a8ea1c0e720ab4ed6e50604cf have passed. See details.. :white_check_mark:\u00a0Tests for the commit faa26e7be3cb254898b3dc2541ed0e6ace5bdf2b have passed. See details.. :white_check_mark:\u00a0Tests for the commit f9872ab3837fe8a37a529d327c3156bb9669a014 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3ec9c4fe46815b5c58ccb04d10b1724edd323e67 have passed. See details.. :x:\u00a0Tests for the commit 4fff771c7847816fdd918cc70cbe8d64fe5a9764 have failed. See details.. :x:\u00a0Tests for the commit acf75c027648717a18809b9423b62139dc8183be have failed. See details.. :white_check_mark:\u00a0Tests for the commit acf75c027648717a18809b9423b62139dc8183be have passed. See details.. :x:\u00a0Tests for the commit 449a412928619452dfa6c3fbd03a8117498ad04c have failed. See details.. :white_check_mark:\u00a0Tests for the commit e532f1566cbd3fb75536e77e26ac9be61d100499 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ac4471501bd89185b50f2df87795e2389ec4cec3 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d8fa3aad3b73eb5f8ae52f88875730d2169ee70c have passed. See details.. :x:\u00a0Tests for the commit 7078e609d0d1d0922c98690a73544d6c848d8bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7078e609d0d1d0922c98690a73544d6c848d8bc8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3bc58e295748112e420b54da88e76cda528bcb46 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3bc58e295748112e420b54da88e76cda528bcb46 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3bc58e295748112e420b54da88e76cda528bcb46 have passed. See details.. :x:\u00a0Tests for the commit fb67c1f4f941b3ee5b52da37cda66f0f3b5f4270 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 626a9de7555d3fcb445efa2e8bcc61c2b58c6393 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 626a9de7555d3fcb445efa2e8bcc61c2b58c6393 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8606f25aff016926f11435ef8e3ba260faac84a7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8606f25aff016926f11435ef8e3ba260faac84a7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 16e293ae8f4fc3b5e63ead511eec018fc983a4ed have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 28d8a2990618c60f2868fae0e66d7f30a509ae7d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ec9703b4ff15dec7410dd2bfe4be8159e10e8d8f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5cfc62f6abddff69834fb9930cc260f0a6593be3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b2968084e9e533a2245954e7e2d4f3291f4340c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cbbc7f8dedd98af6a6b90bcd2b1b3a3efc187afa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 95ed9954c566fc0d51f472b6300b82bdd359a0dd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 95ed9954c566fc0d51f472b6300b82bdd359a0dd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 95ed9954c566fc0d51f472b6300b82bdd359a0dd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7163855c8e988b21181f76d8a69c50e416880cee have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fc452581d0a8994ba15c436bdd4677ef66500f9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fc452581d0a8994ba15c436bdd4677ef66500f9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fc452581d0a8994ba15c436bdd4677ef66500f9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8fc452581d0a8994ba15c436bdd4677ef66500f9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 404633be9d90c427376a0151d9a977246c351a22 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8216927ae03bca66a1a42dcc9f0222b1d5c50515 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8216927ae03bca66a1a42dcc9f0222b1d5c50515 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8216927ae03bca66a1a42dcc9f0222b1d5c50515 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 952477c3c6edadfabc34929d2b224a7b55ac5eb6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94862fd462754f640a4bcfe6c3a3b15d3f956c64 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94862fd462754f640a4bcfe6c3a3b15d3f956c64 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94862fd462754f640a4bcfe6c3a3b15d3f956c64 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94862fd462754f640a4bcfe6c3a3b15d3f956c64 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94862fd462754f640a4bcfe6c3a3b15d3f956c64 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e174a024d421c60760188bbc5b5f168980a14ae1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e174a024d421c60760188bbc5b5f168980a14ae1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e174a024d421c60760188bbc5b5f168980a14ae1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e174a024d421c60760188bbc5b5f168980a14ae1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c911dc17a221350916459bea8ea3feb3c18a34be have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 838ea669ad572d97eb8cb3b86858f408fe4c785e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 838ea669ad572d97eb8cb3b86858f408fe4c785e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8faa65f3d8808ec4cfe0a5e824a3631309cf23e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8faa65f3d8808ec4cfe0a5e824a3631309cf23e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c8faa65f3d8808ec4cfe0a5e824a3631309cf23e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ecb9a23275aad2dace185138875a48c4813cc98d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 47ca7c9148829fba5c59d23b6bdc7695cb82dbac have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fd0fe05b1a427b611b5529d5d8eca6d650a4b54 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fd0fe05b1a427b611b5529d5d8eca6d650a4b54 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e761d78c9bb2d85e409981b2c59a139dee367480 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e761d78c9bb2d85e409981b2c59a139dee367480 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e761d78c9bb2d85e409981b2c59a139dee367480 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9e2953572f90c6e7788531aac7d47e88640d8115 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1bcdfcfbd2826774667daf559006f09b50b3e34 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1bcdfcfbd2826774667daf559006f09b50b3e34 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c1bcdfcfbd2826774667daf559006f09b50b3e34 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c13a355143478cb3102bd52a306d4c779134d0ae have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c13a355143478cb3102bd52a306d4c779134d0ae have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 432b2e0ae00b5664569076670e34107052e9d4a7 have failed. See details.. :x:\u00a0Tests for the commit 1abc0a9408b74eee06e13f3255205cdb7cc29aa8 have failed. See details.. :x:\u00a0Tests for the commit 1abc0a9408b74eee06e13f3255205cdb7cc29aa8 have failed. See details.. :x:\u00a0Tests for the commit 1abc0a9408b74eee06e13f3255205cdb7cc29aa8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1abc0a9408b74eee06e13f3255205cdb7cc29aa8 have passed. See details.. :x:\u00a0Tests for the commit a46d2894e271977fdd89922e02fc79b8b872dcec have failed. See details.. :x:\u00a0Tests for the commit 8836e0c0129ee0211df7df5234183726ad3ccc6d have failed. See details.. :x:\u00a0Tests for the commit 920a32fe7df4193d8ddadc61926775663c3c0d8b have failed. See details.. :x:\u00a0Tests for the commit 05f64fb56ccdf2860449d5da28ddd3080166461c have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3541fa903accf7c0cd235a1b1512db13cafc817a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 22d9e620b0111a6867ee650cbb85da7cede75dc7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit af34473db82a08a0e45f9dfdad35fd1cf23af0ff have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d53b5f2fb2cb75745e479e4e0aae063a9ea4a467 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2833bfc05d604da76e8bd491a3d398b3f6b78d78 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 891df1f4a6863a9b3f56a1ea53530a4122922e59 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 38c1226115d28515bad0b179a3c3ad65c49ecca4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 38c1226115d28515bad0b179a3c3ad65c49ecca4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 38c1226115d28515bad0b179a3c3ad65c49ecca4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21efb7377235ae1f1e426156e5086aa10d4a901a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 89eb99ecb69f3a9124d064ef13a5225a515518d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 89eb99ecb69f3a9124d064ef13a5225a515518d0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85ff03d4188860433cb6a570d57a39a1b9b4733c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85ff03d4188860433cb6a570d57a39a1b9b4733c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 85ff03d4188860433cb6a570d57a39a1b9b4733c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit da30553a9a8f930cb65ec1110a0c3b5061f4ca42 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit da30553a9a8f930cb65ec1110a0c3b5061f4ca42 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d2047c5c594d79f19adc8bed662856f11b705a1c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d2047c5c594d79f19adc8bed662856f11b705a1c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78f4e96e1f510ccc233d5d649a4e269d44e4de3a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 15c66ca1a688f6df58265efab521342cb2dc4357 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 733a35b7fb1aba649131d6bfa9462874bdde759a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 733a35b7fb1aba649131d6bfa9462874bdde759a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 733a35b7fb1aba649131d6bfa9462874bdde759a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 733a35b7fb1aba649131d6bfa9462874bdde759a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 733a35b7fb1aba649131d6bfa9462874bdde759a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 67d7a1b3ddc1de3533195b6e8516a9560e794197 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2463bf42c853bc96e4372b31982d2932cde21e8d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b59656962a269d7810b82e186a88658ac67a9d62 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5a1f32b07cf236ecd4040135a3165d8f9bd98cb8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5a1f32b07cf236ecd4040135a3165d8f9bd98cb8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5a1f32b07cf236ecd4040135a3165d8f9bd98cb8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5a1f32b07cf236ecd4040135a3165d8f9bd98cb8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ab9440af49e9580840a4afa5758a285f7623feb6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ab9440af49e9580840a4afa5758a285f7623feb6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a434abb95142e69be00985dc82e8e5b9830ee7e have failed. See details.. :x:\u00a0Tests for the commit 2d45bffc9c2d8219424cdf6e536f32de23d12a6e have failed. See details.. :x:\u00a0Tests for the commit 7d07be9746a3ebf25ca195118a5a3dbf3f3f798e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 6e24e75eb277489a6b27ed1d1817c183f3bb961c have passed. See details.. :x:\u00a0Tests for the commit 54cd4a728fe155450839d6771a2d18b92d98cb4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 54cd4a728fe155450839d6771a2d18b92d98cb4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4c3bdf7d3cf4df4ce91dea186df251df87450587 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4c3bdf7d3cf4df4ce91dea186df251df87450587 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4c3bdf7d3cf4df4ce91dea186df251df87450587 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0a813e555a3400dcc488cde5bab9365051a05df2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0a813e555a3400dcc488cde5bab9365051a05df2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa4f4aa655caa61dcf358c33df6babcdc2066a14 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7791e8c914172c550ef9ee4b7cd4a208842ccf63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7791e8c914172c550ef9ee4b7cd4a208842ccf63 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ddb507d6ef72b46d87f78b692558cc265d25a94c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cbbdba64786d01a564b5dd9ad44c390595cd250e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1bf35cbb5ac75f628c84240163736b5ca8db101 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c1bf35cbb5ac75f628c84240163736b5ca8db101 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f478241c589ab74b869a5c11042a6f7e7a63a696 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00a1a31847247872efd5d26887835fc6a28e2fe6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00a1a31847247872efd5d26887835fc6a28e2fe6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00a1a31847247872efd5d26887835fc6a28e2fe6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 00a1a31847247872efd5d26887835fc6a28e2fe6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6a053e1e6572ccc43e808f5018ba99dc3ffcbf61 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ca423e15909c639a6eaa8d8dd301d9305e57f48d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9c698bcc8dba766a9b287868c91502369b15846d have passed. See details.. :x:\u00a0Tests for the commit 5df82c62b56dc50edd5834214eeb586db607c0a1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 37ba7c67d3da59998710db9069d2c85d14b646bf have passed. See details.. :x:\u00a0Tests for the commit 980f9b9bee98fa97ebc273ac6b957476ff423d8d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5ddd92d7736cbe4a2513b23a90463703a0fb6c5b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5ddd92d7736cbe4a2513b23a90463703a0fb6c5b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5ddd92d7736cbe4a2513b23a90463703a0fb6c5b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fc8d60dc2259763735fcc2005cf605ab574c3410 have passed. See details.. :x:\u00a0Tests for the commit 20d278a205c514b1c943cbcd1b4349aa76284759 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 75820d7e62ff6ca81d7db3f599c73c21da3dfff5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8746ec22cb6e78685b99a7c03c8544189f0cb8ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ac103160e7f4b17f2a7f600c40ca91a203416ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ac103160e7f4b17f2a7f600c40ca91a203416ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7ac103160e7f4b17f2a7f600c40ca91a203416ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 10e4dbabaeaed034a87e1124d084a472c16daac6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 93c67db2f30aaaa10e49ab6089c0d342cc25675e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe910cdbac34b2e43b6e5064d5105105311836bb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit accc073c398139ae98edd5f7d73a580232de1e2c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 93b287125b423ecf0d95463f4ff06eddef031a66 have failed. See details.. :x:\u00a0Tests for the commit 8e27982ab01cdcc4f3d14a3590d978133dee582a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 67f0b6a8ed7b205545d12a01f4de139bf6c8d7f1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 67f0b6a8ed7b205545d12a01f4de139bf6c8d7f1 have passed. See details.. :x:\u00a0Tests for the commit 0274095f8aa8d0e765a0df1e5e115feedfc66223 have failed. See details.. :x:\u00a0Tests for the commit 0274095f8aa8d0e765a0df1e5e115feedfc66223 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0274095f8aa8d0e765a0df1e5e115feedfc66223 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0274095f8aa8d0e765a0df1e5e115feedfc66223 have passed. See details.. :x:\u00a0Tests for the commit 0cbec32f70e1ce0dfe92e11d877ca4e4236fc05d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0cbec32f70e1ce0dfe92e11d877ca4e4236fc05d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9c57b540fa0dae86fa27c1bdf4113d82450ca284 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 9c57b540fa0dae86fa27c1bdf4113d82450ca284 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e2c2cbc8cb52565fcab88b166c1182a4f5bb40dc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2c2cbc8cb52565fcab88b166c1182a4f5bb40dc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e2c2cbc8cb52565fcab88b166c1182a4f5bb40dc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit be98b6510979d318a1a796eac6e89701bf4accd5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit be98b6510979d318a1a796eac6e89701bf4accd5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2a581d0a741f661eadf50ef2eb3d22592da9aeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2a581d0a741f661eadf50ef2eb3d22592da9aeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2a581d0a741f661eadf50ef2eb3d22592da9aeb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2a581d0a741f661eadf50ef2eb3d22592da9aeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e2a581d0a741f661eadf50ef2eb3d22592da9aeb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16c12e20eb80759de5c5a259fc059cc6c805af4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16c12e20eb80759de5c5a259fc059cc6c805af4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 16c12e20eb80759de5c5a259fc059cc6c805af4e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ebd5e21e2454aa5ca0a5cf2591fbd9dda9f91d11 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d0caf2b49a756190cc3508a2abc7106b3699ae45 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5eaecabf5e1e29211f55f0d6946199c7bf1a465d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bf6e8dbc2e6e4b39c9bec049332fc7a4a1197945 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bf6e8dbc2e6e4b39c9bec049332fc7a4a1197945 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bf6e8dbc2e6e4b39c9bec049332fc7a4a1197945 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f273638a4f7489eea4cd376a3e6d849927b78403 have failed. See details.. :white_check_mark:\u00a0Tests for the commit cf68b3690ccb8825de1b8794a0624c09af9a07ef have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1f9915a35c82494f53079203d335eee0f96c5ee5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fa645c9ea717b9e439789c96236f4dcdc30c83c5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 43f872ce45bd412402fcd7d0bf3533b996f9f8a8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fd55dae69906cb0e405e71e84f082d997eda9f3c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 05a8f56733c2e4648a27ff1050631502b75ae493 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 77cc6c33eda70ea73d60b8e07756c68bc48c4f4f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 15d92171493fec8866ffa4c9297ff125e3bc6ff0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2814f549d30ccfcdc545bf3f43a85c32101e76f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2814f549d30ccfcdc545bf3f43a85c32101e76f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2814f549d30ccfcdc545bf3f43a85c32101e76f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2814f549d30ccfcdc545bf3f43a85c32101e76f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 456bfc026ab0accbb4a0e6caa756533e37cac881 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 456bfc026ab0accbb4a0e6caa756533e37cac881 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f14056b1cb1f39eeb70e6aab7c4101045eaa1fcc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f26de11076295bb25f7fac0ba7c89e256fdb454f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6c24d821df9802cf2939c4e9b7c5cbf5a0e322e4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 445ddbf02693d414d9fe3b2377914d263fcc07d4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fbc9b2053462a7fbf8d3440c653cebe92cad9e81 have passed. See details.. :x:\u00a0Tests for the commit 1d0c8bcef9f33164b5ccdc9a3ae07d1baa12e226 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 58ad74e856cf8d43466a35b932a823869b766f71 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6af6ceac7c6233f4f9e3fa995c622886ea9a87d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 15bafa6b39fe9018fd95af581fade28b29b0ad36 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ddd0e41511c68b3f38098892147d72ea104c7221 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ddd0e41511c68b3f38098892147d72ea104c7221 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8a6910d23f3f9e6f92908d318864f9a1647b02c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8907886f61779de89a85edf62386f8db864c8e28 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5690ce4b350dfd7d71b03d28d427562758394c22 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5dbffbcddc77a7de5be2e99eb0e2cf297d6b5f4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4a0d2d4bd7bd7e56215447ca21aee59cdd0a4134 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4a0d2d4bd7bd7e56215447ca21aee59cdd0a4134 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a0d2d4bd7bd7e56215447ca21aee59cdd0a4134 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a0d2d4bd7bd7e56215447ca21aee59cdd0a4134 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a0d2d4bd7bd7e56215447ca21aee59cdd0a4134 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b6bd44ad72b7268e9c577fd0f267860774c312c4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b6bd44ad72b7268e9c577fd0f267860774c312c4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 098eff6521ecfb60c027cf3b06d1e35993260807 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0906ce5a66991407c087c547a1f6befc0b26a264 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0906ce5a66991407c087c547a1f6befc0b26a264 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 274b76d1546aca621f5b4ddb6a0702bde97f9499 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a667989dfc29a55d74664b2674aa2cc09487891d have failed. See details.. :x:\u00a0Tests for the commit 14bc5c4ce3dc56c6a7eeb19bf6fd33a529fa5080 have failed. See details.. :x:\u00a0Tests for the commit 6fb70d222d89889a9ad676826a0ab6944cefc17e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6fb70d222d89889a9ad676826a0ab6944cefc17e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ff457502f915beff8aae5605764031ca09a1430b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ff457502f915beff8aae5605764031ca09a1430b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c94fcde063c7d76cfeb57076e8fcb04e04c6abb2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c94fcde063c7d76cfeb57076e8fcb04e04c6abb2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c94fcde063c7d76cfeb57076e8fcb04e04c6abb2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d21548c22a2695ff17e5d8e9765744a7479d7047 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 03c3efc231766e7282133cb50bf4e91b00b388a4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07d5abb123be7f18885af752ab4e6ea56ac9a162 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 770416082636da342567b783e49890754e25b5df have passed. See details.. :white_check_mark:\u00a0Tests for the commit 57a4f941dd58a1cfaa6ca2494ded1dd470004e1d have passed. See details.. :x:\u00a0Tests for the commit 165bf393a6582403e40a1ca72978c57f46af8add have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ceec79fefb21a5135971fd6fecc2835e9b92c1c2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ceec79fefb21a5135971fd6fecc2835e9b92c1c2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 80608ba9c67d5588f13dad7d8f6b67ecaf24a56c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d4bcfd2dfbb34ab1a1e5171aa17438eaeb80a621 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d754a7c25d7edc739cd7fc194d55efe0d8206fc0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d754a7c25d7edc739cd7fc194d55efe0d8206fc0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3af27321b8234f59b985c6ae3555e549904dad38 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3af27321b8234f59b985c6ae3555e549904dad38 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3af27321b8234f59b985c6ae3555e549904dad38 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 494ada4e377943d092fbaaa948ed4c9e2929d161 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 494ada4e377943d092fbaaa948ed4c9e2929d161 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2e285fb367c04f707aad37e808546ad080fd87cf have passed. See details.. :white_check_mark:\u00a0Tests for the commit 15d7155258746e02f2198d93bd6271dbe70e1e73 have passed. See details.. :x:\u00a0Tests for the commit 04dd4ad391d7b3ba4e96ab0bc83e3903b1e26108 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 621d3512f1569b10e4375e42820d610021f7f38a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 621d3512f1569b10e4375e42820d610021f7f38a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74702cc5de7a303536f7bb56e1ab1b5e9cf35f4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74702cc5de7a303536f7bb56e1ab1b5e9cf35f4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8b09ba5364553ac7fe429277fdb39b32f644cf3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f61ff0d7f663531307817ef67a4e5ad4c5473483 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f61ff0d7f663531307817ef67a4e5ad4c5473483 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f61ff0d7f663531307817ef67a4e5ad4c5473483 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cda7bd8fbe1188975e9a219b3fb4242f4d2538ee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f5a2fdbcf8181fa5efb57dea824541bd66c2d749 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 50299142723e6db1bbfcd6c0d0bb7b891a1170a4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2efac326b7b9c3a8e853243be51f5fa77339dd33 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 08b68cfc167b2540eb484ba44a60235a39500941 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 08b68cfc167b2540eb484ba44a60235a39500941 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 507ed1b8b47241ad8380efbe54e53e3557852769 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 33fcd16f6009743d4960985a4a1019abcbd902d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 39666268ab7814df5e88967426110f6ce6e647bb have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 39666268ab7814df5e88967426110f6ce6e647bb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c42a6f777185914de56bd6ec850e00426b3305e4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 48ba58dbc371996871e737475789f291c8864d69 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6bb02a1ff52ae79c05a9daa5f8a62b570be9949 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9317a26e2526d693765a6f765915f5ec5e525376 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e8338fe4abee7762d045cf0ee7cabdc9330fbc49 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f891a629c82db9d8d059851d08dce2eaaa517356 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6915e60fdeef29c29f13166c3cea1ee6c340e2d4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6915e60fdeef29c29f13166c3cea1ee6c340e2d4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c0705210c5c79c5633b52573fda7412b98fa0628 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c0705210c5c79c5633b52573fda7412b98fa0628 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0fe1e69c95c77c78670b110880cecad5ed232e27 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 59d2c55d0e9b9282eb5eccd2a8aaffcf5f6dbe56 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d99d810ee972917e37fba59b75245e86787e361d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78a6a3f9c4c3f5c8c477b8871d0600221a550354 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78a6a3f9c4c3f5c8c477b8871d0600221a550354 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 250c80df967cdd618ab7ed7b22a3da165e00741c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c766fa14b596409f7327f034f475611192fd072 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e213cdd9dcce204c2741beaf5c5891bf62cf5b08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 38ba8bd22fe486079ed8a43afe1c256675f42be7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b282ae557e3b21b1f054d8e60848ed908b12477f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 02f3aa2c25fbc89f71f2074d9500a4551b583a66 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e2ef49a057dc3394a13122277506067d4defc913 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e2ef49a057dc3394a13122277506067d4defc913 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1f5ff22d10eba222b69d6061bfc799931db9380f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c6c735ab2e042bca88aec5421c397117697a3a3a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7679b9443df6bbbb3362543b78cdd73c7f21d8e0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7679b9443df6bbbb3362543b78cdd73c7f21d8e0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 137703bc54aa9aaa67f99496eb871a7f4c74dd72 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 137703bc54aa9aaa67f99496eb871a7f4c74dd72 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7395d2fd717e18223c41309b7370bae15f276f36 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit faf9a94d0f7c27bd4619ab274ac696dc251e8b7f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6f5e8b40d45cfd4360331b6a5438fd4dedb048d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6f5e8b40d45cfd4360331b6a5438fd4dedb048d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0713de05f2186c2b169b17bc403c01ce7e84fbcc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0713de05f2186c2b169b17bc403c01ce7e84fbcc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5c2ad38f2e03780f69bfbb9a6a3e416fe681b0a6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5c2ad38f2e03780f69bfbb9a6a3e416fe681b0a6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6468a76ae8062f6c74f7b15b1f51e97e40a6eb09 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e0a2ab4ecf350f62c415706ab417c8dd00e6d45c have passed. See details.. :white_check_mark:\u00a0Tests for the commit fa65203de23286c51196fa791259c0ccf01bd88e have passed. See details.. :x:\u00a0Tests for the commit 487ff1c81dfc79ef4c48d7d145cfa49d47976bbb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 261c2011afce09f60e0854abfc97576ada15de59 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 261c2011afce09f60e0854abfc97576ada15de59 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 261c2011afce09f60e0854abfc97576ada15de59 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 724ba55d934d8502c569e6bf5cdbb8b99d8dda16 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 724ba55d934d8502c569e6bf5cdbb8b99d8dda16 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b1c65f260cf1e728304b4f9c1b732d0cbcd2c249 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b1c65f260cf1e728304b4f9c1b732d0cbcd2c249 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2978d167f0bbc495f7830fb6f4db6e87083edf1f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2978d167f0bbc495f7830fb6f4db6e87083edf1f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ed75840f7f33f280c3107a3a0f6c7b15f8ee352a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ca1c70a068dc8dd0e49569615c89ddc4e56ecce6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ca1c70a068dc8dd0e49569615c89ddc4e56ecce6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0cd9bc75cdef23bd93d7451962d788a7848985fa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0cd9bc75cdef23bd93d7451962d788a7848985fa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0cd9bc75cdef23bd93d7451962d788a7848985fa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e10ee807502c852883107afbd98d5c80e139ecd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0e10ee807502c852883107afbd98d5c80e139ecd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 667a7832848b1a72ae2bf7d4d9f9ae01ecfa37c0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a4de7f533cecb37613bce64d528bc98e2f23ae08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a4de7f533cecb37613bce64d528bc98e2f23ae08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdabe64af6335de589ab15ec2ba99a6d42c291a0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fdabe64af6335de589ab15ec2ba99a6d42c291a0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdabe64af6335de589ab15ec2ba99a6d42c291a0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fdabe64af6335de589ab15ec2ba99a6d42c291a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ba1a006d44ec0d18f2637fd693a6eaeafba6cb4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 47d08c224f9a2c21f45ef1a1b152003cd9eb73d6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1095d7f3b255544b31bbbda9c10ae6dfa4d195cd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fa1e75ad8f7c9ae0bc772be21816e0a09dea7971 have passed. See details.. :x:\u00a0Tests for the commit 355f0cb015e5ba4167a43c2bda7c7e1fa3cc850d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c2f2c4471e58264555a102debd5ee190c57fd577 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c2f2c4471e58264555a102debd5ee190c57fd577 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c2f2c4471e58264555a102debd5ee190c57fd577 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9c25b7aa8b39e26358899a631a1436b492ada6f4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 56ba24739e90e190ce4c12e12457e586787e7806 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit beaad3005b7958576580ced299154dbf20fb04e0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e4365591ef0dceb719620269a610671a98231efa have passed. See details.. :white_check_mark:\u00a0Tests for the commit 12e0ab803015843c4f3c9c593f96258dc93fcd80 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2041955f55862b842e24416e46d91f2cedab88d4 have passed. See details.. :x:\u00a0Tests for the commit bbfd21ae2b57825351edfc2b2c97a9bcc5efcbec have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6f4f39604400d9d3a6f390caa6766651cbd29c79 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7a873661c72b885852efdfeb6948c3bd13333c48 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7a873661c72b885852efdfeb6948c3bd13333c48 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef92d185030975a6aa2acbbc70c245d631c76f15 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ef92d185030975a6aa2acbbc70c245d631c76f15 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a552b56c5b111f0100e15c4eb1dfbca5048fa18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a552b56c5b111f0100e15c4eb1dfbca5048fa18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d88fc8459960574191cefa274ab947c43f64fb0d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e4cba02076b5278ef11a03036e2182b72cdaaa98 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 96f80bd8ff0ad9a95b45669ca3cd8251583bf6cc have passed. See details.. :x:\u00a0Tests for the commit b741b28a064100ca98c7ee4ff06057832e7005d8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8f624f136540a8df8e225d3bcab73137bbb232f9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8c9771c31c11fdddb5f18c5ce620c2a1de1b51b6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 54e4f942e77bb0624b09a0bdbef2681d99f58715 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 54e4f942e77bb0624b09a0bdbef2681d99f58715 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 54e4f942e77bb0624b09a0bdbef2681d99f58715 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d3d595e88959664dd2e60bb330d3678149fabecf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d3cde6f0fc7fbd4aa9bb252448f6d706b42542c7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d3cde6f0fc7fbd4aa9bb252448f6d706b42542c7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 09a04352ccacb2ed696d50f2569838bf87dca3fc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3aed3802064fe210d8f1fbca48d02b3d507e872e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5038795dc4157729e0a48f50bac1be7680110116 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 819bc4a0c0ccc35cbe83ffa42aaf0392c30275e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0b01831e272c45df05911efb913dc487f039e51d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b01831e272c45df05911efb913dc487f039e51d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0b01831e272c45df05911efb913dc487f039e51d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0b01831e272c45df05911efb913dc487f039e51d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 108657f6cfb93269a46a9fa863798a0eb86829c4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 5fe5b912679725ff0b761fd19aa051e73ec9dcb5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit edec9e36fcf3c65e7c404d3dd085c0add86f76c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2063e16d1281d621b55293ae946fb8c04f729560 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b076c98144e310da91316f3b2ecdc4367a1a8c84 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 23b8f670a3659fef08b4800837823e76920a5f41 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 524e3c700bf7df1dfc56ec46f674135afa1dc1a3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 936a795ebeccc4d66c3250db64f681114fe5b7d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 936a795ebeccc4d66c3250db64f681114fe5b7d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 936a795ebeccc4d66c3250db64f681114fe5b7d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c08b6521813470e9ab12f2079e7f25dc959c5c3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f72d31674ac95735425383929dc178df7ed120ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 88fcc7bb01b63c4c3476c730476a94010df5dece have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 880e3c7da41aad4d93c1208c10d82bd6c41c9d90 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit adca69bb38090644859d605127a93a24f9b4688d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit adca69bb38090644859d605127a93a24f9b4688d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 79c9f0033bf5b31c229deb072b423608b6c7bebe have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7550c576bb45c4ddb74a3ce220c6c7dc6984ccf0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f3a2d52ae354450d0818e56a409c523a8fb255ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 11c336623bde168e4c3b3daf63955699ad483e79 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 11c336623bde168e4c3b3daf63955699ad483e79 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 11c336623bde168e4c3b3daf63955699ad483e79 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 87ab0bcfcdcbd48969a09e97c27a999f16efbd0d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 87ab0bcfcdcbd48969a09e97c27a999f16efbd0d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e839b6e49285bc7ba9c9255d6b5d4ed268a87fdf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4761533adcf576c6907f5658d7b744ccafc7ac8d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b736d386c756adf2efaad635d9e256706e93c883 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b736d386c756adf2efaad635d9e256706e93c883 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b736d386c756adf2efaad635d9e256706e93c883 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d87b51079bd3bcc33f56e96b698af82d0373b9d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d87b51079bd3bcc33f56e96b698af82d0373b9d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d87b51079bd3bcc33f56e96b698af82d0373b9d0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 29ee325b7d9c6c7afac73b4ae7deac1ef90e421a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1c38bdb4b144da6dbbdad822b9b7c1a4aea655da have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 1c38bdb4b144da6dbbdad822b9b7c1a4aea655da have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 96a61fcd86ad381de07e2c9e4d766241c6a913ce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 96a61fcd86ad381de07e2c9e4d766241c6a913ce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 96a61fcd86ad381de07e2c9e4d766241c6a913ce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5ef519e5f60caa9d5a2e1992b5210b3d5b0651d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5ef519e5f60caa9d5a2e1992b5210b3d5b0651d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ca4b5deef2c60b076fe22efc1f603cd6697d9b4e have failed. See details.. :x:\u00a0Tests for the commit b8c0ecccc7eff7cda5d53d36c14eac71fdf70769 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b8c0ecccc7eff7cda5d53d36c14eac71fdf70769 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8c0ecccc7eff7cda5d53d36c14eac71fdf70769 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ad47ead4007ceb9b97ed270f9e0cdbc3bce10e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 51410f4d4f18febe5bd14119945fe1d894922900 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f80e71f3926ad585d4ca62280f6364926e9bfdf8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f80e71f3926ad585d4ca62280f6364926e9bfdf8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 93fe44e3c89fbaf2ebf891319de52d5c97338414 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 93fe44e3c89fbaf2ebf891319de52d5c97338414 have passed. See details.. :x:\u00a0Tests for the commit 9f8d92cffa274120e1b6e2faf2efcf9813595662 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1723c8353e8f53898d8d809fe6670f889fb1f5cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ffbc6eb3ce1eaf82ab82b989c6f630d6d09b0b11 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ffbc6eb3ce1eaf82ab82b989c6f630d6d09b0b11 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ffbc6eb3ce1eaf82ab82b989c6f630d6d09b0b11 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 87ad77a3cabcb9c7b57661cd8cef5516fc45b316 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8d1df816f6df969ca210d959e9a1474bd571d099 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0acc513f4ce6198988fc8a6bb2502e6f245fdbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3cdb0a867e9c01dca327977a835dfd71123b400b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f2e35a56d8d27c86d5ce3398c8f363cb40979fca have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 166e850ba50ba0fe50e222b508cf2015ff68f149 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8f70bd59e86f4b39b76a73a66d1fe5f50395a2f6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f3f94eeeddef74b1721f366f9138755378ccc0f7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8e0e45f533d286e36a0bb8d93351d2f3d43f0e9a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 769b54331f37a570741dd237ea82f959d91805d8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b2fe874c13d4a8dba6a1321f52f25acb433321a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9e8fe847663ebaf21c3e2884815ec17479c5e79e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9e8fe847663ebaf21c3e2884815ec17479c5e79e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 63318ca94f1c80d19c2ec8970157f18e3115bac1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a937c01e38ddf8f81fae0014e26451398784496d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit aa0f1b12c496fc679f374dc410383a3f7b35c974 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 81eefb4184dc1d69b9abfb899d940df3a26c2132 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 81eefb4184dc1d69b9abfb899d940df3a26c2132 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 7bc53dfe3cf157667c249e159947afb1eaef30c9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8b5c20296abaef2db190e4639db8fb9d36df8df2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 88676364c44c34ef8014707ef3a70119f6c06174 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ee09d5662b4043f714c1316cc9f7d4f8de64b18d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4df49929e2e2b1cb1ca8d9df918c372cead69f79 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f264331dbc7c828706afa00f376b9ac6332c4181 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b5f974631ca992bac0ef80243848ca4e232182 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 46b5f974631ca992bac0ef80243848ca4e232182 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6310455a7543d5047396cc3cc8e5c6764077d3b4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 119c891100a354375c1caa455cf9b8a1ba1d202a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d06d4f323f2c9a1b09eda45cd4a6c9e98e12ab75 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d06d4f323f2c9a1b09eda45cd4a6c9e98e12ab75 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d06d4f323f2c9a1b09eda45cd4a6c9e98e12ab75 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dc23c68812c64678e9f54ae5cc4b86b1fc57b483 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dc23c68812c64678e9f54ae5cc4b86b1fc57b483 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dc23c68812c64678e9f54ae5cc4b86b1fc57b483 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 248557a7253030b45543304eda183294adc057df have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 248557a7253030b45543304eda183294adc057df have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 41fc0066ed905690b44395f0f514ad6ea186283b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 41fc0066ed905690b44395f0f514ad6ea186283b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 41fc0066ed905690b44395f0f514ad6ea186283b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c7e267f3e3ad54974f3b3833b7441ae1a383479e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 06199694e4e8a115a9983163392f8a872c781c0f have failed. See details.. :white_check_mark:\u00a0Tests for the commit fe87519ad25a7516d2c05d8f82c08e3b12b67367 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c698d9b86a04ef6e300c3a754ecb21b8b0d3dd6e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9a4376073b826e7acf21f4282ece7681999ec858 have passed. See details.. :white_check_mark:\u00a0Tests for the commit cad9881d89fd7ab7c56d2b3616cba650eaab3385 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1e805fe7a93f547b9584c1d453b87e3d9e48f0b7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 25ba886837f71c069a2412bb8f873d85d9eab9ae have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2abaaebde2285cfdd62180e780eb79c037d83c19 have passed. See details.. :x:\u00a0Tests for the commit f091f61dc088dd2cc59f788efa0c5a1e774341e0 have failed. See details.. :x:\u00a0Tests for the commit b7455f264d22528e27c5cb1a78abae783cec6855 have failed. See details.. :x:\u00a0Tests for the commit b7455f264d22528e27c5cb1a78abae783cec6855 have failed. See details.. :x:\u00a0Tests for the commit 140fdecf9ed1e32fb048b559c0a150d62098e729 have failed. See details.. :x:\u00a0Tests for the commit 0f9dd6fa5c9a07e836c56db5d0f04b958e1fc156 have failed. See details.. :x:\u00a0Tests for the commit f1e619732384c65462332dbc3f7cd86b038ddd5b have failed. See details.. :x:\u00a0Tests for the commit ce54505f54a6bdd95c193aa7c1b976014ceff858 have failed. See details.. :x:\u00a0Tests for the commit 5db425230c6527133fced18e73246c371dadd257 have failed. See details.. :x:\u00a0Tests for the commit a64132d1d2527489bd127d2cd98558b9397c5224 have failed. See details.. :x:\u00a0Tests for the commit 77107b735f03ff17b5d9a83c935209f8f0d5171f have failed. See details.. :white_check_mark:\u00a0Tests for the commit dca7232e45f74c7bfdd4564dbe1e2f728cc71dab have passed. See details.. :white_check_mark:\u00a0Tests for the commit ca37961ec840ba9dd233fabe079f2dfa8eba507f have passed. See details.. :x:\u00a0Tests for the commit cc563cc2fd083b963512f034b54d2f00b3b5b843 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 107c5b63dfc0075965838b0111feb5e5f9abab0d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 107c5b63dfc0075965838b0111feb5e5f9abab0d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9c9aa5af3e7039dae8120046d2676ee408ff7ec6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c2a089aebffd7c59fd9082a5a8254fc68feb7ba3 have passed. See details.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 879371bd40ab4453d9d935f7b82b4e94864fe23c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9d7d4e2345e94b45593d03e282d821ee4b2480cc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84974c3a4b5d97cb7617bcedf24f8755669c5f56 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84974c3a4b5d97cb7617bcedf24f8755669c5f56 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42e4afd0bb58d3d2be3c2f7665e74835afbe491c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42e4afd0bb58d3d2be3c2f7665e74835afbe491c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42e4afd0bb58d3d2be3c2f7665e74835afbe491c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42e4afd0bb58d3d2be3c2f7665e74835afbe491c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 42e4afd0bb58d3d2be3c2f7665e74835afbe491c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 041aa165fe24cad692868ad47e3e2f8cad70dbef have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 831a62955e0d8c67b2acbee317d3696dfe6450b5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 84c53cf19d68e3be611791bd59c732b0594c0dfb have passed. See details.. :x:\u00a0Tests for the commit 15eda49b8d5f01f69d8bd9d4a0655042875bd27c have failed. See details.. :white_check_mark:\u00a0Tests for the commit d0d3724c940524e9b50cab4dfe991bb4ec15c3cf have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4f4de13043a21743c270847337c2f69ca2e71fa2 have passed. See details.. :x:\u00a0Tests for the commit fc4138c47c8a4f2766317c5a752f026fccdc89c6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 36e9e02b9652d4504765730c6710dda1c5a22b0d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 36e9e02b9652d4504765730c6710dda1c5a22b0d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fb0789336a3443643fa7318be14b40b383597a6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fb0789336a3443643fa7318be14b40b383597a6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8fb0789336a3443643fa7318be14b40b383597a6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8fb0789336a3443643fa7318be14b40b383597a6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84f62c3b3e18e8a1314d64af104edab7cf6173b6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60af4e24471131b4ec54153e812f3f2d1751f210 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c0c2d7880fa0b38757950bf75009fa5fdbf5f993 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b7299d39a22b352853195c560a9acc928b623fe have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d7ecefcd56611caf2abd210fa49a328fdc659ca0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d7ecefcd56611caf2abd210fa49a328fdc659ca0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 264329fbbca4f42d2dd11aabfdd272e17e82fc48 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c57f33e73135dd205c0aefc746f3ed142b19a4b6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2d877fa3eac5c734b4484d8cafde06f68c9141d6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 995f0fa540e7e1ecc88f545832939060e041bcb0 have passed. See details.. :x:\u00a0Tests for the commit 43b03ac037081f8b3e0d147f4beb149b2afe8cec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 59ecfe17efbfc9196ffe5bc33083d11eacf56466 have failed. See details.. :x:\u00a0Tests for the commit 3a3671e7405a00cf4a8a2303f66612904c1c2c82 have failed. See details.. :white_check_mark:\u00a0Tests for the commit e584425886a14954fbf04c7db98d478957f36316 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4895f9f6ecea406bb90083700861c8fc3c780f0a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 45239caab366f33ce0087d0489215b9049dc5e77 have passed. See details.. :x:\u00a0Tests for the commit 0e72445562bc481a022a2a890386ab06e018a1c6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b0b476b318ec2d897cd005bc5ddf170be0da281 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aa0f63dd2b184bf43407a782dbcd2b8f64ec05b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aa0f63dd2b184bf43407a782dbcd2b8f64ec05b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4aa0f63dd2b184bf43407a782dbcd2b8f64ec05b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aa0f63dd2b184bf43407a782dbcd2b8f64ec05b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c3085e166aca096295c61fc29902c854556731d7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 775db9416f5fb9080fdc04111d7da447ae66f406 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8ca717ac1efc452234322289921827a7e6059270 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cd657dc7ca3140ba91e99f6d7a17924a5aed4fa9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cd657dc7ca3140ba91e99f6d7a17924a5aed4fa9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 506ba90c237f1d0c312149fc6817e8b91eefcef0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16c0103197e4a9b34eb96ad4a47389a9cacdcc82 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b8d2c0a38f572f69d22a963c5462420819a60cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2bf9eb95ee0bb9693cf71cdf826bcd2e8b19f9f7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dc767a4494608a670d20f4f65fb0f3780daf20f7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4c018e05319a5c69c95c05f9e066bc3ce455b9b3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a757eec38c0b1723ca8783e54fd688effba56cc1 have failed. See details.. :x:\u00a0Tests for the commit 41cd222edbb3c32a9ed897d67853d33c7c6316da have failed. See details.. :x:\u00a0Tests for the commit 41cd222edbb3c32a9ed897d67853d33c7c6316da have failed. See details.. :white_check_mark:\u00a0Tests for the commit a5e4e98b1e9a0784eb9b455aca72038c9de88231 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a5e4e98b1e9a0784eb9b455aca72038c9de88231 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a5e4e98b1e9a0784eb9b455aca72038c9de88231 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a5e4e98b1e9a0784eb9b455aca72038c9de88231 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c9d5f40e01143e47d4a1f9a0311e99b5d0e113d1 have passed. See details.. :x:\u00a0Tests for the commit c9d5f40e01143e47d4a1f9a0311e99b5d0e113d1 have failed. See details.. :x:\u00a0Tests for the commit c9d5f40e01143e47d4a1f9a0311e99b5d0e113d1 have failed. See details.. :x:\u00a0Tests for the commit b4b36fdfa6dd7aaedb2448e640738887968312ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9ef09f75803bcef8912eb9e410b1c6ac5f5c6c45 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5378f530e3f492ec2cfba5e67bb2bc2949536dfd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5378f530e3f492ec2cfba5e67bb2bc2949536dfd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 92d89ed0bc7c34aca197f382ec71b0aa90b51478 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 92d89ed0bc7c34aca197f382ec71b0aa90b51478 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 92d89ed0bc7c34aca197f382ec71b0aa90b51478 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 32b97e3f42535d3842b88d6b7fe4c4ca37748757 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 32b97e3f42535d3842b88d6b7fe4c4ca37748757 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fcfaeb9f436b48c2ada953617c2a48da94bda449 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fcfaeb9f436b48c2ada953617c2a48da94bda449 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fcfaeb9f436b48c2ada953617c2a48da94bda449 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fcfaeb9f436b48c2ada953617c2a48da94bda449 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c1eef6fa8c09d35bbea05d0cbe48b723608e805f have passed. See details.. :white_check_mark:\u00a0Tests for the commit d0d360f4ae4a31c1ddd99e62ba80710c9df5cb37 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e8e42c61586f72990935f93b6e97a247b9a19fd6 have passed. See details.. :x:\u00a0Tests for the commit 612a07d9a5da20536fb34ae1626a920b985b40b0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 612a07d9a5da20536fb34ae1626a920b985b40b0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a680dc479488ae10dc7f000234518f804d2360fa have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a680dc479488ae10dc7f000234518f804d2360fa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a680dc479488ae10dc7f000234518f804d2360fa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6f990f3b1f73f2aad736301686d35d64fa1e216d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 26cf91a69de32a67f79609ced12c53437ab8ea09 have passed. See details.. :x:\u00a0Tests for the commit a0bbac7f481af73e4355a7e84edf1cc8061b3620 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 093e456d02c2ff3ebf326567a4577e7fc3d75326 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b6e410e1881b5104da6ee8a62ad88c633056162e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 23f35caa27c73d92bee99c43715eb7f8dc070ebf have passed. See details.. :x:\u00a0Tests for the commit 0e9d71b19072168f006ad427f53d2f20617905c9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0e9d71b19072168f006ad427f53d2f20617905c9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 49781ac55fb27ecc62e2fe9de6990ff1899534ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 49781ac55fb27ecc62e2fe9de6990ff1899534ce have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ad01b407ecf7b616776ad66f338e6e1002f390f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ad01b407ecf7b616776ad66f338e6e1002f390f3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f64d2ddb1f25fde7c328b087e49ec0c6b57881c0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f64d2ddb1f25fde7c328b087e49ec0c6b57881c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f0518a05bb398933865695b1da81ee371d1a7ee8 have passed. See details.. :x:\u00a0Tests for the commit 322b117300e95396a21e9230b50f1f87e75834f6 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 322b117300e95396a21e9230b50f1f87e75834f6 have passed. See details.. :x:\u00a0Tests for the commit 0f88219e85b434e6dfaeca8766b1cb3cc8268fe6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3c23d6ee7f4179d5ef6e29eb0bdae0329c0e57e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3c23d6ee7f4179d5ef6e29eb0bdae0329c0e57e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c22467c3fde2ad0587f84fc92237b33e05b1fac1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 09a3a46824be1262da7974bd266d2adbee744e46 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 09a3a46824be1262da7974bd266d2adbee744e46 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e77fc560ded4bbaf7a793fd1941b28b504d7a64d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a1f40c8a0c5ac5f104cdc4bf1efdb9315614db83 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a1f40c8a0c5ac5f104cdc4bf1efdb9315614db83 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 956ee1ea0c0ca91df7645f50f38c3682adba09f0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3f6a4a3e577027ffb3fba2c705e13d17dedcd76f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8ecdae1d604e28704e903159b1db9d47d18c7d5d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c0c095c37df9aac6a1c574dac82031836f295740 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3c271da18604c2f56273c7e9e8b22f543fe3a748 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7feecb7ea61b8168b7b268fdaf381ca5050536ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7feecb7ea61b8168b7b268fdaf381ca5050536ce have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4481cb40d3b1da117981702d44abb76a08f79cb have failed. See details.. :white_check_mark:\u00a0Tests for the commit c4481cb40d3b1da117981702d44abb76a08f79cb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2634a6b2d3a9403db40e1eb5d149e3cb316980c1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7fe83c740db02b8e25b1b189820ec0e5599450ee have passed. See details.. :white_check_mark:\u00a0Tests for the commit b4f47fed450a5d812c5c4ae62793e20e571dbe54 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5dd8b516411345eb771d33197677b719acdcfa15 have passed. See details.. :x:\u00a0Tests for the commit 476e8c452c488c2cbb5099e72b62ad1fd3a564b3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 476e8c452c488c2cbb5099e72b62ad1fd3a564b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5a219e88c69b313d243a379a6034569efe600607 have passed. See details.. :x:\u00a0Tests for the commit f8f1a9ea607a7a7452fdf67f30704b8e5ce287b0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f8f1a9ea607a7a7452fdf67f30704b8e5ce287b0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f8f1a9ea607a7a7452fdf67f30704b8e5ce287b0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3d13a96139507e899aae30daca33509eb584e90b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2eebf0976d945bbe87b720ddb22d0a6c795cb0ae have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2eebf0976d945bbe87b720ddb22d0a6c795cb0ae have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97dd699fd9c45483cd79a496a8d871cac9444ba8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97dd699fd9c45483cd79a496a8d871cac9444ba8 have failed. See details.. :x:\u00a0Tests for the commit 31a3f736144f30521616ea090e1816d5b47c87a9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 29966728eb34ec9b2be8a023fd06ed485e1385a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7d210022ae06293fe11bd8e79b1f4582ac4d794e have passed. See details.. :x:\u00a0Tests for the commit 8fb8b8e59263f170a1ba11ca613389434792d9b5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c31a4d14aa9410259c309d470f44154da1e395c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 88da3eb6cffe8fe3a00def828b4955636468cc95 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f2c14d3af8e20a704b7064d3d5b5ab2b8a282318 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 387832cd2f36b9a101dbc7bb0876d49d583cb4a0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8141293a3becbaa2838b497bd2ad2c36f3226a75 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8141293a3becbaa2838b497bd2ad2c36f3226a75 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a17225b574f7e6d35b81ee4350648168585250b5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 85a956d71fa018082903d655480f19ecc282c5e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8db184a1071357f7e971621d493aaee4812ac19 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8db184a1071357f7e971621d493aaee4812ac19 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b8db184a1071357f7e971621d493aaee4812ac19 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 09b0174599b9768eb0fc40ab1d018c6443d82818 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8b0d810aceab312f000bd83b80f59d6200505868 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7c72cf19dc269124adbd0e1c8a3a33928b9ee1f5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 34710b0df503ddb6a5d67ddea492d69bd8d94a3a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a4518ae1a219408169b8a1886d9be3030042d598 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d0b53c2230ef84b09ad3b437314c3b7ee4dce36d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8b72c1ffb2da9d5fec58e3b4b8dc4608d3205efc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c712da243d2d16c7cd46a340d004bb759a4c81ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c712da243d2d16c7cd46a340d004bb759a4c81ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 1ad8e92b9393a8706eaa081fe6a17d19de0f7946 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 026ccc2d8c178718f552695c92f519a3e95b78de have passed. See details.. :white_check_mark:\u00a0Tests for the commit 54c01bfc91bffc0a183ce814f785b032a88bbf9f have passed. See details.. :x:\u00a0Tests for the commit 19cb490386cfe01c6131e412adc34f9147b08537 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 2d8c067285a1a28c92ec36d0a34fdea0da320758 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a300478f6db8a5e17bee34d12e6fee05f0ccb8c9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c75269603d5894848b2d9f36eecf296d960496e2 have passed. See details.. :x:\u00a0Tests for the commit fe383f7340ffd0cf41c4e8772a3f89bc8a8bb168 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9d35f3d727ac5518e317eeb928233ce993d242a9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d35f3d727ac5518e317eeb928233ce993d242a9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3dc5ed21e8e3828bb9aeeaecd1743170d790d5ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eea9530e4f62351f064f199a9b76e3bf7365aa6f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit eea9530e4f62351f064f199a9b76e3bf7365aa6f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c2117b6ed6428d563cfe6dd4a4cd1ae73fed6590 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c2117b6ed6428d563cfe6dd4a4cd1ae73fed6590 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 436467e7513f4d3c8784ccb9ae2e04dc3711471f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 829af009e851b1cd7f01b11015266cdbb81d40df have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 985420146c7c0e31042120fc019140d5d914fecb have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 985420146c7c0e31042120fc019140d5d914fecb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abc13a022b7283db2421a99de88ce5add617373c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit abc13a022b7283db2421a99de88ce5add617373c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit abc13a022b7283db2421a99de88ce5add617373c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit abc13a022b7283db2421a99de88ce5add617373c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbc1b3414ab9febc649e5cb3c355dd9b3a37383f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbc1b3414ab9febc649e5cb3c355dd9b3a37383f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8f61c8d0ae3e94335ca739c966ef4251fcf52b6f have failed. See details.. :x:\u00a0Tests for the commit 49ed175bca4076afd02b4b4c8754a066d3ef4d6e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d1fbc0b8710dc7c18247793fce096534a2a38ee9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8065ead22c356141a3b16baa72f843c4e05a9a35 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8065ead22c356141a3b16baa72f843c4e05a9a35 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eaa2871622f2c08ca997954581d15ce1d78c77b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eaa2871622f2c08ca997954581d15ce1d78c77b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit eaa2871622f2c08ca997954581d15ce1d78c77b4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b1685b7d5a599d939da613e7682728ac17bdf9da have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit db0e27aa7fc6d500924d2c60329d193483c9fd23 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7232fc11306cc44b1d01bc1a23e73c98a34f7a7c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7232fc11306cc44b1d01bc1a23e73c98a34f7a7c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c5ca35d186f686cdb6ee16ba8e629a6298a3dc63 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7eefdce1a0714655b8660e81cf67999ca2409300 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7eefdce1a0714655b8660e81cf67999ca2409300 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7eefdce1a0714655b8660e81cf67999ca2409300 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7eefdce1a0714655b8660e81cf67999ca2409300 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7eefdce1a0714655b8660e81cf67999ca2409300 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 96e0140eb3fae38142f50898ec7cd7d800a7dd04 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c2cd02d20fa6324bf0ceafb617d44c02f4ab37b1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 71416ba35154187c88cd769a22b3edf165e78707 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f315cab73c993f8b11f2f8f45ad0cc123a05e2c0 have passed. See details.. :x:\u00a0Tests for the commit 49d752d9a00692688c7fcbad714d1c204dbe7953 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 49d752d9a00692688c7fcbad714d1c204dbe7953 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 49d752d9a00692688c7fcbad714d1c204dbe7953 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4541c320af8199aab9de95486b39f8fa37390919 have failed. See details.. :x:\u00a0Tests for the commit 2022e30a9b945bd1a7a51486d4dd2e661936fcc4 have failed. See details.. :x:\u00a0Tests for the commit 08cfe4d6a5a394af293914a4bbb94a832be85702 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 08cfe4d6a5a394af293914a4bbb94a832be85702 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 097ff0c030e64e4ad13670e19f95c9c42ced4554 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 097ff0c030e64e4ad13670e19f95c9c42ced4554 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ff30584960887f6a599f76d573987f296079d77 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 23982b45755f6363a478e292eeaf6a38b8c24ee1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit def9f41ab79619bbf6acc0a3105d9b64256716d2 have passed. See details.. :x:\u00a0Tests for the commit 934923d95cfcc402ff549defbe43331b8fef31c1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1617026f9682ec2f50f1eb0102b374432f07a0a4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e21ab3c8e0441cca106c65ed41fd2133a2ee85e3 have passed. See details.. :x:\u00a0Tests for the commit 005034d2dd4ab30349a4bdb038cc8517dc4ace49 have failed. See details.. :x:\u00a0Tests for the commit 005034d2dd4ab30349a4bdb038cc8517dc4ace49 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 005034d2dd4ab30349a4bdb038cc8517dc4ace49 have passed. See details.. :x:\u00a0Tests for the commit bad448661fc0d14173257cce3d187e35360eabb7 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1275a0118d4af4adfd44a67242e271147d5f5980 have passed. See details.. :x:\u00a0Tests for the commit 860442c47f8e21115b7e9efb9dfa72ae5a0e15ee have failed. See details.. :x:\u00a0Tests for the commit 860442c47f8e21115b7e9efb9dfa72ae5a0e15ee have failed. See details.. :white_check_mark:\u00a0Tests for the commit 5cd5db4caec6fb97b14169461562ea4ec8b8b97a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8f60fe6f6f8994e05fc0d8e3c2b0a087da84e815 have passed. See details.. :x:\u00a0Tests for the commit 5b3034ba03f013044df05523311c13504d9ac9eb have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1036bd2cbe3d82df5f083db04ccb76f54c8274d1 have passed. See details.. :x:\u00a0Tests for the commit 1dcca14345f083b15a709df1beff494c6f2d2718 have failed. See details.. :x:\u00a0Tests for the commit b8d5f7d8230b61beb5ccca4c793327f1a2fa5799 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 922a68a7db7c5decf06c3b9321b578a897136a71 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8309407d111c48a59170955207445265ea5bf8e4 have passed. See details.. :x:\u00a0Tests for the commit 4a1c1bab3f065af04f8e4c556cdd248d41ffee3a have failed. See details.. :x:\u00a0Tests for the commit 282d2bd2b9b17abb97bfd0aef13587e08d3e2480 have failed. See details.. :x:\u00a0Tests for the commit 92c7e3b3cd19baa500b4aa6be73238a63314030f have failed. See details.. :x:\u00a0Tests for the commit 0db550b237e0c2aea47b486b13899ec3496fa223 have failed. See details.. :x:\u00a0Tests for the commit 6f5c63986d19140ef55d27e2fa4dc9e979a80fdb have failed. See details.. :x:\u00a0Tests for the commit 6f5c63986d19140ef55d27e2fa4dc9e979a80fdb have failed. See details.. :x:\u00a0Tests for the commit 41ac57d4982c3c511d707de8eb1b0ebc25ec2e53 have failed. See details.. :x:\u00a0Tests for the commit bfb1de2c1aac157c1413e6caec41df0c4aa153c9 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 55fc5cfe18699412ea0be709eacff99654ad34fd have passed. See details.. :x:\u00a0Tests for the commit bf5c37e07e8b7694af94ff07637a8af5109030b5 have failed. See details.. :x:\u00a0Tests for the commit 7098d407ccaf6645efe5aa04f0678fb95f520221 have failed. See details.. :x:\u00a0Tests for the commit 595ffb8370f581cedaaa892d1774c398bc7a1bab have failed. See details.. :white_check_mark:\u00a0Tests for the commit ea8149654cd8fa4d33370b6a9bf77e700fde099f have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea8149654cd8fa4d33370b6a9bf77e700fde099f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8b674e89233710b3a2b5ebf342f145b347459501 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8b674e89233710b3a2b5ebf342f145b347459501 have passed. See details.. :x:\u00a0Tests for the commit b10750fe9e50bd07577ff8e8c442b82e30fe75de have failed. See details.. :x:\u00a0Tests for the commit 5cca7113610a4085f515eb997c7c07a261641160 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 037096bd2323344006cf04197d7c4dc580b9c211 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 037096bd2323344006cf04197d7c4dc580b9c211 have passed. See details.. :x:\u00a0Tests for the commit 037096bd2323344006cf04197d7c4dc580b9c211 have failed. See details.. :white_check_mark:\u00a0Tests for the commit acaac1b6c173fff1485c39785b8f710f64f7064e have passed. See details.. :white_check_mark:\u00a0Tests for the commit acaac1b6c173fff1485c39785b8f710f64f7064e have passed. See details.. :white_check_mark:\u00a0Tests for the commit acaac1b6c173fff1485c39785b8f710f64f7064e have passed. See details.. :white_check_mark:\u00a0Tests for the commit af83f30f4fc645d9086bfa6dcb20de477b30313b have passed. See details.. :x:\u00a0Tests for the commit af83f30f4fc645d9086bfa6dcb20de477b30313b have failed. See details.. :white_check_mark:\u00a0Tests for the commit 7e3f7ee20bfaa564f779092db9f156477a344693 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7e3f7ee20bfaa564f779092db9f156477a344693 have passed. See details.. :x:\u00a0Tests for the commit 7e3f7ee20bfaa564f779092db9f156477a344693 have failed. See details.. :x:\u00a0Tests for the commit 9735ff8325f78bb6f3649134658267ab28ddd53b have failed. See details.. :white_check_mark:\u00a0Tests for the commit eef4fd0db54952152c48dd1be21f69b103749717 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eef4fd0db54952152c48dd1be21f69b103749717 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eef4fd0db54952152c48dd1be21f69b103749717 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eef4fd0db54952152c48dd1be21f69b103749717 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eef4fd0db54952152c48dd1be21f69b103749717 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0b2fedba05526896e5ac67342c0a10a64b542643 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 20c5800109a44e408cc5f0a59f91fa0e1b9ef2ab have passed. See details.. :x:\u00a0Tests for the commit 9be3363d01d0c1fa6107dc4684c1bebd9a29f93c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ae606875a63641ed2aa91f0593f2635bbab86193 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f75721158ef523a3626728c7ed05c3041b42631f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 823764a12580e12c8bb8c7da500f3e8ad08a916c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 823764a12580e12c8bb8c7da500f3e8ad08a916c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 243f1a24dc36bbfc9723165128cae31d7ede3fa7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 25461b200e73eaaf62bedde06399ff7ff7ff9b0d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 916a906bc14bb530dc52fcfab3dd38c3a7201975 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 95ef893b884ac8d7561501c817d8dc5abdbcf1f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 95ef893b884ac8d7561501c817d8dc5abdbcf1f8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 88f1e20b709387466b3473f6452a2d69a344b5ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 043eb1ef2ddd3e22a7435c266353dc1d0223520b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0bf2a931307176b8b76089d341887b8836ccf2fc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b50cf2469b31f0a0fc988588e5d6f5704074cd8f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 18d6def83fddf97c2e7f991459afe11ab1faa3e4 have passed. See details.. :x:\u00a0Tests for the commit 9c3ed2287fa06094275ac35a26e51e67d68ed36a have failed. See details.. :white_check_mark:\u00a0Tests for the commit abb8ad92b5a433d3a1029c3e46d3cd089185fce8 have passed. See details.. :x:\u00a0Tests for the commit c834fb2ce1a1c35f4854c76dc471c5da6b688f43 have failed. See details.. :x:\u00a0Tests for the commit c834fb2ce1a1c35f4854c76dc471c5da6b688f43 have failed. See details.. :white_check_mark:\u00a0Tests for the commit a01af7199cb03e9e2d2b302dbfd2a77a3056c445 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8a32bfed42db35e31c154cd210dd661f797415fe have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1c522c487fcd7b5a28ba33415ac1cf0a0e1fbae1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5f35638f998881b34faea01a2a4605ea740e0921 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ec25ee3c5325d720158e230ef87feac38ebefc60 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ec25ee3c5325d720158e230ef87feac38ebefc60 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 14393d3f8533d43a873163915c027e188919fd52 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 25566f720ab6c8afe5886091845a5315c6bdd219 have passed. See details.. :white_check_mark:\u00a0Tests for the commit aebab12b4de0a8ebbd94a93dba47be645be78842 have passed. See details.. :x:\u00a0Tests for the commit 29719be22b343fa4acd25100cd8cb5917aa6edac have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 29719be22b343fa4acd25100cd8cb5917aa6edac have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ed643b79ceb37c5fff435630942b264720a33aa8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b68ffa7a88631dc2d4a08e6d4edce91ff623fec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6b68ffa7a88631dc2d4a08e6d4edce91ff623fec have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3f67c0ff6a1fff4a8a6aa4f6bdb288987d841c5e have passed. See details.. :x:\u00a0Tests for the commit 1957a40b027a79ad01c4045c7455008640e19b06 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1957a40b027a79ad01c4045c7455008640e19b06 have passed. See details.. :x:\u00a0Tests for the commit ef44df41c510cdee048973b23adc59f512a06d6d have failed. See details.. :x:\u00a0Tests for the commit a0ddcd410478cc2eb2ba4168720201276f207201 have failed. See details.. :x:\u00a0Tests for the commit 88a74665128c0710de3331aec6217d6ddb55546d have failed. See details.. :white_check_mark:\u00a0Tests for the commit 11fa5a9e2f99f3c3cc7c368ea370afd05e8cbcb2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 11fa5a9e2f99f3c3cc7c368ea370afd05e8cbcb2 have passed. See details.. :x:\u00a0Tests for the commit 234639c5df1971f54921620e5e89212eff0c83e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 234639c5df1971f54921620e5e89212eff0c83e5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bfbed5da5790d6e32a03e1627f843cbf5af406c1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f546965616dde1163ccf226faa8bc76db334f4e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f546965616dde1163ccf226faa8bc76db334f4e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 987fbb1e10a8f696c55e76300884cb1989d15daf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bf90cced2b6def4ea26828cca1b0ba7ae432af8e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bf47c41febee2f65b1233d112308397e80aae293 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bf47c41febee2f65b1233d112308397e80aae293 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit aaa939903b8c4a7d9789cd474dcf7375d7f4dc0e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit aaa939903b8c4a7d9789cd474dcf7375d7f4dc0e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 806b8660fcf70fac393492bf291b5f98a5b4dbea have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 806b8660fcf70fac393492bf291b5f98a5b4dbea have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 806b8660fcf70fac393492bf291b5f98a5b4dbea have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 806b8660fcf70fac393492bf291b5f98a5b4dbea have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b447d365ede9ee22458cc6b23ae78584020a4c18 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 66ca2ecfd296923e66947d288b0a3c73c74c26a2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6a967869ac662c1718906fd54ae7991303689284 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6a967869ac662c1718906fd54ae7991303689284 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6a967869ac662c1718906fd54ae7991303689284 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 345949d63eed4bb0c8fa922fd08f799609632d23 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5147887a7fe25495b4c373f888d98e90866c26da have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 5147887a7fe25495b4c373f888d98e90866c26da have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b9d83c7b4a6b7ddd439014598ddc86285877738e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b9d83c7b4a6b7ddd439014598ddc86285877738e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24712ab79315890337fe0851852523ff21d6a155 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3920031920db12339ec9db5690e7dbc11e7e2ad0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit effeb25a91a34c69bbcf476d20dad9f13c5dba68 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit effeb25a91a34c69bbcf476d20dad9f13c5dba68 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a01e0b637da3fd9f1748649ddc5d3749ea14786 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3a01e0b637da3fd9f1748649ddc5d3749ea14786 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 90ea1451898fbd6ae923212188394992e8b0e258 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ed140f9e514489c495edfcee245d9411e8f377e0 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 49dee51e0d1703b13f8d17baf0a649ef0e4fa898 have passed. See details.. :x:\u00a0Tests for the commit 05275725a67133eebd850577475f43c146bc936f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 05275725a67133eebd850577475f43c146bc936f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit faf8bce9d572a9b2b8fe078ca66c43bbb2d1d400 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit faf8bce9d572a9b2b8fe078ca66c43bbb2d1d400 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit faf8bce9d572a9b2b8fe078ca66c43bbb2d1d400 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 736ff3c809628b438fb8e2e850f1d07a642edc22 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 736ff3c809628b438fb8e2e850f1d07a642edc22 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 736ff3c809628b438fb8e2e850f1d07a642edc22 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 38787e41827c39c35783f94bedd72a27dd153e94 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 46b6fdd99acfdfab0c3755efbd2f03adcd24f5df have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f0dfd75abcbe4e45f78e03a84b22c9d5c7813426 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f0dfd75abcbe4e45f78e03a84b22c9d5c7813426 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f00955f30da1c2d969ff83c81cb31454e9b1d9cf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 35fb7a0efdf13a7980db6dca60cb1e000af72b61 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 78c9db757dbf0c8023b39b763afc092c1fa3d4e0 have passed. See details.. :x:\u00a0Tests for the commit 755b1dac198666e3639707fd83a3ff40d8780491 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 755b1dac198666e3639707fd83a3ff40d8780491 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68c7df612a8e49c7231c0880e83a8942c1fb247b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 68c7df612a8e49c7231c0880e83a8942c1fb247b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e8b79666af57e48c1a33acd2d74b82983160931c have failed. See details.. :white_check_mark:\u00a0Tests for the commit e8b79666af57e48c1a33acd2d74b82983160931c have passed. See details.. :white_check_mark:\u00a0Tests for the commit aea75bfe413b7603c7322014076d77eeccd402b9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 97b01fccd89181288a5157e7f5200d843fb5664e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4182aa98e69aa6e8d6cec3ebd728bbe166c50616 have passed. See details.. :x:\u00a0Tests for the commit 2fce8e8e57cd0c9ca3423935b285b55129b2224b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3052130db6cd636e332fd1fc0fbda5dddd4d5dc1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e27dfc8070a013d96b26bdcd020547c1bba7e22f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fa4c231709ee5f8b74b098d9df75ebef55edfce4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit fa4c231709ee5f8b74b098d9df75ebef55edfce4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a3ff4eab47ac5827f3be634a4cb5653e5ab4018a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3ff4eab47ac5827f3be634a4cb5653e5ab4018a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a3ff4eab47ac5827f3be634a4cb5653e5ab4018a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a3ff4eab47ac5827f3be634a4cb5653e5ab4018a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit cb2315dda9edb75a83d5ed6393b67cb54b1aec73 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cb2315dda9edb75a83d5ed6393b67cb54b1aec73 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cb2315dda9edb75a83d5ed6393b67cb54b1aec73 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit aa523d82c4c006c92f54d2ba55bd0dde2a35ace8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 64579fb5b417386b06d9a383ac09fdd9f33be043 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6ddca34f6f3a436d001403ecbc5045cd32112718 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7781269ebe38158418ef0a4072e7688e0f055123 have passed. See details.. :x:\u00a0Tests for the commit 63bc749a2a5c0aff7cce04020a4db20843271aec have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8076f775e62b59f5604064d578eece29abe55a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8076f775e62b59f5604064d578eece29abe55a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8076f775e62b59f5604064d578eece29abe55a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4adc6dfd2454bb6d83450a680342b8deab4c9c4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7d10546b588902963521e6f530ffa7598fbcecdf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d72e5728f4bdb7105efa48fbb3b2a94ab5c5cc5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ad6ba4bb5995cfd6dd270595adef09eb32fea29 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6ad6ba4bb5995cfd6dd270595adef09eb32fea29 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f415e779ea8bc7c712cada5cc3f485295b73fa9a have failed. See details.. :white_check_mark:\u00a0Tests for the commit f415e779ea8bc7c712cada5cc3f485295b73fa9a have passed. See details.. :x:\u00a0Tests for the commit b6b825251d2e45dfdd2b46fc393da78dd3acc0ec have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b6b825251d2e45dfdd2b46fc393da78dd3acc0ec have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6b87cfe9c7feebacba10a5b8fdcd93042cad3ca8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b87cfe9c7feebacba10a5b8fdcd93042cad3ca8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0c4672319e465170c374c7d595e935275d9ad5bd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d702187483627bb28abb200a8eef7a08ea8319e1 have passed. See details.. :x:\u00a0Tests for the commit 90b7c3f40a2f12bc950a2de029ba3641c1409f0e have failed. See details.. :x:\u00a0Tests for the commit e19e3fb89a531f545b1a3ed8fd9ddc2b0c277393 have failed. See details.. :x:\u00a0Tests for the commit 215bcf167ee8a688c8ab2aa5b34cadca2affec38 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d0051fa0cb1b93da9a527a932658d8c60240547d have passed. See details.. :white_check_mark:\u00a0Tests for the commit e3fb19040c1d63217e624f95e7a57eb4f8545de8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 740329d29cbe2ef0a563f0c9eb41fa1e87ce9a40 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5113839318d2a9cd3501397be26d820ff15c11d5 have passed. See details.. :x:\u00a0Tests for the commit f5dac534c09b2bdc99d4957172f1fe19beb6121a have failed. See details.. :white_check_mark:\u00a0Tests for the commit c9fde92006735473476b330acccb52ec9fe8fc61 have passed. See details.. :x:\u00a0Tests for the commit 7ca7b3385cd1da47721628e63b0d4691b76b6393 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 031e55a6ae376bb2b6f8a960c83fd4224b1cd936 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 031e55a6ae376bb2b6f8a960c83fd4224b1cd936 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1928e302d1940bee4a31f416f010947abc6d1ffa have failed. See details.. :x:\u00a0Tests for the commit 178e4ec85620a513840e156400e2f0fb049e87cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d38b647def5538ab2066c241e28c7b95809f16c9 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d38b647def5538ab2066c241e28c7b95809f16c9 have passed. See details.. :x:\u00a0Tests for the commit 6917a0c2ab80573ce420070608518af49db35e96 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a6b5761c29cddad3456b9c48e486fc2f72b7284b have passed. See details.. :white_check_mark:\u00a0Tests for the commit afd47ef4dc5df9e868f7963f0b64fb5e5a9eacae have passed. See details.. :x:\u00a0Tests for the commit 9e066c632504dd1b214a2055e1189c84f3199258 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2249a57a65f01ad860f3f20def7b942e5782a7cb have passed. See details.. :white_check_mark:\u00a0Tests for the commit e7438616f54e7e15b689071066fec31e3394ae3d have passed. See details.. :white_check_mark:\u00a0Tests for the commit e7438616f54e7e15b689071066fec31e3394ae3d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 53e093342c6b2ebac28fc4d44d5406368351607e have passed. See details.. :x:\u00a0Tests for the commit 48028d2e53b1892551c7711851fd83a2f1220d79 have failed. See details.. :white_check_mark:\u00a0Tests for the commit c1ffdd05211d5276be9018db00983d6fb441c13d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 28a759090a7563d8f0df82ce27d2a7a90e7989c1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e63324343235f98ee442d150959ea09db69fecc4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e63324343235f98ee442d150959ea09db69fecc4 have passed. See details.. :x:\u00a0Tests for the commit 26f035648c3d09ddf8ed1d9b14d022e1e570b428 have failed. See details.. :x:\u00a0Tests for the commit 26f035648c3d09ddf8ed1d9b14d022e1e570b428 have failed. See details.. :x:\u00a0Tests for the commit 26f035648c3d09ddf8ed1d9b14d022e1e570b428 have failed. See details.. :x:\u00a0Tests for the commit 26f035648c3d09ddf8ed1d9b14d022e1e570b428 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 769f974fb13310f1714bf204ac13211fc69debe0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 769f974fb13310f1714bf204ac13211fc69debe0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 490bbe1a4a991f3b1ce4f9fd1b8a394e2f51b954 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 490bbe1a4a991f3b1ce4f9fd1b8a394e2f51b954 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 59156a14e0721290eead4205474cb7dc9b2db96a have failed. See details.. :x:\u00a0Tests for the commit 59156a14e0721290eead4205474cb7dc9b2db96a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 19e13434d69b228efb635ccfcec56c45636e9cb7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 19e13434d69b228efb635ccfcec56c45636e9cb7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3977577453a4836d3d18ea57b4c69c37bead180b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3977577453a4836d3d18ea57b4c69c37bead180b have passed. See details.. :x:\u00a0Tests for the commit 730fd76849a6dca7418dba6f15d10377aa50f206 have failed. See details.. :x:\u00a0Tests for the commit 730fd76849a6dca7418dba6f15d10377aa50f206 have failed. See details.. :x:\u00a0Tests for the commit 730fd76849a6dca7418dba6f15d10377aa50f206 have failed. See details.. :x:\u00a0Tests for the commit 1c4d9eb11509ff56323011ab39537308e5c12aa8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit b755c8aa33e59439282a56674ada0b630f5308e2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 121877d743a78894f252e3fdfbf83e0c172c17ce have passed. See details.. :x:\u00a0Tests for the commit 14004b4e84c8728a582581f280912f23a38dfa84 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 14004b4e84c8728a582581f280912f23a38dfa84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 14004b4e84c8728a582581f280912f23a38dfa84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 14004b4e84c8728a582581f280912f23a38dfa84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 14004b4e84c8728a582581f280912f23a38dfa84 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4ae9bddc34296badd96ec468581810678af35893 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4ae9bddc34296badd96ec468581810678af35893 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit aba9c20cd62756e25184fa5a76552974bd4e32f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aba9c20cd62756e25184fa5a76552974bd4e32f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7fbb49c573456fd604da8718da83237ae8c6d64d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 485f4b9194ff58a24cb0d8f292648672063c922e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 485f4b9194ff58a24cb0d8f292648672063c922e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 568cb3266ca9570f8d33bb003393ebef6a65ad0e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e70563e37e1ed56272c5058ab92f8ae2b5514587 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 98892173a8dc0b6013dcef9e1a53f61858d8f10e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 98892173a8dc0b6013dcef9e1a53f61858d8f10e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e9701168f97c7d45cc06d0bafd611970040d5aa6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4358a6363847133bd5b58e3b1eb53f37a4e64bc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4358a6363847133bd5b58e3b1eb53f37a4e64bc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a33fab8961b35762386e7b2326fa4f23d21eefa6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a33fab8961b35762386e7b2326fa4f23d21eefa6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34459c42624a0d37e0d4e30b93fa778062ef9995 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34459c42624a0d37e0d4e30b93fa778062ef9995 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 34459c42624a0d37e0d4e30b93fa778062ef9995 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 34459c42624a0d37e0d4e30b93fa778062ef9995 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d702b373bb49d9b702897ca45058f3d443207719 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f396e5198aa51927838fe786b7b27321f5ce2f06 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8f57f39ff484eef4e55274b797324ae19e9217f6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8f57f39ff484eef4e55274b797324ae19e9217f6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79bc1f6c660b3d757f63e3973a54821c2a8db242 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 79bc1f6c660b3d757f63e3973a54821c2a8db242 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f2d76ca8b424a6229f90e9178f43b9065e2c0e3f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f2d76ca8b424a6229f90e9178f43b9065e2c0e3f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ddde38e75e2db948d44e69adafeecafd9a1df405 have passed. See details.. :white_check_mark:\u00a0Tests for the commit dc2e1b3475cdc342d07bb57787b93bf1f47118ec have passed. See details.. :white_check_mark:\u00a0Tests for the commit 747c01bb4c84d279e7ca5fdbf2f3f6e50a25ee5e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5b94b533ad24aee88262c196839a2253d8b11006 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d13ac8b39577b4b6c21fb73af627f72ed9737ec1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d13ac8b39577b4b6c21fb73af627f72ed9737ec1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e53008a34ca8d9c51adee95d7bb9e3c8147c8899 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea4d8c1efe12da716d94af3127f019d5f0d35179 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea4d8c1efe12da716d94af3127f019d5f0d35179 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 91fa94233e18d0d2da6fc608ae2b19075d9f4c3c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 189e9b79464665c7e37fa37969bba78960659e7c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4fc439e92a39b5b67bb6ee66be8079c06928e506 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 975f9f49ab2b2286d47cbc6db9eda6a37971139d have passed. See details.. :white_check_mark:\u00a0Tests for the commit eff0cab61dd8a281ad6caf0461177214a2d687ad have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8b06ad61ec26ab59dcb64d937f3489be0db5f673 have passed. See details.. :x:\u00a0Tests for the commit d5c4d0dee4707270baeeb9cf8363bfc220d3e20b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7358cc5f7bf8174990c0a122f46912a08f7c5ce4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7358cc5f7bf8174990c0a122f46912a08f7c5ce4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e64147e8b6d5c0e6460a5e02f280f173c78d3b84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 63b470e615aefec97f83baac30866358195c1d76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d55b12531d2f870c78968f3d369d8ccbcdf330e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d55b12531d2f870c78968f3d369d8ccbcdf330e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit da15d0a7e522ebb02c81f1c0dbffbe02452de96c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 398778cc8d92ddccff619299d8da3cd05c57e2af have passed. See details.. :white_check_mark:\u00a0Tests for the commit 18cd3fb73a0ad009f283487f34a15b4ee866a8f0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 558f1e40f4b4d467101ea420dac700f6e1007e91 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e84e07c6e3b863d7dfc50fccc6730b0cfe771291 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2c374917a6bfa9f5c56e8c7db0d2620f842161d0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit dd96d0083420409c60db3cb687a10032404ccb65 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f8a717070683b73490f4c5a3e6e3824c901ac839 have passed. See details.. :x:\u00a0Tests for the commit d397a79efcc342c96940f8040af471da8e05c423 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d397a79efcc342c96940f8040af471da8e05c423 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2a1ac68d8abaaaa1f223f01052118d89c2e5f783 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f66077348474d10a9773d076336093f168ac08c have passed. See details.. :x:\u00a0Tests for the commit 245127709b2561d3058f398618ae8761822e5bd2 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 2e843446dfd916b6e456ac0e22f1f9105206b3de have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2e843446dfd916b6e456ac0e22f1f9105206b3de have passed. See details.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ccdf2263d50ae9ba552805158dedba4608dec19 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 71491cdb85b8bf0fdbe727d89919155bfdc243cf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 71491cdb85b8bf0fdbe727d89919155bfdc243cf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 504b64b844929c6af7c91e0b044e5b4bb39d71d9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 504b64b844929c6af7c91e0b044e5b4bb39d71d9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a75dfe8b2e413e336a6cd7350e769b7f9dd573aa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a75dfe8b2e413e336a6cd7350e769b7f9dd573aa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :x:\u00a0Tests for the commit b777ca37141aebf90c06203180e41ea796f6c915 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 288ac7f6cf6627d1e7d35b42748d8894e685b097 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 288ac7f6cf6627d1e7d35b42748d8894e685b097 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0cfb5904bcd2edb5ff5ad8a2fcb4b5cb4f7d2157 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0cfb5904bcd2edb5ff5ad8a2fcb4b5cb4f7d2157 have passed. See details.. :x:\u00a0Tests for the commit cd5b6940e3c6df1e636aaafa27cbdc3d4a1e3a3d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9856c97e5a0241016557e7b22912e0cc5c320844 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 436f8cdb893d5420b04948111bb1930424a0ec6e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ae348f87ec75c4ae78ebdce52c4b7c820d1035d3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 77d0923f5443581e8b5e4134bf24632652031f86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 77d0923f5443581e8b5e4134bf24632652031f86 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e93eb2e65356eee32ddac688fbffc4ca28d642c4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4d859d831644afe4dee61f54eb62fd512605ed13 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9bee08b7fed1ea0669aea68e585cfd8b1effb154 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1f41bd3b9697f1e29316a52b0b3633b1055993b7 have passed. See details.. :x:\u00a0Tests for the commit b409813c6d644cb76c40b165cd180bf6c681c3b8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 99241ccc70d037fed27d8da573c2a3b4d4a00444 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b0cfa3c9755f07e75feee6d1627722c42d1b4222 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 755c7efa463f43c0438e37442ca7017c3773f721 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e171e496762e8f9dc305ddc71b83e24b1c43dc6b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e171e496762e8f9dc305ddc71b83e24b1c43dc6b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4a4820c28cfb453daf3fe5cfd440833441f5501 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c4a4820c28cfb453daf3fe5cfd440833441f5501 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c4a4820c28cfb453daf3fe5cfd440833441f5501 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c4a4820c28cfb453daf3fe5cfd440833441f5501 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e1b84a6bba09915c89fa9ab4c5b1eec9bcc1989c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e1b84a6bba09915c89fa9ab4c5b1eec9bcc1989c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c5f63fcdd90d502feae3c2316f71a98e5c5d376c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c5f63fcdd90d502feae3c2316f71a98e5c5d376c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ecd1c2a100358b2de518e8ed4217308e6b9832f6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ecd1c2a100358b2de518e8ed4217308e6b9832f6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ac81c81cf621b016db8f0678e5ac07da0d03b4b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ac81c81cf621b016db8f0678e5ac07da0d03b4b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 118ca18256bbc0a5d34bd3e91247d3cddaaaffa9 have failed. See details.. :x:\u00a0Tests for the commit 3ed142ea06c01275810821ea39dcf3b89ef13e16 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3ed142ea06c01275810821ea39dcf3b89ef13e16 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit cab6b2d2e8b2412a087e2ac722139476b3824228 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fefc06162c77688d2a7c2240fc77aa5736874e01 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8fda4af7b79375f477927c5f08d2d37570874524 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 11914e5161c57b7a38dcb3bb18842bc0bf190284 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 11914e5161c57b7a38dcb3bb18842bc0bf190284 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 11914e5161c57b7a38dcb3bb18842bc0bf190284 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 11914e5161c57b7a38dcb3bb18842bc0bf190284 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8abe98fb10e861dc57356ec0fb07fe72eaa21d51 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8abe98fb10e861dc57356ec0fb07fe72eaa21d51 have failed. See details.. :x:\u00a0Tests for the commit f47328813dafe22097ca171d4a7e2b03d2bacdaa have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f47328813dafe22097ca171d4a7e2b03d2bacdaa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 41feae0bbdba494a2edd25981c438cc72dfdef72 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 41feae0bbdba494a2edd25981c438cc72dfdef72 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 41feae0bbdba494a2edd25981c438cc72dfdef72 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f179bdec845dfc9c5810aa825198d29a7474ad69 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f179bdec845dfc9c5810aa825198d29a7474ad69 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2d50c8c79a2206d59222fabc5e2b5c8c4851cc65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2d50c8c79a2206d59222fabc5e2b5c8c4851cc65 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ed2dd688f4c36f0723e16708fc5fd7d364550229 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f1822de5f375fb7bc25e96a1fd3e84597a0ffc30 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e68dc001454ebab35b97640aad89e1eec7476404 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d35361baeb4f31e72d7b7df9c1e47ee7f7f67a32 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1acbfd6e64d43c2c90af38c5d30cc3f5d41f99a3 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d264dd92f48995de924711bdcb170d75d2a1be64 have passed. See details.. :x:\u00a0Tests for the commit bd6c1b57adaee7d6408de17f5b11877cbeade525 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit db42a4da1c1e9be0338c7decac06840f371d3820 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c72e6e042b7fd98d345fe75bc1c9eb2e35a3e732 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 04c8e47add493ae2e86af9953355bd6c83fbfde3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 9596435701b21fe20df4d9868197fb62537d28d3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 84ef8855926d0caca577515ec7be27cbc265d17c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ec49cdac20bf61e88af000e8933db77256b5621 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6ec49cdac20bf61e88af000e8933db77256b5621 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2d6d4a50247da4c9ae8e8f0e42c7105cc243cf2d have passed. See details.. :white_check_mark:\u00a0Tests for the commit c5ea84429ee64e0aa68b68e7042b98e847fd685d have passed. See details.. :white_check_mark:\u00a0Tests for the commit aac2637114510953592f42de96a4d0fb752fb07b have passed. See details.. :white_check_mark:\u00a0Tests for the commit c51fce1cfd715b6f19a74ae6e4c281601b28de19 have passed. See details.. :x:\u00a0Tests for the commit 09fc58236bbe1e3873c23c9e40afe4df89e8f951 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 09fc58236bbe1e3873c23c9e40afe4df89e8f951 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8ee910541f5489338306c3dfd4d0630c70d63a4a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 468ce939dfb22ccfbae061c7ee72133029af78a2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d6118d0d9885a285abf76cc365af21736b36a0b4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 47e16971aefd53366d3743163b40b23a06055593 have passed. See details.. :x:\u00a0Tests for the commit 04e03e85e67247c8fc6b093df0e20c81e0aaaf78 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 04e03e85e67247c8fc6b093df0e20c81e0aaaf78 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 39eff07aedc6f98ad07f8ff6aa615a35d4832071 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fcce10790c44614fb8fe084d1e4c45f40b3f4003 have passed. See details.. :x:\u00a0Tests for the commit a5f62b87aa545a3dc1bb9adb9ecb8912334c347e have failed. See details.. :x:\u00a0Tests for the commit 25a89f85c2c7e1ff611d8fe5f253762cf093c16a have failed. See details.. :white_check_mark:\u00a0Tests for the commit c0bad1a3c29f33c995d4653af44cc42269cde859 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 97769e537eddaa9fc284a12509a8dc449a97312d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9bcdde6b05b34e27758125ee2499107d2f5a9dfd have passed. See details.. :white_check_mark:\u00a0Tests for the commit 049cf1fae9b791ca768091e1a12961ecc3c1c97c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 483f93bc4d688e579233faf6f459a64eb088f745 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2db7b1981656d3f13047aa812266877ddf746252 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7f1f45c41734f4cf30b606429944fd99aefbbc06 have failed. See details.. :x:\u00a0Tests for the commit 998e767b2fe7ee85ef53217263b4aa32428282f9 have failed. See details.. :x:\u00a0Tests for the commit 5ade7930de5e3192d0cf3a3d8ac361fc6d14a4d7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e289e465f1d9f35cf8fef7262de7d90a9314d429 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c3b9c5c6842d827cf79261d1bba8bb74452105c9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 69fca9f46d6b0484244064927a10aab92eb21a44 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2c4be7f041a73d53edbc681e382068fece708c6d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2c4be7f041a73d53edbc681e382068fece708c6d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 25ea95fcfc75f7027218f09c295f492b33b1496d have failed. See details.. :x:\u00a0Tests for the commit 25ea95fcfc75f7027218f09c295f492b33b1496d have failed. See details.. :white_check_mark:\u00a0Tests for the commit f8023a9af7e49c6f54abf6390b7aae4027ded091 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f8023a9af7e49c6f54abf6390b7aae4027ded091 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9831559751f1f949a81dff1cb3b63a15e240f2b2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9831559751f1f949a81dff1cb3b63a15e240f2b2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8ffec984729cbeef3cc1636268aefbbf558bf138 have passed. See details.. :white_check_mark:\u00a0Tests for the commit acc8afae38c8806979c32cca949f423223a7d46c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 637bced1c0ae469f0270b4cf6a2f1043d450c4b1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 708c857561bbfc1c0423439321ae65fc30258bed have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9cc8898efa9bfa3dea353e3fc2a8697d8cf6163d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 98bc19aeb2f94ebcbebfdd40cf033dd37c74ab44 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 697f9775602209cd03caab1f284b2e2d601a9236 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 93fc8e07326668e768d5bd1745a35cd968e838d9 have passed. See details.. :x:\u00a0Tests for the commit d78d5c807e2d7a3c8d40e54564748aa24478344d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d78d5c807e2d7a3c8d40e54564748aa24478344d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c563aaa0603852a937ebd99641e7def3c45e24dc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c563aaa0603852a937ebd99641e7def3c45e24dc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 424b0adcdaf2f981559e11d2ee0649c4b7e5812a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ef75b2a2a0412a9d08f3eb681b5335bdf6de0ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f5bb9e066708c668dcf5a76dae7568a7098f13c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 203b2953f65ebb40529b09c706affabe253c89ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c77d3ceac034a476c662fdd271f79155613a6264 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5686cd18b6979a99d8e45c4c6084f4dd376b2721 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 542ffb9b14f9cc31bd96c6e1e0c0175dc168e852 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 042e81e7a3fd25c94b8fccb97dbe89b52b5c4686 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3eb666df964c0ce327f51a07ebadeb3b53654535 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dbe32c73de7d8ec7abfaadf56e103019bb25c9d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dbe32c73de7d8ec7abfaadf56e103019bb25c9d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dbe32c73de7d8ec7abfaadf56e103019bb25c9d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dbe32c73de7d8ec7abfaadf56e103019bb25c9d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c5b14660e0f673daf343c421027742e4d62fea6c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f32f60736a7921d6b8fa5da3acf3d65e2840e575 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6e7bd5ee6bf2d0eb7a194cfdb731f482d9bcb2b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2e7444ce177dec882efcc62058e9fc61c24de4e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a4a0e63005ecf99198e2278f6c3c80af25cbdddf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 82d391b135dcb92deb7692dca30a55d900d2af50 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bfa0ae1b724b43fc5b28ca0344f69e416c1a937b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bfa0ae1b724b43fc5b28ca0344f69e416c1a937b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit bfa0ae1b724b43fc5b28ca0344f69e416c1a937b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e740935032c817d7b8f145c6d471e22705f289a4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fc716cfce86c4e1aeac33529e969344ac2f2c90e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit da5e0c73c4b5c9895ae25228cea3fd3a88d182f2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 98e687908e8f941570798bd3b89ef4d4985d7b1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 98e687908e8f941570798bd3b89ef4d4985d7b1a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0454ff53ad439b0d42c429ccc81fc82cbd4296a4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f269755b8bbf0f52577b92c554e3b5804f19b8bb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dcc3c54500230cae3a91c00e61c5ee6f91448818 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit dcc3c54500230cae3a91c00e61c5ee6f91448818 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ae9640b820b0ff50ec4b6654c067abf151b28edc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f1601d944a8dd26e763f29522a6127d756ffbf1b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 36d4c4ef45301ec870907e22c62cf9f7455f6798 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2eb20bf8d8e8b6f5509b01e4c7eb9092a747524f have passed. See details.. :white_check_mark:\u00a0Tests for the commit e84bc20503d57adced0222bbb0f15f151bdda3a2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a943143d1130aeb3a005b2df8d241afe32e4b6b2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a943143d1130aeb3a005b2df8d241afe32e4b6b2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 64311a86143258dada3b1e99546500b22f084d11 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ef2e3379c5442aedb74b5ba7b2d56000aa036145 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 97abc4120416e127364acae417c3e14caf101a80 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 97abc4120416e127364acae417c3e14caf101a80 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 81c25d3f62e653fdb613b7b5f96fd8d12c768891 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 104ae1fec542cfb71a1658642b6de282536df5f2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3f892d8f8f3fde19b9583f3e9bb20b349335af9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a117d3cadb5f98b481a56fc235a723c3b051bd29 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit dcc3f1352a128300f345d5597295c7e410f23140 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b267d92966cd821b73006a2f8ee483c639d4072f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f027fbe9220b1c076edf0773dabbbc92afc509a4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 860bc3643c881084d94cd49a437a28713ac24b74 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 860bc3643c881084d94cd49a437a28713ac24b74 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8d76b7e1960912204c3c9cbc116140e829249d16 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4087dac7112f1e2570a98c8220567dd056362ff9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 790605673a43658d9612b67bf2626c3108aad3fc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 74f6074f3a883201b0ec6b1d30a295b045bd12cf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a56be535e9354f219179e76f88c4be606012c7e8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a56be535e9354f219179e76f88c4be606012c7e8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60b03d132f06f12dbb9a1dfc13e14a533aae1f3e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit af138e0f544d7a488f4d4ea0d7c6e9267585ce6c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 370ae8da82b2c66a61e4a876099d39ad4da63bb0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 370ae8da82b2c66a61e4a876099d39ad4da63bb0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 370ae8da82b2c66a61e4a876099d39ad4da63bb0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e7a9256972b3364448a845f494606466e6a50883 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e7a9256972b3364448a845f494606466e6a50883 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e7a9256972b3364448a845f494606466e6a50883 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a6d24b04606d1a706797e8776d0a7aa8ee0748a9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6b8003b3c733385f97b0411e138bbcc603927f86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6b8003b3c733385f97b0411e138bbcc603927f86 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6b8003b3c733385f97b0411e138bbcc603927f86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6b8003b3c733385f97b0411e138bbcc603927f86 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4b29e4e4284241b827fade7d8c094c66f9f85835 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1e1e7f152ce59ae76f59c88140a62c6aa3611c80 have passed. See details.. :x:\u00a0Tests for the commit 54fa1d0498ce7903845af5f4c4ba6f243fedce42 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c6e9bffb6168445b0d5f68422ec9ad7c61fbc2d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c6e9bffb6168445b0d5f68422ec9ad7c61fbc2d5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 43c4c6d601872f80489828fb0bcec7a378de46fd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6e3778d877aaffb88a0ba9f300c2e24a8dd10abc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6e3778d877aaffb88a0ba9f300c2e24a8dd10abc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6e3778d877aaffb88a0ba9f300c2e24a8dd10abc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6e3778d877aaffb88a0ba9f300c2e24a8dd10abc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a31dc1b8776839a7c7e907afe043199c8155d07b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 715b42f5669920f9b44dcdd187c8ec7d3e680c56 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 48ee19430920567197c580d39218a1421ff8b257 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 48ee19430920567197c580d39218a1421ff8b257 have passed. See details.. :x:\u00a0Tests for the commit 48ee19430920567197c580d39218a1421ff8b257 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c5eeefed3117f7a7a13b1b59daf958611a94733c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97d90346d80b956c99477ed51657afd641a5e2b4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 77f4ddf3ddac2434a8d701a0f3872137918cc38d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 69996141d249df984bf6f0efee49e5348b9bc163 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b9502bd3d8b23eb05bf2d5708b51c44b582feaf5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b9502bd3d8b23eb05bf2d5708b51c44b582feaf5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b9502bd3d8b23eb05bf2d5708b51c44b582feaf5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b9502bd3d8b23eb05bf2d5708b51c44b582feaf5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b9502bd3d8b23eb05bf2d5708b51c44b582feaf5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 47d5d39b2799c52f86786d2c77e9420d530afa7e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 47d5d39b2799c52f86786d2c77e9420d530afa7e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e5a5b85fb1c98621188ba654c3b1446863b561a0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e73867a7b36a29ee5e3e472e3d9b34833beb7dda have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e73867a7b36a29ee5e3e472e3d9b34833beb7dda have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e73867a7b36a29ee5e3e472e3d9b34833beb7dda have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0d0f9496df7e5abd4233fa9f216423cdbb1e0e77 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6edb025a25ae0d8090f3c1c1997ed9432d738270 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e5179246aac2f5dbaf122a902670fd6918095f24 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0118557524731b4de57ff80d9bfa7ce8653602a8 have passed. See details.. :x:\u00a0Tests for the commit 030f878b35656f23b647b9548cffc1574a8bfddb have failed. See details.. :white_check_mark:\u00a0Tests for the commit 030f878b35656f23b647b9548cffc1574a8bfddb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0a599c8e925f1b2fb9fde4b7414e93e135090cfc have passed. See details.. :x:\u00a0Tests for the commit 0a599c8e925f1b2fb9fde4b7414e93e135090cfc have failed. See details.. :x:\u00a0Tests for the commit 31e451aa9003f40d4064f3854294c8c1765a0e55 have failed. See details.. :x:\u00a0Tests for the commit 4f38dd6cc0534f765a82bcf9bc5d7df19ecdf61d have failed. See details.. :x:\u00a0Tests for the commit 40a9bacb21066021a364377eb12f8419ce344422 have failed. See details.. :x:\u00a0Tests for the commit 30ddd77133ecd90a082c25c6928f5d8a79783e20 have failed. See details.. :x:\u00a0Tests for the commit 30ddd77133ecd90a082c25c6928f5d8a79783e20 have failed. See details.. :x:\u00a0Tests for the commit 30ddd77133ecd90a082c25c6928f5d8a79783e20 have failed. See details.. :x:\u00a0Tests for the commit 303043a284c43c724ddc778ec3fd67f838970d65 have failed. See details.. :x:\u00a0Tests for the commit 7d9b4eb3f178bca95e1142ffe768a8f929af0c4f have failed. See details.. :x:\u00a0Tests for the commit 25f13a22a8ac2ac5ff9c19c9dec994d2b4259e7e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 25f13a22a8ac2ac5ff9c19c9dec994d2b4259e7e have passed. See details.. :x:\u00a0Tests for the commit 25f13a22a8ac2ac5ff9c19c9dec994d2b4259e7e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 25f13a22a8ac2ac5ff9c19c9dec994d2b4259e7e have passed. See details.. :x:\u00a0Tests for the commit 25f13a22a8ac2ac5ff9c19c9dec994d2b4259e7e have failed. See details.. :white_check_mark:\u00a0Tests for the commit c234af8f546a40344621382a7890cee1d0ddc9fa have passed. See details.. :white_check_mark:\u00a0Tests for the commit c234af8f546a40344621382a7890cee1d0ddc9fa have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5d28889724b2679849302a2a53dda859ce7b3950 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a66367cf7e8dadbfbf262b0073b1fb39b49d826c have passed. See details.. :white_check_mark:\u00a0Tests for the commit a66367cf7e8dadbfbf262b0073b1fb39b49d826c have passed. See details.. :x:\u00a0Tests for the commit 4501905c0e3bd88f8ec74752b2013a599831dcbf have failed. See details.. :white_check_mark:\u00a0Tests for the commit 148c4106d505e1dd25499218e44e17fe70e486a0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 148c4106d505e1dd25499218e44e17fe70e486a0 have passed. See details.. :x:\u00a0Tests for the commit 31747c6d7a5f7277179930c8f52533c95c9c7cc7 have failed. See details.. :x:\u00a0Tests for the commit 31747c6d7a5f7277179930c8f52533c95c9c7cc7 have failed. See details.. :x:\u00a0Tests for the commit 0fa45aa55b58112074ac6e04a7e7c77b3dcdf958 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0fa45aa55b58112074ac6e04a7e7c77b3dcdf958 have passed. See details.. :x:\u00a0Tests for the commit 0c111f444a43ca1ea32ded6f7dd83c0769ecf16b have failed. See details.. :x:\u00a0Tests for the commit 336328d7da816364ddc4612c9ec1c28921058c3f have failed. See details.. :x:\u00a0Tests for the commit 99b120a4c845580bf830e67b67789ebeecb096e0 have failed. See details.. :x:\u00a0Tests for the commit 8f14918ccc944e37fad02622533b1a20aa78d3d8 have failed. See details.. :x:\u00a0Tests for the commit f2b77de3e2dd4267d056e727018d913e17d598a3 have failed. See details.. :x:\u00a0Tests for the commit 074edd1e921ecdcaa76aee6e548890935761fe82 have failed. See details.. :x:\u00a0Tests for the commit 074edd1e921ecdcaa76aee6e548890935761fe82 have failed. See details.. :x:\u00a0Tests for the commit 23838689e781c5cca7672aacbe365cfe84208e5c have failed. See details.. :x:\u00a0Tests for the commit 2e04b77ccdf2d79ffdd7fd2aae06d301f6c51e72 have failed. See details.. :x:\u00a0Tests for the commit 6c77e06b05ef231c6c4e1eade6aacfe29debf79a have failed. See details.. :x:\u00a0Tests for the commit 6c77e06b05ef231c6c4e1eade6aacfe29debf79a have failed. See details.. :x:\u00a0Tests for the commit 6c77e06b05ef231c6c4e1eade6aacfe29debf79a have failed. See details.. :x:\u00a0Tests for the commit b9cdfe2c4c90c86a782c865d17b2e4044581a1d5 have failed. See details.. :x:\u00a0Tests for the commit 7dd74739d75643d573d7ba19e65c8967b014e2cd have failed. See details.. :x:\u00a0Tests for the commit 7dd74739d75643d573d7ba19e65c8967b014e2cd have failed. See details.. :white_check_mark:\u00a0Tests for the commit 5d9c3c38d5c5d9e441aecb7cc3a635c4c0708069 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 33ef77e274eecb37c3d0c57e43a8052adc3bece8 have passed. See details.. :x:\u00a0Tests for the commit 3387d4503f4ac95a6f9a2de087024ecea4f2bc7a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3387d4503f4ac95a6f9a2de087024ecea4f2bc7a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4269c00c8c9a6565e33327bbe8f53e3e8a2b3e01 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 335746bd50e867a2204dac5f50db02e7732d4198 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5a73209c6ae2371c47017b45b48de861dd72657b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 5a73209c6ae2371c47017b45b48de861dd72657b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2965e365a5e0320a55537983782228e636a840d9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit fd85ab01594a667104061cfdd7ed6892657e1ee6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4d9c840597ad881e4f15fc8b0be450ebaaee93e2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a0979b4a9934e6e52c140d9e5373e0e4734e6ea1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c4a4a0a55ebdc3c96758d6fee4c6e891e0451439 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 08079d28aa4248979b4611017ad992a590391f7d have passed. See details.. :white_check_mark:\u00a0Tests for the commit d46279c74578469eacdd1747a1cc3bb8eb336635 have passed. See details.. :white_check_mark:\u00a0Tests for the commit bc1438eb6c2a8881e48b7314b92a4d67809a3384 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 85b8e0c34515658c09bdf1aa1f966011a4fa5a99 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fb727603604352dddf21da55d249e1e0a4e0050d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 503f277548d072efb6718e35f330e11c8b950452 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c21cb816c04e53949a72b9b821706c8501c4cb0e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 79d73140be6fa125b00f918ae24a4bcff68df548 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7743d0b00cf57cbb7bc610de05e847df18cc74f3 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 633acf4bd3755ef45755ae7585aedbb0ae898f6d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 07d8b190a47041521359a47041d533ff04841b1a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ccbf3e4bef8c54fb6faa49ef56f7422167cc6fa1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ccbf3e4bef8c54fb6faa49ef56f7422167cc6fa1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 108094d472d8d15e75b8de8963acf434641eb4c4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 108094d472d8d15e75b8de8963acf434641eb4c4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7315251faced91d5635fc4d27d3bb00f162aabfe have passed. See details.. :white_check_mark:\u00a0Tests for the commit 043d0886b4e650596aa4f59296be1c954926feb3 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2cbc717b00cc32db317c57f836196176a764d102 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 738778cc8785addee299f13d2d4251d1b72de2a5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8eb0305e07af721320ca917359ae219ac1a5fec9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ba24be36e2c707de347c18e6859d7cd9403dd267 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f9428d1b170e5d4c4868515e6e8097b44412d84c have passed. See details.. :x:\u00a0Tests for the commit 99050ae4f36666cd3e733c82621b7650fca64c1d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 99050ae4f36666cd3e733c82621b7650fca64c1d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cf1726f53df141c7c2b59623affeaaa65cdeb43a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3f44d338c6d397a5cf65742d699107c67a51a580 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a7c91cd95e4fea73ca93e0e57d3544b92b6409d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4a7c91cd95e4fea73ca93e0e57d3544b92b6409d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d0f855c3ba3e448df0965f013733d2df66e28b39 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit cc6170d42ae01ae23a87a9dfdde7dc19b0cd20fe have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e4a6a318c3e386b494c983c310ffc022158ed7a6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fcf192ca3eab8ff9c9afef218ef04353a58ab8da have passed. See details.. :white_check_mark:\u00a0Tests for the commit 34fb29f786685a9ffc01ad52f08a2dfd9e2772e9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5abc69ae3de47b83ea7893461ebe569cc38a72eb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 83c508fb4c149973859a5d440f8ab8f14d1f20a6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c3734d210c2f1af55d56cc05ffdba4fe97c59efb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 39803d15cbd67f9e3d9a67fa9f3db51983cb5011 have passed. See details.. :x:\u00a0Tests for the commit edf5208bdcb2fe3cc8a918404a100fcce704c086 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit edf5208bdcb2fe3cc8a918404a100fcce704c086 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit edf5208bdcb2fe3cc8a918404a100fcce704c086 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit edf5208bdcb2fe3cc8a918404a100fcce704c086 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 38e39cb9ac6844e06e3f8607c28619c86c0d41ce have passed. See details.. :white_check_mark:\u00a0Tests for the commit 38e39cb9ac6844e06e3f8607c28619c86c0d41ce have passed. See details.. :white_check_mark:\u00a0Tests for the commit 13aaf2584c62277720938143d28dffe9b114d6ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 13aaf2584c62277720938143d28dffe9b114d6ad have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 157f1c590b29ab6a849c38b92ae8773a0a2207ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 157f1c590b29ab6a849c38b92ae8773a0a2207ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f58d683cd6036300b7b885b34f08eebd7011ed02 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ad9480455f25ea3872ace937afa6e2f12d4673f9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b19b82f867ea1eceeb5b414bed65cb57a34dbe1a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8dc0c84cf2d91ab52d0c425bfa8e6acdb548a455 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8dc0c84cf2d91ab52d0c425bfa8e6acdb548a455 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 93a145f7dbd8342d08424ad8fa24bde497790e80 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3a249aa359cd6389158f30ae356d0a4fde32b3ae have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e6eb287d24272c8edbe735aef6a0625b32bbf492 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e6eb287d24272c8edbe735aef6a0625b32bbf492 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e6eb287d24272c8edbe735aef6a0625b32bbf492 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e6eb287d24272c8edbe735aef6a0625b32bbf492 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ca4e70afb0414c5df866a2977600c7aacf14dfb1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ca4e70afb0414c5df866a2977600c7aacf14dfb1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 442a3caf460f66e812777051450bbe2211667646 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 59918bcb4f7a38f9c4d631d306dd812297446293 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3a425194daf686d874ad5ffdf687643ae4f1ed0e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 769cc727c09a65d296bea1da359506033f9738f7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ad8c97c6bf9fa38023576a5c8178e0d68250bab2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3c2610f0496c53f65c20df5a2a453dcff96706d8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3c2610f0496c53f65c20df5a2a453dcff96706d8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b66b9b1250a08c431694e49b9cb2100d4a6e7815 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 96402f95be344f7ba98ee1967f346e88d99e62e1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 96740ef9d2f44b65cf622159b70d6dfef7fe5a36 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ffce34841b17948806a023dbfabd52d769156f93 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit edc423f3cb8ceded33b3d2559cc60fb3181c2d6b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit edc423f3cb8ceded33b3d2559cc60fb3181c2d6b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5a45c7c9e344ce8beea9c763c2c2b3cd4b933978 have passed. See details.. :x:\u00a0Tests for the commit 228740cdc0122fe93112f4c3e4bae594163340c4 have failed. See details.. :x:\u00a0Tests for the commit 7fa69057a23ed0789d7ae7c6f5808d7f238f91db have failed. See details.. :x:\u00a0Tests for the commit 18c6eabdac37074422b9b3aa0784c602e21160a1 have failed. See details.. :x:\u00a0Tests for the commit 5bd0d1559667b379d6d04f566d438b4c0c19c39b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5bd0d1559667b379d6d04f566d438b4c0c19c39b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 49ee5d929ca0289a1057ae62f62d9779527d712e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d1a4d2f5c68bccc551f145d9d863fd2c1207cd9e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d1a4d2f5c68bccc551f145d9d863fd2c1207cd9e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d1a4d2f5c68bccc551f145d9d863fd2c1207cd9e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit accc2bb2659cc05cfb294475556b866bac62b4ec have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d3176a9780f73f978fdef7e72dfd43cb6b7fbd66 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3176a9780f73f978fdef7e72dfd43cb6b7fbd66 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d770bafaa3318460e1e16703b1b60f1521b24ce3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d770bafaa3318460e1e16703b1b60f1521b24ce3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8945418565c79825a0834bc9732c9848613a1448 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f1f015fc66790abe4addfff8f253e0beca0dad08 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6d233580f3d702f5902b772df0ddfd0262994a66 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6e70243a736f174c36cd89d6f2abac2de73e3ee8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6e70243a736f174c36cd89d6f2abac2de73e3ee8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b36cca40f6335f31c7198cce2a26a08b0a0863b0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 86e06b0ce567654d9a1f5eedbe29f4a6bb416a46 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4db9edee3d86566e1cfa64c94a32f8ef6e918203 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c34ef9478f8c78fa6984c5253a1f7e3b46a9e634 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7376ad1f075062d17c2e930e5b7f55f5ceafafa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7376ad1f075062d17c2e930e5b7f55f5ceafafa1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b7736b5de586bba958255833bf1d3a9778a8b220 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b054111e02ed9c60605226ca72be31d401c99e42 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b054111e02ed9c60605226ca72be31d401c99e42 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b054111e02ed9c60605226ca72be31d401c99e42 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 06a730f1ddbb1b41aab024adafaa1e14e87d874c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 89c6101d4629c558ca68de33a9c8f1f3f06277dd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6659cce301e8dac53c5f27e052db733f490df5f5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 72b5a123d8fbbd112e9fb6249dc72851b9a40e42 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2f84ffdf755cc28969433dc9c356841adab992cf have passed. See details.. :white_check_mark:\u00a0Tests for the commit ae1e5ae7afffdce22904711029b5c2b68b1b607f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 061ccc1c4995a94c80f31aed2245d2de02f0f561 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 451a2d1b9a235af7e68373e60f50f9e9cfee4426 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 451a2d1b9a235af7e68373e60f50f9e9cfee4426 have passed. See details.. :x:\u00a0Tests for the commit 34c404c0577b34e85c944406fee3d35a997aeba6 have failed. See details.. :x:\u00a0Tests for the commit dfd918877eb5dc84d69bd05ae78b06ba17a3433a have failed. See details.. :x:\u00a0Tests for the commit c1a7a162a5245ae1489a8b1abc0afd1dd0085ffc have failed. See details.. :white_check_mark:\u00a0Tests for the commit eb9f0af162fe15c0e8c6bd7ca564ea292a75e603 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0171b09894eaeadacbec443ca04a984dfea3504d have passed. See details.. :x:\u00a0Tests for the commit 922bac0e0f1c0af9d76f9efe4689d1f9b9f291e6 have failed. See details.. :x:\u00a0Tests for the commit 05eae374e9cb30ec389dc4bfd37b87cd785cd010 have failed. See details.. :x:\u00a0Tests for the commit 05eae374e9cb30ec389dc4bfd37b87cd785cd010 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 154fd387d595ac097aef8eab79dbd6ab318ab1df have passed. See details.. :x:\u00a0Tests for the commit c56334ca8a45fd992467601d877923dbecdf1dc6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c56334ca8a45fd992467601d877923dbecdf1dc6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4fb5fb2510a772b3931ca32d5790bf4db64628b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 82986ea8cb88810b8f512ce18c1b75e65403ca11 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 82986ea8cb88810b8f512ce18c1b75e65403ca11 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 82986ea8cb88810b8f512ce18c1b75e65403ca11 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 82986ea8cb88810b8f512ce18c1b75e65403ca11 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 08059dd57d04434c615616cd5fc5ff2da9237513 have failed. See details.. :x:\u00a0Tests for the commit 08059dd57d04434c615616cd5fc5ff2da9237513 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 08059dd57d04434c615616cd5fc5ff2da9237513 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 08059dd57d04434c615616cd5fc5ff2da9237513 have passed. See details.. :x:\u00a0Tests for the commit 107f92f191d3796562ec226211e6fcae1824b2c6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0f0dca717fea910a769509474663e373019f54ff have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97d450a4a9b0c5871a9ed97cffab533573a822a6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 464745404920a7f3a4fcac7b4f933c9f4be0b129 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e2a94a2644fe460967967aaf7d0bc2efc90949a7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit cf9a52c4b824bd017d20d63f8e5fe38e974c5fd7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 627472921ded071a87baf990768546a3d203e50c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 627472921ded071a87baf990768546a3d203e50c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f7b28a3fd115e3769dbd166dfa66c3df6abb359a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5a0696a086e937c66591cd1d1cf9cda3e9e1bc78 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5a0696a086e937c66591cd1d1cf9cda3e9e1bc78 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 5a0696a086e937c66591cd1d1cf9cda3e9e1bc78 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 6fe36e535570e1879034cf8f146fba66b5727678 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e09a61cca1ad5e3684c37afad54c19ba4e021596 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0c61cd6d95bef43efcc107e9a82a39ec72971dd1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b90bb5631ec8dbc9cc4f456d0a17a0f9a0650367 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9a874c88547a48e7fcf94af45febdb924dfcf67a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9a874c88547a48e7fcf94af45febdb924dfcf67a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8f4f1db7a087977ce36f2d1083b3f5d7dd1c191a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8f4f1db7a087977ce36f2d1083b3f5d7dd1c191a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f14fe2e509fe7fe615fb57bad0a25f7a91ed3a78 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 424fffaab35addb18f6da20743b4d296569dd975 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 142978305698d4dd2e182b017bedf613ed964dc9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c8b10d088bf01773dea087c2546f3f8e09297eea have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2666850da691b433042a28cf34fe05c6cfa2fc3b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e6fc569cabf7309205617d836453b74e6884bde7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 443cce4f80f1c3955cf5b1b296d73de0bcf0ffc9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 77d24e3543f97e470abe1cae67085a17d62296b8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 77d24e3543f97e470abe1cae67085a17d62296b8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5b472c8228c98828af987fee65f97e198fbeb4ac have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit eceadab0a521ff270b2321697dddf0791bda64ca have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f370d016c6cc38d21231f866dbca9893f3bbdb51 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f370d016c6cc38d21231f866dbca9893f3bbdb51 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c823134fc758e7d8de84fd4822a185249e619298 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 89da76908863e9fde759f7562639866d2ee2b69d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e3a5831d1012f1eb7932dd7d33f470ddb3b10ce1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 9cc385bfd9924251f91c0186231e1e31d195d72c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fd3db235479b2739d98f16632ebed8034fc00cce have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7d43379aa727bf08f1a8afc2d2514c93c72e92f8 have passed. See details.. :x:\u00a0Tests for the commit 55140e30e37382bcea67716cb6f94e507624a467 have failed. See details.. :x:\u00a0Tests for the commit 25b98e436650f4641dfad878f597995535e2552a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 25b98e436650f4641dfad878f597995535e2552a have passed. See details.. :x:\u00a0Tests for the commit 269e528bcc7503b6dc1221ab5c5176dbc4f3e54f have failed. See details.. :white_check_mark:\u00a0Tests for the commit 7bd9a4121ede8d12ba076dbcf4bf0491c331a5a7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8d7839d7ee36ea565a69c653bdaf5c1fc6a94ecd have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3db87045fef9a18574a722d22cf5bcb37d3f4f0f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 633fa69f0286509c8523d2dc9721a744e5d34f05 have passed. See details.. :x:\u00a0Tests for the commit 8f15bfe04ff14d156d270638c2fbdf4101e221bd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5ec78dafcf07d05e2f2d1058ccbfcb32688a1703 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4cbb952f9b7a5e9fffc47a6937b510cf350ab349 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f19d9dafa05d2dab4ca055ead6e50d6b3a5f4f8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f19d9dafa05d2dab4ca055ead6e50d6b3a5f4f8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f19d9dafa05d2dab4ca055ead6e50d6b3a5f4f8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 56360208f8ee94b1c7ae5ca4d3847954253db344 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5fe702328dcbee6fe15ec6e57738ec36194f6b28 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3ea208a94d01903d0c99ebcea89ed7b79c981253 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3ea208a94d01903d0c99ebcea89ed7b79c981253 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ea208a94d01903d0c99ebcea89ed7b79c981253 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3ea208a94d01903d0c99ebcea89ed7b79c981253 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c2f316c3e9fc6ba1bbe707e37af2488d0fe553c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c2f316c3e9fc6ba1bbe707e37af2488d0fe553c0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00fc15b6791416a12166a224b476461806263b13 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00fc15b6791416a12166a224b476461806263b13 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00fc15b6791416a12166a224b476461806263b13 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 00fc15b6791416a12166a224b476461806263b13 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 00fc15b6791416a12166a224b476461806263b13 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit aef9b68830d98e9c055bed6aef4423012fbdeaf2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d474b5dc9c9b5b66f8f582dab2343c7cda8aae3e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d474b5dc9c9b5b66f8f582dab2343c7cda8aae3e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 36d29f7db820f23adcdfdce550df2dc1ffb170e0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2524cdcefab8a83dca5a5b82fb8e9f342a3c2cb4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 99e7bb5d6420fc7fccc9f7e7037a1eebb2a5e3df have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0aa367af8123905caae28c24264e1d327845996a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0aa367af8123905caae28c24264e1d327845996a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0aa367af8123905caae28c24264e1d327845996a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit de11b259db998c147f4d839607c88d257ea7b88a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit de11b259db998c147f4d839607c88d257ea7b88a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eec4474d6a780236a62f11b235871b70e323d33c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 46067fa02cfe5b42c9e6debf9152166d9580ec78 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ce0c4eddf39eb6ae2c9a4d5242de5aa39836e765 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ce0c4eddf39eb6ae2c9a4d5242de5aa39836e765 have failed. See details.. :x:\u00a0Tests for the commit 8d35e3682b390af6031e0611949855d7fe096ccd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0ee55b1b54f6bce31c07e66fe8d25cfc18a6b0fa have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit afb791536293883d51e8921c2c59287c55b602ab have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit afb791536293883d51e8921c2c59287c55b602ab have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit afb791536293883d51e8921c2c59287c55b602ab have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8e62f78f35c96447ed5acf5513f083ec933ac5f9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8e62f78f35c96447ed5acf5513f083ec933ac5f9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fcdc01a4fefc48b6fef7482f2b62692eaf22f21 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f566185eed179988cac4f93852763df55103174f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 875f38001b58f3b49f0e649d943c71d4a3bd8390 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2166804ef099b4d68881a57b3782c327cbeb44ac have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b72dccb006df32a4bb9086c67baa05cb5f9d2235 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b72dccb006df32a4bb9086c67baa05cb5f9d2235 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b72dccb006df32a4bb9086c67baa05cb5f9d2235 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a897b076f097cfa5b05fb174b43fe13161ade6d3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1901c1045d9f9bbed646a2da04e407686af84b0c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d365c1ec327c08017e8170149a3b3ef574d29dc3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 247748719e376c0ae8156e99879a9601deba4160 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 51ed23111d4b7dcd99ed6f47891bb2e6fe99a740 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 51ed23111d4b7dcd99ed6f47891bb2e6fe99a740 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 51ed23111d4b7dcd99ed6f47891bb2e6fe99a740 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 02d6e858824cb634eabe83ca66c03c251bbfe101 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 23b005f2fb6595f752ce908a148b02a6d5657497 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 162a3d9328e2cfa05d276be6172f5d6506dd251a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 677f27b74c0125ed794facbb8c9569c28a739b76 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3b5053687e4b6008ca26291163b7f0408e32149 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3b5053687e4b6008ca26291163b7f0408e32149 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3b5053687e4b6008ca26291163b7f0408e32149 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3b5053687e4b6008ca26291163b7f0408e32149 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d3b5053687e4b6008ca26291163b7f0408e32149 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00a3efba0fb58117914f951ac4f92228fe1b37f8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3588e1a3e239c640068e1ae54a5265fe5681577a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3588e1a3e239c640068e1ae54a5265fe5681577a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3588e1a3e239c640068e1ae54a5265fe5681577a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c6da0dfdaa4fd600539d2b4fbab2ec71311a9fbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6da0dfdaa4fd600539d2b4fbab2ec71311a9fbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6da0dfdaa4fd600539d2b4fbab2ec71311a9fbf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c6da0dfdaa4fd600539d2b4fbab2ec71311a9fbf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 233cf7955486c2070b870521cb4cc5072d8fa678 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 736c547eab68a9bfda08dbd2ed8ef290656b5a6f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 95f06e4def6ac49bd3d1e72facc033210316bb97 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 527144f156ddfef2aa2de5d249617dc09d6d2546 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6279b71e322f99d45a88a7eca933931512d73b99 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6279b71e322f99d45a88a7eca933931512d73b99 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6279b71e322f99d45a88a7eca933931512d73b99 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b3261600c41891bf8ecf0ae73609b78270bd3e5f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b3261600c41891bf8ecf0ae73609b78270bd3e5f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4b35b857897788a255c2abecdb6ea301a861ea27 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4b35b857897788a255c2abecdb6ea301a861ea27 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4b35b857897788a255c2abecdb6ea301a861ea27 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 33178e350e22be248bdc11065184ff0d14ef7f57 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d36d91b5fdf94ad8d717646298bc0ef9d0c0134d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d36d91b5fdf94ad8d717646298bc0ef9d0c0134d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d36d91b5fdf94ad8d717646298bc0ef9d0c0134d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d36d91b5fdf94ad8d717646298bc0ef9d0c0134d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d36d91b5fdf94ad8d717646298bc0ef9d0c0134d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7c2c3d220c7b130984598a01ef42fff92ea74a21 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7c2c3d220c7b130984598a01ef42fff92ea74a21 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 7c2c3d220c7b130984598a01ef42fff92ea74a21 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3152ea995d278fb2acdaa752cb63e38c753a9fa2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3152ea995d278fb2acdaa752cb63e38c753a9fa2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3152ea995d278fb2acdaa752cb63e38c753a9fa2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fff20b48edce1f8952eb8f9f0fa840b7be4f8553 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fff20b48edce1f8952eb8f9f0fa840b7be4f8553 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fff20b48edce1f8952eb8f9f0fa840b7be4f8553 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fff20b48edce1f8952eb8f9f0fa840b7be4f8553 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 188202df407409f16b54216315d71b6395b4300f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 188202df407409f16b54216315d71b6395b4300f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 188202df407409f16b54216315d71b6395b4300f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 188202df407409f16b54216315d71b6395b4300f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0a204fc923a22519cb2d7418d79128ff851b114b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0a204fc923a22519cb2d7418d79128ff851b114b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5855fb88638e0d81b579eea1db2bb4d7043cec6a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5855fb88638e0d81b579eea1db2bb4d7043cec6a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fffacd6c83490ab9b0d4081484c4b90ea9504410 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34dd36f4a9928f523fb1ae52b6abc8c452af1ee5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 34dd36f4a9928f523fb1ae52b6abc8c452af1ee5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 18b11c8a2139d577d6f0618873ae5ae98c64021f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 302a0ca098425f2da62ba0cd3b500fddd7059880 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 302a0ca098425f2da62ba0cd3b500fddd7059880 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 302a0ca098425f2da62ba0cd3b500fddd7059880 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 302a0ca098425f2da62ba0cd3b500fddd7059880 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2ff8010e9ee9fcbcf0222f958acec53074ad5ffe have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b77c597ac92e63bc43eab66eeaf2919d78a7cef4 have failed. See details.. :x:\u00a0Tests for the commit b77c597ac92e63bc43eab66eeaf2919d78a7cef4 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4acdf30c7a0ed0bdc974fc780d3232c344e6c5a7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b96ff94fafaf1707a5e96c4e92b2341474df840f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21ac8faf186b0d956e822bb23481ac99ff230499 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 21ac8faf186b0d956e822bb23481ac99ff230499 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 21ac8faf186b0d956e822bb23481ac99ff230499 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21ac8faf186b0d956e822bb23481ac99ff230499 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f14d3b3bfbcb13c3db458a141ec3699e40554ae9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f14d3b3bfbcb13c3db458a141ec3699e40554ae9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c2b20cb2d61a3b106ef0a39cb0c9f7d8314e59f4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c2b20cb2d61a3b106ef0a39cb0c9f7d8314e59f4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c2b20cb2d61a3b106ef0a39cb0c9f7d8314e59f4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fd55655aca34ee192b36a04ceaf8d7947a322844 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0cf5d2108697ba15e6fa171cec9f8228e1436c70 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0cf5d2108697ba15e6fa171cec9f8228e1436c70 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1c4190d15ccfb2f63648e35a67c94d583cb1a714 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 7f8096cf94a4e6037ad1941aa52feb1ae74a488f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7f8096cf94a4e6037ad1941aa52feb1ae74a488f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7f8096cf94a4e6037ad1941aa52feb1ae74a488f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7f8096cf94a4e6037ad1941aa52feb1ae74a488f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b55ba991f316580db442c5ea8c9e883cd3c0730e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2bc8b23a80eb57ff0ee04a20c356a95902ce9ac6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7308cd88f68c0fb1c3360f15494d491cda397e9b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 17b3c67d0316bfcee95977519d75d03c2d757abe have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe41feea736c1921dd1e013a92e2a968cf27a43a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cfae5dac4d8520a33f53eeca231d38c34a1a53ae have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d9ca271859e0df17aabfaff35576cb66d6f315bd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a246d72995ff176ce7f6f989ef5bc80eb8381ac3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a246d72995ff176ce7f6f989ef5bc80eb8381ac3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a246d72995ff176ce7f6f989ef5bc80eb8381ac3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit a246d72995ff176ce7f6f989ef5bc80eb8381ac3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7bd9a08aad280aef4e538751f544bd4768bd9cab have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7bd9a08aad280aef4e538751f544bd4768bd9cab have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7bd9a08aad280aef4e538751f544bd4768bd9cab have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4136a94f4f5d9bede4d21dee394a0390b3efdc8a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0dff55c9cf13fba409e838d51ad01580057c579b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0dff55c9cf13fba409e838d51ad01580057c579b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0dff55c9cf13fba409e838d51ad01580057c579b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abd0361d3fc015a1c005df6e310d4574159237e7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abd0361d3fc015a1c005df6e310d4574159237e7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abd0361d3fc015a1c005df6e310d4574159237e7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abd0361d3fc015a1c005df6e310d4574159237e7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abd0361d3fc015a1c005df6e310d4574159237e7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b09447013f5c1e9f58fa8d0a7df790d10607fead have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b09447013f5c1e9f58fa8d0a7df790d10607fead have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 18279800388d259bf22f197c2310b5c666e02965 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7186e62ea070d7e922e41f93977533c8f4a027c5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 7186e62ea070d7e922e41f93977533c8f4a027c5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 88a2cbd311faffeabcb4aaef0150f9e2c574b964 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 88a2cbd311faffeabcb4aaef0150f9e2c574b964 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5f5be316fce90d4eaecdd9fba6ea1d9acc9ef8af have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2bdfc4f4af0cf9a3b2154e1f24662c88af6179b2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2bdfc4f4af0cf9a3b2154e1f24662c88af6179b2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 20ee77ff9e20acfc90d265040568b51347283f7c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6b14992edd034f714caa3f4b5caa5f4e20c67269 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 13eb13e517602dddcd3afde6b5158b1b88845932 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 13eb13e517602dddcd3afde6b5158b1b88845932 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0f5b3ad8e93b76607025eb64692b13f5e1880fe4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d47a22c47335ec0ad9aa778fd4b09478c7b41813 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1c4c8ddfacb705070226b4689a9783bf05d2a5c2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit dc72750d710cc3179f3681dd848f4e03a0709a95 have passed. See details.. :x:\u00a0Tests for the commit 0118cd17e0a012920b15c93c7f3f12b4755c6331 have failed. See details.. :x:\u00a0Tests for the commit bb73c9b78a0fabcb9b976ad06fe138e004bd864a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 1458509dbc4c3cf37bca7f32d7533a9c212211a0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e89d007538e20888c04aaf23f86ff0f1c254330c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2f84503031e4c1d8e1d1148df9d208d1531dde00 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1f6b1859e23a247fcb8292a7a9b7ec2c6adb8309 have passed. See details.. :white_check_mark:\u00a0Tests for the commit bbe1b18196bf5a5f31c41c97225fb034dee223fd have passed. See details.. :white_check_mark:\u00a0Tests for the commit aa554faad5a4a08d2e29a9777adfdb4a46ecf6cb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 56221fc60305cc3dcb578e75ec8370b5f9045b78 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea36a7f0ce0a43e25672f76c7b313e884896f8cc have passed. See details.. :white_check_mark:\u00a0Tests for the commit ea36a7f0ce0a43e25672f76c7b313e884896f8cc have passed. See details.. :x:\u00a0Tests for the commit 0b66070d5978b28e1a5f2f6266556694ed321453 have failed. See details.. :x:\u00a0Tests for the commit 7dff4e525254b3a750e325323e80583eaa5e9754 have failed. See details.. :x:\u00a0Tests for the commit 90e7823cd903adc4cb5d152a86fff17eee638ca5 have failed. See details.. :x:\u00a0Tests for the commit 90e7823cd903adc4cb5d152a86fff17eee638ca5 have failed. See details.. :x:\u00a0Tests for the commit b40ff58415f8820b2883496a2a0ca0a21c899c9c have failed. See details.. :x:\u00a0Tests for the commit b40ff58415f8820b2883496a2a0ca0a21c899c9c have failed. See details.. :x:\u00a0Tests for the commit 4fb0c47e5c658aea3d54d874de7429d25beccf27 have failed. See details.. :x:\u00a0Tests for the commit bf3f3f7bfde11b800a0fe2bba3d1940d46bd6eac have failed. See details.. :x:\u00a0Tests for the commit 6efaa504abc1085cd2d825a76232101914456741 have failed. See details.. :x:\u00a0Tests for the commit 2c80769a0d23764b505c4c74cc1964091ecb8f11 have failed. See details.. :white_check_mark:\u00a0Tests for the commit cabbda8668ab6701701228c4f3976f638943787f have passed. See details.. :x:\u00a0Tests for the commit bc86a5bd991a6cd7943fbb17c5f49fdf38fdd556 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 2a7ad717cbfd5048b6d0a915cdabd6b290125651 have passed. See details.. :x:\u00a0Tests for the commit f5e6d874ca370860543d2ec7cb4bbf6988acd678 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f5e6d874ca370860543d2ec7cb4bbf6988acd678 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0815a35c809e8267e1db7f4701343cb7953c09a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0815a35c809e8267e1db7f4701343cb7953c09a3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7af496dfb025836a09337c238222285d453b2f02 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7af496dfb025836a09337c238222285d453b2f02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3d1871c4e0a741859c8d62e0bd87d7f38aa79798 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3d1871c4e0a741859c8d62e0bd87d7f38aa79798 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4d83bb1e5fc4ee31abf4aac487e8dfe93acdb501 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d99f95b916df6bf219ebca52ed955b49bd393095 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d99f95b916df6bf219ebca52ed955b49bd393095 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d99f95b916df6bf219ebca52ed955b49bd393095 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d99f95b916df6bf219ebca52ed955b49bd393095 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c44b9f902e7b65c6c8d5bcbf0bd47fb51f7a0230 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c44b9f902e7b65c6c8d5bcbf0bd47fb51f7a0230 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c44b9f902e7b65c6c8d5bcbf0bd47fb51f7a0230 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d1b01360199571db1fa6b479960c1d14a630f723 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d1b01360199571db1fa6b479960c1d14a630f723 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d1b01360199571db1fa6b479960c1d14a630f723 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d1b01360199571db1fa6b479960c1d14a630f723 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a2efe91a576a073c418faf4b57ae9d9802644bf2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a2efe91a576a073c418faf4b57ae9d9802644bf2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f0908895e91ba8b36fb59b2a8e2f40c4c757826b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f0908895e91ba8b36fb59b2a8e2f40c4c757826b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3e91a05fac204679854c79f921e1cfb42621eb96 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dfdd716b086ba2a64d284358e4952d4e9297e59c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit dfdd716b086ba2a64d284358e4952d4e9297e59c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8506ad45493888f10d10746c42e30798167b9fa6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit bbcd799805f21f2f403376d83da667a46c7a7598 have passed. See details.. :x:\u00a0Tests for the commit cfce1bfd07f073d5a9fa5cc827e7cef982f26800 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit cfce1bfd07f073d5a9fa5cc827e7cef982f26800 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2dda52dcdd3b629badc423fbb51c1208a200ed55 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8053e7bd26d9e18cb3fc11fcb5717af02322a4d6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8053e7bd26d9e18cb3fc11fcb5717af02322a4d6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8053e7bd26d9e18cb3fc11fcb5717af02322a4d6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ece8a76263b500ae3321d2281a2edf746ed5eff6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9186fd0b0b3e90aa6393f830248d1d2ee4bb8df2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 54e9f54a0ec4365354ddf9603bb2ac20cedfd30b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 54e9f54a0ec4365354ddf9603bb2ac20cedfd30b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d403d420923d5c8a2314ab23b481538e81d28748 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d403d420923d5c8a2314ab23b481538e81d28748 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e2271597012612138e4c842930ace287ef5f9630 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e2271597012612138e4c842930ace287ef5f9630 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 7ca3f0a093ded3da658696603796d2f5aef65bc8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1e8862551f1658e5253d00cb59f0b96f6b0cce4a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1e8862551f1658e5253d00cb59f0b96f6b0cce4a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 1e8862551f1658e5253d00cb59f0b96f6b0cce4a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b5b55304cd78df5782354e2da3eb4b48fee31267 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b5b55304cd78df5782354e2da3eb4b48fee31267 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 15c4c5c0c064b2f18e3129a1df961b7a4f330324 have failed. See details.. :x:\u00a0Tests for the commit d4a1d9c6ce1d1c583425a27e82bfd907b43b1c2c have failed. See details.. :x:\u00a0Tests for the commit 0725cbef78010974e2787d3c4e7081be1bdb3863 have failed. See details.. :x:\u00a0Tests for the commit 80db479a623d77a0bea062d5a7d180adda41c5f2 have failed. See details.. :x:\u00a0Tests for the commit d6d83cdc89035a058a4ae127c3e41792ac859f7e have failed. See details.. :x:\u00a0Tests for the commit 6e190fbf334e546b1c4e604a57091bc592d45834 have failed. See details.. :x:\u00a0Tests for the commit 235fde82c478635a64cf1d6d75ccc8700683d084 have failed. See details.. :x:\u00a0Tests for the commit d30db96e4dd7e17708c4ef98187a18879a1fbf7a have failed. See details.. :x:\u00a0Tests for the commit 5f331e42bcfa2445c940034e4befc58bb6bdf35f have failed. See details.. :x:\u00a0Tests for the commit fc60f6fd3885fadaf670dc38caa49b9e734c93d9 have failed. See details.. :x:\u00a0Tests for the commit d8764f311e7bbd311a04df4649af1af63f877d96 have failed. See details.. :x:\u00a0Tests for the commit e6bd4d97eed7167056614a81a1b928feef125204 have failed. See details.. :x:\u00a0Tests for the commit e39e2f80ea8fe1736ea251acdbf9b0baca5f282b have failed. See details.. :x:\u00a0Tests for the commit 5b697cfefc7396006045c4333c5f0a2fe6cec310 have failed. See details.. :x:\u00a0Tests for the commit cf7b0abb4a6cca774c4b6ca9b97cc9e43a18f0e5 have failed. See details.. :x:\u00a0Tests for the commit ed88ff48862d19c1d50b5c0fd488a26da52069cd have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0db07888346c16937ce31e1d66bc735eee0857d9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a35ed5f9e246730128132503c8ded3e05336c215 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit a35ed5f9e246730128132503c8ded3e05336c215 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ef7294c1f90f3eeadb8156a72501037998a917e8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4c1b8794de4c25b0a404b6d26045260150cfc16f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dd6a2de6fd7ad626aec67e781fd8245fa66573af have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2ab6cd59798820c71da2e9ae78ee53422e187854 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 961f46841f9f55f7e1e93b7994b89c8037c0de58 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 961f46841f9f55f7e1e93b7994b89c8037c0de58 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 242e16a70d287509e152651b7e6353db63e835e8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit df5a2dd80073f0ee0eb38deb4404b94d39289b68 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cbcf10606e7bf782f5c0e137e7610752755e91f0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit cbcf10606e7bf782f5c0e137e7610752755e91f0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cbcf10606e7bf782f5c0e137e7610752755e91f0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d4600e5bb8126c324527d8fcfb4ba9af4fdeba4d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d4600e5bb8126c324527d8fcfb4ba9af4fdeba4d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 284c0b07e322e47428b301cbba136f3881f8ad0a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b61665897c801d2d698a4634b4de50210b0918dc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit a42ee6df4d8104cd85d52adde38350982a0e06c2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 08a9934e414a55abe34900bfb31efb5ceb273bb9 have failed. See details.. :x:\u00a0Tests for the commit 08a9934e414a55abe34900bfb31efb5ceb273bb9 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 9697eba43ff846c90a429a86b88b9ed90face200 have passed. See details.. :white_check_mark:\u00a0Tests for the commit a1d5da25a79165bb468734bc36e0923f5e78b773 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 44ba52ad2a283f3cdc4202983afa7ccd1414b0c4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit af0837b55bbd04d8be694f01ab299156f360698a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1c923db726d94b9039994ffc6a5012348c375341 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 994a5e9ef58334e9753cc6b1a8bfd9a6b1995a12 have passed. See details.. :x:\u00a0Tests for the commit cf6aa86422b79e9e16c2efe6ba0142814104692d have failed. See details.. :white_check_mark:\u00a0Tests for the commit 593ab35f7948bfbd87e5f645eab13bf1432a4b6b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1ecc79ff60034fe6bdda4582b69aedaa48b39017 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ebed8ebc70e0720bf5c4c799fbea0f6df8478f0c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3714712495726a5c8b1c3485fac2174b2d9715e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3714712495726a5c8b1c3485fac2174b2d9715e3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3714712495726a5c8b1c3485fac2174b2d9715e3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3714712495726a5c8b1c3485fac2174b2d9715e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cde22d12d6cea6e99b4bc0de077da3af162e0573 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit cde22d12d6cea6e99b4bc0de077da3af162e0573 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 36e9ccae21649594b997cd61c89c073e1721ecfd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 51ccc0b1b65d068183093357d795ebe466bcdc1f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit abc3ca8393e087bd824b7b7d4ce6ccfae6ddc373 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ebf4451344f6f47ede31b5d7b07b3c651a5db635 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ebf4451344f6f47ede31b5d7b07b3c651a5db635 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d5002adee8ada0e049e3dc76782e4b1cdd54f96e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d5002adee8ada0e049e3dc76782e4b1cdd54f96e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ad0a6b3a65df5453a006365ef4814f28cf181d87 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ad0a6b3a65df5453a006365ef4814f28cf181d87 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ad0a6b3a65df5453a006365ef4814f28cf181d87 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ad0a6b3a65df5453a006365ef4814f28cf181d87 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c71681c58d05e52e8ea2917fce9f8be6306b4e49 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3d8d0eaead107e5e4d6f90792aaecf08d93118e1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 940c280d39c417cce2243ad7037ed0202f3306a8 have passed. See details.. :x:\u00a0Tests for the commit e0ade7f679ea1d95494114704521a2fbb9e4fb6b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c757dd4e6cd735971f29ec75dd983b9fe10838ac have failed. See details.. :white_check_mark:\u00a0Tests for the commit c757dd4e6cd735971f29ec75dd983b9fe10838ac have passed. See details.. :white_check_mark:\u00a0Tests for the commit eb0f71485162acdbaf79155f3ac17a46e2b35681 have passed. See details.. :x:\u00a0Tests for the commit 4b8a91aadedbcd30654da8f1ded73faadc398e10 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 808092c31ae05eff4ba2cc0b78aa4762dfea0fd0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1159c3570d0ffdda30a48b71bf0ab9e8aa001f83 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1159c3570d0ffdda30a48b71bf0ab9e8aa001f83 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 1159c3570d0ffdda30a48b71bf0ab9e8aa001f83 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d69d7b34274707372828fc5dcb460835eb2561d9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d69d7b34274707372828fc5dcb460835eb2561d9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d69d7b34274707372828fc5dcb460835eb2561d9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d69d7b34274707372828fc5dcb460835eb2561d9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d69d7b34274707372828fc5dcb460835eb2561d9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 19cab01714c04db729dea5682f944c81ba47b0be have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 19cab01714c04db729dea5682f944c81ba47b0be have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 19cab01714c04db729dea5682f944c81ba47b0be have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 19cab01714c04db729dea5682f944c81ba47b0be have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 19cab01714c04db729dea5682f944c81ba47b0be have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1426eccbeb169b9a765b93420c1875e5493107f9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 237b7cf1065c917c8f1ea26aef55575684dae8ed have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2860df84a4a324616f414fbc595e08fb14b0d8e9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0c427996961c432ec1a42e5d957e8077f44d6086 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0c427996961c432ec1a42e5d957e8077f44d6086 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0c427996961c432ec1a42e5d957e8077f44d6086 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e8c96a6798f099d40e57ab7948db32f5fffd1ca have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2e8c96a6798f099d40e57ab7948db32f5fffd1ca have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e8c96a6798f099d40e57ab7948db32f5fffd1ca have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2e8c96a6798f099d40e57ab7948db32f5fffd1ca have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00271d54dbcda88d045201ab75dc65b8e55130d8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 00271d54dbcda88d045201ab75dc65b8e55130d8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8ffd93198108f1fb19cb138cf3008187c313b244 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8ffd93198108f1fb19cb138cf3008187c313b244 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bad5bc3a71aef3914c49db6fd08a9963022f56a8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bad5bc3a71aef3914c49db6fd08a9963022f56a8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bad5bc3a71aef3914c49db6fd08a9963022f56a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bad5bc3a71aef3914c49db6fd08a9963022f56a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bad5bc3a71aef3914c49db6fd08a9963022f56a8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 153af0b5406227688596c21dca7a7094b73624d8 have passed. See details.. :x:\u00a0Tests for the commit 8e03b6e7ee6844fd02163ef5cb58f83fa8d618f1 have failed. See details.. :x:\u00a0Tests for the commit 2649811efd6f59e7b7a133dbf7fa43030f73869b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2649811efd6f59e7b7a133dbf7fa43030f73869b have passed. See details.. :white_check_mark:\u00a0Tests for the commit c79063f43b39af9bacd30eb339d7516feb061edc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit faaecde479c472bd0c3907457b5d1d114bbf092d have failed. See details.. :x:\u00a0Tests for the commit dcf2773d3f219051111af6002dbf3ef93f656142 have failed. See details.. :white_check_mark:\u00a0Tests for the commit e363124eb428dfdede60ebf8d74ee23a248bec22 have passed. See details.. :x:\u00a0Tests for the commit 7c4307ae50a588aead35281ea4c0cc60451b31bc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7c4307ae50a588aead35281ea4c0cc60451b31bc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7c4307ae50a588aead35281ea4c0cc60451b31bc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f15c88ee7ae5985f58e9202f78595553de6de958 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d55c192a8b45feb55f4b38a72239f8ea7f5492cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0e86aad6d5d9c974ebebd811b3b5d8ea3078b944 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dcbca52b573306110c8da5c0bb78b32e8bb17189 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ae0a956535ab439fdb96cfe1b820b7280ebaa177 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ae0a956535ab439fdb96cfe1b820b7280ebaa177 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 11aa66f7a96b4f7c770142b73093f12264d06c5a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 11aa66f7a96b4f7c770142b73093f12264d06c5a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5c709000b8b6a0e94742288defedb48678aa2bef have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 01a5addf348b15e09fa029ff2a6e1fd2c518059a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d85efd1db6eedf8844659af796a098f37ef629ef have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d85efd1db6eedf8844659af796a098f37ef629ef have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ace9fe3c9d87e3f8ffcc2c515de13563c691372f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ace9fe3c9d87e3f8ffcc2c515de13563c691372f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ace9fe3c9d87e3f8ffcc2c515de13563c691372f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ed811be7534f918887f44556cdd656a71940f6f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7ed811be7534f918887f44556cdd656a71940f6f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7ed811be7534f918887f44556cdd656a71940f6f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fd3fb895521782fdbb3d9a18facdf98059d22138 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2297dfee1fdeb34d0ba838f451fd5fd668c3ce0e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e85d59e65a8d6e39d80124454daf7a6dfef2ed82 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9193ceb757bc0dd36a27e4af8bc90d212dc6f55e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 422dda6dc03a5f9a365b9e5e2fb6a3ff3063902c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 422dda6dc03a5f9a365b9e5e2fb6a3ff3063902c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 422dda6dc03a5f9a365b9e5e2fb6a3ff3063902c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7c4b03a0c9cf7df58ca7ba3bd99dde93d307a4ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7c4b03a0c9cf7df58ca7ba3bd99dde93d307a4ce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e02b2569a1ffd220643467b9402a23c804070da have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0e02b2569a1ffd220643467b9402a23c804070da have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e02b2569a1ffd220643467b9402a23c804070da have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b3c9e42885def6767f34e50dc54a88b8e410417 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1b3c9e42885def6767f34e50dc54a88b8e410417 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 647fb4578a910ac37c07d8a6bd6baa40bc3373c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5aa6b164f083901ee1e17b89f3b4bb46ada1a52f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5aa6b164f083901ee1e17b89f3b4bb46ada1a52f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5aa6b164f083901ee1e17b89f3b4bb46ada1a52f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2bd2f3c2f842d2fda10d5cc58ce6212d1ecb8d59 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34637ea61a7517dbd0b74d211e0fb044dc2ef6df have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34637ea61a7517dbd0b74d211e0fb044dc2ef6df have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 34637ea61a7517dbd0b74d211e0fb044dc2ef6df have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit a264ac869b9faf1af750fefa7c45f2e51ab077bf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b316b8e323cacb9218c3c0447b5de492c3f55f77 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b316b8e323cacb9218c3c0447b5de492c3f55f77 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b316b8e323cacb9218c3c0447b5de492c3f55f77 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9aa4426b12f5df69d5bb12a319d540234b720bc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 13fbf920007090d210f40188b99c0f77f35899e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 13fbf920007090d210f40188b99c0f77f35899e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 13fbf920007090d210f40188b99c0f77f35899e5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit eafaf0ba1ef0a272b5dd4b0a143b3bba17d23572 have passed. See details.. :x:\u00a0Tests for the commit 4e878ea39266be102ae4b2d73fbec9743f738110 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7b4c8c1d94b3f2a6cb05d36a4ad8309dc2ba237a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit b92400017b05b0a0bb3d91faf74b7597b858e3c9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 72628b1f224b4c4cd40dc182d7147c5bcae3e477 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ef933c78bb34ead6ed55bce513259108933e30f8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f034e6655846a8e05b94f44192144aa2526ffb5d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f034e6655846a8e05b94f44192144aa2526ffb5d have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d6115fc065bb5cf5255e0bad700ae076066f8df8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d6115fc065bb5cf5255e0bad700ae076066f8df8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit d6115fc065bb5cf5255e0bad700ae076066f8df8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c8efed75e371da5ec4282653664d5c05d924cddf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8efed75e371da5ec4282653664d5c05d924cddf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8efed75e371da5ec4282653664d5c05d924cddf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8efed75e371da5ec4282653664d5c05d924cddf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c8efed75e371da5ec4282653664d5c05d924cddf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ced2d10ac988707308ef686182e8e33148fb65f3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f210c6fb25b018f5572a4cc21e769054f2b75d85 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d7a197201275b891cd8aae3a84909a02ee04fc85 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d7a197201275b891cd8aae3a84909a02ee04fc85 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4155a9b12020288bcc8fc9ce5e3b53211a7c95a0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c8544c3a8705b012e55d3687e6c168192df4f56 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e51e7559e9348a081c627bd08c124fa81571fb8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2e51e7559e9348a081c627bd08c124fa81571fb8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3bd58871aa41b1708ea65df74f5bd08133270d6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe7ef8637c8fd3948f690d4a5e0605a03b41e82a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe7ef8637c8fd3948f690d4a5e0605a03b41e82a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b4b50358890812ec9c1f15f6f991fc7aca581fdf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4415d7378ecb96f066459fef02ee5884e54dfb29 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 26450067dd1005bddf3fd0eeff046d6c50bbbd7e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e5a2b0f0fdebc02edae20d9da55c16233bfd0881 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e5a2b0f0fdebc02edae20d9da55c16233bfd0881 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6709c0291ad0f4eed90e360dbf73dd2c27c6df30 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 52a21c03a0c98377e35e752ea5a7d643a622c68e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7a8c98c5bc5749f9843924eceee527f9aa2fd06a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 746f4db594cf7a5a0a36d08435f4c513811cb06c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit df47ddd192094de730791e2f79dc55de604510cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e362994f3f737ec4170952a0d01fc95b945807a7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit e362994f3f737ec4170952a0d01fc95b945807a7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bb98c273bd23ef7234ffd051ccf015de4a0bc39 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 3bb98c273bd23ef7234ffd051ccf015de4a0bc39 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76f1f1367fca82934de44f982b9dcae0120c64d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 76f1f1367fca82934de44f982b9dcae0120c64d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76f1f1367fca82934de44f982b9dcae0120c64d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76f1f1367fca82934de44f982b9dcae0120c64d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76f1f1367fca82934de44f982b9dcae0120c64d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ea3e0b39d666c523d19637f04fb82a15a8069fac have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ea3e0b39d666c523d19637f04fb82a15a8069fac have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 10a0be85297cf8f85de84413f0e836737094e706 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 10a0be85297cf8f85de84413f0e836737094e706 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 10a0be85297cf8f85de84413f0e836737094e706 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 10a0be85297cf8f85de84413f0e836737094e706 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 356e8f0416cb65f16c9a455b296b61b58484f895 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 356e8f0416cb65f16c9a455b296b61b58484f895 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 300ab8eaa635894c25e4d39e378045c9946513fe have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 300ab8eaa635894c25e4d39e378045c9946513fe have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a2362e5dd8eb4fe9c4a256192e919ca024086179 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit de8aee1506d45a7f6fbd6b1d96616f5a6f3626d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit de8aee1506d45a7f6fbd6b1d96616f5a6f3626d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f9a69f2043ea36b1e0ef94b10fb7b3817c990776 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f9a69f2043ea36b1e0ef94b10fb7b3817c990776 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f9a69f2043ea36b1e0ef94b10fb7b3817c990776 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f9a69f2043ea36b1e0ef94b10fb7b3817c990776 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ce05b04b09b6d3e1674162cd7a2b9c6b034dc94e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ce05b04b09b6d3e1674162cd7a2b9c6b034dc94e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a833526370402e939855ce975943857e88cebbd1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2b78511e4bbb86c304feb86bd598d1139b99162c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2b78511e4bbb86c304feb86bd598d1139b99162c have passed. See details.. :x:\u00a0Tests for the commit d90eb3dfdf36a3878480c81c7c5846c8ca608c30 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e00b3dba92c7fd9a3ab01c50acc8f992c9b9c656 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e00b3dba92c7fd9a3ab01c50acc8f992c9b9c656 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bc6369b022a624852c686a84420830d1c618438 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1cd581de0ba847c4c3ffbb4964d32fb245498712 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 1cd581de0ba847c4c3ffbb4964d32fb245498712 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1cd581de0ba847c4c3ffbb4964d32fb245498712 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16f31e10691f1a7db3becf615d9c8ca497a47b21 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 046e2b789303760933f695a7d86144e72ea16504 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 046e2b789303760933f695a7d86144e72ea16504 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 046e2b789303760933f695a7d86144e72ea16504 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 696c07a892af713166f2c966e3efb11f414b9c74 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a35b5b42be74267f7887b0c1359022277fe0a70b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a35b5b42be74267f7887b0c1359022277fe0a70b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a35b5b42be74267f7887b0c1359022277fe0a70b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 72e78b1a47e4c2551f6d4ac3bbf8ab734385f733 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9fe24da89dadc9f76d027a91d3de3d9298ea26b0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 901d619c77677d806fc56ea10f6aeb373f433fd3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1fa9a8e7f0dffd90167702de5d33b02ea5b9fa80 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 512a17b1e060fefedcd8b179c4a0cb23bdb616ab have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 512a17b1e060fefedcd8b179c4a0cb23bdb616ab have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 512a17b1e060fefedcd8b179c4a0cb23bdb616ab have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc804c447ca961738030b83a5266d070a810fd32 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 90f1378166e61aa569063c7cc916147db0463c46 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53bd4f208b57614a3e10c2693a7969686697d2c2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53bd4f208b57614a3e10c2693a7969686697d2c2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53bd4f208b57614a3e10c2693a7969686697d2c2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 53bd4f208b57614a3e10c2693a7969686697d2c2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b56858e6f0528ae8c19c599be1b967400912c3b1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b56858e6f0528ae8c19c599be1b967400912c3b1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b56858e6f0528ae8c19c599be1b967400912c3b1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 07214dabc2b89202d0e2d50bf6ed6a6d9b3c8019 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 44e5e5d3371081519e7dd8408c98ec2bd4b3c2c2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 44e5e5d3371081519e7dd8408c98ec2bd4b3c2c2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 44e5e5d3371081519e7dd8408c98ec2bd4b3c2c2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5559072db18f4842006f4da1b0d36994d40eb985 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d48526860f35afe63ad275ee690b9db280db1fa1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dd43dd0b7957032359ea8eba56a93864ac37cba8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dd43dd0b7957032359ea8eba56a93864ac37cba8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b4eb68f6cbad4d1e8255cbe2bc7f0bc7f8238ccf have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b4eb68f6cbad4d1e8255cbe2bc7f0bc7f8238ccf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 238cec17781fdb7b861e8b1bbf18013a6361c4e5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 525581e98bfa2362162dfd06dc3a678cb65eb69f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 525581e98bfa2362162dfd06dc3a678cb65eb69f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8385e7f84fef917abfdbe29a28ccb6b4934519a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4e0a79b2ea94fec75ce2d6c34cc05d8eb22535d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f4f0ccffa7f4461cfc3452198709a82ee503d38e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f4f0ccffa7f4461cfc3452198709a82ee503d38e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18ace98a409072ca5b487ccc8ae19f8f3187e6a9 have failed. See details.. :x:\u00a0Tests for the commit b0a3b67ebaca8d954718c401affa70978443e972 have failed. See details.. :white_check_mark:\u00a0Tests for the commit bfe7c520c770f8d73746e3eda2e0fe5d47d7dc20 have passed. See details.. :x:\u00a0Tests for the commit d12e57af9d9c721a198c8af93936ffd6da239eda have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d12e57af9d9c721a198c8af93936ffd6da239eda have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 711742c586aeabb0012fb07d90217eb5b5751c0f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ae2d3e4974b17817470efe856ccfff847abd828f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ae2d3e4974b17817470efe856ccfff847abd828f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0034549e7565d487cce0f293a5786294a2154a17 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4719f9bc6a8af7da9c607951b002b918e8105da9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4719f9bc6a8af7da9c607951b002b918e8105da9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4719f9bc6a8af7da9c607951b002b918e8105da9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4719f9bc6a8af7da9c607951b002b918e8105da9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1a93c017b755c098b366fd21d47624d57ee4452a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 6924235bd4b2e0ce7b2c1af766b294b9cb1192a7 have passed. See details.. :x:\u00a0Tests for the commit bf7fbd13f870f4e99da677620dd33bba75f1e705 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2c5cced15dd75cff7d6a433b5534e0cef620e43d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 19ab20585dd46cf79456f6755e1e3b604b846a7e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 19ab20585dd46cf79456f6755e1e3b604b846a7e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9ce816a55d4c11ac1b913bd35e9afa066f299dbb have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0cf4db7b2f27db44b67d1eb01e65849415336d31 have passed. See details.. :white_check_mark:\u00a0Tests for the commit feb161dc2b1ffcddb2385c01feac1a6b9dd992bb have passed. See details.. :white_check_mark:\u00a0Tests for the commit b6d17d1255b8614c5271e3cfa62e0a7613e49d40 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4b01990b27efd600103086541b238217d3da5984 have passed. See details.. :x:\u00a0Tests for the commit 4c2c41b9e7549cfbe4d90820e4d3605705790b18 have failed. See details.. :white_check_mark:\u00a0Tests for the commit e2a29ba42577f42a79d94776ef82321a11a10699 have passed. See details.. :x:\u00a0Tests for the commit aa5d8df1fbc833889647f43297d0c8a3770c03b3 have failed. See details.. :white_check_mark:\u00a0Tests for the commit aa5d8df1fbc833889647f43297d0c8a3770c03b3 have passed. See details.. :x:\u00a0Tests for the commit d6f6594130f458fb68a14faa6ba320a7c8ff574e have failed. See details.. :white_check_mark:\u00a0Tests for the commit d6f6594130f458fb68a14faa6ba320a7c8ff574e have passed. See details.. :x:\u00a0Tests for the commit d0709390c47e2e1379aca479ce3db584d36ca54c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ca897f9cf10100a64fa96a55383579e3ca212668 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 82f24314a0a5f77089ae285c99c7e6de107ef360 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 82f24314a0a5f77089ae285c99c7e6de107ef360 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24027c8aff20ecedb14c8e0699e7724f3d5dc39d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24027c8aff20ecedb14c8e0699e7724f3d5dc39d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24027c8aff20ecedb14c8e0699e7724f3d5dc39d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24027c8aff20ecedb14c8e0699e7724f3d5dc39d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24027c8aff20ecedb14c8e0699e7724f3d5dc39d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dd1be2cb4efd1100402d8e941b3b0efb51cff31e have failed. See details.. :white_check_mark:\u00a0Tests for the commit 7e10ddcac6fb6804a337d11feb19afefef044aea have passed. See details.. :x:\u00a0Tests for the commit b2aba2ea627281add3036db1225e3a3e49b9454b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c58f2270c745a8009aa7a18e27f3e60c24024c3c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 078d1cba7b8349b75a3af336fc8c8861e170578e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b5755a1479411b9487dc666af4369e331a67de6a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 93752bfeb3ad9b45e27f9e831207870a09287779 have passed. See details.. :x:\u00a0Tests for the commit 07f24f1ba135ff3c432977b20c1b920183df58fa have failed. See details.. :white_check_mark:\u00a0Tests for the commit 07f24f1ba135ff3c432977b20c1b920183df58fa have passed. See details.. :x:\u00a0Tests for the commit 30329902e985b3d8b6fac7ba345488d18410f082 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 175d4dafd86b96cdffa47e7a0caac53ca8f2a63f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 175d4dafd86b96cdffa47e7a0caac53ca8f2a63f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 175d4dafd86b96cdffa47e7a0caac53ca8f2a63f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 175d4dafd86b96cdffa47e7a0caac53ca8f2a63f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 175d4dafd86b96cdffa47e7a0caac53ca8f2a63f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 831fa31439b06f5bf8bf608f6273b53fdba567dd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 831fa31439b06f5bf8bf608f6273b53fdba567dd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e800581cf0876b158c28214865707e3fce4d5cfd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 37e9f98839cc1abdd78b61a348025d20a96a8367 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 37e9f98839cc1abdd78b61a348025d20a96a8367 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b116e032af2641244676079f39177da8fdc8519 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9b116e032af2641244676079f39177da8fdc8519 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b4c877a9abc15972a9323dce614c71e46de635c1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 436c1338d751d4bb563ef7e6ce7f73257266969d have passed. See details.. :white_check_mark:\u00a0Tests for the commit cfd253a7e64442da0d6a65e259366f4ea798cda3 have passed. See details.. :x:\u00a0Tests for the commit e6f1c7caca783392315a2f9c6c55f5c8bfb38730 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 627a0474dc48080f38d5f63464d5ddca984b2e03 have passed. See details.. :x:\u00a0Tests for the commit c6cced8ac08c11749a072a77a501c04388435687 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e1d610ada6c4d2644640cf2d2c0ed792429d42c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f6949329ef980933a13166ff205b145c2b135acb have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 268af9c786a491a67bc4ba1ab9a9f54369757455 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 268af9c786a491a67bc4ba1ab9a9f54369757455 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 581184543ed92a2b36bf29a7ad8b8ebf4a86dfe5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0a7908269778438bf912bc1384f4c6bc6e131698 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f64668604e83a008204368a7b3a5b4e9b61a1ce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0f64668604e83a008204368a7b3a5b4e9b61a1ce have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3e01b078da0b4e223b8cff2b983745b34ee4b87 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a3e01b078da0b4e223b8cff2b983745b34ee4b87 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 67db499c117d8462028c57d5a3a27cf21c02b4d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 67db499c117d8462028c57d5a3a27cf21c02b4d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 67db499c117d8462028c57d5a3a27cf21c02b4d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 915a559740cc0e9ed727fb6fa36b20e49276577b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 826cbf75913bc27bca2019128ee079b45145b68a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 826cbf75913bc27bca2019128ee079b45145b68a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b6f484fe160f4f72d34058201d22146bd1201bd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b6f484fe160f4f72d34058201d22146bd1201bd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0b6f484fe160f4f72d34058201d22146bd1201bd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 31c3f12a28a11fbc5ec5bdfa71bdec55893cb771 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b3eaef9002bb915f2944e315cfd5cb9c38a7641e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b3eaef9002bb915f2944e315cfd5cb9c38a7641e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 68ef907ad9555b954887440609af98ebf2cee2b8 have passed. See details.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0eec9c1a8a42c8d6cfbca04a767b15018c81825b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fba73913565f104ddc2b8b1c6478ab2f2e12701b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fba73913565f104ddc2b8b1c6478ab2f2e12701b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fba73913565f104ddc2b8b1c6478ab2f2e12701b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f51e925ecaae2448345457433a8873e0ef2a7d09 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ac0a3371b9317d21d1fa87f7203d0d2abcbdac6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ac0a3371b9317d21d1fa87f7203d0d2abcbdac6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ac0a3371b9317d21d1fa87f7203d0d2abcbdac6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3ac0a3371b9317d21d1fa87f7203d0d2abcbdac6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 07ab649e814e37077b07750b9299b51c72fe367a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b81b46015cfd62a0a4a10637a01d6fc8036f6d36 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b2c98753cd5b033994567221e647796b2ecf2a3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b2c98753cd5b033994567221e647796b2ecf2a3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b2c98753cd5b033994567221e647796b2ecf2a3e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit faaa00472e10c6c1fcc5d16eb123709a004504dd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d1021c2f5f29a5a41eadd90fb0c8bac329d6b474 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d1021c2f5f29a5a41eadd90fb0c8bac329d6b474 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21f7c9d245c7754bca459e9f3150a06935b1eac4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21f7c9d245c7754bca459e9f3150a06935b1eac4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21f7c9d245c7754bca459e9f3150a06935b1eac4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 21f7c9d245c7754bca459e9f3150a06935b1eac4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 451f43aa63ddd7c2d1f06508d8c4b070033c77c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 451f43aa63ddd7c2d1f06508d8c4b070033c77c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 451f43aa63ddd7c2d1f06508d8c4b070033c77c3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ffcafe2372783992e0c56fefa5cfee919d2bedfb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ffcafe2372783992e0c56fefa5cfee919d2bedfb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 27e84fdc74394cbecf382b78ca0c8575429421d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 27e84fdc74394cbecf382b78ca0c8575429421d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4088504baa27342c7c7a1bc82dadebdcd2d8ddce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4088504baa27342c7c7a1bc82dadebdcd2d8ddce have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fac4e7d49eb63a64675008faabb4742bf47af60d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fac4e7d49eb63a64675008faabb4742bf47af60d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef685569a301b97e982f58e9a751f5caf3919b63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef685569a301b97e982f58e9a751f5caf3919b63 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 190d3f90f64094a4b0493632760580a899ee922b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 190d3f90f64094a4b0493632760580a899ee922b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f09d5213a6b9f288a7f34b4c2edd76b23efb0fc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a5aef267c5d65dc974c195be44fe13670d1783e0 have passed. See details.. :x:\u00a0Tests for the commit 2f95a78d43e9184d6a7a2716a15c355e08847d8a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f95a78d43e9184d6a7a2716a15c355e08847d8a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0734fbf05d84b72f59bb4377696503ed831b6bf8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0734fbf05d84b72f59bb4377696503ed831b6bf8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit eb5200079534b665401b618298dbfa1e2ee14ac9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 99ea1b0e6311e985c3448579563a99a758d8d351 have passed. See details.. :x:\u00a0Tests for the commit fe3189fb076411de735841c5297dc709444b3651 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ca7400f8f6d3c079bb3a55c05425de1544e467fb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7eba5deff67248161cab53bcc5e1570b6259d22d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ea0fb59705fa44093a28d3789cc5a751cdba392e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cec7d4fe144d095f22dd4d659578f25aa2313882 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 980655c8a17af80cd858a8012940b3eb72484ded have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87d3983c997cd09b501f39044ee7b0922a32f741 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87d3983c997cd09b501f39044ee7b0922a32f741 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87d3983c997cd09b501f39044ee7b0922a32f741 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87d3983c997cd09b501f39044ee7b0922a32f741 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 156dd5852540ac21f2103aa0f692e669bc847bf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2b09623da7929165c0b24125497a2abd47d21dd6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 756ff75faa6c83116dda3039043e3be29205c849 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 756ff75faa6c83116dda3039043e3be29205c849 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 756ff75faa6c83116dda3039043e3be29205c849 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5ec31fc520557cb17887a1ed8ea0a361501430f7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5503f0b5833a5e8d1b17740242e2962da3e9b769 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 65122ed8267ff3ddfae75c7205d345d1b6898619 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 65122ed8267ff3ddfae75c7205d345d1b6898619 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 392061540445d5d073ccdf7f5cfb0bab7f86ae88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 392061540445d5d073ccdf7f5cfb0bab7f86ae88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 392061540445d5d073ccdf7f5cfb0bab7f86ae88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 392061540445d5d073ccdf7f5cfb0bab7f86ae88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 392061540445d5d073ccdf7f5cfb0bab7f86ae88 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ac6fdd59b9cf8e20b4ac37ded607a4750b4534a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ac6fdd59b9cf8e20b4ac37ded607a4750b4534a8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b9b545d96b9f6d8a40ec86dab2094c2a97bfdc68 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d7760fac680cf2fa812a2c1ef88e745ca062c754 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d7760fac680cf2fa812a2c1ef88e745ca062c754 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4528a2ad947fad4bfdfc695961eff1b256e1a4ec have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2f999416794f83811206f6e2d4105307ebbf55a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2f999416794f83811206f6e2d4105307ebbf55a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2f999416794f83811206f6e2d4105307ebbf55a8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2f999416794f83811206f6e2d4105307ebbf55a8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d985fce36406e6cb0b0a4e73cad5b7ce8b85f7c1 have failed. See details.. :white_check_mark:\u00a0Tests for the commit e5cad3d5b82b94e04ae8379cd7600838c9899099 have passed. See details.. :x:\u00a0Tests for the commit e15f2d881930cf7880b3e6c2a379682789284870 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8f8edd8ced7de6e77754295a0a3a6e3a85969c62 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8f8edd8ced7de6e77754295a0a3a6e3a85969c62 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8f8edd8ced7de6e77754295a0a3a6e3a85969c62 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e20a3b62645f965659001450a211361fb45071e3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 71aa491db94ad06b2360f250c8cc902063feae7c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3e5756f970abfe4af3e819cb535e936eca9bec33 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 54e421c575e512b5ac4188d2733ba38bb3592094 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 54e421c575e512b5ac4188d2733ba38bb3592094 have passed. See details.. :x:\u00a0Tests for the commit 7f7edaf21d529e516f04a56497dd689616b3a968 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dc36340c6c47f2c04079dab7b0559e963546a24f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 86bbdd430a6fc1884b7192a0154ff61ad958794e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4cef7abe7eaaa86df2ddeab3870c9443a881f29d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ab14d60a1a3ca19b71e8100d3a31c006357c29ee have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e131850a1503cf1ab338fe5f452de590bc93fae9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c1176546ec9fc0b826d816ee1a9611452be52b0b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c1176546ec9fc0b826d816ee1a9611452be52b0b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 60899dfeb19ce2dc516a4d8ebd89be48619f1197 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a548d8ba413a225b8326006375ddcb6f3a7847f2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9c73487112aaee50eed1b3b44b82fd0a569db76f have failed. See details.. :white_check_mark:\u00a0Tests for the commit 902c6b7b0f5c227797d72304a700669db63382b0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 05a0122d32c3af229f468afbdcbeadbba3a8d8fe have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1c546eb74be0d6018aaad018d69b865099a9ba8a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0a37292f4d31a5ce63fa4625e3b1566ed0a7aed7 have passed. See details.. :x:\u00a0Tests for the commit 164a1cedfd75a66f3798d4dc4b225689bf5b2926 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 164a1cedfd75a66f3798d4dc4b225689bf5b2926 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 164a1cedfd75a66f3798d4dc4b225689bf5b2926 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a0e28db6ccddda709d2d40b1223d1c77e7d67dbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a0e28db6ccddda709d2d40b1223d1c77e7d67dbf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 16d4a873951868ad2a0b7b304715f848bba31ad9 have passed. See details.. :x:\u00a0Tests for the commit 96b34b53a825fd509613f85ac4bd64a4c9b853cc have failed. See details.. :white_check_mark:\u00a0Tests for the commit 33eca110982bb2fd3a12c7fcef6cb6d4e2e2c5c6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 71c87d461d69c761fa5ad88b054f6a9a678c4c48 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 421b32f2606446bccb552e56999f0890815519ef have passed. See details.. :white_check_mark:\u00a0Tests for the commit d87b8f3817cf2903f32cda78c6f74d4a928c699e have passed. See details.. :white_check_mark:\u00a0Tests for the commit e82d24a8abad8a913c9b26bc38c75900404fa582 have passed. See details.. :x:\u00a0Tests for the commit ac52b2fed513a814cba73eee940f01e2e8045b0a have failed. See details.. :x:\u00a0Tests for the commit 569ed4832e82d67428d3fca8b937ef0385520cbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 569ed4832e82d67428d3fca8b937ef0385520cbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 569ed4832e82d67428d3fca8b937ef0385520cbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 569ed4832e82d67428d3fca8b937ef0385520cbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 569ed4832e82d67428d3fca8b937ef0385520cbf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dd45f9c79d020d5de5a82cecbc962ceec9bd9874 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dd45f9c79d020d5de5a82cecbc962ceec9bd9874 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe0afe4c1f406d073a4bf092138fd63d511ae13b have failed. See details.. :white_check_mark:\u00a0Tests for the commit b8f9d28985a835ced3e1148a31073c946447ec70 have passed. See details.. :x:\u00a0Tests for the commit 21d80f88e48fb2eca79922c134866b149ca83671 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 21d80f88e48fb2eca79922c134866b149ca83671 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 21d80f88e48fb2eca79922c134866b149ca83671 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 29960f7f3b2fd269fe253e2e3775a7fec3eba51f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 29960f7f3b2fd269fe253e2e3775a7fec3eba51f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 29960f7f3b2fd269fe253e2e3775a7fec3eba51f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 75821c3024d253d731a295e9ae48f6df0e63f61d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 75821c3024d253d731a295e9ae48f6df0e63f61d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 10fed000c3184527f2910fd8c0a58531f0373563 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 422e6786cd3c62d4c706366bc929c4b213658ea5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0semaphoreci\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 422e6786cd3c62d4c706366bc929c4b213658ea5 have failed. See details:\n\n\n:x:\u00a0semaphoreci\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee0af9071e308b6d28b5237cfc17255ae2455f90 have failed. See details:\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0semaphoreci\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 25b33b58337811ab5ab9d664c4ee767ea08905d0 have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 25b33b58337811ab5ab9d664c4ee767ea08905d0 have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 8f6162e0f44ea8d309faad23610d56bd162b49eb have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0semaphoreci\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8f6162e0f44ea8d309faad23610d56bd162b49eb have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 6f43195453a2553f386dd115ba84a2cc662443ad have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit cbb2c2ac8f688da905277d6d0625b2946e3b6ddc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 652640f91e34a120459ee9fe3a9955b62560dfb6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0semaphoreci\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833.. :x:\u00a0Tests for the commit 1de8fb02ea3c97cf67c2b41854853c664043c3ad have failed. See details:\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0semaphoreci\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cafca589878a580de0a3d12008317db8be7830bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cafca589878a580de0a3d12008317db8be7830bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d0f72fa468f21fa56df7753c4decc69d9d957 have failed. See details:\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0e5d0f72fa468f21fa56df7753c4decc69d9d957 have failed. See details:\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d0f72fa468f21fa56df7753c4decc69d9d957 have failed. See details:\n\n\n:x:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 215fb3b625a011dbce346b97d0e1647a204a61cb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 215fb3b625a011dbce346b97d0e1647a204a61cb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0ci/gitlab/rp-203787833.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 073fb477749442e9f3ecf06dbe7494b39f334538 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b1c47b6f742ec0aba724b4c9283a686084675fe have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b1c47b6f742ec0aba724b4c9283a686084675fe have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9b1c47b6f742ec0aba724b4c9283a686084675fe have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 89c0c915589a1356922ac59213e275f930165091 have failed. See details:\n\n\n:white_check_mark:\u00a0ci/gitlab/rp-203787833\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 991cabf23f6f1218d5190c79c572333d336ba477 have passed. See details.. :x:\u00a0Tests for the commit 3d046c771929c6036e8d0908bbd3f1508b309c89 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3d046c771929c6036e8d0908bbd3f1508b309c89 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7ae42e6d369e61873699d9c89380b1bc6b84138b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0ba4f15a4ff8f622853f110eb38647f0dbb45a7b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 84de1a4c7b9057c09220c11d8a1c05fcc8dee6ec have passed. See details.. :x:\u00a0Tests for the commit bfa92a986082c507e1666b9d8824f2142a5f2a47 have failed. See details.. :x:\u00a0Tests for the commit e22437b762ca6527bcd9e3464971df9de5292880 have failed. See details.. :x:\u00a0Tests for the commit c10b31ac88cfa572997ef40b91c253a28057d200 have failed. See details.. :x:\u00a0Tests for the commit ad7ffd74c030203a457e52b983cbe99f1848df2c have failed. See details.. :x:\u00a0Tests for the commit 8581de9f58a2a4f4e453aec27bf438cd39e96b01 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 419bff4c9aee4db80e9f81047a3f9d137945d0b9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4da092b71a16a796fca914eb03a8b77bd99589a1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7e7ed7fddb3d5bb869a174c12741c029ffea4c64 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7e7ed7fddb3d5bb869a174c12741c029ffea4c64 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe3c06a081658662d22d8739cea1878a19cc3226 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe3c06a081658662d22d8739cea1878a19cc3226 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2585a0f956c00bed6f1b31115f040f418cf57548 have passed. See details.. :x:\u00a0Tests for the commit 1ba8a539427622b0213545a1a2edbfab3b631e5c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1ba8a539427622b0213545a1a2edbfab3b631e5c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1ba8a539427622b0213545a1a2edbfab3b631e5c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 011dfeb4de15ce06c80e4fec14b2ce9ca5e688f5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 011dfeb4de15ce06c80e4fec14b2ce9ca5e688f5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 011dfeb4de15ce06c80e4fec14b2ce9ca5e688f5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit aa51b1c8474ce1cfe7990e3bdb9430745916a386 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7d521c1bd51902059523463f46492d644a204b53 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 899cf5f2191a594fc77cdf5faedf4e09c8a9e823 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 899cf5f2191a594fc77cdf5faedf4e09c8a9e823 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 899cf5f2191a594fc77cdf5faedf4e09c8a9e823 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 899cf5f2191a594fc77cdf5faedf4e09c8a9e823 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d530c70757648adbd9229de27c04aea3b5a7e5a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d530c70757648adbd9229de27c04aea3b5a7e5a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d530c70757648adbd9229de27c04aea3b5a7e5a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8d530c70757648adbd9229de27c04aea3b5a7e5a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 358ab98d465d8d51787cef8011d398758934ff43 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 358ab98d465d8d51787cef8011d398758934ff43 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 358ab98d465d8d51787cef8011d398758934ff43 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 358ab98d465d8d51787cef8011d398758934ff43 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e30ae2eb56c92d8e33fd590763b14f46c73a9f8e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e30ae2eb56c92d8e33fd590763b14f46c73a9f8e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 008294a56e282f56652e29ba3b6e6ccf841352f5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 008294a56e282f56652e29ba3b6e6ccf841352f5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 008294a56e282f56652e29ba3b6e6ccf841352f5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f764faddae57d54883ca140ee42e4ff5ab1811b1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f764faddae57d54883ca140ee42e4ff5ab1811b1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8eb7d9ee58d6c93b781b8d032c3559cdf9fc9233 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8eb7d9ee58d6c93b781b8d032c3559cdf9fc9233 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8eb7d9ee58d6c93b781b8d032c3559cdf9fc9233 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 97243b80ca940f709daf52b6e875624ea6048701 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d3f106441bbddb9daa8bcb46a60c6c10272a606f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d3f106441bbddb9daa8bcb46a60c6c10272a606f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b7e4cd3dd120c0cf387c5d7d56f541bc4cfb2224 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b7e4cd3dd120c0cf387c5d7d56f541bc4cfb2224 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit b7e4cd3dd120c0cf387c5d7d56f541bc4cfb2224 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a8062717836c643e4c22c09ecdc134c4cf9cd4ae have passed. See details.. :white_check_mark:\u00a0Tests for the commit 80326cfc1271d37e2cc54cf2b9dad947ca23f434 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 58ba6ff95df17e6f5f43425d34c87311dbfebf4c have passed. See details.. :x:\u00a0Tests for the commit 76db4d21b0694d950ed75956e66e9940de24d42d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 76db4d21b0694d950ed75956e66e9940de24d42d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 52c7a8ecc4f86e343faacbbb302991d6ad496938 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 52c7a8ecc4f86e343faacbbb302991d6ad496938 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 52c7a8ecc4f86e343faacbbb302991d6ad496938 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e94bf123df84b5162c5580e6edbce14a3f65c313 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit e94bf123df84b5162c5580e6edbce14a3f65c313 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e94bf123df84b5162c5580e6edbce14a3f65c313 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e94bf123df84b5162c5580e6edbce14a3f65c313 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e94bf123df84b5162c5580e6edbce14a3f65c313 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 68dcd96cfcfcb833873cd4b91a0e8990de11b8c4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0e5d21a87306dcae98fc5aa0be6059692b94cf1a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3d83211b9b6f118d3774a31be19628df3649b386 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3d83211b9b6f118d3774a31be19628df3649b386 have passed. See details.. :x:\u00a0Tests for the commit 050bc17642b21f7498dabbbf0668da82ed1870d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 050bc17642b21f7498dabbbf0668da82ed1870d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eba21bb2c00ec2c052e41b652a0fa9bfc133492a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b845481a0ee0eb2ec1ace9448bfc8b4bdcc4f324 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ab1cc92533167463ab58a7c5b9a567a307267b6a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0semaphoreci.. :x:\u00a0Tests for the commit 6b6f1a93523bc12790509b34459efaf5fb7e9e6c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 647b0b8c789095ec3450503027b99c4857d2df30 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22a52e099ba9429b90d2b313b9b424f9e41b132b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 22a52e099ba9429b90d2b313b9b424f9e41b132b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 871c49ca82b4ec32b187274e59bce7d3ace60113 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 452559c48af2456019a7d1a2ff30a420f86903d3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ca2f603da9c0cb278dca2a7df9517d1c99202482 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ca2f603da9c0cb278dca2a7df9517d1c99202482 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c64d6354c083c711263bcb0bfd63a5b57a58bdc7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c6cdceed48df92236f691bbbeab50578f8b173a3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f7f7416f0f44f1d0bf08bcad10fab67222cc7552 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f7f7416f0f44f1d0bf08bcad10fab67222cc7552 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7e4589e62b22f8c10d6a52828abcef316a0af8d8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0079ff2238cd14a2fb436c4907681bf88209228b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f5ed27e512b56f1c23da4ab2b8cf43e95bd789e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4f5ed27e512b56f1c23da4ab2b8cf43e95bd789e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4f5ed27e512b56f1c23da4ab2b8cf43e95bd789e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4f5ed27e512b56f1c23da4ab2b8cf43e95bd789e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2a5014f11e8464f49dded44c54805fe13670f457 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2a5014f11e8464f49dded44c54805fe13670f457 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 91ee7e4d4291b3f4d3b279585f5e82c610826301 have failed. See details.. :x:\u00a0Tests for the commit 91ee7e4d4291b3f4d3b279585f5e82c610826301 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 71cb5be307a0a179ae171cbd6131857d661cfb0a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0e0873655fc83dd3b8111f62a5fe5c8e96d411c3 have passed. See details.. :x:\u00a0Tests for the commit ba4b4c37f8bdec649467524f027db43f360653e7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f0c8f55ffbf9a5d1d3bc74382657adf1ebbca279 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0de166463a3c1534762f9a15c066924fcba0a016 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0de166463a3c1534762f9a15c066924fcba0a016 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0de166463a3c1534762f9a15c066924fcba0a016 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cc8c95b505d9bd945f760cc927e0b71b4072a2f4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f50846c95e6f57dff6d5359ad026dabd9f892bfb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2e9f1aa45ebce76bd4353b3df8a16ca234c2aaa7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8cb252e9d4a32b23c02fecf16a8da6b2f2c88e5b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8cb252e9d4a32b23c02fecf16a8da6b2f2c88e5b have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8cb252e9d4a32b23c02fecf16a8da6b2f2c88e5b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b6cd2ea43e99cb2edde2d9f39175002f345f3ed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3b6cd2ea43e99cb2edde2d9f39175002f345f3ed have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4483f3ab90bafb461c98db05001aadcdfbae6df3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4483f3ab90bafb461c98db05001aadcdfbae6df3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9ba18d5dccbce53d4cfe6dace81e0bb44f3e89d9 have passed. See details.. :x:\u00a0Tests for the commit 9336d7f827808414ca7a357e0131db8dfed809c9 have failed. See details.. :x:\u00a0Tests for the commit 640ca08abc8127395c4246ad3795bd7b136f1007 have failed. See details.. :x:\u00a0Tests for the commit 2f5624ae3b83c526ccadbf01232130c9333c6fd8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 89128a8a133755c5d6fe2f86cf35a8819ca2f4dc have passed. See details.. :white_check_mark:\u00a0Tests for the commit a25cd630004091cb1dd5f85e67d9de776aa75b37 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 26a6e0b590eb59111bd4267c30f4c286ce0cb609 have passed. See details.. :x:\u00a0Tests for the commit f388f45de045a057f11ff78831631f9b8e3de7e0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fd8bccd8915904e680111c07cc605d7f097a2eae have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bfb3f2bfa56687f6b580473378440f60afbbc57e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 43e1f535e0c0033c1a3c473ffecb0241f937067a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 70b47786f76b549143c4c36a1e083fe713fec64b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 70b47786f76b549143c4c36a1e083fe713fec64b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 70b47786f76b549143c4c36a1e083fe713fec64b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 70b47786f76b549143c4c36a1e083fe713fec64b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 70b47786f76b549143c4c36a1e083fe713fec64b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1300a076a86e54227a765ce71eea3a0f2697c61a have failed. See details.. :x:\u00a0Tests for the commit 1300a076a86e54227a765ce71eea3a0f2697c61a have failed. See details.. :x:\u00a0Tests for the commit 8c5948e18f81b57d970ae38b0d923a7b99f88319 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c5948e18f81b57d970ae38b0d923a7b99f88319 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c5948e18f81b57d970ae38b0d923a7b99f88319 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c5948e18f81b57d970ae38b0d923a7b99f88319 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 23d5c2cce2c6952f35b5bfeb37cbfa0ed83ac958 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b92f18739180418c25a54beaa9d41575e1cc4e28 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 400305ee4eb593fb40918828210d9d593c6dab18 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a18e1d654fe8f3b4df3cf62f4a572d06acf4c64c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 95a21d580bb5fd0d6e4a6baa5d7613aab998f812 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 15231bee9b1323b69cbd203972e22fc150800033 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16b8770bb40e8e7f741b23931af990562017769b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 16b8770bb40e8e7f741b23931af990562017769b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb6d51341ea6c0700387f884bcd1bc265f542778 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bb6d51341ea6c0700387f884bcd1bc265f542778 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d88a2b0743e9e866e46be884e560dcabf12d2439 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 844c09a9a7900cab9af8d3aeffa53de8a44f2b3d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8eed5b5ae0c5f07d093414d8e9c6ef022cfe01b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8eed5b5ae0c5f07d093414d8e9c6ef022cfe01b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8eed5b5ae0c5f07d093414d8e9c6ef022cfe01b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b8eed5b5ae0c5f07d093414d8e9c6ef022cfe01b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b0416862fc8d523b91f1f36c4166f76f5bfd734 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3b0416862fc8d523b91f1f36c4166f76f5bfd734 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22085eea337d713dae9478341d2f63e897ea0dfc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f3d11ac051f1b7e3b4d95850603175ff89f32997 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8aa2b8dd27a9d1ed7cf3ee122b8c35e570d5bc92 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4d8d0d898149526b4c4f5a8110202f48a17ed578 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 874b8bfc50fcc4c3efe3a78530eab01d00e4a8a1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3cdb9e65b59bd586abf242bbb6c321850a8c469e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ad5e7f99adffa0dd5d54f88144cfd3226d3ad958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ad5e7f99adffa0dd5d54f88144cfd3226d3ad958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ad5e7f99adffa0dd5d54f88144cfd3226d3ad958 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f9eba94e334a17cf5d693c4ae929baebb31967ae have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f9eba94e334a17cf5d693c4ae929baebb31967ae have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f35d4c480c8f66163a0508605d4391719cbef4b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f35d4c480c8f66163a0508605d4391719cbef4b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b0811c4694b4685aee6003bcef7b56a21908757 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b0811c4694b4685aee6003bcef7b56a21908757 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 957fc67ea8f97e03cc43544535f3bb438387264b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87ea9a391d9e8082a5f55e18c1cabaeb05e6d28b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 87ea9a391d9e8082a5f55e18c1cabaeb05e6d28b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b88879f5ce451bd704a6ee5d2d3ecffaf893f44 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6b88879f5ce451bd704a6ee5d2d3ecffaf893f44 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f8a08a8572f6de6f843ab975508c9ef533823e7e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f8a08a8572f6de6f843ab975508c9ef533823e7e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f8a08a8572f6de6f843ab975508c9ef533823e7e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f8a08a8572f6de6f843ab975508c9ef533823e7e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4ba523f12d5486cfea219220d0f60c1f1d2ffdeb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4ba523f12d5486cfea219220d0f60c1f1d2ffdeb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4ba523f12d5486cfea219220d0f60c1f1d2ffdeb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4ba523f12d5486cfea219220d0f60c1f1d2ffdeb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ff510da4c44a56686a5d6e95ba8cf95b8a41348 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3ff510da4c44a56686a5d6e95ba8cf95b8a41348 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3ff510da4c44a56686a5d6e95ba8cf95b8a41348 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 420ca037aeac913aca13f3f4aa110ce8585a0e43 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 420ca037aeac913aca13f3f4aa110ce8585a0e43 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c5a3354aab0c98c049d85da8e83710b729b258d4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c5a3354aab0c98c049d85da8e83710b729b258d4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cbb711fdab2b35943d5e9c2af6d9a86945be72d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cbb711fdab2b35943d5e9c2af6d9a86945be72d7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bcabc093fcde0599b7f4ca20e816096e6c858db0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit af4910d446b88da7f84a3a1c98fbeb9a6d7d2cdd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit af4910d446b88da7f84a3a1c98fbeb9a6d7d2cdd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d182da6cc38b8c384e7159978be3747fff48578 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d182da6cc38b8c384e7159978be3747fff48578 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a8f85f0584049634a965762352e3121d0e5bfcab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a8f85f0584049634a965762352e3121d0e5bfcab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf4715397d2af1cb894c4bb4a2f12b109ba45304 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf4715397d2af1cb894c4bb4a2f12b109ba45304 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 49ce093d8779a09fd09de3fd8b5809fe0af461d9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 49ce093d8779a09fd09de3fd8b5809fe0af461d9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 79df39284a475d1d28ebbbbe4ccc6ff1fec3e02f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d7d9e812850c4a4dbaf84815ddd13a4d5ced4173 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5c34f2c80c949166a5efaa19dfa48a37b72d92e3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5c34f2c80c949166a5efaa19dfa48a37b72d92e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0ce99db08fc8f2e239122940a9487345d172d04f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0ce99db08fc8f2e239122940a9487345d172d04f have passed. See details.. :x:\u00a0Tests for the commit ef5c8b6d39cc3f5f69a74a8ba041a9b11be0f391 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef5c8b6d39cc3f5f69a74a8ba041a9b11be0f391 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7e8f42e97ca419564a1c067a6b7d669054e464e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 26beaa6e40f424c3a16cd4b2c81d68980f65ea69 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6456c3cb9de475a26bd33e27bcd3fa8e629e6e50 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6456c3cb9de475a26bd33e27bcd3fa8e629e6e50 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d0fa5c6139ed5b6845b03e1e4769147a29fb436a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7a47622d98c24a603a427e61e3999faad1acda45 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4709cc95d16d3d0f23e2dedb7790d694848c17ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dc9b01a400ebf6e2dc3be51c7c5d960ea8afdd0c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 98381c8d60c2e99b17220bbb15798018292a4d16 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 98381c8d60c2e99b17220bbb15798018292a4d16 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 42bd6131327f903f95ec2c891870443c065d9ad7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 31cd4a73181069f779c245f4870a1d10c8417c6f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 19b8e6f4bbc9f56915c12c8eeebb03539fe310ac have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1b25d45457f9a97af9ff537c3c842c082e70e133 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 29204e97ba9abe7a23692c211305f744cd48c69c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 661856bd447a98b1adca5fbcb19d709022b7f75d have passed. See details.. :white_check_mark:\u00a0Tests for the commit 636ed745bebae4bd9d60abf6dbda2b6360bd5bed have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3be84396e2e2f43123483f2a003d30a6575f2878 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3be84396e2e2f43123483f2a003d30a6575f2878 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 330e41bcebeba2f4e58d9470eba626b53c7b207b have passed. See details.. :x:\u00a0Tests for the commit 1b544a7543780aa7603ac500ee930b1f0c0c8c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b544a7543780aa7603ac500ee930b1f0c0c8c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b544a7543780aa7603ac500ee930b1f0c0c8c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b544a7543780aa7603ac500ee930b1f0c0c8c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b544a7543780aa7603ac500ee930b1f0c0c8c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7af9163b65f53d076f9a41070de8bad26620b270 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7af9163b65f53d076f9a41070de8bad26620b270 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7af9163b65f53d076f9a41070de8bad26620b270 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7af9163b65f53d076f9a41070de8bad26620b270 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7af9163b65f53d076f9a41070de8bad26620b270 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2a3cdd4eaeaf859dcc39aa76c6271d83d429ae4d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2a3cdd4eaeaf859dcc39aa76c6271d83d429ae4d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2a3cdd4eaeaf859dcc39aa76c6271d83d429ae4d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d0f92a8b31f01dee08d1e31455816518497d4179 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d0f92a8b31f01dee08d1e31455816518497d4179 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6d32b53c1402edb3c3aaa16ad7e414c63b8158b4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 15ba20238d6104408895b9265e2259f1b4e16ef4 have failed. See details.. :x:\u00a0Tests for the commit 15ba20238d6104408895b9265e2259f1b4e16ef4 have failed. See details.. :x:\u00a0Tests for the commit 2fbe3114142fc908f4e54e63edb1da8041cc7470 have failed. See details.. :x:\u00a0Tests for the commit 2fbe3114142fc908f4e54e63edb1da8041cc7470 have failed. See details.. :x:\u00a0Tests for the commit 0510bb43b3aa39947c6e98d82de7e16ce76f1b56 have failed. See details.. :x:\u00a0Tests for the commit 0510bb43b3aa39947c6e98d82de7e16ce76f1b56 have failed. See details.. :x:\u00a0Tests for the commit 063f99b757688a677ed9b1910ae2d296d6626407 have failed. See details.. :x:\u00a0Tests for the commit 063f99b757688a677ed9b1910ae2d296d6626407 have failed. See details.. :x:\u00a0Tests for the commit 0d6709778455454a6f117733dd5bf5830f54574e have failed. See details.. :x:\u00a0Tests for the commit 0d6709778455454a6f117733dd5bf5830f54574e have failed. See details.. :x:\u00a0Tests for the commit 0d6709778455454a6f117733dd5bf5830f54574e have failed. See details.. :x:\u00a0Tests for the commit b77800e6e4aacd5cca557f9a9ec5c872808564da have failed. See details.. :x:\u00a0Tests for the commit b77800e6e4aacd5cca557f9a9ec5c872808564da have failed. See details.. :x:\u00a0Tests for the commit 4a252b9d82d576d5e4b88be8aa5f4d9e4726568d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a252b9d82d576d5e4b88be8aa5f4d9e4726568d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a252b9d82d576d5e4b88be8aa5f4d9e4726568d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4a252b9d82d576d5e4b88be8aa5f4d9e4726568d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4a252b9d82d576d5e4b88be8aa5f4d9e4726568d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d46be2f58a1fa9239d92f0f221b8a024a370f088 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a80cae9fd798de82486e9bf04ae728a718c972d9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 749cdb00a22af9e0f04f2d483ab9d15c9413fa0a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8224bbb345a2e1a0498db6cd528188a0dbaa3231 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit aac4816eef0507130da3e7318354d78af6cc2eba have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d53355c7cdce987b79cda4dec60fb32e0bea7c70 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a4a89773eb62938c788b692975b8708a7c7c6bd6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fc5f08f287dea8d10970ae9f62aa2a3758043858 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a61ef197ca83f5f4e4361a0287ef68e1e447858 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit cb7fc458c1207df7ff1192b41eaa055013d4d469 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cb7fc458c1207df7ff1192b41eaa055013d4d469 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 302999c66ef97cfaa7bb51658162639fec7406d3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee611a88b047428b33b2e84dbbb51f4279abfc4c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ee611a88b047428b33b2e84dbbb51f4279abfc4c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ff5b098132460f0ab7857a255452837e04038cb8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 92549a8cd7c6fe05d891e91be2bb677fe652e597 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 92549a8cd7c6fe05d891e91be2bb677fe652e597 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dfd951d72c8c09632e78b8d946b5b36348de5996 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dfd951d72c8c09632e78b8d946b5b36348de5996 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 914fe329d50ec030dc3ea6533dfb582ec357061a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9b9917f48181f45cb1a5c4c8696ec9414927d2eb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9b9917f48181f45cb1a5c4c8696ec9414927d2eb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bc252b11022f1d8f75f1171aca8e34b3ad0df491 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00266d3b931d0bae1b8db74e523e8f21e83b930e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97a960f846452b6c7c3fa1370ae85d21ab03bed3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97a960f846452b6c7c3fa1370ae85d21ab03bed3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 97a960f846452b6c7c3fa1370ae85d21ab03bed3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 63029a7e1ab42f0f4db4f5a1454734e61c151598 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6807a358958e85e1ab10894995630b62103cbd26 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4560f7ec93d834e8f1af3c056dd59952fa00ec92 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4560f7ec93d834e8f1af3c056dd59952fa00ec92 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 01f64b87a4d6c3e41ac6f5f81319ce6d579b0ad4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6014daf011808269ee3dc1c2c7b7cde4119ed9a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 42dd8529716b78a591245786a7cc87844ab68d68 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 95f71cc6c97ae9112dbf6bbc8ae43171baee0b0a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 95f71cc6c97ae9112dbf6bbc8ae43171baee0b0a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3d3eb94e045114cc6657bda78668b7e64e5b90ef have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53377e3a95221012d95791adb51544114858f40b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 58e69ececd21e11d6cb150ec20e4d65f690fed8f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 58e69ececd21e11d6cb150ec20e4d65f690fed8f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 25a0faf8326f9e04c05ac9360409824b11b6d94f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9314dde8811a69dbe3ab573e0994ac26e0017a08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9314dde8811a69dbe3ab573e0994ac26e0017a08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6106b69e334a5ffa6c1127cd61ae438f6d3c5e32 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4eb0679e31b89dec9dc51a6004bbafb3bb1a9b24 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b9c3873d7f07e830ed330e85cbb96d11358e4574 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9690e1887db0eb690b42e6994abe826d5173619f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9690e1887db0eb690b42e6994abe826d5173619f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 558263282e820397cbedee4c77fdb447883cac36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 558263282e820397cbedee4c77fdb447883cac36 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0cc9a4a4531fecf3d17195f1995526c75012d1d3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a67d197a7976dfb605fa20cb260b12af3ccb8a5e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a67d197a7976dfb605fa20cb260b12af3ccb8a5e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a67d197a7976dfb605fa20cb260b12af3ccb8a5e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a67d197a7976dfb605fa20cb260b12af3ccb8a5e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fe26c868bb96106cdde0aa208387ba0e7945a8ca have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 74f3a059a847e21acb85f8659449ea491d479941 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a5ce7fdb21836536219cdce17f55c655e54bad01 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f15390cf0d9f9f33ba1b82c0787f4bb7c704f312 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f15390cf0d9f9f33ba1b82c0787f4bb7c704f312 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 39e7cf7d58e4158fa1db0e95dda3d253ecdcfbf7 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 39e7cf7d58e4158fa1db0e95dda3d253ecdcfbf7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1c70c9c1fd21839a7a6d96347081a4f38e7a4b86 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ef811e44492a699ecc323788c3827c8ad7f748a5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 93b48a322293dbc4428a76a70e05ac37c3c804c9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1cb58e252a77cf39e9db291a1179cfbf469e492e have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 400864b9300b372428a7a627ead5b52c6c5a6da3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 400864b9300b372428a7a627ead5b52c6c5a6da3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 400864b9300b372428a7a627ead5b52c6c5a6da3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 076e35b672e46dede5b496a71e2369713a1e7a48 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d3a12dcfdc9624c0703a59d00f7adcf61f731259 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a7a45c9db511c5cefd40ca7eb965827d163dfda3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a7a45c9db511c5cefd40ca7eb965827d163dfda3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2612bdd8a3e723d94f69bd97a74917eeec75a6ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2612bdd8a3e723d94f69bd97a74917eeec75a6ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2612bdd8a3e723d94f69bd97a74917eeec75a6ab have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97777dec2d542da1aaeb18179b9d25041b93d215 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 97777dec2d542da1aaeb18179b9d25041b93d215 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 97777dec2d542da1aaeb18179b9d25041b93d215 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5f2440638596fc28e83319f0593f0886ac47a72c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cb20ca4c342adca0def79a67f1794d56be3600ae have passed. See details.. :x:\u00a0Tests for the commit 13259971302907b8dab3457e034a8cbd5e5f885a have failed. See details.. :white_check_mark:\u00a0Tests for the commit 43743e0c8f0b1ff02168594338fa4a12bac5ba38 have passed. See details.. :x:\u00a0Tests for the commit faef1c296eb9d9c1cda35beb5ecd357a53a6a6cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 781624a67457555c2d574787ec2c4f0f0973f957 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 921897be26145b20843acfdb59c550fd53fdecd6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 491542bfc5460e68b583d0cb88d8ace56331041b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 491542bfc5460e68b583d0cb88d8ace56331041b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 491542bfc5460e68b583d0cb88d8ace56331041b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d19cad5aa9c8ab0167134cadcd850358f0d557b3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7c356984e8e1d9c4c63c7c1e4db587fecc1095f1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bf598e1800d84307a2aa29506f0fd6636397141c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb8f057bdf3d87eb69538e874bd088a5468d9893 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit bb8f057bdf3d87eb69538e874bd088a5468d9893 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9d5a397163530e4c08d27f3bf640dcdfc8878dbe have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 53a975a50cbb5946f1b1302ff56af23c4f29a8d2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc8f9139e63ca563568b0390fb729c825512d308 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc8f9139e63ca563568b0390fb729c825512d308 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d145e1dfe3d10b1d9bccf10ede9dd39fdd4975ef have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6716b22bed60a236c56bf67f4aa1abbb8e038273 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6716b22bed60a236c56bf67f4aa1abbb8e038273 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fa0713458bb5c7cb06572dbd5e43661d4aa0ed76 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fa0713458bb5c7cb06572dbd5e43661d4aa0ed76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fa0713458bb5c7cb06572dbd5e43661d4aa0ed76 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 22a0201e6f66740efe20e5c37002193f83904494 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e6f2b27a55c52095ea653084171811e6b543ffc5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e6f2b27a55c52095ea653084171811e6b543ffc5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2168854ca9aca91b01111e615fe6fb17fa6cde8d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6a2b53b4449dc97fd536d107faeffb56b1ae476f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f9afd8a69c7c9de386badf2afa639602a395cde have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5f9afd8a69c7c9de386badf2afa639602a395cde have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 97c7a2045090eafa57a06ddc7de4d7c5a9419349 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e22168620b8a2e485b4d1b3e6e2f7437861592ae have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 295e7dfd7d158b0571455886f2b80ec3c7ff9bbf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5afcbf23df48031baf17d80058332a64c8f188aa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 37c3061f16e9e520ffd415e6fce6f126c7a555da have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0cd1cdd14b085671233713b9196dcff6b3dec9cf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 0cd1cdd14b085671233713b9196dcff6b3dec9cf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0c278b0fdf12b90a76e668266c90e285561701b8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0c278b0fdf12b90a76e668266c90e285561701b8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8ae6ec4450534a39517b78c003de33b8436aa9d7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b0c5fbfac41de83d1f823a886e057079feb21ee9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b0c5fbfac41de83d1f823a886e057079feb21ee9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d6433e35ef06561af98dd97d04c5edfa065209e3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 36fecd09f3731ff5d1cf33cd762369d78567f36d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 655d237d96a1f6cff0dfe248899b8ccc4f95ef59 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 51d9435143fd5cae219ff5a9a3b1f51adb3b9347 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b276a7155cd6cd61868413b22d8f72077388a63a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8caaa11d4a0aa0f05cab9ee511cc020423a7884a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8caaa11d4a0aa0f05cab9ee511cc020423a7884a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf40269e6e5695591a9435f79f9fdb32dd046b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf40269e6e5695591a9435f79f9fdb32dd046b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf40269e6e5695591a9435f79f9fdb32dd046b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bbcf40269e6e5695591a9435f79f9fdb32dd046b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd95e6988dcc0d1c85ee542fbb68579b2c7741cc have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd95e6988dcc0d1c85ee542fbb68579b2c7741cc have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd95e6988dcc0d1c85ee542fbb68579b2c7741cc have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd95e6988dcc0d1c85ee542fbb68579b2c7741cc have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd95e6988dcc0d1c85ee542fbb68579b2c7741cc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 0d52239d0404e7c961e025895c9c626f2f6cbb02 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 3bf8840581a17cde721307658950e1456bdc2014 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3bf8840581a17cde721307658950e1456bdc2014 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3bf8840581a17cde721307658950e1456bdc2014 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 603aaf255318360e182c7ef7d7da4d41c68c64e4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd3ba00a10f85cca0414be899b3c7a915db6d76a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 7e3f14ccae8ff005590b10637f64014ae0f7c91c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f42ae04465feafa1b53946fe13ad6a618b799a39 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 692ceff7060a92a863c6553852819a4fdf15f9a5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5d3722b8930b9542a56322ad9eb500780af9b00b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 200197ea4184b90695668061c546d7baac25e253 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 200197ea4184b90695668061c546d7baac25e253 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4bb7b099927c166b21e265a8a687459bdab8ca0f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4bb7b099927c166b21e265a8a687459bdab8ca0f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 62430cf152b9dbdbe83180ae0ea38e27f61dc933 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 16ab9ca03054d4dd9d1bf9deacdfbe403da981f0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 4258fb8e0d2f730a0070d968dcdd2971b1017ce4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4258fb8e0d2f730a0070d968dcdd2971b1017ce4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 94f00180ae82acd46366458e15d2714eaac17320 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 94f00180ae82acd46366458e15d2714eaac17320 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 66371ea9eeafa526593bf897be0d501de7276467 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6dfecb0cbbdc90920838baf5f9df9ff1c338cef5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6dfecb0cbbdc90920838baf5f9df9ff1c338cef5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6dfecb0cbbdc90920838baf5f9df9ff1c338cef5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4b80f3d7233e4b6ec6be95319a7beea20ae56f67 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 036468756418341337fc40852e6291e8fe6b2697 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 036468756418341337fc40852e6291e8fe6b2697 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bfd59ea4fce3bf5053977bcb89f1d735c815a2e2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bfd59ea4fce3bf5053977bcb89f1d735c815a2e2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0a9398e2e4fc81464301c7eb4af0cf05ffcee0b9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3ee936305ed767b3731201d09dabbf5ecf917bf8 have passed. See details.. :x:\u00a0Tests for the commit dc1629b4b27bfea81b11069a7ae4109f20b5e1e6 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9d92114a981a687e7b7e529722cfec5c1ffbbfed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1a12a8154f4c46d29bbc952ac94f1e63c6188b28 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 704d9707c51a135800e1bb7c0068448e43906eaa have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 704d9707c51a135800e1bb7c0068448e43906eaa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 704d9707c51a135800e1bb7c0068448e43906eaa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fd71540ff5ef902b9b1571f8464e99aea0cdd29c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fd71540ff5ef902b9b1571f8464e99aea0cdd29c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 6f92483e79b2963dbf8db6927344f9ab565ade11 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6f92483e79b2963dbf8db6927344f9ab565ade11 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a85be94efae2ba4406b0c110a29168283496bbc4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c5e78a029212b3750a8ea251477d8d068437bedc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c5e78a029212b3750a8ea251477d8d068437bedc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4b779da6f31d6d6f2e4f26be7d3d870290d13357 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 971ac995e8db2fa352bdf37e53be39dab235684b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 971ac995e8db2fa352bdf37e53be39dab235684b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 971ac995e8db2fa352bdf37e53be39dab235684b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 971ac995e8db2fa352bdf37e53be39dab235684b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 971ac995e8db2fa352bdf37e53be39dab235684b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f611f0e3f56e4ba2cc4351f432fd7a9e6e689e4f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f611f0e3f56e4ba2cc4351f432fd7a9e6e689e4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit f611f0e3f56e4ba2cc4351f432fd7a9e6e689e4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ac14f37f1eda73331e1c0456a8562c493a5d3278 have failed. See details.. :x:\u00a0Tests for the commit ac14f37f1eda73331e1c0456a8562c493a5d3278 have failed. See details.. :white_check_mark:\u00a0Tests for the commit f873cc52d62054927280bd1fbe0b38ba87844fa3 have passed. See details.. :x:\u00a0Tests for the commit c3510b74dfa35b4668cca108d5c5dc6c19d3044c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c3510b74dfa35b4668cca108d5c5dc6c19d3044c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c3510b74dfa35b4668cca108d5c5dc6c19d3044c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c3510b74dfa35b4668cca108d5c5dc6c19d3044c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c3510b74dfa35b4668cca108d5c5dc6c19d3044c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0dc2adcca0a65ae711b4c04ce30907b5adea92cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0dc2adcca0a65ae711b4c04ce30907b5adea92cd have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c080b8ecb05dc0aa2e0b283d13a8e5fa47d5fad2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit baba3704226f70f1be9a5679a32e9f7b9fb9b8e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c5fe749b5878b32fb1f707796d22f7803c68f526 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5678bbc37b0e1a384340ae492b683ec91e2d635a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 319c76115bd65b83887029f8ee904df40a4a67f9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c4259609c47abbacd068b2d945bc479ca119631 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c4259609c47abbacd068b2d945bc479ca119631 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8c4259609c47abbacd068b2d945bc479ca119631 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ae72b1929f0cc5cc39112b962fa4c573064603ef have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 93fd46d5196ac8b58fad6b2327275253c6b58a35 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 9af5ce5a308d3f67797854194b8121cf32da762b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e78c4dd9f2204d4d1d1dd5d4b9a1e10cbf35e78 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e78c4dd9f2204d4d1d1dd5d4b9a1e10cbf35e78 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e78c4dd9f2204d4d1d1dd5d4b9a1e10cbf35e78 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5e78c4dd9f2204d4d1d1dd5d4b9a1e10cbf35e78 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 686d4c223c3bc2a6670d164852a9b4a0290419d3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 686d4c223c3bc2a6670d164852a9b4a0290419d3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 661e30dd6550a9a587cb99dd2ee0d351b1eac1bc have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 661e30dd6550a9a587cb99dd2ee0d351b1eac1bc have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 661e30dd6550a9a587cb99dd2ee0d351b1eac1bc have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 084b3728d0392ebf4069e36fdf564fced0ce8b9b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 084b3728d0392ebf4069e36fdf564fced0ce8b9b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 084b3728d0392ebf4069e36fdf564fced0ce8b9b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 084b3728d0392ebf4069e36fdf564fced0ce8b9b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit db22c0e6be58e9486c05a69c36ac49b08e0f1b1d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit db22c0e6be58e9486c05a69c36ac49b08e0f1b1d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 158c33bc71b395543f9e4f10e7d0b308e7d8c852 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 550e94ae32543bfa6d9418cc5d665dd9a59046e4 have failed. See details.. :x:\u00a0Tests for the commit 550e94ae32543bfa6d9418cc5d665dd9a59046e4 have failed. See details.. :x:\u00a0Tests for the commit 550e94ae32543bfa6d9418cc5d665dd9a59046e4 have failed. See details.. :x:\u00a0Tests for the commit 4d4f1ef76d2169648482f24b9414b95833da19d1 have failed. See details.. :x:\u00a0Tests for the commit 464375dd4ae2bd9592617a06c12d2c3933a048cc have failed. See details.. :x:\u00a0Tests for the commit 464375dd4ae2bd9592617a06c12d2c3933a048cc have failed. See details.. :white_check_mark:\u00a0Tests for the commit fd62183d8e2e9110194347daafdf9151a797dea9 have passed. See details.. :x:\u00a0Tests for the commit 4efa9553abda3f71e498b67d362bccfd62da1f08 have failed. See details.. :x:\u00a0Tests for the commit 2497b9b4b518bd5ebeeab5883e5de017800eb8f8 have failed. See details.. :x:\u00a0Tests for the commit 2497b9b4b518bd5ebeeab5883e5de017800eb8f8 have failed. See details.. :x:\u00a0Tests for the commit 2497b9b4b518bd5ebeeab5883e5de017800eb8f8 have failed. See details.. :x:\u00a0Tests for the commit 2497b9b4b518bd5ebeeab5883e5de017800eb8f8 have failed. See details.. :white_check_mark:\u00a0Tests for the commit cf0feaa8123a35fbc97b6525080957871f1f8e3c have passed. See details.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 76928e25110c8e9070b76ae467ec9b51bbc4eb7f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 588c0d2803d6663e9945b8f061783e9c0e0f621a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 45f9cdff0a58f473b31502d88f3961806b3be967 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 45f9cdff0a58f473b31502d88f3961806b3be967 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 63f72bd7b1846f12488c049cc23626d1ab0d399a have failed. See details.. :x:\u00a0Tests for the commit 42f89e38be8e7ddef947bbbd7379d41db4980372 have failed. See details.. :x:\u00a0Tests for the commit 7a36222b59c9f7e1d3ac81f3b808a150fadbd439 have failed. See details.. :x:\u00a0Tests for the commit 6f43fb47faaf99554adead566e58a60eaa719bbc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c1b1f47a173da04fae4c4ec05e54507f9123e098 have passed. See details.. :x:\u00a0Tests for the commit 8dff05e321b383e99c50183883d275dfc50e704b have failed. See details.. :x:\u00a0Tests for the commit 31ab1e6cad638f0a80397a463fce034958c5608d have failed. See details.. :x:\u00a0Tests for the commit dff2ac8accd10720dc8b91ed482cf9d6067e9f35 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 181de489e567b53505999f0858402c9681ff03c7 have passed. See details.. :x:\u00a0Tests for the commit cbd59f518528e320a94b22af93627c59f077b90c have failed. See details.. :white_check_mark:\u00a0Tests for the commit 83318b4ec85ae06c4ab5093e5193d0a223384c99 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6fd08f841b7e3d1ead20d01b6a67b3edb43c27ee have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 83fec09a0bfe931d8bbf075d4f7b141f1853f170 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 83fec09a0bfe931d8bbf075d4f7b141f1853f170 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cbb66cdc3b496607b62773e50c77f1f0c12fb0ce have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5c830130d005b7834821c1ea6e0f405e3bb21ffb have failed. See details.. :white_check_mark:\u00a0Tests for the commit f286ea1752d02dd66f8eed4587517c9154e5c29d have passed. See details.. :white_check_mark:\u00a0Tests for the commit aa06f870d36860df0abc7ded79010fc538db10c6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 8e33204c28157d6efca5274d0c89afacfab33a99 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c011ff7ec62c9a6f2cb7dda25689d0c53af7d616 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d944186320904e6d54bc2de0c8ee57d45d33d196 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 126b20f8b2cc9d420f36b994987228be93e468cd have passed. See details.. :x:\u00a0Tests for the commit 6888ec82fb8db99a26cfc48541f1141a2cb96721 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 295a665323b435f0c42eb37d65a969b8af53b0e2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9df80a5716b9f55441b258acca3b698f113ed897 have passed. See details.. :x:\u00a0Tests for the commit 8c578f1e58116fe98c5b684fa8c1bfd9c0b8dcee have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 98197de44c243dd3c9ecd9f17f9b8a7dcb20fe3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 98197de44c243dd3c9ecd9f17f9b8a7dcb20fe3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 98197de44c243dd3c9ecd9f17f9b8a7dcb20fe3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 98197de44c243dd3c9ecd9f17f9b8a7dcb20fe3e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5fe9b17ddd55152301526a4a7fe5d736144fe366 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 5fe9b17ddd55152301526a4a7fe5d736144fe366 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af8ee788d811455f74994c67f9c8f44792a76644 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4e1c5273784ee781409cfdc2cef1a57f2e526e56 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0165e588b0d22de8863f57c1bc3fccedcee4a59c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0165e588b0d22de8863f57c1bc3fccedcee4a59c have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8c68e4e3a957e96c7d4295ecb66781e4529d80e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 8c68e4e3a957e96c7d4295ecb66781e4529d80e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 8c68e4e3a957e96c7d4295ecb66781e4529d80e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 8c68e4e3a957e96c7d4295ecb66781e4529d80e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 8c68e4e3a957e96c7d4295ecb66781e4529d80e5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4735c0dba14a7c49c1ef6a09ddf4fe2c5a901484 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3f6f6d245b80f8495251f626d611ae78d7943437 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6414a8a0400ecd0e8581ec736d71eeb59f35ac65 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fdb680485b9d4fe9867bbcc21ea73ebb311053d5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7be6092591eeb08b1c909ff373770428da67c668 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7be6092591eeb08b1c909ff373770428da67c668 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7be6092591eeb08b1c909ff373770428da67c668 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d647a2ab840199e63f4e41cd7c05a23e62b8e1d6 have passed. See details.. :x:\u00a0Tests for the commit d2bff6c1f4176d1ca1e9899211e989a16392ef01 have failed. See details.. :white_check_mark:\u00a0Tests for the commit d2bff6c1f4176d1ca1e9899211e989a16392ef01 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9433b58be2ba055f1bf0ac6c851629b2aa33d34c have passed. See details.. :white_check_mark:\u00a0Tests for the commit 656e35242373346c0b2dac97c0081bdb45fa61f8 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 71844934f6437532ec160c10a0d8993c9272d2d4 have passed. See details.. :x:\u00a0Tests for the commit 936774d2862d4d710a121ace439150c0694e82bf have failed. See details.. :x:\u00a0Tests for the commit 936774d2862d4d710a121ace439150c0694e82bf have failed. See details.. :white_check_mark:\u00a0Tests for the commit 936774d2862d4d710a121ace439150c0694e82bf have passed. See details.. :x:\u00a0Tests for the commit 756232f4a5a7bc1c62f8b0328e6c39cd0b2c1125 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 756232f4a5a7bc1c62f8b0328e6c39cd0b2c1125 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 756232f4a5a7bc1c62f8b0328e6c39cd0b2c1125 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 756232f4a5a7bc1c62f8b0328e6c39cd0b2c1125 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 5e20dbc162d6d6de9061ea2b381244d39b3ee5af have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf3b8913f5b855b9984c7ab473ceb64813b4c077 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cf3b8913f5b855b9984c7ab473ceb64813b4c077 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0f1179def2a16f1fe96c338efa7ae00855283947 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d3ac2822b785f2f9a8990c22c986375a4e13545b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 2e01c279d0a0fc6f7650c2d2b3c538f365376425 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2e01c279d0a0fc6f7650c2d2b3c538f365376425 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bea866780873baffa5d20b1db9d6c929b8e2cff6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bea866780873baffa5d20b1db9d6c929b8e2cff6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bea866780873baffa5d20b1db9d6c929b8e2cff6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bda8d17d97fdd6edbf4e8f8c9359741542170a92 have passed. See details.. :x:\u00a0Tests for the commit af7b8544d34a787970419bdf42d2607fe66a90a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit af7b8544d34a787970419bdf42d2607fe66a90a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 295a13928e12a7309ba416faaa0fa8eeabf65ea7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 40206c641e83685902608e4f65e809a5764da594 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 40206c641e83685902608e4f65e809a5764da594 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit d537a0f9f40618d8df4ddd17fc6168f6c134acf8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 38ae357c85804048d5565b3065b61740da1cf697 have passed. See details.. :x:\u00a0Tests for the commit c4cd2c829eedc238987b32724547612da8610185 have failed. See details.. :white_check_mark:\u00a0Tests for the commit ed86a5fa355edfbd28eb06a0558731a41751da69 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 6e8ee642b00acf47bf07dd71c7ba6d4d633d00b5 have passed. See details.. :x:\u00a0Tests for the commit f9e55ab9c96562095cb805bdba531de3e64055da have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8862a20c4264a837718907f2b966550a50e5cec5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9213c2700e11658f138b70191464de4423b18e8e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 0b1e220b534a1c3e4a4585cfceae0bcb504c0768 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a40ad64595cbd2fb1c11f436eb39d3cc9962e1f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3a40ad64595cbd2fb1c11f436eb39d3cc9962e1f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c94b745d9e23d7782d2943d5bdd99d130821bec8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0testcafe-build-bot.testcafe\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit de905cfc4d356c11eec9c8ede3b2f0bdfdd33544 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0testcafe-build-bot.testcafe.. :white_check_mark:\u00a0Tests for the commit e71b5962af708cf61f2ca98239b7e434086b1d49 have passed. See details:\n\n\n:white_check_mark:\u00a0testcafe-build-bot.testcafe\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit eebd3e2bfdfcbf61e9decf12ccb178c9c5513d14 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0aefb22c7be956e4a578737f27752b7db2c8a69e have passed. See details.. :white_check_mark:\u00a0Tests for the commit e23c4b384d463b30cdabececa6e0d2482768c2ab have passed. See details.. :white_check_mark:\u00a0Tests for the commit e23c4b384d463b30cdabececa6e0d2482768c2ab have passed. See details.. :white_check_mark:\u00a0Tests for the commit e23c4b384d463b30cdabececa6e0d2482768c2ab have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9c0c1523726335091ebc907ebbb610922a06355f have passed. See details.. :white_check_mark:\u00a0Tests for the commit 61968b80112a5ed7363d9ebb0aea6d5a70441173 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 626aa469d5cae4354aae702eee4446cd7cc23c62 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 626aa469d5cae4354aae702eee4446cd7cc23c62 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 626aa469d5cae4354aae702eee4446cd7cc23c62 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7f5f9b0f146f6c67e206706e0e69e5ac6894e0e1 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e9f18faafe4ffc284e382fe1b93e0e95a8252e56 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2cb790ee07569a2e97ff0befbdb3e1f8bc794ddb have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2cb790ee07569a2e97ff0befbdb3e1f8bc794ddb have passed. See details.. :white_check_mark:\u00a0Tests for the commit e9da0ad387a7be504914a3f842c11bd3cabcb4ee have passed. See details.. :white_check_mark:\u00a0Tests for the commit 350ddb8cda679b3896fdc864531aa9761c057cc1 have passed. See details.. :x:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1c7b6d047c769a89fca56024f3a3da7845a5685d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78482e787c01995736483b2705772fe3e7d039c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 06c4df1a003f9b6e61bff7bf3744ee2ac40e11df have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit ac23a0562ef6918e49f82ca7fca63bb8a6b2a823 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ac23a0562ef6918e49f82ca7fca63bb8a6b2a823 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1b2347f42f969a4c49695a5ea432278430d968e6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1b2347f42f969a4c49695a5ea432278430d968e6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1b2347f42f969a4c49695a5ea432278430d968e6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1b2347f42f969a4c49695a5ea432278430d968e6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3dfb8acc31ed66bb508c8dc0ca5e18a4e54b8c71 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3dfb8acc31ed66bb508c8dc0ca5e18a4e54b8c71 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3dfb8acc31ed66bb508c8dc0ca5e18a4e54b8c71 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3dfb8acc31ed66bb508c8dc0ca5e18a4e54b8c71 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 130108c679fc00986bde18c5dba33e87ff548b78 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b70284017f1501bf1cf0cdbd40712942816599c7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b70284017f1501bf1cf0cdbd40712942816599c7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9bcc34620d3ffc87e676c925ab26914f91566955 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 7642a088db1fe32e48952bfa13a51986c28261c6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 051cb59c13525356370519322a2a40d4dbab5c6d have passed. See details.. :white_check_mark:\u00a0Tests for the commit fe1e64faa12948d79aae0999848ed8743c98580e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 65d2152271bc16c86c6edaa69ac14fa1c551c588 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 184b11868ce9f0ffc90be10c2ff70065cbc03c79 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 184b11868ce9f0ffc90be10c2ff70065cbc03c79 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3f011541b96fcb4479358db853581d3b39d71661 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3012739e12b3151103d5dde49e7c0cc6db7b3e69 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 64cbeb9001972b3b8d2926a038ecb6e96ed2b489 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 64cbeb9001972b3b8d2926a038ecb6e96ed2b489 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc5876f884f90370a76d1e3f885570b6f1d904ac have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7c705cef47a84a789ffa3bcd5358a6460df58531 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 80a73de21b3676dba8d3c8d0a122f0fab8945684 have passed. See details.. :x:\u00a0Tests for the commit ac71227f4fefd887f43dc3613ec3497251e16018 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ac71227f4fefd887f43dc3613ec3497251e16018 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f59cdcfc33366a09c12acd68b60614940bbd474a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dcddb81e6a72b432e74b809eb3d804baf68dc9b5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b2325d0958bd98d78a4384de76e54bb9be0be7e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3348936976ee610d23f2ab10a279a163b14ad589 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 431865c60ca9f3a16e96e73371660d04661f37a2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b4ec729bc8a9807e66726c9c1362fe38b2296b44 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 4e2c52d400faa7822193b406b923e7076c2fca28 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4e2c52d400faa7822193b406b923e7076c2fca28 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8e160cb79a41f49ba163dd93cfe92a8c416cbf26 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 004f4b4b74d66aba647c6ea9cb71dfc9b9545650 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 004f4b4b74d66aba647c6ea9cb71dfc9b9545650 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1a9cff96c9ad2e5206ecd6c340e99d208c5105ba have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1a9cff96c9ad2e5206ecd6c340e99d208c5105ba have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9fa92ac27c7db36dccb6abb132bc21d1f0c58dd9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3942e90ed561bccd87234e74bf8c4f4b8d24793c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3942e90ed561bccd87234e74bf8c4f4b8d24793c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3942e90ed561bccd87234e74bf8c4f4b8d24793c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3ffe2f8a4ec1388230508e944bb3044292c6a06f have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3ffe2f8a4ec1388230508e944bb3044292c6a06f have passed. See details.. :x:\u00a0Tests for the commit 865fb2d7a7da1ba07c890bba6dfb0b77697a38fe have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 865fb2d7a7da1ba07c890bba6dfb0b77697a38fe have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit d0e3f16ee3b98be025b6b78cbab6c443c9fbdfa1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2e30d67420efba09a22cbbe8fbbe891d12183a08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 2e30d67420efba09a22cbbe8fbbe891d12183a08 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2e30d67420efba09a22cbbe8fbbe891d12183a08 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 639dc03762b953fd4888446348e47f0ad47f39d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 639dc03762b953fd4888446348e47f0ad47f39d0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 48fd7225a627ed951ab2009c96b47b14872be9d4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3ab377ab23eb3b93c87847d9a996f384ee437659 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7b194170cd542b7c1f509e2d29056e89bd7abc52 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4891de9ca8daef381cfea64dda3d6e26666d4a87 have passed. See details.. :x:\u00a0Tests for the commit 4dfbd09a7ac51e002e3c91d4a2b105daeec4eaca have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4dfbd09a7ac51e002e3c91d4a2b105daeec4eaca have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d33b196e7e09a9f0f0d414cfc19480354ad9c27c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d33b196e7e09a9f0f0d414cfc19480354ad9c27c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d33b196e7e09a9f0f0d414cfc19480354ad9c27c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d33b196e7e09a9f0f0d414cfc19480354ad9c27c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d33b196e7e09a9f0f0d414cfc19480354ad9c27c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 082e20bce87413c8dcb89e25483f73bf2b77b8ce have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 233c2fedf24935af0ba67d31dd92ef7972c31623 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f5ada65017d92a53f519f4bb49b4d5c1c32884c9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c7ed457b1377728e50df1e584737d356c67519c3 have passed. See details.. :x:\u00a0Tests for the commit 1c7c58d1bece59d530dfb95b8c2c0c3b353767e2 have failed. See details.. :x:\u00a0Tests for the commit b4bd1dfa9bc90f1c1e2a4d6e0134d45a1335fe3d have failed. See details.. :white_check_mark:\u00a0Tests for the commit 4f645914df65bfb27e722fb86bc12507475f44c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf10b0648a00bfc9a9c0f2922b65ae7c2a05d0e7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 5056cf74d665dc79146c59e1c5394e0f6a860723 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5056cf74d665dc79146c59e1c5394e0f6a860723 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 87d956afdffe65fb8fc427826b3e8be090d8e8e3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d1b6154a878874362ae8bd7f2a8db554717b52c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6d1b6154a878874362ae8bd7f2a8db554717b52c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 410a294173ee78fab4375b53dfb959ce7189511a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 410a294173ee78fab4375b53dfb959ce7189511a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 410a294173ee78fab4375b53dfb959ce7189511a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 410a294173ee78fab4375b53dfb959ce7189511a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 39af8e239b8eaad567414391ddc75c1309e59288 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 64a9daa642b970e7b3ef2efb5f48978265a9b9c5 have passed. See details.. :white_check_mark:\u00a0Tests for the commit ff52759134a7f283aa3486e4e004a3f789538d7b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 14a02e8777fe8fd413f4f87274fdf974917368fd have passed. See details.. :x:\u00a0Tests for the commit 726fb6e6880ac9528c1216a244c9f4341e7aa32a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a0dae60d4971528d89c9088cb93bc9315a7cc0e9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dda4e2b2a6487c16c46347566f3e8a264ea5431b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dda4e2b2a6487c16c46347566f3e8a264ea5431b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit dda4e2b2a6487c16c46347566f3e8a264ea5431b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dda4e2b2a6487c16c46347566f3e8a264ea5431b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit dda4e2b2a6487c16c46347566f3e8a264ea5431b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8b529ca58773dc1f0ba5045788e587d8bb96c710 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 8b529ca58773dc1f0ba5045788e587d8bb96c710 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1d6d1f9929f5752d969c65c327be6897f6ad18cf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6fa9d07c84954b28b86faba04902edd868d129a9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6fa9d07c84954b28b86faba04902edd868d129a9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b5ccef0bd2391cb634e85da1dd1bf28173d6b56b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b5ccef0bd2391cb634e85da1dd1bf28173d6b56b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 306eb96d8b6e6a3c4cc49fe4060bc2d275dc107b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 145d14d1f54aba4f9c13bc19943885a951a0ada9 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 145d14d1f54aba4f9c13bc19943885a951a0ada9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 0ad9d5fa29c3221e7e40a256401b4e04ca2efb4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit c8d61dcbb6dccecc9d384026ac580d734b9e8aeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c8d61dcbb6dccecc9d384026ac580d734b9e8aeb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6aae8e291c395b524ce1eaff96fe85d02a02c41 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3fa98197672de4aad57edfff8c9f235a30164253 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3fa98197672de4aad57edfff8c9f235a30164253 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5095b018acbf9431573525ad3a520b69571cb1aa have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5095b018acbf9431573525ad3a520b69571cb1aa have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0b705290763743647f2a19e55c19231a4e90c0c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 0b705290763743647f2a19e55c19231a4e90c0c0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6030d9e752dab2d88730dced3b5886c84489be8b have failed. See details.. :x:\u00a0Tests for the commit 6030d9e752dab2d88730dced3b5886c84489be8b have failed. See details.. :white_check_mark:\u00a0Tests for the commit b86c416999b11347869d4bd01a4356886e566519 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b86c416999b11347869d4bd01a4356886e566519 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 5659f274c0a98e6550cdf915be5fbf8e17697a58 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5659f274c0a98e6550cdf915be5fbf8e17697a58 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 17f36a4946f2c1b7b9f58e8ad1e9e9446e7d7622 have failed. See details.. :x:\u00a0Tests for the commit 17f36a4946f2c1b7b9f58e8ad1e9e9446e7d7622 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 6782720efb94e5cdbfc13b08017679724ee92f4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6782720efb94e5cdbfc13b08017679724ee92f4f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 05c655f13fabdad7fdcda14a463cadc6276cd5ea have failed. See details.. :x:\u00a0Tests for the commit 05c655f13fabdad7fdcda14a463cadc6276cd5ea have failed. See details.. :white_check_mark:\u00a0Tests for the commit 00b0d3f4b7cf9e585b61cd8ada8be1c3aae3affe have passed. See details.. :white_check_mark:\u00a0Tests for the commit 00b0d3f4b7cf9e585b61cd8ada8be1c3aae3affe have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2e3ef80b64d5e56c2ee2574122448d2a3b06122a have passed. See details.. :x:\u00a0Tests for the commit cd11b4a19ed9b8ff7f57b70b0e312d4ced526719 have failed. See details.. :x:\u00a0Tests for the commit cd11b4a19ed9b8ff7f57b70b0e312d4ced526719 have failed. See details.. :white_check_mark:\u00a0Tests for the commit cd11b4a19ed9b8ff7f57b70b0e312d4ced526719 have passed. See details.. :white_check_mark:\u00a0Tests for the commit cd11b4a19ed9b8ff7f57b70b0e312d4ced526719 have passed. See details.. :x:\u00a0Tests for the commit bb3e329905bce6d5562d63efccc76e9d2d3b2eed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bb3e329905bce6d5562d63efccc76e9d2d3b2eed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23f3aa0e4013122dba9c48e96333fd6a1ee31686 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 23f3aa0e4013122dba9c48e96333fd6a1ee31686 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a0b46f6f56e4b5732b34b1c3a4e8f2913fd28ace have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit a0b46f6f56e4b5732b34b1c3a4e8f2913fd28ace have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit a0b46f6f56e4b5732b34b1c3a4e8f2913fd28ace have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a0b46f6f56e4b5732b34b1c3a4e8f2913fd28ace have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5e846eac0184f49b5167aa96c45042a1d241b522 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit ddf44323058f94db3300c755ff70cd59269b23a5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 55b531210628271fe053a5a7d35af10ef53f9561 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 357e48c2fa8dd5fc7f792377fac786f952924d84 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc9a869af47b929773f642c861839fe4b85a768c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bc9a869af47b929773f642c861839fe4b85a768c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5f2753174be6950882b41f69208f70575bc21d00 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c764c486b51d74e29aa44906dc8a36d322dbf9f9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 04436120a7bec4304cfedfae891f6437b13a1764 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 44fa88ac7b2a43117701fbf55171111f6ee557b7 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ac19f76d054a766d62060e024e4e871927d7b0f have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3ac19f76d054a766d62060e024e4e871927d7b0f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 81e4191970ede7256fccc9b75c597a2a4f79c1f1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c70f9f512239f4aeb0db8e0a8a169eb7a5ed949c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d66b15fa7e7b950aa23b81c6fcafb67dcf514aa have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8d66b15fa7e7b950aa23b81c6fcafb67dcf514aa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 2a52da33a13d7f2551a6fd5b575ba2e1fb6d47ed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 2a52da33a13d7f2551a6fd5b575ba2e1fb6d47ed have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 873f9e0d31a96977ad2842a1348884fe25cce709 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit a9cdfb48a939f44d445108432ab248a2bf0e9143 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9852442b986cabcdfad78d7c1e08ba15a31c8768 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0123540771d9ff626958fc33a4f3d7ebe96e4c5d have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 359550f1a366bda5eb3e84927f05ba25c30825da have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8983974a65e5073b48e1bac3d199d848036455a7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b0560d445eb1c70d294cbf52c82d247b6a9dc2d4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 48ef0146d67e16f569c4e50be9485fcb57069be7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 48ef0146d67e16f569c4e50be9485fcb57069be7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 48ef0146d67e16f569c4e50be9485fcb57069be7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6d6fbee07473c5e389844e045ef8ea221d56f361 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bec09cc24edcbc4388b106e9e5fb185191bf3610 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ec4751e64899c180a3c0f28c46ebb57ea6cd7e0c have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 34723b6a7ac823fa19ef2575a57631eb05e98f15 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7b1adce5a9dee1aeeb3cc9c6d7718569dff9941d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0192eebad3b602c08d752c150cab924143a339be have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit cc9706174e7acc022b0a8e3de4de47282c3df037 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d42504da9b2ca8df1f35c715fd921efb48505e2a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3711db2e650bb8719b376e3823d58227daa7ded1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 26765463cf401cd898aaba0a90c84d2f6ac559e3 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dca245bebc8014837bdaec785f834178049d591e have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3e43550bfb626e3cb83b7d7c7ee51956a74de6b4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit a0f190ed1b56e2ef0cfec4d44f6c1332ac788e36 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0391830af426e8882e60a3ee2bee0d99086e3f96 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a49fcc2a4a5886432295121430d70b5248554cb7 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 170eb96f3888909c8b8cbdc5693928a1806f7485 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 05c688f091b0a30525506a869870209534bc25c6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 05c688f091b0a30525506a869870209534bc25c6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 05c688f091b0a30525506a869870209534bc25c6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 16d6697d83b3892b5dbe785de40eba9cff4bb913 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7541013be037806e3762a06636083d2c2cadb424 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3a9d69cc6b1644c8323f8ab3f052908480026499 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1ffea37b512a5a532f152ff861d9d7415581e900 have passed. See details.. :white_check_mark:\u00a0Tests for the commit bc92a04e453d42ef79250b152b5610816fc9c0bb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2ee049c5624a36706afa72b71df5fde27c0258de have failed. See details.. :white_check_mark:\u00a0Tests for the commit 2ee049c5624a36706afa72b71df5fde27c0258de have passed. See details.. :white_check_mark:\u00a0Tests for the commit 86c81086ae0e89fd37093c0a97c882b491a6a850 have passed. See details.. :x:\u00a0Tests for the commit d28e55ad88a445de9f900a4c857edf13d77f1380 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 29bf8e94dc40a316325e3afc5a51533f7d54cbb0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 29bf8e94dc40a316325e3afc5a51533f7d54cbb0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7c0763744004573da3f947fc6afb1f54eda23289 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 93a4c01ef1ece2d1e37c06cc215839f78a7d1b1c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 64d68fcd3cccab1c17aa7a1010552ceda21796c1 have passed. See details.. :x:\u00a0Tests for the commit 065fca49de79408dd1abc97522f773c87e3d37a1 have failed. See details.. :x:\u00a0Tests for the commit 9261463d23b2d94482a6ac6142ca42a2012dca52 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 9261463d23b2d94482a6ac6142ca42a2012dca52 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 346a9e769df36bfc019e74aca291ae1035205d4f have passed. See details.. :x:\u00a0Tests for the commit 18ccba7fa848ecf5ad74b1671d5d3ba8de5ee081 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18ccba7fa848ecf5ad74b1671d5d3ba8de5ee081 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 45d53e043974b032213323bc3749c6864159507b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 45d53e043974b032213323bc3749c6864159507b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 81c236ce06d2e74c1f0dadd7b28ac2d824d57a42 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d488eddf8e3bf01e84bbc670d4f7da96688090b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e165f473385d6ebc87a8a55929d8368a9debfb8e have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e165f473385d6ebc87a8a55929d8368a9debfb8e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 10777e853913993b9dfaad5c52f0813a1046ac3b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4e2bc3fede776361bd1c09697739698cc743baa0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4abe16ca99bb20f5e261c5d0321bd172b4e56e3d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4e91444df1042e1e21b80cf3aefc6800a1da583d have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4e91444df1042e1e21b80cf3aefc6800a1da583d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 4e91444df1042e1e21b80cf3aefc6800a1da583d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit b737be934b219ff2fd8cd70cbb31b8b389dec0c9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f30ab305019b842df1ba27641798a67c9960033f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 828a69d26edccb1125f1cbbbf983a9e9e42ec018 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 241ea9d89f139fe97702d7821f772bc8c5c1d9c0 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 241ea9d89f139fe97702d7821f772bc8c5c1d9c0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 7e4a74898fbd68799203af87aa83370ac7e7863f have passed. See details.. :white_check_mark:\u00a0Tests for the commit f1dc8271261ce031a269528ef6509417b5422a36 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 7859cbba3156d804a83f2e142503c6e246590913 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ed752829fffb00cc942ffc04e85d27de63d72505 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6822fe6027335b540a394303f59b8739aff3de87 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 808738daf256717c14e5ba909f85c7d9cc71e0d0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 808738daf256717c14e5ba909f85c7d9cc71e0d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 808738daf256717c14e5ba909f85c7d9cc71e0d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 18df95e79cdc9fa0958dc62c9eadc755f81e8be4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18df95e79cdc9fa0958dc62c9eadc755f81e8be4 have failed. See details.. :x:\u00a0Tests for the commit 18df95e79cdc9fa0958dc62c9eadc755f81e8be4 have failed. See details.. :x:\u00a0Tests for the commit 18df95e79cdc9fa0958dc62c9eadc755f81e8be4 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 18df95e79cdc9fa0958dc62c9eadc755f81e8be4 have passed. See details.. :x:\u00a0Tests for the commit 0f31b4b5c1528ba793c06b120bf825e369416ef0 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0f31b4b5c1528ba793c06b120bf825e369416ef0 have passed. See details.. :x:\u00a0Tests for the commit c1b386f29ee04646932afd9ca96d87aca8eb183b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3289d278f5b602f4e8b44adbae4983fc4e26d330 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 76236c4db77ebeebda1baf92d2232e826fc9fc58 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 3e661b345459f72d15e69f80bea4c192469c8eab have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 275b29cfbb7f820805e724cdf9bde8c7f6a7331b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4da3470dbdbbf3f3370c8f1b24df31fd4bd44ad6 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f5c686e845d790bcd67852d96070a4f20d1b3969 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c6b90a8bbe7467eaa6f98f6a26166ddd546cf780 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit c6b90a8bbe7467eaa6f98f6a26166ddd546cf780 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 27507e5e8f888b7b3f620ab1b234d324fcb35307 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 9a8046c658b12b6fbf9e7b9513e3eaefe6a51d03 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ac21c60ef96f77f93a3d7fd64894c95819d01665 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8273e9fc4c03f2e7d73bc9dadeda4957880a914b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 671f59bb4bb55bec636523d2d68367fb3243adf1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 671f59bb4bb55bec636523d2d68367fb3243adf1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 14da91c835346ba3938146524f2d06278720d3c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 14da91c835346ba3938146524f2d06278720d3c0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 597ccab0162a091127d280b398d9e244d09e4c8a have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 11a0543ebd075eb62822b89052d7588299a2698d have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cc15889eda6cc0f8ec6da270597edd46074a7569 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 52882e05542b13ccaadbc0c77f83aa7015e89ee1 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 52882e05542b13ccaadbc0c77f83aa7015e89ee1 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 52882e05542b13ccaadbc0c77f83aa7015e89ee1 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 52882e05542b13ccaadbc0c77f83aa7015e89ee1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 52882e05542b13ccaadbc0c77f83aa7015e89ee1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 0ecaa1784ddb411083ce10e3fc651f59c62a2033 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0ecaa1784ddb411083ce10e3fc651f59c62a2033 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 4421be4e15c2bc67f41907a8e345f98c34237200 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 66e444434e3def8d927e19f26f135a26a88e85db have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 30f279e506a878dda55a06d0a33d9e7a01a9a42d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ead29bce44d97ded7a6fadd799c7ee83cb06af21 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit cf046157578930b669331d3065c22ad9372b7dbc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f7dc7ab34413a6d3afb055e6c727a1dfc8f0387a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1266389abb7061abc94c99fcc782a9e65c26e2a3 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1266389abb7061abc94c99fcc782a9e65c26e2a3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6ef609ada0f2746e742971938102bc94c941eb82 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit c753954d6ec5848a196306d2b466451182f6d6de have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit c753954d6ec5848a196306d2b466451182f6d6de have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 15e30d67dd2a3c04de93b52e81c6f5cb9d2e938e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 069a9ac45e07e453b367ced5132d84baccc83f57 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d525cf6f8c190f1912a9cd8f401834e7e25d7a47 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4256c2282cfd19e9de37f0e9aa6595bf75e99b5a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e0e4f9cd39b4ae882f50124a421d4c8aa817ea9d have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e0e4f9cd39b4ae882f50124a421d4c8aa817ea9d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit e0e4f9cd39b4ae882f50124a421d4c8aa817ea9d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit e0e4f9cd39b4ae882f50124a421d4c8aa817ea9d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit fc09fc9f7fae936666d8311481bbbaf987e80f65 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit fc09fc9f7fae936666d8311481bbbaf987e80f65 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 33de88810ca49be9e7ea292030cf96c17e44ae04 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b347c88abfc71f6308f7d1597d9da968ad211f54 have passed. See details.. :x:\u00a0Tests for the commit b347c88abfc71f6308f7d1597d9da968ad211f54 have failed. See details.. :white_check_mark:\u00a0Tests for the commit b347c88abfc71f6308f7d1597d9da968ad211f54 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 27cef6a06775f50ed55b6a0cd3e82ca9ce5c1e14 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit dc09fb4fb1ac458817257c9934eb3c4ce43fdb97 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3be36104732cef1ab945243c5b6b3e1c676b3224 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3be36104732cef1ab945243c5b6b3e1c676b3224 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3be36104732cef1ab945243c5b6b3e1c676b3224 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 549c8a2448a3e62f256a0f137e5943a1a96b0cc9 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 022e9f5cde69ab6e253bb1a65fb37b721d5ea10a have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 022e9f5cde69ab6e253bb1a65fb37b721d5ea10a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6afecb9031661f63a877fe74cf30860c24b37da0 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d621e27be2e31eeaadea5ce22b8945d92180aebb have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d621e27be2e31eeaadea5ce22b8945d92180aebb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d621e27be2e31eeaadea5ce22b8945d92180aebb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 9062596944a529eb89684df4ea6f1f20b1164804 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 78a77d3b13c8d63bdd98958be95fa92b7ded4f3c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78a77d3b13c8d63bdd98958be95fa92b7ded4f3c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 78a77d3b13c8d63bdd98958be95fa92b7ded4f3c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 78a77d3b13c8d63bdd98958be95fa92b7ded4f3c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6120273bf87437633fcb13cd37105a9192b988ad have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 25f480ddac2d9ecd12c2c4259847f73c2aeab8bb have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 69ea662fa4e9453675913cda1c379ed8c87ceb73 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8a8bd138bc1e82fdacc76895f599ffc93e964c64 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 60cdb5b9643cf7fdc3572cc48e8c14cbf5592374 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a283ef7dd2061c970017bee25fca4d8516f1d5e0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit dcd1ec652c3dd20d0aa90ab5d9ad723e3b14ea7e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 99e83f2333085c76a613ee85142b4720e64f6dec have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 67453ae2e2027224093dd93df3fc6c8b2e98c235 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 67453ae2e2027224093dd93df3fc6c8b2e98c235 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit ff7796c59a0149f6e7cccfa7b671fe1743f231ed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit ff7796c59a0149f6e7cccfa7b671fe1743f231ed have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit f8c7d70670fd9a7121b3b37917d0d0b2afcd95ab have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 6861a3fbbff0afb0f75325d1008d446b86c7c3ca have passed. See details.. :white_check_mark:\u00a0Tests for the commit d432162c3ede4e5bb6955ff5d4a00b1bce389614 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit d19f15501adf1bac5345726b4e781200ca45ecc9 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 8083caac87917647c8dedc9165fe55d2cdca6f5c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5e3b6a7f968f35e8965b0b1433f9db55104d0463 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit ca29777275a93ca74c1f7c47deb3c12b531e6945 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf9b546e3b7117ea32398dc6f5bf6eba7a464536 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit cf9b546e3b7117ea32398dc6f5bf6eba7a464536 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit cf9b546e3b7117ea32398dc6f5bf6eba7a464536 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 37b9c2a0fd3da02137689813ecf203c4ca2de1b0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 68be7a0d3e3217b57aaee3ca51414e9d2f5d6d09 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit ea0f517eba07269c280ede36d805e32ce27d94a2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3953af3df4673b7a5096769cdd056475ed5f07f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 3953af3df4673b7a5096769cdd056475ed5f07f3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fd1fd5a1210fac499d7a6ba60d27e53a13b36506 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fd1fd5a1210fac499d7a6ba60d27e53a13b36506 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fd1fd5a1210fac499d7a6ba60d27e53a13b36506 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit fd1fd5a1210fac499d7a6ba60d27e53a13b36506 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fd1fd5a1210fac499d7a6ba60d27e53a13b36506 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 7866642b31b4f06c980a08ee7e50145c77f33244 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 7866642b31b4f06c980a08ee7e50145c77f33244 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 1e7e0dcaf616e7eb81eefc8a77d85b57620be72b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5399823798cfd893bb37408422a499c9bda49f9a have passed. See details.. :x:\u00a0Tests for the commit 2c50ffdd7b34af46d55fd6e819359e8338d6441c have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 2c50ffdd7b34af46d55fd6e819359e8338d6441c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 2c50ffdd7b34af46d55fd6e819359e8338d6441c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 2b6ae3afd08a79b869d3e95e60260387771fa545 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f8e5dd8eee794169ab7a6ec821d3e92533692574 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit d7338050ddb5f4460762b4b4ce0eabbe3ec82d09 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8bc5a3fbdfbaf9f882526b4291042d326558fc14 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 8bc5a3fbdfbaf9f882526b4291042d326558fc14 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit c3fd1b36598369e87ee9864c6e74173a4f2193f5 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bf980c71549ca815880be07c1ff8f6baeb3f0796 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eeedcbc02b2757468cf246454e9c7c20fcac6821 have passed. See details.. :white_check_mark:\u00a0Tests for the commit eeedcbc02b2757468cf246454e9c7c20fcac6821 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d914aa4c16458ca5c036502f98cb45241f3dfc07 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 0764cf8c5364b4fbc2ddf568f53b74204ab6c7ce have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00d3fbea692c74154f32cfc7274d7818beb3cebb have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c5df032560d0b6ad8a7a5e027549b584cb80ec67 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f9b59d65aca41b79a5af4ec48dbad07d49a8f638 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit f9b59d65aca41b79a5af4ec48dbad07d49a8f638 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8676144ebc6d99b7e74c5f66a4d3031adbb717e6 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bd10ec6709c87be0c5667ebd0eb07d2cc21df693 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit bd10ec6709c87be0c5667ebd0eb07d2cc21df693 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 876fbdd7834d29302bbb253050d32ef9f4f82c93 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 876fbdd7834d29302bbb253050d32ef9f4f82c93 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ab26febfc785b0ca0971fb9fea5604789fe90185 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4de7432773293fa82c9daaf649403e1e8387beaf have passed. See details.. :white_check_mark:\u00a0Tests for the commit 306534d17bdc2ba3027ded2b5b21a7f3c97c1de9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 08fa4d6925db28c06d889e97a439afea56c8bb70 have passed. See details.. :x:\u00a0Tests for the commit 2ec384ec6e1e8971f64decf7599a94bd32d389b0 have failed. See details.. :white_check_mark:\u00a0Tests for the commit be2bfff50e4ce389d74fca2082748ded145f3d59 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 42c048e35a36c8494c2b55105dd1afcbf159e15d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c759402f73db9ad7610ac3d3646fa30fa78f75dd have failed. See details.. :white_check_mark:\u00a0Tests for the commit d685a62b6c7d2e3e7ab4f6e27ed02719e1af5c2b have passed. See details.. :white_check_mark:\u00a0Tests for the commit 10f963ff49f42c0e82e721f4017c375bd02ebbb0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c8c8d7405a8f6e2017b18095345a8e767e56754c have passed. See details.. :white_check_mark:\u00a0Tests for the commit b228c03823b7f2437b121acdbbac0d6ec892e96f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1480b1ac57408a3171ce33512d7ce93dac9eb45d have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 32f890bd29cc0c05200a583c917041bef0e2d0bd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 32f890bd29cc0c05200a583c917041bef0e2d0bd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b35c6425c5cefe7440305d30cacc3bfe0ab4ed92 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b38e311db0132c2677f40aa7d366108acb66c4eb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b38e311db0132c2677f40aa7d366108acb66c4eb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit b38e311db0132c2677f40aa7d366108acb66c4eb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 858a63c543186e2e7ba782231fc9f99d1fac2bf8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 5facbfbee3340028b7e9409d8d6ded59f37613cb have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 16fe4cddfe4a21a6e7decfcea10f9810041a55bd have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 16fe4cddfe4a21a6e7decfcea10f9810041a55bd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 9730327d8541b657ed06ea534a2e47b43d493d3f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0b6847c82ac65787f991e2f0af54485b2a040cc6 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0b6847c82ac65787f991e2f0af54485b2a040cc6 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 0b6847c82ac65787f991e2f0af54485b2a040cc6 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b681f19572fde4732283a5da0f8a21b184c270d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1b681f19572fde4732283a5da0f8a21b184c270d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit df55b12df15761b543672198ae78dd97dcdd508f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 661d8a9683436e7b716b45a6d01f39986c7e38e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 661d8a9683436e7b716b45a6d01f39986c7e38e4 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit ac2eb746ce71a81856b6ca176fc89fa1611fb2e4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit ac2eb746ce71a81856b6ca176fc89fa1611fb2e4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1996fbc83e1e91f6d4b6b245a7123c87b9bc0017 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1996fbc83e1e91f6d4b6b245a7123c87b9bc0017 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 957fb39d27f0b00430ef8380288c531a853aad21 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 957fb39d27f0b00430ef8380288c531a853aad21 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit ae6d6eedce709108a4a36f5ff714254d03cc9016 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit ae6d6eedce709108a4a36f5ff714254d03cc9016 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 26926eba16d2d140d18e111bbd03f18bc4af2b0e have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 68661c023a9efeb4d5fb70c9c0f381299fe4db8a have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 68661c023a9efeb4d5fb70c9c0f381299fe4db8a have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 90e85d4563da36824f71dae1362ad30cfee060e2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 90e85d4563da36824f71dae1362ad30cfee060e2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8efb22c052fc0de2494d57e3a9769e7faba64cf4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8efb22c052fc0de2494d57e3a9769e7faba64cf4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8efb22c052fc0de2494d57e3a9769e7faba64cf4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 8efb22c052fc0de2494d57e3a9769e7faba64cf4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit bf6394b4263792c998f3956bf16319501b76a4c1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 24f1327e6595ec857477ef77f08ad99ffeb013e1 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 739be115f04ae64cdeb6a8e50f8c2b922908f1ab have failed. See details.. :x:\u00a0Tests for the commit d5e333a8bf348b4fb6da51782ed3299fd7613947 have failed. See details.. :white_check_mark:\u00a0Tests for the commit a1390e6787f5f114cefccb78028b96a3ad92d2e2 have passed. See details.. :x:\u00a0Tests for the commit 3defb0f57db2526c8a4ac0c4f7ff4d3d97899a9a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3defb0f57db2526c8a4ac0c4f7ff4d3d97899a9a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 3defb0f57db2526c8a4ac0c4f7ff4d3d97899a9a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 532c396769405f774ca6646b89cd03c59bf4e33b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 532c396769405f774ca6646b89cd03c59bf4e33b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 532c396769405f774ca6646b89cd03c59bf4e33b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 532c396769405f774ca6646b89cd03c59bf4e33b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 532c396769405f774ca6646b89cd03c59bf4e33b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 353da483996589498e1f292d60c38e9183b22084 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 86491def27d8578dd39ca3f4e78644138612c2bf have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 86491def27d8578dd39ca3f4e78644138612c2bf have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 86491def27d8578dd39ca3f4e78644138612c2bf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit f1a96189a0f9707079cc2be94319cd51d812ad00 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f1a96189a0f9707079cc2be94319cd51d812ad00 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit f1a96189a0f9707079cc2be94319cd51d812ad00 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 59179f771e5b5788be4cc5a4f22186afadd31879 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 59179f771e5b5788be4cc5a4f22186afadd31879 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4ac33a68ac2ffbcc26373c1ccac43e503168648a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 2e255bac147aa74d10150acbd56d5a7f98ebb10e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 7143975d898e7a5a194e10ca8718ba2e8a1b513b have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7143975d898e7a5a194e10ca8718ba2e8a1b513b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 68ab761ce141c99d164fbb4960097a40fc44c63c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 68ab761ce141c99d164fbb4960097a40fc44c63c have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f1ccc0d8c84ed98549f925a08e7464744bef8f3b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1b00c9ca546998f44ed6f3de6b96408b5dec559e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1b00c9ca546998f44ed6f3de6b96408b5dec559e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1b00c9ca546998f44ed6f3de6b96408b5dec559e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8356810f2864e07b0042605ece25844c9ea61396 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8356810f2864e07b0042605ece25844c9ea61396 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8356810f2864e07b0042605ece25844c9ea61396 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9b61be1eaba6b9cc21ed9e571c66a515e3a5b20f have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9b61be1eaba6b9cc21ed9e571c66a515e3a5b20f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9b61be1eaba6b9cc21ed9e571c66a515e3a5b20f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 9b61be1eaba6b9cc21ed9e571c66a515e3a5b20f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit de632d1dda3bcf1dd0c2171a0f1d86dd08251431 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4ccb4a159c131237b7304b4fad03205e9035ef42 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 4ccb4a159c131237b7304b4fad03205e9035ef42 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit c3afc8d763fec6005e8eccf057a9de383dc4ae58 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit f36fd40c3d091e3511ad38a05998df8128ff6618 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 3b3995aa6dfd7141027086c1abdda6bad4f2a6bb have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b21d3f568329be1443c4ac1090827ba5a78ed95e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit cf36672a52c7a66b269cb49950c6a3a9421f083c have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit c12a8de5b488e179cb88829fd53bcfcc29b8fd8a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 57c4bf099214c408e8d9880f11bfe12cd231d825 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 57c4bf099214c408e8d9880f11bfe12cd231d825 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 7c9f5d0a651bc0289b7d604a3c279e9f7197e443 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 7c9f5d0a651bc0289b7d604a3c279e9f7197e443 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit c4aedc49d43d5910f6c4cd9c8aa20574a30626aa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit aea10fb6599d4de341e9e6a1d84754678d828ce8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 2237d90146326e7a137cc0079fb152738b4bc9b3 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 2237d90146326e7a137cc0079fb152738b4bc9b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 2237d90146326e7a137cc0079fb152738b4bc9b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 2237d90146326e7a137cc0079fb152738b4bc9b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 2237d90146326e7a137cc0079fb152738b4bc9b3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d2a9a1bacb069f071c5600869100306e4fa66ed3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d2a9a1bacb069f071c5600869100306e4fa66ed3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d2a9a1bacb069f071c5600869100306e4fa66ed3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit a6047a0b9d699d76b908aa76afd462225b402b7f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1434370afd57ec43822f4df2f82bfecd9c062181 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 26210901212743bf3cdb9eabb0b4eb7d4a5ca881 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 94d5566b3e386a6ef49d9103dc400eeb28b5001f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 94d5566b3e386a6ef49d9103dc400eeb28b5001f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 94d5566b3e386a6ef49d9103dc400eeb28b5001f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4e748ff08ebb007ce298bac21b896ddd0b4029f4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4e748ff08ebb007ce298bac21b896ddd0b4029f4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4e748ff08ebb007ce298bac21b896ddd0b4029f4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit efda7edb64859b4b1389b604f701aed2ba120a2e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit efda7edb64859b4b1389b604f701aed2ba120a2e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e15859857841dca1cc2b8c5fed6ea0c582d479c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e15859857841dca1cc2b8c5fed6ea0c582d479c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e15859857841dca1cc2b8c5fed6ea0c582d479c3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4f483004e6a8c132cf78a841083a8ed3122c6260 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6a4d6ae842ff5887fdfd923c2ed42809e52831b8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 6a4d6ae842ff5887fdfd923c2ed42809e52831b8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 4da51c8ea25421a63cb8e6cf06cf3c604e269b3a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e6e6c496d5580b600d214b2b8c47bb1395e656a7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e6e6c496d5580b600d214b2b8c47bb1395e656a7 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 2121c417f9f52f93b2b389cb34bec009470d1711 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit edff2730c6178707c3b25ac183c0a2997a5616f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit edff2730c6178707c3b25ac183c0a2997a5616f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit edff2730c6178707c3b25ac183c0a2997a5616f8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b1580ec5b25ec38ea2b74574cb3936f2f2799232 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b1580ec5b25ec38ea2b74574cb3936f2f2799232 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b1580ec5b25ec38ea2b74574cb3936f2f2799232 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b1580ec5b25ec38ea2b74574cb3936f2f2799232 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b1580ec5b25ec38ea2b74574cb3936f2f2799232 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit aaab8e2e73d5011aa43c3fd9dc138a24bf88c9b5 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8587b27cb5fafb3b69a453e270819a03a79c1cee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8587b27cb5fafb3b69a453e270819a03a79c1cee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 8587b27cb5fafb3b69a453e270819a03a79c1cee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 8587b27cb5fafb3b69a453e270819a03a79c1cee have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 8587b27cb5fafb3b69a453e270819a03a79c1cee have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit be1804242c5aa4d52f7e9590abbdcb9ac782cfcc have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4aabf67540923fd85dee2b3b137c1276b8d0f150 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 40306c812bb28c50f4968e82c5282e9ec0d04f0a have passed. See details.. :white_check_mark:\u00a0Tests for the commit bb9a04d3db6c2337ec49a80cd3984e2e4e357f81 have passed. See details.. :x:\u00a0Tests for the commit 71a8bb12940f4ad501dc631c8ab7779d33961d35 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 71a8bb12940f4ad501dc631c8ab7779d33961d35 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b73e61378597684c8e664e9ed21bb14e60f97a11 have passed. See details.. :x:\u00a0Tests for the commit 50a8e85835617c360d3b5b430fe6e3a7bd117653 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 739974118f7184aa2869dd14e3d3870e448ac3e8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 211a9c6718dc0dfd40c14b94b218c4a8cbcdc142 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9c3f6dec2241ea7861c5986fd7bd7ac1b4681cf4 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1f0292801526157a7a26f5de366b7b6e677c7d1d have passed. See details.. :white_check_mark:\u00a0Tests for the commit e0a006504960c312da98e7431c7580db7303c9ba have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 3924b3f698c2b7d0a2cc44604553d0db4ccbf70b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fe8a7fdf3573130c39bfe931f7e1924109748302 have failed. See details.. :white_check_mark:\u00a0Tests for the commit b7fc433c30056260f5f0819400c811843d571875 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 2368347839d013a9eb8e6d489d93a00ef6d353c2 have passed. See details.. :x:\u00a0Tests for the commit fe56913e58cd439cde4c845b0fa8177a4b74e5eb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 7bf945310bb4baddbc38d7f44b5c539101cb976b have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 472dd49de01c7f7f57c1ed82f673b6e4e16129aa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 77888e5f5b569772bd8171e425b8fc4063d28c61 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 77888e5f5b569772bd8171e425b8fc4063d28c61 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 858589f83c98eccf13d5c615845b66008f1997c8 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 5e60a98a68d4c939b1b5ed19df98fb1eafff9720 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 5e60a98a68d4c939b1b5ed19df98fb1eafff9720 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8b5b118547e68f9f27c930f8a0e04254396c46c8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 62fa7b7ad8cebe7fc3102d51b66627414016bad5 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6afe84ae22fab735e03f6fe4ba3bce1e3b683334 have failed. See details.. :x:\u00a0Tests for the commit ae690a502caba454f8bbadbeab008d6a92c8e42b have failed. See details.. :white_check_mark:\u00a0Tests for the commit ae690a502caba454f8bbadbeab008d6a92c8e42b have passed. See details.. :white_check_mark:\u00a0Tests for the commit f67101a1fe3a76f8b1503b600a887e8a5948a8ac have passed. See details.. :white_check_mark:\u00a0Tests for the commit 3455635584df6537edd1e4f95fc0467dd3b8a4f8 have passed. See details.. :x:\u00a0Tests for the commit 40c536799971da547f90b4a1946ffe021c53c2c0 have failed. See details.. :x:\u00a0Tests for the commit a6442238b231dcb827cb0007fdd95af1b03ddce0 have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit a6442238b231dcb827cb0007fdd95af1b03ddce0 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 7df052493b5c50b45efac38e9b6704b3f9491705 have passed. See details.. :white_check_mark:\u00a0Tests for the commit d569244bcf1e13db3f30f11e12de5f67dc134df7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 96771b064291966b9fb7a3dabc587d8991d84599 have passed. See details.. :x:\u00a0Tests for the commit 4599a98a0f75c8466d409fbca374810fd9adce58 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 4599a98a0f75c8466d409fbca374810fd9adce58 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 00885585326a529a277671041324fe7377ca86d8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch.. :white_check_mark:\u00a0Tests for the commit 3c36e8dc36b0b926c8944ca8603180bf71c03e84 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5909f32be06f7af3ea2838caaf171e78a94eeaf2 have passed. See details.. :x:\u00a0Tests for the commit 47dea90f9fb6f936f2c9e98b55d0270168958631 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 30f69a0948fb8d2a95019d398a2750175db0e3f3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 5571205f58f429ee508fee0fa0705f740490d4b8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 17046102df8e6aff14199b117effe48632a89a80 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 51f421569ed5596a7952d7823f0faa608546aca0 have passed. See details.. :white_check_mark:\u00a0Tests for the commit c6b5b258c9c9a711b215b90576339eeac214293a have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9024e526ecfda764c4a04ac51415178536a47117 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 9024e526ecfda764c4a04ac51415178536a47117 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b94459f9264666438d6d5b9896fe6d2d62c8c725 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 1199666406cbea0b500128928c1959b34d3a6be3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 38019af27c29a10931559e066997d9423b91fd66 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d0c1dff410493941d57f78264ca4ce46239c0237 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 6a1ab05003fa6f95bae09adb4551e930841e88c6 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 3d4df1bdc6aaad818f74b02e5e5572b01e430eb6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3d4df1bdc6aaad818f74b02e5e5572b01e430eb6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b7c12b9c8fd00f7799568f1e37312e338ea2bb84 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit b7c12b9c8fd00f7799568f1e37312e338ea2bb84 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 4b9eed90886d91cd31032d6a747aac495ab5a0bf have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 65a5c734986379234f433c3810652154a9a03d3b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 0665147206982a0ed9221a157ec90fbb35fbc09a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 5d260abdb9d70e4e77e795d24f38a79f07a47b7c have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 5d260abdb9d70e4e77e795d24f38a79f07a47b7c have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit 18be3d51b038b7446994f525a07c9ec7c029e969 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit bc6d00840208ae1e2ff720bee9bc6caed67f4cd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit bc6d00840208ae1e2ff720bee9bc6caed67f4cd1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bc6d00840208ae1e2ff720bee9bc6caed67f4cd1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit bc6d00840208ae1e2ff720bee9bc6caed67f4cd1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 347a1096b57f00693bde4ce94e87bd672ecb8bb1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 347a1096b57f00693bde4ce94e87bd672ecb8bb1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b40f7a09c887468c96af5ce8b656f070b8706886 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit b40f7a09c887468c96af5ce8b656f070b8706886 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f63a98a031c13db217c39504d22c92663eb2c7ac have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit c2a1f62427509686ceab4a8d72468d32d7369535 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 409d739ea2e37706d13c00312faf5349259007c1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0ddb4c91910bc70ccc2e29ae56f803a666116938 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d6dd263221130ce42e8cb152927ec8c157184ad2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d6dd263221130ce42e8cb152927ec8c157184ad2 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit d6dd263221130ce42e8cb152927ec8c157184ad2 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit f6746dd471c700ec3be4acf5dd0d8caacfe995a9 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0b4ecbd7b3b4d1c80f45d41ddbc1ca5e6773fe54 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 0b4ecbd7b3b4d1c80f45d41ddbc1ca5e6773fe54 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 99a9567b3c969b70d644cd2315b1ea5814d41efd have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit d49fb42617dbbd58be68a28b0315348abe161f81 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d0b644ae16fa54f0f9ffb052bbf28c0ee3b2ac04 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e9a5722d81d410aa1045eeffe1cbae0acf7b593f have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a561730b2f9bdc4e8cd05ee75f1f6848ddbe5436 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a561730b2f9bdc4e8cd05ee75f1f6848ddbe5436 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a561730b2f9bdc4e8cd05ee75f1f6848ddbe5436 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 7a90b9aa34025fd28df80b33f3fb6662b8476e10 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 7757fe68443cfab58050bf583e75c390d7293c6b have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit eea816d9a0b6224fec1353b738f99315c6a14616 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit b3e7f6c7c934bc9f891a42d57ee085381447038d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit f1610891c492e8c6d678c64c9817da6f580b7edb have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e76f16f0576dc22826786923a31d1ea7b671f06e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit e76f16f0576dc22826786923a31d1ea7b671f06e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 3c418ce3e6e63daef2e240dd29602e5276722a12 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit edcffabea02c03c12f227d76f0936d7a1959a392 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 660a035aa0b472a7af0109013bc8d9d22870aa4e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 311a8e4bf02706be4ef3c9adde7dc39c1a01c586 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 600fe2b98271de72a21a14cc4f81e44c07fa688d have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9b8e910f7e2d1c771c273647421734f31952f0e2 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a8e6d5bd1837004856b5116722bd9c455c751dd5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 8cb6ab622085cdd43f612207b97353f1bd796786 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1fcc52e7d57b24e72ae49b8387656e2af58862a9 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit dbd4df1feefe2176941dba95b2dfaa5eab630f50 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 12eabedc70114618be979f0d5b22631427b319b5 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 74dbdfc654ebe3b07380829aa427df425e24eb15 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit b34b1601ac74adb6ef6e43894abb18a9251a88be have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 01b5bd22369f412dc6005b2e90135a5eaf7fefc8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 01b5bd22369f412dc6005b2e90135a5eaf7fefc8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 67ac5879013fdc86fb4a7ebaaa840dd2d02ef9a4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 67ac5879013fdc86fb4a7ebaaa840dd2d02ef9a4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 67ac5879013fdc86fb4a7ebaaa840dd2d02ef9a4 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a227381ce0ee96214fc31d9269580e3fda6b37a2 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 4ca3cce9d982d28e47a7561c01962882f3fc79e6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9b036ac922f314bfaf89ab1c187fddb987f67f17 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9b036ac922f314bfaf89ab1c187fddb987f67f17 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 00d4d4328a3da387add498980f29fa3233adef88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 00d4d4328a3da387add498980f29fa3233adef88 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1c74d35b2a94925198b9d8053d1d326774978c84 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 49dfccc24ea7f6e869f4019ddf07a04afd2477f9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 49dfccc24ea7f6e869f4019ddf07a04afd2477f9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 12b72a245e2c3d3178da6d6783033c8bee773eb9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 12b72a245e2c3d3178da6d6783033c8bee773eb9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit e25ca002ed1eee21686ae31e3f708783b44acab9 have passed. See details.. :white_check_mark:\u00a0Tests for the commit b589e79773f195163426d38d8478c6fd3ddd8796 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 918320dc3fd9d3b782be17421b46b7cba6c61d63 have passed. See details.. :x:\u00a0Tests for the commit d28011c1121713ae26eb9c92ad60e10adbed5c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d28011c1121713ae26eb9c92ad60e10adbed5c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit d28011c1121713ae26eb9c92ad60e10adbed5c7d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 778524f15aa0510c01d90075cbb8a4fe1385eaa8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 778524f15aa0510c01d90075cbb8a4fe1385eaa8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 7052947753baabbe09b698060db96ce0bb7895c6 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 852a75f6c087a4cf48ec6e57f4ea8dfb0ab1ca6a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1e0e59c51c442e2f01e404d08af1913da93af7b2 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 31f09fd751ed618a08975f5ab4fa46ae2c05d933 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 31f09fd751ed618a08975f5ab4fa46ae2c05d933 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 31f09fd751ed618a08975f5ab4fa46ae2c05d933 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 31f09fd751ed618a08975f5ab4fa46ae2c05d933 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e40a9c0ab028332ce752924ca41f3debb0faf6aa have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit e40a9c0ab028332ce752924ca41f3debb0faf6aa have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 9d59313ddd16c8aee9422185a9757e77fdea3145 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 86bea0525d61d3eb2f24a3f87d1063e92cb77974 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 23edc5f5c696e0a5872b16d7c933aed9a2a68511 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 23edc5f5c696e0a5872b16d7c933aed9a2a68511 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit f9052f61567786bd86a520189fb6f890b7ceecc3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 81713854436e7ec20cd8bca1950a370c07aa9622 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1f55b48b52a5bd069e08a8a92a37594a3d90290e have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1f55b48b52a5bd069e08a8a92a37594a3d90290e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 53fd567c1b18bab50cc6a54e2c643ab3bc047417 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fb412ab79ba15fd3f30ded2c2fc54b02c222beb3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fb412ab79ba15fd3f30ded2c2fc54b02c222beb3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit fb412ab79ba15fd3f30ded2c2fc54b02c222beb3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit fd8a50d11949fa982182fb1eb5f8151c5157dfd6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 41339bcd5d06151f0283f13a046e15ff14f5d1e8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 41339bcd5d06151f0283f13a046e15ff14f5d1e8 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 41339bcd5d06151f0283f13a046e15ff14f5d1e8 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1e106632f7c96adc876f24314689b65b9f420260 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit eafffd31da4e8f142798026e661893d2c41d234c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit eafffd31da4e8f142798026e661893d2c41d234c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 807c2ae7477db602ab85d91b7a53977310ea3c29 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit d180f4aaa6e6c12297cbbafd3cc17b1ca3c9a7f7 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f82ef1e9ec4d11e99d7f055021d0f062b9993033 have passed. See details.. :white_check_mark:\u00a0Tests for the commit fff01f15f8d232e64b2919abf7496954bc4e5381 have passed. See details.. :white_check_mark:\u00a0Tests for the commit 17f9ddaf2c906a975d3c5fc5eed39ff9c657c1c6 have passed. See details.. :white_check_mark:\u00a0Tests for the commit f496e7394233d8fa7cc7cd4e908090f2c40e3e2e have passed. See details.. :white_check_mark:\u00a0Tests for the commit 35e52fb7d3f6e183c7745a9ca05a580ca2bc825a have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit c826989328e72916adf6843cf301d9044959b730 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit c826989328e72916adf6843cf301d9044959b730 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 1473aa6bd1476c89affca262b30f21b0b5d3d288 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 239315b86b0cb85f4ce9578e2a41d1c54b50ce4a have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 568e338b1aa5a789a17265330d1d70b7c47eedb6 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e7a6caeb1f299dbf73c4762838c7dbb79740a260 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit d1a2cd29f7a9da65142a1ed0e9d6a98869a3feb4 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a4c3487449130ce6589d0261a97aba942be02bde have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 8d55ac881df27775a02a644312f7c9def5a84f49 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 8d55ac881df27775a02a644312f7c9def5a84f49 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0fdfc174a6b7d904aec01f0de69b8f30ff6ff15e have failed. See details:\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1a1587803f3d763bb891d4c8ef16d8df63e8245c have passed. See details.. :x:\u00a0Tests for the commit 14ec5843ca02d90ea24f393becd46e74f5484702 have failed. See details.. :white_check_mark:\u00a0Tests for the commit b595da1bb9c39db179108958c7f60ec000bf8726 have passed. See details.. :x:\u00a0Tests for the commit b595da1bb9c39db179108958c7f60ec000bf8726 have failed. See details.. :white_check_mark:\u00a0Tests for the commit 0734fa700ac7a80e1da12fc6b4bb330483d85748 have passed. See details.. :x:\u00a0Tests for the commit 35536e48943f38f97c509add724913c88bbeb411 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 35536e48943f38f97c509add724913c88bbeb411 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 35536e48943f38f97c509add724913c88bbeb411 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 972a7d0508968eae7c98db48c49ea1f55736f91f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 32e04f31db619eb0aae5979516ad9503c06a71ed have passed. See details.. :white_check_mark:\u00a0Tests for the commit f97b2f623c419b9bd1bee0695c1fcec43dad34cd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 38c30c7621e20e1083891168a0c9ed233e1d8ce3 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 727b80600232d21050a01a668bf38e5734bdda3b have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit a0f4359c672e110775f4268a2a514ee5dc592f37 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit e0f80782e22edad70a5ca3fd5e1dae488080e4e0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a9b00f4c3b1e4ff9197677e2dbc65e7a4e482482 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit a9b00f4c3b1e4ff9197677e2dbc65e7a4e482482 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 731c59de92e453c47d894cd0cc6e99a4324ca7d0 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/appveyor/branch.. :x:\u00a0Tests for the commit a48ac702a65db12de6db3c32dce53cb91a115e7c have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 4ad552f1b8a042c7c4337b9e949b307e3488fb60 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 4ad552f1b8a042c7c4337b9e949b307e3488fb60 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit c236e84db05c47a5551d4986fc2574b48240dc0f have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :white_check_mark:\u00a0Tests for the commit 682b83574b30f62bdcde9782745ea2618ee9551e have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 55f5feab5af9d1ab648a4ccd5e10b56178f21512 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 9737aeb133256861563f5bd2c5f94e59586203f3 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration-azure-mobile.. :white_check_mark:\u00a0Tests for the commit 9d5c94606a9862303547400e790dc63f54d98b0f have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 2f39e819cd16b863b031afad9f2592539caf64ed have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit fd1ba41da975a4b6f52646a64e3b0394dd60dcfd have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit fd1ba41da975a4b6f52646a64e3b0394dd60dcfd have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit ca55adf80392ebdd033ef0b00d1105e10f55096d have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 0da37e06d6142656f0a01b561aecc06738afdf67 have failed. See details:\n\n\n:x:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1e834445a4b36c8b78fe857e289b1625437c9c02 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1e834445a4b36c8b78fe857e289b1625437c9c02 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a9190dfa495f28f438b5f9c3fdbbb32e426ddb88 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit a9190dfa495f28f438b5f9c3fdbbb32e426ddb88 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a9190dfa495f28f438b5f9c3fdbbb32e426ddb88 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit a9190dfa495f28f438b5f9c3fdbbb32e426ddb88 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile.. :x:\u00a0Tests for the commit 1d27ef892f6329c321756ea2b49f33d2990ee7d1 have failed. See details:\n\n\n:x:\u00a0continuous-integration-azure-desktop\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 1d27ef892f6329c321756ea2b49f33d2990ee7d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1d27ef892f6329c321756ea2b49f33d2990ee7d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 1d27ef892f6329c321756ea2b49f33d2990ee7d1 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. :white_check_mark:\u00a0Tests for the commit 1d27ef892f6329c321756ea2b49f33d2990ee7d1 have passed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 62ef475882bcb9174c442d3994f0e6dfafd2367d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop.. :x:\u00a0Tests for the commit 62ef475882bcb9174c442d3994f0e6dfafd2367d have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:white_check_mark:\u00a0continuous-integration-azure-mobile\n\n\n:white_check_mark:\u00a0continuous-integration-azure-desktop\n\n\n:x:\u00a0continuous-integration/travis-ci/push.. :x:\u00a0Tests for the commit 91dc7d8d74597110cbc73fe162f6134768180a47 have failed. See details:\n\n\n:white_check_mark:\u00a0continuous-integration/appveyor/branch\n\n\n:x:\u00a0continuous-integration-azure-mobile\n\n\n:x:\u00a0continuous-integration/travis-ci/push\n\n\n:x:\u00a0continuous-integration-azure-desktop.. \n\n",
    "p-bakker": "Hi Ivan,\nI see you're making progress with this case. Is it already in such a state that I could test with it? Or are the bits still to be implemented vital for being able to use it?. Great to see this case being closed. When is the next alpha expected?. Excellent. Am already modifying my tests to start using this as soon as it's released.\nWhile at that, I realized a function to get the active role would be helpful. Is that already included/possible?. @inikulin to answer your question above: in my domain specific classes that wrap all interaction with the browser, I expose an API for the writers of tests to use when they want to clean up server-side sessions, since every role equals a login equals a serverside session in my case. When they call my API to cleanup/exit a serverside session, they can pass in a Role. If that Role isn't the currently active Role, I must switch to the Role they want to exit first, before performing an exit in the app, after which I need to some back to my previously active Role. \nIf the role they want to exit is the active Role, I need to do different stuff.\nMakes sense?. I'm playing around with this new functionality, but I'm afraid it ain't working for me.\nThe stuff I'm testing is a webapp with very dynamic URL, which are closely tied to serverside state.\nAn example of the flow:\n- I open the app by going to domain:port/myApp\n- As the server determines I'm not yet logged in, it redirects me to domain:port/somethingRandom\n- if I provide proper credentials, the server again redirects me to domain:port/anotherRandomValue\nI read the following in the new docs:\n\nIf you switch to a role for the first time in test run, the browser will be navigated from the original page to a login page where the role initialization code will be executed. Then the original page will be reloaded with new credentials. If you switch to a role that has already been initialized, TestCafe simply reloads the current page with the appropriate credentials.\n\nThe flow described here for when you switch to a role for the first time will not work in my scenario, neither will the part when you switch to an already initialized role: the reload of the current url with the credentials of another Role won't fly, because the url's are session (thus Role) specific.\nSo it seems to me that this new feature will not work in my scenario where url's are session/role specific and where the login procedure isn't isolated under it's own url and affects the main page under testing only by just setting a cookie of some sort.\nOr am I missing something here?\nTo clarify: the first thing I hoped this feature would allow me to do is just log in once per fixture and have my entire testsuite broken up in individual tests (up to now I just had one test which started with the login in order to make this work). The second thing would be being able to switch between different logged in users during tests\n. No, the session is managed by a JSESSIONID cookie, but the urls of the app are also very dynamic/unique by session. Yes, thinking the entire flow through, as far as I can see that would indeed would make it work. Pfff, good question. Something like dynamicSessionUrls?\nIt's a bit difficult, because such setting would do multiple things:\n- change the behavior of of switching between Roles: currently it reloads the current URL with a different Role, so the test remains in the exact same 'route' in your webapp/webpage. The new behavior would redirect the test back to the URL where the app/page was after login everytime.\nCome to think of it, maybe the setting should be called something like persistUrl or useActiveUrl/useLastUrl, with a behavior that when switching Role, you get redirected back to the Url where that Role was last. In case it's the first time switching to the Role, the last url is the url where the test was when the login action led to.\nThink that such behavior is more generic and could even be useful when you don't have dynamic, session-based url's, as it allows writing tests for apps/pages where you can't just go to any Url, but where there is a sort of sequence to things.\nHope that sort of makes sense. @inikulin no problem, however: I tried your workaround, but for me the code after await t.useRole(role); in  switchToRoleAndKeepUrl is never executed, which means the workaround doesn't function.\nDoes this workaround work for you?\nMy code is like this:\n   console.log('activating session')\n    await TestController.useRole(session)\n    console.log('session acivated ', session.preservedUrl)\nI see the first log statement appearing in the console, but never the second\n        . @inikulin  Yes, I did get it working according to how it should work.\nThe entire feature however doesn't not work for my specific scenario, but that is a different story, see: https://github.com/DevExpress/testcafe/issues/1339#issuecomment-289529144. Maybe a good idea to make this clearer in the documentation, because that is, at least for me, the reason my tests weren't working and/or not stable\nIMHO the definition of visibility needs to not be defined to this technical definition of visibility, but instead be based on intractable with by the user. This means among other things that an element is not visible if:\n- overlayed by another element (at the position of the event being fired), taking into account pointer-events (https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events)\n- located outside the viewport (taking into account if the user would be able to scroll to it or not)\nOn of my cases: I have a big panel that is moved off to the side, partially under another element, partly outside the browsers viewport. In no circumstances can the user access this panel, until some code moves this panel into view. I'd expect the selectors of TestCafe to only return the element after it's moved into view where normally the user could interact with it.\nOf course I can manage all this myself, but that makes writing tests way more verbose than it should be. Tnx for taking it into consideration.\nOne more note: I think currently if you'd have two clickable elements on top of eachother and you instruct TestCafe to click the one that is behind the other, it actually performs the click on the element that is in front.\nI'd have to build a stand-alone testcase for really prove it, but this behavior would explain some of the odd behavior I'm seeing. This might be useful: http://stackoverflow.com/a/27884653/7049810 (at least for part of the solution). yeah, I think that pretty much covers all need.\nJust wondering how the css 'transform: scale(0)' or 'transform: translate(....)' affects the above. Hi Ivan,\nIs your description of the API you came up with, you talk about that the new hooks are executed every time the page is loaded. Does \"every time the page is loaded\" really mean the page loading as in the URL changing? \nOr does it also take into account Ajax-based apps where for example after a click of a button there is communication with the server to signal the button was clicked, after which there is chatter back and forth between the client and server to retrieve new content and update the client?\nTo me this feature would look like something I could use with the framework I'm using, as the framework provides API to check if it's still busy (re)rendering, but this doesn't just happen on pageLoad (URL change), but also when communicating with the server in Ajax-manner after an even occurred in the client.\nI hope this new API can handle both\nThe additional API you're suggesting (t.waitFor(selector|selector-string|client-function-predicate|predicate, timeout)) seems to also allow me to do this (with the client-function-predicate argument), but I rather hook in my logic on a lower level so I don't have to clutter my test with waitfor's that could be handled on a more generic level. I know it does, but that is not sufficient apparently, at least not in my case. I think what is happening in my case is that an xhr request is send and a response is received and processes and then on a timer new xhr requests are started. Not 100% sure as it's the framework I'm using. \nAll I notice if that I have to write specific logic to wait for certain state in the UI to be achieved, before continuing with the test, otherwise the test bombs out because TestCafe continues prematurely (at least prematurely in my case). And I know that my framework has hooks to ask it if it's still busy doing stuff.\nSo, I'm hoping this feature will allow me to hook in my framework's busy checks on a low(er) level. Additionally, the mechanism works for XHR requests, but when you use TestCafe on a page that uses WebSockets of HTTP/2 as communication protocol with the server, where messages can be send back and forth in async manner (so no request/response model), I think the request barrier isn't enough anymore. Somehow a beforeEachAction feels like going down a rabbitshole...\nWhat about adding a customizing hook into just Selectors and maybe asserts? \nBoth these have a mechanism to be smart, but they can only be smart up to a certain point. What if we have a mechanism to extend their smartness with some custom logic, which in my case would be a check with my framework of choice to see if the framework is done?. Should it raise an error at all? Shouldn't it just return a Selector instance that returns false when you call .exists on it?. Should it preserve the url the login action ended on and go back to that everytime useRole(role) is called?\nOr should the url be preserved on which the role was before switching to another role and using the url on which the login action ended only when it's the first time switching to that role?\nThis would imho make more sense or at least be another useful option. Think of stateful apps: going back to the url as it was after login might not be desired or even wanted. Should it preserve the url the login action ended on and go back to that everytime useRole(role) is called?\nOr should the url be preserved on which the role was before switching to another role and using the url on which the login action ended only when it's the first time switching to that role?\nThis would imho make more sense or at least be another useful option. Think of stateful apps: going back to the url as it was after login might not be desired or even wanted. To add to my comment above: I realized when testing out the workaround https://github.com/DevExpress/testcafe/issues/243#issuecomment-288326324 that before each test, TestCafe navigates back to the 'main' page.\nThis does not work for the scenario in which I'm trying to use TestCafe: I'm trying to automate what I call a process test, which is testing a webapp front to back, going through dozens of steps, where each step builds on the previous step. That approach, combined with the framework I'm using, means that each test needs to continue from the URL where the previous test ended.\nThis currently isn't TestCafe's behavior and the behavior described in this case to switch back to the URL on which the login action ended before each test would also not give me the behavior I need.\nI've tried to work around this using the beforeEach and afterEach fixture hooks, by storing the current URL to the t.ctx in the afterEach hook and navigating to t.ctx in the beforeEach hook, but TestCafe first executed the beforeEach hook and then navigates to the 'main' page, so the next test starts at the wrong URL for me.\nThe only way I currently see to automate my process test is to just have one test function that contains all the steps involved in the entire process test, which I don't like, since:\na: this makes is very difficult to read (the test method would become hundred if not thousands LOC long)\nb: doesn't give the the execution time per individual step (which I would also like to track).\nSo, long story short: implementing this feature as (currently) described would not solve my problem. Instead, I'd need an option to only provide a starting url per fixture or role) and have TestCafe just continue each test from the URL where the previous test (or the login action) ended.\nI hope you see this as a useful and possible addition, although I do understand that from a generic testing point of view it makes sense to start of each test from the same main/base url, since tests should not affect eachother. However, for the particular type of test I'm trying to automate, this won't work. To add to my comment above: I realized when testing out the workaround https://github.com/DevExpress/testcafe/issues/243#issuecomment-288326324 that before each test, TestCafe navigates back to the 'main' page.\nThis does not work for the scenario in which I'm trying to use TestCafe: I'm trying to automate what I call a process test, which is testing a webapp front to back, going through dozens of steps, where each step builds on the previous step. That approach, combined with the framework I'm using, means that each test needs to continue from the URL where the previous test ended.\nThis currently isn't TestCafe's behavior and the behavior described in this case to switch back to the URL on which the login action ended before each test would also not give me the behavior I need.\nI've tried to work around this using the beforeEach and afterEach fixture hooks, by storing the current URL to the t.ctx in the afterEach hook and navigating to t.ctx in the beforeEach hook, but TestCafe first executed the beforeEach hook and then navigates to the 'main' page, so the next test starts at the wrong URL for me.\nThe only way I currently see to automate my process test is to just have one test function that contains all the steps involved in the entire process test, which I don't like, since:\na: this makes is very difficult to read (the test method would become hundred if not thousands LOC long)\nb: doesn't give the the execution time per individual step (which I would also like to track).\nSo, long story short: implementing this feature as (currently) described would not solve my problem. Instead, I'd need an option to only provide a starting url per fixture or role) and have TestCafe just continue each test from the URL where the previous test (or the login action) ended.\nI hope you see this as a useful and possible addition, although I do understand that from a generic testing point of view it makes sense to start of each test from the same main/base url, since tests should not affect eachother. However, for the particular type of test I'm trying to automate, this won't work. @inikulin Curious to know if you/the TestCafe team sees options/are willing to support our testing approach, where each test within the fixture should continue where the previous test finished (state/url-wise).. @inikulin Curious to know if you/the TestCafe team sees options/are willing to support our testing approach, where each test within the fixture should continue where the previous test finished (state/url-wise).. @inikulin Hi Ivan, been thinking about it and have a couple of thoughts:\n\nyour approach works for me from a testcode structuring point of view\nI wonder if such a section structure isn't going to cause issues with output formats like xunit for example. I rather not loose the ability to have the output of tests generated in 'standard' formats that can be consumed by external tools\nhow would this interact with the useRole feature? I'd still need the ability to continue after a useRole call on the url where that role was last.\n\nRegarding the questions you had on my suggestion: \n1. what should happen when tests fails: there is already a separate FR for bailing out on first failure https://github.com/DevExpress/testcafe/issues/1323\n2. what API to use: I'd have suggested something like a continueWithPreviousUrl flag on the fixture\n. @inikulin Hi Ivan, been thinking about it and have a couple of thoughts:\n\nyour approach works for me from a testcode structuring point of view\nI wonder if such a section structure isn't going to cause issues with output formats like xunit for example. I rather not loose the ability to have the output of tests generated in 'standard' formats that can be consumed by external tools\nhow would this interact with the useRole feature? I'd still need the ability to continue after a useRole call on the url where that role was last.\n\nRegarding the questions you had on my suggestion: \n1. what should happen when tests fails: there is already a separate FR for bailing out on first failure https://github.com/DevExpress/testcafe/issues/1323\n2. what API to use: I'd have suggested something like a continueWithPreviousUrl flag on the fixture\n. @inikulin \nI think something went missing from your answer on xunit, so not sure what your answer is\nAs for your answer on how your .section approach will work in combination with useRole: so you suggest to also still add the feature described in your first comment on this case, besides the .section approach?\nI think those two features combined would make it possible to do what i need to do in a maintainable fashion. At least I can't think of any loopholes right now. @inikulin \nI think something went missing from your answer on xunit, so not sure what your answer is\nAs for your answer on how your .section approach will work in combination with useRole: so you suggest to also still add the feature described in your first comment on this case, besides the .section approach?\nI think those two features combined would make it possible to do what i need to do in a maintainable fashion. At least I can't think of any loopholes right now. @inikulin \nSounds good for the xunit handling.\nAs for the useRole: I still see requirements to be able to switch roles during the a single test, in order to test certain things from different security/role perspectives. But I guess I can handle that with the work-around you suggested earlier by capturing and storing the url at the appropriate times against a role and navigating back to the captured url when switching to the Role again.\nIt all takes some coordination, but I think I could get everything done and as long as I can get my testers to write tests using my domain-specific API in which I handle all the intricacies of dealing with statefull urls, things would be good . @inikulin \nSounds good for the xunit handling.\nAs for the useRole: I still see requirements to be able to switch roles during the a single test, in order to test certain things from different security/role perspectives. But I guess I can handle that with the work-around you suggested earlier by capturing and storing the url at the appropriate times against a role and navigating back to the captured url when switching to the Role again.\nIt all takes some coordination, but I think I could get everything done and as long as I can get my testers to write tests using my domain-specific API in which I handle all the intricacies of dealing with statefull urls, things would be good . k, great!. k, great!. Tnx, excellent! Was already surprised that apparently no-one had run into this before and thus was implemented, but I guess someone had, just was missed in a bit of the docs. ",
    "mjhea0": "In terms of circleci, my tests are just working with the following in my circle.yml file:\nyaml\nmachine:\n  node:\n    version: 7.6.0\nI tested breaking changes as well. Works.\n@miherlosev \n. https://circleci.com/gh/mjhea0/testcafe-example/3\nhttps://github.com/mjhea0/testcafe-example/blob/master/circle.yml. @miherlosev thanks!\nhow about coupling testcafe with a bdd tool?. I saw the cucumberjs example -> https://github.com/helen-dikareva/testcafe-cucumber-demo/blob/master/features/step_definitions/github.js. Looks good!\nI would love to be able to use mocha, but as of now mocha needs the tests to be ran with mocha to expose the API -> https://github.com/mochajs/mocha/issues/1849. This looks like a similar issue for testcafe. Any way to programmatically require or import in the necessary methods so I can just use mocha as the runner?\nhttps://github.com/mjhea0/testcafe-example/blob/bdd/tests/bdd.js. Do you have any recipes for circle 2.0? @inikulin . I have circle 1 complete. I am working through Circle 2 at the moment. Happy to add them as recipes when I get Circle 2 working. \nRunning into some problems with xvfb and the display. Can I show you what I have thus far?. @rstudner Yes, I got it working. I'll share the script with you later today. . @rstudner I have not looked at this in like 4 months, but here it is:\n```\nversion: 2\ndefaults: &defaults\n  docker:\n    - image: circleci/node:7-browsers\n  working_directory: ~/tests\njobs:\n  build:\n    <<: *defaults\n    parallelism: 1\n    steps:\n      - checkout\n      - run:\n          name: Install dependencies\n          command: |\n            npm install testcafe\n      - run:\n          name: Run tests\n          command: |\n            mkdir /tmp/artifacts;\n            testcafe chrome 'tests/test.js' -S -s tmp/artifacts\n``. +1 for the nesting. do you have a branch for this?. Would be nice to see some patterns then. I break things up right now with myawait`s, since I have to authenticate, which gets messy:\n```javascript\nfixture.only('Smoke Test as a User')\n  .page('https://blah.com');\ntest(performances..., async (t) => {\n    await t  // log in\n      .useRole(user)\n    await t // open \"page\"\n      ...\n    await t // ensure \"something\" is visible\n      ...\n    await t // ensure \"something\" is visible\n      ...\n  });\n```. It's less about bdd and more about nesting without losing the context of being logged in. Roles are a solution but they are still expensive. I'd like to be able to set a role in an outer scope and then be able to run a number of test cases without having to re authenticate. . Similar scenario. Love the idea of sections!. I am seeing this same error on Circle CI. Just FYI. It's just popped up in the last few days. I pointed the tests at Travis and don't see the error after 50+ runs. It's not happening locally either.. @AlexanderMoskovkin what if you have a task that could take anywhere from 1 second to 3 minutes? \nWorkflow:\n\nend user submits code into an editor\ncode is sent to server, tests run\nbutton on the client changes \nwhen tests are done (anywhere from 1 second to 3 minutes) and sent back to the client, the button changes and results are displayed\n\nI want to assert that the results are as they should be. How can I wait for this to be completed? I'd love to be able to wait to check the results until the button changes the second time... @VasilyStrelyaev is there a development branch for this?\n. Thoughts on getting this into the next release? Or at the very least https://github.com/DevExpress/testcafe/issues/1357?. Rough example of how I'm doing the visual regression tests- https://github.com/mjhea0/testcafe-visual-regression. +1 for the sections. +1 for the sections. Yes, I tried that. Even though dropdown.exists is a boolean, it always evaluates to falsey. When I use my approach it works fine. Ugh.. @gpsarkar yes, that may be what's happening. I'll dig in today. Thanks!. Yes, it was returning multiple items. Closing the issue. Thanks!. The problem with application mode is that debugging is difficult (if not impossible). I don't believe there is a way to open dev tools or toggle application mode if a breakpoint is added. \nThis issue seems related to https://github.com/DevExpress/testcafe/issues/1357.\nThe use case for me is for visual regression testing. Since the address is different for each test, there will always be a regression. Perhaps a flag that removes the testcafe UI bar and does not include the address bar on screenshots...\n. Also, curious if you know of anyone that has added on a visual regression feature to testcafe? Looking at using https://github.com/mapbox/pixelmatch to compare the images. Writing a few scripts now to incorporate into the testing workflow.. ",
    "rstudner": "@mjhea0 - i'm about to start trying to use testcafe w/ circle 2.0.  Any more luck on that?. @florentpeyrard do you have a code snippet for what yo mean there?\nI have been using fixtures, with no .page, and then trying to have a .beforeEach that uses a role.\nthen each of my tests just do .navigateTo\nBut even with this, things aren't working for me (and I have localStorage involvement)\n. ",
    "eltiare": "Is there any support for WebStorm debugging?. @VasilyStrelyaev: awesome. Thank you!. ",
    "LavrovArtem": "lgtm\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. FPR\n. @inikulin I'm working with the eslint plugin\n. Update a version of the eslint-plugin-hammerhead to 0.0.6 and add the rule in src\\client\\.eslintrc:\n\"hammerhead/use-native-methods\": [2, [\"setTimeout\", \"setInterval\", \"clearTimeout\", \"clearInterval\"]]\n. Fixed in hammerhead, waiting for release\nhttps://github.com/DevExpress/testcafe-hammerhead/issues/801\n. @rmkranack\nCurrently, we are researching if there is some workaround. We will inform you once we get any information. . @rmkranack,\nI've created a simple example that shows how to authorize using Google SSO. Please try it and inform us of your results.\n```js\nimport { Selector, Role } from 'testcafe'\nconst signInButton = Selector('.abcRioButtonContentWrapper');\nconst googleAccUser = Role('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en', async t => {\n    await t\n        .click(signInButton)\n        .typeText('input[type=\"email\"]', '')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', '')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en\ntest('first test', async t => {\n    await t\n        .expect(signInButton.innerText).eql('Sign in')\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in');\n});\ntest('second test', async t => {\n    await t\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in');\n});\n```. @rmkranack,\nCould you please provide me with your site url and test? I cannot help much without this information.. @rmkranack,\nI apologize for the delayed response.\nI've tried to rewrite my example to use your web site, but was not able to test it, as Google asks for a phone number for two-factor authentication. However, I have noticed that you did not change the page url and the role url in the code you provided.  I suggest that you modify it as follows:\n```js\nimport { Selector, Role } from 'testcafe'\nconst googleAccUser = Role('https://coach-hub-ui-exos-coachhub.exos.biz/account/login', async t => {\n    await t\n        .click('button[class=\"btn mb-1 btn-primary btn-block\"]')\n        .typeText('input[type=\"email\"]', 'exos.test@teamexos.com')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', 'Changeme!')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://coach-hub-ui-exos-coachhub.exos.biz/');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://coach-hub-ui-exos-coachhub.exos.biz/\ntest('first test', async t => {\n    await t\n        .useRole(googleAccUser)\n        .expect(Selector('div[class=\"page-header border-bottom\"]').exists).ok();;\n});\n```. > We do not have a recovery phone or email on this test account. It looks like Google blocked you. Should be okay now.\n@rmkranack I'm still not able to test it as Google asks for a phone to validate your account. Try to increase the waiting time in the role before navigating to the home page.\n\n\"Verify it's you\" screenshot\n\n\n. @rmkranack,\nUnfortunately, I could not\u00a0find a workaround for your site to overcome the google authentication mechanism. At the moment, I'm out of ideas on how I may find a solution for you.. I'm working on this\n. > :50556/Skm0F6ugl!i/https://accounts.google.com/ServiceLogin?ltmpl=mobile&pa\u2026riginal_url%253Dhttps%25253A%25252F%25252Fm.youtube.com%25252F%26app%3Dm:1 Refused to display 'http://172.22.6.226:50556/Skm0F6ugl!i/https://accounts.google.com/ServiceLo\u2026Foriginal_url%253Dhttps%25253A%25252F%25252Fm.youtube.com%25252F%26app%3Dm' in a frame because it set 'X-Frame-Options' to 'DENY'.\nThis error occurs without hammerhead\n. @AndreyBelym let's check it on your side.\n. Hi @klepek42.\nThanks for your cooperation. I reproduced your problem. I will fix it, but we don't support PDF documents. After the opening of your document you can't test it.. Hi @Darmody \nI investigated this problem and I think that it relates with the our CORS emulation. We response with the 222 status code if the CORS conditions are failed. I figured out that our proxy does't send the origin header to the origin site. I guess that the problem may be in this. Can you please check out my guess?. @Darmody thanks for information. I've reproduced this problem and I've created an issue: Wrong CORS emulation. Hi @neozenith,\nI've fixed your problem in our proxy server. We will let you know when we release a version with the fix.. @neozenith The fix is published in testcafe@0.19.1-dev20180305. fixed in testcafe-hammerhead@10.8.1. Hi @deane187\nWe know about this issue, but unfortunately it is difficult to solve and it leads to a decrease in performance. \nTell me please, does this issue lead to a fail in the test?. @brettveenstra\nYour problem was reproduced. See DevExpress/testcafe-hammerhead#1116. fixed in testcafe@0.17.0-alpha4. I've reproduced the problem on a site that uses Turbolink https://github.com/DevExpress/testcafe-hammerhead/issues/1133. @irobayna Initially we've reproduced the issue on our example and we've fixed it. But it seems there is some other problem with your page. Could you please provide us your page or a simple example where we can reproduce the problem.. @irobayna Thanks for your information but we can't make any conclusions from it. We need to debug your example to find the cause of the problem.. Hi @irobayna!\nHow is your progress? Could you please try the last alpha?\nnpm install -g testcafe@0.16.0-alpha4. @iexplore Thanks for your information but we can't make any conclusions from it. Could you please provide us a simple example where we can reproduce the problem.. @iexplore Thanks for your information, I've reproduced the problem and will investigate it.. I opened new issue in our proxy https://github.com/DevExpress/testcafe-hammerhead/issues/1161. Hi @ww8912188,\nAs a temporary workaround clear the localStorage after each test. You can use the afterEach test hook for this:\njs\nfixture `Tests`\n    .page `http://localhost:8787/`\n    .afterEach(async t => {\n        await t.eval(() => localStorage.clear());\n    });. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @hang-ren,\nI've investigated your issue and we're already working on this. We have an issue for it in our proxy: https://github.com/DevExpress/testcafe-hammerhead/issues/1191.\nWe'll notify you when it's fixed.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @hang-ren,\nUnfortunatly, I cann't reproduces this issue. See video https://www.screencast.com/t/kZDwK56U. Hi @hang-ren,\nI use http link, but it immediately redirect to https via 301 status code and the location header.\n\nAlso please try to run your test in incognito mode in Chrome via command below:\ntestcafe \"chrome --incognito\" test-name.js\nIt excludes the possibility of the plugins affecting on the page.. Thank you for your time. Please let me know if you find the cause of this behavior.. fixed in testcafe@0.17.0-alpha4. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @jesperalmstrom It can be related with https://github.com/DevExpress/testcafe-hammerhead/issues/1283. Could you please provide us a call stack of error from the browser console?. The fix is published in testcafe@0.18.7-dev20180117. @nicgirault,\nIt is not quite clear why the approach with using the navigateTo feature does not work in your case.  Would you please describe your scenario in more detail?\nSince you are using hash-based navigation, you may consider using the workaround suggested in the https://github.com/DevExpress/testcafe/issues/2195 thread.  If this does not help, we need more details on why the suggested workaround does not work to be able to look for a solution.. @nicgirault,\nIt is not quite clear why the approach with using the navigateTo feature does not work in your case.  Would you please describe your scenario in more detail?\nSince you are using hash-based navigation, you may consider using the workaround suggested in the https://github.com/DevExpress/testcafe/issues/2195 thread.  If this does not help, we need more details on why the suggested workaround does not work to be able to look for a solution.. The fix is published in testcafe@0.18.7-dev20180124.. Hi @neilmatillano,\nAs far as I understood, you are trying to log in to your site via a Facebook account. This authentication creates a new browser window for its own purposes. Unfortunately, we do not support testing in multiple browser windows. \nThis issue is a duplicate of https://github.com/DevExpress/testcafe/issues/912.. Hi @neilmatillano,\nWith TestCafe, page just loads a new window URL into the current tab instead of opening a new browser window. Unfortunately, the Facebook authentication works only with multiple windows. For example, without Testcafe, try to click the LOG IN WITH FACEBOOK button and close the tab with your site. In the new authentication window, you will encounter the same problems.. @neilmatillano \nThis is in our plans for the next releases but not we can't provide you with estimates. We let you know when we have any results.. Hi @neilmatillano,\nI've tried to find a workaround but it didn\u2019t exist. The result of searching is https://github.com/DevExpress/testcafe-hammerhead/issues/1428.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @BendingBender,\nI have investigated this issue and found a problem into our proxy server.\nAs workaraund add a slash after host:\n.page`https://app.treefin.com -> .page`https://app.treefin.com/. The fix is published in testcafe@0.19.1-dev20180305. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @bramroop,\nI've reproduced your problem with TestCafe v0.18.5. The latest version doesn't seem to have such a problem. Could you please update TestCafe to version v0.18.6 and try again?. I've reproduced the issue and created a separate issue in our proxy server repo.. Hi @SolaTest,\nI'd like you to have a look at forum thread by link below.\nhttps://testcafe-discuss.devexpress.com/t/testcafe-not-always-catching-requests-from-browser/818/3?u=lavrovartem. Hi @SolaTest \nAt this point, you cannot turn off this behavior. This feature will be available after we implement the #1341 issue. You can track the issue to stay informed. Now it is in the pull request stage but soon you will be able to try it in a pre-release build.. @testcafe-build-bot \\retest. FPR @helen-dikareva . The fix is published in testcafe@0.19.2-dev20180316.. Hi @hdorgeval,\nThe web socket has correct url.\nFor debugging, start the playground gulp task of thetestcafe-hammerhead repository with --dev flag.. Hi @hdorgeval,\nIt's duplicate of https://github.com/DevExpress/testcafe-hammerhead/issues/1383.\n\nIt's not a bug. Nodejs http/https modules convert header names to lowercase.\nThe HTTP/1.1 spec states \"Field names are case-insensitive.\" (http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html. Hi @corneliutusnea,\nI've investigated this issue and it seems that the error occurs on the www.bigcommerce.com site(without TestCafe). Try specifying the --skip-js-errors flag so that TestCafe will ignore js errors on the page and continue test execution.\n\n. This is service worker registration problem.\nRelated with https://github.com/DevExpress/testcafe/issues/1985. This is service worker registration problem.\nRelated with https://github.com/DevExpress/testcafe/issues/1985. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @miherlosev I've checked it. Everything is ok.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. The fix is published in testcafe@0.20.0-alpha.1.. The fix is published in testcafe@0.20.0-alpha.1.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @s-mendez-criteo,\nI've reproduced your issue and created new issue on our proxy repository.. The fix is published in testcafe@0.20.0-alpha.1.. @testcafe-build-bot \\retest. Hi @Lukas-Kullmann,\nI've reproduced the problem and I will investigate it.. The \"new issue\" page has wrong markup:\nhtml\n<form class=\"new_issue\">\n    <input>\n    <div>\n        <!-- '\"` --><!-- </textarea></xmp> --></option></form>\n      <form class=\"js-label-form\">\n          <input>\n      </form>\n    </div>\nBrowser interpret it as:\nhtml\n<form class=\"new_issue\">\n    <input>\n    <div>\n        <!-- '\"` --><!-- </textarea></xmp> -->\n      <form class=\"js-label-form\">\n          <input>\n      </form>\n    </div>\n</form>\n\nOur proxy server html parser interpret it as:\nhtml\n<form class=\"new_issue\">\n    <input>\n    <div>\n        <!-- '\"` --><!-- </textarea></xmp> -->\n          <input>\n    </div>\n</form>\nThis issue is duplicate of https://github.com/DevExpress/testcafe-hammerhead/issues/1434.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. I cannot reproduce this issue.\nhttps://www.screencast.com/t/OY7eggILpgW. Issue in testcafe-hammerhead. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. Hi @amits1995,\nI've reproduced this issue and will investigate it. I think it can be related to a redirect from https://app.rookout.com/ to https://app.rookout.com/web_login. You can use one of two workarounds:\n1. Change the target page from .page`https://app.rookout.com/` to .page`https://app.rookout.com/web_login`\n2. Place the .navigateTo(\"/web_login\") step before .takeScreenshot(\"pre-login\"). Hi @artykr,\nI've reproduced the problem and created the separate issue in our proxy repository.. Hi @berrutti,\nI've reproduced this problem and will investigate it.. The hasScroll function works incorrectly in IE11 if an element has the overflow-x: auto CSS attribute only. In other browsers, computedStyle.overflowX and computedStyle.overflowY equal auto by default. In IE11, computedStyle.overflowY equals visible. Test is passed if I change the overflow-x: auto line to overflow-y: auto in example higher.. http://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/specifying-which-requests-are-handled-by-the-hook.html#filtering-by-a-regular-expression\n\nString is used instead of regexp.. @testcafe-build-bot \\retest. @bhreinb \nThe Promise.all function waits until all promises are resolved, but this doesn't guarantee that an action order will be preserved and this code can lead to an error. We have a similar feature request. You can vote for it using the following link: [Feature request] Add .pipe method similar to Rxjs 6 to TestController.. Hi @qualityshepherd,\nCould you please provide parameters of the cookie you set?\nExample: key=value;Path=/some/path.\nI think your problem can be related to the path parameter.\nThe path parameter equals /some/path by default If you set the key=value cookie (without path) on the /some/path/123 page.\nThis cookie is not available on the /some page.. Hi @qualityshepherd,\nSounds strange that you can see this cookie at the first time, because you set it with the HttpOnly flag. This cookie cannot be available on the client side via the document.cookie property.. @testcafe-build-bot \\retest. Hi @Juansasa,\nI cannot reproduce this issue in Chrome - please see my test below. \nWould you please specify the browser you are using and the tested page's URL, or create a sample page where I can reproduce the issue?\n```js\nimport { ClientFunction } from 'testcafe';\nfixture fixture\n    .page http://devexpress.github.io/testcafe/example;\nconst getLocalStorageItem = ClientFunction(key => localStorage.getItem(key));\ntest('local storage', async t => {\n    await t.eval(() => localStorage.setItem('key', 'value'));\n    await t.expect(getLocalStorageItem('key')).eql('value');\n    await t.wait(2000);\n    await t.eval(() => location.reload(true));\n    await t.wait(2000);\n    await t.expect(getLocalStorageItem('key')).eql('value');\n});\n. Hi @marchcorpse,\nI've reproduced this issue and I will fix it soon.. Hi @ColCh,\nI've investigated this issue and I cannot reproduce it. I have Node.js `v10.5.0`. Could you please update your Node.js to `v10.5.0` or higher?. Hi @andrewlw89,\nThis issue related to https://github.com/DevExpress/testcafe-hammerhead/issues/1376.. Hi @gelyar67,\nIt's a duplicate of #2438, that was fixed in the latest version - `0.20.5`. Could you please try updating to this version?. Hi @emildimitrov,\nI've reproduced this problem and will investigate it.. Related to https://github.com/DevExpress/testcafe-hammerhead/issues/1702. fixed in https://github.com/DevExpress/testcafe-hammerhead/pull/1709. Hi @sijosyn,\nThis issue is related to https://github.com/DevExpress/testcafe-hammerhead/issues/1380.\nThe tested site sends two requests:http://aperture.synacor.net//?_uri=component%3A%2F%2FSynacor%2FGen4%2FConfiguration%2FComponents%2FWeather%2F%3Fparse_active%3D0&_action=locateandhttp://aperture.synacor.net//?_uri=component%3A%2F%2FSynacor%2FGen4%2FConfiguration%2FComponents%2FModal%2FEmailCampaign%2F&_action=display``\nThese requests are received with a wrong body if headers are lowercased.. The fix is published in0.22.1-alpha.3.. We have not established any exact dates yet. Any personal estimate may be misleading, so I cannot currently tell you the precise date.. @cmbirk, I see that you've created the [new issue](https://github.com/DevExpress/testcafe/issues/3301). You are right. Let us continue the conversation there.. Hi @vvedachalam,\nI've reproduced this problem and created the [issue](https://github.com/DevExpress/testcafe-hammerhead/issues/1722) in thetestcafe-hammerheadrepository.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. Hi @Sue1024,\nCan it relate to the fact that the proxy subdomain isuatratesstreaming2but on the original page the subdomain isuatratesstreaming1?. FireFox on iOS has different behavior than other browsers. Since thesrcproperty of theHTMLImageElementobject is not configurable, we are not able to overcome this issue on our side. We will wait until a new FireFox version has similar behavior as other browsers.. @sophiecdd\nI'm unable to provide you with any time frame as any personal estimate may be misleading. Once we get any results, I assure you that we will notify you.. I cannot reproduce this behavior. I created a test server and tested if an uploaded file name is sent to the server.\nFor debugging you can download theexample.ziparchive.\nThe command for starting the server:node upload-server.jsThe command for starting the test:testcafe chrome test-upload.js`\nexample.zip\n. @hex0cter\nThe fix was published in testcafe@0.23.3-alpha.1.. Please try to use our latest alpha version (testcafe@0.23.3-alpha.2) and keep us informed of your progress.. Thank you for the update. This is great news! I'm happy to hear that the issue is resolved.. Related to https://github.com/DevExpress/testcafe-hammerhead/issues/1806. @testcafe-build-bot retest. @testcafe-build-bot retest. Could you please capture a screenshot and show response headers for slow requests?. Thanks for the provided information about response headers. However, the information is currently insufficient to determine the cause of the issue and find a precise solution. Please clarify the steps to replicate the issue so that we will be able to provide you with any solution.. Thank you for the provided information. No, it is just my supposition. TestCafe can be installed locally and globally at the same time. To check the exact version that is used for running tests, you can verify your version by running\u00a0this command:\ncmd\ntestcafe --version\nWe would need a sample to reproduce this behavior and thoroughly research it.. @testcafe-build-bot retest. It is a duplicate of the issue on StackOverflow. I've already answered there.. The fix was published in testcafe@0.23.3-alpha.1.. @testcafe-build-bot retest. @grittershub\nThe fix was published in testcafe@0.23.3-alpha.1.. @grittershub\nThe fix was published in testcafe@0.23.3-alpha.1.. Would you please send an example of how you implement this scenario using the Protractor API?\nWe will modify it using Testcafe API. As for the sample from the article you provided, it can also be rewritten using Testcafe API as follows:\n```js\nconst items = Selector('.items li');\nawait t\n    .expect(items.count).eql(3)\n    .expect(items.nth(0).innerText).eql('First');\n. Feel free to contact us if you need further assistance.. @testcafe-build-bot retest. Thank you for sharing your idea with us. We will discuss it and consider implementing it in one of our future product updates.. @HariHaraReddyD\nLet's continue discussing this issue in the context of your StackOverflow thread to avoid any misunderstanding: https://stackoverflow.com/questions/53542205/testcafe-page-object-model-accessing-all-the-instantiated-objects-with-a-comm/53557657#53557657. Testcafe allows you to use [multiple reporters](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-r-namefile---reporter-namefile). You can simultaneously save results to an xml file and write to `stdout`. For example, you can try to run tests using the `-r spec,xunit:report.xml` flag configuration from our [documentation](https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-r-namefile---reporter-namefile).. The described behavior is unsupported. Meta is a key and just a value that should not be parsed. You can use a set of metadata entries if you want to combine device types, for example:js\ntest.meta({ mobileDevice: 'true', webDevice: 'true' })(Test 1, async t => { ... });\ntest.meta({ mobileDevice: 'true' })(Test 2, async t => { ... });\ntest.meta({ webDevice: 'true' })(Test 3, async t => { ... });\nand use the following arguments:\n--test-meta webDevice=true\n--test-meta mobileDevice=true\n--test-meta webDevice=true,mobileDevice=true\n--test-meta mobileDevice=true,webDevice=true\n```\nReference links:\nSpecifying Testing Metadata\n--test-meta . Thank you for your inquiry. This issue looks like a question that would be best asked on StackOverflow - an amazing platform for users to ask and answer questions.\nWe try to keep the GitHub issues tracker for bugs and feature requests only (see also: Contributing).\nIf you think\u00a0that this issue is a bug, feel free to open a new issue, but please make sure to follow the bug template. Thank you in advance.. It seems like the error is related to the code of your site and to skip it, you need to use the --skip-js-errors flag, which you are currently using incorrectly. You need to pass it as a TestCafe flag, but you are passing it as a Chrome flag.. The problem is connected not to the spaces in the path to a browser, but to a way the browser is run. Instead of the path:prefix, use a browser alias (chrome: in your case) and get rid of apostrophes. It works on my side with the following argument:\n\"chrome:C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe:headless\". I cannot reproduce this error. I am afraid this information is not sufficient to find the cause of the issue. Could you please provide a page or a small example so that we can reproduce it on our side?. @sophiecdd \nThis information is not sufficient to find the cause of the issue.\nWould you clarify if you reproduced this issue without the takeScreenshot action call or with the same steps but without Testcafe.\nIn addition, try using the --skip-js-errors flag.\nIf this does not help, please provide a page or a small example so that we can reproduce it on our side.. @jwineman,\nI've investigated your site and discovered that the\u00a0Syntax error\u00a0error occurs on your site without Testcafe. Your code contains the arrow functions that aren't supported by Internet Explorer. You can use the\u00a0--skip-js-errors\u00a0flag to skip this error.. + testcafe-hammerhead@14.4.7. @guptaakhil, Thank you for the details. We've reproduced the problem and it is really a duplicate of the\u00a0DevExpress/testcafe-hammerhead#1890\u00a0issue. We will fix it in the current sprint. Feel free to reopen this issue if you encounter any problem with that.. Thank you for providing additional details.\nI'm happy to hear that you have figured out how to resolve the original issue.\u00a0However, I agree that the current\u00a0behavior is not optimal and we need to improve our user agent pattern generation algorithm\u00a0because at the moment the user agent string is identical in both scenarios you described. That is why you faced a screenshot collision issue when running your test cases in multiple browsers with different emulation arguments.\nI've created a separate issue where we will improve this. You are welcome to track it to see our progress with this optimization.. FPR. @vvedachalam,\nI'm unable to provide you with any time frame as any personal estimate may be misleading. We need time to investigate this problem. Once we get any results, I assure you that we will notify you.. @feugy,\nYou are welcome! We'll inform you when the\u00a0new version with this fix is available.. @feugy,\nThe problem was fixed in testcafe@1.0.0-alpha.3.. This behavior is by design.\nTests are executed in parallel and test finishing is strictly determined by the order from the file. It helps to avoid changing the test order in test reports due to non-deterministic performance and test run speed in different browsers.\nAs for the beforeEach functionality, I suggest you create a separate issue if you have a problem with.. Thank you for providing this information. However, it is not sufficient to find the cause of the issue and provide a solution. There can be different causes and without having access to your page or code, I\u00a0cannot give you any advice. If possible, please provide us with access to your web site, so we can diagnose the issue.. The information you provided is insufficient for me to determine the cause of the issue and find a precise solution. Please make sure to fill in all the fields with requested information.. Thank you for the screenshot. It looks like it's a duplicate of DevExpress/testcafe-hammerhead#1731.. Thank you for sharing your idea with us. We will discuss it and consider implementing it in one of our future product updates.. Thank you for providing this information. However, it is not sufficient to find the cause of the issue and provide a solution. There can be different causes and without having access to your page or code, I\u00a0cannot give you any advice. If possible, please provide us with access to your web site, so we can diagnose the issue.. Thank you for providing\u00a0additional information.\nI still cannot reproduce this issue. I've recorded a video to show my steps. Would you please check out the issue on another machine to see if it is reproducible there? Thank you in advance.\nvideo.zip\n. Thank you for reaching out to us and submitting this issue. We didn't face\u00a0this issue previously. It looks like it is related to your machine and your proxy configuration, but not TestCafe. This means that the information you provided is insufficient for me to determine the cause of the issue and find a precise solution.\u00a0Feel free to reopen this thread if you have a clear\u00a0reproduction scenario, which we can follow to examine this issue.. The cause of this issue is the same as we discussed in your other thread:\u00a0https://github.com/DevExpress/testcafe/issues/3483. We will look into it\u00a0in the context of that thread.. You can use the solution from the\u00a0Run Same Testcafe tests with different URLs per environment\u00a0question.\nOr you can use process.env to pass a base url from the runner or docker to test code. \nThe test example:\n``js\nfixturefixture.page${process.env.baseUrl}/documentation/getting-started/`;\ntest('test', async t => {\n    await t.click('body');\n});\nThe runner example:js\nconst createTestCafe = require('testcafe');\ncreateTestCafe()\n    .then(tc => {\n        process.env.baseUrl = 'https://devexpress.github.io/testcafe';\n    tc.createRunner()\n        .src('test.js')\n        .browsers('chrome')\n        .run()\n        .then(() => tc.close());\n});\n\n```\nDocker documentation:\nhttps://docs.docker.com/engine/reference/run/#env-environment-variables\nAlso, we try to keep the GitHub issue tracker for bugs and feature requests only (see also: Contributing). This issue looks like a question that would be best asked on StackOverflow - an amazing platform for users to ask and answer questions.. Thank you for the report. We are aware of this behavior and working on it. It is a duplicate of\u00a0DevExpress/testcafe-reporter-xunit#2.. Thank you for bringing this to our attention. However, it's not quite clear how this 'react' inquiry is related to TestCafe. If you believe that it is related to TestCafe and it is an issue, please fill the bug template and update the description with full information about your problem, so we can examine it and put you on the right track.\nIf you simply want to ask a question, I recommend that you forward it on StackOverflow - an amazing platform for users to ask and answer questions. We try to keep the GitHub issue tracker for bugs and feature requests only.. @VasilyStrelyaev I think this question is about testcafe but not testcafe-hammerhead. I don't know how it works in testcafe.\n@AndreyBelym ping. I think the getWindowDimensionsInfo function must be shared and used in this place.. because eslint rule finds the children.length place but children is not HtmlCollection. I think it is faster than the getElementValue or setElementValue functions because it runs without the isTextAreaElement and isInputElement conditions.. We override the text property descriptors only for anchor and script elements.. js\nawait Promise.all(this.pendingBrowserJobs.map(job => job.abort());. The location.host already contains port. location.host === location.hostname + ':' + location.port.\nI suggest this:\njs\nvar origin = location.origin || location.protocol + '//' + location.host;. ",
    "rafakwolf": "With typescript can be more easy to learn the framework, the type definitions are a documentation itself. \n:D. export var login = async t => {\n    await t. \n            typeText(loginInput,'sgcp@sgcp.com.br'). // <--- This input is not found\n            typeText(password,'123456').\n            click(loginBtn).\n            navigateTo('http://localhost:3000/#/fiel-cadastro/comunidade/');    \n};\nThanks\n. I'm trying this way too...\n```js\nimport { Selector } from 'testcafe';\nfixture Lan\u00e7amento D\u00edzimo Simples\n    .page http://localhost:3000/#/login;\ntest('Abrir Tela D\u00edzimo', async t =>{\nconst emailInput = Selector(n => document.getElementsByName('email'));\nconst passInput = Selector(n => document.getElementsByName('password'));\nconst loginBtn = Selector(n => document.getElementsByName('commit'));\n\nawait t \n    .typeText(emailInput, 'sgcp@sgcp.com.br')\n    .typeText(passInput, '123456')\n    .click(loginBtn);\n\nconst location = await t.eval(() => window.location);\n\nawait t.expect(location.pathname).eql('/#/home');\n\n});\n```\nvia chrome console i get this:\n\nbut the test result is:\n\nAm I doing something wrong?\nThanks for your attention.\n. I'm trying this way too...\n```js\nimport { Selector } from 'testcafe';\nfixture Lan\u00e7amento D\u00edzimo Simples\n    .page http://localhost:3000/#/login;\ntest('Abrir Tela D\u00edzimo', async t =>{\nconst emailInput = Selector(n => document.getElementsByName('email'));\nconst passInput = Selector(n => document.getElementsByName('password'));\nconst loginBtn = Selector(n => document.getElementsByName('commit'));\n\nawait t \n    .typeText(emailInput, 'sgcp@sgcp.com.br')\n    .typeText(passInput, '123456')\n    .click(loginBtn);\n\nconst location = await t.eval(() => window.location);\n\nawait t.expect(location.pathname).eql('/#/home');\n\n});\n```\nvia chrome console i get this:\n\nbut the test result is:\n\nAm I doing something wrong?\nThanks for your attention.\n. At the moment, i can't provide the URL, because it is a dev application... \nBut, for some more info, it is an AngularJS 1.6 app...\nin my opinion my login page is not all renderized yet, when the testcafe looks for componentes in the DOM tree...\nthanks for now. At the moment, i can't provide the URL, because it is a dev application... \nBut, for some more info, it is an AngularJS 1.6 app...\nin my opinion my login page is not all renderized yet, when the testcafe looks for componentes in the DOM tree...\nthanks for now. ",
    "dlangerenken": "are there any updates on this? any planned release date? @AndreyBelym . To add to @talentedunicorn the following function can do anything that is supported by scrollBy\ntypescript\nexport const scroll = ClientFunction((selector: string, options: ScrollToOptions) => {\n  const elem = document.querySelector(selector);\n  if (elem) {\n    elem.scrollBy(options);\n  }\n});. @AndreyBelym is there another way for returning very large objects? #2618 is not sufficient since I need to transfer objects of that size. I do code-coverage analysis using istanbul-instrumenter. The coverage is logged in window.coverage and I need to access this after a successful test-run. . Since I can stringify my object, I wrote a helper function that checks the size first, and then I call multiple times into the browser and copy the data I need:\n```typescript\nconst maximumObjectSize = 1024 * 1024 * 4.0; // 4 mb - to be sure\nexport const codeCoverageSize = ClientFunction(() => {\n  const json = JSON.stringify((window as any).coverage);\n  (window as any).coverage_json = json;\n  return json.length;\n});\nexport const codeCoverage = ClientFunction((start: number, end: number) => {\n  return (window as any).coverage_json.substring(start, end);\n});\nexport const collectCodeCoverage = async (fileName = randomNotebookTag()) => {\n  const size = await codeCoverageSize();\n  const splits = Math.ceil(size / maximumObjectSize);\n  let coverageJson = '';\n  for (let i = 0; i < splits; i++) {\n    const start = i * maximumObjectSize;\n    coverageJson += await codeCoverage(start, start + maximumObjectSize);\n  }\n  console.log(coverageJson);\n};\n```. Hey @AndreyBelym, as stated in #1110, this check might help to throw errors, but it's not helping the underlying problem that an object/array might be of this size and we do want to read it.\nI do code-coverage analysis using istanbul-instrumenter. The coverage is logged in window.coverage and I need to access this after a successful test-run.. @AndreyBelym is there a way to force the download in firefox, e.g. automatically accepting the dialog?. Seeing similar issues in our Jenkins/Docker environment. \nIn 0.23.2 it just hangs after finishing the tests. I went with 0.21.1 as well and don't see any issues here.\nI also tested versions between 0.23.2 and 0.21.1. 0.21.1 - 0.23.1 seem to work fine - only 0.23.2 hangs for me.. I have a similar issue in a Jenkins/docker environment that runs testcafe in the CI gate. It also hang and downgrading to 0.21.1 helped as well.. I have a similar issue in a Jenkins/docker environment that runs testcafe in the CI gate. It also hang and downgrading to 0.21.1 helped as well.. While this works great for chrome:headless - is there anything similar for firefox:headless? @AlexKamaev . Ok will do! . Thanks @Farfurix . This is my temporary hack:\ntypescript\nexport const click = ClientFunction((selector: string) => {\n  const elem = document.querySelector(selector) as HTMLElement;\n  if (elem) {\n    elem.click();\n  }\n});. @AndreyBelym not sure if related, but when I tried to upgrade from 1.0.0 to 1.1+ several issues appeared that seem to indicate clicking is no longer possible. I'd prefer not to use my workaround for all these scenarios if there is a better way!\nThanks!!. Thanks, I will try this on Monday. Will close for now and reopen when it gives not the expected result. ",
    "Dtphelan1": "Has this been implemented? I'm running into issues where tests fail because of an overlapping element has a parent who has 'position':'fixed', and one way I could work around this would be to use t.pullDown to the bottom of the page manually, instead of relying on testCafe to find it automatically. . ",
    "AlisarDius": "Hello guys, \nI'm working with Testcafe API for like a month. I've just encountered the issue that Testcafe cannot click on pagination number at the bottom of our application because the element is in overflow and testcafe shows error that the element is not visible. t.hover doesn't work for me. And t.pressKey('end') also not. I need this scrolling functionality to be implemented. \nAlso I noticed that the scrolling acts weird. If I scroll down at the bottom, it immediately jumps back up. Basically I need to spam the scrolling wheel down while Testcafe waits for the element to appear and then it usually works. Therefore, I'm not sure how successful would the t.pullDown action would be, but hopefully it would be enough.\nKinds regards,\nLibor. I have the same issue. I'm trying to click on page 2 button positioned at the bottom of a long page. It works ok on remote device with Safari, but bugs out on PC with Chrome. The moment when the element is supposed to be clicked the page is scrolled to the top and the element is not found. \nThis is the structure of the DOM tree. Unfortunately, I cannot share the page.\napp > div > div > div > div:nth-child(2) > div:nth-child(3) > div > div > div.paginator-container > ul > li:nth-child(4) > a.",
    "talentedunicorn": "I've been using ClientFunction wrapped in a helper function that I import in my tests. The whole snippet looks like this\njs\nexport const scroll = ClientFunction((x, y) => window.scrollBy(x, y))\nWhich i will letter use like so for vertical scrolling:\njs\ntest('something that needs to scroll', await t => {\n....\nawait scroll(0, divHeight);\nexpect(....).ok()\n})\n. ",
    "moffsugita": "@AndreyBelym \nit is\n```\nWarnings (5):\n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at /Users/moff/Documents/react_e2e/my-fixture/safari/2018-12-13/adl-detail-compare-monthly-right-screen.png, because the\n  page area mark with ID 1580351208 is not found in the screenshot.\n      at _callee$ (/Users/moff/Documents/react_e2e/node_modules/testcafe/lib/screenshots/crop.js:95:31)\n      at tryCatch (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:62:40)\n      at Generator.invoke [as _invoke] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:114:21)\n      at step (/Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n      at /Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n      at \n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at /Users/moff/Documents/react_e2e/my-fixture/safari/2018-12-13/adl-detail-compare-right-2018\u5e7411\u670808\u65e5-screen.png, because\n  the page area mark with ID 2567174172 is not found in the screenshot.\n      at _callee$ (/Users/moff/Documents/react_e2e/node_modules/testcafe/lib/screenshots/crop.js:95:31)\n      at tryCatch (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:62:40)\n      at Generator.invoke [as _invoke] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:114:21)\n      at step (/Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n      at /Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n      at \n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at /Users/moff/Documents/react_e2e/my-fixture/safari/2018-12-13/adl-detail-compare-right-2018\u5e7411\u670814\u65e5-screen.png, because\n  the page area mark with ID 2557394015 is not found in the screenshot.\n      at _callee$ (/Users/moff/Documents/react_e2e/node_modules/testcafe/lib/screenshots/crop.js:95:31)\n      at tryCatch (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:62:40)\n      at Generator.invoke [as _invoke] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:114:21)\n      at step (/Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n      at /Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n      at \n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at /Users/moff/Documents/react_e2e/my-fixture/safari/2018-12-13/adl-detail-compare-right-2018\u5e7411\u670818\u65e5-screen.png, because\n  the page area mark with ID 3401677251 is not found in the screenshot.\n      at _callee$ (/Users/moff/Documents/react_e2e/node_modules/testcafe/lib/screenshots/crop.js:95:31)\n      at tryCatch (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:62:40)\n      at Generator.invoke [as _invoke] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:114:21)\n      at step (/Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n      at /Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n      at \n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at /Users/moff/Documents/react_e2e/my-fixture/safari/2018-12-13/adl-detail-compare-right-2018\u5e7411\u670830\u65e5-screen.png, because\n  the page area mark with ID 3583518313 is not found in the screenshot.\n      at _callee$ (/Users/moff/Documents/react_e2e/node_modules/testcafe/lib/screenshots/crop.js:95:31)\n      at tryCatch (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:62:40)\n      at Generator.invoke [as _invoke] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (/Users/moff/Documents/react_e2e/node_modules/regenerator-runtime/runtime.js:114:21)\n      at step (/Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n      at /Users/moff/Documents/react_e2e/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n      at \nMake changes in the source files or press ctrl+r to restart test run.\n. I hope. `.resizeWindow` can't. I hope. `.resizeWindow` can't.\nyarn --version\n1.5.1\n``Failed to find a DNS-record for the resource at \"http://localhost:3000/favicon.ico\".`. ",
    "IgnatovDan": "I hope you will update the https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/getting-started/index.md topic:\n\nMake sure that Node.js and npm are installed on your computer, then run a single command:\nnpm install -g testcafe\n\nSuch code and docs contradiction introduces unnecessary difficulties to investigation process that can take a long time. All the 'bin', 'node_modules\\testcafe' and other approaches are caused by that text in your docs.\n. That doc specify this command line to install testcafe:\nnpm install testcafe\nand I have encountered difficulties when running scripts from that doc after I have installed testcafe with this command line.\nAndreyBelym committed that that command line should not be used and suggested another command line:\nnpm install testcafe@alpha\nWith this command line I have successfully finished the first test from that topic.\nSo, it's obvious that the command line and test scripts are related and should be consistent but currently they are not and it creates difficulties at the very first stages.\n. I apologize for the lost '-g', it was a typo.\nAnd, I understand that there are the 'released' and 'dev' versions, but...\nI have tried the 'npm install -g testcafe' command on a clear VM with the following results:\n```\nc:\\Projects>npm install -g testcafe\nnpm WARN deprecated tough-cookie@1.1.0: ReDoS vulnerability parsing Set-Cookie https://nodesecurity.io/advisories/130\nnpm WARN deprecated CSSselect@0.4.1: the module is now available as 'css-select'\nnpm WARN deprecated CSSwhat@0.4.7: the module is now available as 'css-what'\n\nws@0.4.32 install C:\\Users\\Admin\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\ws\n(node-gyp rebuild 2> builderror.log) || (exit 0)\n\nC:\\Users\\Admin\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\socket.io\\node_modules\\socket.io-client\\node_modules\\ws>if not defined npm_config_node_gyp (node \"C:\\nodejs\\node_modules\\npm\\bin\\node-gyp-bin\\....\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild )  else (node \"\" rebuild )\ntestcafe@15.1.3 C:\\Users\\Admin\\AppData\\Roaming\\npm\\node_modules\\testcafe\n\u251c\u2500\u2500 node-int64@0.3.0\n\u251c\u2500\u2500 async@0.2.6\n\u251c\u2500\u2500 buffer-crc32@0.2.3\n\u251c\u2500\u2500 webauth@0.1.1\n\u251c\u2500\u2500 mime@1.2.11\n\u251c\u2500\u2500 revalidator@0.1.5\n\u251c\u2500\u2500 node-uuid@1.3.3\n\u251c\u2500\u2500 iconv-lite@0.4.11\n\u251c\u2500\u2500 tough-cookie@1.1.0\n\u251c\u2500\u2500 ejs@0.8.4\n\u251c\u2500\u2500 useragent@2.1.7 (lru-cache@2.2.4)\n\u251c\u2500\u2500 markdown@0.5.0 (nopt@2.1.2)\n\u251c\u2500\u2500 moment@1.7.0\n\u251c\u2500\u2500 uglify-js@1.2.6\n\u251c\u2500\u2500 whacko@0.17.4 (lodash@2.4.2, parse5@1.5.1, CSSselect@0.4.1, domutils@1.5.1)\n\u251c\u2500\u2500 node-zip@1.1.1 (jszip@2.5.0)\n\u251c\u2500\u2500 express@3.2.5 (methods@0.0.1, fresh@0.1.0, range-parser@0.0.4, cookie-signature@1.0.1, buffer-crc32@0.2.1, commander@0.6.1, cookie@0.1.0, mkdirp@0.3.4, send@0.1.0, debug@2.2.0, connect@2.7.10)\n\u2514\u2500\u2500 socket.io@0.9.13 (base64id@0.1.0, policyfile@0.0.4, redis@0.7.3, socket.io-client@0.9.11)\n```\nThen, I started the first test from the GettingStarted topic:\n``\nfixtureGetting Started`\n    .page('http://testcafe.devexpress.com/example');\ntest('My first test', async t => {\n    // Test code\n});\n```\nand got the following results:\nc:\\Projects>testcafe ie test1.js\n'testcafe' is not recognized as an internal or external command,\noperable program or batch file.\nI have not encountered this difficulty when using the 'npm install -g testcafe@alpha' command and test was completed with the following results:\n```\nc:\\Projects>testcafe ie test1.js\n Running tests in:\n - IE 11.0.0 / Windows 10 0.0.0\nGetting Started\n \u221a My first test\n1 passed (2s)\n```\nFor more details see the attached file with results of the same steps: \ninstall_testcafe_alpha.txt\nI hope this information will help you investigate this newby' difficulty and avoid it even at this development stage when release is not published yet because this repository is marked as public.\n. Thank you. I have updated my test and it passed.\nI hope you will update the following text in the https://github.com/DevExpress/testcafe/blob/master/docs/articles/documentation/getting-started/index.md topic:\n\n.typeText('#developer-name', 'John Smith')\n\nAnd, I hope you will check each other script in this topic to be sure that noone will encounter difficulties at this very first stage when reviewing capabilities of your product.\n. Anyway, I have reviewed your next test with the ' await getElementById' command and it fails with the \"getElementById is not defined\" error:\nC:\\Users\\Admin>testcafe ie C:\\Projects\\test1.test.js\n Running tests in:\n- IE 11.0.0 / Windows 10 0.0.0\nGetting Started\n  \u00d7 My first test\n1) ReferenceError: getElementById is not defined\n```\n  Browser: IE 11.0.0 / Windows 10 0.0.0\n  5 |    await t\n  6 |        .typeText('#Developer_Name', 'John Smith')\n  7 |        .click('#submit-button');\n  8 |\n  9 |    // Use the Selector function to get access to the article header\n\n\n10 |    const articleHeader = await getElementById('article-header');\n     11 |\n     12 |    // Obtain the text of the article header\n     13 |    const headerText = articleHeader.innerText;\n     14 |});\n\n at <anonymous> (C:\\Projects\\test1.test.js:10:33)\n\n```\n1/1 failed (5s)\nWould you please clarify how to manage this error?\n. Anyway, I have reviewed your next test with the ' await getElementById' command and it fails with the \"getElementById is not defined\" error:\nC:\\Users\\Admin>testcafe ie C:\\Projects\\test1.test.js\n Running tests in:\n- IE 11.0.0 / Windows 10 0.0.0\nGetting Started\n  \u00d7 My first test\n1) ReferenceError: getElementById is not defined\n```\n  Browser: IE 11.0.0 / Windows 10 0.0.0\n  5 |    await t\n  6 |        .typeText('#Developer_Name', 'John Smith')\n  7 |        .click('#submit-button');\n  8 |\n  9 |    // Use the Selector function to get access to the article header\n\n\n10 |    const articleHeader = await getElementById('article-header');\n     11 |\n     12 |    // Obtain the text of the article header\n     13 |    const headerText = articleHeader.innerText;\n     14 |});\n\n at <anonymous> (C:\\Projects\\test1.test.js:10:33)\n\n```\n1/1 failed (5s)\nWould you please clarify how to manage this error?\n. I lost the following lines in my test:\n```\nimport { Selector } from 'testcafe';\n// Declare the parameterized Selector function\n// to get access to a DOM element identified by the id attribute\nconst getElementById = Selector(id => document.querySelector(#${id}));\n```\nWith this code test fails with the \"Cannot read property 'innerText' of null\" message:\nc:\\Projects>testcafe ie C:\\Projects\\test1.js\n Running tests in:\n- IE 11.0.0 / Windows 10 0.0.0\nGetting Started\n  \u00d7 My first test\n1) TypeError: Cannot read property 'innerText' of null\n```\n  Browser: IE 11.0.0 / Windows 10 0.0.0\n 14 |\n 15 |    // Use the Selector function to get access to the article header\n 16 |    const articleHeader = await getElementById('article-header');\n 17 |\n 18 |    // Obtain the text of the article header\n\n\n19 |    const headerText = articleHeader.innerText;\n     20 |});\n\n at <anonymous> (C:\\Projects\\test1.js:19:24)\n\n```\n1/1 failed (15s)\n. I lost the following lines in my test:\n```\nimport { Selector } from 'testcafe';\n// Declare the parameterized Selector function\n// to get access to a DOM element identified by the id attribute\nconst getElementById = Selector(id => document.querySelector(#${id}));\n```\nWith this code test fails with the \"Cannot read property 'innerText' of null\" message:\nc:\\Projects>testcafe ie C:\\Projects\\test1.js\n Running tests in:\n- IE 11.0.0 / Windows 10 0.0.0\nGetting Started\n  \u00d7 My first test\n1) TypeError: Cannot read property 'innerText' of null\n```\n  Browser: IE 11.0.0 / Windows 10 0.0.0\n 14 |\n 15 |    // Use the Selector function to get access to the article header\n 16 |    const articleHeader = await getElementById('article-header');\n 17 |\n 18 |    // Obtain the text of the article header\n\n\n19 |    const headerText = articleHeader.innerText;\n     20 |});\n\n at <anonymous> (C:\\Projects\\test1.js:19:24)\n\n```\n1/1 failed (15s)\n. ",
    "BuruY": "Any updates?. Will we see an implementation in the near future? I still don't get why it is not implemented yet. ",
    "JoshuaKGoldberg": "\ud83d\udc4b @AlexanderMoskovkin @inikulin I'm interested in contributing this feature! It seems like this is necessary for having user-defined functions run before & after all tests, right? (my use case)\nQuestions:\n Would you accept a PR adding this feature in?\n If so, do you have any advice or preferences on API or implementation details?\nAs a rough proposal, how about something like:\n```js\nimport { allFixtures, allTests } from \"testcafe\";\nallFixtures.before(async f => { / ... / });\nallFixtures.beforeEach(async f => { / ... / });\nallFixtures.after(async f => { / ... / });\nallFixtures.afterEach(async f => { / ... / });\nallTests.before(async t => { / ... / });\nallTests.beforeEach(async t => { / ... / });\nallTests.after(async t => { / ... / });\nallTests.afterEach(async t => { / ... / });\n```. > Could you please elaborate on the place from where we should call these methods.\nA couple of equivalents in other test frameworks:\n\nJasmine: helpers\nJest: setupFilesAfterEnv\n\nFor TestCafe, my ideal vision would be something equivalent. How about a --testSetup CLI witch equivalent to -app (and corresponding testSetup A optionPI & configuration file)? The above code snippet would go in that file; each test file would then be run with the expectation that the code in any testSetup file(s) was run in that environment.\nA little more concrete of an example:\n```js\n// tests/setup.js\nimport { allTests } from \"testcafe\";\nallTests.beforeEach(() => {\n    console.log = () => {\n        throw new Error(\"Don't use the console, silly!\");\n    };\n});\n```\nshell\ntestcafe chrome tests/**/*.test.js --testSetup tests/setup.js. ",
    "PriyoBh": "Hi - do you guys have a timeline to implement this? Really looking forward to the fixture.userole() feature to be added. I have a subset of tests in the same functional area - they require the same login and the starting page is same for running that group of tests. So I need to do userole, navigate to that page, wait till the page is loaded properly - just once before running those tests. At the moment - I cannot do it in the fixture level as it cannot access the DOM. I have to use test.beforeEach() -- but this is a redundancy for my purpose. Thanks - it worked. It was my mistake - for not inspecting the DOM properly. I am a but curious I thought this line from my code should have generated an exception.\nconst widgetParagraphElement = await Selector(\".container\").with({\n      visibilityCheck: true\n    })();\nInstead the variable widgetParagraphElement had a null value.\nbased on your documentation - https://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/selector-options.html#optionsvisibilitycheck\nit says there - \"If the target element is not visible, the selector throws an exception in all these cases.\". ",
    "FDiskas": "what about nested tests? \n:black_small_square:\n-> :black_small_square:\n-> -> :black_small_square:. ",
    "arubtsov": "I run it from bin directory with node testcafe chrome testname.js.\n. https://github.com/DevExpress/testcafe/blob/acb782f45c886b036a5a0e8ac72c338e9370791a/src/test-run/commands/validations/argument.js#L23\n/^https?$/i should fix the problem\n. @testcafe-build-bot retest. @testcafe-build-bot retest. FPR. ",
    "sirgallifrey": "+1 to having ability to delay or speed up certain actions. \n. Ohh I see.. Sorry I haven't searched for issues on testcafe-browser-tools\nIs there something I can do to help?\nMy wm info:\n```\nwmctrl -m\nName: GNOME Shell\nClass: N/A\nPID: N/A\nWindow manager's \"showing the desktop\" mode: N/A\n```. X11. yes, but they are a little big, I paste here anyway?\n. \nps aux\npacman -Q. :open_mouth: You know more about my OS setup than myself.. haha\nIn my 'gear menu' I have the options: GNOME, GNOME Classic and GNOME on Xorg. I was using the GNOME option and to test I changed to GNOME on Xorg but it had no effect and the ps aux still shows Wayland... \nI am the one who have to thank you @AndreyBelym \nSo it's not a bug then.\nIt's expected to not work on a EWMH-non-compliant window manager.\nI don't know if you guys have plans on supporting non EWMH window managers or not, but if you do I'm available to help if you need to test something . Docker Docs has it too, It's a link that lead to the relevant file on github. . ",
    "vzaidman": "these guys are managed to do it for some libraries:\nhttps://github.com/Kuniwak/html-dnd. @AlexanderMoskovkin \nBy the way. I contributed to the other project. You might want to see this code too:\nhttps://github.com/PowToon/html-dnd. please register at https://www.powtoon.com/ using email and then replace LOGIN_EMAIL and LOGIN_PASSWORD\n```\nimport {Selector} from 'testcafe'\nimport {times} from 'lodash'\nfixture Getting Started\n  .page https://www.powtoon.com/my-powtoons\nconst attSelect = (input, att, options) => Selector([${att}=\"${input}\"], options)\nconst email = YOUR_EMAIL\nconst password = YOUR_PASSWORD\ntest('Full Sanity', async t => {\n  await t\n    .maximizeWindow()\n    // Wait for the powtoon creation button to appear and create a new powtoon\n    // Login\n    .typeText('#email_login', email)\n    .typeText('#password_login', password)\n    .click('.button-main.btn-submit')\n    .click('#btn-blank')\n    .click('#styleChooser>div>span>svg', {speed: 0.01, timeout: 45000, visibilityCheck: true})\n// Decrease the slide length by 5 seconds\n  times(5, async () => {\n    await t.click(attSelect('decrease', 'data-spec-id'), {speed: 0.01})\n  })\nawait t\n  // Make sure the current slide length is 5 seconds\n    .expect(Selector('[data-id=\"timeline-axis\"]>div:first-child>div').count).eql(5) //should actually be 6\n// THIS AWAIT FIXES THE PROBLEM\n  // await t\n  // open the library on the characters tab\n    .click(attSelect('library-characters', 'data-id'))\n// open the first folder\n.click(attSelect('test-professionalcharactersthe-office-free', 'data-id'))\n\n// drag the first character to the editor\n.dragToElement(\n  attSelect('test-assetItem-characters-com.powtoon.styles.neighborhood.anim.01Hello', 'data-id'),\n  attSelect('current-slide-content', 'data-id')\n)\n\n// add another character with a click\n.click(\n  attSelect('test-assetItem-characters-com.powtoon.styles.neighborhoodethnic.anim.11Hello', 'data-id')\n)\n\n// select the element on the stage\n.click(attSelect('editor-selection-mouse-listener', 'data-id'))\n\n// rotate a character a little\n.drag(attSelect('rotate-top-left', 'data-handle'), -10, 50)\n\n// resize a character a little\n.drag(attSelect('test-scale-point-nwse', 'data-id'), -50, -50)\n\n// play\n.click(attSelect('test-play', 'data-id')).wait(500)\n\n// make sure there is an animation playing in the player\n.expect('#Animation_1').exists\n\n// pause\n.click(attSelect('test-play', 'data-id'))\n\n})\n. ok i edited the test above. please copy it again to reproduce.. ok in the end i found that the error is `.expect('#Animation_1').exists` but it took me some time to notice since i focused on the first tests instead.... I have\nUncaught TypeError: Cannot read property 'onBodyElementMutation' of undefined\n```\ntoo.\non a test case that worked on 0.19 but because of security issues i cant add publish it. ",
    "sagarvora": "Hi @AlexanderMoskovkin,\nThanks for this PR! drag now works in the latest alpha release.\nI encountered a bug in dragToElement.\nYou can test the following code:\n```\nimport { Selector } from 'testcafe';\nfixture Example page\n    .page http://demo.erpnext.com;\ntest('Check login', async t => {\n    const login_btn = Selector('#login_btn');\n    const task_icon = Selector('.case-wrapper[data-link=\"List/Task\"]');\n    const item_icon = Selector('.case-wrapper[data-link=\"List/Item\"]');    \nawait t\n    .click(login_btn)\n    .setTestSpeed(0.5)\n    .dragToElement(task_icon, item_icon)\n    .wait(1000)\n\n});\n```\nUpon execution of above code, you will notice that the Task Icon gets clicked after dragging.. The same issue is happening to me, but for localhost. I was trying to implement TestCafe + Nightmare for Travis but it's giving me this error.\nHere's the Travis log:\nhttps://travis-ci.org/sagarvora/frappe\nHere's the Travis config:\nhttps://github.com/sagarvora/frappe/blob/develop/.travis.yml\nHere's the code I wrote:\nhttps://github.com/sagarvora/frappe/blob/develop/login_test.js\nNote that the first three steps upto logging in are working, and hence I am being redirected to the /desk page.. @AlexanderMoskovkin I tried running the same script locally, it passed.. What could be the reason? :thinking: . @inikulin I have update the code and above issue. You can test it now.. Thanks @helen-dikareva! I am looking forward to this being fixed. Really liked your team's prompt response.. ",
    "Elric-pp": "Yes\uff0cjust act like chrome devtool. It is useful for css media query breakpoint.\n. Thx, so far so good. \ud83d\udc4d \n. Hi, @AlexanderMoskovkin\nIt's seems to be chrome's bug. \nThe test is pass on safari and firefox, but fails in chrome\nChrome Vesion: Chrome 56.0.2904 / Mac OS X 10.12.0\n. ",
    "lukasoppermann": "Ahh, okay, thanks. Maybe you could add a short \"how to\" to the docs?\n. Thanks, I am not 100% how to do it, I would be better suited to read the recipe than to write it. \ud83d\ude09 \n. ",
    "renancouto": "@lukasoppermann I run testcafe on local files using http-server as a simple server and concurrently to run both processes together and kill the server before exiting.\nconcurrently -r -k \"http-server\" \"http-server ./dist -p 4000 -s\" \"testcafe chrome ./test/acceptance/**\"\n. @AlexanderMoskovkin created a PR for that if you like: https://github.com/DevExpress/testcafe/pull/970\n. You're right!\n. I agree with you\n. Fixed!\n. ",
    "felipenmoura": "Interesting, thanks!\nBut in this case, I must specify both path and cmd...and defining the path is not an easy task to do if I want it to run it in many different machines (including travis, for example).\nIs there a way I could say \"chrome\" and the flags(cmd), perhaps?\n. Thanks @AlexanderMoskovkin, will try that, then.\n@inikulin I think that would be an amazing implementation (using quotes), this way we could even use two or more browsers, sending to each one, its own flags.\nAs for my situation, all I need is it to be opened in the browser as localhost. I noticed you start a server in my machine's IP in the given ports...do testcafe must open it as an IP address? I mean, localhost:port would work as well, and would allow people to even use their hosts file or rules for \"localhost\" special treatments (as in my case, from Service Workers spec).\n. Thank you @inikulin , I'm using it and it is working. I believe I will manage to have it published pretty soon :)\nWill keep you up to date to check on ways (still working on it) to test service workers.\n. ",
    "sdeprez": "I didn't find in the docs but after some digging of the source code, it seems that the following syntax is also supported:\nawait createTestCafe()\n  .src('file.ts')\n  .browsers('chrome --incognito --no-sandbox'). ",
    "jkswoods": "I'll have to agree with you on that one. The first option does seem like the best and will work in my case.\nThanks, @inikulin!\n. ",
    "jakearchibald": "Is the as method above part of the proposal, or something existing?\nNote that this may need to be two profiles rather than two windows. You may even want to test multiple windows of multiple profiles.\nas(user1) would work pretty well if user1 were created with new BrowserProfile(). Since a new profile implicitly means new window, you wouldn't need switchToWindow until you wanted to support multiple windows within the same profile.\n. ",
    "skogman": "Is this still on the list? Multiple browser window support would be awesome for things like auth0/google authentication. \nBtw, I love TestCafe <3. ",
    "Lukukas": "I really like testcafe, but this is something I would need to successfully test my application. Our application opens multiple windows and uses them to pass data around. I would also be curious to know the timeline for this particular feature as I'm still in the process of selecting a UI automation framework.. ",
    "MohamedRasool786": "@LavrovArtem\nI have faced issue while clicking on a #googleSignInn button. It doesn't redirect to the google POPUP page.Below I attached my code\nExpected Behaviour is to give my credentials in google popup page and then it should redirect to my homesite.\nThanks in advance\n`import { ClientFunction, Role, Selector } from 'testcafe';\nconst patchAuth = ClientFunction(() => {\nwindow['op' + 'en'] = function (url) {\nvar iframe = document.createElement('iframe');\niframe.style.position = 'fixed';\niframe.style.left = '100px';\niframe.style.top = '150px';\niframe.style.width = '600px';\niframe.style.height = '600px';\niframe.style['z-index'] = '99999999';;      \niframe.src = url;\niframe.id = 'auth-iframe';\n\ndocument.body.appendChild(iframe);\n\n};\n});\nconst googleAccUser = Role('https://merida-web.herokuapp.com/', async t => {\nawait patchAuth();\nawait t\n    .click(\"#LoggIn\")\n    .click(\"#googleSignInn\")\n    .switchToIframe('#auth-iframe')\n    .typeText('#identifierId', 'mohamed@cogzidel.com')\n     .click(\"#identifierNext\")\n     .typeText('#password', 'maduraiboys007')\n     .click(\"#passwordNext\")\n    .switchToMainWindow();\nawait Selector('#page-header-top-menu')();\n});\nfixture Merida E2E Testing\n.page https://merida-web.herokuapp.com/\n.beforeEach(async t => await t.useRole(googleAccUser));\ntest('first test', async t => {\nawait t.click(Selector('.dashboard-tab').nth(2));\n});`. @AndreyBelym \nThank you, I will try and update.. ",
    "qualityshepherd": "Um, this seriously needs to be on your front page! I mean, no way can I use your app unless this works. I wasted a lot of time trying out your tool--which I really liked--but this is an total deal breaker... ugh. . I'm trying to use djbreen7's solution to login once and run multiple tests while logged in. Ie. behavior that would normally be handled in a beforeAll. Sadly, Testcafe seems to log me out between tests, and thus, this solution fails. \nI tried using Roles as well... no joy. \nAny ideas on how to work around this? I really just want to login once, then run a couple tests (same file). \nThanks!. Ahhh... figured out the problem I was having with Roles. I'm using page objects and had a signInAsRole method that I was calling t.useRole(admin) in... that was no bueno. it seems useRole must be called in the test or beforeEach to work properly (ie. re-use one login for multiple tests). \nMy solution is now to have a roles.js that I export various roles from and import that file into my tests and call useRole with reckless abandon within. Eg.\n```\n// roles.js\nimport { Role } from 'testcafe';\nimport signInPage from '../pages/signInPage';\nexport const admin = Role(signInPage.url, async t => {\n        await signInPage.signIn('admin@example.com', 'password');\n    }, { preserveUrl: true });\n```\nAnd then...\n```\n// test.js\nimport { admin } from 'roles';\nfixture Sign In\n    test('should sign in', async t => {\n        await t.useRole(admin);\n...\n```. I'm seeing this currently on osx mojave; testcafe v1.1.0; safari 12.0.3; node v10.15.2. Yeah, that would be the hacky I spoke of above... figured. . Hi @LavrovArtem and @miherlosev,\nYeah, it looks like Testcafe is deleting the session cookie when I try to navigate from my login page (/signin), to my app's landing page (/accounts/). Is that expected, and if so, what can I do to work around this?\nThe cookie I'm setting is: my_id=[a valid session token]; path=/; secure; HttpOnly\nFYI, I'm porting a few of my current Protractor tests to TestCafe, to see if we might make a switch. Obviously, I need to be able to log in :) I've been over this a million times on my end and cannot see an issue from my side. Any ideas on your end? \n. Yeah, I've also tried it without HttpOnly... same issue. I don't think that's the problem... hmmmm.  \nI can't give y'all access to the system, but I could jump on a quick video chat and hopefully debug this?  . Okay, more debugging... and yeah, it's gotta be the HttpOnly Sadly, this might be a dealbreaker... bummer. . Okay... as it turns out, our app (for reasons) kicks out a cookie when you hit our signin page, that doesn't let you log in, but has the same name as the login cookie, AND has the HttpOnly flag \ud83d\ude1e Thus, because Testcafe uses document.cookie to set cookies, it fails to overwrite. This wasn't a problem with webdriver. \nI don't suppose y'all have a workaround :) . ",
    "vvedachalam": "@AndreyBelym This issue was first addressed in Nov 2016... And its the feature thats going to add yet another feather to TC against Selenium. Waiting eagerly for this feature...\n . @AndreyBelym @AlexanderMoskovkin #912 is not the issue thats being reported here I guess.\nIts about accessing iFrame inside the page itself I feel.\nAt least for me, I am having issue in accessing iFrame elements present in the main window.\nNOTE:\nI am able to access the main iFrame which I can see in the React Dev tool plugin. \nTestcafe is unable to identify elements inside the iFrame. The elements inside the iFrames are not shown in the React Dev tool plug-in. \nNot sure whether to raise a new ticket - https://github.com/DevExpress/testcafe/issues/3323. Hi @AndreyBelym @miherlosev Is this enhancement in your roadmap?. @AndreyBelym I am facing the same issue. We dont have a input text box but window popup to select the file. \nThe steps are:\n1. Click and Upload button\n2. File explorer opens\n3. Select a file and click on 'Open' button\n4. The file is uploaded and gets a successful message in the page\nHow to automate this? In selenium we used to use AutoIT for windows control. @miherlosev Should I create a new ticket as this is closed and I couldn't open it as I haven't created this ticket . Yes, you are right @AndreyBelym \nI have created https://github.com/DevExpress/testcafe/issues/2653. Yes, you are right @AndreyBelym \nI have created https://github.com/DevExpress/testcafe/issues/2653. @AndreyBelym Any update on this? . @miherlosev Thanks. I couldnt provide you the test URL as it is internal one. Any locator value, if we pass incorrectly, we should get this error. \nI am using Cucumber TestCafe TypeScript... In the page Object code, change the locator value to incorrect one and try which will throw the above mentioned error.\ntestPage.ts\nimport { Role, Selector} from 'testcafe'\nimport { testController } from '../../support/testControllerHolder'\nimport {waitForReact, ReactSelector} from 'testcafe-react-selectors';\nconst URL = 'http://localhost/test';\nconst CONTINUEBUTTON = 'div.eOiKsBgg button';\nexport class SitePage {\n    getURL() {\n        return URL;\n    }\ngetContinueButton() {\n    //  return ReactSelector(CBUTTON).with({ boundTestRun: testController });\n    return Selector(CONTINUEBUTTON).with({ boundTestRun: testController });\n}\n\n}\ntestSteps.ts\nimport {Given, When, Then} from 'cucumber';\nimport {SitePage} from \"../support/pages/sitePage\";\nimport {testController} from '../support/testControllerHolder';\nconst sitepage: SitePage=new SitePage();\nGiven(/^I open URL page$/, async() => {\n    await testController.navigateTo(sitepage.getURL());\n});\nThen(/^continue button is enabled$/, async() => {\n    await testController.expect(sitepage.getContinueButton().hasAttribute('disabled')).notOk();\n});\ntest.feature\nFeature: Verifying CONTINUE button state\nI Selecting URL from the drop-down\n  @debug\n  Scenario: Verifying CONTINUE button is disabled\n    Given I open URL page\n    Then continue button is disabled\n. @miherlosev Thanks. @AndreyBelym Not sure about the state of this issue. Any progress? I have shared the code with you (link sent to your email). If we fix this, it will encourage people to use TestCafe with Cucumber\n. @AndreyBelym I can see some improvements in console errors after updating TestCafe to version 0.20.2 But I guess the ticket is not fully attended to be considered as 'Resolved' to close.. @AndreyBelym Yes this issue has been fixed :+1: . @miherlosev Thanks a lot.. I started using exists.ok() thinking .visible has got issue. But it didn't strike me to use the assertion though i was using it for .exists and others. :). @dylang Thanks for considering my request\n. ah.. I thought my bug was created as new Req for Dev purpose :P \n. Hi @AndreyBelym \nYes, I am using Cucumber 4 to add the Gherkin layer.\nTestCafe: 0.19.2\nCucumber: 4.2.1. @AndreyBelym Do you need all the hooks? I cant post the complete code in github. If you wish, I can send to your email (belym.a.2105@gmail.com). @AndreyBelym,\nI used .textContent instead of .value and it works fine now.\nawait testController.expect(signuppage.getFormValidationError().textContent).eql('Please complete the all required fields.');\nCan you please tell me what is the difference between Value, textContent and InnerText?\nI have read the following:\ntextContent- What is the raw textual content inside \ninnerText: what is the text being presented to the user\nBut not sure whether it is the same for TestCafe API as well.. I can close this issue as the text message validation is achieved by using textContent instead of value.\nBut https://github.com/DevExpress/testcafe/issues/2551 is still open as error message in console log is not informative. Sry, it bad me..There is still an option with 'select the site' . When i change it to .eql(1), it started working.. Closing the issue. @MarinaRukavitsyna \nPlease find the markup below:\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\\Browse your computer\n\\\n\\\n\\\n\\\n. @hdorgeval - The e2e test that I am trying to do is : \nWhen the user clicks 'Browse your Computer' button, a window popup appears where the user selects a file. Once they select the file, behind the scenes the file is uploaded using the hidden file element. \nI tried to open the file explorer by clicking the 'Browse  Your Computer' button. But I couldnt see it.\nHow to handle this scenario? - Opening file explorer and selecting a file.\n````steps.ts\nThen(/^I successfully upload an image file less than 300kb size$/, async () => {\n    await testController.expect(addlogopage.getBrowseYourComputerButton().visible).ok();\n    await testController.click(addlogopage.getBrowseYourComputerButton());\n}. @hdorgeval Sure, will provide you the details soon. \nMeanwhile, could you please tell me, why clicking the button is not invoking the file explorer? Like selenium (in which we use AutoIT to handle the windows popups), wont testCafe handle windows popup? Or is it Ubuntu issue (I am using Ubuntu). @hdorgeval We dont use external libraries for this piece of functionality\n\\\nThis tag in the above shared code links the 'Browse Your Computer' button to the Upload field element.\nHope I make sense.\nCheers. @hdorgeval Thanks a lot. I will try to execute the code on my mac today. Could you please run this in ubuntu if possible?. @hdorgeval, here we access the hidden element and upload the image. If we click on the 'Browse your computer' button, will it invoke the file explorer window? Can we automate the real e2e flow?. @AndreyBelym Thanks for the same. Said that testCafe supports only HTML elements, can we integrate autoIT (like how we do for selenium)? Does TestCafe support that?. @hdorgeval AutoIT handles windows Explorer which selenium cant handle.\nSo is TestCafe. When windows explorer appears, testCafe cant handle it. So rather we use the hidden element to pass the file value\nAutoIT file uploader for Selenium: http://www.seleniumeasy.com/selenium-tutorials/upload-a-file-using-selenium-webdriver-with-autoit. @hdorgeval Is it uploading the file? I tried in my Mac. For me, it's only entering the image path into the file textbox. Not uploading. Even I triggered 'enter' key press but no success. \nawait testController.setFilesToUpload(addlogopage.getFilePathBox(),RIGHTSIZEANDFILEEXT);\nawait testController.pressKey('enter');\n\nDid you get a chance to run this in Ubuntu machine? Its one of our critical paths for our August release.. @hdorgeval Please find the form code in my above comment\nIts an auto submit on file selection. @hdorgeval , Thanks for the same. In that case how to trigger that action to upload the file? I tried tab, enter, tab & enter but none submitted the file. @hdorgeval Currently the automatic upload works fine in the page. There is no issue at all. Only in the TestCafe script, after setting the t.setFilesToUpload it is not triggering the upload.\nIn your code the last two lines are:\nawait t.setFilesToUpload(inputFileSelector, imagePath);\nawait t.expect(inputFileSelector.value).contains(imageName, {timeout: 5000});\n\nIf the file is uploaded after setting t.setFilesToUpload, when you assert in the next line t.expect it will fail as the file text will be empty once the file is uploaded (Successfully or unsuccessfully)\nThe code I used is (to check to fakepath set by system):\nawait testController.setFilesToUpload(addlogopage.getFilePathBox(),RIGHTSIZEANDFILEEXT);\n    await testController.expect(addlogopage.getFilePathBox().value).eql('C:\\\\fakepath\\\\3C-1.jpg');\nFor me also the assertion passes but it remains in the same page after assertion as the file is not uploaded\nNB: Did you check in any nix machine as our client uses Ubuntu and I need to run the tests in Ubuntu. @hdorgeval  Thanks a lot for all the kind support. The tests are running successfully in Ubuntu after upgrading to TestCafe version 0.20.2. (Though haven't checked in Mac but hope it should be ok in Mac too)\nThe error logging in the console also has been improved considerably. it specifies the element rather throwing common error message : TypeError: frames[i].getFunctionName is not a function*\nClosing the issue. @AndreyBelym Not sure why this issue is not attended. It should be easily reproducible . @AndreyBelym The simplest way to reproduce the issue is : When the test run, if you scroll the page down which takes the element out of focus, TestCafe fails to identify the element. NOTE: The page should be at least 3 times longer than the screen height\nIn your HTML you have fixed the position of the button. Could you please remove 'fixed' so that it wont be in the visibility?\n. @AndreyBelym I will use the code, check and let you know soon.\nNOTE: I have mentioned about manual intervention to easily reproduce the issue as you were not able to reproduce the issue. The issue happens in all our react pages when the element to be tested is outside the visible area in the screen. @AndreyBelym - Just an update. One of my pages has got a list with 30 items that over spills the visible area but the list has to be expanded by clicking an icon. When I expand the items, TestCafe automatically scrolls down to identify the required item and clicks.\nNot sure why it isn't working in the other page. I thought updating to 0.20.5 has fixed the issue as the scenario having 30 items is working but it is not so. . @AndreyBelym Just to confirm, its not just one page. I tried all the tests which run against 3 different sites (not just env but totally different domains).\nSame tests are passing when I revert to 0.20.2 and 0.20.5\nCurrently I settled with 0.20.5 upgrade.\nI will try Skip JS errors step and keep you posted.\nBut why this change when my tests are getting executed succesfully with both 0.20.2 and 0.20.5 ?. @LavrovArtem Thanks for the update. @Farfurix I have even tried with 1.0.0 alpha 2 \nBut still i am getting the same error. \nNOTE: I am using cucumber BDD framework developed by @helen-dikareva \nSo please use that framework as baseline and let me know.\nThere is another ticket raised by someone else for the same issue https://github.com/DevExpress/testcafe/issues/3324\nMy apologies for unable to provide you some code base for testing. I tried to get the location after switching to iFrame and the location it is printing as origin page (not the main window location but the page from which we started the app. The app is partially behaving as Single page Application). Will this be a problem?\n. @Farfurix found a iframe site to demo you\ntest.feature\n```test.feature\nFeature: Verifying iFrame\n@read\nScenario: iframe check\nGiven i am in the homepage\nThen I should see the iframe\n```\ntest.ts\n```test.ts\nGiven (/^i am in the homepage$/, async () => {\nawait testController.navigateTo('https://jsfiddle.net/westonruter/6mSuK/');\n} );\nThen(/^I should see the iframe$/, async () => {\n    let getLocation1:any = ClientFunction(() => document.location.href).with({ boundTestRun: testController });\n    console.log('loc1',await getLocation1());  \n    await testController.expect(await Selector('#login').with({boundTestRun:testController}).visible).ok();\n    // await testController.switchToIframe(await Selector('iframe[name=result]').with({boundTestRun:testController}));\n    await testController.switchToIframe('iframe[name=result]');\n    console.log('loc2',await getLocation1());  \n// await testController.click('#pt-anontalk > a');\n    await testController.click(await Selector('#pt-anontalk > a').with({ boundTestRun: testController }));\n// console.log(Selector('head > title').with({boundTestRun:testController}).textContent);\n});\n```\nIt is switching to the right frame but it is not identifying the iframe element.\nIf I use === > await testController.click('#pt-anontalk > a');\nI am getting the following error\n```error\nGiven i am in the homepage\nThen I should see the iframe\nloc1 https://jsfiddle.net/westonruter/6mSuK/\nloc2 https://fiddle.jshell.net/westonruter/6mSuK/show/\n    \u2716 failed\n      Error: { type: 'actionElementNotFoundError',\n        isTestCafeError: true,\n        callsite:\n         CallsiteRecord {\n           filename: '/test.ts',\n           lineNum: 259,\n           callsiteFrameIdx: 6,\n           stackFrames:\n           isV8Frames: true },\n        apiFnChain: [ 'Selector(\\'#pt-anontalk > a\\')' ],\n        apiFnIndex: 0,\n        isRejectedDriverTask: true }\n```\nIf i use ==>     await testController.click(await Selector('#pt-anontalk > a').with({ boundTestRun: testController }));\nI am getting this error\n```error\nFeature:\n    Given i am in the homepage\n    Then I should see the iframe\nloc1 https://jsfiddle.net/westonruter/6mSuK/\nloc2 https://fiddle.jshell.net/westonruter/6mSuK/show/\n    \u2716 failed\n      Error: { type: 'actionElementNotFoundError',\n        isTestCafeError: true,\n        callsite:\n         CallsiteRecord {\n           filename: 'test.ts',\n           lineNum: 259,\n           callsiteFrameIdx: 6,\n           stackFrames:\n            [ [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite],\n              [CallSite] ],\n           isV8Frames: true },\n        apiFnChain:\n         [ 'Selector(\\'#pt-anontalk > a\\')',\n           'Selector(\\'#pt-anontalk > a\\')' ],\n        apiFnIndex: 1,\n        isRejectedDriverTask: true }\n1) - Error in test.after hook -\n      The specified selector does not match any element in the DOM tree.\n     | Selector('#pt-anontalk > a')\n   > |   Selector('#pt-anontalk > a')\n\n```. Thanks, actually i have already updated my framework with \nhttps://github.com/rquellh/testcafe-cucumber \nSince he has mentioned @helen-dikareva name in his project as the origin, I thought of mentioning her name.\nComing back to the original issue, I will give the debug screenshot soon. \nMeanwhile, I found that using srcdoc attribute inside iframe is causing the issue. I  tried an iframe with src attribute and its all working fine. Could you please try with srcdoc and see?\n``\nconst doc =\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n   \n\n \n\n\n\n\n\n\n\n <div id=\"login_container\">\n   <div id=\"login_inner_form\">\n    <div id=\"container_spacer\"></div>\n\n    <div id=\"container_0\" class=\"webclient_container\">\n          <section>\n        <div class=\"container\">\n          <div class=\"login-box\">\n            <div id=\"unsupported_browser\" class=\"error-message\" style=\"display:none;\">\n              Sorry, this browser version is not supported. Please upgrade to a later version.\n            </div>\n            <form class=\"form\" id=\"login_form\" method=\"post\" action=\"\">\n              <p class=\"error-message\" style=\"display:none\">This field is required</p>\n              <label for=\"email\">Email Address*</label>\n              <div id=\"message_panel\" style=\"display:none\">\n                <div id=\"message\"></div>\n              </div>\n              <input type=\"text\" id=\"username\" name=\"username\" />\n              <p class=\"error-message\" style=\"display:none\">This field is required</p>\n              <label for=\"password\">Password*</label>\n              <input type=\"password\" id=\"password\"  name=\"password\" value class=\"pink_validation\" />\n              <div id=\"reminder_link_container\" class=\"has-margin\">                     \n                <span class=\"login-link\" id=\"reminder_link\">Forgot password?</span>\n              </div>\n\n              <div class=\"submit-form\" id=\"submit-signup\" onClick=\"login_user()\"><span id=\"login_control\" class=\"button bg-black\">Sign in</span></div>\n\n            </form>\n          </div>\n\n          <div id=\"verification_form\" style=\"display:none\">\n            <div id=\"verification_message\" style=\"display:none\">\n              You have not yet verified your email. <span class=\"login-link\" id=\"verification_link\">Click here</span> to send the verification email.\n            </div>\n            <div id=\"verification_sent\" style=\"display:none\">\n              An email has been sent to you.\n            </div>\n          </div>\n\n        </div>\n        <input type=\"hidden\" name=\"logged_in\" id=\"logged_in\" value=\"false\">\n    </section>\n\n    </div>\n\n    <div class=\"clear\"></div>\n\n  </div>\n\n   <div id=\"login_inner_redirect\" style=\"display:none;\" >\n\n\n\n\n    <div id=\"container_spacer\"></div>\n\n    <div id=\"container_0\" class=\"webclient_container redirect_msg\" >\n      <div id=\"redirect_msg\">\n      <p>You are already logged in, you will be redirected shortly... </p>\n      </div>\n    </div>\n\n    <div class=\"clear\"></div>\n\n  </div>\n </div>\n\n\n\n <div id=\"hidden_login_form_container\">\n\n   <form id=\"hidden_login_form\">\n    <input type=\"hidden\" id=\"redirect_username\" name=\"username\" value=\"\">\n    <input type=\"hidden\" id=\"redirect_password\" name=\"password\" value=\"\">\n    <input type=\"hidden\" name=\"do\" value=\"auth\">\n   </form>\n   <form id=\"hidden_token_form\">\n    <input type=\"hidden\" id=\"api_id\" name=\"id\" value=\"\">\n    <input type=\"hidden\" id=\"api_token\" name=\"token\" value=\"\">\n    <input type=\"hidden\" name=\"remote_auth\" value=\"true\"> \n    <input type=\"hidden\" name=\"do\" value=\"auth\">\n   </form>\n </div>\n\n </body>\n\n`;\n      <iframe id=\"iframe1\" src=\"https://platform.cloud-iq.com/login\" width=\"100%\" height=\"350px\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n      <iframe id=\"iframe2\" srcdoc={doc} width=\"100%\" height=\"350px\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n\n```\n. @AndreyBelym plz find the attached screenshot as you have requested\n\n\n. @AndreyBelym Thanks for the update. Will it be implemented any soon? \n@miherlosev @LavrovArtem Please do let me know what should I do for PR. Also I need this issue to be sorted out at the earliest. So could you please consider this for your current or next sprint?. @LavrovArtem Thanks.. ",
    "amirse80": "Hi, does TestCafe support this \".switchToWindow(1)\" method?\nI am getting \"TypeError: t.switchToWindow is not a function\". Hi, I am trying to run a test via test runner and I get the same error.\nnode tRunner.js chrome \"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"\nI have tested many different combinations like:\n1) C:\\... (double backslash)\n2) C:.. (single backslash)\n3) with surrounding \"C:\\\" and also without \" \"\n4) I have tested with only \"node tRunner.js chrome\"\nRegardless what I do I always get Error: Unable to find the browser. \"path...\" is not a browser alias or path to an executable file.\nActually I am trying to run this command from TFS and the tests are run remotely via selenium grid. So the tests are written with testcafe but I would like to run them on a selenium grid from TFS.\nAny suggestion on how to write the \"node tRunner.js chrome\" command to be able to start/find the browser?. @AndreyBelym, thanks for your reply. We have found the issue actually. The problem was not in testcafe for some reason not being able to open the browser. Insted it was actually a network issue. We needed to open up a port in our internal network, 1337, and then it started to work. Now I have another issue that is about the browser not being closed after a test (opened with TestCafe DISCONNECTED message). I will check if there are any posts about that. I see actually that it comes to my RUNNER clas where both testcafe.close() and process.exit(0) are stated but it never closes the browser. Ok I have solved the non-closing browser issue as well now. If someone is interested the solution was to add a setTimeout() just after testcafe.close() in Runner class. \nsetTimeout(processExit, 2000);\nfunction processExit(){\n        console.log('Closing browser');\n        process.exit(0)\n    }. is there a way to do updateItemCount() in some other way than adding it to the page?\nfunction updateItemsCount () {\n    document.querySelector(\"#items\").innerHTML = localStorage.length;\n}\nThe reason is that I don\u00b4t sit with dev team so I don\u00b4t have the possibility or mandate to modify the application.. I tried this myself but I got this error then\n\nError in fixture.beforeEach hook -\nAn error occurred in ClientFunction code:\nTypeError: Cannot set property 'innerHTML' of null. Leave a comment. Hello, can you please clarify how to use this bypass?\nE.g: If I run my simple test case from CMD \"TestCafe>testcafe chrome test1.js\" and in the testfile I have an URL which is copmany internal how do I start it and make sure that URL is bypassed?\n\nThe problem we have is that we first do a GET to one webpage but then during the load it is redirected to another one. And in TestCafe the first page loads correctly but the next one gets UNAUTHORIZED. However pasting that second URL in the same browser manually loads the page correctly.\nSo, what can I do in TestCafe to also bypass proxy for the redirected page?. Hello,\nThank you for the input. Unfortunatelly it didn\u00b4t solve my problem.\nThe issue is like this.\n1. I navigate to an company internal page.    (.page `http://dap-internal.company.page\u00b4)\n2. The chrome is started and initially navigates to the correct server.\n3. During the page opening the URL changes, redirects, to http://pen-internal.company.page. Now this new URL works fine in the same browser that testcafe has started IF i copy the real URL manually into the new tab BUT testcafe adds http://172.30.48.47:61019/DSc6im7OL/ to the URL which makes it not working. So instead of the real redirected URL http://pen-internal.company.page the redirected URL is http://172.30.48.47:61019/DSc6im7OL/http://pen.internal.company.page!\nSo if I would be able to just remove this part that testCafe adds, http://172.30.48.47:61019/DSc6im7OL/, it would probably work, because it does work if I manually add the redirected URL in the same browser.. Hi, we are still investigating this issue but we see a pattern now and for that reason I need to rephrase my question. Maybe the extra part of URL is not problem since the issue only seem to exist on our internal pages which require login to be opened! So if we test with a page that does not require login then all works fine, the page is shown. But we cannot figure out why we get unauthorized for pages requireing login. After all, as written in the first post, it works without the first part of URL added by testcafe. And even if we test with http.get method and add correct login and domain it still results in unauthorized. Any ideas what it could be?. Stackoverflow post:\nhttps://stackoverflow.com/questions/52900501/testcafe-redirecting-issue. Hi Alex,\n First where do I find your email?\nI could share my project but I am afraid you will not be able to run it on your side due to all security settings (firewalls). The application will not start. Is there any logs or something else I could provide you with in order for you to get more info about the issue. Would it be ok to create a Word document with pictures and console output?\n. Hello, would you please comment on this issue. We are really hitting the wall at the moment. If we don\u00b4t solve this issue today and tomorrow we most likely need to go back to Selenium. I would love to continue with TestCafe.\nAs I wrote. The problem we face now is that when we are logged in to one page and do some clicking on it at one of these clicks we are redirected to another login page (a new tab when run manually) but by using ROLES, this redirection (which is done in same tab by TestCafe) gets us logged out so the message \"LOGIN FAILED\" is shown just before the new ROLE is started (or let say directly after the code in first ROLE definition is done).\nI really need to be able to go the same state where I was before the role change. To make it worse on one URL we do some YES/NO questions so a redirection could be at question 4 out of 10, then I would actually need to go back to question4 after I am redirected back to first role, not to start from beginning.\nIs this even possible? Or is the Selenium way to go?. \nI see the errand is in set to\"Need clarification\". Will it help you anything if I send you a word document with printscreens on what is happening? Just tell me the email address and I will fix it\n. AlexKamaev/AlexSkorkin, I have created a simple project where I log in to Outlook. This is very similar to the project and issue I have in my company internal project. Would you please give me an email address to where I can send you the code since it contains a password to my test account. \nIn the code I have explained the issue and what I expect. You have my email just send me a message about where to send you this project.. Thank you Alex. The email is sent.. \nHi Alex,\nThank you for providing this code.\nI am at home now and trying this out (since it uses external webpages which I cannot access at work) and when it works I will try to apply the same solution on the Project at work.\nAt the moment I face an issue with GetBposSshellInfoNavBarData, it fails on \"await t.maximizeWindow();\".\nI tried to comment out that one but then it fails on same error on the next row you added \"await t.click(Selector('div.ms-FocusZone > button:nth-child(3)'), { offsetX: 1, offsetY: 1 });\"\nI tried to google on issue but there is almost nothing on GetBposSshellInfoNavBarData.. Hi Alex. Back at work now. I changed my example from outlook to gmail with same functionality (opening a new tab) and that works perfectly on my home computer. Now at work I applied same code on the work project but then i again get LOGIN FAILED. And when I put some .wait() I see that I am logged in to URL1 until \"role2 = Role.anonymous();\" As soon the execution comes to this line the URL1 shows LOGIN FAILED. So it logges me out for some reason before I even go to URL2 in this case.\nIs there an option like \"stay logged in\"? :-). I modified the code to not use ROLES and I see that actually same thing happens (LOGIN FAILED) even if I start the test with testCafe but then do the clicking manually and as soon a \"new tab\" is shown in same broswer as TestCafe work my company page shows LOGIN FAIL. So regardless of ROLE useage. Running this completely manually (not via testCafe) opens a new tab and the previous one is not logged out. But with testCafe the company page seem to interprate this opening of a \"new tab\" in \"same tab\" as new login.\nHere is an example of the same behaviour when I run this page manually (testcafe not used):\n1. I open the company page\n2. Do some clicking to go forward few pages (answering some questions)\n3. At some point I enter www.google.se in the address bar and press enter. Here I use same tab.\n    Now this will generate a pop-up saying \"the changes you have done are not saved... Do you want to continue?\"\n4. I click YES to the pop-up question in order to go to google.se\n5. I click on the back button (<-) to go back to my company page (to place where I was before entering google page) but then I get \"LOGIN FAILED\"\nIt look like the same happens when TestCafe is running my test. As soon it tries to open a new page in same tab probably this pop-up is shown (which I don\u00b4t see) and I get logged out.\n. Running the above step in Chrome shows the real issue. The pop up says exactly this \"Leave site? Changes you made may not be saved.\"\nThen I can click on Leave or Cancel button.\nSo our company page interprets any new page opened in the same tab as like leaving the application and therefor logges me out.\nSo my question would be, is there a way to \"continue be logged in\" when using TestCafe which opens other pages in the same tab instead of new tab?. Hi, I sent you another email with I hope more in detail explanation.. ok Alex. Thank you for your input. Our application has the same functionality as you describe, i.e. press F5 and I am logged out. In this case I will need to wait for some future update of testcafe which maybe will be able to handle this scenario although my test contain a real redirection to a new tab.. ",
    "bkd705": "Any update on this? Looking to test a live chat UI but unsure of how to do that without being able to have multiple instances of the browser running.. ",
    "jsdevtom": "@AndreyBelym @miherlosev Thank you for your possible solutions. Unfortunately, this still isn't enough for my use case. I need to be able to test client synchronization (like google docs). Having different users act on the same page is not enough. Also how the application behaves offline will need to be tested. Any advice is appreciated :+1: :pray: . @bkd705 @inikulin The best solution that I have come up with is to use puppeteer for the other browser instance(s). Here is an example with the PageObject pattern:\n``ts\ntest(It should show the added question in the UI when the user adds a question\n        in a different client`, async t => {\n  const browser = await puppeteer.launch({ headless: false, ignoreHTTPSErrors: true });\n  const page: Page = await browser.newPage();\n  await page.goto('http://localhost:4200/login');\n  const questionText = 'Does this work?';\nawait t.expect(questionPage.dashboardQuestionCard.exists).notOk();\nawait loginPage.loginWithPuppeteer(page, username, password);\n  await questionPage.addQuestionPuppeteer(page, questionText, ['i hope so']);\nawait t.expect(questionPage.dashboardQuestionCard.exists).ok();\n  await t.expect(questionPage.dashboardQuestionCard.innerText).contains(questionText);\n});\n```. ",
    "rmkranack": "Any updates on this? Our sites are moving over to Google SSO for authentication and we will no longer be able to use TestCafe if we cannot get past the authentication.. Hello Artem,\nI am running into the same problem. I am able to authenticate but when I\nattempt to enter our site, I get stuck on a blank page. I see this in the\nurl:\nhttp://192.168.29.145:58159/qwKC7OJl6/https://accounts.google.com/o/oauth2/auth?redirect_uri=storagerelay%3A%2F%2Fhttps%2Fcoach-hub-ui-exos-coachhub.exos.biz%3Fid%3Dauth436613&response_type=permission%20id_token&scope=email%20profile%20openid&openid.realm=&client_id=283667247630-r49h7opf7bn5igkffqt6d7ob6f0k0b79.apps.googleusercontent.com&ss_domain=https%3A%2F%2Fcoach-hub-ui-exos-coachhub.exos.biz&fetch_basic_profile=true&gsiwebsdk=2\nOn Tue, Jan 22, 2019 at 7:26 AM Artem Lavrov notifications@github.com\nwrote:\n\n@rmkranack https://github.com/rmkranack,\nI've created a simple example that shows how to authorize using Google\nSSO. Please try it and inform us of your results.\nimport { Selector, Role } from 'testcafe'\nconst signInButton = Selector('.abcRioButtonContentWrapper');const googleAccUser = Role('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en', async t => {\n    await t\n        .click(signInButton)\n        .typeText('input[type=\"email\"]', '')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', '')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en\ntest('first test', async t => {\n    await t\n        .expect(signInButton.innerText).eql('Sign in')\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in');\n});\ntest('second test', async t => {\n    await t\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in');\n});\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/912#issuecomment-456440563,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG63LvJS7Y0nsDrmAQXumK5PUVUZpKbpks5vFy3AgaJpZM4KeyDD\n.\n\n\n-- \nEXOS\nteamexos.com\nRobert Kranack | Sr QA Engineer | c 310.696.9349 | 5815 W. Sunset Blvd\nSuite 105, Hollywood, CA 90028\n-- \nCONFIDENTIALITY NOTICE:\u00a0\nThe information in this communication, including \nany attachments, is intended only for the person or entity to which it is \naddressed and may contain confidential, proprietary, and/or privileged \nmaterial.\u00a0 If you are not the addressee or if you received this \ncommunication in error, you are hereby notified that any review, \nretransmission, dissemination or other use of, or taking or any action in \nreliance upon, this information is prohibited.\u00a0 If you did receive this \ncommunication in error, please destroy it, all copies and any attachments, \nand notify the sender as soon as possible.\u00a0 The individual sender of this \ne-mail is responsible for its content, and EXOS does not assume any legal \nliability or responsibility for the accuracy, completeness or usefulness of \nany information, product, or process disclosed.\u00a0 Further, any comments, \nstatements or opinions expressed by the author in this communication do not \nnecessarily reflect those of EXOS.\n. I added a few steps to your sample code to go to our site and verify the\nauthenticated page is displayed. We only have our test site running from\n9am-7pm pacific time. If you need it during a different time, let me know\nand I can turn it on. The url is https://coach-hub-ui-exos-coachhub.exos.biz\n.\nimport { Selector, Role } from 'testcafe'\nconst signInButton = Selector('.abcRioButtonContentWrapper');\nconst googleAccUser =\nRole('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en',\nasync t => {\n    await t\n        .click(signInButton)\n        .typeText('input[type=\"email\"]', 'exos.test@teamexos.com')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', 'Changeme!')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://google-developers.appspot.com/identity/sign-in/web/demos/signin_contextual_simple?hl=en\ntest('first test', async t => {\n    await t\n        .expect(signInButton.innerText).eql('Sign in')\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in');\n});\ntest('second test', async t => {\n    await t\n        .useRole(googleAccUser)\n        .expect(signInButton.innerText).eql('Signed in')\n        .navigateTo('https://coach-hub-ui-exos-coachhub.exos.biz')\n        .click('button[class=\"btn mb-1 btn-primary btn-block\"]')\n        .expect(Selector('div[class=\"page-header border-bottom\"]').exists).ok();\n});\nOn Wed, Jan 23, 2019 at 5:46 AM Artem Lavrov notifications@github.com\nwrote:\n\n@rmkranack https://github.com/rmkranack,\nCould you please provide me with your site url and test? I cannot help\nmuch without this information.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/912#issuecomment-456806497,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG63LquWlt0WuO1vg9qSBAJVb-j1GJ-2ks5vGGefgaJpZM4KeyDD\n.\n\n\n-- \nEXOS\nteamexos.com\nRobert Kranack | Sr QA Engineer | c 310.696.9349 | 5815 W. Sunset Blvd\nSuite 105, Hollywood, CA 90028\n-- \nCONFIDENTIALITY NOTICE:\u00a0\nThe information in this communication, including \nany attachments, is intended only for the person or entity to which it is \naddressed and may contain confidential, proprietary, and/or privileged \nmaterial.\u00a0 If you are not the addressee or if you received this \ncommunication in error, you are hereby notified that any review, \nretransmission, dissemination or other use of, or taking or any action in \nreliance upon, this information is prohibited.\u00a0 If you did receive this \ncommunication in error, please destroy it, all copies and any attachments, \nand notify the sender as soon as possible.\u00a0 The individual sender of this \ne-mail is responsible for its content, and EXOS does not assume any legal \nliability or responsibility for the accuracy, completeness or usefulness of \nany information, product, or process disclosed.\u00a0 Further, any comments, \nstatements or opinions expressed by the author in this communication do not \nnecessarily reflect those of EXOS.\n. Thanks for the reply. I added a few lines to attempt to get to the home\npage after authentication and still get a blank page. We do not have a\nrecovery phone or email on this test account. It looks like Google blocked\nyou. Should be okay now. Here is what I tried:\nimport { Selector, Role } from 'testcafe'\nconst signInButton = Selector('.abcRioButtonContentWrapper');\nconst googleAccUser =\nRole('https://coach-hub-ui-exos-coachhub.exos.biz/account/login',\nasync t => {\n    await t\n        .click('button[class=\"btn mb-1 btn-primary btn-block\"]')\n        .typeText('input[type=\"email\"]', 'exos.test@teamexos.com')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', 'Changeme!')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://coach-hub-ui-exos-coachhub.exos.biz/');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://coach-hub-ui-exos-coachhub.exos.biz/\ntest('first test', async t => {\n    await t.useRole(googleAccUser);\n    await t\n    .click('button[class=\"btn mb-1 btn-primary btn-block\"]')\n    .expect(Selector('div[class=\"page-header border-bottom\"]').exists).ok();\n});\nOn Fri, Feb 1, 2019 at 2:16 AM Artem Lavrov notifications@github.com\nwrote:\n\n@rmkranack https://github.com/rmkranack,\nI apologize for the delayed response.\nI've tried to rewrite my example to use your web site, but was not able to\ntest it, as Google asks for a phone number for two-factor authentication.\nHowever, I have noticed that you did not change the page url and the role\nurl in the code you provided. I suggest that you modify it as follows:\nimport { Selector, Role } from 'testcafe'\nconst signInButton = Selector('.abcRioButtonContentWrapper');const googleAccUser = Role('https://coach-hub-ui-exos-coachhub.exos.biz/account/login', async t => {\n    await t\n        .click('button[class=\"btn mb-1 btn-primary btn-block\"]')\n        .typeText('input[type=\"email\"]', 'exos.test@teamexos.com')\n        .click('#identifierNext')\n        .typeText('input[type=\"password\"]', 'Changeme!')\n        .click('#passwordNext')\n        .wait(2000)\n        .navigateTo('https://coach-hub-ui-exos-coachhub.exos.biz/');\n}, { preserveUrl: true });\nfixture Google Sign-In\n    .pagehttps://coach-hub-ui-exos-coachhub.exos.biz/\ntest('first test', async t => {\n    await t.useRole(googleAccUser);\n});\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/912#issuecomment-459673896,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG63LmHpa9hfnTtvU5v3AvK4V6Td2X_-ks5vJBPlgaJpZM4KeyDD\n.\n\n\n-- \nEXOS\nteamexos.com\nRobert Kranack | Sr QA Engineer | c 310.696.9349 | 5815 W. Sunset Blvd\nSuite 105, Hollywood, CA 90028\n-- \nCONFIDENTIALITY NOTICE:\u00a0\nThe information in this communication, including \nany attachments, is intended only for the person or entity to which it is \naddressed and may contain confidential, proprietary, and/or privileged \nmaterial.\u00a0 If you are not the addressee or if you received this \ncommunication in error, you are hereby notified that any review, \nretransmission, dissemination or other use of, or taking or any action in \nreliance upon, this information is prohibited.\u00a0 If you did receive this \ncommunication in error, please destroy it, all copies and any attachments, \nand notify the sender as soon as possible.\u00a0 The individual sender of this \ne-mail is responsible for its content, and EXOS does not assume any legal \nliability or responsibility for the accuracy, completeness or usefulness of \nany information, product, or process disclosed.\u00a0 Further, any comments, \nstatements or opinions expressed by the author in this communication do not \nnecessarily reflect those of EXOS.\n. It looks like Google keeps blocking you. I added a recovery email to verify\nto hopefully help get you unblocked. The recovery email is\nexos.testcafe@gmail.com. I increased the wait to 10 seconds and still have\nthe same problem. Any other ideas? Thanks\n\nOn Wed, Feb 6, 2019 at 6:36 AM Artem Lavrov notifications@github.com\nwrote:\n\nWe do not have a recovery phone or email on this test account. It looks\nlike Google blocked you. Should be okay now.\nI'm still not able to test it as Google asks for a phone to validate your\naccount. Try to increase the waiting time in the role before navigating to\nthe home page.\n\"Verify it's you\" screenshot\n[image: y2dujq28_oa]\nhttps://user-images.githubusercontent.com/5373460/52347428-fba2e980-2a32-11e9-9f5b-5f6ee69e5848.jpg\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/912#issuecomment-461045035,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AG63Lj3cTZj15SMdCg1ryJ9s7HT3af6Rks5vKuh_gaJpZM4KeyDD\n.\n\n\n-- \nEXOS\nteamexos.com\nRobert Kranack | Sr QA Engineer | c 310.696.9349 | 5815 W. Sunset Blvd\nSuite 105, Hollywood, CA 90028\n-- \nCONFIDENTIALITY NOTICE:\u00a0\nThe information in this communication, including \nany attachments, is intended only for the person or entity to which it is \naddressed and may contain confidential, proprietary, and/or privileged \nmaterial.\u00a0 If you are not the addressee or if you received this \ncommunication in error, you are hereby notified that any review, \nretransmission, dissemination or other use of, or taking or any action in \nreliance upon, this information is prohibited.\u00a0 If you did receive this \ncommunication in error, please destroy it, all copies and any attachments, \nand notify the sender as soon as possible.\u00a0 The individual sender of this \ne-mail is responsible for its content, and EXOS does not assume any legal \nliability or responsibility for the accuracy, completeness or usefulness of \nany information, product, or process disclosed.\u00a0 Further, any comments, \nstatements or opinions expressed by the author in this communication do not \nnecessarily reflect those of EXOS.\n. Just realized the recovery email didn't save. It is added now. . ",
    "bmcminn": "I'm going to try and reproduce outside of my companies project. But reading the FF error response, seems like there's a JS expression happening where a rogue < character is being interpreted causing it to fail.\nIs there a way to pause the runtime execution to help snapshot the error response? or would a utility like iron-node be sufficient for this? Still familiarizing myself with the codebase and not sure how y'all are debugging runtime errors like this?\n. ",
    "janbaer": "I've the same problem only with trying out the sample from your readme page!\n```\n   1) Error on page \"http://devexpress.github.io/testcafe/example/\":\n  Uncaught SyntaxError: Unexpected token )\n\n```\nand the error will be shown here\n```\n\n8 |      .typeText('#input', 'Peter Parker')\n```\n\nI've used ChromeCanary for my test and I was running test cafe version 0.9.0 Do I need any specific Node version? I'm using 6.5.0 here. Thanks!\n. I just tried the new example, but with the same result:\n```\n  1) Error on page \"http://devexpress.github.io/testcafe/example/\":\n  Uncaught SyntaxError: Unexpected token )\n\n  Browser: Chrome 56.0.2905 / Mac OS X 10.12.1\n\n      3 |fixture `Example page`\n      4 |    .page `https://devexpress.github.io/testcafe/example`;\n      5 |\n      6 |test('Emulate user actions and perform a verification', async t => {\n      7 |    await t\n   >  8 |        .setNativeDialogHandler(() => true)\n      9 |        .click('#populate')\n     10 |        .click('#submit-button');\n     11 |\n     12 |    const location = await t.eval(() => window.location);\n     13 |\n\n```\nIt looks like that it's a problem await. How is it running, with babel?\nUpdate With Safari the example is running, but not with Chrome Canary.\nMaybe it's because Chrome Canary is supporting ansync/await natively and the the polyfill is doing something different (https://www.chromestatus.com/features/5643236399906816)\n. Unfortunately it hasn't helped, after reinstalling of testcafe I got the same error with ChromeCanary. Will try it with Chrome...\n. With a fresh installed Chrome it's also working.\nChrome 54.0.2840 / Mac OS X 10.12.1\nonly with ChromeCanary it's failing\nBrowser: Chrome 56.0.2905 / Mac OS X 10.12.1\n. Yes, exactly this error I got! I also posted the complete error in a previous post and it's still the same. Can you reproduce it?\n. Unfortunately the result is the same...\n. Is there a way to start Chrome without any plugins? So this would be the fastest way to run the tests and without any side effects.\n. ",
    "jcteague": "```\nDEBUG=testcafe:test-run:* testcafe chrome test/uat/welcome-screen/welcome-screen-tests.js\nRunning tests in:\n - Chrome 53.0.2785 / Mac OS X 10.12.0\nWelcome Screen\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"wait\",\n      \"timeout\": 1000\n    }\n +0ms\n(node:99763) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: First argument must be a string or Buffer\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"286.18000000000006\",\n        \"isCommandResult\": false,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HketkOYCJg\"\n    }\n +835ms\nstarting test\nundefined\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"test-done\"\n    }\n +182ms\n```\n. This must have something to do with the react app itself.  I tested against a deployed instance.  On the deployed instance, it must go through a login screen.  I changed the test to input the login screen fields and then navigate to the url that runs the react app.  The login works fine, but I get the same error after I navigate to my application.\nWe are using hashHistory for the react app, so it appends #<random-key> to the url.  Not sure if that matters.\nhere is the debug output\nWelcome Screen\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"type-text\",\n      \"selector\": {\n        \"type\": \"execute-selector\",\n        \"instantiationCallsiteName\": \"Selector\",\n        \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#username\\\");});\\n   return function(){\\n       return window['%testCafeSelectorFilter%'](__f$.apply(this, arguments), __dependencies$.__filterOptions$);\\n   };\\n})();\",\n        \"args\": [\n          []\n        ],\n        \"dependencies\": [\n          {\n            \"__filterOptions$\": {\n              \"index\": 0,\n              \"text\": {\n                \"@t\": \"[[undefined]]\",\n                \"data\": \"\"\n              }\n            }\n          }\n        ],\n        \"visibilityCheck\": true,\n        \"timeout\": null,\n        \"index\": 0\n      },\n      \"text\": \"jon\",\n      \"options\": {\n        \"offsetX\": null,\n        \"offsetY\": null,\n        \"modifiers\": {\n          \"ctrl\": false,\n          \"alt\": false,\n          \"shift\": false,\n          \"meta\": false\n        },\n        \"caretPos\": null,\n        \"replace\": false\n      }\n    }\n +0ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"1036.6850000000002\",\n        \"isCommandResult\": false,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +1s\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"3131.55\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +2s\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"type-text\",\n      \"selector\": {\n        \"type\": \"execute-selector\",\n        \"instantiationCallsiteName\": \"Selector\",\n        \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#password\\\");});\\n   return function(){\\n       return window['%testCafeSelectorFilter%'](__f$.apply(this, arguments), __dependencies$.__filterOptions$);\\n   };\\n})();\",\n        \"args\": [\n          []\n        ],\n        \"dependencies\": [\n          {\n            \"__filterOptions$\": {\n              \"index\": 0,\n              \"text\": {\n                \"@t\": \"[[undefined]]\",\n                \"data\": \"\"\n              }\n            }\n          }\n        ],\n        \"visibilityCheck\": true,\n        \"timeout\": null,\n        \"index\": 0\n      },\n      \"text\": \"pass\",\n      \"options\": {\n        \"offsetX\": null,\n        \"offsetY\": null,\n        \"modifiers\": {\n          \"ctrl\": false,\n          \"alt\": false,\n          \"shift\": false,\n          \"meta\": false\n        },\n        \"caretPos\": null,\n        \"replace\": false\n      }\n    }\n +1ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"3902.135\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +770ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"click\",\n      \"selector\": {\n        \"type\": \"execute-selector\",\n        \"instantiationCallsiteName\": \"Selector\",\n        \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#submitButton\\\");});\\n   return function(){\\n       return window['%testCafeSelectorFilter%'](__f$.apply(this, arguments), __dependencies$.__filterOptions$);\\n   };\\n})();\",\n        \"args\": [\n          []\n        ],\n        \"dependencies\": [\n          {\n            \"__filterOptions$\": {\n              \"index\": 0,\n              \"text\": {\n                \"@t\": \"[[undefined]]\",\n                \"data\": \"\"\n              }\n            }\n          }\n        ],\n        \"visibilityCheck\": true,\n        \"timeout\": null,\n        \"index\": 0\n      },\n      \"options\": {\n        \"offsetX\": null,\n        \"offsetY\": null,\n        \"modifiers\": {\n          \"ctrl\": false,\n          \"alt\": false,\n          \"shift\": false,\n          \"meta\": false\n        },\n        \"caretPos\": null\n      }\n    }\n +1ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"wait-for-file-download\",\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +1s\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"1338.98\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +379ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"navigate-to\",\n      \"url\": \"http://pfhack3.saplinglearning.me/ibiscms/course/view.php?id=56105#/?_k=sxx64x\"\n    }\n +0ms\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"376.93000000000006\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HJ3_hM1el\"\n    }\n +2s\nstarting test\nundefined\n  testcafe:test-run:Chrome 53.0.2785 / Mac OS X 10.12.0:command \n    {\n      \"type\": \"test-done\"\n    }\n +20ms\n(node:2729) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: First argument must be a string or Buffer\n. I'm going to close this issue. But I still think there is something here, but I can't reproduce in test project and I solved the problem in actual project.\nI solved the problem by updating to react-router@3.0.0.  hashHistory does not put the additional query string key on the url, and without it testcafe will run the test.\nHowever, I tried using the older version of react-router that does use the additional parameter, but could not reproduce in the test project.\nSo while by gut feeling is it has something to do with that url param, I cannot reproduce enough to confirm.\nThanks\n. ",
    "tryggvigy": "I see! \nClosing.\n. ",
    "tjoskar": "I have the same problem in Chrome Version 54.0.2840.87 (64-bit) / Mac OS X.\nIf I try to run the example in firefox (testcafe firefox tests). Firefox nightly is started and then the cli-tool just \"hangs\" (nothing is happening) and if I open the dev tools in firefox I see the following error: \nTypeError: Not allowed to define a non-configurable property on the WindowProxy object testcafe-core.js:1:7989\nTypeError: C.default is undefined[Learn More] testcafe-ui.js:1:16328\nTypeError: s.default is undefined[Learn More] testcafe-automation.js:1:1668\nTypeError: u.default is undefined[Learn More] testcafe-driver.js:1:25145\nTypeError: ClientDriver is not a constructor[Learn More]\nChrome canary and Safari are however working fine for me.\n. I still can't get it to work in chrome.\nThis is how I reproduce the error:\n.1. Install testcafe@alpha\nbash\n$ npm install testcafe@alpha\n.2. Create a simple test case:\n``` javascript\n// testcafe/test.js\nfixture Example page\n    .page https://devexpress.github.io/testcafe/example;\ntest('Do some test', async t => {\n    await t.click('#remote-testing');\n});\n```\n.3. Execute the test case in Chrome:\n``` bash\n$ node_modules/.bin/testcafe chrome testcafe\nRunning tests in:\n - Chrome 54.0.2840 / Mac OS X 10.12.1\nExample page\n \u2716 Do some test\n1) Error on page \"http://devexpress.github.io/testcafe/example/\":\n  Uncaught SyntaxError: Unexpected token )\n\n  Browser: Chrome 54.0.2840 / Mac OS X 10.12.1\n\n     1 |fixture `Example page`\n     2 |    .page `https://devexpress.github.io/testcafe/example`;\n     3 |\n     4 |test('Do some test', async t => {\n   > 5 |    await t.click('#remote-testing');\n     6 |});\n     7 |\n\n     at <anonymous> (testcafe/test.js:5:17)\n     at step\n\n(node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n         at \n   (node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14)\n         at Promise.F [as null]\n   (node_modules/core-js/library/modules/_export.js:35:28)\n         at \n   (node_modules/babel-runtime/helpers/asyncToGenerator.js:14:12)\n         at test (testcafe/test.js:6:42)\n         at tryCatch\n   (node_modules/regenerator-runtime/runtime.js:62:40)\n         at GeneratorFunctionPrototype.invoke [as _invoke]\n   (node_modules/regenerator-runtime/runtime.js:336:22)\n         at GeneratorFunctionPrototype.prototype.(anonymous function) [as next]\n   (node_modules/regenerator-runtime/runtime.js:95:21)\n         at step\n      (node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n1/1 failed (1s)\n```\nI'm using node v6.6.0.\n. Okey, I think I found the problem. I realised that it worked if I used Chrome in incognito mode so I started to disable all my addons and found that if I disable Augury the test completes successfully. \n. It's a good question. Can one pass arguments to the browser like --disable-extensions, --show-fps-counter and so on?\n. ",
    "eriklharper": "I'm getting this problem out of the gate on an install with these version params:\n```\ntestcafe chrome tests/test1.js\n Running tests in:\n - Chrome 57.0.2987 / Mac OS X 10.12.4\nGetting Started\n \u2716 My first test\n1) Error on page \"https://localhost:8091/login\":\n  Uncaught SyntaxError: Unexpected token (\n\n  Browser: Chrome 57.0.2987 / Mac OS X 10.12.4\n\n1/1 failed (7s)\n```\nTestCafe version 0.14.0\nTest Code:\n``\nfixtureLogin.pagehttp://localhost:8091`;\ntest('My first test', async t => {\n});\nWith this command:\ntestcafe chrome tests/test1.js\n```. Here's the public URL of the website I'm trying to test: https://staging-edit.meridianapps.com/login. ",
    "LanFeusT23": "@georgiy-abbasov This worked for me, but what's strange is that in incognito mode I am not running any extensions already, on top of that my page is not throwing any errors whatsoever yet I would get this same error Uncaught SyntaxError: Unexpected token ) unless I skip the js errors.\nI'm running:\ntestcafe: 0.17.0\nchrome: 59.0.3071. Yeah:\nChrome error:\nUncaught SyntaxError: Unexpected token )\nFirefox error:\nSyntaxError: expected expression, got ')'\nFirefox was a brand new install so no extensions or anything on it, also running in incognito.. Unfortunately I can't provide the code itself, but here's the stack after doing the gulp playground\nUncaught SyntaxError: Unexpected token )\n    at parse (hammerhead.js:1)\n    at t._onMessage (hammerhead.js:4)\n    at r (hammerhead.js:9)\n    at r (hammerhead.js:4)\n    at hammerhead.js:4\nparse @ hammerhead.js:1\nt._onMessage @ hammerhead.js:4\nr @ hammerhead.js:9\nr @ hammerhead.js:4\n(anonymous) @ hammerhead.js:4\nVM229:1 Uncaught SyntaxError: Unexpected token )\n    at parse (hammerhead.js:1)\n    at t._onWindowMessage (hammerhead.js:4)\n    at r (hammerhead.js:9)\n    at o (hammerhead.js:4)\n    at hammerhead.js:4\nparse @ hammerhead.js:1\nt._onWindowMessage @ hammerhead.js:4\nr @ hammerhead.js:9\no @ hammerhead.js:4\n(anonymous) @ hammerhead.js:4\nIt appears to throw on a parse function that tries to do: eval(\"(\"+text+\")\") where the text  is an empty string:\n\n. The script content for VM350:1 is quite simple:\n()\nThat's all. As for the only file not started with hammerhead, it's our vue.bundle.js file that webpack creates (non minified/optimized yet, but even the minified/optimized version has the same issue), I sent you an email with the link.. ",
    "magic-m-johnson": "Still occurring for me.\nhttps://github.com/DevExpress/testcafe/issues/1448#issuecomment-463527670. This is still (or again) occurring for me.\n\nHere are my dependencies.\n\"@storybook/addon-a11y@^4.1.11\":\n\"@storybook/addon-actions@^4.1.11\":\n\"@storybook/addon-backgrounds@^4.1.11\":\n\"@storybook/addon-centered@^4.1.11\":\n\"@storybook/addon-console@^1.1.0\":\n\"@storybook/addon-knobs@^4.1.11\":\n\"@storybook/addon-notes@^4.1.11\":\n\"@storybook/addon-options@^4.1.11\":\n\"@storybook/addon-viewport@^4.1.11\":\n\"@storybook/addons@4.1.11\":\n\"@storybook/channel-postmessage@4.1.11\":\n\"@storybook/channels@4.1.11\":\n\"@storybook/client-logger@4.1.11\":\n\"@storybook/components@4.1.11\":\n\"@storybook/core-events@4.1.11\":\n\"@storybook/core@4.1.11\":\n\"@storybook/mantra-core@^1.7.2\":\n\"@storybook/node-logger@4.1.11\":\n\"@storybook/podda@^1.2.3\":\n\"@storybook/react-komposer@^2.0.1\", \"@storybook/react-komposer@^2.0.5\":\n\"@storybook/react-simple-di@^1.2.1\":\n\"@storybook/react-stubber@^1.0.0\":\n\"@storybook/react@^4.1.11\":\n\"@storybook/ui@4.1.11\":\nstorybook-readme@^4.0.5:\ntestcafe-browser-tools@1.6.5:\ntestcafe-hammerhead@14.4.12:\ntestcafe-legacy-api@3.1.10:\ntestcafe-reporter-json@^2.1.0:\ntestcafe-reporter-list@^2.1.0:\ntestcafe-reporter-minimal@^2.1.0:\ntestcafe-reporter-spec@^2.1.1:\ntestcafe-reporter-xunit@^2.1.0:\ntestcafe@^1.0.0:\nreact@^16.6.3, react@^16.7.0, react@^16.8.1:\nTried with Firefox and Chrome on Linux, with and withouht disabled-extensions. No change.. ",
    "kaihaase-wd": "@AndreyBelym Thank you very much for your fast answer. We love your product, but for the integration in our stack we need the support for JWT in the npm version. When is an implementation of the support planned? We would like to support you with the integration, or is there a way to take over the source code from the app version?\n. @AndreyBelym sounds good, let us know if we can support you.\n. @churkin I would like to support you. What is the most efficient way for implementation? Are there guidelines or do I have to consider anything special? Let me know how we should communicate to talk about further details, slack or mail, whatever you prefer.\n. ",
    "sijosyn": "@miherlosev @inikulin - We are using CrossBrowserTesting platform in our company and if we had access to this browser provider, then we could easily run our TestCafe test scripts there. Could you please reconsider making crossbrowsertesting.com browser provider available for us?. Hi @AlexanderMoskovkin,\nThanks Alex for providing the instructions to create a new browser provider plugin. I followed the guide and I'm was able to create CrossBrowserTesting browser provider plugin. I have published my implementation on Github & NPM. Links provided below:\nGithub : https://github.com/sijosyn/testcafe-browser-provider-crossbrowsertesting\nNPM.  : https://www.npmjs.com/package/testcafe-browser-provider-crossbrowsertesting. @AlexanderMoskovkin we can go ahead and close this ticket.  This work is completed.. Can we get this feature implemented in ASAP - @AndreyBelym / @AlexanderMoskovkin? This issue is very annoying and blocking our test execution on Safari, Firefox (& maybe Edge/IE). We are still seeing this issue in the latest TestCafe version 0.20.0-alpha.1 ? Please let me know if I can help provide any additional debug logs. I already provided some logs here  - https://testcafe-discuss.devexpress.com/t/browser-disconnected-error-this-problem-may-appear-when-a-browser-hangs-or-is-closed-or-due-to-network-issues/383. Thanks @LavrovArtem, @miherlosev for investigating & fixing this issue quickly. Nice job. Let me know here the TestCafe version that will be available with this fix.. Following worked for me.  TestCafe ver 0.23.3 & Chrome 71.0 (on Mac 10.14.2)\ntestcafe 'chrome --allow-insecure-localhost --ignore-certificate-errors' test.js --ssl 'key=path/to/key;cert=path/to/cert'\nPassing pfx also worked\ntestcafe 'chrome --allow-insecure-localhost --ignore-certificate-errors' test.js --ssl pfx=path/to/pfx;. @VasilyStrelyaev Thanks for your prompt response. I installed the latest Windows OS updates on my machine and the Edge browser got updated to v17.17134.  I tried to run the same script in latest Edge v17 and the script runs fine without any issues. I'm unable to reproduce the browser disconnect issue. \nHowever, I noticed some performance issues when running the same script in different browsers on Win & Mac. Also the Safari 12 crashes with some strange error (see screenshot below).\nSafari 12 Crash log screenshot:\n\nTime to took to execute script in different browsers:\n- Safari 12.0.0 / Mac OS X 10.13.6 -  Browser crashes  (see log above)\n- Firefox 62.0.0 / Mac OS X 10.13.0 - Took  4m 45s \n- Chrome 70.0.3538 / Mac OS X 10.13.6 - Took 32s\n- Edge 17.17134.0 / Windows 10.0.0 - Took 1m 50s\n- Firefox 63.0.0 / Windows 10.0.0 - Took 53s\n- Chrome 69.0.3497 / Windows 10.0.0. - Took 50s\nCan you investigate why TestCafe takes very long time to execute such a small script? \nRegarding the page errors you mentioned, this is our demo page and we are aware of those page errors. I checked with our dev team about ",
    "vitalets": "@AlexanderMoskovkin Thanks for the link!\nBtw, how are dealing with alerts/prompts that block js thread?\n. But do you technically do this? You overwrite window.alert and don't actually show dialog but store info that it was called?\n. Ok, thanks! \nAlso what about parallel running of tests? is it possible? Did not fond this in docs..\n. Ok, thanks for detailed explanation! \nI think we can close the issue =)\n. ",
    "ghost": "Does TestCafe support IE? . Thank you @miherlosev!!\nI have another question, can the test take screenshot of a webpage?. Thanks a lot @miherlosev , some more questions; Can TestCafe integrate with TFS for automated build test, and report test status? How do people debug the script?. @meraj-ahmed looks like that really helped our pipeline to become stable. So instead of using testcafe call, we just start chrome with command line params setting up the resolution\n. ",
    "crudo": "@georgiy-abbasov It works like a charm. Thanks a lot!\n. ",
    "ganlanyuan": "@helen-dikareva \nThanks a lot, it works.\n. Got solution from discuss.\n. Hi, @AlexanderMoskovkin \nThanks for your awesome explanation, so every time I want to use the selector property, I should add a await keyword?\njavascript\nvar container = Selector('#base');\nvar parent = container.parent(); // no need to use `await` for selector, right?\nexpect(await parent.hasClass('classname'));\nexpect(await parent.boundingClientRect.left).to.equal(0);\n. Wow,\nThe built-in Assertions is excellent!\nThanks. Hi,\nWhen I test\njavascript\nconst container = Selector('#base');\nawait t\n    .expect(container.boundingClientRect.left).eql(0);\nGot the error\n1) AssertionError: expected undefined to deeply equal 0\nBut when I run\njavascript\nconsole.log(await container.boundingClientRect);\nI got\n```\n Running tests in:\n - HeadlessChrome 0.0.0 / Mac OS X 10.12.5\nbase\n{ left: -5973.3310546875,\n  right: 8959.9970703125,\n  top: 304.8125,\n  bottom: 663.8125,\n  width: 14933.328125,\n  height: 359 }\n``\nwhich showscontainer.boundingClientRectis anObject.\nBut why I couldn't get it'sleftproperty?\n. Thanks,\nI got theleftvalue usinggetBoundingClientRectProperty`.. Thanks. Thanks, \nPure js is enough. Thanks @AlexanderMoskovkin , \"nagigateTo\" is what I wanted.\nI'm actually testing several slideshows in one page.\nAfter clicking the prev/next buttons, the slideshow changed its position. So I want to refresh the browser to move it back to the original position.\nBTW, can I run parallel tests against each slideshow?. Thanks @VasilyStrelyaev  for your explanation.\n\nThis depends on whether a particular browser supports basic HTML5 features.\n\nMay I know which features Testcafe requires right now?\n. Thanks @VasilyStrelyaev for the information!\nHave a blessed weekend!. ",
    "s-adachi2016": "Hello Alexander,\nThanks for reply.\n\nPlease confirm, do you try to run tests via https://github.com/azu/demo-test-cafe module? \n\nI tryed to run https://github.com/azu/demo-test-cafe module.\n\nAnd do you have testcafe version 0.9.0 ?\n\nYes.\nI confirmed package.json in demo-test-cafe module.\nNote taht\n\"dependencies\": {\n    \"testcafe\": \"^0.9.0\"\n  }\n\nIs the page with Hello World! text opened?\n\nI tryed to run a simple nodejs server and access to http://localhost:54000/ or http://(local IP :10...*):54000/.\nI confirmed that Hello World! text opened.\n. Hi georgiy-abbasov\nThank you for your reply.\nI opened port 1337,1338 via Win7 Firewall Setting.\nI tryed following command that you tell me\ntestcafe chrome test.js --ports 1337,1338\nBut test failed.\nDou you have other settings?\nPlease tell me firewall settings detail.\n. @georgiy-abbasov, thank you for your reply.\nI tryed to following your code.\n```\nvar http = require(\"http\");\nhttp.get('http://devexpress.github.io/testcafe/', function (res) {\n    var statusCode = res.statusCode;\nif (statusCode !== 200) {\n    console.log(` Request Failed.\\n Status Code: ${statusCode}`);\n\n    res.resume();\n    return;\n}\n\nconsole.log(` Request Success.\\n Status Code: ${statusCode}`);\n\n});\n```\nOutput is following.\n$ node request_proxy.js\n```\nevents.js:141\n      throw er; // Unhandled 'error' event\n      ^\nError: connect ETIMEDOUT (IP Address):80\n    at Object.exports._errnoException (util.js:907:11)\n    at exports._exceptionWithHostPort (util.js:930:20)\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1077:14)\n```\n. I added your code for proxy setting and modify following:\n```\nvar Http = require('http');\nvar req = Http.request({\n    host: 'proxy host name',\n    // proxy IP\n    port: 8080,\n    // proxy port\n    method: 'GET',\n    path: 'http://devexpress.github.io/testcafe/' // full URL as path\n}, function (res) {\n    res.on('data', function (data) {\n        console.log(data.toString());\n    });\n});\nreq.end();\n```\nProgram successed.\n. Hello AndreyBelym.\nThanks for your comment.\nI see your following comment.\n\nHello @s-adachi2016, testcafe-browser-provider-saucelabs internally uses wd.js, that is actually a >Node.js Selenium WebDriver client, but only for SauceLabs remote browsers and only in order to do >the following:\nStart/stop the remote browser\nResize the browser window\nTake a screenshot of the browser window\nAll test-related things are handled by the our proxy.\n. \n",
    "tiagorosendo": "Any update?\n. any update ?. Ok thanks ! . ",
    "ClaytonAstrom": "Looks good from my end, thanks @georgiy-abbasov !. Done!. Looks like if element is rendered in the overflow, testcafe has issues scrolling to the element and returns the error, The element that matches the specified selector is not visible. Thanks @AlexanderMoskovkin !\nWhile I originally thought that might work, I'm not sure how universal that would be for other scenarios I'm not thinking of.  Is it possible to instead emulate the mouse wheel scroll action?  Something like t.mouseUp(y) and t.mouseDown(y) where x is the number of times the action is invoked?\nThat would cover the majority of conventional actions I'd guess.  I can't think of when an x-axis would be smart rendered like the y-axis, so I believe that TestCafe will still automatically put the element in view without issue.  Will test to confirm.. Thanks @inikulin, that's pretty much exactly what I'm talking about.  I'll close the issue. I sure can!. Sorry, realized my own mistake.  For future reference, anyone looking at this thread, don't leave out the --remote-debugging-port option or it won't run.  I'm still running into bumps on my tests that I'm trying to debug now, but I don't think they require bugs on this board as of yet.. Sorry, realized my own mistake.  For future reference, anyone looking at this thread, don't leave out the --remote-debugging-port option or it won't run.  I'm still running into bumps on my tests that I'm trying to debug now, but I don't think they require bugs on this board as of yet.. Just as an update to my previous comment, my tests were throttled.  We had an extremely minimal aws instance.  Headless chrome works great!. Just as an update to my previous comment, my tests were throttled.  We had an extremely minimal aws instance.  Headless chrome works great!. Duplicate of #1515 I think. Thanks @helen-dikareva !  I am using both global and local (global installed on my machine, locally installed in CI environment).  This is happening for all tests I run.\nGiven the following code (./scripts/debug.js):\n```js\nimport { Selector } from \"testcafe\"\nfixture(\"Google test\")\n    .page(\"google.com\")\ntest(\"Google 1\", async t => {\n    await t.expect(Selector(\"img#hplogo\").visible).ok();\n})\nWhen I run:shell\ntestcafe chrome ./scripts/debug.js -r xunit\nI get:xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n\n\n\n\n```\nI first saw this issue after we built with version 0.17.0. To clarify the expected a bit:  the user should be able to specify the port that testcafe needs to validate on.  Especially if you have multiple instances on a single ip, you will need to translate the port number.  So 4444 could be mapped to 32756 on the host, for example.  This would namely be for AWS setups, or anyone with remotes and testcafe behind 2 separate NATs. ",
    "Angelmmiguel": "Hello @inikulin,\nYes, it's the same feature. I'm going to watch that issue :)\nThanks for your response!\n. \ud83d\udc4d @inikulin \n. ",
    "matt-catellier": "having issue with scrolling to bottom of an element. seems have addressed for extra width, but not adding extra height when scrolling? it is behind an element using display 'sticky'. ",
    "ryx": "Hi Andrey, thanks for the quick response. Your proposal looks even more useful than what I had in mind. It has the same effect but allows stepping through the execution of the tests, too. Great idea!. ",
    "miecio1212": "@inikulin I saw that but I don't see solution here.... ",
    "romanresh": "Clarification: \n negative offsetX means offset from right side; \n nagative offsetY means offset from bottom side. Yes, I do. And I had to use this workaround. But the built-in testcafe assert functions make comparisons a few times inside timeout. They make a few requests to a browser and check results (make assertion).\nBut await getHeaderText(1) will make request only once. Moreover, it will get innerText from the selector immediately. So, await before t.expectwon't make sense because the expect parameter will be calculated before expect() call.. I mean \njs\nconsole.log(await getHeaderText(1)) // \"text\". Closed because of this solution: https://github.com/DevExpress/testcafe/issues/1025. ",
    "ronaldohoch": "Hello @AlexanderMoskovkin\nI've made an example, basically, we can receive the same message we got in command, but the team receive in Slack's channel.\nUnfortunately, we don't have colors in slack, but can play with emojis.\n\n. ",
    "thecodechemist": "Going off the docs from https://github.com/Shafied/testcafe-reporter-slack, where does one put their slack team-name?\nTESTCAFE_SLACK_WEBHOOK=https://hooks.slack.com/services/*****\nTESTCAFE_SLACK_CHANNEL='#testcafe'\nTESTCAFE_SLACK_USERNAME=testcafebot. ",
    "mkubrycz": "Thank you! That explains my problem.. As a temporary workaround for this issue I'm using this module, maybe someone here will find it helpful. Hi @churkin,\nso I've tried and skipping js errors results with error:\n1) The specified selector does not match any element in the DOM tree.\nmy browser displays just blank page although url is correct.. @churkin \nFor example you can try setting simple react app with create-react-app and then follow instructions on storybook page.\nI get the same results here without any js errors\ntestcode:\n```js\nimport { Selector } from 'testcafe';\nconst helloButton = Selector(\"button\").withText(\"Hello Button\");\nfixture Storybook\n    .page http://localhost:9001/;\ntest('Storybook example', async t => {\n    await t\n        .switchToIframe(\"#storybook-preview-iframe\")\n        .click(helloButton);\n});\n```\nI've created github repo with this problem, just:\nbash\n$ npm install\n$ npm run storybook\ntest is under test/test-example.js. @miherlosev \nSorry I was copying quickly from another example I was trying to run. It was supposed to be:\n```js\nimport { Selector } from 'testcafe';\nconst helloButton = Selector(\"button\").withText(\"Hello Button\");\nfixture Storybook\n    .page http://localhost:9001/;\ntest('Storybook example', async t => {\n    await t\n        .switchToIframe(\"#storybook-preview-iframe\")\n        .click(helloButton);\n});\n``\nfrom the start.\nI've fixed this in my [repo](https://github.com/mkubrycz/test-storybook-example). Still doesn't work, when I run normally I getUncaught TypeError: se[e.type] is not a functionand when I'm ignoring js errorsThe specified selector does not match any element in the DOM tree.and there's nothing displayed in the browser window besidesWaiting for an element to appear`.. Thank you @miherlosev and @churkin !\nnew version indeed fixed my problem.. But you can do exactly the same thing using TestCafe API:\njavascript\nlet submitBtn = Selector('form input').withText('Submit')\nlet submitForm = Selector(input).withText('Submit').parent()\nIMHO it reads better than clumsy XPath. @AlexanderMoskovkin thanks for explaining! I thought it was still a Testcafe selector, my main issue with this was that I still wanted to use this filtered set of selectors as:\njs\nawait t.click(visibleItems.nth(0));\nso I came up with an idea that solves my problem:\n```js\nimport { Selector } from 'testcafe';\nfixture('only visible tab items')\n.page('https://reactcommunity.org/react-tabs/example/');\nconst tab = opt => Selector('[role=\"tab\"]').nth(opt);\nconst items = Selector('[role=\"tabpanel\"] h2');\nconst visibles = [];\nconst visibleItems = Selector('[role=\"tabpanel\"] h2').filter((node, idx) => visibles[idx], { visibles });\ntest('succeed to count visible items', async (t) => {\n  await t\n  .click(tab(1))\n  .expect(items.count).eql(9);\nfor (let i = 0; i < await items.count; i += 1) {\n    visibles.push(await items.nth(i).visible);\n  }\nawait t\n  .expect(items.nth(0).visible).eql(false)\n  .expect(items.nth(1).visible).eql(false)\n  .expect(items.nth(2).visible).eql(false)\n  .expect(items.nth(3).visible).eql(true)\n  .expect(items.nth(4).visible).eql(true)\n  .expect(items.nth(5).visible).eql(true)\n  .expect(items.nth(6).visible).eql(false)\n  .expect(items.nth(7).visible).eql(false)\n  .expect(items.nth(8).visible).eql(false)\n  .expect(visibleItems.count).eql(3)\n  .hover(visibleItems.nth(0))\n  .click(visibleItems.nth(1));\n});\n```\nof course it would be helpful if there was a simpler way for this. In my experience visibility checking is quite a big deal in e2e testing.. Thank you @AlexanderMoskovkin for reply.\nSince I've posted this issue I was still investigating, and it came to my attention that there's different behavior causing this. I thought the problem was that something is on top of my target element but it really was that my element from underneath is being hidden when the one on top is showing and this actually causes hover action to fail.\nI've updated the fiddle: https://jsfiddle.net/s0mnL71L/1/\nplease run the same test code on this one\nmy problem is that testcafe is hovering over this element but since it disappears at the same moment it's failing to find it after performing an actual hover action.. ok, I've tested your code and it works, both on 0.14 and 1.0.0-rc3. It seems like the real issue is when a message is received by maildev because I'm still getting freezes in my tests. I used firefox 56.0 as well and with the same result. I don't have any issues when doing everything manually though.. ok, I've tested your code and it works, both on 0.14 and 1.0.0-rc3. It seems like the real issue is when a message is received by maildev because I'm still getting freezes in my tests. I used firefox 56.0 as well and with the same result. I don't have any issues when doing everything manually though.. I can't reproduce this, it's weird because all I do before opening maildev UI is send email via my app UI. It seems like issue with my setup, your example works just fine. Thank you for your help. I can't reproduce this, it's weird because all I do before opening maildev UI is send email via my app UI. It seems like issue with my setup, your example works just fine. Thank you for your help. I tried debugging again and got this message:\n```bash\n1) Error on page \"http://localhost:1080/#/\":\n  Uncaught Error: [$rootScope:infdig]\n\nhttp://errors.angularjs.org/1.2.3/$rootScope/infdig?p0=10&p1=%5B%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%207%3B%20oldVal%3A%206%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%208%3B%20oldVal%3A%207%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%209%3B%20oldVal%3A%208%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%2010%3B%20oldVal%3A%209%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%2011%3B%20oldVal%3A%2010%22%5D%5D\n```\nit happens every time after I refresh the maildev page after it hangs in debug mode.. I tried debugging again and got this message:\n```bash\n1) Error on page \"http://localhost:1080/#/\":\n  Uncaught Error: [$rootScope:infdig]\n\nhttp://errors.angularjs.org/1.2.3/$rootScope/infdig?p0=10&p1=%5B%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%207%3B%20oldVal%3A%206%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%208%3B%20oldVal%3A%207%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%209%3B%20oldVal%3A%208%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%2010%3B%20oldVal%3A%209%22%5D%2C%5B%22fn%3A%20function%20()%7Bvar%20a%3Dd.url()%2Cb%3Dh.%24%24replace%3Bl%26%26a%3D%3Dh.absUrl()%7C%7C(l%2B%2B%2Cc.%24evalAsync(function()%7Bc.%24broadcast(%5C%22%24locationChangeStart%5C%22%2Ch.absUrl()%2Ca).defaultPrevented%3Fh.%24%24parse(a)%3A(d.url(h.absUrl()%2Cb)%2Cf(a))%7D))%3Bh.%24%24replace%3D!1%3Breturn%20l%7D%3B%20newVal%3A%2011%3B%20oldVal%3A%2010%22%5D%5D\n```\nit happens every time after I refresh the maildev page after it hangs in debug mode.. @AlexanderMoskovkin unfortunately no, I ended up using MailCatcher instead of MailDev and it works just fine.. @AlexanderMoskovkin unfortunately no, I ended up using MailCatcher instead of MailDev and it works just fine.. Hi @HariHaraReddyD, correct me if I understood you wrong but if your goal is to have a page object that is accessible to more than one fixture (or file) you can always create a separate page object file like yourPage.pageObject.js somewhere in your project (preferably pageObjects folder) and export anything you want from it (documentation and explanation of exporting in JS). Then you can import what you have exported and access all your selectors wherever you want (documentation and explanation of importing in JS). Just follow steps described here. \nAnother thing is, that you don't necessarily want to have one big page object containing all your selectors. The purpose of the page object is to split code, make it more readable, maintainable, and reusable. This article should explain it better than me.\nKeep up good work ;). ",
    "lexkazakov": "approved. looks OK for me. Everywhere in tables there must be dots in descriptions.. yep. Selectors allow you to get a server-side representation of a DOM node's state. \nThis representation (so called \"snapshot\") exposes API that is similar to DOM objects.. [Kazakov: rewrite to:]\nA selector allows you to get a server-side representation of a DOM node's state from the tested webpage - DOM node snapshot.. If you need to pass arguments for the specified browser, you should write them right after browser alias. Surround the browser call and its arguments with quotation marks:. You can also specify arguments for portable browsers. If a path to a browser contains spaces, the path should be surrounded with backticks:. You can specify arguments for local browsers only.. ok, just remove you should. agree. The approach described above allows you to create stable tests that lack random errors and run fast without extra waitings.. TestCafe provides a full-featured set of built-in assertions, so you do not need to reference additional libraries. \nUse assertions with Selector's DOM node state properties to enable Smart Assertion Query Mechanism and create stable, fast and reliable tests, that do not depend on page response time.\n. Example.\nLet's create a test for the following web page.\n```html\n\n\nvar btn = document.getElementById('btn');</p>\n<p>btn.addEventListener(function() { \n    window.setTimeout(function() {\n        btn.innerText = 'Loading...';\n    }, 100);\n});\n \n```\nThe test code will look as follows.\n```js\ntest('Button click', async t => {\n    const btn = Selector('#btn');\nawait t\n    .click(btn)\n     // NOTE: Regular assertion will fail immediately, but TestCafe retries to run DOM state\n     // assertions many times until this assertion pass successfully within the timeout.\n    // The default timeout is 3000 ms.\n    .expect(btn.textContent).contains('Loading...');\n\n});\n```\n[Kazakov: pay attention to the specified timeout, that makes the example more clear]. Target element should contain the first symbol of text input when the input event raised at the first time.. Check the target element value when the first input event raised. Text and the following code sample looks good for me.. Navigate to the following URL from each remote browser.. TestCafe allows you to write tests using both TypeScript and modern JavaScript with the latest features like async/await.. TestCafe allows you to write tests using both TypeScript and modern JavaScript with the latest features like async/await.. enables or disables touch support. I'm sure it's obvious what ints we do mean :). Let's break this into 2 parts:\n\nThe headless mode is available for Mac and Linux in Chrome 59. You need a Canary build to enable headless mode on Windows. \n\nSpecify a path to installation location, if you install a portable version of Chrome:. device=\\** - the emulated device (see the full list of supported devices in DevTools -> \u2807->Settings -> Devices);. cdpPort=\\<number> - a free port (0-65535) used for the Chrome Debugging Protocol.. Specify the custom device parameters, if the device name is not set.. Specify the emulated device name using the device property, if the device width is not set.. Specify the emulated device name using the device property, if the device height is not set.. Depends on a chosen device or your system parameters.. Whether to emulate a mobile device. This includes the viewport meta tag, overlay scrollbars, text autosizing and more. | true if a mobile device is set via the device property. Otherwise false.. Enables or disables the touch event emulation. | true if a touch-supported device is set via the device property or your system supports touch events. Otherwise false.. Firstly, import the testcafe module.. To start writing tests with TypeScript, install TestCafe into your project directory. For more information, see Installing TestCafe. Now TestCafe allows you to run your tests in Google Chrome in headless and device emulation modes.. ... To run tests in headless mode, use the :headless postfix:. ... To run tests in device emulation mode, specify emulation: and device parameters:. The runner's speed option affects the speed of 'doubleClick' action (#1486). A test report has too small line length on Travis (#1469). In headless mode the browser's viewport size is 1280x800 by default. You can change it via the (ResizeWindow)[../../test-api/actions/resize-window.html] command or via Device Emulation Mode parameters.. Mouse pointer X coordinate that defines a point where the dragToElement action is finished.. Mouse pointer Y coordinate that defines a point where the dragToElement action is finished.. By default, the dragToElement action is finished in the center of the destination element.. By default, the dragToElement action is finished in the center of the destination element.. DocumentFragm**ent. ",
    "jgraup": "Thans @inikulin, \nI apologize. The example I gave changed some variables but maybe that was a good thing. I tried the above code and it worked like it worked for you. I went back to my test and I was using int numbers instead. This does appear to be working but only if the number is in quotes.\njs\nconsole.log('THIS IS OK');\nvar button = await t.select(() => document.querySelector('custom-tag[data-custom-foo=\"1234\"]'));\njs\nconsole.log('WILL FAIL');\nvar button = await t.select(() => document.querySelector('custom-tag[data-custom-foo=1234]'));\nSo this issue is possibly misleading. In summary; a string value is OK while a number value without quotes failed for me.. @inikulin - Thanks! That's good to know. I would consider this not an issue at this point. jQuery might be a little more relaxed in it's rules but good to stick to the spec.. ",
    "chit786": "How to click on this pseudo-selector, we have a situation where we have to 'click' on the pseudo selector (which is basically an icon). Any suggestion?\n. Currently this is how I am clicking on the element\n```\nawait t\n    .hover(Selector('div.display.inline-textarea'));\n        const clickedElem = await t.eval(() => document.getElementsByClassName('release-description')[0]\n            .getElementsByClassName('edit-icon')[0].click());\n\n```. ",
    "gowram": "I tried this way, but it queried till \njs\ndocument.querySelector('#sbPageContainer')\nrest got skipped, no error message as well.\ni think \"shadowRoot\" failed to get element, is there any workaround?. @AndreyBelym \nIt's pointing to the element successfully but click event is not happening, even i tried with wait(50000).\nI have angular page which is part of Salesforce org, that's the reason I won't be able share with you?\njs\ndocument.querySelector('#sbPageContainer').shadowRoot.querySelector(\"#content\").children[0].shadowRoot.querySelector(\"#lineEditorPageHeader\").querySelector(\"#actions\").children[0].shadowRoot.querySelectorAll(\"paper-button#mainButton\")[0]\nthe flow was perfect except the click, if possible can we have a call?\n. I tried this one and expect is waiting for before dom load, i am looking form something after dom load. \njs\ntest('test with Assertion', async t => {\n    await t\n        .expect(Selector('#textarea').exists).ok({ timeout: 20000 })\n        .click('#textarea');\n});. ",
    "varunkumar": "@gowram Were you able to get this working? If so, what is the fix. Please re-open if the issue still exists. Linking my issue here -- https://github.com/DevExpress/testcafe/issues/1312. Thanks. Will check and get back.. This is working as expected. However, I noticed an issue with scrolling when the element is not in view. Logged #1808 for that. I will see if I can provide an PR for this. . I am facing the same problem in RedHat. Close, resize and screenshot functionalities are not working.\n```bash\n$uname -r \n3.10.0-514.26.2.el7.x86_64\n$lsb_release -a\nLSB Version:    :core-4.1-amd64:core-4.1-noarch\nDistributor ID: RedHatEnterpriseServer\nDescription:    Red Hat Enterprise Linux Server release 7.3 (Maipo)\nRelease:        7.3\nCodename:       Maipo\n```\n. I use X11 forwarding with putty.. Thanks, it was indeed an issue with X11 forwarding. Connected to the same machine and the browser got closed fine.. Is this related to #1670?. Warnings (1):\n --\n  Was unable to take a screenshot due to an error.\nspawn EPERM. Does it require 'admin' access in windows for taking screenshots?. I tried reinstalling testcafe and all node modules related to my project. I have write access to the folder where I am trying this out. Still facing the same issue.. Upgraded to the latest version but still the same error. In fact, I have cleaned up the whole node_modules and tried again. Screenshots throw warning 'spawn EPERM' and browsers are not getting closed. I am trying with Chrome for now.. Yes, there must be some antivirus software at workplace.. @AlexanderMoskovkin I see that there is custom scroll handler -- https://github.com/DevExpress/testcafe/blob/master/src/client/automation/playback/scroll.js. Any reason why scrollIntoView() is not used here? For now, I have added a customMethod to my selector and scrolling the node to view from there using scrollIntoView() API.. @AlexanderMoskovkin I see that there is custom scroll handler -- https://github.com/DevExpress/testcafe/blob/master/src/client/automation/playback/scroll.js. Any reason why scrollIntoView() is not used here? For now, I have added a customMethod to my selector and scrolling the node to view from there using scrollIntoView() API.. Please provide me pointers to get started with this bug. I would be happy to contribute the fix for this.. Please provide me pointers to get started with this bug. I would be happy to contribute the fix for this.. @AndreyBelym Thanks for the pointer. That did help the scrolling bit. I have tested the fix locally and the page is getting scrolled to the element inside shadowDOM as well. However, I see that there are still issues with performing actions on elements not on viewport. The mouse cursor's position is not calculated properly. \nI would like to get an overview of the architecture of testcafe, core, hammerhead, etc so that I can fix these issues myself and contribute back. What would be the good place to start?. @AndreyBelym Thanks for the pointer. That did help the scrolling bit. I have tested the fix locally and the page is getting scrolled to the element inside shadowDOM as well. However, I see that there are still issues with performing actions on elements not on viewport. The mouse cursor's position is not calculated properly. \nI would like to get an overview of the architecture of testcafe, core, hammerhead, etc so that I can fix these issues myself and contribute back. What would be the good place to start?. When is the next patch expected to be published with this change? . ",
    "haijayxc": "hi\uff01\nIs this problem solved?. Hello,  I did as you said, but it is always loading and last i got this error:\nbash\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nand this is the content of testcafe-browser-tools.log, what should i do?\n``` bash\nThu Sep 14 2017 10:36:29 GMT+0800 (CST) find-window\nThu Sep 14 2017 10:36:29 GMT+0800 (CST) find-window before 1st exec\nThu Sep 14 2017 10:38:27 GMT+0800 (CST) close\nThu Sep 14 2017 10:38:27 GMT+0800 (CST) find-window\nThu Sep 14 2017 10:38:27 GMT+0800 (CST) find-window before 1st exec\nThu Sep 14 2017 10:38:27 GMT+0800 (CST) find-window Error: Command failed: /usr/bin/osascript /Users/xxx/node_modules/testcafe-browser-tools/bin/mac/find-window.scpt S1g74iPwcW\n/Users/xxx/node_modules/testcafe-browser-tools/bin/mac/find-window.scpt: execution error: \u6587\u4ef6\u8bb8\u53ef\u9519\u8bef\u3002 (-54)\nat ChildProcess.exithandler (child_process.js:211:12)\nat emitTwo (events.js:106:13)\nat ChildProcess.emit (events.js:191:7)\nat maybeClose (internal/child_process.js:885:16)\nat Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\n\nThu Sep 14 2017 10:38:27 GMT+0800 (CST) close failed to get window\n```\n. ",
    "RemeJuan": "I think this may be related. We have a container which is fixed and are unable to find the child within it that is also fixed, while I can find the non-fixed elements.\nparent (fixed)\n  --child (NOT fixed)\n  --child (NOT fixed)\n  --child (NOT fixed)\n  --child (fixed) [cannot be found]. ",
    "ymor": "I came across this issue recently when i had chained expect/asserts, however one of the expects was missing an assert.  This made the whole test pass even though the first expect + assert should have failed.\nExample:\n```\nimport { Selector } from 'testcafe'; // first import testcafe selectors\nfixture Getting Started// declare the fixture\n    .page https://devexpress.github.io/testcafe/example;  // specify the start page\n//then create a test and place your code there\ntest('My first test', async t => {\nconst header = await Selector('header h1');\nconst input = await Selector('#developer-name');\n\nawait t\n    .expect(header.textContent).eql('derp') //Should fail\n    .expect(input.textContent);\n\n}); \n. Hi,\nI've managed to recreate this heres an example:\nimport { Selector } from 'testcafe'; // first import testcafe selectors\nfixture Getting Started// declare the fixture\n    .page https://devexpress.github.io/testcafe/example;  // specify the start page\n//then create a test and place your code there\ntest('My first test', async t => {\nconst header = await Selector('header h1');\nconst input = await Selector('#developer-name');\n\nawait t\n    .expect(header.textContent).eql('derp')\n    .expect(input.textContent).eql('');\n\n});\n```\nIt only seems to occur when using chaining multiple expect asserts and when the failure does not occur in the last expect/assert.  e.g if you flip the two expects around in the example,  you won't see the unhandled promise rejection\nBTW this error occurring did lead me to find another issue in my tests! I found some expects without asserts that were causing the test to incorrectly pass on previous versions of test cafe.. ",
    "bxt": "Since this adds a then method, the \"first half\" of an assertion is now regarded a Promise by JS and you can no longer return it from an async method. I.e. this code:\njs\n  async expectFooDisabled() {\n    return this.t.expect(\n      Selector('button')\n        .withText(await getText('FOO'))\n        .getAttribute('disabled')\n    );\n  }\n  async expectFooDisabledTrue() {\n    return (await this.expectFooDisabled()).eql('true');\n  }\nWill now cause the error \"An assertion method is not specified.\".\nThe workaround is to do the whole assertion in the function:\njs\n  async expectFooDisabledIsEqualTo(value) {\n    return this.t.expect(\n      Selector('button')\n        .withText(await getText('FOO'))\n        .getAttribute('disabled')\n    ).eql(value);\n  }\n  async expectFooDisabledTrue() {\n    return this.expectFooDisabledIsEqualTo('true');\n  }. I also think these regexes should be removed for two reasons:\n\nLike mentioned before it prevents you from putting test case generators into a library file. The tests will just stop running without any notice. This left me wondering with no indication what happended.\nAlso if you do rely on the behavior of the regexes and have e.g. some database cleanup code in a JS file, once a developer puts in test. and fixture. into them (even in a comment) they are suddenly run. This is I think very unexpected and might cause data loss etc.\n\nI also do not agree with @kirovboris's previous points:\n\nAs I said before, we can't run every file by glob patterns like test/**/*.js because of side effects in non test files.\n\nMost people probably name their tests files something like foo.spec.js anyways, so one could use test/**/*.spec.js then. There are also other tools which need extra configuration just for testcafe (see e.g. #1735) and those also use such a globs, so there would be no changes required in most cases.\nFor now I will put a comment like this into every test file:\n// test( fixture( <- workaround for https://github.com/DevExpress/testcafe/issues/2074\n\nWhich unlike Evan's solution does not require any actual code but still is very hack-y.. @miherlosev You also fixed another bug here: the hours were not in 24h format, but are now! \ud83c\udf89\ud83c\udf89\ud83c\udf89 Thank you!. ",
    "marchugon": "Ok for me, it worked with v0.12.0-alpha1. Ok for me, it worked with v0.12.0-alpha1. Sorry, my bad, running well after upgrade !. ",
    "AlexKamaev": "I've modified your test with actual selectors (it looks like the selectors on your page have changed since the bug was created).\n```JS\nimport { Selector } from 'testcafe';\nfixture GH-1994 - The element that matches the specified selector is not visible\n    .page https://demos.devexpress.com/bootstrap/GridView/Filtering.aspx;\ntest('TEST', async t => {\n    await t\n        .click(Selector(\"#Content_GridViewHeaderFilter button\"))\n        .typeText(Selector(\"#Content_GridViewHeaderFilter_HFFDE0_I\"), \"7/8/2014\")\n        .typeText(Selector(\"#Content_GridViewHeaderFilter_HFTDE0_I\"), \"7/9/2014\") // second input, which clears itself after button click\n        .click(Selector(\"#Content_GridViewHeaderFilter_DXHFP_TPCFCm1_P button\")); // button\nawait t.expect(Selector(\"#Content_GridViewHeaderFilter_DXDataRow0\").child(\"td\").nth(0).innerText).eql(\"7/8/2014\");\n\n});\nI cannot reproduce the issue now, and I'll close it. If the issue still occurs, feel free to reopen it.. @DevSide\nThank you for your feedback.\nWe do not have immediate plans to implement it. However, I find your suggestion interesting and we'll consider its implementation in the future.. @devdelpiero\nTestCafe already has some functionality for intercepting HTTP Requests. Please refer to the following article: https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/\nAt the moment we think that implemented functionality is sufficient to satisfy needs of most users, so at this moment we don't have plans of moving in this way.. @natkrish\nWe've been recently asked a similar [question](https://stackoverflow.com/questions/53418460/error-unable-to-find-the-browser-browserstackchrome68-0windows-10-is-not) on the StackOverflow. Let's continue the discussion there.. @qualityshepherd\nThe Roles mechanism can help you solve this issue. If you have some problems with it, feel free to create a separate ticker using this [form](https://github.com/DevExpress/testcafe/issues/new?template=bug-report.md)\nWe would really appreciate if you provide a sample project which demonstrates the issue.. @magic-m-johnson \nSince this issue is closed, I recommend you create a separate one using the following [form](https://github.com/DevExpress/testcafe/issues/new?labels=&template=bug-report.md)\nPlease provide us all the information which will help us to reproduce the issue on our side.. closed in #2187. The issue is reproduced in ASPxDemos v17.2 because the demos use testcafe version 0.18.2.\nThe same test in ASPxDemos v18.1 is not commented and it passes. Also I've checked the current testcafe version, and the test also passes.\n\u00a0. Hi, @Thejaswi05 \nYour scenario looks valid, so it should work. Would you please provide me with your page to investigate the issue in detail?. @Thejaswi05 yes, a page URL or a very simple example which I could examine on my machine. Thanks, I'll investigate the issue. @Thejaswi05 \nCould you also provide me with credentials to some test account? We need them for debugging.. @Thejaswi05 \nI've tried to visit https://dev.bbidsdev.com/index.html#/joinnow and it seems the site does not work correctly. I see an empty page. Do you have the same problem with the site?. I cannot register manually and do not get a confirmation message on my email. Nonetheless, I consider your scenario correct. From your test code I can't understand if you are logged in already after registration. Let's see your test example:JS\nawait t\n    .expect(registrationPage.btnLogin).ok()\n    .typeText(registrationPage.emailId, emailId)\n    .typeText(registrationPage.password, password.valid)\n    .click(registrationPage.btnLogin)\n```\nI see that you do these steps:\n1) type email\n2) type password\n3) click login button\nWhat should happen next? As I mentioned before, I was redirected to the #SignIn page. It means that you should sign in with your new login/password. After you logged in with your new login/password, testcafe saves cookies/localstorage and then you will be logged in with the second test.\n. Hi @rafrsr\nYour scenario is correct and the user should be logged in in the second test. As you mentioned, the role should save localStorage just after the role initializer and should restore it on each time useRole() is used. Would you please provide me with an example or link to your website to research the issue in detail?. @qualityshepherd \nWe haven't faced any similar issue since it was fixed in the 0.19 version, so probably the cause of the issue is different. I think it would be better if you create a separate issue using this form.\nWe would appreciate it if you provide us with any additional information, which will help us to reproduce the issue.. @testcafe-build-bot \\retest. FPR. fixed in https://github.com/DevExpress/testcafe-hammerhead/issues/1658. I was't able to reproduce it. closed in https://github.com/DevExpress/testcafe-hammerhead/issues/1652. Hi\nI've researched the issue. Testcafe really contains the logic to determine if the element is not moving. It checks position of target element before and after short period of time. So if position have changed during this interval the element is considered to be moving. @ameyagholkar mentioned that the test can be reproduced only on CI in concurrent mode, so I assume that the problem can be connected with the performance.. Probably, the transition is going slower than our mechanism, which detects motion and the target element is processed as ready for action.\nIn this situation, the best choice for us would be using transitionstartand transitionendevents to detect if an element is in transition. Unfortunately chrome does not support the transitionstartevent.\n\u00a0\nFor now, you can try decrease the speed of test execution. It should increase the period of time when an element position is checked, so detection of the element motion will be more reliable.\n\u00a0\nPlease follow this article:\nhttps://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#setting-test-speed\n\u00a0\n. Hi\nAs you are using OSX, you do not have IE. But in the log I see the following:\nRunning tests in browsers: chrome, ie, firefox\nand\nat checkBrowserPath$ (node_modules/testcafe-browser-tools/lib/api/open.js:34:33)\nSo, I think it should work if you remove IE (and other missing browsers) in\n ..\\test\\functional\\config.js\nSimply modify the testingEnvironments[testingEnvironmentNames.localBrowsers] variable value\nAs for the gulp test-client, these tests work in a browser and it is required to open http://localhost:2000 in your browser.\nI have also noticed that some AppVeyour tests failed.\n145  1) [API] t.takeScreenshot() Should take a screenshot:\n146\n147      AssertionError: expected false to deeply equal true\n148      + expected - actual\n149\n150      -false\n151      +true\n152      \n153      at test\\functional\\fixtures\\api\\es-next\\take-screenshot\\test.js:18:88\n154      at <anonymous>\nPlease take a look at this test.\njs\nit('Should take a screenshot', function () {\n    return runTests('./testcafe-fixtures/take-screenshot.js', 'Take a screenshot', { setScreenshotPath: true })\n        .then(function () {\n            expect(SCREENSHOT_PATH_MESSAGE_RE.test(testReport.screenshotPath)).eql(true);  <---- failed here because of changes in comment\n            expect(assertionHelper.checkScreenshotsCreated(false, 4)).eql(true);\n        });\n});\nI have added a comment to the problematic code in the 'Files changed' tab\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @AndreyBelym please review. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. closed\nlook at https://github.com/DevExpress/testcafe/pull/2105. Hi\nI've created a sample based on your description. You can find it on jsFiddle at https://jsfiddle.net/69z2wepo/143846/\nThe Submit button is available only when the Name and Password fields are both filled in.\nPlease try the following test with the jsFiddle example:\n```JS\nimport { Selector } from 'testcafe';\nfixture GH-2139\n    .page https://jsfiddle.net/69z2wepo/143846/;\ntest(the onChange event is not working with a React application, async t => {\n    const name = Selector('#container input.react-input');\n    const password = Selector('#container input.react-password');\n    const submit = Selector(\"input[type='submit']\");\nawait t\n    .switchToIframe(new Selector('iframe'))\n    .click(submit)   //  a click on the disabled button does not call alert\n    .typeText(name, 'User name')\n    .click(submit)   //  a click on the disabled button does not call alert\n    .typeText(password, 'User password')\n    .setNativeDialogHandler(() => true)\n    .click(submit);\n\n});\nThe test should run fine. Would you please compare my example with yours to find the difference which leads to the issue in your case? Alternatively, you can provide your example which reproduces the issue.\n. Hi\nI've created a sample based on your description. You can find it on jsFiddle at https://jsfiddle.net/69z2wepo/143846/\nThe Submit button is available only when the Name and Password fields are both filled in.\nPlease try the following test with the jsFiddle example:JS\nimport { Selector } from 'testcafe';\nfixture GH-2139\n    .page https://jsfiddle.net/69z2wepo/143846/;\ntest(the onChange event is not working with a React application, async t => {\n    const name = Selector('#container input.react-input');\n    const password = Selector('#container input.react-password');\n    const submit = Selector(\"input[type='submit']\");\nawait t\n    .switchToIframe(new Selector('iframe'))\n    .click(submit)   //  a click on the disabled button does not call alert\n    .typeText(name, 'User name')\n    .click(submit)   //  a click on the disabled button does not call alert\n    .typeText(password, 'User password')\n    .setNativeDialogHandler(() => true)\n    .click(submit);\n\n});\n```\nThe test should run fine. Would you please compare my example with yours to find the difference which leads to the issue in your case? Alternatively, you can provide your example which reproduces the issue.\n. Hi\nIf you want to use roles mechanism to keep data between tests, you need to call localStorage functions from Role logic. I've modified your example to demonstrate this approach:\n```\nimport {Role, Selector} from \"testcafe\";\nfixture(\"Test local storage\")\nconst myrole = Role(\"http://da.viddiaz.com/tmp/testcafe.html\", async t => {\n    await t\n        .expect(Selector(\"#items\").textContent).eql(\"0\")\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .expect(Selector(\"#items\").textContent).eql(\"4\");\n}, { preserveUrl : true });\ntest(\"Test adding to local storage\", async t => {\n    await t.useRole(myrole);\n});\ntest(\"Test local storage is saved\", async t => {\n    await t.useRole(myrole);\n    await t.expect(Selector(\"#items\").textContent).eql(\"4\");\n});\n```\nHere I'm using the preserveUrl option to start a new test from Role's url.\nI need to mention that I faced an issue when not using the preserveUrl option. We need time to research it. But since you use preserveUrl you should not have any problems.\nPlease also note that the roles mechanism was designed for authentication purposes. If you use it for a different goal, you may face architectural limitations.. In this case, you don't need roles. If you need to modify localStorage from multiple tests, you need to write custom code for these purposes.\nUse CustomFunctions for saving and restoring localStorage on afterEach and beforeEach hooks.\nSee the example below:\n```\nimport { Selector, ClientFunction} from \"testcafe\";\nconst loadLocalStorageFromGlobalStorage = ClientFunction((storage) => {\n    Object.keys(storage).forEach(key => {\n        window.localStorage.setItem(key, storage[key])\n    });\n    updateItemsCount();\n});\nconst getActualLocalStorageStage = ClientFunction(() => {\n    var storage = { };\n    Object.keys(localStorage).forEach(key => {\n        var value = localStorage.getItem(key);\n        if(value && value.indexOf('bla') > -1)\n            storage[key] = localStorage.getItem(key);\n    });\n    return storage;\n});\nlet sharedLocalStorage = { };\nfixture(\"Test local storage\")\n    .page(\"http://da.viddiaz.com/tmp/testcafe.html\")\n.beforeEach( async t => {\n    await loadLocalStorageFromGlobalStorage(sharedLocalStorage);\n})\n.afterEach( async t => {\n    sharedLocalStorage = await getActualLocalStorageStage();\n});\n\ntest(\"Test 1\", async t => {\n    await t\n        .expect(Selector(\"#items\").textContent).eql(\"0\")\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .expect(Selector(\"#items\").textContent).eql(\"4\");\n});\ntest(\"Test 2\", async t => {\n    await t\n        .expect(Selector(\"#items\").textContent).eql(\"4\")\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n});\ntest(\"Test 3\", async t => {\n    await t\n        .expect(Selector(\"#items\").textContent).eql(\"6\")\n});\n```\nBefore each test, we load data from global sharedLocalStorage. And after each test, we save it to sharedLocalStorage.\nNote that the loadLocalStorageFromGlobalStorage function will be executed after your test page is loaded so you need to call updateItemsCount function to update your html.\nSo add this code onto your page:\nfunction updateItemsCount () {\n    document.querySelector(\"#items\").innerHTML = localStorage.length;\n}\nPlease also note that if you write tests that depend on each other, there is a risk that a lot of tests will fail even if only one test fails.. You are welcome =). @TestAndunR \nHi, would you please clarify what testcafe version you are using?\nWe had a similar issue, which is now fixed: https://github.com/DevExpress/testcafe/issues/2282. The fix is available starting from v0.19.2.\nIf your version is higher, could you please provide the page and the test file for me to investigate it?. Thanks for the details. I'll investigate it. @TestAndunR I've researched the issue. It appeared not to be connected with the original issue so I've created a separate ticket https://github.com/DevExpress/testcafe/issues/2475.. I recommended to add the updateItemsCount method to the page only to prevent code duplicating. In that example, we need to use the code document.querySelector(\"#items\").innerHTML = localStorage.length twice: on page load and on local storage restoring. You can modify the example in the following manner:\nJS\nconst loadLocalStorageFromGlobalStorage = ClientFunction((storage) => {\n    Object.keys(storage).forEach(key => {\n        window.localStorage.setItem(key, storage[key])\n    });\n    document.querySelector(\"#items\").innerHTML = localStorage.length;\n});\nAfter localStorage is restored you are free to write any JS code inside a ClientFunction.. Perhaps you've made a mistake in your selector. This error is of pure JS nature and is not connected to TestCafe. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. /cc @helen-dikareva @AndreyBelym . see API in tests. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. Hi\nNow this feature is implemented only to bypass proxy for specific tests according to the test page url. But your case seems to be important, so I think we'll support it as well.. Hello @amirse80 \nTestCafe CLI supports two options for using proxy. Please refer to the following articles:\n--proxy and --proxy-bypass.\nAccording to our documentation, the proxyoption specifies the proxy server used in your local network to access the Internet. If you do not have access to the second URL, I suppose that you need to use the proxy option.\nThe proxy-bypass option can be used together with the proxy option. It's required when you use proxy, but don't need to use proxy only for some specific resources.. Looks like it fails starting from the following commit \n\n09ea85815e7cf0ae5013ea9cd47ff35be4ec6266 Link without href but with tabIndex is focusable \n\nin testcafe-hammerhead repo. Looks like it fails starting from the following commit \n\n09ea85815e7cf0ae5013ea9cd47ff35be4ec6266 Link without href but with tabIndex is focusable \n\nin testcafe-hammerhead repo. fixed in testcafe-hammerhead https://github.com/DevExpress/testcafe-hammerhead/pull/1547. fixed in testcafe-hammerhead https://github.com/DevExpress/testcafe-hammerhead/pull/1547. Hi @tamlyn @hdorgeval \nI found that the ProseMirror editor contains this markup inside\nHTML\n<div class=\"placeholder ProseMirror-widget\" contenteditable=\"false\">Type here...</div>\nWhen testcafe performs the type action, it checks an element's 'contenteditable' attribute. For this reason, it does not work as expected.\nI recommend using\u00a0@hdorgeval\u00a0's solution or take a look at my workaround based on hdorgeval's one. See the listing below:\n```JS\ntest('empty editor with placeholder', async t => {\n  const selector = Selector('#with-placeholder div[contenteditable]');\n  await t\n    await typeTextInEditor(selector, \"Hello World\", t);\n    await t.expect(selector.innerText).contains('Hello');\n})\nasync function typeTextInEditor(selector, text, t) {\n  await goToEditMode(selector.find('p'));\n  await t.typeText(selector, text, { replace : true });\n}\nconst goToEditMode = ClientFunction(selector => {\n    selector().innerHTML += '_';\n});\n```\nIn this case, we update the element's inner text in\u00a0this function: \nJS\ngoToEditMode function \nand the Prose editor removes div with the contenteditable='false' attribute, so that you can use our type action.. > Could you help me understand why focusing the contenteditable=true div doesn't hide the placeholder as one would expect?\nTo hide a placeholder, it's required to click on the selector before typing.\nSo I think the correct version of the test should be the following:\nJS\ntest('empty editor with placeholder', async t => {\n  const selector = Selector('#with-placeholder div[contenteditable]');\n  await t\n    await t.click(selector);\n    await t.typeText(selector, 'Hellow world', { replace : true });\n    await t.expect(selector.innerText).contains('Hello');\n})\nAfter the click placeholder is hidden as expected, however the test failed, so this behavior is incorrect and should be fixed.\n. Here we use isDisplayNone instead of IsElementHidden, because the situation is possible when textNode is inside a div with height = 0 and width = 0. In this case text is still visible, so I think textNode should not be ignored. FPR. please review changes and comments. Hi, I was able to reproduce the described behavior so I've marked the issue as a bug.. Hi,\nI was able to reproduce the issue when the screen size is too small to display more than five items.\nTestCafe has a mechanism to scroll the page to the target element. This mechanism is based on an element's scrollTop and scrollLeft properties. However, Ionic uses its own mechanism of scrolling, so TestCafe cannot scroll the page to a required element.\nTo overcome this issue, I recommend using the Custom Methods feature http://devexpress.github.io/testcafe/documentation/test-api/selecting-page-elements/selectors/extending-selectors.html#custom-methods:\nPlease see the code below:\n```JS\nconst tabButton = Selector('span.tab-title');\nconst fifthBook = Selector(\".masonry-brick\").nth(5).addCustomMethods({\n    scroll: (el) => {\n        el.scrollIntoView();\n    }\n});\nfixture Getting Started\n    .page http://localhost:8100/;\ntest('Tabs test', async t => {\n    await t\n    .click(tabButton.withText('Chats').parent())\n    .wait(500);\n    await fifthBook.scroll();\n    await t.hover(fifthBook);\n});\n```\nHere we defined a custom method for the selector, which calls an element's scrollToView function to scroll the visible area to the element.. I am glad to hear that my assistance was helpful.\nIf you want to use this approach in different tests you can extract it as a method or even move this code to a separate module. Please refer to the following code:\n```JS\nconst tabButton = Selector('span.tab-title');\nconst fifthBook = Selector(\".masonry-brick\").nth(5);\nconst sixthBook = Selector(\".masonry-brick\").nth(6);\nasync function scrollAndHover (t, selector) {\n    const result = selector.addCustomMethods({\n        scroll: (el) => {\n            el.scrollIntoView();\n        }\n    });\n    await result.scroll();\n    await t.hover(result);\n}\ntest('Test 1', async t => {\n    await t.click(tabButton.withText('Chats').parent());\n    await t.wait(500);\n    await scrollAndHover(t, fifthBook);\n    await t.wait(1000)\n});\ntest('Test 2', async t => {\n    await t.click(tabButton.withText('Chats').parent());\n    await t.wait(500);\n    await scrollAndHover(t, sixthBook);\n    await t.wait(1000)\n});\n. I was able to reproduce the issue in debug mode, but in normal mode, test passed well. I've checked in Chrome under Windows and OSX. If you can reproduce it without the debug mode, would you please provide a screencast?\nI've also found that Ionic adds the `action-sheet-open` css class to the body element. See the implementation of this class in the following code:\n.action-sheet-open {\n    pointer-events: none;\n}\n```\nThis class prevents clicks on any element except an ionic panel with actions (Share, Move, Delete, Cancel). So, it seems that testcafe hangs in debug mode.\nTo overcome the issue you can use the temporary workaround. Override pointer-events property for the body element in the test code using Custom Methods:\n```JS\nconst button = Selector('button');\nconst actionButton = button.withText('Show Actionsheet');\nconst cancelButton = button.withText('Cancel');\nconst bodySelector = Selector('body').addCustomMethods({\n    allowClick: (body) => {\n        body.style.pointerEvents = 'auto';\n    }\n});\nfixture Getting Started\n    .page http://localhost:8100/;\ntest('Tabs test', async t => {\n    await bodySelector.allowClick();\n    await t\n        .click(actionButton)\n    .wait(1000)\n    .click(cancelButton)\n    .wait(3000)\n});\nIf the issue persists, feel free to contact us. . Hi, I see the problem. It appears to be connected with the https://github.com/DevExpress/testcafe/issues/2232 issue and will be fixed in its context.. @viking2917 We'll investigate it in context of https://github.com/DevExpress/testcafe/issues/2232. Hi\nBy default, the click action is targeted to the center of the target element. But in this case, there is no target element by these coords because the target element has complex shape and it seems that there is an empty space in the middle. That's why testcafe is waiting for the element to appear. So you need to set the `offsetX` and `offsetY` options of the click action (https://devexpress.github.io/testcafe/documentation/test-api/actions/action-options.html#click-action-options) to provide a click to the exact element. \nI've modified your test and it works as expected now:JS\nconst selector = Selector('svg').find('g').find('path').nth(1);\nawait t.click(selector, { offsetX: 47, offsetY: 15 });\n```\n\u00a0. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. fpr @AndreyBelym @helen-dikareva . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. FPR. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. fixed in https://github.com/DevExpress/testcafe-hammerhead/issues/1580. I've reproduced the described behavior. It looks incorrect, so I need additional time to analyze it.\n. @testcafe-build-bot \\retest. Looks like I've missed DOCTYPE which is required according to the https://developer.mozilla.org/en-US/docs/Glossary/Doctype\n\nIn HTML, the doctype is the required \"<!DOCTYPE html>\" preamble found at the top of all documents. Its sole purpose is to prevent a browser from switching into so-called \u201cquirks mode\u201d when rendering a document; that is, the \"<!DOCTYPE html>\" doctype ensures that the browser makes a best-effort attempt at following the relevant specifications, rather than using a different rendering mode that is incompatible with some specifications.. fixed \\cc @helen-dikareva @AndreyBelym . I'll investigate it. I've reproduced it. @MichaReiser I've fixed the issues with Chrome, IE and Edge, but could not reproduce the issues with Firefox. Now I see. It is reproduced only when with paste: true option. @MichaReiser I've researched the issue with duplicating the first symbol and found that it occurs due to limited support for the 'paste' operation. The 'onpaste' event is not raised, so Draft.js mechanisms could not process typing correctly. We already have an issue with the 'onpaste' event reported in our database, please refer to https://github.com/DevExpress/testcafe/issues/2075. As a workaround I recommend you to remove paste: true option.. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. \\cc @AndreyBelym . @testcafe-build-bot \\retest. @testcafe-build-bot \\retest\n. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. @testcafe-build-bot \\retest. need to remove skip: 'edge' after the https://github.com/DevExpress/testcafe/issues/2450 is fixed\n. page\n```HTML\n<!DOCTYPE html>\n\n\n\nTitle\n",
    "thecodejack": "This makes it failing in my PC:\n```\n<!DOCTYPE html>\n\n\n\nTitle\n\n\n\n    window.rows = [];</p>\n<pre><code>for (var i = 0; i &lt; 100000; i++) {\n    var obj = {};\n    for (var j=0; j&lt; 100; j++) {\n        obj['Super'+ j] = 'Check if object loaded' + j;\n    }\n    rows.push(obj);\n}\n</code></pre>\n<p>\n\n\n``. Facing same issue while running tests in firefox(passes in chrome). I have a web worker in the application and supposed to load dynamically when I saynew Worker(host + '/testWorker.js')`. Host is same for application and worker. But getting this error.\n1) Failed to find a DNS-record for the resource at\n      \"http://host/testWorker.js\". did you try in firefox? Anyways will try to reproduce with your example as well.. Looks great. \nHow granular mock can become? is It possible to achieve following?\nmock\n      .onRequest('http://example.com/*') \n      .filter({ method: 'POST', isAjax: true, data: {name: 'adi'} })\n      .respond({\n           status: 200,\n           body: 'test1'\n      });\n     .onRequest('http://example.com/*') \n      .filter({ method: 'POST', isAjax: true, data: {name: 'jack'} })\n      .respond({\n           status: 200,\n           body: 'test2'\n      });\n      .onRequest('http://example.com/*') \n      .filter({ method: 'GET', isAjax: true, params: {name: 'jack2'} })\n      .respond({\n           status: 200,\n           body: 'test3'\n      });\n     .onRequest('http://example.com/*') \n      .filter({ method: 'GET', isAjax: true, params: {name: 'jack2', job: 'programmer'} })\n      .respond({\n           status: 200,\n           body: 'test4'\n      });\n. Just to add more, we follow kerberos authentication. Most of applications don't even have login pages. So need a way to apply custom headers.. @inikulin That's very quick response.\nReg NTLM. Yes. I have NTLM. But no luck. it is logging out.. Thanks @AlexanderMoskovkin . . it may not be related, but FTR I put up a setTimeOut with await after scrolling, to get it worked.. More Information. \nFailed in firefox as well.\n```\nbash.exe\"-3.1$ testcafe firefox tests/test-specs/bugs/1649.test.js\nUsing locally installed version of TestCafe.\n Running tests in:\n - Firefox 55.0.0 / Windows 7 0.0.0\nUIUX-1649 bug\n \u00d7 Select multiple checkboxes using shift key selection\n1) Error on page \"http://test/grid/\":\n  TypeError: can't define property \"hammerhead|processed-context\": HTMLElement is not extensible\n\n  Browser: Firefox 55.0.0 / Windows 7 0.0.0\n\n     18 |\n     19 |fixture `1649 bug`\n     20 |    .page `${url}`;\n     21 |\n     22 |test('Select multiple checkboxes using shift key selection', async t => {\n   > 23 |    await t.click(gridPage.firstGrid.getNthRowCheckBox(0));\n     24 |    await gridPage.firstGrid.scrollByPercentage(50)();\n     25 |    //timeout needed to wait for rows rendering after scroll due to DOM Virtualisation\n     26 |    await timeout(100);\n     27 |    await t.click(gridPage.firstGrid.getNthRowCheckBox(8), {\n     28 |        modifiers: {\n\n     at <anonymous> (C:\\tests\\test-specs\\bugs\\1649.test.js:23:13)\n     at test (C:\\tests\\test-specs\\bugs\\1649.test.js:22:1)\n\n1/1 failed (24s)\n```\n. I got the issue that caused the error. We are using webcomponents which run Object.freeze on every component and probably HTMLElement as well. Somewhere in testcafe, you are trying to extend the HTMLElement in newer version. I nullified Object.freeze by overriding which resolved that issue. \nBut now I am getting following error (which I observed with testcafe@0.17.0 as well). Meanwhile I will ask my team and try to share the code to reproduce the issue.\n```\nbash.exe\"-3.1$ testcafe chrome tests/1649.test.js\nUsing locally installed version of TestCafe.\n Running tests in:\n - Chrome 60.0.3112 / Windows 7 0.0.0\nUIUX-1649 bug\n \u00d7 Select multiple checkboxes using shift key selection\n1) Error on page \"http://test.com/grid/\":\n  Unexpected end of JSON input\n\n  Browser: Chrome 60.0.3112 / Windows 7 0.0.0\n\n     18 |\n     19 |fixture `1649 bug`\n     20 |    .page `${url}`;\n     21 |\n     22 |test('Select multiple checkboxes using shift key selection', async t => {\n   > 23 |    await t.click(gridPage.firstGrid.getNthRowCheckBox(0));\n     24 |    await gridPage.firstGrid.scrollByPercentage(50)();\n     25 |    //timeout needed to wait for rows rendering after scroll due to DOM Virtualisation\n     26 |    await timeout(100);\n     27 |    await t.click(gridPage.firstGrid.getNthRowCheckBox(8), {\n     28 |        modifiers: {\n\n     at <anonymous> (C:\\code\\tests\\1649.test.js:23:13)\n     at test (C:\\code\\tests\\1649.test.js:22:1)\n\n1/1 failed (14s)\n``\n. BTW is there a way I can mockObject.freezein browser before application load starts through testcafe? Coz my current implementation disablesObject.freeze` in application. I would rather prefer it to be disabled only during tests.. I partially agree. But I am sure there are many scenarios where I don't want to refresh whole page between tests. This will optimize test time as well. \nJust to avoid refresh, I put all the scenarios in one test and use console.log to makesure it passed all scenarios. . won't it be better to ignore this kind of errors or warn them rather stopping test execution completely. I am still having this issue even after DevExpress/testcafe-hammerhead#1216 got resolved. . @AndreyBelym I agree if its the page that's failing. But for me its some script/css from page which is failing which may not be important for the test executions.. ",
    "umaar": "Thanks everyone. @churkin ignore what I said about them succeeding previously, it was unrelated tests that were passing. \nJust to be clear, the page I execute the tests on is http://genomemedicine.biomedcentral.com/ and I am clicking on a hyperlink which takes you to a page which <framesets>. I have no desire to test the page with <framesets>. Maybe there's a workaround here? Really, the goal of the test is to check there's a working button. The page with the <frameset> is not part of our test requirements. It might be enough to assert the href attribute is correct...that being said, a good test would also click the hyperlink and at least verify the new URL has been navigated to.. Thanks everyone. @churkin ignore what I said about them succeeding previously, it was unrelated tests that were passing. \nJust to be clear, the page I execute the tests on is http://genomemedicine.biomedcentral.com/ and I am clicking on a hyperlink which takes you to a page which <framesets>. I have no desire to test the page with <framesets>. Maybe there's a workaround here? Really, the goal of the test is to check there's a working button. The page with the <frameset> is not part of our test requirements. It might be enough to assert the href attribute is correct...that being said, a good test would also click the hyperlink and at least verify the new URL has been navigated to.. @churkin thanks very much. Sorry to be annoying because I agree, <frameset> is very old and it would be a shame for you to have to write hacks to support it.\nIdea: Don't break so early on just because a <frameset> page has been navigated to. If the developer writing a test doesn't need to query the DOM, then nothing needs to break. All I want to do is check the URL and nothing else.. @churkin thanks very much. Sorry to be annoying because I agree, <frameset> is very old and it would be a shame for you to have to write hacks to support it.\nIdea: Don't break so early on just because a <frameset> page has been navigated to. If the developer writing a test doesn't need to query the DOM, then nothing needs to break. All I want to do is check the URL and nothing else.. @churkin @inikulin wow! That's very kind of you. I'll try it out!. @churkin @inikulin wow! That's very kind of you. I'll try it out!. Essentially, I'd like to find out if an element is displayed or not. I assume this is what the visibilityCheck is for? So if the element is on the page, but outside of the viewport, I thought el.visible should be false?. Thank you for explaining. Knowing if an element is displayed in the viewport is a very fundamental part of browser testing. Why not solve this problem within testcafe?. Yes please do consider this. It's quite important that browser based tests check when things are within the viewport or not. I already started writing my own ClientFunction for this but it's not very elegant  since TestCafe doesn't seem to expose getboundingclientrect, but rather, a custom getBoundingClientRectProperty() and so overall, the complete solution is rather custom but as mentioned, IMO it should be part of a modern browser testing framework.. Quick response! Thanks a lot. In the mean time, skip-js-errors is great.. One site I am testing is dynamically downloading web fonts using delayed scripts. Watching the test run in real time, I see the simulated mouse icon hover over the intended element in preparation for a click. After this, the web fonts finish downloading causing a minor shift in text coordinates. The click then executes, but because the geometry of the page has changed, the click occurs on the wrong element.. I would say there are many custom use cases people will have to wait for what they consider to be a page load. Allowing the developer to specify this page load criteria in a programmatic way and a simple way is the cleanest approach.. This can be solved like this:\n```js\nfixture Example.beforeEach(async t => {\n    await ourCustomPageLoad();\n});\n```\njs\ntest.page `example.com`('Example test', async t => {\n // test code here\n});\nPreviously I was using navigateTo to select the starting page. When you use this method, the beforeEach will trigger before the navigateTo meaning you can't add custom waiting logic (which is entirely correct from TestCafe's point of view). Using test.page allows the beforeEach to trigger after the page has been navigated to.. So those things, like dom, scripts, image, etc. I guess are defined internally. But it would be nice to define custom ones like:\njs\ntest.setLoadAutoWait({\n     dom: true,\n     scripts: true,\n     images: true,\n     fonts: false,\n     chartsVisualisation: true\n     ...\n}) ('Some test', async t => {\n});\nImagine you are working on a visualisation dashboard, maybe you want tests to begin once such charts have initialised, or by some other custom criteria.. Yes exactly:\njs\ntest.addCustomLoadBarrier('chartsVisualisation', () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      await myCustomVisualisation();\n      resolve();\n    } catch(e)\n      reject(e)\n    }\n  });\n});\njs\ntest.setLoadAutoWait({\n     chartsVisualisation: true\n}) ('Some test', async t => {\n});\nJust an idea, what do you think?. Good question. For my use case, I need it only on the client side, but someone else might not. So maybe it is safer to allow the developer to create their own clientFunction(() => ...); in the addCustomLoadBarrier if they need to. . That looks great! Thanks for considering that \ud83d\udc4d  Solves the problem nicely. Perfect that's what I was looking for. Sorry should have read the docs properly!\nThank you.. I'm on mobile now but off the top of my head its cmd+alt+I on mac using the Chrome browser. Thank you for the quick responses!. Got it, makes sense. Thanks for explaining.. Mocking is very useful indeed. \nWhat needs to happen for this to progress? I guess you want to collect the feedback of others?\nThanks for considering it - hopefully the use case makes sense.. By the way, I'm not just suggesting this feature for me, but also because I think it will be useful for the testcafe project \ud83d\udc4d \nWith your example, I'm not sure if it will work.\njs\ntest.page('Analytics triggers on click', async t => {\n  test.onRequest(req => {\n     var url = req.url;\n     t.expect(url).eql('https://example.com/analytics');\n  })\n});\nBecause I don't think the test runner will wait for assertions in the onRequest callback.\nThe end goal is to be able to do something like:\njs\nawait t.expect(networkRequests[0].url).eql('https://example.com/analytics');\nWhich is probably easier accomplished with this?\njs\nconst networkRequests = await t.getNetworkRequests('recording-label');\nBecause many websites fire ajax requests without changing the UI, the only way you can test for this is by looking at the network requests. Which is the point of this feature request.\nAs for what data, I'd say as much as you have available e.g. all request headers, URL etc. A regular Request object would be good.. That looks great! Makes sense to me.. ",
    "pedroscaff": "Hi Alexander,\nUnfortunately that is not the scenario. In our case TestCafe just loads a page and takes a screenshot, the login is inside the javascript code. I would like to login, get the token and add it to the headers before running the tests.\nThanks,\nPedro.. Hi,\neverything is executed in the browser! The auth tokens are set on the xhr request, and it doesn't work when running with TestCafe (401 unauthorized), so I guess the requests are changed somehow by TestCafe. But it would also be possible to make the requests with node.js and set the headers before the tests.\nThanks,\nPedro.. Hi,\nsorry for the delay to answer. I can't really share it right now but I can think of a way to create a dummy account for this purpose. \nYes, we use the standard authentication types. We use xhr to send the requests and set the header with the token like this:\njavascript\nxhrOptions.headers = {\n            'Authorization': authorization\n        };\nFirst we sent Basic plus password to get the access token and after that we set Bearer with the token. We serve the tests with karma and use localhost:xxxx/debug.html?grep=teststring to open just one test at once. Opening the page manually works fine. With TestCafe, it throws 401 unauthorized. Do you think you can investigate further with this information (Or give me some light of how I could investigate it myself)?\nThanks,\nPedro.. It would be suitable to login at first, but I would need the response with the access token to set the headers as a next authentication step.. ",
    "JoergFiedler": "Hi there \u2026 this is exactly the same issues as Authorization Header is removed which I raised for the hammerhead lib \u2026 I work with Pedro and we discovered the issue independently from each other \u2026 I suggest to link this issue to Authorization Header is removed \u2026. ",
    "beatscode": "I'm trying to map the different views in the application to another set of logs. I'd like to sync screenshots to the logs I have which are segmented by url. I could augment my scripts to to do this I was just curious if I could implement a hack locally.\n. ",
    "mokone91": "Hi Andrey,\nIt works!!\nI use \"xvfb-run\" to run this tests,\nThanks! . This is exactly what I need!\nThanks!. ",
    "jackyxiao126": "Hi how to run xvfb-run? what's the options?. ",
    "rafaelcichocki": "Could get Jenkins in Docker to run TestCafe with Firefox and Nightmare, but not Chrome/Chromium.\nxvfb-run -a --server-args='-ac -screen 0 1024x768x16' npm run jenkins-testcafe.\n",
    "markusguenther": "I had the same issue with the Travis CI setup for the open source project I am working on.\nThe changes made the work again.\nGithub PR\nTestcafe itself has a documentation page for such topics.\nDocumentation. Thanks for that adjustment \ud83d\udc4d . ",
    "dzannotti": "Hi Thanks for the support, trying to put together a repro. It's definitely not extensions breaking (as it has the same behaviour in incognito/on ci. The weird thing is the 222 http codes from the testcafe proxy. ",
    "Darmody": "@AlexanderMoskovkin Hi. I only get an unknow response.\nRequest URL:http://10.254.254.254:64899/B1weE9Acl/http://localhost:3000/api/aliyun_oss\nRequest Method:GET\nStatus Code:222 unknown\nRemote Address:10.254.254.254:64899\n. @AlexanderMoskovkin After run testcafe, you can directly call window.fetch() in the chrome console, and I think you will see the same thing.. @AlexanderMoskovkin Hm.. could you show me the response? Maybe I missed some headers?. the request too, thank you. @AlexanderMoskovkin . Request URL:http://10.254.254.254:50483/SybX1iCce/http://localhost:3000/api/current_user\nRequest Method:GET\nStatus Code:222 unknown\nRemote Address:10.254.254.254:50483\nResponse Headers\nview source\nConnection:keep-alive\nContent-Length:0\nDate:Thu, 09 Mar 2017 09:24:08 GMT\nRequest Headers\nview source\nAccept:*/*\nAccept-Encoding:gzip, deflate, sdch\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nauthorization:\nCache-Control:no-cache\nConnection:keep-alive\ncontent-type:application/json\nHost:10.254.254.254:50483\nPragma:no-cache\nReferer:http://10.254.254.254:50483/SybX1iCce/http://localhost:8080/merchant\nUser-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36\nx-hammerhead|fetch|request-credentials:include\nx-hammerhead|xhr|origin:http://localhost:8080\nAbove is the infomation about request.\nIt is a cors json API call, and I use rails as backend. @AlexanderMoskovkin thank you. does json api call cause the problem?. Request URL:http://localhost:3000/api/current_user\nRequest Method:GET\nStatus Code:200 OK\nRemote Address:[::1]:3000\nResponse Headers\nview source\nAccess-Control-Allow-Credentials:true\nAccess-Control-Allow-Methods:GET, POST, PUT, PATCH, DELETE, OPTIONS\nAccess-Control-Allow-Origin:http://localhost:8080\nAccess-Control-Expose-Headers:X-Total, X-Per-Page, X-Page\nAccess-Control-Max-Age:1728000\nCache-Control:max-age=0, private, must-revalidate\nContent-Type:application/json; charset=utf-8\nETag:W/\"651970599faff1ffff31ec2c64dc8a8f\"\nSet-Cookie:_jxcat_session=cVkvWTBOOHFTK09kZkdhd2tqcGZ5U3VCUXJNckFqMi9nNTRURnlRMTVXZzZ6Und3L3c0T09HSjZ1N1FlaWdQT0hDTFk1dnFVdjRLT1lveW9Rc2J2L0tzemRFTG1hNWl3S0hjSEhSMkZmclcwbmhBOGpyK0w2ZmtOUXlTTktqTDJTcWpUZGZMSzA5L2NTT1NHSkhncnJZVHZUWjhWTytsQmRRMlB0V1lSNGRMVkhmRklrME9qczFLRjdyR3dNSlBkLS1hcTZvZHNIV0pTeXdNcjZjWVVHN1l3PT0%3D--3ed6cda5f2910a057f06cb02535ea462f825d0bc; path=/; HttpOnly\nTransfer-Encoding:chunked\nVary:Origin\nX-Content-Type-Options:nosniff\nX-Frame-Options:SAMEORIGIN\nX-Request-Id:f437c702-e5f6-45bb-9d54-315338908b38\nX-Runtime:0.731044\nX-XSS-Protection:1; mode=block\nRequest Headers\nview source\nAccept:*/*\nAccept-Encoding:gzip, deflate, sdch, br\nAccept-Language:zh-CN,zh;q=0.8,en;q=0.6\nauthorization:\nCache-Control:no-cache\nConnection:keep-alive\ncontent-type:application/json\nCookie:oss_policy=eyJleHBpcmF0aW9uIjoiMjAxNy0wMy0xMFQwNzo0OTo1My43NTRaIiwiY29uZGl0aW9ucyI6W3siYnVja2V0IjoianhjYXQtbmV3LWRldiJ9XX0=; oss_signature=Puxpjyl6ZPXk1nZe9gSGPiCkJ1s=; _jxcat_session=aXpRVlBUek9ZYkMzakxteXFCVm5PZ0VWTVQzVzBRcTVpKzZVSDRlenNXcVphTnFvc2RySncrbU1ncmlWMThkMkErc3laenA5NFlmY1J0d2JiRFZkd21VdWIxc2Q5R2g4czN5eStWS1lyY090NnJjTkhqOWlQcEZ1T2xiV1VFcWJQMm0wNTRTemdDL3RWUldodjdjVDZNajRkb1hzR3Vvb0lvZkRoWUN4YjdNZE94SWNxRW05TlVuQ1I5QWZDOE4xLS1vTDUvSFFESVBscTc4ak82UXJPRitBPT0%3D--f9f853eac2f4f21bf16f3ebef44d128c4b93dd5e\nHost:localhost:3000\nOrigin:http://localhost:8080\nPragma:no-cache\nReferer:http://localhost:8080/admin/shop_applies\nUser-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36. OK! That's cool.. @LavrovArtem Hi. This is my sever-side setting:\n\nI don't limit origin, right?. @LavrovArtem cool. @AndreyBelym awesome!. @AndreyBelym Hi.\nBecasue I debugger into it, then directly open the application tab of chrome and check the localStorage values.. @AndreyBelym Hi.\nBecasue I debugger into it, then directly open the application tab of chrome and check the localStorage values.. @AndreyBelym Does it mean that I should use localStorge.getItem insteadOf localStorage[] in my app?\nI think it is not friendly. \ud83d\ude22 . @AndreyBelym Does it mean that I should use localStorge.getItem insteadOf localStorage[] in my app?\nI think it is not friendly. \ud83d\ude22 . @AndreyBelym Hm. But I failed some app logic associated with localStorage.\nLet me figure out if it is my mistake.. @AndreyBelym Hm. But I failed some app logic associated with localStorage.\nLet me figure out if it is my mistake.. ",
    "RichiCoder1": "I'm running into this issue w/ Alpha still. It looks like the proxy is stripping the Content-Type header off the fetch. Update: Switching from Aurelia's fetch client to raw fetch fixed it????. @miherlosev It's weird. Normal fetch works fine, but aurelia-fetch-client fails with the header getting stripped off. I plan to look into it to see why.. @miherlosev Awesome! Sorry for the vague repro steps.. @miherlosev Awesome! Sorry for the vague repro steps.. Ahh, I completely missed that. Just heard all the fuss about headless and both the docs and the official blog had support in little text haha.. Is it possible to make typescript a peer dependency? Likely many projects are already going to have typescript pulled in as a dependency.. True, but it does open yourself up to issues if Typescript releases a major version, and the typescript package is yet another package for end users. That being said, I don't feel strongly about this :). ",
    "Gpx": "Hi there, I'm running in this problem when I try to execute a fetch to my backend.\nPlaying around with it I found out that the problem doesn't happen if I remove the header x-hammerhead|fetch|request-credentials: include. Weirdly enough x-hammerhead|xhr|origin: http://localhost:3000 doesn't cause issues.\nI'm trying to figure out if it's a problem on testcafe's side or my server.\nI have this issues in Chrome, Firefox, and Safari. I couldn't test with other browsers.\nDo you have any idea what could be the problem?. Update: if I call my server directly there's no problem. If I call it through testcafe I encounter the issue.\n```shell\n$ http POST 'http://192.168.2.79:53431/reyoV8nEl/http://localhost:1234/be-mock/api-login/' 'Origin: http://192.168.2.79:53431' 'Accept-Encoding: gzip, deflate' 'Accept-Language: en-US,en;q=0.9' 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36' 'content-type: application/json' 'Accept: /' 'Referer: http://192.168.2.79:53431/reyoV8nEl/http://localhost:3000/login' 'x-hammerhead|fetch|request-credentials: include' 'x-hammerhead|xhr|origin: http://localhost:3000' 'Connection: keep-alive' username=admin@test.com password=password\nHTTP/1.1 222 unknown\nConnection: keep-alive\nContent-Length: 0\nDate: Wed, 11 Jul 2018 10:44:49 GMT\n$ http POST 'http://localhost:1234/be-mock/api-login/' 'Origin: http://192.168.2.79:53431' 'Accept-Encoding: gzip, deflate' 'Accept-Language: en-US,en;q=0.9' 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36' 'content-type: application/json' 'Accept: /' 'Referer: http://192.168.2.79:53431/reyoV8nEl/http://localhost:3000/login' 'x-hammerhead|fetch|request-credentials: include' 'x-hammerhead|xhr|origin: http://localhost:3000' 'Connection: keep-alive' username=admin@test.com password=password\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: http://192.168.2.79:53431\nConnection: Keep-Alive\nContent-Length: 259\nDate: Wed, 11 Jul 2018 10:45:03 GMT\nServer: WEBrick/1.3.1 (Ruby/2.2.2/2015-04-13) OpenSSL/1.0.2d\n{\"token\":\"token123\"}\n```. Hi @MarinaRukavitsyna the problem was that I was not configuring CORS correctly when making the request. ",
    "MarinaRukavitsyna": "@Gpx \nWould you please create har files with and without TestCafe and send them to us? . Hi\u00a0@NaukhaizAhmad,\n\u00a0\nFrom what I gather, you are using a paid TestCafe version while this github resource is intended for an open source version. We provide support for paid versions here: https://www.devexpress.com/Support/Center/Search/List/1\nSo, I have created a new CS report where we provided a hot fix for this issue: \nhttps://www.devexpress.com/Support/Center/Question/Details/T535831/launching-angular-4-application-using-testcafe-raises-the-error-uncaught-in-promise\nPlease also take a look at the following thread that describes the difference between paid and open-source versions:\n\u00a0\nhttps://testcafe-discuss.devexpress.com/t/what-is-the-difference-between-the-open-source-version-and-the-paid-version-of-the-testcafe/253/4. TestCafe does not require TypeScript for creating tests. TypeScript is used for IDE code completion. So, the TypeScript Service should be enabled if you wish to use code completion for your IDE. . @haoshasha The information you provided is insufficient to determine the exact cause of the issue. Please send us the following information:\n\u00a0\n- A screencast that illustrates the issue in action;\n- Browser console errors if there are any. To enable the browser console, press F12;\n- A link to your web page if possible;\n- Your test code;\n- Information about your OS;\n- The exact TestCafe and node.js version you are using. . @CommanderXL No, it is not possible to use a reporter inside a test to show custom information. It is also unlikely that we will implement \"await t.log('double click the foo')\" since there is an equivalent already. Please use console.log('double click the foo').. @Horsetoast \nWe provide two TestCafe versions: a paid version with a recorder and an open source version. According to your description, you are using the first version. So, please use the DevExpress Support Center to submit tickets regarding your version (https://www.devexpress.com/Support/Center/Question/Create) as we generally process paid TestCafe issues there to avoid mixing two different versions. The GitHub channel is intended for the open-source version.\nAs for the issue you encountered, I would like to note that we have fixed a similar problem before. So, please submit a ticket to the DevExpress Support Center and request a hotfix.\n\u00a0\nIn addition, I should say that the current paid TestCafe version is maintained. Instead, our team is developing the absolutely new TestCafe version with a recorder based on\u00a0https://devexpress.github.io/testcafe/\u00a0as the current one has many limitations (e.g. there is no way to re-record a test or use conditions) that will be overcome in the new version. \nSo, I suggest you take a look at this version instead.\nWhat's more, we provide a beta version of a new TestCafe recorder\u00a0on demand. If you wish, we can also provide you with this version.. @guptaakhil \nFrom what I gather, you are talking about browserstack. If so, I did not find a public API to change browser settings on the Internet. I suggest you contact the browserstack support team regarding this.. Hello @haoshasha ,\nTestCafe does not support the Selector('..').rows.length syntax. You can check a list of supported selectors below:\nSelecting Page Elements\nFor example:\njavascript\nlet list_rows = await Selector('.jfj-table-body table tr').count. Hello,\nWe process all issues for TestCafe v15.1.3 via our Support Center. Please submit a ticket there, so that our support team will help you:\nhttps://www.devexpress.com/Support/Center/Question/Create . Hello,\nTestCafe Docker image and a local machine might have different default browser size and screen resolution. So, when testing adaptive sites, some elements might be hidden with a smaller browser size. Please check if this is your situation.. Hello,\nWe provide two TestCafe versions: a paid version with a recorder and an open source version. According to your screenshot and description, you are using the first version. So, please use DevExpress Support Center to submit tickets regarding your version (https://www.devexpress.com/Support/Center/Question/Create) as we generally process paid TestCafe issues there to avoid mixing two different versions. The GitHub channel is intended for the open-source version.\nAs for the issue you encountered, I would like to note that we have already fixed it. So, please submit a ticket to DevExpress Support Center and request a hot fix.. Hello @sbenyo,\nGenerally, TestCafe raises a similar error when a page has JS errors. To check this, please open your page in a browser and enable the browser console (press F12 for this). If there are JS errors there, you can either fix them on your website or skip them during testing using the --skip-js-errors option:\n\u00a0\nWhen I run a TestCafe test, I get an unexpected error. What can cause that?\nIf this does not help, please send us a screenshot of your browser console when you open your page in a browser (without TestCafe) for research.. Hi @vigneshwar-v,\n\u00a0\nThe information you provided is insufficient to determine the exact cause of the issue. Nevertheless, this issue looks like one described in the following thread: Can't interact with websites that require CSRF Tokens.\n\u00a0\nIf the described problem is different, please provide us with a link to a problematic page so that we can see the issue locally. If the link is private, describe how the CSRF Token is technically implemented in your project.. Hello @dcsaszar \nAccording to this help topic, TestCafe supports the latest version of each browser. \nIn particular, Chrome v. 41 was released is 2015 and does not support some modern features (e.g. property redefinition), which are used by TestCafe and modern browsers. It is not possible to add features that are not supported by outdated browsers at the TestCafe level.\nAs, generally, Chrome is updated automatically, I suggest you test your app in the latest Chrome version.. Hello @Lukas-Kullmann,\nWhile we are researching this issue, as a workaround, you can use GitHub API to create an issue .. Hello,\nWe encountered a similar issue in the past - transfer-encoding and content-length headers that were sent together caused a nodejs issue when parsing a http request. \n\u00a0\nAs I understand from your description, the issue occurs when your proxy server receives a response from your server. So, please make sure that content-length is not added to the header. In some scenarios, TestCafe can modify the content-length header, but does not add it itself. \n\u00a0\nIf you are sure that content-length is not added on your side, please send us an example, which we can use to reproduce and debug the issue locally.. Hello @GregoryCBT \nWould you please also describe how you are using this URL in your code or framework?\nIn addition, send us an error stack if possible.. TestCafe may raise a similar error when a web page has JS errors. To check this, please open your page in a browser and enable the browser console (press F12 for this). If there are JS errors there, you can either fix them on your website or skip them during testing using the -e or --skip-js-errors option:\n-e, --skip-js-errors documentation\nIf the above steps do not help, please send us the error stack that is obtained from the browser console, not TestCafe console.. Hello,\nWe provide two TestCafe versions: a paid version with a recorder and an open source version. According to your description, you are using the former version. So, please use the DevExpress Support Center to submit tickets regarding your version (https://www.devexpress.com/Support/Center/Question/Create) as we generally process issues related to the paid TestCafe version there to avoid mixing two different versions. The GitHub channel is intended for the open-source version.. Hello,\nThe information you provided is insufficient to determine the exact cause of the issue. I have tried to use a sub domain locally, and it works properly on my side. Please provide us with a standalone compilable sample (with a portable database or runtime-generated data, if required) so that we can replicate and debug the issue locally. This should help us narrow down the cause of the problem.. Hi Sebastiaan,\nThank you for your words.\nI would like to note that we provide two TestCafe versions: a paid version with a recorder (https://testcafe.devexpress.com/) and an open source version without visual elements (https://github.com/DevExpress/testcafe). These versions are different.\nWe are now working on a paid TestCafe Studio, which is based on our current open-source version. It will support all features of the\u00a0open-source TestCafe, but will also provide a visual test recorder with the ability to\u00a0record additional steps for a recorded test. Once we release it (this summer), the old paid version (including the site) will be substituted with the new TestCafe Studio. . @maertz \nWe are putting the finishing touches to TestCafe Studio and are going to release it soon. Currently, we do not have the exact release date because thorough testing is required.\n\u00a0\nIs it possible to obtain the created tests with the new visual recorder\nYou can open .js tests in TestCafe Studio, continue developing them using an API or/and run them as is. The only limitation is that it is impossible to continue recording an existing .js test since the latter has a non-supported format. . Hello @javiercbk \nWe have been informed about a similar issue and are going to fix it in the context of the following thread:\nCookies are not synchronized between iframes. Hello Mihai,\nTestCafe cannot automate a browser's built-in behavior including the Copy & Paste functionality. We expect that this functionality works correctly as it is tested by browsers' developers. In addition, TestCafe does not support browser tabs: it is possible to run tests in a single window only.\nNevertheless, would you please describe your scenario in greater detail? Why do you wish to copy-paste URL instead of opening this URL directly?. @Mihai0909,\nIn your scenario, I suggest you implement the following solution:\n- Access the \"Permalink\" using Selector;\n- Take the editor's innerText;\n- Insert the obtained text into the navigatoTo(innerText) function.. Hello @wolfisberg,\nI cannot reproduce the issue with the test below. Would you please update it so that I can see the problem on my side?\n```js\nimport { RequestLogger } from 'testcafe';\nimport { RequestMock } from 'testcafe';\nconst logger = RequestLogger('https://testcafe.devexpress.com/');\nconst mockApi = RequestMock().onRequestTo('https://testcafe.devexpress.com/').respond(null, 200);\nfixture test\n    .page('https://testcafe.devexpress.com');\ntest\n    .requestHooks(logger)\n    ('test', async t => {\n     await t.expect(logger.contains(record => record.response.statusCode === 200)).ok(); \n    const logRecord = logger.requests[0];\n\n    console.log(logRecord.userAgent);          \n    console.log(logRecord.request.url);         \n    console.log(logRecord.request.method);      \n    console.log(logRecord.response.statusCode); \n});\n\n```. @andrewbranch \nWould you please check the issue with  v0.21.0-alpha.1? If the issue persists,  update my example (with the https://testcafe.devexpress.com page) so that I can see the problem on my side. . Hello @SleepyWerewolf \nI cannot reproduce the issue with the test below. Would you please update it so that I can see the problem on my side?\n```js\nimport { Selector } from 'testcafe';\nfixture Shared worker test\n  .page https://testcafe.devexpress.com/example/;\ntest.only('Test 1', async (t) => {\n    const number = 'TEST';\n    const input = Selector('input[id*=Developer_Name]');\n    const h1 = Selector(\".article-header\");\n    await t\n        .typeText(input, number)\n        .pressKey('enter')\n        .expect(h1.textContent).eql(\"Thank You, TEST!\");\n});\n```. Hello @ZayanNadeem \nThe following test works properly for me:\n```js\nimport { RequestLogger } from 'testcafe';\nconst options = { url: 'https://testcafe.devexpress.com/', method: 'GET'};\nconst logger = RequestLogger(options);\nfixture test\n    .page('https://testcafe.devexpress.com');\ntest\n    .requestHooks(logger)\n    ('test', async t => {\n     await t.expect(logger.contains(record => record.response.statusCode === 200)).ok(); \n    const logRecord = logger.requests[0];\n\n    console.log(logRecord.userAgent);          \n    console.log(logRecord.request.url);         \n    console.log(logRecord.request.method);      \n    console.log(logRecord.response.statusCode); \n});\n\n```\nWould you please check how this test works on your side? If it works, update the test so that I can see the problem on my side. Otherwise, send me an error message you see when the test fails.. @ZayanNadeem \nIt is possible that the issue is related to TestCafe timeouts: t.expect waits for 3 seconds and this time might be not enough to load a resource. \nIf the issue persists, try calling \"wait\" before \"expect\": \njs\nawait t\n   .wait(4000)\n   .expect(logger.contains(record => record.response.statusCode === 200)).ok();. @qualityshepherd \nWe would be happy to help you with this issue. Please let us know if you need further assistance with this thread. . Hello @mokone91 \nThe \"after\" hook should be raised when a test fails. It was designed for this scenario as well. The following code works properly for me:\n```js\nimport { Selector } from 'testcafe';\nfixture Getting Started\n    .page http://devexpress.github.io/testcafe/example\n    .before(async (ctx) => {\n      console.log(\"before\");\n    })\n    .after(async (ctx) => {\n      console.log(\"after: the test fails\");\n    });\ntest('My first test', async t => {\n    await t\n        .typeText('#developer-name', 'John Smith')\n        .click('#submittt-button');\n});\n```\nWould you please update my code so that I can see the problem on my side?. I will close the issue because no activity has been encountered for a long time.\nFeel free to reopen the issue if the problem persists and you can provide an example to reproduce it.. Hello guys,\nIt looks like you have encountered the issue that we are going to fix in the context of the following thread:\nhttps://github.com/DevExpress/testcafe/issues/2711. @vvedachalam \nWould you please also provide us with the markup of the tested page?. @aboe026 \nThank you for pointing out this issue to us. I have reproduced it.\nWe need some time to research the problem thoroughly. . Guys, we will answer you as soon as we research this issue in detail. . @andrewlw89 \nThank you for your research. We are going to fix this issue in the next release. . @nabeenj \nIt looks like you opened a duplicate issue.\nEDIT:\nWe have found one more issue with reg keys. Would you please try a new build: https://github.com/AndreyBelym/testcafe/releases/download/debug-T661384/testcafe-0.21.1-2.tgz ?. @nabeenj \nWe process inquiries on all these sources :) So, it is enough to post your question/issue anywhere only once. \nIf you need to provide private information, I suggest you use Support Center as it is possible to post private tickets there. \nIf you think that your question/scenario/possible answer will be helpful to other users, it is better to use stackoverflow. \nUse GitHub to post bugs as we process them here.\n\u00a0\n\n\nMarion (is that you?)\n\n\nYes, it's me.. Hello guys.\nTo check the issue locally, please send us a link to your web page (or a small online example) and test for research.. @sambegin \nThank you for your clarification. I have reproduced the issue based on your description. We need some additional time to research it. . @cullophid \nThank you for pointing out to this issue. I have reproduced it based on your description. We need some additional time to research it. \n. A command example:\ntestcafe chrome reportIssue.js -r list -s screenshots -p \"${DATE}_${TIME}_$(OS)/${FILE_INDEX}.png\"\n\nA test example:\nimport { Selector } from 'testcafe';\n\nfixture `Getting Started`\n    .page `http://devexpress.github.io/testcafe/example`;\n\ntest('Select Text wait till timeout', async t => {\n  const firstNameInput = Selector('#developer-name');\n\n  await t\n    .typeText(firstNameInput, 'Max')\n    .selectText(firstNameInput)\n    .pressKey('delete')\n    .takeScreenshot()\n    .typeText(firstNameInput, 'Max 2');\n});\n\n. Hello @darkraincloud \nAccording to the jQuery npm documentation, a window with a document is required for jQuery to work in Node. Since no such window exists natively in Node, one can be mocked by tools such as jsdom. Did you install it?. P.S. TestCafe runs tests on the server. So, it is impossible to output the result of the server-side code execution on the client side. If you wish  to interact with a browser, please use ClientFunction.. Hi @dineshpaduchuri \nYou are almost correct: the \"-c 2 chrome\" command runs two chrome instances. But this mode does not mean that each instance operates with 5 tests.\nNormally, when you run tests, TestCafe opens and connects a single browser instance (e.g. Chrome) and runs tests one after another. When the concurrency mode is used, TestCafe opens several instances of the same browser, e.g. two instances of Chrome in your case, and runs two tests (the number of instances) one by one. Once one of the browser instances completes running a test, it runs another test from the queue. So, one browser instance may run 7 tests and another one - only 3 if they work long. \nNote that the concurrency mode operates the test queue, not fixtures.. describe('Should leave an extra distance between the target and browser window while performing an action', \n. describe('Should leave an extra distance between the target and parent container while performing an action', function () {\n. fixture a Scroll div container\n. test('Scroll to the lower right corner element', async t => {\n. test('Scroll to the lower right corner element', async t => {\n. describe('Should fully show the target element on performing an action', function () {. test('Scroll the vertical container to the bottom element', async t => {. test('Scroll the vertical container to the top element', async t => {. test('Scroll the horizontal container to the left element', async t => {. test('Scroll the horizontal container to the right element', async t => {. should parse a path if there are spaces in a path name or arguments. it('Should parse browser parameters with arguments', function () {. test('Check the authenticated user name', async t => {. ",
    "maheshjag": "I've got the same problem, and in my case, the issue might be that the proxy is not sending the correct cookies in the header. In my TestCafe terminal, I see the following cookies:\ns_cc=true; already-seen-banners=cookie-wrapper;\nHowever, when the XHR request goes out from the browser, the headers I see are \nCookie: c|QJwZZyXVg|s_sq|localhost|%2F||jn4ejelu=bskybfandwtvdev%3D%2526pid%253Dwatch%25253Apanels%25253Adelicious%2526pidt%253D1%2526oid%253Dfunction%252528%252529%25257B%25257D%2526oidt%253D2%2526ot%253DA\nand the response is \nRequest URL: http://10.155.130.10:57807/QJwZZyXVg/http://localhost:5201/remotedownload/download/3830670\nRequest Method: POST\nStatus Code: 222 unknown\nRemote Address: 10.155.130.10:57807\nReferrer Policy: no-referrer-when-downgrade. Thanks for the quick response, @miherlosev, much appreciated! \ud83d\ude03 \nHere's the test code:\n``javascript\nconst appUrl =http://localhost:${appPort}/watch`;\ntest.only('should request a download', async (t) => {\n    await t\n        .useRole(loggedInUser(appUrl))\n        .navigateTo(appUrl);\nawait setupMock(REMOTE_DOWNLOAD_URI, 'POST', { error: null, ok: 1 }, epgPort);\nawait clickRemoteDownloadButton(t);\n\n});\nwhere `loggedInUser` and `setCookie` are defined thus:javascript\nconst loggedInUser = url => Role(url, async () => {\n    await setCookie({\n        name: 'already-seen-banners',\n        value: 'cookie-wrapper',\n        domain: 'localhost'\n    })();\n    await setCookie({\n        name: 'SSOCookie',\n        value: 'loggedIn',\n        domain: 'localhost'\n    })();\n});\nconst setCookie = ({ name, value, domain = 'localhost', url = http://localhost:${appPort} }) => ClientFunction(() => {\n    document.cookie = ${name}=${value};domain=${domain};url=${url};\n}, {\n    dependencies: { name, value, domain, url }\n});\n```\nsetupMock is a custom function that makes use of mountebank-helper to set up some mock responses for endpoints. I suppose you could do the same with RequestMocks as well. appUrl is defined as \nAdditionally, the rendered page has a button clicking which generates a POST request to the mocked endpoint, http://localhost:5201/remotedownload/download/3830670 (as noted in my previous comment).\nI hope this info is adequate for you to take a look at the issue.. > Make sure that setupMock specifies the CORS headers (Access-Control-Allow-Origin and etc). \nYes, this is how it is already:\nresponseHeaders: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Credentials': true\n            },. That didn't work, nor did removing the path parameter entirely from the function. In both cases, the cookie seen for the remotedownload request is the same as the one I posted earlier. To recap, this is what I'm seeing in the DevTools console of the browser:\nGeneral:\nRequest URL: http://10.155.130.10:54257/bbq5LHO36/http://localhost:5201/remotedownload\nRequest Method: POST\nStatus Code: 222 unknown\nRemote Address: 10.155.130.10:54257\nReferrer Policy: no-referrer-when-downgrade\nRequest headers:\nAccept: */*\nAccept-Encoding: gzip, deflate\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\nConnection: keep-alive\nContent-Length: 0\nCookie: c|bbq5LHO36|s_sq|localhost|%2F||jn4nl9x1=bskybfandwtvdev%3D%2526pid%253Dwatch%25253Apanels%25253Adelicious%2526pidt%253D1%2526oid%253Dfunction%252528%252529%25257B%25257D%2526oidt%253D2%2526ot%253DA\nHost: 10.155.130.10:54257\nOrigin: http://10.155.130.10:54257\nReferer: http://10.155.130.10:54257/bbq5LHO36/http://localhost:1729/watch/delicious\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\nx-hammerhead|xhr|origin: http://localhost:1729\nx-hammerhead|xhr|request-marker: true\nx-hammerhead|xhr|with-credentials: true\nResponse headers:\nConnection: keep-alive\nContent-Length: 0\nDate: Thu, 11 Oct 2018 14:03:20 GMT. You can run just about any Node app with the example test code that I've given above. You can skip the setupMock step if you've got another app running on the specified port (or alternatively, you could make a POST request to the same Node app). I'm not sure what else you're looking for.. Sorry, @miherlosev - I've got a bit busy over the last few days. Will post an example app as soon as I can.. Here's the app:\napp.zip\nI've kept it very simple: \n you need to run npm install from the app folder\n then run npm start in a terminal window\n* in another terminal, run npm test\nThe test expects the response to be what's stubbed in mountebank, but instead a 222 response comes back from testcafe's proxy.. @miherlosev Thanks for this: setting Access-Control-Allow-Origin to http://localhost:3000 did the trick for me, and I could continue to use my own mocks as well. Very nice!. ",
    "alexistaocognite": "I\u2019m trying to do a fetch put request with storage.googleapis.com. However, I get a 222 status code back instead of 200. How do I resolve this without mocking the call instead?. @miherlosev \nFirst run some test from testcafe, then open up the dev tools console for the window the test is running in. \nEnter (some sample code from https://gist.github.com/justsml/529d0b1ddc5249095ff4b890aad5e801) \nawait fetch('http://example.com/api/v1/users', {\n    credentials: 'same-origin', // 'include', default: 'omit'\n    method: 'PUT',\n    body: JSON.stringify({user: 'Dan'}), // Coordinate the body type with 'Content-Type'\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n  })\n  .then(response => response)\nThen the response is something weird with things like statusText: \"unknown\"\nHowever, if you run that code in a different window's devTools console, you would get a different response. In my code, I'm using a Google APIs url instead of the sample one above. . @miherlosev Okay, it's here https://github.com/DevExpress/testcafe/issues/3535 . ",
    "vitvad": "Hi @georgiy-abbasov ,\nSorry for delay, was on vacation and was not able to check.\nI don't see any proxy settings in browser, but most probably we have it for all outgoing traffic somewhere on network level.\nAs for firewall - we don't have any capability to manage those rules.\nI was just wondered that I was able to install testcafe without errors, because every other e2e client need some admin rights on PC to build and download some selenium packages + add PATH variables\nscript return:\n```\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError: getaddrinfo ENOTFOUND www.example.com www.example.com:80\n    at errnoException (dns.js:28:10)\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:76:26)\n```\nSo most probably i need set up some proxy, not sure about this. Just rise this ticket to understand what direction should I dig.\nThx. Any suggestion would be appreciated.\n. ",
    "andrewdang17": "@vitvad or @georgiy-abbasov did either of you ever figure out this issue?\nI'm having this same issue using a rails development server Failed to find a DNS-record for the resource at \"http://localhost/3000\" even though I can access it in my browser . @georgiy-abbasov I'm getting Request Success. Status Code: 200 and also created a express server and that worked too. I also ran a test.js and that opens up localhost just fine. It's possible that a setting in my rails config is blocking testcafe..... @georgiy-abbasov 3000 worked with express too :(\nSeems like it is a rails configuration, just not sure what it would be.. ",
    "IhostVlad": "@nosovk You can use this solution now https://gist.github.com/IhostVlad/09ec32f7443a52926973e9c9ca08ceed. ",
    "StarpTech": "Oh,  thanks it was very late :)\nAm 19.01.2017 05:02 schrieb \"Alexander Moskovkin\" <notifications@github.com\n\n:\nHi @StarpTech https://github.com/StarpTech,\nThanks for noticing that. It's a typo in the constains word, it should be\ncontains\nhttps://devexpress.github.io/testcafe/documentation/test-api/assertions/assertion-api.html#contains.\nI've fixed it.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/1149#issuecomment-273676495,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABrsSPoTWqueH0ew7XQw-aBWn4hRT0bkks5rTuA8gaJpZM4LnhqQ\n.\n. \n",
    "WillemMali": "Hi @AlexanderMoskovkin, thank you very much for the support! I wasn't aware that there were two sets of docs, neither of them indicate a version or that one is deprecated.\nShall I flesh out an issue for \"Add deprecation/out-of-date notice to documentation on testcafe.devexpress.com\", or would you consider that \"pollution\" of the open-source issue tracker? A one-word response will do fine.. ",
    "guptaakhil": "Please fo let us know the exact syntax to run or share sample code , very much appreciate if some one can.. It's not working for us, Tried severa time only serial execution is performing. I beleive there is some workaround to acheive this as they are opening in same port that could be run they are executing in serially.. sure, we will be writing this into seperate thread.. t.scroll(element, x,y) is failing any time. it's not stablize method , hover would be alternative in this case.. please suggest if we can find elements with in Frame like this way (#myFrame #myLocator) instead of switching this by method t.switchToFrame() . My observation is if we run bulk test cases in one Browser  then only face this issue. @AlexanderMoskovkin  : what is your thought on this. I have allready Opened the issue : https://github.com/DevExpress/testcafe-browser-provider-browserstack/issues/25. I have face same issue with browsers stack site when I am executing my\napplication over there.\nOn Fri, Apr 27, 2018, 7:07 AM Sijo Cheeran notifications@github.com wrote:\n\nCan we get this feature implemented in ASAP - @AndreyBelym\nhttps://github.com/AndreyBelym / @AlexanderMoskovkin\nhttps://github.com/AlexanderMoskovkin? This issue is very annoying and\nblocking our test execution on Safari, Firefox (& maybe Edge/IE). We are\nstill seeing this issue in the latest TestCafe version 0.20.0-alpha.1 ?\nPlease let me know if I can help provide any additional debug logs. I\nalready provided some logs here -\nhttps://testcafe-discuss.devexpress.com/t/browser-disconnected-error-this-problem-may-appear-when-a-browser-hangs-or-is-closed-or-due-to-network-issues/383\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/1815#issuecomment-384837593,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARx2vFJa_-G0DKXd21qru-SvF-3iQmQtks5tsnZ2gaJpZM4PjBVK\n.\n. Any ETA for it's fix? I am using this testcafe version 0.18.6 now. How can we enable this option if want to run our scripts in cloud. As per above  converstation this is setting only with local system.. @MarinaRukavitsyna : have asked the same question. they are not able to make it possible in testcafe as it require to set the flag in Registry. \n\nplease do let me know if you have any other input for this.. Hi we have beenused the same command but it's not performed expected Behaviour, \ntestcafe Version : 0.18.6\nnode version : v6.10.3\nnpm version : 3.10.10\nplease help us to find out Problem area.. Testcafe chrome -c 3 script.js\nOn Tue, Mar 20, 2018, 1:03 PM Andrey Belym notifications@github.com wrote:\n\nHi @guptaakhil https://github.com/guptaakhil, could you please provide\nme the command you have used to start TestCafe together with the report?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2228#issuecomment-374501748,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARx2vOCfUI29psWqSzEh7Ygsz7XnKztqks5tgLDFgaJpZM4SwF3O\n.\n. So, what would be option to run same test in same browser n no. Times\n\nOn Tue, May 15, 2018, 1:02 PM Andrey Belym notifications@github.com wrote:\n\n@guptaakhil https://github.com/guptaakhil, you need at least 2 tests to\nrun them concurrently with -c 2, or at least 4 tests with -c 4. It\ndoesn't run a test in each browser multiple times, it dispatches different\ntests to run in a number of browser instances. Copy this testscript to\ndifferent files (testile1.js, testfile2.js, testfile3.js, testfile4.js)\nand then run TestCafe with the following command:\ntestcafe chrome -c 2 testfile*.js\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2228#issuecomment-389071638,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARx2vCqyHJ1OpGxHBwNJOJGY_paJXEzSks5tyoR8gaJpZM4SwF3O\n.\n. I have encouter this issue with ff version: 49 as well, below version using.After login page requested url again.\n\ntestcafe version : 0.18.6\nnode version : 6\n. Hi, \nIn my case it's giving the invalid object,  used version testcafe@0.22.1-alpha.1 to get the log which as below, have gone through the solution --- https://github.com/DevExpress/testcafe-hammerhead/commit/b93bc590769d720d4d13c3103d89984b514c97a2, have some question on implementation\nIn another way, if we use the exists property of locator, IE totally hang but work fine in FF and chrome.\nsample log ::::     at Oe (http://192.168.5.178:63370/hammerhead.js:9:26404)\n        at t.prototype.addClass\n     (http://192.168.5.178:63370/hammerhead.js:8:10791)\n        at t.prototype.getRoot\n     (http://192.168.5.178:63370/hammerhead.js:8:6507)\n        at t.prototype.insertBeforeRoot\n     (http://192.168.5.178:63370/hammerhead.js:8:11667)\n        at t.prototype._addNodeCore\n     (http://192.168.5.178:63370/hammerhead.js:6:13715)\n        at overriddenMethods.appendChild\n     (http://192.168.5.178:63370/hammerhead.js:6:15402)\nkindly help me the IE specific issues\n. Here find below the scripts as of kindly look into this issue. I am executing in IE, working fine in FF, chrome, and safari.\nimport { Selector } from 'testcafe';\nfixture(' testcafe ie issue')\n  .page('https://www1.shoppersdrugmart.ca/en/home');\ntest('testcafe ie issue', async (t) => {\nconst medicalCannabisImage=Selector('.wg-hdr-nav-img').nth(0);\nconst  ageGatePopUp = Selector('.age-gate');\nconst  pageContainser=Selector('div#app')\nconst  yesAgePopUp = Selector('[data-auid=\"age-gate-primary\"]');\nawait t.click(medicalCannabisImage);\n  if (await ageGatePopUp.exists) {\n      await t.click(yesAgePopUp);\n  }\n});. I have attached a mock page in a site, now you can reproduce the issue in IE -11, updated the above comment with code. kindly look into that. if it's working please do let me know the changes done. @AlexSkorkin  and @AndreyBelym  is it reproducible, kindly do let me know ???\nOn Wed, Dec 19, 2018, 10:34 AM Alex Skorkin <notifications@github.com wrote:\n\nHello,\nThis issue is unknown to us. Would you please clarify how you set the\nbutton visibility? What CSS properties are you using? It would be great if\nyou also provide us with your scriptsname.js test file so we can examine\nthe issue. If this is not possible, please create a simple sample similar\nto your scenario so we can check it out. Thank you in advance.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/3240#issuecomment-448637301,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARx2vCbkXyva1PYtkPm62J0KnMLlSVqxks5u6lxqgaJpZM4ZZbj1\n.\n. Hi, \n\nI just cross-checked, there is no JS Error in the browser, getting below the screen. please look below.\n\nAlthough i used the option testcafe ie -e test.js , still getting the same issue. \nlooking forward to hearing from your side.\n. Here , i am attaching couple of screenshot. Here we want to run my test in IE-11 Only. I reproduce the same with with above mentioned scripts in comment. Here, below is expectation and status of Script in ie execution:  \n1) Open IE -11 and open the site : ---- Running\n2) click in ShopperDrugmart image ---- Running\n3) click in Yes Button in Age gate POP-UP ----- Execution Got Stuck for long time and not clicked in yes button. However it's smoothly run in chrome and firefox. this issue is ie specific only.\nTried with I version testcafe@0.22.1-alpha.1 to get the log which as below, \nlog :::: at Oe (http://192.168.5.178:63370/hammerhead.js:9:26404)\nat t.prototype.addClass\n(http://192.168.5.178:63370/hammerhead.js:8:10791)\nat t.prototype.getRoot\n(http://192.168.5.178:63370/hammerhead.js:8:6507)\nat t.prototype.insertBeforeRoot\n(http://192.168.5.178:63370/hammerhead.js:8:11667)\nat t.prototype._addNodeCore\n(http://192.168.5.178:63370/hammerhead.js:6:13715)\nat overriddenMethods.appendChild\n(http://192.168.5.178:63370/hammerhead.js:6:15402)\nTestcafe Version ::: \n\nIE Version:: \n\nDeveloper Screen-Shot of Execution :::\n\nDeverloper Tools ScreenShot:: \n\n@AndreyBelym  kindly look into this and do let me know if any other input require.\n. @AlexSkorkin  and @AndreyBelym: Any update related to this issue.  kindly share the video and package.json snapshot if it's not reproducible at your end. . @AndreyBelym  : the site is live now : https://cannabis.shoppersdrugmart.ca/en_CA, we can launch this  now, there is access to everyone now,  I just change the code as below, runin chrome and FF but not in IE..\nimport { Selector } from 'testcafe';\nfixture('Application install testcafe')\n  .page('https://cannabis.shoppersdrugmart.ca/');\ntest('test cafe Solution', async (t) => {\nconst  ageGatePopUp = Selector('.age-gate');\nconst  pageContainser=Selector('div#app')\nconst  yesAgePopUp = Selector('[data-auid=\"age-gate-primary\"]');\n  if (await ageGatePopUp.exists) {\n  await t.click(yesAgePopUp);\n\n}\n});. @AlexSkorkin  and @AndreyBelym :   it's accessible now anywhere, kindly delete the cookies and run, it's running. For,  Age gate pop-up occurs first time, once it confirms your age save in cookies.\n\n. @AlexSkorkin: This site live in Canada and India only, can you use Canada tunnel or proxy server and Canada VPN to access it. Also, this issue is reproduced by some other person from testcafe community, kindly look into that : https://github.com/DevExpress/testcafe/issues/3293. @Farfurix and @LavrovArtem:  it's still not working with the latest version 0.23.3, I believe the latest code will be available in coming releases. please notify us when it's available in the stable version of Testcafe.\nThanks in advance !! . ",
    "Uninen": "+1\nThis would help a lot with porting old e2e tests to testcafe.. ",
    "lnfnunes": "@mkubrycz regardless of better or not, it's a common option from other e2e test runners and will help to port old test-cases to testcafe.\nBesides that, it will be an extra option to be used for anyone interested on it!. ",
    "neilmatillano": "@AlexanderMoskovkin : I want to reuse this function inside my testcafe tests, but it seems like we always need to have it specify the exact path from \"/html/...\", I am updating the function now as we speak, but if you already have created the updated version of this function, it would be great ;)\nXPath formats like this is a bit hard to distinguish...\n//*[@id=\"audiences-creation-form\"]/div[2]/fieldset[1]/div/div[2]/div/div/div[2]/div[2]/ul/li/span[1]\n        . @xcb6 : Sounds good, do you have more examples of the usage? One that is working well\n\nI get this error in testcafe even just calling console.log\nTypeError: xpath_to_css_1.default is not a function. @xcb6 : Maybe it's my version of testcafe. I am using this version : 0.18.7-dev20180206\nWhich version are you using?. @xcb6 : Found the issue, i am using typescript ... so I should follow the es6 format of importing which is  import * as xPathToCss from 'xpath-to-css'\n. Also getting same error \nError of failed request:  BadMatch (invalid parameter attributes)\nFor failed tests for page with widgets.. Also getting same error \nError of failed request:  BadMatch (invalid parameter attributes)\nFor failed tests for page with widgets.. @LavrovArtem : it's a redirect is on the same window, it's not opening multiple browsers.\nIf you see the screenshot, the issue is that the button at the bottom is not reachable because of the hammerhead ui overlay. It's not able to select the control in testcafe. @LavrovArtem : Noted on this , do you have a timeline for this fix? Thanks!. @LavrovArtem : thanks for the reply. But is there a workaround I can do? Like remember my login in facebook prior to running the tests so I can just go directly to the main page? With or withour logging in? . @AndreyBelym : Unfortunately, I still get this issue mainly inside the testcafe docker image. \nGetting a lot of visibility errors inside the docker image although both running on the same testcafe versions 0.18.7-dev20180117. @AlexanderMoskovkin  :  This is the message when I run the tests on docker\nWarnings (1):\n --\n  The window maximization functionality is not supported by the \"chromium\"\n  browser provider.\n. @AlexanderMoskovkin , it helped fixed some of the issues, especially on the widget visibility, but I still have few unusual tests behaving differently probably not related to visibility anymore Still investigating.\nThanks!. We can close this issue :) Thanks!. @MarinaRukavitsyna : we are using this screen size parameters when running testcafe in the docker\nexport SCREEN_WIDTH=3840\nexport SCREEN_HEIGHT=2160\nand we are using chromium:headless option\n. I recently upgraded the chromium version to Chrome 64.0.3282 and error still occurs. I recently upgraded the chromium version to Chrome 64.0.3282 and error still occurs. Is there like a setting or debugger mode for testcafe that has additional logs that I can check after running to help me investigate this issue?. Is there like a setting or debugger mode for testcafe that has additional logs that I can check after running to help me investigate this issue?. Any update on this? I really am quite lost, I switch to other browsers but apparently, our platform doesnt fully support firefox or safari.. so I need to do tests on chrome.\nAdditional Info: This issue doesnt happen on firefox BUT one test suite fails around 90% of the total tests due to our support issue with firefox. Any update on this? I really am quite lost, I switch to other browsers but apparently, our platform doesnt fully support firefox or safari.. so I need to do tests on chrome.\nAdditional Info: This issue doesnt happen on firefox BUT one test suite fails around 90% of the total tests due to our support issue with firefox. ",
    "xcb6": "maybe use https://www.npmjs.com/package/xpath-to-css. work well for me\njs\nimport { Selector } from 'testcafe'\nimport xPathToCss from 'xpath-to-css'\nconst xPath = '//div[@id=\"foo\"][2]/span[@class=\"bar\"]//a[contains(@class, \"baz\")]//img[1]'\nconst css = xPathToCss(xPath)\nconsole.log(css)\n.... https://github.com/DevExpress/testcafe-live is broken. just follow https://github.com/DevExpress/testcafe-live => 404 (page not found). feedback (npm install) => very very great !!!! it's ok on win7. Thank. ",
    "Andrei1982": "When I use xpath-to-css recive this issue: \" \n\nInvalid or unsupported XPath: .//a[text()=\"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\"]\n\nProbably, this library isn't work with cyrillic. If transform this locator on this:\n\n.//a[@type=\"button\"][1]\n\nThat is all right. \nIs it possible to add support of cyrillic for this package?. In ver testcafe@0.20.2 - method selectText doesn't work http://s.csssr.ru/U5LQQCK7T/20180606190308.jpg WebProject based on React but I use normal css-selectors. ",
    "adamorlowskipoland": "Has something changed since last post?\nI'm having the same trouble now.... Sounds really good. It gives a lot of new flexibility so it's a YES from me.. ",
    "claustres": "IMHO inViewport should mean intersection between the element bounding box and the viewport, eg any part of the element crossing the viewport will trigger it. Maybe we should have different tastes like insideViewport and intersectViewport to differentiate between wholy or partly covered.\n. We do that in our app so far: https://github.com/kalisio/aktnmap/blob/master/test/page-models/layout.js#L21.. ",
    "TychonautVII": "Another +1 for this thread I agree with the insideViewport (though maybe viewportContains) and intersectViewport (viewportOverlaps?) idea. . +1 . ",
    "JorgeIbarra-natgeo": "+1 for this thread, does anyone have a suggested workaround for filtering elements only found in viewport?. ",
    "DevSide": "The visibility check of Testcafe is way to simple IMHO. It does not match a human like visibility. The Selenium's one depends on opacity, overflow, positioning, zIndex, ... See https://github.com/SeleniumHQ/selenium/blob/b4e5fe326d1f70061633ef290745f35893178ba5/javascript/atoms/dom.js#L460\nDo people are interesting in having this in Testcafe ?\nFor performance purpose, we could have a technical and a human visible check. Autoscroll to find an element should be an option to.. ",
    "Lwdthe1": "Hmm, I'm running into this issue today. My tests work as expected in the chrome browser, but it fails with:\nUncaught Error: Script error for \"services/services\"\nhttp://requirejs.org/docs/errors.html#scripterror\nI'm going to use the skipJsErrors argument for the API approach, but wanted to point this out for version 0.21.1. ^ I didn't mean to unassign someone. Not sure how that happened.. I found the issue using t.debug(). It was a problem with a library my site was loading.. I have the same issue as @ivanzamoraarias . All works fine in chrome and chrome:headless locally, but fails immediately on CI. The test I'm running is to count the number of visible elements by a selector. It returns the right number locally, but it returns 0 on Heroku CI.\n``` \n// -- fixture\ntest('Check screen for logged out user', async (t) => {\n  let pageModel = PubsPageModel.instance(t)\nawait pageModel.hasLoginNavButton() // pass\n  await pageModel.testMeta({numPubs: numAdvertisedPubs}) // pass\n  await pageModel.hasContributeRequestButtons(numAdvertisedPubs) // FAIL!\n})\n```\n```\n// -- PubsPageModel\n'use strict';\n// see https://alligator.io/angular/e2e-testing-testcafe/\nconst BasePageModel = require('../../testCafe/pageModel/BasePageModel')\nconst {Selector, ClientFunction} = require('testcafe')\nclass PubsPageModel extends BasePageModel {\n    constructor(testCafe) {\n        super(...arguments)\n    this.navbarRightActions = Selector('.js-navBarTopMainRightActions')\n    this.navLoginButton = this.navbarRightActions.find('a').withText('Login With Medium')\n\n    this.contributeRequestButtons = Selector(`.js-siteMain .js-mainPubsList .js-pubSendContributeRequest`)\n}\n\ntestMeta({numPubs}) {\n    let title = `${numPubs} Publications`\n    let description = 'My website'\n    let imageUrl = sm.const.App.Main.Seo.imageUrl\n    let siteName = 'My Website'\n\n    return this.metaEquals({\n        description: description,\n        ogTitle: title,\n        ogDescription: description,\n        ogImageUrl: imageUrl,\n        ogImageSecureUrl: imageUrl,\n        ogSiteName: siteName,\n        twitterTitle: title,\n        twitterDescription: description,\n        twitterImageUrl: imageUrl,\n        twitterSite: siteName,\n        twitterCard: 'summary_large_image',\n    }, title)\n}\n\nasync hasContributeRequestButtons(numPubs) {\n    await this.printHtml()\n    console.log(await this.contributeRequestButtons.count) // 23 locally, 0 on CI\n    let selector = await this.filterVisible(this.contributeRequestButtons)\n    console.log(await selector.count) // 23 locally, 0 on CI\n    return await this.t\n        .expect(selector.count)\n            .eql(numPubs, 'Should have enough contribute request buttons', { timeout: 2000 })\n}\n\nasync hasLoginNavButton() {\n    await this.navLoginButton.visible\n    return this.t\n        .expect(this.navLoginButton.getAttribute('ng-click')).eql('loginMediumer($event)')\n}\n\nstatic instance(t) {\n    return new PubsPageModel(t)\n}\n\n}\nmodule.exports = PubsPageModel\n```\n```\n// --- BasePageModel\n'use strict';\n// See https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html\nconst Q = require('q')\nconst {Selector, ClientFunction} = require('testcafe')\nclass BasePageModel {\n    constructor(testCafe) {\n        this.t = testCafe\n    this.head = {\n        title: Selector('head title'),\n        meta: {\n            description: Selector('meta[name=\"description\"]'),\n            // -- og uses meta[property=]\n            ogTitle: Selector('meta[property=\"og:title\"]'),\n            ogDescription: Selector('meta[property=\"og:description\"]'),\n            ogImageUrl: Selector('meta[property=\"og:image\"]'),\n            ogImageSecureUrl: Selector('meta[property=\"og:image:secure_url\"]'),\n            ogSiteName: Selector('meta[property=\"og:site_name\"]'),\n            // -- twitter uses meta[name=]\n            twitterTitle: Selector('meta[name=\"twitter:title\"]'),\n            twitterDescription: Selector('meta[name=\"twitter:description\"]'),\n            twitterImageUrl: Selector('meta[name=\"twitter:image\"]'),\n            twitterSite: Selector('meta[name=\"twitter:site\"]'),\n            twitterCard: Selector('meta[name=\"twitter:card\"]'),\n        }\n    }\n}\n\nasync titleEquals(expected) {\n    return await this.t\n        .expect(this.head.title.innerText).eql(expected)\n}\n\nasync metaEquals(meta, title) {\n    if (title) await this.titleEquals(title)\n\n    let result = this.t\n    Object.keys(meta).forEach(async (key) => {\n        await result.expect(this.head.meta[key].getAttribute('content')).eql(meta[key])\n    })\n\n    return await result\n}\n\nasync filterVisible(selector){\n    return await selector.with({ visibilityCheck: true }).filter((node) => {\n        return $(node).is(':visible')\n    })\n}\n\nasync printHtml() {\n    const getPageHTML = ClientFunction(() => document.documentElement.outerHTML)\n    console.log(await getPageHTML())\n}\n\nasync debug() {\n    return await t.debug()\n}\n\n}\nmodule.exports = BasePageModel\n```. Hmmm, after looking closer, it looks like the test wasn't waiting for angular to render the view that I'm trying to count\n```\n    <div id=\"site-main\" class=\"site-main surface-container js-siteMain\">\n        <div>\n            <!-- Dynamically render angular.js templates -->\n            <div id=\"ng-controller-view\" ng-view=\"\">\n            </div>\n        </div>\n    </div>\n\n```\nWhy wouldn't it render the angular view on CI, but succeed to do so locally?. ",
    "Raushen": "Hello, you can use the follow markup in .aspx file to reproduce issue:\n```\n<!DOCTYPE html>\n\n\n\n\n\n\n\n\n\n\n\n\nComplete test:\ntest('History test', async t => {\n    const submitInput =  Selector('#submitInput');\n    const textInput = Selector('#textInput');\n    const historyInput = Selector('#historyInput');\n    await t.typeText(textInput, \"Some text\");\n    await t.click(submitInput);\n    await t.expect(textInput.value).eql(\"\"); //OK\n    await t.click(historyInput);\n    await t.expect(textInput.value).eql(\"Some text\"); //FAIL\n});\n```\n. ",
    "neozenith": "@AlexanderMoskovkin \nTest Code\nhttps://github.com/neozenith/testcafe-sfdc-poc/tree/4d03d6d3d8606adec8edcdb011ade5fa246bfdec\nHere is some poc code I'm working through that replicates it. I have added instructions to the README.md on how to create a free SFDC dev org for testing purposes.\nThere is a good chance I am not understanding TestCafe or that Salesforce is just doing something bad as far as webapps go. \nCurrent Results\nFrom what I can tell TestCafe should be able to handle this situation despite the definition of when a page has fully loaded being subjective at times.\n\nAs a human loading either the Classic UI or the Lightning UI the page loads into my home dashboard.\nIn TestCafe with Chrome and Firefox, using Classic UI the test finds the header element and passes.\nIn TestCafe / Chrome / LightningUI I get to the Logo of the Bear watering a bonsai tree which is the logo for their Spring'18 release and no further.\n\nIn TestCafe / Firefox / LightningUI gives a Javascript error.\n\n. @LavrovArtem Awesome! Can confirm that has fixed the issue atleast for my instance of TestCafe vs SFDC. \n\nIn hindsight I should have raised my issue as a separate issue to keep it distinct from the Feature request proposed about when is the page fully loaded notification strategies.\nThanks for address this issue though.. ",
    "YamiOdymel": "Error occurred while using testcafe with chromium with the docker image.\ncommand\nbash\nnode /opt/testcafe/bin/testcafe.js chromium --no-sandbox,firefox ./test.js\noutput\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\n\nBut the image works fine If I left firefox only.\ncommand\nbash\nnode /opt/testcafe/bin/testcafe.js firefox ./test.js\noutput\nRunning tests in:\n - Firefox 45.0.0 / Linux 0.0.0\n Example page\n \u2713 Emulate user actions and perform a verification\n 1 passed (4s)\n\ntest.js\n``js\nfixtureExample page.pagehttps://devexpress.github.io/testcafe/example`;\ntest('Emulate user actions and perform a verification', async t => {\n    await t\n        .setNativeDialogHandler(() => true)\n        .click('#populate')\n        .click('#submit-button');\nconst location = await t.eval(() => window.location);\n\nawait t.expect(location.pathname).eql('/testcafe/example/thank-you.html');\n\n});\n```\n\nEDIT: Problem solved by changing\nnode /opt/testcafe/bin/testcafe.js chromium --no-sandbox,firefox ./test.js\nto this:\nnode /opt/testcafe/bin/testcafe.js 'chromium --no-sandbox --headless --disable-gpu,firefox' ./test.js. ",
    "jameswlane": "First off \ud83d\udc4d on Docker\nHow are you planning to be able to pass in other flags?\nFor example the app flags.\nie: testcafe nightmare tests/**/*.js --app \\\"node server.js\\\" --app-init-delay 4000. Awesome!\nI been trying to get it to run and I keep getting the following errors:\ndocker run -v $PWD/tests:/tests -it testcafe/testcafe:alpha 'firefox' /tests/**/*.js --app \"node server.js\" --app-init-delay 4000\n```\nERROR Tested app failed with an error:\nError: Command failed: node server.js\nmodule.js:471\n    throw err;\n    ^\nError: Cannot find module '/server.js'\n    at Function.Module._resolveFilename (module.js:469:15)\n    at Function.Module._load (module.js:417:25)\n    at Module.runMain (module.js:604:10)\n    at run (bootstrap_node.js:394:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:509:3\nat ChildProcess.exithandler (child_process.js:206:12)\nat emitTwo (events.js:106:13)\nat ChildProcess.emit (events.js:191:7)\nat maybeClose (internal/child_process.js:877:16)\nat Socket.<anonymous> (internal/child_process.js:334:11)\nat emitOne (events.js:96:13)\nat Socket.emit (events.js:188:7)\nat Pipe._handle.close [as _onclose] (net.js:498:12)\n\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\n```\nI assumed it was only mapping the test directory only so I tried:\ndocker run -v $PWD:/tests -it testcafe/testcafe:alpha 'firefox' /tests/**/*.js --app \"node server.js\" --app-init-delay 4000\n```\nERROR Cannot prepare tests due to an error.\nError: Cannot find module 'tap'\n    at Object. (/tests/node_modules/fast-safe-stringify/test.js:1:12)\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\n```. @AndreyBelym \nHere is the codebase I am testing with. \nWhen you run npm test / yarn test:\n```\n\u03bb yarn test \nyarn test v0.21.3\n$ testcafe nightmare tests/*/.js --app \"node server.js\" --app-init-delay 4000 \n Running tests in:\n - Electron 1.6.3 / Mac OS X 10.11.6\nGetting Started\n \u2713 Check property of element\nGetting Started\n \u2713 Check property of element\n2 passed (1s)\n\u2728  Done in 11.56s.\n```\nWhen you run npm test:ci / yarn test:ci:\n```\nyarn test:ci v0.21.3\n$ docker run -v $PWD:/tests -it testcafe/testcafe:alpha 'firefox' /tests/*/.js --app \"node server.js\" --app-init-delay 4000 \nERROR Cannot prepare tests due to an error.\nError: Cannot find module 'tap'\n    at Object. (/tests/node_modules/fast-safe-stringify/test.js:1:12)\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\n```\nSo I am think I have the directory mapped correctly but I do not have or use tap as a dependency.\nAs a experiment I installed tap and ran npm test:ci / yarn test:ci:\n```\nyarn test:ci\nyarn test:ci v0.21.3\n$ docker run -v $PWD:/tests -it testcafe/testcafe:alpha 'firefox' /tests/*/.js --app \"node server.js\" --app-init-delay 4000 \n\u2826\nTAP version 13\nSubtest: circular reference to root\nok 1 - should be equal\n1..1\n\nok 1 - circular reference to root # time=5.911ms\nSubtest: nested circular reference to root\nok 1 - should be equal\n1..1\n\nok 2 - nested circular reference to root # time=1.318ms\nSubtest: child circular reference\nok 1 - should be equal\n1..1\n\nok 3 - child circular reference # time=0.645ms\nSubtest: nested child circular reference\nok 1 - should be equal\n1..1\n\nok 4 - nested child circular reference # time=1.193ms\nSubtest: circular objects in an array\nok 1 - should be equal\n1..1\n\nok 5 - circular objects in an array # time=0.905ms\nSubtest: nested circular references in an array\nok 1 - should be equal\n1..1\n\nok 6 - nested circular references in an array # time=0.616ms\nSubtest: circular arrays\nok 1 - should be equal\n1..1\n\nok 7 - circular arrays # time=0.598ms\nSubtest: nested circular arrays\nok 1 - should be equal\n1..1\n\nok 8 - nested circular arrays # time=0.653ms\nSubtest: repeated non-circular references in objects\nok 1 - should be equal\n1..1\n\nok 9 - repeated non-circular references in objects # time=0.858ms\nSubtest: repeated non-circular references in arrays\nok 1 - should be equal\n1..1\n\nok 10 - repeated non-circular references in arrays # time=0.865ms\nSubtest: double child circular reference\nok 1 - should be equal\nok 2 - should be equivalent\n1..2\n\nok 11 - double child circular reference # time=3.685ms\nERROR Cannot prepare tests due to an error.\nTypeError: Cannot read property 'Date' of undefined\n    at /tests/node_modules/moment-duration-format/test/vendor/qunit.js:22:15\n    at Object. (/tests/node_modules/moment-duration-format/test/vendor/qunit.js:2212:3)\nType \"testcafe -h\" for help.\n1..11\ntime=2471.47ms\nerror Command failed with exit code 1.\n```. @AndreyBelym - You are awesome! \ud83d\udc4d \n```\n\u03bb yarn test:ci\nyarn test:ci v0.21.3\n$ docker run -v $PWD:/project -it testcafe/testcafe:alpha 'firefox' /project/tests/*/.js --app \"node /project/server.js\" --app-init-delay 4000 \n Running tests in:\n - Firefox 45.0.0 / Linux 0.0.0\nGetting Started\n \u2713 Check property of element\nGetting Started\n \u2713 Check property of element\n2 passed (2s)\n\u2728  Done in 13.17s.\n```. ",
    "anescobar1991": "Why did you guys decide on not adding proxy-ignore option? Is there any plan to add this in future and if not can I help contribute?. ",
    "wengxuan": "any update on this?. ",
    "n0v1": "It seems that the proxy option sets the proxy even for requests to localhost, I think it would make sense to ignore the proxy for requests to localhost or 127.0.0.1. What do you think?. We also have to use a corporate proxy to access some ressources but our backend is only accessible directly without proxy. It would be ideal if Testcafe would respect the NO_PROXY environment variable or had an equivalent option.. I tested the proxy bypass feature with version v0.19.2-alpha1 and it works perfectly for our use case. Thank you very much!. Great to see this feature beeing added! Thank you! \nIs this expected to work for ressources like CSS stylesheets or JavaScript files that are linked from the page under test?\nI'm sitting behind a corporate proxy and want to test a page that is served by a web server on localhost. The page loads a JavaScript library from a remote host. So the request to load the page should bypass the proxy, the request to get the library should go through the proxy.\nI call TestCaf\u00e9 CLI with --proxy 172.30.109.30:8080 --proxy-bypass 127.0.0.1:8000. The page and all local ressources load correctly but the remote script does not. It keeps loading forever until a timeout is hit eventually.\nTo test in isolation I created this small repo: n0v1/testcafe-proxy-bypass-test\nUpdate:\nWhen debugging this, testcafe-hammerhead/src/request-pipeline/destination-request/_onError receives this error object:\njavascript\n{\n  Error: connect ETIMEDOUT 104.16.86.20:80\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1182:14)\n  code: 'ETIMEDOUT',\n  errno: 'ETIMEDOUT',\n  syscall: 'connect',\n  address: '104.16.86.20',\n  port: 80\n}\n\nthis.opts = ... (click to expand)\njavascript\nthis.opts = {\n  url: 'http://cdn.jsdelivr.net/npm/lodash@4.17.5/lodash.min.js',\n  protocol: 'http:',\n  hostname: 'cdn.jsdelivr.net',\n  host: 'cdn.jsdelivr.net',\n  port: undefined,\n  path: '/npm/lodash@4.17.5/lodash.min.js',\n  method: 'GET',\n  credentials: null,\n  body: <Buffer >,\n  isXhr: false,\n  proxy: null,\n  headers: {\n    host: 'cdn.jsdelivr.net',\n    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0',\n    accept: '*/*',\n    'accept-language': 'de,en-US;q=0.7,en;q=0.3',\n    'accept-encoding': 'gzip, deflate',\n    referer: 'http://127.0.0.1:8000/test.html',\n    connection: 'keep-alive'\n  },\n  agent: {\n    domain: null,\n    _events: { free: [Function] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    defaultPort: 80,\n    protocol: 'http:',\n    options: { secureProtocol: undefined, keepAlive: true, path: null },\n    requests: {},\n    sockets: { 'cdn.jsdelivr.net:80::': [Array] },\n    freeSockets: {},\n    keepAliveMsecs: 1000,\n    keepAlive: true,\n    maxSockets: Infinity,\n    maxFreeSockets: 256\n  } \n}\n. ",
    "MishraApa": "@AlexanderEgorov \nI tried below your solutions to implement Proxy setting but did not get any proper solution:\n1)I tried with command (testcafe chrome tests/ --proxy-url x.x.x.x --proxy-ignore \"a.com,b.com\")  but it does not work for me . Can you please provide the exact syntax.\n2)test runner -It's saying proxy is not a function\nAlso i gone thorugh http://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/browsers/user-profiles.html and tried with new user profile but it  also does work for me .\nIt would be great if you can reply ASAP.. Hi @AlexanderMoskovkin \nI have tried above solution provided in documentation to host proxy  but none of the solution is working for me .Could please suggest how to do proxy setting testcafe ?\nThanks\nAparna. ",
    "ttiurani": "Any news on this since May? I'm evaluating TestCafe for a new project, and layout testing is a crucial deciding factor on TestCafe vs a Selenium based stack. I'm guessing I'm not alone.. Just as an note on this: we actually ended up doing image testing against our Storybook and not with TestCafe and are very happy with our decision. We're using Storyshots image snapshots:\nhttps://github.com/storybooks/storybook/tree/master/addons/storyshots#configure-storyshots-for-image-snapshots--alpha-\nI would argue that for a lot of cases visual testing the Storybook stories is the right thing to do, and then TestCafe is only used for integration testing.. ",
    "sunainajain": "waiting on this ...... I followed the steps in the PR, I have given the commands in the 'Execute Shell' instead of 'Windows Batch Command'\nI tried using 'nightmare' and \"chrome:headless\" for the browser\nLooks like Jenkins can't find any browsers\nI get the below errors\n\n\nnode_modules/.bin/testcafe nightmare tests/ -r xunit:res.xml\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\n\n\nnode_modules/.bin/testcafe chrome:headless tests/ -r xunit:res.xml\nERROR Was unable to open the browser \"chrome:headless\" due to error.\nError: Unable to run the browser. The browser path or command template is not specified.\n\n\ntestcafe -b doesn't yield any output\nPlease suggest. ",
    "mdstaff": "Hi all, I'm a bit curious if there was a decision made between \"pixel perfect\" and \"perceptual hash\" methods to implement this feature.  I've been looking at this interesting repository from Amex: https://github.com/americanexpress/jest-image-snapshot and it looks promising.. ",
    "ericyd": "did not follow contribution guildelines prior to opening. Will resubmit when guidelines are met. Updated regression test and fixed typo in my original PR in /test/client/fixtures/automation/type-test.js.\nTests are passing, but I am getting this error when running gulp test-functional-travis-mobile:\n```\nRunning tests in browsers: android, ipad, iphone\n  1) \"before all\" hook\n0 passing (4s)\n  1 failing\n1)  \"before all\" hook:\n     TypeError: Cannot read property 'path' of null\n      at checkBrowserPath$ (node_modules\\testcafe-browser-tools\\lib\\api\\open.js:34:32)\n      at tryCatch (node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n      at GeneratorFunctionPrototype.invoke [as _invoke] (node_modules\\testcafe-browser-tools\\node_modules\\babel-\nregenerator\\runtime.js:334:22)\n      at GeneratorFunctionPrototype.prototype.(anonymous function) [as next] (node_modules\\testcafe-browser-tool\nodules\\babel-runtime\\regenerator\\runtime.js:105:21)\n      at tryCatch (node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n      at invoke (node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:146:20)\n      at node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:191:11\n      at Promise.F (node_modules\\testcafe-browser-tools\\node_modules\\core-js\\library\\modules\\$.export.js:30:36)\n      at callInvokeWithMethodAndArg (node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\\njs:190:16)\n      at AsyncIterator.enqueue (node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runti\n1:37)\n[19:09:12] 'test-functional-travis-mobile' errored after 5.7 s\n[19:09:12] Error in plugin 'gulp-mocha'\nMessage:\n    1 test failed.\n```\nAny suggestions on how to resolve? I've verified the same issue when cloning DevExpress/testcafe master and running the same task.. ",
    "drakor007": "Thanks a lot, \n it solved my problem with inserting a message into the html editor field. Because HTML editor changed normal spaces to \u00a0\nInsert whole message like a ctrl+v leaves spaces as they are.\nSimilar problem is described here https://testcafe-discuss.devexpress.com/t/verify-text-with-nbsp/226. testcafe 1.0.0-alpha.1 doesn't work on Windows10 too. Other versions of node.js,Chrome were unchanged.\n $ yarn testcafe chrome e2e/tests --hostname localhost\nyarn run v1.12.3\n$ C:\\Users\\david.klement\\Documents\\Thor\\lossevents-ui\\node_modules\\.bin\\testcafe chrome e2e/tests --hostname localhost\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nDavid.Klement@N1244 MINGW64 ~/Documents/Thor/lossevents-ui (develop)\n$ yarn testcafe -v\nyarn run v1.12.3\n$ C:\\Users\\david.klement\\Documents\\Thor\\lossevents-ui\\node_modules\\.bin\\testcafe -v\n1.0.0-alpha.1\nDone in 1.21s. \n. Hi, due to corporate decisions I run on Windows version:\nEdition: Windows 10 Enterprise\nVersion: 1709\nOS Build 16299.371\nChrome 71.0.3578.98 (Official Build) (64bit)\nLast Testcafe working build is 0.23.0\n. Hi, I tried it in cmd , admin cmd, power shell, admin power shell and Error is exactly the same. :(\n\n. ",
    "reaktivo": "@inikulin macOS Sierra 10.12.3\n. Of course this is just an idea, but I'm thinking of something like the following:\ncreateTestCafe('localhost').then(testcafe => {\n  const runner = testcafe\n    .createRunner()\n    .browsers(['chrome']);\n\n  const { fixture, test } = runner.getHandlers();\n\n  myOtherTestFramework.getFeatures().forEach(feature => {\n    fixture(feature.name);\n    feature.steps.forEach(step => {\n      test(step.name, step.fn);\n    });\n  })\n\n  runner.run();\n});.\n",
    "CrashyBang": "Hey @kirovboris you don't happen to have an open sour repo showing your electron/testcafe setup?. ",
    "Turkirafaa": "Hi @AlexanderMoskovkin \nCan you help me i am having this problem \nError on page \n  Uncaught TypeError: Cannot read property 'secret' of undefined\n\n. Hi @AlexanderMoskovkin \nI am still have the same problem and i am sorry for can't send link but if you have privet chat so i can explain more to you \nThank you for understanding . Hi i am using chrome Version 67.0.3396.99 (Officiell version) (64 bitar) and macOS version 10.13.4\ntastcafe chrome ****.js -ne . Can you please give me the command to install the new version \nThank you so much for your help. . Hi @AndreyBelym  please your advice because still i have the same problem. \nNote. It's  working fine with Firefox browser. . No it's only showing when i  run TestCafe, When i write chrome:userProfile it work fine now . @AndreyBelym  Thank you so much for you'r quick response we update the Node.js version to v8.12.0\nand it's working now.. Thank you for assistent Problem solved \n. ",
    "lzxb": "Is the window scrolling operation okay?. ok. Thank you. Can use. Well, now the test is through. ",
    "shalsabilaf": "\nTestCafe performs scroll automatically when you call any action. For example if you need to scroll to some element you can use the hover action.\n\nhi @AlexanderMoskovkin our site having issue, not automaticlly scroll down. i've tried Hover action, but still not worked. any suggestion? also already update version 0.22 still not worked. \nerror message: \n\nThe element that matches the specified selector is not visible.\n\nthanks. . ",
    "adamgen": "I know it's an old issue but we do need a scroll event in our project. We have an interface similar to google maps that give different results when scrolling with or without the cmd key pressed.\n@AlexanderMoskovkin any thought about this?. ",
    "ninjaPixel": "FYI, anyone who's come here via  a Google search, you can now do the following to enter a time (tested in Chrome)\nt.typeText('#input-time', '11:00'). ",
    "jpicone": "Thank you for your well-detailed question @maxmill, I also would very much appreciate insight from the github community on this. By the way, is this issue you've noticed happening only in Angular 2, or also when trying to test with TestCafe in other single page frameworks as well?. ",
    "maxmill": "@AlexanderMoskovkin it looks like it is working. I am using Chrome 58 (dev build) and updated last night - perhaps issue was a result of my environment. I appreciate the the quick response! . ",
    "Rask777": "Hello @inikulin @AlexanderMoskovkin ,\nHere are more details. I get a screenshot path in a report as expected when I run my tests with this command testcafe chrome test.js  -s screenshots --reporter json\nand inside my test I take a screenshot with t.takeScreenshot()\nBut it returns screenshotPath\": null, when I want to take a screenshot when test fails and I don't \nuse t.takeScreenshot() inside my test.\ntestcafe chrome test.js -S -s screenshots --reporter json\nIn both cases actual screenshots made as expected. \n. ",
    "tombertrand": "Hey guys, any update regarding this? or is there a current recommended workaround to mock responses?. Thanks for the quick reply, I'll give it a try!. ",
    "Matheusbafutto": "Any updates on this? I use testcafe on a project and mocking would be really useful.. ",
    "rhymes": "@AlexanderMoskovkin does that work only with \"node.js driven\" tests?\nBecause I'm trying using it with webpack proxy but it doesn't work.\nI have webpack's proxy configured this way:\njavascript\n{\n  proxy: {\n      '/api': {\n        target: 'http://localhost:5000',\n      },\n  }\n}\nwhich enables webpack dev server to talk to the backend running on port 5000.\nI tried like this:\n```javascript\nimport { Selector } from 'testcafe'\nimport nock from 'nock'\nimport config from '../../../config'\nconst data = {\n  results: [{foo: 'bar'}],\n  total: 1,\n}\nfixture('Result List')\n  .beforeEach(() => {\n    nock('http://localhost:5000')\n      .get(/api$/)\n      .reply(200, data)\n  })\n  .page(http://localhost:${config.dev.port}/)\ntest('Click \"Create info\"', async (t) => {\n  const createLink = await Selector('#create')\nawait t\n    .click(createLink)\n    .expect(Selector('h1').innerText).eql('Create info')\n})\n```. @miherlosev not really sorry, it was just an experiment. I used a webpack config with the proxy activated and sent a request to a backend.. @AndreyBelym it worked! thanks\n. ",
    "Dmitry-Ostashev": "I need a strong match, that means \"equal\", not \"contains\". \nFor example, a have two divs \"Object 1\" and \"Object 11\". I want to find only \"Object 1\", but with .withText('Object 1') I will get both these divs.\nI have solved this problem by the following approach:\n`var innerTextEquals = ClientFunction((element, text) => {\n        return $.trim(element.innerText) === $.trim(text);\n});\n//...\nSelector('.dx-navigation-item').filter((node, idx) => { \n    return innerTextEquals(node, itemCaption)\n}, { innerTextEquals, itemCaption });`. ",
    "qaiser110": "May be better to change withText to do exact search by default\nand add a new method withTextContains or withTextIncludes or withPartialText. ",
    "brettveenstra": "Thanks I did not see that feature request before.\nI suppose a better E2E testing approach that covers our needs would be to support a Fixture-based hook that starts wth login and still allows the clean .page method.  I wasn't seeing a way to automate our logging screens and begin at the correct URL.  \nThis is for a SPA so I was assuming it would be easier to obtain a token and pass through the test context before starting browser automation steps.\nWhich approach would you advise (hook vs headers)?\n\nOn Mar 13, 2017, at 7:23 AM, Alexander Moskovkin notifications@github.com wrote:\nHi Brett,\nThanks for your proposal.\nWe've discussed the similar question in the #1125 issue.\nAm I understand right your case? To be logged in you need do some actions (e.g. type login + password, click submit). You wouldn't like to do it in each test.\nIf so, we are working on the Implement user roles feature that will allow to do logging actions once for all tests. Does it work for you?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @inikulin: that should cover this request. Thanks. @inikulin - what about supporting shared step(s) per Fixture (e.g. .useRole(), or other async func) and not just at the Test level?  Most testing libraries have this concept already where an expensive context/scenario can be initialized for a group of Tests... would be very handy in SPA and other cases where setup is consistent (and immutable). @AlexanderMoskovkin thanks for the quick reply ... if that works as you say, is there a reason why the fixture api doesn't support useRole?\n\nexample:\nfixture `fixture1`\n   .useRole(someRole);\n\nper the documentation, the beforeEach suggests that your workaround will fire for EACH test belonging to the fixture (which is inherently what I don't want) so cognitive hurdle there with the API ...\nputting useRole at fixture level could then automatically set the preserveUrl parameter and I could re-use the same someRole across other tests. ",
    "ghiscoding": "Thanks that worked :). ",
    "zhaighin": "Can this bug be fixed asap? I have been waiting the fix since the ticket created.. ",
    "RoyTinker": "I'm looking at adding unit and end-to-end tests to a large, mature web app... and if I could go with a single solution I would.. ",
    "riquito": "I'm interested in having TestCafe being able to run unit tests, but I'd see more value if it could run them on real browsers, as for e2e, otherwise there are many solutions for running tests on node.js. Afaik only karma support unit tests on real-browsers.\nUnit tests on node.js are supported by many but that way your tests run on the only engine that nobody uses among your users. TestCafe may strive for more.. ",
    "devdelpiero": "I think your team should focus more on http testing. Like postman or supertest. . ",
    "tsv2013": "Please check the Annotating Tests with the Sauce Labs REST API article.\nAlso an option to make test results public could be helpful.. @AndreyBelym Yes, this is the expected behaviour. But in my log I've got completely another error. Not errors in tests, but \"Unable to establish one or more of the specified browser connections.\". SauceLabs tasks start ok, but no feedback to the testcafe running under TravisCI.. @AndreyBelym In our SauceLabs account we have two concurrent sessions. This may be the reason why 2 is the magic number here.. ",
    "chinjon": "Is there any progress on this feature? I was also wondering if there is any way to \"catch\" a failed assertion within a test or return some sort of value.\nEdit1: to clarify - return a value that indicates that there was a failed test\nEdit2: I've been able to \"catch\" error codes but I don't think it's reliable method:\nconst errorCodeCatcher = () => {\n  // processes exit code on exit\n  process.on('exit', function (code) {\n    // if success\n    if(code === 0) {\n      console.log('All tests passed', code);\n      return code;\n    }\n    // if errors (any code > 0)\n    console.log(`An error was found in: ${path.basename(__filename)}`);\n    return code;\n  });\n};. @karolisgrinkevicius I have not as of yet still. I did some experimentation. Essentially I perform a conditional with the assertion I am performing. This is not the exact code I used, but this should work (haven't tested).\nThis is by far not an optimal solution, but something that came to mind while I was experimenting. I also explored with exit codes but haven't came up with a good solution either. \nThank you for your interest in this feature.\n``js\ntest(test #1`, async t => {\n  if (await (Selector('.nexttt-button').exists) === false) {\n     await (Selector('.nexttt-button').exists) // this should throw error to CLI\n     process.kill(process.pid); // this should kill current process\n  }\n})\n// should not run\ntest(test #2, async t => {\n  if (await (Selector('.nexttt-button').exists) === false) {\n     await (Selector('.nexttt-button').exists)\n     process.kill(process.pid);\n  }\n})\n``. @AndreyBelym Can we have something likedebug on failbut without the GUI and pause functionality? A full test could be comprised of 50+ tests of numerous fixtures. It'd be useful to immediately understand there is an error immediately. Might be a niche request, but thank you for considering it. . @AndreyBelym noted. Thank you forTestCafe` and the continued active development.. Is there traction with this feature, I found a use case for this that would be extremely helpful. Ideally, the remote URL would be pasted into the clipboard or accessible somewhere.. +1. I found a way to handle this but it's not scalable. I use this solution to skip over tests that require window resize, but can't be performed due to devices the test is running on, IE: mobile device browsers.\nI created a function that leverages clientFunctions and obtains the document width (or height if your test is dependent on height) and conditionally run test:\ntest\nconst pageWidth = getPageWidth();\nif (pageWidth < 1000) {\n  // do test stuff\n} else {\n  console.log('SKIP TEST: Does not meet dimension requirements')\n}. Hello, interested in this feature as well. I tried using the --disable-page-reloads flag with both versions 0.20.5 and 0.20.4 but still seeing page reloads. I was wondering if there is anything else I need to know about this experimental feature. . @AndreyBelym Thank you for the speedy response. \nContext to my previous comment, I had tests set up like so:\n``\nfixture\n  .pageurl.html`\ntest1()\ntest2()\n```\nEssentially all of the tests would have the same URL in this case. I tried following your example where you had the navigateTo() method within the test(s) but for that same url.html URL. Still seeing reloads.\nAlso, thank you so much for TestCafe and the continued development. It's such a wonderful tool. . @AndreyBelym Alright, thank you so much for the response. Did some additional testing on my end and found that 0.17.2 works fine with IE9 and IE10.. ",
    "karolisgrinkevicius": "I'd also really love to have such feature. @chinjon have you solved this somehow already? If so please share your implementation since we could patch the module in a meanwhile. . Already tried that but it seems not to be working with testcafe@0.22.0.\nRun on:\nChrome 68.0.3440 / Mac OS X 10.13.6\nDo you have an example with this option of working e2e tests?. Reinstalled all node modules by force. Tried using BROWSERSTACK_USE_AUTOMATE=1. Still getting the same error.. Using testcafe-browser-provider-browserstack@1.4.0. \n - Chrome \u2705\n - Firefox \u2705\n - Edge \u2705\n - IE \u274c. ",
    "row1": "This would also be useful when you have a lot of tests for application state and you want to diagnose the current state that the application is in when it failed. For example I have a fixture that passes when run by itself, but it fails when a certain number of fixtures before it have run. Subsequent fixtures seem to fix the state, so it would be good to abort the test at the first failure so that I can login and inspect the application state.. @AndreyBelym I run the 100+ tests on a separate machine where debugging isn't ideal. But since the debug flag will pause the execution, it should maintain the state and allow me to login to the website from my PC and observe the issue, so this could be a suitable workaround. Thanks for your help.. Sorry, I should have mentioned that i have been using Chrome.\nI see that v0.21.0 has just been released (thanks), so I will try upgrading to that first. I will also see if using headless Chrome makes a difference. Will report back next week.\nThanks. You can close this. I have upgraded from 0.20.4 to 0.21.0 and it seems to be working fine now.. ",
    "marcelaraujo": "Hi @inikulin \nI did it yesterday after found in this repository @hackathonic/hackathonic-client\nMy fault was trying to get the sessionStorage object.\nThank you so much @inikulin . ",
    "tamlyn": "Note that TestCafe won't complain if you try and set a localStorage item before a page is loaded. You can read it back too but when a different page is then loaded the item will not be set (which makes sense). That had me confused for a while. Just recording my mistake here in case it helps someone.. I've been evaluating Cypress alongside Testcafe and watch mode is something that they really do right. It's so fast it makes writing E2E tests feel as good as writing unit tests. I would love to see something similar in Testcafe.. Actually I've come up with a workaround for this that makes all browsers wait until the currently running test suite completes before starting the next one:\n```js\n// locker.js\nlet isLocked = false\nconst queue = []\n// run before DB setup code\nexport async function acquire () {\n  if (isLocked) {\n    // another test suite is already running so wait until it finishes\n    await new Promise(resolve => queue.push(resolve))\n  }\n  isLocked = true\n}\n// run at end of tear down\nexport function release () {\n  // are there other tests waiting to run?\n  if (queue.length) {\n    // resolve a promise (FIFO) and start the next suite\n    queue.shift()()\n  }\n  isLocked = false\n}\n```\njs\n// test.js\nimport {acquire, release} from './locker'\nfixture('My thing')\n  .before(async () => {\n    await acquire()\n    // ... other setup\n  })\n  .after(() => {\n    // ... other tear down\n    release()\n  })\nI'm still interested in the dev teams thoughts about the default behaviour though, or any more elegant solutions.. Thank you both for the rapid response and suggested workarounds. I don't think reaching into the DOM and manipulating innerHTML is a very robust long term solution. Could you help me understand why focusing the contenteditable=true div doesn't hide the placeholder as one would expect?. I noticed yesterday that just appending an empty string to innerHTML is enough to make it editable:\nselector().innerHTML += '';. Thanks for the explanation. Would it be worth updating [the documentation](https://devexpress.github.io/testcafe/documentation/test-api/actions/#selecting-target-elements) to mention this? Currently it says\n\n\nBefore executing an action, TestCafe waits for the target element to appear in the DOM and become visible. If this does not happen within the selector timeout, the test fails.. I see, thanks.\n\nWhat I was trying to do is replicate the auto retry logic because I need to assert on the presence of a file in a mock SFTP server but there's nothing in the UI to indicate when it's uploaded. I created the following helper function:\njs\nconst autoRetry = async (fn, timeout = 5000, delay = 100) => {\n  const start = Date.now()\n  while (true) {\n    try {\n      return await fn()\n    } catch (err) {\n      if (Date.now() > start + timeout) {\n        throw err\n      }\n      logger.debug(`Auto retrying failed assertion:`, err.message || err.errMsg)\n    }\n    await new Promise(resolve => setTimeout(resolve, delay))\n  }\n}\nWhich I can use like \njs\nawait autoRetry(() => {\n  assert.strictEqual(mockFs.readdirSync('/test'), ['expected.file'])\n})\nThis works fine when using Node assert instead of TestCafe expect so that's what we're doing.\nIncidentally, it would be neat if we could piggy back on TestCafe's retry logic for stuff like this.. ",
    "TestAndunR": "Hello,\nCan I set session storage as well like this\n```\nconst sessionStorageSet = ClientFunction((key,val) => sessionStorage.setItem(key,val))\nawait sessionStorageSet(\"GCLOUD_TOKEN\",token).then(function(data){\n        console.log(data);\n    }).catch(function(err){\n        console.log(err);\n    })\nAs I run the above code key `hammerhead|storages-sandbox-temp` of session storage sets it value as GCLOUD_TOKEN. Is there any thing wrong which I do in the above code. . Hello, \nDoes typeText() method works for monaco code editor in a web application. Hi @AndreyBelym ,\nYes I'm working with an online IDE.  And followig is the code i used. typeText() method did not worked in this scenarioimport { Selector } from 'testcafe';\nfixtureLogin and Creating a new Project\n.pagehttps://sigma.slappforge.com\ntest('write on monaco editor',async t=> {\n    const resourceElement = await Selector('.mtk1').withText(\"event\").with({ visibilityCheck: true })();\n    await t\n        .typeText(Selector('input[name=email]'), 'username')\n        .typeText(Selector('input[name=password]'), 'password')\n        .click(Selector('button[type=button]'))\n        .typeText(Selector('input[name=projectName]'), \"TestCafeProject\")\n        .click(Selector('button[type=button]'))\n        .wait(5000)\n        .click(Selector('.view-line').nth(3))\n        .typeText(Selector('.view-line').nth(3),\"asas\");\n}). @AndreyBelym Thank you \ud83d\udc4d . Hi guys, I got the following warning although the screenshot did save in the directory.\nWarnings (1):\n --\n  Was unable to take a screenshot due to an error.\nError: Unable to locate the page area in the browser window screenshot at\n  C:\\ADRT\\Code\\SigmaGit\\testcafe\\Sigma_Automation_Testcafe\\screenshots\\2018-06-21_10-35-29\\test-1\\Chrome_67.0.3396_Windows_10.0.0\\errors\\1.png, because the page area mark with\n  ID 3833739374 is not found in the screenshot.\n      at _callee$ (C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\lib\\screenshots\\crop.js:95:31)\n      at tryCatch (C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\regenerator-runtime\\runtime.js:62:40)\n      at Generator.invoke [as _invoke] (C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\regenerator-runtime\\runtime.js:296:22)\n      at Generator.prototype.(anonymous function) [as next] (C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\regenerator-runtime\\runtime.js:114:21)\n      at step (C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:17:30)\n      at C:\\Users\\Andun - ADRT\\AppData\\Roaming\\npm\\node_modules\\testcafe\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:28:13\n      at \n```. @AndreyBelym \nThank you very much . Hello everyone,\nHave you guys able to implement this feature. . @AlexKamaev \nI have the same issue with the useRole even though I've used preserve url attribute. User credentials are not saved for the second test. . Hi @AlexKamaev, \nI'm using the v0.19.2. Following is the web page \nhttps://sigma.slappforge.com\nAnd I've attach the files\npage-object.txt\ntest.txt\n. Thank you very much \ud83d\ude42. Have you guys fix this issue, Its available in  0.21.1 as well . Hi @AlexKamaev, thank you for the reply. Yes this workaround work for me. Thank you . I got the same issue. Is there any workaround for this.\ntest(\"test\",async t => {\n        await cognitoTriggers.forEach(trigger => {\n                t.expect(triggerTypes).contains(trigger,trigger+\" could not found in the sample list\");     \n    });\n}). ",
    "natkrish": "Hi Guys,\nI was wondering if anyone can help me with this issue. So at the moment, I have a testcafe tests in cucumber.js setup. the test executes fine when I run it from local against browserstack. But when I run it from Jenkins -> browserstack, I get this weird error \n Error: Unable to find the browser. \"browserstack:Chrome@68.0:Windows 10\" is not a browser alias or path to an executable file.\nCan some one pls help? . ",
    "cdroulers": "I have a similar problem. Setting the value seems to do the sandbox thinger.\nI see this in the application tab in Chrome devtools :\nhammerhead|storage-wrapper|Hy_oiwl6e|localhost:8888 => [[\"atlas:lang\",\"atlas:token\"],[\"en\",\"{my-jwt-token}\"]]\nhammerhead|storages-sandbox-temp => atlas:token\nThey are both used for headers added to my request with Relay, and it seems like hammerhead adds weird prefixes?\nI don't know if it's related, but it depends on how @Darmody uses localStorage too.. It was a Chrome extension that overrode all requests Accept-Language header. Never mind my comment!. @mnemanja https://chrome.google.com/webstore/detail/quick-language-switcher/pmjbhfmaphnpbehdanbjphdcniaelfie?hl=en. @LavrovArtem @AndreyBelym Thanks for the fix!\nFrom the changes, it seems we can specify profile settings? Is that something that is available from the CLI or from code that we can use and if so, is there any documentation? Thanks for a great product!. @AndreyBelym Hey Andrey, The setting you're looking for is\njson\n        \"automatic_downloads\": {\n          \"http://*,*\": { \"last_modified\": \"13158356206788629\", \"setting\": 1 }\n        },\nI've successfully used a custom data dir with chrome to get this to work. I have a template folder copied from a new profile from Chrome in source control, copy that over in another folder before every run so I get a clean profile and it also use my settings properly.. ",
    "mnemanja": "@cdroulers Could you please share which Chrome extension was in question? \nI might be having the same problem and this info would be useful.\nThanks!. Thanks guys for these quick replies. \nMy problem is that the data is not ready when the router needs it.\nI've created a ticket for it here https://github.com/DevExpress/testcafe/issues/1916. I can confirm that with the version 0.16.2 this works fine.. I'm using the 2017.1.4 version of the Webstorm.\nI have no code quality tools enabled at the moment of testing.\nI wonder about the list of Webstorm's Javascript Libraries in that Webstorm? In mine, I've disabled everything except HTML and it looks like this:\n\nAnd here is the list of libraries in my IDE:\n\n. Sure thing, Here it is!\nsettings.zip\n. I've, actually, never used typescript before.\nIs it necessary to use it with Testcafe?\n\n\n. Hi Marina,\nI've installed TypeScript 2.4.1 globally and have configured it, as shown in the image bellow, but the highlighting did not change.\n\n. Thanks, @Leksat. \nYour suggested solution worked for me as well.. You sir, are awesome! \nThank you very much for this quick response and a good example. \nMy code was failing on the expect line with productsListItem0Title.innerText looking up the content before it was ready.\nFrom your example, I've managed to deduct that I was missing an await on my productsListItem0Title.innerText. I've moved the innerText on the previous line, where it has await and now it works as expected.\n```javascript\ntest.only('selecting another product, while the previous is still opened, should refresh the preview with the new selection.', async t => {\n  const productsListItem0 = await Selector('#listContainer').find('li').nth(0);\n  const productsListItem0Title = await productsListItem0.find('[data-test-id=\"name\"]').innerText;\n  const pageTitle = await Selector('#pageTitle');\nawait t\n    .click(productsListItem0)\n    .expect(pageTitle.textContent).eql(productsListItem0Title)\n});\n```\n. I've meant the open source version. Much obliged :). Thanks @AlexanderMoskovkin. Hi @AlexanderMoskovkin,\nThanks for this quick and helpful answer!\nLooking forward to the addScriptToEachPage feature in the future.\nFor now, the navigateTo feature will do the trick. I must have missed it in the documentation because I was looking for something like that.\nWorked like a charm.\nThanks again!. Hi @AlexanderMoskovkin,\nThanks for this quick and helpful answer!\nLooking forward to the addScriptToEachPage feature in the future.\nFor now, the navigateTo feature will do the trick. I must have missed it in the documentation because I was looking for something like that.\nWorked like a charm.\nThanks again!. \"testcafe\": \"^0.21.0\",\nI've stumbled upon this, and I'm having a trouble with the selectText method \nThe action element is expected to be editable (an input, textarea or element with the contentEditable attribute).\n\nBasically it complains that the input is not editable, where in fact it is.\nWhat I'm trying to achieve is to delete a text from an input field.\nes6 \nawait t.selectText(inputElement).pressKey('delete');\nI'm able to write to the field, but not select the text.. ",
    "oneillci": "Just want to add my use case for this feature.\nI'm currently building a SPA that has a .net web api backend.\nTestCafe seems to be awesome for functional UI testing, but we have another type of testing that we perform: API testing in a regression environment.\nAt the moment we're trialling using SoapUI for this kind of testing but are finding it a little clunky.\nOur entire application requires a user to be authenticated.\nTesting the API which requires authentication can be achieved in SoapUI, but we have to jump through some hoops by:\n1. Actually requesting the login page as we use request verification tokens\n2. Posting the form back\n3. Capturing the auth cookie\n4. Attach the auth cookie to each subsequent API call\nAll of this is trivial to achieve in TestCafe as it's actually running in the browser.\nIn our regression environment we then call our API and compare the results to a saved json file. As it's a financial application, some of the saved results can be quite large and property level testing is not appropriate - we usually just want to ensure that the entire response is the same as the previous test run.\nI'd like to use TestCafe to login, navigate to a report screen, fill out the report parameters, run the report and then intercept the xhr request for the results - this might be an xhr request that I'd like to wait several minutes for.\nI'd then like to do jest-style snapshot testing of the json results i.e.\nt.expect(jsonResults).toMatchSnapshot();\nI'd be happy taking a dependency on another library (think Ava rely on Jest to do a similar assertion) to do that snapshot.\nIf I could do this in TestCafe, then I'd have one coherent strategy and framework for all functional UI and API testing which would be \ud83d\udcaf \n. Is there any movement on this issue? Looks like it's planned for development. Any timeframe on this?. I think this would be hugely beneficial for single page applications, but I also think it should be an explicit opt-in so that a user is aware that they are not starting with a blank slate for each test and that people testing regular websites are not affected.\nOne of the things that is more difficult in a SPA is managing the client side state. Every time you refresh the page, the app bootstraps so you're in a pristine state, but some of the more difficult to track bugs in a SPA arise after editing an item, navigating and expecting an unrelated component to be updated.\nA typical scenario for me would be:\n\nNavigate to an edit page, test the inputs - cascading dropdowns, field enabled/disabled or hidden based on user selection etc.\nClick the in-app save button - this saves the item\nNavigate back to a grid page - the updated (or newly added) item should appear in the grid.\nDepending on the item saved it could update other parts of the UI - saving a user for example could update a status bar containing the current user name.\n\nA test like this could be achieved by putting all logic within a test(), but it would be nice to separate these different test responsibilities into different tests(), but at the moment if I put them in different tests(), the page reloads and I'm not testing that the client side behaviour is correct.\nCurrently a test like this would be written\n```\nfixture(\"test save item saves a updates grid');\ntest(\"check inputs, save, navigate, check grid\" async t => {\n  //test cascading dropdowns\n  //check boxes\n  // assert items are enabled/disabled etc\n  // do a save\n  // assert no validation errors\n  // navigate to grid page\n  // assert updated item exists in grid\n});\n```\nIMO, a nicer way to write these would be each test has a single responsibility\n```\nfixture(\"test save item saves a updates grid', { noReloadBetweenTests: true });\ntest(\"check inputs\" async t => {\n  //test cascading dropdowns\n  //check boxes\n  // assert items are enabled/disabled etc\n});\n// No page refresh please!!\ntest(\"save without validation errors\" async t => {\n  // do a save\n  // assert no validation errors\n});\n// No page refresh please!!\ntest(\"item exists in grid\" async t => {\n  // navigate to grid page\n  // assert updated item exists in grid\n});\n```\nThe fact that it would improve the performance of running the tests in the fixture would be a bonus (for me) rather than the goal.\nAs mentioned by @iexplore in #1509, enabling this via a 'noReloadBetweenTests' option or similar on the fixture would be a great solution to this.. I like so much about test cafe but I think this will be a deal breaker for a lot of people testing SPA's. I've followed this thread for about a year now and IMO it's much more of a philosophical difference rather than any technical limitation. It's up the owners of this project to decide the direction they want to pursue and I respect that. But closing this issue flies in the face of how developers of SPA's work and also how they behave at runtime. It strikes me as purism over practicality and I say this with a lot of respect for the testcafe development team as, aside from this, it truly is an excellent tool. IMO, testing SPA's will not be a 1st class citizen in testcafe unless this scenario is addressed. ",
    "camsjams": "Would love to use this feature too!. ",
    "curtisblackwell": "@miherlosev is this functionality available somewhere now, or is this just the planned interface?. @AlexanderMoskovkin understood, thank you. I'm interested, but it sounds like timing may be an issue.. ",
    "Alxandr": "This looks really promising. I have a question though. Will you be able to assert that a request-hook has been triggered?. Thinking about it, it's probably not actually needed for integration tests. . ",
    "zoejobson": "I notice that at least some of this feature is present in the alpha 2 build. Could you explain to me how to use it to achieve what I want to achieve. \nhttps://testcafe-discuss.devexpress.com/t/testcafe-not-always-catching-requests-from-browser/818/4\nthat is:-\nOur webapp gets a series of images when a report is run. \nWhen I run the report via test cafe each image is GOT twice, once without the proxy wrapper and without our internal auth cookie, and once with the proxy wrapper (the cookie is not visible but it works anyway, so I'm assuming some sort of proxy magic). We need to be able to prevent testcafe from attempting to get these images without the correct authorisation. Because doing so sets off alarms in our data dog as they look like attacks. Without being able to do this we will be forced to throw away a few months of work and switch to a different technology.. badgridlist is the element for the grid when elements are hidden, gridlist is when they are not, they should not be hidden.\nbadgridlist.txt\ngridlist.txt\n. ",
    "chadmyers": "@inikulin Thank you for the response! I'm loving TestCafe, btw. \nI'll definitely check out the \"once()\" trick. That may do what I need.\nYou asked for my use case:  Our testing philosophy for UI tests (what we call \"regression tests\" since we follow the unit/integration/regression test hierarchy scheme) is that we reset the DB back to a known state before each test.  So before each test, I want to run our \"clear()\" routine. The problem I ran into is that if 4 browsers are running the test simultaneously and they fire off clear() at various times (due to asynchronous execution) they can stomp on each other.  So I'd like to run the clear once for all four browsers, run the test for all browsers, then move onto the next test.  \nThe workaround I used was to do all the test setup in the fixture hook, but that means I can only have one test per fixture and we usually have more tests per fixture.  \nIt's possible I may be bringing my prior-tool philosophy into this tool and that's why I'm having this difficulty, so feel free to tell me I'm \"doing it wrong\" and I'll readjust my understanding accordingly :)\nThanks again for a great tool!\n. I understand the conundrum about the TestController access in the \"beforeAll\" (or whatever it would be called) method.  For my purposes, I do not need access to the browser in the beforeAll(), in fact, that would be the entire point of this method would be \"Before each test, before the browsers are spawned\".  The before hook satisfies the \"before each test, after the browser is spawned\" use case very well.. ",
    "djbreen7": "If I'm not mistaken, it looks like the once workaround above will cause everything in the fixture.beforeEach to run only once. I wasn't able to accomplish what I wanted with that solution. I was, however, able to implement a similar solution that worked really well for me:\n``\nfixture(My Fixture`)\n    .before(async ctx => {\n        ctx.hasExecuted = false;\n        // Server-side actions\n    })\n    .beforeEach(async t => {\n        // Before each test\n    if (!t.fixtureCtx.hasExecuted) {\n        t.fixtureCtx.hasExecuted = true;\n        // Client side actions to run once.\n    }\n})\n\n``` . @qualityshepherd Do you have sample code somewhere? I've had a lot of luck with Roles. . I still have this exact problem.\nBrowser: Chrome (latest stable)\nTestCafe: 0.17.0-alpha6. @AlexanderMoskovkin:\nSure. Unfortunately, I can't share the tested page. However, I can share the report (attached below)\n\nWhile this still appears to be a problem, I have no need for the fix at this time. I don't have the error with incognito and that's how I prefer to run UI tests anyway.\ntestcafe \"chrome --incognito\" tests\n. @arthurgeron Interesting. In my case, the problem resolved itself when they disabled browser extensions by default. So I bet one of my extensions was manipulating the urls. Specificially, I'm betting lastpass or switcheroo (for redirecting). @inikulin: I'll have to confirm, but I don't think a forEach wrapped around a test will work if you run a single test, i.e., using VS Code extension or testcafe ie my-tests -T \"Test Name\" to run an individual test out of a fixture. I'll give it a shot though and see what happens.. @inikulin: I stand corrected.. Hi @Foxandxss!\nIs there a specific reason that you have your testcafe code and your angular code in the same project? I believe the idea is that your testcafe tests exist in their own project and you run them against a served up or deployed app. I'd recommend separating your testcafe tests from your angular app.\nForgive me if I'm confused. :) Maybe there are some unseen benefits to your approach. It just seems uncommon to me.\nRegardless, I'm specifically subscribed to this thread in hopes that this feature will be implemented soon. Looks like it's getting there.. Hi @Foxandxss!\nIs there a specific reason that you have your testcafe code and your angular code in the same project? I believe the idea is that your testcafe tests exist in their own project and you run them against a served up or deployed app. I'd recommend separating your testcafe tests from your angular app.\nForgive me if I'm confused. :) Maybe there are some unseen benefits to your approach. It just seems uncommon to me.\nRegardless, I'm specifically subscribed to this thread in hopes that this feature will be implemented soon. Looks like it's getting there.. ",
    "nihaux": "I forgot to whitelist the ip/port testcafe is using in google dev console. :)\nHowever, I had another issue related to localstorage, for the next login step.\nI'll open a new issue if I can't figure it out, but given this code:\ntest('My Test', async t => { \n  const localStorageSet = ClientFunction((key, val) => localStorage.setItem(key, val));\n  await localStorageSet('bone.jwt', jwt);\n  await t\n    .debug()\n    .expect(currentSite.exists).ok('show vsd');\n});\nand this code in my app:\nconsole.log(window.locaStorage, window.localStorage.getItem('bone.jwt'), window.localStorage['bone.jwt']);\nwindow.localStorage contains my data but neither getItem or direct access returns a value.\n. ",
    "rickschubert": "@inikulin What is the progress on this? I would love to use testcafe with BDD :). Hi @AndreyBelym , thank you very much for this answer! I haven't used static class methods before, your solutions looks like a really good trick though. Thank you!\nRegarding the nonexisting page element: I was doing this in order to prove that the waitForLoading function is actually called and works properly. I also had several scenarios where it wasn't called properly.  (Probably due to me not using async/await correctly.). ",
    "KonstBa": "are there any news on this? :). ",
    "belkozavr": "Waiting for some native BDD support as well. . ",
    "bhreinb": "Yes I'm very interested in this too...I tried to integrate cucumberjs & testcafe but have found it to be seriously challenging at times :(. Hey I'd love to have official support too.\nIn the meantime I have created an unoffical integration with cucumberjs and TestCafe. Some folks here may find it useful. Link below\nhttps://github.com/bhreinb/SYSTAC. @AndreyBelym\nI'm seeing exactly the same that @gregorycv described above with same version. Re firefox that occurs for me when I run it headless or in regular mode.\nShould this ticket be re-opened?\nBtw I also see as part of that test run which may be of concern\n\n(node:2091) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit. Hi Folks,\n\nI'm fairly sure this code commit broke functionality that was working prior to version v0.23.0\nhttps://github.com/DevExpress/testcafe/releases#v0.23.0%20(2018-10-18)\nI have a sample code snippet like so within a function...\nconst promises = [\nt.typeText('input[aria-label=\"Search Learning catalog\"]', searchText, {}),\nt.pressKey('enter', {}),\n];\nreturn Promise.all(promises);\nI've had to change to to the following because of this change \nawait this.classBasePage.testCafeTypeText('input[aria-label=\"Search Learning catalog\"]', textSearch, {});\nawait this.classBasePage.testCafeActionsPressKey('enter', {});\nthe first construct is perfectly valid and should be still supported should it not? I didn't want to use await within this function context but I'm not forced to do this due to that change.\n. Hi @LavrovArtem. Thanks for the update and providing me with the feature request. All the best.. +1 for this feature, It would be a nice alternative to have rather than chaining actions.. Update to this thread\nI have updated testcafe to \"0.19.2\" and item 1) is no longer an issue for me. However that said item 2) is a significant blocker as I can't move past version \"0.19.2\" because of that.\nI did some updates to the sample program used to reproduce this behaviour. It is attached. Let me know if you have any questions.\ntestcafe-cucumber 10Sept2018.zip. Hi @AndreyBelym \nThanks for your response. I test against a wide range of browsers, for example chrome, firefox, safari, edge & ie. I also wanted to test with opera but that seems a bit unstable for now and not a high priority compared to the others I mentioned.\nIn terms of that warning \"Was unable to take a screenshot due to an error rejects the promise\" I have narrowed down the problem to an issue on mac.\n\nAttached is my setup on mac which is connected to 2 monitors. When the runner launches the browser on the mac display it runs to completion every time. However, when the runner launches chrome for example on either of the secondary monitors it throws that unhandled exception error every time. As mentioned above this seems to only occur on Mac as I tested this with a colleagues setup (which is windows). Bizarre I know \ud83d\udc4e.  Hope this helps with that. Let me know if you need more detail.\nWhen you say I shouldn't be taking screenshots manually, how do I accomplish this if I move way from that? The workflow currently is\n\nCreate the runner and capture the testController instance at the {Before} hook stage\nRun testCafe commands bound to the testController instance at the {Given,When,Then} steps stage\nCheck for testCafe errors, take a screenshot, attach image & close runner instance at the {After} hook stage\n\nScreenshots weren't been generated for me unless I explicitly have this line\n.after(t => errorHandling.ifErrorTakeScreenShot.bind(errorHandling)(t));\nin the testCafe script. Appreciate any guidance on the above.. Hi @AndreyBelym \nAny thoughts on the above? \nIdeally, I'd like to move away from I'm doing in step 1), that been creating the runner & capturing in the Before step but rather do this in the BeforeAll Step. Reason been there is a significant performance hit doing this especially when integrated with Saucelabs or Browserstack. Moving to the BeforeAll stage however introduces something else as detailed in this thread \nhttps://testcafe-discuss.devexpress.com/t/testcafe-and-cucumber-js/207/24\nso if you have any suggestions to allow the test run to continue when a test scenario fails (i.e. an ability to reset the assertion on the fly via an API call I'd really really appreciate this).\nBtw any idea when official support for cucumberjs is coming?. Hello @Aniku2009 \nThis may be of interest to you. I use this package to run tests in parallel via cucumberjs (with some limitations)\nhttps://www.npmjs.com/package/cuke-skywalker\nHope this helps.. Hi @AndreyBelym \nThanks for your response. Yeah it would be great if TestCafe just had the stand-alone browser manipulation subsystem. That would be useful to a-lot of users I would think.\nI'm fairly sure the author of that repo can't do anything to fix this. Functionality it works per design when I have the TestCafe setup in the Before stage but way too slow. In the BeforeAll (where I should be doing this but can't because of how TestCafe is designed)...because one failure causes all other tests to fail with the same exception..hence why I logged it to this repo hoping that you would give me ideas on how to reset a failed assertion.. Hi @AlexKamaev \nI'm trying to do this outside of test context as I'm using testcafe with cucumberjs meaning I need to bound the test context to the selector. Here is my code below...\n``\nconst titlesAndDescription = Selector('[data-testid=\"search-result-list\"] li a').addCustomMethods({\n        getTitlesAndDescription: (searchResults) => {\n          const buffToReturn = [];\n          const descriptions = [].slice.call(searchResults.querySelectorAll('title'));\n          const titles = [].slice.call(searchResults.querySelectorAll('textContent'));\n          const numDescriptions = descriptions.length;\n          const numTitles = titles.length;\n          if (numDescriptions === numTitles) {\n            titles.forEach((title, i) => buffToReturn.push({ title, description: descriptions[i] }));\n          } else {\n            logger.error(After Searching The Number Of Returned Titles [${numTitles}] Doesn't Match Returned Descriptions [${numDescriptions}]`);\n          }\n          return buffToReturn;\n        },\n      });\n    return titlesAndDescription.getTitlesAndDescription();\n```\nThis throws the following error message....\ngetTitlesAndDescription cannot implicitly resolve the test run in context of which it should be executed. If you need to call getTitlesAndDescription from the Node.js API callback, pass the test controller manually via getTitlesAndDescription's.with({ boundTestRun: t })method first. Note that you cannot execute getTitlesAndDescription outside the test code.\nI don't know where in the code snippet I should be bounding the test controller. Is that something you can guide me on please? BTW their really should be dedicated API to query array elements selectors rather than extending a selector as it would make the tool a-lot easier to use IMHO.. Hi @arthurgeron \nThanks for the quick response. So when I tried it with custom properties it works ok for me (namely the sample code I provided works out of the box). I don't like the code though as it is, as it should be simpler and more readable to others. When I tried to evolve it to use custom methods then it did not work for me.\nIn both cases I'm using await namely I call the property/method externally along with the await keyword.\n. Yeah @arthurgeron their should be a-lot easier way to do the functionality I'm trying to do. For me having an API like so \nhttps://www.protractortest.org/#/api?view=ElementArrayFinder\nwould be a good addition to the tool. You actually shouldn't need to extend the selector really to do something like this.. Hi @LavrovArtem \nPlease find a sample usage below...\nthis.reviewAcaManagementUsersTable = element(by.id('aca-gridcustomerUsersCollectionId'));\nthis.reviewAcaManagementUsersColumnsHeader = this.reviewAcaManagementUsersTable.all(by.css('span[id^=header-label-]'));\nthis.reviewAcaManagementUsersRows = this.reviewAcaManagementUsersTable.all(by.repeater('row in rows track by $index'));\nthe usage within a function....\ngetExistingAcaManagementUsersFromReviewPanel(includeHeaders) {\n    const bufferToReturn = [];\n    if (includeHeaders) {\n      this.reviewAcaManagementUsersColumnsHeader.getText().then((columnHeader) => {\n        bufferToReturn.push(columnHeader);\n        return columnHeader;\n      });\n    }\n    return this.reviewAcaManagementUsersRows.map((elmRowsLocators) => {\n      return elmRowsLocators.all(this.reviewAcaManagementColumnLocator).map((elmColumnLocators, idx) => {\n        if (idx === 3) {\n          return elmColumnLocators.getAttribute('title');\n        }\n        return elmColumnLocators.getText();\n      });\n    }).then((rowValues) => {\n      rowValues.forEach((rowValue) => {\n        bufferToReturn.push(rowValue);\n      });\n      return bufferToReturn;\n    });\n  }\nwhat going on here is we are querying the text an attribute table (that has four columns and five rows...one of those rows is a header). Their is one caveat though in that we query an attribute rather than getting the text of the element (this happens at index 3). We return to the calling function a two dimensional array containing approximately 20 strings...5 at index 0, 5 at index 1, etc.\nHope this helps?. Hi @LavrovArtem \nThanks for the example. I guess this is ok but this forces me to use await keyword. Maybe I need to adopt use of async/await rather than resolving promises the old way. Thanks for your help with this.. Hi @miherlosev @AndreyBelym \nThe sample project that you provided doesn't work for me in that it exhibits the problem I described above. Some observations below\nbizarrely this works ok\n.reporter('spec')\n.reporter('list', fs.createWriteStream('report.txt'))\n.run()\n.then(failedCount => {\n       console.log(`Finished. Count failed tests:${failedCount}`);\n       process.exit(failedCount);\n});\nbut this\n.reporter('spec')\n.reporter('json', fs.createWriteStream('report.json'))\n.run()\n.then(failedCount => {\n       console.log(`Finished. Count failed tests:${failedCount}`);\n       process.exit(failedCount);\n});\nfails for me every time. The files get created but don't get to the then part namely it hangs.\n. ",
    "DavidDaCosta": "I am also interested in this integration.... ",
    "link89": "Is there a way that we can control the lifecycle of test controller, so that we can use testcafe more like a library than a framework? Just like web driver does.. I think we should provide the ability to overwrite the number of retry. Maybe we can start from overwrite via environment vars, which is easy and clean. And then move to runner and command line arguments.. testcafe-ie11-error.txt\n@AndreyBelym Here is my result run the fixture you provide.\ntestcafe version: 0.22.0\nie version: 11.0.22. I think it has something to do with web site under test. Our web site suffers same problem, but following code for todomvc works well.\njavascript\nfixture `TodoMVC`.page `http://todomvc.com/examples/react/#/`;\ntest(`Login`, t => t.typeText('.new-todo', 'temporary').wait(4000)). @AndreyBelym Another critical problem on IE11 is, the url generate by testcafe is incorrect! For example, the heartbeat url on IE11 is:\nhttp://10.32.60.135:54899/Oi7Th2mYy/http://todomvc.com/examples/react/undefined/browser/heartbeat/j2d8olI\nThe expected one should be\nhttp://10.32.60.135:54899/Oi7Th2mYy/browser/heartbeat/j2d8olI\nIt seems to me like the problem of location.origin is undefined on IE11, and testcafe or testcafe-hammerhead didn't handle it correctly. . I have create a PR for this problem @AndreyBelym . Here it is.\n\n. @nabond240 For me it's the problem of IE11 version. Old version of IE11's location.origin is undefined. Do you use same version of IE11 when you try it at home?. Hi @AndreyBelym , is there any workaround for this?. We suffered this problem either. Hope could be fixed soon.. Hi @miherlosev , this fix will be included in which stable version? . ```typescript\n    async createRunnableConfiguration () {\n        const reporterPlugins = this._getReporterPlugins();\n    // NOTE: If a user forgot to specify a browser, but has specified a path to tests, the specified path will be\n    // considered as the browser argument, and the tests path argument will have the predefined default value.\n    // It's very ambiguous for the user, who might be confused by compilation errors from an unexpected test.\n    // So, we need to retrieve the browser aliases and paths before tests compilation.\n    const browserInfo = await this._getBrowserInfo();\n\n    if (this._canUseParallelBootstrapping(browserInfo))\n        return { reporterPlugins, ...await this._bootstrapParallel(browserInfo) };\n\n    return { reporterPlugins, ...await this._bootstrapSequence(browserInfo) };\n}\n\n```\nI have found following comment explain why you make this choice. I don't think it a good reason to do it this way since it will waste browser resources when you running testcafe in CI/CD pipeline.. Here is the trouble maker and a simple fix: https://github.com/DevExpress/testcafe/pull/3221/files. Hi @miherlosev \nThe API I want to have should be able to dump all data will be persisted in browser, includes: Cookies, Session Storage, Local storage, indexedDB (I am not sure if we can even persist state of websocket connection.), so Role is not enough.\nDisable page reloads looks good but the API is not clear to me. \nAs a developer, I think a simple and clean API can be applied to more scenarios (potentially). Here is some examples.\nSuppose we have following API:\nresetState(): reset browser to init state\ndumpState(): String: dump all date persisted in browsers (include testcafe context)\nrestoreState(data: String): restore persisted data and testcafe context according to dumped data\nScenario 1: reach verify point directly if dumped data existed\ntypescript\n// Pseudocode, statefile can be replaced by S3 or db\nif (fileExists('statefile')) {\n  await t.restore('statefile');\n} else {\n  // start to prepare scenario before reach test point\n  // ... a lot of steps ...\n  // end of prepare\n  writeFile(await t.dumpState(), 'statefile');\n}\nassert(...)\nWe only need to run this case once, which will save a lot of time when every case is triggered 100+ times everyday.\nScenario 2: what can be done by Role can also implement using these API\ntypescript\n// Pseudocode\n// user1's context\nawait login(user1)\nawait sendMessageTo(user2, 'hello world')\n// switch to user2's context\nconst state1 = await t.dumpState()\nawait t.resetState()\nawait login(user2)\n// assertion\nawait shouldReceivedMessage('hello world').from(user1) \nawait sendMessageTo(user1, 'hello world')\n// switch back to user1's context\nconst state2 = await t.dumpState()\nawait t.restore(state1)\n// assertion\nawait shouldReceivedMessage('hello world').from(user2)\n. Now we can setting custom quarantine this way.\n```bash\nQUARANTINE_FAILED_THRESHOLD=10 QUARANTINE_PASSED_THRESHOLD=1 npx testcafe chrome:headless test.js -q\nRunning tests in:\n - HeadlessChrome 72.0.3626 / Mac OS X 10.12.6\ntest\n1\n2\n3\n4\n5\n6\n \u2713 test (unstable)\n1 passed (1s)\njavascript\n// test.js\nimport { Selector } from 'testcafe';\nlet i = 0;\nfixture test\ntest('test', async (t) => {\n    i++;\n    console.log(i);\n    await t.expect(i > 5).ok();\n})\n```\n. @AndreyBelym It would be appreciated if you can accept this PR so that we can abort our patch and using official release directly.. It is understandable. In my opinion environment variable , which is recommended by https://12factor.net/config , is a handy solution when we don't have resource to do it other way. It is cross platform and in most case won't break compatibility.. A practical way is to use env vars as \"experimental configuration options\", which will not guarantee compatibility. And once CLI flags, runner options or config files become available, we can just use env vars as low priority options. @AndreyBelym \n. ",
    "edimistra": "I tried integrating with Gauge but it looks like there's a problem with the Gauge library. Having the ability to integrate with BDD would be finding the lost ark of agile testing :). Hi @AlexanderMoskovkin is there an intention to implement the 'noReloadBetweenTests' option or another way to control page reloading between tests? I agree with @oneillci point of view towards the organization of tests.. Hi @AndreyBelym,\nI structured my tests in the following way:\nfixture Testing page reloads\ntest\n  loginFunction();\n  ('test1', async t => { t.navigateTo('b.html') });\ntest\n  .page b.html\n  (t => { ... })\nI ran tetscafe using the --disable-page-reloads flag and after test1 finishes successfully it is redirected to about:blank.\nSince I'm not defining an initial page in fixtures page I think that testcafe is ignoring --disable-page-reloads\nUsing v0.20.5\n. Thanks @churkin for pointing me to the Cucumber solution. I'll take a deeper look into it, so far my firsts impressions are that this Cucumber integration will fit our needs (writing tests before coding even starts). ",
    "dn1231": "I agree with everybody else.  It would be best if we can get this soon because the workaround looses features in testcafe.. ",
    "gauravkarvir": "any update  on this ? team is very keen in using BDD with testcafe. It will be biggest milestone for people migrating from web-driver to testcafe and not going for cypress. ",
    "AnuradhaChannappa": "Please update once we have stable cucumber bdd integration with testcafe. Currently, i am also facing issues with fixture and test using cucumber bdd.. Hi Kenf128 , I am also using the same bdd https://github.com/rquellh/testcafe-cucumber/blob/master/README.md but my problem is how can i use the requestHooks for logger and custom hooks in this framework. How to attach to tests. If anyone has similar issue and solution please share. . ",
    "ZescherW": "Hi @inikulin!\nWhen cucumber will be officially supported? I'm dying for it.. . ",
    "Qvatra": "+1. ",
    "KJHofstede": "+1, any news on this?. grebaldi That solution has no posibility to create reports showing every step, it only reports the name of the test that passed/failed. Or you would have to build something yourself of course.\nhttps://github.com/kiwigrid/gherkin-testcafe/issues/7. ",
    "kaustubhshete": "+1, any news on this?. ",
    "ampc": "I've already checked some integrations made by the community but they don't support all the features offered by TestCafe. I would be glad if there was more support for BDD :+1: . I've sent the details :+1: . I've resent the credentials to support@devexpress.com. . ",
    "grebaldi": "Just to point at a another community solution out there, that I find pretty useful (though I couldn't tell whether it's complete in the sense @ampc mentioned above):\nhttps://github.com/kiwigrid/gherkin-testcafe\nThe README of that package also refers to this issue, pointing out that it is going to be abandoned, once an official solution has been established.\nMaybe someone will find it to be a viable temporary solution :). ",
    "xMort": "Is there any workaround until this gets implemented correctly?. ",
    "FrankV01": "Relevant documentation: https://docs.npmjs.com/files/package.json#github-urls\nAlso, I tried master for LOLs. Indeed, the problem exists with master as well. . First, thank you. Second, I do know it's an obsolete feature. Its use in the tech stack I'm working on is beyond my control and despite requests to do so, removal isn't slated. I'm dealing with it best I can. Again, I appreciate any attention you can give this matter. . ",
    "mmakarios": "I got it working by right-clicking the Chrome icon in the Applications folder, clicking in \"Get Info\" and changing the admin privilege to \"Read & Write\" (it was \"Read only\").\n\nBut then I changed it back to \"Read only\" and it still works, so I don't know what solved the issue.\nBefore that I tried deleting Chrome and fresh installing again, didn't work.\nAlso, I had to run rm -rf /Applications/Google\\ Chrome.app without an underscore (Google_Chrome) to remove it.\nThanks @AndreyBelym!. ",
    "mbbaldwin": "I am also having this problem. But changing Chrome to  Read & Write did not solve the issue. @AndreyBelym \nerror in test cafe output:\nERROR Was unable to open the browser \"locally-installed:chrome\" due to error.\nUnable to run the browser. The file at /Applications/Google Chrome.app does not exist or is not executable.\nresult of 'ls -l /Applications/'\ntotal 0\ndrwxr-xr-x@  3 root         wheel  102 Jun 24  2016 App Store.app\ndrwxrwxrwx@  3 development  admin  102 May 18 02:38 Firefox.app\ndrwxrwxrwx@  3 development  admin  102 May  8 22:03 Google Chrome.app\ndrwxr-xr-x   3 root         wheel  102 Jun  1 16:09 Jenkins\ndrwxr-xr-x@  3 root         wheel  102 Jun 30  2016 Safari.app\ndrwxr-xr-x@  3 development  admin  102 May 15 04:03 Skype.app\ndrwxr-xr-x@  3 development  admin  102 Sep 23  2016 Sublime Text.app\ndrwxr-xr-x@  3 root         wheel  102 Oct 14  2016 TextEdit.app\ndrwxr-xr-x   3 root         wheel  102 May 24 15:29 Xcode.app. it opens a new window in chrome. This was returned:\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"path:/Applications/Google Chrome.app\" due to error.\nThe specified browser name is not valid!. diskutil info /\nDevice Identifier:        disk0s2\n   Device Node:              /dev/disk0s2\n   Whole:                    No\n   Part of Whole:            disk0\nVolume Name:              Macintosh HD\n   Mounted:                  Yes\n   Mount Point:              /\nPartition Type:           Apple_HFS\n   File System Personality:  Journaled HFS+\n   Type (Bundle):            hfs\n   Name (User Visible):      Mac OS Extended (Journaled)\n   Journal:                  Journal size 81920 KB at offset 0x1d18000\n   Owners:                   Enabled\nOS Can Be Installed:      Yes\n   Recovery Disk:            disk0s3\n   Media Type:               Generic\n   Protocol:                 SATA\n   SMART Status:             Verified\n   Volume UUID:              97A4ED1E-CAFF-3AEB-B796-387D5AC7578B\n   Disk / Partition UUID:    000020DF-7AF0-0000-CE2D-0000345B0000\nDisk Size:                898.0 GB (898000027648 Bytes) (exactly 1753906304 512-Byte-Units)\n   Device Block Size:        512 Bytes\nVolume Total Space:       898.0 GB (898000027648 Bytes) (exactly 1753906304 512-Byte-Units)\n   Volume Used Space:        38.6 GB (38561439744 Bytes) (exactly 75315312 512-Byte-Units) (4.3%)\n   Volume Available Space:   859.4 GB (859438587904 Bytes) (exactly 1678590992 512-Byte-Units) (95.7%)\n   Allocation Block Size:    4096 Bytes\nRead-Only Media:          No\n   Read-Only Volume:         No\nDevice Location:          Internal\n   Removable Media:          Fixed\nSolid State:              No\ntestcafe --version\n0.15.0\ntestcafe 'path:/Applications/Google Chrome' $TESTS\nERROR Was unable to open the browser \"path:/Applications/Google Chrome\" due to error.\nThe specified browser name is not valid!\nln '/Applications/Google Chrome.app' /Applications/Chrome.app\nln: /Applications/Google Chrome.app: Is a directory\ntestcafe chrome test/integrationTests/donationTests.js\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"locally-installed:chrome\" due to error.\nUnable to run the browser. The file at /Applications/Google Chrome.app does not exist or is not executable.\ntestcafe path:/Applications/Chrome test/integrationTests/donationTests.js\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"path:/Applications/Chrome\" due to error.\nThe specified browser name is not valid!\ntestcafe path:/Applications/Chrome.app test/integrationTests/donationTests.js\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"path:/Applications/Chrome.app\" due to error.\nThe specified browser name is not valid!\n. I still get the same outputs after changing the first command to \nln -s '/Applications/Google Chrome.app' /Applications/Chrome.app\nreturns:\nln: /Applications/Chrome.app/Google Chrome.app: File exists. ",
    "dylanharrington": "I'm seeing the same issue as @mbbaldwin.\nI've discovered that renaming Google Chrome.app to Chrome.app and then running testcafe 'path:/Applications/Chrome.app' $TESTS works where testcafe 'path:/Applications/Google Chrome.app' $TESTS did not.\nedit: The cause in my case was export CLICOLOR=1 in my .bashrc. After removing that it works with just testcafe chrome $TESTS \ud83d\ude04 . ",
    "Pr60": "@dylanharrington , @AndreyBelym  - I still get the error but unable to get it up and running: \n``+ testcafe chrome uitests/tests/peopletest.js -r xunit:res.xml -e .     \nUsing locally installed version of TestCafe.\nError: Unable to run the browser. The file at /Applications/Google Chrome.app does not exist or is not executable.\n    at Object.callee$0$0$ (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/lib/api/open.js:137:23)\n    at tryCatch (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n    at Generator.invoke [as _invoke] (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:334:22)\n    at Generator.prototype.(anonymous function) [as throw] (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:105:21)\n    at tryCatch (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n    at invoke (/Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:146:20)\n    at /Users/Shared/Jenkins/Home/workspace/RpWeb/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:156:13\nBuild step 'Execute shell' marked build as failure\nRecording test results\nFinished: FAILURE`\n```\nI tried:\ntestcafe '/Applications/Google chrome.app' uitests/tests/peopletest.js -r xunit:res.xml -e .   \n testcafe 'path:/Applications/Google chrome.app' uitests/tests/peopletest.js -r xunit:res.xml -e . \nbut none of them worked for me. \nPlease update me if there is any wayout.\nEnvironment:\nMacOs - Mojave 10.14\nTestCafe - 0.23.3. @AndreyBelym - Thanks. I tried changing /Applications/Google Chrome.app to /Applications/Chrome.app (from @dylanharrington ) as well but I got same error. Also, I tried with small case and uppercase Chrome as well but that throws same error. I'm using the latest Chrome Version 71.0.3578.98. Also, I tried the same stuffs with Safari as well but again I received the same error. It will be great if you have anything else to suggest. \nApart from these, I tried to execute tests on headless modes as well using \ntestcafe \"chrome:headless\" uitests/tests/peopletest.js -r xunit:res.xml -e but that too didn't work. Do you know that why this is happening though? I'm able to run it locally on the Jenkins system though.. @AndreyBelym - Thanks for your detailed explanation. I tried to open Chrome from my terminal (using jenkins user) as mentioned above and it failed to open. If I try to open Chrome using devuser then Chrome opens successfully. The jenkins user is also an admin of the system.\nThen, I followed the steps mentioned over here and started the build and it throw the same error, which I didn't expect. \nWhen I did ls -l /Applications/ - this is what I got: \ndrwxrwxrwx@  4 devuser  admin   96 11 Dec 23:43 Google Chrome.app\ndrwxr-xr-x   3 root           wheel   96 24 Sep 13:10 Jenkins\nUnfortunately, it looks like I'm missing some more settings which is not allowing Chrome/Safari to open. \n. @AndreyBelym - Update on my above comment. I was able to make it work by changing the ownership of Jenkins user to devuser. The steps provided in this link didn't work for me. I have to do a bit more modification. I did 2 more steps and not performed the last step mentioned in this comment. \nFirstly, I stopped the Jenkins as mentioned in this link.\nSecondly, I updated the JENKINS_HOME and USER_NAME as mentioned here.\nThirdly, I changed the ownership of /var/log/jenkins to the user I wanted to run Jenkins\nLastly, started Jenkins as mentioned.. ",
    "valstu": "I struggled with similar problem for almost two days. When I started the tests the chrome browser didn't start for some reason, not even in headless mode. So I reinstalled Chrome, change the name from Google Chrome.app to Chrome.app and much more. I also noticed that when I ran it with testcafe 'path:/Applications/Google Chrome.app' test.e2e.js everything worked which pretty means that it is some kind of path problem with Chrome. I also have to mention that when I reinstalled the Chrome I did a complete reinstall, so the newly installed Chrome didn't have any plugins or extension.\nSo after I figured out it was some kind of path problem I made a custom version of Testcafe which added a lot of logging related to browser paths. After a while I noticed that the chromeOpenParameters (/src/browser/provider/built-in/chrome/local-chrome.js) contains the path property which is used to start the browser (Chrome in this case), so in my case the path should be /Applications/Google Chrome.app. Instead of that the path was /Applications/TeliaCompanyOTTChromePlugin.app. So the path pointed to a Chrome plugin \ud83d\ude31. \nRemoving the plugin fixed everything. \ud83e\udd37\u200d\u2642\ufe0f\nWhy the path was wrong? I have no idea, maybe related to that Chrome plugin, but hopefully this will help someone else struggling with similar issue or the Testcafe team debugging this.\n. ",
    "gpsarkar": "@mjhea0 I faced a similar issue last night, but then found that the selector was returning multiple items and was processing result from some hidden element instead of the one i was expecting. I then refined the selector to pin point that particular element and then the test worked fine.. I got a similar one.\nUncaught TypeError: Cannot read property 'offsetWidth' of undefined\nSorry, couldn't share the test page here.. @AlexanderMoskovkin Ok. I will try to create a test page to reproduce it.. ",
    "deane187": "Hi @AlexanderMoskovkin \nThank you !. Hi @lavrovArtem\nThe tests pass or fail depending on what the proxy decides to load. When it does fail we have an issue with screenshots not showing correctly because the canvas hasn't loaded correctly.. ",
    "noderat": "It looks like this never made it into the documentation.. ",
    "baens": "Thank you @AlexanderMoskovkin! That is what I was looking for. Didn't realize that I needed to escape in the string itself.\nBTW, if there was a flag or something I could pass into testcafe to do this automatically, that would be awesome, but for now, this works!. ",
    "ls-guillaume-lambert": "Amazing feature! I was wondering, how would you run this in CI?. Thanks for the info!. Continuing on this, when using:\njs\nnock(/localhost:910[01]/).get('/available', {\n    reqheaders: {\n        'Access-Control-Allow-Origin': '*'\n    }\n}).reply(500);\nIt simple times out and never returns anything.. Yup this does work, but when using the .reply(function() { ... }) API I still get the 222 code:\njs\nnock(/localhost:910[01]/).get('/available').reply((uri, requestBody) => {\n    return [500, 'Error', {\n        'Access-Control-Allow-Origin': '*'\n    }];\n);\nThis surely has to do with nock:\nhttps://github.com/node-nock/nock/blob/master/lib/interceptor.js#L61. To put this into context, in our e2e test, we need to change the response when a variable is set. Also note that this a polled XMLHttpRequest:\n```js\nlet isAppInstalled = false;\nnock(/localhost:910[01]/).persist().get('/available').reply((uri, requestBody) => {\n    return [isAppInstalled ? 200, 500, isAppInstalled ? 'Ok' : 'Error', {\n        'Access-Control-Allow-Origin': '*'\n    }];\n);\ntest('simple', async t => {\n    await t.click('#someSelector');\n    // should return 500 with nock\n    isAppInstalled = true;\n    // should return 200 with nock\n    await t.expect(Selector('#installed').exists).ok();\n});\n```\nSo we suspect it has something to do with the way nock is handling the reply method when using a function.. Thanks for the response, I will look at debugging this. \nIf it fails, do you see other ways of achieving we want as mentioned in https://github.com/DevExpress/testcafe/issues/1680#issuecomment-321566156?. Found a way to do it by using .removeInterceptor() and re-defining it:\n```js\ntest('Mock XHR Request changes', async t => {\n    const xhrNotInstalledInterceptor = nock(/localhost:910[01]/).persist().get('/available');\n    const xhrNotInstalledScope = xhrNotInstalledInterceptor.reply(500, 'Error', {\n        'Access-Control-Allow-Origin': '*',\n    });\n// Do some expects here\n// ...\n\nnock.removeInterceptor(xhrNotInstalledInterceptor);\nconst xhrInstalledInterceptor = nock(/localhost:910[01]/).persist().get('/available');\nconst xhrInstalledScope = xhrInstalledInterceptor.reply(200, 'Success', {\n    'Access-Control-Allow-Origin': '*',\n});\n\n// Do more expects here\n// ...\n\n});\n```. ",
    "okvv": "const clipboardy = require('clipboardy');\n.\n.\n.\nvar connectionUrl = testCafe.browserConnectionGateway.connectUrl; //as in original code\nif (clipboardy) {\n    clipboardy.writeSync(connectionUrl);\n}\n\nI've only learned about TestCafe today (so apply with a grain of salt)\n\nquestion to community: what should we do with this URL (assume remoteCount>1)?\n. \n",
    "madmod": "@inikulin Sorry my example was a bit confusing. That comment was more of an aside about why immediate per-browser reporting would be useful. Even without per-browser reporting running the tests in each browser as soon as it is connected would save a significant number of testing minutes for runs with many browsers or runs in which a browser fails to load and times out. In BrowserStack I see wait times of several minutes before any tests start running. That can really add up when you are testing in 10 or so browsers.. ",
    "ytanruengsri": "@AlexanderMoskovkin @gpsarkar with the workaround I'm able to run tests.. ",
    "arthurgeron": "This seems to happen because it can't parse the URL. I'm having the same problem with a page that runs on PHP and uses a lot of ugly query strings:\n```\n Running tests in:\n - Chrome 70.0.3538 / Linux 0.0.0\nHoras\n \u2716 Declare working hours\n1) Error on page\n\"https://sorry.cant.tell.com/dispatch.php?atknodetype=timereg.newhours&atkaction=admin&atklevel=-1&atkprevlevel=0&\":\n  SyntaxError: Unexpected token ,\n\n  Browser: Chrome 70.0.3538 / Linux 0.0.0\n\nI've changed the URL for privacy reasons.. @djbreen7 Hi, I've tried disabling browser extensions and even running in incognito mode  but nothing changed. I looks like it unable to parse some URL strings for some reason.. Not sure if it's the same issue or if I should open a new one.. When using things like `textContext` or getting attributes inside the testcafe's async functions you need to call await first, anyway I think you should try using the code bellow and see if that solves your issue:js\n  const list = Selector('[data-testid=\"search-result-list\"]');\n  const items = list.find('li');\n  const titlesAndDescription = [];\n  for (let i = 0; i < await items.count; i += 1) {\n    const item = items.nth(i).find('a');\n    titlesAndDescription.push({\n      title: await item.getAttribute('title'),\n      description: await item.textContent\n    });\n  }\n  return list.addCustomDOMProperties({ titlesAndDescription });\n}\n``` . Now I see what you were trying to do! Even though your example works,  I don't know if it should be an async function or not, either way I believe there should indeed be a simpler way to extend selectors.. ",
    "AlexSkorkin": "@arthurgeron\n\u00a0\nThank you for the update. Please submit a new issue and provide all relevant information so we can examine your scenario:\n\u00a0\nhttps://github.com/DevExpress/testcafe/issues/new?labels=&template=bug-report.md\n. Hi,\n\u00a0\nThank you for your clarification. All commercial version inquiries must be submitted to the Support Center. This place is for a different TestCafe version.. @L1am0 \n\u00a0\nPlease submit your \"TestCafe Pro\" inquiries to our Support Center at www.devexpress.com/ask. This github repo is reserved for the free TestCafe version only.\n\u00a0\nI recommend that you refer to the following thread where a similar inquiry was discussed: \n\u00a0\nTestCafe takes a blank screenshot when running in Chrome and FireFox\n\u00a0\nYou need to disable the 'Use hardware acceleration when available' option, restart your browser, and see if it makes any difference. If this does not help, you know where to ask for further assistance :-). @qualityshepherd \n\u00a0\nLet's try doing this on Monday. What would be the best time for you to perform our remote session? We prefer using the TeamViewer tool. Please install it and let us know your access codes (including your appropriate time).. Thank you for reaching out to us and submitting this issue.\n\u00a0\nThe 'edge' browser alias executes the microsoft-edge command to start the browser. While in other browsers like Chrome and Firefox, their '-incognito' and '-private-window' arguments work in a straightforward way, the Edge browser requires additional tweaks to be executed in private mode.\n\u00a0\nYou might want to check out the following threads where a similar issue with Edge was discussed:\n\u00a0\nHow to start Microsoft Edge in private mode from command line\nHow to launch Edge -inprivate by\u00a0default\nWe decided to improve the Edge browser's launching, so it will properly start in private mode in the context of this issue:\n\u00a0\nDevExpress/testcafe-browser-tools#157\n\u00a0\nIn the meantime,\u00a0as a workaround, you might want to create a custom browser provider plug-in, which will execute Edge in private mode. For instance, I've created this sample to start with:\ntestcafe-browser-provider-edge-private\nThe Edge browser starts in private mode when you use this plug-in. Please note that you can use this plug-in at your own risk and I don't guarantee that it will work under all circumstances.. @ludwigbacklund \u00a0\nWe are looking into this issue and will let yow know as soon as we get any results. Please stay tuned!. @ludwigbacklund \n\u00a0\nI've executed your test case on macOS Mojave 10.14 using TestCafe 0.22.0 and got the following result on the first test run in both Chrome 69.0.3494 and FireFox 61.0.0 (my display is 13.3-inch):\n\u00a0\n\n\u00a0\nI've then decreased the target windows size to 414 x 436 and the browser window was resized properly (both Chrome and FireFox):\n\u00a0\n\n\u00a0\nWould you please clarify what behavior you observe? Do you see the browser window in its original size? If so, is it maximized? What browser version are you using? Does TestCafe show any additional messages like in my first screenshot?. Until now, our attempts to replicate this issue were unsuccessful. I will close the issue because no activity has been encountered for a long time. Feel free to reopen the issue if the issue persists and you can provide the exact steps to reproduce it.. I created a test with a similar scenario, but my attempts to replicate this behavior were unsuccessful. Would you please clarify to what you are referring by keyword 'this'? What do you mean by 'fails on first statement'? Is there any error message when the first statement is executed?. Thank you for the update. Would you please clarify to what you are referring by keyword 'this'? You can figure this out by debugging your test code. Is the 'webPage' page model is referenced properly? Does the selector return a proper element?. @ericenders \nAs you probably know, we recently released the official version, 0.23.0 (Release notes). Please check it out!. I would add the following statement to the Reporting a Problem section:\nIssues with insufficient details may take significant time to be processed.\nFull text may look as follows:\nWhen you create a new issue, template text is automatically added to its body. To help us understand the issue you're describing, be sure to fill in all sections in this template. Issues with insufficient details may take significant time to be processed.. Even \"harder\":\nIssues with insufficient details will be processed after all the others, which may take significant time without any guarantees. Make sure to fill all predefined detail sections in issue templates.\nPlease consider adding this statement to the Reporting a Problem section. The text was verified with correctors.. The information you provided is insufficient to determine the cause of the issue. We need to see your application in action. Screenshots won't help us much here. I suggest you minimize your application and remove all external dependencies from your environment. This way, we can run the application on our side, see what's going on, and find a solution, if any.. Please send it at support@devexpress.com.. Thank you. We have received your Email and will look into it soon.. Thank you for your inquiry. This issue looks like a question that would be best asked on StackOverflow. I see that you already submitted your inquiry there: TestCafe - User Profile and Log In\n\u00a0\nStackOverflow is an amazing platform for users to ask and answer questions: the community will see and answer your question there.\nWe try to keep GitHub issues tracker for bugs and feature requests only (see also: Contributing.. Daniel, thank you for your interest in our testing tools. \nThis issue looks like a question that would be best asked on StackOverflow. StackOverflow is an amazing platform for users to ask and answer questions: the community will see and answer your question there.\nWe try to keep the GitHub issues tracker for bugs and feature requests only (see also: Contributing).\nAs for our documentation samples, I'm not sure which ones you mean. All our samples are provided in JavaScript; e.g., Test Controller.. Go ahead and merge it!. Hello,\u00a0\nThis issue is unknown to us. Would you please clarify how you set the button visibility? What CSS properties are you using? It would be great if you also provide us with your scriptsname.js test file so we can examine the issue. If this is not possible, please create a simple sample similar to your scenario so we can check it out. Thank you in advance. . Thank you for your clarification. However, the information you provided is insufficient for me to determine the cause of the issue and find a precise solution. To help us research it, please provide us with a complete test sample and public website URL where you encountered these problems.. Please create a simple sample based on your markup, so we can examine the issue.. We still can't access your website:\n. It is still not accessible even from Opera with enabled VPN:\n\n. Seems like the backspace is the culprit!. Hi @adrianorod\n\u00a0\nSince this behavior happens randomly, it's difficult to determine the cause of the problem without an example.\nFeel free to reopen this issue if you can provide such an example.. Thank you for reaching out to us and submitting this issue. \n\u00a0\nHowever, I get the AccessDenied code when accessing your URL:\n\nAre there any special steps I need to perform in order to access it? Does your application have restrictions by the country?\n\u00a0\nIn addition, please provide your page model and helpers:\n\u00a0\nimport LoginPage from '../../pages/LoginPage';\nimport { getLocation } from '../helpers/client';. Thank you for sharing your idea with us. We were thinking about a similar functionality and have already planned it in the context of this issue:\nhttps://github.com/DevExpress/testcafe/issues/3244 Allow to debug Selector expressions in the debug mode\n\u00a0\nI'll link the issue you reported to that thread and close it as a duplicate, so we will take your scenario and requirements into account when implementing this feature.. Thank you for submitting this issue. However, until now my attempts to replicate it were unsuccessful.\n\u00a0\nI've tried both 0.23.3 and 1.0.0-alpha.1 versions on Windows 10 version 1803 using yarn in Chrome 71.0.3578.98 (Official Build) (64-bit) and tests are executed properly.\n\u00a0\nWe will continue looking into it. If you have any additional details that may help us to replicate this issue, please share them with us.. Thank you for providing additional information. We tried to reproduce this issue on several other test machines and were unable to replicate it. \n\u00a0\nWe noticed that you are using some non-standard command prompt window to execute testcafe. Would you please clarify what tools (bash?) you are using to run test cases? In addition, please try using the regular Windows PowerShell or DOS Command Prompt to run tests and see how it works. You might also want to run tests under an admin user.. Thank you for the update.\u00a0\nTo help us research this issue, would you please provide us with your test suite and a configuration script (testcafe-configr)? If you don't want to share the tests publicly on github, you can send them at suppport@devexpress.com and no one except our team will see your tests.. Our attempts to replicate this issue were unsuccessful. The error message you provided does not look like a Windows 10 related issue and it may be caused by any other reasons including your application. That is why I'm asking you to provide your tests suite and your web site URL or a sample application. Once we examine them, it will be easier to find the real cause of the issue and fix it. I appreciate your cooperation.. The utm_source shouldn't be 'google', BTW. Typo -- \"Pipeplines\"\n\n. Yes, probably. This is the default text when adding a new issue template. Revering back to our own version.. If you mean the \"What is your Test Scenario?\" section, it is not mandatory, but it was requested by  @AndreyBelym.. I think it might be useful for proposals too. Let's see how people will fill it when creating new Feature Requests. We can always remove it if it is redundant. For now, I would leave it (the Test Scenario section) in proposals too.. I'm now sure how they contradict each other. For me, they sound similar. Would you please clarify what you mean?. :-)\nProbably, we should describe why we don't have a recipe for TFS (just to add search keywords for those who look for such a recipe).. ```suggestion\nWhen you run tests with live mode enabled, TestCafe opens the browsers, runs tests there, shows the reports and waits for your further actions.\n````. (proposal)\nI would move TestCafe Studio as a first item in the answer before the TestCafe open source version (exchange their positions). \nA regular visitor of the TestCafe open source site will likely know what TestCafe open source version is. However, he/she unlikely knows what TestCafe Studio is (as it is a web site that is not related to Studio). \nAlso, not everyone likes to read big texts, so it is better to mention TestCafe Studio first rather than a product for which the entire site is dedicated.. suggestion\n<p>Bitbucket Pipelines CI is now configured to trigger the build when you push commits to your repository or create a pull request.</p>. ",
    "astanciu": "+1 for this. As it stands, unless I'm missing something, I cannot find a way to run multiple tests within 1 fixture w/o each test needing to do its own login. Alternatively, it would be great if the tests within a fixture would share the same session. any updates here? Is this something that will happen, and if so, is there a rough timeline? . ",
    "mulyoved": "during test run this is clear\nquestion/request is in debug pause mode\n\nwhile in debug mode, cannot explore the app DOM elements\n . got you, this is working fine. Yes, this is fine, closing this now. Hi @AndreyBelym \nI am working on Windows and iOS simulator work on a OSX VM \nAutomatically copy remote worker URL to the system clipboard. does not help my use case as still hard to paste and sometimes paste really does not work across this stack of software (Host->VM->iOS Simulator)\nJust a preconfigured URL will do the work much better. @AlexanderMoskovkin \nyes that will work nicely. ",
    "yusinto": "Thanks, let me know if I can do anything to help. I was trying to debug it myself but not sure where to start. . ",
    "sammiepls": "Is there a way to set the prop value on the fixture itself? For example, I would like to use a value from the client side multiple times in some tests. Possible to keep it in a fixture hook to share this variable with the tests?. ",
    "zation": "@inikulin yes, I tried @AlexanderMoskovkin solution, it works. Below is our previous travis config:\n```yml\nsudo: false\ndist: trusty\nlanguage: node_js\nnode_js:\n  - \"6\"\ncache yarn and node_modules directory\ncache:\n  yarn: true\n  directories:\n    - node_modules\nbranches:\n  only:\n    - master\nnotifications:\n  email: false\nbefore_script:\n  - export CHROME_BIN=chromium-browser\n  - export DISPLAY=:99.0\n  - sh -e /etc/init.d/xvfb start\nscript:\n  - npm test\n``. sorry for my bad English... The problem is solved after I setstty cols 78`. ",
    "Scrum": "@AlexanderMoskovkin Hi, condition/random/multiEvent I had a similar implementation, but it seemed to me difficult to read. In any case, thanks for the more elegant options.\nCan be have the ability to connect plug-ins? As done for example in babel.. @AlexanderMoskovkin Hi, I think the problem is resizeWindow. I changed the value to 600 but the window did not change\n\n. @AlexanderMoskovkin Hi, I think the problem is resizeWindow. I changed the value to 600 but the window did not change\n\n. @AndreyBelym Hi, thanks for the feedback. And also I have problems with:\nMacOS 10.12.5\nFirefox DE 54.0b14 \nChrome 61.0.3122\nSafari 10.1.1\n\n. @AndreyBelym Hi, thanks for the feedback. And also I have problems with:\nMacOS 10.12.5\nFirefox DE 54.0b14 \nChrome 61.0.3122\nSafari 10.1.1\n\n. ",
    "abenhamdine": "I have the same need to call other tests, and so far, I failed to make your exemple run : \n```ts\n// login.js\nimport { t } from 'testcafe';\nexport default async function () {\n    await t\n        .typeText('#login', 'login')\n        .typeText('#password', 'password')\n        .pressKey('enter');\n}\n// test.js\nimport login from './login.js';\nfixture Fixture\n  .page http://example.com;\ntest('Test', async t => {\n  await login();\n});\n```\nI have the following error : \n1) ReferenceError: testcafe_1 is not defined\non line \nts\nexport default async function () {\n    await t\nI eventuallly succeeded by another way , by passing t to the imported function :  \n```ts\n// helpers.js\nexport async function createNew (t) {\n    await t.click('.new-btn');\n}\n// test.js\nimport { createNew } from './helpers';\ntest('Test', async t => {\n    await createNew(t);\n    // ...\n});\n```. ",
    "DavidJRobertson": "I have run into this today while trying to use testcafe to test an application which heavily uses PDF export functionality. I'm not expecting to be able to do assertions on the content of a PDF or anything like that, but it would be essential for my use case to be able to test that a PDF is generated and displayed in the browser.\n. ",
    "callmeaponte": "+1 for this.\nI'm behind a corporate proxy which prevents certain third-party scripts from loading properly (such as Google Analytics, Google reCAPTCHA, etc) - since the initial response contains a login/redirect page.\nThe only way around this is to visit each script URL we need directly, log in and/or wait for it to redirect, and then go back to the original site we're developing for. After that the script URLs all load properly for the duration of the browser session.\nIf TestCafe could allow me to do something like the following it would be incredibly useful:\nawait t\n    .navigateTo(\"othersite.com/path/to/file.js\")\n    .navigateTo(\"othersite.com/path/to/file.js\")\n    .navigateTo(\"mysite.com\")\nTestCafe is an amazing tool btw. Keep up the great work!. Any idea why setting cookies would work fine in Google Chrome, Mozilla Firefox and Internet Explorer - but not in Microsoft Edge? I'm using the same scripts listed above.\nI'm not sure if this is worth opening a new ticket over, or if maybe it's just me.. No worries, I've been tinkering with this all weekend and I think it was just me. I was able to get it working by moving setCookies() outside the beforeEach hook and inside the test script - where it would fire well after the page loaded  -and that did the trick.\nAll of the requests at our office are routed through a proxy so I suspect that was the issue...? It might have been trying to set the cookie before the request was redirected to the final destination/domain. I was just stumped as to why it only affected Microsoft Edge.. ",
    "sibliss": "Thanks installing it globally solved the problem!. ",
    "avidus3r": "It may be important to note that this project was not created with Angular 2 cli.\nAlso the project implements Angular Universal.. Apologies, http://www.caranddriver.com is not completely on the Angular 2 stack. You can use http://stage-www.caranddriver.com/bmw/3-series/specs/2017/3-series-Sedan/387943. Awesome, thank you.. ",
    "irobayna": "@AlexanderMoskovkin I upgraded to the latest version of testcafe, even removed 'node_modules' to be sure I pull all new packages and still appears not to work for me.\ntestcafe -v\nUsing locally installed version of TestCafe.\n0.16.0-alpha3\n. @AlexanderMoskovkin @LavrovArtem Thanks! Don't hesitate to reach back if you need further details, etc. @LavrovArtem I cannot share the current app but I will create a bare bones application that shows the same behavior.\nI am using rails 5, with latest TurboLink + webpack.  \nWill ping you once the app is ready.. @LavrovArtem Almost done with the sample application.\nAlso, wanted to let you know that the first page using turbolinks does work, the issue comes in once you navigate to another page, basically the javascript for the second page does not load correctly (I can see components do not get initialize correctly: select2, datatables, etc)  just FYI\nOn my sample app, I keep getting the following testcafe error as I navigate to a different page:\nSecurityError (DOM Exception 18): The operation is insecure.\nAny ideas as to why?\nhere is my test:\n``javascript\nfixture[testcafe] turbolinks.pagehttp://localhost:3000/`;\ntest('test issue', async t => {\n    await t\n        .takeScreenshot()\n        .navigateTo('http://localhost:3000/dashboards/test')\n        .takeScreenshot();\n  });\n. Hi @LavrovArtem started to test and I see this new error now 2) Failed to find a DNS-record for the resource at \"http://localhost:3000/user/sign_in\".```. @LavrovArtem @AlexanderMoskovkin  -- great news:\nIgnore my earlier comment today  I forgot to run the application server (yes, I am idiot) !!!\nAnd guess what, with the latest release testcafe (0.16.0-alpha4) now works as expected with turbolinks on a rails application (plus webpack)\nThank you very much!\n. ",
    "afcbpeter": "Hi @AlexanderMoskovkin we are using the in built date picker in chrome. The native HTML5.. Hi this seems to work for what we need.\nconst page = new Page();\nconst setValueToTimeInput = ClientFunction(val => itemSelector().value = val, {\n    dependencies: {\n        itemSelector: page.startDate\n}\n\n});\n. Well that is the full error from testcafe, not entirely comfy giving all the code out, on a positive note that actually does work. I'm just scratching my head a little. I've altered the package.json so it runs the test using npm test however just for the purposes of this. I've also ran this.\ntestcafe \"chrome:./Users/peterki/Library/Application Support/Google/Chrome:headless\" audit-search-page.test.js\nERROR No test file specified.\n. Im still getting the same error with the absolute test path. So I will go away and investigate this a bit further.. Hi,\nI tried the debug it's actually pretty cool but didn't really give me anything of any use to try and get to the bottom of this. \nI've done a JS Fiddle of the kind of stuff we are looking at. If you look at the hover over. The text on the over I can't seem to see when using the span class it always finds the Paused instead. I hope this helps let me know if you need anything else. \nhttps://jsfiddle.net/afcbpeter/0upte2ua/1/\n. Hi Alexander,\nThat worked perfectly.\nThank you.. ",
    "hex0cter": "\ud83d\udc4d . +1. This is the way I am currently using:\n``javascript\nconst testDesktop = (name, testToRun) => {\n  name =${name} - desktop only`\n  if (process.env['MOBILE'] !== 'yes') {\n    test(name, testToRun)\n  } else {\n    test.skip(name, testToRun)\n  }\n}\ntestDesktop.skip = (name, testToRun) => {\n  test.skip(name, testToRun)\n}\nexport default testDesktop\nThen call it like below:javascript\ntestDesktop('Field validation', async t => {\n  await t\n    .navigateTo(${baseURL}&fixture=default)\n    .typeText(form.dateOfBirth.field, '123123')\n})\n```\nThere is a similar method for mobile. In our case I set an environment variable to distinguish the devices.. I had the same problem. We use expressJs for the test server. It has hotReload enabled and firefox is failing with exactly the same reason. The way I solved it was to disable the hotReload, then firefox works like a charm.\n```Javascript\nconst app = express()\nconst server = app.listen(port)\nif (!disableHotReload) {\n  webpackHotClient(compiler, {\n    server\n  })\n}\n```. @miherlosev , here you go: https://github.com/hex0cter/testcafe-issue-2438! Let me know if you need any more information.. @miherlosev I believe I saw this issue on several recent Firefox versions, both at home and at work. The version I am using at work is 60.0.1. One thing I did notice from your video is the different OS. I am using MacOS both home and at work. @iegor-zabielin also mentioned he was using MacOS. Could this happen to Mac only?\n(I seem to remember I saw it in docker as well, which is a Linux environment). @miherlosev Great to know you are able to reproduce the issue! Thanks for your work!. ",
    "andrewleith": "Can't believe I missed that in the docs, sorry!\nThanks for your help!. ",
    "iexplore": "The problem is probably caused by the fact that Drupal makes it a HttpOnly cookie and that can't be read from javascript (client site).\nIf this is true is there another way to login (e.g just remember the cookie given)?. @LavrovArtem  It is not easy to provide a \"simple\" testing enviroment.  Is it possible with the information / code provided to give  a few pointers / suggestions? I will do the testing / analysing and report back about the solution. . Hi @AlexanderMoskovkin,\nI am very sorry, after further investigation it shows I was wrong with my conclusion.\nThe problems lies in the fact that in Chrome the window.location is different because of the proxy when testcafe is running.  I found that the contents of window.location in Chrome gives the complete URL incl. the proxy. From this the routing in app whent wrong which gave the impression of not being authenticated. \nOther browsers work fine (IE, Edge and Firefox). To be sure I removed all extensions but the problems remains.\n. Except for Chrome the other browsers work fine.\nI have installed TestCafe  0.16.0-alpha3 and tried it in incognito mode but still the same problem.\nI saw that in the console the window.location.href is always the real  href (in any browser).\nBut in my app (in Chrome) I do a console.log(\"EwApp:_urlChanged Location is \" + window.location.href); and there I can see the 'real' url with the proxy in it: \n\nEwApp:_urlChanged Location is http://192.168.0.196:52804/Sy9GzejW-/http://cme.dirk.e-wise.com/app/lesson/1766/page/1\n\nThe strange thing is if I type in console __get$(window,\"location\").href it returns the right href\n\n\"http://cme.dirk.e-wise.com/app/lesson/1766/page/1\". Maybe it matters; Code is using ES2015 and is transpiled JIT (in the browser) via  Babel in the browser. @AlexanderMoskovkin Now that I knew it is not related to authentication if have done a little experiment to try to quickly reproduce the problem and it shows easy to reproduce. The problem arises with the most basic HTML example of Polymer.  My suggestion is that you do the installation so you can really debug it. It will only take a couple a minutes.\n\nInstall Polymer-cli with\nnpm install -g bower  and npm install -g polymer-cli\nCreate an empty directory and type polymer init\nChoose for \"A simple polymer-1-application' (option 3) and name the app 'testcafe'\nYou can run the application by typing polymer serve -p8081 (port is optional and can be anything)\nNow, to be able to see to wrong URL the easiest way is to place <script>console.log(\"Index: href is \" + window.location.href); </script> in de index.html (here you will see everything oke) and place the following code in src/testcafe-app/testcafe-app.html after the properties:\n    ...... \n      properties: {\n        prop1: {\n          type: String,\n          value: 'testcafe-app',\n        },\n      },\nready: function(){\n           console.log(\"Ready: href is \" + window.location.href);\n       }\n    });\n  \n\nThe only addition is the ready function which shows the href.\nIf you call this page with something like this you can inspect the output on the console\n...\ntest('test', async t => {\n  await t\n    .navigateTo('http://localhost:8081/');\n  await t\n    .debug()\n..\nWhen running the code, the first href from index is correct, but the second shows the real href (with proxy). \nLet me know if you have any problems of want to handle it differently.\nThanks\n. Oke, closing this one.. Hi @AlexanderMoskovkin,\nI can certainly understand that you want a clean test environment the have a clear picture of what get's tested, but if you are working with an single page application (SPA) you definitely don't want to reset the application between tests.  You want to be able to jump from one page (or situation) to another and stay in the application.  I use the fixture hook to logon but I am afraid this does not solve the problem.\nAs alternative doing everything in one big test would mean building very large test functions that test a lot of situations. Moreover you cannot see the test steps and if something is wrong the whole testing is stopped.\nI am new with e2e browser testing and I don't know if Selenium works the same way (because I much prefer the power and simplicity of TestCafe), but I don't see how to setup a good working test script this way.. Yes, exactly.\nI am not sure what is happening between tests (next to page reloads), but in this situation nothing should change. \nFor instance an option on fixture level (something like noReloadBetweenTests).\nOn Test level it is probably not necessary to create an override for this behavior because you can start with test.page('http...') to do a reload.\n. @AlexanderMoskovkin The restore of cookies/storages solves a lot.\nBut can there be option to write an involved test with multiple steps and see messages of those steps like you see between tests? It's like another sublevel within tests.\n. ",
    "Grawl": "Yes. Yes. ",
    "HenningThiemann": "@AlexanderMoskovkin did you implement this feature already?\n. @AlexanderMoskovkin did you implement this feature already?\n. @AlexanderMoskovkin thanks for your answer. Would be a great feature IMO. @AlexanderMoskovkin thanks for your answer. Would be a great feature IMO. Hi @AlexanderMoskovkin, \nmy Code is the following:\n```js\nconst createTestCafe = require(\"testcafe\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst stream = fs.createWriteStream(\"output.json\");\nconst filePathSettings = path.join(__dirname, \"/settings/\", \"settings.js\");\nconst settings = require(filePathSettings);\nconst filePathAppJS = path.join(__dirname, \"app.js\");\nconst appJS = require(filePathAppJS);\nconst testCafe = require('testcafe');\nlet testcafe = null;\nlet connection = null;\ncreateTestCafe(\"localhost\", 1337, 1338)\n  .then(tc => {\n    testcafe = tc;\n    console.log(\"New TestCafe created\");\nreturn testcafe.createBrowserConnection();\n\n})\n  .then(bc => {\n    connection = bc;\nconsole.log(connection.url);\n\nconst runner = testcafe.createRunner();\n\nreturn runner\n  .src(appJS)\n  .screenshots(settings.takenScreenshotFolder + \"/\", true)\n  .browsers(connection)\n  .reporter(\"json\", stream)\n  .run();\n\n})\n  .then(failedCount => {\n    stream.end();\n    console.log(failedCount);\n    testcafe.close();\n  })\n  .catch(error => {\n    console.log(error);\n  });\n```. Great, thanks for your answer. It is working as expected now!. ",
    "rquellh": "@AlexanderMoskovkin I'm also interested in this feature. Thanks for looking into it.. @AlexanderMoskovkin I'm also interested in this feature. Thanks for looking into it.. Sorry for the delayed response. I have two concerns:\n\n\nI understand that this is a warning, but it's really odd to an end user to say Was unable to take a screenshot due to an error. , but then have the screenshot taken anyway. \n\n\nAlso, the new warning is rejecting the promise, so before I was able to use the .then method and use the path argument. Now due to the warning the promise is being rejected.\n\n\nsample use\njs\nt.takescreenshot().then(function(path){//do something with path}). ",
    "zhaoace": "@AlexanderMoskovkin  We're looking forward to this feature very much. Thanks for planing it.. @AlexanderMoskovkin  We're looking forward to this feature very much. Thanks for planing it.. ",
    "marcin-chwedczuk-meow": "I would really appreciate if you add this feature. It really helps creating meaningful test failure messages. In my previous workplace we had something like this setup for selenium, now I am missing it in testcafe.\nAlso consider implementing this:\n\nScreenshot should contain cursor position (but without cursor itself, small transparent yellow circle works the best IMHO)\nPart of page that was visible should also be marked in some way (red border, or highlighted in some way)\n\nBoth of these helped my to solve some problem with tests when I was working with Selenium (like tooltips that prevent mouse clicks to reach components). . I would really appreciate if you add this feature. It really helps creating meaningful test failure messages. In my previous workplace we had something like this setup for selenium, now I am missing it in testcafe.\nAlso consider implementing this:\n\nScreenshot should contain cursor position (but without cursor itself, small transparent yellow circle works the best IMHO)\nPart of page that was visible should also be marked in some way (red border, or highlighted in some way)\n\nBoth of these helped my to solve some problem with tests when I was working with Selenium (like tooltips that prevent mouse clicks to reach components). . One use-case that comes to my mind is that captured area of the screen does not contain all useful information. Like e.g. let's say we have a page with all invoice data and for some reasons a particular test fails at the bottom of the page. I would appreciate if I see not only part of the page where test failed but also all other invoice data that may be on the screen (my test is concentrating on a business side of the things - so I am not interested that e.g. button is disabled but why it is disabled). So indeed for acceptance tests this may be useful. . ",
    "jantonypdx": "Another use case is Visual Validation testing:\nYou write a Testcafe-driven workflow that visits many pages. On each page, it capture a screenshot of the full page and then sends it to a visual validation tool. This tool looks at the image & compares it to a previous \"baseline\" image. It then returns a \"difference\" score (e.g. 0.00 == images identical; 0.01+ - 100.0 == % change). You then write assertions that fail the test above a threshold value.\nExamples of visual validation tools include Resemble.js, Applitools, or Galen Framework (no affiliation with these). This makes it easier for people to quickly know & see which pages have changed on their websites (especially when supporting many different sites & locales).\nThere are other automation frameworks that let you capture full-screen screenshots, but I'd rather use TestCafe than have to support two different frameworks only for including this type of testing. \nThanks for considering this feature!. Another use case is Visual Validation testing:\nYou write a Testcafe-driven workflow that visits many pages. On each page, it capture a screenshot of the full page and then sends it to a visual validation tool. This tool looks at the image & compares it to a previous \"baseline\" image. It then returns a \"difference\" score (e.g. 0.00 == images identical; 0.01+ - 100.0 == % change). You then write assertions that fail the test above a threshold value.\nExamples of visual validation tools include Resemble.js, Applitools, or Galen Framework (no affiliation with these). This makes it easier for people to quickly know & see which pages have changed on their websites (especially when supporting many different sites & locales).\nThere are other automation frameworks that let you capture full-screen screenshots, but I'd rather use TestCafe than have to support two different frameworks only for including this type of testing. \nThanks for considering this feature!. Here you go:\nps-ef.log\nps-aux.log. Here you go:\nps-ef.log\nps-aux.log. ",
    "Mikuu": "currently, a working walk-around is t.resizewindow(), this is only working in headless.. currently, a working walk-around is t.resizewindow(), this is only working in headless.. upgrade to v0.23.3, and the issue is fixed.. ",
    "alexschwantes": "This is a really important feature for us as often the item to be verified is further down on the page which doesn't show on the screenshot. For example if we have a list of a lot of items on a page and try to validate if a particular one exists, if the test fails we just get the top part of the screen and so can't visually verify that it didn't exist further down the page. While the whole page isn't in the visible viewport, I wouldn't class content further down the page as being 'invisible' as this suggests that it is completely 'hidden' from view.\nAlso coming from selenium it feels like an expected feature to have. . This is a really important feature for us as often the item to be verified is further down on the page which doesn't show on the screenshot. For example if we have a list of a lot of items on a page and try to validate if a particular one exists, if the test fails we just get the top part of the screen and so can't visually verify that it didn't exist further down the page. While the whole page isn't in the visible viewport, I wouldn't class content further down the page as being 'invisible' as this suggests that it is completely 'hidden' from view.\nAlso coming from selenium it feels like an expected feature to have. . Hi @AndreyBelym thanks for this. \nYes I didn't quite get that the table in the documentation was only what was supported vs just an example of what combinations could be used. \nUnfortunately we only want to copy and paste a portion of the text. The copy and paste commands in the browser also copies the html that is selected eg. in a WYSIWYG editor it would copy font styling etc. I also think this issue #2075 would prevent us from using the typeText as it doesn't trigger the paste event.\n. Hi @AndreyBelym thanks for this. \nYes I didn't quite get that the table in the documentation was only what was supported vs just an example of what combinations could be used. \nUnfortunately we only want to copy and paste a portion of the text. The copy and paste commands in the browser also copies the html that is selected eg. in a WYSIWYG editor it would copy font styling etc. I also think this issue #2075 would prevent us from using the typeText as it doesn't trigger the paste event.\n. ",
    "fraalvper": "I add --window-size='1360,768' in my package.json and it worked for me.\nfull line\n\"test-chrome-report\": \"./node_modules/.bin/cucumber-js  --format json:./reports/report.json --world-parameters \\\"{\\\\\\\"browser\\\\\\\": \\\\\\\"chrome --window-size='1360,768'\\\\\\\"}\\\"\". I add --window-size='1360,768' in my package.json and it worked for me.\nfull line\n\"test-chrome-report\": \"./node_modules/.bin/cucumber-js  --format json:./reports/report.json --world-parameters \\\"{\\\\\\\"browser\\\\\\\": \\\\\\\"chrome --window-size='1360,768'\\\\\\\"}\\\"\". ",
    "jesperalmstrom": "Thanks for rapid answer. \nI did try a similar approach but I declared testCases as a var: \n```js\nvar testCases = [\n    { name: 'button1', selector: '#btn1' },\n    { name: 'button2', selector: '#btn2' }\n];\nfor (var c of testCases) {\n    test('Test ' + c.name, async t => {\n         await t.click(c.selector);\n    });\n}\n``\nthe value ofc.selectoris always the last of the array. I guess that is because I don't useconst?. Thanks for super fast answer. I will try. \nIs there a way to get this directly from theel1Selector` ?. Thanks I will try the next release version.. ",
    "pkundu06": "is it possible to provide hooks similar to testNG like @test(dataprovider=\"abc\") \n. ",
    "fengshuo": "Had a similar issue, but it seems that I can't reproduce it, it happens 'randomly', not sure if it's because my OS or browser version. ",
    "gregorycv": "@AlexanderMoskovkin Hi\nI was wondering if it is possible to reopen this issue as it still seems to persist.\nAre you requesting a feature or reporting a bug?\nBug / User error\nWhat is the current behavior?\nI am using a page-model approach meaning I have my model.js file where all the selectors(buttons, iframes, input fields etc.) and a few methods(login) I need during my tests are created. \nSometimes, tests may run smoothly without any errors, but usually at least a couple of them fail.\nThe most frequent errors are:\nContent of the iframe to which you are switching did not load.\nand\nCannot obtain information about the node because the specified selector does not match any node in the DOM tree.\nWhat is the expected behavior?\nTestCafe should wait for the elements to appear before interacting with them\nHow would you reproduce the current behavior (if this is a bug)?\nProvide the test code and the tested page URL (if applicable)\nTested page URL:\nTest code:\ntest('do some stuff', async t => {\nawait t\n            .navigateTo(link)\n            .wait(9999)           \n            .switchToIframe(mainFrame)\n            .click(button1)\n            .click(button2)          // opens a pop-up which is a nested iframe\n            .switchToIframe(nested iframe) // error occurs here\n            .click(nestedButton1)\n            .setFilesToUpload(nestedFileInput) // if nested iframe is loaded, error may sometimes occur here\n            .click(nestedButton2)\n            .switchToMainWindow()\n            .switchToIframe(mainFrame)\n            .click(button3);\n});\nSpecify your\noperating system: MAC OS X 10.13.5\ntestcafe version: 0.22\nnode.js version: Node 10.7. Hi, @Sushindhran 's solution has worked for chrome but while testing in safari and firefox there are still some issues. \nSafari closes the tab, but not the browser and, in addition to that, the node process keeps running and I need to quit it with ctrl+c. \nFirefox closes the browser, but the same thing with the node process occurs.\nAny suggestions how to go about this?\n@AndreyBelym \nHuge thanks!. @AndreyBelym thanks for your prompt reply.\nExcuse me if I am getting something wrong as I am still fairly new to GitHub and TestCafe\nI am currently using TestCafe 0.22 on MacOS with Chrome 68.0.3440, Safari 11.1.1 and Firefox 61 \nOnce TestCafe is installed and \nvar processOptions = { arguments: browserId, psargs: '-ef' };  in testcafe/src/browser/provider/utils/kill-browser-process.js\nneither of the browsers close correctly after test execution\nIf I change that to\n{arguments: browserId, psargs: 'aux'}\nboth Chrome and Firefox are closed after all tests have completed execution, but not Safari.\nOn top of that - in case with Firefox and Safari node process does not terminate.\nPlease let me know if that's an issue on my side or a more general problem.\nI'd gladly share any additional information if that helps.\nThanks!\n. @AndreyBelym \nOk, so I've tried installing 0.21.0 and running my tests, as a result:\nchrome works fine both browser and node process are closed and terminated\nfirefox browser is closed but the process is hanged\nsafari browser remains open (as you've explained) and the process is hanged\n. ",
    "stefanfisk": "Might a simpler alternative be to add a apply() action that takes a function as its argument, and then calls that function with the controller as its argument? Then there would be no risk of polluting the controller's API, and we could all factor out whatever we'd like into separate functions, at least provided we only want to do sync calls.. ",
    "jvanoostveen": "The error is raised during bundling, TypeScript will load all the definitions it can find (or so it seems).\nDuring the bundling, neither TestCafe or Mocha code should be touched or loaded.\nThere are in the bundled code, no references to either mocha typings or testcafe typings. So I'm quite puzzled on why this error even is an issue, the typings are irrelevant at this point.. The error is raised during bundling, TypeScript will load all the definitions it can find (or so it seems).\nDuring the bundling, neither TestCafe or Mocha code should be touched or loaded.\nThere are in the bundled code, no references to either mocha typings or testcafe typings. So I'm quite puzzled on why this error even is an issue, the typings are irrelevant at this point.. Yes, except, I get the compiler error not on the tests, but on the definition files.. I haven't found a way around this, and as we're also evaluating, I've for now downgraded to v0.15. But that one has issues already fixed in the newer ones.... polluting the global scope, looks like we're back in the early days of javascript...\nI would rather have it that only core JS is on the global scope, all else can be imported.. When I change the src/compiler/test-file/formats/typescript.js to only load node and testcafe types, I can get the project/tests to run.\n```diff\n    static _getTypescriptOptions () {\n        // NOTE: lazy load the compiler\n        var ts = require('typescript');\n    return {\n        allowJs:         true,\n        pretty:          true,\n        inlineSourceMap: true,\n        noEmit:          true,\n        noImplicitAny:   false,\n        module:          ts.ModuleKind.CommonJS,\n        target:          'ES6',\n        lib:             ['lib.es6.d.ts'],\n\n\ntypes:           ['node', 'testcafe'],\n            baseUrl:         __dirname,\n            paths:           { testcafe: ['../../../../ts-defs/index.d.ts'] }\n        };\n    }\n```\n\nBut those types might not be enough for all cases, so loading and parsing of the tsconfig.json corresponding to the tests is still the better way to go.\nI also noticed a new TypeScript program is created for each file, this might not be the fastest way.... I still have to check our situation, I am unable to access the source code (\ud83c\udfd6), maybe @peterwestendorp can check, but when \u2013 in your example \u2013 I add the e2e directory to the included sources, then it will not compile.\njson\n{\n    \"include\": [\n        \"unit/**/*.ts\",\n        \"e2e/**/*.ts\"\n    ]\n}\n$ npx tsc\ne2e/test.ts(1,26): error TS2307: Cannot find module 'testcafe'.\ne2e/test.ts(3,1): error TS2304: Cannot find name 'fixture'.\ne2e/test.ts(7,13): error TS2339: Property 'wait' does not exist on type 'MochaDone'.\nSo it is hard to compare, because it might also be the case that the definition file is not found anyway, if so changing \"types\" will not affect anything.\nIn the last error, it uses the Mocha definitions. But this might be related to something else, it is hard to debug these definition things...\nChanging the version to 0.16.2 has the seem results.\nWhen the e2e directory is excluded in the tsconfig.json, I also notice some editors have problems when figuring out how to deal with the TypeScript.\nAnyway, it doesn't seem that these issues are related to the original issue, where the compilation in TestCafe was causing the mocha definition conflict...\nSo, back to the original case, running the TypeScript tests with TestCafe, when I add this to the package.json and run it:\n\"e2e\": \"node_modules/.bin/testcafe chrome e2e/\"\n```\n$ npm run e2e\n\ntestcafe-mocha-example@1.0.0 e2e /testcafe-mocha-example\ntestcafe chrome e2e/\n\nERROR Cannot prepare tests due to an error.\nError: TypeScript compilation failed.\n/testcafe-mocha-example/node_modules/@types/mocha/index.d.ts (42, 13): Subsequent variable declarations must have the same type.  Variable 'test' must be of type 'TestFn', but here has type 'ITestDefinition'.\n```\nSo it is not about compiling the rest of the code, but running the TestCafe files written in TypeScript. Did you manage to have those working with the example?. ",
    "qballer": "Hey Guys, I'm encountering the same issue while using mocha and testcafe in the same project. I'm evaluating testcafe for end to end testing and have @types/mocha in my project. Any ideas on how to resolve this? . The problem is that both mocha and testcafe are polluting the global scope (I'm guessing this is for good reasons). In such first glance, I would dump mocha and live with testcafe, while bringing a mocha replacement. Then again, I have no idea what are your project concerns and why you use mocha.  . ",
    "vasyas": "Use both of Mocha & TestCafe, would like to have some viable workaround.. ",
    "peterwestendorp": "The typescript compiler loads all types from node_modules/@types by default. So if you have Mocha included in your project it will load their definition file as well. It seems that the TestCafe CLI doesn't load the tsconfig.json from the root of the project (or any tsconfig.json at all). If this were the case we could use the typeRoots or types compilerOptions in tsconfig.json to only include the specific typings we would need for the TestCafe tests.. My proposal would be to remove FIXTURE_RE.test(code) from https://github.com/DevExpress/testcafe/blob/master/src/compiler/test-file/api-based.js#L165\nI tried to create a PR for that, but can't get the unit tests working, hence this lazy proposal... :-). Thanks for your response @AndreyBelym! In your first solution I would still have to add .beforeEach and .afterEach on each fixture manually, which is not ideal. I have now worked around the issue by doing this: \nlet f = fixture('My fixture');\nutils.setupFixture(f, '/some-page')\nsetupFixture = (fixtureInstance, url) => {\n  fixtureInstance.page(`http://localhost:11119/pages${url}`)\n    .beforeEach(foo)\n    .afterEach(bar)\n}\nIdeally there would be some sort of global beforeEach and afterEach, like you have in Mocha: https://stackoverflow.com/questions/10561598/global-before-and-beforeeach-for-mocha\nWould that be an easier solution? (This is very similar to the solution suggested in #792).\nFor now now I can work around the issue though, thanks! :-). ",
    "Hotell": "heyo folks!\ncheck this:\n- https://github.com/AlexanderMoskovkin/testcafe-mocha-example/pull/1\n- https://github.com/AlexanderMoskovkin/testcafe-mocha-example/pull/2\nthanks for starting to resolve this @AlexanderMoskovkin , your solution is kinda sub-optimal.\nProviding types in tsconfig === explicitly naming libraries, that you wanna use for type checking, which can be super annoying, in projects with lot's of 3rd party libraries -> If types is specified, only packages listed will be included.,  \nEven if we did that, there is still issue with testcafe handling of TSC, which I described in my PR\nPS: also I've created \"issue\" here https://github.com/Microsoft/TypeScript/issues/17663\n. @mike-packetwerk \n\nis a show stopper. \n\nthere is absolutely none :) you can see my PR's and description. Also folks from TS confirmed that my solution is \"the only possible/best one\" --> https://twitter.com/martin_hotell/status/894627899688574977\nAlthough as I've mentioned in my comments zilion times, those solutions won't work for testcafe because it doesn't consume users tsconfig, but that's not a showstopper, you can use my solution and define npm script like this : \"e2e\": \"tsc && testcafe chrome ts-out/e2e\"\nwhat is ts-out ? -> \"outDir\": \"ts-out\", TS compiler setting in tsconfig . quick fix is straightforward in testcafe's codebase \nhttps://github.com/DevExpress/testcafe/blob/master/src/compiler/test-file/formats/typescript.js#L14\njust adding skipLibCheck: true will do the trick until testcafe wont support users tsconfig. @mike-packetwerk  cheers mate!. Hi @kirovboris unfortunately still the same issue\nI've turned off firewall completely, even when I'm testing it on this repo example ( which is local ) it doesn't work \n\nany suggestions ?\nthx\n. bang! worked ! any ideas why the default IP doesn't work though? on mac it works with default settings\n\n. @kirovboris  cool would you accept a PR to docs which will mention this issue + how to fix it ? :) thx for help again! cheers. sure thingy, thanks for help folks!. thanks for stepping in @bitcrazed . That didn't help unfortunately, same error. I guess issue is with testcafe implementation\n```sh\nnpx testcafe path:'/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe' test.js\nERROR Was unable to open the browser \"path:/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe\" due to error.\nError: The specified browser name is not valid!\n    at BrowserProviderPluginHost._callee3$ (/mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/testcafe/lib/browser/provider/built-in/path.js:159:35\n)\n    at tryCatch (/mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/regenerator-runtime/runtime.js:65:40)\n    at Generator.invoke [as _invoke] (/mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/regenerator-runtime/runtime.js:303:22)\n    at Generator.prototype.(anonymous function) [as next] (/mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/regenerator-runtime/runtime.js:117:21)\n    at step (/mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n    at /mnt/c/Users/hoche/Documents/Devel/test/testcafe-example/node_modules/babel-runtime/helpers/asyncToGenerator.js:28:13\n    at \n```. ha! so I've spent few minutes on debugging async/await compiled to es5 ( feels like shooting yourself in the head btw ehm .... ) and I found the issue and got it working :)\ncommand:\nnpx testcafe path:\"/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe\" test.js --hostname localhost\n\nSo where is the issue?\n-> _handleString \n-> and most particular in this call of splitQuotedText\nwhere splitChar param is set to ' ' which in will parse path to chrome badly -> like this\nthis ->\npath:\"/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe\"\nwill be parsed to:\njs\n{ str: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n  args: [ 'Files', '(x86)/Google/Chrome/Application/chrome.exe' ],\n  path: '/mnt/c/Program' }\nwhich is of course wrong and whole script will error\nSo how to fix it?\nDon't know why there is empty space as splitChar, but if we change it to for instance for comma , everything will start to work. I can submit PR if you want, this is indeed a deal breaker for my daily workflow as I'm using WSL 100% for work.\ndiff\n-var args = splitQuotedText(str, ' ', '`\"\\'');\n+var args = splitQuotedText(str, ',', '`\"\\'');\n. cc @kirovboris. Thanks for explanation why is ' ' , although your quotes doesn't work for all your type of quotes , also your test is covering just one use case, when using backticks `\nfollowing does not work:\n\n\nthe only combination that works is backticks + single quotes as a wrapper:\n\nSo either way:\n- it's a bug ( that it handles correctly only 3rd usecase ? )\n- it's demanded behaviour ( that it works solely with backticks ) and a PR to the docs needs to happen \nPls lemme know thx!\n. I found it in docs actually ( my mistake that I didn't read thoroughly before :( ) but provided example doesn't work as I've mentioned \nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#starting-browser-with-arguments\n\nYou can also specify arguments for portable browsers. If a path to a browser contains spaces, the path should be surrounded with backticks:\ntestcafe \"path:`C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe` --start-fullscreen\" tests/sample-fixture.js\n\n\n. sounds good @AndreyBelym, cheers ! \n\nP.S.: yes I'm using windows subsystem linux for development, so bash. yeah I know that's not your fault folks, just wanted to give heads up for you or users of testcafe. \n\ncheers. hmm that assertion doesn't work 100%.\nWhat is weird though, is sometimes the login passes and then all tests run ok, but sometimes it keeps hanging and all following tests will fail. \nThe app is in a private corporate environment so I'm not able to share :(. also the app is not using HTML5_MODE for routing -> just hashes so localhost:8080/#/login -> localhost:8080/#/ etc. with --speed 0.5 tests are always passing \ud83d\ude15 . also forgot to mention that login process, executes 2 XHR\n-> click\n-> POST login\n-> GET user\n-> go to /#/ ( Dashboard ). yes sequentially. yup\nthe first one POST with credentials creates a session + cookie on the server\nthe second one GET is for accessing the user data and setting it to Redux Store\nAfter that we trigger redirect to /#/ \nwhen I set speed to 1 some test passes and some error out on that \"hack\" assertion\n\n. For further reference, here is the auth function that I'm using\n```ts\nconst authenticate = async ({ username, password }: UserCredentials, t: TestController) => {\n  return await t\n    .wait(2000)\n    .typeText(loginPage.email, username)\n    .typeText(loginPage.password, password)\n    .click(loginPage.submit)\n    // hack https://github.com/DevExpress/testcafe/issues/1836#issuecomment-333476931\n    .expect(getLocation())\n    .notContains(ROOT_PATH)\n    .navigateTo(DASHBOARD_URL)\n}\nexport const admin = Role(LOGIN_URL, async t => {\n  await authenticate({ username: 'user@foo.com', password: '1234' }, t)\n})\n```\n\nwait before\nEVERYTHING IS PASSING on 1st run\n\n\nREPEATED RUN FAILS\n\n\nwait after\nFAILED\n\n\n\n. @AlexanderMoskovkin thanks so much, that works!. I have though other \"bug\" issue, with resolving import , I'll create another ticket for that. I guess this can be closed for now, WDYT ?. ok so this won't work, what really needs to be done is to allow testcafe to consume users tsconfig.json\nIn our case we are using preact with aliases to React typings, so we also need to set jsxFactory: h instead of React standard -> jsxFactory: createElement and many other custom config for path aliasing\n. ok so this won't work, what really needs to be done is to allow testcafe to consume users tsconfig.json\nIn our case we are using preact with aliases to React typings, so we also need to set jsxFactory: h instead of React standard -> jsxFactory: createElement and many other custom config for path aliasing\n. So I've been tweaking testcafe source a bit and come up with something like this for getting needed tsconfig settings from user's tsconfig \nhttps://gist.github.com/Hotell/f88c7588d6e878df87fe01f12019de1f#file-compiler-js-L2-L41\nwhich is almost working , just have to resolve few issues with path mapping\nI still got some errors \n\n. So I've been tweaking testcafe source a bit and come up with something like this for getting needed tsconfig settings from user's tsconfig \nhttps://gist.github.com/Hotell/f88c7588d6e878df87fe01f12019de1f#file-compiler-js-L2-L41\nwhich is almost working , just have to resolve few issues with path mapping\nI still got some errors \n\n. > Meanwhile, I think it would be nice to add an ability to pass a custom tsconfig file path to TestCafe run.\nworking on it, will send PR when ready ;). > Meanwhile, I think it would be nice to add an ability to pass a custom tsconfig file path to TestCafe run.\nworking on it, will send PR when ready ;). works without issues wit node 8\noperating system: MAC OS X 10.13.3\ntestcafe: 0.19.1,\nnode.js version: 8.10.0. This isn't helping really.\nFirst thing, I'm not a testing expert so I don't completely understand what you mean by your \" reproducing the problem on synthetic tests\" \ud83d\udc40\nAlso I provided you exact data about the difference. You can really test it in  60 seconds by creating 1 test file and run it in both TS and vanilla JS version to see the difference. With TS it's 2 times slower. \nI would like to do the transpilation right and submit a PR to your compiler, but unfortunately I'm kinda lost within your compiler logic. Maybe if someone would provide a guidance I would be able to finish it and with it resolve other TS related issues ( like support for consuming custom tsconfig.json ).\nThe tests are also slow because the way how you compile TS. file by file which is really not efficient.\n\nFeel free to reopen the issue \n\nI've no rights so how can I possible reopen this ? \ud83d\ude04. the testcafe-configr uses testcafe programatic API. the same \"results\" are when running testcafe directly. \nIt must be definitely an issue on your side. 0.23.0 works, since 0.23.2 it doesn't \ud83d\udc40 . ",
    "mike-packetwerk": "I'd really like to use both jest and testcafe and typescript, and the currently problem regarding duplicate types (aka @types/jest/index.d.ts (23, 13): Subsequent variable declarations must have the same type.  Variable 'test' must be of type 'TestFn', but here has type 'It') is a show stopper.\nI think it would be helpful if testcafe could use a local test directory tsconfig.json that would allow specifying types.\n. @Hotell Ah, ok, I'll try your tsc && ... trick tomorrow. I can imagine it will work. Thanks.. @Hotell FYI, pre-compiling with tsc and my custom tsconfig.json worked  a dream. Thanks again.\n// testcafe/tsconfig.json\njson\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../dist/testcafe\",\n    \"module\": \"es2015\",\n    \"target\": \"es2017\",\n    \"baseUrl\": \"\",\n    \"types\": [\n      \"testcafe\",\n      \"node\"\n    ]\n  }\n}. ",
    "draconisNoctis": "I ran into the same issue and solved it by monkey-patching the tsconfig for testcafe:\n```typescript\nconst TypeScriptTestFileCompiler = require('testcafe/lib/compiler/test-file/formats/typescript');\nconst _getTypescriptOptions = TypeScriptTestFileCompiler._getTypescriptOptions;\nTypeScriptTestFileCompiler._getTypescriptOptions = () => {\n    const config = _getTypescriptOptions();\n    config.skipLibCheck = true;\nreturn config;\n\n}\n```\nI hope this helps someone till this is fixed.. ",
    "micahblu": "I have latest 0.20.1 and still getting a subsequent variable declaration error as well as : \nERROR in /Volumes/Workspace/Projects/wirecash-client/node_modules/testcafe/ts-defs/index.d.ts\n(1594,6): error TS1036: Statements are not allowed in ambient contexts.. ",
    "ww8912188": "This issue is really annoying. As a temporary workaround, I divided my tests into small pieces. Anyway, looking forward to the fix.. ",
    "m4n3z40": "Awesome. Thanks Team. \nReally good work.. ",
    "ismailgmutlu": "I am using a trial version right now.\nAnd my test is failing at step 10. . ",
    "NaukhaizAhmad": "Hi @miherlosev,\nThanks for your prompt response.\nRequired information:\nTestCafe version - 15.1.3\nAngular version - 4.1.3\nAdditional informtaion\nI have attached a file containing \"dependencies\" and \"devDependencies\" , also attached yarn.lock file.\nplease find the attached files.\nI hope you might be able to debug/investigate/reproduce this issue now.\nPlease let me know in case you need further information. Your prompt response would be highly appreciated.\nTestCafeIssue.zip\n. Thanks for your response. \nAttached is the link for sample application as per your requirement, please find the link below.\nI hope you might be able to reproduce this issue now.\nPlease let me know in case you need further information. Your prompt response would be highly appreciated.\nhttps://drive.google.com/file/d/0B4BaQZP8yhWNcER1OTB0bDhGTlE/view?usp=sharing\n. ",
    "dhoko": "ok I will write a small recipe . Woops I  forgot to check :grin: . ",
    "Leksat": "I was able to get basic autocomplete in JS tests by adding node_modules/testcafe/ts-defs/index.d.ts as a JS library in PhpStorm settings:\n\nResult:\n\n. ",
    "hang-ren": "Thanks to you all.\nBy the way, I see the fix merged into the branch. When the next package will be released ?. Thanks for the quick fix!\nBut also have a question that how to install the bump version or update the files which include the fix?\nIs there any command need to force in my local testcafe workspace?. I see, really many thanks to you guys!. I think it is similar with issue#1580, could you please have a check. Greatly appreciated!. \n. @LavrovArtem\uff0c\nSo weird. \nI saw you use \"https\" to access the link from the video, right? But in my code it is \"http\", could you help to double check the difference? From my side, I can sign-in successfully both with \"https\" and \"http\" manually.\nThanks a lot!\nBRs,\nHang . Thanks @LavrovArtem , I had tried it as your mentioned but still met the same issue.\nI think I need research my website firstly, maybe it is a bug from my website.\nThanks for your suggestion all the same. And please close this issue.. File ../modules/3Dlogin.js --->\n```\nimport { t  } from 'testcafe';\nvar logindata = require('../data/3Dlogin.js');\nexport default class LoginCSS {\n    constructor () {\n    //  this.logina = logindata.logina;\n        this.loginpage = logindata.loginpage;\n        this.usernameInput = logindata.usernameInput;\n        this.pwdInput  = logindata.pwdInput;\n        this.loginBtn  = logindata.loginBtn;\n        this.loginLink = logindata.loginLink; \n        this.tologin  = logindata.tologin;\n        this.closeW = logindata.closeW;   \n    }\nasync login () {\n    await t\n    .maximizeWindow()\n    .wait(5000)\n    .click(this.tologin)\n    .wait(2000)\n    .switchToIframe( this.loginpage )\n    .wait(2000)\n    .typeText(this.usernameInput,logindata.usname)  \n    .wait(2000)\n    .typeText(this.pwdInput, logindata.pwd)\n    .wait(2000)\n    .click(this.loginBtn)       \n    .wait(4000)\n    .switchToMainWindow()\n    .wait(4000)\n    .click(this.closeW)\n    .wait(4000)\n}\n\n}\n```. File ../data/3Dlogin.js --->\n```\nimport { Selector } from 'testcafe';\nvar usname = \"tester\";\nvar pwd = \"123456\";\n//var logina = Selector('a[class=\"loginpp\"]');\nvar loginpage = Selector('iframe[id=\"loginFrame\"]');\nvar usernameInput = Selector('input[placeholder=\"\u624b\u673a/\u90ae\u7bb1/\u7528\u6237\u540d\"]');\nvar pwdInput = Selector('input[placeholder=\"\u5bc6\u7801\"]');\nvar loginBtn = Selector('a[class=\"sso-submit\"]');\nvar tologin = Selector('button[title=\"\u9a6c\u4e0a\u767b\u5f55\"]');\nvar closeW = Selector('img[class=\"closewelcome\"]');\nexports.usname = usname;\nexports.pwd = pwd;\n//exports.logina = logina;\nexports.loginpage = loginpage;\nexports.usernameInput = usernameInput;\nexports.pwdInput = pwdInput;\nexports.loginBtn = loginBtn;\nexports.tologin = tologin;\nexports.closeW = closeW;\n```. Thanks @churkin , but how to just update, not re-install?. ok, thanks. So please close it, that works fine now.. File ../modules/desinerlogin:\n```\nimport { t  } from 'testcafe';\nvar logindata = require('../data/designerlogin.js');\nexport default class LoginCSS {\n    constructor () {\n        this.logina = logindata.logina;\n        this.loginpage = logindata.loginpage;\n        this.usernameInput = logindata.usernameInput;\n        this.pwdInput  = logindata.pwdInput;\n        this.loginBtn  = logindata.loginBtn;\n        this.loginLink = logindata.loginLink;     \n    }\nasync login () {\n    await t\n    .maximizeWindow()\n    .wait(5000)\n    .click(this.logina)\n    .wait(2000)\n    .switchToIframe( this.loginpage )\n    .wait(2000)\n    .typeText(this.usernameInput,logindata.usname)  \n    .wait(2000)\n    .typeText(this.pwdInput, logindata.pwd)\n    .wait(2000)\n    .click(this.loginBtn)       \n    .wait(2000)\n    .switchToMainWindow()\n    .wait(2000)\n}\n\n}\n```. File ../data/desinerlogin:\n```\nimport { Selector } from 'testcafe';\nvar usname = \"13621084964\";\nvar pwd = \"123456\";\nvar logina = Selector('li[id=\"no-login\"]');\nvar loginpage = Selector('iframe[id=\"login-iframe\"]');\nvar usernameInput = Selector('input[placeholder=\"\u624b\u673a/\u90ae\u7bb1/\u7528\u6237\u540d\"]');\nvar pwdInput = Selector('input[placeholder=\"\u5bc6\u7801\"]');\nvar loginBtn = Selector('a[class=\"sso-submit\"]');\nexports.usname = usname;\nexports.pwd = pwd;\nexports.logina = logina;\nexports.loginpage = loginpage;\nexports.usernameInput = usernameInput;\nexports.pwdInput = pwdInput;\nexports.loginBtn = loginBtn;\n```. @helen-dikareva, thanks Helen!. Thanks @helen-dikareva , it works fine as you mentioned.. \n. @AlexanderMoskovkin Thanks!\nBy the way, when will Sprint#10 be released. I saw you added tag for the fixing.. @AlexanderMoskovkin ok, thanks for the quick response!. @AndreyBelym Well done, thanks for the fix, I will verify it.. \nThis button stays on \"enabled\" but in fact \"esc\" already input.. And the console will report error but it will be not occurred if force manually testing:\nvendor.bundle.js?1521711585385:2 Uncaught TypeError: r.extractPoints is not a function\n    at addShape (vendor.bundle.js?1521711585385:2)\n    at new ShapeBufferGeometry (vendor.bundle.js?1521711585385:2)\n    at new ShapeGeometry (vendor.bundle.js?1521711585385:2)\n    at hsw.view.webgl3d.Floor.draw (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at hsw.view.webgl3d.Floor.hsw.view.base.Display.redraw (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at hsw.view.webgl3d.Canvas.hsw.view.base.Canvas.renderNewFrame (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at hsw.view.webgl3d.Canvas.renderNewFrame (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at hsw.view.webgl3d.Canvas.hsw.view.base.Canvas.onNewAnimationFrame (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at goog.events.EventTarget.fireListeners (core.0816a5cf4954e38a56d0.bundle.js:2)\n    at Function.goog.events.EventTarget.dispatchEventInternal (core.0816a5cf4954e38a56d0.bundle.js:2). ",
    "caseyWebb": "I didn't see that you'd made a commit in your fork and got to playing with this. I took a different route, so not sure you'll want it.\nhttps://github.com/caseyWebb/testcafe/commit/83c720f7f3cbe23deed1dfa5490ca291e084117f\n```\nyarn benchmark v0.27.5\n$ echo TestCaf\u00e9 Version: $(testcafe --version) && npm run benchmark:prebuild && npm run benchmark:native\nTestCaf\u00e9 Version: 0.17.0-alpha2\n\ntestcafe-slow-modules-example@ benchmark:prebuild /Users/caseywebb/Code/testcafe-example\ntime sh -c 'tsc && testcafe chrome fixture/dist/index.js' > /dev/null\n\nreal    0m9.001s\nuser    0m5.503s\nsys     0m0.483s\n\ntestcafe-slow-modules-example@ benchmark:native /Users/caseywebb/Code/testcafe-example\ntime testcafe chrome fixture/src/index.ts > /dev/null\n\nreal    0m7.214s\nuser    0m3.473s\nsys     0m0.334s\n```\nI tried running the benchmarks on your branch but got the following error:\n```\nERROR Cannot prepare tests due to an error.\nTypeError: Cannot read property 'length' of undefined\nType \"testcafe -h\" for help.\n```. Personally I'd like to prevent the duplication if possible with something like this:\ntestcafe chrome test.js -r spec, json:report.json, xunit:report.xml. As far as documentation goes I'm indifferent to spaces vs no spaces, I think the parser should be agnostic to them though.. I was wondering that myself when taking a second look at the code to be honest. It's testing a part of our app that is way before my time and I'm unfamiliar with, but it does use iframes heavily. I'll email you the link + login to check it out yourself.. I wrote a regression test, I'm not able to run the functional tests locally with npx gulp test-functional-local to verify that it actually works or is testing the regression. Any help with that would be appreciated, or I can push my stab in the dark for someone else play with.. ",
    "Freak613": "Yes, I've checked, and it's not related to system configuration.\nError happens from time to time and it looks like app trying to do something that is not related to it. Node.js has it's own errors for networking and they're more clear in debugging of the core issue.\nIf you just wrapping node.js error, you can at least add original trace and error message to output.. setTimeout also don't work\nCan you provide code snippet?. I just figured out that scrolling works, we just have some react plugin on the page that performs some scroll animation and this animation triggers after I'm resetting scroll position or has some significant duration.. ",
    "vampolo": "Was able to track down the source of the error in \n\n. Closing as it seems to be addressed in https://github.com/DevExpress/testcafe-hammerhead/issues/1197. Solved by installing testcafe@0.17.0-alpha2. Speaking on behalf of @pablorivera to which i work with.\nThe develop-i.quid.com is a vpn protected address. Of course it is not accessible from outside. Apologies about that.\nI've been digging on this problem a bit, let me add some context:\n1. our app does various window.location.href=\"http://otherdomain during a single test\n2. the problem is intermittent\nBy digging into hammerhead code found that the generic error about DNS resolution is trigger for a bigger set of connection problems about connection refused, or connection reset.\nWith the architecture of having browser -> hammerhead -> testcafe and browser being redirected with window.location.href i guess that when the browser closes an existing in filght ajax due to a js triggered redirect, hammerheads gets upset and fails the test.\nThis issue is very similar to #1135 and the failure rate gets lower if we increase the time in t.wait() calls before the application switches to another page with a window.location.href call.\nLet me know if this helps understanding the problem.. ",
    "chenby": "Thanks\u3002\nI mean that my website send an xhr-request,and How do i know it can work.. It just report some event, and return {code\uff1a200}. Thanks a lot. ",
    "haoshasha": "let s = Selector('.page-tab:not(.ng-hide) .contentPage')\n        const sn = ClientFunction((el) => {\n            return el().scrollTop = 650;\n        }).with({boundTestRun: cafe});\n        await sn(s). I do not want to log in every time I use the test case\n\n. Is that settled?. @AlexanderMoskovkin   I'll try it. @AlexanderMoskovkin Each test case requires each login\uff0cbut I don't want to. Set cookies on client side,,,\nBut did not succeed\u3002\u3002\u3002. thankyou \uff0cMy page Not input type\uff0c Just an upload button. @AlexanderMoskovkin How should I upload it?. \n. @AlexanderMoskovkin . The upload button on my page is not input type. @AlexanderMoskovkin Support non input tags upload files?. @AlexanderMoskovkin  thankyou thankyou  thankyou\n. \n. ",
    "rock9u": "sliderHandleSnaphot has a typo, it should be sliderHandleSnapshot . ",
    "satispunk": "@AlexanderMoskovkin Thank you! will have a look and return with feedback. @AlexanderMoskovkin \nHi. I've test 17.2 version. The problems still exists.\nBut also found another way to reproduce it.\n\nConnect to another machine (virtual or real) using windows remote desktop connection\nRun tests which create screenshots\nMinimize remote desktop connection and wait some time until test run is finished\n\nI get the same error:\nWas unable to take a screenshot due to an error.\nCommand failed:\n  C:\\dev\\confirmit.hub.client\\node_modules\\testcafe-browser-tools\\bin\\win\\screenshot.exe\n  263454 chrome\n  C:\\dev\\confirmit.hub.client\\test\\testcafe\\reports\\screenshots\\2017-09-10_05-40-44\\test-1\\Chrome_60.0.3112_Windows_8.1_0.0.0\\1.png\nUnhandled Exception: System.ComponentModel.Win32Exception: The handle is\n  invalid\n     at System.Drawing.Graphics.CopyFromScreen(Int32 sourceX, Int32 sourceY,\n  Int32 destinationX, Int32 destinationY, Size blockRegionSize,\n  CopyPixelOperation copyPixelOperation)\n     at System.Drawing.Graphics.CopyFromScreen(Point upperLeftSource, Point\n  upperLeftDestination, Size blockRegionSize, CopyPixelOperation\n  copyPixelOperation)\n     at BrowserTools.Screenshot.CaptureFromScreen(IntPtr hwnd, WindowInfo wi)\n     at BrowserTools.Screenshot.CaptureWindow(IntPtr hwnd, String\n  processName)\n     at BrowserTools.Screenshot.Main(String[] args)\nSo I assume that if the desktop is not shown physically then testcafe can't get window handle to make screenshot. ",
    "panupetteri": "I also have the same issue. I'm running TestCaf\u00e9 in OctopusDeploy as custom script using command \ntestcafe chrome .\\tests.ts --screenshots C:\\screenshots --screenshots-on-fails\nOctopusDeploy runs in Windows Server 2012 under LocalSystem account. Node.js version is 8.9.4 and TestCaf\u00e9 version is 0.18.6. Chrome version is 64.0.\nThe error message is:\nWas unable to take a screenshot due to an error. \nCommand failed: C:\\Program Files\\nodejs\\node_modules\\testcafe\\node_modules\\testcafe-browser-tools\\bin\\win\\screenshot.exe 4194442 chrome C:\\screenshots\\2018-03-06_11-13-20\\test-2\\Chrome_63.0.3239_Windows_8.0.0\\errors\\1.png \nUnhandled Exception: System.ComponentModel.Win32Exception: The handle is invalid \n   at System.Drawing.Graphics.CopyFromScreen(Int32 sourceX, Int32 sourceY, Int32 destinationX, Int32 destinationY, Size blockRegionSize, CopyPixelOperation copyPixelOperation) \n   at System.Drawing.Graphics.CopyFromScreen(Point upperLeftSource, Point upperLeftDestination, Size blockRegionSize, CopyPixelOperation copyPixelOperation) \n   at BrowserTools.Screenshot.CaptureFromScreen(IntPtr hwnd, WindowInfo wi) \n   at BrowserTools.Screenshot.CaptureWindow(IntPtr hwnd, String processName) \n       at BrowserTools.Screenshot.Main(String[] args). ",
    "viraxslot": "Hi there, same for me with TFS.\nWindows 10, testcafe 0.19.2, Firefox 59, node 10.0, npm: 5.6.0 \nMy command to run testcafe:\ntestcafe chrome,opera,firefox -c 2 src/tests -r spec,nunit:results/nunit-results.xml -S -s logs/screenshots\n```\nWarnings (1):\n--\n Was unable to take a screenshot due to an error.\n Error: Command failed:\n C:\\agent_work\\1\\s\\node_modules\\testcafe-browser-tools\\bin\\win\\screenshot.exe\n 853870 firefox\n C:\\agent_work\\1\\s\\logs\\screenshots\\2018-05-07_01-58-18\\test-65\\Firefox_59.0.0_Windows_10.0.0\\errors\\1.png\n Unhandled Exception: System.ComponentModel.Win32Exception: The handle is\n invalid\n    at System.Drawing.Graphics.CopyFromScreen(Int32 sourceX, Int32 sourceY,\n Int32 destinationX, Int32 destinationY, Size blockRegionSize,\n CopyPixelOperation copyPixelOperation)\n    at System.Drawing.Graphics.CopyFromScreen(Point upperLeftSource, Point\n upperLeftDestination, Size blockRegionSize, CopyPixelOperation\n copyPixelOperation)\n    at BrowserTools.Screenshot.CaptureFromScreen(IntPtr hwnd, WindowInfo wi)\n    at BrowserTools.Screenshot.CaptureWindow(IntPtr hwnd, String\n processName)\n    at BrowserTools.Screenshot.Main(String[] args)\n     at ChildProcess.exithandler (child_process.js:282:12)\n     at ChildProcess.emit (events.js:182:13)\n     at ChildProcess.EventEmitter.emit (domain.js:442:20)\n     at maybeClose (internal/child_process.js:947:16)\n     at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)\n[error]Process completed with exit code 2.\n```. @miherlosev \nHi, thanks a lot. Now I have no errors on making screenshots in TFS + testcafe 0.20.4\nIs there any options to shoot window with scroll?. @miherlosev \n\nPlease describe in more detail what options do you need?\n\nOn screenshot now I see only active part of browser window, but want to see all window (scrolled from the beginning to the end). Is it possible? . @inikulin thank you, I'll try.. ",
    "maqpratika": "Can you please share the resolution details? What made it fix?. ",
    "kot-lex": "Any news here? . Hi @AndreyBelym, any update on this?. Any news? Ability to run test in Internet Explorer 11 is critical for us.. @AndreyBelym is there any chance of this issue being resolved by your team anytime soon? \nIf there is anything we can do on our side to help you address the issue please let me know.. Works like a charm, thank you guys!. ",
    "ricwal-richa": "+1. ",
    "evegreen": "\n``js\nconst testDesktop = (name, testToRun) => {\n  name =${name} - desktop only`\n  if (process.env['MOBILE'] !== 'yes') {\n    test(name, testToRun)\n  } else {\n    test.skip(name, testToRun)\n  }\n}\ntestDesktop.skip = (name, testToRun) => {\n  test.skip(name, testToRun)\n}\nexport default testDesktop\njs\ntestDesktop('Field validation', async t => {\n  await t\n    .navigateTo(${baseURL}&fixture=default)\n    .typeText(form.dateOfBirth.field, '123123')\n})\n```\n\nhi @hex0cter , does your solution works on testcafe version 0.23.3 ?. ",
    "bitcrazed": "Have you tried wrapping the entire path in quotes (due to the spaces)?\n$ npx testcafe path:'/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe test.js'\n\n. ",
    "eliw00d": "I'm running into a similar issue with WSL:\n``\n$ testcafe \"path:/mnt/c/PROGRA~2/Google/Chrome/Application/chrome.exe`\" ./tests\nTestCafe Live watches the files and reruns\nthe tests once you've saved your changes.\nYou can use the following keys in the terminal:\n'ctrl+s' - stop current test run;\n'ctrl+r' - restart current test run;\n'ctrl+w' - turn off/on watching;\n'ctrl+c' - close browsers and terminate the process.\nTest run is starting...\nMake changes in the source files or press ctrl+r to restart test run.\nERROR: Error: Was unable to open the browser \"path:\" due to error.\nTypeError: Cannot read property 'trim' of undefined\n    at Object.callee$0$0$ (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/lib/api/get-browser-info.js:54:42)\n    at tryCatch (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n    at Generator.invoke [as _invoke] (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:334:22)\n    at Generator.prototype.(anonymous function) [as next] (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:105:21)\n    at tryCatch (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n    at invoke (/mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:146:20)\n    at /mnt/c/Users/eliw00d/Documents/GitHub/project/node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:154:13\n    at \nIt does actually open Chrome in Windows, but then the above error is thrown.. If I change to single quotes, it has the following error after thinking for a good while:\n$ testcafe 'path:/mnt/c/PROGRA~2/Google/Chrome/Application/chrome.exe' ./tests\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\n``. Yeah, sorry about that, I realized my error and tried again with single quotes but get a connection error now.. @AndreyBelym What would cause the connection error I'm seeing above? Also, what do you look for in Linux when using the alias \"chrome\"? Is there a way I can create an environment variable that would work with that? I have$BROWSERset to/mnt/c/PROGRA~2/Google/Chrome/Application/chrome.exe` for use with Hub, for example.. @AndreyBelym Remote worked fine, not sure why using the chrome.exe path causes it to have connection errors.. We are trying to isolate the issue to a specific set of code, but it is proving to be extremely difficult. \nThe scenario is a Dialog that leads to another Dialog with an AutoComplete. When the test reaches the point where it types into the AutoComplete and the Popover shows up it crashes and burns with the above error.\nHowever, if we open the second Dialog directly and type into the AutoComplete, the test works.\nI am not really sure what the issue is, as these errors do not show up in our deployed site, only when we've been trying to implement TestCafe.. We are using:\n\"material-ui\": \"0.19.4\"\nHowever, I think I may have figured it out. We are using a \"fix\" for a MUI bug that dispatches a new window event for resizing. It looks like this:\n```\n    componentDidUpdate() {\n        this.resizeFix()\n    }\nresizeFix() {\n    setTimeout(() => {\n        window.dispatchEvent(new Event('resize'))\n    })\n}\n\n```\nIf I remove the calling line the test passes. . Some more details:\nUncaught TypeError: Cannot read property 'getLayer' of null\n    at Popover._this.setPlacement (bundle.js:50350)\n    at invokeFunc (bundle.js:18647)\n    at leadingEdge (bundle.js:18657)\n    at debounced (bundle.js:18722)\n    at hammerhead.js:formatted:4201\n    at dispatchEvent (hammerhead.js:formatted:3990)\n    at bundle.js:123994\nWhere hammerhead.js:formatted:4201 is\ny.isObjectEventListener)(t) ? t.handleEvent.call(t, n) : t.call(this, n)\nand hammerhead.js:formatted:3990 is \n, t = e ? S[\"default\"].windowDispatchEvent.apply(this, arguments) : S[\"default\"].dispatchEvent.apply(this, arguments);\nand bundle.js:123994 is \nwindow.dispatchEvent(new Event('resize'));. I will give it a shot.\nGoogle Chrome\nVersion 63.0.3239.90 (Official Build) beta (64-bit). I forgot to update this, but switching to Material UI 1.0.0 solved this problem.. ",
    "morsdyce": "I just found out from the release notes that you also support headless mode for chrome which does work, so I assume this is related to browser extensions.\nAlthough not testcafe fault, this is very confusing for a first time user which will cause people to not use testcafe.\nIt is probably best to at least start chrome in incognito mode so browsers extensions aren't loaded by default.. ",
    "thireven": "I wrote this helper function to manage how my screenshots are saved:\n```\nfunction screenshotPath(t, ...args) {\n  let filename = args.pop();\n  const currentTest = t.testRun.test;\n  const browser = t.testRun.browserConnection;\nconst pathArray = [\n    browser.browserInfo.userAgent.replace('/', '_'), // Browser and OS\n    currentTest.fixture.name, // Fixture name\n    currentTest.name, // Test name\n    ...args\n  ];\nconst path = pathArray.join('/').replace(/\\s/g, '-');\nif (screenshotMap[path] === undefined) {\n    screenshotMap[path] = -1;\n  }\n  screenshotMap[path]++;\nconst numberIndex = (000${screenshotMap[path]}).slice(-3);\n  filename = ${numberIndex}.${filename};\n  return ${path}/${filename};\n}\n```\nI'm also building an internal GUI for testcafe and would love to be able to apply screenshot path \"filters\" in the CLI. For instance, something like: <path to screenshots>/%BROWSER%/%FIXTURE_NAME%/%TEST_NAME%/%NUMBERED%_%FILENAME%\nI don't suppose it's something that can feasibly be done in the CLI right now?. > Could you please clarify what errors do you have. Meanwhile we'll try to run in on our side with the same environment.\nFrom gulp test-server:\n```\n  1) CLI argument parser Should use \"test\" and \"tests\" dirs if source files are not specified:\n  AssertionError: expected [ Array(4) ] to deeply equal [ Array(2) ]\n  + expected - actual\n\n   [\n     \"/Users/tnguyen/Projects/tc_test/test/server/data/file-list/test/test-dir-file.js\"\n     \"/Users/tnguyen/Projects/tc_test/test/server/data/file-list/tests/tests-dir-file.js\"\n  -  \"/Users/tnguyen/Projects/tc_test/test/server/data/file-list/Test/test-dir-file.js\"\n  -  \"/Users/tnguyen/Projects/tc_test/test/server/data/file-list/Tests/tests-dir-file.js\"\n   ]\n\n  at test/server/cli-argument-parser-test.js:308:36\n  at <anonymous>\n\n```\nFrom gulp test-functional-local:\n```\nRunning tests in browsers: chrome, ie, firefox\n  1) \"before all\" hook\n0 passing (7s)\n  1 failing\n1)  \"before all\" hook:\n     TypeError: Cannot read property 'path' of null\n      at checkBrowserPath$ (node_modules/testcafe-browser-tools/lib/api/open.js:34:33)\n      at tryCatch (node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n      at Generator.invoke [as _invoke] (node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:334:22)\n      at Generator.prototype.(anonymous function) [as next] (node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:105:21)\n      at tryCatch (node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:72:40)\n      at invoke (node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:146:20)\n      at bound (domain.js:280:14)\n      at runBound (domain.js:293:12)\n      at node_modules/testcafe-browser-tools/node_modules/babel-runtime/regenerator/runtime.js:191:11\n      at new Promise ()\n```\nFrom gulp test-client:\n[10:41:00] Starting 'fast-build'...\n[10:41:00] Finished 'fast-build' after 31 \u03bcs\n[10:41:07] Finished 'worker:lint' after 14 s\n[10:41:07] Finished 'lint' after 15 s\n[10:41:07] Starting 'build'...\n[10:41:07] Finished 'build' after 10 \u03bcs\n[10:41:07] Starting 'test-client'...\nQUnit server listens on http://localhost:2000\nIt just hangs after the QUnit line and doesn't do anything else.. > ```\n\ntest1.js -s screenshots -p >\"${DATE}_${TIME}/test-${TESTNUMBER}/${USERAGENT}/${TESTNUMBER}\"\n```\n\nI'm fine with that. Was also trying out using # as the delimiter over the weekend as well and it seems to work for OSX and Windows without any issues.. > Additionally we already have some kind of templating for takeScreenshot action. See the Take Screenshot topic.\nGoing off of what's there, would that mean that the pattern would change to {...} instead of ${...}? Would that run into any issues on various platforms?. Made some updates according to what @AlexanderMoskovkin posted and added support for custom datetime formatting (DTF). The original PR info has been updated with information on DTF and an example pattern and output.\nOn the testing side, I'm still struggling to get two of them to succeed. gulp test-server now works and passes, but I still have the same issues with the other two.. ",
    "bhavinkamani": "Thank you so much. That must have been indeed tricky. . Thanks @AlexanderMoskovkin. I tried that option. While it allows me to use the same browser tab. It still takes some time to reconnect and is cumbersome to copy n paste the url for every run. A file watcher that reloads the run on the connected instance would serve us great. ",
    "FabioAntunes": "dup https://github.com/DevExpress/testcafe/issues/1624. This is definitely a must have, I spent a couple of hours trying to figure why my tests were failing, since the error message didn't had any info related to that. As newcomer it was a bit frustrating.. ",
    "rvratner": "Hi,\nThanks for your follow up.\nI'm using Chrome. There's no js errors in the console when I run the test manually, and when I run it in incognito mode, the test still fails. \nI see the page load, I see the pointer clicking on the desired object, and the desired action happens (in this case, a popup opens) and then it throws an unknown error.\nIs there any way to get more detail on what the error is?\n\n. Thanks\nI can't share the application's because it's under a NDA. When I run --skip-js-errors, I still get the same errors. It runs each test, which right now, just tries to find an element and click on it. Clicks on the element, and then shows the same error (on, what seems to be the click event). There's no JS errors in the console when manually running that scrip. What other actions can I take to help identify?\n\nthanks for your help,\nRachel\n. ",
    "Hendriksie": "I just started using testcafe and I have encountered the exact same issue using Chrome 61.0.3163 / Windows 10 0.0.0.\nA colleague of mine, using a Macbook, does not encounter the problem.\nThe problem seems to be with hammerhead, I ran testcafe remotely and by manually using the generated URL I visited the page using chrome and I encountered the following error:\n\nI've also tried it with a complete refresh on node_modules, and I have tried it using the dev version of testcafe but I still encounter this problem.\nEdit:\nI have reset chrome settings and everything went fine now.. ",
    "fiws": "Thanks for the fast feedback. Yep I got xorg-server-xwayland installed (and it's \"still\" not working).. Hi. No, but i just installed it and rebootet. Still the same result.. ",
    "watermelonjuice": "I can confirm this problem exists in xorg and xvnc and is unrelated to wayland. It also happens with headless chrome.. In headless chrome the process remains running. \nhttps://gist.github.com/watermelonjuice/bba06fb22848fd20cc92c52790803d89. In headless chromium, the process stays alive even after installing xorg-xwininfo.\nIn regular chromium, the process stays alive even after installing xorg-xwininfo. Running xfce4 in xvnc.\nPlease note, I am using chromium not chrome in case that makes a difference.. btw, if SIGINT is sent to testcafe process the browser is also killed.. This happens both when tests are successful and when chrome process crashes due to going over 2GB memory consumption. \nTestcafe version: 0.17.0\nNode version: v8.3.0. Use a proxy like privoxy to do this.. ",
    "patrikmolsson": "By installing xorg-xwininfo the issue was resolved for me. \nUsing google-chrome (not chromium), i3 and xorg.. ",
    "roman-udka": "I have got  same issue on Mac OS\n\n. ",
    "TatriX": "preserveUrl helped with my react app. Actually I think preserving urls should be a default behavior because it's not obvious why test redirects to a login page in scenario like this:\n```javascript\n    await t\n        .useRole(testUser)\n        .expect(logout.exists).ok();\nconst location = await t.eval(() => window.location); // redirect to the login page\nawait t.expect(location.pathname).eql(\"/\");\n\n```. I see, thanks.. ",
    "redfox256": "i can confirm that the same error occurs using teamcity.\ntestcafe waits for the browser to open then eventually timesout.\nrunning the same example directly from the machine works fine, but not through any CI tool. Hi Andrey \nAfter making the changes on Windows 7 'Allow service to interest with desktop' started running the tests in chrome and firefox but still not in IE, left the same message as above.\nAnd on Windows 10 changing NoInteractiveServices to zero and also ticking 'Allow service to interest with desktop' now runs fine in chrome but not in firefox and ie (even rebooted the system in hope it might work). Running from the command line works like a charm.\nStarted all the slaves up with the command below and browsers started opening running the tests.\njava -jar slave.jar -jnlpUrl http://jenkins_url/slave-agent.jnlp -secret the_secret\nThanks for the help.. ",
    "3562Nathan": "Thanks Andrey.. ",
    "arobertpk": "Indeed this works if I log in to the remote Windows slave and start the agent from the command line.  However we don't want to manage this startup manually ourselves, but run Jenkins from a Windows service, which works fine for Chrome and Firefox.  (We have made the registry and service changes to allow interactivity and rebooted, which allowed Firefox to run, but still not IE.)  Should I open a new issue for starting IE when the Jenkins agent runs as a service, or can we reopen this ticket?. @AndreyBelym Thanks, we will try these work-arounds.  I don't want to bug you guys further, but still just trying to connect \"Windows prevents running GUI apps from services\" with the fact that Chrome and Firefox GUI apps work fine.  Is there some kind of automatic headless mode that both Chrome and Firefox (partially, since we needed service/reg changes for the latter) are invoking behind the scenes, which IE11 lacks?. ",
    "oliversturm": "This happens the same way on my system. I'm passing --private-window (double dash), but the behavior is the same. \n\nOperating system: Ubuntu 16.10\ntestcafe version: 0.17.1\nnode.js: 8.4.0. \n",
    "fkartika": "Hello @AlekseyMartynov i tried using User Roles feature, but it's always failed when i try switch roles\ncan you provide an example how to use it as the helpers file? Thanks!. Thanks for the reply @AlekseyMartynov !\nand then i found the problem is the first credential still stored on session, so when i switch to other role the page is reloaded to login page, but not with the new credential. It's still previous credential. I test an Angular page. Do you know why this is happening?. no @AlexanderMoskovkin it's not happen in your example. Your example works well.. ",
    "neelay": "const menuToggleBar =  Selector('#menu-toggle');\n    const offset = await menuToggleBar.offsetWidth\n    if (offset>0){\n        await t\n            .click(menuToggleBar)\n    }\nI was incorrectly doing await on Selector()\nIt works now.. thank you @AlexanderMoskovkin. \nYour solutions is more elegant and it works. . ",
    "avozicov": "Hello @AndreyBelym , sorry I forgot to mention that I am running tests in the same time with Chrome browser.  (on local and in Travis CI) \n\nChrome version 60.0.3112.90\nFirefox version 54.0.1 (64-bit) . @AndreyBelym \n\nI have monitored the resource usage with Firefox browser on my local machine and the result is \n~ 4.5gb from 8gb available for memory\nWhen I am running both Firefox and Chrome browsers the memory is encreased up to 5gb from 8gb available \nUnfortunately I am not able to perform monitoring for Travis build execution but as far as I know there is at least 16gb memory available . Hello @AndreyBelym ,\nI have monitored resource usage for Travis execution, please refer to attachment for more details.\n\n. @miherlosev got it, I will come back with updates ;)\nthank you! . Hello @AndreyBelym !\nThank you for the reply ;)\nYes, I have followed the instructions from your documentation and we are not facing any issues with running tests in Travis CI. The scripts which are not using resizeWindow, maximizeWindow, resizeWindowToFitDevice are passed and everything is working as expected so I am not sure there something wrong with Travis configuration.\nHere is an example of .travis.yml file from our repository \n```\nlanguage: node_js\ngit:\n  depth: 1\ncache:\n  bundler: true\n  directories:\n    - node_modules\n    - \"$(npm root -g)\"\n    - \"$(npm config get prefix)/bin\"\nbranches:\n  only:\n    - master\n    - stage\n    - test\n    - build\n    - dev\nenv:\n  global:\n    - DEEP_NO_INTERACTION=1\n    # AWS_ACCOUNT_ID=[secure]\n    - secure:\nstage: \"Run Unit Tests :clipboard:\"\nnode_js:\n  - 6\n  - 8\nbefore_install:\n  - source bin/deploy/init.sh\nscript:\n  - recink run unit -c recink-codeclimate -c recink-snyk\njobs:\n  include:\n    - stage: \"Deploy To :cloud:\"\n      node_js: 6\n      script:\n        - if [ ${ALLOW_DEPLOY} == 1 ]; then node bin/deploy; else echo \"Skipping deploy\"; fi\n      after_failure:\n        - deepify undeploy src --loglevel=debug\n- stage: \"Run e2e Tests :clipboard:\"\n  node_js: 8\n  script:\n    - if [ ${ALLOW_DEPLOY} == 1 ]; then recink run e2e; else echo \"Skipping e2e tests\"; fi\n  addons:\n    firefox: 'latest'\n    chrome: 'beta'\n    apt:\n      packages:\n        - xvfb\n  install:\n    - 'export DISPLAY='':99.0'''\n    - 'Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &'\n\n- stage: \"Page speed :rocket:\"\n  node_js: 6\n  script:\n    - if [ ${ALLOW_DEPLOY} == 1 ]; then recink run unit -s emit -c recink-pagespeed; else echo \"Skipping pagespeed\"; fi\n\n``. Hi @AlexanderMoskovkin ,\nThank you for the prompt reply.. @AlexanderMoskovkin @miherlosev @VasilyStrelyaev \nGreat! Thank you very much!. Hi everyone, \nI am facing the same issue when trying to run my tests in Jenkins CI usingfirefox` browser.\nHere is the log from Jenkins job:\n```\nSwitched to a new branch 'dev'\nBranch dev set up to track remote branch dev from origin.\ne2e@1.0.0 /mnt/data/jenkins/jobs/e2e-tests/workspace/tests\n\u251c\u2500\u2500 chance@1.0.18 \n\u2514\u2500\u2500 testcafe@1.0.1 \nnpm WARN e2e@1.0.0 No description\nnpm WARN e2e@1.0.0 No repository field.\nUsing locally installed version of TestCafe.\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nType \"testcafe -h\" for help.\nBuild step 'Execute shell' marked build as failure\nFinished: FAILURE\n```. UPDATE ^^\nSorry for spam here ;)\nJust found the older answer for this issue from @AndreyBelym  and it solved the error.\nHope this helps:\nhttps://github.com/DevExpress/testcafe/issues/1133#issuecomment-353849065. ",
    "gyopiazza": "Thanks @AlexanderMoskovkin, that might work!. Hey @AndreyBelym!\nThanks for the fast response, and you guessed right, I'm using the TestCafe API. The tests are just simple click/type/waitFor actions which I don't think it's related to the problem because it happens randomly. Please let me know if an example of the tests I run could give you more hints and I'll share it too. This is how I instantiate TestCafe:\n```\nconst tests = ['test1.js', 'test2.js' /.../];\ncreateTestCafe('localhost', 9918, 9919)\n        .then(tc => {\n           const testcafe = tc;\n           const runner = testcafe.createRunner();\n       return runner\n          .src(tests)\n          .browsers('chrome:headless')\n          .concurrency(10)\n          .run({\n             skipJsErrors: true,\n             quarantineMode: true\n           });\n    })\n    .then(failedCount => {\n        console.log('Tests failed: ' + failedCount);\n    })\n    .catch(function(error) {\n        throw(error);\n    });\n\n```\nI expected the \"quarantine\" mode to take care of these situations but I guess it only kicks-in when the actual tests fail, and not for other errors. At first I thought it could be a \"computer resources bottleneck\" so I tried with a very low concurrency of 2 and even 1 (no concurrency) but the error still randomly appears. However, it didn't happen in the old version of TestCafe (>15.1.317053) but we could really benefit of the concurrency and other new features.\nYour idea of restarting the browser or use another available instance sounds exactly what we need here. Basically when the browser is not responding TestCafe could kill the process and spawn a new one, without crashing the whole tests suite.. Hello @AlexanderMoskovkin,\nJust to clarify, I'm not asking to output the \"test started\" info in the console reporter, but to fire the event \"reportTestStart\" as part of the TestCafe API. Then it would be a reporter's responsibility to make sure the output is nice and readable. Or even ignore the event (just like the current reporter's behaviour).\nIf a reporter wants to output the \"reportTestStart\" event, maybe something like this could work (imagine it with nice colors):\nFixture 1 started\nFixture 1 - test1 started\nFixture 1 - test2 started\nFixture 1 - test3 started\nFixture 1 - v test2 passed\nFixture 1 - test4 started\nFixture 1 - x test1 failed\n  Error details\n...\nI'm suggesting this because I've created a simple UI to run the tests in concurrency mode and it would be nice to get real time reporting of all the running tests and their statuses. Without \"reportTestStart\" event the UI seems stuck and it updates kind of randomly. It simply doesn't give a nice feeling of progress going on.\nIf this suggestion doesn't make sense or you don't think it's a good idea, please feel free to close this issue. :)\nAs always, thank you for the feedback!. ",
    "Master244": "+1 it doens't matter what I do reinstall add chrome to my path ( I can start it with chrome from terminal ),\nThe testcafe package globally or locally installed will never see any listed browsers running testcafe -b \nInstalled Firefox didn't pop up on -b reinstalled testcafe still no luck and your documentation really lacks on this issue or how to force a default browser.  . I tried with portableChrome but no matter what browser I use it keeps saying unable to find browser. Even if I install the browser in my user folder. Nope, but it might be a problem with my work computer as well, regarding permissions, I will try and install firefox in my user Folder and try again. . but should it work with portable chrome'? Because that I tried and that also didn't work. > testcafe path \"/c/Users/barrybadpak/chrome/GoogleChromePortable\" tests/*/test.js -r list -S -s report/screenshots/ -e --selector-timeout 500000 --assertion-timeout 10000\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"path:\" due to error.\nTypeError: Cannot read property 'trim' of undefined\n    at Object.callee$0$0$ (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\lib\\api\\get-browser-info.js:54:41)\n    at tryCatch (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n    at GeneratorFunctionPrototype.invoke [as _invoke] (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:334:22)\n    at GeneratorFunctionPrototype.prototype.(anonymous function) [as next] (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:105:21)\n    at tryCatch (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n    at invoke (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:146:20)\n    at C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:154:13. also tried with adding the executable, /c/Users/barrybadpak/chrome/GoogleChromePortable/chrome.exe. I already noticed that and tried that same error ( see previous message ) , then I got it to work with the nightmare browser. But then I took the trouble of getting a new computer here at work with full root acces, that one does run with chrome and all my test pass. On my own computer not with root acces ( work laptop ) they all fail with nightmare. Any ideas?. https://github.com/ryx/testcafe-browser-provider-nightmare/issues/7 In nightmare I googled my errors and I think it has something to do with the fact that the window size is too small and the buttons don't appear properly ( our site is not so responsive yet ) but preferable I will try your command. Because during devloping seeing the test is way better :) ( the screenshots don't tell me a lot ) . \n. testcafe \"path:C:\\Users\\barrybadpak\\chrome\\GoogleChromePortable\\chrome.exe\" tests/*/test.js\nI tried this too but it says same error:\ntestcafe \"path:C:\\Users\\barrybadpak\\chrome\\GoogleChromePortable\\chrome.exe\" tests/*/test.js\nbash: C:UsersbarrybadpakchromeGoogleChromePortablechrome.exe: command not found\nUsing locally installed version of TestCafe.\nERROR Was unable to open the browser \"path:\" due to error.\nTypeError: Cannot read property 'trim' of undefined\n    at Object.callee$0$0$ (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\lib\\api\\get-browser-info.js:54:41)\n    at tryCatch (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n    at GeneratorFunctionPrototype.invoke [as _invoke] (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:334:22)\n    at GeneratorFunctionPrototype.prototype.(anonymous function) [as next] (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:105:21)\n    at tryCatch (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:72:40)\n    at invoke (C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:146:20)\n    at C:\\Users\\barrybadpak\\WORK\\end-to-end-test\\node_modules\\testcafe-browser-tools\\node_modules\\babel-runtime\\regenerator\\runtime.js:154:13. but using the path with a CD command does work. @AndreyBelym That worked! Though it started up the browser nothing seems to be happening. The full command im using now is \ntestcafe \"path:/c//Users//barrybadpak//chrome//GoogleChromePortable//chrome.exe\" -r list -S -s report/screenshots/ -e --selector-timeout 500000 --assertion-timeout 10000. Just stating that this all works perfectly fine on a exactly the same machine thus with root access and the build in chrome browser. A workarround for this if your user does not have access to program files, copy paste the chrome folder somewhere within your user folder and specify the path. \n\"test\": \"testcafe path:C:\\Users\\barrybadpak\\chrome\\GoogleChromePortable\\chrome.exe tests/*/test.js -r list -S -s report/screenshots/ -e --selector-timeout 500000 --assertion-timeout 10000\"\ndon't use `` . ",
    "jiteshsojitra": "\n\nsince there is an equivalent already.\n\n\nHow can we log information or actions performed by TestCafe method? Is there any equivalent already?. As far as this ticket is concerned, we want to log information/actions performed by TestCafe in console, for e.g.\nt.click('bar');\nx.log('double click the foo');. It requires to change all the tests to include function which is not good. Any better way without changing much?. Reference: https://github.com/DevExpress/testcafe/issues/2823. Interestingly it works fine with v0.22.0.. Yes, i would like to really reopen this bug because reload problem is still exists and really affecting us to upgrade. Sometime it works fine 2 out of 10 attempts with one browser instance ONLY, when try with 10 instances it always fails for me. I even tried https://stackoverflow.com/questions/39599736/window-reload-doesnt-reload-my-page but no luck and TestCafe hangs at reload page and takes forever. After manually reloading page, it shows below error assuming TestCafe was hanged there?\nawait t.eval(() => window.location.href = window.location.href);\n\n```\nDecodingTransformer.prototype.transform = function () {\n         270 |    this.visitedRefs[0] = true;\n       > 271 |    this._handleValue(this.references[0], this.references, 0);\n         272 |\n         273 |    return this.references[0];\n         274 |};\n```\nI'm quite sure something is wrong in this area and it blocks us to upgrade TestCafe v0.23.2. We didn't upgrade TestCafe just because of this reason since reported in October and previous release was certainly fine. Any solution/work around please?. Wow, it worked with latest alpha version (0.23.3-alpha.2) instead of last stable release (0.23.2). Thanks @LavrovArtem for fixing this and i can see stability back. Awesome, i can go ahead and upgrade now.. Here is the problem:\nTests:\ntest.meta({ web: 'true', mobile: 'false', suite: 'sanity' })(`Create folder1`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder2`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder3`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'functional' })(`Modify folder1`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'functional' })(`Modify folder2`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'functional' })(`Modify folder3`, async t => { ... });\n\nTest pattern:\nRun tests where pattern matches to 'Create' and suite = sanity or smoke.\ntestcafe -e -q chrome . -T 'Create' --test-meta 'web=true,suite=sanity,suite=smoke'\n\nActual result (Only runs below 2 tests):\nIt looks like --test-meta only picks last 'suite=smoke' and intial ignores 'suite=sanity'. Is there any solution for performing OR operation instead of AND without defining another meta variable?\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder2`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder3`, async t => { ... });\n\nExpected result (Run first 3 tests):\ntest.meta({ web: 'true', mobile: 'false', suite: 'sanity' })(`Create folder1`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder2`, async t => { ... });\ntest.meta({ web: 'true', mobile: 'false', suite: 'smoke' })(`Create folder3`, async t => { ... });. Sorry but as mentioned in the question, i don't want to refresh the page after each tests but would like to refresh the page after fixture to save the time and free occupied resources. Please reopen the question.. Our application occupies some memory which it releases on refreshing browser but we don't want to reload browser on each tests but once per fixture only. If we reload the browser on each test then it will obviously will take more time because application waits till it loads fine.. @Farfurix, i think you didn't understand about the actual problem. I would like to refresh page from fixture using @after method..\n",
    "theredwillow": "const cityTags = await Selector(\".city.boldTxt\");\n    console.log(\"CITYTAGS:\", cityTags);\nConsole.log does not log anything for me within a test() function (in neither the browser the tests are running in, nor the terminal). Am I misunderstanding something? How are we supposed to debug what the Selector is grabbing?. ",
    "zhangtasdq": "@AndreyBelym Thanks  for your reply and advice!. ",
    "bisubus": "@inikulin I came up with exactly same problem and I consider it a vital one.\nEvery other test runner supports config files for a good reason, because they are convenient. CLI arguments can be lengthy, harder to read and maintain. They aren't extendable.\nConsidering that there's a script:\n\"scripts\": {\n    \"test\": \"testcafe ...a lot of args... chrome:headless ./test/e2e/**/*.e2e.ts\"\n  },\nIf a user wants to change some of the options (e.g. concurrency and browser), entire command line should be pasted. We can't even override options with npm run test -- -c 1 ie, because testcafe args aren't parsed that way. While it would be enough to pick up config file and override some options: \ntestcafe --config ./test/testcafe.json -c 1 ie. I would suggest to extend the proposal with several points made in #2234:\n\n\nMultiple asset types (scripts, styles, fonts), useful for UI/visual regression testing or any cases that would require to apply test-related changes to application code otherwise\n\n\nMultiple asset insertion positions (start and end of head and body), with end of document body as default value\n\n\n'Here and now' asset insertion position for fixture/test assets, a shortcut for t.eval () => { document.createElement... }, also accepts a ClientFunction\n\n\nLocal assets that are resolved from NPM module name or relative path, a shortcut for fs.readFileSync('require.resolve('module'), 'utf8') (currently included as is, no bundling or transpilation)\n\n\nRemote CDN assets identified by URL\n\n\nFixture assets\n\n\nTest assets\n\n\nGlobal assets for entire test run (similar to Karma files) as runner and CLI options\n\n\nCurrently the framework has undocumented embeddingOptions runner method, it makes an asset  (script or style) being served by TestCafe server, is available only on runner init but not in CLI. Another part of the process is internal testRun.injectable property that allows to push served script/style to <head>, it seems to be reachable in specs as t.testRun.injectable but is unavailable on runner init.. I had similar difficulty, but it seems to me that the only reason why test.before and test.after can be used is that they cancel beforeEach and afterEach. If they shouldn't cancel them then this\ntest(async t => { /* test */ })\n.before(async t => { /* before */ })\n.after(async => { /* after */ })\nis basically same thing as\ntest(async t => {\n  try {\n    /* before */\n    /* test */\n  } finally {\n    /* after */\n  }\n}). ",
    "lawrentiy": "config file is an extreme necessity.\nPlease, answer what is the reason to close that issue?\nIs there some technical issues or something else?\nThnx!. ",
    "ajhsu": "Hi @AlexanderMoskovkin ,\nI will take a look into request hooks, thanks for your kindly reply!. ",
    "javiercbk": "Cookies are not proxied with a 403 response. I will try to reproduce this with a small project (because I need a backend and a frontend to test this). Ok, I'll make a node.js app and an e2e test and publish the project in github. This test case reproduces the bug consistently. The problem arises when a cookie is created within a response of an iframe.\nTo reproduce this issue run the application and test it for yourself, you'll see that the cookies are shown, but when running with testcafe, the cookies are not shown. The e2e-cookies.test.js asserts this bug. Found a workaround https://codepen.io/javiercbk/full/NXLGGV/\nThe original case:\njs\nconst f = files.item(i);\nThe modification:\njs\nlet f;\ntry {\n  f = files.item(i);\n} catch (err) {\n  if (err.message === 'Illegal invocation') {\n    f = files[i];\n  } else {\n    throw err;\n  }\n}. Thanks for your quick answer,\nI've modified the test scenario to best explain the issue. consider three buttons. I want to click all visible buttons using a single selector.\nhtml\n<html>\n  <body>\n    <button>Visible button</p>\n    <button style=\"display:none\">Invisible button</p>\n    <button>Other visible button</p>\n  </body>\n</html>\nSo the strategy is the following. I create a function called mapSelector, it takes a selector and executes a function for every matched element by the selector. Alternatively you can modify how the mapSelector function grabs the following element by providing a third (optional) parameter. By default it chooses the next element.\nI'll leave this example to anyone which encounters the same issue\n```js\nimport { Selector } from 'testcafe';\nimport Promise from 'bluebird';\nfixture('clickOnlyVisible').page('https://codepen.io/javiercbk/full/MrxEME/');\nconst nextNth = (selector, index) => selector.nth(index);\n/*\n * mapSelector executes a function for every element selected by the selector\n * @param {Object} selector a Selector instance.\n * @param {Function} fun is the function to execute on every command. It should return a Promise\n * @param {Function} nth optional function that chooses the index.\n /\nconst mapSelector = async (selector, fun, nth = nextNth) => {\n  const count = await selector.count; // counts even the invisible, thus triggering an error when attempting to click the element\n  await Promise.map(new Array(count), (v, index) => fun(nth(selector, index)), { concurrency: 1 });\n};\ntest('click all buttons', async (t) => {\n  await t.switchToIframe('#result');\n  const buttons = Selector('button', { visibilityCheck: true });\n  // t.click(buttons); // will only click the first one, so does not fulfill my expectation\n  await mapSelector(buttons, el => t.click(el)); // will fail because testcafe will try to click invisible elements\n});\ntest('click all buttons #2', async (t) => {\n  await t.switchToIframe('#result');\n  const buttons = Selector('button', { visibilityCheck: true });\n  await mapSelector(buttons, el =>\n    el\n      .with({ boundTestRun: t })\n      .visible // now I check if it is visible\n      .then(() => t.click(el))); // triggers an error, element does not exist (counts retuns 3 but selector only returns 2)\n});\ntest('click all buttons #3', async (t) => {\n  await t.switchToIframe('#result');\n  const buttons = Selector('button', { visibilityCheck: false }).with({ boundTestRun: t });\n  await mapSelector(buttons, el =>\n    el.visible // now I check if it is visible with visibilityCheck: false\n      .then((isVisible) => {\n        if (isVisible) {\n          // manually checking works\n          return t.click(el);\n        }\n      }));\n});\n```\nThe test log output:\n```\nclickOnlyVisible\n \u2716 click all buttons\n1) The element that matches the specified selector is not visible.\n  Browser: Chrome 63.0.3239 / Mac OS X 10.13.2\n\n     18 |\n     19 |test('click all buttons', async (t) => {\n     20 |  await t.switchToIframe('#result');\n     21 |  const buttons = Selector('button', { visibilityCheck: true });\n     22 |  // t.click(buttons); // will only click the first one, so does not fulfill my expectation\n   > 23 |  await mapSelector(buttons, el => t.click(el)); // will fail because testcafe will try to click invisible elements\n     24 |});\n     25 |\n     26 |test('click all buttons #2', async (t) => {\n     27 |  await t.switchToIframe('#result');\n     28 |  const buttons = Selector('button', { visibilityCheck: true }).with({ boundTestRun: t });\n\n     at <anonymous> (test/tests/click-all-buttons.test.js:23:38)\n     at _bluebird2.default.map.concurrency (test/tests/click-all-buttons.test.js:16:53)\n     at tryCatcher (test/node_modules/bluebird/js/release/util.js:16:23)\n     at MappingPromiseArray._promiseFulfilled (test/node_modules/bluebird/js/release/map.js:61:38)\n     at MappingPromiseArray._drainQueue (test/node_modules/bluebird/js/release/map.js:115:14)\n     at MappingPromiseArray._promiseFulfilled (test/node_modules/bluebird/js/release/map.js:46:18)\n     at Promise._settlePromise (test/node_modules/bluebird/js/release/promise.js:574:26)\n     at Promise._settlePromise0 (test/node_modules/bluebird/js/release/promise.js:614:10)\n     at Promise._settlePromises (test/node_modules/bluebird/js/release/promise.js:693:18)\n     at Async._drainQueue (test/node_modules/bluebird/js/release/async.js:133:16)\n     at Async._drainQueues (test/node_modules/bluebird/js/release/async.js:143:10)\n     at Immediate.Async.drainQueues [as _onImmediate] (test/node_modules/bluebird/js/release/async.js:17:14)\n\n\u2716 click all buttons #2\n1) Cannot obtain information about the node because the specified selector does not match any node in the DOM tree.\n  Browser: Chrome 63.0.3239 / Mac OS X 10.13.2\n\n     25 |\n     26 |test('click all buttons #2', async (t) => {\n     27 |  await t.switchToIframe('#result');\n     28 |  const buttons = Selector('button', { visibilityCheck: true }).with({ boundTestRun: t });\n     29 |  await mapSelector(buttons, el =>\n   > 30 |    el.visible // now I check if it is visible\n     31 |      .then(() => t.click(el))); // triggers an error, element does not exist (counts retuns 3 but selector only returns 2)\n     32 |});\n     33 |\n     34 |test('click all buttons #2', async (t) => {\n     35 |  await t.switchToIframe('#result');\n\n     at <anonymous> (test/tests/click-all-buttons.test.js:30:8)\n     at _bluebird2.default.map.concurrency (test/tests/click-all-buttons.test.js:16:53)\n     at tryCatcher (test/node_modules/bluebird/js/release/util.js:16:23)\n     at MappingPromiseArray._promiseFulfilled (test/node_modules/bluebird/js/release/map.js:61:38)\n     at MappingPromiseArray._drainQueue (test/node_modules/bluebird/js/release/map.js:115:14)\n     at MappingPromiseArray._promiseFulfilled (test/node_modules/bluebird/js/release/map.js:46:18)\n     at Promise._settlePromise (test/node_modules/bluebird/js/release/promise.js:574:26)\n     at Promise._settlePromise0 (test/node_modules/bluebird/js/release/promise.js:614:10)\n     at Promise._settlePromises (test/node_modules/bluebird/js/release/promise.js:693:18)\n     at Async._drainQueue (test/node_modules/bluebird/js/release/async.js:133:16)\n     at Async._drainQueues (test/node_modules/bluebird/js/release/async.js:143:10)\n     at Immediate.Async.drainQueues [as _onImmediate] (test/node_modules/bluebird/js/release/async.js:17:14)\n\n\u2713 click all buttons #3\n2/3 failed (33s)\n```\nThanks. ",
    "csi-lk": "~~Hmm i'm getting this issue locally after adapting @churkin 's solution~~\nShouldn't have posted too quickly, browser needs to load the URL before setting the cookie or it will not work, working code below\n```javascript\nconst {\n  ClientFunction,\n} = require('testcafe')\nconst setCookie = ClientFunction(() => {\n  document.cookie = 'cookiename=cookievalue'\n})\nmodule.exports = function defineSteps({ given, then }) {\n  given('I am logged in', async (t) => {\n    await t.navigateTo('http://localhost:8008/login')\n    await setCookie()\n  })\n}\n```\n(wasted more time on this than i'd like to admit) . ",
    "dimascyriaco": "\nbrowser needs to load the URL before setting the cookie\n\nI was having the same problem and this solved the problem for me.\nChanged my test to:\n`` js\nfixtureList Page.pagehttp://comunicacao.local.plurall.net:5000`\ntest('Renders the message title', async t => {\n  await t\n    .useRole(user)\n    .navigateTo('http://comunicacao.local.plurall.net:5000/mensagens')\n    .expect(Selector('.title').withText('T\u00edtulo'))\n})\n```\nI have removed the .page from the fixture definition, and just had to put it back.\nBut it makes the page renders twice. Is it possible to set the cookie before the first render?. Sorry, forgot the role definition.\nDon't know if this is the best place to put the setCookie function, but it's workind all right.\njavascript\nconst user = Role('http://comunicacao.local.plurall.net:5000/test', async t => {\n  const setCookie = ClientFunction(() => {\n    document.cookie = 'access_token=31ac8a8bc4853d10b5b596aedb5d2df0'\n  })\n  await setCookie()\n})\nAnd since then I have removed the .page from the fixture definition.\nBut I think the role definition still renders the page, so we still have two pages rendering.. ",
    "ChiuMungZitAlexander": "\nSorry, forgot the role definition.\nDon't know if this is the best place to put the setCookie function, but it's workind all right.\njs\nconst user = Role('http://comunicacao.local.plurall.net:5000/test', async t => {\n  const setCookie = ClientFunction(() => {\n    document.cookie = 'access_token=31ac8a8bc4853d10b5b596aedb5d2df0'\n  })\n  await setCookie()\n})\nAnd since then I have removed the .page from the fixture definition.\nBut I think the role definition still renders the page, so we still have two pages rendering.\n\nGJ, my bro! Same problem and solved!. ",
    "cmbirk": "Thanks @AndreyBelym !!. I'm having this same issue with testcafe ^0.23.3 and node v10.15.0.  Should I open a new issue to track? @LavrovArtem . @AndreyBelym you are absolutely correct. It seems my Eero router was blocking this. Tethering to my phone or using a different network has resolved this issue. I'm closing this, and thanks for the help!. ",
    "mostley": "Did in the last year by chance the architecture change to allow for this feature?. ",
    "Farfurix": "Hello, @mostley.\nThank you for your interest in this feature.\nWhile we do not have plans to implement it in the near future, we consider this idea as a potential improvement and keep it on our radar.. I'm working on this. I'm working on it. @viking2917 Hello, \"twice click\" test failed in Edge / Windows 10 / TestCafe 0.19.2. Could you please specify your browser/OS configuration, it's Safari  / Mac OS X 10.13.3 / TestCafe 0.19.2?. @viking2917 Thanks for your feedback, I'm glad that the problem is solved.. I'm working on it. I'm working on it. Hello, @davidcunha.\nWhile we are working on this problem, you can use the following workaround:\ndiff\n  .respond({\n    id: 1,\n    name: \"John Doe\"\n-  }, 200, {'Access-Control-Allow-Origin': '*'});\n+  }, 200, {'access-control-allow-origin': '*'});. @dlangerenken.\nHello.\nAt present, we are going to prevent the silent fail using an error. However, we will take your suggestion into account for the future.. I'm working on it.. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. @testcafe-build-bot retest. I've reproduced the problem on macOS (Node 10.11.0, TestCafe 0.23.0).. I've reproduced the problem on macOS (Node 10.11.0, TestCafe 0.23.0).. @miherlosev i've reproduced NetworkError on testcafe@0.23.1 / Internet Explorer 11 / Windows 10, but authentication is passed and Excel document loaded successfully:\n```js\nimport { Selector } from 'testcafe';\nfixture('Excel online')\n    .page(shared-excel-document-url);\nconst loginInput   = Selector('input').withAttribute('type', 'email');\nconst passInput    = Selector('input').withAttribute('type', 'password');\nconst submitButton = Selector('input').withAttribute('type', 'submit');\nconst noButton     = Selector('input[value=\\'No\\']');\nconst login = '';\nconst pass  = '';\ntest(login, async (t) => {\n    await t.typeText(loginInput, login)\n        .click(submitButton)\n        .typeText(passInput, pass)\n        .click(submitButton)\n        .click(noButton) // Stay signed in? No.\n        .wait(10000);\n});\nResult:\n \u00d7 login\n1) Error on page\n\"shared-excel-document-url\":\n  NetworkError:\n  \u00a0\u00a0\u00a0\u00a0No stack trace available\n\n  Browser: IE 11.0.0 / Windows 10.0.0\n\n```\n@ilyasbasharov, could you please try running your test scenario with the -e option and check if all assertions were successful?. @shariqMohammed92 \nI checked your test project and I can't reproduce this error after upgrading TestCafe to the latest alpha version. Please try\n\"testcafe \":\" 0.23.3-alpha.1\"\nand let us know if it solves the issue.. @automation9006, we have already experienced an\u00a0issue with a similar error. Please try to run your tests with the TestCafe\u00a0testcafe@0.23.3-alpha.1 version and let us know if it solves the issue.. This is not something we have planned to do in the near future. Note that TestCafe helps you organize your tests using the key-value metadata:\n1. https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--test-meta-keyvaluekey2value2.\n2. https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#--fixture-meta-keyvaluekey2value2.\nSimple tests organization example:\n```\ntest.meta({ device: 'mobile', env: 'production' })('Test1')\ntest.meta({ device: 'desktop', env: 'production' })('Test2')\ntest.meta({ device: 'mobile', env: 'production' })('Test3')\ntest.meta({ device: 'desktop', env: 'development' })('Test4')\n// Test1, Test3\ntestcafe chrome my-tests --test-meta device=mobile\n// Test4\ntestcafe chrome my-tests --test-meta device=desktop,env=development\n```. @benjamin33 \nIt is difficult to see the cause of the problem having only the information you provided. In particular it is unclear how you implemented the timeouts you described (\"before starting the second test\"). Could you please provide a small sample project we can run locally and reproduce the problem you reported?\nI also suggest that you add all information we request in the \"bug report\" template. This will help us reduce the number of turnarounds required to understand and reproduce the problem, and thus, will enable us to provide you with a solution faster.. @arthurgeron, please check your project. There is no nested div in the svg tag in your result markup (server:dev):\n\nYour svg.find('.find-me').exists expression returns false in this markup case correctly.\nTry adding the foreignObject element to you markup as follows (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject):\n<svg>\n    <foreignobject>\n        <div class=\"find-me\" />\n     </foreignobject>\n</svg>\nIn this case all your assertions are successful.. @Lukas-Kullmann withText related to the browser specific innerText property.\nFor example, in your case with the Chrome browser we have an extra newline symbol:\n```\n\ndocument.querySelector('a').innerText\n< \"text\n  \"\nTry to add `\\s*` to your `RegEx`:\n/^\\stext\\s$/iu.test(document.querySelector('a').innerText) === true\nThis inquiry is not related to TestCafe and the code above should also work in the browser natively.. @HariHaraReddyD, I fully agree with the concepts that @mkubrycz referred to in his comment. I also suggest that you take a look at [this Stack Overflow thread](https://stackoverflow.com/questions/53542205/testcafe-page-object-model-accessing-all-the-instantiated-objects-with-a-comm/53557657#53557657).  I hope you will find it helpful.. Hello, @guptaakhil.\nWe have just published\u00a0`testcafe@v1.0.0-alpha.2` that contains a fix for this issue. Please update to the mentioned version (`npm install testcafe@v1.0.0-alpha.2`) and let us know the result.. @ParachuteCat,\nThank you for your detailed description. I've reproduced this issue. Our team will research it and find a suitable solution, if any.. Hello, @ahmed-wagdi.\nThere is an incorrect second parameter in your test:js\nconst customHook = new MyRequestHook(/http/, {\n  logRequestHeaders: true,\n  logResponseHeaders: true\n});\nYou need to pass the `responseEventConfigureOpts` object with both `includeHeaders` and `includeBody` properties to your Request Hook. See the following example:js\nimport { Selector, RequestHook } from 'testcafe';\n\nclass MyRequestHook extends RequestHook {\n    constructor (requestFilterRules, responseEventConfigureOpts) {\n        super(requestFilterRules, responseEventConfigureOpts);\n        // ...\n    }\nonRequest (e) {\n    // ...\n}\n\nonResponse (e) {\n    console.log('e.headers:');\n    console.log(e.headers);\n    console.log('e.body:');\n    console.log(e.body);\n}\n\n}\nconst myRequestHook = new MyRequestHook('https://google.com', {\n    includeHeaders: true,\n    includeBody: true\n});\nfixture Fixture\n    .page('https://google.com')\n    .requestHooks(myRequestHook);\ntest('basic', async t => {\n    / some actions /\n});\nResult:\nRunning tests in:\n - Chrome 71.0.3578 / Windows 10.0.0\nFixture\ne.headers:\n{ location: 'https://www.google.com/',\n  'content-type': 'text/html; charset=UTF-8',\n  date: 'Fri, 18 Jan 2019 09:23:43 GMT',\n  expires: 'Sun, 17 Feb 2019 09:23:43 GMT',\n  'cache-control': 'public, max-age=2592000',\n  server: 'gws',\n  'content-length': '220',\n  'x-xss-protection': '1; mode=block',\n  'x-frame-options': 'SAMEORIGIN',\n  'alt-svc': 'quic=\":443\"; ma=2592000; v=\"44,43,39,35\"' }\ne.body:\n\n \u221a basic\n1 passed (2s)\n```\nNote: https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html#understanding-how-testcafe-request-hooks-operate. Hello,\u00a0@maximilianosilva753.\nCould you please clarify what issues you have when you tried to connect Appium and TestCafe and run your test?\nOnce you have started your\u00a0Appium server, you can try one of these approaches to connect the server:\n1. Using the TestCafe API -\u00a0https://testcafe-discuss.devexpress.com/t/is-there-a-way-to-run-test-on-mobile-browser-without-manually-opening-the-url-scanning-qr-code/511/2\n2. Using the Browser Provider -\u00a0https://www.npmjs.com/package/testcafe-browser-provider-selenium\nThis issue looks like a question that would be best\u00a0asked on StackOverflow\u00a0- an amazing platform for users to ask and answer questions. We try to keep the GitHub issues tracker for bugs and feature requests only.. This question is already\u00a0answered on Stack Overflow\u00a0- an amazing platform for users to ask and answer questions.. Hello, @joma74.\nThank you for the detailed description. Unfortunately, I can't pass all the reproducing steps. Could you help me resolve this error at the second step (run start command)?\nstart command error:\n```\nrun start\nyarn run v1.13.0\n...\nProject is running at http://0.0.0.0:8080/\nwebpack output is served from /\nChild\nwebpack: Failed to compile.\nERROR in   TypeError: Converting circular structure to JSON\n\n  - JSON.stringify\n\n  - index.js:301 HtmlWebpackPlugin.postProcessHtml\n    [inetingishard-floats]/[html-webpack-plugin]/index.js:301:76\n\n  - index.js:188 applyPluginsAsyncWaterfall.then.result\n    [inetingishard-floats]/[html-webpack-plugin]/index.js:188:34\n\n  - next_tick.js:68 process._tickCallback\n    internal/process/next_tick.js:68:7\n\n``\nI tried to update thehtml-webpack-pluginpackage to the4.0.0-beta.5version and usedchunksSortMode: 'none'`, but it didn't help.\nEnvironment details:\n- Windows 10. Hello, @vvedachalam.\nUnfortunately, this information is not sufficient to find the cause of the issue. There can be many causes, and therefore we can't give you any advice without analyzing your page or code. \n\u00a0\nI suggest that you first install the latest alpha version: npm install testcafe@1.0.0-alpha.2 and try to pass your tests. If this does not help, there are two options to help us determine what is going wrong:\n1. Modify the below example to reproduce this issue.\n2. Debug your test scenario and provide more additional information from the DevTools console.\nExample:\n```html\n\n\n\n\n\n    function testIframe () {\n        var iframe = document.getElementById('iframe1');\n        var contentDocument = iframe.contentDocument;</p>\n<pre><code>    contentDocument.open();\n    contentDocument.write('&lt;div id=\"div1\"&gt;&lt;a id=\"a1\"&gt;anchor&lt;/a&gt;&lt;/div&gt;');\n    contentDocument.close();\n}\n\nsetTimeout(testIframe, 2000);\n</code></pre>\n<p>\n\n\njs\nimport { Selector } from 'testcafe';\nfixture Fixture\n    .page('http://localhost:8080/');\ntest('click', async t => {\n    await t\n        .switchToIframe('#iframe1')\n        .click('#a1');\n});\n``. Hello, @anuragpat1234.\nUnfortunately, this information is not sufficient to find the cause of the issue. There can be many causes, and therefore we can't give you any advice without analyzing your page or code. \n\u00a0\nI suggest that you first install the latest alpha version:npm install testcafe@1.0.0-alpha.2` and try to pass your tests. If this does not help, there are two options to help us determine what is going wrong:\n1. Modify the below example to reproduce this issue.\n2. Debug your test scenario and provide more additional information from the DevTools console.\nExample:\n```html\n\n\n\n\n\n    function testIframe () {\n        var iframe = document.getElementById('iframe1');\n        var contentDocument = iframe.contentDocument;</p>\n<pre><code>    contentDocument.open();\n    contentDocument.write('&lt;div id=\"div1\"&gt;&lt;a id=\"a1\"&gt;anchor&lt;/a&gt;&lt;/div&gt;');\n    contentDocument.close();\n}\n\nsetTimeout(testIframe, 2000);\n</code></pre>\n<p>\n\n\njs\nimport { Selector } from 'testcafe';\nfixture Fixture\n    .page('http://localhost:8080/');\ntest('click', async t => {\n    await t\n        .switchToIframe('#iframe1')\n        .click('#a1');\n});\n``. Hello @dlangerenken,\nThank you for your detailed description. I've reproduced this issue on Windows 10 / Chrome. Our team will research it and check for a suitable solution.\n\u00a0\n**Here is an example in which this problem is reproduced (without theswitchToIframe` method): example.zip**. Hello, @oemekaogala.\nYou are using an outdated TestCafe version.\nPlease update your TestCafe to 1.0.0-alpha.4 (npm install testcafe@1.0.0-alpha.4) to see if this issue has been addressed in a newer version.\n\u00a0\nIf you still have the same issue, could you please clarify the following?\n1. Do you have a global TestCafe version (you need to use the npm list -g testcafe command)?\n2. Capture your directory structure by executing ls -R | grep node_modules >structure.txt or dir /s /b /a:d | findstr node_modules >structure.txt from the root directory, and send it to me. You can also try to delete the node_modules directory from your project's root and all parent directories of your project's directory. Then try to reinstall modules by using your package manager (npm install).\n3. Do you have this issue with the test below if you add it to your test environment?\n```js\nimport https from 'https';\nimport { Selector } from 'testcafe';\nfixture My fixture\n    .page https://google.com/;\nconst elementWithId = Selector(id => document.getElementById(id));\ntest('get body textContent', async t => {\n    const boundSelector = elementWithId.with({ boundTestRun: t });\nconst match = await new Promise(resolve => {\n    const options = {\n        hostname: 'encrypted.google.com',\n        port: 443,\n        path: '/',\n        method: 'GET'\n    };\n\n    const req = https.request(options, res => {\n        if(res.statusCode === 301) {\n\n            console.log('ok');\n\n            boundSelector('gsr').then(el => {\n                resolve(el.textContent.indexOf('google') > -1);\n            });\n        }\n    });\n\n    req.end();\n});\n\nawait t.expect(match).ok();\n\n});\n``. @oemekaogala,\u00a0\n\u00a0\nThank you for additional information.\u00a0\n\u00a0\nThis issue relates to thenpmpackage linking. Global TestCafe in your \"dummy website package\" cannot find the local TestCafe version from your \"test package\" (npm install path/to/test-package).\nAs a workaround you can install your \"test package\" using the following command:npm pack path/to/test-package && npm install test-package-1.0.0.tgz`. Please try this and see how it works.. @sijosyn,\nI've reproduced this issue here:\u00a0https://github.com/DevExpress/testcafe-hammerhead/issues/1920#issuecomment-463155015.\nOur team will research it and check for a suitable solution.. @sijosyn,\nHello.\u00a0\n\u00a0\nI didn't reproduce the \"Cannot read property 'callsite' of undefined\" issue on Node v8.11.1 / testcafe@1.0.0. But I saw unstable results with AssertionError and specified selector does not match any node in the DOM tree errors.\nLet's keep all information of your repository in this issue.\u00a0Our team will research your issue\u00a0in that context.. @JustinRong,\nUnfortunately, this information is not sufficient to find the cause of the issue. There can be many causes, and, therefore, we can't give you any advice without analyzing your page or code.\nCould you please reproduce the issue on some public site and share its URL? Or could you prepare a sample project which demonstrates the issue?. Hello, @BobLuursema.\nThank you for the update. We look forward to hearing from you.. @BobLuursema,\n\u00a0\nWe are happy to hear that the problem is solved. If you have another question related to this issue, feel free to reopen it.. Hello, @inctec-leo.\nThank you for providing additional information. I reproduced this issue on Windows 10, but I didn't reproduce it on another machine. I'm not sure if the issue is related to the Role mechanism. While we are working on it, you can use the following workaround:\n```js\nimport { Role, RequestMock } from 'testcafe';\nconst authUserRole = Role('http://localhost:8080/login', async t => {\n    await t.typeText('#login-email', 'email');\n    await t.typeText('#login-password', 'password');\n});\nconst mock = RequestMock()\n    .onRequestTo('/story/stories')\n    .respond('test', 200);\nfixture(Main Page)\n    .page('http://localhost:8080/');\ntest\n    .requestHooks(mock)\n    ('When logged in the user sees the list of stories', async t => {\n        await t.useRole(authUserRole);\n        // ...\n});\n```. @inctec-leo.\n\"http requests are not being mocked when using RequestMock\". \nI prepared a simple example and it's passed as expected. In the example below, I attached RequestMock to test: \u00a0\n```js\nimport { RequestMock } from \"testcafe\";\nfixture My Fixture\n    .page https://google.com;\nconst mock = RequestMock()\n    .onRequestTo('https://google.com')\n    .respond('test', 200);\ntest\n    .requestHooks(mock)\n    ('test', async (t) => {\n    await t\n        .wait(1000);\n});\n``\nCould you please try to useRequestMock` as shown above?\nAlso I tested your test scenario with only nock mocking and got the delay and unstable behavior. We need some additional time to investigate your case.. @ampc \nHello, thank you for providing additional information.\nI've reproduced it on Windows 10 / Chrome.\nI suppose this issue is related to the following code:\njs\nthis.eventSimulator[bubblesEventType](el, relatedTarget); // bubblesEventType === 'focusout'\nOur team will research it and check for a suitable solution.. @boerdjamin.\nTestCafe cannot restart the loop in the catch block or restart the test without closing your application. We don't recommend using such scenarios with TestCafe API methods' try/catch logic because this will break the chain of promises.. @walidanwar75\n\u00a0\nThank you for your investigation.\nIn practice, we didn't use this authentication system in our environment. If I understand it correctly, you can use the following snippet partially in your Custom Hook:\n```js\n//cut phrase \"Negotiate\"\nvar ticket = req.headers.authorization.substring(10);\n//init context\nkerberos.authGSSServerInit(\"HTTP\", function(err, context) {\n  //check ticket\n  kerberos.authGSSServerStep(context, ticket, function(err) {\n    //in success context contains username\n    res.set( 'WWW-Authenticate', 'Negotiate ' + context.response);\n    res.send(context.username);\n  });\n});\n```\n\u00a0\nUseful links:\n1. https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/\n2. https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html\n3. https://github.com/DevExpress/testcafe/issues/2489#issuecomment-420627710\n. @jiteshsojitra.\nCould you please clarify what resources you are going to release and how this will help you save time?. @jiteshsojitra.\nIn the following example, we have one specified\u00a0Start Page\u00a0and, as you can see in your browser, the page is reloaded twice after Test1\u00a0and\u00a0Test2. This is the default behavior.\njs\nfixture `MyFixture`\n    .page `http://devexpress.github.io/testcafe/example`;\n\u00a0test('Test1', async t => {\n    await t.wait(2000);\n});\n\u00a0test('Test2', async t => {\n    await t.wait(2000);\n});\n\u00a0test('Test3', async t => {\n    await t.wait(2000);\n});\n\u00a0\nIf you don't want to reload the page between tests, you need to use the --disable-page-reloads\u00a0flag. Note that this flag is undocumented and experimental, so\u00a0you will need to control all reload cleanups manually: clean cookie, storage, etc. Refer to the following issues for more information:\u00a0DevExpress/testcafe#1770,\u00a0DevExpress/testcafe#2850.. @tomGrisley\nHello.\nThank you for your\u00a0interest in this feature. At present we don't plan to implement it. Here you can see our roadmap update:\u00a0https://github.com/DevExpress/testcafe/pull/3494/files?short_path=8133e7e#diff-8133e7e5c08d1b2cf8e71b95be1c3993. @qualityshepherd,\nHello. Our team will process your feature request in the context of\u00a0https://github.com/DevExpress/testcafe/issues/1345.. @mt0erfztxt, we are happy to hear that the problem is solved. If you have other questions related to this issue, feel free to reopen it.. @b324jll2j3h4lj23h4lj23n.\nHello, if I understand correctly, it is impossible\u00a0to run Internet Explorer 11 with Chrome command line options:\u00a0--allow-insecure-localhost\u00a0and\u00a0--allow-running-insecure-content.\u00a0There are no such options in the\u00a0IE Command-Line Options\u00a0list.\nAlso, this issue looks like a question that would be best\u00a0asked on StackOverflow\u00a0- an amazing platform for users to ask and answer questions.\u00a0We try to keep the GitHub issues tracker for bugs and feature requests only.. @crhistianramirez.\nHello. Thank you for providing the test repository.\nSince you are using \"Adding history entries\" in your page code, you need to specify the Path cookie parameter:\njs\ndocument.cookie = 'mysuperawesomecookie=sadface; path=/';\nOr you can change testPageUrl to https://demo-internal-test.herokuapp.com/login/.\nModified test.ts:\n```js\nimport { Selector, ClientFunction } from 'testcafe';\nconst setCookies = ClientFunction(() => {\n    document.cookie = 'mysuperawesomecookie=sadface; path=/';\n});\nconst getCookie = ClientFunction(() => {\n   return document.cookie;\n});\nconst testPageUrl = 'https://demo-internal-test.herokuapp.com';\n// const testPageUrl = 'https://demo-internal-test.herokuapp.com/login/'; // document.cookie = 'mysuperawesomecookie=sadface';\nfixtureCookies\n    .page(testPageUrl)\n    .beforeEach(async t => {\n        console.log('beforeEach. Set cookies');\n        await setCookies();\n        console.log('beforeEach. Get cookies:                  ' + await getCookie());\n        await t.navigateTo(testPageUrl);\n        console.log('beforeEach. Get cookies after navigateTo: ' + await getCookie());\n    });\ntest('Should have cookie on next page', async t => {\n    console.log('test. Get cookies:                        ' + await getCookie());\n});\n```\nResult:\n```\n Running tests in:\n - Chrome 72.0.3626 / Windows 10.0.0\nCookies\nbeforeEach. Set cookies\nbeforeEach. Get cookies:                  demo_internal_redirectState=%7B%22name%22%3A%22home%22%2C%22params%22%3A%7B%22%23%22%3Anull%7D%7D; mysuperawesomecookie=sadface\nbeforeEach. Get cookies after navigateTo: demo_internal_redirectState=%7B%22name%22%3A%22home%22%2C%22params%22%3A%7B%22%23%22%3Anull%7D%7D; mysuperawesomecookie=sadface\ntest. Get cookies:                        demo_internal_redirectState=%7B%22name%22%3A%22home%22%2C%22params%22%3A%7B%22%23%22%3Anull%7D%7D; mysuperawesomecookie=sadface\n```. @crhistianramirez \nYou're welcome :). ",
    "pittdewaard": "@AlexanderMoskovkin: Hi, first of all: testcafe is really cool stuff! helps me a lot to do my work ...\nI have this issue on Windows 10 with Version 0.18.2 ... any Idea?. Hi @AlexanderMoskovkin,\nthx for the quik response...\nI've just updated to 0.18.4, no change ...\nYes, we use angularjs, but until now without any problem...\nhere my test:\n```\n'use strict';\nimport { Selector, t} from 'testcafe';\nexport default class Z7 {\nconstructor() {\n        this.link = Selector('[ui-sref=\"z2.find\"]');\n        this.dtaLink = Selector('[ui-sref=\"z7.1\"]')\n        this.uploadItem = Selector('input[type=\"file\"]');\n        this.uploadBtn = Selector('div[class=\"btn btn-block upload-button\"]');\n        this.filepathname = './data/10008-1011-dta_fehlerfrei.dta';\n        this.submitBtn = Selector('button[data-translate-once=\"z7-1_button_datei_senden\"]');\n    }\nasync startAssistant() {\n        const waittime = 100;\n        await t\n            .wait(30 * waittime)\n            .click(this.link)\n            .wait(20 * waittime)\n            .click(this.dtaLink)\n            .wait(5 * waittime);\n        await (this.uploadItem).exists;\n        await t\n            .setFilesToUpload(this.uploadItem, [this.filepathname])\n            .click(this.uploadBtn)\n            .wait(2 * waittime)\n            .click(this.submitBtn) //problem in hammerhead js?\n            .debug()\n    }\n}\n```\nand the console error (Crome): \nupload-error-filesize.txt\nInfo from Testafe output: \n\nChrome 62.0.3202 / Windows 10 0.0.0\n\n... and: thank you!\n. hope this is the correct one, pls delete after download ...\n. above was succcesfull, this one failed, it's a huge smaller??\n. so I can delete the zip's?\n. Hi @miherlosev,\nthx to take care about my issue... \nunfortunately  I can't give you a code-snippet to reproduce the error, talked with our development team, but no one came over with a clever idea ... we are using angular-file-upload (1x) and I run a test against http://nervgh.github.io/pages/angular-file-upload/examples/simple/... testcafe works fine! But there are several tests on the backend side due the upload, before coming back to you I have to check these. KR Pitt. Hi @AlexanderMoskovkin and  @miherlosev,\nI can confirm that it seems to be an edge case... our error is not related to a 'size error'.\nbut I guess there must be a reason belonging to testcafe that my test fails,\nAt the backend side we have a servlet, which does some tests with the uploaded file, but this servlet fails with a Null Pointer Exception, what means it can't get a handler to the uploaded file... \nEvery Idea is welcome! Timing Problems?\nThanks for you help!\nKR\nPitt. Hi @miherlosev,\nthx again for investigating in this issue, i have to ask our teamleader for this, come back later...\n. ",
    "CommanderXL": "@AlexanderMoskovkin Thanks very much.\nTwo days ago, I could run the remote test and I don't change the version of testcafe. So I doubt that the port is being occupied.But it didn't seem that.In the last two days, I tried many ways link through the node.js remote API method not CLI, but I faild too.. Yes. This feature is good. Yes. It make it, I need go to the testcafe node_modules and update testcafe-browser-tools to v1.4.4. I'm sorry, the takeScreenshot function can't work properly now.I did nothing about the test script.. @AndreyBelym Hi, I had install 0.17.2, and the testcafe-browser-tools is 1.4.5 now.It didn't make it .\nOs: Mac 10.11.\nNode:  8.0.0. Well, It log nothing in the terminal.And the process exit.And my browser is the lastest chrome.. Sorry, I rewrite the reporter plugin. I use the json reporter now.\nAnd the terminal print the warning info:\n```javascript\n Warnings (3):\n --\n  Was unable to take a screenshot due to an error.\nCommand failed: /Users/XRene/project/test-cafe-demo/node_modules/testcafe-browser-tools/bin/mac/generate-thumbnail ../screenshots/fixture/login-success.png\n  ../screenshots/fixture/thumbnails/login-success.png 240 130\n--\n  Was unable to take a screenshot due to an error.\nCommand failed: /Users/XRene/project/test-cafe-demo/node_modules/testcafe-browser-tools/bin/mac/generate-thumbnail ../screenshots/fixture/ticket-list.png\n  ../screenshots/fixture/thumbnails/ticket-list.png 240 130\n--\n  Was unable to take a screenshot due to an error.\nCommand failed: /Users/XRene/project/test-cafe-demo/node_modules/testcafe-browser-tools/bin/mac/generate-thumbnail\n  ../screenshots/2017-09-06_08-36-11/test-1/Chrome_60.0.3112_Mac_OS_X_10.11.0/errors/1.png ../screenshots/2017-09-06_08-36-11/test-1/Chrome_60.0.3112_Mac_OS_X_10.11.0/errors/thumbnails/1.png 240 130\n``.testcafe -vis :0.17.2`\nand I run the test through the node api:\n```javascript\nconst createTestCafe = require('testcafe')\nlet runner = null\nlet testcafe = null\ncreateTestCafe('localhost', 1337, 1338)\n  .then(tc => {\n    testcafe = tc\n    runner = tc.createRunner()\n  })\n  .then(remoteConnection => {\n    runner\n      .src('fixtures/ticketbuyer.js')\n      .browsers('chrome')\n      .reporter(() => {\n        return require('@my/testcafe-reporter-dtest')()\n      })\n      .screenshots('../screenshots', true)\n      .run({\n        skipJsErrors: true,\n        assertionTimeout: 7000,\n        speed: 0.3\n      })\n      .then(failedCount => {\n        testcafe.close()\n      })\n      .catch(error => {\n        console.log(error)\n        testcafe.close()\n      })\n  })\n```\nAfter tests, the browser didn't close. But it show the disconnected info.. ",
    "farhd": "unfortunately, I get the same issue.\nnode: 8.15.0\ntestcafe: 0.23.3\nOS: 0.23.3\nDevice: iPhone 7\nDevice OS: 12.1 (16B92)\n(mobile) Browser: Chrome, Firefox, Safari. ",
    "dimaip": "One usecase for it would be to make tests fail on React PropTypes errors (React uses console.error to warn on such errors).. This feature is useful e.g. if you want to override console.log to spy on console output in your tests.. Really need this too! We urgently need to test FF, too many bugs slip in there, yet I don't want to setup selenium grid.. To add to this issue, it would be nice if other imported selectors, like ReactSelector were also available.\nI don't know exactly how you would be able to achieve this (perhaps by transpiling and then eval'ing the string in the context of the test code).. Thanks a lot, that's precisely what I was thinking about, sorry for not being able to locate that issue before creating this one.. ",
    "San4es": "@AlexanderMoskovkin \nI think that ClientFunction support will be useful for this feature:\ntest.addScriptToEachPage(ClientFunction(...));. > Unfortunately chrome does not support the transitionstartevent\nJFYI: https://www.chromestatus.com/feature/5673072124231680. ",
    "craigjennings11": "This would also be helpful if certain local storage keys need to be set before the page loads.. ",
    "juliusgonawan": "any update for this enhancement?. any update for this issue? i don't think it's solve. I face the same issue. same with me, although some url testcafe can automatically scroll to element, but in some case element can not find, and seems like testcafe don't have scroll function. I scroll using window scroll, but after scroll, testcafe return the previous state. same with me, although some url testcafe can automatically scroll to element, but in some case element can not find, and seems like testcafe don't have scroll function. I scroll using window scroll, but after scroll, testcafe return the previous state. ",
    "NickCis": "@miherlosev \nA real world escenario i've found is avoiding a service worker registration. If a service worker is registered without using https, chrome logs a console error which forces you to run testcafe with the -e flag. I'd like to run testcafe without ignoring Js Error messages.\nService worker are usually registered with an inline script:\nhtml\n<script>\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('/service-worker.js');\n}\n</script>\nSo if i try to mock navigator.serviceWorker in the test, it will be mocked after the script has run.. @jafin As the docs state: metadata value's are strings, so it really doesn't have sense to speak of truthy or falsy value. If you read the PR's comments, you will fully understand the cmd line api decision.\nAnyway, you can implement you own custom runner, using the programming interface, to have the custom behavior that you need.. I don't understand why some travis tests are failing, any help with that?. > > I don't understand why some travis tests are failing, any help with that?\n\nCould you please rebase on master branch?\n\nDone the rebasing, i'll continue with the suggestions.. @miherlosev @AlexKamaev Done with the required changes.. @testcafe-build-bot retest. @testcafe-build-bot retest. @AndreyBelym I've done the requested changes.. I don't understand why tests are failing, should I fix something? Any help with this?.\nI am eager to see this functionality in a release, are more changes needed in order to be accepted?. @testcafe-build-bot retest. @testcafe-build-bot retest. @VasilyStrelyaev No problem, please tell me if i have to do something!.\nThanks for the great tool!. Digging a little further, the problem may originate as in role's initialization the test run is switched to a clean state (which cleans testrun's activeDialogHandler)  before navigating to the login page.\nShouldn't the correct behaviour be?:\n1. Redirect to an empty page (something like .navigateTo('about:blank'), idk if about:blank is available across all browsers or the proxy should provide an empty page)\n2. Switch to Clean state\n3. Redirect to Login page. The example was just to provide a test escenario. In the real escenario, all the site's pages set beforeunload when you are logged in, i'm trying to test interaction between two users so this was constantly failing.\nI am eager to provide a PR with a fix, but idk what would be the correct approach :). If i navigate to the login page before switching to a clean run won't have the test run in an invalid state? (particularly regarding the current session).\nIsn't preferable to perform a navigation to a blank page, then switch to a clean run and finally perform the navigation to the login page?. Which i meant with leaving the test run in an invalid state is, that, the problem of first navigating to the login page and then switching to a clean state is that the login page is loaded with the last used role. This will be a problem if the login page response depends on whether a user is logged or not.\nFor example:\n```js\nconst userA = ...;\nconst userB = ...;\ntest('Chat', async t => {\n  await t\n    .setNativeDialogHandler(() => true)\n    .useRole(userA)\n    // ...\n    .useRole(userB); // -> Fails\n});\n```\nThis test fails as the login page is loaded with userA session, so no login form is shown.\nThis is why i'm suggesting to do:\n\nRedirect to an empty page (something like .navigateTo('about:blank'))\nSwitch to Clean state\nRedirect to Login page. @madroneropaulo \nAs a workarround, have you try setting height and width of the browser by command line?:\ntestcafe 'chromium:emulation:width=1920;height=800' src/anyTest.ts. As @AndreyBelym pointed out in the comment metadata should (per documentation) be only string.\n\nIn addition, the particular case you are addressing is a bit tricky, what will be the user expected behaviour?, To match only when the array has all the passed values? or when the array is equal to that values (ie: don't have any extra one)?.\n\nIn order to do a workarround you could do the following:\njavascript\nfixture (Array metadata fixture)\n    .meta( { \n              componentWebsite1: 'true',\n              componentWebsite2: 'true',\n              componentWebsite5: 'true'\n         })\n    .page(${config.pageURL})\nAnd the run:\ntestcafe chrome desktop/ --config=website2 --fixture-meta componentWebsite2=true\nAnother option is to use testcafe's node api, the runner has a filter method which you could use to implement your custom filtering logic.. It seems a good idea!.\nI'll use snake case for the cli parameters, in order to be coherent with the naming of the other parameters:\n- --test-meta\n- --fixture-meta. The filter callback in the Runner class passes the fixturePath as the 3rd argument.\nAlthough, the fixturePath argument isn't used in for filtering in the cli, the api defines the callback with that argument, i won't suggest to change the api, it might break people's code. . Good catch, i'm not a windows guy so i really dind't knew that.\nThe problem with using a key=value,[key2=value,..] syntax is that all types would be string (ie, boolean and numbers will be transform to strings) and that will make \u00ecsMatch`to fail.\nEg:\nWith a test:\njs\ntest\n  .meta('key',  1)\n  .meta('mobile',  true);\nkey=1,mobile=true will be transformed to { key: '1', mobile: 'true' } and the isMatch check will fail as the test meta was defined as a number and boolean.\nIn addition, i think that it will be useful to allow users to match elements within a metadata array:\njs\ntest\n  .meta('platforms', ['mobile', 'desktop']);\nWhat about having the following syntax: string=value:array=['string',true]:bool=true ([ and ]are actual characters, the idea is to allow passing an array)\nWith the following parser:\njs\nvalue\n    .split(':')\n    .reduce((map, rawPair) => {\n      const [key, value] = rawPair.split('=');\n      try {\n        map[key] = JSON.parse(value.replace(/'/g, '\"'));\n      } catch(e) {\n        map[key] = value;\n      }\n      return map;\n    }, {});\nAnd change the isMatch call to:\njs\n_.isMatchWith(\n    testMeta,\n    parsedMeta,\n    (meta, parsed) => {\n      if (_.isArray(meta)) {\n        return parsed.length === _.intersection(meta, parsed).length;\n      }\n    }\n  );\nThis will allow to pass strings without the double quotes, fix the different type issues and also allow to match elements within a metadata array.\nExamples can be found here\nAlthough, i don't see as something intuitive to use the two dots character (:) as a separator, perhaps would it be better to use the ampersand (&)?. Moreover, this parser lacks of a proper validation, a naive validation could be done by checking if the parsed object isn't empty, but this won't catch errors of the JSON.parse (because this failed parsing could be a valid string).\nWhat will be better to do?:\n1. Keep the raw json\n2. Implement the proposed solution: key=value,[key2=value2,...]\n    1. Without type guessing (all arguments will be transformed to strings and in order to match, test's metadata should be defined as string)\n    2. Respect test's metadata types: while doing the isMatch try to type cast the parsed argument to the metadata type (casting errors will be taken as a negative match)\n    3. Use a naive type guessing: run JSON.parse if it works, leave the parsed value, if not, use the string\n3. Implement the alternative solution (in order to allow array's element matching):\n    1. With : separator\n    2. with & separator\n. @AndreyBelym @VasilyStrelyaev @miherlosev any thoughts about this?. Good point, so, i'll just implement the string option!. ",
    "bitjoo": "@miherlosev \nA real world scenario is mine. I want to use PollyJS to record/mock some xhr or fetch requests. But to do so, I have to inject it into the page early. I tried it with ClientFunction, but it injects too late, so it missed some requests. An option to inject code as early as possible would be fine.. ",
    "samsoft05": "@miherlosev One more use case is that. Since client scripts are loading after page load, we can not mock any setInterval, setTimout functions  . ",
    "Worie": "I think this issue fits in my case as well, as I would like to use axe-core within my tests - and as this requires the library to be run within browser client, i think it fits. I can see that it's now in the roadmap which is great, but perhaps there could be some neat workaround to achieve it? I wouldn't like to hack in a way that I'll store the dist of the axe-core somewhere, then load it in the runtime, hope it loads and then run a test \ud83e\udd14 . Hello, can anyone point me to what is the exact status of this? What's the most legitimate way of achieving this at the moment? . I guess that due to usage of external library which handles keyboard shortcuts / key modifiers .click(el, { modifiers: { alt: true } }) is not working for me. From what I understand, test cafe did not do something like\n\nkeydown alt\nclick element\nkeyup alt\n\nat this point: https://github.com/DevExpress/testcafe/issues/1839#issuecomment-333791190 , but has been there any progress on it? Or some other way to emulate such sequence? Because I haven't found any way yet, and it seems like it might not be possible at this point :( . Can the issue be that if documentElement's height is equal 0 or that the particular selector does not have any text contents nor styling (basically, it's non visible at all) then the Selector won't be found? \ud83e\udd14 \nEdit: Gah. Found a bug on my part. Sorry for confusion :( \nFor future generations: it should all work for TestCafe v0.20.1. Just recheck your selectors and make sure that the context has been properly switched.. ",
    "LasaleFamine": "Hi @AndreyBelym and thank you for your fast response.\nActually I have moment , but as Bower dependency (don't blame me for this, legacy app \ud83d\udc80) and it is at the 2.17.1 version.\nI tried to add moment as yarn dependency and now testcafe works as expected.  \nDo you think bower is responsible for this? \nNOTE: I also tried upgrading the bower's moment to 2.18.1, but I had the same (not working) result.\nEDIT:\nI have tried using npm instead of yarn to install a fresh node_modules and now the problem is disappeared... So, is yarn the problem? \ud83d\ude15 . So I must assume that testcafe is not supporting yarn?. ",
    "damianbaar": "Hey, \nI resolved this issue by providing resolutions to package.json according to this https://github.com/yarnpkg/yarn/issues/2763, but it also works if will specify dummy dependency which is not fulfilling semver for moment-duration-format in testcafe package.json file, like moment-duration-format: 1.2.0\nIt make sense to me what yarn is doing, but personally I believe that moment-duration-format requires too much. I would really like to avoid such things in package.json so is there any chance to drop this dependency in near future?\n. ",
    "justrhysism": "\nIt make sense to me what yarn is doing, but personally I believe that moment-duration-format requires too much. I would really like to avoid such things in package.json so is there any chance to drop this dependency in near future?\n\nYeah if it's just for formatting dates, https://github.com/date-fns/date-fns might be a better option.. ",
    "andreyluiz": "@damianbaar, the resolutions workaround did not work for me.. ",
    "KyleCraviotto": "confirmed this works for me now. ",
    "s-robertson": "I just ran into this issue as well, even though my project had a newer version of moment as a dependency. I ended up having to delete an entry for the older version of moment from my yarn.lock file so that only 1 version of moment was installed. \nAfter having looked at the documentation for moment-duration-format, I think this issue can be avoided entirely by using the package as a module in plugin-host.js, rather than letting it patch the global moment instance. Here's an example from the docs:\n```\nvar moment = require(\"moment-timezone\");\nvar momentDurationFormatSetup = require(\"moment-duration-format\");\nmomentDurationFormatSetup(moment);\n```\nIn plugin-host.js, moment-duration-format could be imported as a module and the  ReporterPluginHost class constructor could set up its moment property like so:\nthis.moment   = momentDurationFormatSetup(moment);\nIf it looks like this would work, and is an acceptable solution, I'd be happy to open a PR.. ",
    "shhnjk": "I repro this with Edge. I haven't tested other browsers.. ",
    "dhilgarth": "You should be able to reproduce it with these commands:\nnpm uninstall -S @types/knockout\nnpm install -D @types/knockout@3.4.40\nnpm test. Great, thanks for the followup. My workaround for now is to update to the latest version of @types/knockout. This fixed it for me as well.. Hi Alex,\nthanks for the quick feedback. I have added a reproduction.\nPlease let me know, if that helps.. Interestingly enough, the behaviour is correct - the test fails - if the p tag is moved outside of #container.. ",
    "nkamenar": "I also have been experiencing this problem. Tests run fine but when it finishes it just sits at \"Disconnected\" screen and doesn't close the browser. Any word on a fix for this?. Hi @AlexanderMoskovkin ,\nIt seems to be happening for any browser but specifically I have tried 'ie', and 'chrome'.. \nAs you can see above the button is on the page. Additionally debugging the page after fail I can see the following if I inspect element:\n\nAnd running jQuery in the console to try and select it works:\n\nSo I am really just at a loss for why the selector on the span works but the selector for the input refuses to.. Unfortunately it's an intranet site so I can't provide a link. I am going to keep experimenting and if I find anything I will post it here. Thanks for the assistance.. The error is \"The element that matches the specified selector is not visible.\" but I have shown you the html and there isn't anything there that should be \"hiding\" it as far as I can tell.. I have updated the fiddle attaching the styles relevant to those tags. Here is the updated fiddle. Alright, thank you very much for the support!. ",
    "coakeson": "If there were a way to upvote this feature, I would.. ",
    "planet71": "Hi @AlexanderMoskovkin,\nI've removed node_modules and  reintsalled all dependencies, but it didn't help out.. Cleaning cache helped out. Thanks. \n@AlexanderEgorov @AndreyBelym . ",
    "classicalConditioning": "+1 for adding noReloadBeetweenTests option.\nSame as in a couple of comments above - I would rather utilize test cafe's ability to define more granular tests, but due to my system under test being a SPA - I can't achieve this. I end up with much larger tests that test multiple things at once. . @AlexanderMoskovkin \nhere is an example of what I am talking about.\nGiven a grid that has a filtering capability. There are three filters: First Name, Last Name, City.\nHere are my tests:\n1. this is the way I need to structure them if I don't want current testcafe to reset browser's localStorage and cookies:\nTest 1:\n- login\n- filter by First Name\n- assert that result is correct\n- reset filter\n- filter by Last Name\n- assert that result is correct\n- reset filter\n...\n\nThis is the way I would like to structure my tests to keep them more readable, but I can't since the browser's localStorage and Cookies are reset after each test, therefore I have to login before each test\n\nTest 1:\n- login\n- filter by First Name\n- assert that result is correct\n- reset filter\nTest 2:\n- login\n- filter by Last Name\n- assert that result is correct\n- reset filter\n...\n\nThis is the way I would like to structure my tests if there was an option to not reset browser's localStorage and cookies. (login only in the first test)\n\nTest 1:\n- login\n- filter by First Name\n- assert that result is correct\n- reset filter\nTest 2:\n- filter by Last Name\n- assert that result is correct\n- reset filter\n...\nI hope it is clear that in this scenario tests do not depend on each other. @AlexanderMoskovkin even better is what @brettveenstra is proposing.\nIf there was be a way to specify with which role an entire fixture is executed - that would be very handy, IMHO.. @AlexanderMoskovkin this seems to work, thanks. I saw preserveUrl in documentation, however it was not clear that it would solve my problem. If I get it right, when you use a t.useRole(userRole) all steps defined in the userRole will be executed. So it feels like these same steps will be executed before each test, If you put it in .beforeEach. It would be nice if there was a cleaner way to say that I want to use a particular user role for entire fixture.. @AlexanderMoskovkin I get that, however it is not clear from naming conventions being used that useRole is executed only once even though it is inside of beforeEach hook. . ",
    "raDiesle": "How speed can be improved, what is not supported at the moment: \n1. not to reload page when Role code is performed, before test ist executed with useRole.\nTo be more precise: Role(url?, ...) should be optional\n  . I am using preserveUrl, so it helps \"after you switch to the role\"\nbut it does not help, before role code is executed, because it opens fixture url, afterwards Role url\n  . Great, otherwise I cannot develop in company network\n  . seems to work now. maybe navigateTo was the mistake to use.. ",
    "lixualinta": "Sounds like a good idea to provide an option to disable page reload after each test. It would be very handy for testing web forms that only allow you to go to the next section after completing the current section.\nWould you consider to implement it @AndreyBelym  ?. @AndreyBelym Hi Andrey, thanks for your response. I connected to the machine by Jenkins. The colleague who can access the system and make screencast is not available right now. I will let you know when I get the screencast.. ",
    "malekzu": "Before: \n\nAfter using @AndreyBelym no-reload-demo-1\nAfter: \n\n~400% faster.",
    "honsq90": "how's this going? :). hmm not sure why that failed if I'm just updating the type def.... ",
    "arenddeboer": "I already rely heavily on this feature to test my Vue.js website (server side rendered). It is the only way to properly test SPA functionality. I hope DevExpress understands the need for this feature to exist. Especially given that today more and more \"regular\" sites are turning to SPA frameworks with server side rendering for SEO.. This also happens on bootstrap vue checkboxes as the native input element has an absolute offset. same issue in chrome. I just read https://github.com/DevExpress/testcafe/blob/master/CONTRIBUTING.md#code-contribution so this does PR does not follow the guidelines, but perhaps can be taken as input for handling this issue.. Thanks @miherlosev .  I am on the latest npm version. Am I running into: 'This is an internal TestCafe problem. Please contact the TestCafe team and provide an example to reproduce the problem.`' ?\nEven though loggerReq exists and I hit this null object error.\nI run into this without having imported / created RequestLogger while clicking on a button which does an ajax call and updates the DOM. This is on a Payment Service Provider page but I might be able to provide a working example.. ",
    "barretvasilchik": "@AndreyBelym would you be able to give a short example usage of how to use modifiers? I am new to testcafe and maybe I am not understanding how to use this feature.  Can fixture.disblePageReloads be used in combination with a page so you can specify a page to use beginning but not reload after the first test uses this page. \nI was trying to use it like this but I get the error Cannot read property 'page' of undefined\nfixture `fixture1`\n    .disblePageReloads\n    .page `${config.Urls.blackboardLogin}`;. ",
    "ZeleniiZmey": "@barretvasilchik yuo made a typo: use .disablePageReloads instead of .disblePageReloads\nfixture .disablePageReloads `fixture1`\n    .page `${config.Urls.blackboardLogin}`;. Any update on this?. Ok. Closing issue, as fixed local problem.\nJust did full cleanup of npm packages, that was installed globally.\n@AndreyBelym thanks for response. . ",
    "bvasilchik": "@ZeleniiZmey good catch. That's what I get for copy and pasting.. ",
    "subbiah2806": "using .disablePageReloads doest prevents reloading page between tests. Page gets reloaded with state preserved.\nIs there any workaround.. fixture\n  .page url.html\ntest1()\ntest2()\nIn test1 navigates to certain page in the website.\nIn test2 performs actions after navigating to certain page.\nBut after test1 website gets reloaded, so website goes to initial page.\nI don't want to reload the website after each test. Is there any way for that.\nTried both .disablePageReloads and useRoles. both preserve state on reloading but doesn't prevents reloading.. \"@fixture griffin\";\n\"@page https://**.com\";\n\"@test\"[\"gr\"] = {\n    '1.Click input \"Account Name\"': function() {\n        act.click(\"#accountname\");\n    },\n    \"2.Press key CAPSLOCK\": function() {\n        act.press(\"capslock\");\n    },\n    '3.Type in input \"Account Name\"': function() {\n        act.type(\"#accountname\", \"@@@@\");\n    },\n    \"4.Press key TAB\": function() {\n        act.press(\"tab\");\n    },\n    '5.Type in password input \"Password\"': function() {\n        act.type(\"#accountpassword\", \"C\");\n};\nIn testCafe studio every action is split into sections. Like this I would like to split my actions inside a test into sections. Even splitting test is fine, but I couldn't do it because on every test page reloads.\nAny help will be most grateful.\nThanks. My apologies is below code in legacy state \nfixture Getting Started\n    .page('http://testcafe.devexpress.com/example');\ntest('My first test', async t => {\n    // Test code\n});. My apologies guys please provide some high level documentation on above issue.\nBelow is the syntax I use where .disablePageReloads doesnt work. It preserves the state, but refreshs the page between test.\nI cant wrap a whole test of a website into one test.\nI have 51pages and approx 8 test a page which refresh  the page 408 times. After every test I need to navigate back the page where it left earlier to start the test.\nSo basically because of this one functionality I dont want to leave such a great tool\nfixture Getting Started\n.disablepagereload\n    .page('http://testcafe.devexpress.com/example');\ntest('My first test', async t => {\n    // Test code\n});. import { Role } from 'testCafe' and use -e in cmd line to skip js error.\nHope it resolves. It works if there is atleast one test below fixture like this.\nimport commonScripts from './commonScripts.js';\nfixture('google')\n    .disablePageReloads\n    .page('https://google.com');\ntest('wait', async t => {\n    await t\n        .wait(1);\n});\ncommonScripts.google();. It works if there is atleast one test below fixture like this.\nimport commonScripts from './commonScripts.js';\nfixture('google')\n    .disablePageReloads\n    .page('https://google.com');\ntest('wait', async t => {\n    await t\n        .wait(1);\n});\ncommonScripts.google();. Helpful thanks. Helpful thanks. ",
    "dudaming": "@AndreyBelym,\nAs i have read the disablePageReloads() has been release on version 0.21. However, I am using the version 0.22, when i try to call test.disablePageReloads(), it gives error that Property 'disablePageReloads' does not exist on type 'TestFn'. The method is not in the Interface TestFn, it is in src/runner/index.js.\nDo you have any idea about this?\nThanks.. ",
    "darrylgrant": "Hey @VasilyStrelyaev - I noticed that you removed the \"Documentation: required\" label. Does this mean that disablePageReloads is now documented somewhere? \nI'd love to take a look at those docs if that is the case as disablePageReloads is a feature that would really be useful to me. Is there a link for the docs? \nTest Cafe is great by the way :) . Thanks @VasilyStrelyaev - I appreciate the info. \ud83d\udc4d. ",
    "Foxandxss": "I would ask to please not forget about this feature @VasilyStrelyaev.\nI implemented this in different projects and the feedback was always the same. Please make them sequential (the login process with IdentityServer is veeeeeeery slow). I can hack my way, but that is not good.\nI also give talks about testcaf\u00e9\n\nAnd the feedback I always get is the same, sequential tests.. No workaround for this right now? If I import code from my app (to use in tests) and that uses this feature, it fails.. No workaround for this right now? If I import code from my app (to use in tests) and that uses this feature, it fails.. That is problematic.\nWe have a complex Angular app using stuff like:\nimport { Foo } from `@core/foo/bar` \nSo if we try to import from testcaf\u00e9 any angular file (any at all) it will try to compile the entire app and fail because it won't recognize the syntax.. That is problematic.\nWe have a complex Angular app using stuff like:\nimport { Foo } from `@core/foo/bar` \nSo if we try to import from testcaf\u00e9 any angular file (any at all) it will try to compile the entire app and fail because it won't recognize the syntax.. @djbreen7 That is possible but Angular projects comes with a nice folder structure & features for e2e so you can plug in testcaf\u00e9 in there. You don't need to touch any of the angular code and it will work perfectly.\nThe case is that we have an exported enumeration with paths and we would like to use them for t.navigateTo but we can't import it, even if the file is simple, it will try to get the entire angular app for no reason and fail.. @djbreen7 That is possible but Angular projects comes with a nice folder structure & features for e2e so you can plug in testcaf\u00e9 in there. You don't need to touch any of the angular code and it will work perfectly.\nThe case is that we have an exported enumeration with paths and we would like to use them for t.navigateTo but we can't import it, even if the file is simple, it will try to get the entire angular app for no reason and fail.. ",
    "ilyasbasharov": "Testcafe team,\nDo you have any plans to release this feature in the near future?. Thanks.\nCould you look at the different example. I want to inject external lib into a page such as d3.min.js. d3.min.js is attached to this comment.\n```\nimport { ClientFunction } from 'testcafe';\nimport fs from 'fs';\nfixture My fixture\n    .page http://devexpress.github.io/testcafe/example/;\ntest('My test', async t => {\n    await t.eval(new Function(fs.readFileSync(__dirname + '\\d3.min.js').toString()));\nconst getElementText = ClientFunction(() => {\n    return d3.select('legend').size();\n});\n\nawait getElementText();\n\n});\n```\nI'm still get an error \n\n1) An error occurred in ClientFunction code:\n  ReferenceError: d3 is not defined\n\n\nd3.min.js.zip\n. Thanks, it works as expected.. @Farfurix, I run my test with -e option and all assertions were successful.. ",
    "subbiah28062": "Hello team, \nI tested few scenarios: \n``\nfixturegoogle.disablePageReloads\n  .pagewww.google.com`\ntest('type Hello', async t => {\n  await t\n            .typeText('#tsf > div:nth-child(2) > div.A8SBwf > div.RNNXgb > div > div.a4bIc > input', 'Hello ');\n})\ntest('type World', async t => {\n  await t\n            .typeText('#tsf > div:nth-child(2) > div.A8SBwf > div.RNNXgb > div > div.a4bIc > input', 'World');\n})\n```\nNow on above code both test's url are same so page is not reloaded. It types Hello World.\n``\nfixturegoogle.disablePageReloads\n  .pagewww.google.com`\ntest('type Hello', async t => {\n  await t\n            .typeText('#tsf > div:nth-child(2) > div.A8SBwf > div.RNNXgb > div > div.a4bIc > input', 'Hello ');\n})\ntest('click search button', async t => {\n  await t\n            .click(Selector('#tsf > div:nth-child(2) > div.A8SBwf > div.FPdoLc.VlcLAe > center > input[type=\"submit\"]:nth-child(1)'));\n})\ntest('click map's button' async t => {\n  await t \n                .click(Selector('#hdtb-msb-vis > div:nth-child(2) > a'));\n})\n```\nNow in above code after typing Hello it clicks search button, Then it should click on map's button in next screen but page reload's and again comes to www.google.com where there is no map's button.\nIs there any way to preserve url between tests or stop reloading???. ",
    "peteygao": "I understand the \"current\" implementation is for internal use only, but I just want to report that even the current undocumented implementation does not work when used together with the Roles feature. Using useRole() will always trigger a refresh, even if the start/end page are the same URL.. > Hi @shyedhu, we're going to release it in testcafe@1.0.0 in January 2019.\nHey @AndreyBelym, is this feature still slated for a January 2019 release? Or has testcafe@1.0.0 been pushed back?. What are the flags --no-sandbox --disable-setuid-sandbox for? I have been using TestCafe with Chrome on Bitbucket Pipelines for a few months now, and I have never used either of those flags and I have not run into any issues. Can you explain what they are supposed to do? Disabling sandbox security mode seems like a bad idea in general (sure, it's running in an ephemeral docker container, so even if the browser and machine is compromised, it's no big deal... but it doesn't seem like an advisable thing to put into the documentation for everyone to do).. ",
    "valerii-cognite": "Any plans on implementing the feature in order to use with useRole()? It seems currently in order to use useRole without reloads you need to specify it only for the first test in the fixture.. Well, my previous suggestion will only work across fixtures using the same .page() url, which is unsuitable. \n@VasilyStrelyaev \n\n\nWe think that writing tests in such a way affects their stability.\n\n\nI would love this to be an opt-in so developers may decide about the stability and possible outcomes. As was mentioned above, SPAs are a bit different from a regular websites, which really needed reload prevention. This is the only suggestion. \nOther than that Testcafe is an awesome tool, please keep rolling!\n. I feel the same error occurs on 0.23.3:\nError in Role initializer -\n      Failed to find a DNS-record for the resource at\n      \"http://undefined\".\nand testcafe just hangs without processing to the next fixture. ",
    "akdor1154": "For my usecase, it would make sense if failed tests triggered a reload for the subsequent test. This would significantly simplify writing cleanup code.\nMy usecase is an SPA where the tests are independent. Each test includes \"navigating\" to the desired part of the application as part of the test, and resetting the state of the app when done.. request - \"new\" std library methods, e.g. Object.entries ?. ",
    "Waterstraal": "I see that this issue is closed, but there is no official implementation yet as far as I can tell. Am I missing something? This is an important feature for SPA's imho.\nCould someone give an update on this issue please?. Thanks for the update @AndreyBelym. Here is my 2 cents on the matter.\n\n\nWe assume that it's hard to write tests so that they don't require page reloads, which makes this feature difficult to use.\nWe think that writing tests in such a way affects their stability.\nThere are some aspects of this feature that aren't finished yet. For example, using this feature when tests are run concurrently.\n\n\nI just did a quick test with Cypress and they don't reload between tests either, so it should be possible to roll this out if they can do it. Cypress can also run in parallel, although I have not used or tested that feature with the code below.\nIf anything, this flag should be opt-in like @valerii-cognite mentioned in the comment above.\nI used the following Cypress to test my claim:\n```javascript\ncontext('Testcaf\u00e9 homepage', () => {\n    before(() => {\n      cy.visit('https://devexpress.github.io/testcafe')\n    })\nit('should have a get started button', () => {\n    cy.get('.get-started-button').contains('Get Started');\n})\n\nit('should have a how it works section', () => {\n    cy.get('h1').should('have.text', 'How it works!');\n})\n\n})\n```. I think the way Cypress does this is really well thought out, maybe it can serve as inspiration for Testcaf\u00e9: \nhttps://docs.cypress.io/guides/guides/environment-variables.html#Setting\n. ",
    "pyry": "@inikulin I don't think it is a case of sandbox breach. Script in question is https://appsforoffice.microsoft.com/lib/1/hosted/Office.debug.js which as a first step reloads bunch of other scripts. In it will do so by thinking that everything left of \"lib/1/...\" is part of the domain so it can do a lowerCase(domain) + /another_script.js.  E.g. you can find this in the script:\nscriptSrcLowerCase = scriptSrc.toLowerCase();\nNow that hammerhead has proxied the domain but with session key that has mixed case letters resulting script will not load. \nEasy patch for me was to patch: \nreturn shortId.generate().toLowerCase(); in https://github.com/DevExpress/testcafe-hammerhead/blob/b912efa228cf756e4157fae1102812aa1a79f77b/src/session/index.js#L38.\nAfter that everything worked.\n. @inikulin Cool, How the MS OfficeJs digs the original url is by doing following:\nvar scripts = document.getElementsByTagName(\"script\");\nvar scriptsCount = scripts.length;\nvar officeScripts = [\n  this.constantNames.OfficeJS,\n  this.constantNames.OfficeDebugJS\n];\nvar officeScriptsCount = officeScripts.length;\nvar i, j;\nfor (i = 0; !this.basePath && i < scriptsCount; i++) {\n  if (scripts[i].src) {\n    for (j = 0; !this.basePath && j < officeScriptsCount; j++) {\n      this.basePath = getScriptBase(scripts[i].src, officeScripts[j]);\n    }\n  }\n}\nand then running the normalisation function on it which results into a lower cased url with wrong sessionId. Also noteworthy is that this code is being run in a iframe. I believe when the script is run the script elements contain the real url you are referring. \n. ",
    "marconn": "Hi @AlexanderMoskovkin thanks for the quick feedback. The only thing i changed to make it work was this (giving a explicit key to AreEqualTexts dependency)\njs\n            .click(select.find('option')\n            .filter(\n            (node, idx) => {\n                return AreEqualTexts(node, text);\n            },\n            {\n                AreEqualTexts, text: TestData.test1.interfaces.js\n            }\n            ));\nTo\njs\n            .click(select.find('option')\n            .filter(\n            (node, idx) => {\n                return areEqual(node, text);\n            },\n            {\n                areEqual : AreEqualTexts, text: TestData.test1.interfaces.js\n            }\n            ));\nI'm a bit confused, I was developing my test in typescript before, same scenario, same ClientFunction, and it worked out of the box.. @AlekseyMartynov Just using testcafe, by the way, i tested your code and  works fine in other select elements, mine works too. The problem seems to be related with the page i was testing. Can't provide testing page due to company politics\nThe flow is as follows:\n- We use a calendar based on this library https://fullcalendar.io/\n- When clicking in one of the available slots, a dialog is displayed, this dialog does'nt look the screen, meaning that you are able to click outside of it, and dismiss it.\n- Once the dialog is open, there is a date field, when clicked it shows a datepicker (this one http://keith-wood.name/datepick.HTML)\n- At this point, when testcafe clicks the year, and then selects the correct option, the dialog shown before, disappears.\n- The error reported shows in the report.\nI used a client function in order to select those items, avoiding the dialog to close. I know ClientFunctions shouldn't be used for that, but i ran out of options.. ",
    "maximgeerinck": "Also looking forward to this, can not access local resources without. ",
    "Scyks": "+1. ",
    "cdoger": "+1. ",
    "pablorivera": "Thanks @AndreyBelym. I run it multiple times and always get something like this:\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  2423    0  2423    0     0   2286      0 --:--:--  0:00:01 --:--:--  2288\nSeems to be ok. Do you think there could be another problem?\n. Hi, we are having the same issue with testcafe 0.17.2 with a couple of tests running in Bamboo CI that sometimes fails because of this error. It would be great if you can work on this ticket. Below is the stacktrace.\n12-Oct-2017 10:43:40 | ERROR The Chrome 53.0.2785 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n-- | --\n12-Oct-2017 10:43:40 | \u00a0\n12-Oct-2017 10:43:40 | Type \"testcafe -h\" for help.\n12-Oct-2017 10:43:40 | \u00a0\n12-Oct-2017 10:43:40 | npm ERR! Linux 4.8.0-1.el7.elrepo.x86_64\n12-Oct-2017 10:43:40 | npm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"run\" \"test-ci\" \"tests\"\n12-Oct-2017 10:43:40 | npm ERR! node v6.7.0\n12-Oct-2017 10:43:40 | npm ERR! npm\u00a0 v3.10.3\n12-Oct-2017 10:43:40 | npm ERR! code ELIFECYCLE\n12-Oct-2017 10:43:40 | npm ERR! testcafe@1.0.0 test-ci: `testcafe 'chromium --no-sandbox' -s ./screenshots --screenshots-on-fails --color \"tests\"`\n12-Oct-2017 10:43:40 | npm ERR! Exit status 1\n12-Oct-2017 10:43:40 | npm ERR!\n12-Oct-2017 10:43:40 | npm ERR! Failed at the testcafe@1.0.0 test-ci script 'testcafe 'chromium --no-sandbox' -s ./screenshots --screenshots-on-fails --color \"tests\"'.\n12-Oct-2017 10:43:40 | npm ERR! Make sure you have the latest version of node.js and npm installed.\n12-Oct-2017 10:43:40 | npm ERR! If you do, this is most likely a problem with the testcafe package,\n12-Oct-2017 10:43:40 | npm ERR! not with npm itself.\n12-Oct-2017 10:43:40 | npm ERR! Tell the author that this fails on your system:\n12-Oct-2017 10:43:40 | npm ERR!\u00a0 \u00a0 \u00a0testcafe 'chromium --no-sandbox' -s ./screenshots --screenshots-on-fails --color \"tests\"\n12-Oct-2017 10:43:40 | npm ERR! You can get information on how to open an issue for this project with:\n12-Oct-2017 10:43:40 | npm ERR!\u00a0 \u00a0 \u00a0npm bugs testcafe\n12-Oct-2017 10:43:40 | npm ERR! Or if that isn't available, you can get their info via:\n12-Oct-2017 10:43:40 | npm ERR!\u00a0 \u00a0 \u00a0npm owner ls testcafe\n12-Oct-2017 10:43:40 | npm ERR! There is likely additional logging output above.\n12-Oct-2017 10:43:40 | \u00a0\n12-Oct-2017 10:43:40 | npm ERR! Please include the following file with any support request:\n12-Oct-2017 10:43:40 | npm ERR!\u00a0 \u00a0 \u00a0/apps/testcafe/npm-debug.log\n12-Oct-2017 10:43:41 | Tests failed\n. It also happens with testcafe 0.18.1. Hi guys, thanks for the clarification. Upgrading to 0.18.1 worked!. Sure @AlexanderMoskovkin ! Here it is \n\nPOST http://192.168.0.24:61016/SJCY1diaZ/https://develop-i.quid.com/api/autocomplete 500 (Internal Server Error)\nI had already opened a ticket for this https://github.com/DevExpress/testcafe/issues/1802\n\nGET http://192.168.0.24:61016/SJCY1diaZ/https://develop-i.quid.com/api/networks/200822 500 (Internal Server Error)\nI had already opened a ticket for this https://github.com/DevExpress/testcafe/issues/1802\n\nUncaught Error: Cannot call method 'split' of undefined\n    at Function.t._error (hammerhead.js:1)\n    at value (hammerhead.js:1)\n    at F (livechatinit2.js:3)\n    at G (livechatinit2.js:3)\n    at H (livechatinit2.js:3)\n    at A (livechatinit2.js:3)\n    at a.bugsnag (bugsnag-3.min.js:2)\n    at bugsnag-3.min.js:2\nPlease let me know if you need something else. Thanks!. ",
    "cgcote": "I am having similar issues. I deploy a React app as a static website on AWS S3 and I get every now and then (5% of the builds):\n1) - Error while restoring configuration after Role switch -\n      Failed to find a DNS-record for the resource at\n      \"http://mybucketname.s3-website-eu-west-1.amazonaws.com\".. I am having similar issues. I deploy a React app as a static website on AWS S3 and I get every now and then (5% of the builds):\n1) - Error while restoring configuration after Role switch -\n      Failed to find a DNS-record for the resource at\n      \"http://mybucketname.s3-website-eu-west-1.amazonaws.com\".. ",
    "aphofstede": "Is there a way to change the retry count / number of retries TestCaf\u00e9 does behind the scenes?. In my case it's running headless in a Docker container. Latest node 10. It's inherently a sporadic issue; it seems like in a (I guess) busy environment, Docker containers' internal DNS can flake out. I've seen it locally with docker-compose and remote on http://buddy.works.\nIt would be nice to have the option you mention as a command line argument so we can easily switch it on in a CI/CD pipeline setup. If the issue comes up again I'll give your suggestions a try, thanks.\n. Using @andrzej-kodify's video recorder plugin I was able to capture a screenshot, but it's just a white page. Note that it consistently halts after printing the first test name, stating: \n\nERROR The HeadlessChrome 71.0.3554 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\nType \"testcafe -h\" for help.\n\nIt does not occur randomly.\nNote: You can quickly set up a free test environment on https://buddy.works if you want to test out docker headless chrome issues.. My problem turned out to be nginx configuration issues. ($<string>s being badly replaced by envsubst to be exact). ",
    "jmullo": "I'm having this issue as well.\nFailed to find a DNS-record for the resource at \"http://localhost:3000/\"\nFailed to find a DNS-record for the resource at \"http://localhost:3000/someResource.jpg\"\nRunning tests in Jenkins/K8/Docker/Linux, headless Firefox & Chrome. Tests are browsing a localhost dev server (create-react-app/webpack). Using both browsers or increasing concurrency (-c X) seems to make the error appear more often.\nSo not sure if it's hammerhead or the dev server not keeping up, but would be really helpful to be able to enable that retry functionality from command line. Ideally the delay should also be configurable.. I'm having this issue as well.\nFailed to find a DNS-record for the resource at \"http://localhost:3000/\"\nFailed to find a DNS-record for the resource at \"http://localhost:3000/someResource.jpg\"\nRunning tests in Jenkins/K8/Docker/Linux, headless Firefox & Chrome. Tests are browsing a localhost dev server (create-react-app/webpack). Using both browsers or increasing concurrency (-c X) seems to make the error appear more often.\nSo not sure if it's hammerhead or the dev server not keeping up, but would be really helpful to be able to enable that retry functionality from command line. Ideally the delay should also be configurable.. Ah, only now noticed the --shm-size option. Increasing it seems to have fixed the issue.\nYou can remove \"It usually happens when you run tests in Chromium.\" from the documentation, because it seems to affect Firefox as well.. Yes, I meant retryTestPages. Is there a reason why it's still undocumented and not included in CLI options? I'm not using TestCafe directly, so another project needs to be modified in order to use it.\nAlso, does it only retry the initial page load or also any resource requests after that?\nAnyway, it won't help with that last error on my list. Sure, I can fork it. Just tell me what would be worth logging and where.. ",
    "Esteban26": "Hi, currently we're facing this issue too. Our behavior is similar than @jmullo and @cgcote, the issue is displayed in 5% of our builds and is triggered randomly.\nWe're running testcaf\u00e9 in a  EC2 machine and sometimes the issue is triggered for some test cases.\nWe're using 0.22.0 and 0.23.3-alpha.4 versions (The last one to avoid an issue you fixed for mobile devices).\n1) - Error in fixture.beforeEach hook -\n Failed to find a DNS-record for the resource at\n\"http://localhost:5000/\".\nBrowser: Chrome 70.0.3538 / Windows 10.0.0 \nAnother example\n1) Failed to find a DNS-record for the resource at\n\"http://localhost:5000/\".\nBrowser: Firefox 62.0.0 / Windows 10.0.0\nFor the server we're running a single instance of nodejs with express. Hi, currently we're facing this issue too. Our behavior is similar than @jmullo and @cgcote, the issue is displayed in 5% of our builds and is triggered randomly.\nWe're running testcaf\u00e9 in a  EC2 machine and sometimes the issue is triggered for some test cases.\nWe're using 0.22.0 and 0.23.3-alpha.4 versions (The last one to avoid an issue you fixed for mobile devices).\n1) - Error in fixture.beforeEach hook -\n Failed to find a DNS-record for the resource at\n\"http://localhost:5000/\".\nBrowser: Chrome 70.0.3538 / Windows 10.0.0 \nAnother example\n1) Failed to find a DNS-record for the resource at\n\"http://localhost:5000/\".\nBrowser: Firefox 62.0.0 / Windows 10.0.0\nFor the server we're running a single instance of nodejs with express. ",
    "kel30a": "Has anyone tried --quarantine-mode ?\nI've added my experience/suggestion to here: https://github.com/DevExpress/testcafe/issues/3304. We have been experiencing this issue for a while now too. \nSlightly different app, ours is a .NET Core React app built using webpack 4.\nMy Environment details:\ntestcafe: 1.0.1,\ntestcafe-reporter-teamcity: 1.0.10,\ntestcafe-reporter-html: 1.3.0,\nBrowser: Chrome 72.0.3626 / Windows 8.1.0.0 (Issue occurs both in Headless and non-headless)\nI've tried using using the 6th parameter as below (but no success):\ncreateTestCafe('localhost', undefined, undefined, undefined, true, true)\nLooking at our webserver logs, I can't see any errors or anything unusual - I suspect once testcafe gets this error, the web server never receives or see a request for the page. I initially suspected it could be a timeout issue if our webserver was getting caught in a long running process, but the tests that fail only run for <3 seconds which is well short of any default timeouts. It's  seemingly random which tests fail, (even though the tests always run in the same order) sometimes early tests can fail, but they tend to usually be later in the test run, and not the last (IE tests will generally pass after them).\nIs there any logs that I could take that you think might help?\nUpdate: Just found quarantine mode - I will see if this helps and report back.\n. The quarantine mode seems to help, some \"evidence\" that it is helping is that we have Screenshots on fail enabled, and we are getting screenshots when no tests are failing (I'm hesitant to be call it confirmed with only 4/4 successful runs in a row). The screenshots are from different tests between the runs too, which is inline with the random failures from before.\nWe used to set concurrency to 1 for stability, but I'll run some tests with concurrency >1 and report back.. Concurrency definitely exacerbates the issue and have reverted back to concurrency 1. I've have had a few failures since, but its noticeably more stable.. ",
    "pwaller": "I just hit this - the error message is unhelpful since it suggests a DNS problem, when actually it is a connectivity issue. I changed my host to 127.0.0.1 and it still said there was a DNS problem.. ",
    "luckylooke": "I have just tested with safari, chrome --incognito and chrome:headless.\nchrome --incognito fails same way, but chrome:headless is OK, safari OK. @AlexanderMoskovkin  I have some extensions but none of them is enabled in incognito mode.\n@churkin no error in dev tools console. I was also trying to step through but it is overwhelming call stack and when I try to stop just on exceptions. There are plenty of handled exception. It is impossible to distinguish which one is the cause. :/. @AndreyBelym your hack works.. maybe it is because I have multiple profiles in chrome? I don't know, but thanks, now I can test on chrome too ;) Should I close this? Or do you plan to fix it on your side?. ",
    "dmitrykurmanov": "it is ok with testcafe v.0.17.2. ",
    "berrutti": "I'm having the same problem. I thought it was related to local execution but our client experiences the same on his machine.. I am aware that it deletes them automatically, but I'm experiencing issues that seem to be related to an unsuccessful deletion. I've added that code precisely because it's not working on my current setup. I'll download the newer version and come back with the results. Thanks for replying!. Can confirm this behavior. Thank you very much. We added the changes and can confirm it now scrolls properly. Thanks a lot.. You are right. Thanks for the explanation!. Thank you very much, @AndreyBelym. It's clear now. ",
    "rieznik": "Hi \ud83d\udc4b  @AndreyBelym  @AlexanderMoskovkin \nWe also have this kind of problem when Testcafe became unresponsive. We are running tests with concurrency 1 in Chrome. And usually, it fails when the time of execution reaches 20+ minutes.\n{ Error: The Chrome 64.0.3282 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n    at Timeout.<anonymous> (/node_modules/testcafe/lib/browser/connection/index.js:226:34)\n    at ontimeout (timers.js:475:11)\n    at tryOnTimeout (timers.js:310:5)\n    at Timer.listOnTimeout (timers.js:270:5) constructor: [Function: GeneralError] }\nI also got this issue when I was debugging test with VSCode debugger for some time. Look like for us there is some kind of timeout reached on 25th-minute point \ud83e\udd14 \nI hope that can help you investigate this issue.. ",
    "dmc1522": "Any update on this? I have a couple of suites running on Jenkins and randomly stop because of this... I am really thinking about creating a daemon to keep checking the job and re-start everything in case it hangs like this, but that doesn't seem like a good solution...  is this going out already?. ",
    "SergeyZhurov1992": "Hello!\nI'm also very need this feature: \ntrack the browser memory usage (only for IE) and restart the browser when it exceeds this limit\nThanks!. ",
    "crhistianramirez": "What kind of workarounds have people implemented? We saw this on IE only and so we are thinking of running firefox and chrome in parallel and then IE after that in series but if the issue is affecting all browsers as some are reporting then I dont see that as a viable solution.. You're a hero! Thank you very much @Farfurix . ",
    "Sashikus": "Hello, we have the same issue for Chrome and Firefox on CircleCI with Testcafe v.1.0.1, any updates on this issue? thanks. Hi, i don't use Roles, but i have exactly the same issue with running tests on Firefox inside of the Docker container. \n\nFirefox 61.0.0 / Mac OS X 10.13.0\ntestcafe v. 0.21.1\nnode.js v. 10.9.0\n\nit starts happening since i'm using function to set cookies in beforeEach hook\nexport async function setCookie() {\n    const setCookie = ClientFunction(() => {\n        document.cookie = \"multiproxy=blabla\" \n    });\n    const setter = await setCookie();\n    return setter;\n}\nit works without errors on Chrome v. 68.0.3440\n. ",
    "hpinkos": "I updated my original post.  I'm able to reproduce this in Firefox, IE and Edge. \nFor Edge in particular, I keep seeing this error:\n```\n   Error while restoring configuration after Role switch -\n      Error on page \"https://beta.cesium.com/signin\":\n  Script error for \"main\"\n  http://requirejs.org/docs/errors.html#scripterror\n\n  Browser: Edge 15.15063.0 / Windows 10 0.0.0\n\n```\nIt seems to be related to using roles.\nThanks for looking into this!. Yep, I noticed that too.  Thanks @AlexanderMoskovkin!   . Thanks for looking into it @AlexanderMoskovkin! . Thanks for the quick turnaround on this @AlexanderMoskovkin, @AndreyBelym! . Thanks for the quick turnaround on this @AlexanderMoskovkin, @AndreyBelym! . ",
    "viveleroi": "The suggested workaround solves this for us as well. We're seeing the same issue in Firefox (we haven't tried IE11/Edge yet).\nCan you clarify what you mean with \"you can fix it on your side\"? \nWe're using requirejs as it's documented so I'm not clear what we'd \"fix\" on our end.\nThanks!. Is there a way to detect app-side when it's being run inside a testcafe context?\nI can filter out these errors using the requirejs onError method but I'd rather only do that when being run inside testcafe. I suppose I can set a window.isTestCafe bool myself with ClientFunction but I hoped there was something already.. I'm not finding that to be true, maybe something has changed internally... I have two fixtures for different pages. The browser never navigates to the second fixture's page unless I manually call navigateTo in each test. It's even needed in each test, not just the first, because the browser navigates back to the first page.... I had this same issue and was hoping to find a way to chain a solution. I couldn't find a way to make an async/await function in my page model that would still allow chaining but I also realized that a custom Selector property could work nicely:\nIn a page object model constructor:\nthis.symbolPreview = Selector('...').addCustomDOMProperties({\n    innerTextTrimmed: el => el.innerText.trim()\n});\nIn my test:\n.expect(page.symbolPreview.innerTextTrimmed).eql('...'). I have, but unless I misunderstand it's purpose, that's for preserving the post-login URL for future useRole instances, not anything that returns tc to the actual fixture page. No, I had tried it before posting.. Am I correct then that useRole needs to be called once in every test function? I was hoping I only needed to call it when switching roles but that appears incorrect.. Thanks, I forgot that was an option. It keeps the code cleaner but I dislike the redirect every useRole call, it's an unnecessary http load and definitely affects the time taken.. That isn't working for me.\nfixture `test`\n.beforeEach(async t => {\n     await t.useRole(regularUser);\n });\nWhen my test actually begins it kicks me back to the login page (which happens when not authenticated), yet using useRole inside the actual test works fine. Did I miss something?. I did, primarily because this was a separate issue but maybe it was only happening as a result of my \"incorrect\" use (aka not using the workaround in #3511) of useRole.\nOriginally I was seeing the browser navigate back to the app dashboard and I misread the docs, it sounded like useRole intentionally navigated away from my test page. \nI've since realized that \"navigate away\" was due to how useRole works, and is the basis for #3511. You're right, I suspect Edge is somehow failing without testcafe involved.\nTrying http-server, and Edge fails to connect to it while Chrome works fine.. Just noting in case anyone has this issue: My VPN was configured without IPv6 support. Enabling that allowed Edge and IE11 to work.. ",
    "KaneMorgan": "Thanks for the speedy response.\nyes it seems to work with just the no-sandbox flag, \nI'll close this issue. ",
    "MercianCyclist": "I've got another instance where this feature would be useful.\nWe have a case where a button only becomes visible when the modifier key is pressed and the new button replaces one that is already visible.\nSo having .click(MyButton, {modifiers: {shift: true}}) fails because the button MyButton is hidden when the modifier key is applied. Hence fails with element not found.\nBUT .click(MyShiftedButton, {modifiers: {shift: true}} also fails because MyShiftedButton is not visible until the modifier key is pressed. Again fails with element not found.\nSo as @Worie says above I need keydown, click, keyup. ",
    "ggrimbert": "Same thing,\nI tried to launch tests with following commands : \n```\ntestcafe 'chrome --user-data-dir=/tmp/temp-chrome-profile --auto-open-devtools-for-tabs --allow-javascript' test1.ts --proxy 192.168.0.254:80\ntestcafe chrome test1.ts\n```\nIn these examples it's .ts, but I tried with .js and got the same results.. I do have a proxy...\nWhile using the following command \ntestcafe 'chrome --user-data-dir=/tmp/temp-chrome-profile --no-proxy-server' test1.ts --proxy 192.168.0.254:80\nit works ! Thanks for your help. I do have a proxy...\nWhile using the following command \ntestcafe 'chrome --user-data-dir=/tmp/temp-chrome-profile --no-proxy-server' test1.ts --proxy 192.168.0.254:80\nit works ! Thanks for your help. ",
    "andrewbranch": "This is pretty crucial for us as well. We have typings that would be nice to access in ClientFunctions, and they can't be imported from within TestCafe because we use path aliases and decorators in our client code, which aren't compatible with the compiler options TestCafe has hard-coded. Any progress here?. This is pretty crucial for us as well. We have typings that would be nice to access in ClientFunctions, and they can't be imported from within TestCafe because we use path aliases and decorators in our client code, which aren't compatible with the compiler options TestCafe has hard-coded. Any progress here?. Hey, thanks for the quick response. Your workaround does indeed work. However, I don't understand why this was closed. This is still a bug with TestCafe, isn't it? That workaround isn't a tenable long-term solution; the code I posted initially should work.. I guess I don't understand why Babel is being run on TypeScript code?. Ah, I think I understand now. Thanks for explaining. I bet a custom Babel plugin could fix this. If the compilation could be slightly tweaked to output either\njs\nvar _getLocation = require('./get-location');\n var getHref = ClientFunction(function () {\n  // this part will be executed in the browser. But browser's script doesn't have _getLocation definition\n  return (0, _getLocation.getLocation)().href;\n}, {\n  dependencies: { _getLocation: _getLocation }\n});\nor\njs\nvar _getLocation = require('./get-location');\n var getHref = ClientFunction(function () {\n  // this part will be executed in the browser. But browser's script doesn't have _getLocation definition\n  return (0, getLocation)().href;\n}, {\n  dependencies: { getLocation: _getLocation.getLocation }\n});\nit would work... I have no experience writing Babel plugins, so not sure how feasible this is, and not sure if something equivalent could be done with TypeScript. Just a thought.. Hi folks, any thoughts on this? Should I get started, or wait for @AndreyBelym and @AlexanderMoskovkin to weigh in? Thanks for your time!. Great! I\u2019ll get started! I feel like I have a good lead on where to begin the implementation, but I'm having trouble navigating the test structure. @AlexanderMoskovkin, where is the right place to test this new feature?. One more question: how would you detect Promises that aren\u2019t ClientFunctionResultPromises? I noticed that ClientFunctionResultPromise is implemented with the polyfill Pinkie, so expect could easily receive an instance of that, an instance of a native Promise, or an instance of a different polyfill employed by the user. Should we just check to see if the object is thennable? Or is it sufficient to check for instanceof PinkiePromise and instanceof Promise?. > Additionally it should be one more unit test that will check the formatting of the new created error\nAre you saying I should make a new subclass of error for this? What should the base class be? Do you have ideas of what info should be included alongside the error message?. \ud83e\udd14 ^ this Appveyor failure doesn\u2019t seem related to my PR.. Thanks for reviewing! Do you need anything else from me?. @MarinaRukavitsyna I think you may have meant to ping @annemarie35 rather than me \ud83d\ude01 . ",
    "ahnpnl": "Hi @AlexanderMoskovkin, are there any workarounds for now to let testcafe read a custom tsconfig ?. Hi @AlexanderMoskovkin, are there any workarounds for now to let testcafe read a custom tsconfig ?. Hi @AlexanderMoskovkin,\nActually I don't have problems with the current way of typedefs publishing. I'm just curious about the reason why you keep it in the source code but not separate it like other libraries. Now I understand it. Thank you for your response.. Hi @AlexanderMoskovkin ,\nI did try to check whether I can use node command by typing node -v and also node server.js. Both allow me to execute something. That's why I don't know why it doesn't work when I use with --app\nBesides, is it possible to make testcafe to run yarn start with option -app ?. Hi @AndreyBelym ,\nThank you for your suggestion. It works for me now. I wonder if it's better to make it run regardless the OS. Maybe the documentation needs to have some notes regarding to this issue.. Thank you. I think using consistent double quotes for all systems is a good idea :). Hi @AndreyBelym, thank you for your reply. Will the TS definition be fixed in the upcoming release ?. I have the same issue when running on local Windows machine with Chrome 64.0.3282 on the TestCafe 0.19.0. I have the same issue when running on local Windows machine with Chrome 64.0.3282 on the TestCafe 0.19.0. Hi @AndreyBelym ,\nI think it is the issue with the network of my company. I put an extra option to testcafe cli to run on specific ports and it works well. Thank you for your quick response \ud83d\udc4d \nSide question: does TestCafe have an option in cli that can read config from a json/js file ? I couldn't find it in the documentation. That would be nice because now the command to run testcafe for me is really long inside package.json. ",
    "nzav": "Need that feature as well to add custom paths aliases to tsconfig.. Need that feature as well to add custom paths aliases to tsconfig.. ",
    "spicywhitefist": "\nIs there a specific reason that you have your testcafe code and your angular code in the same project? I believe the idea is that your testcafe tests exist in their own project and you run them against a served up or deployed app. I'd recommend separating your testcafe tests from your angular app.\n\nI am also testing an Angular app, but my primary use case for importing app source code into my tests is to reuse interfaces used to describe API responses in my TestCafe RequestMocks. In addition to e2e tests, I would like to use TestCafe's mocking for integration tests that cover otherwise hard-to-reach application states. A guarantee from the compiler that the app and its integration tests both possess a shared understanding of relevant API dependencies would certainly be helpful \ud83d\ude04. > Is there a specific reason that you have your testcafe code and your angular code in the same project? I believe the idea is that your testcafe tests exist in their own project and you run them against a served up or deployed app. I'd recommend separating your testcafe tests from your angular app.\nI am also testing an Angular app, but my primary use case for importing app source code into my tests is to reuse interfaces used to describe API responses in my TestCafe RequestMocks. In addition to e2e tests, I would like to use TestCafe's mocking for integration tests that cover otherwise hard-to-reach application states. A guarantee from the compiler that the app and its integration tests both possess a shared understanding of relevant API dependencies would certainly be helpful \ud83d\ude04. ",
    "matthess91": "Similar to others, we're building an Angular app and using our API models to set types on our mock data objects as an extra layer of validation for our mocks.  I'm getting a TypeScript compiler error for a different model we're not importing so it does seem that TestCafe is pulling and checking everything from the project before running.  Changing the import of that model to the full relative path is a temporary workaround.  I guess it just doesn't like the @example/core format we had.. Similar to others, we're building an Angular app and using our API models to set types on our mock data objects as an extra layer of validation for our mocks.  I'm getting a TypeScript compiler error for a different model we're not importing so it does seem that TestCafe is pulling and checking everything from the project before running.  Changing the import of that model to the full relative path is a temporary workaround.  I guess it just doesn't like the @example/core format we had.. @Zebirdman A workaround I've used to get past container DNS issues with TestCafe is setting network_mode: host on the TestCafe container.  I'm not sure exactly why it works or if it will work in your case but it has helped me a few times in the past. . ",
    "danielabar": "Any update on when WebSocket support will be released? I'm running into the same issue.. Any update on when WebSocket support will be released? I'm running into the same issue.. I tried the latest version 0.18.4 and it works with websockets. Thanks so much!. I tried the latest version 0.18.4 and it works with websockets. Thanks so much!. Output of testcafe -b:\nchrome-canary\nsafari\nHowever I do have regular Chrome and Firefox installed, but those were installed using brew cask, which places them in a different directory.  For example, Chrome is at /opt/homebrew-cask/Caskroom/google-chrome/latest\nIs it possible that testcafe is only looking at /Applications for Mac? In that directory I have Canary and Safari. Is it possible to make it look in other directories?\nFor comparison, when running unit tests with karma-chrome-launcher, it seems to look in $HOME, and since homebrew makes a symlink, it finds Chrome whether installed with homebrew or downloaded manually.. Thanks, specifying  the path works. \nJust wondering if you have any suggestions on how to make this work for a team. There are about 5-10 developers on the team, some Mac, Linux and Windows, with potentially everyone having browsers installed in different paths (and eventually want to run testcafe on build server, which could be yet another path).  Was planning to use testcafe gulp plugin, but for now, just using npm scripts like this in package.json:\n\"scripts\": {\n    \"test\": \"testcafe 'path:`/opt/homebrew-cask/Caskroom/google-chrome/latest/Google Chrome.app`' app/test/e2e/**/*.e2e.js\"\n  }\nIssue is if I commit this, won't work for other team members on different OS or browser installed at different path.. Will do, thanks for your help.. Removing the targets property worked, thanks for your help.. ",
    "starstuffharvestingstarlight": "Too easy! Thanks so much!. ",
    "L-David": "I think this should be in one place in the docs, as a small note in the FAQ place where you mention this backward compatibility. Maybe: \"The filename should follow the *.test.js\". So easy yet spent some time to finally come with this answer.. ",
    "ai": "@AndreyBelym done https://github.com/DevExpress/testcafe-hammerhead/pull/1343. @AndreyBelym done https://github.com/DevExpress/testcafe-hammerhead/pull/1343. ",
    "nicolocarpignoli": "Thank you so much for the reply. \nI think the example you used is not a useful one, because on the HTML you have from the beginning the 'undoButton' element. My problem appears to object that are appended to the DOM after the loading of the page.\nThis is my .jsx file:\n[\n    this.model && <div model={this.model} options={this.options} sharedCallback={this.sharedCallback}>\n        {this.rating && this.rating.map((rate) =>\n            <label class={this.hasToHighlightRate(rate) ? 'rating-rate-label active' : 'rating-rate-label'} rate={rate}>\n                \u2605\n            </label>\n        )}\n        {this.hasSendedVote && <label class=\"rating-undo-label\"> annulla </label>}\n    </div>,\n];\nAs you can see, <label class=\"rating-undo-label\"> annulla </label> is appended to the DOM only if this.hasSendedVote is true (which happens after a click in another element).\nThe debug command doesn't help me, it only shows that before the click the element is not present, and after the click the element doesn't appear because the expect get stuck waiting for it.\nObviously the flux of the page works fine without TestCaf\u00e8 and the element appears correctly after the click.\n. @AlexanderMoskovkin Hi, I get the error cause. I had authorization data in localStorage (without them, the application get stuck with an API error and 'annulla' button doesn't appear on DOM). It appears that testcafe can't handle such data. It is a known problem? Is there a workaround?. I perform authorization actions BEFORE the test. So now my question is: is it possible to configure this testcafe behaviour? Can I set to not clean storage before a test, for example?. @AlexanderMoskovkin thank you, this is exactly what I was looking for!. ",
    "richardxia": "I'm not sure I understand why the proxy server needs to rewrite the domain name and port part of the URL. I don't think in general it is possible to detect the external IP or ports because it's outside of the Docker container, and it would be tantamount to breaking out of the sandbox that is the container.\nI can take a stab later this week at creating a pull request to demonstrate what I think can be done to make the browser connection server agnostic to the server's URL relative to the host. I believe as long as the rewriting preserves the host and port of the initial HTTP request, then the proxy doesn't need to detect the external IP or ports.. ",
    "bertBruynooghe": "@richardxia @VasilyStrelyaev due to this ticket and the resulting PR, I was under the impression that adding the ports to the docker command and the hostname to the testcafe command, I would be able to get through on MacOS, although it apparently is not that simple. (See my  stack overflow question)\nDo you have any further advice on this?. This documentation update still feels as incomplete. I tried to follow it, but I still have issues. Am I missing something?. ",
    "emmnx": "Thanks Andrey, I'm looking forward to the new documentation. . ",
    "Thomblin": "Hi @AndreyBelym \nThank you for that quick response.\nRemoving the -c2 helped a bit. The screenshot does show the browser (firefox and chromium) now, however the screen is white and the browser appears to be still loading the page (the test was successful).\nThis is my test:\n``\nfixtureGetting Started.pagehttp://serp.local:3000/`;\ntest(\"My first test\", async t => {\n  await t\n    .expect(Selector(\"title\").innerText)\n    .eql(\"React App\", \"Title was not found\")\n    .takeScreenshot(\"test1.png\");\n});\n```\nAdditionally, -S does not create a screenshot, when the test failed ... Maybe something else is wrong with my (default) docker configuration?. The behaviour does not change without \"-c2\". I have to switch the browser to pass the test twice. (It always works once, when I switch the browser)\nI am using \nKubuntu 14.04.01 \nkernel 3.16.0-77-generic\n64-bit\nDocker version 17.05.0-ce, build 89658be\n . I found the problem. I use to execute docker-compose up testcafe.\nI switched to docker-compose run testcafe. Tests are faster and stable now .... Hi @AlexanderMoskovkin \nI had no time to implement Testcafe so far. I have to postpone that issue for some month unfortunately. ",
    "tmcnag": "Update:\nThe issue appears to go away when -c is given a number equal to or less than the number of test cases in the specified directory.  When I have 3 test cases in the directory, passing in -c 3 or lower works just fine.  If I pass in -c 4 or higher, I get:\n```\nERROR The Firefox 57.0.0 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\nType \"testcafe -h\" for help.\n```\nIs testcafe possibly trying to allocate browser instances and then connect to them, but timing out due to lack of tests?\nOriginal:\nI'm actually experiencing the same/similar problems.\nWhat is the current behavior?\nRunning the following:\nsudo docker run -v /tmp:/tmp -v /var/lib/jenkins/testcafe:/tests testcafe/testcafe -c 10 firefox:headless /tests/<redacted>/setup/ -S -s /tmp -e\nor similar variations (adding -it to the docker command, ~~removing the -c flag~~, replacing firefox:headless with just firefox or chromium, chromium:headless --no-sandbox etc.) causes, seemingly at random, the following outcomes:\n\nThe tests run fine\nThe command errors with the following immediately:\n\n```\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nType \"testcafe -h\" for help.\n```\n\nThe command errors with the following after starting the first test:\n\n```\nRunning tests in:\n - Firefox 57.0.0 / Linux 0.0.0\n\nERROR The Firefox 57.0.0 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\nType \"testcafe -h\" for help.\n```\n\nThe tests run, but some of them fail in random places (I believe this has to do more with how I write the tests, but including here for completeness)\n\nWhat is the expected behavior?\nThe tests run properly, the same way, every time.  No variation should exist between tests - if it fails a certain way in one run, the very next run should fail the same way, ad nauseum.\nHow would you reproduce the current behavior (if this is a bug)?\nWhile I cannot provide the exact test cases due to company policy, I can say that I have been able to reduce the test code down to just about the simplest meaningful tests that could be performed and still trigger the issue.\nProvide the test code and the tested page URL (if applicable)\nCan't share code for policy reasons.\nSpecify your\n\noperating system: Debian GNU/Linux 9 (stretch)\ntestcafe version: Whatever is included in your Docker image (seems to be 0.18.6)\nnode.js version: Whatever is included in your Docker image\ndocker version: 17.05.0-ce, build 89658be. Update again.\n\nAfter further testing, it appears that the -c option makes no difference - present or not, greater than, less than, or equal to the number of tests, makes no difference.  Still getting ERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure. or similar.. For the time-being we have moved away from the Docker container due to the stability issues.  For posterity in case anyone else needs an alternative, we are running firefox:headless in a full Ubuntu Desktop 17, launched from Jenkins with a simple SSH worker setup and it is working perfectly.  Ran the same test pipeline 30 times in a row overnight, each one checked out.. ",
    "gytisgreitai": "We were probably having similar issues with chrome (firefox seemed to be working ok). We were trying to run testcafe docker image on kubernetes via jenkins and tests would either not start at all or crash randomly.\nIt seems that everything was down to resources - initially we have not set any memory and cpu limits and after explicitly setting them to  large enough values, things have improved.. uh so sorry, I was sure I've double checked everything. Working fine. ",
    "doomleika": "Same problem here. some times it work, some times it just hangs for no reason.. Thanks, and sorry, I must've missed the note on --no-sandbox. ",
    "bjornhansen": "This would be useful! If not implemented soon, It'd be great to put a note in the docs to prevent future wild goose chases.. ",
    "anamariaoros": "testIssue.zip\nHi @AlexanderMoskovkin, \nThanks for your reply.\nI attached the html and test file. \nLet me know if it's ok.\nAna\n. @AlexanderMoskovkin any progress on this matter? Were you able to reproduce the behaviour?. Hi @AlexanderMoskovkin \nDo you have any updates on the issue? . Hi @AlexanderMoskovkin,\nThank you for your reply. \nI used the navigateTo() to check if it redirects. So, thank you for the suggested workaround.\nRegarding the issue with click: do you have an estimate on when that might be implemented?. ",
    "lightmnd": "Hi @AlexanderMoskovkin,\nI have a same problem with an iframe that contain a login window.\nI use the Role to define the authentication process, so testcafe open a new page, compile the fields,  click on login button and go back to the main page.\nBut...when returns to the main page I'm not yet logged in, also if I force the reloading page, etc...\nI have tried before the Role, also with switchToIframe, but not working probably because the context is different.\nWith Role constructor, If I understand, userID and password are saved into localStorage, but maybe can be a problem if the logged in is in another context, and not in a page of a same root.\nIn my case my domain is biblioteca.xxxxxx.it but the login window is an iframe that embed the source form testmy.xxxxxxx.it/index.php\nHope to explaned correctly my problem, also to help you to fix this.\n. ",
    "Horsetoast": "When I run testcafe from cli it works as expected. However, I get the same error when I use testcafe recording GUI from the browser + one more error from hammerhead.js \"TypeError: e.toString is not a function\". ",
    "morph027": "Hi guys...just stumbled upon this.\nOur custom testcafe docker image is still showing the password bubble..\nOS: CentOS 7\nChrome: 64.0.3282.119-1\nTestcafe: 0.18.6. Strange thing is that is working yesterday while I was about to implement the tests into our internal Gitlab and today the bubble showed up (after found a way to disable the bubble in Firefox ;) )\nDockerfile (slightly modified ;) )\n```\nFROM    our-centos-7-base-image-which-already-has-node-and-yarn-and-other-stuff\nADD google-chrome.repo /etc/yum.repos.d/google-chrome.repo\nRUN yum -y install \\\n        google-chrome-stable \\\n        firefox \\\n        xorg-x11-server-Xvfb \\\n        fluxbox \\\n    && yum -y groupinstall \"Fonts\" \\\n    && yum clean all\nRUN     useradd \\\n        -m \\\n        -s /bin/bash \\\n        -r \\\n        testcafe\nRUN install -b -m 400 /dev/null /etc/sudoers.d/testcafe\nRUN echo 'Defaults env_keep += \"DISPLAY\"' > /etc/sudoers.d/testcafe\nRUN echo 'pref(\"signon.rememberSignons\", false);' >> /usr/lib64/firefox/defaults/preferences/all-redhat.js\nRUN npm install -g testcafe\n```\nThere is no CMD as Gitlab CI is always starting the containers with bash and then executes the given script.\nThe script does things like this:\n```bash\nhere is some logic to start our apps (3 of them, backend, api and frontend)\n...\nXvfb :1 -screen 0 ${SCREEN_WIDTH:-2560}x${SCREEN_HEIGHT:-1440}x24 >/dev/null 2>&1 &\nexport DISPLAY=:1.0\nsudo -u testcafe -H fluxbox >/dev/null 2>&1 &\nmkdir -p screenshots\nsetfacl -m \"u:testcafe:rwx\" screenshots\nsudo -u testcafe -H yarn \"$@\"\n```\nand gets parametes like:\ngui:testcafe:screenshots:chrome which resolves to yarn run gui:build:testcafe && testcafe chrome dist/testcafe/dashboard-screenshots.fixture.js --screenshots screenshots/chrome --screenshots-on-fails\nI'm the CI guy and really have no clue about the js code our frontend guys are testing on their machines (and i'm trying to automate) ... this is the test entrypoint, if you need more info, just let me know.\ndist/testcafe/dashboard-screenshots.fixture.js\nimport { login, PoChartRenderer, PoDashboardNavigation, PoLicense, PoSidebar } from './po';\nconst sidebar = new PoSidebar();\nconst windowSizes = {\n    small: [599, 800],\n    medium: [960, 800],\n    large: [1280, 800],\n    xlarge: [1920, 1200] // will hang if your monitor doesn't support this resolution!\n};\nfixture('Dashboard')\n    .page(login.targetUrl)\n    .beforeEach(async (t) => {\n    await login.login();\n    await PoLicense.installValidLicense();\n    await sidebar.navigateToDashboard();\n})\n    .afterEach(async (t) => {\n    await PoLicense.removeLicense();\n});\nObject.keys(windowSizes).forEach(windowSize => {\n    const width = windowSizes[windowSize][0];\n    const height = windowSizes[windowSize][1];\n    test(`Window size ${windowSize} (${width}x${height})`, async (t) => {\n        const topLevelDashboardNavigation = new PoDashboardNavigation(0);\n        const chartRenderer = new PoChartRenderer();\n        await t\n            .resizeWindow(width, height)\n            .click(topLevelDashboardNavigation.tab.nth(1));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(3)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-overview.png`)\n            .click(topLevelDashboardNavigation.clickableMetricTitle.nth(0));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(3)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-overview-interfaces.png`)\n            .click(topLevelDashboardNavigation.tab.nth(3));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(6)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-system.png`);\n    });\n});. Strange thing is that is working yesterday while I was about to implement the tests into our internal Gitlab and today the bubble showed up (after found a way to disable the bubble in Firefox ;) )\nDockerfile (slightly modified ;) )\n```\nFROM    our-centos-7-base-image-which-already-has-node-and-yarn-and-other-stuff\nADD google-chrome.repo /etc/yum.repos.d/google-chrome.repo\nRUN yum -y install \\\n        google-chrome-stable \\\n        firefox \\\n        xorg-x11-server-Xvfb \\\n        fluxbox \\\n    && yum -y groupinstall \"Fonts\" \\\n    && yum clean all\nRUN     useradd \\\n        -m \\\n        -s /bin/bash \\\n        -r \\\n        testcafe\nRUN install -b -m 400 /dev/null /etc/sudoers.d/testcafe\nRUN echo 'Defaults env_keep += \"DISPLAY\"' > /etc/sudoers.d/testcafe\nRUN echo 'pref(\"signon.rememberSignons\", false);' >> /usr/lib64/firefox/defaults/preferences/all-redhat.js\nRUN npm install -g testcafe\n```\nThere is no CMD as Gitlab CI is always starting the containers with bash and then executes the given script.\nThe script does things like this:\n```bash\nhere is some logic to start our apps (3 of them, backend, api and frontend)\n...\nXvfb :1 -screen 0 ${SCREEN_WIDTH:-2560}x${SCREEN_HEIGHT:-1440}x24 >/dev/null 2>&1 &\nexport DISPLAY=:1.0\nsudo -u testcafe -H fluxbox >/dev/null 2>&1 &\nmkdir -p screenshots\nsetfacl -m \"u:testcafe:rwx\" screenshots\nsudo -u testcafe -H yarn \"$@\"\n```\nand gets parametes like:\ngui:testcafe:screenshots:chrome which resolves to yarn run gui:build:testcafe && testcafe chrome dist/testcafe/dashboard-screenshots.fixture.js --screenshots screenshots/chrome --screenshots-on-fails\nI'm the CI guy and really have no clue about the js code our frontend guys are testing on their machines (and i'm trying to automate) ... this is the test entrypoint, if you need more info, just let me know.\ndist/testcafe/dashboard-screenshots.fixture.js\nimport { login, PoChartRenderer, PoDashboardNavigation, PoLicense, PoSidebar } from './po';\nconst sidebar = new PoSidebar();\nconst windowSizes = {\n    small: [599, 800],\n    medium: [960, 800],\n    large: [1280, 800],\n    xlarge: [1920, 1200] // will hang if your monitor doesn't support this resolution!\n};\nfixture('Dashboard')\n    .page(login.targetUrl)\n    .beforeEach(async (t) => {\n    await login.login();\n    await PoLicense.installValidLicense();\n    await sidebar.navigateToDashboard();\n})\n    .afterEach(async (t) => {\n    await PoLicense.removeLicense();\n});\nObject.keys(windowSizes).forEach(windowSize => {\n    const width = windowSizes[windowSize][0];\n    const height = windowSizes[windowSize][1];\n    test(`Window size ${windowSize} (${width}x${height})`, async (t) => {\n        const topLevelDashboardNavigation = new PoDashboardNavigation(0);\n        const chartRenderer = new PoChartRenderer();\n        await t\n            .resizeWindow(width, height)\n            .click(topLevelDashboardNavigation.tab.nth(1));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(3)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-overview.png`)\n            .click(topLevelDashboardNavigation.clickableMetricTitle.nth(0));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(3)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-overview-interfaces.png`)\n            .click(topLevelDashboardNavigation.tab.nth(3));\n        // Make sure charts are loaded\n        await chartRenderer.renderedN(6)\n            .takeScreenshot(`analytics/${windowSize}-dashboard-system.png`);\n    });\n});. \n. \n. Ok, kind of \"fixed\" it for now using the headless browsers ;). Ok, kind of \"fixed\" it for now using the headless browsers ;). Encountering similar problem while running in Docker within Gitlab CI and already set Xvfb to higher resolution. Still the same errors.. Like already mentioned in #1913 , switching to headless mode also resolved this issue. Not sure if it's really related to this, but now it works.. Like already mentioned in #1913 , switching to headless mode also resolved this issue. Not sure if it's really related to this, but now it works.. ",
    "darina-techery": "Hi! Sorry for possible necroposting. I encountered a similar problem and tried this approach, but it didn't work.\nWhat I need: I want to populate localStorage with user session data to skip sign-in-via-UI procedure.\nWhat I do: I send a POST request to our Auth endpoint, receive a response and put it into local storage. I expect that after navigateTo() command I will see a landing page, not a login form.\nWhat happens: I end up on login page, never going further.\nCode sample\nconst pageUrl = \"https://localhost:3000\";\nfixture.only('Start:')\n  .page(pageUrl)\n  .beforeEach(async t => {\n    const options = {\n      method: 'POST',\n      uri: 'https://<api URL>/login',\n      body: {\n        email: '<email>',\n        password: '<password>'\n      },\n      json: true\n    };\n    let response = await request(options);\n    const sessionInfo = Object.assign({}, {createdAt: <timestamp>}, response);\n    await localStorageSet('appState', `'${JSON.stringify({\n      session: sessionInfo,\n      settings: {}\n    })}'`);\n    await t.navigateTo(pageUrl);\n  });\ntest('Login in background', async t => {\n  await t.expect(Selector('#<landing-page-header>').visible).ok();\n});\nI checked localStorage with a few expects, and they confirm that the value is placed where it belongs. \nCan you elaborate please?. Hi! Sorry for possible necroposting. I encountered a similar problem and tried this approach, but it didn't work.\nWhat I need: I want to populate localStorage with user session data to skip sign-in-via-UI procedure.\nWhat I do: I send a POST request to our Auth endpoint, receive a response and put it into local storage. I expect that after navigateTo() command I will see a landing page, not a login form.\nWhat happens: I end up on login page, never going further.\nCode sample\nconst pageUrl = \"https://localhost:3000\";\nfixture.only('Start:')\n  .page(pageUrl)\n  .beforeEach(async t => {\n    const options = {\n      method: 'POST',\n      uri: 'https://<api URL>/login',\n      body: {\n        email: '<email>',\n        password: '<password>'\n      },\n      json: true\n    };\n    let response = await request(options);\n    const sessionInfo = Object.assign({}, {createdAt: <timestamp>}, response);\n    await localStorageSet('appState', `'${JSON.stringify({\n      session: sessionInfo,\n      settings: {}\n    })}'`);\n    await t.navigateTo(pageUrl);\n  });\ntest('Login in background', async t => {\n  await t.expect(Selector('#<landing-page-header>').visible).ok();\n});\nI checked localStorage with a few expects, and they confirm that the value is placed where it belongs. \nCan you elaborate please?. Nevermind, that was my mistake :) works like a charm now.. Nevermind, that was my mistake :) works like a charm now.. This workaround didn't work for me.\nIn my tests user can only be authenticated via localStorage. It requires a special 'token' property. \nI try to authenticate user by running POST /login request and inserting the result into localStorage:\n```js\nconst roles = {\n  asMainUser: Role(baseUrl, async () => {\n    const loginResponse = await usersApi.login(mainUser.email, mainUser.password);\n    const appState = JSON.stringify({\n      session: loginResponse,\n      settings: {}\n    });\n    console.log(\"Set app_state: \"+appState);\n    await client.localStorageSet(\"app_state\", appState);\nconsole.log(\"Wait until app_state is found in localStorage\");\nawait t.expect(client.localStorageGet(\"app_state\")).ok();\n\nconsole.log(\"app_state is found: \"+await client.localStorageGet(\"app_state\"));\nawait t.wait(5000);\nconsole.log(\"Waited for 5 seconds\");\n\n}, { preserveUrl : true })\n};\nexport default roles;\n```\nAll the checks say that localStorage is populated ok, and I even wait for 5 additional seconds, as suggested in a workaround.\nIn 50% cases the localStorage is empty after the role is applied, and the test fails.\nI also tried removing preserveUrl and navigating to the page explicitly. No luck either.. Hi @AlexKamaev ,\nI've already tried that with preserveUrl option, and I can see now that the reason may be not in concurrent execution, but in some concurrency issue, because localStorage can appear empty even in a sequential run. I commented on this in another thread and provided a code sample with preserveUrl there: https://github.com/DevExpress/testcafe/issues/2475#issuecomment-417344521. Hi @AlexKamaev ,\nI've already tried that with preserveUrl option, and I can see now that the reason may be not in concurrent execution, but in some concurrency issue, because localStorage can appear empty even in a sequential run. I commented on this in another thread and provided a code sample with preserveUrl there: https://github.com/DevExpress/testcafe/issues/2475#issuecomment-417344521. Hi @AlexKamaev ,\nI've already tried that with preserveUrl option, and I can see now that the reason may be not in concurrent execution, but in some concurrency issue, because localStorage can appear empty even in a sequential run. I commented on this in another thread and provided a code sample with preserveUrl there: https://github.com/DevExpress/testcafe/issues/2475#issuecomment-417344521. Yes, I tried your test, and it runs ok. I'm trying to find out what makes the difference. My first option is moving t.useRole to test.before hook, because most tests contain specific actions in these hooks (mostly CRUD operations via API), and they override the fixture.beforeEach. I'm testing that configuration now.. Yes, I tried your test, and it runs ok. I'm trying to find out what makes the difference. My first option is moving t.useRole to test.before hook, because most tests contain specific actions in these hooks (mostly CRUD operations via API), and they override the fixture.beforeEach. I'm testing that configuration now.. Ok, I think I traced the source of this problem via debug output.\nMy authentication function looks like this (note the debug prints):\n```js\nconst authenticateInLocalStorage = async function(authResponse) {\n  const appState = JSON.stringify({\n    session: authResponse,\n    settings: {}\n  });\n  console.log(\"Set app_state: \"+appState);\n  await client.localStorageSet(\"app_state\", appState);\nconsole.log(\"Wait until app_state is found in localStorage\");\n  await t.expect(client.localStorageGet(\"app_state\")).ok();\nconsole.log(\"app_state is found: \"+await client.localStorageGet(\"app_state\"));\n};\n```\nIn some cases it works. Example of valid output:\n91.53: Set app_state: {\"session\":{\"email\":\"*****\",\"name\":\"*****\",\"accountId\":*****,\"token\":\"*****\",\"agreementAccepted\":true,\"id\":14062},\"settings\":{}}\n92.92: Wait until app_state is found in localStorage\n93.00: app_state is found: {\"session\":{\"email\":\"***\",\"name\":\"***\",\"accountId\":***,\"token\":\"***\",\"agreementAccepted\":true,\"id\":***},\"settings\":{}}\nBut in some cases it results in:\njs\n76.03: Set app_state: {\"session\":{\"email\":\"fanny53@example.org\",\"name\":\"Yolanda Tillman\",\"accountId\":***,\"token\":\"***\",\"agreementAccepted\":false,\"id\":***},\"settings\":{}}\n76.75: Wait until app_state is found in localStorage\n77.17: app_state is found: {\"settings\":{}}\nThis line app_state is found: {\"settings\":{}} is clearly indicating that the test is trying to access some wrong localStorage instance, because after JSON.stringify app_state becomes a string, not an object, and a string cannot for some reason lose its substring.\nIt doesn't happen in all cases though.\nFor the record, my localStorageSet is localStorageSet: ClientFunction((key, val) => localStorage.setItem(key, val)),. I will try using window.localStorage instead and see what happens. . @AlexKamaev our security guys have recently blocked a bunch of IPs. They considered multiple sessions spawning as a kind of DDoS attack. I'm terribly sorry for this misunderstanding. \nCan you please reach me darina (dot) sunstream (at) gmail.com and tell me your IP? I'll get you unbanned. . I'm sharing a couple of workarounds for those who might encounter the problem before it's fixed:\n\n\nUse a Role workaround from https://github.com/DevExpress/testcafe/issues/2195#issue-302782855 (set {preserveUrl: true}, do not use pageUrl in tests/fixtures, do not use t.navigateTo in a role itself).\n\n\nIf your application uses localStorage to authenticate user, and you populate it explicitly, you can try this workaround:\n\n\n```js\nconst authenticateInLocalStorage = async function(localStorageEntry) {\n  console.debug(\"Expecting state in localStorage:\", localStorageEntry);\nlet retryCount = 0;\n  const maxRetries = 10;\n  const tokenToCheck = localStorageEntry.someToken;\n  let failed = false;\n  const authFailed = async (localStorageState): Promise => {\n    return (\n        //check if localStorage state matches expected one\n        !localStorageState || localStorageState.someToken !== tokenToCheck\n    );\n  };\ndo {\n    retryCount++;\n    await localStorageSet(\"state\", localStorageEntry);\n    const appStateInLS = await localStorageGet(\"state\");\n    failed = await authFailed(appStateInLS);\n    console.debug(\n      (failed ? \"Fail\" : \"Pass\") +\n        \": state in localStorage is \" +\n        appStateInLS\n    );\n  } while (retryCount < maxRetries && failed);\nif (failed) {\n    throw new Error(\n      \"Failed to set state in localStorage: expected \" +\n        localStorageEntry +\n        \", but found \" +\n        (await localStorageGet(\"state\"))\n    );\n  }\n};\n. I tried my tests with this option, but the result was the same.\nI captured the aforementioned occasional failure once more: app_state is set properly, but when I fetch it without navigating anywhere, it appears empty:\n10.18 [DEBUG] Received auth response, expecting state {\"session\":{\"email\":\"\",\"name\":\"autobot\",\"accountId\":14174,\"token\":\"992idhr86kr9j0gs22gve5og4b\",\"agreementAccepted\":true,\"id\":14062},\"settings\":{}}\n10.22 [DEBUG] Pass: app_state in localStorage is {\"session\":{\"email\":\"\",\"name\":\"autobot\",\"accountId\":14174,\"token\":\"992idhr86kr9j0gs22gve5og4b\",\"agreementAccepted\":true,\"id\":14062},\"settings\":{}}\n12.73 [DEBUG] Requested token from localStorage. Current app_state is {\"settings\":{}}\n```\nThe next failure, which is a constant one, occurred when t.useRole was not the first command in the test. I obtained the token via REST API requests and used it to send a few requests to create test data (in my case, create a test organization and send an invite to another user which should accept it).\n```js\nconst acceptEmail = generators.email();\nconst acceptRole = Role(\n  \"https://app.appspector.com/welcome\",\n  async () => {\n    // register via API and set app_state in localStorage;\n    await registerAs(acceptEmail);\n  },\n  { preserveUrl: true }\n);\n//I used this workaround, because in some cases it worked, but now it failed:\nexport const useRoleAndReload = async (t, role: Role) => {\n  await t.useRole(role).wait(1000);\n  await client.reload();\n};\ntest\n  (\"Accept invite to organization\",\n  async t => {\n//create user session via API\n    const mainUserSession = await usersApi.login(\n      mainUser.email,\n      mainUser.password\n    );\n//save token to t.ctx.token\n    await requests.setToken(mainUserSession.token);\n//create organization as main user (token is automatically taken from t.ctx.token)\n    const organization = await orgsApi.createOrganization();\n    await invitesApi.inviteMember({\n      orgId: organization.id,\n      email: acceptEmail,\n      role: \"member\"\n    });\n//now we try to register a user with an email we used to send invite to\n    await useRoleAndReload(t, acceptRole);\n    await t\n      .expect(welcomePage.viewInvites.textContent)\n      .eql(\"View 1 Invite\", \"View Invites button\")\n  }\n);\n```\nThis test also fails, as I see login page on the screen.\nMy launch command is yarn tsc && testcafe \"chrome --disk-cache-size=1\" build/tests/main/invites_tests.js -s results/screenshots -S --skip-js-errors\n. @AlexKamaev Oh, I see I still used preserveUrl: true. I will try false and let you know what happens. . @AlexKamaev I changed the role approach (now tests contain .page() setting, roles do not include navigateTo, preserveUrl is false) and used --disk-cache-size=1 launch argument. \nThe tests continue to fail randomly (probably in 10% cases). I added an afterEach statement to each test and log the current app_state value in it. When a test fails, localStorage is in a non-authorized state ({\"settings\":{}}). When a test passes, localStorage contains valid session entry. \nI can also experiment with increasing the t.wait() timeout, it is set to 500 ms now. I will check if increasing it to 4000 ms does the job, but this behavior would be highly undesirable in terms of tests performance.. @AlexKamaev \nUnfortunately, I cannot remove --skip-js-errors, as it is required to suppress certain errors produced by React components rendering. It would be nice to have a possibility to suppress not all errors, but selected ones.\nI have built a sample project which guarantees reproducibility, and it doesn't seem to be connected to requestMocks. The failures look completely random to me, and sometimes changing something in the test might make it look like as if the problem was fixed, but then the localStorage issue emerges again without any further modifications :( \nBut so far I would prefer to leave the sample project private, unless we are unable to resolve the issue without the code being exposed (NDA and stuff). Could you please check your email? I messaged you with some details regarding this investigation. Thanks!. The issue is solved now. As @AlexKamaev found, the problem was caused by redux-localstorage app module. It overwrote localStorage state, which led to invalid app state and occasionally crashed random tests. Alex also offered a workaround to fix this:\n\n\nAdd a client function to backup local storage content:\n```js\nexport const client = {\n  backupStorage: ClientFunction(appState => {\n    window.localStorage.setItem(\"app_state\", appState);\nreturn window['%hammerhead%'].sandbox.storageSandbox.backup();\n  }),\n2. If you use a custom function to set up localStorage via role mechanism, pass your role as one more argument and create a hook to initialize role with proper localStorage state retrieved from backup:js\nconst setUpLocalStorageForRole = async (args, role) => {\n  //perform setup actions, populate localStorage\n  const backup = await client.backupStorage(appState)\n\n\nrole.once('initialized', async () => {\n    role.stateSnapshot.storages = backup;\n  });\n```\nThanks so much for you help! I think we're settled here.. ",
    "nicgirault": "navigateTo does not work for a single page app with hash history. Any news alternative?. navigateTo does not work for a single page app with hash history. Any news alternative?. Actually running this is OKish so this issue could be closed although I think it would be interesting to implement something\n``javascript\nconst runTests = ({ browser, screenshotsFolder }) =>\n  createTestCafe(config.hostname)\n    .then(tc => {\n      testcafe = tc\n      return testcafe.createRunner()\n    })\n    .then(runner => {\n      return runner\n        .src(['./tests/**/*.cafe.ts'])\n        .browsers(browser)\n        .screenshots(./screenshots/${screenshotsFolder}`)\n        .reporter('spec')\n        .run()\n        .then(failedCount => {\n          testcafe.close()\n          if (failedCount) {\n            throw new Error('Tests failed: ' + failedCount)\n          }\n        })\n    })\nstartServer()\n  .then(() => {\n    return Promise.all([\n      runTests({\n        browser: 'chrome --allow-insecure-localhost',\n        screenshotsFolder: 'desktop',\n      }),\n      runTests({\n        browser: 'chrome:emulation:device=iphone X --allow-insecure-localhost',\n        screenshotsFolder: 'mobile',\n      }),\n    ]).then(() => {\n      process.exit(0)\n    })\n  })\n  .catch(error => {\n    process.stderr.write(${error}\\n)\n    process.exit(1)\n  })\n```. Continuing investigating, it seems that the chrome flags are working only on chromium. I still face issue testing a microphone recording but will share here any progress.. ",
    "shaikatz": "I get the same error even without resizingWindow.\nFound that if I use maximizeWindow the screenshot will work.. I get the same error even without resizingWindow.\nFound that if I use maximizeWindow the screenshot will work.. You can use -S flag to take screenshots on failures. \n```\n-S, --screenshots-on-fails\nTakes a screenshot whenever a test fails. Screenshots are saved to the directory specified by using the -screenshots  option.\nFor example, the following command runs tests from the  sample-fixture.js file in all browsers, takes screenshots if tests fail, and saves the screenshots to the  screenshots directory.\ntestcafe all tests/sample-fixture.js -S -s screenshots\n```. @AlexanderMoskovkin \nIt'll add alot of boilerplate code to my tests, there is a way to maximizeWindow for all the tests? or another solution to take screenshot in the docker image that works?. ",
    "hauptrolle": "Hi, I get the same error message as mentioned in the first post.\nIncreasing the screen size, and using headless mode doesn't help.. Hi, I get the same error message as mentioned in the first post.\nIncreasing the screen size, and using headless mode doesn't help.. Hey @AndreyBelym , it's 1920x1080.. I used maximizeWindow() before, but this doesn't work in chrome:headless ...\n\nThe problem is that there should be a warning in this case, but I got hanging test on my machine.\n\nA warning here would be nice ;). @AndreyBelym But should't resizeWindow(1920, 1080) work in the headless chrome?\n. ",
    "jamesryanbell": "Hi @AlexanderMoskovkin,\nNo worries, I replied to you on Friday as unfortunately I can't share the URL with you. If you have a Slack group we can chat in to save emails bouncing around just let me know :)\nThanks. ",
    "anubhavsagar": "Thanks @AlexanderMoskovkin for the explanation! \nThis was the case for me. \nI'll fix my page's CSS to prevent this from happening. ",
    "ismail-codar": "https://github.com/bitovi/funcunit have this feature.. Yes issue dublication and I am clossing this issue. I decided to use funcunit. It working well.. ",
    "TauPan": "\nAs a workaround you can try to run your tests in your current user profile: testcafe firefox:userProfile test.js\n\nThanks, that helps.. (Incidently, chromium also displays the dialog to \"Set chromium as standard browser\" for me, but since it isn't modal, it doesn't cause test execution to hang.). Oh dear! I wonder what made me think I should use ok after eql. I've used eql loads of times in my tests. It seems I was quite confused yesterday.\nThanks for clearing that up. Also thanks for the pointer how to check for the actual 404, however checking for the error page from the backend (django in my case) is of course a lot easier.. Hm, I just noticed that if I mark a single test with .only I also get the warning with --concurrency=8 so maybe it doesn't really depend on the number of tests running.. Sadly I can't share more of the code at the moment. I might be able to figure out a minimal example with some time, but it's not a priority at the moment. So I think we should close this for the time being.. Note that there are cases where .match is simpler, more appropriate and more robust. But I'm not talking about those cases but rather a case where I expect the element text to be a simple string and unexpected whitespace sneaks in for some reason only known to the webbrowser (or a javascript module).\nThis is reproducible on the DataTables examples page https://datatables.net/examples/basic_init/zero_configuration.html if you enter $('tr td')[0].innerText in the javascript console (in chrome/chromium before 70 or firefox), you get \"Airi Satou\" and in Chromium or Chrome 70: \"Airi Satou   \".\n(Not sure if this is actually a bug in chrome or datatables or any other framework, but that's not really the point here either.). See here https://bugs.chromium.org/p/chromium/issues/detail?id=897373 wrt whether this is a chrome bug or not.... > I agree that it's a bit verbose. Maybe we can use Proxy to wrap all Selector's properties, and allow to use corresponding methods on them?\n\njs\nawait t.expect(Selector('...').innerText.trim()).eql('...');\n\nThat looks very pleasing and convenient indeed. And it's a more generic solution than what I proposed.\n. My full code is at https://github.com/TauPan/Tageblatt-Downloader however the download would only work with my login data. I assume that the problem can be reproduced with any site offering a download.. ",
    "dineshpaduchuri": "Hi,\nWhen i run testcafe remote test.ts -e, i get a URL where i can run in remote browser in the network. But when i run the url in the remote browser, i am getting Page cannot be displayed.\nDo i need to establish connection to the server in my test.ts file to run?. TestCafe : 0.20.4\nOS : Windows 10 64 bit\nNdoe.js : 8.11.2\nHow to configure firewall on my machine to allow connections. Any blog?. There were two inbound rules in firewall settings which blocked node.js hence my url is not running remotely.\nI disabled those rules and later url is running remotely\nThanks!. Thanks!\nBut when there are multiple Wrapper boxes like below and need to access each Label and Span \n\n. it worked. Thanks a lot!. ",
    "ixrock": "@churkin {credentials: 'same-origin'} used for all fetch requests in the topic.. ",
    "Sm1le291": "@AlexanderMoskovkin  I think it's not problem. Windows Server 2012 R2 includes IE 11 by default. When I run tool directly(not using Power Shell) on the same PC report.xml file created and the same browser is used for test running. Maybe browser starts in Compatibility mode\nNow I look at the reports. Some of them contains mention of IE 7 - that means Test Cafe started with IE 7, not works properly, but started. \nIn my case I have no successful starts and think that problem not in the version.  . @AlexanderMoskovkin . I am using short command for test run like testcafe ie\nThis problem reproduced when I try to start tests on WIndows 7, not in 2012 R2\nBut all works fine with Chrome.\nWhen I set sessionId as my user, I see that console utility creates process with TestCafe and then run IE,  but it does not interact with IE\nSteps to reproduce.\n1. Create simple console tool that just create testCafe process with some tests\n2. Run this tool using Power Shell or PSexec remotely from any another PC on you network\n3 Two minutes you will show black IE screen and then process finished with error\nI think this is scenario is very commonly used in enterprise environment and needs to fix. @AlexanderMoskovkin  I resolved problem with IE, now it started in IE 11 mode, bit it did not help.\nI resolved many problems with IE\n1. Necessary set all zones in Security Settings of IE to one minimal level and turned off Enhanced Security \nMode\n2. Execute this script\nicacls %userprofile%\\Appdata\\LocalLow /t /setintegritylevel (OI)(CI)L\nTo set privilege level where IE stored localStorage files\nAfter all these steps tests on some pages works fine.\nBut some pages don't work properly, and fail with this error\nUnable to get property 'hammerhead|storage-wrapper|r1iZlJLyM|cf-front' of undefined or null reference. ",
    "bdwain": "Yea i was doing something similar\njs\nimport {getUrl} from './helpers';\nfixture `Getting Started`\n    .page(getUrl());\nIt just seemed like a global option would reduce the repetition since I have to say .page(getUrl()) in every file. . any chance this will be considered? I really think it will reduce repetition for tests of single page apps. E2E's will typically always just point to the root location (e.g. localhost:4567) and navigate from there using the app itself. It seems like a waste to have to specify it every time. \nI would even argue that the location of the app itself is a test-run setting, since you might say run it locally (localhost:1234), or hit my preprod environment (preprod.foo.com), or my prod environment (prod.foo.com). Either way that is almost always global for the test run, and not differing by fixture or file. . I could make a PR to do it if it would be considered.. sounds good!. I have also run into cases where I would like something like this. My tests are usually grouped into suites (groups of files, each file with its own fixture). Each suite must run in order, but different suites can be run parallel to each other.\nI think a good way to accomplish this would be to allow the user to specify atomic groups of files that can not be run in parallel. For example, if I say run all tests is tests/**, but pass an atomic block of ['tests/a.js', 'tests/b.js'], one browser window might run all of the tests in a.js and then b.js while the other browser windows run the remaining tests in whatever way is most efficient.\nThis might be a little awkward to specify on the command line API, but I think this is a more advanced case and it's fine to require that you use the node API if you need this functionality.. Could the regex just be removed and not replaced then? It seems like it\u2019s only used to filter out source files that have no tests and fixtures. But you could just assume there are tests in each file and error if there are not.\nMy example works if I just add a commented out test, so it seems like actually checking is unnecessary.\nOn Jan 26, 2018, 6:47 AM -0600, Boris Kirov notifications@github.com, wrote:\n\nHi @bdwain,\nIn your example, simple parsing of the main test file won't find the fixture as well.\nBesides, it'll be much slower than regexp. If we start parsing all dependencies, it can require much time, because it should also parse all your modules/libraries/node_modules... which were imported in the test file.\nWe can't get fixture/test names during script execution, because it can cause side effects. E.g. you have a .js file to setup test database script in a directory with tests. We can't execute it to check if it's a fixture file. So we need static file analysis anyway.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I am already using the node api. Could the regex check be disabled with an option then? This way it's a new behavior that only affects people who opt-in. something like\n\njs\nrunner.run({runAllFiles: true}). @kirovboris  It would not be an unexpected effect. The entire point of the option is to run every file in the user's regex, so if they enable it, they should know what it does (and it would presumably be explained in the docs).\nThis would prevent needing a hacky workaround to share suites across different files, so I really think it's something that should be addressed.. awesome! thanks!. Hi @AndreyBelym .\nThe browser window does close when it finishes. And the problem occurs in firefox and safari and headless chrome also.\nThe debug output is really long, but I looked through and it looks very similar to a case where things work correctly. The final entry is this\n\nSat, 17 Feb 2018 19:37:01 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:command \n    {\n      \"type\": \"test-done\"\n    }\nSat, 17 Feb 2018 19:37:01 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"12479.900000005728\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null,\n        \"consoleMessages\": {\n          \"log\": [],\n          \"info\": [],\n          \"warn\": [],\n          \"error\": []\n        }\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HyY8EWUwM\"\n    }\n\nand that's the same output as the successful runs have\n\nSat, 17 Feb 2018 05:34:24 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:command \n    {\n      \"type\": \"test-done\"\n    }\nSat, 17 Feb 2018 05:34:24 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"16440.300000016578\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null,\n        \"consoleMessages\": {\n          \"log\": [],\n          \"info\": [],\n          \"warn\": [],\n          \"error\": []\n        }\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"BJP0CESvG\"\n    }\n\nI also noticed that all of that output happens before testcafe outputs to the console that the test was successful and the overall test results (1 passed (12s)). Hi @AndreyBelym .\nThe browser window does close when it finishes. And the problem occurs in firefox and safari and headless chrome also.\nThe debug output is really long, but I looked through and it looks very similar to a case where things work correctly. The final entry is this\n\nSat, 17 Feb 2018 19:37:01 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:command \n    {\n      \"type\": \"test-done\"\n    }\nSat, 17 Feb 2018 19:37:01 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"12479.900000005728\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null,\n        \"consoleMessages\": {\n          \"log\": [],\n          \"info\": [],\n          \"warn\": [],\n          \"error\": []\n        }\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"HyY8EWUwM\"\n    }\n\nand that's the same output as the successful runs have\n\nSat, 17 Feb 2018 05:34:24 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:command \n    {\n      \"type\": \"test-done\"\n    }\nSat, 17 Feb 2018 05:34:24 GMT testcafe:test-run:Chrome 64.0.3282 / Mac OS X 10.13.3:driver-message \n    {\n      \"cmd\": \"ready\",\n      \"status\": {\n        \"id\": \"16440.300000016578\",\n        \"isCommandResult\": true,\n        \"executionError\": null,\n        \"pageError\": null,\n        \"resent\": false,\n        \"result\": null,\n        \"consoleMessages\": {\n          \"log\": [],\n          \"info\": [],\n          \"warn\": [],\n          \"error\": []\n        }\n      },\n      \"disableResending\": true,\n      \"sessionId\": \"BJP0CESvG\"\n    }\n\nI also noticed that all of that output happens before testcafe outputs to the console that the test was successful and the overall test results (1 passed (12s)). Hi that worked. Thanks!\nI don't see that behavior documented anywhere. I think it would be useful to add somewhere to https://devexpress.github.io/testcafe/documentation/using-testcafe/. Cool! I figured it might be. Thanks!. Sweet! Thanks! Do you know when this will be released?. Sweet! Thanks!. @andreybelym I have users running on tablets with older versions of chrome (back to 30, not just 55). The tablets cannot be updated to the latest version. \nI understand testcafe can\u2019t directly support all old browsers. That\u2019s why I am using the browserstack plugin to test on old browsers. Browserstack is meant for testing specific browser versions, so I don\u2019t think I\u2019m doing anything out of the ordinary for it. And testcafe has a supported browserstack plugin. BUt the upgrade from testcafe 0.18-0.21 seems to have broken it. . I see. Did something related to this change in version 21? Because before that I was able to run tests all the way chrome 30. . Either way, this is a bug. The entire point of browserstack is to run on different browsers. There's no need for it if you're only going to run on the latest version of everything because that's what testcafe does by default.\nI can't control what browsers my users visit my site in. It's unreasonable to expect that mobile users will always have the latest versions of their browsers. Some tablets do not allow you to upgrade. That's why I use browserstack. If testcafe advertises support for browserstack, it should work on any browser that browserstack provides if using the browserstack plugin.\nI'm happy to help provide any info I can to help diagnose and fix the issue, though I think all you really need to do to reproduce it is to run any test against an older browser in browserstack. . @miherlosev you forgot about tablets. I want to test on old versions of chrome because my users are on tablets that do not auto upgrade. That is what browserstack is supposed to help with, so if I can't use browserstack with testcafe on older browsers, testcafe does not support browserstack and should not claim they do.. That's disappointing. as browserstack support was a key reason for me using testcafe. The documentation should be updated to mention that browserstack support was dropped. Thank you for taking the time to explain. Unfortunately, the tablets we've given out to our restaurants are on an android version that locked the version of chrome, and we have no easy of of updating all of their devices to be a new android version. \nI would be happy to make a PR to fix the issue. I think you posted the wrong issue link though. #2732 is this issue. I can look into the testcafe hammerhead issue if you point me in the right direction. . Thanks! I will try to look at that when I get a chance. . Why is that not possible? Seems like the running of separate fixtures would be independent.. Why is that not possible? Seems like the running of separate fixtures would be independent.. hmmm seems to me that if i'm running with concurrency on i should not expect to share resources across fixtures. The fact that only one fixture at a time is run isn't even documented. I could understand the expectation if concurrency was off, but with it on, there's no reason to expect resources to be shared.. hmmm seems to me that if i'm running with concurrency on i should not expect to share resources across fixtures. The fact that only one fixture at a time is run isn't even documented. I could understand the expectation if concurrency was off, but with it on, there's no reason to expect resources to be shared.. Agreed that a param would be better than trying to look for fixture hooks. . Agreed that a param would be better than trying to look for fixture hooks. . I tried turning on dev mode to add extra logging but did not see any increased logging.\njs\nconst testcafe = await createTestCafe('localhost', undefined, undefined, undefined, true);. Most of my tests do not use navigateTo. This is one of the only ones that do, and the only one where I see this kind of issue. Maybe it's related to that?. I can try adding a wait. But it seems like I should not have to, because testcafe should automatically wait, and my timeout is definitely long enough in this case since no network requests are being made. Also, my test passes most of the time. It only fails occasionally, so it'll be hard to verify.\nHow does the dev mode increased logging work? I was hoping to just turn on increased logging so next time it does happen I can see info about why?. @robodude I am running tests concurrently. They are all independent though, so that would be a bug if they were somehow affecting each other.. Sure. If you look there, the very first request takes over 5 seconds and it's just a 5 kb html file from localhost. gfr-orders-e8856f00b.css and gfr-orders-e8856f00b.js are also very slow, as are a bunch of static assets towards the bottom.\n. Sure (one thing to note is that index.html is not so slow anymore. but the rest of the static assets are)\n\nThis one had a 304 after the app refreshed in the test (but it was slow with a 200 the first time also)\n\nThe browser itself just shows my app's loader \n\n(there's also the black testcafe bar below that with my test description and browser info, Chrome 69, Mac OS X 10.13.6). after further inspection, it seems the worst offender for me is a json file that i request with window.fetch, not a javascript file. That file is tiny (240 bytes). It seems different in the devtools because that file has an initiator of hammerhead.js in the devtools network tab, rather than my code.\nThe problem seems to be when the response is a 304 (not 200) after refresh, and not so much on initial load. It seems to behave differently compared to when I hit my local site directly in the browser, as if testcafe's local server is slowing things down somehow.\nI ran node ./node_modules/.bin/testcafe chrome --debug-on-fail ./foo.js and this is foo.js\njs\nfixture('foo')\ntest('is slow', async t => {\n  await t.navigateTo('http://localhost:5101');\n  await t.wait(15000);\n  //here i look at the network tab and toggles.json loaded very quickly (like 200 ms)\n  await t.eval(() => {\n    window.location.reload();\n  });\n  await t.wait(150000);\n  //here i look at the network tab and toggles.json loaded slowly (like 3.5 seconds)\n});\nHere is the request and response headers for the initial fast request\n\nand here are the ones for the slow request,\n\nIf i just run my site normally on my local server, on refresh, when toggles.json returns a 304, it is still fast (like 10 ms). So it seems like testcafe is slowing down the 304 response somehow.. I verified my version is 0.22. \nYou want a sample application that reproduces this? I can try to make one, but it only seems to happen on my machine, not other people I work with, so it might be hard to reproduce on your end. That's why I was wondering if there is some setting you could think of that might affect how files are loaded from testcafe.. what was the issue in 0.18? Maybe it would help diagnose my issue?. I was hoping to change the body too. . the service i hit when i log in to my app returns a bunch of data in the form of a big object. One of the fields, foo, has a big impact on the login process, and I would like to test specifically the case when foo is true. If i can't modify the response, I'll have to mock the entire thing, which is hard because there's a lot of specific data in there. It's also hard to set up the backend so that foo is true, and would be easier to just mock it.. I am having the same issue.. Hi @AlexKamaev please reconsider this for a few reasons. \n\n\nRollup is a popular tool for bundling libraries and it intentionally uses es6 imports in its final bundle, even though it runs the code through Babel and transpires all other aspects of it. The only es6 thing is the imports and exports. There\u2019s no need to run everything in node modules through Babel, which is the slow part. But webpack will process the imports correctly if you allow it to, even without running Babel on the library. My app uses libraries built like\nThis without running Babel on node modules, because it is slower to do that. \n\n\nThe current behavior is inconsistent. Like I said above, I am in a monorepo using yarn workspaces, and things work fine when my libraries are symlinked at the root node modules folder like normal. Things only break if I try to use a specific version of a library in a subproject\u2019s local node modules folder. But in a standard build, nothing is in WORKING_DIR/node_modules anyway. It\u2019s all in the top level node modules folder (sometimes with a symlink), so it seems to be transpiled anyway. \n\n\nIf I don\u2019t control a library that is exported and built with rollup, I have no good way of using it in my tests. \n\n\nWhen I used to build my library with commonjs modules, requesthooks would break with some testcafe error. I don\u2019t remember the error. They stopped breaking when I switched the e2e file to Use es6 exports. \n\n\nI think if you avoid running the node modules through Babel but still allow them to be processed by webpack, things will work without a performance penalty. If nothing else, this behavior could be exposed only if an option was enabled in testcafe. That would allow people to opt in. But I don\u2019t think there\u2019s much harm in it either way.. Hi @AlexKamaev please reconsider this for a few reasons. \n\n\nRollup is a popular tool for bundling libraries and it intentionally uses es6 imports in its final bundle, even though it runs the code through Babel and transpires all other aspects of it. The only es6 thing is the imports and exports. There\u2019s no need to run everything in node modules through Babel, which is the slow part. But webpack will process the imports correctly if you allow it to, even without running Babel on the library. My app uses libraries built like\nThis without running Babel on node modules, because it is slower to do that. \n\n\nThe current behavior is inconsistent. Like I said above, I am in a monorepo using yarn workspaces, and things work fine when my libraries are symlinked at the root node modules folder like normal. Things only break if I try to use a specific version of a library in a subproject\u2019s local node modules folder. But in a standard build, nothing is in WORKING_DIR/node_modules anyway. It\u2019s all in the top level node modules folder (sometimes with a symlink), so it seems to be transpiled anyway. \n\n\nIf I don\u2019t control a library that is exported and built with rollup, I have no good way of using it in my tests. \n\n\nWhen I used to build my library with commonjs modules, requesthooks would break with some testcafe error. I don\u2019t remember the error. They stopped breaking when I switched the e2e file to Use es6 exports. \n\n\nI think if you avoid running the node modules through Babel but still allow them to be processed by webpack, things will work without a performance penalty. If nothing else, this behavior could be exposed only if an option was enabled in testcafe. That would allow people to opt in. But I don\u2019t think there\u2019s much harm in it either way.. Hi @AlexKamaev. If you don't mind me asking, why does the team not think it's important? I think I laid out some good points on why it's a problem.\nThank you for the ESM library suggestion. I will try that. But if it's an easy fix anyway, why does testcafe not just include it automatically? That would solve the problem for everyone at once rather than have each individual person have to do it in their own project.. Hi @AlexKamaev. If you don't mind me asking, why does the team not think it's important? I think I laid out some good points on why it's a problem.\nThank you for the ESM library suggestion. I will try that. But if it's an easy fix anyway, why does testcafe not just include it automatically? That would solve the problem for everyone at once rather than have each individual person have to do it in their own project.. Hi @AlexKamaev. I tried esm and I was only able to get it working by doing something like this\njs\nnode -r esm node_modules/.bin/my-e2e-script.js\nI have my code organized in a monorepo, and a lot of the scripts are in a shared package to make it easier to reuse. My package script runs uses the testcafe node api to run my tests.\nThe blog post you linked mentions that the CLI for a bunch of tools expose some sort of register (-r) option, which you can use the provide the esm loader. Does testcafe have anything like that? Or if not, do you have a recommendation of how esm would work with testcafe?\nThanks. Hi @AlexKamaev. I tried esm and I was only able to get it working by doing something like this\njs\nnode -r esm node_modules/.bin/my-e2e-script.js\nI have my code organized in a monorepo, and a lot of the scripts are in a shared package to make it easier to reuse. My package script runs uses the testcafe node api to run my tests.\nThe blog post you linked mentions that the CLI for a bunch of tools expose some sort of register (-r) option, which you can use the provide the esm loader. Does testcafe have anything like that? Or if not, do you have a recommendation of how esm would work with testcafe?\nThanks. Sorry it turns out I think I just had a bug in my configuration. I was able to get rid of esm just by changing the package.json for my e2e helper library to use a module field instead of the main field. Sorry to have wasted your time. I appreciate the help.. ",
    "denisw": "Yes, that works now! Seems we did something wrong before. Thank you for pointing us in the right direction!. ",
    "maislander": "Closing this issue. Was due to settings in my local .npmrc. ",
    "VikramAditya15": "Hi Alexander,\nEven I am facing this issue.\nI have a private URL(Corporate URL) which redirects you automatically to the authentication page when I try to access it through my Test Cafe script.On providing the credentials and clicking the submit button it again tries to redirect to the private URL which I was trying to access initially but it is unable to load the target URL page and keeps on loading the page forever.\nThis is a showstopper as it does not let you access the URL page which is supposed to be tested.\nThe target URL which I am accessing is an Angular UI.\nPlease look into this issue at the earliest.\nThanks & Regards,\nVikram Aditya. ",
    "thomasbrueggemann": "@AlexanderMoskovkin I am also seeing a related error, after I let the test click the login button and the redirect happens.\nThe following error message is printed within the browser window as well as the testcafe CLI:\n\n. Thanks for the effort, @AlexanderMoskovkin .\nI used the custom build you provided and it resolved the above mentioned error regarding \"testCafeCore\" but it prompts me another error now:\nUncaught TypeError: t is not a function\nFor a testcase such as:\ntest(\"Open showMap.aspx\", async t => {\n    await t\n        .typeText($(\"#txtUsername-inputEl\"), \"****\")\n        .typeText($(\"#txtPassword-inputEl\"), \"****\")\n        .click($(\"#btnLogin\"))\n        .expect($(\"#Header2\").exists)\n        .ok();\n});\nas soon as the page redirects after it clicking on the #btnLogin. So up until then, the t is valid. Do you have an idea?. @AlexanderMoskovkin We could also switch to a seperate issue, just thought it might be related to the title here.\n\nThe error appears in the second that TestCafe clicks on the login button and disappears in a blink of an eye when the reload to the logged-in-page happens. But nevertheless shows the test as failed in the terminal-console.\n. ",
    "leonardocaldas": "Hi @AlexanderMoskovkin!\nRight now I'm using Vue.js. I'll test again with your custom build and get back to you.\nThanks.. ",
    "webia1": "If you want to debug TestCafe on Windows within Visual Studio Code use the following launch configuration:\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [{\n    \"type\": \"node\",\n    \"protocol\": \"inspector\",\n    \"request\": \"launch\",\n    \"name\": \"Launch test files with TestCafe\",\n    \"program\": \"${workspaceRoot}/node_modules/testcafe/bin/testcafe.js\",\n    \"args\": [\n      \"chrome:c:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\",\n      \"${file}\",\n],\n\"cwd\": \"${workspaceRoot}\"\n\n}]\n}\n```. Is there a hotfix now? Could you please update? Thank you,... If you want to debug TestCafe on Windows within Visual Studio Code use the following launch configuration:\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [{\n    \"type\": \"node\",\n    \"protocol\": \"inspector\",\n    \"request\": \"launch\",\n    \"name\": \"Launch test files with TestCafe\",\n    \"program\": \"${workspaceRoot}/node_modules/testcafe/bin/testcafe.js\",\n    \"args\": [\n      \"chrome:c:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\",\n      \"${file}\",\n],\n\"cwd\": \"${workspaceRoot}\"\n\n}]\n}\n```. ",
    "yugandhar-pathi": "Hello everyone, For me testcafe -b, doesn't show any browsers. But sudo testcafe -b shows browsers intalled in my PC. How can I get rid of this ?. ",
    "pelhage": "No problem @helen-dikareva \nIs the scrolling mechanism error the same error as described in the other issue I mentioned in the original post?: \n* In Chrome not able to click submit button which is not in view port. throws error \u201cThe element that matches the specified selector is not visible.\u201d \u00b7 Issue #1353\nAddressed by PR: Fix hasScroll for body with absolute positioning (closes #1353)\nA bug like this seems like a pretty big framework-breaking bug that would be affecting everyone else, no? But there seems to be little activity or issues surrounding it. Or are there existing workarounds?. Thanks for the clarification @helen-dikareva :) I looked into my markup as well and see the issue you mentioned. I'm glad its an issue on my end rather than with testcafe :). ",
    "theghostbel": "I doubt that my changes could cause Failed to find a DNS-record for the resource at \\\"http://localhost:3000/fixtures/regression/gh-1275/pages/index.html\\ error. ",
    "workfel": "Hi, @AlexanderMoskovkin , \nThanks for your response !! . ",
    "ddimitrioglo": "Thank you @AlexanderMoskovkin! it helped!. Fixed in testcafe@0.18.4. ",
    "benbrandt": "I'm seeing similar behavior in when using DraftJS. It seems like maybe testcafe is modifying the DOM directly when using typeText, which is then causing React's virtual dom to become out of sync and causing errors to be thrown.. paste: true makes it so that it all gets input in the correct order. But then Draft starts throwing errors I think related to this: https://draftjs.org/docs/advanced-topics-issues-and-pitfalls.html#browser-plugins-extensions. ",
    "MichaReiser": "This issue might also be due to race conditions in your react code. \nSee the draft.js documentation for details.. The changes from @AlexKamaev  linked in the issue #1956  seem to fix this issue as well.\nThe only issue that than remains is that the whitespace between Hello and World is omitted.. An update from my side using testcafe with your current fixes\n\nEdge: Draft.js editor still crashes\nIE: It adds an unnecessary line break as first character\nFirefox: Paste adds the first character twice\nChrome: Typing omits whitespace characters\n\nThanks for investigating. If I can help, let me know. Thank's Alex. Maybe you already fixed it in an earlier version?\nIf I change the test to use paste then the result using the latest testcafe version and firefox is\n```js\nfixture(\"Draft.js\").page(\"https://draftjs.org/\");\ntest(\"Can type into the draftjs editor\", async t => {\n  await t.typeText(\".public-DraftStyleDefault-block\", \"Hello World\", { paste: true })\n});\n```\n. Thank you @AlexKamaev. Removing paste here is a valid workaround. Nevertheless, I'm looking forward to the support of the on paste event since typing a complete article takes its time ;) . ",
    "adrianaisemberg": "Just realized that the report shows the screenshots path:\n\n. @kirovboris when a warning is thrown, how does it affect the running test?\nHow does it affect the reports?\nIf it fails the test (which IMHO it should) - then it's not a warning, is it?\nRegarding your suggestion to add a flag (allowUnawaitedPromises) - if such flag is added, I think there should also be a way to toggle it globally (via command-line or config file) rather than only per-assertion.. Furthermore - when such error occurs, is it possible to fail faster rather than waiting 6 minutes?. > When a browser is started, TestCafe waits until the browser sends a HTTP request to the TestCafe server\nDo you mean the localhost server?. When trying Safari I get this error:\nError: Was unable to open the browser \"locally-installed:safari\" due to error.\nError: Unable to run the browser. The file at /Users/vsts/agent/2.140.0/work/1/s/ux/portal/node_modules/testcafe-browser-tools/bin/mac/open.scpt does not exist or is not executable.. When trying Safari I get this error:\nError: Was unable to open the browser \"locally-installed:safari\" due to error.\nError: Unable to run the browser. The file at /Users/vsts/agent/2.140.0/work/1/s/ux/portal/node_modules/testcafe-browser-tools/bin/mac/open.scpt does not exist or is not executable.. As in the title:\nUnable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure. As in the title:\nUnable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure. @AndreyBelym I'm afraid I won't be able to do that.\nWhat is the difference between running via the command-line versus the library?\nWhy does it work with one but fails with the other? (Only with Safari, otherwise they all fail). @AndreyBelym I'm afraid I won't be able to do that.\nWhat is the difference between running via the command-line versus the library?\nWhy does it work with one but fails with the other? (Only with Safari, otherwise they all fail). We eventually switched to running on Linux.. We eventually switched to running on Linux.. ",
    "DmitryFillo": "Hi @AlexanderMoskovkin,\nI created repo with examples https://github.com/DmitryFillo/testcafe-navigateto-works-wrong.\nIn my case server was very slow sometimes, so t.navigateTo() fails. I think it's OK behaviour, but it's not clear from docs.\nAlso I've found another case while preparing example: TestCafe fails if server responds with string only, not HTML: \n\nTest fails if server returns only string\nERROR The HeadlessChrome 0.0.0 / Windows 10 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n\np.s. In the first post I described it all a bit messy. Actually there is one case: slow server response affects t.navigateTo() which isn't obvious. Also if document.location.href = someUrl occurs after click then t.click(...) may fail too due to same reason. It's not predictable side effect like explicit delay (setTimeout/xhr-requests) in the code, it's network-dependent.. Thanks. Suggested workaround is OK, currently I do both assertion for location and delay.. ",
    "nesatuf": "+1. +1. So @AndreyBelym what about the ERROR Unable to find the browser. \"puppeteer:no_sandbox\" is not a browser alias or path to an executable file. issue. I got the same when I tried.. So @AndreyBelym what about the ERROR Unable to find the browser. \"puppeteer:no_sandbox\" is not a browser alias or path to an executable file. issue. I got the same when I tried.. ",
    "intermike": "+1\nWe use crypto.subtle that is unavailable in Chrome without SSL.\nAnd ServiceWorker too.. +1\nWe use crypto.subtle that is unavailable in Chrome without SSL.\nAnd ServiceWorker too.. @AndreyBelym, could you please review the pull requests and help me with tests and documentation. Thank you.\nhttps://github.com/DevExpress/testcafe/pull/2359\nhttps://github.com/DevExpress/testcafe-hammerhead/pull/1590\nhttps://github.com/DevExpress/testcafe-live/pull/19\nThis changes works properly for me. Tests and documentation are needed to be designed.. @AndreyBelym, could you please review the pull requests and help me with tests and documentation. Thank you.\nhttps://github.com/DevExpress/testcafe/pull/2359\nhttps://github.com/DevExpress/testcafe-hammerhead/pull/1590\nhttps://github.com/DevExpress/testcafe-live/pull/19\nThis changes works properly for me. Tests and documentation are needed to be designed.. @AndreyBelym \nAccording strange expression\njs\nconst originalProtocol  = opts && opts.proxyProtocol || location['proto' + 'col'];\nlint throws an error for location.protocol or even location['protocol'] and I need to figure it out.\nAbout tests.\nI actually do not know how to design tests in this case. I don't mean easy checks (like https,wss protocols in all urls).\nFirst of all it needs to generate certificates on that IP where environment will run the test.\nNext, it needs to check that particular certificates are used in HTTPS handshaking properly.\nAnd there is the blocker for me how to make tests properly and make them fast to execute.. @AndreyBelym \nAccording strange expression\njs\nconst originalProtocol  = opts && opts.proxyProtocol || location['proto' + 'col'];\nlint throws an error for location.protocol or even location['protocol'] and I need to figure it out.\nAbout tests.\nI actually do not know how to design tests in this case. I don't mean easy checks (like https,wss protocols in all urls).\nFirst of all it needs to generate certificates on that IP where environment will run the test.\nNext, it needs to check that particular certificates are used in HTTPS handshaking properly.\nAnd there is the blocker for me how to make tests properly and make them fast to execute.. Hi @AndreyBelym \nLint error\n/testcafe-hammerhead/src/client/utils/url.js\n  30:61  error  'protocol' is restricted from being used. Please use getters and setters for anchor element from native methods instead  no-restricted-properties\nLint rule\nRule is described in https://github.com/LavrovArtem/eslint-plugin-hammerhead/blob/master/lib/index.js\nPlease advise what should I do with location.protocol.. Hi @AndreyBelym \nLint error\n/testcafe-hammerhead/src/client/utils/url.js\n  30:61  error  'protocol' is restricted from being used. Please use getters and setters for anchor element from native methods instead  no-restricted-properties\nLint rule\nRule is described in https://github.com/LavrovArtem/eslint-plugin-hammerhead/blob/master/lib/index.js\nPlease advise what should I do with location.protocol.. @AndreyBelym Thanks for the guide. Pushed into PR.. @AndreyBelym Thanks for the guide. Pushed into PR.. @miherlosev \nI suppose the approach runner.ssl(key,  cert) does not fit the initialization order of testcafe\n```js\ncreateTestCafe('localhost', 1337, 1338) // We need to pass certificates here\n    .then(tc => {\n        testcafe     = tc;\n        const runner = testcafe.createRunner(); // But runner is created only here\n    return runner\n        .src(['tests/fixture1.js', 'tests/func/fixture3.js'])\n        .browsers(['chrome', 'safari'])\n        .run();\n})\n.then(failedCount => {\n    console.log('Tests failed: ' + failedCount);\n    testcafe.close();\n});\n\n``. @miherlosev \nI suppose the approachrunner.ssl(key,  cert)` does not fit the initialization order of testcafe\n```js\ncreateTestCafe('localhost', 1337, 1338) // We need to pass certificates here\n    .then(tc => {\n        testcafe     = tc;\n        const runner = testcafe.createRunner(); // But runner is created only here\n    return runner\n        .src(['tests/fixture1.js', 'tests/func/fixture3.js'])\n        .browsers(['chrome', 'safari'])\n        .run();\n})\n.then(failedCount => {\n    console.log('Tests failed: ' + failedCount);\n    testcafe.close();\n});\n\n```. Affirmative, @miherlosev.\n. Affirmative, @miherlosev.\n. I have the fix already and I'm willing to create a pull request.. https://github.com/DevExpress/testcafe-hammerhead/pull/1583. ",
    "awithy": "+1\nI'm really struggling with the value of an end-to-end testing framework that doesn't support https.  This essentially limits it to running on localhost, which is not end-to-end.. I'm not sure I 100% understand this issue, or the proposed changes.  Will these changes allow TestCafe to run locally against a remote https endpoint?  This use case was the one I was struggling with: to enable smoke testing from our build server against our Integration and UAT environments.  Thanks for the progress.. I'm not sure I 100% understand this issue, or the proposed changes.  Will these changes allow TestCafe to run locally against a remote https endpoint?  This use case was the one I was struggling with: to enable smoke testing from our build server against our Integration and UAT environments.  Thanks for the progress.. ",
    "Hack4Life": "Thanks for your reply @AndreyBelym! \nYour hint with resizeWindow helped me. I completely overlooked that another submit button is hidden on desktops and only visible on smaller devices. Since the first step in my tests is always .maximizeWindow() I have not thought that this could be the problem. \nI will close this issue since it was just me overlooking a html piece of code. . ",
    "Avinger27": "@Hack4Life Did you maximize the window again, after resizing it? or continued the test execution in the resized window?. ",
    "florentpeyrard": "This works like a charm, thanks a lot @AndreyBelym :). Hi @AlexanderMoskovkin ,\nI think in Test2 in my example, local storage should be restored even when preserveUrl is set to true. Therefore, expect(Selector('#id1').innerText).eql(\"Connected - paul\") should pass in Test2.. @AlexanderMoskovkin , from the docs, I can read : \"Set the preserveUrl option to true to save the URL to which the browser was redirected after logging in. TestCafe will navigate to the saved URL each time after you switch to this role.\". Am I missing something ?. Hi @AlexanderMoskovkin ,\nthank you for the feedback !. Hi @AlexanderMoskovkin ,\nthanks for the update and the workaround. Actually, I was already using another workaround : \n- not using preserveUrl option\n- using navigateTo before useRole\nThis way, local storage is properly reloaded.\n. ",
    "harryurban": "did the closed issue above solve our issue?. ",
    "zac156": "Great thank you, the work-around worked for now too. ",
    "BendingBender": "Your workaround works fine, thank you.. ",
    "alencar13": "Hello,\nI opened a ticket via support center, follow ticket: https://www.devexpress.com/Support/Center/Question/Details/T588146/angular-application-in-testcafe-control-panel\nTake a look @darlanmendonca. ",
    "jpke": "@AlexanderMoskovkin  yup it works fine in usual chrome (version: 63.0.3239.84). Interesting that the tests pass on windows. Maybe its OSX specific?\nI was also able to verify that the test passes in desktop firefox. I haven't found a way to use firefox's phone emulator in test cafe though.\n@miherlosev sorry, beta.carfax.com is a development domain, so it may not always work reliably. I was able to reproduce the issue on https://www.carfax.com/Used-Honda_m11/. ",
    "charlieg-nuco": "I looked up how other test frameworks do it. Nightwatch runs tests in alphabetical order apparently and will run them in the order they were specified in a test file. I recall selenium webdriver was similar. I wonder if testcafe is the same.\nhttps://stackoverflow.com/questions/32703989/how-can-i-run-nightwatch-tests-in-a-specific-order. ",
    "operatino": "Experiencing the same issue since few months.\nMacOS version 10.13.2\nTestcafe 0.18.6\nChrome 63.0.3239.84. Same happens with Firefox, multiple instances hanging after few test runs, but tests shown to be successfully completed in console.. Our test suite does not include multiple window test cases, but we also get browser disconnected errors running in Docker.\nERROR The HeadlessChrome 0.0.0 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n\n@miherlosev what can you recommend to troubleshoot the browser  disconnected. ... issue?\n\nThe question about debugging still stands. What are the ways to debug this? cc @miherlosev \nNote: We get this error in random order, after different tests, so I don't consider it related to specific test cases.. Managed to get an example Docker image setup, in which testcafe hangs with mentioned above error.\n```\nFROM jenkinsci/jnlp-slave:latest\nUSER root\nInstall packages\nRUN apt-get update -y && \\\n    apt-get install -y \\\n    libseccomp2 python-openssl wget \\\n    libxss1 libappindicator1 libindicator7 fonts-liberation xdg-utils lsb-release && \\\n    rm -rf /var/lib/apt/lists/*\nInstall Chrome\nRUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n    dpkg -i google-chrome*.deb\nARG NODE_VERSION=8\nENV NODE_VERSION $NODE_VERSION\nGet NodeJS the distribution\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_VERSION.x | bash -\nRUN apt-get install -y nodejs build-essential\nInstall yarn\nRUN npm install yarn -g\nSet environment variables\nENV NODE_ENV production\nCreate app directory\nRUN mkdir -p /usr/local/app\nRUN chmod -R ugo+rw /usr/local/app\nWORKDIR /usr/local/app\nInstall app dependencies\nCOPY ./package.json /usr/local/app/\nCOPY ./yarn.lock /usr/local/app/\nRUN yarn install --production\nBundle app source\nCOPY . /usr/local/app\nRUN npm run testcafe -- chrome:headless tests/accommodation/adLinks.js\n```. Thanks a lot, that solved the isssue. Beek googling a lot, sad that I've missed that thread, would be nice to have it somewhere in docs.\nHere's updated Dockerfile for future:\n```\nFROM jenkinsci/jnlp-slave:latest\nUSER root\nInstall packages\nRUN apt-get update -y && \\\n    apt-get install -y \\\n    libseccomp2 python-openssl \\\n    gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && \\\n    rm -rf /var/lib/apt/lists/*\nInstall Chrome\nRUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n    dpkg -i google-chrome*.deb\nARG NODE_VERSION=8\nENV NODE_VERSION $NODE_VERSION\nGet NodeJS the distribution\nRUN curl -sL https://deb.nodesource.com/setup_$NODE_VERSION.x | bash -\nRUN apt-get install -y nodejs build-essential\nInstall yarn\nRUN npm install yarn -g\nSet environment variables\nENV NODE_ENV production\nCreate app directory\nRUN mkdir -p /usr/local/app\nRUN chmod -R ugo+rw /usr/local/app\nWORKDIR /usr/local/app\nInstall app dependencies\nCOPY ./package.json /usr/local/app/\nCOPY ./yarn.lock /usr/local/app/\nRUN yarn install --production\nBundle app source\nCOPY . /usr/local/app\nRUN npm run test:headless\n```. ",
    "Thejaswi05": "Hi, @AlexanderMoskovkin \nare you sure this is fixed?\nI'm currently on testcafe version 0.20.2 and node 8.11\nMy scenario is same as follows. But the user role doesn't work in test2 . I tried adding your workaround to add the wait time before the test but it didn't work. Can you please update me on this issue?\nimport { Selector, Role } from 'testcafe';\nfixture local-storage;\nconst user = Role('localhost:8080/1.html', async t => {\n    await t.click(Selector('#login'));\n}, { preserveUrl: true });\ntest('test 1', async t => {\n    await t.useRole(user);\n    await t.expect(Selector('#status').textContent).eql(\"logged in\");\n});\ntest('test 2', async t => {\n    await t.useRole(user);\n    await t.expect(Selector('#status').textContent).eql(\"logged in\");\n});\n. @AlexKamaev do you need the page url ?. Here is the page url: https://dev.bbidsdev.com/index.html#/joinnow\nand test looks like this:\nimport { Selector, t, Role } from 'testcafe';\nimport { config, SummaryPage, RegistrationPage, dataHelper } from '../support/import_helper'\nimport * as mixins from './../modules/reg_helpers.js';\nconst summaryPage = new SummaryPage();\nconst registrationPage = new RegistrationPage();\nvar testData = dataHelper.testData();\nconst password = testData.password;\nvar randomNumber = Math.round((new Date()).getTime() / 1000);\n//Email Signup user\nexport const regularAccUser = Role(${config.baseUrl}index.html#/joinnow, async t => {\n    const emailId = 'lnaraepic+' + randomNumber + '@gmail.com'\n    await t\n        .expect(registrationPage.btnLogin).ok()\n        .typeText(registrationPage.emailId, emailId)\n        .typeText(registrationPage.password, password.valid)\n        .click(registrationPage.btnLogin)\n        .expect(registrationPage.bidPackPg.innerText).contains('Purchase a Bidpack and get free bids!', 'input text contains Purchase Bidpack')\n}, { preserveUrl: true });\nfixtureEmail User Registration\ntest('Signup with Biddy Pack $50 dollar and valid CC', async t => {\nvar flag = 'positive';\nvar skipBid = false;\nawait t\n    .useRole(regularAccUser)\nawait mixins.optBidPack(t, skipBid);\nawait mixins.creditCardDetails(t);\nawait t\n    .click(summaryPage.btnSubmit)\n    .expect(summaryPage.confirmMsg.innerText).contains('Before signing in, please verify email by clicking on the link in the email sent to your email', 'account creation check');\n\n});\ntest('Signup test 2', async t => {\nvar flag = 'positive';\nvar skipBid = false;\nawait t\n    .useRole(regularAccUser)\n    .wait(10000)\n\n});\nuser role in second test is preserving the state I guess. I need to have  preserveUrl: true because, I need to continue with the user state and perform the next steps. In the second test, I need it to have a fresh start. Sometimes, I need the ability to loop through the same test multiple times, So, I want the user role to have a fresh start in the second test.\n. @AlexKamaev. SOrry for the late reply. I was on leave, so couldn't reply you immediately.  I'm actually created roles to signup with different types, For example - Regular user Signup with just Email and Social user signup with facebook.\nFor example: \nInside Fixture:\ntest1 -> Regular user signup\ntest2 -> Regular user signup (this is not working as I mentioned earlier)\nTest user: lnaraepic@gmail.com and password: epic2016\n. If you set { preserveUrl: false }); it might give you blank page when returned to the test. Please set preserveurl to true.\ndid you open it manually? I don't see blank page problem.. It works fine for me.. ",
    "rafrsr": "I have a similar issue... I have a fixture with 2 tests, each test runs fine separately, but when run the entire fixture the second test fails. I'm testing a react application, the login is a component displayed if does not exist a valid token saved in localstorage. When I run each test individually, the login process is ok, but I noticed that when I run the two tests together, the second test never executes the .useRole() step and fails to find an element that does not exist logically, because the app is showing the login.\n````javascript\nconst AdminUser = Role('http://localhost:9001', async (t) => {\n    await t\n        .typeText('input[name=\"username\"]', 'admin')\n        .typeText('input[name=\"password\"]', '12345')\n        .click('button[type=\"submit\"]');\n});\nfixture('List & Edit')\n    .page('http://localhost:9001');\ntest('List', async (t) => {\n    await t\n        .useRole(AdminUser)\n        .navigateTo('#/list')\n        .expect(Selector('.page-title').innerText)\n        .contains('List');\n});\ntest('Edit', async (t) => {\n    await t\n        .useRole(AdminUser)\n        .navigateTo('#/list/1/edit')\n        .expect(Selector('.page-title').innerText)\n        .contains('Hello')\n        .click(Selector('button[type=\"submit\"]'))\n        .expect(Selector('.ui-pnotify-text').innerText)\n        .contains('Record saved successfully');\n});\n````\n. My solution to this annoying problem; execute the login process for each test.\n````javascript\nconst LoginAsAdmin = async (t) => {\n    await t\n        .typeText('input[name=\"username\"]', 'admin')\n        .typeText('input[name=\"password\"]', '12345')\n        .click('button[type=\"submit\"]');\n};\nfixture('List & Edit')\n    .page('http://localhost:9001');\ntest('List', async (t) => {\n    await LoginAsAdmin(t);\n    await t\n        .navigateTo('#/list')\n        .expect(Selector('.page-title').innerText)\n        .contains('List');\n});\ntest('Edit', async (t) => {\n    await LoginAsAdmin(t);\n    await t\n        .navigateTo('#/list/1/edit')\n        .expect(Selector('.page-title').innerText)\n        .contains('Hello')\n        .click(Selector('button[type=\"submit\"]'))\n        .expect(Selector('.ui-pnotify-text').innerText)\n        .contains('Record saved successfully');\n});\n````\n\nAnyway, testcafe natively should save some snapshot of localstorage just after the login and restore it each time useRole () is used. The following example running on different browsers:\n\n\ud83d\udeab Chrome [FAIL]\n\u2714 Firefox [PASS]\n\nThe audio has been encoded using base64 for demonstration but load the .mp3 throw the same error.\n\nindex.html:\nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Audio Test</title>\n</head>\n<body>\n    <a id=\"playAudio\" href=\"javascript:playNow()\">Play Audio</a>\n    <script>\n        function playNow() {\n            var audio = new Audio('data:audio/ogg;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU3LjgzLjEwMAAAAAAAAAAAAAAA//twAAAAAAAAAAAA\\n' +\n                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAABRAABkaAAGCQwPEhIVGBwfHyIlKCsr\\n' +\n                'LjE1ODs7PkFER0dKTlFUVFdaXWBgY2dqbXBwc3Z5fHyAg4aJiYyPkpWVmJyfoqWlqKuusbG1uLu+\\n' +\n                'vsHEx8rKztHU19ra3eDj5+fq7fDz8/b5/P8AAAAATGF2YzU3LjEwAAAAAAAAAAAAAAAAJAJVAAAA\\n' +\n                'AAAAZGiApkyFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n' +\n                'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n' +\n                'AAAAAAAAAAAAAAAAAAAAAP/7cGQAAAIzI0BdDMAAJqHX0KGYAAscm1YY/IAA1Q5rAxLQADCQAAAA\\n' +\n                'T5/ELKu5hAARSCDnk7//u7YgAAgsABEkyexDkEMsnd/xGd7u/etGWeFgfKOB8ufYt7f/ny+XeH8P\\n' +\n                'lz//rPqDH8P+hbu8d4mHAxYQBhdEAQghh5AgAwf6wffz+sHz8QOE+cw///8P1h/9QQD+Qjey4F2P\\n' +\n                '9EYiEtAFbKakUzM1NV4UgBjvc9X38lSzJVSYUnOxl53k52AITSYb7+ctr1pXhEKXHs73PP+/U/DL\\n' +\n                'ndb/ts/w6zb+vq/+KnttH/2sBBXbK/sYcEn8GHlb0gIDwTPoCoOUAvhcbS4S6ALf+XGTTPlR9D60\\n' +\n                '3TUcRPuyhpCoH////////7P0KpAAAoxhESyQMOcpKgVT3RIkFmihgbCjInj/+3JEDIACXEXVPxpA\\n' +\n                'BEeoyu3kyACIPRldpLVP0QeeqrScncpzRwgMwZLey9K9Q5w8tvpGQtSCX5KIr/tWiw/jiNnWaf//\\n' +\n                'siautbd1N/9Rka//8x//+WScKIAAKheoFDYmRFwVFAr5UcXI3kSI28T0FlotpaIqSAVBAsmz1/uQ\\n' +\n                'IbKNtlqH0afSSFOOkaij/6/b//9FZ5X///ON//qLKKkmaIAACj+As0kFZHz5tU0yiWNs4lZkCCdT\\n' +\n                'lQT9Dv/k09/km38qZX/rNA+kJ6i63//yIuJ55iPzV6V6agbJf/+QFy2ogAAAUn6BYFSA8lBpGPGO\\n' +\n                'ShZY26JB7YaVKZieZEcYNadL/46CP+I4t/gpHP/yvRe//+UOJuzD5iPRjvR9sfd/M3ZZIgAwY5uA\\n' +\n                'lBqBEwEEFBqM1KcsHR2vV//7cEQMABIsRlZpgWyURwjLDTwtk4jNGVeHra0xEJ6sNPC2TlLJyhgQ\\n' +\n                'dmfAt/WEyhjsb+sS03/WDELxf/+wun+W///lZKNR///phVRvb//Go2mksiACDjsgC5EJFdUByl0X\\n' +\n                'T9ZSaoYmOGtxFawwRGIu/KK5rqwyqOw9/WF1T+6wxFg7/7q2IuqW6z//9Ym5A9m//+Yv//zh+3e2\\n' +\n                'IBSV2EEegdR+EJKM8h1uB/qBHvFI00TtwYx7AEWVxe3SntgbQ2v+oMCX8XB0Q/+eBpNGnTDW3/+O\\n' +\n                'Af9///6g0Jf/849t1sYAacj0hBTUQlvQo84inViPeMDTFQpmhE/t+2Cu07hQj2CLDb+yg+Fv8VCM\\n' +\n                'SH9kdhdNKJ0kMrNP/8eBf///+YP/kZdtowDDR4Ng9BoELLEUyHEnBIZBwIn/+3JECwACNj5U4elp\\n' +\n                'vEamOt0+KouItPdZp7VTMRsYq3Txtk7BsVKhgswjukDmdD61tUsNk3/og7xef8RwiDf/1FgEaHA2\\n' +\n                'Nuh//3STWh///YhEZ/5F67WMAIuShgSIYSw0z7SxlGOcyRbHS8u1M2kkdNYs2fNwJo3b6/WQEr/U\\n' +\n                'thtGz/iJDAIOp/nHUYEYaI6BS48Jf/8CsMv/w5fvtYE2DEYwGozxXgjKoHiE+eExfz/R5+n/rR1x\\n' +\n                'sJ3+Rckki9Fd6VahBD/9YN03/hBALhY//Q0HQg0J9P/+axiH///1DE2bW2IAwuShANRnkmQBLAwT\\n' +\n                'jdRDnU6XTqLzhP+gVsT4bQXkU+LsLZmdQUA6/1hMT/th+FYgP+pGphYihc4PNKZP//WICXf/rVmG\\n' +\n                'iVIBQAJ0QBJGSAjD8ShhIf/7cEQJAAIoMdD5+GuQROY6zTwtk4jA91enrgsxD5iptMw1zm7TifUK\\n' +\n                'pXbxDo6geTYC9n9aCGy2XQPH16t0QVd/0gOhCb8iCQf/1IixDVrNv//yIW//mbtdqwAk3KGAbAmo\\n' +\n                'czwxDCONzORTqFxLuoCDRzsU1gnp/14Qv9wkW0QzC2f9QliX8iC8bf1vUw+hqW6y8vP//1CaFL/8\\n' +\n                'N7f/6BVFR0MAwgbSFEJXI/CYqdQoQhhLgOFTTYU7kI/Dx+zZbiNfWH6kn/QDIw2P43AZGv/nER0h\\n' +\n                'RaiWv//rFbjg///+SiTdlkIAISUBAGoAInCScgEHleJIUHA7AUOnHiq69IZC93CAwujNTT13W2sG\\n' +\n                '6L/9QVIdPfGYVij/tVi9aUdaX/+MGUP/qXdLYgWgG8GBce5NOiY8yp6pU+v/+3JECYECJTHR6wNs\\n' +\n                'hENGKo0+DWWIuPdFp4ZSURiYp3WhtkgXlTmO1E7VdwrVMJLtcy2rywHOVO7LOBgL39YY0f5EAXTb\\n' +\n                '/1SYAutUn2//pg7RJ//w5J7bEAEE5QgIBFnvQS4wiNJ5OtLkgEOY3OOI2OCRvmgDKaPvVbWoaCl/\\n' +\n                'WIOa++MwRiW/oPU40AyqWZF/R//1hdS//9Tt1sIBILkM9ylOcsTOLYTo+T8fF7PROKXapdIkFhX/\\n' +\n                'JC+lFy2woMlv7ioDbb8sBQTH/aZFYNEBeUMiX//rOBi4Wd///86x01iAAAS3AAzfFvH3ea27DlQS\\n' +\n                '+lNF45KJmvAlIz81Zhm+FKyorxvmMQVosnmwBtiI/uMkjt+VCiXf9qnEIIm6yW0//9Q1KVLbYQCA\\n' +\n                'HKGB4Q8lIaCvCFLKlWFaof/7cEQKgAI1PdBp4ZSURKYqLWAtkoh8xzemZk5BFBiodYU2YifJBP0V\\n' +\n                'c66AHOP4ACJp4Xn0wxqtv1BqRh/Mgppl/5kRIJYCKUqyQ1t//WK+QX///5i6dmsQAILuAAuzTnSh\\n' +\n                'nEKXlDqwriRF2V5Pg+9h66syNNw/T0mgEt2sz6w2TzfqGpD+PwMpl/W9zYGgZNlkZpqWf/1hyyVF\\n' +\n                '2+xAAAC4YEpByBQPTkdTU9BIlGxXEMuQnDT/gd57r30ZztzzMsre7LLAQcRBFXqMQs+MF/4xP/zY\\n' +\n                'S471///kiVv/yLkkbQAYatAAsqKLuT8eWA35hMhdqNT0fldazKpd0WPR829BYXWWxNVjS7GoBgaf\\n' +\n                'zQBYKX1TKAkv+2bAxDLVUdzjf/49T6oS2KAAAAygAXFGKmAWI1VGd4PJkMj/+3JECoECRjFM6TqT\\n' +\n                'kENGGgw/DYGIhMUxY2pJARIYprTNNch0CRwKZoA/OVxZJnIEOoM5LNUcRUkXQMRDsmzeomwFrGmh\\n' +\n                '+sPN/9MkghQNr5t//9RDm/+pyy1kAI3gEE0Xw+kNJUn5UQZKWiHtLFssspmh+PfyPmck+1bWUpF0\\n' +\n                'kQV8PL/rCtIf3k4C039SVZsD0DO6pSek//9Qxg7bqAAFjQZQMNAFmVAUKrSR38HfkRAANwDhz5sl\\n' +\n                'CGenvwX02Ht6zFWTYGki3mifUspAOwT8j+sTR//W41hM327//5HomX2QAAhH4ACA5EKiZ0GC9qxe\\n' +\n                'Nmi8T6CXGzA2AuBN9g44QOEG7qN9aKszAFkl0PzgbA8vfUJB/62rSE2AtuyzR6n//ye1FoAAED0B\\n' +\n                '9DePE+mM4JWyjYtryhQhsf/7cGQLABLHMUlB/JtQLKS6TA0tU4p4xScmbi2AoBLqtBG0NqApdQcE\\n' +\n                'jqZhGhU6sMAkDnOxAPC51Ig3eHLmGFe3jKWFEh2GgFdub19MgAG/AKIK6DslWoKZR/9bk0Fxn16/\\n' +\n                '/+av/9ackmoC68AMGu6HL0jpMJkJOlMedCpJoM56nvZQURQb9AFaID/lZG/+tx3AW3C/gAAcAuBM\\n' +\n                'eYaGg/DxEJo8Gw+i9PCyYNDg0GIJs2QlTGm7BQhPeZkDZ7dpq1neEkxylT+mSkrayK93/xrR0Rla\\n' +\n                '1a2//61BUpf+th9hmn31t//kOZ67b0FyK2hIKQrs9FCRCAFpdAPLJ1P1dEKmLX+sWbfysdF/+tiT\\n' +\n                'AXnVG5gAA8AWBciG14IWl5ksNUDpv4GA7NhETHoSIcCSOSlUoJH1mFDL51r/+3JkFIAScTFKSTuC\\n' +\n                '4Ctkum0hsXyJmKMrpm6MwKwSqbSDwh69v86uu3JWYoWkQfYzw/7G4EkNPNH24Xkv/0SqGvDQl/U3\\n' +\n                '/+U1q23agKCbgADgs5ahYzsasDAndRZzgX9+/X7f7hYi+34/igc/8xLQZ2C6XrDUNYAAAGIAHiMQ\\n' +\n                'SS/GrTbJNP1hyMILTua8XaH+seBodjgVBTmTpHOHJZE3swdrsYjWCBQNYxV6yUCEoQJavw8yX/mo\\n' +\n                '0QgMigkXtnP6HbdsyDS7dRC0uLKo6dhbZmAPfKgd7VnJwt/WcCEOL/HyKox/9EqhLFiCW1UGRugA\\n' +\n                'AEVgAIZ0dLDAGh6ox+WAcXoE8kilaFic3BiQ1jWQiDTlBBVtHXuSblRxFSRMgc+FIdvc1AYMNNPt\\n' +\n                '9Qi3/0CIhA4XIRVX//+ZJf/7cGQmgBJhMMrpm5MwKqSqHQzRUMnUlyWjbouApJKptDK1pyCUAGBz\\n' +\n                'AACEVSkI86JZCzHR+6Ieqz72XXVT/0RBMbL/nSW/+gToQUQYLAKCgAAAEAAAkAbSeBcy9zLpQ5b6\\n' +\n                'BwWnEIjY7yVSsgeSiAgLC7EKf6J1rXK8zruETMUKVqzmfO8qI8ByEctBfrQC6yv+o4VQtqDjh6eX\\n' +\n                '/W7LtkA63bOn2k+7A0Dz0AvQGtVJ2OSkco6/zoGCX/5WLR//UUQUICgrtQmcAABiScg4ytr5nx2D\\n' +\n                'HxWUxIwMIBfuNBT2yIhGDIjadv71Fe90TEawNGQuA190SaAEDBvRq/4eH/6piJowIGAAkAHJCaAu\\n' +\n                '3tfMiUIRiCWiP8XGH6IiCpDWRONfLGrpHkyRszqRMR9AUWBmEX9kg+Ab7fn/+3JEOYAR7SXJQNui\\n' +\n                'wDskqRkndGQHYJUrg2YsgOoSo9i9TZhgTH/+w3gm2YAAA2AdJJAgVClN3LTDWmar1GGzi+bjKpSM\\n' +\n                'hHPm/yNEk31aRdBsfElf8oARg0E/1Cq/+pyMEx/+RAgAUAWJDHH3Nr02uNH6QhL8hZ+drgnLDWMR\\n' +\n                'DzLTKPtBX2yRSWkkQ0GRBTJsz+gFqicT/JQQL/+5KDZVAWwAAwALEw+21K7HYxBw30STfsKCB6DG\\n' +\n                'JAjvuAMjpxZwn3DlJTwi9WdQdQ6wNVRAMwTbZIogJeIabN8sB4f/pFYOEH1YkFTAMfADdVK1ucwd\\n' +\n                'AN30AWtJTxAhNPHZr9Jhbg7B61VuISn2+oxAjjRS/LI2f/3G4NkCAU4t1vjPbbm/9WoimkXSMBkI\\n' +\n                '2yExoLM1bYFAU4wMCgKwPP/7cGRNARIsJUjI25rAMYSpOQswdAjMlR6mcozAwhKldD01kK4Mnca0\\n' +\n                'z6JiNwCFIEQYxV6BmBgCobWaP8lA03/7mwiRP0f9ICTdgAwVuz9Dw7LhpbsScZ4iYXPXr8ID1rHD\\n' +\n                'dM49VrGKhmPf0wEqJ235NF7/82DEZiIAAqGFAhJ7HDvNrtkKL4hOn1gJmIXLjp5VAdKcpauKeZRx\\n' +\n                'akjUA64tp9nakiQ4Bbwg5FXywJj/+41hthAFiQQEMRJrg7XUiWsioUwN52ZJBpCQAHtxpmfomp2v\\n' +\n                '1NbytSEmhNDhV7vPolICGFiR/GoGmof+tx9DDeFQHA5Btw/3tXG3sDoKY2kwFBrCBGYnE4yAd2JZ\\n' +\n                'F1EKJ51CodYGTIbWg/uTAGUwZg3Z/LAmP/1uUhF3QBQXFST1t5Ru22v+iGT/+3JEYI/R3yVIKHub\\n' +\n                'MDxkuLELUWoHWJceBG5swOkSosCN0Zg8zddjkzAAqGnHrSB8YlkreTCx1B1C1gYheCys4v3MAsEK\\n' +\n                'gm3xuB4X//UN+moICiNj93L1tuNinVIvUkJTPzZXcOOWWoPyURIQceVxB589bsiRwENCckVdaiNB\\n' +\n                'D8ZlJfywMT/65TDxOkFXmkLcGZ7VVNBGy8CFJAlmrsSKcMRdmoDbVmReVzFff73ljMvEBDIWGqut\\n' +\n                '/9RRArI4UvxdCLf/zo9AoQAza5MaRvfkWYLghusMoKHlBhMAvM7oVBD4SceApBUmYeyqOLuagTxV\\n' +\n                'H29jcLTQ8Z5/lgYn/1sNcYRRI4WSIGris7sLbAqi3EwUADmwQJgy3zuioGM/jtPqiqVYt3LC1OeA\\n' +\n                'bWKIW2f0w1SKm34uhNH/+//7cER0g/HVJcgI25swOsSosCdyagdwlSEDbgzA6pKiwG5NmBKlagUI\\n' +\n                'ACDZ008HJ7220jKlqWSFQXbHL3pFOC3YkNns3LFqctN7e1tUUwDKjvQ9SyUCHRDl/koNn/88LsvU\\n' +\n                '6gBhQKDn1mfpQSd0iGgcNGBth0uWAhZYVuRKFmQMjo0l603vHnWdQ+wME/FHQT9ZwIBhFl/isCBf\\n' +\n                '/2JVCWAgMtRvER/Xx8sEfdBRoIVJz0VpA9xHbCwYYg6r0h+npG+z1uiiRwCLDiRUvuahZsMofb41\\n' +\n                'BVf/UeF6NCAVQyeOoFoeUenGYodMt4tUKmZ9boJBbiRtNAx4zbyX26kn7rSRRIcAJgZo1S+iMIbz\\n' +\n                '/i6GD/+xGkhVAgACw4YJ7mzXdTMFJypgmBCZ+hoLBrbPKro0kcJgKKVKGW7/+3JEiQGR2SVIQNqb\\n' +\n                'MD1kqKAbdGYHeJUeo25swOeSoxSdzZiqOLueBQwizt6iPAhsi6C/j8N7/6mI0YBTHA5pETSWXW/j\\n' +\n                'rGgsAy3phATnfCYJCVXzqqmBR6VqnKl3eVRYWpycAZMFEG7eoshAk6r8VgYi//zEhH3AaEYj7rny\\n' +\n                'nISgSDA4QqBjtyhybi0oUFzCDRPmtjTPxZ/987qCwYSw3hvW/UiXgMQNOPP8XQxP/qoCBWKwJJJt\\n' +\n                'EMkuwfB7ykxUCiIAtxqfyQhDIXSHAcwQicXLlqcx1s5wZ8BD0ckwWr0gywKtn+IoN7/+cG9/+tUC\\n' +\n                'AAWONAUs136p4g+5eBzACJnysQcHu46YwIG8H7iRunsQPf1pIolIAiQySKXrLAC9hkE1fG4Qn/1O\\n' +\n                'SgweKGkpNn4lvOJgjSwEBP/7cESci/HXJUeou5rAOySooBuTWAeQlxoDbi1A7xKiQG3RmFODAYtO\\n' +\n                'XooHA9xH/TIMbCWMU+eEj7Y6kiiQ4DN4T8apes4CYicT/EqIT/9ywVQ7qoQRDfo6gQV6kQVBTAgV\\n' +\n                'ONDAeDLQnyT7DOsjHDkoj8xhUcXc0AO4QIfbrSJkAnw7Js3xdEJ/+fFYHbhVdBAoW/uoYG0YQAdA\\n' +\n                'CYOEZ4QjDQ5V89rLwdClxyypXpPoFhdycA5qDMG7P7Bf8YL/iKDz/+5KI0rFSQQU2LsdFNnS0SDg\\n' +\n                '4CBp4bfcoAnBZUCAk+54QNnrsSaDZ1s6h/AgpIepaugQ8AgyI3NE/isEJ/+fF8RNgbaSPL158LYd\\n' +\n                'FQ4aDAoGpRx+igmcF2i+pvBcnja3WkPNbOZD+BRqOtS1dRmBQCRND8RQlv//+3BEr43x5CVHKLua\\n' +\n                'wDtEqKAbk2YHdJUaIfJMwOUSokA+TZjrclCvHuBw6iGbopImhQzUVFTj4xK+AGjjo8ZHMsCm7dEu\\n' +\n                'K+06kiiTQAjBRkX6kSaAWkI2Rf4uiW/+tyOGH8U4tS+t8dJzHbDgxXoVITv7xIt9IDIBAxlRoK+d\\n' +\n                'h8+1llJFEiwGiwbUav8yC3A7m/EqLX/7mRL1lig1coz2q9DYMRnayWlOCEEmCLfs4BotNqqAOCbX\\n' +\n                'IYhtcFh1HF3LgHcCGH0H6ZcAx4OwbofFYKv/1zIRd//pED0mb0VetfOwG9SM7EQIAzghBIgi50OC\\n' +\n                'EBmSx0zeWUlPB2FRkumTAHfCiG6H0AwMPD/h5Cr//kvZQiAaU1JovGF4tLVAlLgqIjSYdSKd1xg4\\n' +\n                'ClciIg688rgzePZ0h8g0//tyRMOP8eYlRgEbozA5JKiQG3RmBziVGgLubMDfEqJAbc2YUkPV6KQ+\\n' +\n                'QIoxPqS/iVFr/62I8TKrTGlYjc40Kqw5kwhJHhGtOlsubMNrWKm6Zx19nUWQnkxV+iGplV/xWP/8\\n' +\n                '6W/s//Zo7P3+nd6Kf9QAAqNqEFjWpZ+Su/MJHQpmwzpxB8R1IdWWw6v2y81/WqiXgBAUZn9jcG7R\\n' +\n                'Dzz/G43/7DdHd/9f9liej+j67/f/SADLPAS1ElVeb933XFhIqWdZyfcYkpKcecL/LdErPnUlol4D\\n' +\n                'kEDGr/TD4R7b8Vh//2LJt+/25C3uV11X/19v9m2j9gASNwyCRuNvfG1noHUZaFAp1GieMHvwDRZ/\\n' +\n                'dyscOUkvbXCo4nTJgDDkhRDdnZ0kSwCSgZo6r4lS//2F2XKdezq6dvq//mP/+3BE2o/h+CVFgRyT\\n' +\n                'MDgkqJEbkmYHfJUWBPKMwOOSosgdTZC1XV+13XY4sIMB5IxuPrK8zDTGChQedqMhbFpAsc1qpt6T\\n' +\n                'DOQ8qOPchgGJQCDDdn6zgJBCJL/ESP/1+xZPAbxe//7fTq691X/dogIEJMySQrEYFEZIWC622ITj\\n' +\n                'w3circJCTQNk2o36mdIsgnEuq+54LWg3g+3xFCv/+wvRUP/27m9tN2m/f/+taP9JQWpxCcZ42I+4\\n' +\n                'Q/FkPjGRmKuRAmeT8VdZkU2+ozAfU/3PAgwhD7fKkP/2GkbP2f////oAGpmhOjFY8VbEDRDpiAEO\\n' +\n                'wYFCp3EJFAbaDGhwTmNxo49jC2/l6spqRLpFgM0EBwIquzstRGgkvHLUv4ZMQv99RxEhoXW+6MZU\\n' +\n                '+wwoqhKRRI6i8g5tzt/d//tyRO8M4gUlxphagzBChKiSGzFkCYCVFENqjMEOkqHEbVGYfo22piJv\\n' +\n                'dShJR4oggjWZft8KrxCotMXJNSs3CoPNGOe+xhnGOaL0zIOgKzfUUQSuOer8sI//VKIxP///////\\n' +\n                '9FUAGmBBFoGHYs3hYWGkVVLQAMnpNgkGw1EwIFHpBhQCRenmL2ecTrJgDDIWBNu7E8DYgNqPP8Vg\\n' +\n                't//VOCo0/9f6ru//qu/p9mxZAbqICRkELcuXZJt8Hcf2KtJPAp5clmAPh5NavU7VA3SKn9IWAYrf\\n' +\n                'inEn+tX1HvV7lr+r9KX1K2Xf2VfTb9Z6oAVqBAggHHKp9ZBUgHg8v0KnQis2NW3RBKAb/FqmlOUt\\n' +\n                'Y/PNZkkiNAqlFwpepZGARQDILV8U4l//qPi8FFVd9/9/pmvo+RmLP9rrVnv/+3Bk8IjyBSXHODmb\\n' +\n                'IDKkuIAbLWQMDJUQQ3KMwN4SogBtTZjgQBGVcFRs2TG/8UglLCYHQqFTIQzK8qHY6CGSk8aRold9\\n' +\n                'TOZENAfscKX5wMHFxf4lQ3/ZdWvOHv35P36/3blL6+u3s/i1n7EqEgxXb8iXufklCV3InFVzqmnP\\n' +\n                'xmB0KblE49JhnRc1qsXgLgmp5/ohl8bL/jcJf/8+Lox/IejR/u2s1a9v+3/+5gSd1QK7xpkWjhIm\\n' +\n                'mJAghCTpz5EuirJLmPikbQQTLGrXskBaEiz/RBWxav+Lg6//zn8Ylj4c8Z0d1vPa2fvf2VVJ++9J\\n' +\n                'ATcbSEoVC6Xy9mmUtdCgCccJK9l1tiIuWJYS+vQc3qdlmAEYnE/qMwKY70PxdEL/+bC+Fvf9nZmV\\n' +\n                '3qqdf///7Wf/SC+HRtxI//tyRPUMAkUlRRB7mzA/5KkdCzFjCcCXEkHujMEbkuIIbc2QzVZVZdLw\\n' +\n                'EhNTBMBBs4kPBIGutSwcROBcFvOpntmVZZKAG8GYT/WGESJ/xuDf//nCvT9Y9lvu/3dDrvLI/nPs\\n' +\n                'ejsXDggG5JaCIQWTVdd7znOsOmBe2Gs6qbx94usipEjvqRpHQJWUf6QJ4Qm/FkOv/1uThX+3H/3/\\n' +\n                'zP/u87i1tHd/jwAgAByasGlEGTqZSo95VysQygMjVaVd9bRoSsuaiW31VJFECPHal+kLMIl/EiEy\\n' +\n                '9V1fUf6FdQ/+7vpV76e31f+i2QwL0KEkSSCO6kQPKdMto1wwOGzoZ4Ghu7q2hCPTKsCQzdiWQOVg\\n' +\n                'CidZZUtErgqkLzPP6ZoBj8GgG6D+KwKv+/XNw87/3f98Z/3/p+1f21dN4LP/+3BE8QDCASVIMHqD\\n' +\n                'OEOEqKIPbWQIYJcaYe4MwR0SocSeTZgBYgF4t/jFqcQ+6YD8AkJPTVBYHk0qYWYSbSlBkiWbOqXN\\n' +\n                'wRkVM8/1B7RU/j8N+pv+6Zb/tTs9nvvQ7R28V+1lcl6+z1pEWq7Ax+T4htn1MNJil+TBDs+hEEg1\\n' +\n                'yoNUEO+fxoAh+nlDf55xOdHwAaoGYTV1pDpASfEamyPxuCr/21sPsVJ/b3ZK5pNKXGeiG6kVfsKt\\n' +\n                'isfah7FC9TDC8mTUAWAEKVVuJbJaRK5WZ1fIYIs6ruQcZS2lPnUn++2Opv1GIJpEUvzj//zpb/7G\\n' +\n                '/t+//6f/9/7l4AAALTfjVs1ZH3YTjA8BJnCI8NWf2cS+KoSj5RxRGWVKGUaWo4i6RDQMPw+psj6B\\n' +\n                'fAEGIeaP8bgmf9vYbpW///tyRPSAQgAlR7hZayBChKipD1FkCfyVDANybMEZEuHEbcWQv6R9nlm3\\n' +\n                'a++6uhAzMzFTcamaW0z+rmCEf4j9npngOtuBhwjevy1kwHKnPnKl2p31UQ7o/0wDdEWz/OH//sxF\\n' +\n                'Nv/zf///37u//tQv0wfqKjCygzlss0RYYnUDSQ6kwIgJ+XSEQqdUTLVrcpodvPOqRYvgY4KGnnn6\\n' +\n                'jpHAgQClkVfH4Rf/fZhdkhTTrQq1CKy+lZ1obECURZs1VocoyLJoQwnc3pMPtbSsEEAVLg0gO5mX\\n' +\n                'D44Qd6hYKexrJungNFVUjVtd6iUP/rOAQhe/qf/+Vmn/0f+zv/inb/+3+kEFGuiWFsju9ar61XKN\\n' +\n                'D2XyqSsYMSjZJT50ku7qessAngmFq9y4DY8HAH2+Sgq//qlEeNnbT/HEn/b/+3Bk8wRC1yVEENuj\\n' +\n                'MDZEqLkLUGYKjJUPI25swNmS4cBttdBr2HPZFkbCyE3H5RPegIEQ4zk1FQ8X8P+0B98ChNjCnEQC\\n' +\n                'qlplPnUtZ99QkyH7koAEYC0fb5w//+xNIFFtlzJf9tPrt8U/79d1CgAICQAgEk5IQimTdzYwXZVY\\n' +\n                'UPA7cn5hAxpgwOggtPqZ0kQR8ov9R0CPLv8qHX/3VRF79H/+zqqWn+xGlX/3N6SgcIRbVrl288Cp\\n' +\n                '32fILmz9nVv3vvmRFxdmTN6KjKkkTIGOiSmzepYaOXf5wYvt1Vcllva8tbTYjX1UXJt2dpKtPQpT\\n' +\n                'so/rWrYgT2TBGMfNzPWblpZiloURm0nNZprhAFAFKKpUhsas6rMwAxFNn9j4GIEdn+VCn/+5MFr9\\n' +\n                'n+v/kv1X3dvtTZMJu1+l//tyZO+EQt4lQwi7ozA0hLimDy1yCOiXEsFibMDvkqHIbDXQRAY4+shG\\n' +\n                'pzearKBH5GBnDUVy+ZRe5VC3IWWeABE9v3D4P2/h/2anfvRXJd1yN1H29Ndnv+AzPqYuAR6nSOHn\\n' +\n                'P7f/NY+ULve4RCxxg6sy/QoeGjH7iV86kL73rOAnRkv6zAE6KC/zgwv/3JQq9W3ZmlMYRRs9O0TW\\n' +\n                'Zqefu6LlUS1rYb2Evk0FVTOnNA8QVOzYRDx0xaiRbRDqAerjwtaivr2WUAnApL/UGuOL/ja3+/nD\\n' +\n                'tFPZfdamnTtrOw43GDqJPdTchYutSNpYztYxQECm3XUZxr050q0y7zXhCIPabWtLbie54QjfmiCZ\\n' +\n                'p1aRiAbY2v+iE/Fq/5kGv1/3Ih/2i39fdV//v+365jnvSYBBtLIic3VxbnH/+3BE8IAB/iXG6Dlr\\n' +\n                'IEkEqFAbUmQIVJcQI2msgOGO4tgcKZCkoisZFIAkR65+JATq0zSwiKe80QTbpLVLoADYou30RKx0\\n' +\n                'f+L7I//OP3mHhfa37ku9AoLPct6c5717bNq6fLWrQqoIAAdqVR2GP4U9jIuPACNJUQTT45BPGJcB\\n' +\n                'Ac8BEGgGR15qE2a183AAONNvqMwHVFxoL/GL9f2cjht9zOd+jO2/b5Tf9aU/RSr9QL91wAqmbd2T\\n' +\n                'tCXpwJqlVaaPMpXMZuCawE9r1GtVfMwFkd7fnRGKf9xvsr/vUf9zegCuqOtvqRjKLx63SXEFCPa1\\n' +\n                'KgUass6lUzTe0haKclvH+k0AOAE04BL0H7D4sIPM6IyTGSvrPJu3RNSv60qywE7FJf0TYBBBDkf1\\n' +\n                'jF1f1rmQxTUa//2M/o/9//tyRPkEwlMlRJDbkzBJBJhhD3NiCASTFyHprIErEmFEbbWQCt231cfY\\n' +\n                'B+QDFYskklecqzoHb27gPZincY8sHrv+qA4d/OAUFLfkYp/v+to/+637G7O//Pf2sr6r87VAGqjA\\n' +\n                'zIkkbxTLEmXBUYfF+pKMxxDmdlkyeWVKeTcWpVJIxBOxtf9ABNDIT/WQv/50j/v/0Pnbaziur+bV\\n' +\n                'SQWp4v6bStf1go7iw6C2zY7I7UpVMroCjB06eNAUOypYMysan0EEyhqVzUBpiJf+G0afysbqq1/v\\n' +\n                'WbJQliYpwO2N3zq5WkL4kFtj+tLMV0VUXNXzGafAgk8+BNL289ZN6Qn1WNBIDJl8TE6locAk+FTx\\n' +\n                'umcZFS1smozCwI9t9RiBVGil+dG/Ut/9iyVvN9Wl0a1tlHpRogp4gRoGv9v/+3BE9IcCSyXDKNub\\n' +\n                'NEqEqGEbUGQIoJUMA25swNIO46gcqZDi27olyIoyS2zGi2Si+oQv0gQmL6M7oM2AgarAqa0nbXWo\\n' +\n                'pgLcd6H6Ir5V/nSFr/9R16qdb2KQq5exLzVvYhLvShGoxew6yxD8wqVS+OViYe6MM768Z1oDeAsv\\n' +\n                'FzAAMOYHkWCjZ4yIA0YlF8qq/Zi1qtaSKI+gEJBxI/QNwDAoo5o/sR4qVvdHQoj+cACLn3Xulc7f\\n' +\n                'HCiGX6kB0sSTR289esVbwsWbqbqQIUAg1O4l24sW63JXdigD7FMqqegFrSXlJ2+ZCobf3Cekdv5/\\n' +\n                'v/ytXb//o7P//Lf//6AuFWCjbk3cd2sRBojACPxgEOHIRuJB51YaGQQYDFERQZyrUowXcqgiuJof\\n' +\n                'Z+syApAZJH7D+Kl6961W//tyRPgE4jElRJA6azBNBKhRG21kCWSXEMNqDIEpEmFEbUWQHyPEbuOP\\n' +\n                'U0sx6BZTRbIEULhD10pLNoZIoY1LEKVLmV8BPraHF4J1db0pIUCFvsB72uaWUSw7z39YXc9/UCUN\\n' +\n                'v9+/X86e9H+36ft/r//1ehWUCUglHJa/m6tJIq5FDJvszAY1EUTjSu5ci5iO97ragUwCLGmh9zwX\\n' +\n                'PCoO3yVIX69r5RG8ytuJCeuivV+ir6u3dRYx9XyataawVpR18w3mRDM5W3dgVVE4alOW4ai+Hf21\\n' +\n                'hJTf/Hse/lZb/d+5SVvRvd9idV3uNS0kmKq313+we2wyY90GBV4C7kPGwaHPpSG4ov5G4wQlznrl\\n' +\n                'ryykp5Be9aykCCCJL+o6EMk6r8skL//UN51mMNXNUhzgO+QT9SXP8Yj77Xr/+3Bk7o7y4CVCANyi\\n' +\n                'wDDEqHELDWQL5JUII3JsgKmSocAsNcj4j66WUMqAEAIhEOJqAJLOi2PCR2nQM0ZZnyOpRV0L+vWo\\n' +\n                'JIbf4s2/lZ/+j7rndRwgEroqZBMair2+PbRf2Lf9bpD0quwktA6uj4rH9DGH+XMauQKukMHgwBOw\\n' +\n                'GCgAgebkljFU4tTmgFsRB9vZIEyKbP8Zx1q+2pTlQ28SuFejpvpS/6at7XX72c+8lZ2+nfFwgGhX\\n' +\n                'WISQ8st/lQ3aBbrXMpYLY49TdXQCzQxHb6iqf/nT/6ne5SrP1oXU2/ZuWXJmmqfs3dDtz1sW5V0u\\n' +\n                'ghAIUSUmhoGZ887EhJA5NAc1HSqMZ/MNLdEjvo1zMDBM/6gPyvqlZb//OI/N++hlS0G8g1H1EWbj\\n' +\n                'NikvfX7WWMPaOoN1DiLp//tyRO2OAkQlwoEakyA6Q7imBw1kCTCVDCHqTMDzjyKoHDWQVa9u2Iqk\\n' +\n                'rI47WqsiALYG2P92dR0EkzV+oayVXyyW1J9R6Y7myjNnIZd0yhyAhQuyhI9K2aiVjEgVhVKQA/ai\\n' +\n                'qoIQAij/6AMOUi5kEcYBWEgt0iwZ1tP2aIJljfZQbBt/RC5i8/5WW99vzj+t/jbnc25b9z+GKEdy\\n' +\n                '/o3ptf+9AqCAgU8f/RR3qR4g5QHUkHcIJSGtmGKSars4Bg2/Q0blnmNxeX1+R5RqkUJ9nFOStvq9\\n' +\n                'Hocq5/Zr0KW2ysEOKBx1W8tGyU7WWPMuEYkZaouNFYUFAETgSYBHeZlBPnOYBgoYDt6iyCDSLofj\\n' +\n                '+S7b+uumWCFUwkE0n1n1nkHUKQy/eiRZ0Kh9K3V8QeSpbRQhCaizaQIAAaT/+3BE84hCZCVCgNtr\\n' +\n                'MD0DuJYPEHIIWJUS4OWsgREO4YQsQZD2o2Q5tM5y5Ry5VIAtyxyqDXbyaf1dgV4oP/EFTZteVn/7\\n' +\n                '+n7YVri7Gw48U/3bdW1DfIRYb6V5WyoIFN+KDHs7Z8udy6yyEkoE3bR/5iOjoQ5rle2OVWFdrXqW\\n' +\n                'EFL6vyaC3wUZn+Spb1f+5J97j9TLNyTrXbXhT0IQ+hWE2KV31qexiyd6Xta0RReAAACbt0IieloT\\n' +\n                'h7buTr1nK869S62IyxYUjWk9LUo6BpT/Rj0LV1eT3//z/q8hlUSelxNxCr1rovWtD19zEQUKooGT\\n' +\n                'L1rtW8H90cPSu1SwHMQXVgQHvVPW5hJchhRMwQcdG+yQKYQm/QAwih/K3/+06W+Wak01yB3uKt6/\\n' +\n                'e3ie6j4vY7q+8VemhX5C//twRPWEAfskxcg5a5A748i5BwpyCtiVCCNuTIDxDuJkHDWQYTQrmwnc\\n' +\n                'eO2vAPOyC3hXEYqjQrPdNWkBcDc36h3Ifx9NhRKU63+vaR7zSY2lMjAtjIj/xS1Jt3m9UYBIWpVV\\n' +\n                'ACABAKm5BEOO3Ocsv0/SSx6qv9ZttIOaWWJpqLX1dALUQP6IbZRf8rf/+df0oVplUOfYQriAUcBX\\n' +\n                'O0L8X7/Qhr7FUVuqiisWEdWZf2IluuM5Q6KPSpYNLbV4xAOQJso2VZB2oAG0QH63x3mrW7D+m/4v\\n' +\n                '79NS345LFUSdjbY0d9m9TixYsVAqaKLr5gY9j1wf4gAg2dNHeynbx7SU047nTuUrlH2w5zKOnupq\\n' +\n                'joCyXf6YI6Q/4+v9/XYrOd+i75Q+r0t0W9YbSIbgdZobYDFLadikU3JQBf/7ckT4hEKIJUMo2osw\\n' +\n                'R0SoaA8tZAgolQ4h6ayBAo7hhB01kFoIxIzuggVt7JMQhmTJDdzdxHK03+qdCJR9fHa9fyv3ZKrb\\n' +\n                'LLpi4f0PW2k+1cU3v1sWMvF7uX4pIBQiS0suDjGAAAAAA/sxklg9NbHqQHdbwBtXkt1GEixWdV21\\n' +\n                '7JBPCk35wHAS38rf1f50s6TWzcP3eb2K0taxvtWMubONbi1w9/9im9IpztvauB+oXEGl0agh/g6z\\n' +\n                'J+xH2cyltd63rMgKIQm/UJobK/It2QS8HG1pcV+IWVsbuhdyOyiLJMvbWSFnF1RZbRznuJo9ps6a\\n' +\n                'jSCp7tjCblysxaLI7HCXFsc3wREsL+nQCYt/QAMGj/lf/+W+51mkYjTZ6bs4zT0s+j33H3vdGUPY\\n' +\n                'lAABmkqqlc7mSCWMulyh//twRPYGwjYkxEh5ayBH47hAD01kCLSTDKHlrIEGDqGIHLWQxwixbHsc\\n' +\n                'R806kG9NqgR4of5JFDptlb2/R9jK4hrp3LGtrKZ3rJ/8u4XZUQI6zGv6laF3S09P9FVnbV3G3Yyw\\n' +\n                'jaTDFQqrPP2YnMVZEeNS2exhnPau63UUQa5Iir2URoJzGRUtNjHF7XT1aPWZDzdS6kPMhbTvlMzJ\\n' +\n                'Tua/mVJv4Qu0kbKkvCV5bQbHx4419d+e+XSyzv1nvsJLFAEknuKAoggIiIFZgBs3JZsplI8OCLeU\\n' +\n                'wG2W2Vfb1lP/WIme2r/o6/+/b/d9t/1JgKnSjivtvQAQMCyyEBuqm6uROWo2gca8t+o2Exha6plF\\n' +\n                'FlLqZFwQgbm9OmEhEW1qOVt/a1pw99uZwmLjKEu1mTMSF2NruImBYNJvff/7ckT1hAIfJUPYemsg\\n' +\n                'SiOoMBtNZAcwlRLA5UyA+w6iJBy1kOKLtatxYKK35Ak96wUjAABGn92UauUa5186NfC5Com7adZn\\n' +\n                '+4ZF7dvR3f7avi89/0lF1K/2f/o7VsHlBTTDkcqfUZkU4hLxp2+VwDBiHvLv10AOJP6AiT7Re79n\\n' +\n                '7VfuQ617fV2Xa//pl2XI3M1IBlRxBIVPFQ+/KpESgIzt9jtsiE2BlqNT9SDcwATRG9tQuK302Kw3\\n' +\n                'ijlsHFj62oBVEgNdfIkrZMmpj1ICTxZlNI8WXA+PjZy2oBIU5aLzLhRwgAA6RGH5V62vsrvkppRQ\\n' +\n                'cEWe2FznrLMXNEDpprVSnQB2a/2DjF5/yK2u9T9aicU43a4OvTSAa1IZMCsaX3gZi1io5Iu8mFJG\\n' +\n                '4FyKoSXpYxZCqlYs0ZCy//twZP0EA4FZQItTHUIvQyiGCDEMChSXDSDprICzjOLwF53IrKzdMzoM\\n' +\n                '90XGsF0DzybAtH6l+rZEMXlX0uONl1QGN/THpXeRX1wQVYxcn0ocsrjexyACwdRfJpZtqlnLINqq\\n' +\n                'QXACPekO5jyXkPw8lsZE/MVaZlp1gjUb+61nFKtTUgGQItuzqWBtN9Gpo/liOtBVrU1KI++tOtfg\\n' +\n                'p2P7YzRSZ7Jf/qjNR2J0++o+cF+Kz+5Lt/99+O5/DL/ExcN74jkHemfw8lgdo8/N/eUMh9JC9zba\\n' +\n                'Ujx/tg7S7rm09ffQuvclXy76nkZr3+3xlTaHf+48d1AJxxhpPuqr1Mq9lbOHyHSJ4xTJ5RHyEYYt\\n' +\n                'fDF3eEi7j+Gf7oBCEimf/36nAMBuZN7iWKOyu/0cU1vXdLzGU6zK9bdmr//7ckT5AEGjHUbQL1OQ\\n' +\n                'UUOoMQ8NZAq4lwak6a5A/48hmBgJcDHd07tRnbU9ksXakMC6XLmFPTU5ebLxiXrF3G2LEMDCMKxH\\n' +\n                'O1PZ4+5az/KSD7pdh9vsJf7gAP661+n363Jo96+/Z7/pkMlerMW+j5cEAAYUSKN6d4yHxJ+XdCwE\\n' +\n                '9RpXsWonfNeUh80Uma77uYgVyRfUrUGpGle6pGlpWy6vsdLekeWNkWJJx5IubfXFFLYvDiuKoRDR\\n' +\n                '9g1tlF0Wnk+IShhsmlGgEggQElIkwrNZHCm0mEXC/1kGN+1M9GUf/4WMVr0em7Y3d7OwV+30fR/2\\n' +\n                '+j0ijAiGLDhKywskA0s4ydmxVcNztrFDWTtDoaV1qWpVbo4DyLdnoo3MQGeIl3QUhj6WOupdVVqz\\n' +\n                'MVbQbOIChoXB8JC5Vck5//twZPYMQvIlwYh6azIzZKhQDwpyDFENBCNpTUC3jKIkF5XIhOduPC4q\\n' +\n                'NTKqR2PiOweYBzIAV9zWLPCso9SyAvGorWRUjxkgS3GcNpaNF0++pZ/6gLIo16/bJP7Nv5i/WY0f\\n' +\n                'X6Lf/9ldVVNMQU1FVVVVBACiy5F07OQxRpQvpTOeE7mh0VpeKfVt1rQR1PWgA/Fz+sG6boL11k8g\\n' +\n                '1ma1PMK7TrW/3aJXMgXttUcp1tSpzsoTu9qda/dlOYZS+naVldSUwvW5j73U1b1lX/IwVAsCRTSN\\n' +\n                'PdOY3JFMg16CKCrd9FXp/qBE/r/t+5Xk/PPvar/XT99/bo9I1bBNxCRyRnuVB4corIW6golnUmAm\\n' +\n                'Gfa22sJOa+vSEAKSNXrPf0eQ+xDtfyq+323PQ25usmirfcV7XilwYgCYiP/7cmTvhAKyJcGoeoMg\\n' +\n                'LiMonQXncgwEkwbB5ayAsYyhhBedkCru7FiZ6fKkr+2BGN0s7+ijr+nCAlXkmY3u6d0Ckf6O32tq\\n' +\n                'fTS7s9X0X6vQCBKEs7lGNPlvnN5fZz+X0jJ3mIBDo7iGdUZAMluSLWxbztabgZotm+pgmw8Oy3UZ\\n' +\n                'lm3oc/Qbqd5TQ1IXJG4bH//lg0mUmRZunOIR7zX95Z7L3ZYRs2cv07UilsZD6U6oTVCz8OV69+zA\\n' +\n                'CggFCFNVHZtZtY7Q1/cBGzbm+R/8Cbr/o64g1/d6q2fy+m/6LNrvv006HJpKDPd7pshpEStuEYST\\n' +\n                'AakUAUVoBkFNVHH/llTs7ed0ElSwCeIovrUozD/lV2RZN5iSLUUWXQ7pHDVCb5L+Iv/ibbM3y3vr\\n' +\n                '2JAt1Tbq+NIT1O4qw/6I//twZO6AAuElQjB6ayIqgyiqBadwB6R5GUDhrEC8jOFEF52Qoo+7JQDZ\\n' +\n                'U/vXQBzFo0Wv5BBfQApQStzKRuotMeCb7/TIc1Wr7+U/WeBMsiqY/R9bvn0oRoVep3/92mvd6PrX\\n' +\n                'eGAjbb7pXRpGXMFZKDCJ6nTLabJap1gi4bedBZw3+vt5XUE8C9//wzwARLRW5ih1JtedePKeyOYj\\n' +\n                '7WY09dHnub6kcYiy7efvIU8njtkgQRv+L8txjkQS+agSbnvJsypKZDvzIOnAv6gEgxNsGP9oiKEh\\n' +\n                'fZvbAy+2okKr3e1SnU1Xvbbup//ze/KixB8xT1lDpDsRZTXgJz9IoyMz3V+9B8uT+MyOa3tQ4An3\\n' +\n                'OW3rTdSYLSR27qw+JU0vWetpbUzfMOHXOoFJPQ8awMUyFJ7mqYomXrAyRP/7cmT/hAM+XkGzLRzC\\n' +\n                'K4MonAVicgz0lwIDbizIuAyiJBedyE49EusnOxdRymchHO4bND1Fd38mEBvt3/Vh378FHsw5pqqq\\n' +\n                '+67+vKNXq2UZy7tMm7GqoTeu/rV3qoAkAVWppoKMnUBDJMihkVwNGGJdFQuwMKCJ9BVqla6hEld6\\n' +\n                'JBgxtW4Yqfp1GPp90Ix1q/52zFVpZEqiuzL3KlXdXREa9L7k+j7579KdG039kWjMzDZphAQEJSRB\\n' +\n                'dtRXYAU4cLv4PWCnW2ZSkrfhj9mVYoaquaVVkfVywv2bHW/fxK+urR5lxlU5p5elAmYzGoY33ZLv\\n' +\n                '1ZgDQWpGhphoNrNlAaVgQ3TOJtWrogk5Bfaix0IlbLW/csTQd67VbOfXpy95FwSvKTNz3Pery29z\\n' +\n                'E7qqX6wZHu0HjwRSRbV7//twZPYE8yQ0QIDaO1IwoxhQBwJyCUR5CwFlrIC7jGFAF53IY9FQLrn9\\n' +\n                'vk5tCH8vJr5PGWaK0nvOhI6pHH+2RMlE9F0mpqd9KiFcoAzIe05EnsqRMeJtzL/X3X37Kmvd3PKl\\n' +\n                'tA5GLqe2mohAFmlqdJebQ9fIgI4KSH/8W7BJ55nves6oApf7YkDLOx9GUYBGt+PA3vThtFDlyDQs\\n' +\n                'Mx5VEje9h4DLY9TGBsmmzXck2xaH16a3EQFeZNmSqYuR1Zt/NgEOnfa1bf8g/am4P3U5+h9qTHt/\\n' +\n                '/a5dLGZKljkiHvU9Nws5PekIAAbhQzwhesNFYxIaIJuQfjcnDBClpzzd1sYAoEN611CGQ0ls7yDW\\n' +\n                'gvs6K0ETp44mmcaAmIFmJIF2vfNC6iiwmIAPVjMbVeMDo0uRAUzEK2lqhv/7cmT5AEK6X0NINCtQ\\n' +\n                'N4MoVQcCcguYlwIEaa5I3AyhADwdyD7YMuHwBScjM3ZAfzDZC4a/qFRBqrTlPznFTZmdiA42sPEs\\n' +\n                '9a57lUK0qHpAicLVe9GldEUeRrXRhpDibK0V3Y5OpjbT00chUhO3JR2OOBIctr6HH0T0OOoinTAQ\\n' +\n                'xRQ3djQuyV1zmVyUy1LXblQH315QmtLZWqeoVG48j/LLfJTlW1L/fP7e5BfafbL34Kf/bv9nzvdJ\\n' +\n                'H/LAgAIRZWJItCKz3mQw75gHVu7+fVv8D573dr53fc5pqvFmQjD4pvu0K99n2v747Qn7RYEJAG7z\\n' +\n                'IDp9Pa8fVPRqOBmdd5fSKo0GW1dq2hWp6l9YgJu/80a/WnqUmYsbdFVuxgxZFDoTAK3CphAqtDHn\\n' +\n                'zL5s8gpN0kqklVKbFAsL//twZPKAglEdw8h4O5Ax4yhlBeJyCuyTBKHhrkD5jGEEF52QNZtWXhsD\\n' +\n                'mIACAADHcqdOOws5kkMD/SAzj+1vtZ/8mv9L/ELvcUs2bRuWSg96+19/FnhB+1ts8cQxfj32rqEd\\n' +\n                'm2WYhW5q5Ig1N5scoJUwxdaTM+9aQdDb9SAnht2ddR6tRhbDQafkrIGepSTxuVRrVH1JWsobjRjT\\n' +\n                'dS7ytzalkXq9gnFCRlRhMCyLVjxM1YQY1O2hN8/yaDHuyvVj6IBjmarzHf5si02/d7f+V5+isWVp\\n' +\n                'etnX/A9bWze29PvnNVfrVvx112B4GnivbsN1m7XZiXd5ZuvsKE427oprXtMGArRQYCl1uODRbF7u\\n' +\n                'tN4Tlv6BEcbo7u7tSqnMvS1/WuuS8lmdteFnPWCK9VV1ilIvOqcAFAKqyP/7cmT0AAKgJMEAeFMi\\n' +\n                'MkMoeQWicgp4lQkB4ayA1wxhrBW1wFZmInNfixVyBcf4oDiWro20uX6ldDbada3rrrqKvUPz/MNs\\n' +\n                'crFqGxU0o9u2ra92NXZ5borAvCqmu+MfdYaP08gMcfgChOUDYBl7XS/SkMT88fV0H9YAsaKO5F8M\\n' +\n                'V6ABE1rnhoiGwEdMUgB86YQb2JNwR3ApdeYVFja1Blizwu2WArSB78qAVZ6mRz0eTfcjLN/Ym8/e\\n' +\n                '31K/9Q7vRo1O6XGVu9ym0+3/aqPutFvv/7tQQGA6bo+SqucPDLDXY9HnaJ4zV52mYSZQVV/87H38\\n' +\n                'r+8N4JoRbDdJh+7k25Nr91c+RwQ3DrQ0cGYTCZLkUpSMusE2lIWx4VFU+CymOsOoQdK+UTOlVd9m\\n' +\n                'OZfRbmq6KIU8GQI0TMXO//twRPcEQlMeQYA5ayBNY8hCBwdiR2xjCqLg7kDhieGkF6mIWPI8kOIe\\n' +\n                'buGQDiqswASqrMjOUqPQjmkG/zoRRu3d3sEfOt1iXyl3y2rP6KkyFo5dLst6Ut6WD9jKmsYZFD5x\\n' +\n                'n2clULCmZQzQycjuUOw6oacmUtba2C1NY9Wc5zkNZ4KhwjZFLPhUeyIrOUal3e1TjKPz9ph9LUd8\\n' +\n                '/1o681lSrzm7NYxW2dkTS3pVWOf86yqYXkaIDfyEsfa1ODqIAAAgyZ1s4DsOqxUyh0f9cB8zc1H9\\n' +\n                'FVOR6hSeS4F2b1fVe1ekQ6xrFRRGtCq7fzfX6Uv3pNYIAFTVVSemTwJl49z4AWcfvwip2qjrWdUB\\n' +\n                '0vt84s6+pRjH3/PeXI0x4LqHUBdZuuIFBqutouOWkXHNAcrFl2lxZTKlVv/7cGT7gAJ8GUPIcluw\\n' +\n                'LCMYmQXicg4pOwCjaG2I3Ayh5BaJyIIJj+OZTdMhknYuzUAQgVfz4Gn6KDiU8qHPOVo1ke+5u+7X\\n' +\n                '7n9pbMKfv8gRUp331d4s+ltS2otn9rIx4kAFCFgNuIFuMT4jkBg4i61MtVBNc4H6F46t0mbFrRQV\\n' +\n                'rpGBoy7VIWVRVK6aaCDIO0Y8tYnnDOyWSmpk3Mt0JPzQkm83Iyc4FJnzyJjNn3w55f5keRPvP21N\\n' +\n                'uhDym0QWhbUAAAIa5us5yH3hHTP8VGZrdm9qubb4NxLbX7qhfS1JiL49a/Y39tNTOhcWety56xzK\\n' +\n                'Eusi1JpKrNPKZBToO9J6qJqH0DwKLxmEKrpXs1ahgiyzV7lE2e2qZM3V8LRtFueckBHBiyJnIBF8\\n' +\n                'zu7ZltHMRKM3NjNTt2//+3Jk9ABCzFHBCHhTIjUjKFgF5WQJWJUPIL1MgLkGoUATscB1Nt80zYSH\\n' +\n                'tVLVw6Zvczlq+MZy9ybvD4QjBoepQsCvv/j3egfR1pc6uNXkVdjiylnF7UZx540om2cZ6aJBrkD+\\n' +\n                '1WzOC7D5N9UMMsRiKcENnNgcOMIFmJmZMCTU2M5WdYMe097h4YcEcc6hNtpAVQpgeADHxFBJwshd\\n' +\n                'DRcm4aefjxUwgMxURmRehjbWC8hAYtAc5N8KzvY3t91xzEpUWnqDJuVB19106/7FOe+hZo+5g37d\\n' +\n                'SLP0W3f9tv/kVX+rot1QxtzQ7gIakgBFGdRMAFsuMyKSLrq2EALWeZubVkmWWMEoqASMuZZ0qepU\\n' +\n                'i5CePl5pxU0WsTAyLVjis/5SsflXW5Zma4KNq9ZV2BTSEW8W8wTD0sns6//7cGT7BINCYEAAdBvy\\n' +\n                'NOMYaAXicgqBawrGhH0I2AnhACSdwBiWBgbqNz5raEIAET5QSoRUqaSgi+sJt6L81FJGuZLmFVmq\\n' +\n                'ERlgDrNvOoe8bVm0YYMKGra9oBD11ZpK2DqlD1sWtKkzasWEAwk0B7VEEUyEYyIMjuc3BAtCx3Ur\\n' +\n                'a9tqzDN0MUHRA+qWsJ/Xoa1ZZ+fUgeopbR30TvY6OdrvR8pZ7t2wv9989f/M5zn/YLnvuu5tebQq\\n' +\n                '5UWp8GmI2+DACAABTI0GVLJJlVGW/TJaz69+jXffwotrSytqo51lNV2lsl2ilFl69iOUUqvRi8ap\\n' +\n                'scy76EIQkOiKaUBPs9KoCAW62PYyJEsu2eyqhj2i3qmPiuDQ5n8JGevYh88kRUerNMldyqx9P3vu\\n' +\n                'RejnmSb7K4735eZ77Cb/+3Jk8YACYRlBqG9TkCmjGLkERzgMIUUAAbRvSQwJ4WAUKcCr/D5Jv977\\n' +\n                '3I7/t/e1NVDAMgk5znOOdZAO3+CGgEIQRdJPRUHHXIbLXLHy8zR3gdzOu2q+jrb0MtefUhkr6/U5\\n' +\n                '9tCIPzzu5aqZa1zWGOGUUlqTppNQ62thAukdqPp0m5jBwTs3zWodVCc/hiz1Ll2IFMSZLJ4I5l9K\\n' +\n                'Ec4xnJpj8nIh+x9Jl85MiPN5sxFNyS+1h5ITkS2F8M6qfOVfEWP6lJCphcpKutAoAwZAJvsDgAu7\\n' +\n                '/TCWyU80pc6960yitu/dQq8FnI2sdffyKG0puHE7K7nr0v7EuQEwQSRDlBbWcj1KHdIVxPZfwkY0\\n' +\n                'tbJOj1Q5iOAxFUe+7AOilRy2Eko6q1tlV2+jWWr9tbbNdl5qpY1Gq52Q6v/7cGTvhEKJJMGoODuS\\n' +\n                'NOMYWAXicgo0YwSg4WyIzQZhWBQ9wMVTXoazvaxLFqqjpB5OliQVldgqVwgsQgI+2NGo/4rZgDZ5\\n' +\n                'kDmey9qaOQr9rh23VMk94hRVq5uJKb1RjkbypbGohL4rofF6gei5zUBLq3itEYAAM7tTeijoLRol\\n' +\n                'srChgO1SLlEFQWlu9b13oD700XdVZMvu/ISvZsUlnMJI7MmQQEYFNGSL6hetwHQJSTvgj1cesiJq\\n' +\n                'xkYJntvTCzsv2yrftrBHaLctocMATuRpnR8mKCt+gBifW+dFxflXm9f8b60atV1z9CPd5xVCOwdO\\n' +\n                'f1+r32ikoAoijYNSKwnuC62c5i3cDal+G6iYfWVHzlqkCD53o9Ah8x0Qzlsr2ZXWZqozaVc2fa78\\n' +\n                '/oRHJYllsRGPVTzt0Sr/+3Jk9IXzGWJAiwgcsjNiiEAFInILAS8EoWSskNSMoQAWiciI3+VNUZJn\\n' +\n                'dkddeblex0tV0yuHm5Zph+EA+ns5kd1q/7cHPGPv/LrYl8EupDA3ZoZYKNZWx71N13qpHpcd1v7t\\n' +\n                'WxTENjWtblb7N7WKoGLUyZ2hXxDqKCq+ovCDu4V0fp9bN2spACdLUPIHksRlRkZlZistKo729k3s\\n' +\n                'iIdau5q2263Z0pL1RfP5tzNR1Z1TW5mcytnNMjvdbPGV2+MFH2cZfe2zDHmZUVHgBya/byRObg89\\n' +\n                '6L08Cij2KbGSZWKDn1FMPO33nO2Bq0StbtbTG2yPiEVep6SlzHmXPomWhWAQmxNnpS49uKAjuBn0\\n' +\n                '1tsEZ6vs1NChfPrhEJ2WQlkW9ND5mBFiHYsIDrFOHFsufGiwdLKasaptq//7cGTtgDK8TkHCIR7C\\n' +\n                'KyGYVQTLcAsxeQch4KyI2gxhABeJyH4CIEC1p3OYwWJLh3RRTypqbID8Iz7CwvX5JNveiwqd7KpR\\n' +\n                'Tb1RYHqJWMt+jO3vH2LfWMJSOebuYpFNKD9DBVRy0bVJQAVZVW2bgBATIKMBtoEtH/XhfzlOkULd\\n' +\n                'jAHhWwjxv7frOdu35rddOakbLqakD+kvZ/6NfeR+6Ft/lA745sv1W97Zknt66UfMfhgZfd9S/YBE\\n' +\n                'lP2jEgAcQXJZ3RIBJh+fwJrtt3SMYdSZRXpuJnWIMpHjkcWKKNV4L5s+8aT30OtiZ9m33xVXq0sk\\n' +\n                'KKNSdSa3SqTkaWSKASmFp0S2FzBtHFPV2sThMlt0m8iA1XV1FCD7HvOVoTPlfhzK5E0ZSkQpw/Iv\\n' +\n                'xHFXLaVEkN0Il4r5JuD/+3Jk7obypFbBAHgrkjrBqEAALwwIoGMHAbyuQNiMYQAYCZD71zs6qlsd\\n' +\n                'vlO66ZsTn+nNwbZGIe3D8fPJLZeKpEYBNWzMMle7U7DFfe9wogiSjKT6XNfZCo5d+xlij7lWh4/d\\n' +\n                'IFahZOqtYqNGHDYpusJNfIOIJIvehVWEFpqqopnlQ74mugjdvl4den6i7nbqQfB9zPzd/by3lec3\\n' +\n                'b2TWupcjVv53g/3u/S+RbuCb6LM2/ITbcl9W1/Gee9dyTH2b+rZ/9/qYXO+vJmIYSf+gJzjWPy9j\\n' +\n                'mJdm019NOn+ty63+b9OvGi9Cpel6atTOtbty4IggIEE1dpUMlRMabiYrwRpz/fljwqEKV5VS4Kt0\\n' +\n                'L3CL5DM7EOiEZaarUqIxWZEM11fsz3dW7z2jKUoYq9y1O71QqKpzyq61kf/7cGT0AAKhLMJILxuS\\n' +\n                'NyGoWAWrcAvddQAKIHLI9YxgwBaVyDY51XizrD4oVwme4zj3IH9B7b4KCDQKMnYblRlg9vo5e0dZ\\n' +\n                'LeM/JL1VOJMSxWyS6F8WU26hzLtWtnWv2nxFPdpVaLM1QgwARiEVq/0oRnR4yhw03nZob2S8hVmA\\n' +\n                'klLP6e76JQ+xp34LK21+HJW/5psv7ebl8XK+OeHfVL/1o2v/1df7+U911G0e79u3tTlNrvoIAAGL\\n' +\n                '4u5pF87ZRKAh6TA6Lxc08YlQ5wo55xLypY45axrRqz4ffcoELEoedaJiA2vKH36zrnxqGL9kquND\\n' +\n                'ZamX30ogAEOLtUIepuatv3IBdcrRBY0997IdB9vKn5unSn0fLFzTGdtwl/r91lL/bWy+U4y/78vV\\n' +\n                '0f+7/Z5Hnf/dNns//er/+3Jk6oAybRPDSC9DkisBmFAAKQwLbT0FAbyuSMKJ4VQUicou7oRE++XP\\n' +\n                'p20gm6WClIsRZwptnAwYr0DLLYatFiy3w5R2Lpovz9oozqbYg4jUWa+Se8ao2qKxZ0lFmURlugWs\\n' +\n                'ak9uRqoIAAdOgny7flU3jpGfPkHVPG07n6QBO6cKUPvceDZUkhDS7r2OeSrZKO3tJPQ9ByZuYuPa\\n' +\n                'jbuGnkiOhit7UvnFrrTRwkMrjH71zY4hd848gl8zc91JpXCHJNU8+Qk8yBIGc/Ter0MPMvr3vbHJ\\n' +\n                '9GO286/fquPmWLtRurY2Uv//WCVObMv1u/al0GPf+TknREhAQIVZGamckBE4FIrZngIK2oglTlX8\\n' +\n                'RKKMcEYw+o8x94xCVOIobjE5ZERIlFG4qxKJYRIKF2teo6msP2JZaKNxZP/7cGTzBHJiE8EobxOS\\n' +\n                'QgGYNQ1JcInAYwcENNCI4QbhFBCkMKigBKrLM2aKQWdnZrxA/84GFhNbVNUhND1sk9KaXm0O0pME\\n' +\n                'br0PKvXsp0qa8iZZPnXFy4sxh9qz9zUVsab2E9yK4gYDvZ2mxEwaho2rtEBa83Qx3mdSKFlSWvCC\\n' +\n                'WVLIx9KmV0K9CGVZdqIiGca1LdrOezqb0daIz2N25KDW15XHxV6FdOVoOr+aE9vD6Ns23547SeQw\\n' +\n                'QAEpFmSrKpazYjmuUCnBtJW/hkUPRO1bEpf3s9UmvpbktOx7vFEvRWeWVSp1iDm4uh/JP0CwMel1\\n' +\n                'DDTzZnRlRY8t60/H87mDOayb1ZztX2L9isQ/Qu3ib+2P3tuj9LVdoKWPX+1tX0uPU9Ln7zYQ/bVh\\n' +\n                'NvcK/q3ZH2NdOr/5bWv/+3Jk8wACFxjBqG8blEtiiCAN43JIXDMLIJlOAQGGYaQQsDBtfoCAA56Y\\n' +\n                '+d0n5ey65PEpt6QOtbpXQB7jDLWAs3PZmzdyJnylR3trh4U6L1PYWVtS2G2BZddhiKVJxu9zmMdN\\n' +\n                '2loec+qBECCrpDTN5CQF4Sk1iUr+vj4odWZTiBmcyDL6mMxQm6VEHQzOciHYk2qmLapLOzN1Z0vR\\n' +\n                '1oRnXVpS6YpsRrFsRTLQcyhH5suz1FqHllHDWTRA3dVvW0MI16sAaAWAGQJRjKdU7Bmhy8iCLNb9\\n' +\n                'nutGSuV3k0qrLL63Q7DJDHJ0EVNshA++V7tFgqlpoca21Rzai3agVz0CAAS7GAyaMyGKhDbSBc96\\n' +\n                'A2tez7u14dCyEuDbxaafMBQP5uE3GiMoLBZQVUgKqj54WPidaT9jEYsVZf/7cGT1BQKYQsCAbyuS\\n' +\n                'NqGYeQQmDAmQmwShvG5JCJTg1LCOaCqq5pdcvZJKFTsq+lxeOYQAKdrUzIUoS2OYAd9QnkGgUeec\\n' +\n                'm+gf0rZCb5Fy7FL1knO/pUekhcYIWOvKYIgdbntCNuoXLydTHfL12w2Fmu8y3pEM8BW3+eiVw+DL\\n' +\n                'vaRGocyBCDLIJMp56I81NyceSPZkmi8fnYdVPhUv8oWeRXPOmfbFLzFy6T2nzKtynDjflO/w9VPJ\\n' +\n                'bTMvcPax35hZFUjyOyIBkKb8bBQBKHsoNz8RBRCHCfTD6BRIpaLUHlNPXjUHnEClr6L70oqS0f7F\\n' +\n                'NFlOgGuiP7FMceV6rEB2LadOAwsAlCb33Yk5dxkVMwiLIzhBndE6D53Yx+ekjFZGZ6jEYhne4sL3\\n' +\n                'emrIuymar9Bi0JWDwjD/+3Jk8wAC3kLBMG8rkjojGEgFR3AJPFEJAKxOQOqGYWATHcC80ZQdV1tE\\n' +\n                'IfKsDQ7TItMAJ1jw2mF3ixlLQaOi6wI9RgqfAgZQFYgz8iNSyXN20UDR+g+s/1J3wztCNbZrV1Gx\\n' +\n                'fQfSs6uvOXXJKWMeLoAAB0qHzXOX1IcIexJ4maMZDqodXJgjZ0OtdxXl2tmknnWqTjw0yyKq/zFZ\\n' +\n                'k+2hWEWxFP2ip9EztKhOjYj03cUT3w7GptA5WQ7zXWvJGd8hey2bvMYqqTmta+fEg5eCh/jxrfMb\\n' +\n                'cehg9n0Jw4KJfaZ7FkLbLBR04+yIKUK0njqdK5t17V0SrdPGFZjTKG0DC7D1Wa0Ueh0/WlCYD5na\\n' +\n                'VhTq9SnLSVz3KzKyuVHIpGdj1UsjXvsL1IqHudL0PqhHb3V7LbJVnI9FTf/7cGTwj/KdWkCALxqy\\n' +\n                'O4GYMAAtDAp82wIB4K5A04ZhAACUWD7eQqXZrcFJcqqr4hpdB/klcAJpOc4z05CxH1EAmnxCzRum\\n' +\n                '04PjlIXWx0qvsazoPRVWuHatqmJbtn19BeRcqQe1l8npDrqo6kCAAACUhAAM5k0NQtpNMwu3DBiQ\\n' +\n                '661/6sn6ZUgQSZOn53nd8ymbdrTOVeWfzuU/SqOZfyzjsDNB47YdnlkUoag6yusDsHuGGF2PCzhA\\n' +\n                'uxalIL1FlEEOWq7la3MtXoC7QFW47ejk/a3/0007PSv52YY+ffv+jgbd+h6EqJ7IOGQQ1BLFuZCW\\n' +\n                'q4PD51DFqjpavcRlMDU3BkcDrnAsTHiE4Hx7WnrmEXmCFahxKJB4XYibOLLQj2vvWs4YcKkUKc4y\\n' +\n                '8h0vaI6tjBUZwyA4xyT/+3Jk7w9ysDjAqG8bkjHhqEAAZg4KTXECALxMiNkKISATFcBzSY8PQ2d4\\n' +\n                '9h54tObXQ/MTqzf17Co7k8d+lW5/2T7JhwWy/bW7OHH7YKuNdl+3UgPIt6rPpNEaFaiGbk1vleg7\\n' +\n                '9uPMQuwvH6+agIABAEAgrKbIhmamYiIY1H+Vg7G/i2SE+Ha8pauy2H6y9HLwkJxr3fLtS+vdLBpE\\n' +\n                'Yd//7n6t3HqJKKVr+w/lKB5l/6/t6Zawbe+UbOV04MJcRkcB7MIlaA0/8hFEe3o2q7AxVzhYJPSp\\n' +\n                'JNCRlzIBFDClQVNb7UmCCz2pKKUvu8gqPHpsJVLFCsW2rF2C+rUNr8OmF4vunRtc9xEQX9AB2vNc\\n' +\n                '/Fxy6H/EvicoO8IS+rnGMwkuRzI3mOdUOYRB4nzmi5Qo8ojMIybGyMtdFP/7cGTxhwKNOkFALxuQ\\n' +\n                'KuGYrARlcAlsUQShvG5BN43gQDeNyYL0kIzvZaqI6b+5TC6Kr9NL2c+7UCEANTpZjasGC37Ewsxb\\n' +\n                'pAe9ki8XTbFUqYZRk7maWHaW2iFdjtUbG0fVNmfZZJgS1KVrbsuZCQAAANpAhK60jqaGCNwjvUdD\\n' +\n                'EbpqRYLkk56kPVoIbN4u9MR5SfEWanMz+IipN5/DPsd1v+bzfeAyTtL4ZMbWqnTRrhJT/PM8H9xd\\n' +\n                'P79NXmH7hX7Ktk6w+EqWkaAqbqqSmEhPN0hsHzzm3JXifM/i1r0peqLCvpsp2Xp6TytHQX0W/xRm\\n' +\n                'LfGOYNTgjurCCPBjvu1yYRzfGqD5xYRhkhqZQGSF050H5kefStmR9ieubISZcrSw/2fK6HhcyEFx\\n' +\n                '+3IslhQqtOfe9f47A1P/+3Bk8QBygxPB4C0bkj3iyDAFInIKZWEGpYRbCNYGYSAVmcK/4nrOYxM1\\n' +\n                'Z4j965rN9F46On/nIAAAEOlSFXHJSEtA5fcHn0OQbfE+yMfYpI1ZuvVXqe5DSDxW3b2LmcLAMWx3\\n' +\n                'q4mZWPfr4aUhA5UIAAejMJR84Z00M3gZM2aaINqMQ1uJbF4R9kJg7Mov507O538+Hzjbk2aDOeX8\\n' +\n                '7zY9R1HtqXMp8ZlZNFdVAOvvPc4EbMhv2DaYVeawJ53DLcl6P/fzyMAAAM0zZYZDwOkLOqYIFHtF\\n' +\n                'HXUkJRQBq72G1CN7osJIqKvwJ0/c/3/VbZVa9xB0ETDoG2MW7Tb7iNiYsyuZxkwvtzi0fUVuntrP\\n' +\n                'XzaK8ylbcaYhtf0bMvKJxtD1NPXtzvJGOrT67mXmG+x3GuutStZ7vf6b//tyZPACAsNMwMBtG5Iw\\n' +\n                'IUicBCUKCrEbAqG8bkjdBuEgMKCgra38svOa799f7AQFZFznTsb7YVuvxNtNzWCxVS7pADa0QuIN\\n' +\n                '/1NP+Ze4r+KRtBY7JmdI3MZC0Y84fml2NZkaZekOLkVWFId8tP/idU9bavKR5GM631SuVd6PXFPs\\n' +\n                'Z9OqvvNdUqv6SztqgAAAQJ0tqyNlQbAlCQhZLj1HT4nOsZAQBiloW6FPD3dbY0NoWoOPZVeL6h4o\\n' +\n                'iWr6kNsoZbewOLVfxfVgAAAAUdQc0jqwbQCNMNHE0K8q2aH3UVyVnS/QRF97mtRTU0WmJ17klRb2\\n' +\n                'yvv2j68pENjKjserzafCyghfISmjJY2DMmtaEc+vrfKeUDZ2gFpw+k8/pPtmptfrygipa9R225PX\\n' +\n                'oa3jclTuW3HO5+jvsI3/+3Bk8AdiqTLAqG8bljgBmEgFInAKNNECAbBvCU6hoEA1jak/Qy0rbJt3\\n' +\n                '5UfZedx0pUEueeOj46nYE1LaPlaiH3dSClCh/JePipwYnNFjJaTOPfODnBI0XaUaPLCjcOvCZpzF\\n' +\n                'JjREIoGj3FKXI60oqsU541iHHoCrMsY4HBNVYEEAFVYkUYSI76G6wFwv2WsplJE+bp+g1oo8uKbx\\n' +\n                'SNLsaNMGD5xj0mlPa2oWcLKWih0iuBsuUGDFuDMQtQealrEqYxKbVvOZhAMAAn70hpOW6Vngt6Bs\\n' +\n                'QjlOpWXIKT16pYWpNG3izN+1KWWddE7LyIpXgfF2u6TkOdg9Ri1GipUgghZaqag0xHFtO9BL0wEg\\n' +\n                'IOcXubDYw8RstQtZKPgrvn0lBejHIzhixBpD7XnTiUJA4Xftc0UOF1MQ//tyZOEN8dkKQkAhMGA4\\n' +\n                'oohICCUoCaRZAgG8bkkZC2CAJI2IOlQSRSRRIysiAEANKQMi6Qu62poYTVxEB+6uGu6GnGn3EkhY\\n' +\n                'RsXcpgTLA2aOH3ufxgaQMccKv1j8PpPJ1jx8UVS88VAZRh4ssm0IRdg9uhZcoiYJKoAAAIaGpZSO\\n' +\n                'McnSULOwTELoYWVrMLMXgooyg6vlyBVajc6Url7GR9osOmQm0IgMwcCo2t8u84mgcsAGnqFBJa11\\n' +\n                'Myo3RbAAAAXWlGyMTwRXBFuSxk9VgqhY2TckWtcok+yNYLD9iK2qa4THRjcsNQaBO9lgMUsfpC+Q\\n' +\n                'JC+hwBpZMzGhVKDyMyUkQJLTVzKeon1oOGbKMiURcq3KbELozHWh6cz/w61v5D2a2t/69rH9GtF8\\n' +\n                'SYPnTEM2RZizOI5eyoH/+3Bk6AACRBbCSCkbkDbBqFgM4lQIdDUNIIRggS0IoJQ2IcAZEZwg+eiU\\n' +\n                '/OP12nFl70tRGOsxSSQke9TGx7x1MKixYfRijdyTKCuycn6W20XitcAAAADIJxFbM0VQ6sfQlCx5\\n' +\n                '4dp861T3Q6BPSuyR5/R1bpueTIls97+WRR1tJLUbJOEebERGD/jZJeU+70+L8Pyz+0wnFZiK7H3e\\n' +\n                'TCmRFHcvYoU22O2GCXpL5mKNOk+lCtaWU274bcbDBbzAUyFdq3f+hLXZ/lgZgh+Mf1jlMmzwudhB\\n' +\n                'KXUoTIyLKbn5mVPhlQ2txEiwrzWPq90q7R2/RZOzJE22/lc5ZnO6aqS5tuW/1uuvgs5sFJO7RxFG\\n' +\n                'n75Obw6t3CIpomomuqxkBv5JpJOXofmj6NbgHva0WVzr+ZsCvT5aI+Ol//tyZOsAAisMwcAjOOBA\\n' +\n                '4ahIBOtwBYwzE4CIbgDzBqEUEKQwe29uZUp62JK/pnMYKne9a6JXtuVK/H08QxwMO+wDSQcI4ZK2\\n' +\n                'MUAqkfFo2swwzOiqpFUujoqeNFbPtRRaqi7YeMNbueun/22fqZrxQqpAAASnyxnS7rsrwmc9FF7F\\n' +\n                'q6r0hrZV7jStCrlAVokaB0uYy0tc1jLrKj5BTQ4RaLmmWgGJgKVEqST74q1TW1JICgxw4VrJJcE4\\n' +\n                'g2/NHRUAzJ8jhX/Yak/qWvgNfDLQ+lRv+s7fDVOP37Pv+e7brCnIMemfxXg7/uT/kvwTIZtOYrfH\\n' +\n                'dcozP5tn8989Sak63P6+fQgQD/tywlIhrSDi1nQ4dZRiXaWEqkVOUlbGov2IdcchIjKYpM6aHRi5\\n' +\n                '7Ut6TyLUN7maHkWE1ij/+3Bk/gdC7GDAQG0bUlpsaAAsw5QJ5FsCAbUOCK2GoaAQiDityx0jCVgq\\n' +\n                'UtuQ/AJvuO7nHfRjSQ4G6DVHFcytK83bcWZV4RF2rf38lvtWcxKPEyqfZoot/y6GZ9vbJnSem02/\\n' +\n                'FXY7uH1RXpu7R1RHWpsqGDBcSsZO4HAo5BtzwANOzW2UzohqHCvwlLnIOKEtc3hKMN0Bsmb3rRZg\\n' +\n                'QhGKZLVEiqUSTQAMFUCRpRjkwQSEzBRgYJExNFA0WUQCIMrIrMw2qmpsjR0WycICt2JRs4CV1gz7\\n' +\n                'maJNqI140QBMUfVWwOrPp5K1GmeUvQiDCRLc23dQupFoSnyNRlLEAgiLrV5C0lIzn0SX6FqYqH2p\\n' +\n                'JFzDQwLpa9pQcJm1kHPEooeKVHBlSJFRdlz9i2xrY+kWCwtkbSgQjhSY//tyRO8AAkQYwShLK5BJ\\n' +\n                'AbhFBCYMR0wzDQCEYYEuiiBAJhWJLgso3Wdha9y5shAAAO9EHkR6PCI6oA/MADNsWqsN1dFBGXb+\\n' +\n                'y3mb7feFGPGBZD1Vlf697lqN6/77frlG42Hy27N2+lx0zrxv0+nX9+533o9O6vbUtUAgAGGYBgFA\\n' +\n                'I3pGE0Cy1UA7WznyWR7LY/wHFxQmLrSacBbGSrSla6T1gLnmRY88/OxwsxjWW1H5W187k50vcXEI\\n' +\n                '5eYEpuLEenAX7SSNOLgoT1NfTrVp7tYI+9iVvoIvPudCyIpyDGrpF6r1G1RZyV013HEDlzzUeeNp\\n' +\n                'gCmkLGlviyGCogc8svinNuIljoYNtzagaXG6olj/9Q8zTg5MiH21VpiPQgSLx54siXbGs3UV/Ap8\\n' +\n                'n3YMwvkz6/D5Pb3cMt//+3Bk7gACSxlBqCYTkEDCyFkFInAIyDcGoZgwASgJIJQzicGd3vMe4e5j\\n' +\n                '2t+3NL2ngFDQAYAT5RMaMtQlM9DLvqmDRXcfLGp5CHULBtBRoouyXlExC3Y5NldhKKQDnRVb2QuI\\n' +\n                'UqEHW+WWFQ8NzyymPGOwRLrldt+X/qzMEPbOAOfpVxFXEeM7q0RGYQvn5prZ1mKaTO+3aXD+9cs9\\n' +\n                'z4Xt+n6mlzkkKcyhX9sEZFlvlHU+OOFBrTn8r6+yakI/tC7T3SyAIADleIqWZKvadCBlLIsGTcPV\\n' +\n                'q6MVtXJgwzYokHAMQIQ2VPLqLuRfnEOc9gsYWhS2ktIu96mNrLqSgnosY1xkMNeqi1pgxBIUETaM\\n' +\n                'BPG6AgdPQKMzadl13MR8DjQMKKfAcQ2selyGBVsXeHUuNPiZzC4x6yCR//tyZOsEAjoYwcAnG6A8\\n' +\n                'IsgwDQJyCZzNAiWEWMkFhmEgEKQwrQXYYc0uhZG5Tk7Q4NYsTzAXUzFr4qtgxtccSU0ctzOYzfwT\\n' +\n                'U0bQ+XPxcNMS+mNqnCNFmhCKlLqeoXitCbarA1QLODEUQ2bZwPU9ApKOYbm6avpAhVjP1pC8iRvv\\n' +\n                'JBnoyv2pYYry7UCtXe9Hovs7R+djKt9anM6UqSdCOadLvVYznXTpRZhZ2Frx9tPzw8K584Pjvrl4\\n' +\n                'x4VdFEFwtXen1L1RvyGuhkFB1jArq3vpYhLxiVPcu/AmXtchgufhrSkOUpk1z8w+SdknOX5wZ1eR\\n' +\n                'K0pvg3Sh0u170oRc8kkXwE4yMHo0hys+djDePa6dvlf7L7QUx5Ox6O+9Cxzi/Ss4H2NedTAp8Ozw\\n' +\n                'xCgCKUxEGnHx4bkkhQr/+3Bk7Qeyc0LAgGgcQkZDGCUgI5IJEFsEoKBskOCGYMAgpKCqYrNuKNOz\\n' +\n                'waOkQM8uLIMmqiaDHr7/bo3XWKGBizzSr7eVX4FS74Qpty85l7NJeTw9tmccF89gstx32Wh6t7Np\\n' +\n                'H35rv9N1DO97q7GuRKp3d/V3e7i113q1g2doQ5IiUnIDFb2NKDq5oTLArEnWtKi5hHIFnEkvozxd\\n' +\n                'bmElMJlB0SAFqpwu21eMOC5FwK3jHsqQxAtTNMS5xnNhY8uGh52jm1vgoznDDmnPkqQnffBD8HBZ\\n' +\n                'BC5mkyq1awLVvNBOlSwEtUu+xz6yTaNbzcbVR0MhvjUaqtBEBGiZtmE2t221zQRxgEGlaxE0NpJj\\n' +\n                'Fn3oQu4Luc+LQM+8LLuM3ajqHBWtiAMlgGWGLXUKEjGG5orJhgmpQiZU//tyZOyH8nM5QIBpE5I9\\n' +\n                'qhgwFCLKCTxPBQGwbkEWCyCAAIwBonQNQhD0EEiucpA5DtBUMk87OFf1aS9mr6lt870Bil1QT9u3\\n' +\n                'n771oz6XMFTiP+1so3sc92ohfJwR9YjyruxkN/f2q7enwL24xkyoadnR3bCgKWS89JCTbTRa2vDd\\n' +\n                'lQhr9SF9kAxi5Mynq5nyD7SpILXlx3oMr0Au9mdo6jL1lF7kwku+fmpruoX2DW+HfKenHxNVX9bd\\n' +\n                'Zb91uEjJBJTDgpVbmZTpE9XAtzo4wVLDQCq+mQezfSveOH2MGL0NoP84xvSdr32fRXI9y7blsELr\\n' +\n                'HteoAcBJQmRkwpkEoVhcAoLmVGoFIlkhI8HYwKAy6DSSRLIyxUFaiwlKgEw0ikFQavPSvVlgoBjy\\n' +\n                '3PLSoBxK6tSA5rMsdqP/+3Bk6YAiIAzBiCEwYDji6DABAx4ItCkGoITBASmGYJQwmNnFniKhS2Ig\\n' +\n                'AABM7zMTDYVLgw7KlSRZS6oajlL26ARoKufnuJWVZENVHusOyQi0t8seBoSuasJD2Unqg1Oj6g4R\\n' +\n                'DSzKoMwCVDQKiNSqh1pW29e4ehIDOUYZTPK1LyspS0FjKUScqP/izDRRP/P3O7CYVl8QsXyfcWIU\\n' +\n                'hMmHNBJ4qllASqX2l1ftMbytyqFKyKA8FEvGqJAAAFb6emrSlqQ4CGdBOj8niFISyh/QsmTVF5hR\\n' +\n                'rMWQsOKYeL5CkH4hM+ErzWaniFnr9Sp9RWVZSmoaj0X5UNmhIViQ4gYUAjPT/0NwGCjwCic/36tz\\n' +\n                'ZVQ4CmZfzL/r/p/6Klpbo5U5lUj3XZb+YKFI5Uo4Cok11zTSo5TAw2Vj//tyZO2EAmIPQIBhWwI1\\n' +\n                'gZhpBCMMCSgzAyCEwYEaDGAQEwnIl5SRUlSiJJbYykvlxhoqEGFKqGAghQdGYoaY6oSkYUfZ9iP/\\n' +\n                'UBURZDP0AUUB0i09z3lRY0PIxYKuiIlH5IOnYNgsSkxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqr/+3Bk747yQV26gKEWwkVsB1gIJa7JQTLEIRhOSNEG2MAAjYCqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\\n' +\n                'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq');\n            audio.play();\n        }\n    </script>\n</body>\n</html>\naudio.test.ts:\n````typescript\nimport { Selector } from 'testcafe';\nfixture('Test Audio')\n    .page('./index.html');\ntest('Test Audio', async (t) => {\n    await t\n        .click('#playAudio');\n});\n````\n. ",
    "dsedmak": "Hi\nI just started using TestCafe and have run into this issue. So I'm using version 0.23.1 and this still happens. I hope this issue gets reopened because the issue is not fixed. I have figured out a workaround that causes the tests to behave properly which proves that the problem is with testcafe and not with the page. I'll give a working example:\n``` JavaScript\nimport { Role } from \"testcafe\";\nimport * as conf from \"../../configuration\";\nimport { Page } from \"../../page\";\nconst page = new Page();\nconst regularUser = Role(\n    conf.baseUrl,\n    async t => {\n        await t\n            .typeText(page.login.credentials.usernameInput, conf.regularUserUsername)\n            .typeText(page.login.credentials.passwordInput, conf.regularUserPassword)\n            .click(page.login.credentials.submitButton);\n    },\n    { preserveUrl: false }\n);\nfixture(\"fixture\")\n    .page(conf.baseUrl)\n    .beforeEach(async t => {\n        await t.maximizeWindow().useRole(regularUser);\n        await t.eval(() => location.reload(true));\n    });\ntest(\"first\", async t => {\n    await t.click(page.shell.appMenu.mainMenuToggle);\n});\ntest(\"second\", async t => {\n    await t.click(page.shell.appMenu.mainMenuToggle);\n});\n```\nRemoving .page from fixture and setting preserveUrl to true also works.\nHowever the reload must be awaited separately. This will not work:\nJavaScript\nfixture(\"fixture\")\n    .page(conf.baseUrl)\n    .beforeEach(async t => {\n        await t\n            .maximizeWindow()\n            .useRole(regularUser)\n            .eval(() => location.reload(true));\n    });\nEssentially it boils down to forcing a reload on the page.. ",
    "alejandro-martinez": "Hi @AndreyBelym, I'm already using the \"user-data-dir\", still doesn't work. Thoughts? Thanks for this framework, it's amazing. @AndreyBelym thanks dude, but I'm skipping the warning by deleting the first downloaded file first. So I just download the file, do some assertions, delete the file, download another file, and all over again. Cheers and thanks. ",
    "khrizt": "Great! Thanks for the help. Let me know if I can contribute with something.. ",
    "lukaszblasz": "I have the same error message, when trying to run testcafe using jenkins build on my mac.\nIn my jenkins bash file im calling:\nnpm install testcafe testcafe-reporter-xunit\nnode_modules/.bin/testcafe chrome e2e/ -r xunit:res.xml\nI was trying solutions from other posts, like: \n-renaming Goole Chrome.app to Chrome.app \n-changing Chrome properties to have Read&Write permissions for all the users\nUnfortunalety without success. testcafe -b is giving me 2 browsers: chrome and safari\nWhen trying to run tests in safari i am getting similar error:\nERROR Was unable to open the browser \"locally-installed:safari\" due to error.\nError: Unable to run the browser. The file at /Users/Shared/Jenkins/Home/workspace/test/node_modules/testcafe-browser-tools/bin/mac/open.scpt does not exist or is not executable.. ",
    "ameyagholkar": "\ud83d\udc4b @AndreyBelym Thanks for your reply!\nI'm not sure if I made it explicit, but we're using chrome:headless in our scripts.\nI ran testcafe chrome:headless:userProfile --concurrency 3 <my-files> but I get the same error.\nSince I'm using headless mode, is that above browser name correct? . Any specific release (stable or dev) we can test this out on? \ncc/ @AndreyBelym @AlexanderMoskovkin . Thanks @AlexanderMoskovkin \nI've been trying to get some screenshots of this in action in chrome:headless since this morning. But unfortunately, they're not capturing this in flux.\nWe did add some logic to check for boundingRect and this is a snippet from our logs (if it helps)\n```\n2018-02-01T19:14:29.5672740Z  Test > Test runs > Test run overview > Test report > Device view page\n2018-02-01T19:14:45.3452790Z Attempt 10\n2018-02-01T19:14:45.4013340Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:14:45.4113610Z documentWidth - 1280\n2018-02-01T19:14:52.1062780Z Attempt 10\n2018-02-01T19:14:52.1629350Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:52.1739250Z documentWidth - 1280\n2018-02-01T19:14:52.8603770Z Attempt 10\n2018-02-01T19:14:52.9186050Z BoundingRect top - 0, left - 810, right - 1760\n2018-02-01T19:14:52.9221860Z documentWidth - 1280\n2018-02-01T19:14:53.0347720Z Attempt 9\n2018-02-01T19:14:53.0914130Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:53.1013750Z documentWidth - 1280\n2018-02-01T19:14:53.7357110Z Attempt 9\n2018-02-01T19:14:53.7910900Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:14:53.7943960Z documentWidth - 1280\n2018-02-01T19:14:53.9089160Z Attempt 8\n2018-02-01T19:14:53.9641500Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:53.9742300Z documentWidth - 1280\n2018-02-01T19:14:54.8072770Z Attempt 7\n2018-02-01T19:14:54.8658830Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:54.8759290Z documentWidth - 1280\n2018-02-01T19:14:54.8856410Z Attempt 10\n2018-02-01T19:14:54.9284730Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:54.9389390Z documentWidth - 1280\n2018-02-01T19:14:55.7310590Z Attempt 6\n2018-02-01T19:14:55.7374670Z Attempt 9\n2018-02-01T19:14:55.7985920Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:55.8020640Z documentWidth - 1280\n2018-02-01T19:14:55.8175280Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:55.8213000Z documentWidth - 1280\n2018-02-01T19:14:56.6095760Z Attempt 8\n2018-02-01T19:14:56.6311840Z Attempt 5\n2018-02-01T19:14:56.6565290Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:56.6606100Z documentWidth - 1280\n2018-02-01T19:14:56.6845600Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:14:56.6885280Z documentWidth - 1280\n2018-02-01T19:14:57.4954740Z Attempt 7\n2018-02-01T19:14:57.5489040Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:57.5522930Z documentWidth - 1280\n2018-02-01T19:14:57.8839540Z Attempt 10\n2018-02-01T19:14:57.9485570Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:14:57.9518460Z documentWidth - 1280\n2018-02-01T19:14:58.3774060Z Attempt 6\n2018-02-01T19:14:58.4325200Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:58.4372250Z documentWidth - 1280\n2018-02-01T19:14:59.2383840Z Attempt 5\n2018-02-01T19:14:59.2977880Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:14:59.3078090Z documentWidth - 1280\n2018-02-01T19:14:59.6038130Z Attempt 10\n2018-02-01T19:14:59.6940250Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:14:59.7052720Z documentWidth - 1280\n2018-02-01T19:15:00.1639770Z Attempt 4\n2018-02-01T19:15:00.2188240Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:00.2288960Z documentWidth - 1280\n2018-02-01T19:15:01.0527330Z Attempt 3\n2018-02-01T19:15:01.0759130Z Attempt 10\n2018-02-01T19:15:01.1208890Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:01.1303370Z documentWidth - 1280\n2018-02-01T19:15:01.1404500Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:01.1505120Z documentWidth - 1280\n2018-02-01T19:15:01.9872230Z Attempt 2\n2018-02-01T19:15:02.0406070Z BoundingRect top - 0, left - 382.97479248046875, right - 1332.9747314453125\n2018-02-01T19:15:02.0534610Z documentWidth - 1280\n2018-02-01T19:15:02.8482980Z Attempt 1\n2018-02-01T19:15:02.9316880Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:02.9417330Z documentWidth - 1280\n2018-02-01T19:15:02.9592900Z Attempt 10\n2018-02-01T19:15:03.0218920Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:03.0272070Z documentWidth - 1280\n2018-02-01T19:15:03.8544000Z Attempt 9\n2018-02-01T19:15:03.9166560Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:03.9281160Z documentWidth - 1280\n2018-02-01T19:15:04.7192360Z Attempt 8\n2018-02-01T19:15:04.7804960Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:04.7905270Z documentWidth - 1280\n2018-02-01T19:15:06.4720350Z Attempt 10\n2018-02-01T19:15:06.5722950Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:06.5821250Z documentWidth - 1280\n2018-02-01T19:15:08.5758940Z Attempt 10\n2018-02-01T19:15:08.6408450Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:08.6510990Z documentWidth - 1280\n2018-02-01T19:15:10.2256910Z Attempt 10\n2018-02-01T19:15:10.2794010Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:10.2893550Z documentWidth - 1280\n2018-02-01T19:15:12.3402970Z Attempt 10\n2018-02-01T19:15:12.4147900Z BoundingRect top - 0, left - 810, right - 1760\n2018-02-01T19:15:12.4261820Z documentWidth - 1280\n2018-02-01T19:15:12.4684550Z Attempt 10\n2018-02-01T19:15:12.5275740Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:12.5386770Z documentWidth - 1280\n2018-02-01T19:15:13.2834330Z Attempt 9\n2018-02-01T19:15:13.3410950Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:13.3464020Z documentWidth - 1280\n2018-02-01T19:15:14.4754780Z Attempt 10\n2018-02-01T19:15:14.5471300Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:14.5505880Z documentWidth - 1280\n2018-02-01T19:15:15.2246010Z Attempt 10\n2018-02-01T19:15:15.2862520Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:15.2959610Z documentWidth - 1280\n2018-02-01T19:15:15.3493490Z Attempt 9\n2018-02-01T19:15:15.4146860Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:15.4247150Z documentWidth - 1280\n2018-02-01T19:15:16.2149150Z Attempt 8\n2018-02-01T19:15:16.2701240Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:16.2803790Z documentWidth - 1280\n2018-02-01T19:15:17.0888640Z Attempt 7\n2018-02-01T19:15:17.2167050Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:17.2266470Z documentWidth - 1280\n2018-02-01T19:15:17.4064240Z Attempt 10\n2018-02-01T19:15:17.4728000Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:17.4820590Z documentWidth - 1280\n2018-02-01T19:15:18.0793670Z Attempt 6\n2018-02-01T19:15:18.3461440Z Attempt 9\n2018-02-01T19:15:18.4080340Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:18.4192320Z documentWidth - 1280\n2018-02-01T19:15:19.2068720Z Attempt 8\n2018-02-01T19:15:19.2798090Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:19.2830880Z documentWidth - 1280\n2018-02-01T19:15:20.1120950Z Attempt 7\n2018-02-01T19:15:20.1645910Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:20.1746020Z documentWidth - 1280\n2018-02-01T19:15:21.0360520Z Attempt 6\n2018-02-01T19:15:21.0914120Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:21.1018170Z documentWidth - 1280\n2018-02-01T19:15:21.9637190Z Attempt 5\n2018-02-01T19:15:22.0156830Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:22.0257260Z documentWidth - 1280\n2018-02-01T19:15:22.8853430Z Attempt 4\n2018-02-01T19:15:22.9380990Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:22.9481210Z documentWidth - 1280\n2018-02-01T19:15:24.1630630Z Attempt 10\n2018-02-01T19:15:24.2190230Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:24.2223850Z documentWidth - 1280\n2018-02-01T19:15:26.2970090Z Attempt 10\n2018-02-01T19:15:26.3535840Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:26.3570790Z documentWidth - 1280\n2018-02-01T19:15:27.6160520Z Attempt 10\n2018-02-01T19:15:27.6793730Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:27.6827480Z documentWidth - 1280\n2018-02-01T19:15:29.5244290Z Attempt 10\n2018-02-01T19:15:29.5878700Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:29.5970420Z documentWidth - 1280\n2018-02-01T19:15:30.6277580Z Attempt 10\n2018-02-01T19:15:30.7013690Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:30.7111280Z documentWidth - 1280\n2018-02-01T19:15:31.6316210Z BoundingRect top - 0, left - 610, right - 1560\n2018-02-01T19:15:31.6361390Z documentWidth - 1280\n2018-02-01T19:15:32.4798580Z Attempt 5\n2018-02-01T19:15:32.5883560Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:32.5983870Z documentWidth - 1280\n2018-02-01T19:15:32.6788630Z Attempt 10\n2018-02-01T19:15:32.7436800Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:32.7535710Z documentWidth - 1280\n2018-02-01T19:15:34.0247920Z Attempt 10\n2018-02-01T19:15:34.0826690Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:34.0928450Z documentWidth - 1280\n2018-02-01T19:15:35.5953870Z Attempt 10\n2018-02-01T19:15:35.7632500Z BoundingRect top - 0, left - 330, right - 610\n2018-02-01T19:15:35.7732710Z documentWidth - 1280\n2018-02-01T19:15:36.2395050Z Attempt 10\n2018-02-01T19:15:36.2962480Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:36.3009410Z documentWidth - 1280\n2018-02-01T19:15:37.5407150Z Attempt 10\n2018-02-01T19:15:37.5964140Z BoundingRect top - 0, left - 50, right - 1000\n2018-02-01T19:15:37.6063840Z documentWidth - 1280\n2018-02-01T19:15:39.8042680Z Attempt 10\n2018-02-01T19:15:39.8532220Z BoundingRect top - 0, left - 330, right - 1280\n2018-02-01T19:15:39.8635880Z documentWidth - 1280\n2018-02-01T19:15:41.9863840Z  \u2713 Navigating through the device grid\n```\nIt's a bit messy because of concurrency but if you follow the decreasing count, you'll see how the panel is at 1560 -> 1332.9747314453125 (at attempt 2 - second to last out of 10) -> 1280\nIt's the same behavior that we see on our local machine running headless mode albeit lesser attempts. . @AlexanderMoskovkin Any progress around this issue?. We're also facing this issue intermittently on our CI machines. We're running Chrome beta.\n```\n2018-03-08T22:20:46.8490380Z Error: The HeadlessChrome 0.0.0 / Mac OS X 10.13.2 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n2018-03-08T22:20:46.8523930Z     at Timeout. (/Users/agent/2.129.1/work/1/s/node_modules/testcafe/lib/browser/connection/index.js:225:34)\n2018-03-08T22:20:46.8551560Z     at ontimeout (timers.js:386:11)\n2018-03-08T22:20:46.8579960Z     at tryOnTimeout (timers.js:250:5)\n2018-03-08T22:20:46.8606310Z     at Timer.listOnTimeout (timers.js:214:5)\n```. ",
    "mpham-r7": "@ameyagholkar i see the fix is specific to chrome... i am having the same issue with firefox/firefox:headless as well... will there be a fix for those browsers?. i experience the same as OP, but with testcafe  0.19.1 and testcafe-browser-provider-browserstack 1.2.0. ",
    "helsont": "Is there any update on this? My use case is in my CI. If something goes wrong with an API call and my frontend code fails, it's hard to know what exactly went wrong with just my current backend logs. \nCan someone suggest a work around in the interim? . ",
    "cortezcristian": "@miherlosev I'm having the same issue with uploads. Can you update the version of testcafe-hammerhead on this project? Are you planning to do an npm publish any time soon?. ",
    "evanniedojadlo": "@AndreyBelym thanks, I went ahead and downloaded separately using https://github.com/DevExpress/testcafe/releases/tag/v0.19.0-alpha1 executed several tests using safari and didn't see the issue again. . ",
    "dcsaszar": "Hi @AndreyBelym we upgraded three weeks ago, and also updated other parts of our test infrastructure. Currently this issue doesn't affect us in real life. So, it has no priority for us at the moment.\nFYI: While we are no longer experiencing the issue in our tests, my synthetic test case for this issue still fails.. I see, thanks for clarifying. I can set up a separate Chrome 41 test job using 0.18.7-dev20180124. ",
    "palpatine1991": "We would need such functionality as well. It might be good to have either possibility to do mousedown/mouseup in separate or, maybe even better, to add click options with the delay between mousedown/mouseup.\nThis option would be also useful in D&D functionality. I know use cases, used especially on touch devices, when Drag action is started some time after initial touchstart event to distinguish scroll start vs drag start.. @AndreyBelym I am not sure if those two issues are representing what I am asking for.\nWhat I am looking for is to get the CSS selector from the Selector class instance. It is sometimes useful for us when we are writing our own ClientFunctions for some features which are missing from TestCafe. In this case, the client function accepts the CSS selector and therefore we need to duplicate the selector building logic.\nHaving the Selector.getCssSelector() method would simply our life significantly.. @AlexKamaev I am not sure if this fix is correct. Let me show you the example:\nIn the very simple case your fix is correct. No console log is called when the button is clicked (and it behaves the same in TestCafe):\n<!-- Won't log anything -->\n<div onclick=\"console.log('div')\">\n    <button disabled onclick=\"console.log('button')\">\n           Click me\n    </button>\n</div>\nOn the other hand, when the disabled button contains any other element, the click events are called (but not in TestCafe!):\n<!-- Logs \"span\" \"div\" -->\n<div onclick=\"console.log('div')\">\n    <button  onclick=\"console.log('button')\">\n        <span onclick=\"console.log('span')\">Click me</span>\n    </button>\n</div>\n. ",
    "PierreRott": "Thank you for your prompt reply. Unfortunately, the solution you recommend is not sufficient. I managed to simulate long press action by drag feature. The smallest value I was able to measure on the button was 0 seconds, the biggest one was 1 second. If I wanted to measure for example 5 seconds I wouldn't be able to do so. Anyway thank you for your answer and I will look forward that this feature will be possibly added to testcafe in the future.. Hello, Hellen.\nThank you for your prompt reply, I really appreciate it.\nThis feature would be very helpful, so it is nice to see, that you are going to implement a paste operation including raising of the paste event.\nI think you are doing a great job! Many thanks and keep up the good work!. ",
    "dininski": "NVM turns out this was easily achievable using a custom browser provide. Closing.. ",
    "asifamingov": "This bug is there in the latest version as well. ",
    "thomasleveil": "@AlexanderMoskovkin I made my own docker image for that purpose, based on yours. I've tested it with Vue and it works.. ",
    "lucidtech": "so... since this is still open - jumping in here.  I am using the react selectors - but am unable to get it to work when placing them in the tests folder.  I always get this error...\n```\nERROR Cannot prepare tests due to an error.\nError: ENOENT: no such file or directory, open '/tests/node_modules/testcafe/client/hammerhead.js'\n    at readSync (/tests/node_modules/read-file-relative/index.js:24:22)\n    at Object. (/tests/node_modules/testcafe/lib/testcafe.js:23:27)\n    at Object. (/tests/node_modules/testcafe/lib/index.js:166:17)\n    at Object. (/tests/node_modules/testcafe-react-selectors/lib/index.js:7:16)\n    at Object. (/tests/password_setting.tests.js:2:1)\n```\nso +1 for bundling the other selector modules.\nInterested to know if there are clearer instructions - but going to take the approach of building my own container.. @AndreyBelym \nthanks for the response. sorry I missed the gulpfile.. ",
    "jadams88": "Hi @AlexanderMoskovkin ,\nI'm not sure if this is related or that moving the definitions to @types would solve the issues, but I am currently getting a clash between the declaration of 'var test' between the type definitions of Testcafe and Jest.\nTestCafe -> declare var test: TestFn;\nJest -> declare var test: jest.It;\nTS Error\n[ts] Subsequent variable declarations must have the same type.  Variable 'test' must be of type 'TestFn', but here has type 'It'.\nThe Jest definitions are installed from @types/jest as a devDependency and the Testcafe types are loaded from the npm package.\nThe clash in definitions are preventing my NativeScript project from compiling via webpack.\nThank you for your time.\nEdit:\nThe below issue fixed my problem.\nhttps://github.com/DevExpress/testcafe/issues/1537\n. ",
    "nikolaj10": "I agree with you, there are a few equivalents for click event, but i work as a Tester SW, so i sometimes need to test space event too. I think that, all these equivalents for click event should also work in a situation, where we do not have a choice. I understand that, it is not so important, but eventually it should works mainly because it is a part of default browser behavior too. Thank you for understanding. . ",
    "EvanNGoldstein": "Any update on this? In order to share suites across files I have to add something like\n``\nfixtureA fixture`;\ntest('', () => {});\n```\nto my files, which is extremely hack-y.... ",
    "adback03": "I'm also experiencing the exact same thing in both Firefox and IE 11. Chrome (and headless Chrome) both work fine.. ",
    "QuantumInformation": "Thx @AlexanderMoskovkin so much, I think what I will do is get my next version in 2-3 weeks to contain these assertions and see if the community likes it.. ",
    "multivoltage": "very good :). ",
    "beyondcompute": "Just wanted to say thank you to @AndreyBelym and all the TestCafe contributors for the incredible work you people are doing! \ud83d\ude4c \ud83c\udf89 . ",
    "green-arrow": "@miherlosev - The document.cookie call is within the actual application being tested. The app gets the XSRF-TOKEN cookie to set it as a header on other calls to our API when creating / modifying resources.. Thanks for looking into this!. Thanks for the investigation! I\u2019ll close this issue since it\u2019s tracked in the other repo. . ",
    "snowl": "Hi @miherlosev,\nSince request hooks has been merged into the alpha and you have added docs for Request Hooks (#2309), are you able to add documentation to enable Client Certificate Authentication within the docs as well?\nThanks. Hi Alex,\nI'm not too sure I understand - if I do this approach, how would you build upon tests (e.g first test does one action which saves into localStorage, second and third test modifies the data stored within the localStorage and the fouth test removes the data from the localStorage)? If you can only do things within the Role constructor then how are you supposed to perform multiple tests with the expected data?\nIf I something like this:\n```\nimport {Role, Selector} from \"testcafe\";\nfixture(\"Test local storage\")\nconst myrole = Role(\"http://da.viddiaz.com/tmp/testcafe.html\", async t => {\n    await t\n        .expect(Selector(\"#items\").textContent).eql(\"0\")\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .click(Selector(\"a\"))\n        .expect(Selector(\"#items\").textContent).eql(\"4\");\n}, { preserveUrl : true });\ntest(\"Test adding to local storage\", async t => {\n    await t.useRole(myrole)\n        .expect(Selector(\"#items\").textContent).eql(\"4\")\n        .click(Selector(\"a\"))\n        .expect(Selector(\"#items\").textContent).eql(\"5\");\n});\ntest(\"Test local storage is saved\", async t => {\n    await t.useRole(myrole);\n    await t.expect(Selector(\"#items\").textContent).eql(\"5\");\n});\n```\nIt still doesn't work.\nCheers. Thank you so much! That fixed the issue I was having (although I'll keep the bug open because of the other issue that was found)\nCheers :). Check out #2142, I had the same issue.. ",
    "bramroop": "Hi @LavrovArtem thanks for your help. Unfortunately I'm still getting the same issue even after upgrading to v0.18.6\n```\n$ testcafe --version\n0.18.6\n$ testcafe chrome testcafe_test.js \n Running tests in:\n - Chrome 64.0.3282 / Mac OS X 10.12.4\nLogin\nActual header text = Please enable cookies to continue.\n \u2716 Login\n1) AssertionError: expected 'Please enable cookies to continue.' to deeply equal 'The email and/or password you entered are not correct.'\n  Browser: Chrome 64.0.3282 / Mac OS X 10.12.4\n\n     16 |\n     17 |    // Obtain the text of the article header\n     18 |    let headerText = await pageHeader.innerText;\n     19 |    console.log(\"Actual header text = \" + headerText)\n     20 |\n   > 21 |    await t.expect(headerText).eql('The email and/or password you entered are not correct.')\n     22 |});\n     23 |\n\n     at <anonymous> (testcafe_test.js:21:32)\n\n1/1 failed (5s)\n```\nIs there any other difference in the way we're running things that you can think of that might be causing the issue?\nThanks again. ",
    "shiveshyadav": "I am facing similar issue for one of our application :\ntestcafe --version 0.18.6\nChrome 63.0.3239 \nWindows 7.0.0\nWe are not able to interact with one web application , it continuously showing loading without error. I have checked proxy and firewall as well for another application on same network it is working fine. . ",
    "vigneshwar-v": "Anything on this?? . @AndreyBelym is it working ??. @andreybelym.. Sorry for being desperate... Take care man.. And thanks for the check-in. Guys?? . I cant even go through the login page if this is not solved :( . Bear with my desperate comments, since I am gonna choose my framework as test-cafe. https://testcafe-discuss.devexpress.com/t/csrf-issue-with-testcafe/1044/2\nI have mentioned the urls and test scenario in test cafe forum. kindly refer to it. ",
    "arobert3434": "@LavrovArtem All right, that post says image requests are not proxied.  That's unfortunate in our case, as we serve some of our images behind authentication, and have not implemented a separate CSRF pathway for those.  We can work around it, but it would be better if there were at least an option to just let image requests go through the same pathway.  Is there a ticket for this?  Or were there actually measured performance issues with that approach?\n. ",
    "Nuarat": "Sounds cool, thanks for the idea! I'll work on that.. @testcafe-build-bot \\retest. > I would add the following statement to the Reporting a Problem section:\n\nIssues with insufficient details may take significant time to be processed.\nFull text may look as follows:\nWhen you create a new issue, template text is automatically added to its body. To help us understand the issue you're describing, be sure to fill in all sections in this template. Issues with insufficient details may take significant time to be processed.\n\nSounds good.. Let's make sentences shorter.\nThe only required setting here is mainWindowUrl. It's a URL (or path) to the main window page relative to the application directory.. ...  at the test launch.\nIsn't it obvious, the part about command line or API?. We've added concurrent test launch. This makes a test batch complete faster.. By default TestCafe launches one instance of each specified browser. Tests run one by one in each of them.. Enable concurrency and TestCafe will launch multiple instances of each browser. It will distribute the test batch among them. The tests will run in parallel.. To enable concurrency add '-c' in the command line. Or use the 'runner.concurrency()' API method.\nSpecify the number of instances to invoke for each browser.. \u041d\u0435\u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e. \u0410 \u0437\u043d\u0430\u0447\u0438\u0442, \u043d\u0435 \u043f\u043e\u043b\u0435\u0437\u043d\u043e (\u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043d\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441: \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0432 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u043f\u043e\u0432\u043b\u0438\u044f\u0435\u0442?)\n\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c.. TestCafe now saves the local storage state when switching between roles. You get the same local storage content you left when you switch back.. Use this for websites that authenticate via local storage. \n\n\n\u0412\u0430\u0440\u0438\u0430\u043d\u0442 2:\nThis will be useful for websites that authenticate via local storage.\n\n\n\u0418\u043b\u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043a\u0430\u043a \u0435\u0441\u0442\u044c.\n. Does it mean this? \nFor those who don't know what StorageSandbox is, I'd add a couple of words, why it's useful.\nStorageSandbox is now available in the client API. clear and lock methods are added to it.\n. And what's the profit here? For the user.. Do we give links to these methods? \nExplaining them all can be too much, but at least links to see what they're for.. \u041a\u0430\u043a \u043e\u0431\u044b\u0447\u043d\u043e, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u0438\u0439 :)\nI've heard that TestCafe doesn't use Selenium. How does it operate?. I have installed TestCafe but I cannot run it. What should I do?. When I run a TestCafe test, I get an unexpected error. What can cause that?\n(\u0414\u043b\u044f \u043c\u0435\u043d\u044f \u0437\u0432\u0443\u0447\u0438\u0442 \u0441\u0442\u0440\u0430\u043d\u043d\u043e. \u041f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u0447\u0442\u043e \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b \u0437\u043d\u0430\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u044b.). It had several features beside the test runner. Control Panel, a visual interface for creating, modifying and running your tests. And Visual Test Recorder that allowed you to record tests by pointing and clicking through the test scenario in the browser.. In 2015 we decided to release its core as an open-source project. The last major release of the paid version (v15.1) happened in the summer 2015.. We've released the open-source TestCafe in late 2016. It has the same name but contains lots of new functionality and improvements:. it has a new API and offers a new approach to writing tests;. features like es6 support, flexible selectors and smart assertions, authentication features etc.\n(\u0432\u044b\u0448\u0435 \u043f\u0438\u0441\u0430\u043b\u0438 \u043f\u0440\u043e a lot of features, \u0430 \u0441\u0435\u0439\u0447\u0430\u0441 - some. \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e some \u0443\u0431\u0440\u0430\u0442\u044c). You can find the list of oficially supported browsers in our documentation. These are the browsers we are testing TestCafe with.\n*\u043c\u043e\u0436\u0435\u0442, \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0438 present simple; \u043d\u043e \u0432\u0447\u0435\u0440\u0430 \u043c\u043d\u0435 \u043a\u0430\u043a \u0440\u0430\u0437 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u043b\u0435\u0442 5-7, \u0435\u0441\u043b\u0438 \u0438\u043c\u0435\u0435\u043c \u0432 \u0432\u0438\u0434\u0443 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c continuous. \u042f \u0431\u044b \u0441\u0442\u0440\u043e\u043a\u0443 69 \u0432\u043e\u043e\u0431\u0449\u0435 \u0443\u0431\u0440\u0430\u043b\u0430.. TestCafe works with two latest versions of oficially supported browsers. Exceptions are specified explicitly in the supported browsers list. However, TestCafe usually works in any version of such browsers released in the last three years.. On the server side, use the import statement.. TestCafe works with zero configuration. It does not have any config files where you can place custom variables. But you can introduce your own configuration file and import it to test code.. Check your firewall. First, make sure that your firewall does not block ports used by TestCafe. By default, TestCafe chooses free ports automatically. Use the --ports command line option or the createTestCafe API factory function to specify custom ports. After that, check that these specific ports are not blocked by the firewall.. Check your proxy server. Another reason for this.... For Linux check X11. Also note that if you run TestCafe on Linux.... \u041a\u043e\u0433\u0434\u0430 \u0435\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u0443\u0434\u043e\u0431\u043d\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0438\u0447\u0438\u043d.. JavaScript errors. The most common reason for this.... Browser extensions. If this does not help, try.... Third-party modules. In rare cases, third-party modules.... First, try debugging.... \u0438 \u0442\u0430\u043a \u0432\u0435\u0434\u044c \u044f\u0441\u043d\u043e, \u0437\u0430\u0447\u0435\u043c \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0442\u044c. Makes sense. I included human factor too)\nLet it be a minute, including the time to run the shell and type the command.. A typo: there shouldn't be a dot after the \"Reporters\" link.. \u0423 \u043d\u0430\u0441 \u0434\u0440\u0443\u0433 \u0437\u0430 \u0434\u0440\u0443\u0433\u043e\u043c \u0438\u0434\u0443\u0442 \"for more information\". \u041c\u043e\u0439 \u043a\u043e\u0441\u044f\u043a, \u043d\u0435 \u0437\u0430\u043c\u0435\u0442\u0438\u043b\u0430 \u0441\u0440\u0430\u0437\u0443. \u041f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0437\u0430\u0434\u0443\u043c\u044b\u0432\u0430\u0442\u044c\u0441\u044f, \u043e \u0447\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0435\u043c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0443. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a\u0443\u044e:\nRead the Getting Started page for a more detailed guide.\n. Allow \u0432\u043c\u0435\u0441\u0442\u043e Allows, \u0442.\u043a. \u0443 \u043d\u0430\u0441 \u043c\u043d.\u0447. \u0432 Providers. \u0422\u043e\u043b\u044c\u043a\u043e \u043c\u043d\u0435 \u044d\u0442\u043e \u0441\u0442\u0440\u0430\u043d\u043d\u043e \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f? \u041a\u0430\u043a \u0431\u0443\u0434\u0442\u043e \u0422\u0435\u0441\u0442 \u041a\u0430\u0444\u0435 \u0443\u0436\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u0445.\n\u041c\u043e\u0436\u0435\u0442, \u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u0434\u0440\u0443\u0433\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0438\u043b\u0438 \u0444\u043e\u0440\u043c\u0443?\n1) ... will present... \n2) View test results in different formats. People very rarely say exact numbers.\nWhile \"a few ...\" is very common.\nThis is why it might catch customer's attention, while they might skip a well-known phrase. That's why I insist on \"a minute\".. I agree, sounds good. If we have a good search in our docs (I hope we do), then it should be easy to find.\nEach link we include should have a purpose. If it's an article, then the more links to our site - the better. But on a landing page I don't see such need. It's not a common question like \"how come you don't use selenium\".\nOr is there something special about disabling this feature? . On Alex's suggestion:\nTestCafe provides built-in assertions which wait until page elements load and XRSs are completed.. Yes. Yes, let's use your phrase. +1\n. ok. What type of issue should a person set when he does it?\nI thought a filter will be a suggestion to use this issue type.\nIf it's not important, let it be just issues.. \u043f\u043e-\u043c\u043e\u0435\u043c\u0443, \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c decreases. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u043f\u0440\u0435\u0432\u044c\u044e. \n\u0415\u0441\u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0438 \u0438 \u043d\u0430 \u0438\u043c\u0435\u043d\u0430, \u0442\u043e \u043e\u043d\u0438 \u0442\u043e\u0436\u0435 \u0441\u0442\u0430\u043d\u0443\u0442 \u0441\u0438\u043d\u0438\u043c\u0438. \u0412\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432 \u0441\u043e\u043b\u044c\u044e\u0442\u0441\u044f \u0441 \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u042d\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0443\u043a\u0432 \u0438 \u0445\u0443\u0436\u0435 \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f. \n\u0421\u0435\u0439\u0447\u0430\u0441 \u0443 \u043d\u0430\u0441 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432 \u0431\u044b\u0441\u0442\u0440\u043e \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043a\u0440\u043e\u043c\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0442\u0430\u043c \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043e \u0441\u0438\u043d\u0438\u043c.\n\u0426\u0435\u043b\u044c \"\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044e\" \u043c\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c, \u043d\u0430\u0437\u0432\u0430\u0432 \u0438\u0445 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0438 \u0434\u0430\u0432 \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u0441\u0430\u043c \u043f\u043b\u0430\u0433\u0438\u043d (\u0432 \u0438\u0445 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438).\n\u0415\u0449\u0435 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0446\u0435\u043b\u044c \u0435\u0441\u0442\u044c? \u0420\u0430\u0434\u0438 \u0447\u0435\u0433\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0443\u043a\u0432 \u043e\u0434\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 (\u0438 \u0443\u0441\u043b\u043e\u0436\u043d\u044f\u0442\u044c \u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0441\u0442\u044c).\n\u0418, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0434\u0430\u0432\u0430\u0442\u044c \u0435\u0449\u0435 \u043f\u043e\u0432\u043e\u0434 (\u0441\u0441\u044b\u043b\u043a\u0438) \u0443\u0439\u0442\u0438 \u0441 \u043d\u0430\u0448\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. . Well, it's not super important, so if you insist, I'm ok with it. \nBut still I think that current version reads easier. \nExample here: https://github.com/Nuarat/Dummy\n\"Everybody does it\" does not sound persuasive to me =)\nUnless it's a tradition breaking which would be super impolite. This I don't know. Decided to change it to:\nBased on the open-source TestCafe, and supports its major features.. I had similar doubts. You confirmed them, will change.. Done. Good idea, done.. ",
    "hdorgeval": "Thanks @AlexanderMoskovkin for your reactivity. Testcafe-live is a fantastic add-on. I have worked with it since several days and now cannot work on testcafe without it. Thanks for delivering such high quality product. I encourage everybody to use it with Testcafe \ud83d\udc4d. Thanks for your answer. I was wondering if the probl\u00e8me was due to the fact that the http url is:\n* https://xxxx-yyy.fr.world.zzzzz/sp/devci/#\nbut the websocket url is:\nwss://machine-name.fr.world.zzzzz:12345/sv/ws \n(machine-name is not the same as xxxx-yyy, but the suffix is the same : .fr.world.zzzzz)\nbut this schema seems not be reflected in the built url:\nws://000.00.00.0:54321/Sk056E2Dz!w!https%3A%2F%2Fxxxx-yyy.fr.world.zzzzz/https://machine-name.fr.world.zzzzz:12345/sv/ws\nit should be:\nws://000.00.00.0:54321/Sk056E2Dz!w!https%3A%2F%2Fxxxx-yyy.fr.world.zzzzz/wss://machine-name.fr.world.zzzzz:12345/sv/ws\nAm i wrong?\n. Hello @miherlosev, is there a way to clone the hammerhead repo locally on my machine and use this cloned repo over a standard testcafe install.\nIt would enable me to step into the websocket code to investigate what is wrong on our side.\nThanks a lot for your support.. Hi @LavrovArtem, thank's to wireshark, we discovered that the http headers are always sent in a lower cased format. Is it possible, to change the hammerhead behavior so that headers casing is not changed when they are sent over the network? . hi @helen-dikareva, @AndreyBelym, this topic is quite interesting and I would like to give here some feedback about our use of TestCafe in our organisation.\nTestCafe fluent syntax enables to write actions and assertions in a very few lines of code. This syntax leads to write tests with as few lines as possible. The less we write the more we are happy.\nAt first we run the tests on our own developer machine and everything is working great. \nThen tests are automated on our CI environment and they target our DEV and PRE-PROD. \nProblems then start arising: many tests that were green on our machine are randomly red on the CI. \nThen we entered a very painfull period to make all tests green for our DEV CI, and an even more painfull period to make all tests green for our PRE-PROD CI. \nAfter hours and hours of analysing red tests, we found a very simple recipe to make tests pass on the CI environments :\nA test should always do what a real user does on the UI\nFor example to enter a text in a field:\nWhat we do with TestCafe is typeText();\nWhat the User does is: \n\nMove the mouse over the field\nWait until the field is clickable\nClick the field\nType text\nGo to the next field by pressing the TAB key or by clicking another button\n\nObviously the function typeText is not equivalent and should never be equivalent to the five above steps.\nTo type a text in a field we typically do the following sequence:\njavascript\nawait t \n  .setTestSpeed(0.7) //start with 0.7 but ideal target is 1.0\n  .hover(input)\n  .expect(input.hasAttribute(\"disabled\")).notOk({timeout: 5000})\n  .click(input)\n  .typeText(input, \"john doe\", {replace: true})\n  .pressKey(\"tab\");\n. Hi @AlexanderMoskovkin,\nwe have found that typing text in an input field by only using t.typeText() is not a solid enough strategy. In our app, fields may be in a disabled, enabled, hidden state, or even removed from the dom due to local validation, remote server validation or until a response is received from the server. The amount of time to wait for an enabled state may vary from some ms up to several minutes. To handle this, we have created a configuration object with different timeout values (have a look at the testcafe-starter repo and the default-config.ts :\njavascript\nawait t\n    .setTestSpeed(config.testcafe.testSpeed)\n    .hover(selector.userNameInputBox)\n    .expect(selector.userNameInputBox.hasAttribute(\"disabled\")).notOk({timeout: config.testcafe.timeout.customTimeout})\n. Hi @tamlyn, I have refactored your code in the repo (see the PR). \n@AlexanderMoskovkin : is there a better way to solve this case?. Hi @AlexanderMoskovkin, I am currently looking on how to inject test/fixture context in the reporter. Would you accept a PR for this kind of job or are you already working/planning on it?. @inikulin , @AlexanderMoskovkin,\nI looked at the PR #2258, and I would have done the same job on my side: it is a quick solution but I admit this is a questionable solution. \nQuestionable because:\n\npushing the contexts into the reporter may enable the reporter to modify these contexts and therefore this could create side effects. Only immutable or POJO objects should be pushed to the reporter;\non parallel execution, I absolutely do not know how contexts are managed;\nthere is no guaranty on the ctx life cycle: the ctx object may not exist any more when calling the reporter.\n\nPR #2258 would have been a time saver and would give a true value. I would have use it in order to be able to create a cucumber-like json reporter and then be able to create nice html reports with cucumber-html-reporter (see my repo cucumber-ts-starter).\nWhat is actually missing in TestCafe is the fact that there are only two levels for describing tests: the fixture level and the test level. In a way having only two levels prevent deep and unnecessary nesting. \nWhat is lacking is the possibility to tag a test and the possibility to divide a test into steps. \nWhy? \n\nDifferent tests, in different files may cover the same business acceptance scenario. \nNot having steps inside a test may lead to have many code duplication and tests with many lines of code. \n\nUsing a Page Model may solve this problem on a technical point of view but not on a business point of view.\nWhen the TestCafe code base start to grow, more time is needed to write new test and to maintain existing ones. Some dashboard has to be produced for the business in order to show what is going on and how TestCafe is a great product. \nBut dashboard is a sort of reporter and current reporter API cannot produce high level report targeted to the business.\nI would love to be able to write the following code:\n```typescript\nfixture(\"My Fixture\")\n    .page(\"http://myurl\")\n    .before(async (ctx) => {\n        // code omitted for brevity\n    })\n    .beforeEach(async (t) => {\n        await t.report({keyword: \"BeforeEach\"},/  pass a POJO object of type IMyReportInfo /);\n        // code omitted for brevity\n    })\ntest(\"My Test\", async (t) => {\n    await t.report({keyword: \"StepStart\"},/  pass a POJO object of type IMyReportInfo /);\n    // some test code\n    await t.report({keyword: \"StepEnd\"},/  pass another POJO object of type IMyReportInfo /)\n    // other code\n});\n//internally the test function should be wrapped by:\n// t.report({keyword: \"TestStart\", name:\"My Test\"}, / POJO object like testRunInfo /), \n// t.report({keyword: \"TestEnd\", name:\"My Test\"})\n//internally the fixture should be wrapped by:\n// t.report({keyword: \"FixtureStart\", name:\"My Fixture\"}, / POJO object like testRunInfo /), \n// t.report({keyword: \"FixtureEnd\", name:\"My Fixture\"})\n// custom POJO object that will be pushed to the reporter\nexport interface IMyReportInfo {\n    tags: string[];\n    keyword: string;\n    description: string;\n    // any custom information needed by the reporter\n}\n```\n. @AndreyBelym, @AlexanderMoskovkin,\nThank you for your feedback, here is the result: testcafe-reporter-cucumber-json. Hi @martianmartian, I have already encountered similar issues. The work-around is to install testcafe locally in your project folder (npm install --save testcafe) and run these commands in your project folder:\nsh\nrimraf node_modules\nrm package-lock.json\nnpm install\n. Hi @tamlyn, I also encountered this issue on hidden inputs that are rendered as a YES/NO toggle. The work-around is to click on the parent container as a normal user will do.. Hi @AndreyBelym, thank you for your answer. It's always a pleasure to learn something new from people like you. Now, thank's to you, I fully understand the purpose of the skipLibCheck toggle.. Hi @AndreyBelym, thank you for your feedback. This solves the problem. . Hi @vvedachalam : my advice is that e2e test code should never do what a real user cannot do. \nA real user will never be able to interact with a hidden field. \nYour test is not an e2e test and should be placed in a unit test outside of TestCafe. . @vvedachalam : what I understand from what you provided is that there is some magic hidden javascript that links the click on the (not a true) button and  pushes, behind the scene, the selected files to the hidden input field and then automatically upload files. Maybe you are relying on an external JS library for handling these file uploads. Could you tell me which library you are using and where I can find a sample page or a playground site for that library? Cheers\n. @vvedachalam : I have created a test based on the information you provided and it works on my side:\nfixture file:\n```typescript\nimport { sep } from \"path\";\nimport \"testcafe\";\nimport {Selector} from \"testcafe\";\nfixture(\"test file upload\")\n    .page(\"./testUpload.html\");\ntest.only(\"select an image to upload\", async (t) => {\n    const inputFileSelector = Selector(\"input#file\");\n    const imagePath = \"../screenshots/screenshot1.png\";\n    const imageName = imagePath.split(sep).pop();\n    await t.setFilesToUpload(inputFileSelector, imagePath);\n    await t.expect(inputFileSelector.value).contains(imageName, {timeout: 5000});\n});\n```\nhtml file:\nhtml\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <form action=\"http://merchants-cloudiq-rook-dev-01-staging.storage.googleapis.com\" method=\"post\" enctype=\"multipart/form-data\">\n        <input accept=\"image/*\" name=\"file\" id=\"file\" type=\"file\" style=\"display: none;\">\n    </form> \n    <label for=\"file\">\n        <span tabindex=\"0\" class=\"MuiButtonBase-root-16 MuiButton-root-1 MuiButton-raised-6 styles__Button-fnfXjj cISAIm styles__BaseButton-gRoMHg iuAfeO Button__FlatButton-fmRbh ebjtSM\" role=\"button\" name=\"upload-logo--browse-img--btn\">\n        <span class=\"MuiButton-label-2\">Browse your computer\n        <span class=\"MuiTouchRipple-root-18\">\n        </span>\n    </label>\n</body>\n</html>\nexecution result:\n```sh\nRunning tests in:\n - Chrome 67.0.3396 / Mac OS X 10.13.5\ntest file upload\n \u2713 select an image to upload\n1 passed (1s)\n``\n. Thank you @AndreyBelym for the feedback.. @vvedachalam : from what I understand by reading the autoIT documentation, it seems to me that autoIT execution result is exactly the same assetFilesToUpload`.\nSo in my opinion, thank's to TestCafe, you do not need autoIT anymore.. @vvedachalam : to upload the file, you need a submit button inside the form.. @vvedachalam : it seems to me that some javascript is missing in what you provided. To have an auto submit form on file selection you need some code like this at the end of the <body> tag:\njs\n<script>\n    document.getElementById('file').onchange = function(e) {\n        console.log(\"auto submitting on file submission\", e);\n        document.getElementsByTagName('form')[0].submit();\n    };\n</script>. @vvedachalam : \njs\nawait t.setFilesToUpload(inputFileSelector, imagePath);\nwill change the content of the input file field and therefore this will raise the onchange event on this field.\nSo you just need to add this in your html page:\nhtml\n<script>\n    document.getElementById('file').onchange = function(e) {\n        console.log(\"auto submitting on file submission\", e);\n        document.getElementsByTagName('form')[0].submit();\n    };\n</script>\nand t.setFilesToUpload action will automatically upload the file.\nIf if does not work on your existing html page: either there is a javascript error that prevents the onchange event to fire or you should try to upgrade to latest TestCafe version.. @vvedachalam : could you provide the complete javascript code that enables the form to be auto submitted?. @raja1313 : testcafe snippets might help you to handle your business case correctly. Maybe this might help you: https://github.com/hdorgeval/testcafe-snippets/blob/master/say-goodbye-to-flakyness.md. I also suggest to have an enhanced spec reporter that enables to have the source code not only on the last error in the stack trace but for each file inside the stack trace, like in this example:\n```txt\n1) The specified selector does not match any element in the DOM tree.\nBrowser: Firefox 59.0.0 / Mac OS X 10.12.0\n  13 |\n  14 |  const value = inputData.name || \"\";\n  15 |\n  16 |  await t\n  17 |    .setTestSpeed(config.testcafe.testSpeed)\n\n\n\u2192 18 |    .hover(selector.userNameInputBox)\n\n\n  19 |    .expect(selector.userNameInputBox.hasAttribute(\"disabled\")).notOk()\n  20 |    .typeText(selector.userNameInputBox, value, {replace: true})\n  21 |    .pressKey(\"tab\");\n  22 |};\n  23 |\n\n  at Object.(anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/domains/testcafe-sample-page/steps/i-enter-my-name.ts:18:6)\n  at (anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/domains/testcafe-sample-page/steps/i-enter-my-name.ts:7:71)\n  at __awaiter (/Users/HDO/VSCodeProjects/testcafe-starter/domains/testcafe-sample-page/steps/i-enter-my-name.ts:3:12)\n  at exports.default (/Users/HDO/VSCodeProjects/testcafe-starter/domains/testcafe-sample-page/steps/i-enter-my-name.ts:7:36)\n\n\n   6 |  if (canExecute === false) {\n   7 |    return;\n   8 |  }\n   9 |  const foundStep = stepMappings[stepName];\n  10 |  if (typeof foundStep === \"function\" ) {\n\n\n\u2192 11 |    await foundStep(stepName);\n\n\n  12 |    return;\n  13 |  }\n  14 |  throw new Error(`Step \"${stepName}\" is not mapped to an executable code.`);\n  15 |}\n  16 |export async function given(stepName: GivenStep) {\n\n  at (anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:11:11)\n  at (anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:7:71)\n  at __awaiter (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:3:12)\n  at executeStep (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:14:12)\n  at Object.(anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:20:9)\n  at (anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:7:71)\n  at __awaiter (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:3:12)\n  at Object.when (/Users/HDO/VSCodeProjects/testcafe-starter/step-runner.ts:34:12)\n\n\n  19 |  await  then(\"no name should be populated\");\n  20 |  await   and(\"I cannot submit my feedback on testcafe\");\n  21 |});\n  22 |\n  23 |test(\"Scenario: can send feedback with my name only\", async () =) {\n\n\n\u2192 24 |  await  when(\"I enter my name\");\n\n\n  25 |  await  then(\"I can submit my feedback on testcafe\");\n  26 |});\n  27 |\n  28 |test(\"Scenario: send feedback\", async () =) {\n  29 |  await env.only( \"devci\");\n\n  at Object.(anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/features/testcafe-sample-page.spec.ts:24:10)\n  at (anonymous) (/Users/HDO/VSCodeProjects/testcafe-starter/features/testcafe-sample-page.spec.ts:7:71)\n  at __awaiter (/Users/HDO/VSCodeProjects/testcafe-starter/features/testcafe-sample-page.spec.ts:3:12)\n  at test (/Users/HDO/VSCodeProjects/testcafe-starter/features/testcafe-sample-page.spec.ts:23:66)\n\n```. @AndreyBelym : publish-please should be upgraded to version 3.0.1. ",
    "sommcz": "After some experiments, there is no sw gl renderers in the docker image (osmesa or swiftshader).\nWebGL works with osmesa installed!\n\nSimple step to install osmesa in dockerfile:\nRUN apk --no-cache add mesa-osmesa && \\\n  ln -s /usr/lib/libOSMesa.so.8 /usr/lib/chromium/libosmesa.so\nAfter that, following command run testcafe with WebGL support:\n/opt/testcafe/docker/testcafe-docker.sh 'chromium --no-sandbox --use-gl=osmesa' /tests/test1.ts\nPlease add official support for sw renderers to docker image.\nThank you. I didn't test it, but it will be nice to add support for swiftshader too. So developers can choose which one to use.\nAlpine package: https://pkgs.alpinelinux.org/contents?branch=edge&name=mesa-gles&arch=x86_64&repo=main\nLibrary: /usr/lib/libGLESv2.so.2\nLink path for Chromium: /usr/lib/chromium/swiftshader/libGLESv2.so\nusage: --use-gl=swiftshader. ",
    "robodude": "I'm having the same issue trying to run testcafe against a vue-cli 3.0 project. \nThe proposed solution didn't work for me.\npackage.json\n\"e2e\": \"testcafe \\\"chrome:headless -incognito\\\" e2e/**/*.e2e.js -S -s e2e/screenshots --app \\\"npm run serve\\\" --app-init-delay 30000\",\n\"serve\": \"vue-cli-service serve\",\nError: stderr maxBuffer exceeded\n    at Socket.onChildStderr (child_process.js:346:14)\n    at emitOne (events.js:116:13)\n    at Socket.emit (events.js:211:7)\n    at addChunk (_stream_readable.js:263:12)\n    at readableAddChunk (_stream_readable.js:246:13)\n    at Socket.Readable.push (_stream_readable.js:208:10)\n    at Pipe.onread (net.js:594:20). We've seen this issue crop up recently. At first we thought we were just setting something up incorrectly with the requestHooks feature, but the screenshots clearly show the element on the screen. It also happened seemingly randomly.\nWe were -not- using the navigateTo feature.\nWe found that doing stuff like:\n.beforeEach(async t => {\n        await t.expect(pagemodel.activity.brick.exists)\n        await t.expect(pagemodel.activity.brick.exists)\n        await t.expect(pagemodel.activity.brick.exists)\n        await t.expect(pagemodel.activity.brick.exists)\n        await t.expect(pagemodel.activity.brick.exists)\n        await t.expect(pagemodel.activity.brick.exists)\n    })\nOn the fixture seemed to help randomly and not consistently.\nWe tried increasing selector timeout and even added .waits but nothing was definitive.\n@bdwain are you running tests concurrently?. ",
    "gabrielrobert": "I get almost the same error using:\ntestcafe chrome,firefox,ie,\"chrome:emulation:device=iphone 6\" tests/e2e -q --app-init-delay 20000 --app \"http-server ./dist -p 3000\"\nERROR Tested app failed with an error:\nRangeError [ERR_CHILD_PROCESS_STDIO_MAXBUFFER]: stdout maxBuffer length exceeded\n    at Socket.onChildStdout (child_process.js:343:14)\n    at Socket.emit (events.js:182:13)\n    at Socket.EventEmitter.emit (domain.js:442:20)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:260:13)\n    at Socket.Readable.push (_stream_readable.js:219:10)\n    at Pipe.onStreamRead (internal/stream_base_commons.js:94:17)\nIt happens after 3-4 tests execution. Running multiple testcafe commands instead of only one work successfully.. ",
    "ananddharne": "@AlexanderMoskovkin   I got it to work, on both the versions. However the problem seems to be something different.\nMy build process is as follows,\n\nRun the node server in the docker\nRun the tests\n\nSo the tests are done on the app that runs on the local server in the docker. So all my tests start with\n```\nimport { Selector } from 'testcafe'\nfixture Outreach\n    .page localhost:4000/login\ntest('My first test', async t => {\n  const drag = Selector('#app > div.app-container > div.main-container > div.panel.settings-panel > div > div.kanban-column-aligner > div:nth-child(2) > div:nth-child(1) > span.candidate-name-container > div:nth-child(1) > span')\n  const drop = Selector('#app > div.app-container > div.main-container > div.panel.settings-panel > div > div.kanban-column-aligner > div:nth-child(1)')\n  const statuschanged = Selector('#app > div.modal-collection-container > span > div > div > div > div > div > div.comments-panel-aligner > div.candidate-activity-container > div.candidate-activity-list > div:nth-child(1) > p:nth-child(4)').withText('was changed to new ')\n.\n.\n.\nawait t\n        // Login\n        .typeText('#auth0-lock-container-1 > div > div.auth0-lock-center > form > div > div > div:nth-child(3) > span > div > div > div > div > div > div > div > div > div:nth-child(3) > div.auth0-lock-input-block.auth0-lock-input-email > div > input', 'anand@gethappie.me')\n        .typeText('#auth0-lock-container-1 > div > div.auth0-lock-center > form > div > div > div:nth-child(3) > span > div > div > div > div > div > div > div > div > div:nth-child(3) > div.auth0-lock-input-block.auth0-lock-input-password > div > input', 'happie123')\n        .click('#auth0-lock-container-1 > div > div.auth0-lock-center > form > div > div > button > span')\n        .dragToElement(drag, drop)\nThis didnt work and gave me an error. However changing the page to a live production site seemed to work.\n**This works**\nimport { Selector } from 'testcafe'\nfixture Outreach\n    .page https://talent-staging.gethappie.me/outreach/index.html#/login\n```\nI have got the tests running but I would really like to do tests on the local server. Any help is appreciated!. @AlexanderMoskovkin  Also when I curl the page localhost , I get a response back and the server runs fine it seems. ",
    "ivanzamoraarias": "Hi I have the same issue , it is like selectors can not see the DOM fields when it is on headless chrome. . ",
    "jwineman": "I was able to fix this by adding maximizeWindow().  My assumption was that the element was visible but off screen in CI which is why I was getting this error in CI but not locally:\nThe element that matches the specified selector is not visible.\n. Sorry it took me so long to reply, I needed to stand up an IE VM.  You're right, I get the same error on IE11/Windows 7.  \nHow do I debug further?  I don't know what to look at since these models execute fine in Chrome.\n```\n1) Error on page\n   \"http://0.0.0.0:8008/login?redirect=%2Fbroker/dashboard\":\n   Syntax error:\n       No stack trace available\n   Browser: IE 11.0.0 / Windows 10.0.0\n   (https://saucelabs.com/tests/b9c2a20ee789459c9c79b741fe63cf34)\n      14 |  }\n      15 |\n      16 |  typeEmail = async function(email: string = this.EMAIL) {\n      17 |    // Default window size in travis is small, maximize to\n   prevent shaky failures\n      18 |    // await t.maximizeWindow();\n    > 19 |    return await t.typeText('input[name=login-email]',\n   email);\n      20 |  };\n      21 |\n      22 |  typePassword = async function(password: string =\n   this.PASSWOARD) {\n      23 |    return await t.typeText('input[name=login-password]',\n   password);\n      24 |  };\n      at Login.typeText [as null]\n(/home/travis/build/crucible-risk/front-end/src/e2e/models/Login.js:19:20)\n      at Login.typeEmail\n(/home/travis/build/crucible-risk/front-end/src/e2e/models/Login.js:20:40)\n      at Login.typeEmail [as null]\n(/home/travis/build/crucible-risk/front-end/src/e2e/models/Login.js:31:16)\n      at complete\n(/home/travis/build/crucible-risk/front-end/src/e2e/tests/brokerDashboard.test.js:23:15)\n      at markeredfn\n(/home/travis/build/crucible-risk/front-end/node_modules/testcafe/src/api/wrap-test-function.js:17:28)\n      at \n(/home/travis/build/crucible-risk/front-end/node_modules/testcafe/src/api/wrap-test-function.js:7:5)\n      at fn\n(/home/travis/build/crucible-risk/front-end/node_modules/testcafe/src/test-run/index.js:239:19)\n      at TestRun._executeTestFn\n(/home/travis/build/crucible-risk/front-end/node_modules/testcafe/src/test-run/index.js:235:38)\n      at _executeTestFn\n   (/home/travis/build/crucible-risk/front-end/node_modules/testcafe/src/test-run/index.js:284:24)\n```. Hi @miherlosev,\nThank you!  The below test case will pass in chrome and fail in IE 11:\n```\nimport { Selector, t } from 'testcafe';\nfixtureLogin.page(\n  'https://platform.thecoalition.com/login?redirect=%2Fquote-flow'\n);\ntest('should be able to login', async () => {\n  await t.typeText(input[name=login-email], 'user@example.com');\n  await t.typeText(input[name=login-password], 'password');\n  await t.click(Selector('button').withText('Login'));\n});\n```. I would be willing to PR a fix for this if you could give me an overview of what needs to change.. @miherlosev - Thanks for the update!  If anything changes and I can help let me know.  Thanks for all your work on this project.. @LavrovArtem - Thank you for taking the time to debug, sorry this wasn't a real issue.  I'll look into fixing the errors or adding the flag!. ",
    "jelling": "Like @Lwdthe1 I am also using Heroku and calling testcafe chrome:headless from inside of the dyno and having weird issues. My test runs from local against the remote dyno and works. However, if I run it inside the dyno then most of the time it fails but it has also passed with the same code and config.\nPreviously, I had an issue running locally where Angular wasn't updating the view unless I added a call to detectChanges() in my test. So I suspect there might be performance interactions with Test Cafe and large angular applications. Running inside of a dyno likely makes that worse.\nEdit: Heroku runs CI tests on a \"performance-m\" dyno by default which is fairly high-powered so I'm less certain server performance is the issue. . I fixed my issue and once again the cause was that change detection wasn't running automatically. This didn't happen locally on my Macbook Pro but it happened both in Heroku's CI environment (~2gb mem) and also on the VMs Crossbrowsertesting.com uses for automated testing.\nSo there's definitely an Angular <> Test Cafe performance issue. I'm not certain how to troubleshoot that but the fix is to manually invoke the change detector. I have to do it after every form input right now but only once the user is 90% through the flow. . @cvolpe-ecobee \nInject the change detector service into the constructor of your component then expose the changeDetector service to the window level scope like this:\nconstructor(private cd: ChangeDetectorRef) { \n     window['__cd'] = cd; \n}\nThe changeDetector object can then be called inside of your TestCafe script like this:\n```\nconst detectChanges = ClientFunction(() => {\n    // @ts-ignore\n    return __cd.detectChanges(); // calls window function\n});\nawait t\n    .doStuff();\ndetectChanges();\nawait t\n    .doMoreStuff();\n...\n```\n. ",
    "eaorak": "I've added a manual scrolling to the page due to this bug (see my comment there please):\nhttps://github.com/DevExpress/testcafe/issues/2601\nconst scroll = ClientFunction((pixels) => window.scrollBy(0, pixels))\nIt works fine in UI mode but fails on headless. Is there a solution for this?. We are also experiencing a similar issue. Tests started failing after we introduced a sticky footer. \nWhen I run tests in UI mode and scroll manually when it reaches to the end of screen size, tests are working fine. But without the manual scrolling and in headless mode, it doesn't scroll after filling first elements appear on the screen and tests start failing. \nVersion: 0.23.1. @VasilyStrelyaev because it's a private web app we're building for a client, unfortunately, I won't be able to share a public website. But it's a React application and we're using React Bootstrap components to create the sticky footer as with other components.\nFor now, we've overcome the issue by increasing the viewport size with \nt.resizeWindow(1200, 3000). ",
    "steveblue": "I am seeing this issue as well trying to run TestCafe in CircleCI to test an Angular application.\n```\n!/bin/bash -eo pipefail\nnpm run e2e:ci\n\ntestcafe 'chrome:headless --no-sandbox' e2e/test/*.e2e-spec.ts\n\nRunning tests in:\n - HeadlessChrome 0.0.0 / Linux 0.0.0\n```\ntestcafe ^0.23.3\nnode 8.10.0\nEvery test except the first that navigates to the homepage fails.  Cannot reproduce locally on a Mac.. ",
    "cvolpe-ecobee": "\nf\nI fixed my issue and once again the cause was that change detection wasn't running automatically. This didn't happen locally on my Macbook Pro but it happened both in Heroku's CI environment (~2gb mem) and also on the VMs Crossbrowsertesting.com uses for automated testing.\nSo there's definitely an Angular <> Test Cafe performance issue. I'm not certain how to troubleshoot that but the fix is to manually invoke the change detector. I have to do it after every form input right now but only once the user is 90% through the flow.\n\n@jelling How would I go about manually invoking the change detector in testcafe?. > f\n\nI fixed my issue and once again the cause was that change detection wasn't running automatically. This didn't happen locally on my Macbook Pro but it happened both in Heroku's CI environment (~2gb mem) and also on the VMs Crossbrowsertesting.com uses for automated testing.\nSo there's definitely an Angular <> Test Cafe performance issue. I'm not certain how to troubleshoot that but the fix is to manually invoke the change detector. I have to do it after every form input right now but only once the user is 90% through the flow.\n\n@jelling How would I go about manually invoking the change detector in testcafe?. ",
    "ahungry": "Thank you!. Thank you!. We just started to test out something similar for grabbing screen videos of tests by launching a child_process.spawn of ffmpeg (and closing it) in Before() / After() hooks, naming it based on the SUT/scenario.  Unfortunately, it relies on being able to record the active x11 screen session (ie, won't work in headless mode).\nMaybe it would work in headless if something like xvfb was used to simulate an x11 display?\nOur setup is currently testcafe+cucumberjs, so we're relying on the cucumber Before/After hooks and just using testcafe as a driver+assertion framework.\nThe we're using to generate the mkv is:\nchild_process.spawn(\n                '/usr/bin/ffmpeg',\n                `-f x11grab -s 1024x700 -i :0.0+0,40 -c:v libx264 -preset ultrafast -crf 0 /tmp/${name}.mkv`.split(' ')\n              ). Another thought - for C.I. you could run the setup in non-headless within a docker container (therefore, no reliance on xvfb or headless mode), we did something similar with selenium docker images (just watch when needed by hooking to a vnc server the container was running).  . ",
    "keerthana07": "Hello, is this issue resolved?\ntestcafe.close() doesn't seem to be executing in my code. I am using the exact code as here : http://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#filter\n. Hello, is this issue resolved?\ntestcafe.close() doesn't seem to be executing in my code. I am using the exact code as here : http://devexpress.github.io/testcafe/documentation/using-testcafe/programming-interface/runner.html#filter\n. It seems like the second then loop is an unreachable code. It seems like the second then loop is an unreachable code. ",
    "gknapp": "Same problem in Firefox. I suspect it's the authentication but not sure how to dig into it to debug .... Same problem in Firefox. I suspect it's the authentication but not sure how to dig into it to debug .... Hi @AlexanderMoskovkin \nYes I've tried removing that, and including the credentials in the URL (http://user:pswd@host:port), no luck. Same issue.\nI've accessed the same URL using Postman, it retrieves HTML (which links bundle.js and my react app). I've tried no auth, basic auth and digest auth using postman. All retrieve the homepage HTML so I'm confused about the 'unexpected end of file' error message.. Hi @AlexanderMoskovkin \nYes I've tried removing that, and including the credentials in the URL (http://user:pswd@host:port), no luck. Same issue.\nI've accessed the same URL using Postman, it retrieves HTML (which links bundle.js and my react app). I've tried no auth, basic auth and digest auth using postman. All retrieve the homepage HTML so I'm confused about the 'unexpected end of file' error message.. I'll dig into the auth for my app and see if I can provide further information.. I'll dig into the auth for my app and see if I can provide further information.. Is there a recommended way to persist state using a RequestHook? I'll need to store the generated MD5 digest.. ",
    "leegee": "In this particular setup, several proxies \u2014\u00a0it's horrible and not my doing \u2014\u00a0but the mistake here was mine, with a misconfigured mock. Thanks for your time \u2014\u00a0loving the TestCafe experience!. In this particular setup, several proxies \u2014\u00a0it's horrible and not my doing \u2014\u00a0but the mistake here was mine, with a misconfigured mock. Thanks for your time \u2014\u00a0loving the TestCafe experience!. It was my typo. On 'footware' :) . Sorry to trouble you, thanks.. ```\n[954-e2e 15:44]$ \nRunning tests in:\n - HeadlessChrome 64.0.3282 / Mac OS X 10.13.3\nFeature: The hierachy selector\n***  { click: [Function: fn],\n  rightClick: [Function: fn],\n  doubleClick: [Function: fn],\n  hover: [Function: fn],\n  drag: [Function: fn],\n  dragToElement: [Function: fn],\n  typeText: [Function: fn],\n  selectText: [Function: fn],\n  selectTextAreaContent: [Function: fn],\n  selectEditableContent: [Function: fn],\n  pressKey: [Function: fn],\n  wait: [Function: fn],\n  navigateTo: [Function: fn],\n  setFilesToUpload: [Function: fn],\n  clearUpload: [Function: fn],\n  takeScreenshot: [Function: fn],\n  resizeWindow: [Function: fn],\n  resizeWindowToFitDevice: [Function: fn],\n  maximizeWindow: [Function: fn],\n  switchToIframe: [Function: fn],\n  switchToMainWindow: [Function: fn],\n  eval: [Function: fn],\n  setNativeDialogHandler: [Function: fn],\n  getNativeDialogHistory: [Function: fn],\n  getBrowserConsoleMessages: [Function: fn],\n  expect: [Function: fn],\n  debug: [Function: fn],\n  setTestSpeed: [Function: fn],\n  setPageLoadTimeout: [Function: fn],\n  useRole: [Function: fn] }\n \u2716 Scenario: Load the grid with the same hierachy as mocked.\n1) The \"boundTestRun\" option value is expected to be a test controller.\n  Browser: HeadlessChrome 64.0.3282 / Mac OS X 10.13.3\n\n     11 |\n     12 |  async selectOption( elName, text ) {\n     13 |    console.log( '*** ', t );\n     14 |    console.debug( 'selectOption [%s] [%s]', elName, text );\n     15 |    const textRe = new RegExp( `^\\\\s*${ text.replace( /\\s+/, ' ' ) }\\\\s*$`, 'i' );\n   > 16 |    const selectSelector = Selector( 'select' )\n     17 |      .withAttribute( 'name', elName )\n     18 |      .with({\n     19 |        visibilityCheck: true,\n     20 |        boundTestRun: this.t,\n     21 |      });\n\n``. Using Testcafe with the Gherkin, btw: testcafe-gherkin. Thethis.tis the importedt` in that code \u2014\u00a0which is not stated by the code or me, sorry.\n```js\nconst { Selector, t } = require( 'testcafe' );\nexport class Page {\n  constructor( ) {\n    this.t = t;\n    this.INITIAL_TIMEOUT_MS = 1000 * 30;\n  }\n```\nUsually the constructor takes a value named t that is assigned \u2014\u00a0I see no alternative.. ",
    "andrepm06": "Hi, i'm currently out of time to validate this fix, but as soon as i have some time, i'll check this out,. ",
    "AngeIII": "@AndreyBelym looks like this file is not exists anymore in 0.19, so probably fixed. \nnpm install works fine.\n. ",
    "andrzej-kodify": "For anyone who is desperate to record video from Chrome (e.g. to troubleshoot headless CI) I've made this reporter https://www.npmjs.com/package/testcafe-reporter-chrome-recorder \nI wouldn't recommend to use it if there's an alternative but worked for me.. Hi @miherlosev \nI want to process requests by adding custom headers, logging them in real time, etc. \nBut other than that shouldn't it just work since creating custom hooks is described in official docs https://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/creating-a-custom-http-request-hook.html ?. Could you leave the test running (hanging) e.g. overnight and see if you get OOM? :)\nor you can try adding --disable-dev-shm-usage to chromium. @rafaelaazevedo try setting DEBUG env variable as described here and you might get more helpful output on what's internally happening with testcafe. Hi @AndreyBelym \nI did tried lot's of things trying to figure out what's wrong.\n1. Yes, my site does work if I just use it without testcafe or at least couldn't manually reproduce that failure (and I have 100% success rate in reproducing it after running aprox 8 tests cases in single fixture).\n2. I did try to remove any logic on my side that could've caused that (like request logger). Basically I've made new project and reproduced that failure with only this code\n```\nfixture('Test');\nfor(let i = 0; i<100; i++) {\n    test(Test ${i}, async (browser) => {\n        await browser\n            .navigateTo(\"http://localhost:49998/\")\n            .wait(10000);\n    });\n}\n```\nIt seems to cause hangs when test i=5 is completed and test i=6 starts.\n\n\nI did try to run chrome with lots of different command line switches with no difference.\n\n\nI've tried to grab some chrome stats (probably not useful but maybe you'll notice something obvious I've missed)\n\n\n```node_modules/.bin/testcafe \"chrome:emulation:device=iPhone 6\" tests\n Running tests in:\n - Chrome 69.0.3497 / Mac OS X 10.13.6\nTest\n{ metrics:\n   [ { name: 'Timestamp', value: 58168.125724 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 2 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 16 },\n     { name: 'LayoutObjects', value: 27 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 73 },\n     { name: 'Resources', value: 15 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 40 },\n     { name: 'V8PerContextDatas', value: 1 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 0 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 3 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 0 },\n     { name: 'LayoutCount', value: 0 },\n     { name: 'RecalcStyleCount', value: 0 },\n     { name: 'LayoutDuration', value: 0 },\n     { name: 'RecalcStyleDuration', value: 0 },\n     { name: 'ScriptDuration', value: 0.000295 },\n     { name: 'TaskDuration', value: 0.001749 },\n     { name: 'JSHeapUsedSize', value: 2596408 },\n     { name: 'JSHeapTotalSize', value: 5509120 },\n     { name: 'FirstMeaningfulPaint', value: 58164.12921 },\n     { name: 'DomContentLoaded', value: 58164.028974 },\n     { name: 'NavigationStart', value: 58163.008568 } ] }\n{ usedSize: 3112560, totalSize: 5509120 }\n \u2713 Test 0\n{ metrics:\n   [ { name: 'Timestamp', value: 58178.927836 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1299 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 119 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 103 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 72 },\n     { name: 'RecalcStyleCount', value: 152 },\n     { name: 'LayoutDuration', value: 0.070869 },\n     { name: 'RecalcStyleDuration', value: 0.118868 },\n     { name: 'ScriptDuration', value: 1.7419 },\n     { name: 'TaskDuration', value: 3.015951 },\n     { name: 'JSHeapUsedSize', value: 31772920 },\n     { name: 'JSHeapTotalSize', value: 63180800 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58169.516077 },\n     { name: 'NavigationStart', value: 58168.411816 } ] }\n{ usedSize: 31838552, totalSize: 63180800 }\n \u2713 Test 1\n{ metrics:\n   [ { name: 'Timestamp', value: 58189.500335 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 120 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 143 },\n     { name: 'RecalcStyleCount', value: 297 },\n     { name: 'LayoutDuration', value: 0.106 },\n     { name: 'RecalcStyleDuration', value: 0.193498 },\n     { name: 'ScriptDuration', value: 3.36599 },\n     { name: 'TaskDuration', value: 5.848493 },\n     { name: 'JSHeapUsedSize', value: 32128336 },\n     { name: 'JSHeapTotalSize', value: 61083648 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58179.580168 },\n     { name: 'NavigationStart', value: 58179.113907 } ] }\n{ usedSize: 32199824, totalSize: 61083648 }\n \u2713 Test 2\n{ metrics:\n   [ { name: 'Timestamp', value: 58200.070733 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3726 },\n     { name: 'Resources', value: 126 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 89 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 215 },\n     { name: 'RecalcStyleCount', value: 454 },\n     { name: 'LayoutDuration', value: 0.144796 },\n     { name: 'RecalcStyleDuration', value: 0.295298 },\n     { name: 'ScriptDuration', value: 4.852062 },\n     { name: 'TaskDuration', value: 8.43378 },\n     { name: 'JSHeapUsedSize', value: 22920448 },\n     { name: 'JSHeapTotalSize', value: 64753664 },\n     { name: 'FirstMeaningfulPaint', value: 58190.222325 },\n     { name: 'DomContentLoaded', value: 58190.139034 },\n     { name: 'NavigationStart', value: 58189.655912 } ] }\n{ usedSize: 22982200, totalSize: 64753664 }\n \u2713 Test 3\n{ metrics:\n   [ { name: 'Timestamp', value: 58210.619 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 134 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 287 },\n     { name: 'RecalcStyleCount', value: 612 },\n     { name: 'LayoutDuration', value: 0.178259 },\n     { name: 'RecalcStyleDuration', value: 0.366097 },\n     { name: 'ScriptDuration', value: 6.456673 },\n     { name: 'TaskDuration', value: 11.074539 },\n     { name: 'JSHeapUsedSize', value: 25371464 },\n     { name: 'JSHeapTotalSize', value: 70520832 },\n     { name: 'FirstMeaningfulPaint', value: 58200.759039 },\n     { name: 'DomContentLoaded', value: 58200.692239 },\n     { name: 'NavigationStart', value: 58200.232293 } ] }\n{ usedSize: 25429152, totalSize: 70520832 }\n \u2713 Test 4\n{ metrics:\n   [ { name: 'Timestamp', value: 58221.08782 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 103 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 368 },\n     { name: 'RecalcStyleCount', value: 750 },\n     { name: 'LayoutDuration', value: 0.217508 },\n     { name: 'RecalcStyleDuration', value: 0.442327 },\n     { name: 'ScriptDuration', value: 7.839051 },\n     { name: 'TaskDuration', value: 13.528696 },\n     { name: 'JSHeapUsedSize', value: 32505624 },\n     { name: 'JSHeapTotalSize', value: 66850816 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58211.19053 },\n     { name: 'NavigationStart', value: 58210.767804 } ] }\n{ usedSize: 32557112, totalSize: 66850816 }\n \u2713 Test 5\n{ metrics:\n   [ { name: 'Timestamp', value: 58231.709996 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 119 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 112 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 447 },\n     { name: 'RecalcStyleCount', value: 914 },\n     { name: 'LayoutDuration', value: 0.253343 },\n     { name: 'RecalcStyleDuration', value: 0.512693 },\n     { name: 'ScriptDuration', value: 9.288904 },\n     { name: 'TaskDuration', value: 16.030423 },\n     { name: 'JSHeapUsedSize', value: 31144896 },\n     { name: 'JSHeapTotalSize', value: 62656512 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58221.777586 },\n     { name: 'NavigationStart', value: 58221.241587 } ] }\n{ usedSize: 31197768, totalSize: 62656512 }\n^CStopping TestCafe...\n. Hi @AndreyBelym \nI did tried lot's of things trying to figure out what's wrong.\n1. Yes, my site does work if I just use it without testcafe or at least couldn't manually reproduce that failure (and I have 100% success rate in reproducing it after running aprox 8 tests cases in single fixture).\n2. I did try to remove any logic on my side that could've caused that (like request logger). Basically I've made new project and reproduced that failure with only this code\nfixture('Test');\nfor(let i = 0; i<100; i++) {\n    test(Test ${i}, async (browser) => {\n        await browser\n            .navigateTo(\"http://localhost:49998/\")\n            .wait(10000);\n    });\n}\n```\nIt seems to cause hangs when test i=5 is completed and test i=6 starts.\n\n\nI did try to run chrome with lots of different command line switches with no difference.\n\n\nI've tried to grab some chrome stats (probably not useful but maybe you'll notice something obvious I've missed)\n\n\n```node_modules/.bin/testcafe \"chrome:emulation:device=iPhone 6\" tests\n Running tests in:\n - Chrome 69.0.3497 / Mac OS X 10.13.6\nTest\n{ metrics:\n   [ { name: 'Timestamp', value: 58168.125724 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 2 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 16 },\n     { name: 'LayoutObjects', value: 27 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 73 },\n     { name: 'Resources', value: 15 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 40 },\n     { name: 'V8PerContextDatas', value: 1 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 0 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 3 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 0 },\n     { name: 'LayoutCount', value: 0 },\n     { name: 'RecalcStyleCount', value: 0 },\n     { name: 'LayoutDuration', value: 0 },\n     { name: 'RecalcStyleDuration', value: 0 },\n     { name: 'ScriptDuration', value: 0.000295 },\n     { name: 'TaskDuration', value: 0.001749 },\n     { name: 'JSHeapUsedSize', value: 2596408 },\n     { name: 'JSHeapTotalSize', value: 5509120 },\n     { name: 'FirstMeaningfulPaint', value: 58164.12921 },\n     { name: 'DomContentLoaded', value: 58164.028974 },\n     { name: 'NavigationStart', value: 58163.008568 } ] }\n{ usedSize: 3112560, totalSize: 5509120 }\n \u2713 Test 0\n{ metrics:\n   [ { name: 'Timestamp', value: 58178.927836 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1299 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 119 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 103 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 72 },\n     { name: 'RecalcStyleCount', value: 152 },\n     { name: 'LayoutDuration', value: 0.070869 },\n     { name: 'RecalcStyleDuration', value: 0.118868 },\n     { name: 'ScriptDuration', value: 1.7419 },\n     { name: 'TaskDuration', value: 3.015951 },\n     { name: 'JSHeapUsedSize', value: 31772920 },\n     { name: 'JSHeapTotalSize', value: 63180800 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58169.516077 },\n     { name: 'NavigationStart', value: 58168.411816 } ] }\n{ usedSize: 31838552, totalSize: 63180800 }\n \u2713 Test 1\n{ metrics:\n   [ { name: 'Timestamp', value: 58189.500335 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 120 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 143 },\n     { name: 'RecalcStyleCount', value: 297 },\n     { name: 'LayoutDuration', value: 0.106 },\n     { name: 'RecalcStyleDuration', value: 0.193498 },\n     { name: 'ScriptDuration', value: 3.36599 },\n     { name: 'TaskDuration', value: 5.848493 },\n     { name: 'JSHeapUsedSize', value: 32128336 },\n     { name: 'JSHeapTotalSize', value: 61083648 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58179.580168 },\n     { name: 'NavigationStart', value: 58179.113907 } ] }\n{ usedSize: 32199824, totalSize: 61083648 }\n \u2713 Test 2\n{ metrics:\n   [ { name: 'Timestamp', value: 58200.070733 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3726 },\n     { name: 'Resources', value: 126 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 89 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 215 },\n     { name: 'RecalcStyleCount', value: 454 },\n     { name: 'LayoutDuration', value: 0.144796 },\n     { name: 'RecalcStyleDuration', value: 0.295298 },\n     { name: 'ScriptDuration', value: 4.852062 },\n     { name: 'TaskDuration', value: 8.43378 },\n     { name: 'JSHeapUsedSize', value: 22920448 },\n     { name: 'JSHeapTotalSize', value: 64753664 },\n     { name: 'FirstMeaningfulPaint', value: 58190.222325 },\n     { name: 'DomContentLoaded', value: 58190.139034 },\n     { name: 'NavigationStart', value: 58189.655912 } ] }\n{ usedSize: 22982200, totalSize: 64753664 }\n \u2713 Test 3\n{ metrics:\n   [ { name: 'Timestamp', value: 58210.619 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 134 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 287 },\n     { name: 'RecalcStyleCount', value: 612 },\n     { name: 'LayoutDuration', value: 0.178259 },\n     { name: 'RecalcStyleDuration', value: 0.366097 },\n     { name: 'ScriptDuration', value: 6.456673 },\n     { name: 'TaskDuration', value: 11.074539 },\n     { name: 'JSHeapUsedSize', value: 25371464 },\n     { name: 'JSHeapTotalSize', value: 70520832 },\n     { name: 'FirstMeaningfulPaint', value: 58200.759039 },\n     { name: 'DomContentLoaded', value: 58200.692239 },\n     { name: 'NavigationStart', value: 58200.232293 } ] }\n{ usedSize: 25429152, totalSize: 70520832 }\n \u2713 Test 4\n{ metrics:\n   [ { name: 'Timestamp', value: 58221.08782 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 120 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 103 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 368 },\n     { name: 'RecalcStyleCount', value: 750 },\n     { name: 'LayoutDuration', value: 0.217508 },\n     { name: 'RecalcStyleDuration', value: 0.442327 },\n     { name: 'ScriptDuration', value: 7.839051 },\n     { name: 'TaskDuration', value: 13.528696 },\n     { name: 'JSHeapUsedSize', value: 32505624 },\n     { name: 'JSHeapTotalSize', value: 66850816 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58211.19053 },\n     { name: 'NavigationStart', value: 58210.767804 } ] }\n{ usedSize: 32557112, totalSize: 66850816 }\n \u2713 Test 5\n{ metrics:\n   [ { name: 'Timestamp', value: 58231.709996 },\n     { name: 'AudioHandlers', value: 0 },\n     { name: 'Documents', value: 8 },\n     { name: 'Frames', value: 2 },\n     { name: 'JSEventListeners', value: 1300 },\n     { name: 'LayoutObjects', value: 1092 },\n     { name: 'MediaKeySessions', value: 0 },\n     { name: 'MediaKeys', value: 0 },\n     { name: 'Nodes', value: 3725 },\n     { name: 'Resources', value: 119 },\n     { name: 'ScriptPromises', value: 0 },\n     { name: 'PausableObjects', value: 112 },\n     { name: 'V8PerContextDatas', value: 2 },\n     { name: 'WorkerGlobalScopes', value: 0 },\n     { name: 'UACSSResources', value: 2 },\n     { name: 'RTCPeerConnections', value: 0 },\n     { name: 'ResourceFetchers', value: 8 },\n     { name: 'AdSubframes', value: 0 },\n     { name: 'DetachedScriptStates', value: 1 },\n     { name: 'LayoutCount', value: 447 },\n     { name: 'RecalcStyleCount', value: 914 },\n     { name: 'LayoutDuration', value: 0.253343 },\n     { name: 'RecalcStyleDuration', value: 0.512693 },\n     { name: 'ScriptDuration', value: 9.288904 },\n     { name: 'TaskDuration', value: 16.030423 },\n     { name: 'JSHeapUsedSize', value: 31144896 },\n     { name: 'JSHeapTotalSize', value: 62656512 },\n     { name: 'FirstMeaningfulPaint', value: 0 },\n     { name: 'DomContentLoaded', value: 58221.777586 },\n     { name: 'NavigationStart', value: 58221.241587 } ] }\n{ usedSize: 31197768, totalSize: 62656512 }\n^CStopping TestCafe...\n```. Hi @AndreyBelym,\nI think I've got some luck in reproducing the issue on public URL.\nnode_modules/.bin/testcafe \"chrome:emulation:device=iPhone 6\" tests\n```\nfixture('Test')\nfor(let i = 0; i<100; i++) {\n    test(Test ${i}, async (browser) => {\n        await browser\n            .navigateTo(\"https://codepen.io/anon/pen/RYePPg\")\n            .wait(10000);\n    });\n}\n```\nIt seems related to video playing in chrome but possibly also somehow to testcafe triggering this problem (I wasn't able to reproduce it manually browsing).\nAlso the issue happens more often with mobile emulator but it's not limited (we've managed to reproduce it after more tries with desktop mode as well).\nHope this helps.. @miherlosev \nCould it be OSX related? I see you've run the script on windows.. @miherlosev \nCould it be OSX related? I see you've run the script on windows.. It occurs randomly. Also randomly test execution hangs. Unfortunately I can't share my test code. \nI just thought you could trace it from the exception and handle it somehow. If not feel free to close.. I get similar Uncaught object thrown when I try to use simple ClientFunction that only returns window.location in TestCafe v0.23.3-alpha2\nManaged to get the object returned as an error\n{ callsite:\n   { filename:\n      '/Users/andrzej-kodify/projects/paysite-frontend/test/functional/tests/smoke/home-test.js',\n     lineNum: 115,\n     callsiteFrameIdx: 3,\n     stackFrames:\n      [ CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        {},\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] },\n        CallSite {\n          constructor: [Function: CallSite],\n          getColumnNumber: [Function],\n          getEvalOrigin: [Function],\n          getFileName: [Function],\n          getFunction: [Function],\n          getFunctionName: [Function],\n          getLineNumber: [Function],\n          getMethodName: [Function],\n          getPosition: [Function],\n          getScriptNameOrSourceURL: [Function],\n          getThis: [Function],\n          getTypeName: [Function],\n          isConstructor: [Function],\n          isEval: [Function],\n          isNative: [Function],\n          isToplevel: [Function],\n          toString: [Function: CallSiteToString] } ],\n     isV8Frames: true },\n  isRejectedDriverTask: true }\n@sophiecdd you can try wrapping your line with takeElementScreenshot in try/catch and log the actual error there. Testcafe (or something in between) seems to wrap it in this useless Uncaught object message.. ",
    "vikramvi": "Thanks for detailed answer. I'm closing issue as clarified. ",
    "leojh": "The same thing is happening to me using Firefox. Is this something just recently started happening? I just started looking into using TestCafe.. @miherlosev what can you recommend to troubleshoot the browser <browser-name> disconnected. ... issue? . ",
    "meraj-ahmed": "I received a similar error after adding a .maximizeWindow() call to the test. Removing that was the only way to fix it in my case.. I received a similar error after adding a .maximizeWindow() call to the test. Removing that was the only way to fix it in my case.. ",
    "gdoyer-oxv": "We had the same issue when testing in both Chromium and Firefox in the same docker container (as shown in the documentation both it seems to not be a good idea. \nIt also goes against docker best practice of 1 service per container.\nRunning the same tests in 2 different docker run commands (one for each browser) fixed this for us.. We had the same issue when testing in both Chromium and Firefox in the same docker container (as shown in the documentation both it seems to not be a good idea. \nIt also goes against docker best practice of 1 service per container.\nRunning the same tests in 2 different docker run commands (one for each browser) fixed this for us.. ",
    "suv37": "I am still experience this issue, can anyone provided the solution for this issue ?\n. I am still experience this issue, can anyone provided the solution for this issue ?\n. ",
    "mfestrada": "@miherlosev I've been hitting my head against this issue as well and finally came across this thread.  If I try only 'chromium --no-sandbox' it will hang with no timeout message, only after trying Firefox do I get the message This problem may appear when a browser hangs or is closed, or due to network issues..  \nAside from debug();, is there anything I can do to determine if it's an issue with TestCafe or the page I'm testing?. @miherlosev I've been hitting my head against this issue as well and finally came across this thread.  If I try only 'chromium --no-sandbox' it will hang with no timeout message, only after trying Firefox do I get the message This problem may appear when a browser hangs or is closed, or due to network issues..  \nAside from debug();, is there anything I can do to determine if it's an issue with TestCafe or the page I'm testing?. ",
    "lennytakahashi": "Thanks a lot for the workaround. That really helps to ease the pain. (testcafe version: 0.20.4). Thanks a lot for the workaround. That really helps to ease the pain. (testcafe version: 0.20.4). ",
    "uvizhe": "I'm using hash based navigation and my workaround is:\nawait t\n  .useRole(role)\n  .navigateTo('/')\n  .wait(500)\n  ...\ntestcafe 0.20.5. I'm using hash based navigation and my workaround is:\nawait t\n  .useRole(role)\n  .navigateTo('/')\n  .wait(500)\n  ...\ntestcafe 0.20.5. ",
    "aleks-pro": "Hello @jschumme ,\nThank you for the provided test code. I have reproduced the issue on my side. We will investigate it and update this thread as soon as we have any results.. Hello @jschumme ,\nThank you for the provided test code. I have reproduced the issue on my side. We will investigate it and update this thread as soon as we have any results.. Hello @Satans-Kruemelmonster ,\nThank you for the provided tested page and test code. I have reproduced the issue. We will investigate it and update this thread as soon as we have any results.. Thank you for your kind words, @arnaud . \n\u00a0\nAt present, TestCafe Studio does not support the feature you described. We are going to implement it in one of our future releases.\nIf you have further questions regarding TestCafe Studio, you can address them to the Developer Express support center.. ",
    "timwis": "Hi folks - I hope you'll pardon my question, but the fact that xhr request stubbing isn't already provided in testcafe makes me think I may be missing the point or something. Isn't it the case that, without this feature, you can only use testcafe for end-to-end tests? Or is there another way to stub xhr requests? Requiring my tests hit my production backend API will definitely slow things down. Is it, perhaps, about a flag in my application code on NODE_ENV=test and I should swap out the back-end with fixtures/sample data? Or should I use sinon or nock or something?. Hi folks - I hope you'll pardon my question, but the fact that xhr request stubbing isn't already provided in testcafe makes me think I may be missing the point or something. Isn't it the case that, without this feature, you can only use testcafe for end-to-end tests? Or is there another way to stub xhr requests? Requiring my tests hit my production backend API will definitely slow things down. Is it, perhaps, about a flag in my application code on NODE_ENV=test and I should swap out the back-end with fixtures/sample data? Or should I use sinon or nock or something?. Thanks for that background! Makes sense. I was suggesting perhaps allowing describe as an alias rather than replacing it, so it would be backwards compatible, but if that doesn't appeal to enough of your user base then it wouldn't be worth it I imagine.. ",
    "efleming969": "The suggested code won't work because NodeList does not support \"map\"\n```javascript\nconst getInnerTextArr = ClientFunction( function ( selector ) {\n    const values = []\n    const elements = document.querySelectorAll( selector )\nfor ( let i = 0; i < elements.length; i++ ) {\n    values.push( elements[ i ].textContent )\n}\n\nreturn values\n\n} )\n```. ",
    "tomasbeloch": "Hi @kirovboris thanks for your reply.\nI would like to use testcafe inside of my own async functions same as I do in the following approach:\n```javascript\nexports.Google_Search = async function(input, output, session) {\n    try {\n        const webdriver = require('selenium-webdriver'),\n            By = webdriver.By;\n    const driver = session.driver;\n\n    session.driver = driver;\n    await driver.get('http://www.google.com/ncr');\n    await driver.findElement(By.name('q')).sendKeys(input.search + webdriver.Key.ENTER);\n\n    const data = await driver.takeScreenshot();\n    output.attach({\n        name: 'screenshot.png',\n        hexContent: data\n    });\n\n    output.send({ result: 'OK' });\n} catch (e) {\n    output.fail(e);\n}\n\n};\n```\nI use async functions which could be chained. Input comes from middleware via REST API. I would like to figure out if the approach I do with selenium could be made with testcafe since I would like to replace selenium and use native browsers on my test machine because of old IE.\n```javascript\nexports.Testcafe = async function(input, output, session) {\n    try {\n        const createTestCafe = require('testcafe');\n        const testCase1 = require('./test/test-case-1');\n        const testCase2 = require('./test/test-case-2');\n    let testcafe         = null;\n\n    createTestCafe('localhost', 1337, 1338)\n        .then(tc => {\n            testcafe     = tc;\n            const runner = testcafe.createRunner();\n\n            return runner\n                .src(testCase1(input), testCase2(input))\n                .browsers(['chrome', 'safari'])\n                .run();\n        })\n        .then(failedCount => {\n            console.log('Tests failed: ' + failedCount);\n            testcafe.close();\n        });\n\n} catch (e) {\noutput.fail(e);\n}\n\n};\n```. Thank you @kirovboris. The approach you suggested works fine.. ",
    "czdiaz": "I attach also the result of one execution from the json reporter:\nexample_result.log\n. Hello Andrey! Thank you for your answer. \nI attach a graph showing the response times for just loading a webpage. That is the reason why I started looking at this problem. In the graph, the normal response time is 4 seconds (time in ms), but sometimes it jumps to 20 seconds, and then 2 minutes !!\nI expect that network delays and webserver load may produces changes in the response time of a couple of seconds, not more. \nI attach a second graph, where I tested the response time of a web page using the selenium driver instead of testcafe. You may see that the time starts increasing when the webserver load increases at office times, but the difference stays below 2 seconds (time in seconds)\n\n\n. ",
    "jianentrinsik": "Thanks Andrey! Your team is doing awesome work, and testcafe is getting more fun to play with every release.. ",
    "talarari": "ok looks like this should work https://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#-q---quarantine-mode. closing.. ",
    "bsmithb2": "Will you accept a PR that allows them?\nSent from my iPhone\n\nOn 16 Mar 2018, at 7:45 pm, Andrey Belym notifications@github.com wrote:\nHi @bsmithb2,\nYou are right, currently we don't support installing browser providers from scoped packages. Also please note that testcafe -b command outputs a list of locally installed browsers, if no provider name is specified. Currently you can't get a list of available providers.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hi @AndreyBelym - my plan is to modify the pool.js file in the server to allow the following command\ntestcafe @private/testcafe-browser-provider-package by adding a regex where the require statement is currently trying to blindly load. \n\nMy initial implementation test scenario is: https://github.com/bsmithb2/testcafe/blob/master/test/server/browser-provider-module-loader-test.js\nThoughts? Think it will work?\nI'm blocked on how to execute testcafe locally from the built files in order to test. Any thoughts on that process? I'd like to end to end test it against my privately scoped package in my internal repo.  \nThanks,\nBradley. So you mean the arg passed in at the command line will be testcafe @scope/tail-end-of-package-name test.js (ie the one provided by the yeoman wizard) rather than testcafe @scope/testcafe-browser-provider-tail-end-of-package-name year.js?\nThanks!\nSent from my iPhone\n\nOn 20 Mar 2018, at 6:41 pm, Andrey Belym notifications@github.com wrote:\n@AndreyBelym requested changes on this pull request.\nIn src/browser/provider/module-loader.js:\n\n@@ -0,0 +1,18 @@\n+const BROWSER_PROVIDER_SCOPED_PACKAGE_RE = /^@\\S+\\/testcafe-browser-provider\\S/;\n+\n+export default class BrowserProviderModuleLoader {\n+    loadModule (providerName) {\n+        var providerObject = null;\n+\n+        if (this.isPrivateModule(providerName))\n+            providerObject = require(${providerName});\nI think it's better to extract scope from RegExp and use\n\nproviderObject = require(${scope}/testcafe-browser-provider-${providerName});\nhere\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Nah I\u2019m happy to finish the job. Enjoying my first contribution to open source!\n\nSent from my iPhone\n\nOn 20 Mar 2018, at 7:53 pm, Andrey Belym notifications@github.com wrote:\nI can do it by myself along with rebasing, if you don't have time to do it. Just let me know, please.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @AndreyBelym - when I run gulp-test client on both windows and linux, the build stops at \"QUnit server listens on http://localhost:2000\"\n\nAny ideas what I've done wrong? . @andreybelym - this seems to be all good now? Okay to merge? \n. Awesome. Thankyou. Would you guys be interested in a provider that allows people to run testcafe on Samsung/android devices locally? \nSent from my iPhone\n\nOn 12 Apr 2018, at 6:26 pm, Andrey Belym notifications@github.com wrote:\nHi @bsmithb2, we've just published a new stable release 0.19.2, so now you can specify \"testcafe\": \"^0.19.2\" in your pacakge.json.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Bug appears to be introduced in 0.19.2-alpha1 release. If we install v0.19.2-dev20180323 the problem goes away\n\n. @AndreyBelym Hi Andrey - any update on the cause of the issue and its likely resolution? \nThanks - awesome work BTW we love testcafe. . Hi Mikhael,\nNo. We tested it on an S5, in Chrome. Not testing Samsung browser at all. \nSame Chrome version as an S7 in the same fleet on physical hardware not Browserstack. We have about 10% of Australian mobile Android users using S5s with locked to Android 6, but up to date Chrome. To not support Android 6 is a deal breaker. \nPlease reopen?\nThanks\nBradley\nSent from my iPhone\n\nOn 4 May 2018, at 9:09 pm, Mikhail Losev notifications@github.com wrote:\nHi @lixualinta and @bsmithb2\n@AndreyBelym reproduced the problem using Samsung Internet Browser on Galaxy S7. He used a browser from the BrowserStack.com infrastructure.\nSamsung Internet Browser installed on this device has a very old version - 4.0.01-89. This version was released in early 2016 (see https://en.wikipedia.org/wiki/Samsung_Internet_for_Android#History).\nIt means that the browser has an old script engine that does not support modern script engine possibilities.\nThis is why TestCafe does not work with it.\nYou wrote that - 'Bug appears to be introduced in 0.19.2-alpha1 release. If we install v0.19.2-dev20180323 the problem goes away'.\nThis can happen. We constantly refactor our code to provide a faster and bugless product that should work with modern browsers. See TestCafe's browser support.\nIf you need to run tests in Samsung Internet Browser try to use the previous testcafe version (0.19.1) or upgrade Samsung Internet browser to the latest version.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. All of these devices were working less than a month ago in testcafe. All are Australian retail devices unboxed this February that we run in a test rack as a customer would ie without any corporate changes. The S8 passes. The S5 and Optus phones do not but they comprise significant market share. \nAndroid 7 is 51% of our three monthly user base of Android Devices\nAndroid 8 is 10 %\nAndroid 6 and below is the remaining 49% 6.0 and 6.0.1 is collectively higher than Android 8 (about 15% of total)\nChrome 66 is about 3% of our market share. Most devices by our customers are 63-65 (90%) but about 7-8% are below that. \nSupporting only the most recent devices and versions of software for mobile in Australia is difficult because telephony vendors lock their systems down and don\u2019t allow or delay upgrades on some devices. I suspect the problem however would be significantly worse for vendors trying to use your software to automate for the African and South American markets however. Even large portions of Asia are likely to be on older, slower device types. Why discriminate?\n\nThe exact device versions are below. \nThanks\nBradley \n[Run on S8] - Chrome Mobile 65.0.3325 / Android 8.0.0\nThis is an Optus $149 Prepaid in Aus - Chrome Mobile 55.0.2883 / Android 6.0.0\nS5 - Chrome Mobile 55.0.2883 / Android 6.0.1\nSent from my iPhone\n\nOn 4 May 2018, at 11:35 pm, Andrey Belym notifications@github.com wrote:\nHi @bsmithb2, could you please provide the Chrome version information that is printed when Chrome on Samsung S5 connects to TestCafe?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hi - can you please confirm the testcafe command line you are using - the error message looks slightly wonky as there is a colon in it that isn't clear. Secondly - is there a file at the location that testcafe is attempting to resolve? Thanks. Updated - please have a look @AndreyBelym and let me know any feedback.  Note that I've passed all the test-server tests but on my machine (windows 10 XPS 15, and on my linux VM) I can't run test-functional-local and test-client... the functional tests break in weird ways that aren't replicable in the build process, and the test-client never start after booting the qunit server on port 2000?. @AndreyBelym This is more challenging for me - the problem (and the reason why I refactored the code out to a class) is that I want to test only the behaviour of the conversion of the argument from the command line into the package name that I wish to load. Particularly I need to test the use case that the existing behaviour (public non-scoped packages) works in regression as well as enabling checks to handle scoped packages are behaving correctly without attempting to load the actual package (which is both slow from a test performance perspective and requires me to valid, installed packages to require()). By merging the detection of the module scoping with the require()ing of packages we merge those two responsibilities, which then makes the code untestable. \n\nI'm happy to do so, however this means that I can't see how we could write tests to confirm that behaviour short of client-side tests that are overweight? \nOf course, I'm happy to follow your direction and I'm still learning this whole JS thing so I'm happy to be enlightened.. :-). Agreed. Naming things is hard.  . Agreed. \n. Agreed. . Agreed. \n. Agreed. Added a commit. \n. ",
    "Sushindhran": "I'm seeing this as well.\nnode.js v8.9.4\ntestcafe 0.19.1\nMac OSX 10.11.6. I'm seeing the same thing.\n{ pid: '1427822843',\n  command: '??',\n  arguments:\n   [ '0:02.53',\n     '/Applications/Google',\n     'Chrome.app/Contents/MacOS/Google',\n     'Chrome',\n     'http://google.com' ],\n  ppid: '8768' }\n{ Error: kill ESRCH\n    at Object._errnoException (util.js:1022:11)\n    at process.kill (internal/process.js:183:18)\n    at Function.exports.kill (/Users/sushindhran/Projects/test/node_modules/ps-node/lib/index.js:211:13)\n    at repl:1:8\n    at ContextifyScript.Script.runInThisContext (vm.js:50:33)\n    at REPLServer.defaultEval (repl.js:240:29)\n    at bound (domain.js:301:14)\n    at REPLServer.runBound [as eval] (domain.js:314:12)\n    at REPLServer.onLine (repl.js:468:10)\n    at emitOne (events.js:121:20) code: 'ESRCH', errno: 'ESRCH', syscall: 'kill' }. It works if I kill ppid. Seems like the issue is that psnode.lookup doesn't find the right pid. The pid I see in processList[0] doesn't exist. I haven't had the time to delve deeper into this and debug. I also don't have access to a windows machine for now. :/. Thanks @AndreyBelym! This is awesome.. ",
    "frankmariette": "@AndreyBelym Just tried this out to see if it worked and had the following error. \n```processList[0] { pid: '2024214751',\n  command: '??',\n  arguments:\n   [ '0:04.67',\n     '/Applications/Google',\n     'Chrome.app/Contents/Versions/65.0.3325.181/Google',\n     'Chrome',\n     'Helper.app/Contents/MacOS/Google',\n     'Chrome',\n     'Helper',\n     '--type=renderer',\n     '--field-trial-handle=4432648620277866634,9616517174019563587,131072',\n     '--service-pipe-token=64441D545C038F2F92E87ED15CC3920F',\n     '--lang=en-US',\n     '--enable-offline-auto-reload',\n     '--enable-offline-auto-reload-visible-only',\n     '--num-raster-threads=4',\n     '--enable-zero-copy',\n     '--enable-gpu-memory-buffer-compositor-resources',\n     '--enable-main-frame-before-activation',\n     '--enable-compositor-image-animations',\n     '--service-request-channel-token=64441D545C038F2F92E87ED15CC3920F',\n     '--renderer-client-id=317' ],\n  ppid: '353' }\npsnode.kill(processList[0].pid, (err) => console.log(err || 'done'))\n{ Error: kill ESRCH\n    at Object._errnoException (util.js:1024:11)\n    at process.kill (internal/process.js:183:18)\n    at Function.exports.kill (/Users/frankmariette/Projects//node_modules/ps-node/lib/index.js:211:13)\n    at repl:1:8\n    at ContextifyScript.Script.runInThisContext (vm.js:50:33)\n    at REPLServer.defaultEval (repl.js:240:29)\n    at bound (domain.js:301:14)\n    at REPLServer.runBound [as eval] (domain.js:314:12)\n    at REPLServer.onLine (repl.js:442:10)\n    at emitOne (events.js:121:20) code: 'ESRCH', errno: 'ESRCH', syscall: 'kill' }\n```\n. Trying out your solution @Sushindhran I get the same result with using ppid. Trying to fork testcafe to make the fix however doesn't work for me as the test scripts seem to require them to be ran on a Windows 10 machine which I do not have access to. Maybe one of the people from testcafe can make this fix and hopefully update their contribution docs to allow mac users to make contributions as well :). ",
    "RichieAHB": "This is happening for me on macOS Mojave using Chrome 70.. Is that alpha.2 or is there a release there?. @AndreyBelym works like a charm \ud83d\udc4c - also, while I'm here, I've no idea how you got your drag and dropping working in chrome. Puppeteer and Selenium both failed on this count. Great work.. @AndreyBelym - we're not that keen on requiring alpha versions on our team, so do you know (very roughly) when this might land? Thanks again.. ",
    "vivekpant28": "Hi Testcafe team,\nask is that we want to use runner in headless mode to run all end to end tests together and their is no dependencies among the test scripts, so once we run these in parallel it will save our execution time.\nwe have followed the step mention as : \nhttp://devexpress.github.io/testcafe/documentation/using-testcafe/common-concepts/concurrent-test-execution.html\nbut somehow it is not working a our end , Can you please guide us how to resolve the same.\ncurrently we mentioned that \n...\nrunner..concurrency(3) \n... \nit will run scripts in sires where it is suppose to run in parallel.  . Hi Andrey ,\nThanks for your prompt response.\nlet me explain the scenario.\nthere are  15+ .js files for the end to end scenario, where each .js file is having a single test with specific validation. now I want to run these .js file using the testRunner, and want to run them parallel, so that overall execution time will be saved.\n. ",
    "timnederhoff": "I think it's nice to have an override hook like this. With your proposed solution, the .beforeEach() hook can't be overwritten. The method for adding additional before and after using in the test itself like @bisubus mentioned looks fine to me.. awesome, thanks!. ",
    "viking2917": "Thank you! What is the best way for me to get the fix? Simply re-install testcafe? Or do I need to wait for a release?. will be traveling for a bit but will give it a try when I return, thanks!. I can confirm this works now, after re-installing testcafe. Thank you!. @Farfurix Sorry I am an idiot. I had a local installation of testcafe 0.19.1 covering an installation of 0.19.2. When I removed that and made sure to have 0.19.2 everything works. Thanks!. Thank you @AlexKamaev! I can confirm this workaround is working for me as well. It does mean most any Ionic page with dynamically generated content will need to define these custom selectors/scroll methods rather than relying on hover(), but that should be manageable. Is there a way to enforce this scrolling method globally? (or replace the underpinnings of Hover() so it works globally for Ionic apps?). \nThanks again for the workaround! Loving Testcafe and this makes it usable for my app, where most pages have this behavior..... Thank you @AlexKamaev. I can confirm that Testcafe does NOT hang when run outside of debug mode, and that your suggestion does enable debug mode to work as desired, very helpful. I was in debug mode because I was trying to solve another problem with Action Sheets but I figured that out I believe. . @AlexKamaev I have noticed a related issue (i think the original reason I was in debug mode). It appears that clicking on an Action Sheet item causes the button's buttonClicked method to be called twice. Running outside Test cafe it is only executed once. to reproduce: \n\nmodify the attached app.js to be:\n\n```\nangular.module('ionicApp', ['ionic'])\n.controller('AppCtrl', function($scope, $ionicActionSheet) {\n\n$scope.showActionsheet = function() {\n\n    $ionicActionSheet.show({\n    titleText: 'ActionSheet Example',\n    buttons: [\n        { text: '<i class=\"icon ion-share\"></i>Share' },\n        { text: '<i class=\"icon ion-arrow-move\"></i>Move' },\n    ],\n    destructiveText: 'Delete',\n    cancelText: 'Cancel',\n    cancel: function() {\n        console.log('CANCELLED');\n    },\n    buttonClicked: function(index) {\n        $scope.registerButtonClick(index);\n        return true;\n    },\n    destructiveButtonClicked: function() {\n        console.log('DESTRUCT');\n        return true;\n    }\n    });\n};\n\n$scope.registerButtonClick = function (index) {\n        console.log('BUTTON CLICKED', index);\n\n}\n});\n\n```\n\nmodify the test to be: \n\n```\nimport { Role, Selector } from 'testcafe';\nconst button = Selector('button');\nconst actionButton = button.withText('Show Actionsheet');\nconst cancelButton = button.withText('Cancel');\nconst moveButton = button.withText('Move');\nconst shareButton = button.withText('Share');\nconst bodySelector = Selector('body').addCustomMethods({\n    allowClick: (body) => {\n        body.style.pointerEvents = 'auto';\n    }\n});\nfixture Getting Started\n    .page http://localhost:8101/;\ntest('Tabs test', async t => {\n    await bodySelector.allowClick();\n    await t\n        .click(actionButton)\n    .hover(shareButton)\n    .hover(moveButton)\n    .click(moveButton)\n    .hover(cancelButton)\n    .click(cancelButton)\n    .wait(3000)\n});\n```\nThen the observed output shows the print statement twice (\"BUTTON CLICKED 1\") after click(moveButton) is called. Outside of testcafe it is shown only once. I do not know if this is related to the pointer event issue you raise above. Let me know if I should create a separate issue for this?\n\n. I can confirm this works now, after re-installing testcafe. Thank you! (CORRECTION: The freeze is OK, but the button is still being virtually clicked twice.). @AlexKamaev Update: I mistakenly thought this was corrected. But when I run the above, I still see the BUTTON CLICKED 1 message twice, indicating the menu has been clicked twice, so the fix for #2232 doesn't seem to have solved it.... update @AlexKamaev @Farfurix Sorry I am an idiot. I had a local installation of testcafe 0.19.1 covering a global installation of 0.19.2. When I removed that and made sure to have 0.19.2 everything works. Thanks and sorry for confusion!. Thanks - would love to see this!. I was able to re-install testcafe and see this working. . yes I re-installed all of Testcafe and saw it working. . ",
    "phoet": "@miherlosev ah great, thanks for redirecting me!. ",
    "sbenyo": "Thanks for the reply.\nI fail on a big project with in Angular 5. I cannot send example of this project.\nI will try to reproduce it in a simpler project that has similar environment and dependecies.\n. I found that we need to use \"matches\" polyfill for IE11. We have this:\nif (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.msMatchesSelector ||\n            Element.prototype.webkitMatchesSelector;\n}\nIf I remove it, the TestCafe Selectors seem to work. Is there a way to keep using it and still be able to run TestCafe with IE11?\n. ",
    "tk8817": "@AlexanderMoskovkin - can you confirm my suspicion that TestCafe does not currently support this? \nWhat is the underlying test framework, is it mocha? Wondering if I can put together a PR to add support. . @AlexanderMoskovkin - thanks for pointing out the ctx functionality, I think they are solid  entry-points that your users would already be familiar with. Forwarding those objects to the reporters would solve our use case perfectly. \n. @AlexanderMoskovkin - we missed @hdorgeval's post and took it on ourselves. I have had one of my team members raise PR #2258 which we hope is to your satisfaction. . @inikulin, I\u2019m not sure I understand. What is the purpose for ctx outside of this usecase?\nThe \u2018context\u2019 of a fixture or test is exactly what we are lookinng to expose to the reporter. Interestingly, if you look at our PR - it\u2019s a 2 line code change, as you guys were already capturing this and passing it forward, but simply leaving it out of the final object the reporter receives.. @inikulin - if you look at the code, this object is where the reporter gets all of its data from, it was literally a one line update to further expose the same object.... @sachs7 - if you want something to tide you over, here is our homegrown dockerfile that is focused on Local Headless Chrome + Remote Browsers [browserstack / saucelabs].\nWe add our code during build, you can change that by simply commenting out the COPY . /\n```\nFROM node:9-slim\nSee https://crbug.com/795759\nRUN apt-get update && apt-get install -yq libgconf-2-4\nInstall latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\nNote: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\ninstalls, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/.deb\nRUN npm i -g testcafe\nCOPY package.json package.json\nCOPY package-lock.json package-lock.json\nRUN npm install \\\n    && rm -rf /tmp/* \nCOPY . /\nAdd user so we don't need --no-sandbox.\nRUN groupadd -r testcafe && useradd -r -g testcafe -G audio,video testcafe \\\n    && mkdir -p /home/testcafe/Downloads \\\n    && chown -R testcafe:testcafe /home/testcafe \\\n    && chown -R testcafe:testcafe /node_modules\nRun everything after as non-privileged user.\nUSER testcafe\nENTRYPOINT [\"testcafe\"]\nCMD [\"-h\"] \n ```\n@AndreyBelym - we have some learning from trying to work with the official image if you are willing to discuss. We think we can contribute some more robust docker interfaces for TestCafe. . Hi @augustineuzokwe, it looks like you are not running my code from above, instead you are running the vanilla node:9-slim image. \nTo run my code do the following\n\nSave my code snippet to a file called Dockerfile\nrun docker build -t testcafe:custom .\nrun docker run testcafe:custom chrome /tests/tests/**/*\n\n:). @augustineuzokwe, try this \ndocker run --rm -it --shm-size=1gb testcafe:custom  puppeteer:no_sandbox tests/**/*\nIn my prior comment I accidentally used your testcafe arguments not realizing that my image uses puppeteer rather than chrome in headless mode. Puppeteer is the official Google repo for working with Chrome programatically. \nA couple notes:\n1. you don't need to mount in your tests because they are brought in during the Docker build step.\n2. I have addd the --rm flag which removes the container when its done executing\n3. I have added the -it tflag which gives you an interactive tty shell\n4. I have added the --shm-size=1gb flag which is a trick to keep Chrome happy in Docker. @AlexanderMoskovkin and @inikulin - hope this PR better meets the vision you were looking for. Our team is happy to help and looks forward to future collaborations! . Hey @AlexanderMoskovkin & @inikulin , our co-op @MatthewNielsen27 only has one more week with us before he returns to University, if changes are required for the PR please give us feedback so we can handle it ASAP. Your support is much appreciated. . Huzzah! Great work everyone. We are very excited to expand our scope of abilities with this new feature.. This would also allow TestCafe to be easily adopted by teams who are currently using Selenium or another test framework such as Cucumber, Mocha, or Jest. Great request. . ",
    "MatthewNielsen27": "I don't understand why data from the tests and fixtures are cherry picked and left out from the final testRunInfo. The data is literally dropped at the last step. What even is the rational for leaving out the test and fixture from the reporter? It only limits the capabilities of what a truly custom reporter can do. As for the ctx, that is exactly what we are trying to report on. For massive projects the context of a test run is as important as the outcome in terms of a reporting standpoint.. @inikulin I understand that a separate meta field would be the best implementation for that use. But nevertheless I see value in the reporter having access to the shared context data between tests. Besides metadata, this context data would also be valuable to report on. So this PR still has merit as a useful addition from my perspective.. @inikulin @AlexanderMoskovkin We need a feature like this quickly to support our business and are willing to code it. PR #2258 would cover all of our needs immediately, but we would go your route with the additional meta property if you are willing to support it. We just need guidance on the best way to implement the feature if we go that route.. @AlexanderMoskovkin Sounds good, would the meta for tests and fixtures be separate properties of the testRunInfo?. @AlexanderMoskovkin I submitted a PR to support this issue #2298. @AlexanderMoskovkin If it isn't too much to ask, it would probably be faster if you continued and finished your implementation next week. This way the api will be just as you described in the original comment. Additionally I don't think I would be able to create the unit test coverage that you wish to support for the new feature.. ",
    "robbiedhickey": "Yesterday I had hacked together a couple of ClientFunctions to persist the state between tests and tenuously got things working. \nOddly enough, after reading through #2142 it looks like the preserveUrl option is the secret sauce that ended up working for my use case. It looks like in addition to preserving the URL that was redirected to after login, it also preserves sessionStorage, which is exactly the behavior I was expecting!\nThanks @snowl! . ",
    "kirillgroshkov": "Any updates? Have someone try to connect to testcafe remote from a webview?. ",
    "james-brndwgn": "@AlexanderMoskovkin you are completely right. It was the if (await bar.exists && await bar.visible) that was throwing me off. Removing that, but keeping the incorrect selector causes the test to fail with AssertionError: expected 0 to deeply equal 1 as would be expected. Thanks for clarifying the issue.. ",
    "korsun": "@helen-dikareva thank you ! It worked. ",
    "filoxo": "Thanks for the info! Closing.. ",
    "Andgoncharov": "Hi @AlexanderMoskovkin,\nThanks for your answer, I've tried your suggestion and it's almost perfect, except the fact that I need to click two buttons (Unlock page and Resume) for every test. I think it's enough for me, I have not so many of such tests for now. So thank you again.\nAs of making it even more convenient, what do you think about adding the parameter I proposed before?  I could do that by analogy the Unlock page button. Will you accept such PR?. @miherlosev ,\nGot it, thanks!. ",
    "sachs7": "Awesome @tk8817 I will try it out! Also, is there a way wherein you can point the Git Repo to fetch the tests. Something like:\ndocker run -v <https://github.com/some/repo>:/tests -it testcafe/testcafe -c 6 'chromium --no-sandbox' /tests/test.js -S -s /tests/screenshot. ",
    "augustineuzokwe": "@tk8817 thanks for the script. i am struggling to run my test in the docker and i'm using this command\ndocker run -v ${PWD}:/tests node:9-slim chrome '/tests/tests/**/*'\ncould please tell me what i'm doing wrong?. @tk8817 thanks for the script. i am struggling to run my test in the docker and i'm using this command\ndocker run -v ${PWD}:/tests node:9-slim chrome '/tests/tests/**/*'\ncould please tell me what i'm doing wrong?. Hi @tk8817 thanks for your reply, really excited to run your solution.\nchrome did not work with  \n\nError unable to establish connection but i then tried chromium and it failed with the following\n`Augustines-MacBook-Pro:client-e2e-tests augustine$ docker run -v ${PWD}:/tests testcafe:custom 'chrome:headless --no-sandbox' '/tests/tests/*/'\nUsing locally installed version of TestCafe.\n Running tests in:\n - HeadlessChrome 68.0.3438 / Linux 0.0.0\nAs an Admin portal user, i want to be able onboard a merchant with INSTORE\n integration type\nlogged in as: test.PQ.INT.MASTER@payconiq.com\nERROR The HeadlessChrome 68.0.3438 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.`\n\nare you familiar with this issue?. Hi @tk8817 thanks for your reply, really excited to run your solution.\nchrome did not work with  \n\nError unable to establish connection but i then tried chromium and it failed with the following\n`Augustines-MacBook-Pro:client-e2e-tests augustine$ docker run -v ${PWD}:/tests testcafe:custom 'chrome:headless --no-sandbox' '/tests/tests/*/'\nUsing locally installed version of TestCafe.\n Running tests in:\n - HeadlessChrome 68.0.3438 / Linux 0.0.0\nAs an Admin portal user, i want to be able onboard a merchant with INSTORE\n integration type\nlogged in as: test.PQ.INT.MASTER@payconiq.com\nERROR The HeadlessChrome 68.0.3438 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.`\n\nare you familiar with this issue?. ",
    "alxtgda": "Hi @tk8817 first of all, thanks for sharing this. I am running your Dockerfile image but I have the same issue mentioned before by @augustineuzokwe. \nWhile executing ..\ndocker run --rm -it --shm-size=1gb testcafe:custom puppeteer:no_sandbox tests/**/* \nI'm getting ..\nERROR Unable to find the browser. \"puppeteer:no_sandbox\" is not a browser alias or path to an executable file.\nBut also, trying with chrome, the process got hung and after I stop the process, the error thrown is the following: \nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nAny idea what is happening?. Hi @tk8817 first of all, thanks for sharing this. I am running your Dockerfile image but I have the same issue mentioned before by @augustineuzokwe. \nWhile executing ..\ndocker run --rm -it --shm-size=1gb testcafe:custom puppeteer:no_sandbox tests/**/* \nI'm getting ..\nERROR Unable to find the browser. \"puppeteer:no_sandbox\" is not a browser alias or path to an executable file.\nBut also, trying with chrome, the process got hung and after I stop the process, the error thrown is the following: \nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nAny idea what is happening?. The only way I managed to get it running was to use chrome:headless . My guess is that I'm missing some xvfb configuration to have a graphical term. \ndocker run --rm -it --privileged --shm-size=1gb testcafe:custom_v1 'chrome:headless' tests/**/*\nHowever I'm still experimenting a lot of flakyness running it on the container in comparison with running it locally.. The only way I managed to get it running was to use chrome:headless . My guess is that I'm missing some xvfb configuration to have a graphical term. \ndocker run --rm -it --privileged --shm-size=1gb testcafe:custom_v1 'chrome:headless' tests/**/*\nHowever I'm still experimenting a lot of flakyness running it on the container in comparison with running it locally.. ",
    "amits1995": "@tk8817 Hey, I am also experiencing flakyness with testcafe's docker image.\nIt's mostly solved when using --shm-size=4gb but I'm interested in understanding why it helps?\n@AndreyBelym  ?. @tk8817 Hey, I am also experiencing flakyness with testcafe's docker image.\nIt's mostly solved when using --shm-size=4gb but I'm interested in understanding why it helps?\n@AndreyBelym  ?. Yep, tests are way more stable now with --disable-dev-shm-usage\nThough I still have random issues with screenshots not being taken sometimes (usually because of a page redirect) but that's a different issue probably.\nFor the protocol, the error we used to see before using --disable-dev-shm-usage is:\nERROR The HeadlessChrome 68.0.3440 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues. Yep, tests are way more stable now with --disable-dev-shm-usage\nThough I still have random issues with screenshots not being taken sometimes (usually because of a page redirect) but that's a different issue probably.\nFor the protocol, the error we used to see before using --disable-dev-shm-usage is:\nERROR The HeadlessChrome 68.0.3440 / Linux 0.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues. Maybe it's worth updating this documentation. Maybe it's worth updating this documentation. @AndreyBelym what's the ETA for capturing with the native browser's api?\nAnd is there a chance to get a beta for that to work with until it's officially released?. Thank you very much!\nWorkaround 1 seems to work  . Hey guys,\nWe have migrated our authentication logic to Auth0 which means we redirect to a dedicated login page.\nThis change seems to break the screenshots mechanism as t.takeScreenshot(\"screenshot\") raises a null exception.\nI tried running our tests with the testcafe version you mentioned and it still doesn't work.\nAny idea?\nI'm working on a public site to help you guys reproduce my problem, will publish once it's done. OK @AndreyBelym your custom version is the only version that works for us right now.\nWhen is this feature planned to get in?\nthanks. @miherlosev @AndreyBelym As a result, our tests run super slow (like x4 slower).\nIs there any progress with this?. ",
    "dweber019": "@LavrovArtem when will version 0.20.0 be released?. ",
    "SayedShahidi": "Is this issue fixed because I still have the issue and i am using version 0.20.2.\n. ",
    "ancafolo": "Thanks a lot for the reply, @AndreyBelym \nOk, so I changed the code to this:\nconsole.log(parsePage(environment,domain));\nfixture(\"Home\")\n    .page(parsePage(environment,domain))\n    .beforeEach(async t => {\n      // Resize window\n      await t.resizeWindow(1280,500);\n    });\ntest\n(\"Home Page\", async t => {\nAnd it still doesn't work... @AndreyBelym this experiment was for IE. Safari and IE don't work. I will run the test also on Safari right away. Exactly. Ok, so I double checked all the browsers on Windows and Mac. The only problem is with IE, although IE Edge has no problem. The beforeEach function works. Thanks a lot!.  Home Page\n1) - Error in fixture.beforeEach hook -\n      Error on page \"https://www.staging.juniqe.de/\":\n  NetworkError\n\n  Browser: IE 11.0.0 / Windows 10.0.0\n\n     11 |console.log(parsePage(environment,domain));\n     12 |fixture(\"Home\")\n     13 |    .page(parsePage(environment,domain))\n     14 |    .beforeEach(async t => {\n     15 |      // Resize window\n   > 16 |      await t.resizeWindow(500,500);\n     17 |    });\n     18 |\n     19 |test\n     20 |\n     21 |.\n",
    "jdc0m": "sure @AndreyBelym\n\n. Hi @AndreyBelym, do you have some new info related to this bug?. thx for quick reply @AndreyBelym.\nOk, i change the value to sRGB and the browser ui is still there. then i try to change color profile to Display P3 D65 and the ui is any more there.. ",
    "Priccc": "@AlexanderMoskovkin \nThanks for your answer. Now I use a special way to achieve my test. But I hope you can realize as soon as possible.. ",
    "theTainted": "@Priccc \nI have been looking for something similar but also to interact with the second tab, would you be able to share your workaround, please ?\nThanks . ",
    "educamais": "\n@AlexanderMoskovkin\nThanks for your answer. Now I use a special way to achieve my test. But I hope you can realize as soon as possible.\n\nHey man, can you share what you did to solve this problem?. ",
    "VladimirCacicArapovic": "Hi guys..any news regarding this;). You can fix this issue with adding zoom action class and removing it if u run testcafe..if u need more info tomorrow I can add code.. // Patch for removing zoom for E2E tests -- \"//\" indicator if run TestCafe\nor normal run --little dodgy but it works\nif (window.location.pathname === '//') {\n  document.querySelector('html').classList.remove('zoomHtml');\n}\n// HTML\n<!doctype html>\n\n\n\n Admin\n\n\n\n\n\n\n\n\nOn Sun, 27 Jan 2019 at 15:42, Vijay Vedachalam notifications@github.com\nwrote:\n\nHi @AndreyBelym https://github.com/AndreyBelym @miherlosev\nhttps://github.com/miherlosev Is this enhancement in your roadmap?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2314#issuecomment-457928528,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEw-gKV-prG_4_6eBs3aWmikL4udjNjUks5vHcj-gaJpZM4TTXF6\n.\n. \n",
    "neelakansha85": "Thanks for supporting the docker image, I am planning to use your image for our production end to end test use case and was wondering if you have a timeline for supporting version tags for docker image?\nIt would be really nice and helpful to have that.. ",
    "Gwerlas": "Even better, perhaps is it possible to become the official repo on docker hub and the users could launch testcafe like this :\ndocker run testcafe\ndocker run testcafe:0.21.1\nAnd You'll benefit of the layers vulnerability scanning.\nWith an automatic build and the link between GitHub and Docker Hub, you'll have the README and the Dockerfile displayed and up to date in Docker Hub.. It works, thx.. ",
    "kruckenb": "It looks like Gulpfile.js has most of what's needed to publish with tags, with some tweaks.\nconst PUBLISH_TAG = JSON.parse(fs.readFileSync(path.join(__dirname, '.publishrc')).toString()).publishTag;\n[...]\nchildProcess.execSync('docker tag ' + imageId + ' testcafe/testcafe:' + PUBLISH_TAG, {\nIf the version was added to publishTag in .publishrc when Bump version commits are generated (like this example modified from 6e8e806430ba650a6abe24317971c2317139f595)\ndiff --git a/.publishrc b/.publishrc\n@@ -8,7 +8,7 @@\n     \"gitTag\": true\n   },\n   \"confirm\": true,\n-  \"publishTag\": [\"alpha\",\"0.23.0-alpha.2\"],\n+  \"publishTag\": [\"latest\",\"0.23.0\"],\n   \"prePublishScript\": \"gulp test-server\",\n   \"postPublishScript\": \"gulp docker-publish\"\n }\nthen Gulpfile.js could also generate a version tag, something like this (not tested):\n```\ndiff --git a/Gulpfile.js b/Gulpfile.js\n@@ -743,16 +743,13 @@ gulp.task('docker-build', done => {\n         }\n     }\n\nconst imageId = childProcess\n.execSync('docker build -q -t testcafe -f docker/Dockerfile .', { env: process.env })\nconst tagParam = PUBLISH_TAG.map((tag) => { return -t testcafe/testcafe:${tag}; });\n+\nchildProcess\n\n.execSync(docker build -q ${tagParam} -f docker/Dockerfile ., { env: process.env }\n         .toString()\n         .replace(/\\n/g, '');\n\n\nchildProcess.execSync('docker tag ' + imageId + ' testcafe/testcafe:' + PUBLISH_TAG, {\n\nstdio: 'inherit',\nenv:   process.env\n\n});\ndone();\n });\n```. I'm not sure if it's the same issue, but I'm getting an error when building the Docker container:\n\n\n```\n]$ docker build -f docker/Dockerfile .\n[...]\nStep 4/7 : RUN cd /opt/testcafe;  npm install --production &&  npm cache clean --force &&  rm -rf /tmp/* &&  chmod +x /opt/testcafe/docker/testcafe-docker.sh &&  adduser -D user\n ---> Running in f45d69e97426\nnpm ERR! code EADDRNOTAVAIL\nnpm ERR! errno EADDRNOTAVAIL\nnpm ERR! request to https://registry.npmjs.org/async-exit-hook failed, reason: getaddrinfo EADDRNOTAVAIL registry.npmjs.org:443\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2018-10-26T13_35_09_309Z-debug.log\nThe command '/bin/sh -c cd /opt/testcafe;  npm install --production &&  npm cache clean --force &&  rm -rf /tmp/* &&  chmod +x /opt/testcafe/docker/testcafe-docker.sh &&  adduser -D user' returned a non-zero code: 1\n```\nThis looks similar to this bug https://github.com/yarnpkg/yarn/issues/6384 in musl-1.1.20 in alpine:edge. ",
    "venkatakhil18": "The \"Google Chrome\" worker did not respond to the TestCafe and was deleted. This problem may appear when a worker browser hangs or is closed, or due to network issues.\noperating system: Windows 10\ntestcafe version: v.15.13\nnode.js version: 6.4.1. ",
    "TheBeachMaster": "Awesome, let me try this. ",
    "pateketrueke": "The library pulltorefresh is intended to be working only on mobile devices, we're using only touch* events for handling this which is working great.\nWe've updated the page, it was missing the hammer-touchemulator plugin, but the behavior remains the same: just pull the trigger to refresh, etc.\nAdding this plugin is not part of PTR itself, but it allows us to demonstrate the behavior to users using desktop browsers.\nMy task is adding some e2e tests to that library, so we can ensure their behavior but I was not able to use chrome:emulator:device:iphone 6 to make my tests, it just behave the same.. ",
    "ZayanNadeem": "Is there any update on this issue?. Hi @AndreyBelym, thank you for getting back to me quickly. You comment really helps. Let me take a look at the sorting method and get back to you with what I find.\nAlso, Thank you for pointing out my errors in my test cases. . @AndreyBelym I just checked, so the system I am working on is legacy. what it is doing is just an XHR request which sends back a HTML/text based response. So, in a way the DOM is being replaced but the Selector still selects the data according to original DOM that loaded. Is there a way I can ask testcafe to forget the original DOM and read the new one again? Or is there any other way I can test I can do?\n. @miherlosev I figured out that my sort was sending me a response back and testcafe was adding it to the list. So if my list was 10 items. sorting it would result in 20 items. the last 10 were sorted.\nAlso, i added the changes that both you and @AndreyBelym recommended. I was apparently testing a lot of items wrongly! Thanks for helping me out. . For me:\n\n\nconst options = {'www.example.com', method: 'GET'}\n  It compiles and my test passes.\n\n\nconst options = { url: 'www.example.com', method: 'GET'}\n  It compiles but my test fails. \n.expect(logger.contains(r=>r.response.statusCode === 200)).ok(); \nexpected false to be truthy.\n\n\nPlease let me know if I wrote my test wrong! Thanks. \n. This is my test in case you are wondering\ntest\n  .requestHooks(logger)\n  ('should be able to download', async t => {\n    const downloadButton = Selector('#button_download');\n    await t\n      .click(downloadButton)\n      .expect(logger.contains(r=>r.response.statusCode === 200)).ok();\n  });. @MarinaRukavitsyna I haven't gotten a chance to work on this issue. I will do so today and circle back.. ",
    "smockle": "This test failure does not seem related to this PR: https://travis-ci.org/testcafe-build-bot/testcafe/jobs/369340141. ",
    "psi-4ward": "Same here: Galaxy S7, Stock browser\n```\nCONNECTED Samsung Internet 6.4.0 / Android 7.0.0\n Running tests in:\n - Samsung Internet 6.4.0 / Android 7.0.0\nUse build-in assertions\n  testcafe:test-run:Samsung Internet 6.4.0 / Android 7.0.0:command\n  testcafe:test-run:Samsung Internet 6.4.0 / Android 7.0.0:command     {\n  testcafe:test-run:Samsung Internet 6.4.0 / Android 7.0.0:command       \"type\": \"test-done\"\n  testcafe:test-run:Samsung Internet 6.4.0 / Android 7.0.0:command     }\n  testcafe:test-run:Samsung Internet 6.4.0 / Android 7.0.0:command  +0ms\nERROR The Samsung Internet 6.4.0 / Android 7.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n```\n. Okay so it's a bit difficult to know whichs browsers are supported, especially for those embedded ones. What about a testcafe.com/supported-browser page which tells you if your current browser is supported?. Of course I know the docs but I thought about adding a page which parses the User-Agent header and tells you if the browser is supported. I thought the embedded android browser is not as old as you said. . \n. POC for remote workers:\nhttps://github.com/psi-4ward/testcafe-hub. Updated the POC and added testcafe-browser-provider-hub. ",
    "GregoryCBT": "Hi @kirovboris ,\nYes, the test page loads without testcafe. There doesn't seem to be any error in the console until it times out. When it does time out this is the only error that appears: \nTypeError: undefined is not an object (evaluating 'urlObj.searchParams.get'). Hi @MarinaRukavitsyna \nI'm not sure I understand the first question, I am using the URL to access a website that I need to test.\nAnd this is the error stack I'm getting:\n```\nUsing locally installed version of TestCafe.\n Running tests in:\n - Safari 10.0.0 / Mac OS X 10.12.0\nLogin Test\n \u2716 Login Test\n1) Error on page \"[URL HERE]\":\n  TypeError: undefined is not an object (evaluating 'urlObj.searchParams.get')\n\n  Browser: Safari 10.0.0 / Mac OS X 10.12.0\n\n      3 |fixture `Login Test`\n      4 |    .page `[URL HERE]`;\n      5 |\n      6 |test('Login Test', async t => {\n      7 |    await t\n   >  8 |       .resizeWindow(1280, 720)\n      9 |        .typeText('#app > div > div > div > aside > div.container.fluid.fill-height > div > div > div > div.card__text > form >\n  div:nth-child(1) > div.input-group__input > input[type=\"text\"]', '[USERNAME HERE]')\n     10 |        .typeText('#password', '[PASSWORD HERE]')\n     11 |        .click('#login > div')\n     12 |\n     13 |        .expect(Selector('#create > div > div > div > div.card__title > h3').innerText).eql('Systems');\n\n     at <anonymous> (pathtofile/testcafe/LoginTest.js:8:7)\n     at test (pathtofile/testcafe/LoginTest.js:6:1)\n\n1/1 failed (1m 13s)\n```\nI hope this is of use to you, thanks again for all the help.. Hi everyone,\nI figured out the solution to my safari issues. Turns out I had to update my version of safari and turn off the webdriver extension I had activated within safari. Thank you all for the help!. ",
    "gsachdev": "Hello @kirovboris any update regarding this change as this change is my prerequisite to start.  . ",
    "Seeker9889": "Thanks for the update!. ",
    "Chuckos": "I had a similar problem and resolved it by upgrading to npm 6.1.0. ",
    "prerna001": "Hi Mikhail,\nThanks for you response!\nSo the scenario is there are three buttons all return true for both selector fields exist and visible of which only two are actually visible to the eyes and to click on the third button I have to click on arrowRight to make it visible to the eyes and then click. But if i get exist and visible field values true, why do i get the error \"The element that matches the specified selector is not visible.\" \n  PFB the snapshot of the error.\n\nMy requirement is to identify this third button using this property if visible and then click on arrow to proceed, but for the fields exist and visible values, I never reach to the else block.\nPlease suggest.. ",
    "AlFa84": "I found the same issue with this config, using TestCaf\u00e8 Studio (0.3.0):\nEdge 17.17134 / Windows 10.0.17134\n. ",
    "konstantinmaximov": "http://ccnet.devexpress.devx/ccnet/server/farm/project/AspTestCafe.VisualTests.Bootstrap.Demos.CardView.v18.1/build/log20180515010054.xml/ViewBuildReport.aspx\nhttp://ccnet.devexpress.devx/ccnet/server/farm/project/AspTestCafe.VisualTests.Bootstrap.Demos.GridView.v18.1/build/log20180515010208.xml/ViewBuildReport.aspx\nI was not able to reproduce this behavior locally, but on the Farm the same test fails every time. Increasing the SwitchToIframe command timeout to 25000 has no effect. Changing WAIT_FOR_PARENT_DRIVER_RESPONSE_TIMEOUT to 15000 does not help either. The latest 0.20.0-alpha.4 version does not solve this problem.. ",
    "MariaRyadchikova": "Hey guys, I know it has already been included into the sprint, but is there any time frames when you plan to resolve the issue? This one is blocking me pretty badly. Thanks! . Hey guys, it's been more than a month since the issue was reported, and the sprint is about to end. Any more accurate forecasts? The issue blocks from working with any frames.. ",
    "kkowalczuk": "@AndreyBelym Win10, Chrome 65.0.3325.181.\n\nIt's very hard to make screenshot in this situation, because a browser window is logically tied to specific screen, and it's really tough to find remaining pieces of a window on other screens.\n\nFrankly speaking - I don't believe it is a problem (at least for Chrome), without those changes in mark generation mentioned above, the screenshots were handled correctly. Also, when t.takeElementScreenshot gives up, the screenshot of the whole page is being created (as @Arawnh reported in the first post) - the problem might be with cropping logic rather than in the capturing mechanism.\nFor the time being I don't have enough time to dig deeper.... ",
    "dylang": "Suggestion:\nSave page source.\nThis is similar to the screenshot feature, except it's saving the current state of the DOM to an HTML file.\nThe HTML is then easy to open in a browser and inspect the DOM.\nThis is useful in CI environments when tests fail, it could be something as simple as an unexpected DOM element change that's not possible to discover from a screenshot.. Hmm, might have solved my own request:\n```js\n    saveSource = async (filename: string) => {\n        const getSource = ClientFunction(() => [\n            '',\n            '',\n            document.head.innerHTML,\n            '',\n            '',\n            document.body.innerHTML,\n            '',\n            ''\n        ].join('\\n'));\n    const source = await getSource();\n\n    return writeFileSync(filename, source, 'utf8');\n}\n\n```\nNote: the above is just an example, not necessarily a robust solution for all situations.. ",
    "ryancharris": "Thanks for clarifying @AndreyBelym. ",
    "Juansasa": "I think exposing Role with a callback to enable devs to decide what to save and what not to the browser is a much better option. Or expose the Testcontroller in before hook so we Devs can do all of it ourselves is even better.. @LavrovArtem \nYou are right i debugged the code and found the issues stems from the app code not TestCafe.\nThanks you can close this now :). I also need this. test based concurrency does not cut it for me.\nCurrently we have to split our files in chunks and then spawn multiple testcafe instahnces to enable this. It worked but it would have been much nicer to have this as part of the library. I also need this. test based concurrency does not cut it for me.\nCurrently we have to split our files in chunks and then spawn multiple testcafe instahnces to enable this. It worked but it would have been much nicer to have this as part of the library. This is most likely due how power management is handled by OSX.\nBy default it will freeze background apps from running.\nOSX Endurance. This is most likely due how power management is handled by OSX.\nBy default it will freeze background apps from running.\nOSX Endurance. This has been happening since v0.22.0 for us. This is not possible and it occurs randomly so its quite hard. But i suspect is somehow related to #3064 and #3070. A relaxed operator would be nice for example .closeTo() or .similarTo()\n1 = '1'\n'abc' = '  abc   '\n'aBC'  = '  AbC  '. ",
    "fpoppinga": "@AndreyBelym, yes I know, but in my opinion a) process.env is not meant to be used this way, b) this works rather badly for more complex configuration data. . ",
    "iegor-zabielin": "@miherlosev : unfortunately, it is reproduced on default \"https://localhost:3000/\" url. we are developing ReactJS based web application and by default (after execution yarn start), application is available on \"https://localhost:3000/\", in this case it can be reproduced.\n\none more thing, you should try to reproduce after fresh npm packages installation (local and global)\ni assume, the reason is in PORT value. we tried to change url on some other, without port, and there was any problems. issue isn't reproduced after application deployment and real URL using.. @hex0cter , @miherlosev thanks for assistance!. @AndreyBelym i have exactly the same issue for chrome (testcafe docker image and macOS operation system). if the reason in Docker's virtual machine configuration, an you please specify which parameters is okay at least for concurrency 3?. @AndreyBelym thanks for advise, resolved my problem!. +1\nWe tried to update firefox profile and disable alert appearing right before tests execution. It was working for some time, but i assume after FF updating this problem started to reproduce again.. ",
    "mhyrka": "Was this issue ever addressed in the support center? I cannot seem to find this ticket. . ",
    "mgasner": "is there any way to suppress these warnings?. ",
    "ferencbeutel4711": "Hi @AndreyBelym, I am using testcafe 0.19.2 and chrome version 66.0.3359.139.. Hey @AndreyBelym, thanks for your quick response!\nSorry to hear that the chrome api seems to be so unstable.. Hi @AndreyBelym, is there anything I can support you with in order to get this fixed?. I have the same problem (and a coworker too)\nlatest testcafe, latest chrome, osx 10.13.2\nIt only happens when started via testcafe and was not happening some time ago. Ive tried it with an old testcafe version and it still happens so i guess a chrome update introduced the error\nchrome:userProfile fixed this aswell for me. What are the implications of running the tests with this browser configuration?. ",
    "rupeshmore": "@AndreyBelym Thanks for the updated info. The documentation never mentions that one has to use both the methods regardless on modifying the request and response.\nI was following the example mentioned here.\nhttps://devexpress.github.io/testcafe/documentation/test-api/intercepting-http-requests/#creating-a-custom-http-request-hook\n. ",
    "JonathanOuellet1275": "Just to tell you guys that i had to remove the \";\" at the end of the class RequestHook on line 1594 to be able to compile. thanks!. ",
    "dgieselaar": "@AndreyBelym it's probably indeed an issue with our network, but what is worrying me is that the test hangs instead of failing. The test should fail no?. ",
    "beautifwhale": "New test case without Role\n```\nimport { Selector } from 'testcafe';\nconst loginPageUrl = 'http://localhost:8888/#/login';\nfixture('Test').page('http://localhost:8888/#/');\ntest('test', async (controller) => {\n  await controller\n    .navigateTo(loginPageUrl)\n    .typeText(Selector('input').withAttribute('data-testid', 'username'), 'dev')\n    .typeText(Selector('input').withAttribute('data-testid', 'password'), 'password')\n    .click(Selector('button').withAttribute('data-testid', 'navigation-login-link'))\n    .navigateTo(loginPageUrl);\n});\n```\nGetting error \n```\nRunning tests in:\n - Chrome 67.0.3396 / Mac OS X 10.13.4\nTest\n \u2716 test\n1) Error on page \"http://localhost:8888/#/\":\n  Uncaught TypeError: Cannot read property 'onBodyElementMutation' of\n  undefined\n\n  Browser: Chrome 67.0.3396 / Mac OS X 10.13.4\n\n      3 |const loginPageUrl = 'http://localhost:8888/#/login';\n      4 |\n      5 |fixture('Test').page('http://localhost:8888/#/');\n      6 |test('test', async (controller) => {\n      7 |  await controller\n   >  8 |    .navigateTo(loginPageUrl)\n      9 |    .typeText(Selector('input').withAttribute('data-testid',\n  'username'), 'dev')\n     10 |    .typeText(Selector('input').withAttribute('data-testid',\n  'password'), 'password')\n     11 |    .click(Selector('button').withAttribute('data-testid',\n  'navigation-login-link'))\n     12 |    .navigateTo(loginPageUrl);\n     13 |});\n\n``. New test case withoutRole`\n```\nimport { Selector } from 'testcafe';\nconst loginPageUrl = 'http://localhost:8888/#/login';\nfixture('Test').page('http://localhost:8888/#/');\ntest('test', async (controller) => {\n  await controller\n    .navigateTo(loginPageUrl)\n    .typeText(Selector('input').withAttribute('data-testid', 'username'), 'dev')\n    .typeText(Selector('input').withAttribute('data-testid', 'password'), 'password')\n    .click(Selector('button').withAttribute('data-testid', 'navigation-login-link'))\n    .navigateTo(loginPageUrl);\n});\n```\nGetting error \n```\nRunning tests in:\n - Chrome 67.0.3396 / Mac OS X 10.13.4\nTest\n \u2716 test\n1) Error on page \"http://localhost:8888/#/\":\n  Uncaught TypeError: Cannot read property 'onBodyElementMutation' of\n  undefined\n\n  Browser: Chrome 67.0.3396 / Mac OS X 10.13.4\n\n      3 |const loginPageUrl = 'http://localhost:8888/#/login';\n      4 |\n      5 |fixture('Test').page('http://localhost:8888/#/');\n      6 |test('test', async (controller) => {\n      7 |  await controller\n   >  8 |    .navigateTo(loginPageUrl)\n      9 |    .typeText(Selector('input').withAttribute('data-testid',\n  'username'), 'dev')\n     10 |    .typeText(Selector('input').withAttribute('data-testid',\n  'password'), 'password')\n     11 |    .click(Selector('button').withAttribute('data-testid',\n  'navigation-login-link'))\n     12 |    .navigateTo(loginPageUrl);\n     13 |});\n\n```. Another test in Firefox\n```\nimport { Role, Selector } from 'testcafe';\nconst baseUrl = 'http://localhost:8888/';\nconst login = () =>\n  Role(${baseUrl}#/login, async (controller) => {\n    await controller\n      .typeText(Selector('input').withAttribute('data-testid', 'username'), 'dev')\n      .typeText(Selector('input').withAttribute('data-testid', 'password'), 'password')\n      .click(Selector('button').withAttribute('data-testid', 'login-button'));\n  });\n// start on base url\nfixture('Test').page(baseUrl);\n// navigate to login and authenticate\nconst devuser = login();\ntest('test', async (controller) => {\n  await controller.useRole(devuser).navigateTo(${baseUrl}#/about);\n});\n```\nError \n```\nRunning tests in:\n - Firefox 52.0.0 / Mac OS X 10.13.0\nTest\n \u2716 test\n1) - Error in Role initializer -\n      Error on page \"http://localhost:8888/#/\":\n  TypeError: t.shadowUI is undefined\n\n  Browser: Firefox 52.0.0 / Mac OS X 10.13.0\n\n```. Closed this because I thought it was my project configuration, couldn't reproduce in a new CRA project. Rolled back to 0.19.2 and everything was fine. So yeah it's something in 0.20.2. ",
    "konqi": "If I read the code correctly from the hammerhead repo, persisting storages is simply not implemented. \nSo, at the moment, persistence and rehydration of the stores must be done manually.\nThis means that the first test, that uses the role will work, because the first call to useRole causes testcafe to go through the login procedure. Consecutive calls to useRole restore the Session, which contains cookies, but not the stores, thus every consecutive test that requires values from local or session store will fail.. @AlexKamaev Nice! Can you point me to the right place where storage persistence is implemented, because it is not working for me and I'd like to debug it.. For anyone finding this issue,  it's actually not that hard:\nCreate a RequestHook like:\n```\nconst target = /https:\\/\\/my.secure.host/\nexport class MyRequestHook extends RequestHook {\n  constructor() {\n    super(target)\n  }\nonRequest(event) {\n    // add keys to request\n    Object.assign(event.requestOptions, {\n      ...keys\n    })\n  }\nonResponse() {}\n}\n```\nwhere keys is\nconst keys = {\n  key: fs.readFileSync(USER_KEY),\n  cert: fs.readFileSync(USER_CRT),\n  ca: fs.readFileSync(CA_CRT)\n}\nthe constants USER_KEY, USER_CRT, CA_CRT are paths to the PEM formatted keys/certs.. ",
    "davidcunha": "Hello all,\nI was about to create an issue about this situation too, but glad to see that it's on \"Featured Proposals\" \ud83d\udc4fAt this moment I'm not able to test a lot of features because I simply cannot get different responses from the same request, e.g, listing addresses -> deleting an address -> listing addresses to validate the diff.. Hello @miherlosev \nMy issue is related with the one aforementioned from @robodude. There are use cases where I would like to setup RequestMocks for the same request but with different responses. For example:\n1 - User visit a page with his addresses\n2 - Request to get all addresses is triggered and intercepted by the mock\n3 - User deletes one of the addresses from the list\n4 - New request to get all addresses is triggered but this time it should be intercepted by another mock that respond with a different JSON - there are ways to not have to call again the same endpoint and make the \"diff\" only in Javascript, but this example is for the sake of sharing a simple use-case\nI was able to code a workaround like @robodude mentioned, but ideally I would prefer a way to assign different RequestMocks to the same test and indicate, by order in chaining or some kind of parameter, which one should be used in which situation.. By adding nock as dependency, removing RequestMock code, and adding nock standard interceptor with .reply(200, jsonMockedResponse, { 'Access-Control-Allow-Origin': '*'}); the request was correctly intercepted. But it means there must be some bug with RequestMock.. @Farfurix Thanks, the workaround really worked. \ud83d\ude0e. ",
    "tjkb": "I experience the same after upgrading to @0.20.20. IE11 hangs and is not responsive.. ",
    "cmichon": "Hi @AndreyBelym: that would discard entirely TestCafe from my comparative study. This is unfortunate...\nThough I understand the decision taken (obsolescence of several legacy html markers), there are plenty of sites out there still using these markers.\nFWIW, Cypress and CodeceptJS have no issue at all supporting H2 database web application and its frame/frameset legacy markers.. ",
    "maertz": "@MarinaRukavitsyna awesome, is the ETA for this summer still realistic? Is it possible to obtain the created tests with the new visual recorder (open source core) I've seen the test files are slightly different - if not, is there any plan to provide a migration script to convert these?\nSincerely Ben. @MarinaRukavitsyna Thank you very much for your quick response. Sounds promising! Good luck with the testing phase \ud83d\udc4d . ",
    "nabrahamson": "I hope it's alright to add this code snippet to this closed issue. \n@Lukas-Kullmann \nI've figured out a way to do this in a scripted node application using async/await. Please see the code below\n```\nconst browsers = [\n  ['browserstack:edge@17.0:Windows 10', 'browserstack:chrome@68.0:Windows 10'],\n  ['browserstack:firefox@61.0:Windows 10', 'browserstack:firefox@61.0:OS X High Sierra'],\n  ['browserstack:chrome@68.0:OS X High Sierra', 'browserstack:safari@11.1:OS X High Sierra'],\n];\nconst runTest = async browser => {\n  console.log('starting tests');\n  await createTestCafe('localhost', 1337, 1338)\n    .then(tc => {\n      testcafe = tc;\n      const runner = testcafe.createRunner();\n  return runner\n    .src(['web-tests/*.ts'])\n    .browsers(browser)\n    .run();\n})\n.then(async failedCount => {\n  console.log('Tests failed: ' + failedCount);\n  await testcafe.close();\n  return;\n});\n\n}\nconst runAllBrowsers = async () => {\n  for (const browser of browsers) {\n    await runTest(browser);\n  }\n}\n```\nAdjust the browsers array to include the browsers you want to execute your tests against. The array may be a list of strings, or arrays containing browsers to run parallel. In my case, I can reliably run against 2-3 browsers synchronously. . ",
    "awilkins": "Here's a repo that demonstrates the bug : \nhttps://github.com/awilkins/testcafe-bug-2500\nRunning this produces a similar stack trace to above.\nyarn install\nyarn jest\n. ",
    "HopefulLlama": "I have used TestCafe before and like the simplicity in setup and API.\nHence I therefore wanted to use it to automate some forum activity. The testing part is not important to me in this case. \nI could kludge it by having this code inside a test fixture, but it will always pass.. Is there any progress on this request?. ",
    "pendenaor": "One use case in this repo, but this feature would greatly simplify it.. ",
    "LitterBeach": "HI, I am wondering if you guys have an estimate time on how soon will this issue being addressed?Thank you.. ",
    "RJ05": "came to realise the work around, skipping the JavaScript errors with -e\n. came to realise the work around, skipping the JavaScript errors with -e\n. ",
    "amidongarrett": "Closed accidentally while trying to make another comment...\nSorry for all the edits/updates to this issue. I ran the test with multiple different setups to find out if it was the OS or the browser that was causing the issue. As result, when I was creating screenshots and pasting my errors, they did not align correctly. . ",
    "Mihai0909": "Hello, here is a screen shot of the page I'm automating: \n\n. Thank you very much for your response. Works perfect now. We are going to migrate from Selenium Webdriver with Java to TestCafe. Keep up the good work and thanks for the prompt answers.. ",
    "annemarie35": "Hi,\nI have quite the same problem.\nI use RequestLogger & RequestMock\nIn the test, the request http://localhost/users is well intercepted by RequestMock but RequestLogger doesn't return the response\njs\nconst mock = RequestMock()\n.onRequestTo('http://localhost/users')\n.respond((req, res) => {\n      res.statusCode = '200'\n      res.setBody('fakeBody')\n      console.log('res in RequestMock', res)\n  })\nif console log res i see \nbash\nres in RequestMock { headers: { 'content-type': 'text/html; charset=utf-8' },\n  trailers: {},\n  statusCode: '200',\n  setBody: [Function],\n  _body: 'fakeBody' }\nIn the test \njs\n  console.log('------- logger -----', logger.requests[0])\nwill return \nbash\n{ id: '0i8Nf2uxH',\n  testRunId: 'q_7j0AMLy',\n  userAgent: 'HeadlessChrome 67.0.3396 / Mac OS X 10.11.6',\n  request:\n   { url: 'http://localhost/users',\n     method: 'post',\n     body: '{\"publicName\":\"Public Name\",\"email\":\"fake email\",\"password\":\"pas\",\"contact_ok\":true}' } }\nwith no test.requestHooks(mock) logger logs that\njs\n{ id: 'XPJTj2mgo',\n  testRunId: 'RiReS9erh',\n  userAgent: 'HeadlessChrome 67.0.3396 / Mac OS X 10.11.6',\n  request:\n   { url: 'http://localhost/users',\n     method: 'post',\n     body: '{\"publicName\":\"Public Name\",\"email\":\"email fake\",\"password\":\"pas\",\"contact_ok\":true}' },\n  response:\n   { statusCode: 400,\n     body: '{\\n  \"email\": [\\n    \"Un compte li\\\\u00e9 \\\\u00e0 cet email existe d\\\\u00e9j\\\\u00e0\"\\n  ], \\n  \"password\": [\\n    \"Vous devez saisir au moins 8 caract\\\\u00e8res.\"\\n  ]\\n}\\n' } }\nI don't know if it is a bug \nwe use   \"testcafe\": \"^0.20.4\", \"react\": \"^0.14||^15.5.4||^16.1.1\",\nThank you :)\n. Thank you @MarinaRukavitsyna . ",
    "Lumca": "the path is C:\\Users\\verne\\Desktop\\FE\\src\\Tests\\test1.js\nI would love to help and create new github repo but I dont know how..\nI am FE tester with newely given chance to do e2e FE testing.. I want to learn JS with your program but cant get past the first test.. Still cant find the problem. Is the syntax right? what is the error? how can I fix the error? I someone here who have designed the process and could tell what does it mean and how to fix it? \nEDIT: Solved it.. i was used to webstorm that automatically saved.. its working now thanks for the help and sorry for stupid questions. ",
    "iswarya-voxy": "This is a much needed feature. Ability to run a particular category of tests using their meta data set on the test or the fixture. \nExample: test.meta({smoke: true, feature: true}) or fixture.meta({crud: read}) \nCommand to run only smoke tests : testcafe --meta \"smoke:true\" test \nCommand to run only read tests : testcafe --meta \"crud:read\" test \nor something similar.\nTestcafe version : 0.21.1\n. @NickCis Thanks for working on this feature request!\n@churkin  Could you please review this PR? This is a much needed feature for us. Thanks in advance!\n. @NickCis Thanks for working on this feature request!\n@churkin  Could you please review this PR? This is a much needed feature for us. Thanks in advance!\n. @churkin  Can you please review this PR?. ",
    "jafin": "Is there any way to use the filter when a test omits the meta tag.   ie\nif we execute test with --test-meta smoke=false\nand only have some tests marked up with test.meta(\"smoke\",\"true\")\nit would be useful to have all tests without the attribute to execute the test given they do not meet truthy.\n. ",
    "waquner": "Hi,\nI'm a colleague of @StanTheIV and quite new to TestCafe - so sorry for anything that's obvious anyway...\nIt seems to be a problem with prefetching. On the page prior the one that hangs, we use prefetch tags to cache the next page.\n\nIf there's enough time on the previous page, Chrome prefetches the next page\nChrome  seems to use Accept: */* instead of text/html or similar there\n\nExample:\n{ host: 'x.x.x.x:61160',\n  connection: 'keep-alive',\n  purpose: 'prefetch',\n  'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36',\n  accept: '*/*',\n  referer: 'http://x.x.x.x:61160/xxxxxxxxx/https://durchblicker.at/strom/vergleich/ergebnis/aktionen',\n  'accept-encoding': 'gzip, deflate',\n  'accept-language': 'de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7' }\n- isPage is then set to false @ testcafe-hammerhead/lib/request-pipeline/context.js\n- HTML is proxied through without changes\n- and so hammerhead.js & others are not injected\n- for the real page request (now with Accept: text/html...) the cached content is used (so again without hammerhead)\n- --> site crashes because hammerhead.js (and others) are missing but other proxied .js files refer to variables declared in hammerhead.js\nMaybe you could determine if isPage should be true only using the response headers in case of Purpose: prefetch\nHope that helps!. ",
    "josephj": "@PriyoBh \nThe selector you mentioned is inside the the dynamic generated iframe. So you have to wait and switch context. \nhttp://devexpress.github.io/testcafe/documentation/test-api/working-with-iframes.html. ",
    "rpolishetti": "I got this issue. Not throwing exception, instead testing will be continued with null value. @AndreyBelym \nGot your point about exceptions. But I expected error as per documents, it throws error after timeout specified with Selector API options,  when we try to select DOM element. Instead I observed like, test just continues. When I wait for visible property on Selector promise, I got the real waiting for element. I just used like below.\nconst elToWait = await Selector('#elementId', {timeout: 20000, visibilityCheck: true}).visible;\nWith this step it is working as expected.\n. ",
    "biot023": "Oh, good grief! Thanks @miherlosev !\nI've not done any JS programming for a month or so -- my apologies!. ",
    "s-a": "This works with testcaf\u00e9 docker image using chromium. I guess I missed some dependencies regarding to headless chrome usage.. ",
    "apiel": "myAction could be for example login(), right now we use a utility function:\nconst login (t) =>\n    t\n        .typeText(loginPage.nameInput, 'hello@world.com')\n        .typeText(loginPage.passwordInput, 'hello')\n        .click(loginPage.loginButton);\nIt would be great that instead to call:\nlogin(t).expect(...).ok();\nWe could do:\nt.login().expect(...).ok();\nOf course, for the case of login, we can use beforeEach(...) but in some other case it's not possible.\n. ",
    "jburgs": "the output is 0.20.4. chromium:headless does not throw the warning and takes the screenshot as expected with screenshotPath value filled in. i found that my package.json file still had testcafe version 0.20.3 defined in it.  Updated the package file to match the version in the docker container and i don't see the warning  anymore the screenshotPath value is filled in. ",
    "dsayerjp": "Hi @AndreyBelym, thanks for your response. I've managed to get this working. . ",
    "gaborari": "I faced the same issue:\n- navigating to my site\n- the site navigates to login page\n  (the login method uses cookies - IdentityServer)\n- type email address\n- then due to the missing cookies, I get unauthorized response\nAnd I cannot see any required cookies in request. ",
    "hiruthre": "Thanks Andrey.... Since webpage is confidential and can't share in public. \nThe webpage contains the following components\n1. Main URL\n2. Left Menus\n3. iframe (in which __fnLoadScreen URL will be load based on onclick action).\nEach Menu is having onclick action with __fnLoadScreen(URL). whenever a user clicks on a menu, the system appends fnLoadScreen URL with the main URL and load the screen in an iframe.. Since webpage is confidential and can't share in public. \nThe webpage contains the following components\n1. Main URL\n2. Left Menus\n3. iframe (in which __fnLoadScreen URL will be load based on onclick action).\nEach Menu is having onclick action with __fnLoadScreen(URL). whenever a user clicks on a menu, the system appends fnLoadScreen URL with the main URL and load the screen in an iframe.. Alex,\nI am able to click link using the selector. Since selector changes based on the menu configuration i.e. position of a menu. However onclick action is constant even though position change.. Hence I want to click menu based on onclick action attribute rather than using selector.. Alex,\nI am able to click link using the selector. Since selector changes based on the menu configuration i.e. position of a menu. However onclick action is constant even though position change.. Hence I want to click menu based on onclick action attribute rather than using selector.. Alex, am able to click menu using attribute selector.  Thanks... Alex, am able to click menu using attribute selector.  Thanks... Hi Alex,\nThanks for response... See below givens link of DOM section...\n[Inside Frame Alert] - (https://user-images.githubusercontent.com/38807053/47577289-1d84ce80-d964-11e8-9028-c9f3193e742b.png)\n[Outside Frame Alert] - (https://user-images.githubusercontent.com/38807053/47577292-1fe72880-d964-11e8-8cfb-5e683a5d42e5.png)\n. Application URL is restricted... However below in brief idea of application\n\nMain URL through which takes login\n\nAfter login, have left side menu which have Onclick actions \nfor ex:\n< a class=\"waves-effect waves-cyan active\" href=\"#\" onclick=\"javascript:__fnLoadScreen('Bodm/Layout?mode=CUD');\" title=\"User Master\">< i class=\"mdi-action-view-carousel\">< /i>User Master< /a>\n\n\nOn clicking link, it loads above mentioned onclick action page under iframe.\n\nAfter filling all details, user clicks on Submit button\nBelow are two different behaviour after clicking Submit button\n\na. Outside Frame Alert - \n    i. for some of menu's, Success message displayed under alert DIV element which is outside iframe\n   ii. Able to validate that also using getNativeDialogHistory\nb. Inside Frame Alert - \n    i. for some of menu's, Success message displayed under alert DIV element which is inside iframe\n   ii. Not able to validate that also using getNativeDialogHistory\nhave set t.setNativeDialogHandler as below\nawait t.setNativeDialogHandler(function(type,text,url){\n    return false\n}\ncatching alert message using below code\nvar history = await t.t.setNativeDialogHistory();\nIf(history.length!=0)\n{\n    if( history[0].text.trim() = = testdata.trim() )\n    {\n      Status = \"Pass\"\n    }\n   else\n  {\n     Status = \"Fail\"\n  }\n}\nOnly different what I observed is, \n1. alert which is inside frame is in Red color and it's displayed during execution even though setNativeDialogHandler set to false. Hence not able to verify..\n2. alert which is outside frame is in Green color and it's not displayed during execution even though setNativeDialogHandler set to false. Hence able to verify... Thanks for the response Alex.... \nWant to know which URL i need to pass in below code\ntest.requestHooks(new MyHook('https://codeload.github.com/AlexKamaev/match-url-wildcard/zip/master', {\nFollowing is scenario\n1. Open main URL and goto transaction screen\n2. Click on detail link\n3. System opens popup with details\n4. In detail popup, have 'Export' button\n5. Click 'Export' button to download file...\nCurrently, I am passing popup URL in requestHooks but no luck...\nKindly advise.... ",
    "BharathiRanga": "The issue is resolved now - it was not a test cafe issue - it was a bug in the application (Java script error) that broke the test . ",
    "ericorruption": "I tested as low as node v6 and as high as v10 and it fails there too.. Using the flag --skip-js-errors works. So I assume this is a problem on the tested pages.. ",
    "pranshu1995": "Hi @AndreyBelym Please share your Email ID on which I can share the required information.\nSorry I can't share it publicly since it is a Company's project.\nThanks. ",
    "trodrigues": "Oh! I saw opn in the dependencies and assumed it was used for that.\nIs there anything else I can do to debug this further or provide more information on the issue?. By the way, there is a separate issue with Edge which seems to happen also only on the Insider Preview, as I'm able to run the same tests with no problems on Browserstack.\nThe problem is essentially that when I run the test the cursor shown by testcafe seems to move super slow, as if I'd set the test speed to 0.1 (I can record video of it if necessary). Given that this is an Insider Preview I'm not sure if I should open an issue here yet or not. Should I open a separate issue to track that?. @AndreyBelym done! https://github.com/DevExpress/testcafe/issues/2598. Hi @AndreyBelym! I haven't tried it yet, but I noticed the RS5 update came out last week so I'll try and find some time to give it another go.. I just tried this on Windows build 17713.1002 with Edge's 43.17713.1000.0 and with Testcafe's 0.21.1 and the problem still persists.. ",
    "krnlde": "The windows release RS5 (17723) solved it for me. Can anyone confirm?. ",
    "b1tzer0": "I am having the same issue when attempting to do a click event with Microsoft Edge\nWindows 10 Pro\nVersion 1809\nBuild 17763.55\nEdge: 44.17763.1.0\nEdgeHTML: 18.17763\nTestCafe Studio: 0.3.0. ",
    "ErikHellman": "I forgot to mention that the window closes, but the process remains running. This is currently blocking me from adapting TestCafe.. ",
    "srijitdas8": "Hi Guys....Any luck with the issue. Appreciate your help...Thanks . ",
    "edenadler": "Hi @AlexKamaev and @AndreyBelym, since upgrading from version 0.20.5 to 0.21.1 I suddenly started experiencing the same issue as #2450. This seems to be a new issue as of the newer versions, because on version 0.20.5 this was not a problem. In 0.20.5, it would scroll to avoid the fixed element, but I don't see that same scrolling behavior happening in 0.21.1.. Hi @AlexKamaev. I'm not able to share the test page and file, but I found a solution to the problem. The problem was that it is only scrolling horizontally but not vertically. I can submit a pull request for it. Since #2450 is already closed, let me know what ID I should submit it with.. @AlexKamaev PR submitted https://github.com/DevExpress/testcafe/pull/2812. ",
    "no-response[bot]": "This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. This issue has been automatically closed because there has been no response to our request for more information from the original author. With only the information that is currently in the issue, we don't have enough information to take action. Please reach out if you have or find the answers we need so that we can investigate further.\n. ",
    "jeremycy": "I am having similar issue here - clientFunction scrollby does not work for me, but I can get by from doing either resizeWindow or call hover with offset but should not be the permanent solution though.. ",
    "marchcorpse": "@AndreyBelym, hi!\nWhat do you mean? System language? Russian.\nWhen i try to execute\nchcp 65001\nI get this:\nchcp : The term 'chcp' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ chcp 65001\n+ ~~~~\n+ CategoryInfo          : ObjectNotFound: (chcp:String) [], CommandNotFoundException\n+ FullyQualifiedErrorId : CommandNotFoundException\n. The solution from this thread(with some changes) helped and tests running successfully.\nThank you!. ",
    "dbschwartz": "So I figured out how to fix it.  Thanks to help from https://github.com/DevExpress/testcafe/issues/1633\nIf I used the --hostname parameter with localhost it seems to work in IE and edge ala\nbash\nnpx testcafe -e ie --hostname localhost tests/specs/\nbash\nnpx testcafe -e edge --hostname localhost tests/specs/\nProbably something to do with my network settings.. Hi @AndreyBelym ,\nThank you so much for your response.  I don't think the Chrome background tabs throttling feature is the issue, because I tried the tests in concurrency with Firefox and was getting the same problems.  \nWhat's strange is that concurrency works if testing is simple. I tried to run concurrency with just one test file and it worked fine.  This made me think that maybe the problem was happening when I ran concurrency on multiple tests that were multiple folders\nThis inspired me to reproduce the problem in a demoable repo (there is a link below), which I made  by copying and pasting multiple instances of the TestCafe example tests in reptitive files and folders. Everything was still working fine at that point.\nAt this point I wanted to make these fake tests more like my real ones by adding Roles and testcafe-vue-selectors because I thought the problem might be coming from there.\nI added two roles which almost caused the problem, because the test statuses only updated after everything was finished, but the tests still finished and closed at the end.\nHowever once I added a test-cafe-vue-selector it produced the same problem that I've been having.  Essentially all the tests run, but the status of the first and second tests are the only ones that appear in the console.  After all the tests run, the concurrent instances become infinitely idle and never close.  I am running 4 concurrent instances by-the-way \nSo I think the problem is with the latest version of TestCafe (0.23.1) and testcafe-vue-selectors.\nI pushed up the code to my GitHub, https://github.com/dbschwartz/test-cafe-error-demo.  \nPlease clone the repo and run npm test to reproduce.\nLet me know if there is anything else I can do to clarify.  I love TestCafe and all that you guys do.  Thanks for making such an awesome product.\n-Dave. My pleasure!\nWhat's interesting here though is if you run these tests with Test Cafe v 0.22.0, everything finishes.   This repo illustrates problems with my current tests because they run concurrently in v 0.22.0 with -c 4 without a hitch, but they become problematic when run concurrently with TestCafe 0.32.1 with -c -4.\nI made another repo with everything being same except using Test Cafe v 0.22.0 that runs in a stable state with 4 concurrent instances if you'd like to check it out:  https://github.com/dbschwartz/test-cafe-error-demo-stable\nNote the test statuses take about 45 seconds before they start updating, but they eventually do and everything finishes and closes as normal.\nMy guess is that maybe there was some new server code introduced that might have lent itself to this.  Perhaps it's related to handling the unhandled promise rejection errors that were happening in concurrency before.  Again just a guess.\nWhen I have use concurrency in other applications, its usually recommended to somewhat match instances with the number of cores on the machine, maybe using one less, i.e. If there are 7 cores, use  6 instances, etc.. I have been testing on machines with more than 4 processors.  Should Test Cafe be run fairly conservatively with concurrency?\nThank you so much for all your help!  \n. Apologies if you recently cloned the repo, my changes weren't pushed till now.  The other abnormal thing I realized is that with v 0.23.1 it seems only 2 of the concurrent instances are actually being used during the test execution.  The other 2 just seem to be idle on the Test Cafe example page for most of the test run without any actions, commands, assertions being run.  Granted this isn't the ideal scenario, but still strange none-the-less.  This does not happen in v 0.22.0\nAlso correction above, the test statuses when run in TestCafe v0.22.0 take about 45 seconds to a minute to update. Also, after I run concurrency with -c -4 in v 0.22.0 I also get the following:\n(node:15240) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit\nThis is just a warning, but might concern some users.  Maybe those who use concurrency should increase their max listeners in Node.\n. @AndreyBelym @miherlosev \nI believe this is a bug not a feature request.  If you run the tests of my demo repo with testcafe v0.22.0  with 4 concurrent instances it works fine as noted above. This is what is in my test-cafe-error-demo-stable repo, a la: https://github.com/dbschwartz/test-cafe-error-demo-stable.  Just run npm test, it will run with 4 instances.  It takes about a minute, but should run normally, exit and have statuses, etc. Concurrency was a feature of test cafe that I really enjoyed, I hope that it continues to be maintained.. Yes!! I tried it!  Looks great!!  Only thing I might want to add is these two tests seem to be failing randomly in some runs and passing in others.  They fail on testcafe 0.22.0 too now and weren't failing before so I don't think it's due to a bug in the package.  I think perhaps maybe the Test Cafe Example site was updated (https://devexpress.github.io/testcafe/example/).  Might just want to update your tests to reflect the change.  Minor, but just wanted to let you know.  Thanks again for all your help! Love this software.\n\n. ",
    "lsklyut": "I dug into the testcafe source to see if I can help contribute to make these changes. I found the line which throws the exception, but commenting it out only causes the test runner to fail further down the call stack. Something that is collecting the tests is doing so incorrectly, I think? \nI am at a point where I want to run testcafe from my cloned version of the repo rather than the one installed via NPM (so I can debug through it). The problem is that bin/testcafe.js requires ../lib/cli but that file does not exist for me locally. I guess I need to build the project with gulp but it's failing for me locally. I'll keep digging and have a look at the travis builds to see how the project needs to be built correctly.. Thanks for pointing me in the right direction @AndreyBelym !. ",
    "cmaree": "all sorted out, thanks!. ",
    "kennychua": "any leads for fixing this issue? I'd be interested in picking this up if you think this is easy enough to understand -- I'm new to the testcafe codebase. ",
    "gudoy": "We faced the same issue. After struggling a couple of hours try to find why this didn't work, I found a reference to this issue.\nIf you do not intend to fix this for the moment, it would be nice at least to edit the document here to mark the url prop as read-only.. ",
    "evayde": "Works for me on Windows 10 with node 8.11.2 and testcafe 0.20.5. ",
    "Ventajou": "@AndreyBelym I've updated the version numbers above. I tried the same code on my other computer and it worked fine there. The Node version is different so I'm going to try and upgrade here just in case.. Here's an update after digging up some more, I ran across https://github.com/GoogleChrome/chrome-launcher/issues/11 which talks about running as admin. I typically use an admin prompt and when I tried as a regular user the test ran correctly.. ",
    "ColCh": "Hi @LavrovArtem \nupdated to v10.7.0, got same result... Tried with v10.5.0 as well\nI throws after testcafe starts. It seems that it tries to proxy websocket request and fails because of that.\nCRA uses websockets with webpack-dev-server.\nHow can I get more information about this issue? It's pretty random. oh sorry, with v10.5.0 works nicely, my bad\nit seems that using specified nodejs version resolved my issue\nThanks!. Let's reopen this and try to find why this happends\nAny idea out there?. Thank you @MarinaRukavitsyna !. ",
    "willgarcia": "I have the same issue with node v.10.5.0:\nError: read ECONNRESET\n    at TCP.onread (net.js:656:25)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 7\nnpm ERR! e2e@1.0.0 test: `testcafe --hostname localhost chrome ./src`\nnpm ERR! Exit status 7\nnpm ERR!\nnpm ERR! Failed at the e2e@1.0.0 test script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.. @miherlosev TestCafe version 0.20.5. ",
    "TokaLazy": "I've the same issue.\nnode: 10.8.0\ntestcafe: 0.21.1. ",
    "GeoffreyBooth": "\nWhich features are important for you in CoffeeScript that can\u2019t be found in ES6 and TypeScript?\n\nCoffeeScript provides a cleaner syntax that many people find easier to read. Compare this file to this file, for example. Code that\u2019s more concise is often easier to follow, which helps lead to fewer bugs.\n\nDo you believe there will be many TestCafe users who would prefer to write E2E tests using the CoffeeScript syntax? Have you heard from any of your colleagues or acquaintances about such a desire?\n\nI want to write tests in CoffeeScript because I have an entire app written in CoffeeScript, and I want to keep all my code in the same language. I don\u2019t think this is that uncommon of a use case. I work on a team at a big company, and we\u2019ve written several large apps in CoffeeScript.. @AndreyBelym Any thoughts on this? Here\u2019s an article to help explain the state of CoffeeScript today: https://codeburst.io/why-coffeescript-is-still-alive-aeb369b91b85\nAlso, Cypress is written in CoffeeScript: https://github.com/cypress-io/cypress \ud83d\ude09. ",
    "patrykkopycinski": "@aboe026 TestCafe is using its own config to transform client code https://github.com/DevExpress/testcafe/blob/d7db4374b16bb95f1e29bf637a2973178afdfe1e/src/compiler/compile-client-function.js#L68\nSo, in this case, your .babelrc isn't going to be used at all. I can see 2 options:\n1) Precompile your tests files with babel and then run testcafe using these files\n2) Skip using aliases in test files. Compile tests to temporary dir:\n\"build:tests:browser\": babel tests/browser --output-dir tests/browser_tmp\nCleanup temporary dir:\n\"cleanup:tests:browser\": rimraf tests/browser_tmp\nAdd it to test:\n\"test\": \"npm run lint && npm run test:unit && npm run test:func && npm run build:tests:browser && npm run test:browser:chrome && npm run test:browser:firefox && npm run clean:tests:browser\"\nPS. rimraf is a package that you have to install from npm. Don't think it's possible now. Maybe after migration to babel@7 that allows for easier merging babel configs. But you should ask somebody from the TestCafe team. ",
    "aboe026": "@patrykkopycinski thanks for the workarounds! I'm fairly new to testcafe, so is there a plug in that might do what I'm after? Or would it be and easy thing to write a plug in to do? . @patrykkopycinski yep I got that. But would there be some way to have testcafe pick up an external babel config file that it can append to its internal one when doing the compilation? . @patrykkopycinski ok. Do you know how to contact the TestCafe team? . Thanks @AndreyBelym. I've actually decided to run my app outside the context of the TestCafe image and have the tests take an environment variable to point the URL where the tests are actually running. . Thanks @AndreyBelym. I've actually decided to run my app outside the context of the TestCafe image and have the tests take an environment variable to point the URL where the tests are actually running. . @istvandesign No I have not tried an explicit wait before the refresh. What effect would that have? It seems like the cookie is correctly saved before the refresh already.. @miherlosev I was able to get past the issue by running the tests on a faster PC. It seems that you were right when you mentioned it was performance related. Thanks for your help!. @miherlosev I've invited you to be a collaborator for the repository I saw this error with. Check out the display-cookie branch, the Jenkinsfile in there has the format of how I run testcafe using the docker image. Let me know if you have any questions.. https://github.com/aboe026/mygellyn. ",
    "Asher-": "Why does this seem to be standard practice on ES6 projects? ES6 code should never, ever, under any circumstances whatsoever, be tested under a transpilation environment. Only once ES6 code is working should any consideration of transpilation be considered at all. In no situation should the default cause transpilation. \nIf the transpiler works, so will the transpiled code (assuming it passes tests prior to transpilation). Testing under transpilation should be a special case for use exclusively prior to final deployment.. Uh, false. Did you bother read the issue? Apparently not.\nIt is not \u201cclearly\u201d the case that compilation is required. It is ES6 code, which means exactly the opposite. No compilation should happen if testing is occurring in a modern browser. Transpilation should only occur if required. Testing ES6 code in an ES5 environment is profoundly stupid to say the least. \nThe issue, which is Testcafe and has nothing whatsoever to do with mixwith (which was an arbitrary example), is that simply including code from node_modules forces compilation even when it should not.\nYou should read the content of the issue reports before being a dick.. ",
    "Viperwow": "In my opinion, it would be great to support the custom compilation configurations. Because it opens much more options for developers in supporting the only features they need without limitations.. ",
    "pbiggar": "Can you also support the ClipboardEvent API? This provides another (in some cases simpler) way of accessing the APIs. https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent\n(Side note: does your workaround support ClipboardEvents?). To clarify, we run testcafe from a script, and so users do not independently choose these. I suspect that many folks use testing tools from scripts and not just at the command line, so I do feel this could be more common than you suppose.. ",
    "andrewlw89": "Hey @LavrovArtem,\nThanks for linking that issue. They definitely seem similar.\nAt first glance, it looks to me like an error in how the namedItem() method is being implemented for the wrappers that go around the native selector methods (https://github.com/DevExpress/testcafe-hammerhead/blob/master/src/client/sandbox/node/live-node-list/wrapper.js). That would normally allow for this lookup by string rather than by index.\nI was wondering if you might be able to provide an update into the issue you linked to above and where it stands with regards to a solution. I'm currently looking into this issue as well and would be happy to offer some sort of collaboration with you guys if that would help reach a solution.\nThanks!. @LavrovArtem while playing around with this, it looks like testcafe already supports using namedItem with standard dot notation. I believe the main issue here is that bracket syntax was never implemented.\nExample 1 (works): document.getElementsByTagName('meta').namedItem('csrf-token')\nExample 2 (fails): document.getElementsByTagName('meta')['csrf-token']\nThe bottom syntax should work identical to the top but returns undefined instead.. ",
    "gelyar67": "Thanks @LavrovArtem.  My issue is fixed after updating testcafe to version 0.21.0. ",
    "RomeroDiver": "Hi,\nis there any progress with this? . ",
    "raja1313": "Hi @AndreyBelym, The time varies for every run of test cases.\nFor Example: In my case, The button only displayed when the status got 200. Here I wanna wait for the button to be visible and then click, But testcafe doesn't wait for too much of time, How can I handle for this situations?\nThanks in advance!\n. Hey Andrey:\nYep, Sure thing!\nCheers! Have a great day.\nOn Thu, Sep 6, 2018 at 12:29 PM, Andrey Churkin notifications@github.com\nwrote:\n\nHi @raja1313 https://github.com/raja1313,\nUnfortunately, we do not have built-in functionality to check code\ncoverage. But, I think it is a good idea, we should think about this, thank\nyou.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2778#issuecomment-418986453,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AbhJb1B14vaki7J1aZtRznQsnbKpbUACks5uYMfJgaJpZM4WPDWm\n.\n\n\n-- \n---Warm Regards,\nRaja Ganesh.R\nTeam Lead - Quality Assurance & Quality Control.\nCogzidel Technologies Pvt Ltd.\nCONFIDENTIAL NOTICE\nThis e-mail and any files transmitted with it may contain PRIVILEGED or\nCONFIDENTIAL information and may be read or used only by the intended\nrecipient. If you are not the intended recipient of the e-mail or any of\nits attachments, please be advised that you have received this e-mail in\nerror and that any use, dissemination, distribution, forwarding, printing,\nor copying of this e-mail or any attached files is strictly prohibited. If\nyou have received this e-mail in error, please immediately purge it and all\nattachments and notify the sender by reply e-mail\n. Hello Andrey:\nI got one question for you!\nHelp me out! How to check the flash message by using Testcafe. And one\nthing that popup doesn't have any ID or Class then how should I write the\nscript for that scenario.\nI have attached the snapshot given below. Kindly check it out\nThanks in advance!\nOn Thu, Sep 6, 2018 at 12:29 PM, Andrey Churkin notifications@github.com\nwrote:\n\nHi @raja1313 https://github.com/raja1313,\nUnfortunately, we do not have built-in functionality to check code\ncoverage. But, I think it is a good idea, we should think about this, thank\nyou.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2778#issuecomment-418986453,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AbhJb1B14vaki7J1aZtRznQsnbKpbUACks5uYMfJgaJpZM4WPDWm\n.\n\n\n-- \n---Warm Regards,\nRaja Ganesh.R\nTeam Lead - Quality Assurance & Quality Control.\nCogzidel Technologies Pvt Ltd.\nCONFIDENTIAL NOTICE\nThis e-mail and any files transmitted with it may contain PRIVILEGED or\nCONFIDENTIAL information and may be read or used only by the intended\nrecipient. If you are not the intended recipient of the e-mail or any of\nits attachments, please be advised that you have received this e-mail in\nerror and that any use, dissemination, distribution, forwarding, printing,\nor copying of this e-mail or any attached files is strictly prohibited. If\nyou have received this e-mail in error, please immediately purge it and all\nattachments and notify the sender by reply e-mail\n. ",
    "emildimitrov": "Rolling back to 0.19.2 fixes it, but i'm losing meta features. Hi @AndreyBelym with and without protocol its the same. Since 0.19.2 this functionality is broken. I tried all the releases since then. If this is helpful the runner shows a blank white screen after the waiting for the page and fails on finding elements on the page, but if untill the runner is waiting i refresh the url test gets executed properly. For example if i just refresh with \"http://localhost:1336/IwUTCEFJI/https://desktop.ttqa4.xyz/register\" the runner executes ok, but if i let it execute by itslef it fails on a white page after page loading complete. Thanks a lot @LavrovArtem . ",
    "markselby9": "Hi @miherlosev , I've tried your workaround but still returns 222 unknown response code.\nMy code:\n```js\nimport {Selector, RequestMock} from 'testcafe';\nconst mock = RequestMock()\n  .onRequestTo('http://localhost/api/1.0/login/')\n  .respond((req, res) => { // a custom response\n    res.headers[\"content-type\"] = \"application/json;charset=UTF-8\";\n    res.headers[\"access-control-allow-credentials\"] = 'true';\n    res.headers[\"access-control-allow-origin\"] = \"*\";\n    res.headers[\"access-control-allow-methods\"] = \"POST, GET, OPTIONS\";\n    res.headers[\"access-control-allow-headers\"] = \"X-Requested-With\";\n    res.headers[\"access-control-allow-headerx-frame-options\"] = \"SAMEORIGIN\";\n    res.statusCode = 200;\n    res.setBody('test');\n    console.log(res);\n  });\nfixture(Index page)\n  .page('http://localhost:8081')\n  .requestHooks(mock);\ntest('login', async t => {\n  await t\n    .typeText(Selector('#login-username'), 'test-user')\n    .pressKey('tab')\n    .typeText(Selector('#login-password'), 'test-pwd')\n    .click(Selector('#login-submit-btn'))\n    .click(Selector('.user-avatar'));\n});\n```\nWhat I see in testcafe-live:\n\n\nAs you can see, the /login request still returns 222. The response headers are not shown in Chrome debugger. Please kindly have a look.\nThank you!. Hi @miherlosev @xipengyang , just resolved this issue by changing the code to:\n```\nimport {Selector, RequestMock} from 'testcafe';\nimport _ from 'lodash';\nconst mock = RequestMock()\n  .onRequestTo('http://localhost/api/1.0/login/')\n  .respond((req, res) => { // a custom response\n    res.headers[\"content-type\"] = \"application/json;charset=UTF-8\";\n    res.headers[\"access-control-allow-credentials\"] = 'true';\n    res.headers[\"access-control-allow-origin\"] = [\"http://localhost:8081\", \"http://10.66.4.170:52399\"];\n    res.headers[\"access-control-allow-methods\"] = \"POST, GET, OPTIONS\";\n    res.headers[\"access-control-allow-headers\"] = \"X-Requested-With\";\n    res.headers[\"access-control-allow-headerx-frame-options\"] = \"SAMEORIGIN\";\n    res.statusCode = 200;\n    res.setBody({\n        \"status\": \"success\",\n        \"jwt_token\": \"233\",\n        \"message\": \"login success\",\n        \"role\": \"ADMIN\"\n      });\n// for debug\nconst reqOrigin = 'http://localhost:8081';\nconst allowOriginHeader      = res.headers['access-control-allow-origin'];\nconst allowCredentialsHeader = res.headers['access-control-allow-credentials'];\nconst allowCredentials       = String(allowCredentialsHeader).toLowerCase() === 'true';\nconst allowedOrigins         = _.castArray(allowOriginHeader);\nconst wildcardAllowed        = allowedOrigins.includes('*');\nlet result = true;\n\n// FAILED: Destination server doesn't provide the Access-Control-Allow-Origin header.\n// So cross-domain requests are denied\nif (!allowOriginHeader)\n  result = false;\nconsole.log('result', result);\n\n// FAILED: Credentialed requests are not allowed or wild carding was used\n// for the allowed origin (credentialed requests should specify the exact domain).\nif (!allowCredentials || wildcardAllowed)\n  result =  false;\nconsole.log('result', result);\n\n// FINAL CHECK: The request origin should match one of the allowed origins.\nresult = wildcardAllowed || allowedOrigins.includes(reqOrigin);\nconsole.log('result', result);\n\n});\n// A fixture must be created for each group of tests.\nfixture(Index page)\n  .page('http://localhost:8081')\n  .requestHooks(mock);\ntest('login', async t => {\n  await t\n    .typeText(Selector('#login-username'), 'test-user')\n    .pressKey('tab')\n    .typeText(Selector('#login-password'), 'test-pwd')\n    .click(Selector('#login-submit-btn'))\n    .click(Selector('.user-avatar'));\n});\n``\nI think the main causes are:\n1.res.headers[\"access-control-allow-credentials\"]need to keep lower letters when setting headers\n2. Instead of using wildcard, use specific origins inres.headers[\"access-control-allow-origin\"] = [\"http://localhost:8081\", \"http://10.66.4.170:52399\"]`\nThank you for your help!\n. ",
    "xipengyang": "Hi @markselby9 \nYou may want to check the following file:\nhttps://github.com/DevExpress/testcafe-hammerhead/blob/master/src/request-pipeline/xhr/same-origin-policy.js\nThere are a few origin policy checks for xhr requests.\nIn my case, I have a credentialed request with the allow-origin header set as '*'.   and the request returns 222 because wild carding is not allowed for credentialed requests. ",
    "noamaankhan": "Is there any plan to support objects types as parameter for the function setBody?. ",
    "ricovitch": "Sorry i can not give access to our apps/apis.\nBasically, what i observe is that the RequestLogger instance 'requests' array does not allow to access a particular logged request by it's index if there are multiple logged requests.\nIn the case of multiple logged requests, i thought i could make assertions on the last logged one by getting it from this array, but that does not work like it should.\nI think any test with multiple logged request should allow to reproduce this problem.\nJust try to access the latest logged request at the end of the test by getting it from the array.. OK i'll try to isolate problem.. Sorry for the delay. Back from holidays we had a fresh look at this on our side.\nIt seems this relates to a misunderstanding of us about Smart Assertion Query Mechanism.\nWe where not waiting for logger.count() assertion to update before asserting on logger.requests property.\nSo for future understanding, this does not work\nawait t.click(filters.resetButton);\nconst lastRequest = logger.requests[1];\nAnd this work\nawait t.click(filters.resetButton)\n  .expect(logger.count(() => true)).eql(2);\nconst lastRequest = logger.requests[1];. ",
    "nabeenj": "@MarinaRukavitsyna \nYes, I wasn't sure where to post this question. There are three forums -\nThe DevExpress Support Center, where Marion (is that you?) has been helping us;\nThis github.com/DevExpress/testcafe forum; and\nThe stackoverflow.com/questions/tagged/testcafe forum\nThanks, will continue on the DevExpress Support Center forum.\nPlease let me know which one is the correct forum to post questions to and I will keep it to that one in future.\nMany thanks.. ",
    "ericyuri": "sorry, I am going to delete this post. it worked ! thank you Andrey . ",
    "dawiddylowicz": "Dockerfile:\n```\nFROM node:8.11.2-alpine\nhttps://github.com/facebook/flow/issues/3649\nRUN apk --no-cache add ca-certificates wget && \\\n  wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub && \\\n  wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.27-r0/glibc-2.27-r0.apk && \\\n  apk add glibc-2.27-r0.apk\ninstall latest Chromium for UI tests\nRUN apk add chromium --update-cache --repository http://nl.alpinelinux.org/alpine/edge/community && \\\n  rm -rf /var/cache/apk/*\nCOPY --chown=node:node package.json yarn.lock /usr/src/app/\nWORKDIR /usr/src/app\nUSER node\nRUN yarn install --frozen-lockfile\nCOPY --chown=node:node . .\nVanilla node doesn't contain all locales, but we can provide them at runtime.\nhttps://nodejs.org/api/intl.html#intl_providing_icu_data_at_runtime\nENV NODE_ICU_DATA=/usr/src/app/node_modules/full-icu\nENV NODE_ENV=production\nRUN yarn build\nEXPOSE 8080\nCMD [\"yarn\", \"start:prod\"]\n```. Thanks for investigating @AndreyBelym. I tried updating Dockerfile as suggested and it magically started working.\nRe:\n\nI don't think that it's possbile to mix packages from edge and 3.6 in a single installation.\n\ntechnically you can as per this command:\nRUN apk add chromium --update-cache --repository http://nl.alpinelinux.org/alpine/edge/community && \\\n  rm -rf /var/cache/apk/*\nbut possibly there's some dependency mismatch that caused the issue. Nevertheless, it works now!. ",
    "sambegin": "Go the same problem  : \n\nI was able to get the log in chrome directly when this happened : \n\nI tried with testcafe version 0.21.1 and rolled back to 0.20.5 and got the same problem (seems to be a free game tho). \nSpecify your\noperating system: macOS High Sierra v10.13.6\ntestcafe version: v0.21.1 or 0.20.5\nnode.js version: v10.3.0\nDo we have any news on this ? . I don't have a quick example to give right now, I'm not sure I'll have time to provide it to you today but quick question tho : \nWith the log I saw in chrome debug tool \"Cannot read property body of undefined\", does this PR is fixing the problem ? . @MarinaRukavitsyna \nI think you will be able to reproduce the problem easy enough by lunching a small app lunched by webpack (with node 10.5 and webpack 4 in my case). \nIf you need any information just tell me. I'll provide it to you real quick. We actually rely on testcafe in our CI pipeline and we are stuck right now because of this. \n. ",
    "DaAitch": "Here are my test results on Ubuntu.\nTo get a feeling how we use TestCafe:\n\nin fixture before(async t => ... we do a setup taking about 10s creating DB and starting server\nno concurrency\nusing screenshots\nabout 8 fixtures, 15 Tests at all\nfor this test, I only run one fixture with 9 Tests\n\nTest Results\nResult  Node    Debug               Browser         TestCafe\nfailed  10.7.0  chrome:headless     68.0.3440.75    0.20.0\nfailed  10.9.0  chrome:headless     68.0.3440.75    0.20.0\nfailed  10.7.0  chrome              68.0.3440.75    0.20.0\nfailed  10.9.0  chrome              68.0.3440.75    0.20.0\nok      10.7.0  firefox:headless    61.0.1          0.20.0\nok      10.9.0  firefox:headless    61.0.1          0.20.0\nok      10.7.0  firefox             61.0.1          0.20.0\nok      10.9.0  firefox             61.0.1          0.20.0\nfailed  10.7.0  chrome:headless     68.0.3440.75    0.21.1\nfailed  10.9.0  chrome:headless     68.0.3440.75    0.21.1\nfailed  10.7.0  chrome              68.0.3440.75    0.21.1\nfailed  10.9.0  chrome              68.0.3440.75    0.21.1\nok      10.7.0  firefox:headless    61.0.1          0.21.1\nok      10.9.0  firefox:headless    61.0.1          0.21.1\nok      10.7.0  firefox             61.0.1          0.21.1\nok      10.9.0  firefox             61.0.1          0.21.1\n\nerror rate of failed was about 80%-100%\nerror rate of ok was 0%\n\nFurther observations\n\nit's not a stable issue\nit's more likely to crash with chrome without headless mode\nvisually: TCP error only occurred on TestCafe starting page ...x.x.x.x:xyz/about:blank. Whenever it navigates to e.g. ...x.x.x.x:xyz/http://localhost:3000 in the test it continues running through\nTCP error occurs immediately after test-done of the test before at first or second TestCafe command\ncan't remember TCP error happening in between a test\nas far as I remember TCP error never occurred at the first tests, but maybe Test 5-8 out of 9\ndid maybe 30-40 tests switching browser, node version and test cafe versions: never got a TCP error with firefox\nfirefox sometimes get's disconnected to server at startup, when not having focus, but no TestCafe  crash\n\nConclusion\n\nuse Firefox if possible\nwe should investigate on the time slot when switching tests only in Chrome. \n",
    "aszegedi": "Hi,\nI'm still getting this issue:\n```\nevents.js:167\n      throw er; // Unhandled 'error' event\n      ^\nError: read ECONNRESET\n    at TCP.onStreamRead (internal/stream_base_commons.js:111:27)\nEmitted 'error' event at:\n    at Socket.onerror (_stream_readable.js:690:12)\n    at Socket.emit (events.js:182:13)\n    at Socket.EventEmitter.emit (domain.js:442:20)\n    at emitErrorNT (internal/streams/destroy.js:82:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nerror Command failed with exit code 1.\nERROR: \"test-runner\" exited with 1.\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\nTestCafe tests have done\nagainst:\nGoogle Chrome run options: {\"path\":\"/usr/bin/google-chrome\",\"cmd\":\"--disable-infobars --disable-session-crashed-bubble --no-first-run --new-window --enable-automation --enable-logging --v=1 --no-sandbox --disable-background-networking --disable-software-rasterizer --user-data-dir=\\\"browser-data/google-chrome\\\" --disable-web-security --disable-extensions --disable-default-apps --disable-notifications --disable-sync --disable-translate --disable-save-password-bubble --disable-session-crashed-bubble --hide-scrollbars --metrics-recording-only --mute-audio --no-first-run --safebrowsing-disable-auto-update --password-store=basic --ignore-certificate-errors --allow-insecure-localhost\",\"macOpenCmdTemplate\":\"open -n -a \\\"{{{path}}}\\\" --args {{{pageUrl}}} {{{cmd}}}\"}\nTestCafe test project: e2e\nTestCafe run options: {\"speed\":0.7,\"selectorTimeout\":80000,\"assertionTimeout\":120000,\"pageLoadTimeout\":60000,\"skipUncaughtErrors\":true}\n Running tests in:\nChrome 69.0.3497 / Linux 0.0.0\nNode version:  v10.11.0\nYarn version:  1.10.1\nTypescript version:  Version 3.1.1  and the TSC path:  /usr/local/bin/tsc\nTestCafe version:  0.22.0\n```\nThe issue seems the same as reported above.\nCould you help me out on this? Should I report this as a new and separate issue? \nP.S.:\nOur Docker image for executing GUI tests:\nhortonworks/cloud-web-testcafe:latest\ndocker run -i --privileged --rm --net=host --name testcafe-e2e-runner --env-file ./utils/e2e-testenvironment -v /var/lib/jenkins/jobs/gui-e2e-testcafe/workspace/web/****-ui/test:/testcafe/project -v /dev/shm:/dev/shm hortonworks/cloud-web-testcafe:latest yarn test\n. Thanks, Artem! Do you know a release date candidate for 0.22.1?. ",
    "mwhebert": "was a mistake - typing in wrong window. ",
    "marcusrc": "@testcafe-build-bot /retest. ",
    "okurichenko": "Will answer to myself on this: now it works if you split arguments to different strings like below\ndocker run --network host -v $(pwd)/testcafe:/tests -i testcafe/testcafe \"firefox\" \"-S\" \"/tests/*.js\". @miherlosev yes, that's totally clear now. Just saying that it worked 5 days ago with my command. Maybe it will be useful to someone. Thanks. ",
    "cullophid": "Thanks :). Same Issue on MacOS with firefox..\nWorks on:\nMacOS, Chrome\nWindows 10, chrome, firefox. I'll give that a try:). ",
    "olingern": "\nERROR The Chrome 69.0.3497 / Windows 10.0.0 (https://saucelabs.com/tests/8f118694cfe843da810b4030fd8e0606) browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n\nI'm seeing the same issue following the instructions from the test setup from sauce labs.\nThe tests run fine, but after the last test -- the test suite fails to close.\nI should note that I'm running testcafe from a child node process.\nPossibly related / similar: https://github.com/DevExpress/testcafe/issues/1493#ref-pullrequest-254296095. ",
    "dwightjack": "Thank you for the reply! Great work with TestCafe!. ",
    "Lupiano": "Great @AndreyBelym! Thanks!. Great @AndreyBelym ! Thank you very much!. Hi @AndreyBelym, yes the idea is to drag a file from an external application (mainly Windows Explorer).. Hello @AndreyBelym, any news regarding this? Thanks!. Thanks @AndreyBelym for your response! Ok, I'll wait for the feature and I'll try to give some help!. I think it is related to #2546 because with -u this bug disappears. Another detail is that the ones which fail with the \"Unhandled promise rejection\" error do not fail when executed isolated.. I'm getting this:\n{\"type\":\"externalAssertionLibraryError\",\"isTestCafeError\":true,\"callsite\":{\"filename\":\"[filePath]\",\"lineNum\":[someLine],\"callsiteFrameIdx\":6,\"stackFrames\":[{},{},{},{},{},{},{},{},{},{},{},{},{}],\"isV8Frames\":true},\"errMsg\":\"AssertionError: Some description: expected false to be truthy\"}\nIt is a simple assertion error on some Selector.\n. BTW @AlexKamaev is there a way to skip these errors by code? Thanks for your time!. Hello @AlexKamaev, currently I cannot show you the test page, and the test file is a bit complex because uses some page objects, but it's something like this:\nawait t.click(reportsPage.pendingTab).expect(reportsPage.pendingNameInput.exists).ok('The \"Name\" input for the \"Pending\" table should exist').expect(...).ok(...)... and the chain continues.\nThis fails because the \"reportsPage.pendingTab\" selector is not possible to click (the element is under some other div that makes not possible to click it). The input element that is expected to appear does not, so there is an assertion error:\n```\nAssertionError: The \"Name\" input for the \"Pending\" table should\n      exist: expected false to be truthy\n```\nThis is what generates the Unhandled Rejection errors in the other tests running in parallel.\n        . Sure @AlexKamaev, if you need me to help you with something just tell me. Thanks!. @AlexKamaev, yes that opens us a lot of possibilities. We will have to think a big refactoring. Thanks a lot for your time!. Hi @miherlosev , thanks for your response. I updated to that testcafe version, and the problem persists. We are running on a VM with Windows Server 2012 R2. The full stack trace is the following:\n(node:652) UnhandledPromiseRejectionWarning: Error: write EIO\n    at _errnoException (util.js:992:11)\n    at WriteStream.Socket._writeGeneric (net.js:764:25)\n    at WriteStream.Socket._write (net.js:783:8)\n    at doWrite (_stream_writable.js:397:12)\n    at writeOrBuffer (_stream_writable.js:383:5)\n    at WriteStream.Writable.write (_stream_writable.js:290:11)\n    at WriteStream.Socket.write (net.js:707:40)\n    at ReporterPluginHost.write (C:\\Users\\mberruti\\AppData\\Roaming\\npm\\node_modu\nles\\testcafe\\src\\reporter\\plugin-host.js:119:22)\n    at ReporterPluginHost.reportTestDone (C:\\Users\\mberruti\\AppData\\Roaming\\npm\\\nnode_modules\\testcafe\\node_modules\\testcafe-reporter-spec\\lib\\index.js:74:18)\n    at reportTestDone (C:\\Users\\mberruti\\AppData\\Roaming\\npm\\node_modules\\testca\nfe\\src\\reporter\\index.js:88:31)\n(node:652) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This e\nrror originated either by throwing inside of an async function without a catch b\nlock, or by rejecting a promise which was not handled with .catch(). (rejection\nid: 2)\n(node:652) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprec\nated. In the future, promise rejections that are not handled will terminate the\nNode.js process with a non-zero exit code.\nThe behavior that we are seeing is that at some point the code page is changed to 65001. The tests continue running, but the output is always the specified above.\n. BTW we are running on a Command Prompt. Hi @miherlosev \nYes, for that test example, the chcp is the same at the beginning and at the end. But at some point in our tests the chcp is changed and does not return to the previous state. Is that possible in some way?. ",
    "prototype23": "It seems the same happens for ie11\n\n. ",
    "stavalfi": "Thanks, @AndreyBelym.\nI'm using https://github.com/rquellh/testcafe-cucumber which runs TestCafe from within the code and not from the command line. Does it mean that I can't use remote browsers (as you suggested)?. ",
    "nabond240": "I've copied your version and tried it out, but I'm still getting the same result.  Please see \"yahoo error.txt\" below.  Are there any settings that need to be changed in the IE browser that may prevent this from occurring?\nI added a \"t.maximizeWindow();\", and at times it seems to work the 1st time, but executing the same exact code again will fail every time after.  Please see \"double execution.txt\" below.  Let me know if you need anything else.\nyahoo error.txt\ndouble execution.txt\n. It may be possible that it has to do with the connection to the internet that is established.  I noticed the issue only when connecting to a private network.  This issue does not occur when connected to a public network.\nI am still not sure why it works perfectly for Chrome and Firefox, and I am curious why it's reporting an \"Invalid character\" error message if it is related to my connection.. > I think it has something to do with web site under test. Our web site suffers same problem, but following code for todomvc works well.\n\njs\nfixture `TodoMVC`.page `http://todomvc.com/examples/react/#/`;\ntest(`Login`, t => t.typeText('.new-todo', 'temporary').wait(4000))\n\nThat is correct.  This issue doesn't happen for all websites.  The TodoMVC page works correctly for me as well, and Google works. So far I've seen the issue on our web site and the login.yahoo.com page.. > @link89, @nabond240, could you please install the testcafe@0.22.1-alpha.1 build and try it in your environment? We've implemented printing stack traces of JS errors in browsers, so it can give precise location where the error is created.\n@AndreyBelym I will give this a shot soon and let you know the results.. @AndreyBelym I tried the npm install testcafe@0.22.1-alpha.1 on my local machine and I received an error message.  Please see attached debug log.\n2018-09-14T00_47_24_794Z-debug.log\n. @link89 I'm just curious, are you going through a proxy as well when reproducing this issue?  Like I mentioned above, it seems to work fine at home, but when I'm using my job's connection, that's when I'm seeing this issue.. @AndreyBelym Thanks!  Yea, the Windows version just says \"Windows 10 Enterprise 2015 LTSB\" for me.  It's a version that prevents you from using MS Edge, and there might be some restrictions on what you can do with IE.. ",
    "davidarce": "I'll try with the flag \"--no-sandbox\" like chromium but not working . HI @AndreyBelym i have a js for exec my test with child process \"exec\"\ntestcafe path:/path/to/my/sh ./mytest.js\nand my .sh like:\n#!/bin/sh\nXvfb :19 -screen 0 \"1024x768x16\" >/dev/null 2>&1 &\nexport DISPLAY=:19\nfirefox\nand throw... ERROR Unable to establish one or more of the specified, i changed my docker file:\n`FROM alpine:edge\nWORKDIR /opt/app\nARG ENV=$ENV\nRUN apk --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ add \\\n python make g++ nodejs nodejs-npm chromium firefox xwininfo xvfb dbus eudev ttf-freefont fluxbox bash`\nthanks for your answer . Hi @melwynjensen \nYes, it was fixed, the solution was in the start.sh, this is my start.sh\ndbus-daemon --session --fork\n    Xvfb :1 -screen 0 \"1280x720x24\" >/dev/null 2>&1 &\n    export DISPLAY=:1.0\n    fluxbox >/dev/null 2>&1 &\n    exec testcafe \"$@\". ",
    "melwynjensen": "Hi @davidarce \nWas this issue fixed and closed? If so can you please let me know what was done to fix it?. Hi @davidarce \nThanks. But in my case am using headless chromium and firefox but get the same error which you have mentioned not really sure how to fix that.. ",
    "Aniku2009": "Thank you, Andrey, for the answer.\n I did this but result is the same :(\nconst pmUserRole = Role(url, async t => {\n        await t\n        const setCookie = ClientFunction(() => {\n            document.cookie = \"OApp=1_f6b4ec8b-84b8-4804-9fc5-2a746f4a3c3f\"\n        }).with({boundTestRun: testController});\n        const getCookie = ClientFunction(() => {\n            return document.cookie;\n        }).with({boundTestRun: testController});\n        await setCookie()\n        console.log('Lets see cookies----------')\n        console.log(await getCookie());\n    });\nawait testController.useRole(pmUserRole)\n           .maximizeWindow();. Thank you Andrey for support. \nUnfortunately, we could not solve the issue and applied workaround to disable authentication on server.\nGood luck.. ",
    "cor3000": "thanks for the response and workaround, it allows to avoid these kind of issues once you know which dom element is causing the missed click.\nMaybe consider a feature to assert that a click event was actually successful or a debugging/logging option to find out early that something in the test code above the later failure didn't happen as intended by the code.\nWhen a real user clicks a button, and it moves away he'll at least \"see\" that something has moved. So he can decide whether he wants to try again or consider the website \"broken\" and leave the page.\nHaving a similar option in the code or failing the test case for an unsuccessful click event will help to find the root cause of an inconsistently failing testcases due to unpredictable latency.\n\nIf you increase this timeout value, there's a greater chance that TestCafe will click the moving element.\n\nThis feels also quite frightening ... reducing the chances just makes it even harder to find the root cause early on. E.g. just because of that the problem might occur very late in the product development after someone decided to add an advertising banner to the top of a page. (We all know how unpredictable those load - shifting the content at any time). Then if suddenly a simple call to t.click() silently fails it's hard to even find out what's going on. Going into debug mode will most likely not fail:  due to the manual delay, the banners will have already loaded an the problem never happens when stepping through the case.\nJust my thoughts :) in any case great tool, keep on the good work.. ",
    "rafaelaazevedo": "Hi @andrzej-kodify let me try this today !. Hi @AndreyBelym not yet, I thought that I didn't need it as this is a small project, but I am going to try this today as well. I just found weird because it started to have this problem after I linked the docker image to a network. . I have tested increasing the size with --shm-size=2g and added the param --disable-dev-shm-usage, but still hanging. I don't think it is a problem with chrome since I tested running on firefox browser and the container is still hanging. Unfortunatelly the logs are not helpful as it is just showing the \"spinner\" running: [G\u2839\nI also tried to debug when fail and it stops on the first interaction, but if it really has failed testcafe should finish the tests and not hang, right ?. This is only happening on the job where the docker container is linked to a network to be able to access the other docker container services.. Thanks ! I am now able to see where it is stuck:\n```\n- Chrome 68.0.3440 / Linux 0.0.0\nPersistency\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command \n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command     {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command       \"type\": \"click\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command       \"selector\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"type\": \"execute-selector\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"instantiationCallsiteName\": \"Selector\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\".close\\\");});;\\n   return function(){\\n       var args = __dependencies$.boundArgs || arguments;\\n       return window'%testCafeSelectorFilter%';\\n   };\\n})();\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"args\": [\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           []\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         ],\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"dependencies\": [\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             \"filterOptions\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"filterVisible\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"filterHidden\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"counterMode\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"collectionMode\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command                 \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"index\": null\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             \"boundArgs\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             \"customDOMProperties\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             \"customMethods\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"@t\": \"[[undefined]]\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command               \"data\": \"\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command             }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         ],\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"visibilityCheck\": true,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"timeout\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"index\": 0\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command       },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command       \"options\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"speed\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"offsetX\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"offsetY\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"modifiers\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           \"ctrl\": false,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           \"alt\": false,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           \"shift\": false,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command           \"meta\": false\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command         \"caretPos\": null\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command       }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command     }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:command  +0ms\ntestcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message \n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message     {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message       \"cmd\": \"ready\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message       \"status\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"id\": \"579.2999999830499\",\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"isCommandResult\": false,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"executionError\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"pageError\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"resent\": false,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"result\": null,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         \"consoleMessages\": {\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message           \"log\": [],\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message           \"info\": [],\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message           \"warn\": [],\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message           \"error\": []\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message         }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message       },\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message       \"disableResending\": true,\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message       \"sessionId\": \"yJPAwhpth\"\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message     }\n  testcafe:test-run:Chrome 68.0.3440 / Linux 0.0.0:driver-message  +612ms\n```\n. It seems the same issue reported here: https://github.com/DevExpress/testcafe/issues/2132. The jenkins server has 4GB RAM. Ok, for some reason doesn't work with the network flag but it works when I link the containers. I am closing this issue as it seems more a problem with docker --network since link will be deprecated at some point, --network should still does the same job as the --link. . ",
    "ljowen": "Perhaps instead of at the page level it could be done using the test controller:\nt.ignoreJSErrors(true / false). Seems to be an issue with the static analysis testcafe does to determine testfiles.\nAs a hacky work around you can try adding a comment in google.js:\n// test()\nIt would be nice to be able to add an annotation to allow importing tests as modules. Seems to be an issue with the static analysis testcafe does to determine testfiles.\nAs a hacky work around you can try adding a comment in google.js:\n// test()\nIt would be nice to be able to add an annotation to allow importing tests as modules. Why do you want to use try catch may I ask?. Note this a derived example. \nInterestingly on my site (which contains facebook video embeds) I only see the error on mobile browsers, the tests pass fine for desktop.. Note this a derived example. \nInterestingly on my site (which contains facebook video embeds) I only see the error on mobile browsers, the tests pass fine for desktop.. Thanks Andrey,\nIn my app I don't receive the cross-origin error so the two might not necessarily be related. Thanks Andrey,\nIn my app I don't receive the cross-origin error so the two might not necessarily be related. This is probably more appropriate to ask on StackOverflow.\nTry something like:\njavascript \nfor(let i = 0; i < (await Selector('#subGroupName').count); i++) {\n        const spanText = await Selector('#subGroupName').nth(i).innerText;\n        ...etc\n}\nNote it's technically invalid HTML to have multiple elements with the same id\n. I'm using bamboo for CI, could offer some assistance with documenting steps. ",
    "sergeyzenchenko": "@AlexKamaev I've whitelisted your IP. Sorry for inconvenience :) . @AlexKamaev I've whitelisted your IP. Sorry for inconvenience :) . ",
    "arunb0405": "Hi Andrey, Is this feature available now ? e.g dragging file from Windows Explorer to Web portal.\ne.g I'm uploading header / logo images to web portal. There are 2 options :\n1.) Clicking on browse link. It opens a Window native dialog, how to handle in TestCafe, the windows dialog. (selecting file)\n2.) Obviously drag and drop from explorer is 2nd option to me, which is why I landed in this page and waiting for PR.\nLet me know when ready or how to handle window dialog. thank you. Hi Andrey, many thanks for your suggestion, but this one I already tried before posting question in Github.\nI'm attaching the snap-shot of my html here, as they don't have a File input field but just a 'browse' button!.. can you suggest looking into this the most appropriate way !\n\nAlso, when I give a different element for fileUpload e.g a div in this case.\nawait t.setFilesToUpload('div[ng-model=\"vm.vttLogoFile\"]', './qld-logo.jpg');\nI get below error :\n1) The specified selector does not match a file input element.. ",
    "dmjesus89": "I resolved, \nI need put failOnJsErrors and remove skipJsErrors. I did not know I was using a legacy version.\nHow do I use the latest version?\nFirst I used \"npm install testcafe -g\" and I installed test cafe 0.21.1\nafter that I used \"npm install testcafe@15.1.x\" and installed testcafe 15.1.372552\nremembering that I need to upload server 1337 and 1338. @AndreyBelym  thank you for your help. @AndreyBelym  I try use 0.21.1 but dont have version interface in 1337 and 1338 with Control Panel. Hi @churkin \nThanks, To raise the testcafe I need to start a node server with the command node \"file.js\" in my company the node is not homologated to be used as server. @churkin it is related to the company policy. ",
    "benjamin33": "I'm also tried that but didn't success\ntest('New Test', async t => {\n    await t\n        .maximizeWindow()\n    .click(Selector('span').withText('Login'))\n    .click(Selector('.menu-item.ng-star-inserted').nth(3).find('span').withText('Artists'))\n    .click(Selector('#mat-checkbox-3').find('[class^=\"mat-checkbox-inner-container mat-checkbox-inner-co\"]'))\n    .click(Selector('[name=\"edit\"].icon-edit').find('svg').find('use'))\n    .click(Selector('span').withText('New Album'))\n    .typeText(Selector('#album-name'), '11')\n    .typeText(Selector('#album-popularity'), '11')\n    .typeText(Selector('#album-release-date'), '11')\n    .click(Selector('span').withText('New Track'))\n    .typeText(Selector('#track-name'), '11')\n    .typeText(Selector('#track-artists'), '11')\n    .click(Selector('span').withText('Upload'))\n    .setFilesToUpload('.dropzone', ['./Users/benjamin/Downloads/Radio/upload/0010-302-2.mp3'])\n    // .click('.dropzone')\n    .wait(10000);\n\n});\n. Yep !!! Thank you @AndreyBelym for you time and help !!!. ",
    "agoldenberg01": "Hi @AndreyBelym ! Here are my steps: \n1 - launch.json file content is attached\nlaunch.json.txt\n as DefExpress recommends\n2 - add code line  - debugger;  - as I have stated in my posting above\n3 - open of new Chrome (not incognito) and open chrome://inspect\n4 - proceed to configure: - 127.0.0.1:9229 and click done\n5 - leave the browser open\n6 - before running any command below, make sure you have debugger; in the code where you\u2019d like to pause the execution (debugger;)\n7 - run termonal command, click inspect - the first one and run for the upper level icon of the opened browser\n8 - the command is: testcafe --inspect-brk chrome TestCafe-Framework/mi-casa.js --env=gaga --reporter json\n9 - I have attached my screenshots zip\nForDevExpGitHub.zip\n just in case\n10 - @and, is there a way we (me and one of our UI developers) can have a session with more explanations? It would be very much appreciated\nThanks a lot. HI @AndreyBelym Have you followed the same steps with putting debugger; before await t and inside of the code? If it is inside of the test case code (somewhere after .expect statement) it simply doesn't allow to run at all as I mentioned in my posting - it shows an error (the hint is - declaration of statement is expected), I'm attaching the screenshot where you can see the debugger; and the next line underlined and if you put cursor on it - it gives you a hint of the error.\nThanks,\n\n. Hi @AndreyBelym We have just tried to use .debug() and it did work and stopped the script, the next step/resume were in the browser tray. So, it is working, the only thing we need to understand with .debug() how to print out the data/parameter values into the terminal. etc.It means before it stops on .debug() line we should see some data printed-out into terminal, what would be the method for that?\nPlease, advise, what kind of method would be working with debug() and allow us to get the data (for example - current URL, user name/password is being used, etc.) into browser console and/or terminal. If it is possible, please, point to the document or just paste few code lines as an example.\nThanks a lot, \n . Hi @AndreyBelym \nYour syntax is working for me and I appreciate very much your help!\nif it is possible, please, advise how practically use this debugger if I need to see the values of some parameters, etc. in the console.\nThanks A lot again!\n. ",
    "Neatoro": "No Sorry I did a mistake while reproducing it. We still have an issue but not able to reproduce it in a different project by now. That is why I closed the issue, since I could not verify that the issue is not on our site.. ",
    "hussaintamboli": "Sorry. I reported here by mistake. Wanted to do it on react project. https://github.com/facebook/react/issues/13585. ",
    "sophiecdd": "Just curious do we have a timeline for this feature?. Thanks Andrey for reply. Sorry I didn't get to read the feature enhancement board earlier, wondering do we have a timeline on the implementation of this feature, I see it was logged a year ago, any updates? Is there any work around you would suggest?. Thanks Andrey for reply. Sorry I didn't get to read the feature enhancement board earlier, wondering do we have a timeline on the implementation of this feature, I see it was logged a year ago, any updates? Is there any work around you would suggest?. ",
    "cmmv91": "Hi @churkin,\nThe 500 error that causes the problem is not a UI displayed error, is just a failure on a POST request from the UI to the server. Let me know if you guys have a chance to meet or something to show you the problem.. Hi @churkin,\nNo, is not a 500 page status, but a POST request that gets a 500 error. The error I'm talking about you wouldn't be able to see it in the UI unless you had the network tab open in the developer tools. I'm working on an example so you guys can reproduce the problem.. ",
    "jossjacobo": "@AndreyBelym I think I am running into this issue as well and I am seeing different results depending on the vsts-agent that gets picked up from the pool. Would the only way to select the agent be to have an agent in the pool with a lower target and then pick that agent? Or is there a way to define that on my vsts-ci.yaml file? I've been googling for a couple of hours and their documentation is not clear to me, I'd appreciate the help.\nThanks,. @AndreyBelym I think I am running into this issue as well and I am seeing different results depending on the vsts-agent that gets picked up from the pool. Would the only way to select the agent be to have an agent in the pool with a lower target and then pick that agent? Or is there a way to define that on my vsts-ci.yaml file? I've been googling for a couple of hours and their documentation is not clear to me, I'd appreciate the help.\nThanks,. ",
    "chrisrpatterson": "Hello I am a Product Manager on the Azure Pipelines team.\n@adrianaisemberg  and @jossjacobo We have typically seen this be an issue on mac when not running as a LaunchAgent or running interactively.  The agent update process simply replaces the binaries on disk and should not impact any configured permissions as far as launching processes is concerned.  However, if there is something we can do to help out please let me know.\n/cc @pboramsft. ",
    "jarekb84": "@AndreyBelym could another parameter be exposed to allow you to do what I suggested instead of trying to determine if a hook exists. Our e2e's all have before/after hooks that don't step on each other's toes, so this limitation would not solve anything for my use-case.. @AndreyBelym could another parameter be exposed to allow you to do what I suggested instead of trying to determine if a hook exists. Our e2e's all have before/after hooks that don't step on each other's toes, so this limitation would not solve anything for my use-case.. As @bdwain mentioned, what I proposed seems like what people would expect as the default behavior.   An alternative approach would be to make my proposal the default behavior and have the parameter put the test run into --serialFixture execution mode. This would be a breaking change for anyone who does rely on fixtures running fully before proceeding to the next one.. As @bdwain mentioned, what I proposed seems like what people would expect as the default behavior.   An alternative approach would be to make my proposal the default behavior and have the parameter put the test run into --serialFixture execution mode. This would be a breaking change for anyone who does rely on fixtures running fully before proceeding to the next one.. ",
    "tiny-dancer": "in leu of this being implemented is there a best practice for running concurrent fixtures (or files)?\n\nCurrently we have to split our files in chunks and then spawn multiple testcafe instances to enable this.\n\nat this point, we're implementing down this same path - not sure if i'm missing another way to accomplish this?. in leu of this being implemented is there a best practice for running concurrent fixtures (or files)?\n\nCurrently we have to split our files in chunks and then spawn multiple testcafe instances to enable this.\n\nat this point, we're implementing down this same path - not sure if i'm missing another way to accomplish this?. ",
    "Bamyan": "Hi. @miherlosev @AndreyBelym , Sorry for the Late Reply, you can see the problem with the following test on example page.\n``\nfixtureclick on checkbox.page(https://v6.material.angular.io/components/checkbox/overview`);\ntest('Should click on checkbox', async () => {\n    await t.click(Selector('mat-checkbox'));\n});\n``\nERROR:Uncaught TypeError: Cannot read property 'clientX' of undefined. Hi, @miherlosev As it is mentioned on issue, the problem is just for Android devices and works well on Windows. and also i have tried to run the test with the latest TestCafe versiontestcafe@0.22.1-alpha.3` on Android, but it is display the same error as before.\n\n. ",
    "jl-ib": "Hi, any updates on this? @AndreyBelym . Thanks for answering quickly @AlexKamaev, I see your example working, my problem is similar, but it is when using swiper libraries, I have two examples with different swipers, you can check both:\nExample 1:\n``js\nfixtureExample.pagehttp://kidjp85.github.io/react-id-swiper/`\ntest('swiper test', async t => {\n  const swiperSelector = Selector('.swiper-container')\nawait t\n    .drag(swiperSelector, -120, 0, { speed: 0.5 })\n})\n```\nExample 2:\n``js\nfixtureAnother example.pagehttp://kenwheeler.github.io/slick/`;\ntest('drag2', async t => {\n  await t.drag('.slider', -100, 0, { speed: 0.5 });\n});\n```\nLet me know if you have any insight over these, thanks for your help, I don't understand why testcafe wouldn't be able to swipe these elements, do you think it could be that its selecting an incorrect parent element? I tried selecting inner divs but it didn't work either. ",
    "chheller": "Ah I see, just 2 lines up should have given that away. Thank you! \nThough, could we update the docs the show that the reporter can be a function instead of a string of the reporter's name? That might help prevent future confusion . Ah I see, just 2 lines up should have given that away. Thank you! \nThough, could we update the docs the show that the reporter can be a function instead of a string of the reporter's name? That might help prevent future confusion . ",
    "leofavre": "@AndreyBelym Here's a complete example:\n```html\n<!DOCTYPE html>\n\n\n\n",
    "ZeddEn": "I have a similar problem with jwplayer. No problem is detected with other player's actions (play, pause, mute, unmute, close ad, etc). I have a similar problem with jwplayer. No problem is detected with other player's actions (play, pause, mute, unmute, close ad, etc). I started having this problem starting from version 0.22.0 (now using 0.23.1). Before it used to hang the build for hours but with a fix introduced on the 0.22.0 now, it just disconnects the browser(s). This may be strongly linked to running tests on multi-browsers (chrome & firefox).\nI am using TeamCity to run the builds with the following configuration:\n\nUserAgents: Chrome 70.0.3538 / Windows 10.0.0,Firefox 61.0.0 / Windows 10.0.0\nTestcafe version: 0.23.1\nNode version: 8.11.3\n\nThere is the error message I get on my CI output:\nError: Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nat C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\testcafe\\src\\runner\\browser-set.js:84:30\nat next (native)\nat step (C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:17:30)\nat C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:35:14\nat Promise.F (C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\core-js\\library\\modules\\_export.js:36:28)\nat C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:14:12\nat BrowserSet._waitConnectionsOpened (C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\testcafe\\src\\runner\\browser-set.js:77:37)\nat _waitConnectionsOpened (C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\testcafe\\src\\runner\\browser-set.js:107:35)\n at invokeCallback (C:\\BuildAgent\\work\\4a74606c58d6f60f\\node_modules\\pinkie\\index.js:60:12)\n at Array.forEach (native)\nProcess exited with code 1\nI am also using this on my runner:\n.then(failedCount => {\n        console.log('Tests failed: ' + failedCount);\n        testcafe.close();\n        process.exit(failedCount ? 1 : 0);\n    }\nI think the problem is related to firefox as when I disactivated multi-browser (removing firefox), I have not seen the problem so far.. ",
    "mixtur": "thx. thx. ",
    "asharmab": "Thanks for the pointer. I figured out the hidden element. Now I am hovering over the old item and then clicking on the item covering it . Since, the item to be clicked shows up after one hovers over the item I was using earlier. Thanks a lot for your help!!. ",
    "lucianonooijen": "Hi @AndreyBelym, thanks for the prompt response! What the biggest challenge is (I think), is to make it possible to test the project itself.\nFor example: for the project https://github.com/BytecodeBV/Bytecode-Website I want the following tests:\n\nAll pages are working\nContact forms are working correctly (both server-side and client-side)\n\nThis would mean the following should happen in GitLab for the testcafe job:\n\nInstall Yarn and run yarn to install dependencies, and build with yarn run build\nStart the Express server (yarn run start) in the background\nWhen the Express server is up and running on localhost:4000, continue\nNow run TestCafe testing scripts, using the localhost:4000 server\nIf any tests fail, exit with non-zero exit code\nIf all tests pass, exit with exit code zero\nClose the Express server\n\nThe fact that the Express server must be running in the background, and the TestCafe tests cannot run until the server is up and running is the part where I get stuck.\nA dirty hack could be to run a script (for example with the concurrently NPM package), where the server is started, and then after sleep-ing for x seconds, the tests will run. \nAn example where I implemented a similar script in package.json is (this is without sleep): \njson\n\"export\": \"concurrently -k -s \\\"first\\\" 'yarn run server' 'yarn run tests && exit 0'\"\nIt is obvious this is not an ideal way to deal with the concurrent processes, so it would be awesome if it would be possible to do this without any dirty hacks.. @AndreyBelym I wasn't aware of the server starting option. That will definitely come in handy!. ",
    "jugglingthebits": "\nso it would be awesome if it would be possible to do this without any dirty hacks.\n\n@lucianonooijen there is already: Start the server using .gitlab-ci.yml, then use wait-on to wait until the server is started. Then run the tests.. ",
    "hinok": "I found that on macOS when I do\ndocker-compose run --rm --entrypoint=\"\" e2e sh\nall newly created directories belongs to user where on circleci everything belogs to root.\n\n\nRelated issues\n\nhttps://github.com/docker/compose/issues/1532\nhttps://github.com/docker/compose/issues/3270#issuecomment-206214034\nhttps://github.com/docker/compose/issues/5519. @AndreyBelym \n\nThis is exactly what I found yesterday. To fix permissions I had to add:\ne2e:\n    image: testcafe/testcafe\n    depends_on:\n      - nginx\n    volumes:\n      - data:/tests\n    environment:\n      - WEBSITE_URL=${WEBSITE_URL}\n      - MAIL_URL=${MAIL_URL}\n    user: root # <---------------- this one...\nand then permission problem is fixed.\nTo people who find this issue in the future and also want to use circleci. There is another issue if you'd like to run testcafe with docker-compose but it's strictly related to circleci mounting folders - https://circleci.com/docs/2.0/building-docker-images/#mounting-folders\n\nIt is not possible to mount a folder from your job space into a container in Remote Docker (and vice versa). You may use the docker cp command to transfer files between these two environments.\n\nMy solution includes using docker cp to copy files to a temp container and mounting external volume for testcafe like below:\ndocker-compose.yml\n```yaml\nversion: '3.2'\nservices:\ne2e:\n    image: testcafe/testcafe\n    depends_on:\n      - nginx\n    volumes:\n      - data:/tests\n    environment:\n      - WEBSITE_URL=${WEBSITE_URL}\n      - MAIL_URL=${MAIL_URL}\n    user: root\n# ...other services\nvolumes:\n    data:\n        external:\n            name: copy-data-volume # <----- Here is the name of the external volume that holds your tests file\n```\nHope this will help someone.. ",
    "anandxp": "Getting \"Uncaught ReferenceError: System is not defined\"\nIs this something related to this specific webpage. We are getting this issue on a simple testcafe studio recording on the same page\n\nURL : http://111.93.108.38:4200/landing \n. Thanks  @AndreyBelym . ",
    "automation9006": "@AlexKamaev  Thanks ! Sorted.. @AlexKamaev  Thanks ! Sorted.. ",
    "Jgshirley": "Hello, I am currently having the same issue and I don't understand how this solution works. Could you please explain.. Hello, I am currently having the same issue and I don't understand how this solution works. Could you please explain.. ",
    "dirkrooijakkers": "The same problem occurred to me and i found out it was the .tsx extension that caused the problem. Changing back to .ts fixed it. \ud83d\udc4d . The same problem occurred to me and i found out it was the .tsx extension that caused the problem. Changing back to .ts fixed it. \ud83d\udc4d . So, i thought, lets try video recording.\nThe following message is displayed when running tests.\nFirst: The \"browsers\" option from the configuration file will be ignored.\nSecond: Error: Cannot find module '.testcaferc.json'\nWhat's causing this behavior?. So, i thought, lets try video recording.\nThe following message is displayed when running tests.\nFirst: The \"browsers\" option from the configuration file will be ignored.\nSecond: Error: Cannot find module '.testcaferc.json'\nWhat's causing this behavior?. Great, thanks! And ofcourse.\nMy folder structure:\nreact-project\n - src\n - test\n   - src\n      - data\n      - utilities\n   - test-cases\n     - autorun\n     - drafts\nThe command or the runner script file i use to start TestCafe:\nI've used many:\n- yarn testcafe chrome (troughout each folder, so from react-project with source test/test-cases/autorun (with the config file in both locations, to navigating to the autorun folder and executing tests from there)\n- yarn run test-script (\"test-script\": \"yarn testcafe chrome test/test-cases/autorun\", inside package.json)\n- And ofcourse the options above without the chrome keyword\nMy .testcaferc.json configuration file\n{\n    \"browsers\": \"chrome\",\n    \"reporter\": [\n        {\n            \"name\": \"json\",\n            \"output\": \"reports/report.json\"\n        }\n    ]\n}\nMy test file\nAll files look pretty much like this\nimport * as u from '../../src/utilities/functions';\nimport * as s from '../../src/utilities/selectors';\n```\nfixturePackage: Test Suite\n    .page('http://localhost:5000')\n    .beforeEach( async t => {\n          await t.resizeWindow(1024,690).setTestSpeed(1)})\ntest('Test name', async (t) => {\n    await t.click(s.btnQca)\n    await t.click(s.btnAnalysis);\n    await u.selectFrame(29);\n    await t.click(s.drawButton);\n\n    await u.clickPoint(332,104);\n    await u.clickPoint(320,125);\n    await u.clickPoint(298,150);\n    await u.doubleClickPoint(298,150);\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\n```\nUtil functions\n```\nexport const clickPoint = (x: number, y: number) => {\n    return t.click(s.canvas, { offsetX : x, offsetY: y });\n};\nexport const doubleClickPoint = (x: number, y: number) => {\n    return t.doubleClick(s.canvas, { offsetX : x, offsetY: y });\n};\nexport const objectDoesExist = async (object: any) => {\n    const result = await object.exists ? true : false\n    await t.expect(result).ok(\"Object does not exist\");\n};\nexport const selectFrame = async (targetFrame: number) => {\n    const frametext           = s.currentFrame.textContent;\n    const returnValue         = await frametext;\n    const afterSlash          = returnValue.lastIndexOf('/');\n    const numberOfFrames: any = returnValue.substring(afterSlash + 1);\n    const correction          = 4;\nconst track = s.sliderTrack;\nconst sliderWidth = await t.eval(() => track().clientWidth, {\n  dependencies: { track }\n});\n//Calculates X coordinates to be able to select frames\nawait t.doubleClick(track, {offsetX: Math.round(sliderWidth / numberOfFrames * targetFrame) - correction});\n\n};\n```\n. Great, thanks! And ofcourse.\nMy folder structure:\nreact-project\n - src\n - test\n   - src\n      - data\n      - utilities\n   - test-cases\n     - autorun\n     - drafts\nThe command or the runner script file i use to start TestCafe:\nI've used many:\n- yarn testcafe chrome (troughout each folder, so from react-project with source test/test-cases/autorun (with the config file in both locations, to navigating to the autorun folder and executing tests from there)\n- yarn run test-script (\"test-script\": \"yarn testcafe chrome test/test-cases/autorun\", inside package.json)\n- And ofcourse the options above without the chrome keyword\nMy .testcaferc.json configuration file\n{\n    \"browsers\": \"chrome\",\n    \"reporter\": [\n        {\n            \"name\": \"json\",\n            \"output\": \"reports/report.json\"\n        }\n    ]\n}\nMy test file\nAll files look pretty much like this\nimport * as u from '../../src/utilities/functions';\nimport * as s from '../../src/utilities/selectors';\n```\nfixturePackage: Test Suite\n    .page('http://localhost:5000')\n    .beforeEach( async t => {\n          await t.resizeWindow(1024,690).setTestSpeed(1)})\ntest('Test name', async (t) => {\n    await t.click(s.btnQca)\n    await t.click(s.btnAnalysis);\n    await u.selectFrame(29);\n    await t.click(s.drawButton);\n\n    await u.clickPoint(332,104);\n    await u.clickPoint(320,125);\n    await u.clickPoint(298,150);\n    await u.doubleClickPoint(298,150);\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\n```\nUtil functions\n```\nexport const clickPoint = (x: number, y: number) => {\n    return t.click(s.canvas, { offsetX : x, offsetY: y });\n};\nexport const doubleClickPoint = (x: number, y: number) => {\n    return t.doubleClick(s.canvas, { offsetX : x, offsetY: y });\n};\nexport const objectDoesExist = async (object: any) => {\n    const result = await object.exists ? true : false\n    await t.expect(result).ok(\"Object does not exist\");\n};\nexport const selectFrame = async (targetFrame: number) => {\n    const frametext           = s.currentFrame.textContent;\n    const returnValue         = await frametext;\n    const afterSlash          = returnValue.lastIndexOf('/');\n    const numberOfFrames: any = returnValue.substring(afterSlash + 1);\n    const correction          = 4;\nconst track = s.sliderTrack;\nconst sliderWidth = await t.eval(() => track().clientWidth, {\n  dependencies: { track }\n});\n//Calculates X coordinates to be able to select frames\nawait t.doubleClick(track, {offsetX: Math.round(sliderWidth / numberOfFrames * targetFrame) - correction});\n\n};\n```\n. The following error occurs when adding your config data:\nPS C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1> yarn testcafe chrome test/test-cases/autorun --video artifacts/videos/\nyarn run v1.13.0\n$ \"C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules.bin\\testcafe\" chrome test/test-cases/autorun --video artifacts/videos/\nERROR Cannot prepare tests due to an error.\nError: Cannot find module '.testcaferc.json'\n    at Object. (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\test\\test-cases\\autorun\\analyze-view.ts:4:1)\n    at Function._compile [as _execAsModule] (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\test-file\\api-based.js:50:13)\n    at TypeScriptTestFileCompiler._execAsModule [as compile] (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\test-file\\api-based.js:144:42)\n    at compile (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\index.js:48:42)\n    at step (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:17:30)\n    at C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:28:13\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.. The following error occurs when adding your config data:\nPS C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1> yarn testcafe chrome test/test-cases/autorun --video artifacts/videos/\nyarn run v1.13.0\n$ \"C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules.bin\\testcafe\" chrome test/test-cases/autorun --video artifacts/videos/\nERROR Cannot prepare tests due to an error.\nError: Cannot find module '.testcaferc.json'\n    at Object. (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\test\\test-cases\\autorun\\analyze-view.ts:4:1)\n    at Function._compile [as _execAsModule] (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\test-file\\api-based.js:50:13)\n    at TypeScriptTestFileCompiler._execAsModule [as compile] (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\test-file\\api-based.js:144:42)\n    at compile (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\testcafe\\src\\compiler\\index.js:48:42)\n    at step (C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:17:30)\n    at C:\\Users\\user\\Documents..(project name)..\\Test environment\\TestCafe builds\\test_dir_v1\\node_modules\\babel-runtime\\helpers\\asyncToGenerator.js:28:13\nType \"testcafe -h\" for help.\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.. The minor adjustment fixed something, i am able to run the tests now.\nA funny thing is that when i run the command with \"chrome\", the video's record. But the resize event does not take place. It looks like the before each event does not trigger.\nBut when i remove \"chrome\", i get the error:\nERROR Unable to find the browser. \"test/test-cases/autorun\" is not a browser alias or path to an executable file.\nHere is the code:\n```\nimport * as u from '../../src/utilities/functions';\nimport * as s from '../../src/utilities/selectors';\nimport * as i from '../../src/utilities/init';\nrequire('./.testcaferc.json');\nfixturePackage: Analysis View (vessel analysis)\n    .page('http://localhost:5000')\n    .beforeEach( async t => {\n          await t.resizeWindow(1024,690).setTestSpeed(1)})\ntest('TC-QW-QXA-001 - Entering Vessel Analysis View', async (t) => {\n    //SETUP & ACTION\n    //await t.click(s.btnAnalysis);\n    console.log('   \u2193 Disabled because of bug');\n    //ASSERT\n    //await t.expect(s.btnAnalysis.hasClass('selected')).ok();\n});\n\ntest('TC-QW-QXA-002 - Defining a vessel', async (t) => {\n    //SETUP & ACTION\n    await i.Qva5ClicksFrame23();\n\n    //ASSERT\n    await u.objectDoesExist(s.viewportSvg);\n});\n\ntest('TC-QW-QXA-003 - Discard define or edit action', async (t) => {\n    //NOTE\n    console.log('   \u2193 Edit action can not be tested yet');\n\n    //SETUP\n    await t.click(s.btnQca)\n    await t.click(s.btnAnalysis);\n    await u.selectFrame(29);\n    await t.click(s.drawButton);\n\n    await u.clickPoint(332,104);\n    await u.clickPoint(320,125);\n    await u.clickPoint(298,150);\n\n    //ACTION\n    await t.pressKey('esc');\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\ntest('TC-QW-QXA-004 - Delete contour', async (t) => {\n    //SETUP\n    await i.Qva5ClicksFrame23();\n\n    //ACTION\n    await t.click(s.deleteContour);\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\ntest.skip('TC-QW-QXA-005 - Edit contour', async (t) => {\n  console.log('   \u2193 TC-QW-QXA-005 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-006 - Add analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-006 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-007 - Remove analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-007 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-008 - Reposition marker', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-008 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-010 - Switch analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-010 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-020 - Analysis results', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-020 editing is not possible yet')\n});\n\n```. The minor adjustment fixed something, i am able to run the tests now.\nA funny thing is that when i run the command with \"chrome\", the video's record. But the resize event does not take place. It looks like the before each event does not trigger.\nBut when i remove \"chrome\", i get the error:\nERROR Unable to find the browser. \"test/test-cases/autorun\" is not a browser alias or path to an executable file.\nHere is the code:\n```\nimport * as u from '../../src/utilities/functions';\nimport * as s from '../../src/utilities/selectors';\nimport * as i from '../../src/utilities/init';\nrequire('./.testcaferc.json');\nfixturePackage: Analysis View (vessel analysis)\n    .page('http://localhost:5000')\n    .beforeEach( async t => {\n          await t.resizeWindow(1024,690).setTestSpeed(1)})\ntest('TC-QW-QXA-001 - Entering Vessel Analysis View', async (t) => {\n    //SETUP & ACTION\n    //await t.click(s.btnAnalysis);\n    console.log('   \u2193 Disabled because of bug');\n    //ASSERT\n    //await t.expect(s.btnAnalysis.hasClass('selected')).ok();\n});\n\ntest('TC-QW-QXA-002 - Defining a vessel', async (t) => {\n    //SETUP & ACTION\n    await i.Qva5ClicksFrame23();\n\n    //ASSERT\n    await u.objectDoesExist(s.viewportSvg);\n});\n\ntest('TC-QW-QXA-003 - Discard define or edit action', async (t) => {\n    //NOTE\n    console.log('   \u2193 Edit action can not be tested yet');\n\n    //SETUP\n    await t.click(s.btnQca)\n    await t.click(s.btnAnalysis);\n    await u.selectFrame(29);\n    await t.click(s.drawButton);\n\n    await u.clickPoint(332,104);\n    await u.clickPoint(320,125);\n    await u.clickPoint(298,150);\n\n    //ACTION\n    await t.pressKey('esc');\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\ntest('TC-QW-QXA-004 - Delete contour', async (t) => {\n    //SETUP\n    await i.Qva5ClicksFrame23();\n\n    //ACTION\n    await t.click(s.deleteContour);\n\n    //ASSERT\n    await u.objectDoesNotExist(s.viewportSvg);\n});\n\ntest.skip('TC-QW-QXA-005 - Edit contour', async (t) => {\n  console.log('   \u2193 TC-QW-QXA-005 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-006 - Add analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-006 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-007 - Remove analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-007 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-008 - Reposition marker', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-008 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-010 - Switch analysis method', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-010 editing is not possible yet')\n});\n\ntest.skip('TC-QW-QXA-020 - Analysis results', async (t) => {\n    console.log('   \u2193 TC-QW-QXA-020 editing is not possible yet')\n});\n\n``. Edit: fixtureBrowser 2`.beforeEach is not executing. ",
    "icfantv": "I just got bit by the same issue as @dirkrooijakkers.  Might be worth updating the documentation to indicate that TSX files are not supported or point to documentation that lets you point testcafe to the right tsconfig.json file or just specify your own compiler options.  I have jsx: 'react' set in my workspace's tsconfig.json file but it's not being used by testcafe.. I just got bit by the same issue as @dirkrooijakkers.  Might be worth updating the documentation to indicate that TSX files are not supported or point to documentation that lets you point testcafe to the right tsconfig.json file or just specify your own compiler options.  I have jsx: 'react' set in my workspace's tsconfig.json file but it's not being used by testcafe.. ",
    "ludwigbacklund": "@AlexKamaev Thanks for the quick response. You are correct in that the cookies appear with a call to getCookie but the application is still not seeing/utilizing them. In my case there is an overlay that disappears when a cookie is set to true, which is verified to be working outside of any test framework but also in Cypress, but does not work here. I don't know if you know how Cypress works but do you think there's any functional difference between these two snippets?\njs\n    cy.setCookie('cookie1', '1');\n    cy.setCookie('cookie2', 'true');\nand\njs\n    document.cookie = 'cookie1=1';\n    document.cookie = 'cookie2=true';\nI'm properly confused here.. @AlexKamaev Thank you, that seems to work. I'm not sure if it's just for this use-case but that was not very straight forward. Might be interesting to work towards a TestCafe solution to setting cookies so force reloading is not necessary.. > Hi @ludwigbacklund, I need some time for upgrading my machine to macOS Mojave, and then I'll try to reproduce the issue.\nThanks, any update?. @AndreyBelym Did you find anything after your Mojave upgrade?. @AndreyBelym Any update? I feel like there would have been more noise on here if Mojave broke TestCafe, so it might just be me. I wouldn't know where to start troubleshooting this though since I get no apparent errors.. ",
    "eljenso": "Looks like this is an error on our side.. This might actually be an issue with testcafe.\nWhen running the same code both locally and remotely, testcafe runs on the local version without problems but fails on the remove version.\nAny hints on how to solve this or even debug?. See #2942 for more info.. ",
    "ambrt": "Thank you  @AndreyBelym reply. Promise seem to solved problem for object getter but i still have problem with fs.\nMinimal reproductions is this:\n```\nvar fs = require('fs'),\n    PNG = require('pngjs').PNG\nfixture('Getting Started')\n.page('https://github.com')\ntest('Find testcafe-example repo on GitHub', async t => {\nasync function onParsed(){\n    await t.expect(0).eql(1)\n  }\n  await t.resizeWindow(1500, 800)\n  await t.takeScreenshot()\n  var img1 = fs.createReadStream('./test/e2e/images/'+t.testRun.test.fixture.name+'/'+t.testRun.test.name+'.png')\n  .pipe(new PNG())\n  .on('parsed', await onParsed)\n})\n```\n(\"cafe\": \"testcafe \\\"chrome:headless --no-sandbox\\\" ./test/e2e/object-error.js --color -s ./test/e2e/images/ -p ${FIXTURE}/${TEST}.png\")\nThe above reproduction should fail test but it passes test with npm ELIFECYCLE error\n```\n \u221a Find testcafe-example repo on GitHub (screenshots: [path]\\client\\test\\e2e\\images\\2018-09-27_09-03-24\\test-1)\n1 passed (7s)\n[object Object]`\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\n...\n```\nI don't have lots of  experience with fs but it seems to be culprit.. Thank you, that solves it.. ",
    "KristianPP": "Hi @AndreyBelym  thanks for the prompt answer.\nhttp://www.bbc.com/ is the other site but just to note here i see other fails as well.\nThere were a few other sites i tried but i'll need to check which elements i wanted to use.\nThe common part of those sites as far as i'm aware is they use reactjs or similar libraries.\nRegards,\nKris.. ",
    "narpendranapit": "Thanks for the quick response, I have added more part of the code in the opening post. \nWhat do you mean by 'fails on first statement'? \nWhat's happening right now when the first question \"What is your favorite color?\" of the if else statement comes in during execution test cafe wait for sometime and enter \"sports1\" instead of \"color1\".\nBut if remaining two questions comes up it works fine i.e. it takes user to the welcome webpage. \nJust to make sure if I have the code set up correctly I have switched the order of questions in the statement i.e. I made color question second one and phone question first, this time it worked for color question but failed for phone question. So I think issue is testcafe not identifying first statement ?\nLet me know if more information is required from my side. \n. Hi,\nI have added await t.wait(3000); before first if statement and it's working as expected now.\nBut I still don't know why it's not working without it as I have \"await\" inside the statement as well.\nStill if you can look into this and let me know why it's behaving like this will help me. \nWould you please clarify to what you are referring by keyword 'this'?\nI have created a class in testLogin.js which i am calling from other test scripts as login is required in order to validate other ui elements. \nBelow is the constructor code of the testLogin.js\n`export default class loginSteps {\nconstructor() {\n    this.webpage = new webPage();\n    this.dashboard = new DashboardPage();\n}`\n\nAs suggested I have used the t.debug() function and I am able to see the correct element using developer tools of the browser.\n\nAlso I have added below code to check if it's identifying right element or not and it is identifying it correctly.\nconst securityquestiontext = await this.webpage.securityQuestion.textContent;\n        console.log(securityquestiontext);\nBelow is the output in console\n\n. Thanks for assisting me with this issue. I have added another assertion before IF Else IF statements so that my code can get some more time to read the element on the security page. \n. ",
    "bryant-sfdo": "this is probably a dup of https://github.com/DevExpress/testcafe/issues/2852 i will close this for now and see if that change fixes the issue!. This is what I see when running test with -p provided.\n\n. ",
    "sorin-davidoi": "It seems to be related to the number of tests:\n - if I place the attached test in demo.ts and run it with testcafe-live firefox demo.ts, reloading works just fine.\n - if I place the attached test it in tests/demo.ts (where tests contains ~60 other tests, none of which have .only) and run it with testcafe-live firefox tests reload doesn't work.\n```ts\nimport { Selector } from 'testcafe';\nfixtureDemo.page('https://joinmastodon.org');\ntest.only('has get started button', async test => {\n    await test.expect(Selector('a').withText('Get started').visible).ok();\n});\n```\nmacOS version: 10.13.0\nFirefox version: 62.0.3 (though TestCafe reports it as 62.0.0). I can't replicate it anymore \ud83d\ude15 (tested with exactly the same versions). Will close this now, thank you for taking the time to investigate!. Thanks, that solved the issue! It is strange however that it only failed sometimes. Perhaps the introduction of new system-level dependencies should come with a major version bump?. Yes, printing the following during CI doesn't really help us understand why it is unstable (should we just increase a timeout for a network request? does something not exist in the DOM? etc).\n[API] t.takeScreenshot()\n    \u2713 Should take a screenshot (unstable)\n. ",
    "pciavald": "I'm getting this issue too on \njson\n{\n  \"scripts\": {\n    \"test:live\": \"testcafe-live chrome ./tests/functional/**/*.js\"\n  },\n  \"devDependencies\": {\n    \"testcafe\": \"^0.23.2\",\n    \"testcafe-live\": \"^0.1.4\"\n  }\n}\nThe tests run as expected, then this message appears : \nMake changes in the source files or press ctrl+r to restart test run.\nthen when overwriting a file\nSources have been changed. Test run is starting...\nbut the browser does not react and no more log is outputted. Nothing happens.  Pressing ctrl+r shows once and ctrl+s repeatedly : \nCurrent test run is stopping...\nctrl+c stops correctly.\nhow can I help investigating ?. ",
    "doronsever": "@miherlosev this doesn't help also...\nI also tried using the crt+key from browser-sync just like I'm using when running my Angular localhost on https but without success...\ntestcafe  'chrome --allow-insecure-localhost' e2e/tests/analyze/ --hostname=localhost --ssl key=/node_modules/browser-sync/lib/server/certs/server.key;cert=/node_modules/browser-sync/lib/server/certs/server.crt. Sure, which example do you need?\nI paste you how I run the command in the previous reponse.  I can't give you access to the source code as this is our production code...\nThe certificates that I'm using can be generated using this tutorial: https://medium.com/@jonsamp/how-to-set-up-https-on-localhost-for-macos-b597bcf935ee\nYou can just install a fresh Angular project from the angular cli\nAdd a test file and try to run the command I wrote above...\nThe test itself is not important since the browser doesn't try to connect to the angular application since there is an SSL error.... @miherlosev I've created an empty Angular project by your request.\nhttps://github.com/doronsever/my-tcf-ssl\nJust clone it, run npm install\nAnd then run your command testcafe \"chrome --allow-insecure-localhost --allow-running-insecure-content\" e2e/tests/analyze/ --ssl key=./certs/localhost.key;cert=./certs/localhost.crt  --dev --hostname=localhost. Great, it will also be great if you can improve the documentation on how to use it.\nI would never have guessed that the right way to use the SSL params will be --ssl key=./certs/localhost.key;cert=./certs/localhost.crt. > We have an example of using the --ssl option and a help topic that describes the main concepts.\nI think it will be more clear how to implement it with a dedicated example. Friendly advice :). @miherlosev I still cannot use local variables after upgrading to 0.23.0\nI'm running: testcafe 'chrome --allow-insecure-localhost' e2e/tests/analyze/ --hostname=localhost --ssl key=/node_modules/browser-sync/lib/server/certs/server.key;cert=/node_modules/browser-sync/lib/server/certs/server.crt\nAnd getting:\n\nError: error:0906D06C:PEM routines:PEM_read_bio:no start line\n. @miherlosev ok I've managed to workaround the error code I wrote, but now it seems that it doesn't work.\nThe browser gets open and it is telling me: \nThis site can\u2019t provide a secure connection localhost uses an unsupported protocol.\nERR_SSL_VERSION_OR_CIPHER_MISMATCH. Wow...\nOK, I will check it out. Thanks!\n@miherlosev another reason why you should add this to your docs :). \n",
    "kaitmore": "@doronsever \nI was experiencing this same issue using a pfx cert. I realized that testcafe was only picking up the first option passed to the --ssl flag, (in your case, 'key'). If I wrapped the whole thing in quotes like, --ssl 'key=path/to/key;cert=path/to/cert;' it works!. ",
    "miteshsavani": "@kaitmore It is not working for me even if i put the quotes like --ssl 'key=path/to/key;cert=path/to/cert;' i am facing same issue \nThis site can\u2019t provide a secure connection localhost uses an unsupported protocol.\nERR_SSL_VERSION_OR_CIPHER_MISMATCH. ",
    "bbonczek": "I've installed alpha version of testcafe and error still occurs, however error messages don't tell me too much. What I noticed is that if one test failes, then few tests that happen later are failing as well:\n```\n// ...bunch of working tests\n\u221a Capture Size: Capture time can not be set to 0s\n\u221a Capture Size: is invalid input processed\n\u221a Capture Size: is upper limit for samples: 20_000_000 samples\n// this test failed as first\n\u00d7 Comm loss: traces should show marker in navigator when communication is\n lost and established\n             if multiple traces are plotted\n1) AssertionError: expected false to be truthy\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n     106 |        .click(traceSelectionPage.contentListElement.nth(0))\n     107 |        .click(traceSelectionPage.addParameterButton)\n     108 |        .click(propertiesPage.okPropertiesButton)\n     109 |\n     110 |        .click(trendPage.buttonStart)\n   > 111 |        .expect(trendPage.buttonStop.exists).ok()\n     112 |\n     113 |\n  .expect(trendPage.communicationLostMarkersInNavigator.count).eql(2)\n     114 |\n\n.expect(trendPage.communicationEstablishedMarkersInNavigator.count).eql(2);\n         115 |});\n         116 |\n     at Object.<anonymous>\n  (c:\\Projects\\Trend\\Frontend\\e2e\\communication-loss.test.ts:111:46)\n     at <anonymous>\n  (c:\\Projects\\Trend\\Frontend\\e2e\\communication-loss.test.ts:7:71)\n     at __awaiter\n  (c:\\Projects\\Trend\\Frontend\\e2e\\communication-loss.test.ts:3:12)\n     at test\n  (c:\\Projects\\Trend\\Frontend\\e2e\\communication-loss.test.ts:97:56)\n     at markeredfn\n\n(c:\\Projects\\Trend\\Frontend\\node_modules\\testcafe\\src\\api\\wrap-test-function.js:18:28)\n         at \n(c:\\Projects\\Trend\\Frontend\\node_modules\\testcafe\\src\\api\\wrap-test-function.js:8:5)\n         at fn\n(c:\\Projects\\Trend\\Frontend\\node_modules\\testcafe\\src\\test-run\\index.js:238:19)\n         at TestRun._executeTestFn\n(c:\\Projects\\Trend\\Frontend\\node_modules\\testcafe\\src\\test-run\\index.js:234:38)\n         at _executeTestFn\n      (c:\\Projects\\Trend\\Frontend\\node_modules\\testcafe\\src\\test-run\\index.js:279:24)\n2) - Error in fixture.beforeEach hook -\n      Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n// and then few next tests fail as well, before it gets back to normal\n \u00d7 Comm loss: clicking on empty space (after offline part of chart) shouldn't\n throw an error\n1) - Error in fixture.beforeEach hook -\n      Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\nConfigure Capture Size\n \u00d7 Capture Size: is possible to set capture size by number of samples - one\n trace\n1) - Error in fixture.beforeEach hook -\n      Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n\u00d7 Capture Size: is possible to set capture size by number of samples - ten\n traces\n1) Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n\u00d7 Capture Size: is possible to set capture size by time\n1) Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n\u00d7 Capture Size: does restarting the trend clear data\n1) - Error in fixture.beforeEach hook -\n      Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n\u00d7 Capture Size: is upper limit for time: 30 days\n1) - Error in fixture.beforeEach hook -\n      Unhandled promise rejection:\n  [object Object]\n\n  Browser: HeadlessChrome 69.0.3497 / Windows 10.0.0\n\n// everything is fine then\n \u221a Capture Size: Capture time can not be set to 0s\n \u221a Capture Size: is invalid input processed\n \u221a Capture Size: is upper limit for samples: 20_000_000 samples\n```\nOut of curiosity, I tried to run this one test that failed first alone, and it passed but produced this output:\n```\n\u03bb testcafe \"chrome:headless\" -c 6 e2e\\\nUsing locally installed version of TestCafe.\n Running tests in:\n - HeadlessChrome 69.0.3497 / Windows 10.0.0\nCommunication loss\n \u221a Comm loss: traces should show marker in navigator when communication is\n lost and established\n             if multiple traces are plotted\n1 passed (16s)\n(node:26572) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit\n```. Actually nvm, I runned it with testcafe 0.22.0 again - I'll provide another log of testcafe in alpha version soon - it takes some time to run those tests ;). Hello, sorry for the late response.\nI have now reliable method of reproducing this issue so below are my results for different versions of testcafe:\n0.22.0 -> The issue is happening\n0.22.0 with -u flag -> The issue is not happening\n0.22.1-alpha.3 -> Tests just stop at some point and won't proceed. If I wait for a while it produces following output:\n```\nTest run is starting...\n Running tests in:\n - Chrome 69.0.3497 / Windows 10.0.0\nPre-Sampling\n \u221a Pre-Sampling: is able to select a pre-sampling percentage from 0 to 100% for Analog, Bit and Time\n Triggers\nMake changes in the source files or press ctrl+r to restart test run.\nERROR: Error: The Chrome 69.0.3497 / Windows 10.0.0 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n```\nThe command I've used is:\ntestcafe chrome e2e/ -c 6    // (in one case with additional -u flag)\nSeems like this issue is pretty similiar to #2852 and #2917 .. Unfortunatelly I can't share my code, but I tried it again today, and it works now - not sure what happened yesterday. Could you estimate when are you planning to release non alpha version with 66b8c31 fix ?. Ok great :) Closing this issue then.. ",
    "ericenders": "We don\u2019t want the test to fail on an assertion until all of our assertions are tested. \nSent from my iPhone\n\nOn Oct 4, 2018, at 8:14 PM, Lawrence Owen notifications@github.com wrote:\nWhy do you want to use try catch may I ask?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I was able to get it with this code:\n\nlogger.options = { logResponseBody: true, logResponseHeaders: true, stringifyResponseBody: true };\nHowever, the response.body is undefined.. @miherlosev It appears that the issue is the data is large ( 199 items ).  I see the response headers if I don't log the body, but when I do log the body, I don't even see a response.  Any suggestions?  I tried using a timeout which didn't work.\n   await t.expect(logger.contains(r => r.response.statusCode === 200)).ok({ timeout: 3000000 });. @miherlosev  That resolved the issue!  Thank you!  Do you know when this version will be out of alpha and beta?. I have advised my team to specify using 0.21.1 which I know works well with Jenkins.. Hi Andrey,\nI think this issue is very similar to https://github.com/DevExpress/testcafe/issues/3114.  \nTest Cafe and node.js versions are stated above.\noperating system: MacOS and Windows 10\nbrowser: Chrome Version 69.0.3497.100\nlatest working version: 0.21.1\nI am not able to provide config files nor allow to share our tests.  . I have added the dependencies and tried with 0.23.2.  It still doesn't work.  @dlangerenken does it work for you?  I have tested and it does work with 0.23.1.. ",
    "nestoru": "@AlexKamaev Thanks for the quick turnaround. Really appreciated.. @AlexKamaev Thanks for the quick turnaround. Really appreciated.. ",
    "cormac-dunphy": "I am running this test inside a vagrant vm would this have anything to do with why testcafe cant detect any browsers when i run \"testcafe -b\". got it working it was because i didnt have a browser installed in the vm. thanks\n. ",
    "jcollum": "closing, reported under wrong github account. ",
    "kumarkullan": "Thank you so much for your response.\nPlease look into the below code: I need to add a wait statement between 2\nbrowsers start time in runner function.\nconst fs = require('fs');\nconst stream = fs.createWriteStream(__dirname+'/reports/' + new\nDate().getTime() + '.html');\nconst createTestCafe = require('testcafe');\nlet testcafe = null;\nlet runner = null;\ncreateTestCafe('localhost', 1337, 1338)\n    .then(tc => {\n        testcafe     = tc;\n        runner =   testcafe.createRunner();\n    return  runner\n\n.src(['test.js])\n\n       * .browsers('chrome')*\n\n\nawait t .wait(5000) =====> If its a testcase, we can add a\nwait statement but we are in runner function, how can we provide wait time\nbetween two browsers? *\nI would like\ndelay a bit my second browser start time.   *\n        *    .browsers(['edge'])          *    .screenshots('./screens/', true)\n    .reporter('phil', stream) // <-\n    .reporter('minimal') // <-\n    .run(\n        {\n            selectorTimeout: 50000,\n            assertionTimeout:50000,\n            pageLoadTimeout: 80000,\n        }\n    );\n\n})\n\n\n.then(numFailed => {\n    console.log('finished with ', numFailed, ' errors');\n     testcafe.close(); //normally the process exits about 2 seconds after\nthis. now we need process.exit(0)\n     if(numFailed){\n       process.exit(1);\n     }\n   }, err => {\n     console.error(err);\n     testcafe.close();\n     process.exit(1);\n   });\nOn Thu, Oct 11, 2018 at 3:50 AM Andrey Belym notifications@github.com\nwrote:\n\nCould you please tell more about your case? For me it looks like that you\ncan just use some Promise-based Mutual Exclusion Pattern\nhttps://thecodebarbarian.com/mutual-exclusion-patterns-with-node-promises\nor the t.wait\nhttps://devexpress.github.io/testcafe/documentation/test-api/pausing-the-test.html\naction in your test code.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2961#issuecomment-428856091,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVd0Uf30IS6v3xIcNULobEpV-WsngLFGks5ujvgogaJpZM4XWAFw\n.\n. Thank you so much for your response. Thanks!\n\nOn Thu, Oct 11, 2018 at 11:42 AM Andrey Belym notifications@github.com\nwrote:\n\nYou can't use test actions in regular Node.js files. If you really need to\nadd a delay before a browser is opened, you can create a .bat or .sh\nscript that will suspend its execution for some time and then start the\nbrowser. Then you can start the script using the Path Browser Provider\nhttps://devexpress.github.io/testcafe/documentation/using-testcafe/command-line-interface.html#portable-browsers\n.\nBut I think that it's a very bad practice when your tests depend when\nbrowsers are started. Additional delays can be introduced by network and\nactivity of another running apps, AV software can start scanning browser's\nexecutable files, etc. All these delays can easily mitigate the effect of\ndelays created by your code, making the test suite fragile and\nunpredictable. If you describe me why you actually need to control browser\nstarting behavior, maybe I will figure out a better solution.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/2961#issuecomment-429004653,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVd0UehdGCokobHt6hpa5EXyI4Z0UWJfks5uj2bugaJpZM4XWAFw\n.\n. \n",
    "bbuhler": "@AndreyBelym yes, that's correct. It is a pure TypeScript module but a node modules dependency.. ",
    "bard": "Absolutely correct. Thank you for pointing me in the right direction!. ",
    "poliscukmykola": "@AndreyBelym Thanks a lot for reply. I will try it! . ",
    "valkon7": "Note: Page does redirect correctly it's just that testcafe-hammer can't pull the body because it links to a subpage url without the base url so http://testcafe_server_url/subpage instead of http://testcafe_server_url/main_page/subpage. basically it's called relative redirection I believe.... \n\neverything on the page loads fine except task.js and it's giving me this error.. \nThis is the output from firefox. The app is behind a flask framework and it renders a form with url: host/add/billing so it doesn't specify type of the file .html etc... I'm wondering if that could be the problem.\nThis is the template flask tries to fill out. Even just navigating to that specific page causes task.js to crash. \nThe loaded template is the following:\n`<!DOCTYPE html>\n \n\n\nAdd Billing\n\n\nFinancial Owner\n\n\n\nFinancial Sme\n\n\n\nMRU Code\n\n\n\nCost Center\n\n\n\nLocation Code\n\n\n\nNotes\n\n\n\nSubmit Changes\n\n`\nI tried testing with it as forms.html and it doesn't cause a crash but from the server http://host_url/add/billing causes it to crash.\n. I was able to fix it by changing window.location.href to start with .. so that it keeps the integrity of testcafe url and token and the tested website. an absolute window.location.href assignment causes problems. . ",
    "mornatan": "what about using the path in .testcaferc.json?\n\"JSON standard does not allow single quoted strings\"\n. ",
    "GeneGenie": "+1 for me. \nWhat I'm doing:\nI'm writing e2e tests for AdSDK. And I'd like to modify single field in ad response to test different scenarios. \nWhy I can't mock the whole body:\nAd request includes a lot of fields that are generated in runtime by \"thirdParty\" script, those IDs should also be present in response. \nPS: actually  I could mock the whole body, if I could get request body in test runtime.. +1 for unzip gzip ) . ",
    "arnaud": "\nuse your shell's syntax to pass values from enivronment variables to the TestCafe parameters\n\nSeems legit. I'll try next week. Thanks for the tip.. It works great. Thanks for the sharing this approach.. ",
    "austinrr": "@AlexKamaev  maybe for an enhancement it would be nice to get a count of the number of times the single tests passed.  So for example if I ran it with a concurrency of 2 on 3 browsers I could see that my test passed 6 times.. ",
    "AlexisGlez": "I'm experiencing this exact same issue. Yeah I'm actually using react-id-swiper in my project and for some reason testcafe is not being able to do drags in neither Android devices nor Chrome in responsive mode. It works completely fine in Iphone with iOS 9+ tho.. ",
    "BartlomiejZalas": "Hello, \nI noticed the same bug in Firefox 63.0, Ubuntu 18 - testcafe waits till timeout and after that selects text in input. Tested on testcafe @0.22.0 and @0.23.1.\nOn Chrome it works ok. \nCode to reproduce:\nTest:\n```javascript\nimport { Selector } from 'testcafe';\nfixture(\"My fixture\")\n    .page(\"http://localhost:3042/\");\ntest('Select text within input', async t => {\n    const input = Selector('#input');\n    await t\n        .selectText(input).pressKey('delete');\nawait t\n    .expect(await input.value).eql('')\n\n});\nTested site:html\n\n\n\n```. ",
    "joma74": "@AndreyBelym  Unfortunately with testcafe@0.23.0-alpha.1 using google-chrome-stable 70.0.3538.77-1 and 64.0.3282.140-1 my test never finishes. Output stays put at\n```\n:~/entwicklung/nodews/angular-ultimate-pro$ cd /home/joerg/entwicklung/nodews/angular-ultimate-pro ; /home/joerg/bin/node --inspect-brk=42171 node_modules/testcafe/bin/testcafe.js chrome -S -s target/reports/screenshots/actual -p '${FIXTURE}/${TEST}/${USERAGENT}/${FILE_INDEX}.png' /home/joerg/entwicklung/nodews/angular-ultimate-pro/src/tests/index-test.js\nDebugger listening on ws://127.0.0.1:42171/b04e3adf-e538-4120-bd1d-e4f34d96ff41\nFor help see https://nodejs.org/en/docs/inspector\nDebugger attached.\n Running tests in:\n - Chrome 70.0.3538 / Linux 0.0.0\nIndex_Page_Test\nwith opened browser and screenshots taken. Pausing the debugger does not stop anywhere!? Otherwise doing some manual reload pushes in the browser seems to cancel \"that\" sometimes and gives success\n Index_Page_Test\n \u2713 dom_has_critical_elements (screenshots:\n /home/joerg/entwicklung/nodews/angular-ultimate-pro/target/reports/screenshots/actual/Index_Page_Test/dom_has_critical_elements/Chrome_70.0.3538_Linux_0.0.0/1.png)\n1 passed (4m 15s)\nWaiting for the debugger to disconnect...\nKilled\n```\nP.S. What normally takes 10 seconds something.\nTest with firefox 63.0 works again though.. Withdraw. As Travis shows, occurs 50% with firefox 63.0. Also for Chrome on Ubuntu, especially if not in debug mode - so even if enough space is available; Does not apply for Firefox.. LGTM :+1:. Attached is the HAR report 192.168.1.106.har.zip covering nearly 9 minutes. It was run as requested. What i observed and what i believe one may derive from the log, is that the browser did neither restart nor was the test session terminated.\nOther observations are\nCase 2 \nIf the test is started via a not reachable proxy server e.g. chrome --proxy-server=\"1.2.3.4\", then gives the behaviour @AndreyBelym  mentioned \njoma@edison:~/entwicklung/nodews/angular-ultimate-pro$ cd /home/joma/entwicklung/nodews/angular-ultimate-pro ; /home/joma/bin/node --inspect-brk=39592 node_modules/testcafe/bin/testcafe.js \"chrome --proxy-server=\\\"1.2.3.4\\\"\" --speed 0.75 -S -s target/reports/screenshots/actual -p '${FIXTURE}/${TEST}/${USERAGENT}/${FILE_INDEX}.png' /home/joma/entwicklung/nodews/angular-ultimate-pro/src/tests/index-test.js\nDebugger listening on ws://127.0.0.1:39592/23bbadce-19ec-4f47-bc05-6b240fdc29c3\nFor help, see: https://nodejs.org/en/docs/inspector\nDebugger attached.\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\nCase 3 \nThe same behaviour (keeps running indefinitely) seems to happen very regularly if i put a breakpoint on some statement of a test, and open the developer tools on the then opened browser. After continueing the debugger, the browser sends heartbeats, and the test never ends; plus the browser did neither restart nor was the test session terminated._ \nCase 4,5\nBtw, the same behaviour (keeps running indefinitely) happens \n- in testcafe-live after the first re-run(see DevExpress/testcafe-live#23)\n- waiting for more than 13 seconds on any breakpoint(see #3070)\n. I assume by the title of this issue that https://github.com/DevExpress/testcafe-live is going to recieve more support attentation. For me in terms of developer experience, this would be thrilling. Thinking of it as \"the Quokka of browser testing\".. Sorry for reporting, yarn resulted in completely wrong version installment when i specified \"testcafe\": \">1.0.0-alpha\".. Can you also make up a configuration for the absence of above logs of warnings? While technically and DX-related totally sensible, maybe a certain log filter level (screenshottaker.fileoverwrite.occured=OFF) set via config/env or cli helps in reducing terminal distraction.  . As i see it now - removing xunit reporter(cause of above failure) in testcafe-live mode  is a viable solution for me. \nP.S. After short testing, integrated Live Mode works stable. Only that is does not catch up changes to my index-test.js file. Have to do manually CTRL + r.. Hey @Farfurix, hope i have things sorted out. It's the Windows OS :smile: vs Unix(my bread and butter OS), with all their beautiful different path separators, among other things. As in the regex of webpack config - which is still strict webpack 3 - describing a file path to exclude the acitvition of a plugin, which resulted in the above error.\nI tested under Windows 10, although only inside git bash. Which i must call out for as a prerequisite to use the application. Any other than this, i expect the application to run with the commands described above. I can still see the error Error [ERR_STREAM_WRITE_AFTER_END]: write after end... from the issue description.\n\nP.S. I spent a good part of my free time the last days to get this build run on windows on travis. That offer is in beta and around since October 2018(Windows Server 2016, shell is git bash). Learned Firefox as addon is not supported, but  may be installed via chocolatery, so i thought i woudl give it a go. But i cant get the Windows build to run. Always ended with\n\nERROR Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\n\nas in https://travis-ci.org/joma74/inetingishard-floats/jobs/483337236\nI think i narrowed it down to firefox. chrome only build was successful. If you hear of any \"me also\" or otherwise success stories about Travis Windows with firefox, leave me a note.\nSidestep - perhaps you can define above ERROR Unable to establish message more clearly if it's FF or chrome browser connection? Or maybe run a  report on the good ones, but fail the overall result? . ",
    "dwaltrip": "Thanks for the response. I have to say, having the exact same name is quite confusing!. ",
    "madroneropaulo": "This is how it looks like when I run the tests:\n\nThere's a really interesting thing. If I resize the window manually (make it bigger), and refresh the window, the tests work!\nSo I modified the script testcafe/lib/client/browser/idle-page/index.js the part where it breaks, and put some console logs: \n```\nStatusIndicator.prototype._drawCircle = function _drawCircle(strokeStyle, centralAngle, startAngle) {\n                                    console.log('spinnercenter:', this.spinnerCenter);\n                                    console.log('spinner width:', SPINNER_WIDTH);\n                                    console.log('WIDTH:', document.documentElement.clientWidth);\n                                    console.log('HEIGHT:', document.documentElement.clientHeight);\n                                    var radius = this.spinnerCenter - SPINNER_WIDTH / 2;\n                                this.canvasContext.beginPath();\n\n                                this.canvasContext.lineWidth = SPINNER_WIDTH;\n                                this.canvasContext.strokeStyle = strokeStyle;\n\n                                this.canvasContext.arc(this.spinnerCenter, this.spinnerCenter, radius, convertToRadian(startAngle), convertToRadian(startAngle + centralAngle), false);\n\n                                this.canvasContext.stroke();\n                            };\n\n```\nAnd this is the result when the test starts:\n\nSo yeah, 1 - 8/2 = -3 and that's what's breaking the tests\n. @NickCis I'm just using my own testcafe version which uses an arc radius zero if it is a negative value, and it works. I just don't open any PR because I'm not sure that's the best solution, and because I don't know what the problem truly is.. ",
    "szrharrison": "It seems like this might be fixed in 0.23.1. ",
    "lukastaegert": "I can confirm similar performance issues for\nSafari 12.0.0 / Mac OS X 10.14.0\nA simple hello world test took 1m 19s where most of this time was spent navigating to the initial page. Other browsers were noticeably faster:\nFirefox 62.0.0 / Mac OS X 10.14.0: 12s\nChrome 70.0.3538 / Mac OS X 10.14.0: 4s\nNote that Firefox is still quite a bit slower in loading the page. Safari is basically unusable.. Did some more testing: I only observe this when testing on localhost where I used webpack dev server to serve my page. Remote pages seem to be fast.. Admittedly only the test was \"Hello World\", the application under test was not. So I tried to create another repo using generic code but was not able to. In my original project I managed to track it down to my usage of @material-ui/icons. Once I removed the single used icon, Safari was immediately fast. So I set up a new project just using this icon but this was fast as well.\nOne difference was, though, that the new project was a create-react-app JavaScript project while the original one was a TypeScript project. Not sure how long I will try to find a simple reproduction. As for me, as I can live without those icons I am fine, so you may just take this as a hint that there may be something fishy going on. Especially considering that the slowness was 100% reproducible and 100% linked to the import (but usage! The component in question was never displayed in the initial view) of these icons at least in a TS setup and that it only occurred on Safari.. ",
    "cejavoa": "Hey that is happening to me right now! Is there any solution for this? . ",
    "anandbkrishnamohan": "\n3064 and #3070 issues, mentioned by @Juansasa, were fixed in testcafe@0.23.3-alpha.2.\nTry running your tests with this version.\nIf the problem persists, we won\u2019t be able to do much until we reproduce it locally.\n\nThanks, @miherlosev !! All my tests ran without any issues. . Do you know by when 0.23.3 final will be released?. ",
    "malindapw": "Sorry posted the question in stackoverflow. Thanks. ",
    "ronanmulvaney": "Seeing the same breaking our tests and capturing of any console.log output \n\n. Testing with v0.23.2-alpha.1 solves the issue for me here.. ",
    "machbohu": "Seems like I can reproduce similar problem by myself. For me a test run always hangs (see below).\nTestCafe version 0.23.2\nI have one fixture like this (in directory \"bug2\"):\n```\nrequire(\"nice-console\")(console);\nfixture('Fixture 1')\n    .beforeEach(async ctx => {\n        console.log('BEFORE EACH');\n    })\n    .afterEach(async ctx => {\n        console.log('AFTER EACH 1');\n        await new Promise(resolve => setTimeout(resolve, 120000));\n        console.log('AFTER EACH 2');\n    })\n    .after(async ctx => {\n        console.log('AFTER');\n    });\ntest('Test 1', async t => {\n    console.log('TEST 1');\n});\ntest('Test 2', async t => {\n    console.log('TEST 2');\n});\ntest('Test 3', async t => {\n    console.log('TEST 3');\n});\nrunning TestCafe like\nnode node_modules/testcafe/bin/testcafe.js -e 'chrome' bug2 --selector-timeout 30000 --assertion-timeout 10000  -r spec,xunit:test_results/e2e-xunit.xml -s test_results\n Running tests in:\n - Chrome 70.0.3538 / Linux 0.0.0\nFixture 1\n2018-11-26T14:54:30.822Z BEFORE EACH\n2018-11-26T14:54:30.824Z TEST 1\n2018-11-26T14:54:30.825Z AFTER EACH 1\n2018-11-26T14:56:30.826Z AFTER EACH 2\n^C2018-11-26T14:58:36.800Z Stopping TestCafe...\nSeems that I can't reproduce this problem with TestCafe version 0.22.0\nnode node_modules/testcafe/bin/testcafe.js -e 'chrome' bug2 --selector-timeout 30000 --assertion-timeout 10000  -r spec,xunit:test_results/e2e-xunit.xml -s test_results\n Running tests in:\n - Chrome 70.0.3538 / Linux 0.0.0\nFixture 1\n2018-11-26T15:01:39.497Z BEFORE EACH\n2018-11-26T15:01:39.499Z TEST 1\n2018-11-26T15:01:39.500Z AFTER EACH 1\n2018-11-26T15:03:39.500Z AFTER EACH 2\n \u2713 Test 1\n2018-11-26T15:03:39.525Z BEFORE EACH\n2018-11-26T15:03:39.526Z TEST 2\n2018-11-26T15:03:39.527Z AFTER EACH 1\n2018-11-26T15:05:39.529Z AFTER EACH 2\n \u2713 Test 2\n2018-11-26T15:05:42.815Z BEFORE EACH\n2018-11-26T15:05:42.816Z TEST 3\n2018-11-26T15:05:42.816Z AFTER EACH 1\n2018-11-26T15:07:42.817Z AFTER EACH 2\n2018-11-26T15:07:45.813Z AFTER\n \u2713 Test 3\n3 passed (6m 06s)\n```\nOnce I remove that wait it runs as expected even for 0.23.2 version.. Srsly? No response? I provided easy to reproduce example. If it is not related (which I don't know) then you could let me know and I can create separate issue for it or you can just tell me that \"you don't care\".. ",
    "danh293": "Thanks for clarifying that @AndreyBelym :)\nI still maintain that the API would be clearer if the Smart Assertion Query Mechanism could handle subproperties too, but your suggestion is cleaner than what I was using, so thanks.. ",
    "Joonpark13": "Does testcafe intentionally not support passing arbitrary strings through userAgent?. ",
    "leahwhittaker": "We figured out a workaround by adding an arbitrary string at the end of the legitimate userAgent you provided.\nI'm still curious if userAgent is never meant to support arbitrary strings?. ",
    "rvyshnevskyi": "Noticed similar behaviour with tc@0.23.2 & node@10 along with Travic-CI, but with node@8 the combo works just fine. ",
    "grittershub": "Test file - this is just a hacked version of one of my real tests but produces the exact same result. It appears irrelevant whether it succeeds or fails.\n```\nimport { Selector } from 'testcafe';\nimport { Role } from 'testcafe';\nimport { ClientFunction } from 'testcafe';\nfixture Login\n    .page http://www.google.com;\nconst getPageUrl = ClientFunction(() => window.location.href);\ntest('test google', async t => {\n    await t\n        .expect(Selector('#carcontent > thead > tr').exists).notOk();\n});\n```\nDockerfile:\n```\nCopyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\nLicensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\nA copy of the License is located at\n\nhttp://aws.amazon.com/asl/\n\nor in the \"license\" file accompanying this file.\nThis file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nFROM ubuntu:14.04.5\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\nInstall git, SSH, and other utilities\nRUN set -ex \\\n    && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n    && apt-get update \\\n    && apt install -y apt-transport-https \\\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n    && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n    && apt-get update \\\n    && apt-get install software-properties-common -y --no-install-recommends \\\n    && apt-add-repository ppa:git-core/ppa \\\n    && apt-get update \\\n    && apt-get install git=1:2. -y --no-install-recommends \\\n    && git version \\\n    && apt-get install -y --no-install-recommends openssh-client=1:6.6 \\\n    && mkdir ~/.ssh \\\n    && touch ~/.ssh/known_hosts \\\n    && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n    && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n    && chmod 600 ~/.ssh/known_hosts \\\n    && apt-get install -y --no-install-recommends \\\n       wget=1.15- python=2.7. python2.7-dev=2.7. fakeroot=1.20- ca-certificates \\\n       tar=1.27. gzip=1.6- zip=3.0- autoconf=2.69- automake=1:1.14. \\\n       bzip2=1.0. file=1:5.14- g++=4:4.8. gcc=4:4.8. imagemagick=8:6.7. \\\n       libbz2-dev=1.0. libc6-dev=2.19- libcurl4-openssl-dev=7.35. libdb-dev=1:5.3. \\\n       libevent-dev=2.0. libffi-dev=3.1~ libgeoip-dev=1.6. libglib2.0-dev=2.40. \\\n       libjpeg-dev=8c- libkrb5-dev=1.12+ liblzma-dev=5.1. \\\n       libmagickcore-dev=8:6.7. libmagickwand-dev=8:6.7. libmysqlclient-dev=5.5. \\\n       libncurses5-dev=5.9+ libpng12-dev=1.2. libpq-dev=9.3. libreadline-dev=6.3- \\\n       libsqlite3-dev=3.8. libssl-dev=1.0. libtool=2.4. libwebp-dev=0.4. \\\n       libxml2-dev=2.9. libxslt1-dev=1.1. libyaml-dev=0.1. make=3.81- \\\n       patch=2.7. xz-utils=5.1. zlib1g-dev=1:1.2. unzip=6.0- curl=7.35. \\\n       e2fsprogs=1.42. iptables=1.4. xfsprogs=3.1. xz-utils=5.1. \\\n       mono-devel less=458- groff=1.22. liberror-perl=0.17- \\\n       asciidoc=8.6. build-essential=11. bzr=2.6. cvs=2:1.12. cvsps=2.1- docbook-xml=4.5- docbook-xsl=1.78. dpkg-dev=1.17. \\\n       libdbd-sqlite3-perl=1.40- libdbi-perl=1.630- libdpkg-perl=1.17. libhttp-date-perl=6.02- \\\n       libio-pty-perl=1:1.08- libserf-1-1=1.3. libsvn-perl=1.8. libsvn1=1.8. libtcl8.6=8.6. libtimedate-perl=2.3000- \\\n       libunistring0=0.9. libxml2-utils=2.9. libyaml-perl=0.84- python-bzrlib=2.6. python-configobj=4.7. \\\n       sgml-base=1.26+ sgml-data=2.0. subversion=1.8. tcl=8.6. tcl8.6=8.6. xml-core=0.13+ xmlto=0.0. xsltproc=1.1. \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && apt-get clean\nDownload and set up GitVersion\nRUN set -ex \\\n    && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n    && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n    && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n    && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n    && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe \\$@\" >> /usr/local/bin/gitversion \\\n    && chmod +x /usr/local/bin/gitversion\nInstall Docker\nRUN set -ex \\\n    && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n    && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n    && tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/ \\\n    && rm docker.tgz \\\n    && docker -v \\\nset up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\n&& addgroup dockremap \\\n&& useradd -g dockremap dockremap \\\n&& echo 'dockremap:165536:65536' >> /etc/subuid \\\n&& echo 'dockremap:165536:65536' >> /etc/subgid \\\n&& wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n&& curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n&& chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n\nEnsure docker-compose works\n&& docker-compose version\n\nInstall dependencies by all python images equivalent to buildpack-deps:jessie\non the public repos.\nRUN set -ex \\\n    && wget \"https://bootstrap.pypa.io/2.6/get-pip.py\" -O /tmp/get-pip.py \\\n    && python /tmp/get-pip.py \\\n    && pip install awscli==1. \\\n    && rm -fr /var/lib/apt/lists/ /tmp/ /var/tmp/\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV NODE_VERSION=\"10.1.0\"\ngpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n    && for key in \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n      56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n      93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 \\\n      114F43EE0176B71C7BC219DD50A3051F888C628D \\\n      7937DFD2AB06298B2293C3187D33FF9D0246406D \\\n    ; do \\\n      gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; \\\n    done\nRUN set -ex \\\n    && wget \"https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n    && wget \"https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt | sha256sum -c - \\\n        && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n        && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n        && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n        && rm -fr /var/lib/apt/lists/ /tmp/ /var/tmp/*\nRUN npm set unsafe-perm true\nRUN npm install -g testcafe\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list\nRUN wget https://dl.google.com/linux/linux_signing_key.pub\nRUN sudo apt-key add linux_signing_key.pub\nRUN apt update\nRUN apt install -y google-chrome-stable\nCMD [ \"node\" ]\n```\nbuildspec.yml\n```\nversion: 0.1\nphases:\n  build:\n    commands:\n      - echo begin\n      - export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js\n      - echo finished\n```\nLog Output:\n```\n[Container] 2018/11/14 09:25:11 Waiting for agent ping \n[Container] 2018/11/14 09:25:11 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/14 09:25:11 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/14 09:25:11 CODEBUILD_SRC_DIR=/codebuild/output/src968547354/src \n[Container] 2018/11/14 09:25:11 YAML location is /codebuild/output/src968547354/src/testcafe.yml \n[Container] 2018/11/14 09:25:11 Processing environment variables \n[Container] 2018/11/14 09:25:11 Moving to directory /codebuild/output/src968547354/src \n[Container] 2018/11/14 09:25:11 Registering with agent \n[Container] 2018/11/14 09:25:11 Phases found in YAML: 1 \n[Container] 2018/11/14 09:25:11  BUILD: 3 commands \n[Container] 2018/11/14 09:25:11 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/14 09:25:11 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase INSTALL \n[Container] 2018/11/14 09:25:12 Phase complete: INSTALL Success: true \n[Container] 2018/11/14 09:25:12 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase PRE_BUILD \n[Container] 2018/11/14 09:25:12 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/14 09:25:12 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase BUILD \n[Container] 2018/11/14 09:25:12 Running command echo begin \nbegin \n[Container] 2018/11/14 09:25:12 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:24) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nWed, 14 Nov 2018 09:25:16 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nWed, 14 Nov 2018 09:25:17 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nWed, 14 Nov 2018 09:25:18 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1653.3999999992375\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"3055.099999999584\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"3078.4999999996217\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \n\u2713 test google \n1 passed (3s) \n```. Test file - this is just a hacked version of one of my real tests but produces the exact same result. It appears irrelevant whether it succeeds or fails.\n```\nimport { Selector } from 'testcafe';\nimport { Role } from 'testcafe';\nimport { ClientFunction } from 'testcafe';\nfixture Login\n    .page http://www.google.com;\nconst getPageUrl = ClientFunction(() => window.location.href);\ntest('test google', async t => {\n    await t\n        .expect(Selector('#carcontent > thead > tr').exists).notOk();\n});\n```\nDockerfile:\n```\nCopyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\nLicensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\nA copy of the License is located at\n\nhttp://aws.amazon.com/asl/\n\nor in the \"license\" file accompanying this file.\nThis file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nFROM ubuntu:14.04.5\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.21.2\" \\\n    GITVERSION_VERSION=\"3.6.5\"\nInstall git, SSH, and other utilities\nRUN set -ex \\\n    && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n    && apt-get update \\\n    && apt install -y apt-transport-https \\\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n    && echo \"deb https://download.mono-project.com/repo/ubuntu stable-trusty main\" | tee /etc/apt/sources.list.d/mono-official-stable.list \\\n    && apt-get update \\\n    && apt-get install software-properties-common -y --no-install-recommends \\\n    && apt-add-repository ppa:git-core/ppa \\\n    && apt-get update \\\n    && apt-get install git=1:2. -y --no-install-recommends \\\n    && git version \\\n    && apt-get install -y --no-install-recommends openssh-client=1:6.6 \\\n    && mkdir ~/.ssh \\\n    && touch ~/.ssh/known_hosts \\\n    && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts \\\n    && ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts \\\n    && chmod 600 ~/.ssh/known_hosts \\\n    && apt-get install -y --no-install-recommends \\\n       wget=1.15- python=2.7. python2.7-dev=2.7. fakeroot=1.20- ca-certificates \\\n       tar=1.27. gzip=1.6- zip=3.0- autoconf=2.69- automake=1:1.14. \\\n       bzip2=1.0. file=1:5.14- g++=4:4.8. gcc=4:4.8. imagemagick=8:6.7. \\\n       libbz2-dev=1.0. libc6-dev=2.19- libcurl4-openssl-dev=7.35. libdb-dev=1:5.3. \\\n       libevent-dev=2.0. libffi-dev=3.1~ libgeoip-dev=1.6. libglib2.0-dev=2.40. \\\n       libjpeg-dev=8c- libkrb5-dev=1.12+ liblzma-dev=5.1. \\\n       libmagickcore-dev=8:6.7. libmagickwand-dev=8:6.7. libmysqlclient-dev=5.5. \\\n       libncurses5-dev=5.9+ libpng12-dev=1.2. libpq-dev=9.3. libreadline-dev=6.3- \\\n       libsqlite3-dev=3.8. libssl-dev=1.0. libtool=2.4. libwebp-dev=0.4. \\\n       libxml2-dev=2.9. libxslt1-dev=1.1. libyaml-dev=0.1. make=3.81- \\\n       patch=2.7. xz-utils=5.1. zlib1g-dev=1:1.2. unzip=6.0- curl=7.35. \\\n       e2fsprogs=1.42. iptables=1.4. xfsprogs=3.1. xz-utils=5.1. \\\n       mono-devel less=458- groff=1.22. liberror-perl=0.17- \\\n       asciidoc=8.6. build-essential=11. bzr=2.6. cvs=2:1.12. cvsps=2.1- docbook-xml=4.5- docbook-xsl=1.78. dpkg-dev=1.17. \\\n       libdbd-sqlite3-perl=1.40- libdbi-perl=1.630- libdpkg-perl=1.17. libhttp-date-perl=6.02- \\\n       libio-pty-perl=1:1.08- libserf-1-1=1.3. libsvn-perl=1.8. libsvn1=1.8. libtcl8.6=8.6. libtimedate-perl=2.3000- \\\n       libunistring0=0.9. libxml2-utils=2.9. libyaml-perl=0.84- python-bzrlib=2.6. python-configobj=4.7. \\\n       sgml-base=1.26+ sgml-data=2.0. subversion=1.8. tcl=8.6. tcl8.6=8.6. xml-core=0.13+ xmlto=0.0. xsltproc=1.1. \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && apt-get clean\nDownload and set up GitVersion\nRUN set -ex \\\n    && wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion_${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n    && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION} \\\n    && unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION} \\\n    && rm /tmp/GitVersion_${GITVERSION_VERSION}.zip \\\n    && echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe \\$@\" >> /usr/local/bin/gitversion \\\n    && chmod +x /usr/local/bin/gitversion\nInstall Docker\nRUN set -ex \\\n    && curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n    && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n    && tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/ \\\n    && rm docker.tgz \\\n    && docker -v \\\nset up subuid/subgid so that \"--userns-remap=default\" works out-of-the-box\n&& addgroup dockremap \\\n&& useradd -g dockremap dockremap \\\n&& echo 'dockremap:165536:65536' >> /etc/subuid \\\n&& echo 'dockremap:165536:65536' >> /etc/subgid \\\n&& wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind \\\n&& curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 > /usr/local/bin/docker-compose \\\n&& chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose \\\n\nEnsure docker-compose works\n&& docker-compose version\n\nInstall dependencies by all python images equivalent to buildpack-deps:jessie\non the public repos.\nRUN set -ex \\\n    && wget \"https://bootstrap.pypa.io/2.6/get-pip.py\" -O /tmp/get-pip.py \\\n    && python /tmp/get-pip.py \\\n    && pip install awscli==1. \\\n    && rm -fr /var/lib/apt/lists/ /tmp/ /var/tmp/\nVOLUME /var/lib/docker\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nENV NODE_VERSION=\"10.1.0\"\ngpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n    && for key in \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n      56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n      93C7E9E91B49E432C2F75674B0A78B0A6C481CF6 \\\n      114F43EE0176B71C7BC219DD50A3051F888C628D \\\n      7937DFD2AB06298B2293C3187D33FF9D0246406D \\\n    ; do \\\n      gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n      gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; \\\n    done\nRUN set -ex \\\n    && wget \"https://nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n    && wget \"https://nodejs.org/download/release/v$NODE_VERSION/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt | sha256sum -c - \\\n        && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \\\n        && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n        && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n        && rm -fr /var/lib/apt/lists/ /tmp/ /var/tmp/*\nRUN npm set unsafe-perm true\nRUN npm install -g testcafe\nRUN echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list\nRUN wget https://dl.google.com/linux/linux_signing_key.pub\nRUN sudo apt-key add linux_signing_key.pub\nRUN apt update\nRUN apt install -y google-chrome-stable\nCMD [ \"node\" ]\n```\nbuildspec.yml\n```\nversion: 0.1\nphases:\n  build:\n    commands:\n      - echo begin\n      - export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js\n      - echo finished\n```\nLog Output:\n```\n[Container] 2018/11/14 09:25:11 Waiting for agent ping \n[Container] 2018/11/14 09:25:11 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/14 09:25:11 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/14 09:25:11 CODEBUILD_SRC_DIR=/codebuild/output/src968547354/src \n[Container] 2018/11/14 09:25:11 YAML location is /codebuild/output/src968547354/src/testcafe.yml \n[Container] 2018/11/14 09:25:11 Processing environment variables \n[Container] 2018/11/14 09:25:11 Moving to directory /codebuild/output/src968547354/src \n[Container] 2018/11/14 09:25:11 Registering with agent \n[Container] 2018/11/14 09:25:11 Phases found in YAML: 1 \n[Container] 2018/11/14 09:25:11  BUILD: 3 commands \n[Container] 2018/11/14 09:25:11 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/14 09:25:11 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase INSTALL \n[Container] 2018/11/14 09:25:12 Phase complete: INSTALL Success: true \n[Container] 2018/11/14 09:25:12 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase PRE_BUILD \n[Container] 2018/11/14 09:25:12 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/14 09:25:12 Phase context status code:  Message:\n[Container] 2018/11/14 09:25:12 Entering phase BUILD \n[Container] 2018/11/14 09:25:12 Running command echo begin \nbegin \n[Container] 2018/11/14 09:25:12 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:24) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nWed, 14 Nov 2018 09:25:16 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nWed, 14 Nov 2018 09:25:17 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nWed, 14 Nov 2018 09:25:18 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1653.3999999992375\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"3055.099999999584\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nWed, 14 Nov 2018 09:25:20 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"3078.4999999996217\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"fguLFOxVT\" \n    } \n\u2713 test google \n1 passed (3s) \n```. Confirmed that rolling testcafe back to v0.21.1 results in expected behaviour, tests complete and testcafe now terminates successfully with no changes to any other configuration. Confirmed that rolling testcafe back to v0.21.1 results in expected behaviour, tests complete and testcafe now terminates successfully with no changes to any other configuration. Have tested as requested, thank you very much for the detailed test cases. I updated the Dockerfile and created 3 new docker images in the following way:\n```\nRUN npm install -g testcafe@0.21.1\nRUN npm i -g https://github.com/AndreyBelym/testcafe/releases/download/gh-3114-1/testcafe-0.23.3-alpha.gh3114.1.tgz\n```\nSummary of results:\ntestcafe-0.23.3-alpha.gh3114.1.tgz - hangs as before\ntestcafe-0.23.3-alpha.gh3114.2.tgz - completes successfully, expected behaviour\ntestcafe-0.23.3-alpha.gh3114.3.tgz - completes successfully, expected behaviour\nCodeBuild buildspec file below. It now includes a -v on every execution, plus echo before and after the execution of testcafe so you are able to see successful termination.\n```\nversion: 0.1\nphases:\n  build:\n    commands:\n      - echo begin\n      - testcafe -v\n      - export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js\n      - echo finished\n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.1.tgz. Needs to be manually terminated:\n```\n[Container] 2018/11/17 10:57:39 Waiting for agent ping \n[Container] 2018/11/17 10:57:39 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 10:57:39 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 10:57:39 CODEBUILD_SRC_DIR=/codebuild/output/src340609852/src \n[Container] 2018/11/17 10:57:39 YAML location is /codebuild/output/src340609852/src/testcafe.yml \n[Container] 2018/11/17 10:57:39 Processing environment variables \n[Container] 2018/11/17 10:57:39 Moving to directory /codebuild/output/src340609852/src \n[Container] 2018/11/17 10:57:39 Registering with agent \n[Container] 2018/11/17 10:57:39 Phases found in YAML: 1 \n[Container] 2018/11/17 10:57:39  BUILD: 4 commands \n[Container] 2018/11/17 10:57:39 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase INSTALL \n[Container] 2018/11/17 10:57:39 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase PRE_BUILD \n[Container] 2018/11/17 10:57:39 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase BUILD \n[Container] 2018/11/17 10:57:39 Running command echo begin \nbegin \n[Container] 2018/11/17 10:57:39 Running command testcafe -v \n0.23.3-alpha.gh3114.1 \n[Container] 2018/11/17 10:57:40 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:36) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 10:57:44 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 10:57:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 10:57:46 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1269.2999999999302\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2680.5999999996857\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2712.0999999997366\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \n\u2713 test google \n1 passed (3s) \n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.2.tgz:\n```\n[Container] 2018/11/17 11:08:00 Waiting for agent ping \n[Container] 2018/11/17 11:08:00 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 11:08:00 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 11:08:00 CODEBUILD_SRC_DIR=/codebuild/output/src313414576/src \n[Container] 2018/11/17 11:08:00 YAML location is /codebuild/output/src313414576/src/testcafe.yml \n[Container] 2018/11/17 11:08:00 Processing environment variables \n[Container] 2018/11/17 11:08:00 Moving to directory /codebuild/output/src313414576/src \n[Container] 2018/11/17 11:08:00 Registering with agent \n[Container] 2018/11/17 11:08:00 Phases found in YAML: 1 \n[Container] 2018/11/17 11:08:00  BUILD: 4 commands \n[Container] 2018/11/17 11:08:00 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase INSTALL \n[Container] 2018/11/17 11:08:00 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase PRE_BUILD \n[Container] 2018/11/17 11:08:00 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase BUILD \n[Container] 2018/11/17 11:08:00 Running command echo begin \nbegin \n[Container] 2018/11/17 11:08:00 Running command testcafe -v \n0.23.3-alpha.gh3114.2 \n[Container] 2018/11/17 11:08:01 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:37) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 11:08:06 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 11:08:06 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 11:08:07 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1422.9999999997744\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \nSat, 17 Nov 2018 11:08:08 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2927.599999999984\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \nSat, 17 Nov 2018 11:08:08 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 11:08:09 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2950.3999999997177\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \n\u2713 test google \n1 passed (3s) \n[Container] 2018/11/17 11:08:10 Running command echo finished \nfinished \n[Container] 2018/11/17 11:08:10 Phase complete: BUILD Success: true \n[Container] 2018/11/17 11:08:10 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:10 Entering phase POST_BUILD \n[Container] 2018/11/17 11:08:10 Phase complete: POST_BUILD Success: true \n[Container] 2018/11/17 11:08:10 Phase context status code:  Message:  \n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.3.tgz:\n```\n[Container] 2018/11/17 12:18:38 Waiting for agent ping \n[Container] 2018/11/17 12:18:38 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 12:18:38 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 12:18:38 CODEBUILD_SRC_DIR=/codebuild/output/src854036283/src \n[Container] 2018/11/17 12:18:38 YAML location is /codebuild/output/src854036283/src/testcafe.yml \n[Container] 2018/11/17 12:18:38 Processing environment variables \n[Container] 2018/11/17 12:18:38 Moving to directory /codebuild/output/src854036283/src \n[Container] 2018/11/17 12:18:38 Registering with agent \n[Container] 2018/11/17 12:18:38 Phases found in YAML: 1 \n[Container] 2018/11/17 12:18:38  BUILD: 4 commands \n[Container] 2018/11/17 12:18:38 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase INSTALL \n[Container] 2018/11/17 12:18:38 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase PRE_BUILD \n[Container] 2018/11/17 12:18:38 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase BUILD \n[Container] 2018/11/17 12:18:38 Running command echo begin \nbegin \n[Container] 2018/11/17 12:18:38 Running command testcafe -v \n0.23.3-alpha.gh3114.3 \n[Container] 2018/11/17 12:18:41 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:38) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 12:18:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 12:18:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 12:18:46 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1321.0000000003674\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2834.2999999999847\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2856.6000000000713\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \n\u2713 test google \n1 passed (3s) \n[Container] 2018/11/17 12:18:49 Running command echo finished \nfinished \n[Container] 2018/11/17 12:18:49 Phase complete: BUILD Success: true \n[Container] 2018/11/17 12:18:49 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:49 Entering phase POST_BUILD \n[Container] 2018/11/17 12:18:49 Phase complete: POST_BUILD Success: true \n[Container] 2018/11/17 12:18:49 Phase context status code:  Message:\n```. Have tested as requested, thank you very much for the detailed test cases. I updated the Dockerfile and created 3 new docker images in the following way:\n```\nRUN npm install -g testcafe@0.21.1\nRUN npm i -g https://github.com/AndreyBelym/testcafe/releases/download/gh-3114-1/testcafe-0.23.3-alpha.gh3114.1.tgz\n```\nSummary of results:\ntestcafe-0.23.3-alpha.gh3114.1.tgz - hangs as before\ntestcafe-0.23.3-alpha.gh3114.2.tgz - completes successfully, expected behaviour\ntestcafe-0.23.3-alpha.gh3114.3.tgz - completes successfully, expected behaviour\nCodeBuild buildspec file below. It now includes a -v on every execution, plus echo before and after the execution of testcafe so you are able to see successful termination.\n```\nversion: 0.1\nphases:\n  build:\n    commands:\n      - echo begin\n      - testcafe -v\n      - export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js\n      - echo finished\n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.1.tgz. Needs to be manually terminated:\n```\n[Container] 2018/11/17 10:57:39 Waiting for agent ping \n[Container] 2018/11/17 10:57:39 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 10:57:39 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 10:57:39 CODEBUILD_SRC_DIR=/codebuild/output/src340609852/src \n[Container] 2018/11/17 10:57:39 YAML location is /codebuild/output/src340609852/src/testcafe.yml \n[Container] 2018/11/17 10:57:39 Processing environment variables \n[Container] 2018/11/17 10:57:39 Moving to directory /codebuild/output/src340609852/src \n[Container] 2018/11/17 10:57:39 Registering with agent \n[Container] 2018/11/17 10:57:39 Phases found in YAML: 1 \n[Container] 2018/11/17 10:57:39  BUILD: 4 commands \n[Container] 2018/11/17 10:57:39 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase INSTALL \n[Container] 2018/11/17 10:57:39 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase PRE_BUILD \n[Container] 2018/11/17 10:57:39 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 10:57:39 Phase context status code:  Message:\n[Container] 2018/11/17 10:57:39 Entering phase BUILD \n[Container] 2018/11/17 10:57:39 Running command echo begin \nbegin \n[Container] 2018/11/17 10:57:39 Running command testcafe -v \n0.23.3-alpha.gh3114.1 \n[Container] 2018/11/17 10:57:40 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:36) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 10:57:44 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 10:57:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 10:57:46 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1269.2999999999302\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2680.5999999996857\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 10:57:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2712.0999999997366\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"uMtqPSB7g\" \n    } \n\u2713 test google \n1 passed (3s) \n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.2.tgz:\n```\n[Container] 2018/11/17 11:08:00 Waiting for agent ping \n[Container] 2018/11/17 11:08:00 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 11:08:00 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 11:08:00 CODEBUILD_SRC_DIR=/codebuild/output/src313414576/src \n[Container] 2018/11/17 11:08:00 YAML location is /codebuild/output/src313414576/src/testcafe.yml \n[Container] 2018/11/17 11:08:00 Processing environment variables \n[Container] 2018/11/17 11:08:00 Moving to directory /codebuild/output/src313414576/src \n[Container] 2018/11/17 11:08:00 Registering with agent \n[Container] 2018/11/17 11:08:00 Phases found in YAML: 1 \n[Container] 2018/11/17 11:08:00  BUILD: 4 commands \n[Container] 2018/11/17 11:08:00 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase INSTALL \n[Container] 2018/11/17 11:08:00 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase PRE_BUILD \n[Container] 2018/11/17 11:08:00 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 11:08:00 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:00 Entering phase BUILD \n[Container] 2018/11/17 11:08:00 Running command echo begin \nbegin \n[Container] 2018/11/17 11:08:00 Running command testcafe -v \n0.23.3-alpha.gh3114.2 \n[Container] 2018/11/17 11:08:01 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:37) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 11:08:06 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 11:08:06 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 11:08:07 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1422.9999999997744\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \nSat, 17 Nov 2018 11:08:08 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2927.599999999984\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \nSat, 17 Nov 2018 11:08:08 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 11:08:09 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2950.3999999997177\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"5xNGYVj9f\" \n    } \n\u2713 test google \n1 passed (3s) \n[Container] 2018/11/17 11:08:10 Running command echo finished \nfinished \n[Container] 2018/11/17 11:08:10 Phase complete: BUILD Success: true \n[Container] 2018/11/17 11:08:10 Phase context status code:  Message:\n[Container] 2018/11/17 11:08:10 Entering phase POST_BUILD \n[Container] 2018/11/17 11:08:10 Phase complete: POST_BUILD Success: true \n[Container] 2018/11/17 11:08:10 Phase context status code:  Message:  \n```\nCodeBuild log from testcafe-0.23.3-alpha.gh3114.3.tgz:\n```\n[Container] 2018/11/17 12:18:38 Waiting for agent ping \n[Container] 2018/11/17 12:18:38 Waiting for DOWNLOAD_SOURCE \n[Container] 2018/11/17 12:18:38 Phase is DOWNLOAD_SOURCE \n[Container] 2018/11/17 12:18:38 CODEBUILD_SRC_DIR=/codebuild/output/src854036283/src \n[Container] 2018/11/17 12:18:38 YAML location is /codebuild/output/src854036283/src/testcafe.yml \n[Container] 2018/11/17 12:18:38 Processing environment variables \n[Container] 2018/11/17 12:18:38 Moving to directory /codebuild/output/src854036283/src \n[Container] 2018/11/17 12:18:38 Registering with agent \n[Container] 2018/11/17 12:18:38 Phases found in YAML: 1 \n[Container] 2018/11/17 12:18:38  BUILD: 4 commands \n[Container] 2018/11/17 12:18:38 Phase complete: DOWNLOAD_SOURCE Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase INSTALL \n[Container] 2018/11/17 12:18:38 Phase complete: INSTALL Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase PRE_BUILD \n[Container] 2018/11/17 12:18:38 Phase complete: PRE_BUILD Success: true \n[Container] 2018/11/17 12:18:38 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:38 Entering phase BUILD \n[Container] 2018/11/17 12:18:38 Running command echo begin \nbegin \n[Container] 2018/11/17 12:18:38 Running command testcafe -v \n0.23.3-alpha.gh3114.3 \n[Container] 2018/11/17 12:18:41 Running command export DEBUG=\"testcafe:test-run:* gulp test-functional\"; testcafe \"chrome:headless --no-sandbox\" test/client/login.google.js \n(node:38) ExperimentalWarning: The fs.promises API is experimental \n Running tests in: \n - HeadlessChrome 70.0.3538 / Linux 0.0.0 \nLogin \nSat, 17 Nov 2018 12:18:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"assertion\", \n      \"assertionType\": \"notOk\", \n      \"actual\": { \n        \"_then\": [], \n        \"_taskPromise\": null \n      }, \n      \"message\": null, \n      \"options\": { \n        \"allowUnawaitedPromise\": false \n      } \n    } \nSat, 17 Nov 2018 12:18:45 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"execute-selector\", \n      \"instantiationCallsiteName\": \"Selector\", \n      \"fnCode\": \"(function(){\\n   var __f$=(function(){return document.querySelectorAll(\\\"#carcontent > thead > tr\\\");});;\\n   return function(){\\n       var args           = __dependencies$.boundArgs || arguments;\\n       var selectorFilter = window['%testCafeSelectorFilter%'];\\n       \\n       var nodes = __f$.apply(this, args);\\n       nodes     = selectorFilter.cast(nodes);\\n       \\n       if (!nodes.length && !selectorFilter.error)\\n           selectorFilter.error = __dependencies$.apiInfo.apiFnID;\\n\\n       return selectorFilter.filter(nodes, __dependencies$.filterOptions, __dependencies$.apiInfo);\\n   };\\n})();\", \n      \"args\": [ \n        [] \n      ], \n      \"dependencies\": [ \n        { \n          \"filterOptions\": { \n            \"filterVisible\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"filterHidden\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"counterMode\": true, \n            \"collectionMode\": { \n              \"@t\": \"[[undefined]]\", \n              \"data\": \"\" \n            }, \n            \"index\": null \n          }, \n          \"apiInfo\": { \n            \"apiFnChain\": [ \n              \"Selector('#carcontent > thead > tr')\" \n            ], \n            \"apiFnID\": 0 \n          }, \n          \"boundArgs\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customDOMProperties\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          }, \n          \"customMethods\": { \n            \"@t\": \"[[undefined]]\", \n            \"data\": \"\" \n          } \n        } \n      ], \n      \"visibilityCheck\": false, \n      \"timeout\": null, \n      \"apiFnChain\": [ \n        \"Selector('#carcontent > thead > tr')\" \n      ], \n      \"index\": 0 \n    } \nSat, 17 Nov 2018 12:18:46 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"1321.0000000003674\", \n        \"isCommandResult\": false, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2834.2999999999847\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": [ \n          0 \n        ], \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:command\n    { \n      \"type\": \"test-done\" \n    } \nSat, 17 Nov 2018 12:18:47 GMT testcafe:test-run:HeadlessChrome 70.0.3538 / Linux 0.0.0:driver-message\n    { \n      \"cmd\": \"ready\", \n      \"status\": { \n        \"id\": \"2856.6000000000713\", \n        \"isCommandResult\": true, \n        \"executionError\": null, \n        \"pageError\": null, \n        \"resent\": false, \n        \"result\": null, \n        \"consoleMessages\": { \n          \"log\": [], \n          \"info\": [], \n          \"warn\": [], \n          \"error\": [] \n        } \n      }, \n      \"disableResending\": true, \n      \"allowRejecting\": true, \n      \"sessionId\": \"VFkMpT0jt\" \n    } \n\u2713 test google \n1 passed (3s) \n[Container] 2018/11/17 12:18:49 Running command echo finished \nfinished \n[Container] 2018/11/17 12:18:49 Phase complete: BUILD Success: true \n[Container] 2018/11/17 12:18:49 Phase context status code:  Message:\n[Container] 2018/11/17 12:18:49 Entering phase POST_BUILD \n[Container] 2018/11/17 12:18:49 Phase complete: POST_BUILD Success: true \n[Container] 2018/11/17 12:18:49 Phase context status code:  Message:\n```. Another point to note, 0.23.3-alpha.gh3114.1 (in fact all 3 versions) execute successfully when run locally within the docker image, with the hanging only occurring when run from the CodeBuild execution environment... Another point to note, 0.23.3-alpha.gh3114.1 (in fact all 3 versions) execute successfully when run locally within the docker image, with the hanging only occurring when run from the CodeBuild execution environment... This appears to work perfectly. Thank you for this Alex.. This appears to work perfectly. Thank you for this Alex.. ",
    "willscripted": "Looks like I have the same problem with 0.23.3 when passing in an outStream to a reporter. Appears to be an order-of-operations issues here\n```\nthis.outStream.end();\nawait new Promise(resolve => {\n     this.outStream.once('finish', resolve);\n     this.outStream.once('error', resolve);\n});\n```\nIf this.outStream.end() fires the finish event synchronously, the promise will never resolve. The once handler is not called for passed events.\nThe fix should be pretty straightforward; just create the promise before this.outStream.end()\n```\nconst p = new Promise(resolve => {\n     this.outStream.once('finish', resolve);\n     this.outStream.once('error', resolve);\n});\nthis.outStream.end();\nawait p;\n``. Looks like I have the same problem with0.23.3when passing in anoutStream` to a reporter. Appears to be an order-of-operations issues here\n```\nthis.outStream.end();\nawait new Promise(resolve => {\n     this.outStream.once('finish', resolve);\n     this.outStream.once('error', resolve);\n});\n```\nIf this.outStream.end() fires the finish event synchronously, the promise will never resolve. The once handler is not called for passed events.\nThe fix should be pretty straightforward; just create the promise before this.outStream.end()\n```\nconst p = new Promise(resolve => {\n     this.outStream.once('finish', resolve);\n     this.outStream.once('error', resolve);\n});\nthis.outStream.end();\nawait p;\n```. We're seeing a similar [?the same?] issue on Edge 18 / Windows 10, too. Looks like testcafe is timing out waiting for an element to appear on the page.. ",
    "gcofficial": "@AndreyBelym\nHi guys. I have the same issue im my project. When do you plan to fix this?. @AndreyBelym\nHi guys. I have the same issue im my project. When do you plan to fix this?. ",
    "rbpaul2": "Are there any workarounds? Currently experiencing this issue when running my tests on a build server using firefox:headless. Are there any workarounds? Currently experiencing this issue when running my tests on a build server using firefox:headless. ",
    "dobharweim": "Any workarounds on this? I cam getting the same error when I try to access iFrame by position - but only certain pages.\n.switchToIframe(Selector(() => {\n        var lst =  document.querySelectorAll(\"*[id^='iframe']\");\n        return lst[1];\n        }))\nEDIT:\nThe error we were seeing was switching to an iFrame with no content - basically a dummy iFrame on the page. Once we changed to location of the iFrame we were looking to switch to it worked.. Any workarounds on this? I cam getting the same error when I try to access iFrame by position - but only certain pages.\n.switchToIframe(Selector(() => {\n        var lst =  document.querySelectorAll(\"*[id^='iframe']\");\n        return lst[1];\n        }))\nEDIT:\nThe error we were seeing was switching to an iFrame with no content - basically a dummy iFrame on the page. Once we changed to location of the iFrame we were looking to switch to it worked.. ",
    "daniellboy": "I think i have same problem with this issue https://github.com/DevExpress/testcafe/issues/2900\nAnw, what's the possibility the cause of testcafe can not autoscroll in certain website page? . I think i have same problem with this issue https://github.com/DevExpress/testcafe/issues/2900\nAnw, what's the possibility the cause of testcafe can not autoscroll in certain website page? . ",
    "nqwang": "@AlexKamaev I have read this help from website, but I would like to get assert message. In the Assertion API, i can pass a message in expect method, such as below code.\nawait t\n    .expect({ a: 'bar' }).eql({ a: 'bar' }, 'this assertion will pass')\n    .expect({ a: 'bar' }).eql({ a: 'foo' }, 'this assertion will fail');\nI want to get \"this assertion will pass\" in report.. @AlexKamaev Thanks for your feedback. If I use metadata to pass information to report. Is there a way to set metadata after test completed. See below sample code.\nlet vpCount = 10;\ntest\n.meta({\n    Id: `${vpCount}`,\n})\n('Sample', async t => {\n    vpCount = 13\n});\nIn this code, I can only get 10 in report. But I want to get 13 in report. Is there any solution for this?. @AlexKamaev Thanks for your feedback. This workaround can help me pass information to report. But this workaround is not very friendly for both reporter and test scripts. They need to have an agreement for shared data format. The purpose for this requirement is that I want to get total vp account, passed vp account, failed vp account and blocked vp account to report. Is there any other convenience way to get these information? \nHere is an sample.\n``\nfixturetest.pagehttp://example.com`;\ntest('test1', async t => {\n    await t.\n        .expect('string1').eql('string1')\n        .expect('string2').eql('string2')\n        .expect('string3').eql('string31') //Failed vp\n        .expect('string4').eql('string4')\n});\n```\nI would like to get a result like total vp is 4, passed vp is 2, failed vp is 1 and blocked vp is 1 in report.\n. @AlexKamaev Anyway, thanks for your support. Looking forward TestCafe will have a feature for verfication point. \ud83d\udc4d . I am trying a Windows OS on Azure today, and I found a workaround for TestCafe is that to set full DNS name to 127.0.0.1 on hosts file to avoid computer name check. \nSo that, I think this solution could also apply on Ubuntu OS, but I am not an expert on Linux OS. Maybe some Linux guys can also set this on Linux OS.. ",
    "Harisharavindt": "Thanks for the solution ....  But actually my Main scenario is to reduce the size of the Cursor pointer .Can you help me  with that Issue .\n\"The scenario to disable the mouse Pointer is when we have full of Verification and there is no need of cursor and I thought we may Avoid !!! that's the reason.\"\n. Thanks Lot :)\nOn Wed, Nov 21, 2018, 7:26 PM AlexKamaev <notifications@github.com wrote:\n\nClosed #3139 https://github.com/DevExpress/testcafe/issues/3139.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/DevExpress/testcafe/issues/3139#event-1980114926, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ArHBDHJP4HCUjoWRiJ_145EHVZlrKl73ks5uxVt7gaJpZM4YrICY\n.\n. Hi Alex ,Disabling the Mouse Pointer works Fine :)\n But reducing the size of the Mouse Pointer didn't work with the workaround . I have added the code can you Look into it \n\nimport { ClientFunction } from 'testcafe';\nimport { Selector } from 'testcafe';\nfixture test\n    .page http://example.com\n    .beforeEach(async t => {\n        await disableCursor();\n    })\nconst disableCursor = ClientFunction(() => {\n    var styleElement = document.createElement('style');\n    styleElement.innerHTML = '.cursor-hammerhead-shadow-ui {width:10px; height:40px }';\n    document.head.appendChild(styleElement);\n});\ntest('test', async t => {\nawait t.click(Selector('body > div > p:nth-child(3) > a'))\nawait t.click(Selector('#header > div.navigation > ul > li:nth-child(1) > a'))\n});. ",
    "o5": "It's not TestCafe related issue! I just tried several times in Firefox 63.0.3 (64-bit) and always without error.. ",
    "HariHaraReddyD": "I am trying to implement page object model.\nIn order to use locators i have to create objects in each and every tests in order to access them.\nInstead, why can't i have a common spec where all objects are stored and use that common spec reference in tests in order to access the Selectors from all the files?. Thanks for the response. \nYes i understand the objective of Page object model. But here what i am trying to achieve is, avoiding or trying to escape the compulsion of importing all the objects in the test spec. Instead finding a way of wrapping up all the objects into a common spec and accessing the Selectors via this common object in many tests.\nBy this what i am trying to achieve, i don't need to import all the objects across multiple pages into each and every test in my project.. ",
    "Fluidbyte": "Seems the best way to solve a blocking error is to open an issue, seems I missed the --no-sandbox flag.\ntestcafe \\\"chromium:headless --no-sandbox\\\" __tests__/integration/**/*.test.js. ",
    "pgoos": "Is there any workaround at the moment that makes running testcafe test cases from VS Code Test Runner plugin work?. ",
    "sebpalluel": "Thanks for the fast answer.\nI'm aware that you can upload an array of files but the limitation is that it will upload a flat array of files without the nested paths.\nFor instance if i use the function such as described in the doc \njavascript\ntest('Uploading', async t => {\n    await t\n        .setFilesToUpload('#upload-input', [\n            './uploads/1.jpg',\n            './uploads/folder_0/2.jpg',\n            './uploads/folder_1/folder_0/3.jpg'\n        ])\n        .click('#upload-button');\n});\nThe upload gives me this \n['1.jpg', '2.jpg', '3.jpg']\ninstead of this\n['1.jpg', 'folder_0/2.jpg', 'folder_1/folder_0/3.jpg']. ",
    "shyedhu": "Thanks @miherlosev  , It woks good now . Thanks for your support !. Thanks @miherlosev  , it works fine now  . Thanks again for your good support !!!. +1. I would like to try video recording feature with testcafe in my project .. Can you please let me know when you have a plan to release the video recording feature?. > Hi @shyedhu, we're going to release it in testcafe@1.0.0 in January 2019.\nThanks for your quick response\n. Please note : --test-meta and --fixture-meta should work latest testcafe version , my concern is --test-meta and --fixture-meta doesn't work on testcafe v0.21.1 and v0.22.0 , since testcafe v0.21.1 and v0.22.0 are stable version against my web project , can you please help what exact json value needs to passed over CLI and test file also . i checked the https://github.com/DevExpress/testcafe/pull/2841 , but not clear for stable testcafe v0.21.1 and v0.22.0. ",
    "BigYu": "Hi @miherlosev  Thanks for your reply but unfortunately it does not work for me.\nI'm not going to reopen this issue because it happens even I use some other automation test software like puppeteer, and still crashes with Chromium. I updated my Chrome to the latest version which is Version 71.0.3578.98 (Official Build) (64-bit) and the issue is still there.\nTestcafe works for FF and IE on my machine. It is so weired and mysterious. I will seek for help on Chrome forum. . ",
    "GertB1": "Hi\nNot sure if it could help but this is the error that I get running the testcafe test\nTypeError: Cannot read property '0' of null\n\n266 |        this._handlePlainObject(val);\n   267 |};\n   268 |\n   269 |DecodingTransformer.prototype.transform = function () {\n   270 |    this.visitedRefs[0] = true;\n>271 |    this._handleValue(this.references[0], this.references, 0);\n   272 |\n   273 |    return this.references[0];\n   274 |};\n   275 |\n   276 |\n\nat DecodingTransformer.transform (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\replicator\\index.js:271:38)\n   at module.exports.Replicator.decode (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\replicator\\index.js:559:24)\n   at SelectorBuilder.decode (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\testcafe\\src\\client-functions\\client-function-builder.js:142:32)\n   at SelectorBuilder._processResult (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\testcafe\\src\\client-functions\\selectors\\selector-builder.js:188:32)\n   at _processResult (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\testcafe\\src\\client-functions\\client-function-builder.js:137:25)\n   at $$testcafe_test_run$$hXJq0nl1P$$ (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\testcafe\\src\\api\\test-run-tracker.js:76:16)\n   at $$testcafe_test_run$$hXJq0nl1P$$ (C:\\Work\\e2e\\testcafe-e2e\\node_modules\\testcafe\\src\\api\\test-run-tracker.js:76:16) . Hi @zoejobson\nI upgraded to 1.0.0-alpha.1 of testcafe and the error went away. \nHope it helps. ",
    "izisfro": "I am experiencing the exact same issue. @zoejobson did you have any progress in resolving/working around the issue? I have been able to figure out in which area of our code causes the issue but the only thing that stands out is a click command where the selector is on a data attribute '[data-testid=\"neste\"]'. ",
    "JamieMason": "Apologies if this is not relevant but I think my issue is the same as this one and, from what I can tell, it is an issue with the JSON reporter.\nI think this because when running testcafe --concurrency 1 -r spec 'chrome:headless --allow-insecure-localhost' ./some.ui.spec.js testcafe will run the one test and exit as expected, but when running testcafe --concurrency 1 -r spec,json:/path/to/test-report.json 'chrome:headless --allow-insecure-localhost' ./some.ui.spec.js, testcafe will run the one test \u2013 but not exit. \nThe output is the same, a successful test run, but the Terminal is not released back to the user.\nI am using testcafe 0.23.2 in Node 8.11.1 on macOS 10.12.6.. Digging into the commit history for testcafe@0.23.2 I found this recent commit 6f8db5e which relates to waiting for streams, so I tried downgrading to testcafe@0.23.1 and can confirm that fixes my issue. I don't know but I think there may have been a regression in 6f8db5e unfortunately @AndreyBelym.\nIt might be worth also trying your issue with testcafe@0.23.1 @bhreinb.. ",
    "Luciefer66": "This test work with Chrome but with Edge anything was type in titreInput field\nimport { Selector } from 'testcafe';\nimport { seConnecterConcepteur, urlPageRacine, sitePixels } from './commun';\nimport { nomModule } from './commun';\nfixture.only('Modules');\nfixture Modules\n.page (urlPageRacine)\n.beforeEach(async t  => {\n    seConnecterConcepteur(t)\n    await t.click(sitePixels)\n});\ntest('Ajouter un module', async t => {\nconst descriptionModule = \"Module Testcafe\";\nconst lienAjouterModule =  Selector('a').withText('Ajouter un module');\nconst titreInput = Selector('textarea').withAttribute('class','m-textfield__input');\nconst descriptionInput = Selector('textarea').withAttribute('class','m-textarea__input');\nconst boutonEnregistrer = Selector('span').withText('Enregistrer');\n\nawait t\n    .click(lienAjouterModule);\n\nawait t.typeText(titreInput, nomModule);   \nawait t.typeText(descriptionInput, descriptionModule);\n\nawait t\n    .click(boutonEnregistrer);\n\n}\n);\n. \n\n\n. ",
    "Niceplace": "@AndreyBelym I'm afraid I still have the issue :( \nWere you able to reproduce or what I'm doing should not work anyways ?\n\n. ",
    "AlexNaryzhny": "Looks like the same code work in Edge 17. ",
    "chrisshiplet": "Sorry for the late reply! Just got back from vacation. Your suggestion works just fine - but not with the alpha tag, only latest. alpha causes an unhandled rejection when running \nconst loginLink = ReactSelector('TopNav Link').withProps({ to: '/sign-in' });\nawait t.click(loginLink);\nAnyway, I think latest will work fine for me for now. Thank you for the help!. ",
    "morganedmonds": "I maintain a fairly large Testcafe suite on my current project, and we depend heavily on role-switching. I've been struggling with what appears to be this issue since 0.23.2 was released. We're going to pin 0.23.1 in our project for now. Definitely looking forward to the fix, thank you for your work on it!. Hi @AndreyBelym, yes we figured that out. I was able to work around the issue by clicking on a link to the URL rather than navigating to it directly. I'm afraid I don't have time to put together a sample project in the next couple of weeks with the holidays, and I can't share our app code.  Thank you for following up!. ",
    "JohnHartman939": "just to clarify I mentioned that I thought I might be having an ssl issue, This is not the case. I was thinking I had an ssl issue because the response I was getting returned unreadable chars, turns out the response body was gzipped after unzipping the response body and running toString on the unzipped Buffer object I was able to see the text. \nThat said this issue is still occurring  . ",
    "anuragpattanayak3": "\nThis refers to the node version and the windows pc version\n\nthis refers to the testcafe running environment. \n. But getting passed for all posibilities for version version 0.20.4\n. As per privacy concerns we can not share our screen cast and report publicly. Is there any way we can cast the screen as one on one in anydesk or teamviewer.. Thank you for your support. Kindly give us some time as we are trying to reproduce the issue or else we will provide all the details in your public mail id.. hi andrey\ni have sent all the details to your mail.\nkindly check.\nThank you . Thank you for your quick response.. Thank you for your suggestions. Actually previously i have tried with skipping js errors. It was not working, So i will try to see which version has the issue and try for that access thing also. Thank you\n. Hi Andrey\nI tried with the versions and found out that upto v0.20.4 its working on every versions but the issue is persistent from v0.20.5 onwards. Kindly check whether there are some modifications in the iframe context. I am still trying for that access thing. i will confirm as soon as possible.\nThank you. ",
    "suncodeer": "How could I get inner text of testcafe ?. ",
    "Meemaw": "@AlexSkorkin Hey Alex, The link seems to expire on gitlab CI. You can see its content under Your complete test report:. I have also added the code you asked for.. Hey @AndreyBelym ,\nGitlab yaml:\ntest:e2e:\n  image: circleci/node:10.14-browsers\n  before_script:\n    - cd frontend\n    - node_modules/gulp/bin/gulp.js --gulpfile ./gulpfile.js e2e\n  script:\n    - LOGIN_USER=\"$E2ETEST_LOGIN_USER\" LOGIN_PASS=\"$E2ETEST_LOGIN_PASS\" yarn test:e2e:headless\n  dependencies:\n    - fe:install_packages_run_linters\nnode command:\n\"test:e2e:headless\": \"testcafe chrome:headless src/test/e2e --hostname 127.0.0.1 --app \\\"yarn start && wait-on http://localhost:3000\\\"\"\nCommands in before_script are not important (setting up env). Dependencies are just node_modules from previous job. I used image: circleci/node:10.14-browsers as written in your docs and it worked at first but then suddenly stopped working for every pipeline.\nI have checked the pipeline that succeded and it also had the error which I assume is not the problem:\nFatal server error:\n(EE) Server is already active for display 99\n    If this server is no longer running, remove /tmp/.X99-lock\n    and start again.\n(EE)\nI would say it is something with Gitlab CI (image?), but then again I'm using the one advertised in your docs.\n. @AndreyBelym, I have invited you as the developer to the project.. @AndreyBelym, thank you for help! I managed to figure out where the problem was. It seems wait-on waits for a HEAD request by default. Server can answer to that before it is actually ready to serve content to browser. Fix was to change wait-on http://localhost:3000 to wait-on http-get://localhost:3000.. ",
    "dej611": "Hi @peteygao,\nI could not make it work without those flags. I have the same concerns as yours on the security but couldn't make it work without: the testcafe instance would just hang on initialisation step without starting and then exit on timeout.\nIf you could share part of your configuration to compare maybe we could sort that out and remove those two flags to covey better security also in the CI environment.. Hi @VasilyStrelyaev,\nI think that I just missed the Gitlab recipe at the time. I did see the docker image though and I thought about using it, although the idea to create a minimal custom one won. There's no specific intent to use a custom one other than an excercise at the time to make it work. \ud83d\ude04 \nI think your image it is better suited for the task (as it includes also firefox, while in the doc here there's just Chrome): I could add a note about the Gitlab recipe on the top as an alternative way to do the same setup and keep this one with a custom image, as you recommend. Would that work?. Sorry, no Internet access in the last few weeks. I've now updated the PR as requested: let me know if other changes are required.. ",
    "neekfenwick": "I believe I'm seeing the same problem, running testcafe@0.23.3 latest release.. I don't think this fix has been included in a new release yet.. can you please explain how to run with this new version to see if it fixes my problem or if I need to raise a new bug?  I currently install testcafe by having \"testcafe\": \"^0.23.0\", in my 'dependencies' section of package.json.. ",
    "safm": "@AlexKamaev, I created a small repo here https://github.com/safm/test-cafe. I am loading google.com. I can consistently reproduce the issue. Please see the attached screenshot of my terminal\n\n. ",
    "johnrellis": "Thanks @AlexKamaev , just curious about your release cycle for something like this, is it days or weeks?. Thanks @AlexKamaev, i shall keep an eye out and fingers crossed \ud83d\ude04  . ",
    "christianpenrod7984": "I'm unable to provide the source code or url for this issue.. ",
    "anuragpat1234": "As this is a little bit confidential, i wont be able to share the page details in public forum. So from my side i can do a screenshare in anydesk or teamviewer . Or i can share all the details in any private email id.\nmy complete code::\nimport { Selector } from 'testcafe'; // first import testcafe selectors\nfixture Getting Started// declare the fixture\n    .page https://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;  // specify the start page\n//then create a test and place your code there\ntest('My first test', async t => {\n    await t\n    .wait(5000)\n    .maximizeWindow()\n    await t.switchToIframe('#myframe')\n    .typeText('#userName', 'xxxxxxxxxxxx')\n    .typeText('#pwd', 'xxxxxxxxxxxxx')\n    .click('#loginBtn')\n    //await t.switchToIframe('#myframe')\n    .typeText('#otp', 'xxxxxxxxxxxxx')\n    .click('#ontimePasswordForm > div:nth-child(3) > div')\n    .wait(5000)\nawait t.switchToMainWindow()\n.click('div[class=\"top-navigation\"]>:nth-child(1)>:nth-child(1)>ul>:nth-child(5)>a')\n.wait(2000)\n.click('#formDiv > div > nav > div.top-navigation > div > div > ul > li:nth-child(5) > div > div.content-container.help > div > div:nth-child(1) > p')\n.wait(2000)\n\nawait t.switchToIframe('#myframe')\n.wait(5000)\n.click('#nexttwoforms > div:nth-child(1) > div > a')\n.wait(5000)\n\n}); \ni am having issue in that last i frame only.. working in v20.4. ",
    "mikerhysmith": "Thanks for pointing me in the direction of that repo, it looks like it was an issue with our router configuration rather than TestCafe ! Thanks for the great tool ! . ",
    "infctr": "Currently I've defined types locally and doing a type cast \nts\n((createTestCafe as unknown) as TestCafeFactory)('localhost', 1338). @AndreyBelym thanks for the tip, figured out how to do it!. Apparently that didn't work as expected \ud83d\ude15. Added an overload to reporter method, it should be added to the docs tho.  I'll try to look at the tests later, iydm. Btw, I can't seem to run tests even at master branch. What am I missing? \nsh\nnpx gulp test-server\n\n. Any way I can restart the jobs on CI? The errors don't seem to be PR related. @testcafe-build-bot retest. I used yarn's resolutions field to make testcafe use project's typescript version\njson\n  \"resolutions\": {\n    \"**/typescript\": \"3.2.2\"\n  }\nhttps://yarnpkg.com/lang/en/docs/selective-version-resolutions/. @AlexKamaev thanks for the tip, that works!. Wow, adding --disable-dev-shm-usage actually helped!. I can confirm that 1.1.0 introduced a regression. \n. I suggest importing and using node typings directly\nts\nimport { TlsOptions } from 'tls';. @types/node could be added as a dependency then with \nts\n/// <reference types=\"node\" />\nCould this be an option?. Added a dependency. Added overloads and tests, have a look at it, not sure what should be tested here tho. ",
    "feugy": "@LavrovArtem thanks a million!. ",
    "TerezaMihova": "Thank you! \nThe --skip-js-errors option helped. Now it's all running fine.. ",
    "testorangemac": "Hello Alex,\nThank you for your quick reaction. I was afraid of that. Normally it's very difficult to provide enough detail or a project/code.\nHowever, I have better news. Someone found a solution by logging the actions again on a local PC which repeatedly could reproduce the problem and it turns out we forgot to do a React Dimensions update at the right moment;\nThe web application is resized and the viewport layouts are rendered from a default value of 4 to a new value of 1. The first slider action is based on the old dimensions and the click is basically the same, but since the values are totally different the offset is slightly off.\nSo the fix is on our side unfortunately. For the time being, my workaround is 2 clicks (1 for the update) until this is fixed by the team.\nSorry for the inconvenience.. ",
    "StrangeKarma": "Also I am using the npm package testcafe-browser-provider-selenium for connectivity, although my primary problem is I cannot access my testfiles in the docker container. . Hello Mikhail, I tried your suggestion, also as a note I'm using docker desktop which is sharing the entire C: drive with docker. Any other suggestions, or help with troubleshooting will be greatly appreciated. Thanks. . Hello again Mikhail, just a quick update on the issue I'm experiencing. I removed everything from my rancher compose besides the hub and chrome to isolate the issue better. Now when I run my script i get the following error:\n\nExecuting task: npm run marketanalytics-tstmain-AnalyticsTabPageHealthChecks <\n@ marketanalytics-tstmain-AnalyticsTabPageHealthChecks c:\\costar-suite-market-search\\tests\ncucumber-js.cmd ./features/AnalyticsTabPageHealthCheck.feature $ cucumber.js --tag 'AnalyticsTabPageHealthChecksTstMain' --format json:./reports/report.json --world-parameters \"{\\\"browser\\\": \\\"rancher\\\"}\"\n\nServer started on port 3000\n(node:22004) UnhandledPromiseRejectionWarning: WebDriverError: Session [b3d5346123de55944bbed0bf907596a0] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]\n    at Object.checkLegacyResponse (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\error.js:585:15)\n    at parseHttpResponse (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\http.js:533:13)\n    at Executor.execute (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\http.js:468:26)\n    at \n    at process._tickDomainCallback (internal/process/next_tick.js:228:7)\n(node:22004) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\n(node:22004) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\nF---F.(node:22004) UnhandledPromiseRejectionWarning: WebDriverError: Session [780f02deb1e0434b13f7e87620642e7c] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]\n    at Object.checkLegacyResponse (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\error.js:585:15)\n    at parseHttpResponse (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\http.js:533:13)\n    at Executor.execute (c:\\costar-suite-market-search\\tests\\node_modules\\selenium-webdriver\\lib\\http.js:468:26)\n    at \n    at process._tickDomainCallback (internal/process/next_tick.js:228:7)\n(node:22004) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)\nHere is the rancher compose which worked perfectly when i was using Specflow:\nversion: '2'\nservices:\n  firefox:\n    image: selenium/node-firefox:3.5.1\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    networks:\n      - int-prd-dockeroverlay01\n    environment:\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444 \n  chrome:\n    image: selenium/node-chrome:3.5.1\n    volumes:\n      - /dev/shm:/dev/shm\n    depends_on:\n      - hub\n    networks:\n      - int-prd-dockeroverlay01\n    environment:\n      - DBUS_SESSION_BUS_ADDRESS=/dev/null\n      - HUB_PORT_4444_TCP_ADDR=hub\n      - HUB_PORT_4444_TCP_PORT=4444 \nhub:\n    image: selenium/hub:3.5.1\n    ports:\n      - \"4444:4444\"\n  hub-lb:\n    image: rancher/lb-service-haproxy:v0.7.9\n    ports:\n    - 4001    # external load balancer port\n    labels:\n      io.rancher.container.agent.role: environmentAdmin\n      io.rancher.container.create_agent: 'true'\n      io.rancher.scheduler.global: 'true'\n. Any idea or suggestion will be greatly appreciated. Thanks. . ",
    "istvandesign": "Did you try setting an explicit wait before the refresh ? . Hi Andrey, thanks for opening this issue,\nHere is how to reproduce this as easily as possbile from my point of view : \n1. Install an addon which opens a login modal, e.g Markets4Sheets and open the login modal with Addons->Markets4Sheets->Login (this is just a random example, I am not associated with Markets4Sheets in any way)\n\nUse the upper specified test code to assert something after switching inside #userHtmlFrame when the Login modal is open. e.g await browser.expect(Selector('#username').exists).notOk();\nResults : \nFirst the test hangs completely\nSecond inside the console I'll have a No log from hammerhead.js.2 :\n\"There was an error during the transport or processing of this request. Error code = 10, Path = /wardeninit\"\n\n\n\nIf I remove .exists from  await browser.expect(Selector('#username').exists).notOk();, then the test will fail withexpected [Function: __$$clientFunction$$] to be falsy. or pass with .ok(), which seems normal.\nThe same happens with .innerText, if I add .innerText instead of .exists, the test hangs, if I remove it, then it passes or fails. (same with getStyleProperty)\nIf I try await t.expect(Selector('#username').innerText).contains('') outside of #userHtmlFrame with only \nawait t.switchToIframe(modaldialogFrame);\n  await t.switchToIframe(sandboxFrame);\nthen the test will fail/pass without hanging. So the bug can be reproduced only inside #userHtmlFrame. \nIf I close the modal manually when a test is hanging I receive  the following error and the test fails :\n```\nDEBUGGER PAUSE ON FAILED TEST:\nTypeError: Cannot read property '0' of null\nBrowser: Chrome 71.0.3578 / Windows 10.0.0\n266 |        this._handlePlainObject(val);\n267 |};\n268 |\n269 |DecodingTransformer.prototype.transform = function () {\n270 |    this.visitedRefs[0] = true;\n\n271 |    this._handleValue(this.references[0], this.references, 0);\n272 |\n273 |    return this.references[0];\n274 |};\n275 |\n276 |\n```\n\nMy main concern is that Google is injecting some code for sandboxing in the 3rd iframe with a library called Google Caja, which maybe interferes with testcafe's proxy. (however clicking and typing still works with .click and .typeText, so the interference is only with .exists and other methods/properties on the selectors.\nA related issue to this is that I cannot select anything inside #userHtmlFrame in TestCafe Studio. . Hi Andrey, thanks for opening this issue,\nHere is how to reproduce this as easily as possbile from my point of view : \n1. Install an addon which opens a login modal, e.g Markets4Sheets and open the login modal with Addons->Markets4Sheets->Login (this is just a random example, I am not associated with Markets4Sheets in any way)\n\nUse the upper specified test code to assert something after switching inside #userHtmlFrame when the Login modal is open. e.g await browser.expect(Selector('#username').exists).notOk();\nResults : \nFirst the test hangs completely\nSecond inside the console I'll have a No log from hammerhead.js.2 :\n\"There was an error during the transport or processing of this request. Error code = 10, Path = /wardeninit\"\n\n\n\nIf I remove .exists from  await browser.expect(Selector('#username').exists).notOk();, then the test will fail withexpected [Function: __$$clientFunction$$] to be falsy. or pass with .ok(), which seems normal.\nThe same happens with .innerText, if I add .innerText instead of .exists, the test hangs, if I remove it, then it passes or fails. (same with getStyleProperty)\nIf I try await t.expect(Selector('#username').innerText).contains('') outside of #userHtmlFrame with only \nawait t.switchToIframe(modaldialogFrame);\n  await t.switchToIframe(sandboxFrame);\nthen the test will fail/pass without hanging. So the bug can be reproduced only inside #userHtmlFrame. \nIf I close the modal manually when a test is hanging I receive  the following error and the test fails :\n```\nDEBUGGER PAUSE ON FAILED TEST:\nTypeError: Cannot read property '0' of null\nBrowser: Chrome 71.0.3578 / Windows 10.0.0\n266 |        this._handlePlainObject(val);\n267 |};\n268 |\n269 |DecodingTransformer.prototype.transform = function () {\n270 |    this.visitedRefs[0] = true;\n\n271 |    this._handleValue(this.references[0], this.references, 0);\n272 |\n273 |    return this.references[0];\n274 |};\n275 |\n276 |\n```\n\nMy main concern is that Google is injecting some code for sandboxing in the 3rd iframe with a library called Google Caja, which maybe interferes with testcafe's proxy. (however clicking and typing still works with .click and .typeText, so the interference is only with .exists and other methods/properties on the selectors.\nA related issue to this is that I cannot select anything inside #userHtmlFrame in TestCafe Studio. . ",
    "oemekaogala": "Hello @Farfurix ,\n1. testcafe@0.21.1\n2. I have two packages that exist here:\nFirst - a test package that uses a page object model with TestCafe to write test easier\nfirst_structure.txt\nSecond - A dummy website that pulls in the test package ^^^ (npm install path/to/test/package) to run some UI automation tests second_structure.txt\n3. I have no problem running this if I include this code snippet all together. The issue arises when I try to separate the actions and asserts.\nNote: Because of the custom test framework being built on top of TestCafe, I can not do the import { t } from 'testcafe' instead, I would need to pass the test controller t from the test case when it needs the context.. You are the GOAT! Everything is working well. Thanks for bringing this to my attention. . ",
    "janhartmann": "Manually removing ...any[] from the type Expression = .... makes the test run again. I am wondering how Testcafe is handling this TypeScript compilation?. Okay, I am not able to use // @ts-ignore as this error is spawning from an external library type definitions.. Would Testcafe be able to upgrade TypeScript to 3? . Hi @miherlosev \nSome of the types I am using is using the ...any[] syntax, which is only supported in TypeScript 3.X.\nThe ...any[] is supposed to stand for \"any number of elements of type any\" in this tuple. See also https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html#rest-elements-in-tuple-types\nThe issue here is directly related to the TypeScript version used in Testcafe. :). Great, thank you! :-). Great information @infctr, I will try that. Thank you.. Related: https://github.com/DevExpress/testcafe/issues/3401. ",
    "betic0": "Hi Andrey,\nThanks a lot for your feedback.\nI've tried using the --skip-js-errors parameter in the testcafe runner config and it seems works fine now. I've upgraded to 1.0.0 and it's running fine using the javascript skipping errors.\nIf you still need the information to fix anything you consider, please let me know and I provide whatever it's possible from my side.\nThanks!. ",
    "domoritz": "I have no idea how I accidentally filed this here... Sorry about that. . ",
    "vitalics": "Typed spread operator comes with typescript 3.0. Make sure that your update your dependencies\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html. ",
    "sophieSpring": "I am working with mkai on this.\nA general example would be \nfixtureTest`.page('https://nypost.com/');\ntest(test1, async t => {\n    await t.wait(15000);\n});\ntest(test2, async t => {\n    await t.wait(15000);\n});`\nsee https://github.com/DevExpress/testcafe-hammerhead/issues/1885\nIf you start the tests and open the network tab you can see the hammerhead.js failing. There are several thousand requests made until testcafe gives up and the browser disconnects. This happens with any kind of test.\n\nAs already pointed out this is because the request headers are bigger than 8kb and therefore rejected by node's http module. As far as we know Node introduced this feature recently, see https://nodejs.org/api/errors.html#errors_hpe_header_overflow\nWe made it work by customizing the requests and limiting them to only the scripts and domains we need for testing. Without these custom requests testcafe is not usable.\nAs this  seems to be a rather significant issue that is likely to cause more problems in the future we would like to know if this is something you guys are aware of and might be able to fix.\n. ",
    "mkai": "Thanks for looking into it.\nAlso, --max-http-header-size has been backported to Node 10.15, so using it to raise the limit to something higher than 8k would be another workaround.\nhttps://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V10.md#2018-12-26-version-10150-dubnium-lts-mylesborins\n. ",
    "jcollum-nike": "Does anyone have a working workaround that I can use against a production site? \nSophie said: \n\nWe made it work by customizing the requests and limiting them to only the scripts and domains we need for testing. Without these custom requests testcafe is not usable.\n\nIs there some way I can tell Testcafe to ignore/redirect calls to certain urls when hitting a production site? I need to test a deployed site. . My simple workaround: nvm install 8.13 \nApparently this was introduced in 8.14. This workaround will probably work fine for a while but a better fix will need to be sorted out. \nhttps://nodejs.org/en/blog/release/v8.14.0/\n. Also added a script for checking the version as a pretest script: \n```\nconst engines = require('./package.json').engines;\nconst semver = require('semver');\nconst version = engines.node;\nif (!semver.satisfies(process.version, version)) {\n  console.log(\n    Required node version ${version} not satisfied with current version ${\n      process.version\n    }. No really, the tests will not run correctly in versions after 8.13. See https://github.com/DevExpress/testcafe/issues/3438\n  );\n  process.exit(1);\n}\n``` . Also @AlexKamaev do you have an older docker image for TC that uses Node <8.14? That would be super helpful. I can make one of course, if needed. . Excellent thanks @AlexKamaev . For the google searchers: I fixed this by doing this: \n``\n  fixture${fixtureName}.page${baseUrl}/${setting.country}/help`;\nconst mock = RequestMock()\n    .onRequestTo(/.facebook./)\n    .respond('', 200, { 'access-control-allow-origin': '*' })\n.onRequestTo(/.*google.*/)\n.respond('', 200, { 'access-control-allow-origin': '*' })\n\n.onRequestTo(/.*fullstory.*/)\n.respond('', 200, { 'access-control-allow-origin': '*' })\n\n.onRequestTo(/.*neo.js/)\n.respond('', 200, { 'access-control-allow-origin': '*' });\n\nsetting.slugs.forEach(slug => {\n    const articleUrl = ${baseUrl}/${setting.country}/help/a/${slug};\ntest.requestHooks(mock).page(`${articleUrl}`)(`Slug: ${slug}`, async t => {\n\n```. Sorry for the double post, I had planned on deleting this issue because docker isn't the issue. I didn't see that it had gotten a response. . ",
    "jcreek": "Hi folks, how exactly would I go about implementing --max-http-header-size ? I've tried appending it to the  scripts in the package.json in multiple ways as below, and by passing it into my command line as npm test --max-http-header-size=20480 but neither solved the issue, so I assume I'm using the flag wrong. I've also tried with significantly larger numbers to the same effect. \n\"scripts\": {\n    \"test\": \"testcafe chrome --max-http-header-size=20480 tests/\"\n  }\n\"scripts\": {\n    \"test\": \"testcafe chrome tests/ --max-http-header-size=20480\"\n  }. ",
    "Victoryyyyy": "Hi Lavrov Artem, I did update the fields. All I can provide. Thanks . ",
    "KingM1": "This is something that I started seeing as well. Just upgraded to testcafe 1.1.0 from testcafe 0.23.2. It happens intermittently\n```\n/Users/.../node_modules/brotli/build/encode.js:3\n1<process.argv.length?process.argv[1].replace(/\\/g,\"/\"):\"unknown-program\");b.arguments=process.argv.slice(2);\"undefined\"!==typeof module&&(module.exports=b);process.on(\"uncaughtException\",function(a){if(!(a instanceof y))throw a;});b.inspect=function(){return\"[Emscripten Module object]\"}}else if(x)b.print||(b.print=print),\"undefined\"!=typeof printErr&&(b.printErr=printErr),b.read=\"undefined\"!=typeof read?read:function(){throw\"no read() available (jsc?)\";},b.readBinary=function(a){if(\"function\"===\n                                                                                                                                                                                                                              ^\nTypeError: Cannot read property 'callsite' of undefined\n    at TestRun.callsite [as _rejectCurrentDriverTask] (/Users/.../node_modules/testcafe/src/test-run/index.js:396:75)\n    at TestRun._rejectCurrentDriverTask [as _disconnect] (/Users/.../node_modules/testcafe/src/test-run/index.js:687:14)\n    at BrowserConnection._disconnect (/Users/.../node_modules/testcafe/src/test-run/index.js:280:44)\n    at Object.onceWrapper (events.js:315:30)\n    at emitOne (events.js:116:13)\n    at BrowserConnection.emit (events.js:211:7)\n    at Timeout.emit [as _onTimeout] (/Users/.../node_modules/testcafe/src/browser/connection/index.js:127:18)\n    at ontimeout (timers.js:482:11)\n    at tryOnTimeout (timers.js:317:5)\n    at Timer.listOnTimeout (timers.js:277:5)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 7\n```\n. ",
    "eMTe123": "I'm sporadically getting the same error. I'm using testcafe 1.1.0 though.\nTypeError: Cannot read property 'callsite' of undefined\n    at TestRun.callsite [as _rejectCurrentDriverTask] (/home/n639216/dev/radio-web/radio-testcafe/node_modules/testcafe/src/test-run/index.js:396:75)\n    at TestRun._rejectCurrentDriverTask [as _disconnect] (/home/n639216/dev/radio-web/radio-testcafe/node_modules/testcafe/src/test-run/index.js:687:14)\n    at BrowserConnection._disconnect (/home/n639216/dev/radio-web/radio-testcafe/node_modules/testcafe/src/test-run/index.js:280:44)\n    at Object.onceWrapper (events.js:285:13)\n    at BrowserConnection.emit (events.js:197:13)\n    at BrowserConnection.EventEmitter.emit (domain.js:446:20)\n    at Timeout.emit [as _onTimeout] (/home/n639216/dev/radio-web/radio-testcafe/node_modules/testcafe/src/browser/connection/index.js:127:18)\n    at listOnTimeout (timers.js:327:15)\n    at processTimers (timers.js:271:5). ",
    "JustinRong": "Sorry, I found the problem. After dragging the element, the selector could not find the element.\nthanks all. ",
    "MilippFeier": "Thanks for the fast response. I will try to find a public page where this occurs and post it here. . I found an example site that represents exactly our problem. Updated the ticket.. Hi, thanks for your effort. \nI tested it again with another browser (firefox) instead of chrome. I get the following results:\nFirefox:\n- Works if not in debug mode\n- Does not work if in debug mode and clicking step to step\nChrome:\n- Never works. \nI will just use firefox in the future ;-)\nThank you again for your support.. ",
    "philipisapain": "I was running an older version of Testcafe (v0.23.0). Upgrading to v1.0.0 fixed it \ud83d\udc4d . ",
    "BobLuursema": "Hey, we can whitelist an IP address so that you can test the application. It is probably better to communicate the details over email/Slack or something?. I send the info a few days ago and I haven't heard anything, did it arrive?. Yes, I already replied back. The issue has disappeared after a release from our provider, I've asked what changes they made to see if I can figure out what caused it, see the email for a bit more information.. ",
    "inctec-leo": "I created a minimal working example\nThe problem only occurs when I ask nock to intercept http traffic and if I then use a Rule. It does not occur if I run the rule as a test. Thus I think there is a difference when running a rule instead of a test, which is causing the delay.\nI tried using testcafe's Http mocking mechanism, but I couldn't get it to work and I found it harder to debug than nock, which offers logging out of the box.\n. Hi @Farfurix,\n thanks for looking into this. \nI can confirm that the behavior is very different on different machines. \nMy guess that this has something to do with the role mechanism is solely based on the behavior if the exact same code is being run in the test itself as in \n``js\n fixture(Login Page`)\n    .page('http://localhost:8080/login');\ntest('The user sends correct login information and is being logged in', async t => {\n    nock('http://localhost:8080')\n        .post('/auth/login')\n        .reply(200, { \"token\": \"testtoken\" });\n    await t.typeText('#login-email', 'email');\n    await t.typeText('#login-password', 'password');\n});\n```\nthen there is no delay at all. \nEdit: The proposed workaround does fix the delay, but it has no effect - http requests are not being mocked when using RequestMock.. @Farfurix \nIs there any update on this? I would really like to use testcafe with nock. The issue with RequestMock seems to be that I can't figure out why it's not matching my routes (the routes are being matched when using nock), however there are other reasons why I would prefer nock. \nThanks.. @AndreyBelym \nThat makes sense and fixes the issue, thanks for looking into this.. ",
    "Muthuvenaktesh": "Thanks @miherlosev , Please let me know when the enhancement is available.. ",
    "Subhrasini": "If its a proxy issue ,it wouldn't have worked one time also . I am able to run the scripts few(two or three) times, once I restart the system . After that , I get this kind of error . \nPlease find the server url on which testcafe runs the testcases -\nhttp://10.177.157.170:52799/HAk20GHRX!f/http://(application)/#/\nLet me know if you need more details on this .. ",
    "kalabro": "Thanks so much for the fix @AlexKamaev!. ",
    "SveLil": "Hint: Adding\njs\nimport * as process from 'process'\nto the file helps, adding node to the compilerOptions \"types\" arrays didn't. ",
    "walidanwar75": "Thanks for your reply. In our environment we use PIV cards to logon to the workstation. So the usage of username and password is prohibited. We only use the PIV card with a pin code. My question is, why the proxy or the testcafe studio ignore the current logged on user credentials and pass them along to the SUT pages? This will be a major roadblock for all federal agencies in the to adopt this awesome test automation tool.\nGet Outlook for Androidhttps://aka.ms/ghei36\n\nFrom: AlexKamaev notifications@github.com\nSent: Monday, February 25, 2019 4:10:06 AM\nTo: DevExpress/testcafe\nCc: walidanwar75; Author\nSubject: Re: [DevExpress/testcafe] Use Testcafe in Single Sign On enviornment is not working (#3484)\nClosed #3484https://github.com/DevExpress/testcafe/issues/3484.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/DevExpress/testcafe/issues/3484#event-2161087462, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AttYw2QlxTnVVhngJjf86XReI6sCpSksks5vQ6hugaJpZM4bO-MU.\n. Hi Miherlosev\nThank you so much for your quick reply. I am so grateful for the nice work that has been done in testCafe, it is really an amazing e2e testing tool. \nI am trying to convenes management in my organization to use it and also use the TestCafe Studio once released to production. They are on board and excited to move forward but we have a major road block which is we can not use user name and password in our organization. We use smart cards to login to our laptops. so these smart card authentication allows me to logon to Windows OS and the network using my card and a pin. Once I am logged on, any intranet site that I use already authenticate me and never asks about password. This is done through mutual authentication where my smart card is associated with a client certificate that is used for the web sites authentication. When using testCafe, my guess is since we are running our scripts through hammerhead, that client certificate that normally authenticate me is not picked up. so unless I use httpauth with a username and password it will give me http 401 error. But again, my organization is strongly restricting the use of username and password.\nI think it is possible to add a feature to pick a client certificate in hammerhead and use it when launching the browser connections but not sure how this can be done\nThanks again and sorry for the long explanation.. In fact, digging deeper into the issue, it is not only support for client certificate, but in order for testcafe to be adopted at large scale, testcafe need to support Kerberos SSO authentication that is integrated with smart card logon to windows OS. This is a very common setup in so many organizations and government agencies\nCheck out these links\nhttps://www.npmjs.com/package/express-kerberos\nhttps://60devs.com/nodejs-sso-with-kerberos.html\n. ",
    "Zebirdman": "yeah i have tried the network mode host but there is some weirdness with windows that seems to get in the way. I will have to mock up a simpler example I think, try and replicate and share that with you. I will try and get this done later this week at home. I will test the network mode host thing at home as i use native linux there and see what happens.. ",
    "boerdjamin": "Ok it seems like there is no way to catch errors in testcafe, so I suppose the only solution is to check the existence of the component before each assertion . ",
    "knanduri": "We are having the same issue when trying to run a group of 75 tests on teamcity agent , the first 17 tests run and later the browser is hung up! Our agent is on windows 10 though. ",
    "pshendry": "I have a similar problem which seems related: I've got a custom dropdown component that looks like this:\nhtml\n<div tabindex=\"0\">\n  <div>Placeholder</div>\n  <div>\n    <ul>\n      <li>Item 1</li>\n      <li>Item 2</li>\n    </ul>\n  </div>\n</div>\nOn Chrome/Edge/Firefox/IE11, clicking the outer <div> focuses it, however on TestCafe in IE11, the click does not focus the div. It appears to work in TestCafe in Chrome/Edge/Firefox.. ",
    "lpww": "Hi, stack overflow question poster here. Thanks for creating this! I had seen the other issue but thought it was specific to video elements. I ran into similar errors when testing media elements play() method but was able to work around it by initializing the element as muted which allows autoplay (testcafe clicking the button is identified as autoplay by the browser).\nSomewhat related question: do you plan to expose media attributes (paused, currentTime, volume, muted, etc) for dom elements from selectors? Or will I need custom actions for that?. ",
    "Arthy000": "Sorry, my mistake, wrong version of the website indeed. I corrected my initial message (the website, not the selector)\nI can't reproduce it with Browserstack devices (sorry I didn't think of trying that earlier) or with Chrome Device Emulator. \nI still have the issue on my physical device though.\n\n. I also tried different options for the chrome emulator to no avail. As I said I also tested most devices on Browserstack and didn't get the issue either.\nSo it looks like it is linked to my model :(\nI'm not sure if there is anything else I can do to maybe figure out what is happening.. ",
    "grant-mccarriagher": "Thanks for the response @miherlosev . This issue persists even with an shm-size of 2gb in the docker-compose.yml I posted above.\nI will email support with the test site used.. Actually, @miherlosev , if anybody from the TestCafe team would like to look at this issue, please post here and I can give you read access to a copy of the GitHub project. Thanks!\nEDIT: Also, I cannot reopen this issue as it wasn't closed by me.. Appreciate it! Per the email from support, I have added @miherlosev and @AndreyBelym to a copy of my repo at https://github.com/grant-mccarriagher/testcafe-poc. I'm getting consistent green builds at this point with chromium:headless --no-sandbox --disable-dev-shm-usage. Which is strange, because even with an shm size of 2gb, my builds were still failing.. ",
    "benjclark": "We have the same issue and the common theme seems to be that everything works on HeadlessChrome 74.0.3723 / Mac OS X 10.11.5 but always ends up hanging indefinetely on HeadlessChrome 74.0.3723 / Linux 0.0.0. At first we thought it was Docker as well, as we also run in a container on the build machine but not locally. But subsequent testing on different machines has led us to see that there is some issue currently associated with Testcafe and Linux. I will try and produce a repo for you to demonstrate our implementation and tests.. As mentioned in https://github.com/DevExpress/testcafe/issues/3524 we're having the same issue, and so are others. We use HeadlessChrome 74.0.3723 / Linux 0.0.0 which always ends up hanging but have found that HeadlessChrome 74.0.3723 / Mac OS X 10.11.5 works. FYI we also use testcafe-browser-provider-puppeteer.. ",
    "saulokada": "I'm facing the same problem but mine is with Headless Firefox (Firefox 62.0.0 / Linux 0.0.0) in bitbucket pipeline running with docker images.. @AndreyBelym Yes. When I run on my machine without docker it works normally.. ",
    "mt0erfztxt": "Thank you for pointing me in right direction. Tests now work with following .babelrc:\njs\n{\n  \"presets\": [\n    [\n      \"@babel/preset-env\",\n      {\n        \"targets\": {\n          \"esmodules\": true\n        }\n      }\n    ]\n  ],\n  \"plugins\": [\n    \"@babel/plugin-transform-runtime\"\n  ],\n  \"sourceMaps\": \"inline\"\n}\nIn my case \"esmodules\": true was mandatory, otherwise errors like TypeError: Class constructor GroupInput cannot be invoked without 'new' were thrown.. ",
    "calebswank11": "@AndreyBelym Thank you very much for taking the time to look at this. I knew it had to be something simple like this, just couldn't quite piece it together. Duley noted about the deprecated .test. suffix as well. I have got it working now.. ",
    "TareqElMasri": "I have the same problem . ",
    "Dylan0916": "And no error message is displayed.. ",
    "allayli": "Hi @AndreyBelym , I tested with testcafe@1.0.1 and it works as expected. So I also think it is related to 0f86212 . \nAnd the commit also raise another issue about screenshot #3552\nPlease have a check. Thanks.. ",
    "insanesvk": "Having the same issue using https://github.com/DevExpress/testcafe-browser-provider-browserstack. ",
    "demsullivan": "Also relevant: this fails intermittently, though the vast majority of the time. It passes successfully maybe every 4th or 5th run.. Thanks, this pointed me in the right direction! I settled on this for my solution (additional help from https://stackoverflow.com/questions/52472321/need-help-to-check-if-element-is-in-current-viewport-with-testcafe)\n```js\n        const visibleMarkers = Selector(() => {\n            const windowHeight = window.innerHeight;\n            const windowWidth  = window.innerWidth;\n            const docWidth     = document.documentElement.clientWidth;\n            const docHeight    = document.documentElement.clientHeight;\n        return Array\n            .from(document.querySelectorAll(\"img[src*='_school_marker.png']\"))\n            .filter((el: HTMLElement) => {\n                const boundValues = el.getBoundingClientRect();\n                return boundValues.bottom > 0 && boundValues.right > 0 &&\n                    boundValues.left < (windowWidth || docWidth) &&\n                    boundValues.top < (windowHeight || docHeight);\n            });\n    });\n    const targetMarker = visibleMarkers.nth(0);\n\n```. ",
    "pavelloz": "Thank you :). ",
    "b324jll2j3h4lj23h4lj23n": "@AlexKamaev , I now see that it depends on the tested website, I tried example.com from your example and had no issues, however if you try devexpress.github.io/testcafe/example from the official example, the screen goes black on a breakpoint. . @miherlosev here's the video https://www.screencast.com/t/9uyC86Xe\nI have a breakpoint in the test. \nI start debugging. \nChrome launches, hits the breakpoint and remains black...\nThis is webstorm, same is happening in VScode and on different machines.. Testcafe 1.1.0\nMacOS 10.14.13\nChrome 72 (but repro on other browsers like FF too)\n. ",
    "shariqMohammed92": "Tried out with the latest version of Test cafe.The issue is resolved while running locally.\nBut while trying to run in Linux Machine through jenkins, no browser is getting launched and suite fails.Getting the following error:\nF----------------F.{ Error: Unable to establish one or more of the specified browser connections. This can be caused by network issues or remote device failure.\n    at /home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/testcafe/src/runner/browser-set.js:84:30\n    at Generator.next ()\n    at step (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/babel-runtime/helpers/asyncToGenerator.js:17:30)\n    at /home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/babel-runtime/helpers/asyncToGenerator.js:35:14\n    at new Promise ()\n    at new F (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/core-js/library/modules/_export.js:36:28)\n    at /home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/babel-runtime/helpers/asyncToGenerator.js:14:12\n    at BrowserSet._waitConnectionsOpened (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/testcafe/src/runner/browser-set.js:77:37)\n    at _waitConnectionsOpened (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/testcafe/src/runner/browser-set.js:107:35)\n    at invokeCallback (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/pinkie/index.js:60:12)\n    at Array.forEach ()\n    at publish (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/pinkie/index.js:147:32)\n    at Array.publishFulfillment (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/pinkie/index.js:152:2)\n    at Immediate.asyncFlush [as _onImmediate] (/home/admin01/jenkinsworkspace/workspace/Nucleus-Testing-Team/Connect-UI-Automation-TestCafe-UnixChrome/connect-ui-automation/node_modules/pinkie/index.js:17:19)\n    at runCallback (timers.js:812:20)\n    at tryOnImmediate (timers.js:768:5) code: 'E1004', data: [] }\nThe jenkins was started as a service in the machine. ",
    "wistcc": "Yeap, you are right.\nI was confused because I noticed several browser instances but after looking at your example I noticed that those instances were per job in Jenkins instead of per fixture, which makes complete sense.\nSorry about the false alarm and thank you for the quick response and the great job here on Testcafe.. ",
    "brianbancroft": "@miherlosev I brought up the concurrency factor, because it was the closest analogue to how it is failing in CircleCI under chrome:headless \nAlso, because the test fail randomly, not consistently, and because they always pass when tested in isolation, your suggestions do not apply to my case. \nEDIT: It also is worth noting that the random failures also take place when using firefox:headless. Thanks! Your answer was a bit more helpful towards my problem, especially the --disable-dev-shm-usage flag part. But, I wasn't able to get this to work on CircleCI with headless chrome or FF using either, or both of the flags.\nBest wishes,. ",
    "abnorman23": "You can find it at \"Your complete test code (or attach your test files):\". I think the reason is the difference between http and https.. ",
    "brian-mathews": "installed 1.1.0. now browsers launch but does no action after they initially open. happens with firefox, chrome and safari.\nExample: ERROR The Chrome 73.0.3683 / Mac OS X 10.12.6 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\nERROR The Safari 11.0.3 / Mac OS X 10.12.6 browser disconnected. This problem may appear when a browser hangs or is closed, or due to network issues.\n. ",
    "midhun8454": "what response you guys need?. ",
    "mindaugas-acosta": "@Patrick-Spiegel what is the status of this issue? I currently have this exact problem. trying to serve vue app for testcafe and testcafe fails because maxBuffer exceeded.. ",
    "Patrick-Spiegel": "@mindaugas-acosta try  npm run serve > logs/vue.log 2>&1 as start script. ",
    "helmut-lang": "Seems like the changes broke the tests :cry: \nI would be willing to invest some time to fix this if somebody could point me in the right direction.\nEspecially, since at a first glance the failing tests seem to be rather unrelated.. ",
    "gal432": "When it happened not in chrome headless:\n\n\n. From chrome headless:\n\n. I'm sad to say that you right. its indeed coming from my env. I don't sure why (envoy with multiple proxies).\nbut for some reason when the testcafe gets this 503 page everything is stuck. No matter where I put a code to patch this problem (before / after in fixture, in the test itself),  it will stuck the test process forever. any idea how I can patch this for now?. ",
    "limonte": "yarn.lock should be in the repo:\n\nYarn will generate a yarn.lock file within the root directory of your package. You don\u2019t need to read or understand this file - just check it into source control.\n\nhttps://yarnpkg.com/en/docs/migrating-from-npm\n. ",
    "ocetnik": "@MargaritaLoseva @miherlosev Isn't here Attempted to run assertions on a Promise object. Did you forget to await it? If not, pass \"{ allowUnawaitedPromise: true }\" to the assertion options. error? . ",
    "dirk-pieterse": "See Concurrent Test Execution to learn more about concurrent test execution. - See Concurrent Test Execution for more information about concurrent test execution.\nIf this option is enabled, TestCafe pauses the test at the moment it fails -> If this option is enabled, TestCafe pauses the test when it fails\nSpecifies the time (in milliseconds) within which selectors attempts  -> attempt (selectors - plural)\nSpecifies the time (in milliseconds) within which TestCafe makes attempts to successfully execute an assertion if a selector property or a client function was passed as an actual value. -> Specifies the time (in milliseconds) TestCafe attempts to successfully execute an assertion if a selector property or a client function was passed as an actual value.\nTestCafe will correspond these symbols to any number of characters in the URL. Wildcards at the beginning and end of the rules can be omitted (*.mycompany.com and .mycompany.com have the same effect). -> No future tense. 'correspond these symbols' How do you correspond something? Something corresponds to/with.\nEnables colors on the command line -> in the command line.. Tests are run concurrently against this pool, that is, each test is run in the first free instance. -> first available instance\nThe quarantine mode is designed to isolate non-deterministic tests (that is, tests that sometimes pass and fail without any apparent reason) from the rest of the test base (healthy tests).\nSee Martin Fowler's Eradicating Non-Determinism in Tests article for more information about non-deterministic tests,.. - This topic describes how you can take screenshots of the tested page -> This topic describes how to take screenshots of the tested page.\n- these actions require a ICCCM/EWMH-compliant window manager on Linux -> 'an', not 'a'\n- Important! If the screenshot directory is not specified with the runner.screenshots API method or the screenshots command line option, the screenshot actions are ignored -> Important! Screenshot actions are ignored if the screenshot directory is not specified with the runner.screenshots API method or the screenshots command line option.\n- The screenshot file's relative path and name. The path is resolved (resolved? relative to?) relative to the root directory the runner.screenshots API method or screenshots command line option specifies. This path overrides the relative path the default or custom path patterns specify.\n- The following example shows how to use the t.takeScreenshot action. -> The following example shows how to use the t.takeScreenshot action:\n- \"Identifies the webpage element whose screenshot will be taken.\" This sentence does not make sense. 'element whose screenshot'? You also do not need to use the future tense.\n- Options that define how the screenshot will be taken -> Options that define how the screenshot is taken.\n- \"By default, the path to which screenshots are saved is specified as:\" -> Do not use 'By default,'\n- The options object contains the following properties. -> The options object contains the following properties:. Enables screenshot capturing and specifies the root directory where screenshots are saved -> Enables screenshots and specifies the root directory where they are saved. The screenshots' relative path and name are defined using the default screenshot path patterns: -> The default screenshot path patterns are used to define screenshots' relative path and name:. You can also specify a custom pattern using the --screenshot-path-pattern option. -> You can also use the --screenshot-path-pattern option to specify a custom pattern. . The relative path is specified by the default path patterns or by the method's screenshotPathPattern parameter. -> The default path patterns or the method's screenshotPathPattern parameter specifies the relative path.. See --screenshot-path-pattern for information about available placeholders. -> See --screenshot-path-pattern for information about the available placeholders.. Because you do not need to use passive voice when you've got 'that task is performed by this' This performs that task.. Same change here.. The default path patterns define the path to the base directory where screenshots are saved. You can use the screenshotPathPattern parameter to override these patterns.. We should avoid -ing, so you can't use using. Passive voice is wordy, and you can avoid it when the thing that is performing the task is clear, in this case, the default path pattens. . No? Why do you ask for my review if you just insist on your variant? Ray said we should not use -ing, and 'This is performed by that' (5 words) -> 'That performs this' (3 words). Why do you want to use passive voice here? . That is a bad example. He uses passive voice because there is no alternative. If this sentence read \"The capability to focus a grid row is not supported by the Grid\", then it should be \"The Grid does not support...\" In the sentence you use as your justification, there is no 'by something'. . Ray did not mention passive voice explicitly, but it falls under point no. 5:\n. establish an HTTPS connection. If the hostname is not specified, TestCafe uses the operating system hostname or network IP address of the current machine. -> If the hostname is not specified, TestCafe uses the operating system's hostname or the current machine's network IP address.. \"This means that the website should be served over the HTTPS protocol.\" Served over?. \"in a regular way\"?. \"these tests fail with JavaScript errors\" Tests fail with errors?. serve?\n\"This allows you to test web pages that use browser features that require secure origin.\" that... that?. \"Use the --ssl flag when you run tests from the command line to enable HTTPS.\" -> To enable HTTPS, use the --ssl flag when you run tests from the command line.. When you use the programming interface, pass the HTTPS server options to the createTestCafe method.. The following example uses the openssl-self-signed-certificate module to generate a self-signed certificate:. \"The hostname or IP you will use to address the TestCafe server.\" -> The hostname or IP you use to address the TestCafe server.\n'address' Why address the server?. establish an HTTPS connection. Establish an HTTPS connection. Some browser features (like Service Workers, Geolocation API, ApplePaySession, or SubtleCrypto) require a secure origin. This means that the website should use the HTTPS protocol. Pages that are tested with this kind of browser API through HTTP fail because of JavaScript errors.. TestCafe can serve the proxied tested page over the HTTPS protocol. When this option is enabled, the client browser uses HTTPS to connect to the TestCafe proxy server. This allows you to test web pages with browser features that require a secure origin.. The hostname or IP you use to access the TestCafe server. - Yes. \"in specific cases\" This is vague. Please clarify.. Ok. BTW, 'cancelling' should be 'canceling'. 'over and over'?\n-> it runs again until it passes or fails three times.. \"The result seen most often (three times) is recorded as the test result.\" Why add the part about three times? \nThe most frequent outcome is recorded as the test result.. \"When you decide whether to\"?\n-> Note that it increases the test task's duration if you enable quarantine mode on your test machine because failed tests are executed three to five times.. \"If you find a problem\" Why would you 'find' a problem?. \"When you create a new issue\" create an issue? Why would you create an issue?. values to look for? Explain.. \"to decide\"? Why decide?. You can now run tests imported from external libraries or generated dynamically even if the .js file does not contain any tests.. This was not possible previously because test files should contain the fixture and test directives.. However, you can now provide the --disable-test-syntax-validation command line flag to bypass this check.. provoke?. \"by their metadata\"? How do you run tests by their metadata?. This file is the same as the previous one. The same questions/changes apply here.. For example, the following command runs tests whose metadata has the device property set to the mobile value and the env property set to the production value -> For example, the following command runs tests whose metadata's device property is set to mobile, and env property is set to production .. launch or deploy?. Test files should have the fixture and test directives. Otherwise, an error is thrown.. However, the .js file may not contain tests when you import tests from external libraries or generate them dynamically.. to bypass checks for test syntax -> to bypass test syntax checks . The callback function is called for each test in the files the src method specifies.. Specifies the time (in milliseconds) passed after the DOMContentLoaded event, within which TestCafe waits for the window.load event to fire. -> Specifies the time (in milliseconds) TestCafe waits for the window.load event to fire after the DOMContentLoaded event.. A number between 1 (fastest) and 0.01 (slowest). If an individual action's speed is also specified, the action speed setting overrides the test speed.. Defines whether to stop a test run if a test fails. This allows you not to wait for all the tests to finish and to focus on the first error.\nNot sure what you mean by 'focus' on the first error.. I mean one or the other, not both.. \"However, to save some time, please\"?. issue, the template text. You should complete all the sections in this template to help us understand the issue you are describing. Missing information could delay the processing time.. We recommend searching through the existing issues to see if the problem has already been reported or addressed.. 'e.g.' -> for example,. \"Search the list of issues to see if there\n  is an issue for the bug or feature you are going to work on. If you do not find one, please create your own.\" -> Search the list of issues to see if there is an issue for the bug or feature you are going to work on or create a new one.. to point to HTML pages -> to HTML links?. Why \"is developed in\"?. Why 'on top of'?. You can use a Docker image instead of installing them.. Why 'offers'? Do you mean 'GitLab has a built-in continuous integration service'?. You can read more about it in GitLab documentation -> Refer to the GitLab documentation for more information.. 'The easiest way' You should avoid terms and phrases that contain adjectives. They do not provide objective information. Rewrite.. 'install to'? https://english.stackexchange.com/questions/103542/install-on-install-in-install-to. stores the GitLab CI configuration. 'If you don't have this file yet'? How can you have the file? You can create this file in the repository's root directory if it does not exist. . Why are you adding 'You can choose any name you wish'?. 'to be'?  overrides the image's ENTRYPOINT and sets it as /bin/sh?. You should specify this setting because the TestCafe image's default ENTRYPOINT is set to the testcafe command and GitLab uses sh to run test scripts. The -c flag indicates that the subsequent argument is a command rather than a script.. See Configuration of your jobs with .gitlab-ci.yml for more information about the .gitlab-ci.yml syntax.. Now you have a new job that can be executed by any GitLab Runner -> This creates a new job that any GitLab Runner can execute.. You can install TestCafe from npm before tests are run if you use a Docker image that does not have TestCafe preinstalled.. adds?. Since TestCafe is installed locally, the test run command that uses TestCafe should also be added to package.json to the scripts section -> The test run command that uses TestCafe should be also added to package.json to the scripts section because TestCafe is installed locally.. This allows you to use npm test to run tests.. Same here. to view its details?. Do you mean 'an Azure Pipelines project's build process.'?. adds?. This should have a colon at the end, not a period.. should be also added? Do you mean 'should also be added'?. Same change to this sentence as in your other doc.. Same here.. Why do you add 'You can choose any name you wish'?. You can find the latest LTS version number on -> The latest LTS version number is available on. without 'located'. Select the build and click Queue to run the build. . Now, changes to code in the repository trigger the build.. If you need to build a specific branch or path, you can add Branch filters and/or Path filters -> To build a specific branch or path, add Branch filters and/or Path filters.. You can enable continuous integration in Azure DevOpst to specify that the pipeline is run every time your code changes?. a meaningful name?. See previous comment about LTS version. pop-up. your TestCafe tests - I think we can just write 'TestCafe tests' because this applies to all.. Combine this sentence and the next one: 'Execute the following command to install TestCafe locally and add it to the devDependencies section in package.json:'. will be -> are. We are not discussing something that is going to happen in the future, this is already described, so there is no need to use future tense here.. 'at the next steps' Why 'at'?. Why 'at the moment'?. Combine this sentence and the next one.. Previously, test files had to contain the fixture and test directives. You can now add the --disable-test-syntax-validation command line flag to bypass this check.. You can include placeholders in the path, for example, ${DATE}, ${TIME}, ${USERAGENT}, etc. For a complete list, refer to the command line --screenshot-path-pattern flag description.. You should specify a screenshot path pattern when you run tests.. In v0.18.0, we changed the --reporter CLI flag to --reporters. In this release, we rolled back to the previous flag name.. It's not good to state that you made some mistake.. Same change here.. TestCafe v1.0.0 release -> TestCafe v1.0.0. \"to the behavior\" The behavior of what?. \"describes how to address them\" makes it sound like you created some issues/problems.. \"files are never validated\" -> files are not validated. \"were removed in v1.0.0\" Is it necessary to add the version number here?. an external library:. The configuration file we implemented is consistent with the API and command line interface.. does not necessarily leads?. possible side effects?. Rewrite this sentence.. Do not use 'Since'. There is no conclusion here. . You should add the async keyword to the asynchronous onRequest and onResponse method declarations.. asynchronous API? Do you mean 'an asynchronous API'?. Side effects may show up in certain cases? This is vague.. Meet?. big features?. The behavior of what?. Why \"Keep the configuration file in the project's root directory\"? Where else would it be?. Use the testRunInfo object's warnings property. But, use it to do what?. The following example demonstrates how to enable word wrapping when the title string is long:. by four spaces:. how you can -> how to. how to escape? Why 'escape'?. The following example demonstrates how to number errors:. The following example demonstrates how to color test results:. The duration of the test (in milliseconds). to stringify objects? stringify?. The path is relative to the root directory the runner.screenshots API method or the -s (--screenshots) command line option specifies.. before sending the request -> before the request is sent. Note that TestCafe processes test files with Babel internally.. When you execute the testcafe command, TestCafe first reads settings from the .testcaferc.json configuration file if this file exists, and then applies the settings from the command line.. If the browsers and src properties are specified in the configuration file, you can omit them in the command line.. TestCafe waits the specified time before it starts running tests.. accessed bypassing?. Stops a test run if any test fails. . \"This allows you not to wait for all the tests included in the test task to finish and allows focusing on the first error.\" allows allows?. In this case, tests are distributed across four Safari instances and the same tests are also run in four Firefox instances.. Live mode ensures the TestCafe process and browsers remain active while you work on tests. You can see test results instantly because the tests are restarted when you make changes.. When you run tests with live mode enabled, TestCafe opens the browsers, runs the tests, shows the reports, and waits for further actions.. TestCafe allows you to take screenshots of the tested webpage and record videos of test runs.. TestCafe allows you to take screenshots of the tested webpage and record videos of test runs.. need to -> should. Do one of the following if TestCafe cannot find the FFmpeg library: . You must -> You should. \"You can specify all the options supported by the FFmpeg library\" How can you specify options supported by something else?. either of the following what?. You can specify the base path to the directory that stores screenshots or videos when you enable these features. See Enable Screenshots and Enable Video Recording for more information.. You can override the default path pattern for screenshots and videos.. in a directory -> in the directory. Keep .testcaferc.json in the directory from which you run TestCafe. This is usually the project's root directory.. I do not think it is necessary to add 'TestCafe does not take into account configuration files located in other directories (for instance, project's subdirectories)'.. Stops the TestCafe server. Forcibly closes all connections and pending test runs.. Defines whether to stop a test run if a test fails. You do not need to wait for all the tests to finish to focus on the first error.. An object that configures and launches test tasks in live mode. In this mode, TestCafe watches for changes you make in the test files, restarts the tests, and reflects the changes.. You should enable this option before you contact TestCafe Support to report an issue. outputs?. What 'outputs'?. Stops a test run if any test fails. accessed bypassing?. failed -> fails. Now TestCafe doesn't ignore -> TestCafe does not ignore. Now you can -> You can now. Now TestCafe correctly -> TestCafe now correctly. Same. Same. TestCafe correctly processes sourcemaps in stylesheets now -> TestCafe now correctly processes source maps in stylesheets. You can run TestCafe tests as a part of your build process on Bitbucket Pipelines CI.. \"Suppose you have a Bitbucket project for which you need to automatically run tests in the cloud when the project is modified. To do this, go through the following steps:\" -> You can set up your Bitbucket project to automatically run tests in the cloud when the project is modified:. avoid manual environment configuration? . However, if you already have a Docker image prepared, you can install TestCafe on this image before testing.. Bitbucket Pipelines CI automatically configures the environment and you can use Docker containers that are set up for Chrome and Firefox (use a TestCafe Docker image with pre-installed software).. Specify the testcafe/testcafe image name in the bitbucket-pipelines.yml file's image field.. Use the image field in the bitbucket-pipelines.yml file to specify a Docker image with Node.js and browsers installed.. The following example shows a command that runs tests in Chromium in headless mode:. \"TestCafe executes this command automatically before tests are launched.\" -> TestCafe executes this command before tests are launched.. help you learn?. A set of sample files that explains how to use Bitbucket Pipelines CI in Chrome (Headless) to run TestCafe tests in the cloud.. Go through steps? Follow the steps described.... \"use new syntax features introduced\" -> use the new syntax features introduced. \"The updated type definitions allow TypeScript compiler\" -> The updated type definitions allow the TypeScript compiler. \"Prior to v1.1.0\" -> Before v1.1.0. \"before test\"? Do you mean 'a' test?. \"does not exist on\" Why 'on'? Do you mean 'in'?. a long page scrolling?. Explain.. compilation time... degrades?. \"when tested with TestCafe\" It isn't necessary to add 'with TestCafe'. \"allow TypeScript compiler\" Do you mean 'the' TypeScript compiler?. \"before test are started\"? do you mean before tests are started?. Feel free to ask for more details?. \"to get access to the latest features\" -> to access the latest features. "
}