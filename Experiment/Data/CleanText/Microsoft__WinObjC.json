{
    "ahmedbaracat": "I think this is a great idea and would open the door to many libraries that does not support Windows. Do you think we, developers, can start working on it?\n. ",
    "Alovchin91": "The only issue I see is external library's processor architecture. This means iOS libraries would not run on x86-x64 machines, though Mac libraries should. The iOS Bridge compiler could analyze all the external imports in the code, and then the linker could create a section in the resulting PE file that lists all those imports. Then the stub code in the PE could call iOS Bridge Runtime to load each external iOS library and analyze its imports (now here I'm not sure how iOS library's import section looks like) and then patch them to point into the Runtime's functions. Much the same way Windows loader works.\n. Okay, I see. Let me split this issue into two then as it also contains another important suggestion: #20 \n. The problem solved. In project properties, I had to set Islandwood > Composition > Composite layers as setting to SwapChainPanel.\n. Ah great. With the release 0.1.0.150903 there is no more Composite layers as setting in the project properties! You can still add <WSCompositor>SwapChain</WSCompositor> to your project and it will ~~blend~~ build, but c'mon, it's not a solution anymore!\n. @jmsaunders-ms Yep, this fixed it. Thanks!\n. ",
    "colincornaby": "A serious issue would be API support. A lot of libraries might try linking to API that's not there. For example, a library we ship tries to touch a lot of API that's not present. Even then, the behaviors could be different. It seems like it could be a lot more trouble than it's worth for a Windows native application.\nMost libraries ship with x86 libraries in since the iOS Simulator is x86 (and x86-64), so that's not a serious problem.\n. If we're talking about binary libraries, existing binaries could do things like call into Mach or the iOS kernel functions (or even BSD functions) which probably won't be emulated or would be difficult to emulate for this API. For example, an API like Flurry might ask kernel level code for device configuration, and that's going to be very difficult to emulate through an API like this.\n. If they did it the reverse (the Apple) way, it would also reduce the amount of code they have to maintain in their Obj-C objects. Building CoreFoundation on Foundation is going to slow down development and make the API less in sync with Apple's work.\nI remember when I looked into libDispatch a while ago on Windows it required kernel support, which Windows lacked. Obviously Apple is shipping libDispatch on Windows now, so maybe that's been resolved.\n. I'd love to see CoreAudio. In since CoreAudio is a C API, it would also be awesome to be able to share code with non Obj-C Windows apps. It would be nice to be able to share CoreAudio code without bringing in all the Obj-C support.\n. ",
    "rhaning": "Thanks for the idea, we don't have any plans for supporting iOS binaries at this time.\n. This is on our backlog and we are actively prototyping. Stay tuned.\n. We've added these items to our backlog to review for a future release.\n. This is on our backlog and will consider for the future.\n. We have basic support for AFNetworking now.\n. Hi Raul, can you confirm that the SQLite extension is installed successfully by opening the Visual Studio menu: Tools -> Extension & Updates.\nIf it is successfully installed, it should be listed under \"Installed -> SDKs\" as \"SQLite for Universal App Platform\"\n. MobileCoreServices is now supported.\n. Source is required for SDK's as well so we can compile it into UWP app. The Facebook SDK for iOS is open source and we are actively working to support it. Stay tuned.\n. We do currently have support for CLLocationManager. Please see the following: https://github.com/Microsoft/WinObjC/tree/01508cca6e583ecb9064bdb028bdd593df057728/Frameworks/CoreLocation\nIs there a specific area that you need?\n. This should work. Is there a specific scenario that you have found to be not working?\n. This is due to a difference in the way Xcode and Visual Studio search for headers. VS doesn't have a notion of frameworks like Xcode does. We are working on a fix for this and hope to have it ready soon.\n. ",
    "msftclas": "Hi @lumaxis, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Lukas Spie\u00df). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @danielpunkass, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @DHowett, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @wanderwaltz, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @wanderwaltz, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @reghrafa, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @rubdos, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @EGJ1996, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @vmagaziy, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jakepetroules, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @Maximus-, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @triplef, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @triplef, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @triplef, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @felixonmars, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @timotiusmargo, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Timotius Margo). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. @cloudmonkeypeng, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @timotiusmargo, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Timotius Margo). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @mgoemmel, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @ehren, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @ehren, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @ehren, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jminer, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @RG-J, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @afaruqui, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @cloudmonkeypeng, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @alexdrenea, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. @mgoemmel, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @alexdrenea, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. @alexdrenea, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @alexdrenea, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. @alexdrenea, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @alexdrenea, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @vkvenkat, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @ashwinkumarsarangula, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @ashwinkumarsarangula, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @yweijiang, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @Samanthi-Jeyaraj, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @shahmeeresmail, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @shahmeeresmail, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @bSr43, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @bSr43, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @bSr43, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jeffMeador, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @bSr43, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jparmentervf, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @mnithish, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Nithish Mahalingam). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @aballway, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (AJ Ballway). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @jparmentervf, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @adein, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @aballway, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (AJ Ballway). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n #Resolved\n. Hi @tcunning, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @tcunning, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @tcunning, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @JSavageVectorform, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @tcunning, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @tcunning, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chadimoussi, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chadi Moussi). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @pittmab, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @amit6257, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @sakrist, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @sakrist, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @jboich, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jboich, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jboich, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jboich, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @jboich, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. \n@philnach,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@nathpete-msft,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot #Closed. @kant, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot.  All CLA requirements met..  All CLA requirements met.. ",
    "Gryzor": "MSBOT is the new clippy\n. ",
    "keluo-ms": "This was fixed with: https://github.com/Microsoft/WinObjC/commit/1cc7c83211c0b3ffa22df068aaeab93808fdd3c0#diff-f87d382f3259d317dec307ccc77f41a4 \n. @xnth97 Please let us know if you're still seeing issues.\n. While it would certainly be awesome, we don't currently have plans to support managed code with our project. We appreciate the feedback though and we may certainly revisit this topic in the future :smile:\n. Good news! This was implemented with https://github.com/Microsoft/WinObjC/commit/81e211014f560491c74d4b8cc6b93f2bf7dc0f0b \n. Our team is now using Issue #40 to track getting IntelliSense working.\n. @greenhippie Let us know if you're still experiencing this issue. Apologies for the late response, we just went through our entire backlog and you should be seeing faster response times in the future :smile:\n. This was fixed with https://github.com/Microsoft/WinObjC/commit/1f80ae32d7e2651ab702648f27cfa50eaf850cb8#diff-37737934391fa51165e65fbc9de45eb6\nThanks!\n. Hi @mlfarrell, this should be implemented in the latest SDKs.\n. @mufanfan The \"Download Zip\" button on the right that you are clicking downloads the whole branch. If you only want the prebuilt files, you'll want to navigate to the \"releases\" page and download the latest \"Winobjc.zip\" file available. \nhttps://github.com/Microsoft/WinObjC/releases \n. @mufanfan, can you please file a new issue to track the .pfx issue? This helps us keep track of distinct issues.\nAnd thanks for taking the time to test our project, we really appreciate it :smile:\n. ",
    "s5msft": "Please try again. It should be accessible now.\n. Alternatively, you can download a prebuilt SDK -- check under \"Releases\".\n. A \"proper\" libdispatch is high on our list of TODOs.\n\nWinObjC implementation is completely incorrect- not just incomplete, but entirely wrong conceptually\n\nYes, this \"implementation\" was for a very particular and very narrow use case.\n. Hi Christopher, many (most?) of the headers in Foundation have the original cocotron copyright header. If we missed/removed any then it was certainly inadvertent and that wasn't our intent.\nCan you point us to specific files we missed?\n. @cjwl Let's just talk about the headers for a second.\nThere are two sets of headers. One external facing, which retain your copyright:\nhttps://github.com/Microsoft/WinObjC/blob/master/include/Foundation/NSDate.h\nAnd a second set, internal, and which were generated programmatically. These do not have your copyright header:\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/Foundation/NSDate.h\n. @cjwl We're on it and definitely want to make this right. As a bit of background, (some of) our source code was originally C++ based (marked up to act like Objective-C). We then ran that source through a tool to generate \"real\" Objective-C code.\nIn any case, we're going through Foundation right now and will absolutely make this right.\n. @bmastenbrook In some of these cases, we have explicit permission from the authors to relicense sections of relevant code.\nWe'll remediate any others that our tooling may have missed. I definitely appreciate the passion and we\u2019re very sorry for any omissions.\n@JensAyton We were referencing the copyright header from:\nhttps://github.com/cjwl/cocotron/blob/master/Foundation/NSPropertyList/NSPropertyListReader.m\nIs that incorrect/incomplete?\n. > This is really where Miguel's recommendation still stands; this needs to be fixed through a complete \n\nhistoric audit, not on an ad-hoc basis depending on outside reporters.\n\nWe are in agreement.\n\nHas the QPL/GPL-tagged code been relicensed under a permissive license, or does it still apply to \nanyone integrating/distributing this code?\n\nWe're in continual contact with the author of objfw, and, yes, it's relicensed under a permissive license in this project.\n. I appreciate everyone's passion for this issue and we're dedicated to getting it fixed.\nPlease continue to keep us honest but, for now, we're closing this thread.\n. Initial GLKit support has been exported as of 683f6d6\n. Closing this issue since initial support has been submitted. Please create new issues for any bugs/omissions.\n. @DancinDirk Maybe. If you want to directly reuse your iOS code for media capture/playback then you may have to hold off for a bit. Alternatively, if you're willing to #ifdef your way around a few things, then you can directly use relevant Windows APIs as appropriate.\nThe WOCCatalog sample shows you how to do some of this (admittedly not for CoreAudio though, just for video playback).\n. @hervevi For simple media playback, you can use Xaml's MediaElement and embed it right in you app. \nSee the following bit from one of the samples:\nhttps://github.com/Microsoft/WinObjC/blob/master/samples/WOCCatalog/WOCCatalog/XamlViewController.m#L117\nIf you replace the given URL with something pointing to an mp3 file then you should get audio playback.\n. It's either that the Volume property isn't set/correct or that you need to add the MediaElement to the current View (WOCCatalog shows you how to do that). You should be able to set the width/height to 0 if you want no UI at all.\n. This is a great suggestion. Two part answer:\n\nwe don't know where we are now\n\nWe\u2019re building out a test framework that, along with some visualization, should provide a decent sense of what works and what doesn\u2019t. The (basic) test framework should be in place this/next week, with the visualization stuff still being built out (so that\u2019ll take a bit longer). And, of course, the framework will need to be properly populated with tests, which will be an ongoing process.\n\nIt would be great if you could publish a roadmap\n\nPriorities are largely influenced by apps, partners, and feedback received here. But (per the above comment) this lists the \u201cbig picture\u201d priorities: https://github.com/Microsoft/WinObjC/wiki#whats-still-under-development\nAdditionally, going forward we\u2019ll mark issues appropriately to denote that they're \"in progress\" to give you a sense of what\u2019s coming in the near/medium term.\n. @joewood if an issue is unassigned then you're free to run with it\n. @vmagaziy A test framework, based on GHUnit, will be along shortly.\n\nCan you please confirm whether this approach makes sense\n\nAbsolutely makes sense. Let us get our test framework in first :)\n. Directly including Apple headers in a third-party SDK is not possible.\n. The short answer is that the file isn't present and that use of sys/socket.h should be replaced with winsock2.h.\nThe longer answer is that mixing an iOS style socket.h and winsock2.h results in various type collisions -- hence the above requirement. This is something we're still looking into.\n. The type (objc_property) exists in Frameworks/objcrt/runtime.h but isn't exposed to include/objc/runtime.h\nWill be fixed.\n. @vmagaziy we love this suggestion, and we have a tool to accomplish (essentially) this same task coming in the very near future\n. The CFXXXGetTypeID functions in CFType.mm are in an #if 0'd block.\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/CoreFoundation/CFType.mm#L88\n. AFNetworking (among others) is on our radar.\n. CoreData isn't implemented right now.\n. xib2nib is still under development, as is storyboard support. Stay tuned.\n. @DanielRosenwasser this is great feedback, and contribution guidelines are high on our \"todo list\".\nBut to answer your specific question around tests, the framework (still being built and populated) lives here:\nhttps://github.com/Microsoft/WinObjC/tree/master/tests/cmdline\n. Initial version available as of bed20a4b6\n. > will this SDK work with the Hololens\nIt could be made to work, but Hololens isn't super-high on our priority list so we haven't spent too much time with it.\n. A lot more APIs have been implemented and/or stubbed since this issue was filed. Give your app a try with a more recent build of the SDK and feel free to open new issues for specific bugs/missing APIs/etc.\n. AppKit support is not in the pipeline.\n. Mirror inverted? Not rotated? Can you share any code snippet showing how you're setting up your view?\n. @volkrass This is a great question. The core WinObjC team is smaller than I think many people suspect so some fixes/updates take a bit longer than might be expected, but we are working hard on everything.\nHaving said that, we are growing the dev team pretty aggressively. So, in a few weeks, you should start to see almost all aspects of the project start to move forward more quickly.\n. Please open new issues if you find specific problems/bugs.\n. This looks like a build settings issue: some component/project in your app is linking against MSVCRTD -- they all need to be built against the release runtime.\nLook under Properties | Clang | Runtime Library and Properties | C++ | Runtime Library\n. Good catch -- we're able to repro the issue here. We'll investigate/fix/report back.\n. @Alx06 right now you're not able to test on an external device as ARM support for our compiler is still being built.\nWe're working hard on it.\n. Closing as a dup of #57 \n. @ardentra Unfortunately CoreAudio is big and technically complicated. It's on our radar but we don't have any immediate updates.\n. See bed20a4 and 1b08739d\n. @wjk the tool/process to generate the ObjC projections will be open sourced -- it's currently being re-architected to make it easier to use and result in smaller code. no firm ETA yet unfortunately... we'll update as soon as we have one\n. @RaulDev are you just asking how to remove that library from your project link settings?\nIf so: in Visual Studio right click on your project -> Properties -> Linker -> Input and remove any references to \"Accounts.lib\"\n. @mlfarrell Loud and clear. The good news is we're doing just that -- scaling up the dev team.\n. Yeah, this regression is unrelated to the runtime changes. @bdrlamb-ms is investigating\n. Does it make sense to squash these into a single commit?\n. See #435\n. Closing this as a dup of #426 \n. You\u2019re trying to link to a file (libgoogleanalytics.lib) that can\u2019t be found.\nYou\u2019ll need to either remove that dependency from your project or, if the lib does exist, update your library path.\n. r+\n. Closing this bug, not because it's invalid but only because it's a dup of #302\n. This interface was changed as of this build: https://github.com/Microsoft/WinObjC/releases/tag/0.1.160318\n. We will be releasing the tool needed to generate ObjC \"projections\" once it's ready.\nClosing this as a dup of #313 \n. Can you try explicitly telling VS to compile this file as Objective-C++?\n. In Visual Studio, right-click on the offending .m file and go to: Properties -> Clang -> Language -> Compile As, change this from \"Default\" to \"Compile as Objective C++ Code (-x objective-c++)\"\nThat should solve your error.\n. @wjk it looks like you're using the build of clang that's included with VS\nI (quickly) tried block semantics with the version of clang that's specific to Islandwood and they seem to work correctly. This build is located in winobjc/msvc/LLVM-3.6.0/\nThe version string should read:\nC:\\Starboard\\winobjc\\msvc\\LLVM-3.6.0\\bin>clang.exe --version\nclang with Microsoft CodeGen version 3.7.0\nProvided as - is without support\nC:\\Starboard\\winobjc\\msvc\\LLVM-3.6.0\\bin\\x86\\c2.dll version 19.0.23904.1\nTarget: i686-pc-windows-msvc\nThread model: posix\n. Several of these were just to maintain some of the existing code. But, fine, I'll update and resubmit.\n. nil is black, and unspecified is clear\n. ",
    "joewood": "All fixed, thanks !\n. Thanks, that fixed it. Is that a missing step in the readme?\n. Looks like the plugin needs to be upgraded. I'm currently using VS Code, which does basic syntax coloring https://code.visualstudio.com/Docs/languages \n. I'm assuming the goal would be to wrap up JSRT (Chakra) with the JavaScriptCore API - https://github.com/mslavchev/chakra-win10uap\n. That's good to know. A visualization of the gaps would be useful. \nWhat about the issue of community contribution? Right now it's hard to know where contributions can be made without the risk of working on something that is already being developed by the MS team. Can the issues be labeled if there are no plans to add a specific feature?\n. That's great. Just a suggestion - it would be useful to annotate the features with future prospective version numbers like the TypeScript team do. Although this may be tentative, it's a good way of understanding relative priorities and complexity.\n. Seems to work ! Thanks !\n. @MaddTheSane so the dispatch object really is being managed by ARC? The above line shouldn't error and this is a compiler bug on Windows?\n. Hi @volkrass, I was trying to port React Native too. The main two missing components were MapKit and JavaScriptCore (which is a bit fundamental to RN!). I hit a few other issues with missing macros and attributes. I removed MapKit from the build to get a compile and stubbed in the JSCore headers - just to fix the compile. I was planning on wrapping up the Chakra engine for JSCore. See #44, #63, #72, #73.\n. Also see issues from last year:  #44, #118 \n. ",
    "davelamb": "I'd wager you haven't built //WinObjC/build/build(.W*).sln yet. That will build all the prerequisites for the samples. \n. The quick start instructions in the readme mention extracting the SDK and building the sample from there. It's assumed if you're starting from source you won't get any premade binaries. See the wiki for more complete build instructions.\n. It's well under way and will be released shortly.\n. Autolayout should be in the next drop. It's a little rough around the edges, and I couldn't find any exceptionally good examples floating around. For the simple cases it should work as advertised, but some things have been fudged in, like layoutMargins (which required a change to Xib2Nib that I'm not 100% on), layouts relative to margins which we don't really have support for yet, and RTL languages which would need a much more thorough change. I've also added visual layout language support, but it hasn't been thoroughly tested (and doesn't have unit tests) so beware. When it drops, I'll close this issue and expect new ones to be opened for missing features and the inevitable bugs and inconsistencies that pop up. Thanks for your patience!\n. Changes pushed to github. For missing features, please open a new issue. Thanks!\n. The vsix found in WinObjC/bin (not in the SDK zip) has been updated to work with 2015. Give it a try, and let us know if you have any more problems.\n. We've fixed this on our side. The vsix found in WinObjC/bin (not in the SDK zip) has been updated to work with 2015. Give it a try, and let us know if you have any more problems. Thanks!\n. The vsix found in WinObjC/bin (not in the SDK zip) has been updated to work with 2015. Give it a try, and let us know if you have any more problems.\n. Intellisense is a different, far more complicated component altogether, and not currently supported. \n. @mehmet6parmak Can you also paste us the contents of C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI.tlog\\clang.command.1.tlog? Thanks for working with us on this one, it seems inexplicable. :)\n. @mehmet6parmak Can you try dropping this ClangCompileTask.dll into your $(SDK)\\msvc directory, and try again? You might have to kill MSBuild.exe. Thanks!\nhttps://onedrive.live.com/redir?resid=CB7793A162443409!1799&authkey=!AIKUK87JQiftdOs&ithint=file%2cdll\n. @mehmet6parmak I suppose I should have done this off the bat, but I enabled verbose logging on the task and recompiled. Give this one a go, and let us know the results. Thanks again!\nhttps://onedrive.live.com/redir?resid=CB7793A162443409!1801&authkey=!AHnuzfVDzXhnPgU&ithint=file%2cdll\n. @mehmet6parmak Looks like it might be a weird edge case (or bug, even) with localization. Are you using a different system language by chance? I've built a new version which might fix it, and if it doesn't I've also added a bit of extra logging to help determine the issue. \nhttps://onedrive.live.com/redir?resid=CB7793A162443409!1802&authkey=!AHdzLHh1gBICJuQ&ithint=file%2cdll\n. Fixed with 93a7a6a306ad262c77c524c87cc166f4551c2c22 with the caveat that the length property isn't implemented.\n. Fixed with 93a7a6a306ad262c77c524c87cc166f4551c2c22.\n. Fixed by bdrlamb-ms. \n. Built and tested, ran through App Cert kit, and indeed, libcurl is nowhere to be found in the restricted API list. \nTested via NSURLConnection through http.\n. There's a fix coming down the pipe for the debug runtime issue you were hitting. Expect to see it soon.\nAs for the other errors your seeing, it looks like something is holding onto some files in your package directory. You can use a tool like Process Explorer to find latent processes holding onto file handles and close them down, or reboot your system. \n. The lack of resizing was addressed in 10.0.10240 when they added the ApplicationView::TryResizeView API, but trying it locally it's not behaving as expected. The official story is your app should be able to run at any size above some minimum (which you can specify programmatically with ApplicationView::SetPreferredMinSize) but obviously that's not always possible.\nThe size of the UIWindow compared to the app view can be controlled with some WinObjC specific code, as seen in WOCCatalog, AppDelegate.m right at the top. When you change the window size with no fixed width or height and autoMagnification/sizeUIWindowToFit enabled, you'll be notified of the change through the standard layout path. This introduces a little more work, since you'd have to modify your view controllers to return a fixed aspect view, and add some background UIImageViews and whatnot, but at the moment we don't have any other way modify the letterboxes.\nKeep in mind we do have projections to WinRT, so there might be another path you can exercise to sneak in some customization, but that'd be a stop-gap solution at best.\ntl;dr: You can fit your app to your screen size through the UIApplicationInitialStartupMode category on UIApplication. We don't yet have customization for letterboxing, but it's a good idea! We'll get to this next chance we get. \nThanks!\n. Thanks for the feedback! This happens pretty frequently on all UIImageViews (you'll see it when pressing image based buttons too), and is likely a race between the compositor and prepping the image. I'll have a look at making it atomic. I'll keep you updated.\n. We don't support the \"show\" kind of segue in Xib2nib, but that failure was handled poorly. We currently only support \"modal\" and \"push\". \n. Oh god, it's even worse, it's resolving the dispatch preferentially to the first property getter it sees. In the case of the example, the error for myLocal is: \ncannot initialize a variable of type 'id<OtherReturnProtocol>' with an rvalue of type 'NSObject*'\nI just tried something a little less specific:\n```\n@interface SomeInterface \n@property NSArray* someProperty;\n@end\n@interface SomeOtherInterface \n@property UIView* someProperty;\n@end\n...\nidretaintype(SomeOtherInterface) soi;\nauto expectingView = [soi someProperty];\n[expectingView setFrame:nil]; /// WARNING: 'NSArray*' May not respond to '-setFrame'!\n```\nIt's not limited to just protocols and ids. It looks like it's going through some id hoops to cast however it can to the first thing that responds to a given selector. Keep in mind if I exchange auto for UIView* it works as expected, but if used inline, this could cause problems... did cause problems.\n. Ok so clang is just insane. Calling messages on id just uses the first one (might not be deterministic) it sees, in any class, anywhere. Not normally a problem, I guess, except when you collide on return type, like dataSource, delegate, etc. As a fix, I might suggest blowing away the implicit cast to id in favour of something like:\noperator TObj*() /*const*/ {\n        return (TObj*)_val;\n    }\nI'm not a template wizard, so you might need some more junk for pointerless operations, or whatever crazy domain limiters you C++ guys like. :) \nThe funny thing is the const keyword. Looks like for message calls, clang does a cast to TObj* through the template, looks at the class const and goes \"I guess that's not good enough\" and casts again to id. With const gone, clang seems to behave. I think it's probably a buggable offense. \nAnd yes, this can wait till after you vacation is done. :)\n. I'm aware you've been talking to someone else on the team, but I want to make this visible in case someone else runs across the same issue.\nUnfortunately we don't yet have support for the begin/endUpdates path, including moveRowAtIndexPath.\nThe alternative for now would be calling reloadSections.\nTake a look at the output from your executable. It should output a string every time you hit an API we don't support, something along the lines of \"Stubbed function called!\" with info about which function, in which file, etc. \n. Looks like we're mistaking a BGR backing for an RGB backing. I'll have to write some swizzling code to swap that back around. Thanks!\n. Anything private can be accessed however you want (a struct is fine), I'm just worried about public-facing properties, since the accessors can be overridden. If we poke at the backing ivars outside the accessors, strange behaviors can pop up. This is just a general rule we haven't been too good about following, so I figured while you're in there... :)\nThanks!\n\nIn reply to: 212905371 \n. :+1:\n. :+1:\n. :shipit:\n. We've root caused the crashing issue to a missing call to EMMS (_mm_empty, clears MMX state) and the tiling issue to x/y step size being incorrect in the call to CGPatternCreate. I have a small fix that addresses both these issues that we'd like to push out that shouldn't collide (but for one line) with your change. \n. I just compiled the code against our local develop branch and found the scaling issue I mentioned before still exists. You'll notice there's a discrepancy between the way UISegment is rendered and the way a plain UIImageView with resizable image renders. The latter uses a Xaml NineGrid and scales things correctly. The former doesn't take the scale into account for the source rect and so renders things too large when used with @2x images, such as our segments.\nMy suggestion would be to add another set of locals to drawPatches, srcTopCap, srcBotCap, etc, which is equal to img->_imageInsets. * img->_scale, and use those in the source rects of the DrawImageRect calls. \nYou'll also have to change the conditionals in drawPatches to read something like if ((pos.size.width - leftCap - rightCap > 0) && (srcWidth - srcLeftCap - srcRightCap > 0)) { .. }\nFinally, you'll have to change UISegment +initialize. All the resizable images should have insets of { 5, 5, 5, 5 } since with my suggested code changes some of the patches don't get rendered due to the conditional, and we'd also like to stretch the caps height-wise.\nThanks!\n. Sure, please send the test code over, since I also tested locally and found drawAtPoint and drawInRect both care about the scale of the UIImage being drawn.\nIn terms of the third point, I don't disagree, but we're talking orders of magnitude of difference in the amount of work required, I was just hoping for stop-gap solution for the meantime. \n\nIn reply to: 237041236 \n. :shipit:\n. Accidentally pushed the wrong branch. Reopen.\n. Frameworks/UIKit/UIView.mm, line 416 at r1 (raw file):\n\nPreviously, jaredhms (Jared) wrote\u2026\n\n?\n\nIn reply to: 84356876 \n\nI think it's still a useful tool for debugging. Hit testing isn't always obvious, especially when authoring new controls with xaml behind. I'm not really against removing the useLegacyHitTesting option in display modes, but I have found a few bugs due to the output of hit testing discrepancy. \n\n\nComments from Reviewable\n Sent from Reviewable.io \n. :shipit: \n. Pull request deferred to https://github.com/Microsoft/WinObjC/pull/1361 \n. Should use accessors for these.\n. Not part of the change, but again should be using accessors for accessing properties.\n. These should be caught by the  above, right?\n. Just do the assignment, the operator overload on StrongId will release it at the right time (as it stands now, you might get an early release if you assign the same color). \n. rect and view should be inout\n. Is it not _Nonnull?\n. Phew, glad we fixed this before WOCCatalog got security audited. :) #Resolved\n. This doesn't seem to be the case on the reference platform. It seems to draw the caps as a ratio between the cap sizes.\n. Your comment about things being incorrectly scaled isn't exactly correct. An image named @2x. should have a scale of 2.0, and when rendered should be half the size of logical pixels. Try it on iOS, something like this (photo1.png exists in WOCCatalog):\nUIImage* image = [UIImage imageNamed:@\"photo1.png\"];\nimage = [UIImage imageWithCGImage:image.CGImage scale:4.0f orientation:UIImageOrientationUp];\nimage = [image1 resizableImageWIthCapInsets:UIEdgeInsetsMake(50, 50, 50, 50)];\nTry drawing this image (from a UIImageView or drawRect) and you'll see that the image caps shrink (the size is the same, but the image is rendered smaller) according to the scale. This is the same behaviour as when using a CALayer with contents = image.CGImage, contentsGravity = kCAGravityCenter and contentsScale = 4.0.\n. That is to say, in the previous iteration there was a * _scale in there that has to remain. \n\nIn reply to: 70727868 \n. Removing this probably breaks gesture chaining for UIPanGestureRecognizer and UITapGestureRecognizer. That is to say, you haven't implemented the delegates on the system gesture recognizers.\nedit\nUIPanGestureRecognizer was chained through UIScrollView, which now uses Xaml gestures, so you don't have to worry about that. However, we implicitly delay single tap gestures if there are multi tap gestures in the global gesture list, which you're clearing out here. Looks like you should be implementing and checking the instance selector canBePreventedByGestureRecognizer. (The docs even mention Tap Gesture by name here)\nedit 2\nI just patched my local working copy and played around with tap gestures... they work, actually, but I think by luck more than design. :) However, it seems having a Swipe gesture with a Pan gesture in the same gesture list doesn't work. Or more accurately, any contending gestures that don't already know about each other. Granted in the past you couldn't do something like cancel the Pan based on the success of the Swipe, but the Swipe would still get fired... not really a regression, per se, but certainly unmasks some shortcomings of our current gesture system. \n. This seems really strange. If I read this right, we test to see if 1) there's an extension separator, 2) we're a retina device, then tack on an @2x, and if that file isn't found we try again by tacking on a .png extension via pathForResource. If that isn't found, we try to access the file verbatim, and if that isn't found, we try again by tacking on a .png. \nI can think of some situations where it does what you don't want. For instance it appears it will never return an image when given a full bundle path. (ie, [UIImage initWithContentsOfFile:@\"abc.jpg\"] where abc.jpg is only part of en.lproj. It seems like it'll look in the bundle first for abc@2x.jpg.png and then abc.jpg.png and of course never find it). And if the intent is to return a bundled png given a partial path, it also seems like it'll never return an @2x image. (ie, if this is to enable [UIImage initWithContentsOfFile:@\"abc\"] it will never return abc@2x.png, since there's no extension separator). \nCan you explain a little more the motivation behind this change? I'd be happy to give suggestions. :)\nDave\n. You're not wrong re: the order of things (even though the iOS docs say the order in which they get serviced is undefined behaviour, it does appear to be deterministic). We don't have a test suite, since our UI automation story hasn't been fleshed out yet, so everything is manual testing for the time being. \nAfter a little bit of messing around with iOS, it looks like returning NO from canPreventGestureRecognizer and canBePreventedByGestureRecognizer preempts the calls to the delegate.. that is to say, you should be nesting your calls to the delegate inside a check to see if the gesture can be prevented by other gestures. \nI bring this up specifically because I'd like an avenue to keep the old behaviour while this work gets finished up, since as of this change only one gesture will be fired in most cases (where previously we'd fire all gestures). To enable that, I'd like you to nest that logic, and add a default implementation to UIGestureRecognizer.mm to return NO for canPreventGestureRecognizer: and canBePreventedByGestureRecognizer:, so all gestures fire simultaneously (unless of course someone were to subclass or add exclusion logic in their gesture handler selectors).\nThanks! Let me know if I need to clarify anything. \n. Can't we replace -alloc with NSAllocateObject? \n. Hm. After a little investigation, it looks like our Xib2Nib and UIFont implementation are a little out of spec. NSFont does indeed implement NSCoding, but it does seem like UIFont doesn't, and so my only conclusion is we're only ever supposed to use UIFontDescriptor to encode/decode on iOS. IE, in UILabel -initWithCoder, _font should be populated with [UIFont fontWithDescriptor:[_coder decodeObjectForKey:@\"UIFont[Descriptor]\" pointSize:0.0f] and of course we'd have to update Xib2Nib to output the right thing. \nSince we're no longer investing in Xib2Nib, I'd say for this is a good enough solution, so long as the new UIFont does still implements initWithCoder.\n. Well it's just a wrapper for the runtime call to class_createInstance, so deprecated it may be, its behavior is very well defined. We use it elsewhere for this specific case: we want to allocate and zero out a class, but not call + alloc. After a little more digging, we definitely should not call NSAllocateObject, specifically because we break contract in Islandwood by doing some initialization inside + alloc in a bunch of classes in UIKit.\nI'm fine with the change as is, it's just a little silly to be putting one-offs (that aren't primitives that need special handling) in the unarchiver code. I'd almost rather see something like a new internal function on NSObject, allocForDecoding, that by default just calls alloc, but can return the default font like you have here for UIFont. Too much to ask for a stop-gap solution, I know. :)\n. I'd rather not mess with it at this time. I'm not convinced our tapCount implementation is completely interoperable, and I'd rather we address the concerns of the task before investing in a reimplementation of something that may indeed be rewritten with WinRT gestures.\n. \ud83d\udc4d \n. As per coding spec. Will do. :)\n. One is for the background image, the other for subviews. I didn't want the background element polluting the children, possibly causing the background to render on top.\n. I didn't cache it since it's not needed anywhere else, and only used once. I could still move it if you'd like.\n. Does that behave correctly with bringSublayerToFront etc?\n. For the world to see? Like in XamlUtilities.mm? Or DWriteWrapper_CoreText.mm? \n. This is guarded by self.text != nil at the top. \n. There don't seem to be such checks on iOS.\n. Argh. no. :)\n. Nice. :)\n. They're the same as the ones below.\n. I was thinking if someone overwrote the accessor, but that's... a bad thing to do. \n. ",
    "IvanKarpan": "OK, so I did build the package and extracted it to a path, but how do I set up WOCCatalog to actually look at the said path for the libraries?\nNa magic is happening, getting the following error:\nLINK : fatal error LNK1181: cannot open input file 'OpenGLES.lib'\nI am an iOS developer absolutely new to VS and this instruction - IMO - is worth having in the README...\n. OK, got it, so you need to open the sample from the built SDK folder, not the sources, my bad.\n. +1, definitely\n. Found this, probably the list is prioritize:\nhttps://github.com/Microsoft/WinObjC/wiki#whats-still-under-development\n. ",
    "ninjanpotter": "1st Question: First time while building the build file , it successfully built and generated the sdk. And everything went fine. Now again I built the build . Its showing this error. (Should I build it only once)\nError   : cannot open input file 'StarboardWin32.lib'   Package D:\\PortingPOC\\WinObjC-master\\build\\Package\\LINK 1\n2nd Question: I tried building the sample projects , it worked fine. Now using vsimporter.exe from cmd , I got the solution file for my ios project but it throws the following error while building?\nError   LNK1181 cannot open input file 'StarboardXaml.lib'\n    D:\\PortingPOC\\WinObjC-master\\build\\SDKPackage\\Release\\samples\\trialView\\trialView.vsimporter\\trialView-WinStore10\\LINK  1\n. Thanks.\n. For 1st one : Solution: WinObjC\\build.\n                      Configuration:  Release Win32\n                    Platform:  U mean the IDE or Language? \nFor 2nd one: That's my own application which I developed in xcode myself and added inside samples folder and got a solution file using vsimporter.exe. \n. And please mention about \\LIBPATH . The error is based on the linker I guess. What path should I give and in which rows in vc++ directories should I add? \n. ",
    "pkamb": "I'm seeing this same cannot open input file 'OpenGLES.lib' error.\nNote that I am cloning the repo, not downloading the Releases file (if that matters).\nI followed these directions from the readme:\n1. Extract the SDK zip file to a local directory\n2. Navigate to winobjc/samples/WOCCatalog in the extracted directory\n3. Double-click on WOCCatalog-WinStore10.sln to open in VS2015\n4. In VS2015 right-click on the WOCCatalog (Universal Windows) project\n5. Select Set as StartUp project\n6. Use Ctrl-F5 to build and run the app\nThose steps result in the OpenGLES.lib issue. \n\nI'd wager you haven't built //WinObjC/build/build(.W*).sln yet. \n\nThe above step is not in the readme. Is it needed? Can you add that to the readme if so?\nFWIW, when I open the build/build.W10 file and press Ctrl-F5, I get the error alert:\n\nThe project objcrt.Universal cannot be started directly.\nIn order to debug this project, you must consume it from an application project that creates a package and is marked as the Startup Project.\n\nSelecting Bulid > Build Solution results in 3965 build errors: Predefined type 'System.String' is not defined or imported and etc.\nReturning to the WOCCatolog project then still results in the OpenGLES.lib error.\n. ",
    "AtanasC": "Thank you so much!. ",
    "jmsaunders-ms": "Yeah we have no implementation of this for the time-being because we have no apps that function as test-cases for them.\nIf you're interested in implementing it, there will be a testing suite available fairly soon that we can use to validate it with, after writing some simple tests for it.\nSorry for the delay in answering.\n. This should be fixed. Please reopen if still a problem.\n. We can probably make the flags the same but I have reservations about renaming it to ibtool.\nIs there a compelling reason to do this? This should run transparently to the user as part of the build system so its name shouldn't matter.\nArtem should have the final say on this.\n. We don't compile with modules enabled at this time; we haven't yet looked into defining module maps for our frameworks.\nThankfully including frameworks the old-fashioned way will continue to work in both environments but I agree it's unfortunate.\nI'll leave this open for now to see if a hero wants to try making them work.\n. Our version of clang should support this and it should be possible to work on this externally.\nThat said, as far as I know nobody has ever tried it.\n. We've seen problems with installing the platform tools before.\nYou can try adding the feature through the Add/Remove Programs section in the Control Panel, modifying Visual Studio.\nWe don't control this part of the project though and I'm not sure there is much we can do about Visual Studio installation problems, sadly. You can file a bug at https://connect.microsoft.com/visualstudio if the problem persists.\nIf anyone else is seeing this problem and can give details about their installation, it might prove helpful, especially if they have since fixed the problem.\n. Adding support to generate CIL would likely be a fairly significant amount of work.\nCan I ask why you want this functionality?\n. We use clang, so our clang conformance is pretty good. :)\nDo you have any specific concerns? Perhaps I misunderstood the issue here.\n. Of course! :)\n. We haven't seen issues involving bridged casts. Are you positive you have ARC enabled?\nHow did you set your project up? Is it imported? (Perhaps ARC settings aren't being preserved) If it's just some code you added after enabling ObjC support in MSVC then you can enable ARC per-file or per-project in the settings dialog.\nCan I get a compiler log of the error you're seeing?\n. Thanks for the example.\nThe reason this is happening is because the iOS version of CGPathRef is a struct*, a C type. Our version is an id, which means no bridge cast is necessary in this circumstance (you can't bridge cast from id to id - in fact you don't have to).\nThis is a bug in our code. Unfortunately our CGPathRef is an Objective C class called CGPath that has a few convenience methods on it. It should be a C struct with only state. This will be the case for some other Ref types as well (CGFont for example) but we've fixed up most of them already.\nWe're working on it! Sorry again.\n. Partial +1\nI'm all for using clang-format and have been pushing a bit to have that done. I'd specifically not use the LLVM style though since VariableNames look strange to me. Further, we make (imo) good use of exceptions in some of our tools, which goes against some of the style guides.\nI'd prefer I think to base it on the Google style guide with some modifications. This is likely coming but I wouldn't expect it this week. It's a bit prickly because none of them are specifically Objective C style guides and that's the majority of  our code.\nMore on this later.\n. Hi @vmagaziy, I've been working on this a little bit. The reason why we don't want to accept your commit is that we have a lot of reservations about having a dependency on Python. I'm also not a huge fan of pre-commit hooks in general but emitting a patch is IMO not a great solution.\nI've ported the important bits of the script to C#, which will instead function on the working version of the diffs (rather than staged). The plan is to show a diff which the user can accept or deny.\nThis work started after your pull request. We're happy with the broad strokes of what you want to do and I apologize for not making this explicit earlier.\n. Sorry - this is taking longer than I expected and I wanted to give some updates.\nClang-format has had some issues with our source base and we've had trouble with a couple things:\n1. The preceding whitespace (and comments) on method definitions causes clang-format to severely break methods following empty methods. This is fixable with a quick sed prior to running the tool, but that is not always an effect-free process (multiline strings).\n2. Laying out c-style struct initializers does not work great for us (especially with the C++11 option on, sadly). We would like to preserve some formatting of them (matrices, setting up some function pointer tables, etc). None of the options (I have seen) support behaviour that satisfies our needs.\n3. The regular bike-shedding on choosing a coding style. :)\nRight now I'm strongly considering running a pass over the code base once, cleaning up stuff I disagree with and pushing and then spending idle cycles trying to make clang-format work better for our purposes. Until then a commit hook to reject pull requests that don't match the style is untenable.\n. I wanted to clear a few things up about this.\nFirst, we have no objc_msgSend. This is because we're targeting the ObjFW runtime code generation style (controlled by -fobjc-runtime=objfw in sbclang.props). This means the compiler emits code using objc_msg_lookup, which returns the function pointer for the method in question. objc_msg_lookup has some magic to do fast lookups that we haven't had performance problems with (yet).\nI think the performSelector code is ok because it returns an id. The reason NSInvocation is horrifying at the moment is because it needs to handle calling convention weirdness. For instance, we need to recognize when the method invocation is returning a floating point value and call the function pointer as that, otherwise we won't get the correct return value! Same story with structs, with some special cases. Unless I'm misunderstanding something, I don't think the performSelector code can share anything real with NSInvocation.\nThat said, there may be an issue with nil receivers in NSInvocation. If this is the case we should open a separate bug report for that.\n. You're right that forwardInvocation isn't currently supported. It's on our radar. :)\n. You're right, clang/c2 for Objective-C does not presently support codegen for x64. This is something we're aware of. ARM support and optimizations have higher priority than x64 code generation, so I would expect to see support after those.\n. https://github.com/Microsoft/WinObjC/commit/0b4ec86d54a92dcb520f502f624386274ae9dfc4 should fix your issue (excuse the improper labeling....).\n. ",
    "jofre-ms": "The fix for this is written, tested, and going in soon.\n. Fix coming soon for this. The fix fully addressed the OP's first bullet point, but the second point will be addressed with a larger replacement of NSPropertyListSerialization functionality.\n. The fix is in.\n. The fix for this is coming soon.\n. :+1:\n. :+1:\n. :+1:\n. The fix is coming soon!\n. Reworked this to use asynchronous file writes, which reduced synchronize time for your example on my machine from approximately 0.45 seconds to 0.04 seconds.\n. Fix is coming soon.\n. > }\nRaj and I discussed prioritization for this, and decided to move this change forward without coding (which will be coming later).\n\nIn reply to: 229733797 \n\nRefers to: Frameworks/Foundation/NSURLResponse.mm:160 in 7e886a8. \n. :shipit:\n. @bbowman is added to the review. #Closed\n. :shipit:\n. :shipit:\n. :shipit:\n. > - (instancetype)blockOperationWithBlock:(void (^)())block {\nCurrent behavior for blockOperationWithBlock:NULL is crashing, which matches the reference platform.\n\nIn reply to: 232789363 \n\nRefers to: Frameworks/Foundation/NSBlockOperation.mm:41 in 7aa2642. \n. thanks\n\nIn reply to: 232791899 \n. I like the first change because we can save some calls to [_dependencies count]. I don't like the second change because it conflicts with the design: isReady needs to return YES when _cancelled is YES - to work around this we'd need more helpers and logic to avoid storing a flag to figure out when isReady has changed, and storing a flag is not expensive.\n\nIn reply to: 235612017 \n. > ```\n\nstd::recursive_mutex _readyLock;\n```\n\nI think this can be combined with _dependenciesLock #Resolved\n\nRefers to: Frameworks/Foundation/NSOperation.mm:50 in 666fe36. \n. I believe caching already occurs internally for this property getter.\n\nIn reply to: 59075810 \n. This check only works as intended when range.location == 0. Change to NSMaxRange(range)\n. Please replace all the calls to [self count] in this method with a cached local variable\n. Discussed with Raj offline. See other comment.\n\nIn reply to: 69176268 \n. #Pending\n\nIn reply to: 69179209 \n. nooooooooooooooooooooooooooo\n\nIn reply to: 69209618 \n. I think it's unnecessary. I'll change back to release.\n\nIn reply to: 69351630 \n. From the documentation \"If the operation is currently executing or is not ready to execute, this method [start] throws an NSInvalidArgumentException exception.\"\n\nIn reply to: 69351761 \n. I don't think it's necessary to test the test class MyOperation, but I'll add KVO tests for the base class.\n\nIn reply to: 69353346 \n. According to the preceding sentence in the documentation, this is the correct behavior. \" In OS X v10.6 and later, exceptions are allowed to propagate beyond this [start] method. You should never allow exceptions to propagate out of your main method.\"\n\nIn reply to: 69355325 \n. \"In iOS 8 and later and OS X v10.10 and later, this property is set to nil after the completion block begins executing.\" #Closed\n. [self willChangeValueForKey:@\"dependencies\"];\n[self didChangeValueForKey:@\"dependencies\"];\nadded to addDependency and removeDependency\n\nIn reply to: 69357321 \n. needs\n    [self willChangeValueForKey:@\"completionBlock\"];\n    [self didChangeValueForKey:@\"completionBlock\"];\n\nIn reply to: 69357300 \n. This will need a test as well\n\nIn reply to: 69355570 \n. queuePriority is used in NSOperationQueue and cannot be stub. I'm adding a \"caveat\" implementation that always returns NSOperationQueuePriorityNormal for that property. qualityOfService will be STUB and concurrent/asynchronous return NO.\n\nIn reply to: 69354091 \n. Actually queuePriority can just be auto-synthesized\n\nIn reply to: 69614305 \n. Discussed offline. This matches the ref platform\n\nIn reply to: 69615177 \n. moved the scope of the lock outside of the if statement\n\nIn reply to: 69615071 \n. switched to strongId\n\nIn reply to: 69624034 \n. why?\n\nIn reply to: 69624996 \n. Needs another lock\n\nIn reply to: 69623776 \n. On the reference platform, nothing happens. I'll add a test.\n\nIn reply to: 69623943 \n. I checked the reference platform and it sets silently. I'll make the change here.\n\nIn reply to: 69660196 \n. The current implementation for queue priority, which is just auto-synthesized, is sufficiently interoperable\n\nIn reply to: 69659816 \n. I don't think it's worth changing to this design, although it would be better to have a watchdog thread. We can still detect the regression.\n\nIn reply to: 69624529 \n. Yes\n\nIn reply to: 69819051 \n. \"A finished operation may finish either because it was cancelled or because it successfully completed its task. You should take that fact into account when writing your block code.\"\n\nIn reply to: 69831586 \n. NSOperation support being invoked \"manually\" - that is, outside of the Queue by user code. We still need an autorelease pool in that case.\n\nIn reply to: 69818876 \n. I don't think the lock is needed for the accessor. Removing.\n\nIn reply to: 69818734 \n. boolForKey #Pending\n. On the contrary, the documentation for  CFPreferencesSetAppValue states \"You must call the CFPreferencesAppSynchronize function in order for your changes to be saved to permanent storage.\" - Therefore this automatic synchronize logic only needs to exist in NSUserDefaults.\n\nIn reply to: 69979853 \n. Testing a bool strictly increases our test coverage. I wrote these changes because I couldn't answer the question of whether this scenario had regressed.\n\nIn reply to: 69818261 \n. _synchronizeQueue is a StrongId, which will release the object at the appropriate time.\n\nIn reply to: 69786087 \n. A quick examination of our NSOperationQueue implementation shows that we destroy the worker thread whenever the queue is empty and create a new thread when an operation is added. That's inefficient compared to using threadpools, but we should make the fix in NSOperationQueue rather than switching to a threadpool in NSUserDefaults because:\n1) The performance gains in NSUserDefaults would be nominal compared to the already huge cost of writing to file\n2) We would now need to write two fixes instead of one and maintain two threadpool/queue implementations instead of one.\n\nIn reply to: 69818599 \n. Looks like I need .attach\n\nIn reply to: 69994676 \n. Maybe this isn't the best way to determine if an operation should be added to the queue. I'm going to experiment with alternate designs and see if it makes my perf test any faster.\n. whoops, need to remove these #Resolved\n. We need fine control over the lock here, as CFPreferencesAppSynchronize should be called outside of _cacheLock.\n\nIn reply to: 70540876 \n. this should really be caveat - with a note that synchronize does not read from file #Closed\n. ok then let's do it everywhere.\n\nIn reply to: 70694534 \n. The reason I avoided the [NSUserDefaults standardUserDefaults] call is to prevent initialization of standardUserDefaults when we suspend, if it hasn't already been initialized. I'll try a different workaround.\n\nIn reply to: 70878479 \n. Oh no! good catch.\n\nIn reply to: 72299337 \n. use a dictionary instead of an array to make this faster. #Resolved\n. credit: Dustin\n\nIn reply to: 72308207 \n. got me again.. nice catch\n\nIn reply to: 72351654 \n. We still need this test, but I suppose it's worth adding the NSMutableArray test as well with this change.\n\nIn reply to: 72359377 \n. This check is necessary to prevent a race condition between removeDependency and observeValueForKeyPath resulting from that dependency finishing. In removeDependency, we check the dependency's isFinished property and decrement _readyCount if that dependency is finished. If for some reason it is not finished when we check it, but it completes and calls observeValueForKeyPath before removeObserver is called, then observeValueForKeypath will block until _readyLock can be held, and at that point the dependency will no longer be contained in the _dependencies set, ensuring that _readyCount is not modified.\n\nIn reply to: 72368995 \n. NSKeyValueObservingOptionInitial will cause observeValueForKeyPath to be invoked on the dependency, which contains the logic you mentioned.\n\nIn reply to: 72369304 \n. NSKeyValueObservingOptionInitial sends an immediate observation for the current state, before addObserver returns (and in the same callstack). Therefore, if the dependency is already finished, we will increment and decrement _outstandingDependenciesCount before addDependency returns, while holding the appropriate locks. According to documentation, \"The same dependency should not be added more than once to the receiver, and the results of doing so are undefined.\"\n\nIn reply to: 72513161 \n. ",
    "ckent": "Especially since libdispatch is leveraged heavily by all iOS frameworks and applications. The WinObjC implementation is completely incorrect- not just incomplete, but entirely wrong conceptually. At least use the open source libdispatch as a reference to understand the purpose of the library.\n. ",
    "AriX": "+1\n. ",
    "filipinascimento": "They took a very different approach by turning libdispatch and core foundation into something existing over the Foundation, and I'm not sure why. I think I have already seen something like that on GNUStep. Still, this seems wrong in so many ways...\nAnyone knows how this is done on cocotron (which is also licensed as  MIT)?\n+1 for implementing libdispatch over pthreads and pure C (+blocks extension).\n. LibDispatch can be implemented over pthread or even directly over winthreads (I'm not sure about the complications though). There is at least two open source projects that brings libdispatch to windows  (https://github.com/DrPizza/libdispatch/tree/master/libdispatch and http://opensource.mlba-team.de/xdispatch/docs/current/index.html ), all implemented in pure C and even extending the functionality to work with C++ lambda syntax.\n. ",
    "rajsesh": "Thanks for all the suggestions: \nWe have a new runtime (Gnustep libobjc2) for a while.\nWe have the DrPizza fork of libdispatch and are evaluating other options as well to support more recent versions of libdispatch.\nWe are in the process of using Apple CF.\nEven with all of these, we will still not have 100% compatibility.  Ex: file paths are different between iOS and UWPs.  Our goal is to have sufficient compatibility to allow apps to be easily port to UWPs and these changes will drive towards that.\nI am closing this issue given that we are making traction on all of those fronts.\n. https://github.com/Microsoft/WinObjC/tree/master/tools/objc2winmd is the tool.  The built version of this is available in the tools package from the latest release.  This should work for many common OBJC data types, please check it out.. @MaddTheSane we don't have explicit plans for supporting Bonjour SDK through WinOBJC.  You should be able to use the windows Bonjour SDK in the ported app, just like any other windows app.\n. We have several known issues particularly with bridging and support for polymorphism on collections.  Our current plan is to bring in the Apple Core Foundation implementation, and switch foundation to use the new CF.  Expect this to land sometime in the next couple of month or sooner.\n. Further update on this. Since this issue is asking about how we are doing this:\n1. We are filling out core foundation from the apple corefoundation project.  This work is expected to land soon.\n2. The Foundation classes that do need to be bridged will be bridged with CF and use as much code as possible from CF.\nWe won't be 100% in this model specifically for cases where we have an NS implementation (example NSBundle), but we do plan to migrate all of this over.\n@bbowman will publish a design document on the bridging when this work comes out.\nClosing this out for now.\n. the version of libdispatch we use is quite old.  We have plans to migrate to the new libdispatch, so this should be addressed in the medium future.\n. @ad1Dima apologies for delay in response.  This is really gated on migration to new libdispatch version, which we have currently in our backlog.  . @xGEKKOx since winobjc is a source code solution, the lib you are including must be compiled for windows.  If it is an OBJC library, it needs to be recompiled with winobjc. Closing this issue as this is more of a question.\n. This is in our backlog and will be considered in one of the future releases.\n. Thanks to our partners at Intel, Coremotion is now part of the SDK.  Check it out.\n. fixed with new runtime.\n. This has been fixed for a while now, closing the issue.\n. @lhoward, thanks for reporting these and many other issues. This issue has been fixed (fix has been in for a while).  Our CF/Foundation code is now class cluster aware. \n. Should be covered as part of #711 \n. This has been addressed as part of the switch to new runtime back in Jan.  There are still cases where we have to go grab the isa, those should be minimal. Thanks for reporting the issue!\n. fixed with new runtime.\n. This function isn't available anymore with the new runtime.\n. This should be fixed now.\n. @H2CO3, the fix is coming soon.\n. Available in release 0.1.0.151222\n. This is in our backlog and will be in a future release.\n. Available in release 0.1.0.151222\n. This should be fixed now.\n. This is fixed now.\n. This has been fixed for a while now and is available in the latest sdk.\n. This has been fixed for a while now, the latest SDK has this.\n. This is a duplicate of issue #98 https://github.com/Microsoft/WinObjC/issues/98\n. ImageIO is now available, has been since April.\n. This is coming soon.\n. This should all work as expected, as NSURL has been properly bridged for a while now. Please let us know if you run into issues.. Indeed, @MSFTFox fixed it with #1550.  This will be available in our Feb release.. WinOBJC is using libdispatch DrPizza fork, which doesn't support this at this point and it is not part of our immediate roadmap.  We could consider this in the future..\n. Thanks for the feedback, this is now in our backlog and may be available in a future release.\n. Thanks for the feedback.\u00a0 Implementing Security framework is added to our backlog and may be available in a future release.\n. This issue should have been resolved now.\n. Thank you for your contribution!\n. Available in release 0.1.0.151222\n. I did download the latest sdk and am able to build the samples just fine.  What configuration are you using?\n. I have tried the samples from the Oct30 preview release and have been able to build all of the samples and run them.\u00a0 Can you point out which project (Store 10, WP 8.1, etc) that you are using?\n. I have tried the samples from the Oct30 preview release and have been able to build all of the samples and run them.\u00a0 Can you point out which project (Store 10, WP 8.1, etc) that you are using?\n. We don't use cURL anymore.\n. Thank you for your contribution!\n. This is fixed with the new objc runtime, which is part of our release: 0.1.0.160128 \n. This is in our backlog and will be addressed in a future release.\n. This is in the backlog and may be available in one of our future releases.\n. @joalmeid both MobileCoreServices and AFNetworking are in our near term roadmap.  roadmap.  Coming soon.\n. The linker has a new flag (it has had it for a while now) /wholearchive that would have supposedly fixed this problem.  However, our attempt to use it uncovered other issues (see PR #684, #874, #879). \nThere are two workarounds: \n1. Define the categories in the app project (per @rupertdaniel).\n2. define a dummy \"C\" function in the .m file that implements the extension.  Call the dummy function from app initialization code (any file in the app project).\n2 is what we have been using for some internal apps that ran into this issue.  \nWe will revisit #684 in the future.. Only for categories and extensions. New class definitions will be picked up by the linker. . It should still work although I can't say I have tried. The issue here is not that the symbol is not referenced. It is simply that Class1 and Class1 (category) are the same symbols, so the new definitions are ignored (as noted by the linker error). . Available in release 0.1.0.151222\n. This is in our backlog and we will consider it in one of the future releases.\n. Thanks for your contributions!\n. Available in release 0.1.0.151222\n. @interface SomeInterface \n@property NSArray* someProperty;\n@end\n@interface SomeOtherInterface \n@property UIView* someProperty;\n@end\nThis will be trouble even in reference platform when you try to do something inline.  And Dustin, go enjoy the rest of your vacation.\n. now available.\n. Now available.\n. now available.\n. This is actually by design.  dataUsingEncoding does not include the null termination in the string, which is required when you do %s for formatting.  So NSLog is printing all characters until you encounter the null termination character.\n. Could you please clarify the exact api you are using, or the code snippet?\n. Hello, can you please provide mode details?\n. Hello, thanks for reporting this issue.  Unfortunately, there is not enough information to proceed on this issue, please reactivate with details you might have.\n. This has been fixed a while ago.\n. This was addressed by pull request 318, which is merged now.\n. This was addressed by pull request 318, which is merged now.\u00a0 Will be in the next release.\n. This will be addressed through #2686.  . Addressed as part of #2686 . This is working by design, so this is not really a valid test.  dataUsingEncoding by design does not include the null termination character, which is needed if you are using %s to print the string.\n. merge conflict due to project changes, have a local change to validate.  Required some clang formatting changes that I applied as part of the merge.\n. Hi - apologies for the delay here.  Our codebase has diverged quite a bit and the tests have been reorganized.  Could you please rebase against the master and resubmit this pull request?  \nThanks!\n. Thanks for your contribution!\n. @mj1856 Thanks for the feedback.  Yes, this implementation is still fragile.\nWe will move to ICU52 in the near future (we are waiting on another team porting it for UWP).  Once that is done, we will be able to use getIDForWindowsID.\n. This is available as of last release.\n. Available in latest release.\n. This is now fixed.\n. Is there a reason you are using the actual values for the constants? The change doesn't hurt, but want to make sure you are not relying on the actual values instead of the constants defined in the headers. \n. @cloudmonkeypeng Thanks! if you have a pull  request, will be happy to take it. :)\n. The change broke the build due to dependencies being reordered, I have backed this out, could you please resubmit?\n. Added some additional code review feedback.  Also please revert the app asset files (all the png files in the samples directory).\n. Thank you for your contribution, this change is now merged.\n. You could extract the winobjc.zip and overlay it on the path where you have sources.  That should work.\n. Our project requires you to use git and git-lfs as the compiler binaries are git lfs objects.  Alternatively, you can unzip the winobjc.zip and overlay it on top of the sources.zip and that should work too.\n.  nitty comment to use {} with the if statements. \nif (outError) {\n   *outError=nil;\n}\n. Thanks again! One more step needed. You have to sign the CLA as mentioned here.  You have to do it only once for all MS open source projects.  \nhttps://github.com/Microsoft/WinObjC/wiki/How-to-Contribute\n. Thanks for your contribution.\n. Certainly in our near term backlog.\n. @arnoldt3 - predicateWithBlock is working.  We should have predicateWithString working in ~2weeks. \n. This was fixed with latest release\n. Are you getting the SDK from the winobjc.zip, or building your own?  If you are building from sources, please be sure to install git-lfs.  Please see https://github.com/Microsoft/WinObjC/wiki/Building-From-Source for details.\n. @michyprince I am unable to reproduce this issue.  We have a unit test that does exactly this and it compiles.  This is under $(winobjc_sdk_root)\\tests\\unittests\\ClangModules\\ClangModules.h.  Can you provide more information on your project type or setup? \n. @triplef This should be fixed in the latest release, could you please verify?\n. @cre8ivepark can you please verify if this still happens in the latest release? We had an incorrect project dependency in AutoToolbox that may be the root cause.  Also, can you paste the imports in your source code if this still repros?\n. @cre8ivepark thanks for sending the code snippet.  The issue is reproducible when importing  from a .m file.  It would compile fine in a .mm file (because the header and dependencies were using C++ constructs).  Fix is on the way.\n. If you are using react native, your best bet really is to use the react native support for UWP instead of using the winobjc project.  Please see this blog for details.\n. @weswmsft is tracking this with the compiler folks.\n. @jofre-ms is taking this now.\n. @weswmsft is tracking this with the compiler folks.\n. @rupertdaniel Thanks for reporting this.\n. DISPATCH_COCOA_COMPAT doesn't quite work for us because it also has mach dependencies which we don't have.  It was simple enough to enable autorelease pool for WINOBJC.  Fix is coming soon.\n. @ashwinkumarsarangula it is not clear what exactly you are changing. Could you please merge with latest master branch, rebase your changes and submit a new request?\n. @DHowett-MSFT is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. Waiting for CR updates.\n. :+1:\n. @afaruqui Build validation failed for WOCCatalog.  can you please fix that?\n. waiting for updates.\n. :+1:\n. Fixed in \n. @Nambukarthy We don't have CoreTelephonyDefines.h.  As a workaround, you can comment this include out.  Please note that although we have this directory, the apis are just stubs and don't have any functionality.\n. @jofre-ms is added to the review. #Closed\n. :+1:\n. @triplef thanks :)!\n. @nicholasgerard-msft \n. @winobjc-bot please test\n. @rajsesh-msft please test\n. @rajsesh-msft please test.\n. :+1:\n. Should be available in the next release.\n. fixed with 390d14661261562eb34ecf11543f0b7be0757318, available in 4/29 preview.\n. @kemalserkan are you using the zipfile to download the sources?  Please make sure you have GitLFS installed as noted in readme.md\nNote on installing the bridge: We've switched to using Git LFS to handle the large binaries included in the bridge. This does not affect using the prebuilt releases found on our releases page, but if you build the bridge from source, please see the instructions found on our Building From Source wiki page.\nPlease do not use the \"Download ZIP\" button above, since you will not be able to build the bridge using the resulting .zip file. For more information on why this is the case, see \"I'm getting errors after downloading the bridge through the \"Download ZIP\" button on Github. What should I do?\" in our FAQ.\n. @kemalserkan please reopen if you still see this after using git-lfs. \n. This is rolled up as part of the KVO performance improvment change\u00a0@dhowett-msft is working on.\u00a0\n. @bbowman please add your class cluster design comments here.\n. @ms-jihua is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. Dupe of #482.\n. @RG-J Thanks so much for offering.  Will let you know by end of day.\n. @RG-J this is urgently required to unblock a customer, so we will do this one internally.  If you are interested, i could tag you on a few issues where we can use your help.  Thanks again for your contributions!\n. @afaruqui yes, our current CF implementation is quite limited.  We are however working on getting the new version from the apple core libs project.  Is this blocking you in any way?\n. @nishant5800 please follow instructions posted by @asimonov-msft and if that didn't work, let us know.  otherwise, i will consider this closed.\n. @bbowman is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @RG-J will review this today.  For future reference, please fork WinOBJC repo and push your changes there.  That way when you make updates, the original pull request will be updated instead of a new one being created.  This helps keep all the discussions in one place.\nThis discussion on How to update pull request should help.\n. @benvi is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @RG-J How is this coming along?\n\nIn reply to: 217496322 \n. @RG-J your changes have conflicts with the latest master.  Could you please rebase and resubmit the pull request?  Thanks for working with us on addressing the feedback.\n. Merged, thanks for your contributions @RG-J. \n. @RG-J thanks. . Could we add at least one unit test to verify this change please?\n. :shipit:\n. tests\\unittests\\foundation\\NSObject_NSKeyValueArrayAdaptersTests.mm would be a reasonable place. Thanks again for your contributions!\n\nIn reply to: 218444600 \n. Please add -config release to the command line. We will be sure to update the wiki today, thanks for pointing this out!\n. @djsmev yes, we don't have this framework in our SDK. If your app is using Bluetooth LE devices, you can use the windows APIs directly.  We have these APIs projected, so you can call them from OBJC as detailed here.\n. Closing this issue, please let us know if you have further questions on this.\n. This would be by design.  The supported way to get SQLLite with UWPs is by installing the SQL-lite.vsix directly from sql-lite website.  There are no plans to redistribute it with WinOBJC.\n. Copying @asimonov-msft 's comments on #478 - how to add sqllite support to Winobjc project. \nGo to https://www.sqlite.org/download.html and download a VSIX for Universal Windows Platform.\nInstall the VSIX on your machine.\nIn Visual Studio Solution Explorer, right-click on your project and select Add -> Referece...\nUnder Universal Windows -> Extensions select SQLite for Universal App Platform \n\n. @Ramu-msft is added to the review. #Closed\n. @bdrlamb-ms is added to the review. #Closed\n. @ehren - squash is fine.  We will merge squash anyway.\n. Waiting for CI build to finish.\n\nIn reply to: 218510109 \n. :shipit:\n. Thanks for your contributions! :100: \n. @ms-jihua is added to the review. #Closed\n. :shipit:\n. @Samanthi-Jeyaraj Thanks for your contribution.\n. @triplef thanks!\n. Without a callstack, it is hard to say.  However looking at the code, this doesnt seem to be winobjc related.\nCan you provide information on what you are doing and provide the callstack? \n. This seems unrelated to winobjc.  Closing it for now.\n. @lbugnion what is the size of the binary \\bin\\hmapmaker.exe?  If it is really small, you are running into the issue called out here.\n. @RG-J technically, you cannot pass nil here, as the method does expect non-nil value. If you try this on reference platform, you will get a warning.  Clearly, you won't see the warning if you pass a variable and it just happens to hold nil.\n. @ms-jihua is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. :shipit:\n. @afaruqui we had some conflicts unfortunately with the latest release.  Would you be able to resolve them and resubmit the PR?  The change looks good otherwise.\n. Hi @afaruqui there are a couple of build breaks in the CI build.\nFrameworks\\AudioToolbox\\AudioFile.mm (508, 31)\ncast of C pointer type 'CFURLRef' (aka 'const __CFURL ') to Objective-C pointer type 'NSURL ' requires a bridged cast\nFrameworks\\AudioToolbox\\SystemSound.mm (77, 22)\ncast of C pointer type 'CFURLRef' (aka 'const __CFURL ') to Objective-C pointer type 'NSURL ' requires a bridged cast\nyou can now use bridge cast (previously you can't).  Could you please fix this?\n. in CI build.\n. :shipit: \n. NSXMLPropertyList.mm has this code:\n`` c\nstatic id propertyListFromElement(xml_node<>* elem) {\n...    } else if (strncmp(elem->name(), \"date\", elem->name_size()) == 0) {\n        Str numStr(elem->value(), elem->value_size());\n        return [NSDate dateWithTimeIntervalSinceReferenceDate:atof(numStr.cstr())];\n\nthere-in lies the rub. The value is string representation. Should use NSDateFormatter dateFromString\n\n} else {\n\n```\n. :clock1:\n. :shipit: \n. Everything except CGContextReplacePathWithStrokedPath is implemented.  Closing this and will address this as part of CG refactor to use D2D.\n. Thanks @shahmeeresmail \n. I am not able to repro this, can you provide a code sample or snippet that reproduces this issue?\n. pthread_mutex_destroy() must check for PTHREAD_MUTEX_INITIALIZER before destroying it.  in a case like this, the Critical section is never initialized.  See 1c8165a72b22c60e9f025bc09631c41fb060a93d\n. Thanks @shahmeeresmail for fixing this.\n. Thanks @shahmeeresmail for fixing this.\n. @jaredhms is added to the review. #Closed\n. @bdrlamb-ms is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. @bdrlamb-ms is added to the review. #Closed\n. samples/KVOPerf/KVOPerf.vsimporter/KVOPerf-WinStore10/Assets.zip should not be in this change.  could you please remove that and submit? looks good otherwise.\n. also samples/WOCCatalog/WOCCatalog.vsimporter/WOCCatalog-WinStore10/Assets.zip dont seem necessary as you have the extracted files?\n\nIn reply to: 227616427 \n. in CI build.\n. This should be addressed as part of #925 \n. @yaveymao we don't currently have full support for CFNetwork apis.  Which third party libraries need this functionality?\n. @bdrlamb-ms is added to the review. #Closed\n. Are there tests for these apis that need to be part of this pull request?  #Closed\n. @adein, yes please. If you added a sample to woccatalog, please include that as well. the idea is to make sure we have test collateral to guard against any future regressions. \n. @jeffMeador could you please rebase the branch and push again? \n. Could you pull latest changes from github/master your branch, do a git -rebase and resubmit the pull request?  The way it stands now, the PR shows 188 changed files and is hard to go through.\n. Thanks a bunch, this is a lot easier to look at.\n\nIn reply to: 228855101 \n. It would help to add some comments about the math in all the new methods.  \n\nIn reply to: 228855305 \n. :clock1:\n. Added a few minor comments to the new changes.\n\nIn reply to: 229352074 \n. In CI build. validated internal apps manually and they look good so far.\n. CI build passed.\n. @bdrlamb-ms is added to the review. #Closed\n. :shipit:\n. This is a duplicate of #397 - react native should now support native UWPs without requiring the islandwood bridge.  Have you looked at this blog? \n. Closing this issue as dupe of #397 \n. :shipit:\n. Due to some strangeness i can't explain, this wasn't in the latest release. It should be available in our next release (later this week).\n. This was clearly my mistake, suggesting removal of these files.\n. :shipit:\n. @jeffMeador, is the plan to use this in the other PR after this is merged? \n. @jaredhms is added to the review. #Closed\n. :shipit: \n. @bdrlamb is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. @ashvarma is added to the review. #Closed\n. I got a repro of this.  The issue here is that our test app is calling synchronize after writing the value, so it is getting persisted.  The API doesn't require synchronize to be called, iOS does that automatically periodically.  \nSince we don't have a preferences service running to sync the data periodically, we should add a periodic synchronization somewhere.  you can workaround by calling synchronize manually.\n. Fixed through #576.\n. @adein thanks for the clarification. \n. Will do this in D2D as part of the CG D2d migration effort.\n. @DHowett-MSFT this is probably already addressed in the CGD2D branch?\n. Will validate this with #1417 \n. @ehren thanks for the detailed write up.  If this is something you are blocked on then using the projected APIs (or WRL just like in foundation) may be your best bets.  We do need to think through what is the right way to expose the windows extensions from NSURL*, will look into this discuss with the team on where we can place this in our road map.\n. @jaredhms is added to the review. #Closed\n. in CI build.\n. @jaredhms is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. :shipit:\n. @mnithish is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. We will cover this as part of the CG rewrite using D2D.  Adding additional colorspaces would be a feature work.\n. CI build\n. Closing since this is already merged.\n. This seems like a bug in cairo. This won't be an issue when we move to D2D.\n. closing this will cover this in #1416\n. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. > ```\n\nid userInfo;\n```\n\nI'd like to go in the other direction instead and just use the storage provided by the property declaration. removes a bunch of unnecessary code as well.\n\nIn reply to: 229817516 \n\nRefers to: Frameworks/Foundation/NSNotification.mm:23 in 9291c4e. \n. https://github.com/Microsoft/WinObjC/wiki/FAQ#whats-the-deal-with-all-of-these-stubs has the details about stubs.  The warning says deprecated because we use deprecated() attribute (we needed a reliable attribute) to tag them.\nWe have stubs to enable most apps to compile easily.  The idea here is that the app will be functional for key scenarios with just the stubs.  \nStub doesnt mean we will implement something in the future.  If you need some stubbed method, please do open an issue for what you need.  Alternatively, we would appreciate pull requests as well.  Hope that helps.\n. @jaimerodriguez closing this issue for now, please let us know if you have any other questions on this.\n. :shipit:\n. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. :shipit:\n. This is really a bug in AFHTTPSessionManager.h\nif TARGET_OS_IOS || TARGET_OS_WATCH || TARGET_OS_TV\nimport \nelse\nimport \nendif\nThe first line should also include WINOBJC.  We do have MobileCoreServices.h\n. Closing since this is external.. Yes, if your app builds and runs using the bridge, you should be able to submit it to the store.  In fact, there are apps in store that are built using winobjc.  Please note that the bridge is work in progress, so you may not have all the APIs that you need.  \n. here is a blog post on an app that used the bridge.\n. :shipit:\n. @bbowman is added to the review. #Closed\n. :shipit:\n. :shipit:\n. This is now in develop with #613 \n. :shipit:\n. Unrelated to this change, but this layout causes this page to be unusable on phone.  Can you make the text field left aligned?  #Closed\n. can we just use the defaults instead? #Closed\n. :shipit:\n. :shipit:\n. In CI build.\n. Thanks @shahmeeresmail. \n. :shipit:\n. :clock1:\n. CI build passed.\n. @tcunning will there be a new PR for this?\n. @mnithish is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. :clock1:\n. In CI build.\n. Kicking the can down the road.  When we move CG to D2D, we don't have to rely on Cairo.\n. With our plan to move Core graphics to D2D, we won't be fixing it.  Our goal would be to match reference platform implementation.\n. @jeffMeador is working on the fix.\n. @jaredhms is added to the review. #Closed\n. It is important to have some unit tests for this API.  Granted, it won't behave same on reference platform, but will be helpful to catch regressions if we make changes in the future.\n. Given our plan to move to D2D for coregraphics, we can get D2D to do this instead of hand rolled implementation.  Closing this PR as such.\n. :shipit:\n. @jeffMeador thanks for the quick fix.\n. :shipit:\n. @bbowman is added to the review. #Closed\n. @jofre-ms is added to the review. #Closed\n. @DHowett-MSFT @msft-Jeyaram the git surgery lost the other comments.  The issues are all fixed now.\n\nIn reply to: 231808108 \n. And our implementation is not entirely correct in handling the case where no sub path exists.\n. (test is not a burden, test is our friend :)).\n\nIn reply to: 231887585 \n. :shipit:\n. Not a big fan of private_include, this needs a little bit more offline discussion. #Closed\n. :shipit:\n. @mnithish is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. @Ramu-msft is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. Yes, this was the agreed design.  You should capture this in a .md file under docs\\Foundation and add it to this commit.\n\nIn reply to: 232212067 \n. :shipit:\n. @shahmeeresmail thanks for reporting and fixing this.\n. @shahmeeresmail thanks for reporting and fixing this!\n. @jaredhms is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. > }\nCGDiscardableImageBacking::ReleaseImageData() -> should not ConstructIfNeeded().  If _forward is null, there is nothing to release.. (Not related to your change though).\n\nRefers to: Frameworks/CoreGraphics/CGDiscardableImage.mm:179 in faef665. \n. :clock1:\n. in ci build.\n. @shahmeeresmail the ImageIO unittests (several of them) fail, could you please take a look at the failures?\n. back in CI build.\n. CI build passed. Validated with test apps.  :shipit: \n. Is anything happening with this PR?\n. Thanks @msft-Jeyaram in that case, please close this pull request. \n. https://github.com/Microsoft/WinObjC/blob/d9578b016df6cfc3822ff409904b69544a2a6ec6/Frameworks/CoreText/CTFramesetter.mm#L28 \nThis does not look at layout paragraph styling (line height, etc) specified in the paragraph style.  It may be trivial to support only the three alignments (getting to the natural alignment given our current code would also be challenging).  Our plan with CoreText is to migrate to using DWrite for layout, although paragraph layout is not part of DWrite.\n. @DHowett-MSFT, we only don't support binary property lists created on reference platform, right? I don't think binary compatibility is required in this case. \n. That's the bug.  Fix is part of the PR #658 \n. @mnithish is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. > ```\n\n_components = new float[count * componentCount];\n```\n\nWon't fix for now.\n\nIn reply to: 233101767 \n\nRefers to: Frameworks/CoreGraphics/CGGradient.mm:75 in a0b7360. \n. In CI build.\n. NSFileManager tests should use the newly added _SCOPE (compatible with OSX) \n. Closing this issue.  We will write tests as we add features here.. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @shahmeeresmail this should not get in the way of your PR #641, but please take a look. \n. In CI build.\n. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. There are some cyclic dependencies between the modules, not surprising due to our reverse dependencies. Moving the CGGraphics definitions strangely surfaces this, haven't had time to investigate.\n. Ping @bbowman @mnithish. \n\nIn reply to: 236640850 \n. In CI build.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. According to @shahmeeresmail #636 fixed this already.\n. This change got reverted, will need work anyway, resolving the issue.\n. Can we get this fixed this week?\n. Do we have comparative binary sizes after this change?  Granted, having code in the binary is more important than having smaller binaries with missing code, but would be good to know the disk impact. #Resolved\n. :shipit:\n. :shipit:\n. Not super duper important. Won't fix.\n. :shipit:\n. :shipit:\n. We have been tracking this internally as we finish 'bridging/using' CF in foundation.\n. :fearful: \n. Replaced this with #916 \n. Didn't get to build integration this iteration, will do that in 1609. #914 \n. > ```\n\n[NSTimeZone setAbbreviationDictionary:[NSDictionary dictionary]];\n```\n\nseems reasonable for a negative test case (although unlikely to have 0 entries in abbreviationDictionary).\n\nIn reply to: 236057250 \n\nRefers to: tests/unittests/Foundation/NSTimeZoneTests.m:90 in d9f18be. \n. :shipit:\n. This is not yet ready to be merged, will have to wait until @msft-Jeyaram is back.\n. The performance investigations for 1608 are complete.  We have two follow-ups items, which we will complete in 1609.\n- #912 Split up projections binaries and fix packaging to include only necessary projection modules.\n- #913 Add runtime support for pre-hashed selectors to improve startup performance\n. :shipit:\n. :shipit:\n. @ChangweiZhang please provide the build log for the context of what is happening.  Please see our FAQ for details on how to get the logs.\n. A more detailed description would be good to have (context on what is needed for building this, etc).  Can be updated when the PR is merged.\n. :shipit:\n. Dupe of #683 \n. @msft-Jeyaram is there a new PR for this?\n. Discussed offline with Dustin on this, we will spend a little bit longer to make sure we don't have many more lingering bugs in this codebase.\n. :shipit:\n. :clock1:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Thanks @DHowett-MSFT!\n. @DHowett-MSFT for the sake of completion, we may want to pull this in if we have time in 1704.. :shipit:\n. Fix #770\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Hello, thanks for reporting the issue.  In order to help, could you please provide the build log by following these steps in our FAQ?  Thanks in advance!\n. @LenoreMarlow we don't currently have support for CoreData, which explains why persistent store coordinator and ManagedObjectContext are not available.  \nSQLLite is indeed supported, but CoreData is not.\n. @LenoreMarlow unfortunately there aren't any easy choices to replace core data driven UI application.  Cocotron has an implementation of core data that may work for you.  (you could build it on top of your fork of winobjc).  Coredata is certainly in our sights, but we have had to look at other priorities in the short term that would help graphics intensive apps, so this is not in the immediate future.. closing this issue as we have other issues tracking core data.  Thanks @LenoreMarlow!. This is awesome, thanks!\n. :shipit:\n. In CI build, hopefully last time this is manually updated. :8ball: \n. :shipit:\n. :clock1:\n. This has to be reconciled with the xaml backed solution for most UIKit controls.\n. In the commit message, please use Fix # to automatically close issue on merge.\n. :shipit:\n. @shahmeeresmail both release and debug builds failed..\n016-08-29T18:16:15.0767454Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1538): error C2059: syntax error: 'return' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0767454Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1539): error C2059: syntax error: '}' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0767454Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1539): error C2143: syntax error: missing ';' before '}' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0767454Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1542): error C2143: syntax error: missing ';' before '{' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1542): error C2447: '{': missing function header (old-style formal list?) [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1694): error C2059: syntax error: 'return' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1695): error C2059: syntax error: '}' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1695): error C2143: syntax error: missing ';' before '}' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1702): error C2988: unrecognizable template declaration/definition [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1702): error C2143: syntax error: missing ';' before '<' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1702): error C2182: '_vImageUnpremultiplyPixel': illegal use of type 'void' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1702): error C2433: '_vImageUnpremultiplyPixel': 'inline' not permitted on data declarations [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1702): error C2059: syntax error: '<' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1710): error C2143: syntax error: missing ';' before '{' [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1710): error C2447: '{': missing function header (old-style formal list?) [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1722): error C2065: '_vImageUnpremultiplyData_8888': undeclared identifier [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.0923655Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1730): error C2065: '_vImageUnpremultiplyData_8888': undeclared identifier [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n2016-08-29T18:16:15.1079964Z          ......\\Frameworks\\Accelerate\\vImage.cpp(1738): error C2065: '_vImageUnpremultiplyData_8888': undeclared identifier [D:\\Build\\Agent1_work\\1\\s\\build\\Accelerate\\lib\\AccelerateLib.vcxproj]\n.   FAILED  ] 1 test, listed below:\n[  FAILED  ] Mach.MachTaskInfoThreadTimes\nThis test has been known to fail sometimes (probably needs to be removed).  Overriding it.\n. :shipit:\n. @aballway since you already did something like this for the group container, you may be able to get this quickly.. We'll revisit this in the future if needed. . Our mobilecoreservices implementation is quite limited and has a static map.  Also depends on foundation, so we have a cyclic dependency.\n. @DHowett-MSFT is this covered in #1054? . :shipit:\n. @mnithish is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. This fixes part (but not all) of the issues uncovered in the /wholearchive change.  I'll try this out as well.\n. @MSFTFox we should fix it as part of your OSX compat issues with these tests.\n. :shipit:\n. @shahmeeresmail I have a potential fix, but that breaks in other circumstances.  Will submit a PR and tag you, would you be able to take a look?\n. Also UIImage is constructed directly to hold the backing instead of a CGImage.  If the CGImageRef is then passed to other CG methods, we will create another backing (inside the backing) and be all kinds of broken.  TBD: #848 \n. Dupe of #1070 \n. added this to #662 and closing this one.\n. :shipit:\n. :shipit:\n. :shipit:\n. @bbowman is added to the review. #Closed\n. :shipit:\n. This was primarily to catch pixel format issues. #1220 has unit tests that do this much more effectively, so this is not useful anymore.\n. @shahmeeresmail #Closed\n. This was found in some internal apps we use for validation.  The apps use cocos2d.  The app creates CGBitmapContext with these surface spec, draws into it, and uses the bytes through openGL.  \n\nIn reply to: 238941568 \n. > ```\n\n                fmt = _ColorARGB;\n\n```\n\nNo.  validating this function is of no real use.  What we need really are true e2e validation for different apis that go through this.  #859 should really track it.\n\nIn reply to: 238881925 \n\nRefers to: Frameworks/include/CGSurfaceInfoInternal.h:80 in a64e395. \n. Hi @philnach In order to help, could you please provide the build log by following these steps in our FAQ?\n. closing this issue per @antoine-haas's comment above. \n. So annoying.\n. If we had tested for mutability, we would have tested for copy being immutable.  Since there is code out there that relies on this copy being mutable, lets go ahead and make the compat argument.\n. Yes.\n\nIn reply to: 238968813 \n. :shipit:\n. :clock1:\n. :shipit:\n. This is merely to not be flagged by our analysis tools as a mismatch.  week never worked on our platform, there is no expectation that it should work at this point.  Given that it is deprecated we could consider it if someone really needs it.\n\nIn reply to: 239017245 \n. This has been completed by @aballway through #934 \n. Not reverting the change, we will attempt to fix the regressions and push this next week.\n. Not merging this week.\n. @ms-jihua is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. > TEST(CoreGraphics, CTLineGetOffsetForStringIndex) {\nWe should be able to add additional unit tests that verify the new line breaking changes you made. #Resolved\n\nRefers to: tests/unittests/CoreText/CTLineTests.mm:64 in 15e7c14. \n. :shipit:\n. :shipit:\n. Its quite likely that the NSConstantString implementation we have  does not have a trailing null, which probably is the reason this bombs.  We should fix this by short circuiting the function for empty path components (simply return a copy).\n. Postponed for the future.\n. postponed for the future.\n. potentially future work.\n. back to the future.\n. :shipit: yes, you can bypass CI for this change.\n. @DHowett-MSFT is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @MSFTFox, this looks like bug introduced by 0bc4993f4d52f9fa53c0fb0ea711b4a388dab4f3, please take a look.\n. Can you please add your design doc to the PR? #Closed\n. :shipit:\n. @GitMarJansen yes, it should build.  Could you please provide the build log by following these steps in our FAQ?\n. This results in a crash in internal test app, we should add additional tests to cover this.\n. > struct DisparateAggregateDF {\nWould be good to have some disparate aggregates with more than just one double and float.  #Resolved\n\nRefers to: tests/unittests/Foundation/NSInvocationTests.mm:84 in 3e6cf87. \n. :shipit:\n. Didn't review the asm code, hopefully @bviglietta can. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. Likely yes, strangely it didnt break during build.\n\nIn reply to: 242160644 \n\nRefers to: include/MapKit/MKMapSnapshotter.h:21 in 58c28c5. \n. :shipit:\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nNit: update to new copyright banner. #Resolved\n\nRefers to: tests/unittests/Foundation/NSFileHandleTests.mm:3 in de40cc4. \n. :shipit:\n. This work was completed through #1699 . #922 explicitly covers CTFontCreatePathForGlyph.\n. This is not a blocker as this is not used by any test collateral at this point.\n. :shipit:\n. @shahmeeresmail this is all yours.\n. There are no good solutions that would work off the shelf to support this.  Instead of having double layer indirection, we will instead move CG to use D2D directly, initially by using bitmap rendering.  This has several benefits:\n1. Allows us to use HW rendering through dxgi surfaces in the future.  This would provide immense performance boost.\n2. Reuse more of windows technologies, reducing app footprint.\n3. Printing through CGContext could use D2D in the future, providing high res output without the need to create huge bitmaps and perform manual scaling of content.\n4. Works well with DWrite (getting geometry of glyphs for example).\n@DHowett-MSFT is writing up the architecture/design as part of #931. \n. Should be a refinement of #732.\n. :shipit:\n. :shipit:\n. We will do this if necessary at a later point.\n. :shipit:\n. >  @Status Stub\nInteroperable #Resolved\n\nRefers to: Frameworks/CoreText/CTFrame.mm:36 in 6d5a66b. \n. :shipit:\n. :shipit:\n. usage of dispatch_queue_t.  I briefly thought about breaking these dependencies down, but that is a project we can fight another day (given that the build has been failing due to the api analyzer break for a while now).\n\nIn reply to: 243944720 \n. :shipit:\n. :shipit:\n. I approve this message :shipit: \n. Yes. We didnt have the tests, which I have now added.\n\nIn reply to: 244250072 \n. :shipit: \n. @bbowman, yes. We got a proper workaround from the VS folks.  On an unrelated note, are you running out of things to do on vacation? :smile:\n. This is a duplicate of #729\n. Apologies for the delay here.  I tried this out on a simple unit test, and i don't see any build breaks.  could you share all the includes you have in the file you are compiling?\n. @saurik any chance you could share more details on this (what file type - mm/c) and header include order, that would help greatly.\n. @saurik if you can provide a way for me to repro this, i'll be happy to look at this again.  Closing the issue for now.\n. :shipit:\n. @aballway since you are looking for things to do...\n. :shipit:\n. :shipit:\n. :shipit:\n. Deceptive commentary in the docs there.  \"GLsizei\u200b 32 A non-negative binary integer, for sizes.\" vs \"GLuint64\u200b 64 Unsigned binary integer\".  Implies this is actually an integer.\n\nIn reply to: 245742064 \n. :shipit:\n. :shipit:\n. @jaredhms please take a look.\n. @jaredhms this one is yours as well.\n. Finally!\n. I am not power shell expert, but having used this for a while, this is good to go IMO.\n\nIn reply to: 245777362 \n. :shipit:\n. > static IWLazyClassLookup _LazyUIFont(\"UIFont\");\nI was looking forward to this going away, will that happen with #730? #Resolved\n\nRefers to: Frameworks/CoreText/CTFont.mm:49 in 4368641. \n. :shipit:\n. This will be covered as part of #987 \n. @ms-jihua is added to the review. #Closed\n. This was fixed with #994 \n. :shipit:\n. Closing this issue as this has no actionable information.\n. @DavidBurela we no longer define TARGET_OS_IOS.  What you want to do is change the code to:\nif TARGET_OS_IPHONE || WINOBJC\nresult = AudioFileOpenURL(url, kAudioFileReadPermission, 0, &audioFileID);\nelse\nresult = AudioFileOpenURL(url, fsRdPerm, 0, &audioFileID);\nendif\nit should work fine.  This is unfortunately by design as a result of our move to using Apple OSS core foundation.\n. @DavidBurela since this is by design as I mentioned above, I am closing this issue, please reopen if you disagree.\n. :shipit:\n. @jaredhms @tadam-msft #Closed\n. @jaredhms is added to the review. #Closed\n. @tadam-msft is added to the review. #Closed\n. merged to ct-dw.\n. > ```\n\n//  These can be done using the DWrite IDWriteTextFormat range property methods.\n```\n\nUpdate TODO to correctly reflect what is remaining? #Resolved\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:287 in 97feed1. \n. :shipit:\n. This causes clipping issue with internal test app.\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. I can provide the details of the test app offline.\n. :clock1:\n. Never be interoperable in the sense of providing exact values, or functioning 'similarly'?  It should certainly do the later.\n\nIn reply to: 249301240 \n. Understood.  The pull request should simply say \"implement CTLineGetTypographicBounds\".  +1 for idemoperable.\n\nIn reply to: 249303752 \n. @cre8ivepark take a look at our work in progress in the CT-DW branch.  We are moving all of core text over to using DWrite and in the process, @ms-jihua has changed the UIFont implementation to use DWrite.  This should very likely fix your issue.  We expect to merge these changes back to develop in October.\nhttps://github.com/Microsoft/WinObjC/blob/CT-DW/Frameworks/UIKit/UIFont.mm\nhttps://github.com/Microsoft/WinObjC/blob/CT-DW/Frameworks/CoreText/DWriteWrapper.mm\nPlease use #925 to track the progress of this work.\n. @cre8ivepark Closing this as duplicate of #925. Please let me know if that still doesn't work.\n. @cre8ivepark this will be available in October release according to our current plan.  If you like, you can enlist in the CT-DW branch and get an early preview of this.\n. git checkout -b CT-dw origin/CT-dw should do it, if you already have it cloned from github develop.\n. Fixed the build breaks in test repos.\n. > - (instancetype)initWithCoder:(NSCoder*)decoder {\nShould be easy to implement? #Resolved\n\nRefers to: Frameworks/Foundation/NSDecimalNumberHandler.mm:84 in 21d4c13. \n. > - (NSDecimalNumber*)exceptionDuringOperation:(SEL)method\nis this just a forwarding method? #Resolved\n\nRefers to: Frameworks/Foundation/NSDecimalNumberHandler.mm:115 in 21d4c13. \n. :shipit:\n. :shipit:\n. @MSFTFox is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. No, I don't see anything wrong there.  In fact, this method is not used elsewhere in woccatalog sample.  Do you mean something different?\n\nIn reply to: 249639757 \n. Synced up offline, this seems like a bug in CAShapeLayer.\n\nIn reply to: 249642560 \n. Also _UIGroupEdgeView\n\nIn reply to: 249644435 \n. Thanks for opening the issue.  At this point, this is not high on our priority list.  Is there a specific subset of this framework your app needs? \n. :shipit:\n. :shipit:\n. :shipit:\n. We do support NULL key.  The order of the keys is not the same in the serialized JSON as it is in the reference platform.  \n\nIn reply to: 250037368 \n. :shipit:\n. :shipit:\n. The delegate is queued, but the delete operation is not.\n. Looking at the sample here, it seems to be there.  Also, this only seems to be an issue on phone.\n. :shipit:\n. Is there test collateral associated with this change?\n. This should be part of NSProgress tests.  Part of our long term plan to improve test code coverage is to not check-in code without tests.  I am not worried about duplicating test code.\n\nIn reply to: 250880931 \n. :shipit:. This is addressed with #1171 \n. :shipit:\n. :shipit:\n. Moving this to future as there is no immediate need for this.  . :shipit:\n. Use #1052 to cover this.\n. merged into ct-dw.\n. Completed with #1138 \n. :shipit: \n. This document captures how file types can be registered per app.  We need to support OnFileActivated() and and produce a new delegate that apps can use.\n. #1100 addressed this.\n. static libraries built for iOS/Mac aren't usable on windows, so you will have to recompile the code for the static library using winobjc.  This is of course assuming that you have the source code for that library.  What library are you using?\n. Closing this issue as the original question is answered.. @DHowett-MSFT yes, this is a dupe of #1235 \n. @jaredhms is added to the review. #Closed\n. @tadam-msft is added to the review. #Closed\n. :shipit:\n. :shipit:\n. Why? There is the sqllite uwp library that developers should install and use. It allows them to use the version they want without waiting for WINOBJC to bundle it.\n. :clock1:\n. Closing this pull request based on internal discussions.  . @DHowett-MSFT Great suggestion.  \n. @aballway - this is for when you run out of things to do, or 1611, whichever comes first.\n. Resolving it as duplicate of #925. \n. :shipit:\n. :shipit:\n. may want to look at this with the work #2687 . You win the \ud83c\udfc6 for this.\n. :shipit:\n. :shipit:\n. Thanks @RG-J \n. :shipit:\n. @mnithish You can by-pass CI build for doc only change.\n. :shipit:\n. Coordinate system is flipped.\n. Probably because of #1135 \n. @v-brflem on TARGET_IPHONE_SIMULATOR - it was indeed a bug due to a hack from the past.  It has since been fixed by 90200b997fc131ce7450b39b2bd2cd3e512797e0  and should be available in next release.\n. @v-brflem You can try our develop branch, but it is not fully tested.  That said, only the TARGET_IPHONE_SIMULATOR issue is fixed.  We still have to look into the issue you reported with SecItemCopyMatching.\n. @DHowett-MSFT is added to the review. #Closed\n. @v-brflem Do you have a call stack?\n. @andrejo-msft unfortunately, i don't remember any context around this issue.  We should close this out.. @aballway is this a regression?\n. > ```\n\nBYTE* imageData = static_cast<BYTE*>(LockImageData());\n\n```\n\nNot: Not your code, but this LockImageData() and matching ReleaseImageData can go away.  CGIWICBitmap does the locking when necessary. #ByDesign\n\nRefers to: Frameworks/CoreGraphics/CGBitmapImage.mm:452 in a481d28. \n. :shipit:\n. @jaredhms is added to the review. #Closed\n. @shahmeeresmail is added to the review. #Closed\n. Bypassing CI build for doc change.\n. @jaredhms is added to the review. #Closed\n. You could try git lfs fetch and if that doesnt work, try git lfs fetch --all as a final measure.\n. Please let me know if you are still running into this.  git push --no-verify has worked for some as well (thanks @DHowett-MSFT for the tip).\n. :shipit:\n. :shipit:\n. @edvv the libobjc2 symbols should be picked up by visual studio if you selected \"Microsoft Symbol Servers\" in the debug symbols option.  When you say you have figured it out, does it mean you have fixed the crash, or do you know what scenario caused the crash?  Thanks in advance!\n. @jaredhms is added to the review. #Closed\n. The feature should work, we need tests for this.\n. @aballway you already have this covered in your pull request?. :shipit:\n. Should objc2winmd.exe be in lfs? #Closed\n. My bad, codeflow shows it as a binary, for some reason, i expected to see the lfs changes, that only is seen in gitk.  \n\nIn reply to: 253648923 \n. Do we know why this is causing #1144?\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\n:P\n\nIn reply to: 253912033 \n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:3 in 7850894. \n. :shipit:\n. :shipit:\n. :shipit:\n. @jcamachov could you please provide the build log by following these steps in our FAQ?  Thanks in advance!\n. Did this help the CI build? It still appears broken.\n. By pass CI build for doc-only change.\n. @msft-Jeyaram had made some progress on this at one point.  is this required for #1098 or #1099?\n. :shipit:\n. @edvv, we will have this in the next release, which would be in early November. \n. @aballway is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. More of an informative PR, plan to merge to CT-DW when CI build passes.\n. @DHowett-MSFT is added to the review. #Closed\n. @MSFTFox is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. technically i am merging CT-DW onto CGD2D.\n. @jaredhms is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @triplef thanks for trying this out early and providing feedback. \n. #1450 seems to have completed this already?. :shipit:\n. We are not sure what this is, so closing this for now.\n. Depends on #1266 \n. @DHowett-MSFT Is this targeted for the CGD2D work or for #1171? \n. @jaredhms is added to the review. #Closed\n. :shipit:\n. :shipit:\n. Reviewed 6 of 32 files at r1, 12 of 31 files at r2, 2 of 4 files at r3, 7 of 10 files at r4.\nReview status: 19 of 28 files reviewed at latest revision, 41 unresolved discussions.\n\nbuild/CoreGraphics/dll/CoreGraphics.def, line 345 at r6 (raw file):\n\n```\n    ; CGImage private exports\n    _CGImageLoadImageWithWICDecoder;\n\n```\n\nnit: no need for trailing ; here.\n\nbuild/Tests/UnitTests/CoreGraphics/CoreGraphics.UnitTests.vcxproj, line 246 at r3 (raw file):\n\nResolved\nI don't see the change, is it pending?\n\n\nFrameworks/CoreGraphics/CGColorSpace.mm, line 118 at r6 (raw file):\n\n``` XML\nCGColorSpaceRef _CGColorSpaceCreate(CGColorSpaceModel model) {\n```\n\nnit: now that you have this, the other methods could use this.\n\nFrameworks/CoreGraphics/CGImage.mm, line 84 at r6 (raw file):\n\nLooking at the documentation, I don't think this method is expected to see NULL colorspace.  We could just remove all of this code if we can confirm the ref plat implementation.\n\n\nFrameworks/CoreGraphics/CGImage.mm, line 463 at r6 (raw file):\n\n``` XML\n    // TODO #1124: make this more verbose, map?\nif (colorSpaceModel == kCGColorSpaceModelRGB) {\n\n```\n\nYou also need to respect the endian-ness of the pixel format.  \n\nFrameworks/CoreGraphics/CGImage.mm, line 466 at r6 (raw file):\n\nXML\n        switch (alphaInfo) {\n            case kCGImageAlphaFirst:\n            case kCGImageAlphaLast:\n\nThese can't be the same pixel formats.  For example, with little endian byte order, Alpha first is ARGB and alpha last is RGBA.  Please open an issue to fix this with color space work.\n\nFrameworks/include/CGImageInternal.h, line 124 at r6 (raw file):\n\nobjc\n    /*Alpha First,Last*/\n    { GUID_WICPixelFormat32bppRGBA, { kCGColorSpaceModelRGB, (kCGImageAlphaLast | kCGBitmapByteOrderDefault), 8, 32 } },\n    { GUID_WICPixelFormat32bppBGRA, { kCGColorSpaceModelRGB, (kCGImageAlphaLast | kCGBitmapByteOrderDefault), 8, 32 } },\n\nRGBA and BGRA are not the same things.  One of either the byte order or the alpha will be different.  (In this case, I am using ARGB and BGRA interchangeably).\n\nComments from Reviewable\n Sent from Reviewable.io \n#Resolved\n. :shipit:\n. :shipit:\n. :shipit:\n. Pull request has been submitted to the samples repo.\n. :shipit:\n. @spalda2 yes, the bridge is work in progress, and not all methods/classes are fully implemented.  The idea of the stubs though is to let you build and run your app.  In a lot of cases the stubs will work just fine.  If there are specific items that you need you could open issues for them.  Please see our wiki for more details on the stub macros.\nhttps://github.com/Microsoft/WinObjC/wiki/FAQ#whats-the-deal-with-all-of-these-stubs\n. :shipit:\n. This is the same issue as #598.  Unfortunately, COM is not initialized when setting up statics. \n. @spalda2 this would require you to workaround in your code.\n. We will revisit if this is needed by someone.\n. Since this is internal only, it is not worth spending time on this right now. \n. We have seen this before, @DHowett-MSFT might have some ideas.\n. @bbowman why can't we add the explicit dependencies on the \"dll\" projects which the functional tests use?\n. :shipit:\n. @ms-jihua is added to the review. #Closed\n. @aballway is added to the review. #Closed\n. In the CT-DW branch, we support display name if it is specified as the kCTFontName attribute.  Clearly there are some gaps here, we need to address that.\n. @edvv thanks for reporting the issue.  Could you share what method you called in Logging.dll that caused the crash?\n. Reviewed 114 of 114 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\nComments from Reviewable\n Sent from Reviewable.io \n. @pokeb thanks for reporting the issue.  Yes, it is incomplete feature as far as sharegroups go. \n. Bypassing CI build because master is essentially same as develop.\n. :shipit:\n. Duplicate of #1227 \n. @bbowman fixed this with #1289 \n. @ms-jihua Is this covered by #1386?\n. :shipit:\n. :shipit:\n. Fixed with #1254 \n. :shipit:\n. This is by design.  vImageCreateCGImageFromBuffer() allocates the data used by the buffer, using malloc.  The caller is expected to free it using free().  Unfortunately, with retail build of the SDK and debug build of woccatalog, this will result in heap mismatch causing the assert.  This is not a new issue.\n. @bviglietta correctly pointed out that vimage library should be using IwMalloc/IwFree instead and everything will auto-magically work. . This is simply book keeping work, We agreed to close this and rely on tests to merge back to develop.\n. Thanks @msft-Jeyaram and @DHowett-MSFT \n. Please use #1275 to address this.\n. all planned 1611 work complete.\n. Closing the outer issue, we still have the tasks to track this work.. This is obsolete now, we have separate perf work, so closing this out.. Fixed with #1529 . This should work with CGD2D?. @DHowett-MSFT Yes, we can! Thanks for confirming this!. @bbowman this looks different from the rt_dynamic_cast issue we saw elsewhere?\n. This was fixed with #1310 \n. @asimonov-msft when is this going to be merged, are we waiting for something?\n. @jaredhms is added to the review. #Closed\n. @DHowett-MSFT this should be easy to handle as part of your core graphics work.\n. @aballway is this ready to merge?\n. Also other methods that use CF.  The compat tests should catch these issues, assuming the tests exist.\n. @zakirt-msft we don't have any extensions support except glTexStorage2DEXT which just happens to work with Angle.  it is simple enough add a pass through API along the lines of glTexStorage2DEXT which will unblock you.  If this is blocking you, we would appreciate a pull request.\n. @triplef on Windows, the resource manager will kick in under low memory conditions.  This may not match 1:1 with what Mac or iOS does (nor would it make sense to do that).  What we should really be doing in NSCache (among other places in the code where we can discard loaded pages) is to handle this notification and evict some entries.\nA workaround for now would be for the app to implement applicationDidReceiveMemoryWarning in the app delegate and set the NSCache limits to some low value and set it right back to 0.  Not ideal, but should unblock you in the interim.\n. please don't make me approve my own changes \ud83d\ude08 \n. We have normalized the design on this, so we can close this now.\n. @DarkDirectX winobjc bridge is only for windows 10+ UWPs. \n. @edvv This is great, thanks for sharing! Are you planning to publish the app in Windows store?\n. Closing this issue out, thanks again for all the feedback.\n. @edvv thanks for reporting the issue. what exactly is messed up? Wrong color or color not set?\n. @eddv this is typically a symptom of wrong color space transformation.  We noticed something similar with  #1216 and also with #1295.  Are you extracting the image from the uicontext and drawing it manually, or is this a simple case of drawing directly to the display device?\n. @edvv, we have this code in WOCCatalog (TextDisplayViewController), which works correctly.  What are you performing the custom drawing into?  Are you using a middleware like cocos2d? Thanks again for helping investigate it, unfortunately, I am unable to repro the issue. \n. @edvv thanks for taking time to provide the simple sample.  Much appreciated.\n. This is a good suggestion - this doesn't fit into our current plans - which is to provide a bridge to windows for iOS developers porting their existing code - so closing this for now.  . @bviglietta is this still needed?. Moving this to backlog to focus on performance in 1701.. :shipit:\n. This is likely not covered by #1177, adding this to the backlog.\n. CGContextSetShouldAntialias(), etc is different from UIImage resampling, it would be best to break these asks.  We can use this to cover anti-alias.. also URLByAppendingPathComponent. \n. @DHowett-MSFT I have a repro of this on x86 as well.  . :shipit:\n. :shipit:\n. One demo scenario is the non-standard edit control in xamlcatalog.\n. There was one thing that stood out during perf analysis - we spent a lot of time in DWriteWrapper.mm _DWriteGetFontPropertiesFromName(), specifically in __CFLocaleCopyCurrent.  While this is a result of #1490, the font properties don't need to be localized, and there is no need for any usage of cflocale in this file.  CFLocaleCopyCurrent() can hence go away and nullptr can be used where locale is needed.\n\n. Per offline discussion with Hank, this requires more work.  Moving to 1701.. @DHowett-MSFT thanks!. This is completed.. :clock1:\n. :shipit:\n. Still have some open issues here that need to be sorted out.  May not be required for merge back to develop.. Not in plan for the near future as this doesn't seem to be widely used.  . superceded by #1699?. @GreatKeeper thanks a bunch.  Closing this PR since @bviglietta merged this through #1699. . Closing since #1540 is merged.. How are you testing any of this works?\n. > #ifndef __WOCSTDLIB_COMINCLUDES\n\nI dont understand why these includes are now under the winobjc.build folder.  \n\nRefers to: WinObjC.Build/include/WOCStdLib/COMIncludes.h:17 in 87d9c61. \n. :shipit:\n. :shipit:. Closing task, as the PR has been merged.  . fixed with #1738.. Fixed with #1528 . @msft-Jeyaram since you already got to this... (also, thanks :)).. Fixed with #1555 . @jboich What is the error you are seeing in the output window?  We regressed the woccatalog sample in the previous release, but it is fixed in #1321. You should call \n[locationManager requestWhenInUseAuthorization];\nbefore making other location manager calls.  The first time the app runs, the user will get a dialog where he needs to \"Allow\".  \n. thanks @jboich.\nThe issue here is that in CLLocationManager, we are looking for an older (deprecated) delegate instead of didUpdateLocations.  We are using the correct delegate for the single location request.  \nInterestingly, woccatalog does not have the old delegate either, so the continuous updates probably never worked.. @ali1997 please provide more details on what issue you are running into.. closing the issue as there is not enough information.. @jboich thanks for the detailed report.  The root of the problem is that the package ids are not necessarily uuids in windows - that is not a bug, it is a feature.  The issue here is that indentifierForVendor assumed that this will be guid, and that is incorrect.  The right thing to do on winobjc would be to have an extension api that returns the id for vendor as a string.\n. Its usually not a good idea to measure perf on debug build.  Does this repro on retail?. @andrejo-msft I compared to last release of this.  When you change the slider, the entire image has to be processed.  on ARM, we don't use any ARM optimization to speed this up (of x86, we have the optimized code).  So this is performing as expected and is not a regression.  I'll close this issue as such.. This has to move to 1702 due to dependency on removing Cairo first.. @DHowett-MSFT, the deprecated delegate is the one that gets called if the position did changed.  The delegate that is outside the if is the new one and is always called when the location device says something changed (even if it didn't change). . This was handled with #1699 . This work is merged to the packaging branch.  https://github.com/Microsoft/WinObjC/tree/packaging . Merged to packaging branch.. Merged to packaging branch.. Updated only one sample (woccatalog).  Others will need more work.. :face_palm: apologies for the confusion.\n\nIn reply to: 264287896 . This is a duplicate of #924.. @edvv could you please explain what text draw API you are seeing regression in? What formatting you are using and the contents? . @eddv, thanks for reporting this.  We had seen the regression internally as well. We will use #1374 for tracking perf issues.  We will likely have to address these over a couple of iterations.  For example, #1490 is also hit quite a bit in this code path.. #1374 won't fix all issues afterall, so we will keep this active for now.. Issue #1620 will improve the performance.  We will re-evaluate perf after that work and iterate.  . closing per comment from @aballway . @bbowman is this getting any love with your packaging changes?. Closing since this appears to be resolved.. @msft-Jeyaram since we are implementing CGGradient now, why not do it right?  why separate this out?. Synced up offline with @msft-Jeyaram, don't want to block the implementation of gradient. . @edvv we will evaluate this independent of #1541, which appears to be code refactor/cleanup work.  . @edvv, there is very little documentation available on shading and its usage.  Apple's own docs on CGContextDrawShading recommends CGGradient instead.  Given this, we are not planning on doing it at this point.  If usage of CGGradient doesn't work for you, let us know what your scenario is.\n. @edvv, thanks!  Yes, the documentation indeed says this is not \"prefered\".  \nFrom a feature standpoint, shading and function support are not easy to support (if at all).  . #1557, this test wont pass fit and finish issues.  . #1577 . Thanks @DHowett-MSFT . Per #1577. Discussed a couple of ideas with @DHowett-MSFT, who will look at this. . Found some internal crash dump that shows the HR to be: \nD2DERR_NO_HARDWARE_DEVICE 0x8899000B.. @triplef very likely need a fix in the SDK, although i still don't have the root cause on why this would happen.  . @triplef, yes, it would still help to get the full dump to recover what we can from the D2D state.   . This doesn't repro anymore with the CGD2D merge.. Closing per #1577. @bebauer-msft is this a regression?. Closing since this is fixed in develop.. @nicholasgerard-msft do you have any regression info?. We broke this once before.  See #1026.  At this point, at least some apps worked.. Fixed with #1640. . @bbowman is this related to 2a0de15ff2272153a10c6c903305e29df6c0ee27?. This should happen with any page, there is nothing specific to coremotion page w.r.t navigation.. Indeed tracked by #25.. We have seen this issue intermittently, building (not rebuilding) should fix this.. This is a dupe of #236. I just updated #236 with a workaround.  Hope that helps. . There are two versions of this app.  One version is broken.  This was regressed in our 11/30 build.. > #endif\nOr include the new definition before the ending #ifdef to be consistent.\n\nIn reply to: 269369006 \n\nRefers to: include/UIKit/UIGraphics.h:40 in c3bbc8f. . @appledevice24 you could change that line to include .. Note, this is also an issue in NSCFArray addObject, insertObject, (possibly also equivalent methods in NSCFAttributedString).  Our assumption is that CF will handle null values.  The api contract is that foundation APIs have to throw in these circumstances.  Could we fix all these instances in one shot (see also #1435). @bryanbridges it is not clear when you get this error, or what you were trying to do.  Please provide more details.. Closing the issue as this doesn't seem to be related to the bridge.  @bryanbridges if you have additional information, please do re-open, thanks!. Please see https://github.com/Microsoft/WinObjC/wiki/FAQ#unsupported16BitApplicationAndErrorMSB3073Anchor.. Please see the FAQ on this, this is likely what is causing your other issues as well: https://github.com/Microsoft/WinObjC/wiki/FAQ#unsupported16BitApplicationAndErrorMSB3073Anchor . @jboich Thanks for reporting the issue.  Looking at the trace, this call stack doesnt make a lot of sense.  Do you have any information on the kind of devices this is happening in?  Since this is happening in app launch time, i want to rule out launch timeout.\nIt would also be great if you can confirm the version of the bridge you are using.. Thanks for the details. Does the version of your app in the store use sources from develop branch, or is this a beta version? In general, you want to use the build from master branch (official release) as It is more stable.\nYou could provide the change that you synced to from develop branch to produce the build.. @bbowman, while we dig for other cabs, looks like CPathMapper() has an invalid mapped path?. @jboich thanks for the repro and investigation.  I see that you also have a proposed fix for this, would you please submit a pull request for this?. This is fixed through #1668 . We will revisit other perf bottlenecks when #1620 is completed.  This may be entirely gated now on #1490.. :shipit:. :shipit:. :shipit:. It would be a good idea to test islandwoodnews with this change.. Fixed with #1729. >     return ret;\nWe don't (yet) have a status unsupported.  At the very least, this should be status Gap.\n\nIn reply to: 271357323 \n\nRefers to: Frameworks/UIKit/UIWebView.mm:250 in 6c9c08e. . The original change also caused #1571, and the revert has fixed that as well.. Got me good :)\n\nIn reply to: 271388626 . In general, yes.\nPlease be sure to look at the [breaking change] (https://github.com/Microsoft/WinObjC/issues?q=is%3Aissue+%22BREAKING+CHANGE%22+is%3Aclosed) announcements first to see if there are any that will impact you. \nRe-run vs-importer and port over any changes you made after running vsimporter last time.\nPlease open issues if you run into anything.\n. samples/GLKitComplex/GLKitComplex/Data/lobbyxneg.JPG, etc, what exactly changed and why? #Resolved. :clock1:. :shipit:. :clock1:. Accidentally re-started the ci build.  They passed first time, so overriding. . No.  Quite likely resolved by new projections drop with RS1 SDK?  \n\nIn reply to: 271708686 . I'll drop that fragment when i merge.\n\nIn reply to: 271709239 . :shipit:. :shipit:. Reactivating until fix is actually merged.. This seems hardware related.  . :clock1:. There are currently no UWP apis that allow us to control/read the stack size, so this functionality won't work on windows.. @aballway other tests have likely fallen behind as well. . > <?xml version=\"1.0\" encoding=\"utf-8\"?>\nGiven that we will switch over to VS2017 very soon(ish), does it make sense to simply delete the OBJC highlighting extension?\n\nRefers to: tools/ObjectiveC/app.config:1 in a17b5d6. . Yes, the call stack here indicates _UIPageViewScrollView _populatePagesWithOffset:interactive: is using an empty array.  Moving this over to UX.. I don't think so. The call stacks were different. . Will need a new (different details?) task for this.. It is not clear that getNetworkConnectivityLevel would fail when handling a network status change event, which is what is happening here.  Looking into this, and yes, if the failure can happen, then this could be a handled exception.. @triplef, thanks for reporting this.  Looking at the call stack, this indeed appears to be a dupe of #1613.  This would happen when creating preferences store where the user name is non-english and has accent or special characters.. fixed with #1794 . rescheduled release build.. #352 tracks the compiler bug.  This should be used to change exception handler to use @catch (...) in the framework code until #352 is fixed.. This would be perf issue if the app uses setNeedsDisplay:inRect extensively to update portions of the scene.. This should immediately and obviously break text layout in UITextView and UITabBarButton?. We are not there yet to do this, will open new issues for 1703.. Looks like the texture is failing to load because CGImageCreateWithPNGDataProvider is returning nil. Likely d62e5e7967d97b775a2de76efbc91c4d1bd905fc. @DHowett-MSFT, likely yes, thanks.  looks like the xcodeproject is incomplete.. This seems to have always been the case.  The texture is not resized for phone in portrait mode.. Failures are tracked by #1843 and unrelated to this change.  overriding it.. This has since been fixed by @pradipd . @aballway This is a result of #1607.      \n[self _registerDownloadTask:newTask withCompletionHandler:completionHandler]; \nis called in multiple places in NSURLSession, but if resumeData is nil, we insert a nil object into the array and blow up.\n . Not clear if reference platform allows this.. Checked reference platform, this is indeed expected to crash.  We were previously passing nil value for resumeData and expecting the session to return a nil.. @DHowett-MSFT, this is the perf issue you were telling me about today. . Closing this issue as this seems sporadic and specific to the app.  . This seems app specific, so closing this for now.  . Very timely @DHowett-MSFT.  Take a look at #1937 that @pradipd just opened.  . Back in CI build.. @jboich thanks for reporting the issue with NSUserDefaults. . The right place to fix this would be at Ebr api level.  Rest of the code uses char assuming UTF-8 encoded strings as ASCII strings. It would be straightforward to change CPathMapper to use wchar_t and enforce that conversion in the Ebr apis to UTF-16.  . @jboich, yes i saw that as well.  The issue appears to be silent failure when trying to create directories for which you don't have permissions (if the UTF8 encoded string is treated as Ascii, the user name \"appears\" different.  With #1891, this should be resolved. . :shipit:. @jaredhms @yiyang-msft - this may not fix everything, but this should at the very least fix one crash we are seeing reliably - #1865 .  Want to merge this? . :shipit:. https://msdn.microsoft.com/library/windows/desktop/aa365247.aspx#maxpath - this is new in the anniversary update (1607), we do need to support 1512 update for the immediate future.  Also, the ascii version of the apis such as mkdir won't support > MAX_PATH.  As such, all the Ebr apis use ascii versions of c runtime file apis, so all bets are off.. @eddv a small correction - we did convert the path apis to use the _w version.  If you set the manifest correctly you should have support for long path, but i haven't actually verified everything would work.  This work is to avoid the unnecessary conversions as well as to ensure that long paths indeed works. . thank you @ehren!. I reset the approval status.  I changed instances where we were using stringWithCString without encoding for file access.  All of these were potential points of failure, so i replaced them with stringWithUTF8String.  . We would be better off fixing this while this is all fresh in our minds.  . There are a number of tests in this that are probably redundant.  For example, what value does having drawStencilStar.red.241.png add over drawStencilStar.purple.png? #Resolved. @pradipd what is broken because of this?  CF does a lot of questionable things in DllMain such as registering the bundle, i am trying to understand what this broke now.  . @triplef This is a crash in the NVidia display driver.  We can discuss the next steps here offline.  . @venkatkongara can you clarify your scenario?  Why are you using objective-c from c++ source file?  Do you mean objective c++?  Also a small repro case will help.\n. could you address this along with the other OSX compat tests?. @ms-jihua load balancing this back to you :). . @Romascu you can use the source code for your iOS app and build it as a windows store app for both desktop and windows phone devices.  Your mileage may vary depending on which frameworks you use.  Please be sure to check-out our Wiki.. @Romascu, no we do not have bridge support for tvOS or watchOS.. Given that this is not widely reported, we will close this issue for now.  Lets re-activate if this becomes a blocker in the future.. path mapper doesnt (and never did) use application root path anywhere.  This is probably something else.. @jboich, I just tried this code from a test app (added the line to foundation test app) and got the correct folder name.  The writeable folder path is set during app initialization, and if it is set correctly.  \n. @jboich did you perhaps sync to 8bbd30f739343b5afa73e63a33583cfda10eaf4d?  This change did regress the behavior, but it has since been fixed.  You may want to sync to HEAD from master (or at least sync up to   682ac5207f63ed96641e689ec5f6ab428dd4ac35. . Closing this issue out as this was an intermittent regression we had in develop that has since been fixed.  please re-open if this happens after you sync up to 682ac5207f63ed96641e689ec5f6ab428dd4ac35.. Would be a good opportunity to fix issues 1 and 2.  We can change the linear scan to some kind of map if it really turns out to be a performance issue.. Thanks @DHowett-MSFT, @jboich.  I will keep this issue active to at least change this to a caveat.  . Closing this issue as we are not seeing this after fix for #1924 . @triplef confirmed that this doesn't repro after switch to D2D.. @edvv, the main thread tasks are performed in main thread thorough the dispatcher.  I don't see an actual issue here, are you getting the callbacks on the wrong thread?. @venkatkongara, this is known issue, we didn't implement post/put.   . Duplicate of #941 . Given #2027, are we sure nothing really regressed here?  . The recommendation in the issue #1932 is to use ComputeGlyphOrigins but we decided to roll out our own implementation instead? . ComputeGlyphOrigins is not available on windows < anniversary update, so we can't use it here.  Will wait for #2027 . Duplicate of #1281 . the code above defines an enum named uint32_t.  Did you mean to do:\nenum : unit32_t { ... } ?\nThat should work..\n. This is hard to say. The bridge only has one definition of this value. so this is likely coming from elsewhere.  Can you follow the instructions here to enable verbose build output and compile only the file above (ctrl + f7)?  That should give you the include paths to begin with.  . @DHowett-MSFT mentioned that he has seen this before when clang modules are enabled.  This is very likely a result of this definition coming from two different modules.  You can turn clang modules off as a workaround by opening the solution properties:\n\nIf you are using @import, you'll have to change those to #import as needed. \n. Load balancing this to @MSFTFox . @msft-Jeyaram has already started working on this, so back to him.. There is a TODO in https://github.com/Microsoft/WinObjC/blob/develop/Frameworks/CoreGraphics/CGContext.mm#L1100.  Lets remove that then. . Closing.  will deal with this separately. @DHowett-MSFT hopefully we can address this in you PR.. Closing this proactive perf analysis task, we can revive this as needed for specific scenarios.. In the meanwhile, you can use rangeOfString instead.  . @alakoring, a number of new methods were added to NSString interface, none of which are defined or implemented.  Both these methods are short hands for rangeOfString and rangeOfString:options.  \nI've added this to the backlog now.  However, you can implement these as well and submit a pull request (https://github.com/Microsoft/WinObjC/wiki/How-to-Contribute) if you need these sooner.  We are open source after all :). This is a platform bug for which fix is in the works.. @DHowett-MSFT yes.  I thought the title of \"f\" was descriptive enough.. We will look at this when it is absolutely needed. right now it is not blocking anything.. Let me weigh in on the usage of drawing tests here.  The idea behind the drawing tests is purely to validate drawing code which cannot be validated at an API level.  So please add extensive math tests if you have concerns on the validity of CGRectDivide.  There is no need for drawing tests here and those should be removed. #Resolved. @DHowett-MSFT, yes please!. The failure is because CGImageCreateWithPNGDataProvider failed.\n``` \n    COREGRAPHICS.DLL!_CGImageLoadImageWithWICDecoder(const _GUID & decoderCls, void * bytes, int length) Line 698   Objective-C++\n    COREGRAPHICS.DLL!_CGImageLoadPNG(void * bytes, int length) Line 666 Objective-C++\n\nCOREGRAPHICS.DLL!CGImageCreateWithPNGDataProvider(const __CGDataProvider * source, const float * decode, bool intent, CGColorRenderingIntent shouldInterpolate) Line 476    Objective-C++\n    GLKIT.DLL!+GLKTextureLoader cubeMapWithContentsOfFiles:options:error: Line 544   Objective-C++\n    GLKitComplex.exe!-GLRenderer initGLData Line 140   Objective-C++\n    GLKitComplex.exe!-HelloOpenGLApp applicationDidFinishLaunching: Line 37  Objective-C++\n    UIKIT.DLL!UIApplicationMainInit(NSString * principalClassName, NSString * delegateClassName, unsigned int defaultOrientation, int activationType, id * activationArg) Line 283  Objective-C++\n    UIKIT.DLL!ApplicationMainStart(const char * principalName, const char * delegateName, float windowWidth, float windowHeight, ActivationType activationType, IInspectable * activationArg) Line 158  Objective-C++\n    UIKIT.DLL!RunApplicationMain(Platform::String ^ principalClassName, Platform::String ^ delegateClassName, float windowWidth, float windowHeight, ActivationType activationType, Platform::Object ^ activationArg) Line 61   C++\n    UIKIT.DLL!DoApplicationLaunch(ActivationType activationType, Platform::Object ^ activationArg) Line 288 C++\n    UIKIT.DLL!_ApplicationLaunch(ActivationType activationType, Platform::Object ^ activationArg) Line 304  C++\n    UIKIT.DLL!UIApplicationLaunched(Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^ args) Line 190    C++\n```. I think our strict interpretation makes sense.  https://github.com/Microsoft/WinObjC/blob/develop/Frameworks/GLKit/GLKTexture.mm#L280 assumes it is PNG.. @DHowett-MSFT there is a first time for everything :).  @msft-Jeyaram I would instead go with _CGImageGetImageFromData() directly.. https://en.wikipedia.org/wiki/Em_(typography\n\n\nIn reply to: 282806234 . :clock1:. Pending other approvals of course.. In CI build.. Nit: Could you update the description with Fixes# before merge?. the conclusion was that this is the app behavior - not something we regressed.. Also: we have automated functional tests https://github.com/Microsoft/WinObjC/blob/develop/tests/functionaltests/Tests/NSURLSession.mm#L656 for this scenario.  The test app itself was written for a demo.. This page doesn't use any core text/cg apis.. @edvv these are not currently in plan.  You could use the projection apis instead to perform all of the above, here are some pointers.  \nWriting to photos album:\nWindows.Storage.StorageLibrary (WSStorageLibrary using projections) to save and retrieve pictures from the pictures library.  You can look at https://github.com/Microsoft/WinObjC/blob/develop/Frameworks/AssetsLibrary/ALAsset.mm#L72 for an example.\nUIImage picker\nhttps://docs.microsoft.com/en-us/uwp/api/Windows.Storage.Pickers.FileOpenPicker would be the good alternative.\nPrinting\nhttps://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/Printing and projections should help.\nEmail\nhttps://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.Email.EmailManager#Windows_ApplicationModel_Email_EmailManager_ShowComposeNewEmailAsync_Windows_ApplicationModel_Email_EmailMessage_\n. :shipit:. nit: two \"'\" in DON'T.. @MSFTFox since you are addressing some of these in your recent PR, could you handle this as well?. @MSFTFox yes, lets tackle the remaining items in 1704.. @ms-jihua looks like a leak in libicu, or our usage of it.  could you please take a look?. @RG-J how is this coming along?. @ms-jihua has this implemented as part of #2240 . @bbowman removing the \"ReadyRoll\" extension resolved it.  . Also see #63.  Going to resolve this as a duplicate, we are already tracking this differently.. @ms-jihua - yes, any code that requires this to work should use the FTs instead.  The interesting part though is all tests are now TAEF tests, so this should in theory be possible, but probably an overkill for most API tests which is what the unit tests have to be.\nFor your case, can you use functional tests instead?. Any scenario that is complex than simple API test is by design not a unit test.  Since we do have the functional test, lets just use that for such scenarios.. go.for.it.. please remove :)\n\nIn reply to: 287695855 . @jaredhms what windows build are you on + do you have cleartype enabled?. Resolving it as dupe of #2107.  . Reactivating as we will likely hit it when we move to the new insider train.  We will keep this issue to recreate reference images.  Not blocking issue anymore though.. Since this is tracked internally.  We can regenerate the images as needed, for now resolving this issue.. The tests pass if I run them in proc te.exe foundation.windowsonly.unittests.dll /inproc. . I take that back, they passed because they were all blocked. No UWP execution inproc.. If you are building debug locally, this would fail unless you build the tools project locally as well.  The debug hooks are only available on debug builds, so if you restore tools package, this will fail.\nI am leaving the tests as is, so we get coverage for the logging pipeline in our build server.\n. If you build the tools.sln locally, this would work fine. The \"Right\" thing would be to move these tests to the logging project (part of tools.sln) - that is what these tests are testing anyway.. @pradipd this is the task :). . I am just going to disable these tests.  Right now, in release mode, it isn't doing any validation and in debug mode, it requires the tools project to be built in debug mode as well.  . Fixed through #2306 . :shipit:. It is not a matter of a missing API, application group identifiers are a platform feature.  The closest approximation of this for UWPs is the publisher shared cache folder.  It has several caveats:\nSee documentation Publisher Cache Folder\n\nThe cache itself can be cleared by the user, so it should not be the only place the user settings are saved.\nThere are no group collection concept - that is, all apps by the publisher have access to the shared cache.  This itself is not a big limitation.\n\nWe should be able to implement the said API with these caveats.  Also the app manifest needs to be updated.  This may possibly be done automatically by vsimporter. \nhttps://developer.apple.com/library/content/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html\nhttps://blogs.windows.com/buildingapps/2016/05/24/sharing-your-local-app-data/\n. Also need samples - in the winobjc-samples repo that demo this. . Please fix #2291 along with this.  It is just a removal of a macro and fits right with this work. #Resolved. Unit tests don't quite have a main loop the same way a normal application does.  it may be worth testing this in an app (FoundationDevTests app for example) or a functional test.. @ms-jihua just confirmed that this never really worked.  Adding this to 1704 work.. What is the behavior and I do a Build solution (Ctrl + Shift + B)? Will we end up re-packaging everything?. Got the answer offline. Yes, we will create new nuget packages.\n\nIn reply to: 288553358 . Since this is platform limitation, closing this.  . @aballway NSDataTests.mm already has good 'ol fashion tests to handle the corner cases :). #Resolved. Through mathematical induction, we have proven that it will work for any number of lines :).\n\nIn reply to: 289161023 . @eddv what test is this? Is there a call stack or repro code? . Thanks @edvv.  We'll wait for that info - in the meanwhile, there is nothing actionable for us here, so will wait to hear from you. . @edvv any updates on this issue?. Dupe of #2083 . Before we go down the path of the \"acceptable deltas\", lets understand what the differences between your local build vs the build server are.  If they are in the same flight, we expect same results.. note: containsString is simply a wrapper around rangeOfString, which is probably the one we should test extensively.  . What is the \"longer term, larger scale fix?\" Is there an issue tracking it?. BUILD2016_DEMO=1 got overwritten.. This is same issue as #2404 . Can we add a test that sets and verifies this?  Granted this was tested with WOCCatalog, but we need an automated test to ensure that we don't regress this in some manner.  . @DHowett-MSFT NS(Byte|Number|Date)Formatter + the abstract parent class.. Please be sure to add support for \nNSURLProtocol   propertyForKey:inRequest:\nNSURLProtocol   setProperty:forKey:inRequest:\nNSURLSessionTask    suspend. @msft-Jeyaram What is going on this this? #ByDesign. This is dupe of #2444 .. chocolatey upgrade winobjc-tools --pre --version=0.2.170229-dev-20170404101752 --force should get you to the latest package from develop.  The issue would resolve itself once we have an official version published from master, which would be any day now.  . Scratch that.  As @DHowett-MSFT stated, the header is from WinOBJC.Language package, which is not coming from chocolatey. . Doesn't repro, potentially an intermittent OS issue.. rather than disable the tests, we want to understand why the delegate callback ordering is unreliable.  . Pending any actual scenarios that require this distinction, resolving this.. @bbowman lets merge this to develop and cherry-pick to master. . :shipit:. @edvv thanks for opening the issue.  Can you please provide information on what is not working right?. Dupe of #2572 . This is fixed now.. struct savedTouch {\n    id _touch;\n    CGPoint _savedPos;\n};\nshould move to UIKit Internal or be removed.. @msft-Jeyaram - is the code stashed to a remote?. @tmm1 I tried to compile this - hit a couple of other minor compiler errors, but not the Internal Compiler Error (ICE).  It would be great if you can isolate the ICE failure.  . closing this issue, please re-open if this still reproduces with latest tools.. Would be good to understand this crash before merging.\n\nIn reply to: 296339161 . @teras, it is not clear what you are running into.  If you have an xcode project for the static library in question, you can use vsimporter and you should be able to build the windows version of the static library.  \nIf you are creating a static library from scratch on visual studio, please follow the instructions here: https://github.com/Microsoft/WinObjC/wiki/Using-the-SDK.  If you are getting build errors,  grabbing the logs  would help.  \nTo answer your question though, yes, you can create both static libs and dlls that use objective-c.. We don't have an immediate need for the other two methods, please stub them instead.  We'll cross the bridge when we get there.. Fixed through #2634 . @DHowett-MSFT could you please dig into this?. @andrejo-msft - is this a regression?. Probably a variation of #2618?. Note: I don't see this in ARM.. I don't see this in the windows insider build canary flight.  As @yiyang-msft indicated, this appears to be a platform regression that has since been apparently addressed.  . This is indeed fixed in develop, closing the issue.. in that case... This would require the creator update from 1703.  We can do this at some point in the future when we don't have to maintain two different paths for down-level vs 1703+.. https://www.youtube.com/watch?v=JYc05gZFly0. Since this is only extra nice, we will do it if we run into this scenario a lot.  Closing this for the time being.. @lafezhang please let us know if you have any further questions on this.  closing the issue for now.. Looking at https://github.com/Microsoft/WinObjC/blob/7bdcbe4077f5d018598b7354c7b4924b454033b1/include/CoreGraphics/CGContext.h#L49, kCGInterpolationHigh is inexplicably 3 instead of 4.  This results in linear interpolation instead of cubic as intended.\n. @DHowett-MSFT got hit by off by one bug. \ud83d\ude2d . Do we know when this regressed?. Thanks @msft-Jeyaram cherry-picking this.\n. Fixed with #2683 . This is the issue captured in #2507.  Do you have VS2017 installed?  As noted in the readme, please also install the xamarin tools.\nNOTE: Please also install the Mobile development with .NET workflow option (Xamarin Tools) due to a bug in Nugetizer (See Issue 5026)\n. Looks like network connectivity issue - it loads correctly for me.. @edvv I am unable to repro this.  I changed woccatalog page with webview to use loadHTMLString: and it shows the string fine.  Can you provide a short repro?. This is probably because this change https://github.com/Microsoft/WinObjC/commit/9c96cf25d3dad76fe60381c785a3977ea7d493ae didnt get cherry picked.. Closed with #2710 . Are you doing this in a winobjc project?  . @wlw this project only tracks winobjc and is not the right forum for this.  stackoverflow may be a better forum for this.  Closing this issue.. @DHowett-MSFT says @aballway already fixed this in a PR in flight. . Fixed with #2693 . Why? What exactly is this hurting?. @adammika apologies for the delay.  Yes, not all intrinsics would work with clang unfortunately.  You can however move these to a .cpp file and add them to the project as clcompile - in fact, we do that in the accelerate framework. You may have to manually edit the project file like this.\n. @eddv - could you submit reduced reproductive scenarios where performance is not what you expect to be? This is too broad a statement to effectively address/act on.\nAlternatively, you can capture traces with windows performance analyzer for the broken scenario and share it with us.. If it isn't broken, don't fix it.  We have other usage of wrl in foundation, we should not be converting these. . I am going to close this.  We should add compat tests as needed for anything we change from this point on.  . You could manually try adding the path to include paths (including the base.framework) to the generated vcxproj.  . The CI build passed but GitHub was down when it passed, so rather than re-run the build, synced with @MSFTFox offline and force merging this.. closing this issue since investigation is complete - fixed through #2757 . Hi @Shagufta4786 - some of these projects are available as open source projects (ex: libcordova, libiconv, libzbar).  I am not sure how many of these are available for windows.  libSystem is specific to Mac.  The winobjc bridge will not provide every library available in Mac.  Rather, it provides implementation for a subset of the iOS objc framework libraries that would allow you to port your app to windows.\nGiven that you are using cordova in your app, it probably makes sense to use cordova to target the app to windows rather than using the winobjc bridge.. @ms-jihua yes, It would be helpful to have at least one test for POST using NSURLSession.. 'WOCCatalog.exe' (Win32): Loaded 'C:\\Program Files\\WindowsApps\\Microsoft.VCLibs.140.00.Debug_14.0.25022.0_x86__8wekyb3d8bbwe\\vcruntime140_app.dll'. Cannot find or open the PDB file.\n'WOCCatalog.exe' (Win32): Loaded 'C:\\Program Files\\WindowsApps\\Microsoft.VCLibs.140.00.Debug_14.0.25022.0_x86__8wekyb3d8bbwe\\msvcp140_app.dll'. Cannot find or open the PDB file.\n'WOCCatalog.exe' (Win32): Loaded 'E:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\Logging.dll'. Cannot find or open the PDB file.\nThe thread 0x3030 has exited with code -1073741515 (0xc0000135).\nThe thread 0x90c has exited with code -1073741515 (0xc0000135).\nThe program '[11420] WOCCatalog.exe' has exited with code -1073741515 (0xc0000135) 'A dependent dll was not found'.\n. Following binaries are missing in the package between last release and current:\nE:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\ObjCUWPWindowsApplicationModelExtendedExecution.dll\nE:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\ObjCUWPWindowsDevicesSensors.dll\nE:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\ObjCUWPWindowsGraphicsDisplay.dll\nE:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\ObjCUWPWindowsServicesMaps.dll\nE:\\src\\Winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\AppX\\WinObjCRT.dll\n. Turns out to be user error.  I was not pointing to the right version of tools, language and logging packages.  Fixing that fixes this issue.. closing the issue as it appears to be resolved.. @jboich could you share the build logs from the build step?  You should be able to safely ignore the build failures in the tools project.. This is now fixed, all projects build and work well with 15.4 (back compat with 15.3 isn't possible because of bugs in 15.3).. fixed now.. This should now work with latest release.. Why would you add a view controller and not the view?  Do you have a code snippet?. @edvv Are you setting the minimumFontSize on the UITextField?. Hi @calbot - you can debug xib2nib.exe directly using visual studio and point it to the sources, that should get you past having to build it.  The failure usually indicates some UIKit class that is not implemented.. See also #122 - other than the codegen, our code is not 64bit safe in some places.  This is not in our immediate plans.. Please change this back to ........\n. package.appxmanifest and WOCCatalog_tempraryKey.pfx got removed. can we please add them back?\n. Please revert changes to this file.\n. nit: UIImage* instead of UIImage \n. UIImage* instead of UIImage \n. nit: you don't need this.\n. nit: our coding conventions put this in same line as { (not sure why clang format didn't do it automatically).  In other places in this file as well.\n. These two ivars are private, so they can go into implementation instead of interface.  Also, place appears unused?\n. use instancetype instead of id for creators, inits, etc. other places as well.  We are not consistent about this in our codebase, but we are moving to use instancetype in these cases as a conscious choice.\n. This would be build break.  You need to move initialization to the init or viewDidLoad method.\n. The logic in this function could potentially be pathologically broken.  Ex: if mimimumReportInterval is 1010 ms, and updateInterval is 1sec, we will set _gyroUpdateInterval to 1sec and lateron try to update reportInterval to 1000ms, which is lower than 1010 ms.  In general, i think we should maintain the state in higher fidelity (in msec) and do the capping in the accessors.  Granted, this is not new code with this change.  Can we track that issue outside this PR?  Same issue in other methods that do similar math. \n. Why do we stop updates from background queue but start updates from ui thread?  Also, if you really need to use background queue here, please use: dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0) instead of creating a new dispatch queue.\n. @Interoperable?\n. If we have code (like in the sample) where the calls are motionManager.magnetometerData.magneticField.x, motionManager.magnetometerData.magneticField.y,motionManager.magnetometerData.magneticField.z, we could end up with three different updates.  Is there value in caching this and the last update time and only call windows if the last update time is longer than the minimum update interval?\n. Can you merge with master?  we want all the generics back :).  Here and in the rest of the lines in this file.\n. Same comment as above, all the id stuff should now be ObjectType.\n. Probably not the most efficient for set operations - many operations will now be O(N) (ex: contains) instead of O(1). @bbowman, you had some ideas on this?\n. thanks for writing the unit tests.  Can we add one or two that test that the set is indeed ordered? you are checking first and last, can we also add some that test the entire range?\n. It is more complicated than that. If you are doing NSMutableOrderedSet (which we should also do), they could share the implementation the iterator becomes important as items can be erased. On that note, you should also consider doing the Mutable version.  Yet another design change would be to do class clustering on this so that the backing store is in an implementation class and not directly on NSOrderedSet.  @bbowman is writing this up with issue #471 as a design. \n\nIn reply to: 61966453 \n. please revert the changes to the header file ordering.\n. please move this to member method instead. We are getting a new version of this class and that will make merging this easier.\n. We new support generics, so you can use this: NSMutableDictionary*, and get compile time type safety.\n. There are no unit tests for these (although these should be testable).  Since you have validated this, would you please add a unit test for the methods you touched.  You would have to add a new unit test project for QuartzCore.\n. nit: please be sure to run clang formatter, (use spaces instead of tabs per coding conventions).\n. this file should probably not be checked in? (generated during build?)\n. This file should not be checked in?\n. please delete these two files with a commit.  The change looks good to me otherwise.\n\nIn reply to: 67958793 \n. It turns out that this is in fact problematic.  If you create an SDK package, extract it and build the sample, it wont be able to reference this file.  My recommendation is to have a file added to this project as assets instead of referring to this remotely.  This breaks the CI build.\n. element->points? otherwise this seems unused...\n. I am not sure if this is really needed.  Documentation for CFPathApply says that the function cannot modify the path, it implies no guarantees that if the function does indeed modify the path, it will be ignored.\n. The reference platform behavior may be an artifact of their implementation rather than the intent.  We should not be trying to match this behavior.  Any app that relies on being able to change the path is probably behaving incorrectly anyways, so i'd rather fail fast in these scenarios than support it.  Thoughts?\n\nIn reply to: 68611364 \n. Nit: it looks like CGPathApply is the only one that is doing the null check.  fail fast (by not checking NULL) will make it consistent.\n. We are interpreting \"can examine (but not modify) the element\" differently.  IMO, it means that the function can examine it, but it should not modify it.  There is really no utility in allowing the function to modify it but guarding against it.  Looking at the applier function: typedef void (CGPathApplierFunction) ( void info, const CGPathElement *element );  the const on second parameter implies its contents must not be modified by the function.  We are not really concerned about a rogue user or code here as this runs in the context of the app.  Is there a legitimate case for an app modifying this element? if not, I'd rather remove all these duplications - it will matter a lot for perf.\n\nIn reply to: 68664667 \n. This copy is shallow.  the _components->points is now shared between the two instances of CGPaths and will result in double free.\n. This approach, while really tight on memory usage, is not really buying us a lot and will cause performance issue on two fronts: \n1. Lot of small memory allocations (1, 2, 3 or 4 points).\n2. Locality of reference of path element + points.\nI suggest that we allocate the buffer long enough to hold CGPathElement and the maximum number of points.  The points buffer will be at the end of the element.  While this may sound bad, it actually isn't since memory wont be fragmented anymore.  Also addresses the other shallow copy comment.\n. In light of the other comment on allocation points inline, it probably makes it easier to have CGPathElementInternal which derives from CGPathElement and adds four points.  You can then have the constructor set the pointer as well, simplifying some boilerplate.\n. A line of comment explaining what this is will be helpful.\n. Should be FLT_EPSILON or COMPARISON_EPSILON instead.  Please also review the other comparison of double/float values to 0.  Also our coding conventions use {} even if there is only one line in the condition action. #Closed\n. The documentation on this is not very clear.  \"If the current point and the first tangent point of the arc (the starting point) are not equal, Quartz appends a straight line segment from the current point to the first tangent point.\" On the other hand, the first tangent is from current point to x1, y1.  Does the reference platform bail out if current point is same as x1, y1 like the code below (it makes sense, but again,the reference doc is not clear).\n. should this be x1-x0?  the sign should matter as the arc is between lines from (x0, y0)->(x1,y1) and (x1,y1) -> (x2, y2), implying x1, y1 needs to be reversed here.  It would help if you could add comments with the math behind these computations, would help with these questions immensely.\n. This entire code block is repeated in a few places, might make sense to move this to a utility function and call it instead.  Understood that this was in the existing code and not new, would still be a good improvement. #Closed\n. At the very least, comments here that this is the same code in other two spots (with a TODO to refactor them) would immensely help.   #Closed\n. Yes.  That would work. The reason i suggested the internal structure is that it would then make size calculation etc trivial. \n\nIn reply to: 68820359 \n. Thanks Jeff, would be great if we can document these as caveats - where we chose compat over documented behavior.\n\nIn reply to: 68831259 \n. @jeffMeador I would consider it if there is actual valid usage for the case. Otherwise I prefer to not make copies here. If we see actual apps use this pattern we can always do this in the future.\n. This is not what i meant.  We are still allocating memory every time a path element is added.  perhaps i misunderstood your earlier question.  Do you want to chat over the phone so we can get on the same page here?  I really want to avoid duplicate allocations for points every time an item is added to the path.  Allocating a fixed number of points without doing it once isn't really buying us anything. #Closed\n. nit: from a OO standpoint, i would call this function init() (caller doesn't need to know internal details of what this function does).  There is alternately, no need for this function, you can call placement new on the memory location like this: CGPathElementInternal* element = new (&path->_elements[path->_count]) CGPathElementInternal(); clearly, this doesnt work for the mutable copy scenario below. so it is okay to leave as is.\n. nit: no need to make a copy here.  You could apply the transform after you call pathObj->_elements[...] = copyObj->_elements[i];\n. You can avoid creating copies of p1 and p2 by expanding the expressions below or using ref/pointer instead.\n. bug bug! #Resolved\n. I have tested it with a release, but this is the test code from the issue report, so i decided to leave the autorelease version in.\n\nIn reply to: 69334437 \n. > false \ngasp!\n. why this change?  #Closed\n. the proper implementation of NSOperationQueue would use thread pools, but agree that our current implementation is not efficient.  \n\nIn reply to: 69786383 \n. > ( \nthe formatting of all the if statements doesnt follow the conventions.  Can you please make sure you have run clang formatter?  (ex: it should be if (path == NULL) instead of if( path == NULL ) \n. > switch \nmissing default.  by convention have an empty default here.\n. we should add a default here and fail_fast() to guard against potential changes in the future.\n. > cairo_copy_path \nDoes this have to be done under CAIRO_LOCK()? presumably path could be changed while we are attempting to copy?\n. > CFPreferencesSetAppValue \nwe need to synchronize of the apps use CFPreferences* apis to set values.   #ByDesign\n. > _completionBlock \ndont need to notify change here?\n. will be lot simpler to use completion = self.completionBlock\nself.completionBlock = nil;\ncompletion();\n\nIn reply to: 69981681 \n. can you move this to setExecution() and reuse it? \n. > _checkReady \n_checkReady can be changed to O(1) instead of O(N) by keeping the ready count.  since you are observing dependencies and their 'finished' state, incrementing/decrementing the counter should do the trick.\n. Sycned up offline with John. Since this is an urgent fix, will follow-up on this separately.  #624\n\nIn reply to: 69982783 \n. This string will not fit on phone, please use the current value as the placeholder. #Resolved\n. We need better tests here, perhaps parse a real model file.  Otherwise none of the xml parsing code is hit. #Resolved\n. > initWithXMLElementName \nnit: only init doesnt have the _ notation for private methods.  Given that the protocol is internal, maybe drop the _ everywhere to be consistent?  Or have _ everywhere to be consitent.\n. Nit: NSSet?\n. > list \nstd::stack to save you some other code here?\n. need a warning here that the states have to be in specific order for the state machine to work.  In case someone gets adventurous later on to change this code :). #Resolved\n. Not clear what this comment is\n. > __debugbreak \nFAIL_FAST()?\n. > switch \nThis function does too many things, has too many locals and too little comment, so it is hard to exactly understand what is going on.  Could you please:\n1. Refactor the code here and break this function down into smaller pieces based on the path element type.\n2. Add comments as needed.\n. > There shouldn't be curves in this path. Move on \nShould that be an error condition?  Perhaps a warning trace is needed.\n. > _CGContextDrawStrokedPath \nI am not sure recursion is the right approach here, when iteration will work and will be lot more deterministic with stack space.\n. > curPathPosition.x = data[1].point.x \nnit: you could simply do curPathPosition = data[1].point;  and other places in this function as well.\n. > CGContextReplacePathWithStrokedPath \nThis TODO can be removed?\n. > CGPathCreateCopyByStrokingPath \nThis is returning null and crashing later on.\n. You could create two paths in viewDidLoad and simply use them here, instead of recreating the default paths for every frame. \n. Issues #630 => the points actually don't show.  Is the sample behavior tested on winobjc?\n. > CGContextStrokePath \nnit: You need a CGContextFillPath(), or it wont be filled with the right color.\n. > CGContextSetFillColorWithColor \nnit: here and elsewhere, our coding conventions require {} on conditionals.\n. That is strange, the encoding hasn't changed.  The only change here is addition of this file.\n  \nCompileAsObjc\n\n\nIn reply to: 70302186 \n. Oh, the joys of editing in VS.\n\nIn reply to: 70303167 \n. What you have here is a state machine, you should be able to transition state and iterate once through the points. \n\nIn reply to: 70330348 \n. This code is under #if 0, we should probably just delete this. #Resolved\n. please use #pragma once instead.\n. > C:/Users/t-chmou.REDMOND/winobjc/WinObjC/samples/AddressBookSample \nThese should be changed to relative paths\n. > C:/Users/t-chmou.REDMOND/winobjc/WinObjC \n../../../.. \n. Shouldnt it be editable when modifying a contact? \n\nIn reply to: 70354548 \n. Understood, this will be part of the rework we do for CoreGraphics in the near future.\n\nIn reply to: 71058697 \n. > inline \ninline + export doesn't make a lot of sense, should this not be inline?\n. Shouldn't these __ structs be internal, they should not be in the export header?\n. > kCGBitmapByteOrder32Little \nThis seems like a breaking change - if the apps now have to use kCGBitmapByteOrder32Little.\n. Yes, please! We have done the *Internal.h pattern in other places as well. \n\nIn reply to: 71207581 \n. > Backing \nNit: probably makes sense to add BitMapInfo() method to Backing context so we don't have this chain here.\n. nit: We prefer FAIL_FAST over assert.\n. Understood, this code however didn't need kCGBitmapByteOrder32Little before, so this will break apps that don't specify it?\n\nIn reply to: 71218160 \n. > bitsPerComponent \nSome of the fields here are similar to __CGFormatProperties, does it make sense to use that struct here?  Also, size_t usage here is different from the other struct. Note that size_t is different on different architectures (ex: 64 bit).\n. > surfaceFormat \nNit: This enum is an odd man out.  Could we make it __CGSurfaceFormat while we are at this?\n. nit: would be useful to add the override annotation to the overridden methods.\n. this can be factored into a private method and reused in the constructors.\n. This seems like a strange place to change _bitsPerComponent.\n. > __CGSurfaceInfo \nconst _CGSurfaceInfo* (since you are not changing it).  Altertnatively const __CGSurfaceInfo& so you could do this like new CGGraphicsBufferImage(_CGInitSurface(...)).\n. __CGSurfaceInfo : public __CGFormatProperties might work out well.\n\nIn reply to: 71232435 \n. > TraceWarning \nThis is probably the expected behavior on reference platform?  Might as well remove the warning in that case.\n. colorSpace NULL is already handled in CGColorSpaceGetModel(), so it should be safe to revert this file?\n. It probably makes sense to keep a dictionary (CFDictionary) of __CGColorSpace instances and return the instance instead of creating new ones everytime.  Clearly, this is just an optimization.\n. Once we construct the image once, we should probably cache all of these properties, so if the bitmap is discarded, we can get the info without reconstructing it.  I see that the pattern is preexisting though, can the surface change after the image is discarded (and then re-used?).\n. > if (colorSpaceAllocated == true) { \nnit: this could simply be if (colorSpaceAllocated)\n. I had to back out the #658 merge because of broken test app.  This fixes all the issues.\n\nIn reply to: 71389054 \n. Should really be YES/NO in keeping with OBJC.\n\nIn reply to: 71266910 \n. Net increase in size, probably because more complete data set now? \n\nIn reply to: 71421348 \n. Thats perfect.  There are other files where this change as well.  \n\nIn reply to: 71264537 \n. > EXPECT_ANY_THROW \nDo these tests work on ARM? #Closed\n. > abort \nFAIL_FAST(), so we get the telemetry.\n. abort doesn't translate to watson dump, so we wont know the cases where this is hit.  Perhaps dereference NULL to 'gracefully' crash if there is such a thing.\n\nIn reply to: 71574896 \n. std::runtime_error would be a resonable alternative.\n\nIn reply to: 71576020 \n. > kCGBitmapByteOrder32Little \nWe shouldn't need this flag by default, per the other change?\n. > C:\\Users\\t-chmou.REDMOND\\winobjc\\WinObjC\\samples\\AddressBookSample\\AddressBookSample.xcodeproj \nThis should be relative as well.\n. Thanks for checking.  A wise man once said \"Its always good to ask\".\n\nIn reply to: 71600230 \n. code after RaiseFailFastException is unreachable, so you should simply remove the abort.\n\nIn reply to: 71600334 \n. Many of the other files can be reverted as well (in Frameworks\\Include)\n\nIn reply to: 70353130 \n. Does it hurt to just always include this header? IWMalloc.h should be #pragma once'd so this shouldn't matter. #Pending\n. > RUN_ALL_TESTS \nnit: if you fix the scopeguard TODO above, you can add the scope guard for _WIN32 and not have this giant #ifdef #Closed\n. I don't feel too strongly about it, but I'd rather not pull in any formatting only changes.\n\nIn reply to: 72163413 \n. You've already handled that in IWMalloc.h though.\n\nIn reply to: 72163245 \n. > EbrApplicationLaunched \nYou are changing the order of main and EbrApplicationLaunched, is that intentional?  #Closed\n. > ___pin_objc_init \nCould we please add a comment on this contract with the compiler? #Resolved\n. Dustin's point is that stable sort only makes sense if there are two items that are being sorted are of same value - then they are expected in the same order.  As is, this probably will just pick a different sort algorithm.\n\nIn reply to: 72361429 \n. Nit:Could we define constants for these and use them in encode/decode functions? #Resolved\n. maybe prudent to do this first. #Resolved\n. > ependencies containsObject:object] \nwhy is this check even necessary? #ByDesign\n. > _dependencies \ndo you need to do \nif ([operation isFinished]) {\n            _readyCount++;\n        } #ByDesign\n. Can you fix the unit test instances?  \n\nIn reply to: 72359856 \n. The code that converts the IPropertyValues to NSDictionary is same, you should make a utility function that is called in both.  \n\nIn reply to: 72338685 \n. I dont think you are supposed to change the UserInput object here.  Event arguments are typically readonly.  \n\nIn reply to: 72850903 \n. We (ms-jihua and I) had discussed this before.  It is an option, but it doesn't buy us much given that this is one file that is an exception from what we have seen.  Perhaps there are others that will fall into this bucket specifically stream, runloop, etc.  \n\nIn reply to: 72732284 \n. _completionBlock in this case is undefined, which doesn't mean that it cannot go to a reliable state, just that code should not assume any specific state.  What it means in this specific case is that after the std::move(), you should set _completionBlock to nil even if you know that our implementation will set it to nil.  \n\nIn reply to: 73055468 \n. > detachNewThreadSelector \nWe will spin off a new thread for every operation that completes, which is not good.  At the very least, we should use a thread pool, ideally we should further complicate the code and call it in the NSOperationQueue thread. :)\n. What about the other tests in this file?  Looks like there are other failures as well, could you please fix all the related issues?\n. > - \nI don't think we should update this file for every fix.  Lets accumulate some fixes and do one update at the end of the week. #Resolved\n. That said, this PR is okay.\n\nIn reply to: 73249616 \n. instead should remove [predicate release];\n\nIn reply to: 73250756 \n. > _ABAddressBookManager \nNit:while the class name is fine by convention, we don't have files that start with _.  These are typically something like ABAddressBookManagerInternal.h/mm.  Granted, the interface names and file names will not match. #Pending\n. @chadimoussi Can you open an issue to track this?\n\nIn reply to: 73217044 \n. > dispatch_semaphore_wait \nhave you tried this on the phone?  phone has strong requirements on not blocking the UI thread... #Pending\n. > (addressBook.contactStore  \naddressBook == nil, since init will return nil on failure. #Closed\n. absolutely but unnecessary <:D\n\nIn reply to: 73264467 \n. > [self initWithBase64EncodedString:@\"\" options:0]; \n[self init] should be sufficient here. #Resolved\n. Does the /wholearchive fix also go and remove some of these artifacts?\n\nIn reply to: 73436897 \n. Discussed offline with AJ to not change userInput object.  \n\nIn reply to: 73040957 \n. may be better to move this up front to avoid the -And condition above.\n. > scanUpToCharactersFromSet \nis \" 1, 2\" without {} valid range? #Resolved\n. > sscanf \nif you must use sscanf, use sscanf_s instead.  Also, you will let string such as 1, 2 (without braces) pass.  Is that the expected behavior? #Resolved\n. could we add a test that does validate the case?\n\nIn reply to: 73719314 \n. spoke too soon about the tests :).  Please change to use sscanf_s() instead.\n\nIn reply to: 73719408 \n. Nit: we aren't necessarily going to be testing on big-endian platforms, so this isn't really necessary.\n\nIn reply to: 73729182 \n. > (![ \nThis is the exact opposite of before, what happened? #ByDesign\n. This whole block could be simplified as:\nif ( opts & NSCalendarMatchStrictly) != 0 && opts & NSCalendarMatchPreviousTimePreservingSmallerUnits) != 0 && (opts & NSCalendarMatchNextTimePreservingSmallerUnits != 0 || opts & NSCalendarMatchNextTime != 0)) {\n         THROW_....\n}\n #Resolved\n. or not.. you do want one of these flags present, i see it now :)\n\nIn reply to: 73946729 \n. > DisabledCalendarTests \nI suggest you name this something else.\n. > dispatch_semaphore_wait \nAlthough this is a common pattern everywhere else in UIKit where we call projection apis, this is recipe for unresponsive apps.  We don't have a solution yet to this yet (@bbowman and I were talking about this today in the context of a different bug) maybe @mnithish @msft-jeyaram can weigh in potential runloop changes to accommodate this sync from async pattern.\n. You could consider using NSArray filteredArrayUsingPredicate. #Resolved\n. > contact \nDoes this need to be retained? #ByDesign\n. > contacts ? [contacts count] : 0 \nyou can simply return [contacts count].  It is safe to pass a message to nil (and it will return 0). #Resolved\n. > }\") \nWe really shouldn't have to add this to build.sln, it should go to libdispatch.sln. #Resolved\n. much rather move the unit tests and the scripts to live with deps\\3rdparty\\libdispatch. #Resolved\n. Out of sight, out of mind, unless someone touches these libraries...\n\nIn reply to: 74129569 \n. Should be RGBX.  #WontFix\n. Yes, would work even better.\n\nIn reply to: 74105055 \n. Might be a good time to add a new test for the CTTypesetterCreateLineWithOffset #Resolved\n. > Users \ndo these paths need to be relative? #Resolved\n. would be good to add comments here on what it does. #Resolved\n. > chars[curIndex - 1] == ' ' \nshould we be using isSpace, here?  what do you do with tabs? #Closed\n. > neWidth = ((float)lastPossibleBreakWidth) / 64.0f \nthis pattern is used in this function quite a bit, maybe worth factoring this out.  Feel free to not address this as we may refactor this code again with DWrite work. #Closed\n. > CTTypesetterCreateLineWithOffset \n:yum: #Closed\n. > class \nplease use something different than class, as is collides with the C++ keyword. #Resolved\n. ;-(\n\nIn reply to: 74623377 \n. > initCGImageFormat \nnit: I would call this getCGImageFormat instead.\n. >  \nnit: clang formatting..? #Resolved\n. > _length \nnarrative of the fields will help. #Pending\n. > NSDecimalCompare \nNo tests for this method. #Pending\n. no tests for this NSDecimalCopy. #ByDesign\n. > assertArrayEqual \nshould be a macro, or when this fails you wont see a proper line number. #Pending\n. > testPowerOf10 \nmacro here as well. #Pending\n. > leftValue \ndeceptive variable name.  This is really the number of digits > 0? leftWidth more appropriate (or leftLength)? #Resolved\n. > same length \nlength is again confusing here, the effective length (matissa + exp) is same, but the length of mantissa may be different. #Pending\n. > ( \nI dont think this is quite correct.. you should only compare matissa after adjusting for exponent. #Pending\n. > exponent \nnit: initialize exponent = EXPONENT(result) + power here instead of in the if statement.\n. > exponent \nThis is not entirely correct as you are allowed to use the entire mantissa and exponents.\n. It seems to have broken a line where there was an extra ;\n\nIn reply to: 75770228 \n. Leaving this in with the hope that one day we shall be 64-bit compliant.\n\nIn reply to: 75770096 \n. > vImageBuffer_Init \nI am not seeing any documentation for this, is this private for WinOBJC? If so, these methods should not require annotations.  Also, would make sense to export vImage_free() instead of relying on application calling free.  Expecting free to be called by app would imply that we cannot run debug version of app with release version of the SDK.\n. For the purposes of this feature, it would make sense to add this to a new page instead.  My plan is to move all the non UX related work to their own samples, and having it in a separate page would make it easier.  Also will help keep the image view page relatively simple.\n. > y again without additional padding \nI am not sure if this is necessary.  For an image that is 2K rows tall, we will add ~32K memory, which given the size of the image itself, should be trivial.  Could simplify logic elsewhere to assume padding is always present.\n. > vImageConvert_RGBA8888toPlanar8 \nWon't this result in B and R being swapped?\n. Thanks Shameer, I'll do some manual validations on this as well as CI build. In the mean time, the only remaining comment I have is moving the new tests out of the ImagesView into a new view.\n\nIn reply to: 75983555 \n. > Copyright \nPlease use new copyright header in the files you are touching.  This line should read \"Copyright (c) Microsoft. All rights reserved.\" #Resolved\n. > someObject \nNit: SomeObject. #Resolved\n. > autorelease \nThere is no retain when you assign to _undoManager, so autorelease should not be there. #Resolved\n. > num \n[num copy]? #Closed\n. > _value \nself.value = value? #Closed\n. As long as you maintain the ref counting 'contract'.  I'd rather stick to one convention - which is to use the ivars only in init methods (with careful attention to ref count) and use the properties everywhere else.  That way, you dont have to worry about _value = [newValue retain].\n\nIn reply to: 76117372 \n. > retain \nStrongId<> does a retain, you are leaking anObject as a result. #Closed\n. no need to do this, StrongId<> does it for you.  Use _object = nil if you must. #Closed\n. Given that this is a stack, using std::stack<> would be much more efficient for insert and remove at index 0. #Closed\n. stating the obvious here, these tests do pass on reference platform, correct? #Closed\n. > _NSUndoBasicAction \nnit: id<_NSUndoable> is sufficient (and possibly more correct). #Closed\n. Fair enough, using a list would be more appropriate then, with O(N) traversal (same as array) and O(1) insert/remove.  In normal operation, adding operations and performing undo will be far more frequent than removing specific target.\n\nIn reply to: 76125991 \n. > static \nstatic methods in headers don't make much sense. you could make it inline, or just have the implementation in the mm file and declaration here. #Resolved\n. > autorelease \nstring is already auto released... #Resolved\n. already autoreleased. #Resolved\n. you can replace this loop with fonts addObjectsFromArray:[UIFont fontNamesForFamilyName:familyName #Closed\n. > CTLineCreateWithAttributdString \ntypo: CTLineCreateWithAttributedString (missing e) #Closed\n. > dog \nnit: As a dog person, I prefer \"The quick brown dog jumps over the lazy fox.\".   #Closed\n. > doubleword \ndoubleword == 32 bits for x86? it may be better to call out the actual width here to avoid any confusions with Win32 DWORD. #Resolved\n. > auto \nnit: not a good use of auto (type is known and easy to mention here). #Closed\n. > _countof \nnit: sizeof may be more flexible here in case _smallReturnValueOptimization ever changes to anything other than a byte array.  _countof usage here threw me off a bit. #Closed\n. > IwMalloc \nDo we need any tracing in case we try to optimize perf here later on?  #Closed\n. > type \nThese blocks are repeated many times.  Does it make sense to implement a utility method that takes 'action' blocks to act on arguments?  There would be an action for each type (object, string) #Closed\n. very useful write up, thanks :) #Closed\n. We are not testing any retainArguments codepath. #Resolved\n. > true \nNit: YES, not true. #Closed\n. > storeArgument \nsuper nit: could just be struct impl* _impl; #Resolved\n. > std::max \nseems like we can do without the std::max here. #Closed\n. Would be better to use the actual type here.  Also, for loop below should use unsigned int, or will produce warnings.. #Resolved\n. It probably makes sense to consider moving the struct definition to platform specific header and using the impl struct as a member (instead of heap allocated).  This will help with perf/fragmentation. #Resolved\n. > NSInvocationInternal \nNSInvocation.x86.mm? #Resolved\n. There isn't enough in this class to break this out, i second Dustin's comment to keep the list directly in NSUndoManager.\n\nIn reply to: 76294970 \n. is threadsafety a concern? #Resolved\n. Yes, this is arc enabled and technically i can say interoperable, but the class as a whole is stub (no one is setting these properties), so it would be a shame to call this interoperable.\n\nIn reply to: 76349060 \n. > WinObjC \nnit: WINOBJC in all caps. #Resolved\n. > s_oneByte \nugh? These dont need to be here. #Resolved\n. > } \nthese are incorrect line breaks we prefer } else { #Resolved\n. > Stub \nInteroperable #Resolved\n. > frame \nDoes reference platform expect non-null values here? we will crash.. #Resolved\n. framesetter must be released after usage? #Resolved\n. > frame \nframe must be released.. #Resolved\n. > const \nnit: const isnt required for scalar types.\n. > vImageTestCompare8888Buffers \nThis should really be a macro, or you wont have the line number information when a specific test fails.\n. > free \nwhy not vImageTestBufferFree()?\n. > colorData \nnit: Prefer declaring and initializing these variables at the same time unless it is unavoidable.\n. instead of this, could we just add _getOpaquePlatformReturnType() to NSInvocation?  same with _returnValue.  Then those dont need to be public. #Resolved\n. > stret \nstret is ignored? #Closed\n. Long story.  Didn't have commit hook setup in my new enlistment.  Good catch.\n\nIn reply to: 77276409 \n. > _dwriteGetFamilyNames \nnit: for \"C\" style functions, we should start with caps.  #Closed\n. > IDWriteFactory \nNit: If this method is called a lot, it would make sense to simply return the IDWriteFactory* instead.  The caller will save it into a ComPtr, holding reference correctly.  As is, we will have extra addref/release due to the temporary object. #WontFix\n. > vector wcharString = std::vector(length + 1); \nvector wcharString(length+1);  Its a shame that std::wstring() doesnt have a constructor that just allocates the buffer. #Closed\n. use [NSLocale currentLocale] instead? #WontFix\n. > static_cast \nnit: reinterpret_cast<> #WontFix\n. > glyphRunInfo \nI don't like this much from a perf standpoint.  This essentially will make a copy of the glyphRunInfo, copying all the vectors again.  How big are these vectors?  #WontFix\n. > false \nnit: FALSE. #Closed\n. seems super redundant to cache the factory here, why not always call the static method? #Closed\n. > CustomTargetTextRenderer \nMeasuringDWriteTextRenderer will clarify the intent of this class. #Closed\n. Presumably, this code block could use the new CTFont* apis that @ms-jihua is writing?  If so, could you please add a TODO here to change that? #Closed\n. > _callCustomRender \n_GetGlyphRunDetails may be more appropriate name.  _callCustomRender breaks abstraction by exposing implementation details. #Closed\n. > t = [ts->_string substringWithRange:NSMakeRangeFromCF(run->_range)] \nWe are making _stringFragments when we may not actually use them.  It probably makes sense to cache the ts in this object and create the fragment only as needed (if accessed). #Closed\n. same comments here as with _stringFragments. #Closed\n. > NSMutableArray \nNSMutableArray<_CTRun*> to avoid all the static casts everywhere else? #Resolved\n. Other places too, the code will be lot nicer to read.\n\nIn reply to: 77757492 \n. > UNIMPLEMENTED \nUNIMPLEMENTED_WITH_MSG() #Closed\n. > outPositions \nI am not even sure if this is useful information.  We are essentially returning one glyph position.  Need a TODO to implement the real version.  What didn't work here with DWrite? #Resolved\n. > Stub \nRegression - I presume this will be addressed in #961? #Closed\n. Why do we still need this method? Presumably for Draw until we move it to DWrite? #Closed\n. static_cast is only useful where types are related.  void * isnt really related.\n\nIn reply to: 77875281 \n. Lets get the bug on StrongId<> filed.  I am even okay removing StrongID in this case, since it would make the readability a lot better in all the other places.\n\nIn reply to: 77875386 \n. could you open a github issue for this so this doesnt fall through the cracks? \n\nIn reply to: 77871237 \n. The issue I am concerned about is the double copy.  Once into glyphRunInfo and once when it is added to the vector.  this is somewhat problematic. \n\nIn reply to: 77864667 \n. > CoreVideo \nrather than introducing this dependency, we should simply change the forward declaration below to be struct CVTimeStamp.\n. > kCTFontButtonFontSize \nshould these be DATA? #Resolved\n. > DWriteWrapper \nWhy are we making this header public?  This should be internal only? #WontFix\n. never mind, it is still private.\n\nIn reply to: 78118093 \n. > IDWriteFont3 \nThis is incorrect, you should use QI (ComPtr f3; font1->_dwriteFount.As(&f3)...) #Resolved\n. :D. How did this ever work? #Resolved\n. What is the plan to unstub this?  This would be a regression... #ByDesign\n. Can you add a TODO with issue number which will enable these tests again? #Resolved\n. nit: could you please convert tabs to spaces? change looks good otherwise.\n. Brent, you could entirely remove the @class CVTimeStamp and change the method to timeStamp:(struct CVTimeStamp*)timeStamp. \n\nIn reply to: 78206753 \n. We have to only use DWrite apis here - freetype will be removed after we migrate to DWrite.\n\nIn reply to: 78248109 \n. > [framePtr->_lines count] && static_cast<_CTLine*>(framePtr->_lines[i])->_lineOrigin.y >= 0 \nwhy the y >= 0? Also, it might make sense to split this inside the for loop so you can get rid of the objectAtIndex call below. #Resolved\n. > _LazyUIFont \nwhy is this here?  #Resolved\n. if you need a mutable array, use mutableCopy\n\nIn reply to: 78225046 \n. That is, change this to return SUCCEEDED(font->_dwriteFontFace->GetGlyphIndices(...)); instead. \n\nIn reply to: 79681059 \n. > CTFontCopyName(font, kCTFontFullNameKey) \nnit: cache this result instead of calling it twice? #Closed\n. > DWRITE_TEXT_RANGE{ attributeRange.location, attributeRange.length } \nconst DWRITE_TEXT_RANGE range {...} and then use them.  compiler will likely optimize it the same, but the code would be cleaner. #Resolved\n. why are these changing? seems like a regression? #ByDesign\n. Sweet! #Closed\n. is this because fontDescriptorWithSymbolicTraits is broken? #Closed\n. > static \nYou dont need static in the forward declaration.   #Resolved\n. Almost seems like a need for _DWriteGetFontFamilyNameAndProperties(...), so all of this can be done in one shot in multiple functions.  Right now, this segment is repeated. #Resolved\n. > dwriteAlignment = DWRITE_TEXT_ALIGNMEN \njust break is fine here. also missing break :). #Resolved\n. we need to add a test in the test app for the RTL text, given we are adding this now. #Closed\n. > dwriteRange \nWould still like this to be declared closer to where it is used than out here. #Resolved\n. Do these assertions hold good in reference platform? #Resolved\n. > pointSize, fontMetrics.designUnitsPerEm \nfrom perf standpoint it would be better to compute pointSize/fontMetrics.designUnitsPerEm once and use it. #Resolved\n. Is there any reason to compute these upfront?  If the caller is not using these values, it would be a waste of time.  Rather initialize these from CTLineGetTypographicBounds? #ByDesign\n. nit: some of our private methods are __ and others are _.  what gives?  #ByDesign\n. We should be able to get the frame bounds directly from dwrite instead of doing an O(N) operation like we do here.  How did that work before this change anyway?\n\nIn reply to: 80313171 \n. > imalMaxSize * sizeof(unsigned short) \nit this correct?  if it looks like _mantissa here is allocated dynamically and per your comment, not always same as the size of mantissa? #ByDesign\n. > memcpy \nThis is going to copy NSDecimalMaxSize uint values starting with &value.  value being on stack, this will result in arbitrary stack values in mantissa.   #ByDesign\n. The equality comparisons only hit the short circuit paths for the two cases.  You probably want separate instances with same value as well, to exercise the other codepath. #Resolved\n. Is this really testing the implementation details?  will it pass on reference platform?  You should split the implementation details tests into windows only test. #ByDesign\n. > 2007 \nplease add this line back. #Resolved\n. > [[[[NSDecimalNumber alloc] initWithDouble:[self doubleValue]] autorelease] \nNSDecimalNumber numberWithDouble:[self doubleValue]? #Resolved\n. > exponent \ncould you just do one mantissa multiplication with a power of 10 instead? #ByDesign\n. This may not always be right.  By normalizing to a higher exponent, you are losing precision and in some cases, you may not be able to fit the representation in mantissa.   #Resolved\n. please fix copy right headers: Copyright (c) Microsoft. All rights reserved. #Resolved\n. why is this block of code commented out? #Resolved\n. This has to be retained or copied. #Resolved\n. > CGPathAddCurveToPointView \nIs this a view or a view controller? The naming is confusing.. #Resolved\n. the first two properties seem like they can go to base class, it is duplicated in many places. #Resolved\n. > CGPathCloseSubpath \nLogically, this would seem to fit right before the getboundingbox() #Resolved\n. if we are not going to supply table cells, why use tableview at all? #Resolved\n. :D #Closed\n. > 1 \nwhat is the 1.0 accomplishing? #ByDesign\n. Oh gosh, this is not right.  per convention, create functions must retain.  and Get functions are auto released.  The previous iteration was correct. #Resolved\n. I don't agree that performance in tight loop doesn't matter.  This is a case of having a helper function where one is not needed.  You need a multiplication factor, which you compute once and use everywhere.  floating point divisions are expensive and when done many times (as in this case, we would do it with every glyph) will result in \"why the hell is it performing so bad\".  Granted, premature optimization is bad, but this is a case where we aren't gaining anything from a helper function. \n\nIn reply to: 80552492 \n. Can this go as well? Not sure why we have private unimplemented methods... #Closed\n. failing to return ret? #Resolved\n. > CFEqual \nwhile you are at it, why not roll these up as well? #WontFix\n. > CFEqual \nconsider making this a real map<> so the lookup doesnt have to be O(n) #WontFix\n. for small N's (small == 5) it would be true.  Are you saying I can't say one thing and say entirely another thing later :)?  on a serious note, \"consider\" it.  Not sure that this code is a a perf bottleneck.\n\nIn reply to: 80598679 \n. Not sure why this changed?\n #Closed\n. > SetResolution \nDoes this ever get called?  It would be useful to add UNIMPLEMENTED() to these not implemented methods. #Closed\n. This should be removed.  As is, you are locking the image data but never releasing it. #Closed\n. Ah never mind, you are releasing it later..\n\nIn reply to: 80771033 \n. > LockImageData \nThis lock unlock should actually be in the wicbitmaplock.  Note that the image data might go away after you can ReleaseImageData().   #Resolved\n. You have to implement getter and setter and call CGColorRefRetain/Release.  \n\nIn reply to: 80602228 \n. > NSNull \nI am not sure if we should remove this.  Would be good to see if there is a bug in our recursion that ends up adding the elements to the JSON serializer in the wrong order? #WontFix\n. I don't think that is correct.  The render target is created once, right? (It should be created only once).  The idea here is that when the d2d render target wants to draw, it will call wicbitmap lock - which should be used to lock the data buffer.  \n\nIn reply to: 80797038 \n. > m_imageBacking \nThis is not correct - you should pass the image backing to the lock object and ReleaseImageData when the lock object is released.  Otherwise, we are locking too many times (everytime D2D locks and not release enough times). #Resolved\n. We need NSNull to work correctly as a key here.  Lets due the diligence here..\n\nIn reply to: 80960041 \n. That is really not the contract for this interface.  We should lock image data when lock is called and release it when the lock object is destroyed.  \n\nIn reply to: 80982967 \n. We are already using a fully tested third party json parser - the windows json serializer, so I think you are both right - we could live with the simplification of the test.\n\nIn reply to: 80983725 \n. That is a fine idea. I think we have sufficient coverage as is, so we could punt it until we need to revamp this.\n\nIn reply to: 80984188 \n. > There \nWoot!\n. I am not sure if this is the only place where we will fail in archival compat across architecture types.  \n\nIn reply to: 81209959 \n. can this be cached in the context initialization and used?  #Resolved\n. > EXPECT_NO_THROW \nNot sure if these are ARM safe. #Resolved\n. Does this behavior match with reference platform? #Closed\n. > static \nstatic here doesn't make much sense.  use static on methods if they are only supposed to be used in one file, in this case, it will be used across different files, so this doesnt apply. #Resolved\n. This should be D2D1_FACTORY_TYPE_SINGLE_THREADED.  We dont need any locking from D2D as all our drawing is on UI thread.  Specifying multi threaded here is counter intuitive and will result in worse performance.  Note: even if the factory is single threaded, when we have hardware offloading, D2D will parallelize the tasks on the GPU.  https://msdn.microsoft.com/en-us/library/windows/desktop/dd368104(v=vs.85).aspx has all the details. #Resolved\n. Any code that needs the multi-threaded access should lock what it needs.  making all D2D methods thread safe is not the way to do that.  Note that singlethreaded factory doesnt mean the objects cant be used in multiple threads - it just means that the caller has to ensure thread safety.  \n\nIn reply to: 82073552 \n. +1, this should be a private header.  Include\\CoreGraphics should only have headers that are public (and in reference platform).  \n\nIn reply to: 82067697 \n. But why? I am not seeing what this is actually addressing.  \n\nIn reply to: 82297024 \n. Since this is test code, I dont have a strong preference.  In framework code, we have been doing 1 consistently, we should probably do the same here.  (adding -dealloc is quite simple and less intrusive).\n\nIn reply to: 82303181 \n. Is this a regression? If so, we need an issue to track it. #Resolved\n. \ud83d\ude2e \n. > proper \nNot sure if this is an issue, we already have several special cases in this method.\n. This should not be required, you can send messages to nil object. #Pending\n. > defaultFont \nWe should probably create the correct font here (the archive has to have the name?).\n. \ud83d\udc4f  #Closed\n. :open_mouth: that this existed. #Closed\n. > cairo \ncan cairo.lib, freetype.lib go away? #Closed\n. Why the #if 0s? If this is because of he refactor @msft-Jeyaram is doing, we might as well remove this code and add it back as needed.  Presumably, we will still not do the context->Backing()->DestImage()->Backing()->Dosomething() anymore. #Resolved\n. Some members of this struct are initialized, some aren't.  Could we be consistent and get all defaults in place? #Resolved\n. Nit: This could just be at the context level, the indirection seems overkill. #WontFix\n. Does this demand a real implementation, given __CGContextHash below? #Resolved\n. POD types would require explicit initialization. #Resolved\n. Yes, saw that later on, on the joy of sequential commenting.\n\nIn reply to: 82917290 \n. > CGContextSetRGBFillColor \nShould the default be white on black, or does this black on black default behavior match reference platform? #ByDesign\n. > CGContextSetBlendMode \nStub since it is just UNIMPLEMENTED()? #WontFix\n. I see your other comments on this. Its okay to be broken in terms of the annotations, if you can guarantee a scrub before we merge to develop (which is still some ways out).\n\nIn reply to: 82919343 \n. > context \nConsider implementing some methods in Context.  Ex: context->SaveState(), that way we can abstract some of the derefs here. #ByDesign\n. nit: consider splitting this function into two parts: \n1. Creating command list.\n2. Drawing command list.\nEventually, we may be able to cache the commandlist when the geometry is created. #ByDesign\n. probably generating some warnings.. #Resolved\n. Probably changing with #1125? Ideally we should get the render target directly from CALayer and one day, CALayer will return a DXGI surface and we will work as is. #Resolved\n. What is going on here? Shouldn't we always be hitting the CreateLayerContentsBitmapContext32() codepath always? #Closed\n. Per offline discussion - Lets remove the #if 0 in this file\n\nIn reply to: 83068253 \n. What happened that requires the flipping of the signs here?\n. All private methods should be _, just to be aware of code that takes dependency on them.\n. > not supported \nignored may be more appropriate.\n. > remainingRect \nThis really seems wasteful and potentially incorrect.  We can remove this until it becomes essential.\n. It seems to destroy the existing path (as both _pathGeometry and _geometrySink are recreated?  Also, we are leaking the old objects.\n\nIn reply to: 83128267 \n. > __preparePathForEditing \nNit: these could be member functions of __CGPath.  A struct is a class afterall. #Resolved\n. > __CGPathInit \n\n__CGPathInit \n\nwhat about the other members of the struct?  Why not placement new the whole struct and have the default values set for the scalar types? #Resolved\n. > _CreateD2DFactoryInstance \n\n_CreateD2DFactoryInstance \n\nI recommend moving the code that follows to the ctor of the struct and do a placement new here. #Resolved\n. Ton of duplicated code here with CGPathCreateMutable.  Can we reuse code? #Resolved\n. +1.  Also our reopening for edit seems to be broken.\n\nIn reply to: 83128835 \n. Just nuke this function.  This is used elsewhere in UIKit, where this needs to be re-written using public apis (CGPathApply possibly) to get the exclusion path. #Resolved\n. I prefer the _get nomenclature as this is a singleton. #Resolved\n. D2D here is an implementation detail.  Since you are only calling public APIs, please drop th D2D prefix.  Or have an issue to go rename them later. #Resolved\n. > CGPathMoveToPoint \nWhat happens if you don't move to a point? Default at 0,0? #Resolved\n. What is our plan to track the apis that go from Interoperable/Caveat to Stubs?  We need to make these get back to those known states before merging to develop. #Closed\n. nit: clang format run amok? #Resolved\n. > ScheduleMainRunLoop \nThis was taking > 20s for internal test app.  With async, we take that cost after app activation so PLM doesn't kill us.\n. Good point.  This is always initialized in the main thread, so the _EnsureDispatcher in the other thread is unnecessary, I'll remove that.\n\nIn reply to: 83293021 \n. This should really return a singleton instance.  https://msdn.microsoft.com/en-us/library/windows/desktop/dd368034(v=vs.85).aspx says that you cannot create objects in one instance cannot be used with others, and the code as written creates a new factory instance every time. #Resolved\n. Ugh?? Lets get a bug on this, should be unrelated to what you are doing. #Resolved\n. How different do the font looks visually? #ByDesign\n. > 68, 40, 22, 23, 7, 120 \nWhat are these magic numbers? #ByDesign\n. Does it do horizontal regardless or fails? #Closed\n. Would be helpful to follow-up with the DWrite folks offline about GetDesignGlyphMetrics.  Looking at the DWrite code, !sideways should give us the vertical orientation bounding boxes.  \n\nIn reply to: 83328388 \n. Of course, lets not block this change while we sort that through.\n\nIn reply to: 83329813 \n. Assuming these are not gone for good?  Do we have an issue to track putting these back in? #Resolved\n. > dispatch \nnit: We dont need to take a dependency on dispatch for initializing static variable here, you can assign the return value of the lambda to it.   #Resolved\n. > libdispatch \nMay be worth considering not adding this dep.  I have no strong reason as to why not. #ByDesign\n. > _pathGeometry \nPlease set this to nullptr, that should release the object.  You do need to Release() because the object is allocated by DWrite, not by us. #Resolved\n. > _pathGeometry \nI am not sure this is needed.  Simply setting _pathGeometry = nullptr should be sufficient. #Resolved\n. > ComPtr \nComPtr doesnt allocate any memory on its own.  You should assign nullptr or Release() instead. #Resolved\n. > ComPtr \nPlease no.  When factory goes out of scope, the pointer will be released.  #Resolved\n. > __closePath \nWe are getting an overload of _'s now.  This is a private struct, the code will be lot clear if you lose the __s. #Resolved\n. > __closePath \nTechnically, we shouldn't be mutating the path here (which we are by calling __closepath().   #Resolved\n. > __closePath \nAnother case of side effect mutation.   #Resolved\n. Lets add some tests that test that.  The previous iteration of code wasnt initializing the points.\n\nIn reply to: 83301024 \n. static CFDictionaryRef fontToFamilyMap = _CreateFontToFamilyMap(); should do it.  Replace _CreateFontToFamilyMap() with the lambda of your choice.\n\nIn reply to: 83332883 \n. You are right.  Please consider moving this to a nested struct that can be placement new'd.\n\nIn reply to: 83348159 \n. Synced up offline:\n1. Revisit the path re-editing code validity.\n2. If the path is not \"conceptually\" mutated, then this is okay, but we need to be mindful of the side effects.  \n\nIn reply to: 83480290 \n. please use new header. #Resolved\n. Yes, it is a super low priority, and will likely result in a ton of conflicts trying to merge multi-way.  (We have 3 active branches + develop across all of winobjc).  Let us update what we can as we go about our daily business.\n\nIn reply to: 83494841 \n. > = typename T::Impl \nI don't think you need to default this (Default makes sense for parent).  You could potentially:\ntypedef Timpl _TImpl;\ntypedef Parent _Parent;\nAnd access them in T.  Probably makes sense to make the template param _ and the actual typedef not have it.   #Resolved\n. Your usage in CGContext.mm is self explanatory.  Would be awesome to have some comments here that show the usage should someone need it. #Resolved\n. Nit: Given this is used in many places, may be worth adding __CTFontScaleMetric(font, CGRect*). #Resolved\n. Caveat then? #ByDesign\n. Since we are not catching any exceptions in CT, any of these THROW_IFs will result in some some CT call throwing an exception when something fails.  Not sure if the caller expects CT apis to throw exceptions. #Resolved\n. > DWriteCreateFactory \nWe should use a static/singleton factory instead of recreating.   #ByDesign\n. nit: maybe at a later point, we should use the new CoreFoundation::CppBase #Resolved\n. Consider getting this file into develop for early usage elsewhere. #Resolved\n. CN= format has always worked in the past I can see several examples of this in our internal codebase, so this should pose any compat issues.\n\nIn reply to: 83706840 \n. > char \nnit: this could be uint8_t to avoid casts.  It is unsigned char, so the other apis should work? #Closed\n. nit: no need to initialize ComPtr with nullptr, the default constructor will do that. #Resolved\n. Please add this to a utility method in __CGPath (init for example). #Resolved\n. > Affine \nplease open an issue to fix this (or are you tracking this elsewhere?)\n #Resolved\n. I can't find where you are moving the current point in the geometry.  Ex: AddLine just takes the target point, not the starting point. #Resolved\n. > static \nstatic inline doesn't make sense in header file.  Change these to inline. #Resolved\n. nit: plenty of silly clang format changes in this file. #Resolved\n. > startLoading \nThis could potentially break something (anyone using this externally). #WontFix\n. > return \nnit: not needed. #WontFix\n. Changes to this file don't have much collateral, please be sure to validate internal apps. #Resolved\n. This warrants some explanation/comments in the code. #Resolved\n. > lineWidth \nwould we ever end up with lineWidth ~ 0? #Resolved\n. > CGCONTEXT_CHECK_NULL \nnit: RETURN_IF_CGCONTEXT_NULL(context, retval) instead?    #Resolved\n. > context \nno CHECK_NULL here? #Closed\n. > FAIL_FAST_IF_FAILED \nhttps://msdn.microsoft.com/en-us/library/windows/desktop/dd371766(v=vs.85).aspx, we should not failfast if the EndDraw command results in D2DERR_RECREATE_TARGET.  It can happen if the graphics driver stops responding, and the only way is to recreate the target and replay the commands.   #Resolved\n. This is only needed right before we move to h/w acceleration codepath (presumable, software codepath will not stop responding).  We still need to track the issue.\n\nIn reply to: 83979454 \n. > FAIL_FAST_IF_FAILED \nIs this the correct transform always?\n. > kCGInterpolationDefault \nshouldn't we return kCGInterpolationLow here?  Default should just be the \"default\" value, but when you query the interpolation mode, don't you want the specific one that is being used? #Resolved\n. > ComputeStrokeStyle \nPremature optimization: It might make sense to take the ID2D1DeviceContext here and query the factory only if you already dont have the stroke style.  Will simplify calling code, and save some cycles when you dont need to re-compute. #Resolved\n. Why are we redefining these?  You should use wil\\result.h instead. #Resolved\n. clang format gone awry? #Resolved\n. > unsigned in \nnit: BYTE is probably sufficient. #Resolved\n. > nullptr \nno need to do this.  #Resolved\n. > isMask \nThe scalar types, you do need to initialize, this probably warrants a constructor. #Resolved\n. > bitmapImageSource \nFor the sake of abstraction, consider moving these to be utility methods in impl and just forwarding them here.  #Resolved\n. Width(), Height(), etc, should be const methods. #Resolved\n. please use new header :). #Resolved\n. > . \nDoes this result in correct behavior in ref platform?\n. > CGContextCairo:: \nremove CGContextCairo:: here\n. Yes, this should work in all device contexts.\n\nIn reply to: 84155655 \n. > SetDpi \nYou should move this SetDpi to the SetScale method as that is where it technically belongs (and you dont have to set the DPI every time you draw).\n. You could skip the initial CGAffineTransformConcat since transform is identity. #Resolved\n. Or rather: CGAffineTransform transform = CGAffineTransformMake(...);\n\nIn reply to: 84172077 \n. #1194 as this is not immediately critical.  \n\nIn reply to: 84196384 \n. While you are at it, could you delete this TODO?  This doesnt apply anymore.\n. could you merge rebase?  Brian's changes are now in CGD2D #Resolved\n. I dont think any of this should be needed.  This method should just wrap the _CGImageGetImageFromData. #Resolved\n. Issue tracking this TODO? #Resolved\n. This chaining is a neat trick, but should be avoided in favor of clarity.  There is nothing wrong with multiple imageRef-> calls here. #ByDesign\n. Comment doesn't match implementation.  If this is a future planned work, please open an issue to track this. #Resolved\n. > TODO: (The below code is not really needed.) \nWic should detect the image types, so lets get rid of this code given your TODO. #Resolved\n. > width * 4 \n\nwidth * 4 \n\nSome explanation will help.  Each pixel maynot always be 4 bytes? #Resolved\n. can you short circuit all of the conversion if the requested representation is same as current representation? #Closed\n. Why CMYK format?  #Resolved\n. This requires a rebase?\n. @DHowett-MSFT other than arranging the file to be more logical, are there real code changes that need to be reviewed?\n. I approve this pull request.\n. ascent-descent because descent is negative, right?  Would be useful to add a note here for future.\n. Is this comment still relevant? #WontFix\n. > self \nplease use a different name than self, it has special meaning and can get confusing. #Resolved\n. > RETURN_NULL_IF(!self) \nThis is actually an overkill and unnecessary.  If self is null, we should crash.  You can send message to nil object, but can't access ivars of nil objects.  failing fast by crashing will help catch issues sooner. #ByDesign\n. This seems like an overkill, is this for ref platform compat? #ByDesign\n. not needed, as the called methods do a lot of checking on this. #ByDesign\n. nit: tabs. #Resolved\n. > geRef imageRef = __CGImage::CreateInstance(); \nnit: you can create this after the CreateBitpmapFromSource succeeded. #Resolved\n. > Native platform suppo \ncould you elaborate this comment?  We are going from fail fast to return NULL, why? #Resolved\n. why not CreateDecoderFromStream here as well? #WontFix\n. > != \nIsEqualGUID() instead.   #Resolved\n. What are the circumstances?  If the creation indeed failed, we shouldn't typically get here.  \n\nIn reply to: 84755738 \n. This would break for a font with a space in its name - \"Times New Roman\", \"Courier New\" #ByDesign\n. IwMalloc is similar to malloc and not new, so the array operator on delete is not an issue here (it calls IwFree)\n\nIn reply to: 84955480 \n. > 2 \nThis might sporadically fail on the build server.\n. > MSFT \nWinOBJC\n. Drop the corporation here. #Closed\n. Yes, please remove TODO.\n\nIn reply to: 84801640 \n. short circuit for count 0? #Closed\n. > {}; \n{} are overkill for scalar types in this case.. #WontFix\n. it would help to move this to a private function, so the init method isn't doing too many things..\n. Why not font fontFamilyName?  We should be returning the right family name there. \n. The question I am really asking is, why aren't we fixing that method?\n. I don't know if it is \"correct\" if it works with one framework and not the other.  If you really want to keep this separate go with a UIFont private property that rest of UIKit can use where it integrates with xaml.\nThe correct fix IMO would be for coretext to also handle font family names like xaml does (xaml is also built on dwrite), but that would likely be bigger change than what we want to do at this point.\n. I second this.\n. We have to be careful with FAIL_FAST.  Library code cannot FAIL_FAST (this is why they have return values).  For example, if shadow is not available, it may not be the end of the world as far as the app is concerned.\n\nIn reply to: 85433778 \n. What does the rest of the code test?  #Resolved\n. simply revert all changes in this file?\n. descent missing here intentionally?\n. These files also need to be added to xcodeproject and should compile and run on reference platform.\n. these functions can be deleted.\n. I would change this text to read what the expected test result should be (changing rotate should cause the text to rotate in which direction?).\n. left alignment here to easily see the pivot point?\n. I tend to agree with @msft-Jeyaram and @bbowman on this.  We should use setters where applicable in cases such as these.  @DHowett-MSFT What are the cases where this is better? \n. The right way to keep _impl encapsulated and still do this would be to do _impl.ClosePath() here and implement the rest of the code in the impl class.  You haven't really helped encapsulation by doing what you have now - just the variable name.\n. I agree this is getting out of control because it is not clear what pattern we are using here.  Although the impl struct is to work around inability to add things directly to outer struct, the entire thing fits into the proxy pattern.  From that perspective, forwarding all calls to the impl makes a lot of sense.  \nThe reason this feels like getting out of hand is because we are not encapsulating Impl the right way.  There is nothing wrong in writing plain old c code and access the struct members directly, but given we are in C++ land, we might as well be better about it.\n. We were allocating 3 bytes per pixel and writing into 4 essentially.\n. Nit: This really should be CGContextDrawGlyphRun as this isn't a public API.  There are a few others that fall into this bucket, so if you want to open an issue and fix those separately (maybe @DHowett-MSFT, @MSFTFox or @msft-Jeyaram could fix it with the D2D work?) \n. nit: typo: // Trying to access attributes without any text ~~with~~ _will throw an error\n. since we are adding these private apis for the sake of passing them along to xaml, we should make just one function that gets all this information.   #WontFix\n. Please no, THROW_IF_FAILED() is marginally better.  FAIL_FAST is essentially abort, and as framework we should seldom be using it.  And in other places too, per our offline discussion.\n. Thats not a reasonable default for truncation.  LineBreakByClipping is more palatable instead.\n. Nit: would be helpful to document what the void* is for an innocent future engineer. #Resolved\n. nit: these virtual destructors could be pure virtual instead. #Resolved\n. nit: some of these methods could be const.\n. The order of the concat matters.  \"additional transform\" seems to indicate that it should be the second param?\n. Shouldn't these FAIL_FAST_IF_FAILED be RETURN_IF_FAILED() instead?  Or is your plan to do it once at some point?\n. \ud83d\udee9 \n. You may want to keep this under win32 target for test portability for compat testing.\n. Transform is stored by pointer, thereby requiring the caller manages its lifetime.  could you make a copy here instead, so this class can be free-standing? #Resolved\n. Are we sure these fonts exist on the build server/phone? #ByDesign\n. The comments until this point are immensely useful in the context of the implementation code as well, would help to duplicate it there. #Resolved\n. E_UNEXPECTED is probably more appropriate given there are no args to this method. #Resolved\n. It is essentially saying that the object wasn't expecting the call at this point.  E_FAIL is scarier. #Resolved\n. Not sure what is happening in several of these lines, is it just a clang format change? #Pending\n. why dymanic_cast<> here? Are these cases where we will have other type of image sources?  If not, static_cast<> would suffice. #Resolved\n. is pasteboard working after your change?  We talked about it offline - if it is broken, lets open an issue. #Resolved\n. I would simply call it stride, as that is the terminology used elsewhere. #ByDesign\n. set it to NULL to help catch potential double frees. #Resolved\n. you can delete null, so replace with delete m_texture; m_texture=nullptr; #Resolved\n. static_cast<> #Resolved\n. Thanks for unblocking us in the interim. #ByDesign\n. BOOL is not bool on all platforms.  There are other things that are broken here (such as usage of TRUE/FALSE) instead of (YES/NO), which are rather inconsequential but incorrect.  We should not be changing BOOL to bool in these cases.\n. Thanks for adding these.  Could you please add the tests for these methods in the unit test file so we know these work and won't regress in the future?\n. Fair enough.  My comment on BOOL vs bool specifically applies to the params and return values in public APIs.\n. Could we instead document the CG bitmap formats that we can indeed support, we have already done the mapping and calling it out here will make it easier for anyone using the code.  Also, if we don't support the specified format, please return null instead of silently picking a different format.   #Resolved\n. nit: Could you not pass &state.clippingGeometry here?\n. Its a shame that we will always do this conversion even if the geometry is in the right fill mode.  Since we know our defaults, shouldn't we only do the conversion if the mode is different?\n. > DWriteCreateFactory \nWe should not create a factory every time we need a dwrite object.  Is there a reason we are doing this? #ByDesign\n. > BOOL \nthis should be bool, or should be assigned a NO. #Resolved\n. Font enumeration is still expensive, Lets cover this as part of #1374. https://github.com/Microsoft/WinObjC/issues/1374 \n\nIn reply to: 87900133 \n. Yes, shouty FALSE then.\n\nIn reply to: 87901837 \n. Not DWrite factories.  These aren't same as winrt activation objects. https://msdn.microsoft.com/en-us/library/windows/desktop/dd368040(v=vs.85).aspx. This function creates a DirectWrite factory object that is used for subsequent creation of individual DirectWrite objects. DirectWrite factory contains internal state data such as font loader registration and cached font data. In most cases it is recommended you use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state data, and thereby reduce memory usage. However, there are cases when it is desirable to reduce the impact of a component, such as a plug-in from an untrusted source, on the rest of the process, by sandboxing and isolating it from the rest of the process components. In such cases, it is recommended you use an isolated factory for the sandboxed component. \n\nIn reply to: 87901335 \n. @msft-Jeyaram this is not what I meant.  We should specify what CG bitmap formats are supported, not what WicBitmap formats.  Ex: 32bppPBGRA == ARGB and so on.\n. > Window \nNot sure this comment is clear.  In theory we should be able to use stringByDeletingLastPathComponent on windows just as well.   #Resolved\n. why copy? You only need the \"bytes\" so, why not keep a reference to dataProvider and get \"bytes\"? #ByDesign\n. nit: you should ignore this failure. #Resolved\n. > RETURN_IF_FAILED \nYou have to UnRegisterFontFileLoader in cases where CreateCustomFontFileReference or Analyze fail, so you may need to revisit your RegisterFontFileLoader() (instead use if SUCCEEDED()) there to do the other things.   #Resolved\n. > CGContextIsPointInPath \n_CGContextIsPointInPath #WontFix\n. Could we make the similar changes to GLKMatrix2, etc in this file to be consistent?\n. Please see my earlier comment on BOOL vs bool.  These should go back to BOOL, as bool wouldn't work in pure objc on winobjc.  BOOL and bool are same on some platforms, not all.  Also the return values should be YES/NO (but I suppose we were already broken).\n. it may fix the crash, but is this a regression from develop before we moved to core text.\n. okay.  If we have sample code that is using it, we should remove it.\n\nIn reply to: 88520384 \n. The default pixel format that we pick must match the one created by the xaml texture backed context, which may be PRGBA since we set it to ColorABGR. #Pending\n #Resolved. Leave this a Stub for now. #Closed. This appears to be private method, missing ? #Resolved. We really shouldnt be initializing globals with CG graphics method.  You can use this inside a static function if you really need this static instance. #Resolved. Please create an issue for this.\n. Any reason why this isnt a copy?\n\nIn reply to: 88586100 \n. nit: this method should be const.. This belongs in cpputils.h\n. > _getInvertedCurrentPointOfPath \nSince this is used in all the methods, a potential optimization would be to pre-compute the inverted current point or at least the invert transform of the path.\n. the intent of this method is not clear from its name.\n. > ComPtr \npass geometry by reference.\n. > SimplifyGeometryToPathWithTransformation \nThis name is very confusing for me (and I am easily confused).  Essentially, you are constructing / adding to the current path using the geometry, so you might simply call this \"AddGeometryToPathWithTransform\".\n. The vodoo math in this function needs to be documented here, or in the design document or both.\n. The entire D2D section is very similar the one used in the function above.  it would be good to have this in a utility function and call it in both places.\n. A lot of this code is duplicated.  I suggest making a utility function to which you can pass a lambda to draw the figure and then simplify it into the path.\n. Passing NULL here should work right?  We shouldn't have to change these files if we are not doing real transforms here.\n. revisit passing identity transforms here and other places.\n. This is not new change, but we are currently 0.0.2 according to build\\winobjc.version.\n. There are several places in this file where BOOL has been changed to bool.  This will break any app using it either in a .c file or a .m file that is not compiled as objc++.  The apple documentation here is inconsistent.  Is there a reason you are making all these changes (does it fix any compilation errors in your code?). This function doesn't have a test, could you please add one. Please add tests for this method.. Please add tests for GLKMatrix4MultiplyAndProjectVector3. Please add tests.. Please add tests.. I think the previous version was more readable.  Are you making this change to fix a bug?  If so, please add a test for this method.  . Please add a test.. why is this removed?. >RETURN_HR_IF \nYou could have an app that never registers a user created font collection.  it should not get E_INVALIDARG.  It should be a HRESULT_FROM_WIN32(ERROR_NOT_FOUND). AFAIK, This is not in the coding conventions.  typedefs are okay (we use them in other places too).\n\nIn reply to: 89407318 . Yes.  This can be a static inside a method and that wont be invoked during dll load time.  There are very limited things you can do in static initialization due to the loader locks. https://msdn.microsoft.com/en-us/library/windows/desktop/dn633971(v=vs.85).aspx#general_best_practices\n\nIn reply to: 89407585 . >__UserCreatedFontCollection \nYou will leak font collection if you already had one created?. by that I mean GetLastTransform() const {}\n\nIn reply to: 88733190 . >SimplifyGeometryToPathWithTransformation \nI suggest renaming this function and hide the implementation details and instead call out what it does to the path.  In this case, you are adding a gemetry to path using transform, so it should be AddGeometryToPathWithTransformation().  The fact that you are using D2D1Geometry.simplify is merely an implementation detail.. This function should instead be in the cpputils header?. >startPoint \nnit: in general, we want input params before the out params, which means in this case startPoint should be the second param not the last.. Please add comments on the math in this function, perhaps a link to the math solution to this problem, etc.. \ud83d\ude2e  #Resolved. nit: not a good use of auto when the return type is known.. If the function has a return value, the appropriate return value should be used (in this case, NULL return) on failure.  CG is quite different in that a number of APIs are void, so any catastrophic failure will result in fail_fast \n\nIn reply to: 90098075 . That's unfortunate - its not very useful if your code doesn't compile.  Apologies for sending you down that path.  Looking at the file, it looks like it was already a mix of bool and BOOL and it indeed does compile fine even with some private code we have internally.  So please go ahead and change it back to bool.  I owe you big time.\n\nIn reply to: 90193755 . I think this should be interoperable.  It would be a caveat if ref plat created mutable copy and we didn't.   #Resolved. could be factored into a private method. This could be a static as well, if we don't concern ourselves with locale changing when app is running. #Pending. More importantly, is this really that big a perf impact (constructing the std::wstring object? \n\nIn reply to: 92735069 . >question \nFor one thing, this would fall apart for RTL languages? #ByDesign. Nit: these should already be initialized, so no need to set to nullptr.. Not a good use of auto when knowing the type can add clarity.  https://www.quora.com/When-should-you-use-the-auto-keyword-in-C++. This would be perf issue, but the good news is that the clip to mask with multiple masks is not typical scenario.. Do we leak a reference here? the assignment operator will addref, and if std::move() will appropriately release, we aren't gaining much with the std::move? . It would be more performant to do this on a DWORD instead of on single chars.. Lets vet this approach with the D2D experts.. Is _CGImageCovertMaskToCompatibleWICBitmap more appropriate name?. \ud83d\ude2e  #Closed. instead of ++j here, xOffBytes += SourceDataStride?  Also sourceOffset = stride, and stride += stride instead of i?  multiplications will always get you on perf.. nit: bitmapPixelFormat might be more accurate name (i suppose outputPixelFormat means the pixel format output by the bitmap render target.  Okay with current name though. #WontFix. \ud83d\ude2e we went from not supporting gs contexts to supporting them. \ud83c\udf89  #Resolved. nit: this->bitmapInterpolationMode to make it clear. #Resolved. nit: GetInterpolationModeForCGImage(image) const #Resolved. I think I saw the same block of code (with identical comments) for transforms in @DHowett-MSFT's PR.  can we make a utility function out of this? . The interpolation mode was added as a member utility in another PR.. colorComponents.  Also CGFloat (could be different from float) #Resolved. Not sure.  It wasn't clear to me, hence the comment :).. Yes, i think it is needed for the module map.\n\nIn reply to: 94506490 . >UniChar buf[bufferSize] \nmove this buffer outside the for loop.. >128 \nconsider making this bigger (512?).  . >ref \nnit: ref is a special word in some languages and can confuse some of us, could we rename this?. >idretain \nnit: Could change this to StrongId<> while we are at it.  (granted, it is a typedef) #Resolved. since CIImage is immutable this could be a singleton. #Resolved. Rather than adding a new function, you can do this in stringByEvaluatingJavaScriptFromString.\n. ah, yes.  Inexplicably, I thought this function was \"waiting\" for the eval.  It isn't. Apologies for the false flag.\n\nIn reply to: 95208519 . The rest of the code in the file does exactly that.  Went with when in Rome rule here :(.  \n\nIn reply to: 95231289 . >E:\\island\\github\\henryfox\\WinObjC \nPlease be sure to import using -relativepath, or replace with .........  Here and elsewhere. #Resolved. Not sure that we want a situation such as \"filename.pdf.txt\", that is adding a new extension if one already exists.  Is this expected? #ByDesign. Annotations don't make sense here, these are private functions. #Closed. >currentProgressStack->top() \nDoesn't this expression evaluate to NSProgress currentProgress? It might make sense to cache it and use it in this function? #Resolved. >pendingUnitCountToAssign \ngiven the other conditionals, this is basically self.pendingUnitCountToAssign?. >ratio \n\nratio \n\nnit: instead of two divisions, you can inline ratio here, resulting in one division. #ByDesign. >assert \nshould nuke assert() here? #WontFix. ugh.  why can't this list be FIFO instead? #Resolved. forgot to remove this TODO. #Resolved. suggest moving these variables to the top of this class, would make it easier to read the rest of the code.  . nit: could be const method. #WontFix. >MaxConcurrentOperationCount() \nnit: could be const method.. >_thread \nwhy isn't this set to nil when _workThread is done?  that seems more appropriate. #Resolved. Since these caveats are already present in CG, we don't need to specify it again here.  I would mark these as interoperable with notes that we support all blend modes that CG supports.  . How are these methods tested?. the auto release pools that are created after this must instead be created first.  In fact, the pools must be created before the [NSThread] line.. >CFIndex \nWhat bug are we fixing here?  Isn't this simply about fixing the tests? . >TComparator \nTComparator=PixelByPixelImageComparatorto simplify things?. >Mode \nNot the right way to do this.  You want comparison traits, which does this.  This would be ComparisonTraits::ComputeDelta() where this entire work will be done.  . This block of code is best turned into a macro COLLECTION_THROW_IF_NULL(). You need two of these: \noperator const TWrapped () const \noperator TWrapped ()\nNote that the version that returns non-const pointer should not be const.. can't be const, value is changing.. Other methods too.... That is entirely at odds with std::unique_ptr, etc, which are more correct.  \n\nIn reply to: 95920587 . Thinking some more about this, const correctness applies only to C++.  That explains why WRL is also at odds with std::unique_ptr.  Clearing my review status.. Where are these two used, and what is their purpose? #Resolved. This should really go into CALayer display, which displays a layer for one frame.   #Resolved. Also into UIGraphicsPushContext() and PopContext().   #Resolved. Fair enough.  We should still do this in CALayer display.   #Resolved. I dont think we can ship this file.. Wrong issue number here.  Why the TODO, why not add this to autorelease pool with this fix?. Okay, so this is a caller released object that was extra released.. Nit: magic number.. Yes. Given our reference images are 512x256, this is ~1.5%.  The bigger concern is that we are not accounting for cases such as lines being completely at a different offset, etc.  We need a more \"fuzzy\" proximity comparison than a pixel count.  But that is an exercise for a different time.\n\nIn reply to: 97449301 . Can safely remove comment about cairo now. #Resolved. nit: remove commented out line.  Also, the whole thing could be CGRect bounds = self.bounds, or even just [self drawRect:self.bounds] since it is not being reused. #WontFix. These names are not ideal - they are vague (what does escaping the stack mean), and reveal the implementation detail (there is a stack).  The later is not a big deal, but essentially what you doing here is ability to deal with a layer, so it might make sense to just call this _CGContextForceEndDraw() and _CGContextForceBeginDraw(), or _CGContextBeginLayerDraw/EndLayerDraw(). #WontFix. remove commented code?  also looks like there is a missing TODO issue, lets create it now. #WontFix. The standardization we agreed on was to capture exceptions at the API boundary (which is usually the API entry point).  Failing fast in the leaf nodes will lead to code that just arbitrarily quits with no possible recovery.  Particularly when drawing to hardware device contexts, EndDraw() can fail, so we need to handle this with care.  See #1194.  #Pending. Bummer given other places have this too.  I've opened #1796 to track other instances of this.. This will probably make @bbowman very unhappy.. >12 \nIs the version number here still correct?. Grayscale + 8bpp.  Our support for grayscale colorspace for > 8bpp doesn't exist.. seems unnecessary.. Please open a tracking issue to do this work. #Resolved. @DHowett-MSFT, do we have an issue tracking this TODO?  #Resolved. I think BeginDrawIfNeeded(), EndDrawIfNeeded() are more descriptive than EscapeStack.  Won't fix is okay. #WontFix. The recommendation is wrong, we agreed not to FAIL_FAST at arbitrary points in the CG code and instead throw.  Any exceptions must be caught at the \"C\" entry point, where we decide either to return an error code/null or fail-fast if it is void.  \n\nIn reply to: 97695158 . Although this is only one step away from the entry point.  \n\nIn reply to: 97696710 . I am going to approve this PR given that this is only one step away from the entry point.  \n\nIn reply to: 97696881 . nit: please change this to switch/case to make it more readable. #Resolved. _CGPathGetExpectedPointCountForType? #Resolved. recommend stashing this in a local variable for readability. (CGPathElementMatch)pathElements #Resolved. I suppose this is the new code in this vsix (or changed?).  This will require some eyes from the quality folks... subtle.. Will this have the same issue as indicated in #1613? . This whole addition seems to be accidentally copied?. Function not used in file - dead code?. How did these tests run on UI thread in the past?. nit:fix copyright.. Although somewhat disappointing.. nit: This variable name no longer makes sense.. _CRT_SECURE_NO_WARNINGS: gasp.  we shouldn't have that* many warnings we want to suppress?. \ud83d\ude2e how did this work? #Resolved. Your real problem is the XamlCreateButton api design.  If it returned HRESULT and an out pointer, you have to try hard to leak it.  With the current model, it is easy to mess it up. #Resolved. I am not sure I understand how this is correct.  alloc init should add a reference and currentThread retain should add one?  . Given that this doesnt address the format conversion issues, i'd rather not fix this, and have an open issue to put in the real fix, which indeed provides the pixels in the proper expected format.   #Resolved. Synced up offline.  The issue is that the original code assumed UIImage implementation details, this change looks at the actual format instead of making assumptions.  \n\nIn reply to: 98587425 . nit: please throw a new line at the end of the line. #Pending. I am not sure if this is how we want it.  For draw tests, our plan is to document the differences with reference platform and then replace the reference images with the baseline winobjc images.  This way, the tests will catch future regressions.  @DHowett-MSFT? #Pending. In other files too.   #Pending. On failure, the transform is not restored, here and below.  I am not sure how relevant that is. #Pending. This is the other part. #Pending. Should compute in micro seconds if not nano seconds. . I'd like to also add tests that time the \"create frame, line, etc\" to this mix.. nit: CTFrameDrawYuge. throw this into a static function and reuse?. Yes, using UTF8.. Yes.  It just means that it was an absolute path.  . in-place modification was the goal.. Wrong comment :).  I had intended to go backwards, but realized it was far more effective to go forward.. Same as above :).. No.  continue also goes to ++.  . std::list is bidirectional.  Not changing this to vector as sometime in the future when we do properly support > MAX_PATH, there will be several elements here.  And leading '.' is pretty common.  Since the list is all constructed at the same time, locality of reference should not be a problem.  \n. That is covered elsewhere in NSString (existing) tests.. Unfortunately, i need it to be case insensitive and == isn't.. The right thing would be to replace all the Ebr methods that take UTF-8 encoded strings to take UTF-16 encoded strings, but that would be a much larger change (many callers).  However, given that EbrGet/SetWritableFolder is not that commonly used, I'll upgrade that pair to UTF16.. possibly, but this demonstrates the problem adequately.. nit: the private functions should be _set per coding conventions.. Good find and somewhat worrisome.  Yes, with NSProgress.mm, there is a leak.  s_currentProgressStack could become a thread local static inside _getProgressStackForCurrentThread much like you have done here.. >CTFontGetGlyphsForCharacters \nmake one more test that benchmarks this api?. We dont need this to run in reference platform, it that will make things easy w.r.t future integration to TAEF.. could get the same result by capturing factory reference into the lambda.. I could have just changed this function to use NSString stringWithUTF8String, but there is no need for back and forth conversions, so just roll with UTF16.. These three lines could be collapsed into thread_local static std::shared_ptr> tlsCurrentProgressStack = std::make_shared>(). Not an actual method. . @DHowett-MSFT yes, and in fact, we do get the value from a HSTRING.  But this being a temp folder, it is going to be copied when added to any file path.. ? the first one is required because starboard is removed from the application layer.  The second is rather bizarre, but NSPathUtilties depends on it.  Sure, NSPathUtiltities can do this instead.  . @bbowman any re-write on this should be considered through #1904. what we have is not ideal.. nit: use numEquals. This change does bring in the TAEF nupkg.. with the single line code, the comment is not necessary anymore (in the past, this used to be several lines :)). _IwGetWritablePath() won't work here?. Where would one get wttlog.dll?. Just remove the TODO.  If we didn't need it after so long, we don't really need it :). Your choice, it was a nit from my side. . I question a separate value for default, shouldn't it be one of the two real options?. while we are at it, it should be ShouldAntialias() const. There is no direct mapping between how Mac does subpixel positioning and Dwrite does it.  From the \"intention\" standpoint, subpixel positioning should map to clear type.. please update annotations, these are no longer stubs.. drawMode is a flag based on the next line in this method, so you'll need to do the same check here as below.. Not sure if I like this.  Since the cases where it is \"false\" you are creating a geometry just before calling DrawGeometry() can you do the conversion there?  More fundamentally, why do we need this conversion for built-in geometry like Rectangle, seems wasteful?. TODO is obsolete now. #Resolved. Nit: can you just do this in the lambda? will simplify the code. #ByDesign. Yes.  also, it null cannot happen here, just the code below should fail_fast it for you \ud83d\ude04  #Resolved. Do we need to verify so many times that they are getting clipped (with different colors? ) \ud83d\ude38  #Resolved. >kCGPathEOFill \naha! Should always be D2D1_FILL_MODE_ALTERNATE?. How does this work?  We should not be using alphafirst formats since that is not natively supported by d2d.  . nit: could also be static. Given that we don't support 16 bit contexts, should we failfast or early error here?  . \ud83d\ude2e . Nit: this should be in the gstate as a clear brush, we are likely creating too many brushes. #Resolved. This will result in an instance of this method for every size.  could we just use _countof() where size is needed in the previous version of this?. Not a stub anymore.. Caveat instead.. I think they should all be caveats :). I don't see any issue with that.  It is standard practice to pass a buffer and a length.  Now you are constrained to passing an array instead.  . Could we go ahead and fix this?  #Resolved. a.  We should update the script in a separate change. \nb.  This will merge to develop when packaging branch merges (or we cherry-pick this to develop if needed).  \nb ==> a is critical. \n\nIn reply to: 103279187 . Comment is now invalid.. This .tmp file should be removed (from clang format?) #Resolved. Nit: I would add a _CGImageGetImageFromDataProvider() instead of these two lines. #Resolved. switch missing default.  Also could use an if here instead.  Other errors are likely catastrophic with no way to recover.. We haven't yet completed the run-loop migration to use CF.  Any additional testing can be covered there.. other than the ICE, there is really no need to use __builtin_expect to optimize here - this is not a hot code path :).. I like standardizing on WinOBJC :). Fail_fast here instead.  It would give us enough to up the number of retries. Another thing to note is that we should probably have another counter that falls back to warp if the particular device fails many times.  That is, if each frame takes 2 attempts to draw, we are probably much better off using warp.  This of course isn't necessary until we move to h/w acceleration.. I promise I removed the comment above before submitting my review.  :/. Does woccatalog have tests for fillRule and lineCap?. To clarify question above - lets add the variation to woccatalog test to demonstrate this works.. According to the docs - it is not the \"first call\", rather the existence of an open sub path - that should be the mechanism used here.. Please remove the TODO's in this file while you are at it. EDIT: in this function that is..  _CGImageCreateFromFileWithFormat(name, format) and export it from CG?  #Resolved. no macro here?. CG has 600+ apis :). What belongs there has to belong there... #Resolved. Would we not need to update the counter even if it is \"force drawn\"? #Resolved. The way this is written: if PopEndDraw failed due to some reason (device lost), we will leave the begin/end draw commands out of balance.   #ByDesign. >threadPriority \ncan we add support for this as well?. >_acquirePermissionToAddToQueue \nsomething about this name doesn't fit right with me.  We are not requesting any permissions here, perhaps just make this an atomic property InQueue and set it directly.. >QOS_CLASS_BACKGROUND \nCould we not introduce a \"deprecated\" warning in our new code if avoidable.. why the space before ::?. Dangerous equality comparison on float.  #Resolved. !(options & kCGGradientDrawsAfterEndLocation) && (gradientCount>1 || radialGradient)? #Resolved. Some comments on why radial gradient is special would be nice.  It may even be easier to read to separate these in to two different functions - one for radial gradient and one for linear. #Resolved. function is not @Status Stub anymore #Resolved. Doesn't this need to go through the new error handling policies?  Thats is, we don't fail fast for enhanced error handling? #ByDesign. I second the return const reference.  Someone wanting to keep it can assign it to a appropriately scoped variable causing a copy at that time.  There is no reason to return a copy here.\n\nIn reply to: 106473302 . >GetStopLocations \nreturn const reference. #Resolved. Please fix the sad formatting before merge.\n\nIn reply to: 107024911 . >14 \nis this by design?. >machines \nnot sure what this comment is implying :). >[self length] > 0L \n0 length indexpath is not serialized then?. According to documentation, init is the designated initializer, which means all other initializers must call it and this should be the one calling super.  This helps with subclassing.\n\nIn reply to: 107547799 . >factory1 \nfactory.As(&factory1)? also no need for fail fasts here, we will crash right afterwards anyway. #Resolved. >_CTFontGetCompatibleFamilyName \nwhy the two sets of apis? why not let this go directly through CG instead (just like before?). All this trouble to trace a warning? %@ won't work?. Might want to rename this _DWriteGetXAMLCompatibleFamilyName. All of these append calls can be collapsed into one CFStringAppendFormatAndArguments(). Get rid of this and call the _DWrite version in UIKit. Or insert XAML between Get and Compatible :). Did these just sneak in from a different change? #WontFix. never mind, found what happened here.\n\nIn reply to: 107792278 . >autorelease \nnit: why not add this directly in the creation spot?. In the other places too\n\nIn reply to: 107799430 . Our threads have autorelease pools setup.  This is something we need to watchout for any callbacks that happen in a system threadpool thread.  Has to be case-by-case?. Ugh, it is an NSObject protocol method, we do need to implement it :).  \n\nIn reply to: 107951981 . There is also a tests\\testapps\\kvoperf, which is probably obsolete now if we move all those tests here.. >efficiently \noh the irony!. NSArray now has the helper function to add observers for every object in the arraay, so you can cut this loop.. That app is not used at all (it is a manual tests).  When it was written, we didn't have the benchmark tests.  It should be safe to remove once all the pieces of it are salvaged.  \n\nIn reply to: 108012483 . No changes other than formatting in this file?. The multiple observer scenario is important.  We do see some improvement there so thats good to see.\n\nIn reply to: 108014282 . optimizer should deal with this.\n\nIn reply to: 108012500 . interestingly, even inserting at end performed poorly - likely due to different encodings (UTF8 vs UniChar).  Inserting in the middle of the string was 10x faster, but still terrible.  Hence this raw buffer manipulation.\n\nIn reply to: 108017657 . What is the safety concern here? \n\nIn reply to: 108017729 . I rewrote that part using std::wstring, it was still 3x slower than this version.  Since this is not overly complicated, I am leaving in the better performing code.  . >isKindOfClass \nWe can't use the short path for custom classes (such as NSStringOnHStting).  Why is this removed?. >strcat_s \nstrcpy instead since you have already computed the offset.. >OBJC_ASSOCIATION_RETAIN \nwhy this subtle change here?. >valueInfluencingKeys \ncould be nil. messages to nil object should be okay but i would double check this on ARM (we have had funky issues there but not with integral type rets).. Yes it would.  Looking at CFStringCompareWithOptions, it can handle both non CF NSStrings as well as CFStrings, so this should be okay.  Still confused about the original intent here :)\n\nIn reply to: 108258325 . Do we need to change vsimporter to add this automagically?. >STDMETHOD_ \nThis doesnt have to be STDMETHOD_() because this is not part of the interface ID2D1GeometrySink. >m_hasGeometryStarted \nsome comments on what these variables are tracking will be helpful.. _EndFigure() is already doing this check, so you can remove this.. >AddArc \nStill need this image elsewhere?. >FullCircles \nSBResourceCopy this guy?. >ignore \nFrom the name of the method, and the variable you are setting, it looks like m_allowsFinalFigureCall = !ignore?  Also, will pick a different name for the variable.. These methods that are not part of the ID2D1 geometry sink should not be STDMETHOD (rather they dont have to be). >GH \nwhat does this TODO refer to? #Resolved. Lets remove the code in #if 0. #Resolved. nit: while we are at this, could this be StrongId<>? #Resolved. Nit: The name sounds like a verb.  Adding a Get will clarify the intent.   #Resolved. nit: could return const ref. #Resolved. nit: GetPatternTransform() const #Resolved. we can get rid of the #ifdef linux code here.. want to add a negative test here trying to read folder2?. Nit: Unknown constant color name should be what we trace here, also not through UNIMPLEMENTED macros, since we support all documented names.. >nameReceivers \nat this point, _observers cannot contain \"name\" notifications, correct? might be worth asserting here.. nit:  code block repeated once the nameReceivers are found in the if and else part.. This was originally done by special request. \ud83d\ude3f  #ByDesign. >ret \ncollapse the declaration and assignment into initialization? there is no need to declare and then assign. #ByDesign. >Corporation \nCopyright (C) Microsoft. All rights reserved. (drop Corporation).. >[frame->_lines count] \nThese objc calls can already be changed to CFCalls due to bridging so you dont have to touch this again when you fix CTLines #ByDesign. >STUB_PROPERTY \nwhile we are here, can we implement this?  this should be easy.... Is there a real scenario where this becomes important?  #ByDesign. Do we want to \"fix\" these strings if they are not the right values already?. The header file must be updated too, to remove the STUB_ macros (and add NOTINPLAN_ macros where applicable.. Ugh I can't see things today, my bad :(. This is going to suck when it comes to perf.   #Resolved. Given that there is exactly one place where this is used (and was used in the past), I don't like that we are doing this.  Why not have the helper in CT and just use it there? #ByDesign. Lets not do this.  the _reverseString was added because some other code was using it.  Given that there is only one instance where _reverseString was used, there is no need to go overboard here.  \n\nIn reply to: 110781327 . also, what is wrong with good old fashioned strrev variants?\n\nIn reply to: 110782273 . I don't see how many of these methods can be interoperable  Caveat them please.. @msft-Jeyaram good question.  The answer is - very likely yes.  At least CGContextGetPathCurrentPoint for example - but it is a very thin wrapper around a different API - CGPathGetCurrentPoint.. We don't need to test every font with every API.  We use DWrite under the covers, and have to trust it.  So, just remove Segoe UI from this list.  The fonts could sometimes be different on the phone either to adjust for the form factor or size or both.  \n\nIn reply to: 112273877 . missed the comment from code flow. Just remove Segoe UI tests.  We don't do anything fancy with the fonts themselves - just use the DWrite apis.  . ugh.  I am pretty sure this works, but why not use strtoll here?. >(pScan >= '0') && (pScan <= '9' \nisdigit?. >_charactersToBeSkipped \nThis method is going to be particularly slow.  . >scanHexDouble \ncould sscanf_s be used for the heavylifting here?  . super nit: this could really be c++ bool.. also, scanner instead of self?. nit: you don't need a locale function here, you could use lambda to bind the locale when you need it (at the calling site).  . nit: lambdas to bind base when needed? . nit: this could go inside the initializer part for the for statement. the method uses string.length, and [string length], would be good to stick to one convention.  also, may even make sense to stick it into a constant.. instead of the goto here, please set a flag (doneScanningDouble) and outside the switch, check for the flag and break out of the for loop.  We don't like goto's for a reason and this is easy to not use it here.. nit, can be for initializer.. nit: ch or even c is more appropriate than unicode.. you could extract the value of the current character first for digits and hex first and then do the scannedPeriod check.  Better yet, you could have a multiplier value which is 16 before you scan period and 1/16 after you scannedPeriod, then you don't need the if checks at all.  also, isdigit instead of actual comparison here?\n. If these are meant to be UTF16 unichars, then need L'-' etc in front of the chars.  Not sure if that is automatic. . Understood.  You can ignore any and all the nit comments.. nit: make git happy and insert new line at end.. coding conventions dictate \nstruct smolStruct {\n    char a;\n    char b;\n}; . Why not? You've been known to do that before :)\n\nIn reply to: 113270799 . _components uninitialized. #Resolved. nit: when you are returning Ref, it is not const, so the method can't be const. . This is extraneous check.  The switch statement below will suffice. #Resolved. eh? do we need all this stuff?. brownie points (and actual brownies) if you implement the coding stubs.. these statics should be strong ids. #Resolved. gasp: DWORD.. op.ErrorCode() is however, known type enum, which is int.  . \ud83d\ude2e . nit: Some men see things as they are and ask why.  I dreams things that never were and ask why not.. %S unlike %s is not ambiguous. What is the warning here?. They only differ in as much as the encoding they use, not the width specifier.  What is the warning?. We can say with confidence that if the rest of the code is not 64 bit compliant, the formatting statements now sure are.. :wow:. no tests for these?. Thank you!. nit: more of setBingServiceToken or MapsServiceToken, but I digress.. Please, no! We deliberately added async because we cannot block the UI thread.  What we may want to do though is to wait for the IO operation to complete in case the app is exiting.. If we do this, we would still regress #561, perhaps there is some perf improvement to be gained there?  . I think we may have to call the delegate even if the URI is nil - at least the old code did.   #Resolved. nit: could simplify without the local variable here.. as are rule, we aren't using asserts/nslog in the framework.  Throwing exception instead may be appropriate here.. missing PackageIconUrl. >/ True if this geometry can end its own f \ncomments out of date.. >int m_allowsFigureCalls \nalso, what exactly is this cleaning up?  you are going from bool to tri-state, why?. Yes, saw that later on.  but this is not technically clean-up, it is a design change, would be useful to call that out in the comments.\n\nIn reply to: 119761248 . nit: this guarantees that concurrent access works (through locking).  . just kill these todo's.. there are other \"private\" invocations in this file, are these expected to succeed?. Ideally, we would build this as part tools package and then we don't need to check in the header, but that is for another day.. Please stick to the naming conventions in this file, so this would be context_list. please revert these formatting changes.  . The dispatch binaries and headers are published from tools package, so yes, we shouldn't have to change this props file at all.. ",
    "pedrovieira": "On the README they explicitly say that the Autolayout is still under development\n. ",
    "iragsdale": "Yeah, I saw that. :) Just wanted to add this here so people can +1 to help them gauge interest.\n. ",
    "liuxuan30": "Does Apple make the framework implementations private? Seems MS implemented their own ones. Now we can guess how Apple implement a lot of stuff, like how Apple implement UICollectionView.\n. ",
    "LeoNatan": "@liuxuan30 All of UIKit is closed source.\n. @davelamb Make sure to take layout margins into account when implementing. \n. @s5msft I am sorry, but what was promised in the project Islandwood session video and what was finally presented are two completely different things. The project is in a pitiful state, with a quasy archaic iOS 6 level API, and even as that, so much of it is implemented as stubs or, worse, in a very naive and incorrect manner. This project is at least two years away from being able to call it remotely ready, by which time it would be five years of API behind the times. Especially in UIKit and networking, there has been so much advancement in the API, with a lot of the older API being deprecated for good reason. It seems to me a shame to set such an old baseline as your goal, when a lot of that would no longer be used in modern iOS projects.\nI am sorry, but to me this project seems like a PR stunt by Microsoft. It is not taken seriously. You cannot have such an undertaking with \"smaller than I think many people suspect\" team and expect to be taken seriously. At least with the Android port, you had some baseline of implementation. Here the state of affairs is sad.\n. @ash-rain What is that? Letting the community sort it out by themselves? I think you are missing the point of the project. It was supposed to let iOS software developers take an existing project and, with minimal effort, port it to Windows Mobile, which is in dire need of software. But the Windows Mobile market is still miniscule. So what incentive do people have to help with this project? Academic or fun? Sure, I'll grant you that. But how many are there that know iOS and Windows development well enough to be able to or willing to properly support a project like this? If Microsoft was serious about it, it should have allocated adequate resources to move it forward properly.\n. @matthiasg Not even close. API is still at iOS 6 level. Some 7 API was stubbed out, but not usable. Meanwhile iOS 8 & 9 SDK includes some of the most major changes to UI, layout, presentation, network, etc. No e can be found here. And Apple is not standing still. By the time some iOS 7 SDK API is implemented, it will be even further away. \n. @jpros What you say is very inaccurate. These old systems and their APIs are mostly deprecated or changed completely. Sure, a lot of Foundation and Core Foundation have their foundations (pun intended) in OS X and NextStep even. But the UI and networking have changed so much, that implementing 7 and below seems almost counter productive at this point. \n. @rajsesh-msft If it is not implemented yet, why is this issue closed?\n. Apple persists the user defaults not \"periodically\" but in key points of application lifetime, such as application moving to background, inactive, before termination, etc. All these can be achieved in the bridge as well.\n. ",
    "ikkerus": "Unfortunetely you'll need Autolayout also for Universal Apps, right?\n. ",
    "weemundo": "+1, Any update on progress? It's super critical for a lot of iOS apps! \n. Great news, looking forward to it :) \n. ",
    "jakepetroules": "\nIs there a compelling reason to do this?\n\nTransparency with existing build tools using WinObjC in a cross compiler environment.\nWhy require a special case? In other words, is there a compelling reason NOT to do this?\n. > The ObjC-Swift bridging probably won't, though, so Microsoft would have to roll their own.\nYes it will, it's part of Clang/LLVM, not a special separate tool. Not open sourcing it would be pointless additional work.\n. Ping. I fixed the build issue...\n. > closed-source compiler\nThe compiler is Clang/LLVM, which is Open Source software.\n\nIs it possible for this compiler be used to compile Objective-C code that does not necessarily target the UWP? (I don't care about the libraries or the runtime, just the compiler.)\n\nYes (see above).\n. ",
    "antoine-haas": "We're not currently planning to rename the tool since we think it already runs transparently enough.\n. Storyboard support has been added in the latest release of our SDK and more enhancements were made to xib2nib tool. Please re-test your app with the latest version of the SDK.\n. @alexdrenea, please re-open the issue if your problem persists. \n. This is going to be fixed on the next release.\n. This should have been fixed with the latest release. Please reopen the issue if that's not the case.\n. Please re-test your app with the latest release of the SDK, which should have fixed this.\n. JavaScriptCore and MapKit require a considerable amount of work and are not in our immediate roadmap (see our roadmap in the wiki), but they may be included in future releases.\n. Closing as per above comment.\n. CocoaLumberjack is a logging framework, and given it's not directly related to app functionality it's not in our priorities/roadmap right now. This might get revisited in the future, but won't be implemented in the short term.\n. This should be fixed now. Please reopen the issue if that's not the case.\n. Yes, we are currently investigating the integration of the vsimporter tool to Visual Studio via the File -> New -> Project From Existing Code menu. We haven't set on a date yet and are organizing our dev resources.\n. We\u2019ve tracked this down and it\u2019s a debug-only issue. A fix has been identified and is coming soon.\n. We haven't faced this issue before. Can you get us more details on your project and, if possible, the repro steps so we can investigate the issue?\n. Please reopen the issue when you have more info, if the latest release doesn't fix your problem.\n. Could you share more details so that we can repro the issue, like the exact error messages you're receiving and the code that originated them?\n. Thank you for the clarification. These errors happen in .h files because the current parser cannot properly differentiate C++ .h files from Objective-C .h files. However, those shouldn't generate compiler errors and you should be able to build your app. As a result, this will be fixed on the long term but is not in our immediate roadmap.\n. This is now addressed in the FAQ of the wiki.\n. Hi @petriw and @RustyMoyher,\nAre you still having issues when trying to compile your projects? The cocos2d coverage of the bridge should have increased by now. If so, please reopen an issue specific to cocos2d. Since this issue is about cocos2d-x, which is not supported by design (as explained by Saeed above), I'm closing it.\n. Hi @swa6589, @Harisam26 and @baptcoll. Is any of you guys still hitting this issue with the latest release of the SDK? We still haven't been able to repro this on our side. \n. We are still not able to repro this issue. Please provide additional information and reopen. \n. This is due to the current VS debugging tools, which don't properly display Objective-C objects. We are working on improving the Objective-C debug experience, specifically for NSArray which seems to be the cause of your problem. Stay tuned for more updates on this.\n. This has been fixed with Visual Studio Update 2: if you install the update and inspect the value returned by the knownTimeZoneNames  method in the debugger Locals or Watch windows, it will be properly displayed as an array of NSString values. However, note that 168 values will be returned by the Windows Bridge for IOS implementation of the method to match the time zones Windows provide, instead of the 467 values returned by Apple's implementation.\n. The VM's password should appear as a password hint when you try to login without a password. Let me know if that doesn't work.\n. That's an error, thanks for catching it. The password for the VMs is P2ssw0rd.\n. This is a duplicate of #311 \n. Did you download the Parrallels VM from our website, or are you using a personal VM?\n. Hi @jiaolianxin,\nPlease paste the contents of your project log file as @mukhole explained above, so that we can further investigate the issue. \n. Hey @jiaolianxin, we still need additional information to investigate this. If your issue remains with the latest release of the SDK, please reopen it and provide us you project log.\n. Yes, Git LFS is now mandatory to build the SDK from source as explained here in our wiki. We moved many of the SDK binaries out of our repo to Git LFS to avoid bloating the size of the repo. As a result, Git LFS is needed to clone/checkout those binaries.\n. Hey @alexdrenea, the latest release of the bridge supports improved Objective-C debugging, with native visualizers for NSString among others. Check the debugging page of our wiki for more information. If you have any problems, or if some specific functionality to help you build your app is missing, please open an issue regarding that functionality in particular.\n. This has been fixed.\n. Hi @sssuourabh. Having your machine on Windows 10, build 10586 or higher is a requirement for using the Windows Bridge for IOS SDK, so using Windows 8.1 is probably the cause of your issue. You should upgrade your machine and try again.\n. Please reopen the issue if the problem persists after upgrading to Windows 10.\n. @sssuourabh , is this the same issue as #436, or are they separate problems?\n. Glad to hear!\n. Does this only happen when trying to run your app, or also when running the SDK samples? Also, try to download and install the latest version of the Microsoft Emulator for Windows 10 Mobile, since you seem to be using an older version.\n. @sourabh-vvdn, are you also trying to run the app on the mobile emulator, or does the error above occur when running on your local machine too? I'm confused as to wether you are facing the same issue as @sssuourabh, or something else. Also, are you meeting all the new requirements of the latest SDK release (see issue #432)?\n. @sourabh-vvdn, the reason you're getting the error above is probably because you're running a Windows 10 build older than 10586, but 10586 or higher is required since the  0.1.160407 release of the SDK. Could you go to Start Menu -> About your PC and check under OS Build to see which build you are running?\n. @sourabh-vvdn, thanks for the info above but I still need to know what OS Build you're using to further investigate the issue. Please go to Start Menu -> About your PC and check the build number under OS Build.\n\n. The problem is indeed that you are running an older OS build version no longer supported. Update your OS Version to 10.0.10586 or later and it should work. Please reopen the issue if that's not the case.\n. Just in case: to update your OS to the required build, simply running Windows Update should do the trick. If not, you can get it manually from here.\n. Glad to hear!\n. @sourabh-vvdn, you attached the Error List window instead of the Output window. Please copy and paste (the whole content probably won't fit in a screenshot) the contents of the Output window, which I circled on your screenshot below. \n\n. While this is not fixed, I would suggest using the Locals or Watch window of the debugger to visualize the contents of arrays at runtime, as shown below. To do this, make sure you enable the debugging features as explained on issue #435.\n\n. Hello @enyawg,\nThe alternative to the AddressBook & ContactsUI frameworks would be the Windows.ApplicationModel.Contacts namespace. You should use it's projected APIs, which can be found in its corresponding WindowsApplicationModelContacts.h header file.\nRegarding error APPX1101, please open a new issue since it seems to be unrelated to the AddressBook & ContactsUI frameworks.\n. @Nambukarthy, could you copy/paste all the info from the VS Output window to help us better diagnose the error?\nAlso, please make sure your machine fulfils all the prerequisites of the Getting Started section, in particular VS Update 2 and Windows 10, build 10586 or higher.\n. @Nambukarthy , please reopen with more info if the issue persists with the latest release of the SDK. \n. Closing this issue since the question was answered.\n. This was fixed.\n. Hey @liquidboy,\nThe migration to XAML is an ongoing effort with no end date yet. We're first migrating the controls that are already supported by the bridge, and then will proceed to add new controls. As you pointed out, those are big changes that will take a considerable amount of time.\n. @LenoreMarlow, to make the change for UIKIT_EXPORT_CLASS just add the macro before the interface definition (as shown below) in the UIMenuController.h and UIMenuItem.h files, located under winobjc\\include\\UIKit.\nUIMenuController:\n``` Objective-C\n[...]\n@class UIView, UIWindow;\nUIKIT_EXPORT_CLASS // add the macro here\n@interface UIMenuController : NSObject {\n@private\n[...]\n```\nUIMenuItem:\n``` Objective-C\n[...]\nimport \nUIKIT_EXPORT_CLASS // add the macro here\n@interface UIMenuItem : NSObject {\n@private\n[...]\n```\nDo you still have the same errors after adding the macro?\n. @LenoreMarlow, the error above seems to be caused by an unsupported tag in your xib file. Could you share the LinkedPhotosView_iphone.xib so that we can get a repro?\n. Hey @LenoreMarlow, sorry for the delay. It looks like the error is caused because you are using legacy xibs not supported by the bridge. We recommend upgrading your xibs by updating Xcode and opening your projects xibs in it, at which point Xcode should prompt you to upgrade them. If that doesn't work, you can also change the Interface Builder Document properties in the Xcode inspector for a xib file and then save the xib file again (as shown in the picture).\n\n. Are you using the latest release 0.2.160914 (September 14, 2016) of the bridge? If not, please try to build & run your app with it to see if the error persists. \n. This might be caused by a change in vsImporter. Please re-run vsImporter on your project with the new version of the SDK, instead of just replacing the winobjc folder.\n. The error above is normal: the prebuilt SDK package doesn't contain the SDK sources, in particular nsthread.mm. You can get the source file by cloning the repo which contain all the sources, but I believe you shouldn't have to step into Foundation code to diagnose your issue.\n. Hey @philnach, those are indeed Intellisense errors, as explained here in the FAQ.\n. The OpenSSL libraries included with the SDK are for internal use only. To use them in a UWP app, you need to add them to your VS solution as a static or dynamic library, and you can get them from here: https://github.com/Microsoft/openssl.\n. Hi @schallquant,\nAre you using Visual Studio 2015 Update 3? Older versions of the IDE might cause problems.\n. If you haven't yet, try to clean the project before rebuilding it. If that doesn't work, I suspect that you're facing this Stack Overflow issue. To fix it, delete the tlog files of your project (as explained in the issue top answer), or re-download the SDK if you prefer, which should come with an uncorrupted project.\nAlso, are you facing this issue only with the WOCCatalog sample, os do the other sample give you the same error as well?\n. Hey @LenoreMarlow,\nHave you thought about submitting a pull request for this issue, since you fixed it on your end? We would be glad to merge your contribution and make it available to the community!\n. Trying to compile the following code snippet causes the compiler error below. The code is part of CorePlot's CPTNumericData.m file.\n``` Objective-C\ncase CPTComplexFloatingPointDataType:\n                switch ( self.sampleBytes ) {\n                    case sizeof(float complex):\n                        result = @( crealf((const float complex )[self samplePointer:sample]) );\n                        break;\n                case sizeof(double complex):\n                    result = @( creal(*(const double complex *)[self samplePointer:sample]) );\n                    break;\n            }\n            break;\n\n```\nError: C-style cast from 'const void * _Nullable' to 'const float' is not allowed\n. @MyCADDev,\u00a0can you share\u00a0repro code for this errors? It's hard to investigate this\u00a0further without more details.. @jcamachov, what you pasted above seems to be the\u00a0contents of the Output window rather than the full build log. Please follow the steps in our FAQ to get the log so we can further investigate the issue.. @spalda2, as you pointed out, there are methods that one can and cannot live without, which is why we suggest filing separate issues so we can independently prioritize them. We recommend that you file specific issues for at least the missing methods that are completely blocking you and the ones that you plan to implement yourself (let us know in the comments of the issue if that's the case). That way, we'll be able to prioritize your main blockers against all feature requests with the former and avoid working on issues that you are already working on with the latter.\n. @edvv, this is awesome!\n. Thanks for trying it out with the new release @edvv. This is currently being investigated by #1374.. Hello\u00a0@shenzyapp,\nWinObjC does not support ads yet via Objective-C projections. If you really need ads, you could try to add C++ files to your project and create an ad control in them that\u00a0you would cast as an IInspectable and then repass it to Objective-C as an RTObject, but that is far from trivial and I cannot guarantee it would work.. Hello @Legitgamer264,\nWinObjC does not yet officially support VS 2017 since\u00a0its final\u00a0version has not been released (only a release candidate is currently available). In the meantime, you can still use VS 2017 RC with WinObjC projects without the vsix if you want since most of its features have been moved to VS 2017 itself. \nOnce the vsix is available for VS 2017 we'll let you know.. Hello @Romascu,\nSupport for pods/libs depend on which pod you are using. WinObjC currently only supports open source pods from which you can add source files directly to your project (this is because they need to be recompiled to Windows 10 compatible binaries). As a result, compatibility depends on WinObjC's API coverage for the ones used by the pod. The best way to evaluate the current compatibility of the SDK with a given pod is to submit your app that includes the sources for the pod to the app analysis tool which will give you a compatibility report.. Hello @alakoring,\nAre you facing this issue only when trying to build on a shared folder between your Mac and the VM, or also when trying to build on a non-shared folder on the VM?\n. Using $(Temp) does indeed trigger the warning above, but this shouldn't prevent you from building the app. There must be another error in your build error list. As you pointed out, changing the Output directory path so that it's not under $(Temp) should get rid of the warning. . @alakoring, CocoaLumberjack has indeed not yet been ported as per issue #173. For the shared folder issue, I'm going to follow up in issue #2007 to properly track them separately.. ",
    "asimonov-msft": "I will try to add more logging to the tool in the future. In the meantime, the fastest way for you to diagnose the problem would be to build vsimporter yourself and see where it crashes.\nIf you did not perform a recursive clone of the WinObjC repository, you will need to initialize a few submodules required by vsimporter. To do so, run the following commands in a Git Bash window:\ngit submodule update --init tools/vsimporter/third-party/sole\ngit submodule update --init --recursive tools/vsimporter/third-party/PlistCpp\nTo generate a Visual Studio solution for building vsimporter, run the following commands in a Command Prompt window (requires cmake to be installed):\nmkdir tools\\vsimporter\\build\ncd tools\\vsimporter\\build\ncmake ..\nexplorer .\nTo build and run the tool:\n1. Open VSImporter.sln.\n2. Right-click on the vsimporter project, and select Set as StartUp Project\n3. Right-click on the vsimporter project again, select Properties -> Configuration Properties -> Debugging and customize the Command Arguments and/or Working Directory. At the very least you will need to specify the SDK location (I would recommend using a pre-packaged version of the WinObjC SDK) and the location of your Xcode project.\n4. Build and run the tool to see where it fails.\n. @triplef You are absolutely right. I've checked in a fix for the issue to our internal repository. It should get merged into github in the next few days.\n. What arguments did you pass to vsimporter when you ran it? I tried running the tool on Wenjin-iOS but could not reproduce the error.\n. @xnth97 I generated the Pods project/workspace under OS X and ran vsimporter under Windows. However I did not get the 'Failed to find target with ... id in \"Pods\" project.' As far as I could tell, the projects & solution were generated successfully (although they did produce various compilation errors when I tried building them).\n. Both the pre-built SDK, as well as the git repository, should now contain the fixed VSIX file.\n. The way Visual Studio project UUIDs are generated was changed in 181c017f4559ed26b48a0d60053cecc859ada4bf. If that does not fix the issue, let me know.\n. The .tlh errors come from IntelliSense because it doesn't yet understand Objective C. These errors should not cause compilation problems, but we will leave the issue open as a reminder about the IntelliSense problem.\nThe main executable project references the static library projects as assemblies, but Visual Studio will realize the outputs are static libs and should simply link against them. If this is not working for you, could you provide us with the build/link errors that you're seeing?\n. Both the pre-built SDK, as well as the git repository, should now contain the fixed VSIX file.\n. Could you please provide more details about the error messages you're seeing?\n. Please try to build and run samples\\WOCCatalog from the pre-built SDK archive and let me know the result.\n. @aluong-yammer Are they import errors or build errors? i.e. is vsimporter failing or is something failing to build?\nPods support is something we're working towards.\n. @appeon What is the project type that causes this error - Application or Static Library?\n. @appeon How old is the SDK that you are using? This sounds similar to a problem that should have been fixed by 2d236ea858d0e655537d956a4719a3f0260ba388\n. Please open the static library vcxproject file, and check that the WindowsTargetPlatformVersion and WindowsTargetPlatformMinVersion properties are specified:\n<PropertyGroup Label=\"Globals\">\n  ...\n  <WindowsTargetPlatformVersion>10.0.10240.0</WindowsTargetPlatformVersion>\n  <WindowsTargetPlatformMinVersion>10.0.10240.0</WindowsTargetPlatformMinVersion>\n  ...\n</PropertyGroup>\nIf the properties are not specified, that means that you are somehow using an older version of the SDK.\nPlease also check to see that the Windows SDK include directory - C:\\Program Files (x86)\\Windows Kits\\10\\Include contains a 10.0.10240.0 directory. It is possible that you are using a pre-release version of Visual Studio 2015 (10.0.10150.0) which would cause the error you are seeing.\n. Expansion of the /** pattern is a feature of Xcode, rather than clang. Adding support for this to our build system is on my to-do list.\n. Support for glob paths in \"Include Paths\" and \"User Include Paths\" added by e1ae9ce6d3e3e0a2ed570ccbf43762da1dbd1c58.\n. @reyesrico  Could you please provide us with a few more details about the error.\nDid you use a pre-built SDK or clone our git repository?\nWhat was the full error message?\n. @vmagaziy Checking out sources with LF line endings under Windows may be an issue. This has caused us serious problems in the past, so now we use core.autocrlf true. In particular, git would occasionally become confused about the mixed line endings in modified files, and would consider all contents of the file to be changed.\n. @agustingandara Could you please be more specific about the issue/errors you ran into?\n. @volkrass The .tlh errors come from IntelliSense because it doesn't yet understand Objective C. These errors should not cause compilation problems. Could you please be more specific about the errors you're seeing in the Visual Studio build log?\nIn regards to PBXShellScriptBuildPhase and PBXCopyFilesBuildPhase - while they are used quite commonly, they rarely affect the actual complication and linking stages. Unfortunately, if they are actually required for compilation, there is no easy way to transfer them to Visual Studio. PBXCopyFilesBuildPhase  would have to become a custom msbuild target that copies the files using the Copy Task. PBXShellScriptBuildPhase would also have to become a custom msbuild target, with the script being converted to something that can run on Windows.\n. @volkrass I've taken a brief look at the React-native sample project. It uses recursive search paths (e.g. \"$(SRCROOT)/../../../React/\") which is related to issue #62. This is likely why the RCTBridge.h header is not found.\nUnfortunately, the change that adds support for this feature has not yet made it to the pre-build SDK. However, the updated msvc/ClangCompileTask.dll can be downloaded from github directly, if you wish to try it.\n. @yw346090249 8c89205e5f50748436ea39fdf2291884f68978d2 should hopefully fix this issue.\n. @mehmet6parmak It sounds like you are not using the pre-built SDK package. Please try building the Debug configuration of build/build.sln before trying to build the HelloUI sample.\n. @mehmet6parmak Could you please change the MSBuild project build output verbosity under\nTools -> Options -> Projects and Solutions -> Build and Run to Diagnostic**, try rebuilding the HelloUI project, and provide us with the build output?\n. @mehmet6parmak Thank you for the log. We are investigating the issue.\n. @mehmet6parmak Setting the locale to Turkish on my machine allowed me to reproduce the problem. Here is a good description of the issue.\n. @volkrass Could you please provide more details about what doesn't build and what errors you get? I've just rebuilt build/build.sln and the samples without any issues.\n. @volkrass That is quite strange. All three of the libraries you mentioned are present in my SDK package.\nAre you sure all projects in build/build.sln compiled successfully? When you build the entire solution, it should build 48 projects. I would suggest trying to rebuild the XamlCompositorCS projects and seeing if they produce any errors.\n. @volkrass I'm happy to help, as best as I can.\nIt appears that the XamlCompositorCS projects can fail to build because Visual Studio can't properly restore all the NuGet package that it requires. The problem should go away when you try to build the project a second time.\nRestoring NuGet packages...\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\n1>------ Build started: Project: XamlCompositorCS.Universal, Configuration: Debug x86 ------\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(8,12,8,25): error CS0246: The type or namespace name 'AssemblyTitle' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(9,12,9,31): error CS0246: The type or namespace name 'AssemblyDescription' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(10,12,10,33): error CS0246: The type or namespace name 'AssemblyConfiguration' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(11,12,11,27): error CS0246: The type or namespace name 'AssemblyCompany' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(12,12,12,27): error CS0246: The type or namespace name 'AssemblyProduct' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(13,12,13,29): error CS0246: The type or namespace name 'AssemblyCopyright' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(14,12,14,29): error CS0246: The type or namespace name 'AssemblyTrademark' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(15,12,15,27): error CS0246: The type or namespace name 'AssemblyCulture' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(27,12,27,27): error CS0246: The type or namespace name 'AssemblyVersion' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(28,12,28,31): error CS0246: The type or namespace name 'AssemblyFileVersion' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(29,12,29,22): error CS0246: The type or namespace name 'ComVisible' could not be found (are you missing a using directive or an assembly reference?)\n1>C:\\Users\\Artem\\AppData\\Local\\Temp\\.NETCore,Version=v5.0.AssemblyAttributes.cs(4,20,4,26): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(8,26,8,44): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(9,32,9,34): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(10,34,10,36): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(11,28,11,30): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(12,28,12,46): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(13,30,13,49): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(14,30,14,32): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(15,28,15,30): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(27,28,27,37): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(28,32,28,41): error CS0518: Predefined type 'System.String' is not defined or imported\n1>C:\\dev\\WinObjC\\build\\XamlCompositorCS\\XamlCompositorCS.Universal\\Properties\\AssemblyInfo.cs(29,23,29,28): error CS0518: Predefined type 'System.Boolean' is not defined or imported\n. @bleupierre The .tlh errors come from IntelliSense because it doesn't yet understand Objective C. These errors should not cause compilation problems.\n. @ninjanpotter The issue should be fixed in the github repository. Apologies for the delay.\nThe pre-packaged SDK should, hopefully, get the update later in the week. If that's what you're using, you can manually apply the fix, since it's very small.\n. @ninjanpotter Which solution, configuration and platform are you using to build the SDK?\nThe second error you described looks to be related to the SDK build failure.\n. @segadude Were you using a pre-packaged SDK or did you clone the git repository? In the latter case, you need to first build build/build.sln\n. @segadude Please file additional issues for any remaining build failures that you are seeing. :smile: \n. @mufanfan What is the size of the SDK zip file that you downloaded? Here is a link to the latest file.\nThe pre-packaged SDK (released October 30) should be about 179Mb zipped and 578Mb unzipped. It should contain a VERSION.TXT file in the root of the SDK, as well as a number of DLL and LIB files in lib\\Universal Windows\\x86\n. @mufanfan This behavior is intended.\nTo create your own test certificate:\n1. Open the project's Package.appxmanifest in Visual Studio.\n2. Select the Packaging tab.\n3. Under Publisher, select Chose Certificate...\n4. Under Configure Certificate... select Create test certificate...\nIf you go through Visual Studio's Create App Packages... dialogue, a real certificate should be created automatically:\n1. Right click on your project in Visual Studio and select Store -> Create App Packages...\n2. Select Yes under Do you want to build packages to upload to the Windows Store?\n3. Sign in with your developer account.\n4. Follow the rest of the prompts to create and test your App Package.\n. @Alx06 Can you recall the last time you were able to successfully deploy the app? What changes happened since then?\nRegarding the Store validation errors - we are looking into these.\n. @Alx06 Please try using the latest version of the SDK, released today. Here is a link to the pre-built SDK archive.\nYou should remove any previously-generated VS files and re-import your Xcode project from scratch using vsimporter. I did this with the code you sent us, and the app built and ran without any modifications.\n. @Alx06 I will ask Saeed to forward your message to me. However, in the future, please post your issues here, whenever possible. That way other people can benefit from the troubleshooting process and the solutions we come up with.\nIn the meantime, please make sure that you remove all previous Visual Studio files and build products before re-importing. After backing everything up, I would suggest completely removing:\n\nAll .vsimporter directories\nAll .vcxproj.user files (these can cause a variety of issues on re-import)\nAll .sdf and .sln files\nAll build product directories created by VS\n\nOtherwise, you may get weird errors such as:\n1>Package.appxmanifest : error APPX0703: Manifest references file '6664b0ae-f861-48d6-a627-db56a1922a19.dll' which is not part of the payload.\n. @Alx06 Looking at the errors you are getting, I'd recommend reinstalling the latest version of Visual Studio 2015 from here. This should, hopefully, fix some of the issues you are seeing.\nFrom what I understand, you've made changes to a few targets files that come with Visual Studio (e.g. Microsoft.AppxPackage.Targets). In general, changing these files is not a good idea and can cause very strange behaviour. It may solve one problem, but introduce many more.\nIf all else fails, you can try gathering the Diagnostic logs for building and deploying your project:\n1. Select the Debug configuration (or any other one that fails to build and deploy).\n2. Select Build -> Clean Solution.\n3. Under Tools -> Options -> Projects and Solutions -> Build and Run, set \"MSBuild project build output verbosity\" to \"Diagnostic\".\n4. Select Build -> Deploy Solution and save the resulting logs.\n5. Restore the \"MSBuild project build output verbosity\" to \"Minimal\".\n. @Alx06 Try the following workaround:\n1. Get a copy of the WinObjC source code from GitHub\n2. Locate the unicode directory in deps\\prebuilt\\include\\icu\n3. Copy the missing unicode directory into the include directory of the WinObjC SDK you are compiling against\n4. Try to compile again\n. @Alx06 Juding from this the Windows crt defines a round() function, resulting in duplicate symbols.\n. @cloudmonkeypeng Can you please verify that you changed the solution platform to \"x86\" from \"ARM\" before building?\n. Unfortunately, this is a limitation of the clang driver we are using.\nThe only workaround, at this time, is to open the VCXPROJ files in a text editor and remove the offending flags. The -Xanalyzer option takes a required argument (e.g. -Xanalyzer -analyzer-disable-all-checks), so be sure to remove both tokens.\n. @andrejo-msft ARM builds are currently not supported.\n. @mlfarrell Which preprocessor definitions are no longer defined for you? It would help immensely if you could provide us with steps to reproduce the errors you are seeing.\n. @mlfarrell I'm still not sure what broke. Can you reproduce the issue with one of our sample projects?\n. Closing the issue for now. Please reopen it when you get the chance to post steps to reproduce the problem.\n. @jiaolianxin Please find the clang.command.1.tlog file, located somewhere in the project directory (e.g. WOCCatalog\\WOCCatalog.vsimporter\\WOCCatalog-WinStore10\\Debug\\WOCCatalog.tlog) and paste the long command here.\n. @jiaolianxin Unfortunately, what you pasted is the contents of CL.command.1.tlog. Please paste the contents of clang.command.1.tlog which should be located in the same tlog directory.\n. @alexdrenea The tools use cmake to generate the necessary VS project and solution files. The file can be found in: WinObjC\\tools\\vsimporter\\CMakeLists.txt\n. @mohamednossair This happens because we do not invoke clang using the standard driver, but rather with clang -cc1.\nYou can try removing the offending argument. It should be under \"Clang -> Command Line -> Additional Options\". Alternatively, you can try replacing it with \"-fvisibility default\" (without the quotes).\n. This is a duplicate of Issue #231. The original issue has instructions for how to generate the file through VS.\n. @andreluizbarbieri Please provide more details about when you see these errors? Do they happen when importing, when you open the generated VS project, or during compile time?\n. @andreluizbarbieri I've never encountered these errors before.\nA few follow up questions:\n1. What version of Visual Studio are you using?\n2. Do these errors happen with every project you import? Could you try running vsimporter on samples/WOCCatalog and Canabalt.\n. @andreluizbarbieri What version of Visual Studio 2015 are you running? You can find out by going to Help -> About Microsoft Visual Studio.\n\n. @andreluizbarbieri Closing this issue for now. Please reopen it if the issue persists and you're able to provide us with more information.\n. @Nambukarthy That symbol comes from the Google Analytics SDK, which we unfortunately do not support.\n. @Nambukarthy I am working on a fix for the issue.\n. @Nambukarthy The issue should now be fixed.\n. @robinmanuelthiel vsimporter should now work much better with network paths.\n. @SivaguruElangovan The issue should now be fixed.\n. @sourabh-vvdn Please copy and paste the contents of the Output window after trying to compile.\n. @sourabh-vvdn The \"expected selector for Objective-C method\" entries appear to be genuine compiler errors. Something in that file is causing the compiler to not parse the interface correctly.\n. @sourabh-vvdn Please try to disable Objective-C Modules for your project.\n\n. @sourabh-vvdn Unfortunately we do not currently provide libiconv as part of the WinObjC SDK.\n. I'm closing the issue for now.\nI have create a separate issue #477 to track adding libiconv to our SDK.\n. @Nambukarthy Could you please provide the full error message. It would be helpful to know where this symbol is used and what library is expected to export it.\n. @Nambukarthy Closing the issue for now. Please re-open the issue if you can provide us with a repro case.\n. @sryze  Please try to disable Objective-C Modules for your project.\n\n. @Nambukarthy Please call \"[WXCButton make]\" instead.\n. @zhuowei What happens if you follow the wiki and do not define WINOBJC_SDK_ROOT?\n. @zhuowei Closing issue for now. Please reopen if the issue persists and you can provide more details on a repro case.\n. @robinmanuelthiel Is the sample source code and/or the WinObjC SDK located on a network share?\n. @robinmanuelthiel Normally, vsimporter writes an absolute path to the WinObjC SDK into any imported projects. If you open the VCXPROJ file, you should be able to see a line similar to the below:\n<WINOBJC_SDK_ROOT Condition=\"'$(WINOBJC_SDK_ROOT)' == ''\">C:\\dev\\WinObjC</WINOBJC_SDK_ROOT>\nIf you invoke vsimporter with the -relativepath option, it will write a relative path instead.\nIn both cases, you also have the option to define WINOBJC_SDK_ROOT as an environment variable, which will take precedence over the path hard-coded in the project file.\n. Fixed by 9a6c9028386efac79678687ae3a12ba79b525606\n. @alejandrovelozb Unfortunately, our SDK currently does not provide libsqlite3. For now, the workaround is as follows:\n1. Go to https://www.sqlite.org/download.html and download a VSIX for Universal Windows Platform.\n2. Install the VSIX on your machine.\n3. In Visual Studio Solution Explorer, right-click on your project and select Add -> Referece...\n4. Under Universal Windows -> Extensions select SQLite for Universal App Platform\n   \n. @alejandrovelozb In regards to libstdc++.lib, try removing it from the Linker arguments (Linker -> Input -> Additional Dependencies) and see what happens.\nFor libraries in general, you'll need to find pre-compiled UWP ones (e.g. libsqlite3 above) or try to compile them from scratch.\n. I'm closing the issue for now.\nI have create a separate issue #486 to track adding libsqlite3 to our SDK.\n. @nishant5800 It sounds like you didn't download the SDK from the right place. You can verify by checking the size of vsimporter.exe - I suspect it will be around 1Kb.\nThe latest pre-built package can be downloaded here. And here is a wiki post that explains the issue a bit better.\n. @bbayraktutar The EmotionNote project you linked to is written in Swift, which we currently do not support.\n. @enyawg Unfortunately, we currently do not have any support for the ContactsUI framework. Furthemore, the AddressBookUI framework contains only stubs at this time.\n. @LucasTaiMacArthur  The tlh error messages are a known issue, but they do not result in compilation errors. In this case, the build failure is caused by missing openssl headers, which is tracked by Issue #928.\n. @LenoreMarlow It looks like our UIMenuController and UIMenuItem header files are missing the UIKIT_EXPORT_CLASS macro. Please try adding the macro to the relevant class interfaces (see UIButton.h for example) and rebuild.\nOut of curiosity, why did you need to add msvcrt.lib and msvcmrt.lib to your project?\n. @LenoreMarlow I do not believe you need to re-run vsimporter. Please try doing a full rebuild of your project (after making the change to the UIKit header files).\nAn incremental build will not work, due to the fact that the module cache will not be regenerated.\n. :shipit:\n. Our WindowsTargetPlatformMinVersion should already be at 10.0.10586.0. Is that not so?\n\nIn reply to: 252996479 \n. No idea.\n\nIn reply to: 252994573 \n. The first round of builds failed because the server was missing the RS1 SDK. I fixed that.\n\nIn reply to: 253017271 \n. This change does the affect the build, so skipping it.\n. You should be able to remove the following directories, as they are obsolete:\nsamples\\WOCCatalog\\WOCCatalog.vsimporter\\WOCCatalog-Headers-WinStore10\nsamples\\XAMLCatalog\\XAMLCatalog.vsimporter\\XAMLCatalog-Headers-WinStore10\n\nIn reply to: 254308466 \n. :shipit:\n. :shipit:\n. :shipit: \n. :shipit:\n. Closing this, as I should have used the already-existing PR.. @bbowman @DHowett-MSFT Unfortunately, this is an issue with how libclang associates the doxygen-style comment blocks with entries in the AST. As a result, this is not something that we can easily fix.. >   - Visual C++ copmilers and libraries for ARM\ntypo\n\nRefers to: README.md:40 in 27b298b. . :shipit:. The relevant lines in the VS Solution are:\n```\nVisual Studio 14\nVisualStudioVersion = 14.0.22823.1\nMinimumVisualStudioVersion = 10.0.40219.1\n```\nInterestingly enough, it's actually the comment that affects VS Version Selector.. Make this a relative path. #Resolved\n. The path does contain PI, but it will be stripped off since it comes after the colon.\n\nIn reply to: 82424365 \n. I moved the assert to the calling functions.\n\nIn reply to: 82420134 \n. You are technically correct. The best kind of correct.\n\nIn reply to: 82833190 \n. I concur. I tried building your branch on my machine with only 10.0.10586.0 installed, and everything looked to be OK.\n\nIn reply to: 83711603 \n. Not quite. For now the workflow for changing the tools will be:\n- Make changes\n- Check in changes, including the re-built binaries, into git. Do nothing with the version.\nThe monthly release workflow is:\n- Update the winobjc.version file with a new release string\n- Build the SDK and publish the zip file.\n\nIn reply to: 84107821 \n. SharedVersion.h:\ndefine FILE_VERSION 0, 2, 1610, 24\ndefine FILE_VERSION_STR \"0.2.1610.24\"\nSharedAssemblyInfo.cs:\nusing System.Reflection;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\n[assembly: AssemblyFileVersion(\"0.2.1610.24\")]\n[assembly: AssemblyInformationalVersion(\"0.2.1610.24\")]\n\nIn reply to: 84728270 \n. It's much prettier now.\n\nIn reply to: 84234644 \n. NSArrayis how you forward-declare a generic type.\n\nIn reply to: 88955275 . ",
    "triplef": "I have the exact same issue, crashing after the same log message. I\u2019ve run it in the debugger as suggested and from what I can tell it seems to be caused by SBBuildPhase::create() calling SBFrameworksBuildPhase::create() with a NULL phase parameter in this code (see also screenshot below):\nc++\n  // Force creation of a PBXFrameworksBuildPhase and/or PBXResourcesBuildPhase,\n  // if they were not created explicitly.\n  if (sourcesPhase && !frameworksPhase)\n    ret.push_back(SBFrameworksBuildPhase::create(NULL, parentTarget));\n  if (sourcesPhase && !resourcesPhase)\n    ret.push_back(SBResourcesBuildPhase::create(NULL, parentTarget));\nSimply returning in SBFrameworksBuildPhase::SBFrameworksBuildPhase() and SBFrameworksBuildPhase::writeVCProjectFiles when m_phase is NULL allowed the import to complete for me, but I\u2019m not sure if that\u2019s the right way to fix this...\nLet me know if you need more info.\n\n. You can use @(YES) and @(NO) instead as a workaround.\n. Confirmed.\n. Confirmed.\n. Yes good point! I\u2019ve unified the code in trySetViaAccessor() and trySetViaIvar() by implementing a new function dataWithTypeFromValue() in NSValueTransformers.h.\nThis also fixes an issue in trySetViaIvar() where setting an object-type value was not retained on the ivar.\n. Good point. I couldn\u2019t find any documented behavior regarding retain/release of directly accessed instance variables.\nUsing the following code as a quick test, it seems that both iOS and OS X definitely retain the object, but don\u2019t seem to release it, which is what WinObjC did as well before my change. Not sure why it would behave that way, but I can definitely remove the change regarding retain/release from this PR and keep the original behavior (retain only). Let me know.\n``` obj-c\n...\n{\n    NSObject    *_property;\n}\n... \nid object = [[NSObject alloc] init];\nNSLog(@\"retain count: %u\", [object retainCount]);\n[self setValue:object forKey:@\"property\"];\nNSLog(@\"retain count: %u\", [object retainCount]);\n[self setValue:nil forKey:@\"property\"];\nNSLog(@\"retain count: %u\", [object retainCount]);\n[self setValue:object forKey:@\"property\"];\nNSLog(@\"retain count: %u\", [object retainCount]);\n```\nResult:\nretain count: 1\nretain count: 2\nretain count: 2\nretain count: 3\n. Cool, I\u2019ve made that change: new ivar value is retained, old ivar value is not released.\n. I think the second error (\"cannot open input file 'OpenGLES.lib'\") should be fixed with this PR:\nhttps://github.com/Microsoft/WinObjC/pull/222\n. I think this might only happen when building the SDK from source, at least that seems to be the case for #222.\n. Indeed looks like it\u2019s commented out:\nhttps://github.com/Microsoft/WinObjC/blob/a3c7ddfa8bd6cb362e738064971dc4f9ace6164c/Frameworks/limbo/NSString.mm#L416\nNot sure why - the implementation looks fine on first sight.\n. @rajsesh-msft thanks for the quick merge! We are using the actual values in XML documents for binding UI elements in our custom UI framework.\n. Verified, thanks!\n. Thanks for your feedback, I\u2019ve added the missing { } around value = nil;.\nWhere would be the best place to add a unit test for this?\n. Thanks Raj, I\u2019ve added a basic unit test for this. Let me know if there\u2019s a better way to test this.\nPlease note that while I verified the test manually, I wasn\u2019t able to actually run the test suite: the runall.bat script referenced in the wiki seems to no longer exist, and the tests don\u2019t seem to be integrated in Visual Studio as selecting \"Run All Tests\" here didn\u2019t find any tests to run. It would be great if the documentation could be updated for how to run tests.\n. Here\u2019s what I get when I try to run the unit tests like this:\n```\nPS C:\\Dev\\winobjc-src> .\\tests\\Run-UnitTests.ps1\n\nSUMMARY Passed: 0 Failed: 0 Disabled: 0 Total: 0\n```\nI have previously done a release build of the \"build\" project. I\u2019m probably missing something.\n. Thanks guys, that works. The test is passing.\n. Thanks for the quick fix! The commit doesn\u2019t seem to be in the master branch yet though \u2013 do you have an ETA when it will be in the release?\n. Thanks @rajsesh-msft for taking another look at this and for the workaround!\n. @mnithish thanks for the quick merge!\n. Thanks @rajsesh-msft, we\u2019ll give that workaround a try.\n. Understood, thanks for looking into this @DHowett-MSFT!. Thanks for tracking this down @rajsesh-msft! Is this something we can catch on our end or will this require a fix in the SDK?. @rajsesh-msft Would a full dump still help or does the internal dump you found provide all info we can get?. The failure reason in Dev Center turned out to be invalid, and the crash is root caused in our app. Closing.. Thank you for this fix!\nJust to clarify, does this only support getting localized strings or does it enable getting any kind of localized bundle resource?. Sounds great, thanks!. ",
    "gabrielmaldi": "@triplef thank you for your help. @asimonov-msft I've been snowed under with work and haven't had a chance to dig into this. Do close this issue when that commit is merged.\n. ",
    "xnth97": "@asimonov-msft I just followed the wiki since I'm not familiar with the tool but did you run pod install before running vsimporter? Otherwise the directory Pods won't be created.\n. @asimonov-msft sorry that I didn't notice the 9-hour-ago commit. The latest vsimporter binary seems to have fixed it and solution generated successfully as you said. AWESOME! But still I got 'Ignoring unsupported PBXHeadersBuildPhase in \"...\" target'\n. it doesn't make sense since we don't have Visual Studio on OS X\n. @Gutem that's visual studio code, the atom-based text editor, not visual studio, the whole IDE\n. ",
    "KyleMcNutt": "+1\n. ",
    "reghrafa": "As a workaround you can still manipulate the vsixmanifest inside the extension and add VS 2015^^\n<Installation>\n    <InstallationTarget Id=\"Microsoft.VisualStudio.Pro\" Version=\"[12.0]\" />\n    <InstallationTarget Id=\"Microsoft.VisualStudio.Pro\" Version=\"[14.0]\" />\n  </Installation>\n. See #23 .\n. ",
    "kkdai": "Is any way I could contribute about this? Does this must fixed in Clang compiler?\n. ",
    "mlfarrell": "Thanks for the rapid response.  I will try that.  I may have to link more VS content to my Z: however since C: is once again down to its last 2 GB.\nYou guys are awesome for open sourcing this btw.\n. Plus one for this.  My project that I'll soon be using winobjc for makes use of this.\n. You're right.  Apple's accelerate used GCD / OpenCL under the hood I think but for now, any decent objc wrapper around LAPACK named \"accelerate\" will likely solve most issues\n. Good call.  I actually completely removed cocoa lumberjack from svgkit and was able to bypass this problem.\n. I can't right now, I am in the middle of some paid work this week. I'll get back to you ASAP. \nI've been meaning to ask (sorry to hijack), will this SDK work with the Hololens?   I only ask because the holo lens is one of the big incentives for me bringing my technology to the Windows platform \n. Now I can't even get to the linker stage.\nerror MSB6006: \"clang.exe\" exited with code -1073741819. \nI get this on one of my biggest files and I have no idea the cause.\nI'm sorry but after months and months of being led on, I think I have to abandon this objc+win10 porting effort.  It's just in complete shambles as far as I'm concerned\n. Okay I got it this far....\nI'm not gonna lie, the thousands of \"is deprecated: property not yet implemented [-Wdeprecated-declarations]\" I saw during compilation has me being very pessimistic about the actual state of the SDK as I mentioned above...\n2>LINK : warning LNK4098: defaultlib 'msvcrtd' conflicts with use of other libs; use /NODEFAULTLIB:library\n2>MaterialSelectorViewController_4ED8C2A5.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>VertoActionSheet_1DD8E17.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>RenderPipelineEditorViewController_BE6AC788.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>Ortho_Sketch_3DViewController_F987F63A.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>VertoShapeEditorViewController_3FB0FA64.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>TextureLibraryViewController_D9EE0206.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>DocumentView_DA0A043A.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIPopoverController\n2>EAGLView_B867A724.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_UIRotationGestureRecognizer referenced in function __catch$__i_EAGLView__initWithCoder_$1\n2>TCGLView_105A02BD.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIRotationGestureRecognizer\n2>VertoShapeEditorCanvasView_FD10D4BD.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIRotationGestureRecognizer\n2>TextureLibraryViewController_D9EE0206.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_UIImagePickerController referenced in function __i_TextureLibraryViewController__viewDidLoad\n2>DocumentView_DA0A043A.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_UIDocumentInteractionController referenced in function CGRectMake\n2>CubeRendererEditorViewController_C7E0A1E2.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIDocumentInteractionController\n2>AFURLSessionManager_772EE6CA.obj : error LNK2001: unresolved external symbol objcclass_name_AFSecurityPolicy\n2>AFHTTPRequestOperationManager_A48CF6B2.obj : error LNK2001: unresolved external symbol _objc_class_name_AFSecurityPolicy\n2>AFURLConnectionOperation_AF5FB72C.obj : error LNK2001: unresolved external symbol objcclass_name_AFSecurityPolicy\n2>AFURLSessionManager_772EE6CA.obj : error LNK2019: unresolved external symbol OBJC_CLASS_AFSecurityPolicy referenced in function _af_swizzleSelector\n2>AFHTTPRequestOperationManager_A48CF6B2.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_AFSecurityPolicy\n2>AFURLConnectionOperation_AF5FB72C.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_AFSecurityPolicy\n2>VertoGLStateMachine_A239961B.obj : error LNK2019: unresolved external symbol \"union _mat4 const mat4Identity\" (?mat4Identity@@3T_mat4@@B) referenced in function __i_VertoGLStateMachine__init\n2>libSVGKit-iOS.1.2.0.lib(SVGKImage_EA8BEF31.obj) : error LNK2019: unresolved external symbol __imp__NSStringFromCGRect referenced in function __catch$__i_SVGKImage__dealloc$0\n2>libSVGKit-iOS.1.2.0.lib(SVGSVGElement_368D2E2A.obj) : error LNK2001: unresolved external symbol __imp__NSStringFromCGRect\n2>libSVGKit-iOS.1.2.0.lib(SVGKSourceLocalFile_5BFD9642.obj) : error LNK2019: unresolved external symbol __OBJC_CLASS_NSInputStream referenced in function __c_SVGKSourceLocalFile__sourceFromFilename\n2>libSVGKit-iOS.1.2.0.lib(SVGKSourceURL_2CB41910.obj) : error LNK2001: unresolved external symbol __OBJC_CLASS_NSInputStream\n2>libSVGKit-iOS.1.2.0.lib(SVGKSourceNSData_AA7131AE.obj) : error LNK2001: unresolved external symbol __OBJC_CLASS_NSInputStream\n2>libSVGKit-iOS.1.2.0.lib(SVGKSourceString_DAE6381D.obj) : error LNK2001: unresolved external symbol __OBJC_CLASS_NSInputStream\n2>libSVGKit-iOS.1.2.0.lib(SVGSwitchElement_F68C317A.obj) : error LNK2019: unresolved external symbol __OBJC_CLASS_NSLocale referenced in function __i_SVGSwitchElement__visibleChildNodes\n2>libSVGKit-iOS.1.2.0.lib(CSSStyleSheet_D3E57710.obj) : error LNK2019: unresolved external symbol __OBJC_CLASS_NSRegularExpression referenced in function __i_CSSStyleSheet__initWithString_\n2>libSVGKit-iOS.1.2.0.lib(SVGElement_EFB7A2B6.obj) : error LNK2001: unresolved external symbol __OBJC_CLASS_NSRegularExpression\n2>libSVGKit-iOS.1.2.0.lib(SVGElement_EFB7A2B6.obj) : error LNK2019: unresolved external symbol __OBJC_CLASS_NSPredicate referenced in function 50-[SVGElement postProcessAttributesAddingErrorsTo:]block_invoke\n2>libSVGKit-iOS.1.2.0.lib(SVGTextElement_A5102BF.obj) : error LNK2019: unresolved external symbol OBJC_CLASS_NSMutableAttributedString referenced in function __i_SVGTextElement__newLayer\n2>libSVGKit-iOS.1.2.0.lib(SVGTextElement_A5102BF.obj) : error LNK2019: unresolved external symbol _kCTFontAttributeName referenced in function __i_SVGTextElement__newLayer\n2>libSVGKit-iOS.1.2.0.lib(SVGGradientElement_1729582E.obj) : error LNK2019: unresolved external symbol __imp__NSStringFromCGPoint referenced in function _CGPointMake\n3>Z:\\vc projs\\objc\\verto\\Ortho Sketch 3D\\Classes/Ortho_Sketch_3DViewController.h(30,129): warning : cannot find protocol definition for 'ADBannerViewDelegate'\n2>Z:\\vc projs\\objc\\verto\\Ortho Sketch 3D\\Debug\\Ortho Sketch 3D\\Ortho Sketch 3D.exe : fatal error LNK1120: 15 unresolved externals\n. I've abandoned winobjc in favor of a complete rewrite to C++.  I'm sorry\n. I'm down for a tool. Sorry about all the reports. Once we get something that allows us to submit and prioritize missing APIs, we can migrate most of my issues to that. \n. I had meant my own custom macros that I defined in the property pages myself such as \"DEBUG\".  Sorry but I haven't had a chance to open this project in awhile.\n.  Glad to hear, thanks for the update! \n. I abandoned ObjC a very long time ago.  I now use a C++ engine and my own UI framework.  I'm no longer interested in anything w.r.t WinOBJC.  thanks.. ",
    "MatthewCarven": "Any resolution on this? I'm using VS2017 and the project I open requires WPF amongst other things, the installer pops up, ask permission to close VS2017, runs through its install procedure and then returns me to the same project which reports project unloaded and the only option is to \"install missing features\"?\nIs there anything I can check? A log file or sumfin?. ",
    "rogersachan": "Any progress?. I don't understand this conversation. What is the \"angle project\"? @nueswcjr. ",
    "jboich": "\nconsider the ability to use custom WinRT components written in any WinRT language (C++, C#, etc.) from Objective-C code.\n\nI would like to have this too! . Hi, there.\nAs a hack around solution to get this feature working, we added method \n- (void)evaluateJavaScript:(NSString *)javaScriptString \n         completionHandler:(void (^)(id, NSError *error))completionHandler;\nto UIWebView class and use _xamlWebControl.InvokeScriptAsync in implementation.\n. Hi, @jaredhms. Thanks for your feedback.  Yes, we will submit pull request.\nBest regards, Julia. Hi @rajsesh-msft . Thanks for your response.\n\nYou should call\n[locationManager requestWhenInUseAuthorization];\nbefore making other location manager calls. The first time the app runs, the user will get a dialog where he needs to \"Allow\".\n\nAll of these is done, but location services still do not work if startUpdatingLocation method is used\nHere are errors I see in Debug output when location manager initialized:\nERROR FindDefaultInterface:CM_Get_Device_Interface_List_Size failed:0x00000000, InterfaceListSize = 1 \nERROR SensorOpenByType:Failed to open sensor error:0x0000007E\nPlease follow steps to reproduce bug with location services in WOCCatalog example:\n\nUninstall WOCCatalog  app if installed\nStart Debugging\nSelect 'CoreLocation' from the list on the left hand side\nClick 'Yes' when alert requesting permission to use location in the app prompted.\nClick on 'Start' (note: [locationManager startUpdatingLocation]; called)\n\nActual:\nnothing happens\nExpected:\ncallback received in delegate method\n- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations\nand relevant information displays in text field.\nplease see documentation of startUpdatingLocation() method here:\nhttps://developer.apple.com/reference/corelocation/cllocationmanager/1423750-startupdatinglocation\nNote: [locationManager requestLocation]; invokes delegate method - (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations but only if startUpdatingLocation() hasn't been called before it.\nKind regards,\nJulia. Hi, @rajsesh-msft. Thank you!. Hi, @rajsesh-msft . Thank you for clarification!. Hello, @mukhole . This works. Thank you!. Hi, @rajsesh-msft . Thanks for getting back to me!\n\nDo you have any information on the kind of devices this is happening in? \n\nYes, please look at the file attached. \n\nIt would also be great if you can confirm the version of the bridge you are using.\n\nHow to check the version if I built it from source ('develop' branch)?\n\n. Hi, @rajsesh-msft .\n\nDoes the version of your app in the store use sources from develop branch,\n\nYes, it does. The build of WinObjC bridge uses sources from develop branch and includes commits made on 7th of December 2016. Later commits are not included.\n\nIn general, you want to use the build from master branch (official release) as It is more stable.\n\nThanks for this info! Will do this for future releases.. Hi, @rajsesh-msft  and @ArnOmsft . \n< so I just wanted to check if you were able to have a consistent repro?\nOur team could find out how to reproduce this issue:\n\nCreate new local user with name in language other then English + name must contain space. For instance in russian '\u0421\u0430\u0448\u0430 \u041f\u0443\u0448\u043a\u0438\u043d' or german: \"\u00d6\u00d6\u00d6 test\u00c4\".\nSign in to the account created at step 1\nInstall and Launch WOCCatalog example\nSelect Foundation tests -> UserDefaults\n\nActual:\nApp crashes \nCrash happens at line:\nNSString* placeHolder = [NSString stringWithFormat:@\"%@\", [standardDefaults stringForKey:@\"FavoriteWord\"]];\n@rajsesh-msft \n\nlooks like CPathMapper() has an invalid mapped path\n\nyes, path is nullptr\nPlease see screenshots attached.\n\n\n\n. Hi again.\nThe issue is due to CFStringGetCStringPtr() returns NULL.\nI found this solution , applied it to \"_preferencesDirectoryForUserHostSafetyLevel\" in CFPreferences.c in winobjc bridge and it resolved the issue.\nI also think that CPathMapper() should have validation for situation when path is null\n. Hi, @bbowman .\n\nPlease add unit tests. I'm not sure what the confusion is for testing?\n\nI think that I am not familiar with the bridge project as good as you are, so I was asking for advice :)\n\nit seems like you want to verify the URL returned by the function you modified?\n\nBecause changes, that I made, are related to issue #1613 I'd like to verify that if completePath contains different set of characters in different languages, then \n1. CFURLGetFileSystemRepresentation returns true and\n2. directory creates successfully by _CFCreateDirectory using character buffer, which filled in by CFURLGetFileSystemRepresentation function (char buffer must not be null)\nI will provide you an example of data I mean for 'completePath' later (I don't have them at hand right now)\nThanks for all your feedback!. Hi, @bbowman .\nSo an example of data I get in completePath looks like this\n\"C:/Users/<name of user>/AppData/Local/Packages/<package name>/LocalState/Preferences\"\n<name of user> could be in different languages and may contain space. \nI point to different languages, because if user name is in English and contain space, issue #1613 did not take place.\n<package name> is from dev center and it is in specified format and should not cause any problems when url converts to char array.. Hi @bbowman. Thanks for feedback!\n\nthat calls _CFPreferencesCreateDomainList and checks the result when the username field is something weird \n\nAssigning different values to username of CFPreferencesCreateDomainList  method won't allow us to test what we want, because value of username field is not used to create a path, which will be used then to create url and directory.\nMethod CF_PRIVATE CFArrayRef  _CFPreferencesCreateDomainList(CFStringRef  userName, CFStringRef  hostName)  calls  CFURLRef prefDir = _preferencesDirectoryForUserHost(userName, hostName);\n_preferencesDirectoryForUserHostcalls _preferencesDirectoryForUserHostSafetyLevel\nAnd if you take a look at the implementation of _preferencesDirectoryForUserHostSafetyLevel you will see that username parameter is not taking any part in completePath :\nCFMutableStringRef completePath = _CFCreateApplicationRepositoryPath(alloc, CSIDL_APPDATA);\nAnd this guy _CFCreateApplicationRepositoryPath(alloc, CSIDL_APPDATA); returns application data local folder (GetAppDataPath(true))\nAs far as I understand I need to simulate data returned by GetAppDataPath . Could you give any advice of how to do this?\nKind regards,\nJulia. Hi, @bbowman . Thanks for getting back to me with response.\nI did many manual tests and noticed that CFURLGetFileSystemRepresentation sometimes returns odd results. I did look close in the code and noticed that _CFCreateApplicationRepositoryPath returns path in UTF16 encoding and CFURLGetFileSystemRepresentation uses CFStringFileSystemEncoding().\nCan I make another PR with the suggestion of the fix?. Hi, @rajsesh-msft ! I also would like to add that I noticed that at the current moment when _CFCreateDirectory gets path containing invalid characters, it returns true even if folder did not create. I think it may be connected to the current issue.\nRegards,\nJulia\n. Hi, @DHowett-MSFT . Thanks for a quick feedback!\n\nbut instead of asking for newlines and then removing them, you could save a lot of time by simply not asking for newlines.\n\nyes, you are totally right :)\nIn OSX and iOS NSDataBase64Encoding64CharacterLineLength adds only '\\n' but \nin Windows it also adds '\\r'\nbecause of '\\r' ending the audio file does not play. Hi, @DHowett-MSFT .\n\nIn the interim, does removing the newline option unblock you? \n\nYes, this approach work great:\nNSString *str = [audioData base64EncodedStringWithOptions:0];. Hi, @rajsesh-msft . I also have Access violation exception when try to use \n[UIWebView loadHTMLString:baseURL:] \nThe issue takes place if you try to load page from a file:\nNSString* htmlPath = [[NSBundle mainBundle] pathForResource:@\"ExampleApp\" ofType:@\"html\"];\nNSString* appHtml = [NSString stringWithContentsOfFile:htmlPath encoding:NSUTF8StringEncoding error:nil];\nNSURL *baseURL = [NSURL fileURLWithPath:htmlPath];\n [webView loadHTMLString:appHtml baseURL:baseURL];\n. Hi, @DHowett-MSFT . Thank you for checking this issue. I will investigate this and will provide you more details.\nKind regards,\nJulia. Hi, @DHowett-MSFT . \nApologies for delayed response.\nUnfortunately I can not provide you a piece of code to reproduce the issue at the current moment. \nBut I found what causes the crash:\ncompletion block in - (void)evaluateJavaScript:(NSString*)javaScriptString completionHandler:(void (^)(id, NSError*))completionHandler invokes 2 times, at on the second time since completionHandler has been released (line #310) but is not nil, it will crash on the line #301\n. Hi, all. Thanks a million for a feedback. I will try this on Monday, because I have limit access to the machine where I reproduce the issue.. Hi, @ms-jihua .  Building  tools\\tools.sln produced many errors, then I tried to build build\\build.sln and got error MSB3073 \"..\\tools\\nuget.exe restore ..\\build\\build.sln\" exited with code 1. Hi, @bbowman. I was able to build build.sln from develop branch successfully.\nThanks a million to everyone for help!. Hi, @rajsesh \nThe issue is relevant for Visual Studio 15.6.1.\nNuget packages restore fine if I run msbuild /t:restore from Command Prompt for Visual Studio 2017 and even if I restore them when select \"Restore Nuget packages\" fro solution in Visual Studio.\nHowever when I try to build solution  in Visual Studio to deploy the app I get an error\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\NuGet\\15.0\\Microsoft.NuGet.targets(186,5): error : Your project is not referencing the \"UAP,Version=v10.0\" framework. Add a reference to \"UAP,Version=v10.0\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore.\nI am able to build the project using msbuild <name_of_solution>.sln in command prompt, but how I deploy and then package app to submit to the store?\nIs there an easy way to do this without visual studio?\n. I figured out what causes the issue:\nIt takes place if project has reference to the static C++ library, which has reference to the C# Windows Runtime Component.\nThis schema works for plain project converted from XCode:\n{\n  \"dependencies\": {\n    \"WinObjC.Frameworks\": \"*\",\n    \"WinObjC.Language\": \"*\"\n  },\n  \"frameworks\": {\n    \"uap10.0\": {\n    \"imports\": \"native\"\n    }\n  },\n  \"runtimes\": {\n    \"win10-arm\": {},\n    \"win10-x86\": {},\n    \"win10-arm-aot\": {},\n    \"win10-x86-aot\": {}\n  }\n}\nBut C# Windows Runtime Component asks for UAP v.10.0.14393 as target framework when restoring packages.\nIf I change schema to\n{\n  \"dependencies\": {\n    \"WinObjC.Frameworks\": \"*\",\n    \"WinObjC.Language\": \"*\"\n  },\n  \"frameworks\": {\n    \"uap10.0.14393\": {\n    \"imports\": \"native\"\n    }\n  },\n  \"runtimes\": {\n    \"win10-arm\": {},\n    \"win10-x86\": {},\n    \"win10-arm-aot\": {},\n    \"win10-x86-aot\": {}\n  }\n}\npackages restore to C# components fine, but then I get the following error when trying to build & deploy project:\nYour project is not referencing the \"UAP,Version=v10.0\" framework. Add a reference to \"UAP,Version=v10.0\" in the \"frameworks\" section of your project.json, and then re-run NuGet restore.\n. Hi, @MSFTFox  Thanks a million! It works!\nHere is more detailed code snippet, which works for me:\n```\n        WXCInkCanvas inkCanvas = [WXCInkCanvas make];\n    CGRect frame = CGRectMake(0, 0, 500, 500);\n    UIView inkCanvasView = [[UIView alloc] initWithFrame:frame xamlElement:inkCanvas];\n    [_mainView addSubview: inkCanvasView];\nWXCInkToolbar *inkToolbar = [WXCInkToolbar make];\ninkToolbar.targetInkCanvas = inkCanvas;\ninkToolbar.initialControls = WXCInkToolbarInitialControlsAll;\nUIView *inkToolbarView = [[UIView alloc] initWithFrame:frame xamlElement:inkToolbar];\n[_mainView addSubview: inkToolbarView];\n\n_inkPresenter = inkCanvas.inkPresenter;\n_inkPresenter.inputDeviceTypes = WUCCoreInputDeviceTypesMouse | WUCCoreInputDeviceTypesPen | WUCCoreInputDeviceTypesTouch;\n\n```. YAJL Framework is a great alternative to NSJSONSerializer. Sure, I will add. Sorry, I missed this. Why the build did not break in Debug mode?. > Can you just manually change your tabs to spaces? \nsure, will do. > Please make sure any and all changes to CoreFoundation are annotated with a // WINOBJC:\nwill do, thank you. Hi, @bbowman .\n\nI also don't quite understand the issue and what the fix is here. Can you elaborate?\n\nThe changes I made are fix for the issue #1613 . In my last comment to the issue 1613 I mentioned that I found the solution, which I applied in \"_preferencesDirectoryForUserHostSafetyLevel\" in CFPreferences.c  . But then I changed it to the implementation, which I submitted as PR, because I thought it was more relevant.. Hi, @bbowman .\nCFMaxPathSize defined in CFInternal.h as following:\n``/ Buffer size for file pathname /\nif DEPLOYMENT_TARGET_WINDOWS\ndefine CFMaxPathSize ((CFIndex)262)\ndefine CFMaxPathLength ((CFIndex)260)`\n```\nI do not know why such value was chosen for Windows target. CFMaxPathSize definition used in many places of CoreFoundation.. ",
    "ZeWaren": "Same here.\nThis class is required to build AFNetworking.\n. ",
    "bhagyas": "+1\n. ",
    "Inverness": "I assume this will come whenever the code for Swift is released.\n. ",
    "sirinath": "Great. Is this definite?\n. When Apple open source Swift it will need to  be ported to Windows as Windows is not included in the supported platform list. \n. Looking forward to this as well as a MS Windows port of Swift\n. Can something be done about this fast?\n. Can MS do something about this? Any information from the review?\n. Guys also see: https://twitter.com/Chris__Bailey/status/791333985649586176\nBut having said that it would be good if there are non cygwin solution also.\n. @jmsaunders-ms can you look at adding the above option?\n. There are so many good open source libraries out there. It would be nice to use them in the .net also and vise versa.\n. If you do this at the level of LLVM IR and MSIL/CIL here about can convert from one to the other the possibilities are endless. If you add Java ByteCode to the mix then it will be even more awesome as it will make more libraries available to whatever language you use.\nAlso see:\nhttp://elementscompiler.com/elements/silver/faq.aspx\nhttp://elementscompiler.com/elements/silver/\nhttps://github.com/remobjects/CodeGen4\nhttps://github.com/remobjects/sugar\nhttps://github.com/remobjects/Marzipan\nhttp://robovm.com/ \n. Can you use normal C/C++ code valid in Clang?\n. OK Great\n. +1\n. ",
    "NSBrianWard": "I seem to recall in one of the talks they were giving about the bridge that they all but confirmed that it would eventually happen and then they sort of officially walked it back to \"no comment.\"\nSwift is the future of iOS development. There's no way that Microsoft won't eventually support it. If they don't, I'd imagine there's going to be enough code out there for someone to hack it all together between this project and Apple's Swift sources.\n. ",
    "MaddTheSane": "Also worth mentioning is that Swift will be open-sourced later this year. The ObjC-Swift bridging probably won't, though, so Microsoft would have to roll their own.\n. To my knowledge, JavaScriptCore is a part of Apple's own WebKit implementation.\n. Older versions of OS X and iOS didn't have dispatch types managed by ARC. I know CocoaLumberjack has some preprocessor macros depending on the OS version being compiled for.\n. A simple fix is (in your own code) checking if NS_DESIGNATION_INITIALIZER is defined, and if it isn't, defining it to nothing:\n```\nifndef NS_DESIGNATION_INITIALIZER\ndefine NS_DESIGNATION_INITIALIZER\nendif\n``\n. On Apple's CoreFoundation framework,CFTypeIDis defined as a 32-bit unsigned integer on 32-bit architectures, and a 64-bit unsigned integer on 64-bit architectures (even going so far as being anunsigned long long` on LLP64 architectures, like Windows).\nAfter doing some digging, it seems the function implemented in CFType.mm is commented out, and doesn't match the declaration in CFBase.h. That said, how it is implemented is fragile. Depending on how MS decides to do Core Foundation types, passing an id for CF types may not be valid.\n. I, myself, have not encountered any plist that are UTF-16. .strings files, however, (especially from older projects, especially if they don't use any form of VCS) are usually UTF-8 or UTF-16, although  they can be any encoding (Xcode converts them to UTF-16 when building on OS X, but encodes them as a binary plist on iOS, unless otherwise specified).\n. The Accelerate framework does use BLAS and LAPACK, along with their own libraries, I'm sure.\n. Correction: It's needed to build CocoaLumberjack, which SVGKit relies on.\n. ",
    "James-Parsons": "+1\n. @xGEKKOx  you do understand that Apple wants to phase out Obj-C in favor for Swift.\n. Sigh, If only Xamarin wasn't stupid expensive :(\n. Over a year later and nothing. I think it's safe to say that we're not getting it.. ",
    "alfredobonino": "+1\n. @xGEKKOx, YOU don't need swift!!!\nI need swift.\n+1\n. ",
    "Tyratox": "+1\n. ",
    "RichVillage": "+1\n. ",
    "jaredStef": "+1\n. @xGEKKOx What possible cons for Windows developers are there? Why wouldn't you want to port Swift? It's going to be open source later this year as @MaddTheSane stated as well. \n. ",
    "jamesmblair": "+1\n. ",
    "aluong-yammer": "+1\n. There weren't any errors when vsimporter runs. I see the errors when building. \n. Hmm...I don't recall getting that error, @agustingandara.\n. ",
    "agustingandara": "+1\n. @xGEKKOx ASM is good enough.\n+1 to Swift.\n. @aluong-yammer Is these your same problem? #104 \n. @aloung-yammer look my issue report #104.\nCoreData isn't implemented right now.\n. To use WinObjC, there are a few requirements. You need:\nWindows 10\nVisual Studio 2015 with Windows developer tools. Visual Studio 2015 Community is available for free here. Select (at least) the following components during installation:\nProgramming Languages -> Visual C++\nUniversal Windows App Development Tools (all)\nWindows 8.1 and Windows Phone 8.0/8.1 Tools (all)\n. @asimonov-msft when I vsimport my XCodeProject first shows me these errors.\nC:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app>vsimporter\n[W] Ignoring \"CatalogoLibs\" target with unsupported product type \"com.apple.product-type.framework\".\n[W] Failed to process PBXTargetDependency (C34FB1731AE04BFB00618DB5) for \"Essen AR\" target. Unable to create dependency target in \"Essen\" project.\n[W] Ignoring unsupported PBXCopyFilesBuildPhase in \"Essen AR\" target.\n[W] Ignoring \"CatalogoLibs\" target with unsupported product type \"com.apple.product-type.framework\".\n[W] Failed to process PBXTargetDependency (C38D73D31AE16FFF00DA1BAC) for \"Essen UY\" target. Unable to create dependency target in \"Essen\" project.\n[W] Ignoring unsupported PBXCopyFilesBuildPhase in \"Essen UY\" target.\n[W] Ignoring \"CatalogoLibs\" target with unsupported product type \"com.apple.product-type.framework\".\n[W] Failed to process PBXTargetDependency (C38D74481AE1765A00DA1BAC) for \"Essen BO\" target. Unable to create dependency target in \"Essen\" project.\n[W] Ignoring unsupported PBXCopyFilesBuildPhase in \"Essen BO\" target.\n[W] Ignoring \"CatalogoLibs\" target with unsupported product type \"com.apple.product-type.framework\".\n[W] Failed to process PBXTargetDependency (C3D006851AE6BCFE007C7101) for \"Essen LA\" target. Unable to create dependency target in \"Essen\" project.\n[W] Ignoring unsupported PBXCopyFilesBuildPhase in \"Essen LA\" target.\n[W] Ignoring \"CatalogoLibs\" target with unsupported product type \"com.apple.product-type.framework\".\nGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen.vsimporter\\Essen AR-WinStore10\\Essen AR.vcxproj\nGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen.vsimporter\\Essen BO-WinStore10\\Essen BO.vcxproj\nGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen.vsimporter\\Essen LA-WinStore10\\Essen LA.vcxproj\nGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen.vsimporter\\Essen UY-WinStore10\\Essen UY.vcxprojGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen.vsimporter\\Essen-Headers-WinStore10\\Essen-Headers.vcxitems\nGenerated C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\Essen-WinStore10.sln\nI open the project with VisualStudio and when I try to run it, the compiler shows me errors with sqlite3 library, its not found.\n1>------ Build started: Project: Essen AR, Configuration: Debug Win32 ------\n1>  ConsumeRuntimeComponent.cpp\n1>  ....\\CatalogoAR\\AppDelegate.m\n1>C:\\Users\\agustingandara\\Documents\\repo\\essen\\essen_app\\CatalogoLibs/DataBaseModel.h(10,9): fatal error : 'sqlite3.h' file not found\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\n. @asimonov-msft @s5msft What about importing the NuGet Package of the same sqlite3 project?\n. I added the same NuGet Package of sqlite3 project, download and add headers to my project. Problem seem to be solved. \nBUT! I had to raise another error: fatal error LNK1181 #104 \n1>------ Build started: Project: Essen AR, Configuration: Debug Win32 ------\n 1>LINK : fatal error LNK1181: cannot open input file 'CoreData.lib'\n ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n ========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\n. So, still waiting\n. ",
    "xGEKKOx": "-1 Do not port swift please.\n. Obj c / C++ is good enough, we don't need swift. That's all.\n. ",
    "vitalyster": "@BigxMac so there is no need to make different, incomplete and buggy implementation, just wait Apple's release.\n-1 too\n. ",
    "pierrejochem": "+1\n. Hey Guy's have a look here:\nhttp://www.elementscompiler.com/elements/silver/default.aspx\nhttps://swiftforwindows.codeplex.com/\nhttps://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418\nI'm quite sure this will getting forward!\n. ",
    "mikenolimits": "There actually is a version of Swift for Windows.\nhttp://www.elementscompiler.com/elements/silver/\nThe only downside is working with iOS/OSX requires you have a Mac on hand, but otherwise its pretty close to the real thing and works straight from visual studio. \n. ",
    "BlameOmar": "@mikenolimits The most vexing thing about Silver is that its String and Array are reference types instead of value types, so existing Swift code can't simply be recompiled and be correct.  I suggest waiting for the near immediate Windows port once Apple open sources the compiler and standard library.\n. ",
    "ananthunair": "seems apple is favouring swift more so swift support will be required for islandwood to stay in game\n. ",
    "rjong": "Now Swift is Open Source, I hope that the bridge will support it soon. :)\n. ",
    "zeiteisen": "+1\n. ",
    "farshid3003": "windows bridge for swift 2.0 please\n. ",
    "garanda21": "+1\n. ",
    "woodyyan": "+1\n. ",
    "OgnjenKop": "+1\n. ",
    "cfnp76": "\ud83d\udc9c\ud83d\udc9e\u2763\n\nOn 09/02/2559 BE, at 10:57 AM, Hanno notifications@github.com wrote:\n+1\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "PrinceDhaliwal": "+1\n. ",
    "b1lb0": "+1\n. ",
    "sakrist": "+1\n. Cool, thanks. \nWas not sure if it was duplicate, because mine gives little more details.\n. Please check my pull request. glMapBufferRangeEXT function works as expect on many devices.\n. I think this can be closed.\n. @jaredhms done.\n. @rajsesh-msft \nOk, I made changes for functions which we have in use.. @rajsesh-msft, @jaredhms, let me know if anything. . Thanks, @memontic-ms. This is fixing one problem, but creates two another :) \nThen, @import does not work, which is clear because of modules disabled.\nAnd DWORD, BYTE, etc. windows types appearing available, not sure if it's good sign.\n. @mukhole \n\nwill it be possible for you to share a small repro code?\n\nI will try make one.\n\nDo you mean that they become available?\n\nYes. Ok then. :)\n. Here is example\nTestRuntime.zip\nAlso this example contains performance test for NSMutableDictionary.\n// Release configuration\nMacbook Pro retina Mid 2012 execution Time = 0.072745\nSimulator execution Time = 0.073937\niPad Pro execution Time = 0.052146\niPhone 6s execution Time = 0.067340\niPad Air execution Time = 0.230346\niMac Late 2015 - WinObjC execution Time = 0.203197\niMac Late 2015 - Apple's objc execution Time = 0.046296. so #1515 fixed and can be closed? . duplicate for https://github.com/Microsoft/WinObjC/issues/25. It's fixed now for clang 6 error. But with VS 15.9.0 getting expected Clang 7 or newer.. Ok.\n. But success not in use in this method, after GLKMatrix4Invert. Actually, I think, to GLKMatrix4Invert can be passed NULL in this case.\n. Do you want me revert it or delete success?\n. @rajsesh-msft  test is done.\n. In original, apple's implementation, bool was used across all functions of GLKitMath, no BOOL.\nI changed it, because BOOL could break some apps which potentially will be ported in future.\nbool works for me in .m files. Will test it in .c file.. On, no problem. Make sense.. Done. added too. I merged BOOL changes to my working branch and now my original project can't be compiled because of BOOL. With bool everything was ok.. @jaredhms done. ",
    "zhengying": "+1\n. ",
    "michaelversus": "+1\n. ",
    "jeeftor": "\ud83d\udc4d \n. ",
    "nazrdogan": "+1\n. ",
    "cherepets": "+1. ",
    "bredov": "With some recent activity on apple/swift (apple/swift#5904 and others) it seems windows (MSVC) support may land into official repository in several months. \nWill Swift be considered to be supported by winobjc project after it gains full support for building on windows?. ",
    "gruve-p": "+1. Thank you for your kind reply.\nI went for option 1 and renamed IntTypes.h to something else. I am getting now other errors:\n\nAre you able to build the application by renaming IntTypes.h to something else?\n. Any updates on this?. ",
    "jack-guy": "It appears Windows support for Swift is a go. That should have been the last blocker on support for this, right?. ",
    "ad1Dima": "@harangue it support compile Linux binaries om windows. Not windows binaries unfortunately.\nhttps://github.com/apple/swift/blob/master/docs/Windows.md#windows-subsystem-for-linux-wsl. Any news? More exact plans?\nI guess dispatch_group_t should be resolved too.. @mnithish here you are\nInkpad.txt\n. @mnithish  thanks, It was helpful\nHad to replace static inline with extern inline too\nifdef WINOBJC\nextern\nelse\nstatic\nendif\ninline float WDMagnitude(CGPoint point)\n. And what about permanent solution in compiler?. @weswmsft @mnithish any news from compiler team?. It seems, like you'd fixed it.. @ArnOmsft @rajsesh-msft should I close it?. @jcamachov Can you show us line 63 in this file?\n. as for 'sqlite3.h'\u00a0there is solution #309. for \"expected ':' in \"SlideNavigationController.h\" line 58\"\nI guess sources is needed.. @jaredhms Repo: Convert -> Launch -> Click \nIn 12-14 hrs I'll be able to provide converted project or call stack. all trace I can get\u00a0\n```\n    UIKIT.DLL!wil::details::ReportFailure(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, void * returnAddress, wil::FailureType type, HRESULT hr, const wchar_t * message, wil::details::ReportFailureOptions options) Line 3114 C++\n    UIKIT.DLL!wil::details::ReportFailure_Hr(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, void * returnAddress, wil::FailureType type, HRESULT hr) Line 3151   C++\n    UIKIT.DLL!wil::details::in1diag5::_FailFast_Unexpected(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code) Line 4180  C++\n    UIKIT.DLL!-UIPanGestureRecognizer touchesEnded:withEvent: Line 337    Objective-C++\n    FOUNDATION.DLL!-NSObject performSelector:withObject:withObject: Line 275   Objective-C++\n    UIKIT.DLL!-UIView _processGesturesForTouch:event:touchEventName: Line 210   Objective-C++\n    UIKIT.DLL!-UIView _processPointerEvent:forTouchPhase: Line 499   Objective-C++\n    UIKIT.DLL!__41-[UIView _initPrivWithFrame:xamlElement:]_block_invoke.3773(void * .block_descriptor, id * sender, id * e) Line 761   Objective-C++\n\nOBJCUWP_WINDOWS_UI_XAML.DLL!022f062f()  Unknown\n```. Ok. I find out minimum reproducable code:\n\n```\n- (BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];;\nUIViewController* vc = [[UIViewController alloc] init];\nself.window.rootViewController = vc;\n\nUIPanGestureRecognizer *panGestureRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action : @selector(panGestureRecognized : )];\npanGestureRecognizer.delegate = self;\n[self.window addGestureRecognizer : panGestureRecognizer];\n\nself.window.backgroundColor = [UIColor whiteColor];\n[self.window makeKeyAndVisible];\nreturn YES;\n\n}\n-(BOOL)gestureRecognizer:(UIGestureRecognizer )gestureRecognizer shouldReceiveTouch : (UITouch )touch\n{\n    return NO;\n}\n-(void)panGestureRecognized : (UIPanGestureRecognizer *)recognizer\n{\n}\n```. In 0.2\u00a0170201 bug still exist.\u00a0. @DHowett-MSFT does it reach Release? Cause it doesn't work for me. It looks like it work in prerelease version.. ",
    "privet56": "+1. :-(\n. ",
    "mhuusko5": "+1. ",
    "ndcg91": "+1. ",
    "CyangYu": "+1. ",
    "mubaris": "Any update on building a Swift bridge?. ",
    "ak0815": "+1\n. ",
    "nicholasgerard-msft": "Check out our new video here and its accompanying tutorial blog post here.\n. @alexdrenea vsimporter currently provides support for Storyboards and Xibs using xib2nib. It doesn't support all Storyboard/Xib features, but many standard use cases are supported and should convert without issue. It's worth noting, however, that Visual Studio does not currently have a Storyboard editor, so if you build your layout using Storyboards, any changes you make will have to be made on the Xcode side and then run through vsimporter again. We're also working on an updated and more capable version of xib2nib.\n. @alexdrenea When you run vsimporter, do you get any error messages? And when you run your app, can you provide any of the debug output?\n. @TorreyBetts This issue should be fixed with newer versions of the bridge. Could you please check with the latest release and close the issue if it is resolved?\n. Thanks for bringing this to our attention. The relevant text has now been relocated to the Roadmap section of the Wiki and updated.\n. Check out the new and improved Wiki for a high-level view of what we're working on:\nhttps://github.com/Microsoft/WinObjC/wiki\n. Could you file an issue if you're still having problems with the latest release? You can find it here.\n. We've now published coding guidelines and standards as part of our wiki. Please take a look at How to Contribute and ClangFormat for more information. Thanks!\n. In this week's release of the bridge we've officially made the move to the GNUstep Objective-C 2.0 runtime, which should fix this issue. Please let us know about any issues you find with the new runtime here on Github!\n. In this week's release of the bridge we've officially made the move to the GNUstep Objective-C 2.0 runtime. Thanks for the suggestion, and please let us know about any issues you find with the new runtime here on Github!\n. Thanks for pointing this out. Github is now our primary means of communication with the community and contributors. Please file issues for any bugs you encounter or questions you have.\n. We've now published coding guidelines and standards as part of our wiki. Please see How to Contribute for more details.\n. @volkrass This issue should be fixed with newer versions of the bridge. Could you please check with the latest release and close the issue if it is resolved?\n. Closing this for now \u2013\u00a0please open a new issue if your problem persists in the latest release of the bridge.\n. @mlfarrell Is this issue resolved for you? If so, please close it out.\n. @mlfarrell Closing this for now. Please reopen if the problem persists for you in the latest release of the bridge.\n. @mlfarrell Hi, could you give us an update on the status of your project here? Have you been able to get it to compile, link and run successfully?\n. @yw346090249 Please file a new issue if you're still encountering problems importing your project to Visual Studio. A good place to start with the bridge is the included samples or by browsing the materials in the wiki.\n. The focus of the iOS bridge is on Universal Windows Platform (UWP) apps. We currently have no planned support for classic Win32 applications. You may be interested in signing up for updates on Microsoft's Project Centennial, which you can read more about here.\n. @technotrance could you clarify? Are you working on implementing support for CoreData in the bridge?\n. @technotrance would be great to discuss your implementation/scope/timeline \u2013\u00a0would you mind shooting me an email at nicholas dot gerard at microsoft dot com?\n. @ardentra While we don't have plans to support all of CoreAudio in the near future, we do have support for OpenAL and AudioToolbox, which you can use directly. We also support the MediaElement XAML control by way of projections; check out WOCCatalog (see XamlViewController) for an example.\n. @ganchito55 you're correct, this happens when you're using a CocoaPods-generated Xcode workspace instead of an Xcode project. We don\u2019t currently support CocoaPods since our clang compiler front end doesn\u2019t support virtual filesystems, which CocoaPods depends on. Right now we suggest manually including third party frameworks and SDKs.\n. EventKit isn't currently supported with the bridge, but it's in our backlog.\n. MapKit is not in our immediate roadmap (see our roadmap in the wiki), but may be included in future releases. For the time being, we suggest using XAML's MapControl in your app.\n. MobileCoreServices is in our backlog and we're working on it for a future release, but it's not in our immediate roadmap. The roadmap page on our wiki outlines our goals for the next month or two.\n. Only Objective-C Xcode projects are currently supported by the iOS bridge.\n. Unfortunately, the bridge does not currently support Google Maps.\n. Object inspection is currently not supported, but we're working on it and also generally improving our Visual Studio debug tooling. Stay tuned.\n. @alexdrenea We're here! Come by our booth on the floor any time today, we'd love to chat. We also had our session yesterday at 5 pm, you can see the video here:\nhttps://channel9.msdn.com/Events/Build/2016/B862\nWe'll also be doing a live Channel9 panel this afternoon at 3.\n. Great! Please open another issue if you encounter any bugs.\n. CocoaPods are not currently supported by the bridge as our clang compiler front end does not support virtual filesystems, which CocoaPods depends on. It's a feature request we get a lot, so we're investigating adding support, but in the meantime you can try removing CocoaPods and manually including your third party libraries before running vsimporter.\n. The bridge does support Storyboards, but the Xib2Nib tool is still under development and does not support all Storyboard scenarios. Can you post the full contents of the log so we can figure out what tripped it up?\n. The wiki has been updated:\nhttps://github.com/Microsoft/WinObjC/wiki/How-to-Contribute#running-tests\nThanks!\n. Could you elaborate on what you're trying to achieve and what APIs you're using? The sample project you linked to contains an unused DrawingView class, but since it's not used anywhere I'm unclear on your use case and on what, exactly, isn't working. Are you trying to render a UIView to a UIImage, or save an image to disk?\n. Are you using CocoaPods? CocoaPods are not currently supported by the bridge as our clang compiler front end does not support virtual filesystems, which CocoaPods depends on. It's a feature request we get a lot, so we're investigating adding support, but in the meantime you can try removing CocoaPods and manually including your third party libraries before running vsimporter.\n. @tmm1 Try checking your Build Settings in Xcode. Under Architectures, make sure you're targeting both arm64 and armv7 (or use the $(ARCHS_STANDARD) variable). Then try rebuilding and resubmitting your IPA.\n. @tmm1 In that case, your best bet is to try out the bridge itself, which you can download here. Once your project is up and running in Visual Studio, you'll see any unsupported methods or properties you're calling printed to the console. (This is similar to the data you'd get from the IPA Analysis Tool, but has the added benefit of being generated at runtime \u2013 rather than extracted from a compiled binary \u2013 so it should correspond even more closely to what you're actually using.)\n. I've never seen this before (I've tried the same sequence on previous builds) and didn't find any bugs matching it.\n\nFrom: Raj Seshasankaran notifications@github.com\nSent: Friday, December 16, 2016 12:12:57 PM\nTo: Microsoft/WinObjC\nCc: Nick Gerard; Mention\nSubject: Re: [Microsoft/WinObjC] Canabalt, Climbers [x86|Debug, Release] Minimizing and reopening the app disables interaction (#1571)\n@nicholasgerard-msfthttps://github.com/nicholasgerard-msft do you have any regression info?\n-\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/1571#issuecomment-267685458, or mute the threadhttps://github.com/notifications/unsubscribe-auth/APLQLcNN57-GaYhyaSeZ5G8-iIh4RZ7Oks5rIvDJgaJpZM4LPeb6.\n. ",
    "SquaredTiki": "Looking at the xib2nib tool it seems to be using the old XIB format (pre-version 3) for some reason for all XIBs but then the correct new format for Storyboards. Not sure if this is related. \n. @lemonmojo Probably as a result of it looking for a key that doesn't exist. All the code needed appears to be there to make it work with the 'new' (couple of years old) XIB version as it is exactly the same format that Storyboard's use, however it hasn't been implemented.\n. \ud83d\udc4d\ud83c\udffc\n. See #27 \n. See #27 also\n. ",
    "lemonmojo": "@SquaredTiki Yep, the problem seems to be related to the Xib2Nib tool. I just tried invoking it from the command line and it crashes instantly. Unfortunately there's no error message coming along with the crash.\n. ",
    "alexdrenea": "Are there any updates in supporting Storyboards / Xibs?\nAll the threads regarding this seem to be really old. The roadmap states that there is \"preliminary Storyboard support\" and \"preliminary xib support\". What does this mean ?\nThank you.\n. Thanks for the note.\nMy storyboard looks like was converted (no error from xib2nib) but when I run the app, I am getting a white screen (the viewDidLoad does not fire in the viewcontroller). It's what I think to be a standard storyboard with a few elements on the screen (I am using AutoLayout though).\nDo you think this comes from the storyboard or should I look somewhere else?\nThanks,\n. I didn't get any errors or warnings when I ran vsimporter.\nI was able to clone the repo, compile the sources and debug my app startup. \nWhen app is starting up, in UIApplicationMain.mm - UIApplicationMainInit it gets to a point where it tries to initialize the Storyboard ( UIStoryboard* storyBoard = [UIStoryboard storyboardWithName:storyBoardName bundle:[NSBundle mainBundle]]; ) and this returns Nil which means the rootController does not get set.\n. I'm getting a similar exception in \nUIVeiwController.mm -> _dismissTransitionStopped-> at priv->_dismissCompletionBlock = nil ;\nI'll post exact exception once I get it.\n. Hi Ramu, \nI realized that the branch was not clean as per the contribution guidelines. I was just about to submit it again from a clean branch,\nAlex.\nedit: new PR submitted. please see #380\n. I noticed that the xib2nib converter does not know how to interpret colors set in the \"sRGB\" customColorSpace.\ni.e.<color key=\"textColor\" red=\"0.084091044962406158\" green=\"0.77163618803024292\" blue=\"0.55619001388549805\" alpha=\"1\" colorSpace=\"custom\" customColorSpace=\"sRGB\"/>\nIf you set the colorText using a regular color from the interface builder color picker, it should work( the output is something like this:  <color key=\"textColor\" red=\"0.0\" green=\"0.0\" blue=\"0.0\" alpha=\"1\" colorSpace=\"calibratedRGB\"/>)\nI will be creating a pull request soon to fix the issue but int he meantime, please try and see if setting a different color works.\nAlso, if you could share your storyboard or xib that is failing it would also be helpful.\nThanks.\n. Hi Ramu,\nThanks for pointing that out. I pushed a change to fix formatting for the UIStoryboard.mm file.\nHowever, based on the number of changes I get after applying it to the xib2nib files, I don't think they have been previously clang formatted so I am hesitant to check those in. I've maintained the same formatting found in the code written before me so hopefully that is ok. Let me know if you want me to clang-format them as well \nAlex.\n. Looks like something was merged in the main repo since my pull request and it caused a conflict. It's not in the files I changed. Should I go ahead and create a new commit with the merge or how should we proceed?\n. Thanks Ramu and team. I will definitely take a look at the comments. I am currently at BUILD, any chance to meet some of you there?\n. Hi Ramu,\nI had to take a break from this due to some other projects, but I do want to fix this since it was essential to the success of my port and I am sure others are in the same boat.\nI am a bit confused about a couple of the team's comments. Any chance we can have a convo over email? Would that be easier? I got Zakir's email at BUILD, I will send him a note and maybe he can fw to you.\nThanks,\nAlex.\n. I updated the pull request with newest changes\n- merged master into branch since it was way out of date\n- applied fixes for most of the feedback received. posted replies here where I wasn't sure what the comment meant.\nThanks,\nAlex\n. The map is stored in the info.plist that we generate in the storyboardc folder, alongside UIViewControllerIdentifiersToNibNames. It is not modifying the nib file output.\n. Not sure what you mean by the reference platform entries. I thought the info.plist file is a concept introduced by you to manage the nibs that are generated from a storyboard.\n. If working with valid storyboards, this should never happen. Did not find a logging infrastructure in place in the project so I used a printf statement.\n. Sorry, I don't know too much about dynamic_cast. I followed conventions that I saw in other parts of the code. \nThe code compiles and runs without errors.\n. ",
    "technotrance": "On board support to stop viruses and hacks by diplaying what kind of trojan was implemented and my repository repairs all the above and would be in the library core drawer its asking for action to be taken by showind you the diagnostics visual on your screen and programme\n. All sounds good but we need a picture of a layout map\n. yes if you built a converter in java that can convert to your file for eg xvid to bdrip on downloads\n. My programme only needs changing from a 32 bit programme run to a 64 bit you can access these functions by in name typing T and password is~\nSymbol that is a secret good luck\n. The platform is in ntsc and it is run under a 32bit system and the uploads require their own format play platform for eg a mp3 requires a mp3 programme software to run\n. Try using mine\n. Already at it\n. Yes\n. And repair encryption\n. Just a secret the programme I have developed is designed to run on a 32 600 to800 pixel format because the system works too fast and I'm afraid of over system performance lol \n. Please for mine perfect\n. try changing the 32 bit graphics to the 64 bit graphics\n. ",
    "rasmusgude": "It seems that the vsix has InstallationTarget set to VS Pro. ver. 12.0.\nI changed it to VS.Pro 14.0 and it installed perfectly into VS2015 Enterprise.\nThe vsix file is basically just a zip file, so do the following:\n- Unzip the objc-syntax-highlighting.vsix with e.g. 7-zip.\n- Open extension.vsixmanifest and change the line <InstallationTarget Id=\"Microsoft.VisualStudio.Pro\" Version=\"[12.0]\" /> into <InstallationTarget Id=\"Microsoft.VisualStudio.Pro\" Version=\"[14.0]\" />\n- zip the thing back into a vsix file. e.g. objc-syntax-highlighting_hacked.vsix and run it.\nNote that the above is only a hack to get things working.\nThe right thing is to fix it in the source in \\msvc\\language\\ObjectiveC\\. \nIf/when I have time I will do a proper fix.\n. Is the language service supposed to build/run in VS2015? \nThe solution is located at  \\msvc\\language\\ObjectiveC.sln\nIt seems to build in VS2013 and if it is to support VS2015 then the .csproj file needs to be updated or a VS2015-specific solution must be created.\nIt's easy to get it working just by upgrading the project and adding the correct path to VS with cmd args: \n\n. ",
    "vaualbus": "Thanks, I open the project add the correct version and recompile it and install the packages.\nBut of course my package are not signed but for me that is not a problem.\n. Now it's working. Thanks.\n2015-08-07 21:14 GMT+02:00 Dave Lamb notifications@github.com:\n\nThe vsix found in WinObjC/bin (not in the SDK zip) has been updated to\nwork with 2015. Give it a try, and let us know if you have any more\nproblems.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/28#issuecomment-128798528.\n. \n",
    "johndpope": "I noticed this wasn't entirely complete - I created some objective-c syntax file here \nthis were for library specific methods - it's around 500kb\nhttps://www.editplus.com/javacpp.html\n. ",
    "Baddaboo": "As much as I too really hope that this comes to WinObjC, I'm not sure how much the dev team would be able to on that, since UIBezierPath is just a wrapper for CoreGraphics, which is just a wrapper for Quartz, I believe. Quartz is closed and has many patents associated with it held by Apple, and a lot of the bezier techniques are patented and used by Adobe, which is why there was no real equivalent on Android until 5.0. So porting over these frameworks would be a pretty big legal feat before it's even a technical possibility *shrug\n. ^ Now that's when you know he was just trolling\n. ",
    "TorreyBetts": "I created a project this morning to demonstrate the issue. Also, this project was imported using vsimporter. Here's the VS log when attempting to build.\n1>------ Build started: Project: WinObjC_Issue33 (WinObjC_Issue33\\WinObjC_Issue33), Configuration: Debug Win32 ------\n1>  ConsumeRuntimeComponent.cpp\n1>  ..\\..\\WinObjC_Issue33\\main.m\n1>  ..\\..\\WinObjC_Issue33\\AppDelegate.m\n1>  ..\\..\\WinObjC_Issue33\\ViewController.m\n1>C:\\winobjc\\samples\\WinObjC_Issue33\\WinObjC_Issue33\\ViewController.m(71,27): error : incompatible types casting 'CGPathRef' (aka 'id') to 'id' with a __bridge cast\n1>C:\\winobjc\\samples\\WinObjC_Issue33\\WinObjC_Issue33\\ViewController.m(72,25): error : incompatible types casting 'CGPathRef' (aka 'id') to 'id' with a __bridge cast\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\nProject can be downloaded here: https://www.dropbox.com/s/5hcvs7m6s15d4g9/WinObjC_Issue33.zip?dl=0\n. ",
    "atomicbird": "I second this. The license on Cocotron allows use of the code. Removing the attribution is the only thing one could do that violates the license. \n. @s5msft Here's a simple example. Compare\n- https://github.com/Microsoft/WinObjC/blob/master/Frameworks/Foundation/NSPropertyListReader.mm\n- https://github.com/cjwl/cocotron/blob/master/Foundation/NSPropertyList/NSPropertyListReader_binary1.m\nThe version in this repository is clearly derived from the Cocotron version. The file contents are not identical but a few \"highlights\" include:\n- NSPropertyListReader only exists in Cocotron. It's not an Apple Foundation class.\n- Code and especially comments on ExtractUID\n- Code and comments in _readInlineObjectAtOffset\n- Code for _readObjectAtOffset\nThis is not a complete list, even for code in this single file. Your version clearly originates with Cocotron, yet the original copyright notices have been removed and replaced with one crediting Microsoft.\n. ",
    "migueldeicaza": "As pointed out on twitter, the implementation files dropped it.\nI do not think it is realistic to ask open source contributors \"come and find your code in our re-released codebase and points out the errors\".   \nSomeone at Microsoft needs to go back to the first commit and track down every bit of code that was taken, and investigate the origin of the code, and properly restore the copyright notices.\n. ",
    "cjwl": "As Miguel said, this is not my responsibility. \nWith respect to Cocotron, I will point you to the Framework/Foundation/.mm and .h files.\n. Focus on the implementation files.\n. ",
    "non-binary": "\u0ca0_\u0ca0\n. ",
    "landonf": "The providence of the code across the entire code base is questionable; for example, the CFDictionary implementation appears to be derived from the MIT/X11-licensed Klib, but all copyrights have been stripped:\n- CFDictionary.mm\n- KLib's khash.h\nReiterating what Miguel already stated, someone at MS will need to verify the source and licensing of code across the code base.\n. @s5msft \n\n@JensAyton We were referencing the copyright header from:\nhttps://github.com/cjwl/cocotron/blob/master/Foundation/NSPropertyList/NSPropertyListReader.m\nIs that incorrect/incomplete?\n\nThe code in WinObjC's NSPropertyListReader.mm is derived from https://github.com/cjwl/cocotron/blob/master/Foundation/NSPropertyList/NSPropertyListReader_binary1.m, rather than NSPropertyListReader.m\nThis is really where Miguel's recommendation still stands; this needs to be fixed through a complete historic audit, not on an ad-hoc basis depending on outside reporters.\n\n@bmastenbrook In some of these cases, we have explicit permission from the authors to relicense sections of relevant code.\n\nHas the QPL/GPL-tagged code been relicensed under a permissive license, or does it still apply to anyone integrating/distributing this code?\n. ",
    "bmastenbrook": "It doesn't look good, folks. Just idly browsing across the code finds stuff like:\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/Starboard/Quaternion.mm\nWhich clearly comes from elsewhere, though I can't narrow down an upstream source based on the distinctive comments (https://encrypted.google.com/search?tbs=li:1&btnG=Search&q=%22This+function+is+the+milk+and+honey+of+our+quaternion+code%22#q=%22This+function+is+the+milk+and+honey+of+our+quaternion+code%22&tbs=li:1&filter=0).\nParts of https://github.com/Microsoft/WinObjC/blob/master/Frameworks/limbo/FormatPrintf.mm come from the Amsterdam Compiler Kit: https://github.com/davidgiven/ack/blob/ff774212beacd5da20bf2c1092bd2a6b30f4730c/lang/cem/libcc.ansi/stdlib/ext_comp.c\nThere are odd comments across the code that seem to have been copied and pasted out of a HTML menu: /* [<][>][^][v][top][bottom][index][help] */ \nThis file is a copy-and-paste of code from Imagination Technologies' PowerVR SDK, which is not open source:\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/OpenGLES/TexDecompressor.mm\nThe originating upstream file is named PVRTDecompress.cpp. It seems to be widely copied, but here is the original license in a mirror of the upstream code: https://github.com/SiliconStudio/paradox-deps/blob/master/PVRTT/license.txt\nIf I can find these in a few minutes of browsing the code, then I'm sure there are more examples.\nAdditionally, the licensing of the project seems to be a mismash even amongst the components that do have proper headers. I see MIT, Apache, and QPL/GPL at least. The QPL/GPL code is in the core runtime, and neither license allows the distribution of proprietary derivative works.\n. > @s5msft We're in continual contact with the author of objfw, and, yes, it's relicensed under a permissive license in this project.\nThank you for clearing this up, and I am glad to hear that you will be doing a more thorough audit. I am really quite interested in the project, both personally and for my company, and wish you the best of luck in what I know from experience can be an arduous process.\n. ",
    "JensAyton": "The aforementioned NSPropertyListReader.mm has been updated to mention @cjwl, but the original is credited to @mikeash and myself.\n. ",
    "MTWomg": "I am stunned by the immature, jerkoff attitude shown by cjwl/migueldeicaza, among others.\nA meaningless (your licenses are not proven legally valid in the US) block of text that is 'your license' is missing in a 1.0. You alert the vendor, the vendor apologizes and asks where it is missing, with the intent of fixing it. Think about that for a second - a person who matters, doing a thing that matters, is willing to take time out of his day to satisfy you.\nSo, of course, you switch into entitled child mode: \"I DEMAND MY PROPS. FIX IT NOW, I WON'T TELL YOU WHAT TO FIX, I MATTER TOO MUCH. FIX IT FIX IT FIX IT'. As though the world revolves around your license.\nYour conduct should (and hopefully will) prevent either of you from getting a job in the industry ever again. In the case of migueldeicaza, he's long past the point of no return, having made 'being a piece of shit' his claim to fame. May CJWL join him at Unemployable Island.\n@s5msft\nCould you please include unlicensed GPL-encumbered code in the next version, so the Southern Pover....I'm sorry, 'Software Freedom Law Center' can sue and the GPL can finally be deemed non-enforceable in the US? \nOne last bit: scouring this project for code that is missing the relevant license feels similar to Reddit 'investigating' a crime. You have no mechanism to determine if Microsoft relicensed that code or not. And no one cares either way.\n. Namecalling was called for.\nFalse. 'If you like it, fav and subscribe' in and of itself is not legally enforceable. The GPL is a much worse place, spreading like a virus and infringing on basic consumer rights in the process. To say nothing of the other (legal) problems with it. \nNo, it is not plagiarism. Not by any definition of the word. Try again.\nNo, your license is not the law. Demanding MS fav your work does not mean they legally have to do so. You seem to believe that if you create a work you are able to set any terms for use you wish to. That is not the way it actually works - you can't strip a user of their rights by saying that you want to. The legal enforceability of 'fav me' licenses is questionable at best and unproven in the US, as far as I know.\nMicrosoft does not have a moral responsibility to do anything, but they are willing to do so. My problem is with the conduct of those demanding likes, favs and subscribes as opposed to the specific licenses they are using.\n. There is no copyright issue here. The license effectively said 'pls pls pls include my name in your work, pls'. The purpose of copyright is not to ensure that a work remains unmodified by a lawful end user. In other words, if the license itself is legally unsound copyright protections do not prevent one from selecting the offending text and hitting the delete key.\n. @IRIXUser\nThe rude part is showing up, saying 'hey, you forgot my license' and the company responding with 'Oops! Where did we mistakingly remove it? We want to fix this pronto!' and the non-Microsoft entity responding with 'Fuck you! Find it yourself!'\n. @joshtriplett \nThat is what a lot of open source people think. It is not the case. If the license does not meet legal standards, it is text. You can delete text. Copyright does not protect against the removal of text.\nThe license in question is a license in name only. Hope that helps you understand.\n. @jedsmith \nI can assure you that I do not read HN and am far more intelligent than you. I have long been aware of WinObjC. 'Nice' avatar, by the way.\n. @IRIXUser \n1. That's the way it is when you pretend. Your license does not actually matter, nor do you. You can pretend it does and MS can pretend to give a shit but you do not get to treat people poorly in an ill-conceived attempt to get your name into MS's codebase.\n2. Even Microsoft is entitled to a certain degree of respect. The comments in question do not meet the minimum threshold for acceptable human conduct.\n3. As above.\n. No, someone wants it fixed and is being a piece of fucking shit in the process. That's the problem.\n. I want them to challenge it. Microsoft will crush them and all will be well. There is a reason those two are just being rude as opposed to doing anything in the legal realm.\n. Solving the issue is also not useful, so I don't quite follow what your goals are.\n. Of course there wasn't any malice! Only conspiratorial fuckwads would think so. There should have been malice though. Someone large and powerful needs to stomp (many) OSS licenses out of existence. That could have been you! \n. Comments are still open~~~\n. I doubt that as far as the later link goes.\n. ",
    "bitmonk": "\"immature, jerkoff attitude\"\nNamecalling is always a fantastic start.\n\"A meaningless (your licenses are not proven legally valid in the US) block of text\"\nThese licenses are certainly as valid as any license, whether provisions of licenses like the GPL may or may not be enforceable, this code was provided under limited terms, which in this case only requires that the original author is credited, and that the license requiring they continue to be credited is retained.\nLicense aside, removing authorship is plagiarism, but if one doesn't agree with the limited license terms of a copyrighted work, they shouldn't derive work from it.\n\"a person who matters, doing a thing that matters, is willing to take time out of his day to satisfy you.\"\nIt's actually to satisfy the law, and \"doing a thing that matters\", is apparently appropriating creative works in violation of US law and international treaties.\nThat said, while I feel it is Microsoft's moral responsibility to restore original authorship to these files, legally a claim should point out files which are in violation and propose a specific remedy.\nI think an individual employee at Microsoft is taking a good bit of heat here and trying to do what's right.\n. ",
    "fritzy": "Copyright is copyright, regardless of the license. These are typical mistakes, and I'm sure they'll be resolved now that they've been pointed out. Ignore the trolling.\n. ",
    "JX7P": "@MTWomg No one is under any illusions that a bourgeois court would turn out a result in favour of a content producer rather than a large corporation such as Microsoft. Still, it is incredibly rude for a company to appropriate your code with the potential to make profit from doing so, and then not even abide by a simple licence term requesting that copies include attribution.\n. > The rude part is showing up, saying 'hey, you forgot my license' \nSomething that you shouldn't have to do in the first place.\n\nand the company responding with 'Oops! Where did we mistakingly remove it? We want to fix this pronto!' \n\nIt's really not much to expect a company with such resources to be able to find out where they're going wrong themselves.\n\nand the non-Microsoft entity responding with 'Fuck you! Find it yourself!'\n\nAs above.\n. ",
    "joshtriplett": "\nNo, your license is not the law.\n\nIf you don't like the license, what you're left with apart from that license is copyright law, which says you can't copy or distribute at all without permission.  In the absence of that license, you don't have any such permission.\nYou've dropped into the middle of what appears to be an entirely reasonable discussion between people whose code is being used without their permission and people who appear to be working in good faith to resolve that situation and comply with the licenses involved.  Nothing you're doing is in any way improving that situation or contributing to the analysis or solution.  This issue is not the place for introductory discussions of copyright law or FOSS licensing.\n. @s5msft You may find https://help.github.com/articles/locking-conversations/ and https://help.github.com/articles/blocking-a-user/ useful.\n. ",
    "Romoku": "I don't see any meaningful discussion coming from this issue. Can we please lock it?\n. ",
    "jedsmith": "The last half hour of this thread inspired me to write a tool to watch Hacker News and enable repository owners to automatically lock discussion when a URI appears there, but sadly, GitHub does not expose the lock functionality in the API. So here we are, subjected to people who've never heard of WinObjC.\n@s5msft, I suggest locking the issue. Here's GitHub's documentation on it.\n. ",
    "StoneCypher": "Someone made a mistake.  Someone else wants it fixed.  \nThe responsible people are like \"awesome, we screwed up.  Where?\"\nThe people who want it fixed are saying \"omg how dare you ask what you should fix, this isn't our responsibility.\"\nIt would be fixed much faster if you guys would just, in good faith, say \"the mistake is over here.  Thanks for doing the right thing.\"\n. Honestly, you guys need to calm down.  This is not helping.\n. @MTWomg - nobody's going to listen to who you think is entitled to respect if you treat others this way.  Rise to the standard you're trying to set for others, please.  Swearing at people and bragging how intelligent you are doesn't do much to improve these circumstances.\nPlease stop gassing the fire.  This is not useful.  You are being far ruder than the people you're complaining about.\n. ",
    "jeremytregunna": "@MTWomg Perhaps it's time to cool your jets. There are many avenues that could've been taken in this matter, not the least of which would be to file a takedown request. Licences are \"proven legally valid\" when challenged in court. The fact nobody has had to do that yet, generally hints at a willingness of people involved to make situations right when they are wrong. Lawyers are expensive, and most people are reasonable, after all.\nLet the issue progress with the stake holders involved.\n. ",
    "rburhum": "\n. ",
    "TimFerrell": "@StoneCypher - I agree with you, Reptar. \n. ",
    "lumaxis": "@MTWomg I have no idea where your attitude is coming from and I'm not happy about the atmosphere you're spreading here. \nWe at Microsoft deeply value OSS and are gravely committed to properly attribute people and their hard work that they gladly made available to the rest of of the world.\nNow, I can't speak for what went wrong in this project but I am convinced that it didn't happened with bad intentions or any malignity. In my opinion there is still excuse for how this could happen but as they said, the team is apparently working hard on correcting the mistakes and making right by everyone.\n. ",
    "lvh": "This should emphatically be CryptGenRandom calls.\n. ",
    "neuswcjr": "I have also encountered this issue, hope can be supported soon.\n. This bridge tool use angle project to convert OpenGL ES to the directx. The original win10 uwp only support directx, same as win8.1/wp8.1 universal apps.\n. In my case, the dll version library only support vs2010, _MSC_VER = 1600. When I use VS2015, it just refuse to link, which is also the biggest trouble for me to make the original UWP app. So I hope the bridge for IOS can solve this.\n. ",
    "AquinasThomas": "\uc548\ub155\n. ",
    "weswmsft": "This is working with vs2017. We should find a way for vsimporter to provide better feedback.. I do not believe this is still an issue.. This will work by using the web auth broker in Windows.. This is implemented. I need some clarification on this issue. Can you explain what you mean by \"Can not open libz.1.1.3.lib \"??\n. I still do not understand your problem. Please provide the exact steps you are taking and the failure that happens. I simply don't have enough information right now.\n. This is now implemented. What you're trying to do is unsupported. For many reasons it is required that you use the version of the compiler that is distributed with WinObjC. If there are issues with the version of Clang that is part of this project then please file issues and we'll have a look.\n. We're not able to implement this at this time.. Here is the explanation from the compiler team:\nClang/C2 is supposed to follow what CL does. In both cases, I\u2019m not seeing inline functions marked as static in my test. However, if the function is marked inline, we are not required to emit it. If we do decide to emit it, it will be extern select any (so the linker will just pick any one of the versions of the inline function from one of the translation units).\nThis means that an inline function should be defined everywhere it is used (or an extern one should be available). It seems like the open source code mentioned in the bug is using inline in an incorrect way.\n\u201cA function where all the declarations (including the definition) mention inline and never extern. There must be a definition in the same translation unit. The standard refers to this as an inline definition. No stand-alone object code is emitted, so this definition can't be called from another translation unit.\u201d\nhttp://www.greenend.org.uk/rjk/tech/inline.html\nhttp://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\n\u201cSecond, in case of raw inline (ie without static or extern) to provide an inline definition as an alternative to an external one, which has to be present in a different translation unit. Not providing the external one is undefined behaviour, which will normally manifest as linking failure.\u201d\nhttp://stackoverflow.com/questions/16245521/c99-inline-function-in-c-file/16245669\n. Is this still an issue? Do you have a repro for us?. If this still persists please reopen the issue.. Is this still an issue? If so please provide the logs & source code.. If this issue persists please re-open and add the necessary info that was requested. This is fixed by https://github.com/Microsoft/WinObjC/pull/1515. See https://github.com/Microsoft/WinObjC/issues/2126. This is coming very soon.. VS2017 is now supported. This is a known issue that requires changes to Bolts.. Which line of source is causing the compile error? There are not 58 lines of code in your past above.. This was resolved. Current VsImporter ignores LIB search paths on purposes because the likelihood of finding Windows libraries there is almost zero.\nTherefore this will only be useful if the Xcode search paths somehow contain a Windows library (since we obviously can\u2019t link against any iOS libs).\nImporting Xcode library search paths could be helpful for developers that are willing to customize their Xcode projects to make the import/reimport easier.\nThis is certainly an interesting idea and a \u201cnice to have\u201d feature but given the work around we won't be implementing this right now.. I'll refer you to the documentation for your VM provider -- it is different for every VM solution. The basic recipe is to create a VM, mount the Windows ISO in the VM, boot and install Windows.  Accessing your source files from outside the VM should be done over network shares as the shared folder feature does not work well.. podfiles are not supported and will likely not be supported in the future.. I think there was follow up offline on this. The vm shared folders are problematic and using network shares will correct the issue.. Can you please provide more details and explain how we can reproduce the bug?. Work completed. Work completed. ",
    "PaulHaeberli": "Similar problem at \n\"CGBitmapImage.mm\" line 435.\n32.0 -> 31.0\n64.0 -> 63.0\n32.0 -> 31.0\n. ",
    "DancinDirk": "Yeah, we spent a lot of time getting audio playback just right using core\naudio so I'd like to reuse as much of that as possible, unless there's a\nfunctionally equal windows version of coreAudio that could be easily\nsubstituted in.\nOn Sat, Aug 8, 2015 at 6:08 PM, Salmaan Ahmed notifications@github.com\nwrote:\n\n@DancinDirk https://github.com/DancinDirk Maybe. If you want to\ndirectly reuse your iOS code for media capture/playback then you may have\nto hold off for a bit. Alternatively, if you're willing to #ifdef your way\naround a few things, then you can directly use relevant Windows APIs as\nappropriate.\nThe WOCCatalog sample shows you how to do some of this (admittedly not for\nCoreAudio though, just for video playback).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/47#issuecomment-129057683.\n. \n",
    "Alx06": "Is there any simple way to play an mp3 file?\n. @s5msft Thanks for this help, could you tell me how to read a mp3 embedded in the project? I tried to set the Uri to the name of my file, with or without the path, the program crashes (assertion failed). It does not find the file.\n. I found a way to load the mp3 file that does not crash the program, but I can't hear anything :(\nHere is my source code, called each time a mp3 should be played:\nWXCMediaElement *mediaElement = [WXCMediaElement create];\nmediaElement.autoPlay = YES;\nmediaElement.source = [WFUri createUri: @\"ms-appx:///mysound.mp3\"];\n[mediaElement play];\nNo crash, but no sound too :(\n. Thanks a lot, it works now!\nI now have to found a way to play a background music...\n. I tried everything in this setStartupDisplayMode method, but nothing works at all.\nIn certain cases it's even worst as I got a blank screen!!!\nI can provide my project if you need it.\nI added this code to my AppDelegate:\n@implementation UIApplication(UIApplicationInitialStartupMode)\n+(void) setStartupDisplayMode: (WOCDisplayMode *) mode {\n    mode.autoMagnification = TRUE;\n    mode.sizeUIWindowToFit = TRUE;\n    mode.fixedWidth = 0;\n    mode.fixedHeight = 0;\n    mode.magnification = 1.0;\n}\n@end\nAnd what I got was a blank screen.\nI added\nmode.presentationTransform = UIInterfaceOrientationLandscapeLeft;\n=> same result (blank screen)\nSo I commented out these 2 lines:\n    // mode.fixedWidth = 0;\n    // mode.fixedHeight = 0;\nAnd I got my app visible, but still rotated at 180 degrees.\nSo I tried with\nmode.presentationTransform = UIInterfaceOrientationLandscapeRight;\nand it worked!!!\n. Looks like the bug is back.\nI've a \"landscape\" project and the screen is rotated at 180 degrees.\n. Don't set the path to your image in the call of imageNamed:\nUIImage _backgroundImage = [UIImage imageNamed:@\"galaxy.jpg\"];\n. The path MUST not be included.\nTry the code I provide to you:\nUIImage _backgroundImage = [UIImage imageNamed:@\"galaxy.jpg\"];\n. Thanks for this answer @s5msft and thans for this quesiton @volkrass !!!\nI'm also really interested by this project (I've a lot of iOS apps to port) but there are 2 little remaining bugs (eg. popViewController doesn't work) that prevent me to finish.\nAnd I was wondering if there was a dedicated team in M$ for that or not.\nNow, I know. There is such a team, but a little one.\nHope you'll hire quickly some devs.\nWhere could we apply? :) \n. Thanks a lot for your help, but unfortunately that is not the problem (that was wrong, but I still got the same error).\nThe error points to the file C:\\Dev\\ProjectName\\ProjectName.vsimporter\\ProjectName-WinStore10\\Package.appxmanifest that you can download there: https://www.dropbox.com/s/dm8j12itd572nck/Package.appxmanifest.txt?dl=0\nThe error comes from this dependency:\n<Dependencies>\n    <TargetDeviceFamily Name=\"Microsoft.VCLibs.140.00\" MinVersion=\"10.0.0.0\" MaxVersionTested=\"10.0.0.0\" />\n  </Dependencies>\nI tried a lot of things there, but it always links the Debug version.\n(I also tried to modify the Microsoft.AppxPackage.Targets as sais before).\nAre you personally able to generate packages in release mode?\n. I tried to generate the packages for the sample project WOCCatalog, and the same error occurs...\n. good news :)\ngood luck for that!\nPS: I changed my nickname to Alx06, but it's still me :)\n. Thanks for the tip Artem, but that didn't work for me.\nWhat worked for me was to open msvc/sbclang.targets and to modify the RuntimeLibrary in this way:\n<ItemGroup Condition=\"'$(AppContainerApplication)' == 'true' And '$(IslandwoodDRT)' == 'true'\">\n    <ClCompile Include=\"$(MSBuildThisFileDirectory)ConsumeRuntimeComponent.cpp\">\n      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\n    </ClCompile>\n</ItemGroup>\nNow I'm able to generate packages locally, that's good.\nBut, generating packages for the store doesn't work.\nThe error this time is in Microsoft.AppXPackage.targets line 2760 with this error message : \"Unable to remove directory \"Release\\PackageUploadLayout\\\" Access to path 'ClrCompression.dll' is denied.\nSo I tried to comment out the line <RemoveDir Directories=\"$(AppxUploadLayoutDir)\"> (line 2760 on Microsoft.AppXPackage.targets)\nAnd now I've this error:\nUnable to copy file \"C:\\Program Files (x86)\\Windows Kits\\10\\UnionMetadata\\Windows.winmd\" to \"Release\\PackageUploadLayout\\WinMetadata\\Windows.winmd\". Access to the path 'Release\\PackageUploadLayout\\WinMetadata\\Windows.winmd' is denied.\n(line 2762 on Microsoft.AppXPackage.targets)\nAnd so I give up!!!\nWhat an adventure!!!\n. Any news for this bug?\n. Is that officially fixed in the new release?\n. I'm still not able to generate the packages for the Store :(\nI'm facing this issue now: https://connect.microsoft.com/VisualStudio/feedback/details/1800078/unable-to-remove-directory-obj-x64-release-packageuploadlayout-access-to-the-path-applicationinsights-config-is-denied\nI don't know what to do :(\nI'm also unable to understand how to test on an external device (yes, I'm new to this Visual Studio environment). Can someone help me with that too please?\n. It's said to delete the folder \"obj\" but I d'ont have such folder...\n. I don't understand: I can't export an exe file on run it on another pc with windows10?\nSo, I can't create packages for the Store, and I can't create executable files for other PCs, so what can I do with my projects?\n. Anything new for me?\n. Yes it's okay for me.\n. I just tried to build my project.\nProvide me a way to send you my project, that will be more easy.\n. Thanks for this tip.\nI did it and it doesn't fail at the same point now.\nNow, I'm unable to deploy my solution.\nAnd so I can't run my project anymore...\nThe new error is\nError Error : DEP0700 : Registration of the app failed. Deployment Register operation with target volume C (....) failed with error 0x80073CFD. See http://go.microsoft.com/fwlink/?LinkId=235160 for help diagnosing app deployment issues. (0x80073cfd)\nBut I'm now able to build the packages for the Store !!! (without testing them anywhere...).\nBut the validation part did failed, with these errors:\nSupported API test\nFAILED\nSupported APIs\nError Found: The supported APIs test detected the following errors:\nAPI OpenSemaphore in api-ms-win-core-synch-l1-1-0.dll is not supported for this application type. System.Threading.dll calls this API.\nAPI CreateSemaphore in api-ms-win-core-kernel32-legacy-l1-1-0.dll is not supported for this application type. System.Threading.dll calls this API.\nAPI ExecuteAssembly in uwphost.dll is not supported for this application type. UWPShim.exe calls this API.\nAPI DllGetActivationFactory in uwphost.dll is not supported for this application type. UWPShim.exe has an export that forwards to this API.\nObjCUWP.dll references the namespace Windows.Networking.Vpn which is not allowed for this app type.\nImpact if not fixed: Using an API that is not part of the Windows SDK for Windows Store apps violates the Windows Store certification requirements.\nHow to fix: Review the error messages to identify the API that is not part of the Windows SDK for Windows Store apps. Please note, C++ apps that are built in a debug configuration will fail this test even if it only uses APIs from the Windows SDK for Windows Store apps. See the link below for more information: \nWhere is my mistake?\n. It was 2 WinObjC versions ago.\nI've updated Windows 10 and Visual Studio since that too.\nWhat about getting my project and testing directly with it?\n. I tried, and unfortunately I'm facing some new issues (and an old one too).\nI just sent you an email for that, good luck!\n. I've created a virtual machine on my mac, installing windows 10 and visual studio community 2015, and now everything is working fine, thanks to you!!!\nI've generated the packages and uploaded them to the store.\nEverything looks fine, I'm waiting for the validation right now :)\nMany thanks!!!\n. When running the WACK, I just got an error: \n\"Windows App Certification Kit - Test Results \nError Found: The supported APIs test detected the following errors:\nObjCUWP.dll references the namespace Windows.Networking.Vpn which is not allowed for this app type.\"\nbut that was okay for the store validation, so it's okay for me.\n. I didn't get any email from the certification but my app is now on store, that's great!!!\nThanks dor your support\n. I did and I found a way to make it work :)\n. There is a workaround:\nUse myView.transform=CGAffineTransformScale(myView.transform,2.0,2.0); \nand that's working fine.\n. The image start to grow, then jump to the right position with the right size. No other animation were applied on the view. \n. Try to include your imageview in another one.\nI can't provide you right now a sample project.\nLe mardi 24 novembre 2015, bdrlamb-ms notifications@github.com a \u00e9crit :\n\nDo you have a sample project you could share that repros the issue? I\nstuck this into an empty project and it looked fine:\nUIImageView *view = [UIImageView new];\nview.image = [UIImage imageWithContentsOfFile: @\"Logo.scale-100.png\"];\n[self.view addSubview: view];\nview.frame = CGRectMake (50,50,100,200);\nview.backgroundColor = [UIColor redColor];\n[UIView animateWithDuration:0.3\nanimations:^{\nview.frame = CGRectMake (0,0,10,20);\n}\ncompletion:^(BOOL finished){\n}];\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/243#issuecomment-159384502.\n. Did you try to insert a UIImageView as a subview of another UIImageView and to animate its frame?\n. If I can't, is there a way to change the backgrpund color of the window at left and right of my app? Can I provide a background image for that?\n. When submitting the binary to the Store, only English is detected as supported language.\nSo I can't write the description and upload my screenshots in French (for example).\n. Hi Arnaud,\n\nThanks for the update.\nInternationalisation is quite a critical point for us as we support at\nleast 5 languages in all our apps,\nand as having native language is important for kid apps.\nRegards,\nAlexandre\nOn Fri, Dec 4, 2015 at 5:14 AM, Arnaud Montembault <notifications@github.com\n\nwrote:\nWe're looking into this. We do not support multiple languages right now so\nthat's a new feature we have to implement. We do not have an ETA by when\nthis will be supported yet, we'll keep you informed soon.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/249#issuecomment-161869828.\n. I'm trying to use the KissXML library (https://github.com/robbiehanson/KissXML)\nbut I've a lot of link errors, telling me that the libxml2 lib can not be located.\n. (Don't know why messages are in French and in English, my windows is in English and my visual studio too. And I installed the English language pack and activated it...)\n\nFirst error is this one:\n\nIf i comment out the #include , I get this error:\n\nThen I comment out the 2 lines with UConverter, and then I get these errors:\n\nHope this helps!\n. I tried, and now I'm facing only the last issue: https://cloud.githubusercontent.com/assets/426031/11528561/d7733a90-98e7-11e5-91bc-4f8218979ea6.png\n. Good news: I made a mistake in the configuration file.\nlibxml2.lib was not included in the Debug configuration.\nSo, here are the 3 remaining errors:\n\nLooks like \"CFTrimWhitespace\" has not been implemented in WinObjC,\nso I removed the corresponding calls to these methods,\nand now there is only 1 remaining error:\nError   LNK2005 \n_round already defined in LevelVC_40CD42D.obj\nucrtd.lib(ucrtbased.dll)    \nHope someone here can help me...\n. Yes it was a \"round\" function defined in my source code that was the problem.\nLink is working now, thanks for the help.\nI close the issue :)\n. Did you try to unzip winobjc.zip to c:\\ ?\nCould help...\n(generate again your project from this new path)\n. ",
    "YusukeYamamoto": "+1, we don't know where we are now, where we are going now.\nThe roadmap will be help for us to contribute it and to discuss it.\n. OIC, I got it.\nCoreMotion is not supported yet.\n. ",
    "nicholasgerard": "We're working on web tools to provide exactly this functionality \u2013\u00a0you'll be able to see what's supported now, what we're working on and even upload your app for a fast analysis of how compatible with the iOS bridge it is. However, we need IPAs to test our pipeline out with, so if you want to support the project, we're accepting submissions here:\nhttps://dev.windows.com/bridges/ios/app-submission\nStay tuned!\n. ",
    "YangShaoQun": "check out  this: #28 \n. ",
    "sasikiran": "Thanks! This works.\n\nSasi kiran\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Tuesday, 11 August 2015 at 9:10 am, Artem Simonov wrote:\n\nBoth the pre-built SDK, as well as the git repository, should now contain the fixed VSIX file.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/Microsoft/WinObjC/issues/49#issuecomment-129692703).\n. \n",
    "ArnOmsft": "Fixed.\n. Are you still facing this error?\n. We're releasing a new version of the SDK almost every week, the last one was released on 12/3 and a new release will go out today. Check here for the last version: https://github.com/Microsoft/WinObjC/releases.\nCould you try again with the last version?\nThanks.\n. Hi, could you confirm if you were able to repro this issue with one of the most recent release?\nThanks.\n. Closing this since we cannot repro this issue. Please do open a new issue in case you encounter the error again. Thanks.\n. This method is currently stubbed out.. This method is currently stubbed. You can also check\u00a0our CGD2D branch here which will soon replace our current implementation of Core Graphics.. The implementation for CAKeyFrameAnimation was added to the bridge earlier. Closing this.. UIAlertview have been deprecated in iOS 8. We do not support this style in the current implementation and when we'll implement this we'll use UIAlertController introduced in iOS 8.\nClosing this.\n. StoreKit is not supported and will not work to submit your app on the Windows Universal Store. You have to use StoreKit to submit your app on the Apple store and in the same way you'll have to use the Microsoft In-App purchase API to submit your app on the Universal Windows store. We're thinking of implementing an interop layer that would minimize the work for you but we have more important work to focus on for now. But you should be able to use the Windows APIs already, you can find more info here https://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.store.aspx and also on https://dev.windows.com/en-us/monetize in the \"In-app purchases\" section.\nThanks.\n. The Objective-C projections of the WinRT APIs for in-app purchase (Windows.ApplicationModel.Store namespace) are available and are the way to go to implement your in-app purchase scenario on Windows. We actually ship with our weekly release a sample app called WinRTSample that include an example of in-app purchase implementation, that should help.\n. And you should no longer get the linker error since we stubbed out all the unsupported methods a few weeks ago, so you should retry with the latest release. Note that does not mean StoreKit will work, you won't get the linker error anymore but you still need to use the projections to get your in-app purchase scenario working in Windows. Thanks.\n. I believe this issue has been fixed with the last SDK we released, can you confirm?\nThanks.\n. Sorry there might be a misunderstanding here. We updated the Wiki to reflect your feedback (thanks for this) and then we closed this issue. Did we miss something?\nThanks.\n. Closing this then. Thanks for your help.\n. Thanks, we're planning to support this and added this to our backlog.\n. That's a good news! You should receive an email with the outcome of the certification in the coming 24 hours. Did you run the Windows Application Certification Kit tool before submitting your package to the store and if so did it show any errors?\n. @Alx06 Did you check the solution that was recommended by @bdrlamb-ms for issue #131 ?\n. We're looking into this. We do not support multiple languages right now so that's a new feature we have to implement. We do not have an ETA by when this will be supported yet, we'll keep you informed soon.\n. Thank you from the entire team, the turkey was great!! ;-)\n. Can you give more information about what you're doing that does not work?\nThanks.\n. Sorry for the delay to reply. I downloaded the project and converted it to a VS solution using our latest release from 4/14. I don't see the error you mentioned but I see 2 things:\n- A warning when running VSImporter: Ignoring \"StoryboardTests\" target with unsupported product type \"com.apple.product-type.bundle.unit-test\" which is expected sine we do not support  unit test\n- An error when building the solution: The command \"\"D:...\\SDK\\winobjc04142016\\msvc..\\bin\\Xib2Nib.exe\" \"....\\Storyboard\\Base.lproj\\Main.storyboard\" \"Debug\\Base.lproj\\Main.storyboardc\"\" exited with code 255. Looking into this one\n. Thanks for opening the issue #461 for the mapView related error which is effectively different. Supporting the \"show\" kind of segue is on our backlog but I don't have a date to share yet.\n. Thanks, we added this to our backlog.\n. Supporting UINavigationItem is in our backlog, and we will investigate supporting UISplitViewController but this one seems less used.\n. Sorry for the long time to answer this. I downloaded the project, VS would not open the VS solution so I reran VSImporter to regenerate the it using our latest release from 4/7. The project compile and run although it's not playable. Could you retry and check if you still get the same error?\nThanks.\n. Closing this since I could not repro, please retry with our latest release and re-open if you can repro.\nThanks.\n. You won't be able to use MapKit but you can use the projections corresponding to the Windows.Services.Maps and Windows.UI.Xaml.Controls.Maps namespace available in  / include / Platform / Universal Windows / UWP /. The documentation for these namespace is available on msdn:\n- https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.maps.aspx\n- https://msdn.microsoft.com/en-us/library/windows/apps/windows.services.maps.aspx\nFor UIKit, did you try with our last release and what errors related to UIKit specifically do you get?\nThanks.\n. [I'm also replying in French below since I saw you're from France and I'm too ;-)]\nThis project is not designed to allow a super-quick conversion of your iOS app into a Windows app that would work right away, although we saw a few occurrence of that for very simple applications. Usually, once the iOS application is converted into a Visual Studio solution, the Developer will have some work to do to make the app work fine on Windows. The amount of work depends on what iOS framework the app is using (and what coverage we have for these at the time of the conversion), what iOS services are used and what middleware are used as well. For services like MapKit, we technically cannot use the iOS service from a Windows app, so the app has to use the Microsoft equivalent. We're working to provide code samples and documentation showing how to update an app using iOS services to call the Microsoft services instead but we haven't done that for MapKit yet.\nI'm going to close this issue, but feel free to open a new one to report any issue you might have when you'll have the chance to try again with our latest release.\nThank you for your contribution.\n[Traduction Fran\u00e7aise]\nCe projet n'a pas vocation a permettre une conversion rapide de votre app iOS en une app Windows qui fonctionnerait imm\u00e9diatement, bien que nous ayons vu quelques exemple de ca pour des applications tr\u00e8s simples. Normalement, une fois l'application iOS convertie en un project Visual Studio, le d\u00e9velopper devra apporter des modifications a l'application pour que celle-ci fonctionne parfaitement sur Windows. La quantit\u00e9 de travail va d\u00e9pendre de quels framework iOS l'application utilise (et de quel niveau de compatibilit\u00e9 le projet offre pour ces framework au moment de la conversion), de quels services Apple (IAP, MapKit, iAds, etc...) l'application utilise, et de quels middleware l'app utilise. Pour les services tel que MapKit, nous ne pouvons techniquement pas appeler ces services depuis une application fonctionnant sur Windows, donc l'application Windows ne peut qu'utiliser le service Microsoft equivalent. Nous pr\u00e9voyons de poster des exemples de codes montrant comment modifier une application utilisant chaque service iOS pour appeler le service Microsoft equivalent, mais nous n'avons pas encore publier ceci pour MapKit.\nJe vais fermer ce ticket, merci d'ouvrir un autre ticket si vous rencontrer des probl\u00e8mes lorsque vous aura l'opportunit\u00e9 de tester notre dernier SDK.\nMerci de votre contribution.\n. Closing 330.\n. @mlfarrell, just curious if you had the chance to try the latest release of the bridge.\nThanks.. Thanks for the feedback, and sorry that the bridge did not work well for your app.. Thank you for the feedback. Unfortunately the concept of tintColor does not exist on Windows so we're not planning to support this.\n. We won't be fixing this in the current implementation of UIBarButtonItems but we're working on the XAML-backed implementation of this control and we'll make sure this works as expected.\n. We actually did not complete the implementation of the XAML-backed version of UIBarButtonItem and postponed the remaining work to migrate this specific control to later to prioritize other controls. This issue will be fixed when we complete that migration but we don't have a firm date to share yet.\n. Sorry for the late follow-up, this was fixed earlier in June.\n. We're working on it, stay tuned.\n. Could you provide either the XIB or storyboard that triggered this error? Without this we cannot investigate more. Thanks for your help.\n. Closing this since we cannot investigate without more info. Please open a new issue with the requested info if you'd like us to investigate this.\nThanks.\n. Thanks for flagging this, we're looking into this and I'll provide an update shortly.\n. Thanks, we're looking into how we can address this.\n. Could you please provide more info about this: are you getting this error when running VSImporter or at compile time?\nThanks.\n. Thanks. So you imported your iOS app as a Visual Studio solution with no problem and you're getting this error when build your app in Visual Studio.\nWhich version of our SDK are you using?\nWhich version of Windows 10 are you using (OS build version you can find in Settings/System/About)?\nWhich version of Visual Studio are you using?\n. Also did you submit your IPA on https://developer.microsoft.com/en-us/windows/bridges/ios/app-submission so we could try to repro? Thanks.\n. Google Analytics won't work with your Windows app so you'll have to remove the dependency. To do that in VS, go to Project / Properties / Linker / Input and you'll see the lib name in \"Additional Dependencies\". Click on the line and edit it to remove the lib's name. You'll have to do that for the different configurations: Debug/Win32, Release/Win32, etc.\nAs an alternative to Google Analytics, you should be able to use Application Insights (https://github.com/Microsoft/ApplicationInsights-CPP). We did not yet generate the objective-c projections for it (it's on our radar) but that should be feasible to call these APIs directly.\n. The TestFlightSDK won\u2019t work on Windows so you\u2019ll have to remove that dependency as well. A good alternative would be HockeyApp. We did not yet generate the Objective-C projections for this SDK (on our radar as well but I don\u2019t have a date to share yet) but you should be able to call the C++ API directly from your Obj-C code.\nFor the ZBarSDK, it seems the Obj-C source code is available under the Apache license 2.0, so you could potentially incorporate this code into your iOS app and that code would be converted when creating the VS solution.\n. Updating my answer after some more investigation: it turns out HockeyApp does not have a SDK for native C++ app so that won't work. We're looking into how to address this and we'll share progress when it makes sense.\nClosing this specific issue.\n. You're getting the \"'GoogleMaps/GoogleMaps.h' file not found\" error since you added the GoogleMaps SDK for iOS to your app and this is lost when converting your Xcode project into a Visual Studio solution using VSImporter. Plus we do not support GoogleMaps and you'd have to use the Bing Maps SDK which unfortunately we did not yet generate the Objective-C projections for, but this is on our radar and we'll communicate when it's available.\nI'll check the 'UISlider' issue and come back to you.\n. We only do have partial support for UISlider, we're not planning to support that specific selector but we'll stub it out so it does not flag an error. You can actually check what we do support here: https://github.com/Microsoft/WinObjC/blob/master/include/UIKit/UISlider.h.\nClosing this.\n. You can check #424 for more info about this same issue.\nClosing this.\n. This is a duplicate of #327. We do not currently have support for MFMailComposeViewController but we added this to our backlog (cf. #327).\nClosing this one.\n. Could you provide either the XIB or storyboard that triggered this error? Without this we cannot investigate more. Thanks for your help.\n. Closing this since we cannot investigate without more info. Please open a new issue with the requested info if you'd like us to investigate this.\nThanks.\n. The recommendation here is to remove the mapView control from your storyboard or XIB and use projected WinRT APIs instead. You can find an example of how to do that on our sample repo here: https://github.com/Microsoft/WinObjC-Samples/tree/master/Scenarios/Maps.\nThanks.\n. Closing this.\n. Addressed via #1002 \n. Closing this since this was addressed several months ago.. Addressed via #1002\n. Marking this as a feature request, as agreed we'll take ownership of the pull request #1002.. Closing this since this has been fixed earlier in June.\n. Correct, this specific API UIImageWriteToSavedPhotosAlbum is currently stubbed. I'll check what amount of work is required here.\n. Closing this since this was addressed in June.\n. @mgoemmel, did you have the chance to try the suggestion from ehren?\nThanks.\n. Cool. Thank you for trying this and sending an update, closing now.\n. This is currently stubbed out. Can you describe how this is impacting your application?\nThanks.\n. We won't support this as discussed, and instead we'll provide a sample app showing how WinRT APIs can be used to achieve what you're trying to do.\nThanks.\n. Looking into this.\n. Can you explain what you're using this for in your app?\nThanks.\n. Closing this per our discussion since it does not seem to be an actual issue. Please reopen if needed.\n. This was part of our release on June 21. Closing.\n. Thanks for the feedback, we'll add support for this in the coming weeks\n. Support for this was added earlier, closing this.\n. Closing this since this was released earlier in September.\n. Hi ehren, are you still able to repro this behavior and could you share the code you're using to do that?\nAlso, by \" the highlight on mouse over or gaining focus ends up appearing in solid white FFFFFF.\", do you mean the background color becomes white FFFFFF instead of remaining clear as expected, or is the text itself actually turning white?\nThanks.\n. Sorry for the late feedback. Are you asking about how to prevent copying text on iOS or how to do that on your app after bringing it to Windows using the Bridge?\n. Sorry, we don't know the answer to that. Closing since this is not related to the iOS bridge itself.\n. Closing this since the issue was fixed with the September release.\n. Thanks Ehren for raising this and sharing a workaround. We're not planning to address this issue (which would require to update the Xib2Nib tool) since we're investing in a new Xib2XAML tool, although it won't be ready before several months.\n. Was fixed by #983 \n. Was fixed via #985 \n. Addressed via #1004 \n. Closing this. Please reopen that issue or create a new one when you have a repro. Thank you.. Thank you for the feedback. We'll address this when we will migrate the UILabel implementation to be backed by XAML which should happen sometimes in the coming months.\n. Hi,\ncould you confirm which release of the bridge you used?\nThanks.\n. You can download VS Update 3 here: https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs.\n. Thanks for this. Could you submit a pull request for these changes? We'll review it and approve it.\nThanks!\n. We'll address this in the coming months but this is not high-priority for now.\n. Thanks for the feedback. We checked and confirmed it's already possible to call UIScrollview or its subclass using set ShowsHorizontalScrollIndicator:NO or set ShowsVerticalScrollIndicator:NO or using property syntax access to hide horizontal/vertical scrollindicator.\nLet us know if you're running into any issues using this.. Thanks for the feedback, we'll look into this.\n. Thank you for the feedback, we're looking into this.\n. Thanks for the feedback. We won't be able to address this in the short term but you should consider submitting a pull request for this if you'd like to contribute to the project.\n. Sorry for the late answer. Supporting UISplitViewController is currently not a priority for us.\n@jaredhms, can you help answer @gary17 question: \"is there perhaps a way to create a split view controller through XAML and hook UINavigationController instances into it?\"\nThanks.. Thanks for opening this issue and the others as well. We're looking into these and we'll provide update in the coming days.\n. Thanks for the feedback. We won't be able to address this in the short term but you should consider submitting a pull request for this if you'd like.\n. @gary17, do you know if this same code used to work with a previous version of the bridge?\nThanks.. ok, thanks for the quick answer. . Thanks for the feedback. We won't be able to address this in the short term but you should consider submitting a pull request for this if you'd like to contribute to the project.\n. Thank you for the feedback. Also, if you'd like to evaluate the compatibility of your app with the Bridge in its current state, you can use our app analysis tool: https://developer.microsoft.com/en-us/windows/bridges/ios/app-analyzer-tool.\n. @spalda2, did you have the chance to try this with the latest master branch?\nPlease provide a new call stack if you can reproduce this.\nThanks.. :shipit: \n. Thanks for reporting this and for sharing the workaround. We're adding this to our backlog but since there's a workaround this is a low priority work item for us right now. Feel free to submit a pull request for this.. The default behavior of system type UIButton where the button is being dimmed when pressed is currently not supported by the bridge. So the same code will show the button's appearance changing when run on iOS but the button's appearance is not changing when being run on Windows. . We'll fix this bug by\u00a0updating the app to show a change in visual state of the button when being pressed but we'll track the work required to support the default behavior of system button separately.. UISwitch is currently not a control backed by its XAML equivalent (ToggleSwitch), we'll make sure to address this issue when we migrate UISwitch to XAML.. I cannot repro this one with a 950. We agreed with\u00a0Drew we'll try to repro again with the next build and close it if we can't.. I just tried to repro with the latest build and I could not. Let me know if you can, if not we'll close this one.\nThanks.. This bug has been fixed in the latest release.. This is a known issue on the app itself which we won't fix. the button below it properly configured and works as expected.. I tried to repro on a phone running 14977 with both the\u00a020161130.1 and the 20161213.2 release and I cannot repro with neither Open GLES 1.1 or 2.0.\n@andrejo-msft, could you give it a try with the latest release?\nThanks.\n. I was able to repro using the same Lumia 640XL device (14997 build).\nI looked at the settings on my\u00a0phone in Setting / System / Display and found out that \u201cSize of text, apps, and items on this display\u201d is set to 400% on my phone, which is the recommended value.\nLooking at the same value on the 640XL, it was set to 175% (recommended value). I updated it to 200% (225% is the max on this device) and after restart, I can no longer repro the bug.\nI then set back the value to 175%, the bug was back.\nI also tried with 150%, the bug is also visible but manifests a bit differently:\n- In portrait mode, there is a one-pixel space between the view and the edge of screen on the bottom\n- In landscape mode, there is a one-pixel space between the view and the edge of screen on the right side. @edvv, fixing this\u00a0requires the work we're doing to implement CoreGraphics on D2D (cf. the CGD2D branch) to be\u00a0merged to master. We're planning to merge\u00a0at the end of January (that's our 1701 sprint) so the fix for this specific issue will come in February (our 1702 sprint).. Thanks Ehren for reporting this and sharing the patch. Does the patch work for your app as well? We have work\u00a0planned to address this in the coming months but let us know if this is blocking you.. Understood, thanks for the quick feedback.. Thanks! I updated the wiki page about using VSImporter here to mention this and recommend to upgrade to the latest version of Xcode.. There's 2 things at play here:\u00a01) UIScrollView only draws elements that are on the screen so when scrolling (even more when scrolling fast), the new elements to be displayed have to be rendered quickly, and 2) we know we have some perf issue with text rendering which are being investigated. We\u00a0should wait for the text rendering perf to be\u00a0addressed before investigating the UIScrollView behavior itself.. FWIW, I checked with the app build of the\u00a09/27 release\u00a0(which was using the same implementation of UIScrollView but the previous implementation of CoreText) and the issue is still very visible.. @bebauer-msft, can you confirm with which build did the regression appear?\nThanks.. That's a known issue. Tracking this as a task that will be linked to our deliverable\u00a0to handle orientation related issue.. I can repro with Debug\\20161213.1 as well.. this will be addressed by #1601.. @jboich, you mentioned earlier you cannot repro this issue. On our side we see about 500 hits related to this issue on our Watson tool (which you should see as well from the Dev Center), so I just wanted to check if you were able to have a consistent repro?\nAlso, to Raj's earlier comment about the stack trace not making sense, this is likely due to the fact that we do not publish symbols from our develop branch. Switching to master will\u00a0help\u00a0further investigations. We'll follow-up via email. Thanks.. Thanks for reporting this.. @edvv, can you confirm if that's a blocking issue for you or not to help us prioritize this?\nThanks.\n\u00a0. Thanks for reporting this.. @ad1Dima, thanks for pointing to the solution for the \"sqlite3.h\" issue.\n@MikaelLeGrand, would you be able to share the code from the \"SlideNavigationController.h\" file? or at least the portion of it where the error is?\n. From the original bug:\nThere are three issues with our current implementation of CALayer, CABasicAnimation, LayerProxy/Animation:\n\u00a0\n1. CABasicAnimation::runActionForKey - requires valueForKeyPath:_keyPath\n2. LayerAnimation.mm - angleFrom = (float)/-/qval.roll() * 180.0f / M_PI; // fromValue.m12 = -1; fromValue.m21 = -1;\n3. LayerProxy.mm - GetPropertyValue, CATransform3DScale(trans, scale[0], scale[1], 1.0f /was previously 0.0f which tripped up quarternion calculations/)\nModify valueForKey --> valueForKeyPath\nModify angleFrom = - \u00a0----> *angleFrom = \nModify CATransform3DScale(trans, scale[0], scale[1], 0.0f) ---> CATransform3DScale(trans, scale[0], scale[1], 1.0f)\n\u00a0\nThis will make implicit animations around transforms smoother but there might still be a storyboard issue when scheduling a new animation while an existing one has not yet completed.\n\u00a0\nAlternatively the stuttering animation can be be suppressed by deciding that we will not support implicit animations\u00a0when\u00a0handling\u00a0the \"transform\" property changes.. From the original bug:\n1. First draw\u00a0is slow, and once starts, it seems draw in a burst. \n2. If user continue to moving fingers after temporarily stop, if seems draw can not resume until user lift the finger.\nFrom the trace, we are not blocking UIThread. But all the draw are pushed out to the end for some reason. Still needs a trace with symbols to find out the root cause.\n. From the original bug:\nOn the master 1029.1 build, this arrow did not appear at all, so this appears to be a bug that was uncovered by something else being fixed.\nand:\nMainViewController.m in IslandwoodManor app:\n- (void)animationArrowAroundControl:(NSObject *)control\nThis grabs the arrow location from the UIView, and that seems broken. \u00a0This was probably related to the UILayer changes?\u00a0. Marking this as urgent since Oliver mentioned this is blocking him.. Thank you for the feedback. Would you be able to share the list of controls you're using in your xib files and storyboard and we can tell you which one will cause problem with Xib2Nib? We did \"stub\" some of the unsupported control in Xib2Nib to avoid this but we did not do that for all of them.. Thanks for opening this issue and sharing the logs. We do support storyboard but not all scenario, I'll find the meaning of this specific error and reply back.. Still looking into this, stay tuned.\nThanks.. Thank you. 2 things tripped up Xib2Nib, the \\ node for the buttons and the \\ nodes which I believe allows to unwind the segue. Commenting these allows Xib2Nib to proceed further. Handling these programmatically would address the issue for now.. Agree that it should not be a fatal error, we're looking into this.. Hi, can you describe what you're doing and when does this error show-up? Are you getting this when running vsimporter against your project?\nThanks.. @RG-J, thank you!. @edvv , we'll need more info from you to be able to do something here. Thanks.. Thank you, we'll prioritize this accordingly.. You should be able to get this info using Windows APIs from the Windows.UI.ViewManagement namespace. The documentation is here: https://docs.microsoft.com/en-us/uwp/api/windows.ui.viewmanagement.\nThis might help as well: https://stackoverflow.com/questions/31936154/get-screen-resolution-in-win10-uwp-app. I'd remove this which is confusing imo.\n. I would add that this command assumes the SDK has been unzipped in C:. Or we could say vsimporter.exe should be launched using its relative path to the directory where the Xcode project is\n. ",
    "Ramu-msft": "This method is working as expected.This also demonstrated in the WOCCatalog sample. If this still reproduces, please provide repro steps.\n. WinObjC SDK does support iOS projects with XIB files. This is done using the Xib2Nib tool. This is still under development so it may not support all types. If you encounter any problems, please send the error details.\n. This has been fixed. Please check the latest SDK.\n. Storyboard support has been added and more enhancements were made to xib2nib tool. Please test with latest version of the SDK\n. This has been fixed in the last release.\n. The fix should be available in the recent release.\n. Fix is available in 0.1 Preview (December 3, 2015)\n. CoreText support has been added to the latest release (January 14, 2016).\n. This support is now available in the SDK.\n. UICollectionView enhancements are available in 0.1 Preview (December 3, 2015) release. \n. UICollectionView enhancements are available in\u00a00.1 Preview (December 3, 2015) release.\n. This support is not available in the SDK.\n. Fix is available in\u00a00.1 Preview (November 12, 2015)\n. Fix is available in\u00a00.1 Preview (November 12, 2015)\n. The tool we use to communicate with GitHub started malfunctioning which resulted in multiple updates, I apologize for the inconvenience.\n. Fix is available in 0.1 Preview (December 3, 2015)\n. Fix is available in 0.1 Preview (December 3, 2015)\n. I am able to get the CALayer from UIImageView as expected. If you can reproduce this problem, please send us the repro steps or sample code.\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. Fix is available in 0.1 Preview (November 12, 2015)\n. We have made some changes to our animation recently. If you still see this problem, please reactivate and provide more information.\n. This issues doesn't repro with latest SDK, probably due to recent enhancements in this library. Please test this in the latest version of the SDK.\n. This issues doesn't repro with latest SDK, probably due to recent enhancements in this library. Please test this in the latest version of the SDK.\n. This support has been added. Please test this in the latest version of the SDK.\n. We recently fixed some issues related to routing touch events. Please test this with latest version of the SDK\n. Thanks for your contribution\n. We have recently enhanced our support for UITableView. Please test this in the latest version of the SDK.\n. Thanks for your contribution.\n. We recently made a change to suppress debug logging only to print logs in Debug build. The logging was suppressed in Release build for performance reasons. This change affected NSLog as well, sorry about that. We will fix this and enable debug logging for Release build as well. As a workaround, you can use the Debug build SDK to get the debug logs from NSLog.\n. This bug has been fixed and will be available in the next release.\n. Could you please provide more information on what you are trying to do? Are you trying to make the UIWebView control completely transparent? Can you provide a sample code?\n. Currently we do not support the backgroundColor property in UIWebView. This support has been added and will be available in our next release.\n. \u00a0 \u00a0 Fix available in 0.1 Preview (January 28, 2016)\n. The xib2nib tool used to process the xib files, especially storyboard, is still under development. As a workaround, you can create the table view programmatically then it should work with our SDK.\n. We have made some enhancements to xib2nib tool recently. If you still see this problem, please provide the xib file for further analysis.\n. Closing this issue due to no response.\n. The fix is available in 0.1 Preview (Mar 24, 2016) release.\n. We can't reproduce this problem. If this still happens, please provide repro steps for further analysis.\n. Please test this with the latest version of the SDK\n. This is a known issue #251. \n. This is a duplicate of issue #251\n. Looking at the Locals value, it appears the priv member is corrupted. If you can reproduce this problem, please share the repro steps or sample code so that we can investigate this further.\n. This issue has been fixed. Please test this in the latest version of the SDK.\n. This issue has been fixed and it is available in the latest SDK.\n. The WindowsBridgeTestTemplate application seems to be using a class which is not supported by our framework. Are you using UIStackView in your application?\n. I have verified that the app is using UIStackView. Currently we do not have support for this. Since this is not supported, the xib2nib tool fails while processing the storyboard. You can see this in the build log.\n1>         Unable to find class mapping for required object \nWe will add this to our backlog. Please consider using a view that is supported by our SDK.\n. This issue should be fixed in the latest sdk.\n. Hi alexdrenea, \nI just started a internal code review request for this pull request and noticed that the request has been deleted. Any particular reason for closing this request?\nThanks,\nRamu\n. This issue has been fixed and it is available in the latest SDK.\n. We recently made some changes to the magnification logic, which should address this issue. Please test this in the latest version of the SDK.\n. Hi @alexdrenea, \nThanks for your submission. Could you please format your changes through Clang formatter so that it meets the coding style guidance?\nhttps://github.com/Microsoft/WinObjC/wiki/ClangFormat\n-Ramu\n. This change is currently in code review. I will provide any feedback that comes out of our review. After that you can update/merge and provide a new commit.\n. Received following code review comments from the team:\n- Please use clang formatter to reformat any file that is being changed.\n- Please do not use tabs, use spaces instead.\n- The right way to do it is to look up the storyboard ID in the UIStoryboardSegue InitFromStory code and replace the destination with the ID, then just patch the storyboard ID through to the nib name in ExportController.\n. @alexdrenea, Are you still looking at this? If so, could you please provide the updated version. \nThanks,\nRamu\n. @davelamb is added to the review. #Closed\n. Hi Alex,\nAfter your initial pull request and the comments from our team, internally we ran into similar issues with xib2nib tool in one of our internal high priority feature work. Since there was a delay in response, one of our team member took your original changes and made additional changes to address this issue. Since the original changes were made by you, we would like to acknowledge your contribution and it will be available in the Git commit history. This change will be available in our next GitHub push. In order to avoid merge conflicts, I will close this pull request.\nThanks for your contribution,\nRamu\n. GLKView is not currently supported by xib2nib tool. In the built log you will see an error similar to the following line that shows the missing functionality.\n1>         Unable to find class mapping for required object \nWe will add this to our backlog. As a workaround, you can add this programatically. \n. This is a known issue. This fix will be available in our next release.\n. The fix is available the latest SDK.\n. The xib2nib tool used to process storyboard and xib files is still under development. It is possible that your ViewController processing is failing and prevents the view from loading. As a workaround, you could consider creating your ViewController programmatically instead of creating from the storyboard.\n. Closing issue due to lack of update.\n. The fix is available in 0.1 Preview (Apr 21, 2016) release.\n. @davelamb is added to the review. #Closed\n. @bdrlamb-ms is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. @bdrlamb is added to the review. #Closed\n. :+1:\n. @bdrlamb is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. @bdrlamb is added to the review. #Closed\n. This is a platform bug which has been fixed and will be available in next version of Windows.\n. :shipit:\n. Thanks for your contribution.\n. Thanks for your contribution.\n. @bdrlamb-ms is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. @oliversa-msft is added to the review. #Closed\n. @bdrlamb is added to the review. #Closed\n. @oliversa-msft is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. Thanks for your contribution.\n. Support for  has been added to xib2nib and is available in the latest SDK.\n. The fix is available in 0.1 Preview (July 15, 2016) release.\n. Is the map stored in the nib under this key? We've maintained compatibility with reference platform nib files, we don't want to break it until we make a definitive decision to. \n. It looks like on reference platform there's no plist entry to describe storyboard ids, it just goes by the UIViewControllerIdentifierToNibNames key.\n. should use range-based for\n. is this assuming a dynamic_cast here?  do we even have RTTI turned on in xib2nib?\n. That seems like a pretty severe problem. Also needs to error logging.\n. Delete this line.\n. why strstr instead of strcmp? \nit's looking for a substring specifically... though i don't think it's specific enough. it should be something like \nif (strcmp(_className, \"viewController\") == 0)\n. ",
    "evafp90": "Yes, when I try to compile the .sln created by vsimporter.exe I get this error message: \"Error reading 'Path\\main.m'\" in File \"CLANG\" line 1.\nOn the other hand, I've been unable to set the Item Type as Clang Source since the property was not appearing...\n. I first tried that one and worked fine until I got an Unhandled exception (about 3 minuts after the execution).\n. Have you updated the library or something? I haven't tried since when I posted the issue\n. ",
    "vmagaziy": "@jmsaunders-ms thanks for your answer and support of this idea, can you please have a look at PL with initial changes related to this issue?\n. @s5msft, please close this issue or mark it as addressed by your team, otherwise someone else may decide to make the same mistake I did with my PL.\n. @s5msft, in issue #8 you stated that current implementation of WinObjC is not correct. Can you please confirm the CoreFoundation framework will be implemented via the Foundation framework in contradiction to the Apple's approach?\n. I don't have any experience of using Git under Windows, but I believe it\nmay only be the case when the user editor does not appreciate original line\nendings.\nOn Thu, Aug 13, 2015 at 2:17 PM, Artem Simonov notifications@github.com\nwrote:\n\n@vmagaziy https://github.com/vmagaziy Checking out sources with LF line\nendings under Windows may be an issue. This has caused us serious problems\nin the past, so now we use core.autocrlf true. In particular, git would\noccasionally become confused about the mixed line endings in modified\nfiles, and would consider all contents of the file to be changed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/pull/70#issuecomment-130666173.\n. @asimonov-msft , if resetting the autocrlf flag is not an option, I will try to rework the solution to appreciate CRLF line endings for Windows.\n. @asimonov-msft, please review this PL with fixes.\n. @s5msft, thanks but this just kills all my initiative to contribute to this project.  If you've got something happening under the hood, please make it public, so it becomes visible to the community and we don't have to reinvent the wheel.  It would be also great if you define a set of tasks and priorities which can be taken by the community to avoid duplications like this one.\n. @jmsaunders-ms, Thanks for your message and sharing the ideas. My initial thought was that Python could be used for both Windows and Mac and other platforms, but if the hook/verification tool is a native application it automatically means it's for Windows only. For instance, I wanted to contribute to implementation of Foundation and other non UI frameworks as well as create unit tests by running them on OS X (see #59 for details) and in that case it will be really helpful, as well as if someone running Linux may decide to tweak some implementation. But I 100% agree that having an additional dependency on Python is a bad thing -- on OS X, Python is pre-bundled which is not the case on Windows. AFAIK, it's now possible to run C# code on different platforms, so can you please provide binaries of your tool for different platforms once it's ready?\n. @jmsaunders-ms, having this tool executed by an intention is an error prone approach in my opinion, since authors of PLs may forget to use it while committing/pushing changes. For sure, if you're planning to create a script for submitting changes like in git cl upload used in Chromium, then this tool can be integrated and it becomes impossible to forget to execute it.\n. According to @s5msft they have a special tool for checking the code style which is to about to be uncovered to the rest of the world -- check this out #70.\n. This is also related to #54.\n. \n",
    "greenhippie": "When I use vsimporter to generate a solution from a project which uses Pods, the first build errors I encounter are related to issue #58.\n. I ran into this same issue, the solution for me was to right-click on the solution, click 'Retarget solution' and select 10.0.10240.0 from the Target Platform Version drop-down (make sure all the projects were checked) and click OK.\n. I am also seeing this issue in a Pods dependency project.\nimport \nError       'sys/socket.h' file not found\n. When you downloaded the Windows Bridge for iOS SDK - where ever you extracted it to, you can open the \"include\" folder to see everything that is currently supported.\nCoreMotion is not currently supported.\n. ",
    "shuningzhou": "Replacing @import with #import fixed this issue.\nI am getting an error saying \"use of '@import' when modules are disabled\" when import CoreData in the .h files. \n. ",
    "appeon": "Static Library\n. I use the SDK itself , the SDK release date is 2015-8-5\n. The latest version of SDK has  fixed the problem? I use  the Folder 'WinObjC-master\\bin\\ ' version to  convert ,then compile, the problem still exists: WinObjC-master\\include\\CoreFoundation/CoreFoundation.h(11,10): fatal error : 'sys/types.h' file not found\nI don't find the 'types.h' in  the Folder 'WinObjC-master\\'\n. ",
    "jaredhms": "@vmagaziy - apologies for the late response.  We're now using gtest for all of our unit tests, and we do have work planned to look at producing mac builds of our gtests, but we haven't had time to do so yet.  Any help would certainly be appreciated.\nIt's also worth mentioning that  we'll be rolling out some functional UAP test support in the ~near future, although those tests won't be good mac candidates.\n. You'll need to install sqlite's \"VSIX package for Universal App Platform development using Visual Studio 2015\" from http://sqlite.org/download.html\n. As far as I know, you only need to install the UAP .vsix: http://sqlite.org/2016/sqlite-uap-3100100.vsix.  Perhaps the Nuget package references are getting in the way?\n. None of the sqlite Nuget packages that I found work.  Have you tried removing all of your Nuget package references and instead relying solely on the UAP .vsix from sqlite.org?  I am unable to repro your issue when using only sqlite's UAP .vsix: http://sqlite.org/2016/sqlite-uap-3100100.vsix\n. Thanks, Raul.  I just realized that you also need to add the Sqlite UAP extension as a reference to your project.  In Solution Explorer, expand your project's node, right click on 'References', then hit 'Add Reference...'.  Click 'Extensions' under 'Universal Windows', check the box next to 'Sqlite for Universal App Platform', then hit 'OK'.\n. Hi, Bartmax.  We have a stub in place for GameKit, so it's not clear what could be causing this for you.  I'm unable to repro locally; can you please retry, and post additional repro steps if you're still hitting this?\n. :+1:\n. > ```\n\nif (index == imageSrc.loadIndex - 1 && index < CGImageSourceGetCount(isrc)) {\n\n```\n\ncomments for some of these checks would be helpful\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:2108 in 97823c8. \n. > ```\n\nsource.loadIndex = index + 1;\n```\n\ncomments?\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:1635 in 97823c8. \n. > size_t CGImageSourceGetCount(CGImageSourceRef isrc) {\ncan you please add annotations where they're missing?  we should be annotating all APIs that are part of the public surface area.\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:1895 in 97823c8. \n. > ```\n\nstatic const int c_minDataStreamSize = 96;\n```\n\nnit: already defined at top of file\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:661 in 97823c8. \n. > ```\n\nreturn kCGImageStatusUnknownType;\n\n```\n\nwouldn't kCGImageStatusUnexpectedEOF be more appropriate for some of these?\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:634 in 97823c8. \n. > ```\n\nif (offset + 2 > imageLength) {\n\n```\n\nwhat is '2'?\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:245 in 97823c8. \n. > ```\n\nif (offset + 4 > imageLength) {\n\n```\n\nwhat is '4'?\n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:254 in 97823c8. \n. > ```\n\nif (offset + 2 > imageLength) {\n\n```\n\n...in a couple spots\n\nIn reply to: 217050392 \n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:245 in 97823c8. \n. > ```\n\nif (offset + 4 > imageLength) {\n\n```\n\n...in a couple spots\n\nIn reply to: 217050458 \n\nRefers to: Frameworks/ImageIO/CGImageSource.mm:254 in 97823c8. \n. ok, thanks for the clarification.\n\nIn reply to: 217207673 \n. it probably wouldn't hurt - that wasn't immediately clear to me when reading the code\n\nIn reply to: 217208866 \n. Thanks for raising the issue.  This is a known limitation, and we are actively working through an updated design for how we'll be handling gestures going forward.  Any details that you can share on your custom UIGestureRecognizer and its usage patterns would be helpful to us.\n. :shipit:\n. @yiyang-msft is added to the review. #Closed\n. :shipit:\n. :shipit:\n. @yiyang-msft is added to the review. #Closed\n. Thanks for the bug report.  Can you grab the HRESULT from the second frame in the call stack?\nAlso, can you please try to repro after adding noexcept to the lambdas on these two lines?\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/UIKit/StarboardXaml/XamlCompositor.cpp#L250\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp#L1693\nFor example; similar to this line:\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/UIKit/StarboardXaml/XamlCompositor.cpp#L662\n. I don't understand why the task is getting canceled though, because we're definitely not doing any PPL cancelations.  Maybe the RenderAsync is failing with a Platform::Exception?  We'll follow up in a bit with another suggested change to try.  Thanks for the details.\n. Can you please be more specific?  What type of custom widget?  Is it a custom UIView, a custom UIControl, a custom UITextField, etc?\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. In CI build.\n. In CI build.\n. :shipit:\n. Thanks for fixing this!\n. :shipit:\n. In CI build.\n. :shipit:\n. In CI build.\n. :shipit:\n. In CI build.\n. @DHowett-MSFT; it sounds like this is potentially an issue with kvo. \n. Apologies for the late response to your last update.  Everything looks good, but this branch has merge conflicts.  Can you please address them?\n. :shipit:\n. Thanks.  In CI build.\n. > }\ndelete and just call CGRectMake?\n\nRefers to: Frameworks/UIKit/UIImage.mm:948 in 532b33e. \n. > static void drawLeftCap(UIImage* self, CGContextRef cur, CGRect pos) {\nCan we delete this?\n\nRefers to: Frameworks/UIKit/UIImage.mm:821 in 532b33e. \n. > static void drawTopCap(UIImage* self, CGContextRef cur, CGRect pos) {\nCan we delete this?\n\nRefers to: Frameworks/UIKit/UIImage.mm:883 in 532b33e. \n. > static void drawLeftAndTopCap(UIImage* self, CGContextRef ctx, CGRect rect) {\nCan we delete this?\n\nRefers to: Frameworks/UIKit/UIImage.mm:950 in 532b33e. \n. In CI build.\n. :shipit:\n. In CI build.\n. :shipit:\n. > }\nwhy keep this around?  do we have any callers? #WontFix\n\nRefers to: Frameworks/UIKit/UrlLauncher.mm:85 in 68d1d6f. \n. > }\nI would delete it - you know where to find it if you ever need it - but it's up to you.\n\nIn reply to: 235967078 \n\nRefers to: Frameworks/UIKit/UrlLauncher.mm:85 in 68d1d6f. \n. :shipit:\n. Fixed with https://github.com/Microsoft/WinObjC/pull/822.\n. :shipit:\n. Thanks for your contribution!\n. > ```\n\n                fmt = _ColorARGB;\n\n```\n\nare we able to verify the rest of these?  it seems like we should have a UT for _CGImageGetFormat for the various supported/unsupported formats. #WontFix\n\nRefers to: Frameworks/include/CGSurfaceInfoInternal.h:80 in a64e395. \n. :shipit:\n. :shipit:\n. :shipit:\n. Thanks for the fix, but this was fixed within the ~past week on github master in this commit: https://github.com/Microsoft/WinObjC/commit/fb61e282ad3ef92184ec5b8324222ade4611dacc. #Closed\n. @davelamb, please take a look.\n. Apologies for the confusion; I agree that it looks like we should be implementing reset.  \n\nIn reply to: 246369916 \n. :shipit:\n. @davelamb is added to the review. #Closed\n. @davelamb, please take a look.\n. :shipit:\n. @davelamb is added to the review. #Closed\n. Looks like a dupe of #582.  \nThe workaround appears viable, but we should probably also stub out or properly fix stringByEvaluatingJavaScriptFromString.  The documentation on WebView.InvokeScript is a bit light, so it's not clear why it's throwing an exception.  I suspect it's because it needs to wait/block on the UIThread, which isn't supported in UWPs, but it would be helpful to confirm the type of C++ exception being thrown by invokeScript.\n@jboich, @Juju4ka1; do you plan to send a PR for this?. @davelamb, please take a look.\n. :shipit:\n. We successfully load UIImages on both regular and high-DPI devices (aka Retina), so it's unclear what's failing here.  Can you provide a concise repro of the issue?. @davelamb is added to the review. #Closed\n. :shipit:\n. Thanks for the fix!\n. >             child->_parentPendingUnitCount = inUnitCount;\ndoes child not need to fire KVO for these?\n\nRefers to: Frameworks/Foundation/NSProgress.mm:194 in b2ed69d. . :shipit:. @oliversa-msft is added to the review. #Closed\n. :shipit:\n. @yiyang-msft is added to the review. #Closed\n. @oliversa-msft is added to the review. #Closed\n. > static const bool DEBUG_TOUCHES_LIGHT = DEBUG_TOUCHES || true;\nshould we disable this now?\n\nRefers to: Frameworks/UIKit/UIView.mm:53 in ec039ec. \n. > static const bool DEBUG_HIT_TESTING_LIGHT = DEBUG_HIT_TESTING || true;\nshould we disable this now?\n\nRefers to: Frameworks/UIKit/UIView.mm:55 in ec039ec. \n. > ```\n\n        // TODO: This is how it worked before; is that the expected behavior?\n\n```\n\nnit: we can probably delete this comment now too?\n\nRefers to: Frameworks/UIKit/UIView.mm:490 in ec039ec. \n. > ```\n\n        // TODO: This is how it worked before; is that the expected behavior?\n\n```\n\nnit: we can probably delete this comment now too?\n\nRefers to: Frameworks/UIKit/UIView.mm:524 in ec039ec. \n. @tadam-msft is added to the review. #Closed\n. > static const bool DEBUG_TOUCHES_LIGHT = DEBUG_TOUCHES || true;\n?\n\nIn reply to: 255200660 \n\nRefers to: Frameworks/UIKit/UIView.mm:53 in 6d4531d. \n. > static const bool DEBUG_HIT_TESTING_LIGHT = DEBUG_HIT_TESTING || true;\n?\n\nIn reply to: 255200684 \n\nRefers to: Frameworks/UIKit/UIView.mm:55 in 6d4531d. \n. :shipit:\n. :shipit:\n. Can you please try this on the latest master or develop branches?   Apologies for the delayed response; we were in the process of a large refactor across UIKit/CoreAnimation/XamlCompositor.  \nIf you can still reproduce the issue, please provide a new call stack, as well as more details on the OS version that you're running.. Thanks for the confirmation; we'll go ahead and close this out.  Feel free to reopen if you hit it again.. > class DisplayTextureXamlGlyphs : public DisplayTexture {\nPlease don't make any changes to the compositor; this class doesn't even exist anymore in the refactor branch (https://github.com/jaredhms/WinObjC/tree/compositor_latest2).  Let's discuss how I can best roll this into my changes; it looks like I should be calling _DWriteGetFamilyNameForFontName when I need to grab the font family name?\n\nRefers to: Frameworks/UIKit/StarboardXaml/CompositorInterface.h:150 in e193e65. \n. :shipit:\n. > class DisplayTextureXamlGlyphs : public DisplayTexture {\nI talked with Raj offline; we can take this if needed, and I already have a fix for it queued up in my branch.\n\nIn reply to: 256707554 \n\nRefers to: Frameworks/UIKit/StarboardXaml/CompositorInterface.h:150 in e193e65. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Can you please merge the latest CT fix too?\n. Do we already have an existing test for this in XamlCatalog or WoCCatalog? #Resolved\n. :shipit:\n. :shipit:\n. @oliversa-msft is added to the review. #Closed\n. @yiyang-msft is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. @ashvarma is added to the review. #Closed\n. @bviglietta is added to the review. #Closed\n. @tadam-msft is added to the review. #Closed\n. oops; this should have been a PR for ux/uxe.  i'll cancel and resubmit.\n. @msft-Jeyaram is added to the review. #Closed\n. @ashvarma is added to the review. #Closed\n. @bviglietta is added to the review. #Closed\n. > //\njust some clang-format whitespace changes....\n\nIn reply to: 258527516 \n\nRefers to: Frameworks/include/MockClass.h:4 in ff95a9a. \n. > ```\n\n}\n\n```\n\nwhat code change are you referring to?  I just deleted a bunch of dead code around setting the 'shouldAnimate' flag.\n\nIn reply to: 258998954 \n\nRefers to: Frameworks/QuartzCore/CALayer.mm:1803 in ff95a9a. \n. ~bad merge;  good catch\n\nIn reply to: 258638949 \n\nRefers to: Frameworks/UIKit.Xaml/ObjCXamlControls.h:75 in ff95a9a. \n. > #define CACompositorRotation90CounterClockwise 270.0f\ngood point - these should have moved along with the rest of the DisplayProperties -- into DisplayProperties.h -- and switched to an enum.\n\nIn reply to: 258740082 \n\nRefers to: Frameworks/include/CACompositor.h:117 in ff95a9a. \n. > ```\n\nCGColorRef _backgroundColor, _borderColor;\n```\n\nthere's no reason.  they should all be underscored, but i'm not going to do that in this change - I don't want to unnecessarily add to the churn.\n\nIn reply to: 258966276 \n\nRefers to: Frameworks/include/CALayerInternal.h:65 in ff95a9a. \n. > ```\n\nCGColorRef _backgroundColor, _borderColor;\n```\n\nideally they would all be private, too....so it's easier to see which state is accessed externally, but I'm not fixing that now, either.\n\nIn reply to: 259010707 \n\nRefers to: Frameworks/include/CALayerInternal.h:65 in ff95a9a. \n. > - (void)exchangeSublayer:(CALayer_)layer1 withLayer:(CALayer_)layer2;\nthere are a lot of missing underscores, but I'm not going to address them with this change.\n\nIn reply to: 258967895 \n\nRefers to: Frameworks/include/CALayerInternal.h:111 in ff95a9a. \n. > - (void)exchangeSubviewAtIndex:(int)index1 withSubviewAtIndex:(int)index2;\nI'm not going to remove any more code with this change.\n\nIn reply to: 258968776 \n\nRefers to: Frameworks/include/CALayerInternal.h:112 in ff95a9a. \n. > - (void)bringSublayerToFront:(CALayer*)sublayer;\nsee above; i'm not going to fix the missing underscore issue with this change.\n\nIn reply to: 258968087 \n\nRefers to: Frameworks/include/CALayerInternal.h:114 in ff95a9a. \n. > CACompositorInterface* _globalCompositor;\ncould have, but didn't bother making that change with this refactor.  it may open up additional cans of worms, and isn't necessary at this time.\n\nIn reply to: 258982393 \n\nRefers to: Frameworks/QuartzCore/CALayer.mm:101 in ff95a9a. \n. > ```\n\nreturn self;\n```\n\nmaybe? I didn't add/change this code though.\n\nIn reply to: 259531590 \n\nRefers to: Frameworks/UIKit/UIViewController.mm:248 in 6d10e3d. \n. @yiyang-msft is added to the review. #Closed\n. :shipit:\n. Thanks for the contribution; it looks good, but please sign the CLA so we can accept the PR.\n. @rajsesh-msft \n. > ```\n\nreturn [WADClipboard getContent];\n\n```\n\nis this autoreleased?   #Resolved\n\nRefers to: Frameworks/UIKit/UIPasteboard.mm:60 in 06eeb5a. \n. > ```\n\n}\n\n```\n\nelse, log UNIMPLEMENTED_WITH_MSG to log the type we're not supporting? #Resolved\n\nRefers to: Frameworks/UIKit/UIPasteboard.mm:197 in 06eeb5a. \n. :shipit:\n. :shipit:\n. @yiyang-msft is added to the review. #Closed\n. @oliversa-msft is added to the review. #Closed\n. @davelamb is added to the review. #Closed\n. >  @Status Caveat\nInteroperable\n\nRefers to: Frameworks/UIKit/UIButton.mm:510 in b7bf419. \n. :shipit:\n. :shipit:\n. :shipit:. In CI build.. Fixed via #1643.. FWIW, this code is gone in ux/uxe, slated to merge into develop within the next ~day or so: https://github.com/Microsoft/WinObjC/blob/ux/uxe/Frameworks/QuartzCore/CALayer.mm#L491\n. :shipit:\n. ButtonsViewController has been removed from WoCCatalog, so closing this out since we'll track proper default button behavior separately.. Fixed with #1534.. :shipit:. In CI build.. :shipit:. awesome - thanks!\n\nIn reply to: 263402012 . Thanks for finding this and for tracking down the root cause.. :shipit:. In CI build.. :shipit:. >     CALayer pSuper = (CALayer)priv->superlayer;\nnit: can we remove the hungarian while we're here? #Resolved\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:809 in 8cdcd27. . :shipit:. Thanks, @ehren - I'm hoping to take a look this week.  I think it's a bit odd that you need to use legacy hit testing though; are there any tweaks to setUserInteractionEnabled(true/false) that alleviate the issue?    If you inspect the UIElements in the live UIElement tree viewer in the VS debugger, and look for 'isHitTestVisible', you may find that toggling that value will fix the issue.  Any more details you can provide would be helpful.. Thanks, @ehren.  We internally map the setUserInteractionEnabled(true/false) values to Xaml isHitTestable values, so you should be able to fine-tune your subviews via setUserInteractionEnabled to get this to work reliably in your app.  \nAny more details you can provide would be helpful though (another self-contained repro, etc.).  It's possible that we're not setting a userInteractionEnabled value correctly somewhere, but it's also possible that this is by design, and we may always require a bit more fine-tuning of hit testability on our platform.. Thanks for the added details.  FYI that I'll be out for the holidays, so we likely won't be able to investigate futher until early 2017.  Please let us know if this becomes a blocking issue though.. Awesome - thanks for letting us know.. :shipit:. :shipit:. :shipit:. And now _updateXamlElement is being renamed to _updateXamlElementWithAdjustedFont.  Maybe we should fix this bug as part of the rename.. Not sure what the correct fix is here, but doing minimal work in _updateXamlElementWithAdjustedFont is the goal.. Fixed with #1534.. Thanks.  Transitioned over to #1731.. I have a much larger change for this; we'll roll it out in a separate PR.. This was on the following WOCCatalog build: github\\develop\\Release\\20161201.2\\drop\\apps\\arm\\WOCCatalog_1.0.0.0_ARM_Test\nI grabbed a full heap memory dump; let me know if you want to take a look at it.. :shipit:. it's disabled in layeranimation.mm\n\nIn reply to: 266921436 . Fixed with https://github.com/Microsoft/WinObjC/pull/1547. Yep; no repro with the fix.  Thanks again for the help!\n\nIn reply to: 267209718 . Although likely related to #1553, scoped AutoReleasePools may be desirable if we can find good spots to place them.. Assigned to @ms-jihua for further scrutiny.. Can you share repro steps, @DHowett-MSFT.  I don't think the WoCCatalog sample was supposed to be scaling.. Fixed by #1601.. I can hit this assert in ControlsViewController.m when trying to show a popup while a popup is already shown:\nassert(viewController.popoverPresentationController != nil);\n\nAre these overzealous asserts?. doh - of course! I'm hoping to have time to look at that tomorrow.. Thanks for the fixes; in CI build.... :shipit:. Thanks for the clarification.  Can you please heavily comment the code as such? \n\nIn reply to: 271945385 . @aballway please add more details/repro steps.. :shipit:. :shipit:. Thanks for reporting this, @edvv.  \nThis is a known limitation with the current UITextView implementation (which is more of a 'placeholder' than a fully-implemented control.  We plan to port UITextView to a Xaml-backed control (likely RichEditBox) in the ~near future.  We haven't done an exhaustive comparison of UITextView vs. RichEditBox yet, but we're pretty sure that leveraging RichEditBox will prevent us from implementing two features:\n1) Custom-rendered text (especially in an editable UITextView, but we'll likely start without any support for custom-rendered text in UITextViews)\n2) Attributed text (although we may be able to find a way to add attributed text support at some point in the future)\nWe think the benefits to building on RichEditBox clearly outweigh the drawbacks, but any more details you can provide on your usage patterns would help guide us in the correct implementation strategy.  \nIt would also be great to know how many of your scenarios this is blocking, to help with our bug/feature prioritization.\n. It's also worth noting that depending on your needs, you may be able to work around this by adding a RichEditBox to your scene and plumbing its events through the UIResponder chain yourself.  For example:\nimport \nimport \n...\n    CGRect parentFrame = [(UIView*)parentView frame];\n    CGRect editBoxFrame = CGRectMake(0, 0, parentFrame.size.width, parentFrame.size.height);\n    [parentView addSubview:[[UIView alloc] initWithFrame:editBoxFrame xamlElement:[WXCRichEditBox make]]];\n. Great; let me know if you run into any issues with that approach.  A third option for non-attributed plain text entry would be to use a single or multi-line UITextField (which we've already backed by a Xaml TextBox).. Fixed with https://github.com/Microsoft/WinObjC/pull/1640. :shipit:. Do we need to fix any of these in WoCCatalog?\nI:\\enl\\vso_1_WinObjC\\samples\\WOCCatalog [ehren-dismissViewController-popover-crash +2 ~0 -0 !]> findstr /pis /c:\"cell addSubview\" *\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:_imv];\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:_rLabel];\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:_gLabel];\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:_bLabel];\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:_boxLabel];\nWOCCatalog\\AccelerateViewController.m:        [cell addSubview:imageChange];\nWOCCatalog\\ApplicationViewController.m:        [cell addSubview:_disableInputButton];\nWOCCatalog\\ButtonsViewController.m:        [cell addSubview:button];\nWOCCatalog\\ButtonsViewController.m:        [cell addSubview:button];\nWOCCatalog\\PickersViewController.m:        [cell addSubview: segmentedControl];\nWOCCatalog\\SearchBarViewController.m:        [cell addSubview:searchBar];\nWOCCatalog\\SearchBarViewController.m:        [cell addSubview:searchBar];\nWOCCatalog\\SearchBarViewController.m:        [cell addSubview:searchBar];\nWOCCatalog\\SearchBarViewController.m:        [cell addSubview:searchBar];\nWOCCatalog\\SearchBarViewController.m:        [cell addSubview:searchBar];\nWOCCatalog\\SegmentsViewController.m:        [cell addSubview: segmentedControl];\nWOCCatalog\\SegmentsViewController.m:        [cell addSubview: segmentedControl];\nWOCCatalog\\SegmentsViewController.m:        [cell addSubview: segmentedControl];\nWOCCatalog\\UserDefaultsViewController.m:    [cell addSubview:[_textFields objectAtIndex:indexPath.row]]; #Resolved. :shipit:. @edvv, I don't have much experience with the Inking APIs, but as far as I know, WUIIInkUnprocessedInput  doesn't interact with arbitrary (or any) WXCContentControls.  Rather, it is meant to be paired with a WUIIInkCanvas instance.  \nCan you share more details on what you're trying to achieve?  \nFor normal (non-InkCanvas) Xaml elements/UIViews, if you want to track hover state, you can do something like the following:\n[[myView xamlElement] addPointerEnteredEvent:^(RTObject sender, WUXIPointerRoutedEventArgs e) {\n            // Hover-on handling\n        }];\n[[myView xamlElement] addPointerExitedEvent:^(RTObject sender, WUXIPointerRoutedEventArgs e) {\n            // Hover-off handling\n        }];. You'll also need to remove the subscriptions in your dealloc, so this is a bit more correct:\nEventRegistrationToken _pointerEnteredEventRegistration = { 0 };\nEventRegistrationToken _pointerExitedEventRegistration = { 0 };\n...\n__block MyType weakSelf = self;\n_pointerEnteredEventRegistration = [[myView xamlElement] addPointerEnteredEvent:^(RTObject sender, WUXIPointerRoutedEventArgs* e) {\n// Hover-on handling via weakSelf \n}];\n_pointerExitedEventRegistration = [[myView xamlElement] addPointerExitedEvent:^(RTObject sender, WUXIPointerRoutedEventArgs e) {\n// Hover-on handling via weakSelf \n}];\n...\nin dealloc:\n[[myView xamlElement] removePointerEnteredEvent:_pointerEnteredEventRegistration];\n[[myView xamlElement] removePointerExitedEvent:_pointerExitedEventRegistration];. >     return ret;\nSince we know this will never work, maybe we should change this status to Stub and replace this code with:\nUNIMPLEMENTED_WITH_MSG(\"stringByEvaluatingJavaScriptFromString is not supported on our platform.  Call evaluateJavaScript:completionHandler: instead.\");\nreturn StubReturn();\n?\nWe'd also need to add STUB_METHOD to the declaration in the header file, possibly with the same comment saying why it's stubbed out:\n// stringByEvaluatingJavaScriptFromString is not supported on our platform.  Call evaluateJavaScript:completionHandler: instead.\n- (NSString)stringByEvaluatingJavaScriptFromString:(NSString)script STUB_METHOD;\n\nRefers to: Frameworks/UIKit/UIWebView.mm:250 in 6c9c08e. . >     return ret;\n@rajsesh-msft  - this is another place where an @Status Unsupported and a UNSUPPORTED_WITH_MSG would be helpful; agree?  \n\nIn reply to: 271356945 \n\nRefers to: Frameworks/UIKit/UIWebView.mm:250 in 6c9c08e. . >     return ret;\n@jboich, can you please use status Gap for now rather than status Stub?\n/*\n @Status Gap\n/\n\nIn reply to: 271357323 \n\nRefers to: Frameworks/UIKit/UIWebView.mm:250 in 6c9c08e. . :shipit:. Thanks for the fix and updates; kicking off a CI build.. :shipit:. >             NSLayoutConstraint* constraint = [(id)constraints objectAtIndex:i];\nack - fixing...\n\nIn reply to: 270983731 \n\nRefers to: Frameworks/UIKit/NSLayoutConstraint.mm:354 in 46331d9. . ugh; no, it shouldn't be.  why is this showing up?\n\nIn reply to: 270989968 . Strange; I'm no longer able to repro after my recent OS upgrade.  The actual source of the AV was within Xaml in the call to RemoveAt below.  We had a valid subLayerPanelForParentLayer, and it returned a valid index, so it wasn't clear why we  were AV'ing deep within Xaml when removing from the children collection (I should have included a full call stack in this bug, but now I can't repro to get one).  It's possible that this was a Xaml bug that was recently fixed.\nif (subLayerPanelForParentLayer->Children->IndexOf(xamlElementForThisLayer, &idx) == true) {\n        subLayerPanelForParentLayer->Children->RemoveAt(idx);\n    }\nI'm closing this out as 'not repro', but we can reactivate if we start hitting it again.. :shipit:. Fixed by #1674.. :shipit:. Looks like one of the CI builds failed due to a build machine issue; kicking it off again.. Thanks for your contribution!. @ehren - this fixes the issue in WoCCatalog.. :shipit:. Correct; UIKit.h was removed from  Starboard.h.  Not sure about CGBitmapContext.h though.  Maybe it was accidentally getting pulled in via UIKit.h.. That implies that nothing should happen if the text fits, yet it's tiny.. That rect is actually around the internal TextBlock; here's the rect around the actual UILabel:\n\n. Seems more likely that your UILabel fix also fixed this?  Regardless, I'll give it another try locally.  Thanks!. :shipit:. :shipit:. :shipit:. :shipit:. Here\u2019s where IWHouse crashes:\nLIBOBJC2.DLL!objc_exception_throw(void * object) Line 134   C++\nFOUNDATION.DLL!-[NSCFDictionary setObject:forKey:](NSCFDictionary * self, objc_selector * _cmd, id * object, id * key) Line 115 Objective-C++\nFOUNDATION.DLL!-[NSMutableDictionaryPrototype initWithObjects:forKeys:count:](NSMutableDictionaryPrototype * self, objc_selector * _cmd, id * const * vals, id * const * keys, unsigned int count) Line 74  Objective-C++\nFOUNDATION.DLL!+[NSDictionary dictionaryWithObjects:forKeys:count:](id * self, objc_selector * _cmd, id * const * vals, id * const * keys, unsigned int count) Line 144 Objective-C++\nUIKIT.DLL!-[UIViewController loadView](UIViewController * self, objc_selector * _cmd) Line 903  Objective-C++\nUIKIT.DLL!-[UIViewController view](UIViewController * self, objc_selector * _cmd) Line 954  Objective-C++\nIslandwoodHouse.exe!-[AppDelegate loading](AppDelegate * self, objc_selector * _cmd) Line 144   Objective-C\nFOUNDATION.DLL!-[NSObject performSelector:withObject:withObject:](NSObject * self, objc_selector * _cmd, objc_selector * selector, id * obj1, id * obj2) Line 275   Objective-C++\nFOUNDATION.DLL!-[NSOrderedPerform fireInMode:](NSOrderedPerform * self, objc_selector * _cmd, NSString * mode) Line 65  Objective-C++\nFOUNDATION.DLL!-[NSRunLoop _orderedPerforms](NSRunLoop * self, objc_selector * _cmd) Line 161   Objective-C++\nFOUNDATION.DLL!-[NSRunLoop limitDateForMode:](NSRunLoop * self, objc_selector * _cmd, NSString * mode) Line 194 Objective-C++\nFOUNDATION.DLL!-[NSRunLoop runMode:beforeDate:](NSRunLoop * self, objc_selector * _cmd, NSString * mode, NSDate * date) Line 259    Objective-C++\nFOUNDATION.DLL!-[NSRunLoop run](NSRunLoop * self, objc_selector * _cmd) Line 296    Objective-C++\nFOUNDATION.DLL!ScheduleMainRunLoop() Line 52    Objective-C++\nFOUNDATION.DLL!$0A::InvokeHelper<Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<2>,ABI::Windows::UI::Core::IDispatchedHandler,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,eduleMainRunLoopAsync>::Invoke() Line 240   Objective-C++\n\nIt might be nice to do a full test pass since this is a pretty significant breaking change.\n. :shipit:. :shipit:. This is a double-free that's hit when we drain the autoreleasepool upon initial app launch.  It appears to have been introduced by #1710; reverting commit deb99af6 fixes the crash.\nHere's a stack that's causing a double-free:\n\nGLKIT.DLL!+GLKTextureLoader textureWithContentsOfFile:options:error: Line 282    Objective-C++\n    SpriteSample.exe!-SpriteClass initWithFile:effect: Line 44  Objective-C\n    SpriteSample.exe!-Renderer initGLData: Line 47    Objective-C\n    SpriteSample.exe!-AppDelegate application:didFinishLaunchingWithOptions: Line 57    Objective-C\n    UIKIT.DLL!UIApplicationMainInit(NSString * principalClassName, NSString * delegateClassName, unsigned int defaultOrientation, int activationType, objc_object * activationArg) Line 283 Objective-C++\n    UIKIT.DLL!ApplicationMainStart(const char * principalName, const char * delegateName, float windowWidth, float windowHeight, ActivationType activationType, IInspectable * activationArg) Line 158  Objective-C++\n    UIKIT.DLL!RunApplicationMain(Platform::String ^) Line 68    C++\n    UIKIT.DLL!DoApplicationLaunch(ActivationType activationType, Platform::Object ^ activationArg) Line 290 C++\n    UIKIT.DLL!_ApplicationLaunch(ActivationType activationType, Platform::Object ^ activationArg) Line 306  C++\n    UIKIT.DLL!UIApplicationLaunched(Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^ args) Line 192    C++. >         CGDataProviderRelease(provider);\n\nwhat about this one? #Resolved\n\nRefers to: Frameworks/GLKit/GLKTexture.mm:449 in 8f54c08. . >     CGDataProviderRelease(provider);\nAnd this? #Resolved\n\nRefers to: Frameworks/GLKit/GLKTexture.mm:507 in 8f54c08. . >     CGDataProviderRef provider = CGImageGetDataProvider(img);\nMay be worth adding comments to each of these calls to make it clear why we're intentionally not releasing providers returned from this API? #ByDesign\n\nRefers to: Frameworks/GLKit/GLKTexture.mm:311 in 8f54c08. . :shipit:. :shipit:. Thanks for the fixes!. :shipit:. :shipit:. :shipit:. @ad1Dima, can you please provide a call stack?. Concise, self-contained repro steps would also be helpful.. sure!\n\nIn reply to: 275288950 . :shipit:. Looks great; changes in CI build.. >     [super dealloc];\nyou can't call dealloc with ARC enabled\n\nIn reply to: 275424648 \n\nRefers to: Frameworks/UIKit/UIButton.mm:815 in 5ba191e. . Text is vertically centered in UILabel; perhaps UITextView is also vertically-centered by default.  Not sure how critical this is though, as we'll be porting them to Xaml at some point in the ~near future.  . As @ehren pointed out, 75effb9 may not be the culprit.  We'd have to synch back to step through how this was previously working.. Hmm - good question.  I thought the check was new.  I could synch back to check, but I think the fix is correct.  Do you see any issues with it?  Hopefully we'll have a public-facing test for this in the ~near future.\n\nIn reply to: 275289527 . We absolutely are - we're presenting over nothing.  It's a middleware scenario where we host UIKit buttons, etc. within a C# app.  For example; a handler for the UIButton needs to present a VC over the C# app's window, so we added _UIPopupViewController to do so (it 'presents' the content within a full-window Xaml Popup).\n\nIn reply to: 275290885 . :shipit:. Thanks for the fixes!  Changes in CI build.. :shipit:. :shipit:. We recently shifted Islandwood over to not using queued CATransactions for its UIElement property and hierarchy management; instead we perform the property/hierarchy changes synchronously on the backing Xaml elements as they\u2019re issued by the app.   This change was required to fix several other bugs, and it should also lead to a much more simplified Islandwood implementation layer.  It\u2019s worked pretty well so far, but it\u2019s uncovered an interesting issue with ScrollViewer\u2019s  ScrollViewerViewChangedEvent.\nCTCatalog has a UIPickerView within a UITableView.  Selecting an item in the UIPickerView results in reloading the entire parent UITableView\u2019s data, which ends up removing and re-adding all of that UITableView\u2019s contents.  We don\u2019t actually delete/recreate the UIPickerView, but it is temporarily removed from the UIElement tree, and then added back as the UITableView rebuilds its content.  This may sound odd, but it\u2019s a perfectly valid use of UITableView\u2019s reloadData method.\nJust as on iOS, our UIPickerView is built upon our UIScrollView (which is backed by a Xaml ScrollViewer).  The UIPickerView\u2019s \u2018selection changed\u2019 event is fired as a result of the UIScrollView\u2019s \u2018scrollViewDidScroll\u2019 event, which is keyed off of the Xaml ScrollViewer\u2019s ScrollViewerViewChangedEvent.  This is where the issue lies.  The ScrollViewerViewChangedEvent is fired during Arrange, and removing the ScrollViewer from the UI during this event handler leads to an AV in CFrameworkElement::ArrangeCore because the ScrollViewer\u2019s m_pLayoutStorage was deleted.  \nHere's the full stack where we remove the ScrollViewer from the UIElement tree.\n   Windows.UI.Xaml.dll!CUIElement::Shutdown() Line 7434 C++\n  Windows.UI.Xaml.dll!CUIElementCollection::OnRemoveFromCollection(CDependencyObject * pDO, int iPreviousIndex) Line 207     C++\n  Windows.UI.Xaml.dll!CDOCollection::RemoveAt(unsigned int nIndex) Line 749      C++\n  Windows.UI.Xaml.dll!CUIElementCollection::Remove(unsigned int nIndex, CDependencyObject * pObject) Line 1291  C++\n  Windows.UI.Xaml.dll!CUIElementCollection::RemoveAt(unsigned int nIndex) Line 1344    C++\n  Windows.UI.Xaml.dll!Collection_RemoveAt(CCollection * pCollection, unsigned int nIndex) Line 2196    C++\n\nWindows.UI.Xaml.dll!DirectUI::PresentationFrameworkCollectionTemplateBase::RemoveAt(unsigned int index) Line 872     C++\n      UIKIT.DLL!LayerProxy::RemoveFromSuperLayer() Line 356      C++\n      UIKIT.DLL!LayerTransaction::_QueueMovement(char16_t * layerMovement, unsigned int) Line 240    Objective-C++\n      UIKIT.DLL!LayerTransaction::RemoveLayer(const std::shared_ptr & layer) Line 192    Objective-C++\n      QUARTZCORE.DLL!+CATransaction _removeLayer: Line 240 Objective-C++\n      QUARTZCORE.DLL!-CALayer removeFromSuperlayer Line 844    Objective-C++\n      UIKIT.DLL!-UIView removeFromSuperview Line 1630       Objective-C++\n      UIKIT.DLL!-UITableView reloadData Line 1255       Objective-C++\n      CTCatalog.exe!-CTCFontTestViewController refreshTests Line 330   Objective-C++\n      CTCatalog.exe!-CTCFontTestViewController pickerView:didSelectRow:inComponent: Line 362  Objective-C++\n      UIKIT.DLL!-UIPickerView _subCellSelected:fromPicker: Line 633    Objective-C++\n      UIKIT.DLL!-UIPickerSubView scrollViewDidScroll: Line 303      Objective-C++\n      UIKIT.DLL!-UIScrollView _refreshOrigin Line 897     Objective-C++\n      UIKIT.DLL!changeContentOffset(std::memory_order offset) Line 928  Objective-C++\n      UIKIT.DLL!__40-[UIScrollView _setupViewChangedHandler]_block_invoke(void * .block_descriptor, RTObject ) Line 466 Objective-C++\nOBJCUWP_WINDOWS_UI_XAML.DLL!EventHandler_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs::Invoke(IInspectable * arg0, Controls::IScrollViewerViewChangedEventArgs * arg1) Line 295    Objective-C++\nWindows.UI.Xaml.dll!DirectUI::CEventSourceBase,IInspectable,Windows::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs>::Raise(IInspectable * pSource, Windows::UI::Xaml::Controls::IScrollViewerViewChangedEventArgs * pArgs) Line 273 C++\n      Windows.UI.Xaml.dll!DirectUI::ScrollViewer::RaiseViewChanged(unsigned char isIntermediate) Line 14033   C++\n      Windows.UI.Xaml.dll!DirectUI::ScrollViewer::FlushViewChanged(HRESULT hr) Line 14127  C++\n      Windows.UI.Xaml.dll!DirectUI::ScrollViewer::InvalidateScrollInfoImpl() Line 4558     C++\nWindows.UI.Xaml.dll!DirectUI::ScrollContentPresenter::VerifyScrollData(Windows::Foundation::Size viewport, Windows::Foundation::Size extent) Line 2898      C++\n  Windows.UI.Xaml.dll!DirectUI::ScrollContentPresenter::ArrangeOverride(Windows::Foundation::Size finalSize, Windows::Foundation::Size * pReturnValue) Line 1978    C++\nWindows.UI.Xaml.dll!DirectUI::FrameworkElementGenerated::ArrangeOverrideProtected(Windows::Foundation::Size finalSize, Windows::Foundation::Size * pReturnValue) Line 704     C++\n      Windows.UI.Xaml.dll!DirectUI::FrameworkElement::ArrangeOverrideFromCore(CFrameworkElement * nativeTarget, float inWidth, float inHeight, float * outWidth, float * outHeight) Line 365       C++\n      Windows.UI.Xaml.dll!CFrameworkElement::ArrangeCore(XRECTF_WH finalRect) Line 1797    C++\n      Windows.UI.Xaml.dll!CUIElement::ArrangeInternal(XRECTF_WH finalRect) Line 4290 C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4105  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CUIElement::Arrange(XRECTF_WH finalRect) Line 4181  C++\n      Windows.UI.Xaml.dll!CLayoutManager::UpdateLayout(unsigned int controlWidth, unsigned int controlHeight) Line 268   C++\n      Windows.UI.Xaml.dll!CCoreServices::NWDrawTree(HWWalk * pHWWalk, CWindowRenderTarget * pRenderTarget, VisualTree * pVisualTree, unsigned int forceRedraw, XRECT_WH * prcDirtyRect) Line 7094   C++\n      Windows.UI.Xaml.dll!CCoreServices::NWDrawMainTree(CWindowRenderTarget * pIRenderTarget, bool fForceRedraw, XRECT_WH * prcDirtyRect) Line 6887      C++\n      Windows.UI.Xaml.dll!CWindowRenderTarget::Draw(CCoreServices * pCore, unsigned int fForceRedraw, XRECT_WH * prcDirtyRect) Line 138      C++\n      Windows.UI.Xaml.dll!CXcpBrowserHost::OnTick() Line 528     C++\n      Windows.UI.Xaml.dll!CXcpDispatcher::Tick() Line 1349 C++\n      Windows.UI.Xaml.dll!CXcpBrowserHost::OnPaint() Line 1654   C++\n      Windows.UI.Xaml.dll!CXcpDispatcher::OnPaint() Line 571     C++\n      Windows.UI.Xaml.dll!CControlBase::OnPaint() Line 212 C++\n      Windows.UI.Xaml.dll!CJupiterControl::Paint() Line 527      C++\n      Windows.UI.Xaml.dll!CJupiterControl::HandleWindowMessage(unsigned int uMsg, unsigned int wParam, long lParam) Line 282    C++\n      Windows.UI.Xaml.dll!CJupiterWindow::CoreWindowSubclassProc(HWND__ * hwnd, unsigned int uMsg, unsigned int wParam, long lParam) Line 1072    C++\n      Windows.UI.Xaml.dll!CJupiterWindow::StaticCoreWindowSubclassProc(HWND__ * hwnd, unsigned int uMsg, unsigned int wParam, long lParam) Line 519 C++\n      user32.dll!InternalCallWinProc@20() Line 116       Unknown\n      user32.dll!UserCallWinProcCheckWow(_ACTIVATION_CONTEXT * pActCtx, void * pfn, HWND * hwnd, _WM_VALUE msg, unsigned int wParam, long lParam, void * fEnableLiteHooks, int) Line 233       C\n      user32.dll!DispatchClientMessage(tagWND * pwnd, _WM_VALUE message, unsigned int wParam, long lParam, unsigned long pfn) Line 3462     C\n      user32.dll!__fnDWORD(_FNDWORDMSG * pmsg) Line 1621  C\n      ntdll.dll!_KiUserCallbackDispatcher@12() Line 517    Unknown\n      user32.dll!DispatchMessageW(const tagMSG * lpMsg) Line 1039       C\n      Windows.UI.dll!Windows::UI::Core::CDispatcher::ProcessMessage(int bDrainQueue, int * pbWindowMessagesProcessed, int * pbInvokeItemProcessed) Line 316  C++\n      Windows.UI.dll!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal(int bRunAlwaysOnce, void * hEventWait) Line 1768  C++\nWindows.UI.dll!Windows::UI::Core::CDispatcher::ProcessEvents(Windows::UI::Core::CoreProcessEventsOption options) Line 570   C++\n      Windows.UI.Xaml.dll!CJupiterWindow::RunCoreWindowMessageLoop() Line 1221       C++\n      Windows.UI.Xaml.dll!CJupiterControl::RunMessageLoop() Line 903    C++\n      Windows.UI.Xaml.dll!DirectUI::DXamlCore::RunMessageLoop() Line 2039     C++\n      Windows.UI.Xaml.dll!DirectUI::FrameworkView::Run() Line 101       C++\ntwinapi.appcore.dll!Windows::ApplicationModel::Core::CoreApplicationViewAgileContainer::RuntimeClassInitialize::__l8::(void * pv) Line 1130     C++\n      SHCore.dll!_WrapperThreadProc(void * pv) Line 321    C++\n      kernel32.dll!BaseThreadInitThunk(unsigned long RunProcessInit, long(__stdcall)(void ) StartAddress, void * Argument) Line 64 C\n      ntdll.dll!__RtlUserThreadStart(long(__stdcall)(void ) StartAddress, void * Argument) Line 997     C\n      ntdll.dll!_RtlUserThreadStart(long(__stdcall)(void *) StartAddress, void * Argument) Line 914    C\n\u2026which results in an AV at Windows.UI.Xaml.dll!CFrameworkElement::ArrangeCore(XRECTF_WH finalRect) Line 1855:\n   RenderSize = innerInkSize;\n\n   ...\n\n   #define RenderSize GetLayoutStorage()->m_size\n\nIt seems a bit odd that ScrollViewer raises ScrollViewerViewChangedEvent within Arrange; MSDN doesn\u2019t call this out as a limitation.  Ideally we\u2019d be able to do whatever we want within the ScrollViewerViewChangedEvent, including removing the ScrollViewer from the UIElement tree. \n. We have a few options; \n1) Update the app to opt into useLegacyBatchedCATransactions \n2) Update the app to dispatch_async its call to reload the UITableView data on a subsequent run of the UI thread\n3) Update UIScrollViewer to dispatch_async its call to scrollViewDidScroll:\nWe'll need to discuss our options here; I think 3 sounds the most promising if we can prove that it won't cause other issues.. @tadam-msft, what do you want to do with this one?. :shipit:. I tested several apps with this change and couldn't identify any issues.  That being said, additional testing/validation would be appreciated.. @rajsesh-msft; it's probably worth merging.  @yiyang-msft, do you have time to do so?. :shipit:. Closing; draft is out for review.. :shipit:. > @interface UIPanGestureRecognizer ()\nnit: should we break this out into UIPanGestureRecognizerInternal.h? #Resolved\n\nRefers to: Frameworks/include/UIGestureRecognizerInternal.h:61 in 155e8cb. . > NSMutableDictionary* g_curGesturesDict;\ncan delete #Resolved\n\nRefers to: Frameworks/UIKit/UIView.mm:134 in 155e8cb. . >     // and adding each list into a tracking dictionary\nno longer true? #Resolved\n\nRefers to: Frameworks/UIKit/UIView.mm:185 in 155e8cb. . > - (bool)_processGesturesForTouch:(UITouch)touch event:(UIEvent)event touchEventName:(SEL)eventName {\nany thoughts on adding UTs for this?  We could make it static and take more arguments, move it to an instance-based self-contained class, and/or break it up into smaller functions? #Resolved\n\nRefers to: Frameworks/UIKit/UIView.mm:137 in 155e8cb. . > - (bool)_processGesturesForTouch:(UITouch)touch event:(UIEvent)event touchEventName:(SEL)eventName {\nit also seems like we could use some tests with a few custom gesture recognizers that know which states they expect to transition between, based on the values they return from the delegate callbacks, etc.\n\nIn reply to: 277849456 \n\nRefers to: Frameworks/UIKit/UIView.mm:137 in 155e8cb. . :shipit:. is there any way to prevent usage of stringWithCString  from creeping back in?\n\nIn reply to: 277388030 . :shipit:. :shipit:. :shipit:. It looks like this only repros on apps ported with the old Application entry point (no formal App.Xaml.cpp like we have now).  We may need to file a separate bug to finally remove support for the old path and only support the new (which would be a breaking change  for any app imported before we introduced App.Xaml.cpp in 363f64f4043).. This now only repros in the functional tests.. I'm curious if this holds true after calling setImage:forState?  I'm also not convinced we should bother fixing this corner case.\n. :shipit:. :shipit:. Thanks, @edvv.  We've done a substantial amount of general 'code scrubbing' (and there's certainly more room for improvement), but I want to ensure that we address this specific problem in our codebase - especially if it's going to take a while to address it in the compiler.  \n@DHowett-MSFT, were you planning on pivoting #1365 to perform a thorough code inspection while we wait for a compiler fix?. We should also look at how we fire the callbacks; we currently crash if the target doesn't implement a given selector (you can see this if you click on the empty top-right UIBarButtonItem that's in some scenes of TypographyInsight).  Should we protect against the crash and log an error instead?. Thanks, @DHowett-MSFT.  It's surprising that TypographyInsight would ship with hidden buttons that crash the app when touched - I want to at least confirm this is the case on the reference platform.\nAlso, I don't understand this bug.  The title says that UIControl should unregister subscribers in its own dealloc, but I'm pretty sure we're already doing that.  \nThe description sounds like the bug is saying that we should gracefully handle cases where registered objects neglect to unregister themselves in dealloc.  @DHowett-MSFT, do you know how this is handled on the reference platform?\n. :shipit:. :shipit:. This task also tracks finding/filing more perf bugs in the app launch path.. :shipit:. @yiyang-msft, last time this regressed, it was a bug in UIScrollView.  Can you please take a look?. This looks like a regression caused by the CG refactor.  Thanks, @DHowett-MSFT for help confirming.  \nDisabling the caching behavior in DisplayTexture.mm (CachedDisplayTextureForImage, etc.) works around the issue.. We should also make the cache entry/removal instance-based (off of the IDisplayTexture?) rather than using the static listener pattern.. :shipit:. >     [self invalidateIntrinsicContentSize];\nwe definitely don't want to do this if nothing has changed #Resolved\n\nRefers to: Frameworks/UIKit/UILabel.mm:119 in a0db61f. . >     [self invalidateIntrinsicContentSize];\notherwise it looks like we invalidate every time layoutsubviews is called\n\nIn reply to: 285228583 \n\nRefers to: Frameworks/UIKit/UILabel.mm:119 in a0db61f. . :shipit:. Thanks for adding these tests, @ehren!. Failed CI build, probably due to missing associated code fix.  Can you please rebase onto latest develop?\n\nIn reply to: 290592649 . I kicked off another CI build last night, but the tests are still failing:\n: Error: FAILED: Waiting for final view controller dismiss completion timed out!\n Value of: uxEvent->Wait(5)\n  Actual: false\nExpected: true [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: Error: Verify: Fail [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/0 [Failed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/1\nEndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/1 [Passed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/2\n: Error: FAILED: Waiting for final view controller dismiss completion timed out!\n Value of: uxEvent->Wait(5)\n  Actual: false\nExpected: true [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: Error: Verify: Fail [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/2 [Failed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/3\nEndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/3 [Passed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/4\n: Error: FAILED: Waiting for final view controller dismiss completion timed out!\n Value of: uxEvent->Wait(5)\n  Actual: false\nExpected: true [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: Error: Verify: Fail [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/4 [Failed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/5\nEndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/5 [Passed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/6\n: Error: FAILED: Waiting for final view controller dismiss completion timed out!\n Value of: uxEvent->Wait(5)\n  Actual: false\nExpected: true [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: Error: Verify: Fail [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/6 [Failed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/7\nEndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/7 [Passed]\nStartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/8\n: Error: FAILED: Waiting for final view controller dismiss completion timed out!\n Value of: uxEvent->Wait(5)\n  Actual: false\nExpected: true [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: Error: Verify: Fail [File: d:\\build\\agent3_work\\5\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 285]\n: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/8 [Failed]\n....\n2017-04-14T00:14:25.1340745Z Non-passing Tests:\n2017-04-14T00:14:25.1497014Z \n2017-04-14T00:14:25.1497014Z ##[error]:     PresentDismiss_UIViewControllerModalTest::Test [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/0 [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/2 [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/4 [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/6 [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/8 [Failed]\n2017-04-14T00:14:25.1497014Z ##[error]:         PresentDismiss_UIViewControllerModalTest.PresentDismiss/10 [Failed]\n. @ehren - I'm a bit stumped too.  Here's the full output; I can't get the tests to fail locally for me either.\n2017-04-17T20:04:28.5951386Z StartGroup: PresentDismiss_UIViewControllerModalTest::Test\n2017-04-17T20:04:28.5951386Z \n2017-04-17T20:04:28.5951386Z Starting parameterized subtests for PresentDismiss_UIViewControllerModalTest:\n2017-04-17T20:04:28.5951386Z \n2017-04-17T20:04:28.5951386Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/0\n2017-04-17T20:04:28.5951386Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.5951386Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.5951386Z   Actual: false\n2017-04-17T20:04:28.6107637Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/0 [Failed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/1\n2017-04-17T20:04:28.6107637Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/1 [Passed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/2\n2017-04-17T20:04:28.6107637Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.6107637Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.6107637Z   Actual: false\n2017-04-17T20:04:28.6107637Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/2 [Failed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/3\n2017-04-17T20:04:28.6107637Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/3 [Passed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/4\n2017-04-17T20:04:28.6107637Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.6107637Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.6107637Z   Actual: false\n2017-04-17T20:04:28.6107637Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/4 [Failed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/5\n2017-04-17T20:04:28.6107637Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/5 [Passed]\n2017-04-17T20:04:28.6107637Z \n2017-04-17T20:04:28.6107637Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/6\n2017-04-17T20:04:28.6107637Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.6107637Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.6107637Z   Actual: false\n2017-04-17T20:04:28.6107637Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6107637Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6263891Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/6 [Failed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/7\n2017-04-17T20:04:28.6263891Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/7 [Passed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/8\n2017-04-17T20:04:28.6263891Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.6263891Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.6263891Z   Actual: false\n2017-04-17T20:04:28.6263891Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6263891Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6263891Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/8 [Failed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/9\n2017-04-17T20:04:28.6263891Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/9 [Passed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/10\n2017-04-17T20:04:28.6263891Z ##[error]: Error: FAILED: Waiting for final present completion timed out! \n2017-04-17T20:04:28.6263891Z  Value of: finalPresentEvent->Wait(5)\n2017-04-17T20:04:28.6263891Z   Actual: false\n2017-04-17T20:04:28.6263891Z Expected: true [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6263891Z ##[error]: Error: Verify: Fail [File: d:\\Build\\Agent9_work\\7\\s\\tests\\functionaltests\\Tests\\UIKitTests\\UIViewControllerTests.mm, Function: void UIViewControllerModalTest::TestModalPresentDismiss(UIModalPresentationStyle, BOOL), Line: 294]\n2017-04-17T20:04:28.6263891Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/10 [Failed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z StartGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/11\n2017-04-17T20:04:28.6263891Z EndGroup: PresentDismiss_UIViewControllerModalTest.PresentDismiss/11 [Passed]\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z End of parameterized subtests for UIViewControllerModalTest_PresentDismiss.\n2017-04-17T20:04:28.6263891Z \n2017-04-17T20:04:28.6263891Z ##[error]: EndGroup: PresentDismiss_UIViewControllerModalTest::Test [Failed]. @ehren - I was able to get some ~local repros thanks to some help from @pradipd.  He found that if you remote desktop into a machine, kick off the tests, and then minimize (or close) the remote desktop window while the tests are running, the c_animationModes[YES] tests will fail.  I'll keep digging tomorrow, but for now, maybe we should just file a separate issue and push this with only 'c_animationModes = { NO }'?  It's possible that Xaml isn't bothering to animate the storyboard if the RDP window is minimized, or it could be some other bug in the UIView animation pipeline (which we haven't fully proven out yet).. @ehren - yes, please switch to only non-animated tests for now, and if you don't mind, please file a separate issue to track the animation test issue on the build machines.. Correct; our 'main thread' is tied to the CoreWindow, so it's only available in functional tests.  . Although as Raj said, now that our UTs run in a UWP we could probably fix this? . > UIKIT_XAML_EXPORT IInspectable* XamlGetFrameworkElementSublayerCanvasProperty(const Microsoft::WRL::ComPtr& targetElement);\nWe can probably delete these, but let's wait just in case we have a new control that needs them. #ByDesign\n\nRefers to: Frameworks/UIKit.Xaml/ObjCXamlControls.h:80 in 6aa23ea. . :shipit:. ping... #Resolved. :shipit:. Either via run-unittests.ps1, or just running the tests with te.exe.  Can I share any test output with you?. StartGroup: TestDrawingTextWithTransformedMatrices_Transform.TestMatrices/11\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 1084\nError:  registered differences:\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/15\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 60\nError:  registered differences\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/16\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 175\nError:  registered differences\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/17\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 299\nError:  registered differences\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/21\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 7\nError:  registered differences\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/22\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 17\nError:  registered differences\n\n\n\nStartGroup: TextDrawing_TextDrawingMode.CGTextDrawingMode/23\nError: Failed [File: I:\\enl\\vso_2_WinObjC\\tests\\unittests\\CoreGraphics.Drawing\\DrawingTest.cpp, Function: virtual void testing::DrawTest > >::PostDraw() [TComparator = PixelByPixelImageComparator >], Line: 142]\nError: images differ nontrivially with\nError: 15\nError:  registered differences\n\n\n\n. ClearType is on; running Windows build 15063.rs2_release_dep.170317-1912. :shipit:. Added fix for #2291.\nFixes #2291.. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. Thanks, @bbowman for all of your help with this! #Resolved. :clock1:. >  @Status Stub\ncan we fix up these annotations?  how many of these are NotInPlan?  inputAccessoryView definitely isn't in plan #Pending\n\nRefers to: Frameworks/UIKit/UITextField.mm:827 in 480449a. . >  @Status Stub\nit would also be nice to delete any member variables we don't need, such as _autoCapitalizatonType\n\nIn reply to: 292037200 \n\nRefers to: Frameworks/UIKit/UITextField.mm:827 in 480449a. . >     }\nsame here - just ask the control for its current text; we shouldn't have to manage both controls here.\n\nRefers to: Frameworks/UIKit/UITextField.mm:116 in 480449a. . :clock1:. :shipit:. These are closer to what UIView's APIs should look like, but are not yet validated:\n/\n @Status Interoperable\n/\n- (CGRect)convertRect:(CGRect)rect toView:(UIView)toView {\n    UIWindow* ourWindow = [self _getWindowInternal];\n    if (!ourWindow ) {\n        return rect;\n    }\nif (!toView) {\n    toView = ourWindow;\n}\n\nCGPoint pt1 = rect.origin;\nCGPoint pt2 = rect.origin;\npt2.x += rect.size.width;\npt2.y += rect.size.height;\n\npt1 = [ourWindow convertPoint:pt1 toView:toView];\npt2 = [ourWindow convertPoint:pt2 toView:toView];\n\nCGRect ret;\nret.origin.x = pt1.x < pt2.x ? pt1.x : pt2.x;\nret.origin.y = pt1.y < pt2.y ? pt1.y : pt2.y;\nret.size.width = fabsf(pt1.x - pt2.x);\nret.size.height = fabsf(pt1.y - pt2.y);\n\nreturn ret;\n\n}\n/\n @Status Interoperable\n/\n- (CGRect)convertRect:(CGRect)rect fromView:(UIView)fromView {\n    UIWindow* ourWindow = [self _getWindowInternal];\n    if (!ourWindow) {\n        return rect;\n    }\nif (!fromView) {\n    fromView = ourWindow;\n}\n\nCGPoint pt1 = rect.origin;\nCGPoint pt2 = rect.origin;\npt2.x += rect.size.width;\npt2.y += rect.size.height;\n\npt1 = [ourWindow convertPoint:pt1 fromView:fromView];\npt2 = [ourWindow convertPoint:pt2 fromView:fromView];\n\nCGRect ret;\nret.origin.x = pt1.x < pt2.x ? pt1.x : pt2.x;\nret.origin.y = pt1.y < pt2.y ? pt1.y : pt2.y;\nret.size.width = fabsf(pt1.x - pt2.x);\nret.size.height = fabsf(pt1.y - pt2.y);\n\nreturn ret;\n\n}\n/\n @Status Interoperable\n/\n- (CGPoint)convertPoint:(CGPoint)point toView:(UIView)toView {\n    UIWindow* ourWindow = [self _getWindowInternal];\n    if (!ourWindow) {\n        return point;\n    }\nif (!toView) {\n    toView = ourWindow;\n}\n\nreturn [CALayer convertPoint:point fromLayer:[self layer] toLayer:[toView layer]];\n\n}\n/\n @Status Interoperable\n/\n- (CGPoint)convertPoint:(CGPoint)point fromView:(UIView)fromView {\n    UIWindow* ourWindow = [self _getWindowInternal];\n    if (!ourWindow) {\n        return point;\n    }\nif (!fromView) {\n    fromView = ourWindow;\n}\n\nreturn [CALayer convertPoint:point fromLayer:[fromView layer] toLayer:[self layer]];\n\n}\n. We should write ~3 tests for this, too:\n\nStoryboard AppDelegate is able to provide UIWindow via the window property\nStoryboard AppDelegate gets a default UIWindow assigned to its window property\nNon-storyboard AppDelegate has to create its own UIWindow #Closed. Good thing that's not what the commit message said; that would be confusing.. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. >     }\n\ndo we need the same fix here? #Resolved\n\nRefers to: Frameworks/UIKit/UIScrollView.mm:971 in fb79b1a. . >     }\nNo, I mean -- why did you have to check for 'if (self.isScrollEnabled)' in setShowsHorizontalScrollIndicator, but not here?\n\nIn reply to: 295403526 \n\nRefers to: Frameworks/UIKit/UIScrollView.mm:971 in fb79b1a. . :shipit:. @DHowett-MSFT - this change lets them either use projections OR CppWinRT, but I agree it's a bit messy.  I don't understand the 'internal crap' comment though - these are actual WinRT types that the app needs to know about and work with - definitely not internal to us.  \nMy main concern is that RTObject* loses all type info - maybe we just add placeholder classes that are documented to be 'cast'-able to either their Projections OR CppWinRT counterparts.  . :shipit:. 00 097fea2c 6e924545 KERNELBASE!RaiseException+0x62 [d:\\rs1\\minkernel\\kernelbase\\xcpt.c @ 904] \n01 097fea70 6f55063e VCRUNTIME140_APP!_CxxThrowException+0x65 [f:\\dd\\vctools\\crt\\vcruntime\\src\\eh\\throw.cpp @ 131] \n02 097feb0c 6f5ce149 UIKit!winrt::impl::throw_hresult+0x2de [d:\\build\\agent7_work\\17\\s\\packages\\cppwinrt\\2017.3.31.1\\build\\native\\include\\winrt/internal/../base.h @ 1734] \n03 097feb1c 00510eb8 UIKit!-[UIActivityIndicatorView stopAnimating]+0x39 [d:\\build\\agent7_work\\17\\s\\frameworks\\uikit\\uiactivityindicatorview.mm @ 247] \n04 097feb30 0051155e IslandwoodNews!-[AXPRefreshControl endRefreshing]+0x3d [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axprefreshcontrol.m @ 109] \n05 097fec00 0051136e IslandwoodNews!-[AXPRefreshControl updateRefreshControlMessage:]+0x1c2 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axprefreshcontrol.m @ 171] \n06 097fec20 005111cf IslandwoodNews!-[AXPRefreshControl observeValueForKeyPath:ofObject:change:context:]+0x65 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axprefreshcontrol.m @ 156] \n07 097fec68 00421aa3 IslandwoodNews!__38-[AXPRefreshControl setStateDelegate:]_block_invoke+0xb5 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axprefreshcontrol.m @ 129] \n08 097fed34 6ef26080 IslandwoodNews!-[AXPListener observeValueForKeyPath:ofObject:change:context:]+0x444 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axpobserver.m @ 109] \n09 097fede8 6ef25ea2 Foundation!_dispatchDidChange+0x1d0 [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvosupport.mm @ 633] \n0a 097fedf8 6ef84f6f Foundation!-[NSObject(NSKeyValueObserving) didChangeValueForKey:]+0x22 [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvosupport.mm @ 644] \n0b 097fee48 0038071a Foundation!notifyingSetImpl+0x5f [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvoswizzling.mm @ 116] \n0c 097fef98 00382d8a IslandwoodNews!-[AXHeadlinesDelegate observeValueForKeyPath:ofObject:change:context:]+0xb55 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\apps\\bingnews\\bingnews\\view controllers\\axheadlinesdelegate.m @ 134] \n0d 097fefe8 00421aa3 IslandwoodNews!__45-[AXHeadlinesDelegate refreshWithCachedData:]_block_invoke_2+0xf8 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\apps\\bingnews\\bingnews\\view controllers\\axheadlinesdelegate.m @ 338] \n0e 097ff0b4 6ef26080 IslandwoodNews!-[AXPListener observeValueForKeyPath:ofObject:change:context:]+0x444 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axpobserver.m @ 109] \n0f 097ff168 6ef25ea2 Foundation!_dispatchDidChange+0x1d0 [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvosupport.mm @ 633] \n10 097ff178 6ef8535f Foundation!-[NSObject(NSKeyValueObserving) didChangeValueForKey:]+0x22 [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvosupport.mm @ 644] \n11 097ff1c8 003f6c57 Foundation!notifyingSetImpl+0x5f [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nskvoswizzling.mm @ 116] \n12 097ff22c 003f6283 IslandwoodNews!__79+[AXGHeadlinesData queryWithObserver:parameters:inSession:forObserver:context:]_block_invoke_2+0x135 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\datamodel\\axgheadlinesdata.m @ 66] \n13 097ff25c 003f3c8a IslandwoodNews!__67-[AXPProxyObject baseQuery:parameters:inSession:completionHandler:]_block_invoke+0xa9 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axpproxyobject.m @ 41] \n14 097ff2c8 004cdd64 IslandwoodNews!__63+[AXPCodeUtils dataForUrlWithTask:inSession:completionHandler:]_block_invoke+0x29a [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axpcodeutils.m @ 133] \n15 097ff3f8 6ef3404a IslandwoodNews!-[AXPURLManager URLSession:task:didCompleteWithError:]+0xb72 [d:\\build\\agent7_work\\r1\\a\\winobjc_internal\\apps\\msn\\common\\axplatform\\axplatform\\axpurlmanager.m @ 818] \n16 097ff414 6ef13f99 Foundation!std::stack > >::top+0x537a [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nsurlsession.mm @ 57] \n17 097ff490 6ef15ebc Foundation!-[NSBlockOperation main]+0x69 [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nsblockoperation.mm @ 72] \n18 097ff4c8 6ef0d5dc Foundation!-[NSOperation start]+0x13c [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nsoperation.mm @ 289] \n19 097ff528 6ea47987 Foundation!__36-[NSOperationQueue _startOperation:]_block_invoke+0x10c [d:\\build\\agent7_work\\17\\s\\frameworks\\foundation\\nsoperationqueue.mm @ 213] \n1a 097ff53c 6ea48f0e libdispatch!_dispatch_call_block_and_release+0x1f [z:\\winobjc\\deps\\3rdparty\\libdispatch\\src\\queue.c @ 124] \n1b 097ff55c 6ea496db libdispatch!_dispatch_continuation_pop+0x7b [z:\\winobjc\\deps\\3rdparty\\libdispatch\\src\\queue.c @ 415] \n1c 097ff598 6ea43668 libdispatch!_dispatch_worker_thread2+0xad [z:\\winobjc\\deps\\3rdparty\\libdispatch\\src\\queue.c @ 1643] \n1d 097ff5b4 6ea45219 libdispatch!_native_work_callback+0x88 [z:\\winobjc\\deps\\3rdparty\\libdispatch\\platform\\windows\\pthread_workqueue_winrt.cpp @ 325] \n1e 097ff5c4 6ea45f32 libdispatch!::operator()+0x19 [z:\\winobjc\\deps\\3rdparty\\libdispatch\\platform\\windows\\pthread_workqueue_winrt.cpp @ 355] \n1f 097ff5d0 6ba34c6f libdispatch!Microsoft::WRL::Details::InvokeHelper,ABI::Windows::System::Threading::IWorkItemHandler,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>,,1>::Invoke+0x12 [c:\\program files (x86)\\windows kits\\10\\include\\10.0.10586.0\\winrt\\wrl\\event.h @ 256] \n20 097ff5fc 6ba346ea threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaf [d:\\rs1\\onecoreuap\\base\\threadpool\\winrt\\impl\\threadpool.cpp @ 467] \n21 097ff62c 779a7c43 threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0xaa [d:\\rs1\\onecoreuap\\base\\threadpool\\winrt\\impl\\threadpool.cpp @ 578] \n22 097ff718 779a6b56 ntdll!TppWorkpExecuteCallback+0x153 [d:\\rs1\\minkernel\\threadpool\\ntdll\\work.c @ 671] \n23 097ff8b4 744f62c4 ntdll!TppWorkerThread+0x396 [d:\\rs1\\minkernel\\threadpool\\ntdll\\worker.c @ 1083] \n24 097ff8c8 779d0fd9 kernel32!BaseThreadInitThunk+0x24 [d:\\rs1\\base\\win32\\client\\thread.c @ 64] \n25 097ff910 779d0fa4 ntdll!__RtlUserThreadStart+0x2f [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 997] \n26 097ff920 00000000 ntdll!_RtlUserThreadStart+0x1b [d:\\rs1\\minkernel\\ntdll\\rtlstrt.c @ 914] \n0:016> kp5\n # ChildEBP RetAddr\n00 097fea2c 6e924545 KERNELBASE!RaiseException(unsigned long dwExceptionCode = 0xe06d7363, unsigned long dwExceptionFlags = 1, unsigned long nNumberOfArguments = 3, unsigned long * lpArguments = 0x097fea64)+0x62 [d:\\rs1\\minkernel\\kernelbase\\xcpt.c @ 904] \n01 097fea70 6f55063e VCRUNTIME140_APP!_CxxThrowException(void * pExceptionObject = 0x097feaf0, struct _s__ThrowInfo * pThrowInfo = 0x6fc3dc08)+0x65 [f:\\dd\\vctools\\crt\\vcruntime\\src\\eh\\throw.cpp @ 131] \n02 097feb0c 6f5ce149 UIKit!winrt::impl::throw_hresult(HRESULT result = 0x8001010e)+0x2de [d:\\build\\agent7_work\\17\\s\\packages\\cppwinrt\\2017.3.31.1\\build\\native\\include\\winrt/internal/../base.h @ 1734] \n03 097feb1c 00510eb8 UIKit!-UIActivityIndicatorView stopAnimating+0x39 [d:\\build\\agent7_work\\17\\s\\frameworks\\uikit\\uiactivityindicatorview.mm @ 247] \nWARNING: Stack unwind information not available. Following frames may be wrong.\n04 097feb30 0051155e IslandwoodNews!VSDesignerDllMain+0x145128\n. Alternatively, we fix this in the app.. The UIKit docs say that off-thread usage of UIViews is unsupported.. @esa-h; you need to interact with the app's SystemNavigationManager class.  \nHere's an example of our current master codebase, which leverages our WinRT/ObjectiveC projections to subscribe to some back events in the app: https://github.com/Microsoft/WinObjC/blob/dcded83ef0258335bbc018ec56fb2fe9071a7f1c/Frameworks/UIKit/UIApplication.mm#L209\nHowever, it's worth noting that our UIKit implementation will soon switch over to CppWinRT in favor of our WinRT/ObjectiveC projections for our internal usage (we've already done so for most WinRT calls in develop).  If you are compiling ObjectiveC++, you can opt to leverage CppWinRT over our WinRT->ObjectiveC projections if you wish (you'll have a smaller app package/on-disk footprint), but our WinRT->ObjectiveC projections should also suffice for most app needs.\nLet us know if you need more information.. @esa-h; unfortunately there's no way to lock a UWP app's Window size.  From what I understand, the rationale is that ideally, your app shouldn't be locked to a fixed window size, so it can run well on any platform (phone, tablet, xbox, etc.).   \nHowever, if you require a fixed-sized app, you can either:\na) Use the WOCDisplayMode that scales your content to fit the window's size (maybe not ideal)\nor \nb) Subscribe to raw unhandled pointer events on the app's Window, and respond accordingly.  In this scenario, you'd be subscribing to the Windows::UI::Xaml::Window::Current->Content property's raw pointer events via projections.  I don't know that this would be a great user experience though; what would you want to do if/when they click outside of your app's content?  Let us know if you need a code sample for this.\n. @bbowman  - we need TAEF's appx test execution.. :shipit:. :shipit:. @andrejo-msft - can you provide a call stack?  . @andrejo-msft - can you please paste an image?  It sounds like focus is moving to a small 'dummy button' (a 1x1 transparent button).  If so, this isn't a regression, but it is being fixed soon with #2616.. Debug islandwoodhouse has never been stable; it usually times out (PLM terminates it for taking too long to launch).. > + (CGPoint)convertPoint:(CGPoint)point fromLayer:(CALayer)fromLayer toLayer:(CALayer)toLayer {\nwe should also update convertRect: (just below this method) for consistency  #Resolved\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:2417 in 5bbe237. . :shipit:. :shipit:. Won't this turn the Accelerometer on prematurely?  It seems like we should leave the interval as-is, or set it to 0 (which I assume is the default).\n. Should we add a call to NSTraceInfo() here so it's more apparent to developers that we failed to init?\n. Any threading concerns on any of these accessors/methods?  Should we synchronize on self?\n. should clear out self.accelerometerToken too, and should check that it's actually set before trying to unsubscribe.\n. nit: should we NSTraceInfo here if we're capping the min interval?\n. nit: a comment here may be nice, as setting to 0 is what 'stops' the accelerometer.\n. What if someone calls this multiple times on the same motionManager? is that valid?\n. This should no longer be necessary\n. nit: seems a bit overkill to pull this out as a helper method.\n. private methods should start with '_'\n. Can you add comments for the conversion here? Something simple like 'IOS uses seconds whereas WinRT uses milliseconds' would be helpful.  Bonus points for pulling 1000 out as a constant that is descriptively named.\n. why are we locking here, but nowhere else?\n. nit: caveat should also include lack of support for kCGImageSourceTypeIdentifierHint\n. std::vector doesn't let you transfer ownership of its buffer like this.  I think you'll need std::unique_ptr, then call .release() on it after the successful copy into frameData.\nAs it stands, the vector will go out of scope and free the buffer.\n. Worth pulling out some of these identical blocks of code as helper functions?\n. most (all?) of these can move to the .mm file.\n. nit: can we just remove these CLCompile nodes now?\n. yes, setting it to 0 is how you turn the sensor off.\n. nit: * on wrong side; did you clang-format your changes? #Resolved\n. could use comments; potentially pull 'magic' values out as constants too? #Resolved\n. else? is it a caveat that we're only handling gifs here, or is that expected?   #Resolved\n. nit #Resolved\n. Are you sure PropVariantClear doesn't free memory in the blob field, and that the memory was allocated with malloc?  It seems like we do need to make a copy here. #Resolved\n. thanks; can you please add a bit more info about that to this comment?\n\nIn reply to: 60331063 \n. why is this commented out? #Resolved\n. It looks like we're leaking these nested maps, since the retain count will be 1 here, and 2 when it's added to jpegProperties, but we never release our reference.  Can we enable ARC on these files?  If so, can you also #import \"AssertARCEnabled.h\" in each file so it's clear that ARC is enabled?\n. does this have to copy all of the keys into an NSArray just to get the count?  Can you just call [exifProperties count] directly? #Resolved\n. same question applies in several spots...\n\nIn reply to: 60454530 \n. thanks for fixing all of these! #Resolved\n. super nit: nullptr for all of the NULLs? #Resolved\n. ....or they passed in an invalid url path?  maybe we should log that error separately and return earlier? #Resolved\n. check for errors? #Resolved\n. shouldn't this be a ComPtr so it's freed after transferring ownership to _idStream? #Resolved\n. will we ever not have a dictionary? #Resolved\n. nit we could condense these into a function template;\ntemplate \nvoid setHighLowParts(TOut& out, double value) {\n    ...\n} #Resolved\n. nit: doubleValue? #Resolved\n. should we trace the property we're trying to write? #Resolved\n. where else are we hard-coding this value? #Resolved\n. should it be called 'expectedCount'? and is iOS this strict? #Resolved\n. just want to confirm that this is only the size of the metadata that we written; we're not allocating more than we need to here, right? #Resolved\n. ComPtr, else we leak #Resolved\n. just assign directly to L\"ImageQuality\"? #Closed\n. if you're setting VT_R4, shouldn't you be assigning fltVal? #Resolved\n. why hard-code this? #Resolved\n. do we need to do an extra copy here?  won't imageFactory->CreateBitmapFromMemory also make a copy? #Resolved\n. leak if we return early above #Resolved\n. Are you sure?  MSDN says it returns an HRESULT: https://msdn.microsoft.com/en-us/library/windows/desktop/aa378980(v=vs.85).aspx #Resolved\n. Would it be worth at least keeping the 'unimplemented' tracing for kCGImagePropertyPNGChromaticities -- if (CFDictionaryContainsKey(pngDictionary, kCGImagePropertyPNGChromaticities))  ? #Resolved\n. can you change this to const_cast so it's clear why you're casting here? #Resolved\n. else we just drop the value? should we log that it was out of range, or clamp instead? #Resolved\n. looks like you're right - thanks\n\nIn reply to: 60518362 \n. thanks for the due diligence here\n\nIn reply to: 60517955 \n. Can you elaborate on why we can't use ARC in this file?  In the meantime, you can use StrongId jfifProperties (IIRC from SmartTypes.h) in all places, which will handle calling release when the objects go out of scope.  Otherwise, you'd have to add 'release' calls everywhere you transfer ownership of the sub-property collections to the parent dictionary.\n\nIn reply to: 60630877 \n. nit: it doesn't seem like the cast here is necessary (nor below where you're casting to LARGE_INTEGER*).  If the cast is necessary, maybe  setHighLowParts(&propertyToWrite.uhVal, dictionaryValue), etc. would be cleaner?\n. nit: private/internal methods should have a leading _\n. remove if implemented #Resolved\n. ah...then please update the annotation to @Status Stub\n\nIn reply to: 62900503 \n. do we want the same behavior for _passwordBox? #Resolved\n. thanks for validating\n\nIn reply to: 63553197 \n. comments would be helpful here\n. is this implemented now?  does the annotation need to be changed to Interoperable?  same question in a few spots...\n. if interoperable, the UNIMPLEMENTED macros will also need to be removed.  my comments today won't hold up the PR though - we're running it through our CI builds right now and should be able to accept this today.  we might want to go back and fix these annotations up afterwards though.\n\nIn reply to: 65732473 \n. can you please add some comments to this function?\n. ...and anywhere else you think would benefit\n\nIn reply to: 66841122 \n. nit: typos - bitsPerComponent\n. nit: please be sure to run tools/scripts/clang-format.ps1 on all modified files\n. Can you add a TODO here to move back to CGContextReplacePathWithStrokedPath?\n. TODO comments needed?\n. tabs, and need a TODO?\n. please delete any unnecessary commented code\n. probably don't need/want these test directories, as any CG tests should go into the unit test or functional test projects.\n. probably don't need/want these test directories, as any CG tests should go into the unit test or functional test projects.\n. Can you please file a GitHub issue to track this, and reference it here?\n. same here regarding referencing the GitHub issue.  We should probably also delete the commented out code for now.  Can you please add it to the GitHub issue, so we know to add the code back to these tests when the issue is fixed?\n. Please add comments throughout the file.\n. WinObjCTest::Mock or just Test::Mock?\n\nIn reply to: 68830755 \n. disabling the test for now?\n. Do you have a standalone repro that we can look at to locate the underlying issue?\n. Can you please file a GitHub issue to track this?\n. and reference it here as a TODO?\n\nIn reply to: 69013081 \n. same here regarding a TODO that references a GitHub issue.\n. Agree with Ben; if cairo already provides this functionality, we should probably leverage it.  Can you please add a private _CGContextIsPointInPath function to our CGContextRef implementation that turns around and calls cairo_in_fill instead of hand-rolling this code?\n\nIn reply to: 68853001 \n. please apply clang-formatting to your changes\n. Can you please file a GitHub issue and add a TODO that references it here?  @Dhowett-MSFT can probably help track down the issue with kvo.\n. Great; let me know when it's ready for another review.\n\nIn reply to: 69164416 \n. a crash due to a nullptr deref is usually better than limping along in an unexpected state.  are you replicating the reference platform here?\n. should we log something here?  what does the reference platform on invalid args?\n. > a \nplease use a more descriptive variable name\n. > c \nplease use a more descriptive variable name\n. thanks; can you update the comment to reflect that you're following reference platform behavior here?\n\nIn reply to: 71441657 \n. Is this ever expected? Should we log or fail fast here?\n. do we need to alloc a new object every time?  why not just update the current CLHeading's fields?\n. I suppose we do, since the user may be holding onto the old heading value....\n\nIn reply to: 71566562 \n. > _periodicLocationUpdateRequested \n_periodicHeadingUpdateRequested\n. This variable doesn't work properly; it's set/stomped in several spots.  It looks like _requestExtendedExecutionSession/_removeExtendedExecutionSession already does ref-counting, so you should be able to just call them as needed.  \nThe only place that needs special handling is dealloc - where we'll need to clear out the extended execution session regardless of s_extendedExecutionRequestCount's value.\n. > earthRadius \nnit: c_earthRadius\n. > float( \nnit: it's a bid odd that two of these are constructing a float rather than casting to a float\n. is this used anymore? #Resolved\n. can we delete this? #Resolved\n. can we delete this? #Resolved\n. > EbrApplicationActivated \nnit: Maybe rename these to OnApplicationActivated, OnApplicationLaunched, etc. (drop Ebr)? #Resolved\n. Can we create/register this in the UIApplicationMain initializer, so we can get rid of _ApplicationMainLaunch and just call _ApplicationLaunch in its place? #Resolved\n. or would that be a breaking change?\n\nIn reply to: 72336614 \n. That's what I was thinking too...\n\nIn reply to: 72367429 \n. > [_launcher _openURL:url]; \ndon't you think it would be more correct to just modify _launcher to not block/wait for the activation? #Resolved\n. nit: maybe worth adding a comment to both of these sections about what main ends up calling...?\n. It still seems like this check should go into the launcher then.  We have a helper class for URI activation; special handling should go there.\n\nIn reply to: 72480268 \n. can you add more comments as to why the behavior differs?\n. > kCGImageAlphaNoneSkipLast \nare you sure this should be RGBA? #Resolved\n. nit: light comments here would be nice #Resolved\n. > .reset(new _NSInvocationCallFrame(methodSignature)); \nnit: _callFrame = make_unique? #Resolved\n. guaranteed to be aligned properly? #Resolved\n. > exceeds \nsuper-nit: or it's negative #Resolved\n. > NSMethodSignature \nwhy not StrongId so we don't have to retain/release? #Resolved\n. > StrongId \nnit: ...whereas an extra retain/release on this copy probably isn't necessary since NSInvocationCallFrame can never outlive its parent NSInvocation #Resolved\n. nit: I realize that 'stret' is documented _somewhere in obcjmsgsend docs, but can we use more descriptive variable names here and elsewhere? #Resolved\n. > allocation_extent \nnit: inconsistent/non-conformant struct name #Resolved\n. > off_t \nnit: interesting - i've never used off_t before.  the docs say it's for 'file offsets', but i suppose the type is the same....i'd prob just use size_t #Resolved\n. > nArguments \nnit: no hungarian\n. (in a couple spots)\n\nIn reply to: 77061000 \n. should we call deleteAllTouches(self) here instead?\n. >    \nnit: please switch the tab to 4 spaces\n. > _priv->currentTranslation.x = _priv->currentTranslation.y = 0.f; \nnit: I would prefer separate lines for the variable assignments\n. > activeGesture  \nsuper-nit: several spots with inconsistent spacing; it may be beneficial to run pre_commit(.ps1) or pre_push(.ps1) which would run clang-format over your changes.\n. >   TraceVerbose(TAG, L\"Removing gesture %hs %x state=%d\", object_getClassName(curGesture), curGesture ); \ncan you please wrap this in an 'if (DEBUG_GESTURES) {}' ?\n. do you have this file staged with changes?  \n\nIn reply to: 78603657 \n. > false \nThis should still be 'true', shouldn't it?\nAlso can we please add the old tracing back?\nif (handled && DEBUG_GESTURES) {\n            TraceVerbose(TAG, L\"Gesture (%hs) handled.\", object_getClassName(curgestureClass));\n        }\n. Strange; it should have modified the file in place to remove the spacing inconsistencies.  it might be worth trying .\\tools\\scripts\\clang-format.ps1 -File  to see if you get different results?\n\nIn reply to: 78604452 \n. if you don't mind, that would be great.  \n\nIn reply to: 78601747 \n. Thanks - that's a bit unfortunate.  Might be worth trying pre_push next time (after you commit, before you push)...\n\nIn reply to: 78605310 \n. This should still be 'true', shouldn't it?\nAlso can we please add the old tracing back?\nif (handled && DEBUG_GESTURES) {\n            TraceVerbose(TAG, L\"Gesture (%hs) handled.\", object_getClassName(curgestureClass));\n        }\n. I think I'd much prefer using the existing iOS API surface for this (appdidfinishlaunchingwithoptions); why force the app devs to change their code? #ByDesign\n. Oliver, can you share a better way to fail here?\n. > { nullptr } \nnit: you don't have to null out ComPtrs #ByDesign\n. > {} \nnit: also no need for zero-init-via-braces #ByDesign\n. should we add those details as comments here for clarity?\n\nIn reply to: 83076106 \n. > _ensureDispatcher \nnit: should be _PascalCase #Pending\n. tabs\n. > size_t i = 0; i < _trackedTouches.size(); i++ \nShould use range-based for;\nfor (TrackedTouch& trackedTouch : _trackedTouches) { ...\n. nit: just 'return { 0, 0 };' ?\n. > // We may have to revisit this logic, since the UITouch tap count should drive it. \nWhy not leverage the tap count now?\n. we shouldn't have to do another hit test here, as Xaml already chose the hit-test view..  what scenario is this covering?\n. ah - i see you just moved it up from below.  maybe we can get rid of that call now altogether, or at least wrap it in the if (DEBUG_HIT_TESTING_LIGHT) block and get rid of the 'enable legacy hit-testing' path?\n\nIn reply to: 84356602 \n. > CAScrollLayer \nprobably not worth adding, as there are no current plans to add support for CAScrollLayer #Resolved\n. why are all of these lines commented out? #Resolved\n. can we wrap in an #ifdef instead?\n\nIn reply to: 84962274 \n. ?\n\nIn reply to: 84356876 \n. ok, maybe we can track the removal as a separate issue\n\nIn reply to: 85023181 \n. > ight, _ColorBGRX); \nhow is this related to the heap corruption issue?\n. all of the code you're changing here is gone in the CA refactor, but I suppose this can go in and I'll have to forklift it to our UILabel impl.  Seems straightforward enough, but please ping me when this goes in so I can do yet another merge :/\n. I thought you weren't including the changes to this file? #Pending\n. > getTouches \nshouldn't this be _getTouches since it's private/internal? #Resolved\n. > DEBUG_DMGesture \nnit: nobody will know what 'dm' is when they come by later.  Can we call this DEBUG_DMANIP_GESTURE? #Resolved\n. > _dmGesture \nnit: _dManipGesture #Resolved\n. > setting transparent background \n...'so we can receive touch input' #Resolved\n. > __CFRuntimeBase temp = *re \nwhat all are we copying here, and then again below?  #Resolved\n. > DM \nEverywhere you use 'DM', can we use something more descriptive - maybe DManip? #Resolved\n. >   [self _setDragSlack:7.0f]; \nwhy 7.0f? can you add a comment for this? #Resolved\n. > heirarchy \nsuper-nit: hierarchy #Resolved\n. > dm \nmore use of 'dm' - could definitely use more descriptive names across all of these files/file names/etc. #Resolved\n. > maxinum \nnit: maximum #Resolved\n. you should be able to do range-based for loops over both of these gesture arrays #Resolved\n. > for (int i = 0; i < dmGestureCount; i++) { \nnit: range-based for here, too #Resolved\n. nit: why not move this into the above 'if' and ditch the 'send' variable? #WontFix\n. kind of strange; how about pulling this out into a shared function or lambda that gets called for both arrays? #Resolved\n. how about just setting directly to the projected transparent brush rather than creating a UIColor only to convert to the projected type?  Something like [WUXMSolidColorBrush makeInstanceWithColor:[WUColor transparent]] ? #Resolved\n. at which point you could just do  _contentCanvas.background = [WUXMSolidColorBrush makeInstanceWithColor:[WUColor transparent]] \n\nIn reply to: 86439907 \n. >  for (size_t i = 0; i < pointers.size(); ++i) { \nrange-based for #Resolved\n. > didn't \nnit: 'failed to' might be more clear #Resolved\n. copies are wasteful\n\nIn reply to: 86441503 \n. yes\n\nIn reply to: 86442520 \n. > true \nset back to false before pushing? #Resolved\n. > manipuation \nnit: Typo #Resolved\n. nit: maybe we should expose this off of a private UIPanGestureRecognizer property, so we can just +1 here? #Resolved\n. remove? sorry for the noise! :/ #Resolved\n. > LayerTransaction \nA lot of this came from CompositorInterface.mm. #Resolved\n. A lot of this came from CompositorInterface.mm. #Resolved\n. A lot of this came from CompositorInterface.mm; sorry it's not easy to diff. #Resolved\n. > DisplayTexture \nA lot of this came from CompositorInterface.mm; sorry it's not easy to diff. #Resolved\n. > DisplayProperties \nA lot of this came from CompositorInterface.mm; sorry it's not easy to diff. #Resolved\n. Dustin; I don't think we currently have an annotation for this. #Resolved\n. Couldn't go with the 'layerClass' model here, because the types we want to create are in UIKit.Xaml and are not yet projected to ObjC. #Resolved\n. > DisplayTexture \nA lot of this came from either CALayerXaml.cpp or XamlCompositor.cpp; sorry it's not easy to diff. #Resolved\n. > LayerAnimation \nA lot of this came from either CALayerXaml.cpp or XamlCompositor.cpp; sorry it's not easy to diff. #Resolved\n. > LayerCoordinator \nA lot of this came from either CALayerXaml.cpp or XamlCompositor.cpp; sorry it's not easy to diff. #Resolved\n. > LayerProxy \nA lot of this came from either CALayerXaml.cpp or XamlCompositor.cpp; sorry it's not easy to diff. #Resolved\n. > StoryboardManager \nA lot of this came from either CALayerXaml.cpp or XamlCompositor.cpp; sorry it's not easy to diff. #Resolved\n. > XamlCompositor \nThis is the remains of CompositorInterface.mm. #Resolved\n. that's a good idea; i'll follow up on it.\n\nIn reply to: 86620194 \n. These are the only two properties we support; they map to the attached properties registered above in _RegisterDependencyProperties.  The only other property that we may need to add is Border (if we don't port UIScrollView to Xaml before we implement Border on CALayer).\n\nIn reply to: 86627070 \n. transformToVisual is on UIElement.\n\nIn reply to: 86898072 \n. they're all at the bottom of the file - i don't really see the need to move them (i haven't modified this code at all)\n\nIn reply to: 86868019 \n. it's not used, but I can add it back for the next person who needs to add logging to this file.\n\nIn reply to: 86710622 \n. That would require more churn than I think is worth it at this point, and at the end of the day, the value is an int (*stride = writableBitmap->PixelWidth * 4;)\n\nIn reply to: 86886920 \n. that was by design for clarity.  which do you prefer?\n\nIn reply to: 86672132 \n. not require usually, but here we're freeing the element on the UIThread.\n\nIn reply to: 86633009 \n. added a comment\n\nIn reply to: 86869414 \n. this is already heavily commented in code (see the impl in CALayer.mm)\n\nIn reply to: 86874169 \n. I don't want to change this now, but I'll add a TODO in the code.\n\nIn reply to: 86900474 \n. nope, but i'll change it to '// Use CALayer's default backing Xaml element' since i was overusing 'default' :)\n\nIn reply to: 87280021 \n. we should file a bug to get rid of CreateRtProxy.  I'll move this one to createWith.\n\nIn reply to: 87281267 \n. also - why doesn't CreateRtProxy autorelease? Quite strange.\n\nIn reply to: 87281492 \n. _layerProxy returns an std::shared_ptr; not doing the nil check lead to AVs.\n\nIn reply to: 86900578 \n. Maybe? Although, UIView's init calls initWithFrame, which is the designated initializer for UIView.  Regardless, I'd prefer to get this in before we make any more changes to UIView's init path (assuming this is functionally correct and isn't introducing any regressions).\n\nIn reply to: 87282018 \n. FWIW, we can cross dll boundaries with ComPtr - what issues do you see there?\n\nIn reply to: 87051815 \n. I'll move it up to UILabel.mm so we can set the name of the actual (potentially derived) class.\n\nIn reply to: 87285187 \n. actually, it's already handled in UIView.mm, so I'll delete it from here and also from UIButton.mm.\n\nIn reply to: 87285928 \n. > kWindowsDPI \nnit: should be c_windowsDPI, although why are we assuming 96 here? #Resolved\n. > kWindowsDPI \nlooks like we should query the system for the current DPI?\n. > float( \nnit: do we actually need to construct a float here?\n. +Yi, as he may be interested in this. #Resolved\n. if that's the case, can we please heavily comment as such, and also point to where we do handle DPI?\n\nIn reply to: 87294346 \n. we can also pull c_windowsDPI down here where it's used since it's not used anywhere else.\n\nIn reply to: 87295048 \n. do you expect to be passed null in any of these methods?  if not, we should remove the null checks and get a much easier to debug AV. #Resolved\n. if the above call succeeds, we shouldn't need to also check for null #Resolved\n. > 25 \nstealthing in a fix for poorly-rendered UITextFields in this view of the app, as 20 is not high enough to properly-render a Xaml textbox (it works, but it looks terrible and is vertically truncated). #Resolved\n. No, they're stored in StrongIds (our version of a shared_ptr for ObjC types).\n\nIn reply to: 87525809 \n. > (NSString*) \nnit: are these casts necessary? #Resolved\n. Why bother mentioning this if it's the same thing that happens on the reference platform? #Resolved\n. > wasDataPackageView \nnit: wasDataPackageView is a confusing name (it sounds like a bool).  maybe just call it dataPackageView? #Resolved\n. > :(WADDataPackageView*)dataPackageView  \nwhy take this as an arg rather than taking no args and just calling _getClipboardContent here? #Resolved\n. nevermind - i see that you use the dataPackageView before calling this method\n\nIn reply to: 87640217 \n. > id ret = [NSMutableDictionary dictionary]; \nnit: seems a bit wasteful to allocate something we may never use. #Resolved\n. you could alloc and set within each if, then just check for non-null in the final 'if' (which would also be cheaper than checking [ret count])\n\nIn reply to: 87640888 \n. do you know if the reference platform returns nil for items if nothing is found, or if it returns an empty array as you're doing here? #Resolved\n. > TraceWarning(TAG, L\"Only general pasteboard supported\"); \nnit: wouldn't UNIMPLEMENTED_WITH_MSG be better here? #Resolved\n. > TraceWarning(TAG, L\"Only support first item in items, ignoring the rest\"); \nsame here re: UNIMPLEMENTED_WITH_MSG #Resolved\n. nit: you should just grab the count once and use it in both places #Resolved\n. > WADDataPackage* dataPackage = [[WADDataPackage make] autorelease]; \nmaybe use a StrongId to avoid the need for autorelease on this guy? #Resolved\n. how would you do that? StrongId*>?\n\nIn reply to: 87641964 \n. UNIMPLEMENTED_WITH_MSG #Resolved\n. > TraceWarning \nUNIMPLEMENTED_WITH_MSG #Resolved\n. > if (!data && !pasteboardType) { \nwhaat? you only do this if you don't have any data and you don't have a type? #Resolved\n. please add comments, too...\n\nIn reply to: 87643039 \n. > TraceWarning(TAG, L\"Type %@ is not supported yet\", type); \nUNIMPLEMENTED_WITH_MSG #Resolved\n. > autorelease \nnit: lots of autoreleases where StrongIds would sufice #Resolved\n. >    TraceWarning(TAG, L\"Only general pasteboard supported\"); \nUNIMPLEMENTED_WITH_MSG #Resolved\n. ...in several more spots below\n\nIn reply to: 87644010 \n. > DataPackage \nnit: should be camelCase #Resolved\n. nit: actually, shouldn't this be: setString:(NSString)stringData onDataPackage:(WADDataPackage_)dataPackage\n\nIn reply to: 87644537 \n. > Canvas^ rootCanvas = safe_cast(GetTemplateChild(L\"rootCanvas\")); \nwe should probably cache this guy just like we do the others (in OnApplyTemplate)\n. > contentCanvas \ninteresting; do we need both canvases or can we just collapse to a single contentCanvas?\n. interesting; i was thinking custom-rendered content would go in front of the Xaml-rendered content -- wouldn't you expect drawRect to draw above the Xaml contents? #Resolved\n. thanks\n #Resolved\n. probably worth a comment about how this works - we're using the button's contents to render its background.  i'm still not positive that we want the contents to be layered behind the xaml-rendered contents though.\n. >   CGSize imageSize = self.currentImage ? [self.currentImage size] : CGSizeZero; \nprobably worth adding a comment?  isn't a zero-init CGSize the same as CGSizeZero?\n. I don't understand the fix then?  You're setting it to the size if currentImage is set, else zero.  What was happening before?\n. Looks good - thanks!\n. nit: would be much cleaner to just return items early here if supported types == 0 #Resolved\n. sorry - i forgot to mention that I'm pretty sure you need to do a two-line init for this so you don't double addref (make inits the object, then the assignment adds an additional reference).  You (unfortunately) need to:\nStrongId dataPackage;\ndataPackage.assign([WADDataPackage make]);\nyou can step into the debugger to confirm, but I'm pretty sure that's what's needed here (and anywhere else you're assigning to a newly-alloc'd object) #Resolved\n. you could also ping Dustin to confirm\n\nIn reply to: 87678935 \n. after thinking about this a bit more, I think this makes sense.  we draw the button's contents behind its subviews (including its pre-canned label and image).\n\nIn reply to: 87646260 \n. any thoughts on this? it definitely seems like we can consolidate this to a single canvas.\n\nIn reply to: 87646076 \n. contents behind pre-canned subviews do make sense, but this should still get a comment\n\nIn reply to: 87647058 \n. The content Image should go into the sublayer canvas, at the front, just like we do for Layer.\n. switched back to original implementation here\n\nIn reply to: 87917684 \n. note: still doesn't seem to catch all cases; I think we need to do some cleanup when animations are stopped.  i'll follow up further tomorrow. #Resolved\n. If not, we should make sure it does.\n. woah - thanks!\n\nIn reply to: 88101998 \n. can you please add some comments to lightly document what this is used for? #Resolved\n. > IInspectable* \nnit: can we return a ComPtr here? #Resolved\n. Can we move this over to XamlCompositor.h/.cpp, and into the XamlCompositor namespace? #Resolved\n. nit: we'll probably hide the popup before the animation completes.  should we consider adding a custom completion block that gets called when the animation completes, which hides the popup and also calls the completion that was passed into this function? #Resolved\n. can you add a comment as to why this is necessary? #Resolved\n. nit: a comment here would be nice, too #Resolved\n. > _UIPopupViewController __weak* \nnit: __weak _UIPopupViewController* ? #Resolved\n. > id \nnit: UIElement? #Resolved\n. err WUXCUIElement\n\nIn reply to: 88145427 \n. nit: I know I pushed for this change, but now I'm wondering if we want a transparent background to support ViewControllers animating in/out?  We can probably worry about this when/if it becomes an issue, but it's up to you. #WontFix\n. > float scale \nwork in progress; still testing #Closed\n. >  \nnit: please convert tabs to spaces. Why was this causing a crash?. ...although I see that it's now a StrongId and therefore assignment to nil is unnecessary.\n\nIn reply to: 89896831 . >[self retain]; \nPerhaps cleaner to just do:\nStrongId strongSelf = self; \n...so we don't have to manually call retain/release.. >dispatch_block_t \nCan we use a StrongId here, too?. >_popoverPresentationController->_managesPresentation \nit's unfortunate that we have to reach into _popoverPresentationController's internal state in so many places.  Is there any way to further encapsulate this block of logic?  Most of it seems like it should be handled by the UIPopoverPresentationController.. >[self release]; \nwow - that's kind of odd.  you'd think that the superlayer would be holding the reference....? #WontFix. > BOOL realPopoverPresented = [[curController popoverPresentationController] _isManagingPresentation]; \nsome comments around this logic would be helpful. Thanks for simplifying this; it seems quite a bit cleaner.  Can you elaborate on why we need to support non-tablet scenarios in WinObjC though?  Would this be a spot where we could simplify the implementation by always showing popups (even on phone)?\n\nIn reply to: 90111314 . This sounds great, @ehren.  Can you please file an issue/suggestion tracking the simplification to always show a popup (in addition to the rest of the issues you've been hitting)?  Thanks!\n\nIn reply to: 90317212 . >inspetableTitle \nnit: typo #Resolved. >nil \nnit: should be nullptr for all of these; you're assigning to a ComPtr.   #Resolved. >   if (image) { \nnit: worth adding the same comment here as you did in the other two portions of the fix? #Resolved. going to leave as-is for now; not new code. #Resolved. Agreed; it's an additional 'fix' for the app launch timeouts.  Raj had intended to do this with a previous change, but it didn't push all work off of the initial activation.  I agree that we need to test adequately. #Pending. can we just get rid of this now? #Resolved. nit: can just be TEST_CLASS(NSBundleTests) - no need for begin/end since we don't add any class-specific test metadata here. #WontFix. ...in several files...\n\nIn reply to: 92248298 . >ASSERT_TRUE \ncan we switch over to the TAEF macros now? #Resolved. >rameworkHelper::RunOnUIThread \nshould we delete this and switch to TAEF's API (https://osgwiki.com/wiki/TAEF_RunAs_UAP#Native_API)? Maybe just track as a separate issue? #WontFix. >index_sequence \nnit: we should probably stick to TAEF's coding conventions for all of these (all structs would be PascalCase #Resolved. >&TAEF_TestClassType::methodName \nwouldn't this work for TAEF, too?  Can/should we - instead of forking these entire macros - only fork the portions that need to be different? #Resolved. >TAEF_TERMINATOR \nprobably need to keep this around to support non-inline test markup #Resolved. >L\"Name\", TAEF__WFUNCTION__}, \\ \ndo we need to also fix this up for method metadata? #Resolved. This caps left/right/top/bottom portions of the NineGrid to not exceed the size of the center - otherwise the Xaml Image won't render at all.\n\nIn reply to: 92279685 . I think I prefer this approach.  This is the only place we have to 'undo' the scale, whereas the contentSize is used in more places and it was more convenient to divide the scale before setting the contentSize.  For example, the _ApplyContentGravity function would be a bit messier.  Thoughts?\n\nIn reply to: 92278738 . I think the difficulty in debugging this without the change is worth the extra boxing cost (I didn't notice any perf issues with the change).  If this ends up being a hot path, we can revisit though.. doh - let me fix this up. This only works when we load the view; what happens after we navigate in the WebView?  Don't we want to update our buttons as we navigate around? #Resolved. >(void) \nplease remove #Resolved. in all places\n\nIn reply to: 94668735 . also - if RunOnUIThread returns an HRESULT, we should return SUCCEEDED(FrameworkHelper::RunOnUIThread(...\n\nIn reply to: 94668773 . >ASSERT_TRUE_MSG(signaled || [condi \nCan you explain why we need the 'signaled' variable?   #Closed. Ah, right.  I think Brian already had to go fix up a bunch of other tests regarding this same issue.  Can we use a Win32 or C++ construct for this?  That's a lot of code for what should be a simple wait.\n\nIn reply to: 94687381 . >_prompt == prompt \ndon't we want to do a string comparison here?  in which case, wouldn't it also work for the check against an empty string? #Resolved. [_prompt isEqualToString:prompt] ?\n\nIn reply to: 94880288 . >prompt; \ndon't we need to copy? #Resolved. >self-> \nnit: probably don't need the 'self' on these? #Resolved. >  [self setNeedsDisplay]; \nnot new code, but since we assign the text in layoutSubviews, shouldn't this be setNeedsLayout? #Resolved. > if (![_textBox.text isEqualToString:_text]) { \nIt seems like the problem is due to us calling setText in the textchanged handler.  If we just apply the Xaml controls' templates, can we get rid of all of these cached values?  That would set us up for an easier transition to a Xaml control implementation, too. #Resolved. >subivew \nnit: Typo #Resolved. nit: since half of these are removed/handled already in prepareForReuse, should we just do an explicit check for the remaining few in the for loop? #Resolved. we should confirm whether or not we want to do this for subclasses of UITableViewCell #Resolved. we should also check how this works for subclasses on the reference platform\n\nIn reply to: 94888445 . Yi agrees; we discussed offline :) #Resolved. >equlal \nnit: typo #Resolved. > _prompt = [prompt copy]; \nhow will this get freed? #Resolved. IIRC copy will return an object with a retain count of 1, so this similar to assigning a StrongId = [[NSString alloc] init] (which ends up bumping the retain count to 2), thus still leaking the pointer.  I'd confirm with Dustin or step through the debugger, but I think you want to .attach here to avoid the extra refcount bump. #Resolved. actually need to just remove the comment; CT already pulls in UIKit in a few other spots\n\nIn reply to: 94999743 . going to scrub my other 'todo file bug' comments too, before filing bugs.\n\nIn reply to: 95001484 . thanks; surprising that it compiled...\n\nIn reply to: 95002606 . >  priv->gestures = gestures; \nyikes - should be .attach now #ByDesign. that is the warning - you can look it up online.  i filed a bug: https://github.com/Microsoft/WinObjC/issues/1645\n\nIn reply to: 95002863 . looks like, thanks!\n\nIn reply to: 95006851 . yes, with a warning\n\nIn reply to: 95008850 . even better; thanks!\n\nIn reply to: 95006609 . stringByEvaluatingJavaScriptFromString isn't async though.\n\nIn reply to: 95190774 . >bserveKeyPath:@\"fractionCompleted\" \nworth adding an 'indeterminate' observer too?. >[self presentedViewController] \nnit: priv->_presentedViewController would avoid a message send. although this file does a lot of both, so feel free to disregard.\n\nIn reply to: 95265157 . is now a good time to delete the non-tablet version of this codepath?  do any of your apps rely on it?. does this mean it's tablet mode? or is this the non-tablet path?. do you have a proposed fix?  would it work to move this into the cleanupCompletion, after the inner completion is called?. >curView \nnit: can we call this presentedView for clarity?. ok, sounds good.\n\nIn reply to: 95274680 . >          [control applyTemplate]; \nCan you file a bug to scrub UIButton's use of applyTemplate? #Resolved. @tadam-msft, should we add some UITextFiled tests that set/retrieve some of these values? or are we still waiting to finalize a pattern?  I think the pattern's relatively clear at this point.. This is hitting a build break;\nD:\\Build\\Agent1_work\\2\\s\\Frameworks\\UIKit\\UIWebView.mm(251,12): error : use of undeclared identifier 'StubReturn' [D:\\Build\\Agent1_work\\2\\s\\build\\UIKit\\lib\\UIKitLib.vcxproj]\nCan you please add #include \"StubReturn.h\" just below the #include \"Starboard.h\"?. Thanks, no problem.  I'm not sure why it didn't fail for you; it failed on both debug and release CI builds.\n\nIn reply to: 95416396 . shouldn't this be foreground? #Resolved. nit: this could be pulled out of the if/else cases to avoid code duplication #Resolved. shouldn't this be foreground? #Resolved. nit: same here regarding pulling this out to avoid code duplication #Resolved. @yiyang-msft; does XamlCatalog let you toggle between secure/unsecure?\n\nIn reply to: 95400508 . nit: else, should we log something like UNIMPLEMENTED_WITH_MSG(\"SecureTextEntry mode does not support UITextAlignment\")? #Resolved. >iew subView = (UIView )[ \nclang-format? #Resolved. > if ([subView superview]) { \nnit: do you really need this check? #Resolved. nit: should we pull this out into a constant? #Resolved. >1 \nnit: use constants? #Resolved. >       if ([subView superview]) { \nnit: probably don't need this check?  #Resolved. >regardless of tablet mode. \nI thought you were removing support for non-tablet mode?  . Don't we need to copy this block so it's guaranteed to exist beyond the lifetime of - (void)presentViewController:(UIViewController*)controller animated:(BOOL)animated completion:(void (^)(void))completion ?. right - the weakSelf pattern is to avoid cycles - probably ok to leave as is.  i hadn't realized that block capture copied block variables - thanks for clarifiying.  i'll keep my eye out for your last change, but that means i'll have to kick off another CI build - not a problem though.\n\nIn reply to: 95633496 . >Workaround \nnit; I would rephrase 'workaround' as 'WinObjC extension to handle...'. it was intentionally added.  it's a compiler warning (as error) now\n\nIn reply to: 95707173 . It should be have the same as clear, but good idea.\n\nIn reply to: 95709193 . >4 \nnit: can we pull '4' out into a constant that's used in all places? #Pending. >ApplyLineBreakModeOnTextBlock \nnot related to change, we should put these all into a XamlUtilities:: namespace so it's more clear at the call site.  XamlUtilities::ApplyLineBreakModeOnTextBlock would be more clear. #Resolved. nit: a small comment on this would be helpful #Resolved. >0 \nany tests for numberOfLines > 1? #Resolved. >numnberOfLines \nnit: typo across this file #Resolved. They don't return success failure.\n\nIn reply to: 96534816 . That doesn't go down the same codepath.\n\nIn reply to: 96533713 . but i guess i could just so the test code is cleaner?\n\nIn reply to: 96535163 . hope we never need these?. ok; can you file a bug to terry about this though?\n\nIn reply to: 96535041 . it does seem like they should be separate tests.  does '0' get any special handling vs. a specific line value such as '3'?\n\nIn reply to: 96539835 . nice catch! maybe we don't need the extra function after all.\n\nIn reply to: 96552727 . oh, I think you're right - rendering won't work without this.  must have been a bad copy/paste.  thanks!\n\nIn reply to: 96553069 . it means we may be a bit too precise on our drag in/out (considering a slack value for a touch point vs. a single mouse point), but I think this is fine for now\n\nIn reply to: 96942924 . I don't think so - only Button knows whether or not it needs to redisplay/relayout.\n\nIn reply to: 96943884 . great idea; let me give that a shot\n\nIn reply to: 96945443 . >// TODO:  \nFile a bug or is this tracked by a larger 'Finish UITableView' work item? #Resolved. Seems like fixing bugs here would be preferable at this point.\n\nIn reply to: 97385306 . >_adjustTextLayerSize \nnit: This name is misleading.   How about _applyXamlProperties or _updateXamlElement? #Resolved. if you do rename it, please update #1497 which tracks getting rid of this method altogether\n\nIn reply to: 97386064 . >_text != nil \nnit: what about empty strings?  can we just return 0 for them too? #Resolved. Can you please add a comment here?   #Resolved. >_text == nil \nnit: again; what about empty strings?  we don't want to return early for them?  #Resolved. >UILineBreakModeClip \nwhy are these different than our currently-set linebreak modes? #Pending. >_adjustFontSizeToFit \nCan we add some tests for this? #Resolved. different frames, different starting/min font sizes, etc.\n\nIn reply to: 97400039 . Also, if you refactored this method a bit (to take starting/min font sizes and a frame as function arguments, you could return the final font to a calling function that applies it to _font and does the relayout.  At which point you could write a bunch of self-contained UTs against this method.\n\nIn reply to: 97400127 . >_font \nI'd much prefer a local UIFont to use in the function that is only applied to _font either at the end of this function, or is returned as the result of this function and used elsewhere to apply to _font. #Resolved. > curFontSize = 2.0 * maxFitFontSize; \nCurious why not start at std::max(curFontSize, maxFitFontSize), vs. starting with 2x maxFitFontSize? #Resolved. > - controls \nnit: The distinction between this and the above UIButton controller isn't clear.  Can we use a more descriptive name? #Resolved. >Bkgnd \nnit: Why abbreviate? #Resolved. this pattern isn't going to work very well with more than one text field - i think we should track individual text fields' text content.. > - normal state \nAre you planning to couple this textbox with another combo or set of UISegments for the various possible states? #Closed. sounds fine, but curious about the reordering of calls?  that seems like unnecessary churn, or was it required for some reason?\n\nIn reply to: 97384555 . why not capture a weak reference in the block?\n\nIn reply to: 97400288 . that assumes you only want it to fire one time.  I don't think that's the pattern we're going for.\n\nIn reply to: 97400178 . >typedef void  \nnit: our CC recommends that we \"Prefer alias Declarations to typedefs\", which would be something like: using XamlEventBlock = void (^)(WXDependencyObject, WXDependencyProperty); #Resolved. just adding a second ctor that takes a timeout would be preferable.\n\nIn reply to: 97387022 . >class ViewControllerHelper  \ncan you add comments above this?  what's it for? #Resolved. also, it looks like a more suitable name may be AutoPresentViewController, or ViewControllerPresenter.\n\nIn reply to: 97411307 . >ViewControllerHelper(UIViewController* viewController) \nwould it make more sense to take an optional second argument that is the VC on which to present?  The default value could be GetCurrentWindow().rootViewController. #WontFix. We should move the implementations of these into the .mm file. #Resolved. can we put all of these into a 'UXTestApi' (or similar) namespace for clarity? #Resolved. We want EXPECT_EQ calls for these, too. #Closed. nit: it seems like these should go up to where you grabbed solidBrush #Closed. ah - you're comparing the UIButton's to the backing Xaml element.  We also want to confirm that they're the expected values though, don't we?\n\nIn reply to: 97414376 . >UIColor* color =  \nif you stored this on the VC, you could grab it from the test and validate that the colors set on the button/xaml object were correct. #Resolved. same here; we should also make sure the text == @\"Functional testing\" #Resolved. >autorelease \nnit: I think it would be nicer to avoid the autorelease pool for all of these, so we have more deterministic cleanup.   #Resolved. why won't fix this?\n\nIn reply to: 97408192 . We found that Xaml doesn't either - at least it wasn't getting fired in our code.  That being said, we're not prevented from following this pattern (by observing changes to the label's text property).\n\nIn reply to: 97438933 . I misunderstood your comment; yes, of course we need to hold it outside the UI thread so it continues to remain registered for the duration of the test.. Again, misunderstood your comment.   #Closed. Autolayout testing #Resolved. If this becomes a hot path, we can pull in WRL.  \n\nIn reply to: 97687732 . this does seem like something we'll want to use across all of our tests. good question; i'll give it a shot\n\nIn reply to: 97843932 . would prefer local use of StrongId or switching the file to ARC. >IGridLayoutSection.mm\" \nMind adding #import \"AssertARCEnabled.h\" to the tops of these files?  It ensures we never accidentally turn ARC back off.... >  if (self = [super init]) { \nthanks for fixing this, too #Resolved. >_findMaxFontSizeToFit \nare we adding tests for this in a subsequent pass/set of changes? #Pending. I meant automated tests.  this is a perfect candidate for some unit tests at this point.\n\nIn reply to: 98056283 . +1, also auto would be nice\n\nIn reply to: 98142566 . >linked_ptr \nnit: linked_ptr& #Resolved. this shouldn't be resurrected; we now call UIApplicationInitialize in FunctionalTestHelpers::FunctionalTestSetupUIApplication() #Resolved. nit: anywhere we're not adding class-level metadata, we can just use TEST_CLASS(ActivatedAppReceivesToastNotificationTests) (no need for begin/end) #WontFix. This should return FunctionalTestCleanupUIApplication #Resolved. I haven't looked through how we're using TAEF logging, but Log::File(L\"path to file\") would result in the image being saved under TAEF's current output directory.  \nFrom the TAEF docs;\nLog:: File(const wchar_t* pszFileName) \nLog a test file to be saved. Files are saved to a folder named \"WexLogFileOutput\". This folder will be in the folder specified by the WTTRunWorkingDir environment variable if that variable exists. When using Wex.Logger outside of TAEF and the WTTRunWorkingDir environment variable does not exist, the WexLogFileOutput folder will be in the current directory. When using Wex.Logger along with TAEF and the WTTRunWorkingDir environment variable does not exist, the WexLogFileOutput folder will be in the TAEF output folder.\nIf you just want to log the path to the file, you could Log::Property(const wchar_t pszName, const wchar_t pszValue).  Of course, we'll need wttlog.dll to generate test logs.\nFrom the TAEF docs;\nLog::Property(const wchar_t pszName, const wchar_t pszValue) \nLog a name/value property pair. The value can be in xml format.\n\nIn reply to: 98139951 . we'll probably want a Reset, too.   #Resolved. nit: I'd probably call this 'Set' to align with 'Reset'\n\nIn reply to: 98240403 . >UXEvent \nWe'll want an autoreset mode too.  How about we make the ctor private and do:\npublic:\nstatic std::shared_ptr UXEvent::CreateManual(); {\n    return std::make_shared(false);\n}\nstatic  std::shared_ptr UXEvent::CreateAuto() {\n    return std::make_shared(true);\n}\n..\nprivate:\nexplicit UXEvent(bool autoReset);\n #Resolved. hmm - i think Wait's more clear and aligns with most other event types.  We could return an enum vs a bool though for clarity, but true for succeeded, false for timed out also seems pretty clear?\n\nIn reply to: 98267209 . >timedOut \nwe should return true if the wait succeeded, not if it timed out. #Resolved. yes, otherwise this is just plain confusing. thanks!\n\nIn reply to: 98278040 . No.  UIView doesn't have ARC enabled, so you can't use __weak.\n\nIn reply to: 98295161 . ? so we can set the correct variable to signaled. \n\nIn reply to: 98299381 . Yes, that was the plan.  the VC goes out of scope, etc.  we could add our own autoreleasepool but the test was passing without it.\n\nIn reply to: 98299778 . I'm fine waiting for this to happen before I wait.\n\nIn reply to: 98299832 . sweet; that will be much cleaner\n\nIn reply to: 98299508 . I suppose an out param would make it a bit more difficult to leak.\n\nIn reply to: 98310272 . I'm not positive this is the best solution, but I wanted to get it out for review.  I think spot-fixing apps should be the last resort solution to any problem.  A proper fix from the Xaml team would be ideal, but that would require everyone to be running/testing on latest RS2 builds.  Also, if we do move back to on-thread scrolling, this issue would go away.  Let's synch up in person with Terry after we hear back from the Xaml team.\n\nIn reply to: 98736679 . probably worth commenting that we're vertically centering this. vertically?. double sign off!\n\nIn reply to: 98794256 . >( \n\n( \n\nnit: missing spaces - 'if (', etc. #Resolved. needed? probably just don't bother setting it at all? #Resolved. >\"CAShapeLayer - not supported\"]; \nwe do support CAShapeLayerse, don't we? #Resolved. Let's just delete this and all associated baggage. #WontFix. Let's just delete this and all associated baggage. #WontFix. that does seem a bit odd\n\nIn reply to: 99448184 . ?? #Resolved. > // if minimumScaleFactor is used, it should override _minimumFontSize which is deprecated \ndoes the minimumFontSize property return a different value in this case? #Resolved. @tadam-msft, do we have a work item tracking the additiona of all missing UIButton xib2nib conversions?. maybe could use a comment.  a subtle change that avoids inserting empty values in to the map (which wastes space) when retrieving empty values  #Resolved. >FAIL_FAST_MSG(\"Invalid nib format \nYikes; couldn't we just pick a sensible default and log a warning? #Resolved. >FAIL_FAST_IF_MSG(_adjustFontSize, \nsame here re:choosing a sensible default rather than tanking the process. #Resolved. >( \nnit: missing space. >overwritting \nnit: typo. >default \nnit defaulting. >(UIGestureRecognizerState) \nnit: no need to cast? #Resolved. >didRecognize = true; \nnit: no need for didRecognize variable; just return YES/NO? #Resolved. >= [NSMutableSet set]; \nseems wasteful to allocate this every time, even if it's not used.  maybe we should use a static that just gets reset as needed? #Resolved. >state != UIGestureRecognizerStatePossible && state != UIGestureRecognizerStateCancelle \nwhy just these two? what about UIGestureRecognizerStateFailed?   #Resolved. >curGesture.state != UIGestureRecognizerStatePossible && state != UIGestureRecognizerStateCancelled \nsame here - is UIGestureRecognizerStateFailed still 'active'? #Resolved. >e \nnit:typo #Resolved. >curGesture \nthis name conflicts with the outer for loop; maybe call the outer one 'currentGesture' and the inner one 'otherGesture'? #Resolved. nit: Unnecessary variable #Resolved. >currentResponds == N \nnit: much prefer !currentResponds and !activeResponds #Resolved. >currentResponds == NO \nreally? If they don't respond we default to not simultaneous?  is that the expected behavior? if so, that's probably worth calling out as a comment #Resolved. also UIGestureRecognizerStateEnded?\n\nIn reply to: 99709909 . thanks; unintentional modification.\n\nIn reply to: 99915207 . great point; an oversight for sure.\n\nIn reply to: 99914391 . looks like this is the only one i missed\n\nIn reply to: 99922832 . probably not worth worrying about right now; this is existing code moved down from above to avoid two checks.  i suppose we could just keep the distinct field checks instead, but the memcmp seems fine to me.\n\nIn reply to: 99915102 . this just follows precedence from elsewhere.  it's unclear to me why this isn't safe?\n\nIn reply to: 99914946 . i figured you'd just end up with a 0 size, so you'd get ret's height.. >RunSynchronouslyOnMainThread \nMaybe we should be using CoreDispatcher APIs rather than NSThread, etc for this?  How can you be positive that FunctionalTestSetupUIApplication is getting called from the UI thread? #Resolved. >    UIApplicationInitializeFunctionalTest(nullptr, St \nAh! in that case, please add a detailed comment so we don't do this again. maybe, plus you are looking at a label proxy right?  the layout code is different for the proxies.\n\nIn reply to: 100634412 . the image proxy still exists, so this probably won't help them\n\nIn reply to: 100639129 . You sure this is needed? It looks like you're compiling the file directly into FunctionalTests, so I don't understand why we need to export it? #Resolved. ah - i see you have two files with the same name.  maybe this export is needed after all..\n\nIn reply to: 100644840 . >// Copyright (c) 2016 Microsoft Corporation.  \nWe should rename this file to TestableUIGestureCoordinator.mm #Resolved. actually - it should be UIGestureCoordinatorTests.mm\n\nIn reply to: 100645468 . >true \nfalse? #Resolved. yeah, bummer. it actually worked fine with WoCCatalog and XamlCatalog; must have something to do with our import flow.  \n\nIn reply to: 100646740 . it seems like we could have also achieved this by creating a View, attaching a bunch of GestureRecognizers to it, then creating a Touch with that View.  Did you investigate that option? #Resolved. it would remove the fork here and test the below production code...\n\nIn reply to: 100647623 . What do you mean?  I don't think we should do a string comparison if that's what you're asking?\n\nIn reply to: 100649772 . That makes it sound as though we shouldn't be taking the text size into account at all then.  I think in this case 'the view itself' may mean the button and its internal content/views.\n\nIn reply to: 100653027 . Ah - self.currentTitle gives you the text for the current state.  \n\nIn reply to: 100653633 . > // TODO: we should revisit. \nagreed; can we file a bug to fix up the tap logic? #Resolved. Nothing - I deleted the empty private function we were calling.. He's not deleting this now, is he?  I figure we'll delete this when we add tests for the border.. yes. agreed; they are there for clarity.. >// now 0 \n0? Are you sure you're looking at the correct element? #Pending. contentCanvas should always be the same size as the Button.. From Button.Xaml:\n. oops - will delete. > = nil [](start = 57, length = 6)\n\nnit: unnecessary assignment to nil . >FindXamlChild(xamlElement, @\"LayerContent\"); [](start = 39, length = 44)\n\nwe need to retain because this returns an autoreleased object??. >  // TODO: Investigate why this value deviates from UIButtonType [](start = 11, length = 64)\n\nis it trying to map to system?  seems like an odd place to do it... #Closed. i really hate all of the magic constants in this codebase :'(\n\n---\nIn reply to: [102358850](https://github.com/Microsoft/WinObjC/pull/2018#discussion_r102358850) [](ancestors = 102358850). not sure, and i think the safest approach is to stick to functional equivalence just to be safe\n\n---\nIn reply to: [103035505](https://github.com/Microsoft/WinObjC/pull/2094#discussion_r103035505) [](ancestors = 103035505). i know, but if we don't leave the explicit nil check, someone may forget next time they come through here?\n\n---\nIn reply to: [103035907](https://github.com/Microsoft/WinObjC/pull/2094#discussion_r103035907) [](ancestors = 103035907). i'm saying, 'i don't know'; do we have tests to validate this behavior?  I just went through and kept the existing functionality.  The other functions check the length, and this one doesn't, because that's how it worked previously.\n\n---\nIn reply to: [103035705](https://github.com/Microsoft/WinObjC/pull/2094#discussion_r103035705) [](ancestors = 103035705,103035505). >System [](start = 91, length = 6)\n\nshould we include rounded here to make sure it defaults to system?. >_imageDestructionListeners [](start = 47, length = 26)\n\nshould this be 'g_' ?. do we need a lock around this?  also, kind of odd to have an instance free all static listeners....are you sure this is working correctly?. :o you read my mind\n\n---\nIn reply to: [103062474](https://github.com/Microsoft/WinObjC/pull/2099#discussion_r103062474) [](ancestors = 103062474). ok, then  's_' for clarity\n\n---\nIn reply to: [103062541](https://github.com/Microsoft/WinObjC/pull/2099#discussion_r103062541) [](ancestors = 103062541). >  // Strip off curly braces and use the delimiter to separate components [](start = 6, length = 72)\n\nHow does the user know what format to use here?  Tons of comments would be helpful. #Resolved. else show an error or something? #Resolved. nice cleanup #Resolved. nit: should we log UNIMPLEMENTED_WITH_MSG if any unsupported values are used here? #WontFix. > = nil [](start = 33, length = 6)\n\nsuper-nit: unnecessary assignment to nil #Resolved. >// for fixed number of lines, use hinted size as contraints for height [](start = 12, length = 70)\n\nit doesn't look like we're doing this anymore #Resolved. is there any way we can avoid this hit until our first layout pass?  It seems like this call is unnecessary? #Resolved. Hopefully, and we have an issue tracking that: [https://github.com/Microsoft/WinObjC/issues/1497](https://github.com/Microsoft/WinObjC/issues/1497)\n\n---\nIn reply to: [105030923](https://github.com/Microsoft/WinObjC/pull/2178#discussion_r105030923) [](ancestors = 105030923). Maybe we can fix #1497 with this change?\n\n---\nIn reply to: [105066411](https://github.com/Microsoft/WinObjC/pull/2178#discussion_r105066411) [](ancestors = 105066411,105030923). >_updateXamlElementWithAdjustedFont [](start = 8, length = 34)\n\nMaybe we can fix #1497 with this change? #Resolved. should we just set this on the UIKit.Label by default? #Resolved. Weird - highlighted labels always use a transparent background? #Pending. >_textColor [](start = 120, length = 10)\n\n_highlightedTextColor? #Resolved. no, I mean set it in the .xaml file on the TextBlock, so we don't have to call across here.\n\n---\nIn reply to: [105782303](https://github.com/Microsoft/WinObjC/pull/2178#discussion_r105782303) [](ancestors = 105782303,105781932). maybe in a subsequent pass?\n\n---\nIn reply to: [105784192](https://github.com/Microsoft/WinObjC/pull/2178#discussion_r105784192) [](ancestors = 105784192,105782303,105781932). nit: we have a few different paths for choosing the correct foreground text color; should we pull it out into a shared piece of code?. >label [](start = 71, length = 5)\n\nnit: ScrollView #Resolved. you shouldn't need to do this anymore, since you're implementing ILayer #Resolved. >scrollViewer [](start = 56, length = 12)\n\nPascalCase #Resolved. >ScrollViewer [](start = 26, length = 12)\n\nshould be camelCase.  Same with ContentCanvas below. #Resolved. >ScrollViewer [](start = 3, length = 12)\n\nshould be ScrollView, right? #Resolved. >CreateScrollViewer [](start = 9, length = 18)\n\nHere, too - you're creating a ScrollView #Resolved. this should never be the case; xamlElement should never be a vanilla Xaml ScrollViewer #Resolved. we may want to lazy-create this like we do elsewhere (button, etc.), since it's probably not used very frequently #Resolved. are the casts to ILayer^ working in LayerProxy.cpp and LayerCoordinator.cpp?  They should be...\n\n---\nIn reply to: [106706602](https://github.com/Microsoft/WinObjC/pull/2257#discussion_r106706602) [](ancestors = 106706602,106705678). check: _SubLayerPanelFromInspectable in LayerProxy.cpp and LayerCoordinator::_GetContentImage in LayerCoordinator.cpp\n\n---\nIn reply to: [106707954](https://github.com/Microsoft/WinObjC/pull/2257#discussion_r106707954) [](ancestors = 106707954,106706602,106705678). Awesome cleanup in this file! #Resolved. >XamlControls::GetFrameworkElementSublayerCanvasProperty(scrollViewGrid); [](start = 21, length = 72)\n\nthis is going down the old path (using attached properties).  you should instead just ask your control for the content canvas as you do for the scrollviewer (you'll need to add a new function like XamlControls::GetScrollViewer) #Resolved. Well, technically the Grid *is* the ScrollView; we just can't project our ScrollView type to ObjC.  Either sounds fine to me though. #Resolved. alternatively, you could return a FrameworkElement since you don't need to know/care that the root element is a grid.\n\n---\nIn reply to: [106714861](https://github.com/Microsoft/WinObjC/pull/2257#discussion_r106714861) [](ancestors = 106714861,106713268,106712808). This is still more expensive than just adding the Image the first time it's requrested (like we do in Button and Label).\n\n---\nIn reply to: [106707117](https://github.com/Microsoft/WinObjC/pull/2257#discussion_r106707117) [](ancestors = 106707117). nit: if we're splitting these out, we should probably call them ILayer.h/ILayer.cpp. Correct; this isn't needed.  We handle image loading on this side and trigger layout as needed.\n\n---\nIn reply to: [106746566](https://github.com/Microsoft/WinObjC/pull/2265#discussion_r106746566) [](ancestors = 106746566). Why didn't vsimporter 'do the right thing' here? #Resolved. ah, that's right - thanks for the clarification.\n\n---\nIn reply to: [107011503](https://github.com/Microsoft/WinObjC/pull/2278#discussion_r107011503) [](ancestors = 107011503). >Click to Expand [](start = 191, length = 15)\n\nnit: might make sense to make this look like a link; the 'click to expand' didn't really jump out at me at first. Apparently that's how the data is packaged; this is similar to code in UIView and elsewhere for unpacking data in the nib.\n\n---\nIn reply to: [107229478](https://github.com/Microsoft/WinObjC/pull/2269#discussion_r107229478) [](ancestors = 107229478). I don't know where this came from, but we weren't writing it out to the nib in Xib2Nib.  I almost left it in with a TODO, but felt that it was just cleaner to remove it.  \n\nAlso, passing these distinct priority values across as a CGSize is a bit...weird, so I'd be surprised if that's how it's done on the reference platform.\n\n---\nIn reply to: [107229813](https://github.com/Microsoft/WinObjC/pull/2269#discussion_r107229813) [](ancestors = 107229813). bold text would be a good start. a cast isn't necessary here....?\n\n---\nIn reply to: [107240874](https://github.com/Microsoft/WinObjC/pull/2269#discussion_r107240874) [](ancestors = 107240874). exactly :(\n\n---\nIn reply to: [107236214](https://github.com/Microsoft/WinObjC/pull/2269#discussion_r107236214) [](ancestors = 107236214). because that would result in us always setting the font twice for xib-loaded UIButtons (initWithNib starts with a call to _initUIButton).\n\n---\nIn reply to: [107235119](https://github.com/Microsoft/WinObjC/pull/2269#discussion_r107235119) [](ancestors = 107235119). extensive comments would be helpful. if fileCount > 1, should we log a warning?. >ms-appx/// [](start = 52, length = 10)\n\nweird - shouldn't this be ms-appx:/// ?. >ms-appx/// [](start = 64, length = 10)\n\nms-appx:/// ?. > first\" [](start = 76, length = 7)\n\nnit: ...first file found.\n\nsuper-nit: also maybe useful to log the file name found?. nit: a bit subtle to do this here. maybe could use a comment why you're setting it to 1.. hmm - font file names are PII? . good point; we shouldn't need this extra variable\n\n---\nIn reply to: [107766623](https://github.com/Microsoft/WinObjC/pull/2309#discussion_r107766623) [](ancestors = 107766623). the extra copy here is unfortunate; how about just alloc'ing an empty NSIndex path, then std::move(indexes) into the new object's _indexes vector?\n\n. >Message [](start = 60, length = 7)\n\nnit: should be '_message' #Resolved. do we really want to hard-code all of these values? #WontFix. ...these should all be bindings to properties on ShareSheet (same with the TextBlocks below).\n\n---\nIn reply to: [107995837](https://github.com/Microsoft/WinObjC/pull/2314#discussion_r107995837) [](ancestors = 107995837). >Preview [](start = 37, length = 7)\n\nnit: should be _preview #Resolved. >Height=\"100\" [](start = 16, length = 12)\n\ndo we need to hard-code this to 100? #ByDesign. >addLink [](start = 13, length = 7)\n\nnit: methods in C++/CX are typically PascalCase #Resolved. >ShareSheet_Post [](start = 13, length = 15)\n\nnit: just 'Post' and 'Cancel' would suffice for these names #Resolved. can you provide more details here?  do we plan to only ever support posting to facebook with 'all friends' privacy?  #Resolved. >_linkToShare != nullptr) [](start = 8, length = 24)\n\nnit: IsEmpty() would be better; it does work with nullptr Platform::Strings. #Resolved. might want to use a task-based continuation so exceptions thrown (if-any) can be handled on this thread (via task.get() inside the continuation). #WontFix. >Canvas [](start = 9, length = 6)\n\nsince you're dynamically inserting textblocks here, you probably want another StackPanel (else they'll all go to Canvas.Top=0 and Canvas.Left=0) #Resolved. nit: maybe more placeholder-ish comments then?\n\n---\nIn reply to: [107996694](https://github.com/Microsoft/WinObjC/pull/2314#discussion_r107996694) [](ancestors = 107996694,107996496). >reinterpret_cast [](start = 30, length = 16)\n\nsafe_cast(reinterpret_cast(image)) might be safer? #Resolved. >show [](start = 9, length = 4)\n\nnit: ShowAsync? #WontFix. >void [](start = 12, length = 4)\n\nthese should all be HRESULTs, right? #Resolved. >     _shareSheet = ref new ShareSheet(Platform::StringReference(token)); [](start = 3, length = 72)\n\nthese all should be protected by some form of exception boundary; maybe try/CATCH_RETURN from wil's result.h? #Resolved. sure; prob ok until we need to localize\n\n---\nIn reply to: [107997791](https://github.com/Microsoft/WinObjC/pull/2314#discussion_r107997791) [](ancestors = 107997791,107995907,107995837). so just one link/image max? what happens if more than one of either is added? #Resolved. >IUnknown [](start = 111, length = 8)\n\nwhy not IInspectable? #Resolved. ...out of curiosity...\n\n---\nIn reply to: [107999827](https://github.com/Microsoft/WinObjC/pull/2314#discussion_r107999827) [](ancestors = 107999827). > NSString* token = _getAccessToken(); [](start = 7, length = 37)\n\nif we get a nil token, should we bail/return nil? #Resolved. return actual success/failure? #Resolved. return actual success/failure? #Resolved. I'm not aware of any issues, and I didn't debug into the actual failure.  However, this change fixes the issue.  Perhaps we should send a repro to the Xaml team in case this is a bug in the platform.\n\n---\nIn reply to: [108000838](https://github.com/Microsoft/WinObjC/pull/2321#discussion_r108000838) [](ancestors = 108000838). >; [](start = 78, length = 1)\n\nnit: extra ';' #Resolved. > :  [](start = 59, length = 3)\n\nnit: extra spaces around ':' #Resolved. what about height? #Pending. should we do this for all test/sample apps?. nit: worth adding a comment about this? #Resolved. >        [](start = 0, length = 7)\n\nwhere's the starting <!-- ?. how much closer could it be? :)\n\n---\nIn reply to: [108989011](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108989011) [](ancestors = 108989011). > (void)popoverPresentationController; [](start = 7, length = 37)\n\nnit: might be a bit more clear to do an assignment to a local variable 'strongPopoverPresentationController', rather than this.. can you add a comment here so we know not to reorder it in the future?\n\n---\nIn reply to: [106151392](https://github.com/Microsoft/WinObjC/pull/2195#discussion_r106151392) [](ancestors = 106151392). 1) example?\n\n2) where is that?\n\n---\nIn reply to: [108993817](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108993817) [](ancestors = 108993817). the changes we made to WinObjC.Frameworks.targets?\n\n---\nIn reply to: [108993288](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108993288) [](ancestors = 108993288). No, there's no such scenario.  I don't understand what's wrong with this; we only want to grab .pri files that have associated .winmds.  If you have a better solution, please share it.\n\n---\nIn reply to: [108994152](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108994152) [](ancestors = 108994152). What's middleware's version of WinObjC.Frameworks.targets?\n\n---\nIn reply to: [108994710](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108994710) [](ancestors = 108994710,108994382,108993288). Right; this was for functional tests; i'll add a comment.\n\n---\nIn reply to: [108995251](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108995251) [](ancestors = 108995251). how do i test these changes? are CI builds sufficient?\n\n---\nIn reply to: [108995360](https://github.com/Microsoft/WinObjC/pull/2372#discussion_r108995360) [](ancestors = 108995360,108995058,108994710,108994382,108993288). >popoverPresent [](start = 25, length = 14)\n\nnit: should this be called 'presentCompletion' for clarity? #Resolved. I don't see this used anywhere; is it needed?  Also, we shouldn't be annotating internal/private methods.. sounds good - i'm about to pull your changes and try them out locally\n\n---\nIn reply to: [109035577](https://github.com/Microsoft/WinObjC/pull/2195#discussion_r109035577) [](ancestors = 109035577). >auto&& sender, auto&& e [](start = 54, length = 23)\n\n>auto&& sender, auto&& e [](start = 54, length = 23)\n\nwould prefer types on these...across a lot of these files.  our CCs say that we scope the use of auto to cases where declaring the type would be redundant. #Resolved. does this surface as a compile-time error, or as a linker error? #Resolved. >auto rawElement = reinterpret_cast(winrt::get_abi(xamlElement)); [](start = 4, length = 108)\n\n>auto rawElement = reinterpret_cast(winrt::get_abi(xamlElement)); [](start = 4, length = 108)\n\nwhy this vs. to_insp? #Resolved. Does silently failing align with the old pattern?  For example, did '_xamlElement = [WXFrameworkElement createWith:inspectable.Get()]; ' throw on failure, or return nullptr? #ByDesign. >_xamlElementInternal [](start = 46, length = 20)\n\n>_xamlElementInternal [](start = 46, length = 20)\n\nmaybe _winrtXamlElement for clarity? #Resolved. >try_as [](start = 46, length = 6)\n\nwould .as<> throw on failure?  if so, we can probably just do that and remove the FAIL_FAST below. no longer needed as of yesterday. a static_assert would fail at compile time; i think that would be preferable?\n\n---\nIn reply to: [109242330](https://github.com/Microsoft/WinObjC/pull/2382#discussion_r109242330) [](ancestors = 109242330,109241603). can you file a tracking bug and reference it here?\n\n---\nIn reply to: [109038960](https://github.com/Microsoft/WinObjC/pull/2382#discussion_r109038960) [](ancestors = 109038960). >try_as [](start = 47, length = 6)\n\nshould these be .as?. > = nullptr [](start = 37, length = 10)\n\nnit: is this necessary?. >self->_passwordBox.IsEnabled() [](start = 15, length = 30)\n\n>self->_passwordBox.IsEnabled() [](start = 15, length = 30)\n\nnit: static_cast(self->_passwordBox.IsEnabled())? #Resolved. > = nullptr [](start = 33, length = 10)\n\nnit: is this necessary? or does the default ctor init an object? #ByDesign. >xamlElement == nil [](start = 8, length = 18)\n\n>xamlElement == nil [](start = 8, length = 18)\n\nnit: why change these? #Resolved. yikes; i hadn't thought about the implications of this.  we'll need to do this in every one of our event handlers; maybe create a special class that takes a lambda, implements the same API as said lambda, and wraps it in an AutoReleasePool push/pop? #Resolved. This may also be a good time to move to @autoreleasepool or lower-level push/pop calls vs. allocating an NSAutoReleasePool every time.\n\n---\nIn reply to: [109247283](https://github.com/Microsoft/WinObjC/pull/2382#discussion_r109247283) [](ancestors = 109247283). that's a great point; can you please add a small comment that calls this out, and demonstrates how to rt_dynamic_cast to the desired projected type?\n\n---\nIn reply to: [109249693](https://github.com/Microsoft/WinObjC/pull/2382#discussion_r109249693) [](ancestors = 109249693). I was suggesting something like: UIPopoverPresentationController* blockCapture = popoverPresentationController;\n\n---\nIn reply to: [109064009](https://github.com/Microsoft/WinObjC/pull/2195#discussion_r109064009) [](ancestors = 109064009). although this is probably fine - i just kicked off a CI build\n\n---\nIn reply to: [109265389](https://github.com/Microsoft/WinObjC/pull/2195#discussion_r109265389) [](ancestors = 109265389,109064009). are there any of these that we can track on the Xaml element vs. also caching them here? #Resolved. >_secureModeLock = [NSRecursiveLock new]; [](start = 4, length = 40)\n\nwe don't need this anymore, do we? #Resolved. >_passwordBox.password = [text copy]; [](start = 8, length = 36)\n\nIt seems like this should move down into the control - we'll just set the Text and it can handle who to set it on (probably via data binding). these should use data binding to bind to text, etc. on the usercontrol.. >TB [](start = 20, length = 2)\n\nplease remove the abbreviations.  how about _textBox and _passwordBox? #Resolved. >TextEntryValue [](start = 23, length = 14)\n\nnit: SetTextFieldSecureMode? #WontFix. >SetSecureTextEntryValue [](start = 16, length = 23)\n\nnit: SetSecureTextMode #WontFix. nit: it still seems like explicitly showing/hiding would be much simpler (and likely quite a bit cheaper too). I don't think we should need these here.  Can't we push all of this into the Xaml control implementation?. FWIW, this should be fixed now; x:bind should work.\n\n---\nIn reply to: [108286016](https://github.com/Microsoft/WinObjC/pull/2314#discussion_r108286016) [](ancestors = 108286016,107999531,107997791,107995907,107995837). I'm kicking off another CI build, but ideally, these would use the same pattern/macros that the rest of our Functional tests are using:\n\nclass UIGestureCoordinatorTests {\npublic:\n    BEGIN_TEST_CLASS(UIGestureCoordinatorTests)\n    END_TEST_CLASS()\n\n    TEST_CLASS_SETUP(UIKitTestsSetup) {\n        return FunctionalTestSetupUIApplication();\n    }\n\n    TEST_CLASS_CLEANUP(UIKitTestsCleanup) {\n        return FunctionalTestCleanupUIApplication();\n    }\n\n    TEST_METHOD(UIGestureCoordinator_ActiveGestureAllowPossibleGesture) {\n        ....\n    }. sounds good; thanks!\n\n---\nIn reply to: [110289530](https://github.com/Microsoft/WinObjC/pull/2194#discussion_r110289530) [](ancestors = 110289530). Yes :'( We have work tracking its removal though.\n\n---\nIn reply to: [110294369](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110294369) [](ancestors = 110294369). No, these APIs are deprecated.  We'll eventually implement them on UIViewController (if anywhere).\n\n---\nIn reply to: [110294530](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110294530) [](ancestors = 110294530). they're here so they show up in annotations.\n\n---\nIn reply to: [110294608](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110294608) [](ancestors = 110294608). err API coverage data...\n\n---\nIn reply to: [110412323](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110412323) [](ancestors = 110412323,110294608). we don't have NOTINPLAN macros for headers.\n\n---\nIn reply to: [110295252](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110295252) [](ancestors = 110295252). This is all dead code - it never worked or provided any value.  Keyboard resize works in a totally different (out-of-proc) manner on Windows.  I'll file a bug to make sure we're tracking plumbing through the UWP keyboard resize events though.  \n\n---\nIn reply to: [110294830](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110294830) [](ancestors = 110294830). #2455\n\n---\nIn reply to: [110413410](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110413410) [](ancestors = 110413410,110294830). this doesn't crash; it just writes a message to the debugger....?\n\n---\nIn reply to: [110295163](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110295163) [](ancestors = 110295163). oh nice.  too bad none of UIKit knew about this :(\n\n---\nIn reply to: [110456645](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110456645) [](ancestors = 110456645). i went ahead and fixed up all of UIKit's current NotInPlan usage to use the new macro, and sent a PSA to the team.  thanks for the heads up.\n\n---\nIn reply to: [110969241](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r110969241) [](ancestors = 110969241,110456645). nit: static const?\n\nalso, nit: auto would be ok for these. nit: static const for these, too?. nit: const?. >to_nserror [](start = 9, length = 10)\n\nor asyncop_to_nserror. >op [](start = 127, length = 2)\n\nnit: operation or asyncop would be a bit more clear. >nullptr [](start = 46, length = 7)\n\nI'm surprised this compiles - you're passing nullptr as a const Geopoint& ?? #Resolved. >_observingSelfIsFinished [](start = 9, length = 24)\n\nnit: maybe just call this _isInitialized?. >std::lock_guard lock(_dependenciesLock); [](start = 8, length = 62)\n\nwhy isn't this lock necessary anymore?. ah...makes sense.\n\n---\nIn reply to: [111603769](https://github.com/Microsoft/WinObjC/pull/2497#discussion_r111603769) [](ancestors = 111603769). nit: don't need to do this either if you haven't initialized.  also, a nil _dependencies *could* signify that you're not initialized.. Nice catch.  Indeed; it looks like an MS-extension that leaked into the public interface: [https://github.com/Microsoft/WinObjC/wiki/UI-Guidance](https://github.com/Microsoft/WinObjC/wiki/UI-Guidance)\n\nUIApplication.mm uses it in some window/app sizing logic. I'll remove the annotations and add a comment to the header.\n\n---\nIn reply to: [111611637](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r111611637) [](ancestors = 111611637). either's fine - i'll switch it back though\n\n---\nIn reply to: [111610178](https://github.com/Microsoft/WinObjC/pull/2445#discussion_r111610178) [](ancestors = 111610178). > != nil [](start = 26, length = 7)\n\nnit: Much prefer a simple boolean comparison for pointers: 'if (strongSelf)' .... >// TODO: Error handling when projections support it. [](start = 8, length = 52)\n\nIs crashing on failure considered 'error handling'?  do we need a separate issue tracking properly handling errors?. should we trace here since this is a lossy transform?. :'( prob worth tracing here? maybe just file an issue?. > HostName hostName(addressStr); [](start = 7, length = 31)\n\ncan this throw?. Probably not a bad idea; we do have CATCH_THROW_NSEXCEPTION in result.h.. >// DEBUG_ALL || false; [](start = 40, length = 22)\n\nneed to switch back #Resolved. nit: did clang-format move this? #WontFix. so many formatting changes - makes it ~tough to find the fix.\n\n---\nIn reply to: [112261921](https://github.com/Microsoft/WinObjC/pull/2565#discussion_r112261921) [](ancestors = 112261921). worth adding some comments? #Resolved. So if I setShowsHorizontalScrollIndicator:YES, and then setScrollEnabled:NO, the scrollbars disappear.  Is that expected/intentional? #WontFix. perhaps we should fire the event even if 'result' is nil, so it's more clear to the app dev that they need to pull in projections?. >_createProjectionObject [](start = 3, length = 23)\n\nshould we switch to this approach for UIView's public xamlElement property, and for initWith:xamlElement?. oops; definitely don't want to push this file #Resolved. Many apps don't bother to check, and appear to work fine on the reference platform.  We already do this for UIView init/dealloc and in a few other spots (for sone middleware scenarios), but as called out in the commit message, we may revisit this in a future task that addresses the issue as a whole. . >define [](start = 1, length = 6)\n\n#defines are usually frowned upon; static variables are better.  However, in this case since this is used in a single spot, you can just move it (and the comment) down to where it's used. #Resolved. Hmmm...do we really need to cap this? What happens on iOS? #Resolved. isn't NO the default?  if we're never setting to YES, then we don't ever need to set it to NO, right? #Resolved. >   [self setHidden:NO]; [](start = 9, length = 23)\n\nDoes startAnimating set the control back to visible if the app explicitly set isHidden:YES? #ByDesign. Interesting; that sounds like the spinner is in a separate, non-clipped layer on iOS.  We could do something similar, but it seems like a corner case that we probably don't need to worry about.  However, I'm worried that silently capping the min frame size will break layout - cause layout cycles, etc.  The correct way to do this would be to implement intrinsicContentSize, but perhaps we just remove the capping and see how that works out for most apps (unless you already know of an app that requires this min frame size?)\n\n---\nIn reply to: [113078524](https://github.com/Microsoft/WinObjC/pull/2608#discussion_r113078524) [](ancestors = 113078524). >0.0 [](start = 31, length = 3)\n\nhmm - this assumes the alpha was 0.0 to begin with #WontFix. >   [](start = 0, length = 1)\n\nwe should get rid of all the tabs (in favor of 4 spaces) #Resolved. we should get rid of all the tabs (in favor of 4 spaces) #Resolved. How about leaving the Grid as-is, and simply toggling the visibility of the internal ProgressRing to Visible/Collapsed?  That would let us occupy space and show the background even when the ProgressRing is hidden.  Isn't that closer to iOS?\n\n---\nIn reply to: [113288024](https://github.com/Microsoft/WinObjC/pull/2608#discussion_r113288024) [](ancestors = 113288024,113080688). ...you'd just need to plumb _hidesWhenStopped through so the backing Xaml control could do the right thing - it would simplify this code, too.\n\n---\nIn reply to: [113292895](https://github.com/Microsoft/WinObjC/pull/2608#discussion_r113292895) [](ancestors = 113292895,113288024,113080688). >TODO: Update property names in path for binding once they have been updated in the header [](start = 9, length = 89)\n\ngithub issue tracking this? #Resolved. I'm confused by these - why not just bind to Width/Height of the containing Grid? #ByDesign. If we switch to \"White Large Style\", shouldn't we adjust our frame accordingly?\n\n---\nIn reply to: [113080757](https://github.com/Microsoft/WinObjC/pull/2608#discussion_r113080757) [](ancestors = 113080757,113079902,113078524). >fontFmailyname [](start = 34, length = 14)\n\nnit: typo #Resolved. > ^ [](start = 39, length = 2)\n\nnit: all of the ^ are on the wrong side #Resolved. comment as to why we need this check? or maybe we just don't do the check and let it look bad until Xaml fixes clipping. #Resolved. >self.isSecureTextEntry [](start = 68, length = 22)\n\nprobably don't need to pass this down, do we? #Resolved. >_ProcessGotFocusEvent [](start = 8, length = 21)\n\nsuper nit: should be _camelCase #Resolved. >   [self _adjustFontSizeToFitWidthOrApplyCurrentFont]; [](start = 1, length = 54)\n\nwhy is this needed when we get focus? #Resolved. same here - do we truly need to adjust font sizes based on focus events? #Resolved. >objcwinrt::callback( [](start = 49, length = 20)\n\nI don't think you need these, because the event callback already pushes/pops an autoreleasepool #Resolved. how many of these do you actually need now that you don't have any controls in the default markup? #Resolved. should add a comment about how this is a hack and we should switch to Windows APIs if/when available #Resolved. many (most?) of these can call into _backingControl->Focus, etc. #Resolved. we don't want to always handle it, do we?  What if the user actually wants to type enter and the delegate doesn't kill focus when enter is clicked? #Resolved. you can probably set to handled (if needed) in the  actual _enterKeyDownHandler\n\n---\nIn reply to: [113563242](https://github.com/Microsoft/WinObjC/pull/2616#discussion_r113563242) [](ancestors = 113563242). nit: unnecessary #Resolved. same here - could just use _backingControl #Resolved. >; [](start = 102, length = 1)\n\nnit: extra ';\" #Resolved. does this work for both TextBox and PasswordBox?  Might want to add a few more comments about how you know where to find these, since the Xaml markup is practically empty. #Resolved. nit: might want to comment about why you're doing this, and only doing it for TextBoxes #Resolved. we should either delete _content, or allocate/use it here. #Resolved. OneWay? #Resolved. Probably worth a large comment as to why we have an extra Canvas (so we can opt out of Grid's clipping).  Too bad Grid doesn't have an option to explicitly opt out of its clipping behavior. :'( #Resolved. >Binding [](start = 21, length = 7)\n\ndid you try x:Bind for any of these? #Resolved. no longer necessary? #Resolved. no longer necessary? - same with the XamlControls getter? #Resolved. I'd probably just call these directly, since they're only called in one spot #Resolved. I'd probably just call these directly, since they're only called in one spot #Resolved. Why do you need data binding for any of them?  Why not just set the properties directly?  DataBinding only really makes sense if you need to use it in markup.\n\n---\nIn reply to: [113595069](https://github.com/Microsoft/WinObjC/pull/2616#discussion_r113595069) [](ancestors = 113595069,113562562). >C [](start = 15, length = 1)\n\nnit: inputScopeNameValue #Resolved. > if (_placeholder != value) { [](start = 11, length = 29)\n\nit seems wasteful to do this check; why not just set whatever is passed in? #Resolved. nit: inputScopeNameValue #Resolved. >gaining focus programmatically [](start = 26, length = 30)\n\nshould we do this on programmatic focus then, vs. on programmatic text updates? #Resolved. nit: could be folded into a single SetFocus method that returns true/false #Resolved. yeah, those convert methods on UIWindow don't even belong there - tracked by [https://github.com/Microsoft/WinObjC/issues/2440](https://github.com/Microsoft/WinObjC/issues/2440).  maybe we should just fix instance this to call UIView's point conversion method instead?\n\n---\nIn reply to: [113979397](https://github.com/Microsoft/WinObjC/pull/2650#discussion_r113979397) [](ancestors = 113979397). Basically this whole file will be gutted at that time.  I don't think this particular backlog item has been filed on github though... #Resolved. Doh - nice catch.  Reinstall of git seems to have stomped my settings.\n\n---\nIn reply to: [113998959](https://github.com/Microsoft/WinObjC/pull/2652#discussion_r113998959) [](ancestors = 113998959,113998799).",
    "lhoward": "Agreed \u2013 see also issue #83. Implementing CoreFoundation in Objective-C is fine (this is now the case for some of the Apple implementation), but particular care does need to be taken if one is implementing CoreFoundation on top of Foundation.\n. Ah, OK, didn't realise it wasn't using the Apple ABI. Makes sense.\n. One question though \u2013\u00a0how does performSelector/invoke interact with message forwarding if it avoids calling objc_msg_lookup()?\n. Also NSFileManager.mm:searchRecursive() uses strcat().\n. I would flag potential buffer overflows as a bug or code clean, not an enhancement.\n. Also, why is pMsgFunc a string and not a boolean if it's not being used to look up a symbol at runtime?\n. Good digging. ULONG_PTR might be better then. I forgot that it was commented out, still it should be fixed before uncommenting :-)\n. The return value is also ignored. Suggest perhaps sharing code with NSInvocation.\n. And does this work with UCS-2/UTF-16 encoded property lists?\n. Right, just thought it might be more likely to happen on Windows.\n. Suggest (if licensing permits) the Apportable Foundation implementation be consulted, it has correct layering WRT CoreFoundation and is also for the most part much more pleasant to read.\n. Or Apple's runtime, although it does require the dynamic loader to be able to notify the runtime when new images are loaded (not sure if this is possible on Windows). I'm less concerned with libobjcrt per se as the quality of the CoreFoundation and Foundation implementations. I would humbly suggest ripping out the existing one and replacing them with the Apple/Apportable CoreFoundation/Foundation (respectively).\n. ",
    "codinggooner": "I am also seeing this issue in a Pods dependency project,and any other solution?\n. I have the same queation, SOS!\n. ",
    "theakc": "Is this fixed? I am also running in to this issue.\n. i am also hitting same  issue\n. looks like same as #23 .\n. ",
    "reyesrico": "I have downloaded the winobjc and when I open the /samples/WOCCatalog-WinSotre10.sln, VS2013 is opened and start to load the projects. Then appears: Not all the projects were loaded please review the Output. The output says: WOCCatalog-WinStore10\\WOCCatalog.vcxproj : error  : Unable to read the project file \"WOCCatalog.vcxproj\". \nThe imported project \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\WindowsXaml\\v12.0\\10.0\\Microsoft.Windows.UI.Xaml.Cpp.targets\" was not found. Confirm that the path in the  declaration is correct, and that the file exists on disk.\nI think is because the installation of my VS2013. Dont you think?\n. Thanks Agustin! I have installed these requirements and now I can run the samples! \n. ",
    "wjk": "Have you tried assigning __func__ to a variable of type char * and boxing that? It looks like that the compiler doesn\u2019t know the correct type of __func__ in this context.\n. As it turns out, none of my code is compiled as 64-bit. Even though the MSBuild $(Platform) variable was set to x64, inspecting the resulting object files using dumpbin.exe reveals that they are compiled as x86. It seems that none of the compiler toolchain supports 64-bit executables. @s5msft @jmsaunders-ms is there any way to change this?\n. Have you tried this?\n[[UINavigationBar appearance] setTintColor:[UIColor whiteColor]];\nYou could also try casting the result of [UINavigationBar appearance] to type UINavigationBar *.\n. I would say no, as Xcode's compiler has the exact same problem with dot-notation access to properties on type id.\n. I've noticed that Cassowary is now referenced as of 93a7a6a, and the code in WinObjC that references it is also licensed under the LGPL. @davelamb You made this change. Can you please chime in on how you expect this requirement to affect production code? Thanks!\n. Actually, I found the DLL containing these APIs. Is there any reason that the sources that make up the code in this DLL have not been released? It would make interopability between this tool and other APIs (both Microsoft-supplied and third-party Windows Runtime components) far easier.\n. I have narrowed down the cause of the error to the two functions CFBasicHashGetCountOfValue and CFBasicHashesAreEqual. If either or both are present in the source file, I get a C1001 error as described above. However, if I comment both out through #if 0, the file compiles successfully. The source for the functions is included below.\n``` c\nCF_PRIVATE CFIndex CFBasicHashGetCountOfValue(CFConstBasicHashRef ht, uintptr_t stack_value) {\n    if (__CFBasicHashSubABZero == stack_value) {\n        return 0L;\n    }\n    if (0L == ht->bits.used_buckets) {\n        return 0L;\n    }\n    if (!(ht->bits.keys_offset)) {\n        return __CFBasicHashFindBucket(ht, stack_value).count;\n    }\n    __block CFIndex total = 0L;\n    CFBasicHashApply(ht, BLOCK_DEF((CFBasicHashBucket bkt), {\n            if ((stack_value == bkt.weak_value) || __CFBasicHashTestEqualValue(ht, bkt.weak_value, stack_value)) total += bkt.count;\n            return (Boolean)true;\n        }));\n    return total;\n}\nCF_PRIVATE Boolean CFBasicHashesAreEqual(CFConstBasicHashRef ht1, CFConstBasicHashRef ht2) {\n    CFIndex cnt1 = CFBasicHashGetCount(ht1);\n    if (cnt1 != CFBasicHashGetCount(ht2)) return false;\n    if (0 == cnt1) return true;\n    __block Boolean equal = true;\n    CFBasicHashApply(ht1, BLOCK_DEF((CFBasicHashBucket bkt1), {\n            CFBasicHashBucket bkt2 = __CFBasicHashFindBucket(ht2, bkt1.weak_key);\n            if (bkt1.count != bkt2.count) {\n                equal = false;\n                return (Boolean)false;\n            }\n            if ((ht1->bits.keys_offset) && (bkt1.weak_value != bkt2.weak_value) && !__CFBasicHashTestEqualValue(ht1, bkt1.weak_value, bkt2.weak_value)) {\n                equal = false;\n                return (Boolean)false;\n            }\n            return (Boolean)true;\n        }));\n    return equal;\n}\n``\n. Note: theBLOCK_DEF` macro referenced in the code above is a compatibility shim to keep the Visual Studio editor's C++ parser from emitting spurious syntax errors. I have to do this because the editor is not aware of blocks or other Clang/C2-specific syntax features. It is defined as such:\n``` c\nif defined(INTELLISENSE)\ndefine BLOCK_DEF(args, ...) NULL\nelse\ndefine BLOCK_DEF(args, ...) ^args VA_ARGS\nendif\n``\n. I believe I have finally identified the root cause of this bug. Apparently, Clang/C2 does not appreciate the use of an__block` variable within a block scope, and emits a C1001 error whenever I use one. For example, the following code snippet will elicit the crash:\nc\nextern void _doFoo(int count, void (^block)(void));\n__block int foo = 0;\n_doFoo(44, BLOCK_DEF((void), { int bar = foo + 1; }));\nHowever, this code block will not elicit the crash:\nc\nextern void _doFoo(int count, void (^block)(void));\nint foo = 0;\n_doFoo(44, BLOCK_DEF((void), { int bar = foo + 1; }));\nUnfortunately, the latter code block does not allow me to modify the foo variable, which is necessary in the two functions referenced in the above posts. Attempting to obscure the operation through the use of pointers (e.g. __block int *foo; int bar = *foo + 1) does no good. Clang/C2 does not correctly handle __block variables, with read or write access, under any circumstances.\n@PooyaZv You have been handling C1001 errors with different causes in a few other issues. Could you please take a look and either suggest a workaround or pass this on to the appropriate Microsoft team? This is completely blocking me from continuing on with my project. Many thanks!\n. BTW, here is the clang --version output for my version of Clang/C2:\nclang with Microsoft CodeGen version 3.8.0\nProvided as - is without support\nTarget: i686-pc-windows-msvc\nThread model: posix\nInstalledDir: C:\\Program Files (x86)\\Microsoft Visual Studio\\VS15Preview\\Common7\\IDE\\VC\\ClangC2\\bin\\x86\n. @s5msft That is correct. The main reason I'm not using the Islandwood build of Clang/C2 is because by using the version shipped with Visual Studio, I get out-of-the-box project-system support. This lets me get right to working on my app code instead of fighting with MSBuild.\nAlso note that I have managed to workaround this issue through the usage of a pointer to a struct, something like this:\n``` c\nstruct block_params {\n    int value;\n}\nstruct block_params params_struct;\nstruct block_params params = &params_struct;\n_doFoo(44, BLOCK_DEF((void), { params->value += 3; }));\n```\nUsing this technique, I can modify the contents of the block_params struct through the pointer, even though the pointer itself is immutable. This does not cause a C1001 error, because __block is not used.\n. I just stumbled onto this issue, because Objective-C IntelliSense is something I am curious about. @Ron2 Have you installed the VSIX for WinObjC? I can't find it on VS Marketplace, so you will need to build it from this project. From what I can tell, Objective-C IntelliSense is now built into the VS C++ plugin, but you will still need to install that VSIX to enable it. If you've already done this, I don't know what to tell you.\n@weswmsft You closed #40. Could you please chime in with at least a status update? Thanks!. I have a question about this PR. I noticed that the MSVC-derived binaries in the LLVM/bin folder (mspdb*, c2.dll, etc.) have been removed. Having watched Clang's upstream development, I know that their MSVC compatibility (and, in particular, their ability to generate and manipulate PDB files) is much improved over where it was just a few years ago. Furthermore, @DHowett-MSFT's comment about \"clang-6.0.0+ms\" implies that we are moving to upstream(-ish) Clang instead of a heavily modified, Microsoft-specific fork. Should this PR be merged, will it mean that the Clang compiler used will be open-source (or, at least, can be replaced with a self-built Clang and not cause too much breakage)?\nEven though WinObjC was never really suitable for its intended purpose IMHO, I still think it has some interesting ideas under the hood that I might want to extract and use in my own projects. (In particular, I was thinking of adding support for the Mac frameworks \u2014 AppKit et al \u2014 as well as the iOS ones, and creating a macOS-to-Windows app bridge.) Should the Microsoft-proprietary compiler be finally removed, this would greatly aid the implementation of these ideas.\nThanks for answering my question, and keep up the good work! \ud83d\ude04. ",
    "DHowett-MSFT": "It doesn't look like -[NSObject methodForSelector:] is supposed to call -doesNotRecognizeSelector:. It should, however, return a forwarding IMP!\n. Clang can now do this, but the rest of WinObjC can't!. Fixed with #2869. This ought to be fixed as of afebcca\n. This ought to be fixed as of afebcca\n. We've got some changes on the way that resolve this and a couple other KVO issues, including #224 and #226.\n. Hi triplef! Thanks for catching this. Would you be amenable to unifying these value-transformed stores with the ones in trySetViaIvar? The fewer places we can do ObjC type parsing, the better! There might be something in ValueTransformers.h we can use for that.\n\u00a0\nThanks!\n. Thanks!\nThinking a bit more about this, I'm interested in sussing out the behaviour of setting an id ivar.\nUnless we can interrogate the property (which might not exist), we can't exactly know whether to retain new/release old... I'm somewhat worried prescribing that we should always retain/release the value in light of that.\nDo you know how it works on iOS / OS X? If they always retain new/release old, we can and absolutely should mimic them. :)\n. That's crazy behaviour! However, it does appear to be valid. The docs say \"In a reference-counted environment, if the instance variable is accessed directly, value is retained.\". Huh. Looks like we retain but never release the old value, as you observed.\nIf you don't mind making the change!\n. Nah; in this case, it is because nobody is referencing the symbol. If you emit an Objective-C class that only has +load, or is looked up dynamically, the linker may strip its containing object from the resulting binary. You have to anchor at least one symbol from the translation unit containing it, either with a linker include #pragma or by referring to the symbol in another non-stripped TU.\nCategories are the same, except they have no linkable symbols at all. One must be added.. @edvv My apologies; it looks like #pragma comment(linker, \"/include:...\") doesn't work in the static library scenario. You'll have to use an anchoring symbol like a no-op function or global referenced from a consumed TU.\nMy original suggestion follows, for posterity:\nAttempt\n```objc\n@interface X\n...\n@end\n@implementation X\n...\n@end\npragma comment(linker, \"/include:__OBJC_CLASS_X\")\n```\nUnfortunately, it relies on the ABI-mangled name of the class, as well as emitting a directive to the linker.\nFailure\nE:\\src\\WinObjC\\tests\\unittests\\Foundation\\Tests.mm(43):\nerror: Expected: (((Class)nullptr)) != (objc_getClass(\"X\")), actual: NULL vs NULL. This was fixed in #951, #903.. On it. Testing out a fix locally. Thanks for all the test cases!\n. Hi there,\nWe're having trouble reproducing your issue. Could you send a representative sample that we can look at?\n\u00a0\nIs there a chance that you're attempting to access an https resource?\n\u00a0\nThanks!\n. Hi @ehren! Thanks for your contribution.\nWe've identified a couple issues with this pull request.\n- NSObject will leak a NSDelayedPerform on cancellation.\n- The test code is very sensitive to timing. We have seen similar tests fail on machines under load. Would you be willing to rewrite that test in terms of std::condition_variable, NSCondtionLock, or some other completion signalling mechanism? I realize that reliably proving a negative (\"method didn't get called\") with a time constraint might be somewhat tricky!\nThanks!\n. Ah, interesting. Could you include a stack trace? I'd like to get a bearing on where this is happening.\n. When Visual Studio stops for this exception, switch to the Call Stack tab, select all (Control-A), and copy (either from the right click menu, or via ^C).\nIf there aren\u2019t any symbols loaded (which is unfortunately likely), this might not be particularly elucidating. \u2639\nFrom: cridlig [mailto:notifications@github.com]\nSent: Tuesday, February 9, 2016 4:39 PM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nCc: Dustin Howett duhowett@microsoft.com\nSubject: Re: [WinObjC] -[NSArrayConcrete UTF8String]: unrecognized selector (#346)\nSure. What is the best way to include the stack trace? Just copy from the log?\n\nOn Feb 9, 2016, at 4:31 PM, Dustin L. Howett (MSFT) notifications@github.com<mailto:notifications@github.com> wrote:\nAh, interesting. Could you include a stack trace? I'd like to get a bearing on where this is happening.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Microsoft/WinObjC/issues/346#issuecomment-182147107.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/346#issuecomment-182148795.\n. Ah, it looks like we're not re-registering subkey observers for derived properties. Good find!\n. Fixed with #2869. Great find! This one has bitten us before, so it's on our radar.\nThank you!\n. NSDate is one of the basic property list serializable types and should serialize naturally through encodeObject:forKey:.\nOn Fri, Apr 1, 2016 at 2:31 AM -0700, \"Rupert Daniel\" notifications@github.com<mailto:notifications@github.com> wrote:\nImplement [NSDate encodeWithCoder:] so that NSDate instances can be serialised using NSCoding.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/413\n. It might be good to get @jofre-ms to eye over these changes.\n. :+1:\n. :+1:\n. Is there a chance that self is getting KVO-observed (or otherwise having its class manipulated) between the two calls?\nFrom: Rupert Daniel [mailto:notifications@github.com]\nSent: Thursday, April 28, 2016 11:31 AM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nSubject: [Microsoft/WinObjC] objc associatedObjects not working (#463)\nobjc associated objects do not seem to be working. In the following example the value is nil when accessed in the next runloop:\nobjc_setAssociatedObject(self, @\"myObjKey\", @\"MOOSE\", OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n// object is \"MOOSE\"\nNSLog(@\"object %@\", objc_getAssociatedObject(self, @\"myObjKey\"));\ndispatch_async(dispatch_get_main_queue(), ^{\n```\n    // object is nil\nNSLog(@\"object %@\", objc_getAssociatedObject(self, @\"myObjKey\"));\n```\n});\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/463\n. We just ran into this ourselves and are looking into solutions. Thanks for the report!\n. > ```\n\n_newItem = nil;\n```\n\nsince you switched to idretain, we can remove this for cur/new\n\nRefers to: Frameworks/UIKit/UINavigationBar.mm:577 in 0902644. \n. :+1:\n. > - (instancetype)initWithObjects:(id)firstObj {\nit looks like our API tool consumed the \",...\" here. Would you mind implementing this? It could be straightforward with ConvertVAListToVector (VAListHelper.h).\n\nRefers to: Frameworks/Foundation/NSOrderedSet.mm:178 in ccaae2f. \n. > - (instancetype)initWithObjects:(id)firstObj {\nConvertVAListToVector returns a std::vector!\n\nIn reply to: 216629907 \n\nRefers to: Frameworks/Foundation/NSOrderedSet.mm:178 in ccaae2f. \n. Since the reference documentation imposes no restrictions on the backing store for NSCache, apart from that it bear dictionary semantics, we have a bit of agency in how we implement it. I intend to start with a simple LRU cache.\nDetails\nUsing a doubly-linked list (for quick element replacement and removal) and a hash table (for quick lookups) seems like it will be the right choice here. Since we're a primarily C++-on-the-inside codebase, we'll use std::list<_NSCacheEntry> and std::unordered_map<id, std::list<_NSCacheEntry>::iterator>, with specializations for std::hash<id> and std::equal_to<id>.\nstd::list was chosen for its stable iterators and efficient reverse traversal. We'll keep the cost on _NSCacheEntry, even if there is no cost.\nOperations\nInsertion - O(1) amortized\n\nPrepend a new cache entry {key, value, cost} to the backing list.\nInsert a new entry mapping key to the iterator hash table.\nEvict all objects over the cache limit -- including, possibly, the newly-added one.\n\nRemoval - O(1) amortized\n\nFind the iterator corresponding to key.\nRemove the iterator from the backing list.\nRemove the found iterator from the iterator hash table.\n\nLookup - O(1)\n\nFind the iterator corresponding to key.\nPromote it to the head of the backing list.\n\nEviction/Cost Balancing - O(n) worst case\n\nStarting at the end of the backing list, remove items.\nIf we have a cost limit, only remove items with a nonzero cost.\nIf we have a count limit, remove items regardless of their costs.\nIf we have both, remove items following the above rules until both limits are met.\n\nEviction is the only O(n) operation for the LRU cache: in the worst case, we must remove every item from the backing list. With sane defaults, we shouldn't hit the pathological case.\nCompatibility\nNSDiscardableContent objects will be discarded during eviction, but only removed from the cache if evictsObjectsWithDiscardedContent is enabled. If they are not evicted, they will be considered to have 0 cost.\n. :shipit:\n. :shipit:\n. Thanks!\n. Interesting. I've run into this as well. It only seems to happen once per session, only under the debugger, and it can be Continued through.\n. :shipit:\n. Got a root cause and a potential fix for this one.\nWhen we are tearing down stale observers and reconstructing new ones (for descendent keypaths), we were erroneously not doing so if we were in the middle of a change notification for the same keypath.\nThat is: changing childObject triggered the two sub-observers, childObject.name and childObject.value to fire (which is correct), but when we were rebuilding the keys, we skipped childObject.name because we were already dispatching a notification.\nFix: Reconstruct keypaths regardless of whether/not we're currently notifying. This is objectively more correct.\n. This was fixed some time ago.\n. Root caused this one: we're using objc associated objects to track selector<->key mappings.\nlibobjc2's association logic would only search the most shallow association table in the stack.\nTherefore, when you associate more than  REFERENCE_LIST_SIZE (10, at the moment) keys with an object, certain keys may become inaccessible.\nFix pending investigation; filing a bug over there and working on the association table.\n. Incidentally, this could be caused in part by the same root issue as #500!\nThanks for the report.\n. Sorry, I meant #501.\n. Have you continued seeing this since the associated object fix for #501?\n. :shipit:\n. Overall, I approve of this. I won't withhold my approval for my comments :)\n. :shipit:\n. Root cause: The removal check at NSKVOSupport.mm:377 doesn't check whether the observers match before removal.\nOur tests failed to catch this because they remove the observers in creation order -- so the second observer would still fire notifications.\n. @ms-jihua is added to the review. #Closed\n. :shipit:\n. Thanks for your contribution, @bSr43!\n. It looks like the only one we're missing here is the kind key, right? new should be getting propagated.\n. Is the representative snippet in your initial report totally accurate? It looks like it's missing a return self;, so we may just be getting garbage in eax. \n. :shipit:\n. This will be covered. Thanks!\n. :shipit:\n. @nicholasgerard-msft Unfortunately, seeing as this is a missing public header (<xlocale.h>), it's unlikely that switching away from CocoaPods is going to solve it.\n. @msft-Jeyaram is added to the review. #Closed\n. @MSFTFox is added to the review. #Closed\n. Thanks everyone; in CI build now.\n. This is in CI build.\n. I added an in-depth single entity two-property test; one attribute and one relationship. It doesn't get into any attribute constraints, but it does make sure that a lot of the basic parseable keys are intact.\n. In CI build.\n. :shipit:\n. In CI build.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. [nit] It looks like GH wants to pull in a lot of the merged changes; can you rebase this to clean up the diff?\n. :shipit:\n. (Test burden got lost in a git snafu; it's now completed!) #Closed\n. @mnithish is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. In CI build.\n. :shipit:\n. Passed CI build, as @aballway mentioned.\n. :shipit:\n. Design-wise;\nHow does didReceiveToastNotification: differ from didReceiveLocalNotification:, and why did we choose one over the other?\nAre there semantics from the nonstandard one we can adapt to the standard one? #Resolved\n. :clock1:\n. My only concern with this is that we're making heavy-handed tests more likely to fail if the machine is under stress. Is there a way to write these tests that doesn't require a timed waiter and a timed waitee?\nIf we were to have a timed waitee and an un-timed waiter (say: holding a mutex, or waiting on a condition), we might be able to avoid stressed systems failing these tests. #Pending\n. This regressed with the introduction of _NSHSTRINGString in 5a431f87ce49da5799d2e4804d57f3a76cb49dea. Since NSURLProtocol_WinHTTP is a COM projection, the header fields we get back are projected HSTRINGs, and some of our header code can't deal with that.\nI'm investigating why that is.\n. Misdiagnosed! It actually looks like a missing CoreFoundation unicode case mapping file. Without that, all string lowercasing will fail. :(\n. :shipit:\n. In CI build.\n. In CI build.\n. Confirmed via unit test run on ARM as well: the mappings are copied and working there.\n. This is no longer a crash, but it still represents a small compliance issue (some number of binary property lists, which we claim to support, will not act appropriately.)\n. :shipit:\n. @msft-Jeyaram: Leaving this open (referenced via e9bb1b2) to track additional unit test work.\n. :shipit:\n. Does this also add the new 5.7 headers? #Resolved\n. (or, \"should\")\n\nIn reply to: 233714431 \n. :shipit:\n. :shipit:\n. If you explicitly say Fixes #xxx. or Fix #xxx. in the commit log, it will automatically close the issue when the pull request is merged! #Resolved\n. @ms-jihua is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. In CI Build!\n. Failed an application launch test. -[NSString isAbsolutePath] is blindly pulling characters without bounds checking, and will now throw an exception when it does so.\nAddressing in an additional commit.\n. Submitting a new CI build with the updates, just to make sure.\n. Passed CI build and application launch tests.\n. :shipit:\n. > ```\n\n\n```\n\nIt looks like it, yes; with /WHOLEARCHIVE we were getting duplicate symbol errors. It wasn't added in this CR.\n\nIn reply to: 235375643 \n\nRefers to: build/CoreFoundation/lib/CoreFoundationLib.vcxproj:126 in 8ab9f86. \n. Passed CI Build!\nAddressing feedback by adding comments to objc_2stage_init.cpp, and running a few builds to determine the growth in binary size.\n. | Debug   | Release\n----------------------+---------+--------\n   With /WHOLEARCHIVE | 66.0MiB | 44.5MiB\nWithout /WHOLEARCHIVE | 65.0MiB | 43.7MiB\n. This figure is for every DLL produced by our build system taken in conglomerate.\n. :shipit:\n. :shipit:\n. > ```\n\n[NSTimeZone setAbbreviationDictionary:[NSDictionary dictionary]];\n```\n\nDoes this influence the results of the tests between the set and re-set?\n #ByDesign\n\nRefers to: tests/unittests/Foundation/NSTimeZoneTests.m:90 in d9f18be. \n. > ```\n\n[NSTimeZone setAbbreviationDictionary:[NSDictionary dictionary]];\n```\n\nWait wait; I thought you meant that the clear/re-set influenced separate test runs! Here, I meant lines 91-133. It worries me that the following tests rely on having no abbreviations :(\n\nIn reply to: 236052318 \n\nRefers to: tests/unittests/Foundation/NSTimeZoneTests.m:90 in d9f18be. \n. :shipit:\n. I'm not sure it's key-related -- we should be able to serialize and deserialize objects of any type with the same key.\nHowever: The first failing test here tests the API contract laid out for setSecureCoding:, which specifies:\nThe secure coding requirement for NSKeyedUnarchiver is designed to be set once\nat the top level and remain on. Once enabled, attempting to call setRequiresSecureCoding:\nwith a value of NO will throw an exception. This is to prevent classes from selectively\nturning secure coding off.\nIt looks like the reference platform doesn't follow its own rules.\nWhat does that mean for our tests? \ud83d\ude26 \n. The other two tests match observed behaviour where an insecure object being decoded would stop all future decoding. I am uncertain as to why this behaviour has changed on the reference platform as well.\n. This is not the appropriate fix at the moment.\n. :shipit:\n. Talked with Brian offline; he appeared comfortable with this change. Passed CI build!\n. Completed the document updates for this task.\n. CI builds passed (though they do not run OS X tests, so they do not provide full coverage here.)\n. Passed CI build; Passed OS X UTs.\n. @rupertdaniel Thanks for the report. We've root-caused the issue and come up with a tentative fix. Do you have a representative sample we can include in our test burden to make sure this doesn't regress?\n. It appears as though we have a test for this case: it asserts that the operation is finished when the completion block is called.\nHowever, it never actually asserts that the completion block was, in fact, called.\n. Thanks.\nWe investigated a couple more use cases for NSOperation, and identified a couple other problem areas.\n- Operations should be scheduleable without a queue and run manually.\n- Operations with dependencies need to perform dependency resolution if they're at the head of the queue.\nWe've added additional test burden in #784, but the dependency issue is still outstanding.\nRight now, if you enqueue an operation BEFORE its dependencies, the queue will block forever. On the reference platform, the dependencies resolve and execute before their depending operation.\n. Ping! This is P0.\n. We had evictsObjectsWithDiscardedContent backwards; the intent appears to have been to remove discarded objects when we realize they're discarded (and signal the delegate). We interpreted it to mean \"remove objects after we have discarded them in recosting\".\n. We are stricter than the reference platform here, which apparently allows arguments to be stored in the negative space (and retrieved later!)\n. Suggestion: Disable this test until #711 and #85 land. That's slated for 1608.\n. This reflects a design deficiency in our implementation of aggregate functions.\nWhere we have one global class that implements these for everybody, it looks like they're class-specific on the reference platform. This allows them to disable unionOfSets on NSSet, and sum, min, max on NSDictionary.\n. :shipit:\n. Evidence points to NSURLResponse using a pointer comparison only, just like @mnithish found for NSPointerArray!\n. LOL.\nobjc\nASSERT_OBJCEQ(@\"_.ext\", response.suggestedFilename); // Differs from reference platform\n// because ; is an illegal filename character\nIncidentally, it doesn't look like ; is an illegal filename character..\n. :shipit:\n. This pull request now has an update to fix dependency processing.\n@rajsesh-msft I've removed your :shipit: shipit guy :)\n. @mnithish is added to the review. #Closed\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Passed CI build!\n. Fixes #759.\n. Passed CI build!\n. @DHowett-MSFT is added to the review. #Closed\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Agreed. We could use this as an opportunity to fix the KVC keys as well :smile:. :clock1:\n. :shipit:\n. > ```\n\n[fh closeFile];\n```\n\nIf you are closing manually, do not use a SCOPE_CLOSE_HANDLE #WontFix\n\nRefers to: tests/unittests/Foundation/NSFileHandleTests.mm:267 in 43ac298. \n. > ```\n\n[fh closeFile];\n```\n\nOr, wrap it in its own scope.\n{ SCOPE_CLOSE_HANDLE(fh); .......... writeData .... }\n\nIn reply to: 237713552 \n\nRefers to: tests/unittests/Foundation/NSFileHandleTests.mm:267 in 43ac298. \n. :clock1:\n. :shipit:\n. The best files view for this pull request is the one without whitespace differences.\n. Passed CI build. Prepared to merge, but I want a little more oversight :)\n. Thank you!\n. Passed CI build (look, a fancy status indicator!)\n. :shipit:\n. Thanks.\nIn general, I think using NSScanner instead of sscanf here was not the right choice. Alas!\nThings were done the way they were done. #Resolved\n. :shipit:\n. NB: Since GitHub lets you edit the emssage when squashing, it could be placed there too. :smile:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Per the documentation,\n\nIn most cases, this property appends the proper file extension based on the MIME type. Accessing this property always returns a valid filename regardless of whether the resource is saved to disk. \n. @rajsesh-msft It looks like the dependency on Foundation is only for NSString message dispatch, and it's only in logging codepaths. We might be able to get away without linking it, or stripping out the dependency completely.\n\nIt uses CoreFoundation everywhere else internally. It's awesome.\n. @mnithish might have some more insights here!\n. You can edit it!\n\nIn reply to: 237972693 \n. :shipit:\n. I don't believe so.. @ms-jihua Reference platform tests mostly restored!\n. :clock1:\n. Alternatively, #871.\n. LOL. #Closed\n. Why did this work on our platform? #Resolved\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Can we use RoInitializeWrapper or some other existing COM/WRL scope guard here instead of writing our own?\n\nFrom: Jeyaram Jeyaraj notifications@github.com\nSent: Tuesday, August 9, 2016 3:39:56 PM\nTo: Microsoft/WinObjC\nCc: Dustin Howett; Assign\nSubject: Re: [Microsoft/WinObjC] Move EntryPoint CoUninitialize to be under a scope guard. #689 (#855)\nPing!\n\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/pull/855#issuecomment-238714379, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ANp1mnHkab9RKJJyu7bxbS28rHU6RWmqks5qeQG8gaJpZM4JgkHA.\n. :shipit:\n. :shipit:\n. This test is gold.\n. :shipit:\n. It looks like we have tests to make sure that a copy of a mutable version doesn't reflect changes to the original, but we aren't testing whether the copy itself is mutable or immutable.\n. Did the bug mentioned migrate to GitHub?\n. :shipit:\n. :shipit:\n. :shipit:\n. Having a week property is the same as having setWeek: and week. Perhaps we just need an explicit @synthesize week = _week; at the top of the implementation? #Closed\n. I worry somewhat that legacy code will be relying on week to actually do something; I don't think that it was always deprecated, and I don't think it always did nothing.\nAre there facets that consume NSDateComponents that could rely on the week property? #Closed\n. :shipit:\n. @bbowman is added to the review. #Closed\n. @pradipd is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @GreatKeeper is added to the review. #Closed\n. One commit message needs to have its wording fixed during merge.\n. Revisiting this later.\n. :shipit:\n. @jaredhms @pradipd Ping; This is P0 for Monday.\n. Thanks!\n. @ehren The problem here is that we can't auto-@synthesize a property backed by an AutoId -- partly because our compiler isn't enlightened as to whether that should be possible, and partly because maybe it shouldn't be possible.\nEverywhere we've wanted to do that, we either\n- Explicitly back the property with the right setter and getter that interact with the AutoId.\n  - This is a little cumbersome, but gives us the most expressiveness.\n  - This does not work with atomic properties, because we lack the runtime affordance for doing the same sort of property-scoped locking that the compiler does.\nor\n- Remove the AutoId and fall back to manual memory management.\n. In short, @bbowman is right and also beat me to it. We lose atomicity, but we didn't need it in this case.\n. Adding an explicit setter= and getter= shouldn't stop autosynthesis. Having an instance variable and writing the getters/setters directly, however, will!\n. :shipit:\n. This is a bug that should be filed on the maintainers of the crash report analysis tools.\nWe may like to consider the \"short-term\" solution. I move to reclassify.. :shipit:\n. :shipit:\n. We can fix this for:\n\nDictionary\nSet\nIndex Set\nArray\nCharacter Set\nData\n\nWe cannot fix this for:\n Attributed String - they do not support archival (stubbed)\n String - this is somewhat bad. Our NSKeyedArchiver implementation will emit a self-reference, stating that a mutable string's string contents is itself. When NSKeyedArchiver later deserializes this, it gets a prototype string that hasn't been initialized.. Well, we cannot TEST the fix for NSAttributedString. We can certainly fix it.. It's liable that there are testable cases that aren't covered here; please try to think of them.\nWhat we have:\n- 1-4 homogenous floats/doubles as arguments and return values\n- Disparate structs as arguments and return values\n- Tests with arguments intended to vex the allocator:\n  - float/double/float/double (etc.) -- ARM will allocate these out-of-order, and then fill in the holes!\n  - char/maxalign/char/maxalign -- maxalign is the largest alignment type; OS X fails this test (?)\n  - multiple homogenous VFP structs followed by a stack-spilled float, followed by a struct that will be forced to spill onto the stack as well since it won't fit into registers. #Resolved\n. impl::~impl is necessary to delete _buffer #Closed\n. @bviglietta is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n.  #Closed\n. Here is a markdown preview link for the design document. #Resolved\n. We can do this at a later date, if we determine that we are spending too much time or memory on this.\n\nIn reply to: 241630798 \n. > struct DisparateAggregateDF {\nWe do, down below; Large, Small8, Small4; technically, HighlyAligned is also disparate since max_align_t is a double on x86/arm\n\nIn reply to: 242551185 \n\nRefers to: tests/unittests/Foundation/NSInvocationTests.mm:84 in 3e6cf87. \n. This refs #711. #Closed\n. The KVC/KVO test cases hit a missing case, and it's been fixed.\n\nIn reply to: 241597563 \n. Verified separately on ARM by @chadimoussi. Thanks! #Closed\n. Test failure post-mortem: The test for arguments above limit was expecting NSInvalidArgumentException instead of NSRangeException.\n. This is fixed as of the merge of #1005.\n. :shipit:\n. :shipit:\n. -[NSData write...] should definitely be creating files that do not exist; do you mean directories? #Resolved\n. :shipit:\n. If it is directories: technically, we should not be creating the directories (and instead, throw a file not found/illegal/etc. exception.) #Resolved\n. This is the cause of the missing button text in #1445.. :shipit:\n. libssl is not a public interface on iOS. I don't think it should be exposed here.\n. :shipit:\n. :clock1:\n. :shipit:\n. I think this falls under your purview as of #2468?. :shipit:\n. Fix:\nobjc\n+ (NSSet<NSString*>*)keyPathsForValuesAffectingFractionCompleted {\n    return [NSSet setWIthObjects:@\"completedUnitCount\", @\"totalUnitCount\", nil];\n}\nHowever, we may want to evaluate all of NSProgress's calculated properties for KVO conformance.\n. The following derived properties are expected to be KVO-compliant with dependencies, but are not:\n- fractionCompleted\n- indeterminate\n- cancelled\n- paused\n- localizedDescription\n- localizedAdditionalDescription\n. :shipit:\n. Nit: what determined whether we included the umbrella header Foundation.h or the class header NSObject.h? #WontFix\n. @bviglietta is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @bviglietta Now with 100% more ARM unwinding support. It was required for this change because -forwardInvocation: is the real throw site for the does not recognize selector exception, and without unwinding, we couldn't ever catch it.\n. @davelamb is added to the review. #Closed\n. I am going to add a comment, which will break the code validation status UI. This will not impact the viability of the code.\n. :shipit:\n. This may not require a CI build, since it's only in docs/?\n. :shipit:\n. Are we capable of parsing a JSON null into NSNull?\n. :shipit:\n. :shipit:\n. Fixed.\n. As far as I know, Artem fixed this a while ago. We'll have to investigate that fix again.\n. @oliversa-msft is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. Due to LFS's frailty, I will merge this manually when the build passes.\n. Curiously, it looks like our GL headers may be the incorrect ones:\nThis specifies that it should be unsigned.\n. :shipit:\n. Thanks!\n. This does not touch any buildable assets, so I am forgoing CI build.\n. There is an irony in not CI-building a CI-building script.\n. > static const wchar_t* c_defaultFontName = L\"Gabriola\";\nwhoa, Gabriola? Is it possible to get the system's default UI font name? #ByDesign\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:37 in 4368641. \n. :shipit:\n. @jboich Awesome. Have you run into any compatibility issues?\n. :clock1:\n. :shipit:\n. > ```\n\nstrcat_s(newStr, newStrSize, pathEnd);\n\n```\n\nI'm a little worried -- this should be stitching together filename, @2x and .extension already.\n\nRefers to: Frameworks/UIKit/UIImage.mm:379 in 2518fe7. \n. @jaredhms is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. There are tabs in one of the files.\nI hate Visual Studio at times. #Closed\n. @bbowman your concerns regarding type_encoding_cases have been addressed. #Closed\n. :clock1:\n. This build failure may be transient; I'm going to submit another one:\n2016-09-20T01:06:05.2685043Z MSBUILD : error MSB4017: The build stopped unexpectedly because\n of an unexpected logger failure.\n2016-09-20T01:06:05.2685043Z Microsoft.Build.Exceptions.InternalLoggerException: The build\n stopped unexpectedly because of an unexpected logger failure.\n ---> System.ArgumentException: Illegal characters in path.\n. Tested this with a non-sample application with subproject references, and it looks good.\n. What sort of file type mapping?\n. :shipit:\n. :shipit:\n. :clock1:\n. * Fix CGContextFillPath() to not preserve path after fill.  This is\n* required according to documentation (also matches reference platform\n* behavior).\nThis will damage the WOCCatalog text shapes (\"Text Display\") example, since it has some CAShapeLayers that it fills and strokes without recreating the path. #Closed\n. :shipit:\n. This may be mollified slightly by a CoreGraphics retargeting to D2D, as in #1028.\n. :shipit:\n. :shipit:\n. This is currently tested by one of our middleware components, but I can add some tests here.\nMy concern is that we are growing a significant number of ad-hoc KVO tests, each with a custom implementation, and they need to be unified via a common listener to avoid duplicating the same code over and over in different test facades.\n\nIn reply to: 250597295 \n. @rajsesh-msft  @bbowman test collateral added! finally ;P. :shipit:\n. This should work with _Complex.. This is covered by the foundational work done in CGD2D. Tracking further work in new issues.\n. Separating from #1066. We now support basic rect+ellipse geometries.\n. This is on @msft-Jeyaram now, IIRC?\n. :shipit:\n. :clock1:\n. This will require an update to .ci-repo.xml, so that Submit-CIBuilds can be enlightened :)\n. :shipit:\n. Closing; @mukhole told me that this is \"No longer needed, the dependency is taken care of at project level.\". :shipit:\n. While we are here, can we bring up the TargetPlatformVersionMin? #Resolved\n. Sorry, I mean to bring up min to 10586. #Resolved\n. Half our projects are at 10240 right now :)\n\nIn reply to: 253002438 \n. :shipit:\n. @msft-Jeyaram tackled this as part of #1332. We can open a future issue to investigate better integration down the line.\n. Many things are marked Interoperable in this pull request that are not. It does not seem like a good time investment to fix them when they're going to keep changing. #ByDesign\n. @ms-jihua is added to the review. #Closed\n. @MSFTFox is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. Not yet, but in a future commit. :) #Resolved\n. > ```\n\nBYTE* imageData = static_cast<BYTE*>(LockImageData());\n\n```\n\nThis will also go away soon :)\n\nIn reply to: 253094039 \n\nRefers to: Frameworks/CoreGraphics/CGBitmapImage.mm:452 in a481d28. \n. > ```\n\nCGSize ret = frame ? frame->_frameRect.size : CGSize{ 0, 0 };\n```\n\nPrefer CGSizeZero\n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:89 in 203967b. \n. > ```\n\n[_textStorage addLayoutManager:self];\n```\n\nDoes this need to call an equivalent of removeLayoutManager: on the outgoing NSTextStorage?\n\nRefers to: Frameworks/UIKit/NSLayoutManager.mm:213 in 203967b. \n. :shipit:\n. :shipit:\n. > #import \"CGPathInternal.h\"\nduped include #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:18 in 56f89cd. \n. > #import \"CGPathInternal.h\"\nCan you see if removing this breaks anything? #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:18 in 56f89cd. \n. > #import \nwe've imported so many of these it might just make sense to do CoreGraphics/CoreGraphics.h #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:23 in 56f89cd. \n. Thanks for the report!\nThis looks like a code generation issue.\nIn doMe2 and doMe3, the function begins with the ARC prologue that should take a strong reference on the NSObject* parameter.\nThat usually looks something like this:\nasm\n00B579A0  push        dword ptr [ebp+10h]  ; parameter area is above ebp\n00B579A3  lea         eax,[param]  \n00B579A6  push        eax  \n00B579A7  call        _objc_storeStrong (0B646B6h)\nwhich corresponds to the call objc_storeStrong(&param_local_temp, param_passed_in_as_argument).\nHowever, what's getting emitted in 2 and 3 above looks more like this:\nasm\n00B578D0  push        dword ptr [ebp-10h]  ; local temp area is below ebp\n00B578D3  push        dword ptr [ebp-10h]  \n00B578D6  call        _objc_storeStrong (0B646B6h)\nThis corresponds to objc_storeStrong(&param_local_temp, &param_local_temp).\nIt looks like marking the NSObject parameter __unsafe_unretained fixes the issue (at, of course, a cost), as further references to the parameter don't codegen improperly.\n. This should be fixed with #2869.. This was resolved to the same cause as #1208, right? If so, we can close it and track status there.\n. :shipit:\n. Please include some explanatory comments in the pull request description!\n. Addressed all comments, documented it too! #Resolved\n. Skipping CI build for non-build config file change.\n. When you merge this, can you please make sure to change the commit message to note that these things got squashed together? Thanks!\n. :shipit:\n. :shipit:\n. I'm not 100% stoked about the foundation dep in AudioToolbox, but I understand that we already had one (IIRC) and it's fairly harmless to replace if we do decide to set up a boundary.\nLGTM!\n\nIn reply to: 254903901 \n. :shipit:\n. The Direct2D effect stack can be used for anything that requires composition, such as shadowing, blending, and render intent manipulation.\n. This is covered by #1268.\n. This is a checklist task: I'm splitting it into subtasks.\n. CGD2D.\n. Fixed in 29e1b23\n. You've added some new binary files; please make sure they are tracked by type in .gitattributes.\nAs well, please make sure you give them all nice consistent names and capitalizations. On other platforms, PNG and png are different extensions. This might confound WSL/BashOnWindows users, and OS X in certain configurations.\nIdeally, we could standardize on pne1.png nef1.nef xcf1.xcf -- or, perhaps, 01_rgb1.png 01_cmyk1.jpg (embedding filename info to reveal what exactly the image intends to test.) #Resolved\n. :shipit:\n. Tested this locally, and compared the config files against our config. There were no new config directives.\nBypassing CI build for non-built collateral.\n. So this anchors the bottom left of the text at the text position?\nIf the context is transformed 1 0 0 -1 0 0, it then anchors the top left of the upside-down text at the text position?\n. :shipit:\n. :shipit:\n. :shipit:\n. @aballway @rajsesh-msft Is this something we should do for CGContextCairo, or just roll up into CGD2D work? As it stands, CGD2D does not save the text matrix in the state block.\n. This is not an issue in CGD2D.\n. :shipit:\n. The negative offsets come from the compiler; I'm closing this as a dupe of #1208 since it has a self-contained repro.\n. Alright, here's the deal:\nClasses with negative ivars are totally legal:\nTake, for example, this inheritance hierarchy:\n``` objc\n@interface X {\n    uint8_t ivar1;\n    / padding! /\n}\n@end\n@interface Y: X {\n    uint8_t ivar2;\n    uint8_t ivar3;\n}\n@end\n```\nSince X has a lot of known padding, Y's ivars can consume it.\n0        1                          4\nX: +--------+--------+--------+--------+\n   | ivar1  | -PAD-  | -PAD-  | -PAD-  |\n   +--------+--------+--------+--------+\n           -3       -2       -1\nY:          +--------+--------+\n            | ivar2  | ivar3  |\n            +--------+--------+\nOn occasion, however, our compiler will emit invalid negative offsets which consume nonexistent padding:\n``` objc\n@interface X {\n    uint8_t ivar1;\n    / padding! /\n}\n@property (assign) void* pointer;\n@end\n@interface Y: X {\n    uint8_t ivar2;\n}\n@end\n```\n0           4                          8\nX: +------<pad>+--------+--------+--------+\n   | ivar1     | pointer                  |\n   +------<pad>+--------+--------+--------+\nY:                     -3       -2\n                        +--------+\n                        | ivar2  |\n                        +--------+\nTo work around this, we added a negative ivar slide fixup in libobjc2.\nUnfortunately, we didn't account for the case where subclass Y has two small ivars without padding between them. Those would be laid out at -3 and -2, respectively.\nProjected fix:\n1. Fix ivar sliding for multiple padding-packed ivars in libobjc2.\n   This will waste a few bytes per instance per misaligned class.\n2. Figure out why the compiler is not factoring synthesized properties into layout derivation.\nI'll leave this bug open to track 1 and open a new issue for 2.\n. This is gnustep/libobjc2#25, gnustep/libobjc2#27. It's fixed upstream and requires us to merge.. :clock1:\n. :shipit:\n. :shipit:\n. This requires CGCatalog changes, which will be in the next commit.\n. @aballway @msft-Jeyaram This has changed somewhat since you last looked; please review again!\n. > ```\n\n\\\n```\n\nFixed on another branch ;P\n\nIn reply to: 256541655 \n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:181 in 345b521. \n. @MSFTFox this one may be of interest to you! #Closed\n. > ```\n\nif (!context) {                                                          \\\n\n```\n\nyep[\n\nIn reply to: 257408940 \n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:181 in c38281f. \n. @msftfox There are some issues with new code using CGPath internal functions. Can you please branch off this branch (Microsoft/WinObjC@3496ce9), CR a pull request into it, and we can merge both?\n. Running new CI build.\n. :shipit:\n. :clock1:\n. > ```\n\n// CGPathMoveToPoint does not update the geometry in any way. CGPaths do not consider these actions to be\n```\n\nThis comment is now a lie, as it closes the geometry's existing figure. #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:402 in 5267579. \n. Unrelated to this PR:\nIt would be nice to see a test similar to\nLine 0, 0 -> 100, 100\nRect 100,100 +100,+100\nExcept where the rectangle does not touch the line.\nI'd like to know whether the reference platform adds a connector, and whether we do with D2D.\n. > ```\n\nUNIMPLEMENTED();\n```\n\nA clever implementation would be to make a rect geometry of the path's bounding box, and then do the Contains-Contained relationship!\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:739 in a12387b. \n. > ```\n\nUNIMPLEMENTED();\n```\n\nNot for this CR. Sorry. :)\n\nIn reply to: 257421985 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:739 in a12387b. \n. > ```\n\nUNIMPLEMENTED();\n```\n\nhmm, perhaps that would not be as good as I'd thought\n\nIn reply to: 257421985 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:739 in a12387b. \n. :shipit:\n. :shipit:\n. :shipit:\n. This is also partly covered by #1238.\n. Of note: The path will be stored transformed (!), and must be detransformed before draw lest we double transform it.\n. Design task: This overlaps heavily with #1177.\n. Met with folks on the Direct2D team, and came away with a couple take-home points:\n- Some blend modes will be easy, and we can use the basic composition modes (on DrawImage) and per-primitive blending modes for some subset of the Porter-Duff blends.\n- Other blend modes require a full readback of the buffer, and will be non-performant.\n- CGLayer is best implemented in terms of ID2D1Layer, but failing that, ID2D1CommandList would not be a bad way to go.\n- Do not use ID2D1Layer for alpha compositing, it is very expensive. Instead, use brush opacity or bitmap opacity. It's a little more for us to keep track of, but it's more performant.\n. Done in #1368 .\n. Blocked by #1124 \n. Right now, greenlines are being generated manually:\nps1\ngci TestIm* | %{\n    magick compare -highlight-color green -lowlight-color white \"reference\\$($_.Name)\" $_.Name -compose src Compared_$($_.Name)\n    magick montage -label \"Reference\" \"reference\\$($_.Name)\" -label \"WinObjC\" $_.Name -label \"Diffs\" Compared_$($_.Name) -tile 3x1 -geometry +0+0 \"FINAL_$($_.Name)\"\n}\nFuture work: Generate greenlines automatically.\n. This completed as of b67d620.. I do love some good std::extent<T>.\n. :shipit:\n. :shipit:\n. @msft-Jeyaram Can you note the places in QuartzCore that were broken by CGImage?. Correct!\n. This works properly in CGD2D right now, as of the #1239 + #1729 double-tap combo. We can close it since it's solidified in CGD2D, right?. bbowman:bbowman/NSUrlSessionIsTheGiftThatKeepsGiving \ud83d\ude06 \ud83d\ude06 \n. :shipit:\n. Reopening as per #2892.. :shipit:\n. :shipit:\n. @edvv Thanks for the report.\nThe Objective-C runtime provides sel_isEqual for selector comparison. Since selectors can be emitted in different modules and transformed at runtime, == comparison for SEL is ill-formed.\nThat having been said, it probably works differently on WinObjC due to type-dependent dispatch. A selector with a type encoding (which you'd see emitted for a method body) is pointer-inequal to a selector without one (the sort that is emitted via @selector(...) syntax).\nobjc\n- (void)hello:(int)arg {\n}\n... @selector(hello:) ...\neffectively emits:\n``` objc\nstruct SEL $hello$t = {\n    \"hello:\",\n    \"v12@0:4i8\"\n};\nstruct SEL $hello$u = {\n    \"hello:\",\n    NULL\n};\n```\nand a comparison between them equates to &$hello$t == &$hello$u.\n. Closing this as resolved/won'tfix. We'll rely on the Reference Platform documentation for sel_isEqual and selector comparison here. :smile:. Hi @sakrist,\nThanks for the report!\nThis is a duplicate of #1140.\nFeel free to pile onto that issue or speak up if it doesn't sound like the same root cause.\n. Yep, sorry!\n. Tested manually (since we cannot add compileable tests for it).\n```\nstruct LOL {\n};\nstruct CFEatMyShorts : CoreFoundation::CppBase {\n};\nTEST(Shorts, EatingWorks) {\n    CFEatMyShorts::CreateInstance();\n} \n1>E:\\src\\WinObjC\\Frameworks\\include\\CFCppBase.h(110,9): error : static_assert failed \"CoreFoundation::CppBase cannot be used with types that do not derive from __CFRuntimeBase.\"\n1>         E:\\src\\WinObjC\\Frameworks\\include\\CFCppBase.h(134,16) :  note: in instantiation of function template specialization 'CoreFoundation::CppBase::CreateInstance<>' requested here \n```\n. ### Plan\nNSCache is specified as automatically evicting objects when there is memory pressure. Windows offers a high-level overview of application memory usage through Windows::System::MemoryManager.\nNSCache can subscribe to the AppMemoryUsageIncreased and AppMemoryUsageDecreased events and implement a final line of defense against cache bloat.\nOpen Questions\nI'm not sure what the best eviction approach is; perhaps there can be a global maximum object count across all caches? It'll be effectively infinite when the application's memory usage is Low, medium when it is Medium and low when it is High.\nIf we assume that 100,000 objects across all caches is generous, we can evict objects from caches opportunistically (based on least-recent-use) until we come below that limit on a memory change event. Which caches get hit?\nHow does size factor into this? Object \"size\" is an ill-defined notion--it has no bearing on the true size in bytes of memory the object occupies--so it cannot be used as a good eviction heuristic under memory pressure. Still, though, \"expensive\" items are expensive regardless of what that expense truly means.. If we hit the High usage level, we could simply evict all objects from all caches. That's a very heavy-handed approach.. @triplef \nIt looks like the Windows Resource Manager isn't engaged for applications on Desktop, even those subject to the 32-bit 2GB address space limit (!). That complicates things significantly for NSCache.\nThe official recommendation we've received is (paraphrased):\n\nLet the application go to swap. The system will swap you as necessary.\nIf you really want to do this, you'll have to poll for the working set on your own and void your caches when you believe it to be necessary. Remember that other applications will have a different view of \"free memory\" than you do, and might expand their use to consume the recently-freed memory.\n\nWe had a few discussions about adding this functionality to WinObjC, but didn't come up with a good conclusion. There's no place in Foundation that would truly \"fit\" a memory polling API, and we would need to expose knobs for frequency and limits (what's the absolute maximum, where do we make the \"high\" cutoff, \"medium\", ...). Additionally, any solution like that would need to interoperate with the Resource Manager on constrained platforms (phone) so that it doesn't make conflicting or overriding decisions.\nThat brings me to my recommendations! It's not the best solution, but you could do the following:\n Keep track of every NSCache you allocate\n Poll the application's working set through supported win32 store-partition APIs\n* Call removeAllObjects explicitly on caches until you cross below the limits you set.\nIt may also be worthwhile to investigate the /LARGEADDRESSAWARE linker switch. It won't help the caching issue, but it will give you more headroom (up to the whole 4GB available to a 32-bit process) before you fail due to address space exhaustion!\n\n\nWOCCatalog with /LARGEADDRESSAWARE\n. t;ldr this will have to be a WinObjC caveat :frowning:. Closing. LOL.\n. :shipit:\n. Refs #1268.\n. @rajsesh-msft @aballway tests have been added!\n. :shipit:\n. Adding @jaredhms.\n. > _CTFramesetter* ret = [_CTFramesetter alloc];\n\nthese are not truly objective-c things, they are just reference-counted data containers.\n\nIn reply to: 259515294 \n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:83 in e0b809d. \n. Before you merge, please make sure you explain what happened in CTFramesetter in the commit message.\n. :shipit:\n. :shipit:\n. I forgot to add a few test files. That's been fixed.\n. The work backing this is tracked by #1391. Image interpolation is in CGD2D as of #1557, and will merge into develop when CGD2D does.. :shipit:\n. Bypassing CI builds as this change does not touch built collateral.\n. :shipit:\n. I do not believe it changed after conflict resolution.\n. Please hold off on this review: it requires another merge to build.\n. Okay, this is safe for more review. :P\n. :shipit:\n. This will be built as part of a test over the merge PR, #1354.\n. :shipit:\n. @msft-Jeyaram You may ignore the Font test failures.\nThey will be fixed when https://github.com/Microsoft/WinObjC/pull/1354 merges.\n. Can you reduce this change footprint to only the actually-touched lines?\nThis file will be churning a lot when ux/uxe merges in, and this would not be a helpful conflict marker location.\n. :shipit:\n. Specifically: message sends to nil which return floats or uniform float aggregates will return garbage values on ARM.\nRoot Cause\nobjc_msgSend zeroes out r0 and r1 if r0 is nil, but it does nothing for d0-d3.\nFix\n``` diff\ndiff --git a/msvc/objc_msgSend.arm.asm b/msvc/objc_msgSend.arm.asm\nindex 3b29c96..90e95ed 100644\n--- a/msvc/objc_msgSend.arm.asm\n+++ b/msvc/objc_msgSend.arm.asm\n@@ -89,6 +89,10 @@\n #line DBG_SKIP\n     movs  r1, #0\n #line DBG_SKIP\n+    ldr r2, =LZeroVFPRegisters\n+#line DBG_SKIP\n+    vldm r2, {d0-d3}\n+#line DBG_SKIP\n     mov   ip, lr\n #line DBG_SKIP\n     b     %5f\n@@ -172,5 +176,7 @@\n     EXTERN SmallObjectClasses\n LSmallIntClass DCD SmallObjectClasses\n+LZeroVFPRegisters DCD 0, 0, 0, 0\n+\n #line DBG_SKIP\n     END\n```\nHowever, I have not had time to validate this fix.\n. On the reference platform, Clang emits an if(unlikely(!receiver)) { memset(&dest, 0, sizeof(dest)) } before every stret-possible message send.\n. Without a compiler fix, we cannot address the general case here.\nWe can, however, address the <=24-byte VFP aggregate case and the single floating point value cases.\nSince getting a memset(0)'d struct from a nil message send is relatively new (compared to the rest of Objective-C), the real bug is that a single float or double does not get cleared on ARM. Fixing this should be sufficient for most cases.. It turns out that we can't fix this in libobjc2.\nAssuming the following:\nobjc\n@interface X\n- (T)message;\n@end\n...\nT value = [x message];\nFor non-pointer-sized aggregate returns, the Mac Objective-C codegen shipped with clang emits code like the following:\nobjc\nT value;\nstatic T _global_T_zeroValue_1; // zero-initialized by virtue of being static; C++ ctors called.\nif (likely(nil != receiver)) {\n    objc_msgSend_stret(&value, x, @selector(message));\n} else {\n    memcpy(&value, _global_T_zeroValue_1, sizeof(T));\n}\nWhereas our code generator--and, indeed, clang's Mac codegen before iOS 5.0 or 6.0--emits code like this:\nobjc\nT value;\nif (likely(nil != receiver)) {\n    objc_msgSend_stret(&value, x, @selector(message));\n} else {\n    T *temporary = alloca(sizeof(T)); // <- never initialized\n    memcpy(&value, temporary, sizeof(T));\n}\n// else: nothing?\nSince we never end up in objc_msgSend*, we don't get a chance to stomp the return value with nil.\nFor pointer-sized returns, the check is never made.\nThis may be a bug in CGObjCGNU. The comment here indicates that it should \"fill in the 0 value\".\nHowever, it follows up by saying\nobjc\n  // The language spec says the result of this kind of message send is\n  // undefined, but lots of people seem to have forgotten to read that\n  // paragraph and insist on sending messages to nil that have structure\n  // returns.  With GCC, this generates a random return value (whatever happens\n  // to be on the stack / in those registers at the time) on most platforms,\n  // and generates an illegal instruction trap on SPARC.  With LLVM it corrupts\n  // the stack.\nAs such, I'm bumping this to Area-Dev Tools and SubArea-Compiler.. :shipit:\n. :shipit:\n. These will be tested by #1348.\n. @rajsesh-msft Addressed your feedback! I added a comment on the geometry cloning and simplified Clip() a little.\n. This will be tested by #1348.\n. :shipit:\n. This is a relatively minor optimization, it doesn't need the CGD2D-Blocker label.. Since we have to interoperate with windows.h consumers, we must share its definition of BOOL (n\u00e9e int); otherwise, translation units built with one set of headers would be ABI-incompatible with ones built from a different set of headers.\n. Discussed strategery for transformed geometries and Simplify; Clocking until then. #Resolved\n. \ud83d\udd65 . :shipit:. Is it safe for us to redistribute MSNeoGothic.ttf? #Resolved\n. Can you add it to LFS?\n\nIn reply to: 260755904 \n. :shipit:\n. :shipit:\n. Jeyaram completed this.. :shipit:\n. :shipit:. This resolves the path test failures. It doesn't solve the ones unrelated to missing resources.\n. @ms-jihua I have a different set of failing tests on my machine, possibly due to changes in 10.11 vs 10.10.\n```\n[  FAILED  ] NSURLSessionConfiguration.defaultSessionConfiguration\n* SSL/TLS default version changed on 10.11\n[  FAILED  ] NSURLSessionConfiguration.ephemeralSessionConfiguration\n* SSL/TLS default version changed on 10.11\n[  FAILED  ] NSURLSessionConfiguration.backgroundSessionConfigurationWithIdentifier\n* SSL/TLS default version changed on 10.11\n[  FAILED  ] NSURL.URLStrings\n2016-11-16 12:50:21.885 Foundation.UnitTests.exe[12839:790724] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFDictionary setObject:forKey:]: attempt to insert nil value (key: standardizedURL)'\n[  FAILED  ] NSBundle.Paths\n* It's looking for a Mac App Store receipt in the test bundle.\n[  FAILED  ] NSDecimalNumber.Subtraction2\n* Perhaps a legitimate failure.\n[  FAILED  ] NSProcessInfo.NSProcessInfoGetProperties\nNSProcessInfoTests.mm:60: Failure\nValue of: processInfo.processName\n  Actual: Foundation.UnitTests.exe\nExpected: processName\nWhich is: Foundation.Unit\nProcess name should be equal\n What on earth?\n``\n. As part of the aforementioned future solution, we could switch back toOnDemand` (and reap all the savings.)\n. Definitely don't do it tonight! I've worked around it for CoreGraphics.Drawing.UnitTests.\n. :shipit:\n. Please make sure to reword the commit to say \"On Load\" instead of \"On Demand\" when you press Squash!\n. Ref sample code from #599\n. @aballway has looked into this and gotten them running.. This was a blocker for #1300.. @aballway is handling this as part of PR #1503.. Depends on #1421.\n. :shipit:\n. :shipit:. I do wonder if it is better to simply include the necessary headers. After all, you cannot actually use UIPasteboard without having imported the rest of the foundation headers, no matter how hard you try. #WontFix. :shipit:. Future Directions\n We may not want to stick with the single pixel difference model; providing a commandline option to toggle the diffing mode would be the first step to migrating away.. Updating this issue to track work in #2673.\nUnderlying bug\nUIDevice tried to parse the package's family name (unique for every package) as a GUID. This was wrong for two reasons:\n1. It is not guaranteed to be a GUID\n2. It uniquely identifies a single package, not a publisher\nResolution\nReplace the awful existing implementation with one that derives an identifier that is truly vendor-specific.\nApplications deployed after #2673 merges will find their vendor identifiers changed.. No need; we use Github's Squash Merge option now.\nThanks!\n\nIn reply to: 262329775 . :shipit:. The crash is due to a stack smash introduced here; instead of reading into outBufferData we are reading into the pointer to outBufferData and its following parameters.\n@bbowman. The missing button text is due to #924.. Adding TODO in the merge from develop into CGD2D; UIPasteboard.mm:397.\nNo SHA1 to reference right now.. @msft-Jeyaram I fixed this in a branch because I thought it was the cause of my over-release.\nIt wasn't.. :shipit:. Since this pull request touches the WIC image source function, you could also put in a fix for the COM over-release!. Whoops, I had it backwards! Carry on :+1:. @jaredhms I kicked off a build; didn't see the assignment :). I'm concerned that when we get another compiler header/lib drop we'll stomp this change sight unseen.. :shipit:. The build failed because the test actually is relying on an internal feature. @msft-Jeyaram  :(. Abandoning PR.. > / static / DrawingTestConfigImpl* DrawingTestConfig::Get() {\nYes.\nThis is a static member function on DrawingTestConfig.\nSince we cannot annotate it as such via classical means, this comment serves to illustrate that it is static.\n\nIn reply to: 263743436 \n\nRefers to: tests/UnitTests/CoreGraphics.drawing/EntryPoint.cpp:93 in f000645. . Fallout addressed here.. Today I learned that this is valid! According to ISO C++03 5.3.4[expr.new]/15, even!. :shipit:. Files with explicit conflicts:\nConflicts:\n    .gitattributes\n    Frameworks/CoreGraphics/CGContext.mm\n    Frameworks/CoreGraphics/CGGraphicBufferImage.mm\n    Frameworks/QuartzCore/CALayer.mm\n    Frameworks/UIKit/StarboardXaml/CompositorInterface.mm\n    Frameworks/UIKit/UIImage.mm\n    Frameworks/UIKit/UILabel.mm\n    Frameworks/UIKit/UIPasteboard.mm\n    Frameworks/include/CACompositor.h\n    Frameworks/include/CGContextInternal.h\n    Frameworks/include/CGGraphicBufferImage.h\n    Frameworks/include/CGImageInternal.h\n    build/Tests/UnitTests/CoreGraphics/CoreGraphics.UnitTests.vcxproj. @jaredhms What app validations would you recommend for niche compositor features we may miss in a CG-centric pass?. :shipit:. @msft-Jeyaram Thank you. Here are a couple greenlines showing how our transparency layer support stacks up against the reference platform:\nSet Alpha + Begin Layer\n\nThe yellow rings here show that the edge antialiasing modes are different between the reference platform and Direct2D. No important pixels were removed (red) or added (green).\nCGContextBeginTransparencyLayerWithRect(... {150, 150} rect in center ...)\n\nAs above.\nSet Shadow + CGContextBeginTransparencyLayerWithRect( { 100, 100 rect in center } )\n\nThis demonstrates the math mentioned above. The red ring around the central square shows that the reference platform outset the clipping region by one extra pixel on each side, as we are missing that edge (red) from our image. The shadow fringe differs in intensity and is shown in full yellow.. Growing by 2x2 in addition fixes the greenline from the above test, as well as other blur and shadow offset factors.. Hi @edvv! Thanks for the report.\nJust to make sure, you're talking about the combination of CGContext(EO)?Clip and the CT+CG glyph/frame/line drawing APIs, correct?\nIf so, we're mirroring most of the Cairo context's state into the text renderer and we appear to have missed the clipping/masking parameters.. This is fixed in develop with the merge of #1892.. When you merge this, please make sure to use the [Merge] Option. This will make conflict resolution in the CGD2D branch easier, as the commits have been cherry-picked.. The Rebase option may work as well.. :shipit:. :shipit:. :clock1:. This may also be good to move into its own file, mirroring @ms-jihua's work on the DWrite wrapper refactor in #1504. #Resolved. Specifically, the class; sorry. #Resolved. @aballway will definitely have more insight here. . :shipit:. We may want to contribute this upstream. #Closed. :shipit:. :clock12:. This requires #1529.. This is required for proper grayscale image mask support for #1528.\nGrayscale masks cannot be generated in the RGBA colour space. #Closed. @msft-Jeyaram @aballway The scope of this pull request has grown and it requires re-review. #Closed. This likely fixes #1287. #Closed. @aballway @msft-Jeyaram\u00a0please review. This blocks #1528.\u00a0@rajsesh-msft may also be interested! #Closed. Merged manually due to passing build.. I think it is part of the scope of this pull request!\n #ByDesign. @aballway When this is signed off, I will merge it into the branch manually.I'll build test there.\nThe tests will fail right now because CoreText has a Lazy uikit class load \ud83e\udd15 . Oh you did a build anyway, whoa. :shipit:. This does solve the issue? Neat.. It would be very cool to add\u00a0TraceLogging or ETL to libobjc2.\nIf we:\n\nMove the two resolve/load loops into libobjc2.\nFold them together.\nPerhaps pass an HMODULE instead of\u00a0a bucket of pointers.\nAdd TraceLogging.\n\nWe could get:\n\nFine-grained per-module class-level performance metrics.\nAn understanding of which frameworks are spending a long time in +load.\n\nThe major culprit here is likely to be +load methods.\n. @jaredhms Can you check on this since the merge of #1923? A lot of objects may have been going through the slower CFRelease path, which @ms-jihua fixed.. Reopening as per discussion with @rajsesh-msft; issue has been repurposed to track UI bug.. @tadam-msft I've seen this on a Surface Book too, and in a different application (CGCatalog). I believe there is something wrong with our layer scaling code.\nIn light of that, it is worth investigating further.. @jaredhms \nIt looks like the issue in this bug is different from what I'm seeing.\nThis bug is simply that WOCCatalog's shadow page is hardcoded to render to a width of 600 points.\nThe bug I am seeing is that a view with a drawRect: displayed on a non-1.0-scale device is rendering at 1.5x width but 1.0x height, but only above certain widths. (???). I wrote my issue up in #2084.. This is still mentioned from CGContext by issue number.\n@msft-Jeyaram can you please confirm this is fixed?. @msft-Jeyaram What's happening with this? Should we clean it up and rebase it on develop?. @rajsesh-msft IWNews launches and loads its config properly. It doesn't look like it archives (via keyed archival) any data at runtime, however!. Tracked in gnustep/libobjc2#32.. Fixed with #2869. (I signed off, just cheekily used the clock emoji \ud83d\ude09). :clock1:. Note: When we merge, we should update the commit message / take one from the commits in this PR instead of the PR title.. :shipit:. The other issue on this is #869.. @rajsesh-msft Addressed the annotation concerns. These functions are used heavily in UIKit and QuartzCore. Validation was performed with Canabalt and Islandwood News.\nSince many of them require contexts (and some of them require non-bitmap contexts) and our UI testing infrastructure is not up to par, it is difficult to unit test these functions.. Merging without build since there's no collateral covered by the build.. @jaredhms yeah, I think it came in through UIKit.h->CoreGraphics.h->CGBitmapContext.h :)\nThanks!. Verbal sign-off from @msft-Jeyaram.. Build passed as of 9958311. Squashed into single merge and rebased.\nNo diffs. Merging.. Could font loading conceivably happen in -[UIApplication init]? It must be called by all subclasses, and it happens during -new but before the user's code.. We gain only separation of responsibilities :smile: only in an idealistic way. #WontFix. This property is only respected when the label is smaller than the text would require at its default point size.\nTo quote the reference documentation,\n\nIf this property is set to true, and the text in the text property exceeds the label\u2019s bounding rectangle, the label reduces the font size until the string fits or the minimum font scale is reached.. In the image, it looks like its text height matches its view height and was therefore scaled down?. That is a significantly better screenshot!. :shipit:. yusssss. I wrote such a bad test!. * Bitmap context is initialized with 0xABABABAB.\n We draw with alpha into it.\n We enumerate its bytes with an uninitialized counter, occasionally passing the test because (garbage) > bytes.size()\n We do not properly calculate the number of bytes per pixel (it should be pow(2, (bpp >> 3) - 1)) (because pow(2, 0) == 1 for 8bpp)\n On top of all that, the Alpha None tests might even be getting premultiplied THANKS D2D. Fixed.. No it doesn't.. This issue was filed due to a misunderstanding.\n\nThe compiler already uses setObject:forKeyedSubscript: instead of setObject:forKey: when subscripting a mutable dictionary.\nThe reference platform specifies that dict[key] = nil; remove the object keyed by key from the dictionary dict.. This will require libobjc2 to be rebuilt with the updated changes from @pradipd's exception fix.. This is a dependency of #1634, because __CGContextDrawingState needs a shareable (copyable) reference to a CGFont. woc::unique_cf is unsuitable for this purpose.. Because of template type inference, it's possible to do this:\ncpp\nauto cf = woc::MakeStrongCF(CFStringCreate(...))\n// typeof(cf) = woc::AutoCF<CFStringRef, CFLifetimeRetaion>\nHowever, that reduces clarity. I suggest that an explicit <CFStringRef> appear on either the left or right just to be safe.\nThoughts?. CC proposal, no impl change. I agree CFStringCreate was a bad example! Maybe more like, auto x = Make(CFLocaleCopyName). Merged via squash and rebase (for cherry-pick.). :shipit:. ImageIO you say?. Running builds for validation's sake.. oops, this is a winobjc-specific test :cry:. tests will fail until #1729 merges.. With #1727, all of the enabled drawing tests pass!. Therefore, this branch will merge into the merge branch.. > \nI'm not 100% happy that this has to go through the secret internal sink. I do understand why though.\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:346 in 6c1aca3. . @bbowman Would you mind taking a look now that this disables the test?\nWe'll keep #1737 open to track the bug fix.. >     CGDataProviderRef provider = CGImageGetDataProvider(img);\n@jaredhms it's a CF \"Get\" function, they should never be released!\n\nIn reply to: 273931892 \n\nRefers to: Frameworks/GLKit/GLKTexture.mm:311 in 8f54c08. . >     CGDataProviderRef provider = CGImageGetDataProvider(img);\n@aballway If you want to be awesome, you could make these woc::StrongCF and delete all the manual releases.\n\nIn reply to: 273935543 \n\nRefers to: Frameworks/GLKit/GLKTexture.mm:311 in 8f54c08. . :shipit:. It looks like we might want to go with the attribute on this one, since there is no NS_RETURNS_AUTORELEASED.\n__attribute__((ns_returns_autoreleased)). Oh, it looks like reset is fine. operator= could do with a fix, so I'll do that quicklike.. We never use operator=, and all new code should use StrongCF/AutoCF.. Anything else like this in the code?. The CT code, that is.. This is due to an over-release in the CALayerAppearanceTests. Assigning to @tadam-msft for triage.\nProximal cause: Overboard use of __block causes the nested callback blocks to not retain any referenced objects; some objects are autoreleased and some are manually released before their time on earth is up.. How'd this happen? Are we using a NSDictionary somewhere a CFDictionary belongs?. Doesn't fix #1758 actually. @aballway lied to me!. Briefly (more on Monday):\nCalling a virtual member function of a COM interface type (here ID2D1DeviceContext) that returns a struct of 2 floats is generating incorrect code.\nMSVC generates (impl)\nAs per AAPCS, the floating point aggregate is returned in the VFP registers.\ncpp\n__stdcall DeviceContext::GetSize(/*implicit this*/) {\n    s0 = width;\n    s1 = height;\n}\nClang generates (call)\ncpp\nstruct two_floats ret, temporary;\nDeviceContext::GetSize(/*implicit this*/, &temporary);\nmemcpy(&ret, &temporary, sizeof(return));\nThe call is generated with a hidden struct return parameter, and the floating point registers are ignored. A warning is usually emitted that __stdcall is ignored for ARM.\nAttempts to reproduce in the same module fail, possibly due to devirtualization.. :shipit:. Ref #1296!. Sorry, nevermind. This is app packaging. :P. As per your comments:\n1. Ideally, we'd unify the paradigms behind AutoCF and AutoId -- AutoId could take an rvalue reference (std::move) and then MakeAutoId/MakeStrongId would be perfect.\n2. Either way is fine; .get() is somewhat clearer. I wish we could have an implicit conversion operator for that expression!\n3. Sweet.. ...\nseriously.. should we use the WinObjC font for this? Or another fojnt with knowable, unchanging metadata?. @aballway we can make one explicitly for the purposes of containing metadata. that might be preferable to updating the WinObjC font in the ~4 places we have it copied.. @aballway if only we had added EXPECT_NO_THROW to those cases that I suggested, we'd know know exactly which line failed ;). Sorry @aballway, I meant \"for the #1723 conflict.\". Sorry @aballway, I actually really meant \"the #1780 conflict\". Why do you have so many issues with the same name?. @henryfox The release build suffered an image failure:\nCGPath.PathApplyDraw image\n\nCGPath.PathApplyDraw Greenline\n\n. On merge, the build status here will cascade to 20170125-merge-develop.. -[UIImage drawAtPoint:] is incorrectly (?) drawing the image with a \"negative size\" to flip it over.\nIt needs to be updated to truly flip the CTM before it draws, just like everyone else has to.\nAlso, pass over drawInRect: and the 9patch support.. This could be correct, actually. The default blur when a NSShadow (which we don't support!) is used is 0. It stands to reason that the legacy APIs would act the same?. This is awful \ud83d\udce6\niOS no longer supports these attributes, so we cannot determine what it looks like on the reference platform. The shadow is completely ignored, even with a deployment target as low as 6.0.\nAs it is not documented what the default shadow blur factor will be, I am closing this as By Design even though it looks awful.\n. In CI build.. The release build appeared to fail for an unrelated reason (possibly #1702); restarting it.. Thanks!. Curious! That should almost never happen. I'll try to repro locally and trace the context stack.. I know exactly what caused this. FIx inbound.. This was the same crash as #1837!. Could this be fallout from #1659? Some resource paths changed.. This is unreproduceable since the merge of CGD2D into develop. We believe that creating one factory per render target in the CGGraphicBufferImage code, instead of one factory per application launch, was causing the device reference to be destroyed every time a renderer went out of scope.. Of note: The 9patch drawing code used to invoke the clipping stack and layer composition 9 times. :). Validated with @2x images as well.. #1501 is solved in CGD2D already, so I checked it off for when it merges.. #1349 is tracking fonts only now. Image interpolation mode is supported as of #1557.. #1391 tracks the work in #1349 for fonts.. (please file issues for anything you're marking as \"you can deal with this later\"; otherwise, we will all collectively lose track of them until the one day where we're like \"hey wait this bug seems familiar ...\"). Woot. Test this on the reference platform. :clock1130: #Resolved. But it will be one more merge conflict when we resolve CGD2D, which touches the same files.\n. Also in CI build :smile:. Submitted these for CI build again.. It looks like these never completed build, but they did submit status updates... @pradipd do you know what happened?\nI'll re-queue them in the mean time, but it was a week ago.... facepalm\nI saw @pradipd's pull request, but didn't put two and two together. Thank you!. Back in CI build again. Sorry @ehren!. Thanks @ehren!. In CI build! Thanks for the quick resubmit, @ehren!. The title of this pill request is now wrong. There were five different bugs here.\n\nAccelerate I depended on 32-bit buffers, but UIImage only returns those as an implementation detail.\n    Fix: Convert the image as necessary.\nAccelerate I did not have a provision for kCGBitmapByteOrderDefault, which iOS returns. It's BE for 32-bit. It was checking \"Big Endian or Else\". Therefore, its formats were backwards.\n    Fix: Add that.\nAccelerate II did not have a provision for kCGBitmapByteOrderDefault, and its formats may have been backwards.\n    Fix: Add that too.\nThe WIC format table introduced in 2212f2a had a typo, inserting an RGB where a BGR was required.\n    Fix: Duh.\nvImage was attempting to do a format conversion via a no-op CGBitmapContext (creating it with data and then converting it into an image). Now that CGImage supports a wide variety of input formats and CGBitmapContext doesn't, this was incorrect.\n    Fix: Use the CGImage API.. The changes in the actual vImage consumption code in Accelerate tests are spacing only.. This is known, and it is due to shadows now being supported. All of the APIs responsible fro this say \"shadows ignored\", but lo and behold, they are not ignored. This is operating as expected for the reference platform ca. 6.0-7.0.. Originally in #1830.. I don't think any header changes are in here.. Enabling D2D debugging reveals:\n\nD2D DEBUG ERROR - A rental threaded interface [00000000] was simultaneously accessed\nfrom multiple threads.. Switching the factory to D2D1_FACTORY_TYPE_MULTI_THREADED resolves the issue; however, it might not be the appropriate long-term fix.. When you commit this, please reword the commit to actually say what changed.. Gated on #1876.. Benchmarks: too noisy to tell, but the difference appears to be negligible.\n\n\n. The change is negligible. Comparing the median runtimes between tests, most changes were <1%. The few that weren't differed by a few hundred nanoseconds (3% at max).. @triplef This is caused by a data loss bug in libobjc2's hash table implementation.\nMicrosoft/libobjc2#1.. That's less of a crash\nand more of a build failure. Can be fixed by changes in #1933.. Oh did it. Oh did it ever.. No dashed line support is problematic: We have support for that with CGD2D. Is there a property that isn't being propagated?. @bbowman Since we changed the gtest API, the interstitial is only used as the base class. Its name does not get embedded anywhere \ud83d\udde1 . All glory to various hypnotoads.. @edvv You're totally right. Thanks for the detailed write up.\nIn light of that, I'm duping this to #1365. There's more info about the compiler side of the bug and some attempted workarounds over there.. @edvv With our compiler/runtime, 32-bit return values that go through the general purpose registers are properly zeroed when the receiver is nil. This is totally expected and per-specification.\nThe x86 implementation of objc_msgSend explicitly clears the x87 floating point register as well, for the objc_msgSend_fpret case. This may not get hit, and that's explained below.\nOn ARM, we may have an issue (not yet determined) where the VFP register set used for returns (S0-S7 or D0-D3) is not cleared in objc_msgSend or an objc_msgSend_fpret equivalent. This doesn't exceptionally matter, agaim because of the below.\nThe kicker: the Objective-C code generator we're using (CGObjCGNU with its objfw personality) explicitly skips the objc_msgSend if the receiver is nil; this means the call site gains the responsibility to clear the VFP registers on ARM or the x87 fp stack on x86.\nSince 32-bit non-floating-point return values are generally returned in the same register used for self, this is fine: eax and r0 both contain nil after we skip the call, and the world remains sane.\nNow, code was added to CGObjCGNU that attempts to clear even complex floating point and struct returns. I can only imagine that this is because OS X 10.5 and beyond, as well as iOS 5 (or 6?), unofficially specify that struct returns from nil receivers are zero-valued!\nIn CGObjCMac, Clang emits a local default-constructed value with static storage duration (memset to 0, which fits in with other static initialization). If the receiver is nil, a memcpy is emitted from this local static value to the final return value. Therefore, it's safe to initialize even a complex struct or floating point value with the return value from a message send to a nil receiver.\nIt looks like CGObjCGNU tried to mimic this: there's a comment stating that it tries to do so, but we have not been able to successfully reproduce that behaviour. It seems broken, but not intentionally so.\nSince the return type is known to the compiler, and there's precedent in both the mac and GNU code generators, this is a safe (albeit fairly new compared to the rest of Objective-C) convenience to provide.\nFinally, this is what I see on my Mac:\nCode\n```objc\ninclude \ninclude \ninclude \nstruct LargeStruct {\n        void* pointers[100];\n        float floats[2];\n        double doubles[4];\n};\nattribute((objc_root_class))\n@interface AnObjectForFun\n@end\n@implementation AnObjectForFun\n+ (void)load {\n}\n\n\n(void)initialize {\n}\n\n\n(instancetype)val {\n        return 0x00;\n}\n\n\n(struct LargeStruct)get {\n        struct LargeStruct mine;\n        memset(&mine, 0xcc, sizeof(mine));\n        return mine;\n}\n@end\n\n\nint main(int argc, char argv, char envp) {\n        struct LargeStruct whatever;\n        memset(&whatever, 0xdd, sizeof(whatever));\n        whatever = [[AnObjectForFun val] get];\n        fprintf(stderr, \"done\\n\");\n}\n```\nframe #0: 0x00001eca zr32`main(argc=1, argv=0xbffffa7c, envp=0xbffffa84) + 330 at zero_return.m:36\n   33           struct LargeStruct whatever;\n   34           memset(&whatever, 0xdd, sizeof(whatever));\n   35           whatever = [[AnObjectForFun val] get];\n-> 36           fprintf(stderr, \"done\\n\");\n   37   }\n(lldb) p whatever\n(LargeStruct) $0 = {\n  pointers = {\n    [0] = 0x00000000\n...\n    [99] = 0x00000000\n  }\n  floats = ([0] = 0, [1] = 0)\n  doubles = ([0] = 0, [1] = 0, [2] = 0, [3] = 0)\n}\nAnd this reproduces on both 32-bit and 64-bit :). @jaredhms Crashing is on par with the reference platform. It also allows forwarding if the developer did incorrectly not implement respondsToSelector:. @rajsesh-msft this may be a regression from a60098da397d0a4aa39e213866bc5d1c41d4503c; the Path Mapper is returning the application root instead of the writable path root for ./. Wow, we're still treating selectors as character strings? That'll never work.\n(that is the complaint here, right? it looks like it should work with that fixed.). The documentation for NSDataBase64Encoding64CharacterLineLength states:\n\nSet the maximum line length to 64 characters, after which a line ending is inserted.\n\n(emphasis mine)\nIt looks like our version has performance issues, but instead of asking for newlines and then removing them, you could save a lot of time by simply not asking for newlines.. Oh! I was just looking at that code. We might have a Default Value mismatch between the various CR/LF options.\nIn the interim, does removing the newline option unblock you? :smile:. @rupertdaniel can you share the debugging output from context create time? We should be printing out the failing context parameters.\nWhen you don't pass data, CGBitmapContext should accept almost any format. It's very strange that it's not!. Good catch, @msft-Jeyaram.. @msft-Jeyaram I have work to fix this here: https://github.com/DHowett-MSFT/WinObjC/tree/201701-0bpp\nIt has not been submitted for review.. (edited for formatting). @msft-Jeyaram nah that wasn't me: look at how the code is formatted! clang-format skips #if 0 blocks; evidence says this is from before we all joined :smile:. right: it would behoove us to avoid merging anything until 2027 is merged with test fixes.. Do you have a concrete example of this?\n. Oh no. I feared this would happen.\n@aballway @MSFTFox Text drawing and Antialiasing tests are superexploding.. In CI build again.. @msftfox let me know that the builds will fail (as evidenced by them failing :P). This commit reduces the number of failing tests to 1.. @msft-Jeyaram Some of the rectangle clearing tests are failing.\n\n\n. In CI build!. Hmm.. @msftfox the following test categories fail on the build machine:\nTextAA_0_2_2_2\nTextAA_1_1_0_0\nTextAA_1_1_0_1\nTextAA_1_1_0_2\nTextAA_1_1_2_0\nTextAA_1_1_2_1\nTextAA_1_1_2_2\nTextAA_1_2_2_2\nTextAA_2_0_0_0\nTextAA_2_0_0_1\nTextAA_2_0_0_2\nTextAA_2_0_1_0\nTextAA_2_0_1_1\nTextAA_2_0_1_2\nTextAA_2_0_2_0\nTextAA_2_0_2_1\nTextAA_2_0_2_2\nTextAA_2_1_0_0\nTextAA_2_1_0_1\nTextAA_2_1_0_2\nTextAA_2_1_1_0\nTextAA_2_1_1_1\nTextAA_2_1_1_2\nTextAA_2_1_2_0\nTextAA_2_1_2_1\nTextAA_2_1_2_2\nTextAA_2_2_0_0\nTextAA_2_2_0_1\nTextAA_2_2_0_2\nTextAA_2_2_1_0\nTextAA_2_2_1_1\nTextAA_2_2_1_2\nTextAA_2_2_2_0\nTextAA_2_2_2_1\nTextAA_2_2_2_2\nThe \"default\" cases (2) are not unexpected, though they do represent true test failures. The non-default cases worry me.\nWe've known for some time that the build machines have different font rendering characteristics than our development machines, but we're not certain why. @aballway may have some insight.. Also, it does this rendering in layoutSublayers.\nCAShapeLayer is written as though CALayer didn't provide callbacks for subclasses to render themselves.. Identified another bug with this approach:\nWhen you use a CAShapeLayer, you are expected to set a contentsScale (as far as I can tell) to match your desired rendering scale; it defaults to 1.0 even when the screen is !1.0.\nIf you set the screen scale appropriately, the sub-layer extends beyond the bounds of the parent layer instead of rendering at higher depth.. This should be able roll into #2043: If CGPathCreateCopyByStrokingPath upholds its end of the bargain, this is already implemented.\n. Completed, and information generated.. The work here is ~minimal. I have a prototype going.\nMajor issue: We are using the following unsupported affordances:\n\nU_SHOW_INTERNAL_API (these APIs are still exposed and can be used)\n::BasicTimeZone and friends (winicu exposes no C++ APIs). @pradipd the xcvars are used for Info.plist parsing. The user can have multiple info.plist files for different configurations, and different configurations can have different variable maps, and info.plist supports interpolation of those variables.. Ah, I see. I didn\u2019t see that it allowed freeform input.\n. Thanks for filing this. I wonder if the same thing happens if you use CGContextFillPath instead of CGContextClip + CGContextClearRect!. @rajsesh is this for NSArray?. This is perhaps the funniest thing I've seen all week.. You're going to love this.. Potential fix:\n\nUse an NSHashTable with weak pointers -- this will obviate the need for a destruction listener.\nUse an NSCache -- this will allow for proper behaviour under constrained memory.. I think the drawing are very cool but they are unnecessary burden on our repository and LFS storage. They have to be downloaded and kept up to date and they don't test the feature at hand.\nThey're actually just testing rendering rectangles that are next to eachother in different layouts, which is not a CGRectDivide test. #Resolved. Having expected values for the small and big split is the only valid way to test rect divisions. It's pure math! If we regress rect drawing, we will have an invalid failure on \u201crect division\u201d.\n #Resolved. You should fully revert CGContextDrawing_FillTests.cpp; right now you have introduced a conflict on a practically-unchanged file.. The tests in this pull request were actually failing with #2027 merged.. @rajsesh-msft if this passes the build, I'd like to merge it tonight. Thoughts?. It looks like it's loading JPEGs through the PNG loader.\nGLKit isn't doing any format determination. It could use UIImage to guess the format, or it could detect the format itself.\nThe reference platform documentation claims that it supports all formats supported by the ImageIO framework. Perhaps it should be using CGImageSource?. @rajsesh-msft beat me to it!. @msft-jeyaram UniChar isn't shouty; UNICHAR would be!. @mukhole I don't know why this is necessary. We are bumping hundreds of binaries for an unnecessary change.. Mention #2112 in #2580's commit message and get the fun fun stuff for free!. False alarm possibly.. This is in CI build; git-lfs is being particularly slow today.. @rajsesh-msft if you end up being the one to merge this (I'll try to monitor the build status!), would you mind copying the Pull Request body into the squash message body?\nThanks :). The doc comment format here matches that used in CoreFoundation (!). That can't be good.\n2017-03-01T23:15:21.8217323Z ##[error]frameworks\\coregraphics\\cgcontext.mm(482,0):\n  Error C1001: An internal error has occurred in the compiler.. @msft-jeyaram: Whichever of this pull request or #2133 merges second will have to add error handling to __CGContext::ClearRect. @msftfox: Whichever of this pull request or #2019 merges second will have to endure a merge conflict.. Ugh, the build agent is stuck downloading LFS file again.. The latest change here adds this cool thing:\nE/WIL: E:\\src\\WinObjC\\Frameworks\\QuartzCore\\CALayer.mm(583)\\(null)!01E2C3CE:\n    (caller: 01E2B337) FailFast(1) tid(5438) 8000FFFF Catastrophic failure\n    Msg:[Failed to render <CALayer 13A3A984>:\n    Error Domain=kCGErrorDomainIslandwood Code=2 \"(null)\"\n    UserInfo={hresult=-2003238902}] [-[CALayer display]]\nThe important bit being hresult=-2003238902 :smile:. This is a duplicate of #1976.. The new test images look like:\n\n. @rajsesh-msft ping! :smile: I'd like to make sure I address your concerns. Also, does this allow you to enable @msft-jeyaram's arc clearing test?. Does this hold on the reference platform? I have a post-it on my desk saying that we should support NULL colors; that implies to me that it's slightly more complicated than ignoring them.. Funny enough, the comment isn\u2019t even correct.\n. Stretch goal: Augment this for ARM generation.. @ashvarma the text field below the download table should be populated with details about the task when you cancel it and attempt to resume it. Could you share those details?. This is by design; the default URL in the Foundation URL Session test view controller gives a very, very small response (47 bytes). By the time the download is created, it's finished. If you cancel it before it starts, the headers specify that it cannot be resumed.. I think at 5.0, the vertex misalignment and clipping are is expected. The label has a white background and overlaps the rendered view, and I can reproduce this from all the way before the CGD2D merge.\n@henryfox It looks like rounded rects are broke as. Did we have collateral in CoreGraphics.Drawing to catchy this?. \n. @ashvarma I looked at the Kerning page for the first attempted 1702 release, and didn't find anything unexpected. Can you share a screenshot of the behaviour to assist in triage? Thanks!. This page uses UILabel extensively, and UILabel uses CoreText for sizing.\nIt looks like _DWriteGetFrameSize is returning a size that is smaller than the requested size, but it's too small to contain the characters.. Also, I can see the red reference text in my local testing.... @edvv Thank you; this is a whole lot of really good information. We have an ongoing code review fixing the large/small sweep arc and start point bugs at #2136.\nAre you creating this image with raw CG calls, or are you using your own translation layer?\nIf you are using straight CG and you don't mind sharing that code, I would love to integrate it into our test suite so we can track future regressions in this area.\nI may break this into multiple issues and retain this one for arcs. If so, I'll mention you so that you get notifications.. @edvv I believe these to be fixed with the merge of #2274, #2221, and #2136.. Also nit: When you merge this, please fix the name to be GLKit, not GLKKit. I have renamed this pull request. Please add \"Fixes #2150.\". @msft-Jeyaram please do not do that. We have strong, expressive string types for a reason.\nNSString is bridged directly to CFStringRef; unless you want to deal with UTF8<->UTF16 issues like #1875 and #1891 I would implore you to use CFString.. I take it that\u2019s a no? :P\n. By george, you've blown it up!. Why did this require all the existing projected libraries to be rebuilt?. @ms-jihua You may have an old .obj laying around; clean the offending project and it should work :smile:. Ping!. Ping 2: The Pingening!. Ping 3: Ping Harder\n@ms-jihua @msft-Jeyaram. @ms-jihua thank you \ud83d\udcaf\nI'm going to diagram this specific implementation, as well as how the command list blending operations work.. The incoming fixes will make sure that the exception reason is preserved in heap dumps. We can open a new issue to track future work, such as including the userinfo and the like.\nThe Windows Error Reporting APIs don't offer the richness we're seeking here, so this might be a platform ask.. To whomever picks this up while I am gone: I have a partial fix here.\nIssues:\n There are still leaks.\n I could not get the memory profiler to show me proper Objective-C call stacks with VS2017.\n* It looks like we are still leaking the collection that comes back from WRLToNSCollection; the code in NSURLProtocol_WinHTTP should be autoreleasing it, but maybe the class that is holding on to it is not releasing it.. FWIW we have 2 g_logTags, both in CoreText; we have 182 TAGs :). strangely, it marked some of my new comments as outdated.. We may have an issue on this already; the main thread is never set up in the unit tests nor is the main run loop spun because UIKit handles that ( \u2639\ufe0f ). We introduced this dependency on purpose. Let's chat; I don't think these tests should be disabled.. @bbowman generally, I agree. IwMalloc and friends, however, are an extension API that apps can consume.. (specifically on OS X). Do we have any tests for stroking with a pattern brush? #Resolved. This was working fine on my machine; did it regress as part of #2245?. nit: because this is a set, the set will set set. @bbowman I fully agree, but I don't think that is worth rejecting this hotfix for. :smile:. The documentation states that the \"item\" (and \"row\") properties identify the item or row INSIDE the section identified by \"section\".\n. This bug was caused by a change in the Windows insider rings. In short, images rasterized using the software \"GPU\" device will differ slightly across versions due to a precision change in some emulated shaders.\nThis is being tracked internally. We will likely need to regenerate our test images when the WARP pipeline changes are finalized.. Tentative work on this in my 201611-stroke-betrayal branch. The solution put forth in 201611-stroke-betrayal no longer works; it's of questionable utility to investigate why.. Sorry, I'm having trouble following what's going on.\nIs the superclass in the library? Are both the derived class and superclass in the library?\nIs it a static library or a dynamic one?. Oh! Great find. Yeah, this is another facet of #236 amplified by some legacy decisions made in the GNUstep ABI.\nFor legacy compatibility, the GNUstep Objective-C ABI does not fill superclass slots with class pointers. It instead fills them with class names, which are later populated by the runtime.\nApple ABI\nobjc\nstruct objc_class {\n    Class isa;\n    Class superclass; // <- populated by the linker and fully resolved\n    // ...\n}\nGNUstep ABI\nobjc\nstruct objc_class {\n    Class isa;\n    union {\n        const char* name; // <- populated by the linker\n        Class ptr; // <- resolved at load time\n    } superclass;\n    // ...\n}\nThis allows you to inherit from classes that are not visible at link time, but introduces a hidden loading dependency that requires the equivalent of -all_load.. This may be fixed with #2869, but I'm leaving it open for the time being.. This should be in Foundation or even lower. It's a great opportunity for us to make ObjC/C++ interop better!. @pradipd please move relevant comments to the new issue.. @rajsesh-msft This is exciting!. I wonder how one encodes a file handle; it's a pointer to an ephemeral thing. \ud83d\ude15 . By way of answering my own question: they cannot be coded. Attempts to do so throw an exception unless an NSXPCCoder is used.\nSince we do not support Mach IPC, we will just implement them to throw exceptions.. Updated to properly format. @pradipd, if you place ``` around blocks of code, it will blockquote them.. I am interested in seeing actual performance and disk space usage deltas for this change.. @rajsesh I was hoping I'd get this one :wink:. CFStringHashCString is not the appropriate hash function for NSConstantString data.. Either that, or length is wrong. I know our compiler embeds the length in bytes (not in codepoints!). Pull request renamed. :smile:. (and vice-versa). I wonder if constant strings on the reference platform are stored in NFC or NFD; fully normalized and canonicalized.. Why did the export constants lose their _s?. Oh man, we even checked in the correct reference image.. Oh, this will be resolved with the merge of #2221 here. @MSFTFox was seeing this during some debugging scenarios as well.\n. [updated pull request title to avoid truncation/improve clarity] #Resolved. I don't like exposing the _ things, but it's more ABI-breaking to fix that.. @pradipd We'd need to rev the projections libraries again, as well as all modules using ErrorHandling (since they contain static copies of the error handling functions.) \ud83d\ude26 It would probably temporarily damage incremental build for anyone who pulled the changes down.. @pradipd And thanks. I'm piloting talking to people about commit message guidelines, and I wanted to passive-aggressively try them on for size before I did. ;). I do not believe that the minimum precision changes that causes #2284 could be implicated in a complete loss of textures.. I cannot reproduce this on ARM.. @aballway You should give me the :x: so I can then go dismiss it out of anger :grin: #Resolved. Please reword this title to be concise and imperative. :smile: #Resolved. @rajsesh-msft We can't automate unhandled exception testing. The unhandled exception filter aborts the application, and TAEF/GTest may install their own unhandled exception filters, and any effort to ensure that the uncaught exception filter gets called will destroy the stack scope of the test.\nWe could implement something based on setjmp and longjmp, but I think that it would be more fragile than we'd like. It may also not work everywhere.. If you merge this one, you don't need to merge #2435, right?. nit: can you reword this to be <72 characters. @ms-jihua and I discussed this yesterday, and came up with three equally-terrible options.\n\nCopy the header in both the language package directory and the xplat include directory.\nUse symbolic links to make sure that they're the same file\nThis will not work over a file share, and this will not work on Windows <= Creators Update (and even there, it will only work for administrators)\nInclude a stub xplat/Starboard/SmartTypes.h that contains #include <../../../xx/yy/zz/SmartTypes.h>. nit: can you reword this in imperative mood #Closed. :frown: \"If merged, this pull request will cleaning up UIWindow\". I'm going to dismiss some of your reviews to re-review some new changes. Since it's comparatively difficult to revise WinObjC.Language files, I'd like to get the AutoId TakeOwnershipT stuff in today.. @rajsesh-msft @bbowman I dismissed your reviews because I specialized AutoId for TakeOwnershipT as well.. With these changes, we no longer need to do this:\n\nobjc\nAutoId<NSObject> thing;\nthing.attach([NSObject new]);\nWe can instead do this:\nobjc\nAutoId<NSObject> thing{woc::TakeOwnership, [NSObject new]);. @rajsesh-msft Does this include NS(Mass|ByteSize|Number|...)Formatter or just the abstract parent class?. Nit; title not in imperative mood. nit: please reword title to be in imperative mood #Closed. nit: reword to be imperative mood #Pending. Also, I wonder how it works with composing diacritics. It might be reasonable to normalize the string first... #Resolved. Nit: reword everything in title and body to better reflect what we are now doing. This is caused by us not having published an updated WinObjC.Language package. @ehren you may have to build the tools solution before you build WinObjC proper.\n. Closing as resolved! We'll point future folks here when/if they run into it.. nit: can you reword the title to be <=72 chars and in imperative mood?\nthanks!. I'm unable to reproduce this on x86, even with the 20170407.8 x86 Climbers build.. (ut supra with Pori). Objects cannot necessarily assume that they are fully-formed when they're being deallocated.. nit: reword to be in imperative mood\n. @bbowman The rest of this file uses rc by convention, though.. How do you propose we do the padding with format?\n. How is the buffer passed to free being allocated?. :clap:. I'm renaming this bug to cover what's going on.\n\nNSURLSession should kick off its delegate callbacks and wait for them to complete\nNSURLProtocol_WinHTTP is violating the suggested threading rules set out on the reference platform. It should kick off its client callbacks on the client thread.\n\nTo quote the reference documentation,\n\nIn addition, an NSURLProtocol subclass is expected to call the various methods of the NSURLProtocolClient protocol from the client thread, including all of the following:\n-URLProtocol:wasRedirectedToRequest:redirectResponse:\n-URLProtocol:didReceiveResponse:cacheStoragePolicy:\n-URLProtocol:didLoadData:\n-URLProtocolDidFinishLoading:\n-URLProtocol:didFailWithError:\n-URLProtocol:didReceiveAuthenticationChallenge:\n-URLProtocol:didCancelAuthenticationChallenge:\n\nWe are not doing so (2), so in combination with (1) we are seeing inconsistent delegate reporting order.. Since @ms-jihua is taking over the NSURLProtocol_WinHTTP implementation in 1705, I'm re-assigning this to her.. The tests have been disabled in the meantime.. Why, though? An NSString reference being nil is a strong indicator that the source data does not exist; isn't that the same as a NULL HSTRING?. FWIW, a nil string is functionally identical to @\"\" for Objective-C consumers.. When you merge this, I would like to see it squashed into two separate commits -- one for CGColor, and one for UIColor.. oh! this could be very important later.\nPlease annotate -[UIColor CGColor] in the header with NS_RETURNS_INNER_POINTER!\nThis is a hint to ARC that the return value from that method may become invalid if the owning object gets released. #Resolved. This is a harder problem to solve than the unwinding data for ForwardingBridge and ForwardingBridgeNoStret, since CallFrameInternal consumes a pointer frame to the stack and sets it up such that the callee operates with frame as its stack pointer.. Probably should update the copyright header.. Huh, actually: this is supposed to be bridged to CFNull.. nit: reword <64 char when merging so it doesn't wrap and insert an ellipsis.. NSNull should be bridged with CFNullRef, and [NSNull null] should return kCFNull. Property lists can also deserialize null objects, and they will fail the NSNull test.. @ms-jihua likely, but I'd like to keep that cleanup out of this PR. You could have just changed the base branch in the original PR \ud83d\ude1c . Concern: some of our projects use both CL and Clang. We would need to separate those parts out into a static library.. Due to the nature of Objective-C, it's very easy for us to do this. We can just pass along an NSObject<SomeProtocolHere>* and hide a proxy class inside UIKit.. > this change lets them either use projections OR CppWinRT\nNot exactly; we're not exposing CppWinRT across the boundary, so they'd have to unbox RTObject and that is not supported externally. We have comObj internally for unboxing.\n\n\"internal crap\"\n\nYes and no. They're projected objects, and their contents are important, but we are forcing them to take a projections dependency to use them. It leaks an implementation detail across the API boundary. If we go for a protocol (specifically: that gives us full agency as to internal implementation, where a publically exposed class name does not), we can change things as we wish without betraying internal details.\n\nWe already do implement these activations as application launch with options\n\nWe're not, though. We augmented the UIApplicationDelegate protocol with these three callbacks.\nobjc\n- (void)application:(UIApplication*)application didReceiveVoiceCommand:(WMSSpeechRecognitionResult*)result;\n- (void)application:(UIApplication*)application didReceiveFile:(WAAFileActivatedEventArgs*)result;\n- (void)application:(UIApplication*)application didReceiveProtocol:(WFUri*)uri;\nI don't think it's bad that we did that -- after all, we've greatly expanded its capabilities -- but it doesn't fit the application activation model from the reference platform.\nAs an iOS developer, I hated having to bifurcate my app initialization across the iOS 4 and iOS 5 and iOS 6 initializers. It's no different when we add new ones.\n\nmore burdensome\n\nYou're right. I think it's more mentally taxing than truly taxing, as on both sides of the implementation we/they have to care about precisely what variety of object it is.\n\nguaranteed to be \"cast\"-able\n\nprotocols, mang! it'll rock our world.. > The methods you pointed out that we added to the application delegate are useful if an activation comes in after the app is already running.\nCool! I didn't consider that use case.\nI don't want to be too bullish on the compatibility front. I know that we're still a pre-release and at 0.2... but I think it's important for us to come up with a way forward that maintains our agency while exposing an Objective-C or Objective-C++ facade that doesn't require the consumer to worry too deeply about how we've done something.\nIf we're going to make a breaking change, I guess, let's do it once and let's do it right? \ud83d\ude38 . @edvv Awesome! Thanks for confirming.. nit: title says \"Enchance\". Nit: please reword to be in imperative mood and not end in a period. #Resolved. Nit: please reword to be in imperative mood and not end in a period. #Resolved. @rupertdaniel This is a long shot, but do you have Objective-C Modules enabled on your project configuration in the Clang subsection?. @rupertdaniel Thanks for the confirmation.\nTo expand on @rajsesh-msft's point: This looks like an internal implementation detail that we leaked out into a public header. That structure isn't even used in the public interface for UITapGestureRecognizer.\n@tadam-msft will be better able to route this issue.. libobjc2 does not use a redirected heap, correct. That's part of why it's one of those things we ship in two versions :(. @rupertdaniel Thanks for reporting this. We're tracking the fix in #2521.\nOur Windows.Web.Http NSURLProtocol implementation does not guarantee the dispatch of client delegate callbacks on the client thread, but it's supposed to (cf. this buried Apple document).\nNSOperationQueue makes no guarantees about the order of operation execution, but our original implementation executed them in per-priority insertion order. #2240 exposed NSURLProtocol's invalid behavior, but did not regress the operation queue's functionality.\nClosing in favor of #2521.. nit: log when the validation method is stupid. Wow, that is not reflected in the body of the issue at all. Especially the part about \"explicitly links\".. . This sounds like it could be a memory leak.. @bviglietta this is happening in some code that was switched to C++/WinRT:\nCAEAGLLayer.mm\n```objc\n/*\n @Status Interoperable\n/\n- (void)setContentsScale:(float)factor {\n    [super setContentsScale:factor];\nMedia::ScaleTransform scaleTransform;\nscaleTransform.ScaleX(1.0 / factor);\nscaleTransform.ScaleY(1.0 / factor);\n\n_swapChainPanel.RenderTransform(scaleTransform); // <-- HERE\n\n}\n```\nException\nUnhandled exception at 0x09B0E60F (Windows.UI.Xaml.dll) in GLKitComplex.exe:\nThe thread's stack pointer was outside the legal stack extents for the thread.\nIt can fairly readily be reproduced by resizing the window until it dies.\nAnything you know of?. Sorry, call stack:\n```\n    [Inline Frame] Windows.UI.Xaml.dll!ctl::ComBase::AddRefOuter() Line 297 C++\n    Windows.UI.Xaml.dll!DirectUI::FrameworkElementGenerated::QueryInterfaceImpl(const _GUID & iid, void *  ppObject) Line 66   C++\n    Windows.UI.Xaml.dll!DirectUI::SwapChainPanel::QueryInterfaceImpl(const _GUID & iid, void *  ppObject) Line 95  C++\n    [Inline Frame] Windows.UI.Xaml.dll!ctl::ComObjectBase::QueryInterfaceBase(const _GUID &) Line 40    C++\n    Windows.UI.Xaml.dll!ctl::ComObject::QueryInterface(const _GUID & iid, void * * ppValue) Line 30   C++\n    QuartzCore.dll!winrt::Windows::Foundation::IUnknown::as() Line 2446   Objective-C++\n    QuartzCore.dll!winrt::impl::require_one::operator winrt::Windows::UI::Xaml::IUIElement() Line 490  Objective-C++\n    QuartzCore.dll!winrt::Windows::UI::Xaml::impl_IUIElement::RenderTransform() Line 10820  Objective-C++\n\nQuartzCore.dll!-CAEAGLLayer setContentsScale: Line 63   Objective-C++\n```. @bviglietta This is with #2618 applied.. (it also does not look like a failure to resolve a type, or to load a class; it looks like a stack corruption or a stack overrun?). LOL.\n\n@rajsesh-msft I don't think this is a regression: check out the code!\nobjc\n        [locVal setText:[NSString stringWithFormat:@\"Longitude: %.3f        Latitude: %.3f        \",\n                                                   location.coordinate.latitude, location.coordinate.longitude]];. This pull request is required for #2629 to merge.. When you build an application that formats NSInteger as %d on the reference platform, it complains that the format character is invalid and the quickfix is to both change the format to %ld and cast NSInteger to unsigned long.\nThis adeptly handles the bitness/width change of NS(U?)Integer between platforms.. @rasjesh-msft %S question answered by new revision above :). @rajsesh-msft it appears that without GitHub's user suggestion, I will simply spell your name wrong!. @bviglietta FYI, this is the other half of the formatting change -- it introduces build breaks for the things in #2628!. It appears that there were formats that changed since my previous format branch forked.. This is in build again.\nI fully expect that this will cause our warnings to spike; there may even be build failures in the sample app collateral. This is expected and required for us to move forward with formatter safety.. It scares me that turning on ARC was so easy because nobody used release in GLKit :wink:. Thank you, @ehren!. nit: failed to find even a single nit. That's really curious.\n@rajsesh-msft 3 corresponds to MULTI_SAMPLE_LINEAR (as an enumerated value, not a linear scale); it should be among the higher interpolation modes.\nWe're pushing the interpolation mode through to Direct2D, so I'll investigate where that's failing.. Aaaaargh!\nWe're not copying over shouldInterpolate when we do image format conversion.. @edvv Thanks for confirming!. It looks like some time between 20170424 and HEAD :smile:. It's beautiful!. This pull request switches our publisher ID generation to generate a uuidv5 over the package's publisher ID as dictated by its code signature. Different applications from the same publisher will get the same value for -[UIDevice identifierForVendor].\nCheck out the gory details inside!. @rajsesh-msft Check it out, there are a whooooole lot of awesome new tests and fixes!. I would like to add some test collateral for interpolation. Ideally as well we would cache converted images across drawing operations so we don't have to convert to 32bpp every time. That would require our lock invalidation work to land, but it would help heavy image drawing perf.. tests now exist!\nit turns out that all of our earlier \"interpolation\" tests loaded the image and set shouldInterpolate=FALSE \ud83d\ude20 . it might be interesting to see how caps interact with dashing.\ncan you add a single test that has a big dash style and round line caps?\nwe want to know if a dashed line looks like:\n(XX| |XX| |XX)\nor like\n(XX) (XX) (XX). (this is why it was called changeSeed...). By doing this level of lambda recapture and deduplication, have you contributed meaningfully to the readability or understandability of the code? Or have you damaged it?. I'd find some bees and get you their knees if you'd write a test for the to-many to to-one array notification downgrade case.. @nathpete-msft I believe that getRed:green:blue:alpha: will do the colorspace conversion if necessary. #Resolved. Another downside: The COM error reporting APIs we're using do not allow us to slice any parts off the stack; it'll always look like Foundation's _processException is the culprit.\nWhether this is bad remains to be seen.. 0a8281c fixes the other half issue #2229.\nBy using C++/WinRT's hresult_error, we can taxi exception information across the language barrier. hresult_error lets us communicate that we have already created the IRestrictedErrorInfo object and that it should pass it along but translate it into an HRESULT for downstream consumers.\nThe only downside now is that in the crash bucket named STOWED_EXCEPTION_XAML_TEXT_-[NSException_krazy]:_unrecognized_selector_sent_to_instance_16678D44_80070490 we encode an instance pointer (oops!) :wink:. To be fair, THROW_NS_HR_MSG also exists... but due to the WIL ObjC implementation the message is completely discarded. \ud83d\ude15 I'm not sure why we would have implemented it that way.. nit: reword title to be imperative mood. Added tests. I was going to implement coalescing, but it sucked and I found Apple documentation from 2009 that recommends against the use of NSNotificationQueue.\n\nThe practical upshot is:\n- Notifications posted through a queue might not be posted in any particular \"timely\" fashion;\n- Notifications posted through a queue might not ever be posted (the run loop of the thread that the queue chose to ask to poke it might not be run again; for example, the thread of that run loop might exit and the notification queue discarded);\n- Notifications can be posted by any given queue on a different thread than the thread the queue is the default queue for (when a queue is a default queue for some thread);\n- Notifications can be posted by any given queue on different threads over time;\n- There is no necessary/guaranteed relationship between the thread(s) on which notifications are enqueued and those on which the notifications eventually get posted (delivered) for any notification queue\n(source; search for NSNotificationQueue). @ms-jihua this touches NSURLConnectionTests now; I talked with @rajsesh-msft and we decided not to do common refactoring-out. So now it's just hamfisted in there.. It turns out that NSThread also retains its argument, so we had to drop down to pthreads.. These tests didn't fail locally. Investigating.. @ms-jihua I pulled out the TH stuff into another pull request; this is now clean of your \u274c concerns. Hardcoded path wigs me out a bit, but w/e. It might be worth duping this upstream to Microsoft/cppwinrt!. Tests do pass locally; remains to be seen how they react in the lab.. Due to a class initialization order issue with WindowsOnly tests, NSNotificationQueue cannot be moved there. I've switched to OSX_DISABLED_TEST and made sure it compiled on OS X.. @ms-jihua Your core.autocrlf setting has been toggled.. ### Running theory\n\nCFData isn't safe for multi-thread manipulation. This could explain why the captured _bytes (oldBytes) and the current _bytes differ.\n. Ah, this is in the tests. Hi @Shagufta4786! Thanks for reporting this. I'm closing it out since it's a little stale and we aren't planning on supporting Cordova. Since it's a cross-platform technology already, it should be easier to bring over to windows that way.\nSorry!. nit: title is too long, grammar is not excellent (\"ensure dlls .. does not\"). I have to compose the message in Notepad because the browser is generating spurious form submit events.. This pull request:\n\nSwitches NSURLSessionTests to use THBooleanCondition, which can only trigger once\nMakes the tests await only a single broadcast from THBooleanCondition for all delegate callbacks\nRemoves the delegate callback triggers that do not signal completion\nRewrites the download/cancel/resume test to not rely on nebulous magic\nPreviously, the test was waiting to receive one callback (out-of-band), then cancelling the task. There\n    was a window where the task was still running. The new implementation cancels it immediately in the\n    \"received data\" callback.\nThe test was leaving a 500MB download spinning in the background instead of also cancelling that one\nThe test now makes certain that it has received SOME data before it cancels the task so there is\n    definitely something to resume.\nSynchronizes all access to the test helper properties\nLogs which delegate callbacks we've received for easier debugging\nDoesn't try to log an NSDictionary with the %d format (:frowning_face:)\nImplements -[THBooleanCondition signal]\n. When I was just changing comments, I was going to say \"this doesn't need a rebuild.\"... however, now that I've gone and changed some code, a-rebuilding it'll go. nit: name does not fit into the sentence when merged, this commit will ___. nit: please make sure you rename before merging ;). From the dump:\n\n```\nBUGCHECK_STR:  STOWED_EXCEPTION_IRestrictedErrorInfo_TEXT_-[NSURLSessionDataTask_URLProtocol:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]:_unrecognized_selector_sent_to_instance_1C204A3C\nDEFAULT_BUCKET_ID:  STOWED_EXCEPTION_IRestrictedErrorInfo_TEXT_-[NSURLSessionDataTask_URLProtocol:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]:_unrecognized_selector_sent_to_instance_1C204A3C\nPRIMARY_PROBLEM_CLASS:  STOWED_EXCEPTION\nSTACK_TEXT:\n1ced4038 76ab8fe8 combase!RoOriginateLanguageException+0x38\n1ced403c 5965a856 Foundation!-[NSException _processException]+0x66\n1ced4040 65c012c4 libobjc2!objc_exception_throw+0x94\n1ced4044 59645533 Foundation!wil::details::ReportFailure+0x153\n1ced4048 59645608 Foundation!wil::details::ReportFailure_Msg+0x78\n1ced404c 59666eb7 Foundation!wil::details::in1diag5::Objc_Throw_HrMsg+0x27\n1ced4050 59665d59 Foundation!_throwUnrecognizedSelectorException+0x169\n1ced4054 59659863 Foundation!_NSInvocation_ForwardFrame+0x133\n1ced4058 5969f9d7 Foundation!__NSInvocation_ForwardingBridge_Internal+0x24\n1ced405c 59721699 Foundation!__37-[NSURLProtocol_WinHTTP startLoading]_block_invoke+0x29\n1ced4060 5972da1c Foundation!-[_NSBlockAdapter invoke]+0xc\n1ced4064 59665964 Foundation!-[NSObject performSelector:withObject:withObject:]+0x14\n1ced4068 596a29ef Foundation!-[NSOrderedPerform fireInMode:]+0x4f\n1ced406c 59667333 Foundation!-[NSRunLoop _orderedPerforms]+0x113\n1ced4070 59667446 Foundation!-[NSRunLoop limitDateForMode:]+0x86\n1ced4074 59667642 Foundation!-[NSRunLoop runMode:beforeDate:]+0xc2\n1ced4078 596676e6 Foundation!-[NSRunLoop runUntilDate:]+0x56\n1ced407c 596e632b Foundation!-[NSURLSession _taskDispatchThreadBody:]+0x6b\n1ced4080 5966231a Foundation!-[NSThread main]+0x4a\n1ced4084 596622a2 Foundation!_threadBody+0x32\n1ced4088 6d15d06f Starboard!ThreadRoutine+0x3f\n1ced408c 757a62c4 kernel32!BaseThreadInitThunk+0x24\n1ced4090 776e0fd9 ntdll!__RtlUserThreadStart+0x2f\n1ced4094 776e0fa4 ntdll!_RtlUserThreadStart+0x1b\n```. @ms-jihua this is the entirety of NSURLProtocolInternal.h for me:\n```objc\n//***********\n//\n// Copyright (c) Microsoft. All rights reserved.\n//\n// This code is licensed under the MIT License (MIT).\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n//***********\npragma once\nimport \"Starboard/SmartTypes.h\"\n@interface NSURLProtocol ()\n+ (id)_URLProtocolClassForRequest:(id)request;\n@end\n```. @ms-jihua two things: 1) users can implement NSURLProtocolClient on their own, and they don't know about this. 2) A data task can still be a post with a body stream if it's created from an NSURLRequest with a body/bodystream. Also, GETs can have bodies just as well as POSTs can. :smile:. I'm having trouble reproducing this:\nobjc\n    NSString* x = [[NSBundle mainBundle] pathForResource:@\"BezierViewController\" ofType:@\"nib\"];\n+ x 0x00c1ed90 \"E:/src/WinObjC/samples/WOCCatalog/Debug/WOCCatalog/AppX/BezierViewController.nib\"   NSString * {_NSCFString}\nIs there anything unusual about your bundle?\n. Hi @Angeman! Thanks for reporting this.\nIt looks like CryptAcquireContext and CryptGenRandom are usable only from Windows Desktop applications; they can't be used from Universal applications.\nIf you're the author of the encryption code, you should be able to adopt the UWP APIs in the Windows.Security.Cryptography namespace; namely, CryptographicBuffer.\nThere's some C# documentation on doing that here. You should be able to adapt it to the WinObjC projections in UWP/WSCryptography.h for Objective-C or use C++/WinRT for C++.. Sorry, I meant UWP/WindowsSecurityCryptography.h :smile:. Since this looks like code outside of our control (and using the Win32 API surface), I'll close this one pending further info.. @aballway updated to address concerns. This looks like it might be due to a missing git-lfs install. Have you followed the git-lfs steps in Building from Source?\n. Oh, I see. This may be a documentation defect.\nSince the first step of that is \"Clone the Repo\", we need to add the Git-LFS instructions there too.\nThe quick fix before we get the documentation updated is to install Git LFS, run git lfs install, and then use git lfs checkout in the WinObjC folder.\n. @Ron2 Thanks for the followup. I'll file a bug to update our documentation in this regard and dupe this one over to it.. @jboich I'm having trouble reproducing this locally:\nobjc\n[webView loadHTMLString:@\"<html><body>Hello World</body></html>\" baseURL:nil];\n[webView evaluateJavaScript:[NSString stringWithFormat:@\"window.location.href\"] completionHandler:^(id result, NSError *error) {\n    NSLog(@\"finish: %@\", result);\n}];\n// LOG: finish: about:blank\nIs there anything about your particular case you can think of that is unusual? I've tried calling evaluateJavaScript: in webViewDidFinishLoad: as well as elsewhere.. You should be able to run vsimporter from the directory containing MyProjectName.xcodeproj; that is:\nMyProjectName/ <- run vsimporter from here\nMyProjectName/MyProjectName.xcodeproj\nIf that doesn't work: What version of CocoaPods are you using?. Thanks for following up. You may need to run pod install in your project directory from OS X before importing it as in #14. Barring that, I'm not certain what remediation steps are required.. That definitely shouldn't be. Can you share a minimal repro project that recapitulates this behavior?\nThanks!. Hi @Koalar. I dug through our GL implementation, and it looks like we don't implement glColor4ub; @edvv is right that we target OpenGLES 2.0.\nIt's possible that iOS offers some limited backwards compatibility for 1.1. If you can migrate to glColor4f, that'd be a pretty quick solution.\nRight now, our implementation of glColor4ub is:\nc\nvoid OpenGLES20Context::glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha) {\n    LOG_MESSAGE(__FILE__, __LINE__, \"ERROR: Not implemented.\");\n}\nNow, as for glLineWidth: I can't find anything we've done that should cause that to not work. In fact, we're just re-exporting the function from ANGLE, the OpenGLES->Direct2D adapter we consume. It may be worth chasing down a bug on their end, as it may be a known regression or fixed in a newer version.. Hi @jboich! Sorry about the issue. I ran into this locally as well and escalated as appropriate.\nI'll keep this thread updated.\nAs a workaround, 15.2 should suffice to keep you building. I know that's not the best answer! \ud83d\ude42. @compnerd Thanks for reporting this. It looks like it should be PAUobjc_object@@.\nWhat issue are you seeing because of this? I think PAAUobjc_object@@ should still unmangle as Uobjc_object* (losing the struct typekind.). (source: MicrosoftMangle in llvm-mirror here primes the mangled name with PA, then calls mangleArtificalTagType, which should emit U then the name. The code here looks right.). This is tracked as NuGet/Home#5815.. Or task #2783!. Title should specifically call out update 3; it \"works\" with 2017 as is.. x86 libcassowary-0.60.lib was deleted?. >       Win32\nthis project is still in 3rdparty and looks like it should not be changed at all\n\nRefers to: deps/3rdparty/libdispatch/build/libdispatch.vcxproj:10 in 19d97c7. . >       Win32\n(????????)\n\nIn reply to: 332656012 \n\nRefers to: deps/3rdparty/libdispatch/build/libdispatch.vcxproj:10 in 19d97c7. . Hi there! In the interest of keeping the discussion around the direction of this project in one place, I'm going to close this as a duplicate of #209.\n. Fixed with #2869. Hi @calbot,\nWinObjC doesn't support any of the Swift annotation macros. If you need to unblock further progress, you can add #define NS_SWIFT_NAME(...) to your Prefix header to suppress the emission of the annotation.. Since Swift is currently out-of-plan (#25), we won't be able to fully support them. I'll move this over to @MSFTFox to see if we can implement some stub macros that get newer code compiling.. Hi @cmini!\nIs there a chance that choosenTOKEN is nil? Also, do you have a backtrace or an exception log? You should be able to find one in the Debug Output console.\n. Hi @cmini,\nI'm going to close this pending more information.\nFeel free to reopen it!\n. Hi @sriranjanr!\nSorry for the confusion. WinObjC is intended to be used by developers to make Windows applications (distributed via .appx packages) that run natively on Windows machines.\nIt's not a solution for developing iOS applications that will run on iPhones and iPads.. I'm closing this issue, but please feel free to reopen it if you've got additional concerns!. Hi @RayJohnUa,\nIt looks like the source file at location [REDACTED] is missing a macro name. This could be due to a dangling #define or #ifdef.. I can\u2019t tell which file it is, you\u2019ve covered up the name with a white line. I think it\u2019s one of your project\u2019s files.\nIf you could share the lines of code around the error region, we can get to the bottom of this!. Closing due to inactivity; please reopen with more info if you still need it!. It also includes Objc2Winmd!. I'm closing this out, since it looks like your issue has been addressed. Thanks, Ed, for helping out!. (ideally, it'd be three commits:\n\nabcdefgh [libdispatch] add support for queue specifics and export barrier\nghijklmn Update libdispatch prebuilts for abcdefgh\nAdd unit tests for the new dispatch APIs\n). nit: please change every instance of LibDispatch to libdispatch or dispatch -- it's never capitalized as such. (I'd prefer the commit titles to be indicative of what they actually did.. like, implement the libdispatch queue_specific APIs and stuff). before merging, please split \"address thread safety\" into the dispatch, prebuilts and tests.. This was fixed with the closure of #2830. nit: consider changing the description of this pull request to not mentionCFLock`. it's just a standard windows atomic spin lock. you don't need to take all of my feedback; you are free to reject some.. nit: please rename this pull request\nnot a nit: please reword the entire body of the pull request before you merge it, it's riddled with curiosities.. (When Raj does develop -> master merges, he names the pull request after the release name, as in #2814.). further nits:\nlibdispatch was updated to support the dispatch_queue_specific APIs\nOSSpinLock and friends were made available (not OSSpingLock)\nBundles will now load localized resources appropriate for the user's preferred languages.. Thanks for the report. I was pretty sure we had an earlier issue tracking accessing local resources, but it looks like we don't. Sorry about that!\n\nIf you can use an ms-appx:/// or ms-appx-web:/// URI (documented here), that might be an appropriate way to unblock your scenario.. ~Oh: The second report would be fixed if you'd use [NSBundle URLForResource:... instead: it will translate a local file URL to an ms-appx: URL.~\nSorry, I misread our implementation of URLForResource.\n. Do we also need to update msvc/packaging-common.props and msvc/packaging-common.targets to set the target framework for those packages?. This has been fixed.. since you changed the title/body, make sure to squash and merge, and copy the wording into the squash body.\nReviewable may have left some gunk at the bottom.. As discussed:\n please separate out the objc2winmd source changes\n do not target 170xx SDKs :smile:\n* use 10.0.16299.0 since that's what the SDK is called. nit: could probably just say \"winmd2objc\" instead of \"CodeGen\". I meant winmd2objc. :. @dkimitsa Thanks! I'm really glad somebody's working on xib2nib!\nWhile I'd like to just cherry-pick your changes out, we need to have potential contributors sign a contributor license agreement. If you submit a pull request -- it doesn't have to be in a mergeable format! -- we can work together on getting the right changes upstreamed.. Again, I'd like to stress not to worry if the changes can't be upstreamed. We'll do what we must to get the changes in a consumeable format, but it has to start with a pull request.. It looks like the objc-syntax-highlighting VSIX you're installing is targeted to VS 2015. Installing winobjc-tools via chocolatey should automatically install the appropriate extension for your version of VS.\nIt does, however, look like we never changed the version number on the VS2017 VSIX, so it's hard to say precisely which package you were trying to install. Sorry!\n. The correct VSIX should have been installed by the winobjc-tools chocolatey package. Can you check \"Extensions and Updated\" (Tools menu) for Objective-C Language Service? Here's mine:\n\n. Alas, that's the level of syntax highlighting (and Intellisense: #40) Visual Studio 2017 supports for Objective-C. At best it can color strings, indent per your indenting settings, and smart-complete \"\", (), {}, and [].\nThere's an alternative mode available if you uninstall the Objective-C language service that will offer completion for words that are already present in the file you're editing. It's got a few other pitfalls, though, like not properly completing matched pairs and perhaps indenting.. @nrbrook Thanks for your patience / sorry for the delay here. This might be related to an issue (which appears untracked; I'll remedy that) where Clang Modules can't be used during multithreaded builds. Can you try turning off support for Clang Modules in your project's Objective-C properties?\nThanks!. Hilariously, this failed due to a disk space issue and not because I moved the compiler all around.. please remove 1802.1 from any commit names and titles immediately\nwe can't have gitversion freaking out again. I'm alarmed that there are two :x: in the commit history this merge covers.. I think that when you kick off the build for this, you have to set PackageVersionOverride. then afterwards merge and tag it. The builds have passed, but they could not be reported.. \n. @jjeyaraj :heart: you're awesome, thank you. Turns out there were even even more!. Hi @chiefgreek! Sorry for the delay. We don't have any suggested analytics packages at this time. The GA UWP SDK might be useful, but it would require a little bit of bridging to get it working from Objective-C.. Hi @arktouros. Thanks for reporting this!\nWe've chosen to not allow access to ivars across module boundaries.\nThere's compiler work to be done to support importing and exporting them on Windows (due to some limitations of the PE/COFF object format), and we weighed that against the cost of exposing properties instead.\nSorry about that! If you have a compelling case for this that's not better-served by properties, I'll gladly reopen this.. Looks like we're leaking strings on the way into WinRT. Thanks!. Thanks for the detailed reproduction case! It looks like we're leaking a lot of Objective-C objects.. You may be able to unblock Visual Studio builds by unloading the project named NugetRestore. It'll fall back on Visual Studio's built-in package restorer, which might work better for you.\n@Liastre-3D4M FYI. Added links to patches.. If Unity applications can be packaged in a UWP, there should be no reason why you cannot use a generate a WinObjC UWP Objective-C DLL and use it. You should be able to switch your static library project to a dynamic library project.\nIt's mostly dependent on what functionality you're trying to bring over, of course. What are the issues you're seeing? Any project samples, build logs, or runtime exceptions you can share would be helpful.\nThis isn't explicitly a supported use case, so we can't dedicate terribly much time to looking into issues caused by it, but I'm definitely interested in seeing how you fare.. Alas! Even with #122 fixed, you'll have to deploy the subset of WinObjC DLLs you're using along with your plugin. The question of where to put them once you do that is somewhat of a black box to me, as I lack Unity experience.\nIf there's a 32-bit build of Unity, it might be interesting to play around with that.. This is still in Clang 7, but it's got a slightly better error message.. @alakoring Hi! Thanks for the report.\nWas this directory (WinObjC-0.2.180220) generated by cloning our repository, downloading the release tag, or pulling our NuGet packages?\nDue to a GitHub issue, the ZIP generated from the release tag is not usable: GitHub doesn't include Git LFS files in the final archive.\n. If you get past this and run into further issues, we're tracking changes that improve our compatibility with VS 2017 Update 5 and beyond:\nBugs\n\n\n2837\n\n\n2859\n\n\nTasks\n\n\n2848\n\n\n2860\n\n\n2838\n\n\nIf you're building the samples, or any applications that do not consume C++, you should be okay.. You may still be able to scrape by using std::string without type_traits. I don't have a handle on exactly which headers are impacted, unfortunately. They change with every VS release, and the gulf is only going to widen until the #2837 work lands.\nUnfortunately, 64-bit isn't supported. It looks like you found #122 tracking that; it's obviously a pretty old one! In a lot of places we're not 64-bit clean, and it's a tough uphill battle to become 64-bit clean:\n\nA few old places are using DWORD for pointers (!)\nNSInvocation doesn't have an assembly counterpart for x64\nlibobjc2's objc_msgSend.x86_64 was written for the sysv x64 ABI\nThe Windows exception model is different on x86 vs. x64, and we haven't quite nailed exception generation yet\n. This previously had some packaging changes, but apparently changing the target framework to NuGet,Version=v1.0 makes nuget 4.4 compile the entire project when you ask it to restore packages.. @MSFTFox small ping!. The merging of this pull request marks the point of no return past which the agents must be updated to 15.6 and the compiler changes merged.. * Ignoring the return value of remove_if, which is now marked [[nodiscard]]\nUse of something called std::binder2nd in eigen\nUse of unary_negate, which is deprecated:\n\ndeps\\3rdparty\\eigen\\src\\core\\functors.h(981): error C4996: 'std::unary_negate<_Fn>': warning\nSTL4008: std::not1(), std::not2(), std::unary_negate, and std::binary_negate\nare deprecated in C++17. They are superseded by std::not_fn(). You can define\n_SILENCE_CXX17_NEGATORS_DEPRECATION_WARNING or\n_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS to acknowledge that you have\nreceived this warning. (compiling source file ..\\..\\..\\Frameworks\\Accelerate\\blasCFloat.cpp). This pull request also breaks ARM support.. Fixes #2837 #2806 #1647 #405 #2341 #1140 #160.\nCloses #1769.. We have clang changes that may never be suitable for upstreaming; our compromise is to upstream what we can and provide patches for what we can't.. Hi @wjk!\nThat's a very astute observation. We're planning on upstreaming any Clang changes that make sense and switching to an upstream build at our earliest convenience. For now, though, we have patches staged for upstreaming in issue #2860, and the ones that haven't made it up will be included in this pull request.\nI'm very interested in your plan to support Mac frameworks. Would you mind e-mailing me at duhowett@microsoft.com to continue this conversation?. Pre-staging for eventually switching sdk-build.props and ut-build.props to Cpp17!. NOTE: This pull request is being built as part of #2871.. Merged externally as part of #2869 . We probably don't need depends.exe and depends.dll in this package: they're unused.. Depends may not be safely removeable here. Issues:\n We need to copy WinObjCRT.dll into the built product\n We only want to copy it if it was used in the build inputs\n* DO we need WinObjCRT in .Compiler? If not, we can make it clang-only... but if we do, we need a complicated dance to depend on WinObjCRT.lib from libobjc2 and libdispatch.. Downsides to keeping WinObjCRT in this package: It's not \"just clang and clang support\" if we do that.. Decision: Move winobjcrt and the other IW-specific command line args to WinObjC.Language.. Description updated to reflect latest changes.. Merged externally as part of #2869. d65d11804. It'll be easier to review this in whitespace-agnostic mode, here.. Good eye.. I've run the diff list through uniq -ic (which spits out a list of each line in a file prefixed by how many times it appears) and verified that each filename appears identical (case-insensitive) exactly twice -- that is to say, no files have moved to different folders this time.. Hi there. Can we help you?. #2051 tracks switching to inbox ICU\n. libxml2 must be rebuilt with the new ICU. Duplicate of #2874 . @schriftgestalt Thanks for trying this, and one of our older versions.\nWe've been having some trouble with NuGet lately. Can you try restoring using MSBuild from a Developer Command Prompt?\nmsbuild /t:Restore /p:BuildProjectReferences=false .\\tools\\tools.sln\nmsbuild /t:Restore /p:BuildProjectReferences=false .\\build\\build.sln\nYou might find you have better luck with this method. If you do, you may need to turn off automatic package restore inside Visual Studio before building any of the frameworks, and perhaps even unload the NugetRestore project.\nThanks!\n. @steskalja Thanks for the interest! We're tracking Swift support in #25.. Hi @VinLark! Thanks for reaching out.\nIt looks like you're using our Visual Studio 2015 extension. Anything you get from the Releases page is out-of-date, as we moved to publishing our updates via Chocolatey and NuGet.\nWe have a brief getting started section in the README, but it mainly consists of:\n\nchoco install winobjc-tools (this installs the VS extension for 2017!)\nvsimpoter ...path\\to\\xcodeproj. This may have been fixed by #2869, as the source tree for Clang 6 includes mention of __auto_type.. I have a patch for this, but was delayed in submitting it due to other incompatibilities with 1.9. It does simplify our code quite a bit!\n\n\nFrom: David Chisnall notifications@github.com\nSent: Thursday, August 9, 2018 6:31 AM\nTo: Microsoft/WinObjC\nCc: Subscribed\nSubject: [Microsoft/WinObjC] NSObject almost reimplements the runtime's refcounting (#2885)\nThe refcount manipulations in NSObject are exposing some implementation details that may change. The simplest way of supporting -_ARCCompliantRetainRelease is to just call objc_retain, objc_release and so on from the -retain, -release and so on methods. Please call object_getRetainCount_np to implement -retainCount. The current version will not work well with the runtime's weakref fast paths and will return an incorrect value if an object has had a weak reference taken, if used with the 1.9 or 2.0 branches of the runtime.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMicrosoft%2FWinObjC%2Fissues%2F2885&data=02%7C01%7Cduhowett%40microsoft.com%7Cad2d4c47374f42bda4e908d5fdfc6994%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636694182903319717&sdata=LAEbNd6XLxA90yPPd3pAxsFiou250fA9QsJDDoWYLRU%3D&reserved=0, or mute the threadhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FANp1mnSWcIcNx0uKGCUgsayCJOCrPWrDks5uPDmvgaJpZM4V1sGt&data=02%7C01%7Cduhowett%40microsoft.com%7Cad2d4c47374f42bda4e908d5fdfc6994%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636694182903319717&sdata=DlmL%2BqWp5oGM%2FNZbhJbganZZVoaRN1mSo2fSCkV4nFA%3D&reserved=0.\n. Nope! Sorry for the slow responses, but we've been working on some behind-the-scenes stuff and spending time with the libobjc2 maintainer to make sure the new Objective-C ABI works great on Windows 10 with new versions of Clang.. Reopened #1291; will triage there.. This should be a quick fix, but I'll run it through our test gauntlet to be sure.\nSorry for the regression!. The fun ends here:\n2018-12-01T20:03:04.8338462Z ##[error]C:\\Users\\svcilwbo$\\.nuget\\packages\\winobjc.compiler\n \\0.2.10000-test\\build\\ClangCompile.props(12,32): Error MSB4086: A numeric comparison was\n attempted on \"$(VCToolsVersion)\" that evaluates to \"\" instead of a number, in condition\n \"'$(VCToolsVersion)' <= '14.16.27023'\".. Hi @darkoverlordofdata,\nThanks for trying this out. We're currently missing our project templates, as the original WinObjC originally focused on importing Xcode projects. I'm going to mark this as a task for our backlog.\nRight now, the easiest way to get a \"new\" project would be to convert a mostly empty Xcode project. Sorry about that!. Thanks for following up! I'll make sure we update the documentation to reflect some of this.\nI'll file a followup task for the template support.. @darkoverlordofdata good catch! There's also a longstanding issue, #40, that impacts Visual Studio's ability to figure out what's going on. Since we can't run Clang as the intellisense compiler, it tries to build everything with CL. As you can imagine, that generates a great number of spurious intellisense-only errors.\nFor command-line builds, you can almost certainly use MSBuild directly on your solution from a Developer Command Prompt:\npowershell\nmsbuild MyApp.sln /p:Platform=x86;Configuration=Release. Whoops, I meant #2779. Sorry!. Hey @SergeyNewcastle,\nThanks for the report! Can you share a snippet of code that you're having an issue with?. So this is an interesting one. We can add a stub for CFFileDescriptorRef to get your code building, but we'll have to spec out the work required to make CFFileDescriptorRef work if your application depends on it.. Hi @marczellm,\nThanks for reporting this! If you'd feel more comfortable e-mailing about this issue, I'm at duhowett@microsoft.com.\nIf not, I'd love to work with you to find a minimal repro case. Can you share the error message?. The min key size for RC2 on windows is, surprisingly, 2!\n. I'm somewhat worried that none of these are instance variables -- they're globals\n. Good catch!\n. What's happened here?\n. nit: this got typo'd\n. what're the advantages to doing this versus setContainer[index]? operator[] for a vector should be slightly lighter-weight than advancing the begin iterator\n. This should be autoreleased\n. indeed :)\n\nIn reply to: 61936592 \n. I came here to say that; the ideal case for an ordered set might be:\nset<StrongId> set\nunordered_map<id, set::iterator>\nwith a std::hash specialization for id that uses -[NSObject hash]\n\nIn reply to: 61937213 \n. That's why the combination vector+map works so well; for ordered and indexed operations, the vector comes into play. The map handles uniqueness and object-based lookup.\n. apologies; i meant vector<StrongId> and map<id, vector<StrongId>::iterator>\n. Your factory methods should use self instead of NSOrderedSet. Otherwise, [NSMutableOrderedSet orderedSet] and friends will return immutable ones.\n. this could just be return [self orderedSet]\n. That's pretty interesting. I know the codegen on the reference platform changed to memset structs to 0 for deterministic behaviour, and I know that we don't exactly support that.\n. Why can't we just return an arrayContainer copy here?\n. The logic here could be folded a little tighter, removing the duplicate assert and add\n. Package is themost technically-correct, if this were a public header. \n. Since you're accessing the ivars here, you could just set set/arrayContainer to mutable copies of the other ones :) \n. Oh, I see why the proxy array approach was taken. \nInteresting: we need to effectively strip the mutability without losing the passthrough.\nDo you think we can just return the internal mutable container and hope nobody decides to manipulate it? \n. Sorry, see below\n. If we're overriding the size later, there's no point in setting it here.\nIf there is, something's broken :)\n. This should probably be self.view.bounds -- the view should scale first, and its contents should not be based on screen size\n. In which colour does nil result? Is it different in iOS versus WinObjC? Should it ever be clear? #Closed\n. No: as per API contract, -copy should always return an immutable container.\n[mut copy] => immutable\n[immut copy] => immutable\n[mut mutableCopy] => mutable\n[immut mutableCopy] => mutable\n. You can simplify this to retValue ?: [NSNull null] -- If you leave out the true-expression from a ternary, it uses the condition.\n. If you pass nil for keys, does the reference platform return an empty dictionary?\nShould the resulting dictionary be immutable ([[results copy] autorelease])\n. You can give it a hint here, and say dictionaryWithCapacity:keys.count -- just to reduce the burden of re-hashing if keys is long :)\n. nit: please run clang-format with the .clang-format file in the root of our repo; we're a 4-space-indent codebase! :)\n. It looks like this ended up in the ported Swift tests (ReferenceFoundation directory); would you mind moving it to TestNSArray.mm in the parent directory?\nWe're trying to keep the tests from the reference platform separate from the ones we've written. :smile:\nThanks!\n. Sorry, that's NSArrayTests.mm, not TestNSArray.mm. Huh.\n\nIn reply to: 67031200 \n. Is it safe to do this outside of lock? #Closed\n. Depending on how this works, you might have to use {did|will}ChangeValuesAtIndexes: forKey:\n\nIn reply to: 69358159 \n. nit: prefer nullptr over NULL. #Closed\n. _completionBlock can be a StrongId<void(^)()> if you want to dispense with the formalities. #Closed\n. It looks like the reference platform dispatches full change notifications and not indexed ones.\n\nIn reply to: 69615177 \n. nit: prefer std::lock_guard for scope-guarded mutexes. #Closed\n. Is this safe for possibly concurrent access? #Closed\n. If you use context on registration for isFinished, you can avoid a string compare. #Closed\n. What happens here if you remove a dependency that this operation doesn't have? #Closed\n. If you set op.completionBlock = op.completionBlock, you will likely destroy the block here./\n\nIn reply to: 69352043 \n. We can somewhat test deadlocks -- by having a watchdog thread. In the worst case, the test runs until the watchdog fails it, but then we need to abort the test run completely since we can't recover.\n #WontFix\n. I'm upgrading this from a nit -- we should definitely use lock_guard and unique_lock everywhere. std::condition_variable_any actually can take a unique_lock, as well.\n\nIn reply to: 69623694 \n. Oops, this should not have changed from STUB_METHOD. #Pending\n. Since we do not have an object graph manager, we don't need that right now.\nEvery property is intended to be made readonly by the manager, so we will have to do the work there when we get one.\n\nIn reply to: 69756520 \n. Alas, this is for _CDXMLCoding protocol conformance. Just because this class does not use it, it doesn't mean that other protocol consumers won't.\n\nIn reply to: 69757738 \n. _NSParseManagedObjectModelFromXMLDataAtURL returns a new instance of NSManagedObjectModel\n\nIn reply to: 69758575 \n. I think in this case, it should be alright without one. Once we revisit CF's objc interop we may not have to worry about this.\nSpecifically, if everything becomes a bridged internal type, everything is Objective-C-able, and we don't have to worry about many of these checks.\n. nit: formatting #Pending\n. This will leak, as +new returns a +1. #Pending\n. I'm somewhat wary of introducing a dependency on NSOperationQueue here; there might be some way to do this with dispatch groups or another primitive.\nNSOperationQueue could spawn its own thread pool to service requests like this, but we don't need an entire thread sitting around dedicated to saving user preferences. #WontFix\n. It might be worth calling out why we're using 2 here. #Pending\n. A while loop plus a condition variable (which this is) is the best way to hold for the suspended state. Consider that we signal on suspendedCondition for both suspend and resume, and we need to only hold operation processing when isSuspended is true.\n\nIn reply to: 69805759 \n. Additionally, more primitive condition variables can be prone to spurious wakes. :)\n\nIn reply to: 69806286 \n. prefer httpVersionStr = @\"HTTP/1.0\" (for all of these) #Resolved\n. Since you're in an instance method, you don't need to use the property accessor.\n_methodsCalled[NSStringFromSelector(_cmd)] = @(YES); (just a nit) #Resolved\n. nit: it looks like a tab sneaked in #Resolved\n. Ideally, we'll use %hs and %ls to indicate what sort of string we're passing in the args.\nOtherwise, L\"%s\" means L\"%ls\" implicitly. #Resolved\n. That's a very unusual way to get the class name. Also, it looks like this doesn't take an NSString, it takes a wide char string.\nEDIT: Maybe it is not unusual, but it is still not what we're looking for here :(\n\nIn reply to: 69814325 \n. Cancelled is guarded by the finish lock, but finished and executing aren't guarded by anything? #Closed\n. NSOperatinQueue nigh-unto guarantees that operations run with their own pools -- do we have to make another one? #ByDesign\n. Does/should completion fire even if it did not execute (and was cancelled)? #ByDesign\n. This is likely better written as for(NSOperation* op in _dependencies), as it can be optimized. #Closed\n. It's the subclass that's concurrent; NSOperation has to have the machinery to support both even though it is itself nonconcurrent. #ByDesign\n. Good idea! I forgot about std::stack.\n. Oh, I think I left it in from before I matched up elementID with renamingIdentifier. I'll cross-check to make sure it's 1) correct and 2) not necessary to have an ambiguous comment\n. Oops. Thanks!\n. This is a bit of a premature optimization, but: using NSSet here gets us O(1) key uniquing. It ensures that @\"userInfo\" is pointer-identical with whatever instance of the string \"userInfo\" CFXML gives us. We avoid character-by-character string comparison for every tag we see in the XML document.\n. That is: We look up the tag we got from CFXML in this set, and it gives us back the const version.\n. This is an internal implementation, I think. Are we sure that the callers adequately ensure it's non-NULL?\n. It's not possible to notify on an aggregate function with a sub-property on the reference platform :)\n. github is showing this file as 100% changed; has its encoding or line ending style changed?\n. Does it make more sense for us to include stdbool.h here? It does the same (similar: bool -> _Bool from C99) typedef in a C++ guard.\n. Ah, it looks like the line endings changed from UNIX to Windows.\n\nIn reply to: 70302644 \n. Since we only use one var for the last resume data, we should clear it if we didn't get one in this callback. Otherwise, it could try to resume a different cancelled download. #Resolved\n. nit: with a capital W! (is that necessary?)\n\nIn reply to: 70346872 \n. What happened with these files? #Resolved\n. Can WinObjCRTExport be shored up to be safe here? We might just want to define WINOBJCRT_IMPEXP= when building, and then scope down this ifdef.\nWe could use strncpy for strcpy_s as well :) #Resolved\n. yeah, I'm not sure how this goes exactly. That's likely fine then. :)\n\nIn reply to: 70347443 \n. This slash dance scares me a little #Resolved\n. since we have so many _WIN32s in here, would it make sense to just have one and switch main() ? #Resolved\n. > _WIN32 \nWe might be able to get away with using WINOBJC for some of these, since that's what we use for non-sdk apps. #Resolved\n. nit: Make is unusually sensitive to spaces in $(function a,b,c) constructs; it will insert unnecessary spaces in the output unless you remove them around the commas. #WontFix\n. These two could be combined, since it doesn't look like you're doing anything separate with them. Or,\nSRCDIRS := Foundation Foundation/ReferenceFoundation\nSRCFILES := $(foreach d,$(SRCDIRS),$(wildcard $(d)/*.m*))\n``` #ByDesign\n. Shims should possibly be phony, otherwise a file named Shims will confuse/enrage it. #Resolved\n. For this and the above, it would be better to move the Shims dependency to the Foundation.UnitTests.exe target, and then drop the $(word ) here and just use $^ #Resolved\n. Canonically, you'd use $(LDFLAGS) for -framework Foundation, and you probably don't need -std=c++14 in the link line. #Resolved\n. The nbuttons++ here is execptionally important: it makes sure that every button is in a new slot. #Closed\n. This has to exist so that we don't need to complicate instanceMethodForSelector for metaclassses. If we used the same codepath, we'd lose the ability to call resolveClassMethod on the appropriate target (the class) #ByDesign\n. Is CLLocationDirection the correct type for accuracy? #ByDesign\n. Apparently it is. That's a very unusual API design on the part of the reference platform.\n\nIn reply to: 70519373 \n. I'm confused about the API+ABI change here; it seems out-of-scope for the documented changeset. #Resolved\n. While you're changing this, you could just use ASSERT_OBJCEQ(@\"CORTANA_TEST\", args.result.text); #Resolved\n. Ideally, we'd use EXPECT macros instead of ASSERT macros for conditions that should not terminate testing (say, if you're testing multiple independent method responses in a single test facade.)\n\nIn reply to: 70538339 \n. It would be best if we could leave projection headers out of here and rely on forward-declared classes only, I think. #ByDesign\n. universally, ASSERT_STREQ(\"a\", [b UTF8String]) can be better represented by ASSERT_OBJCEQ(@\"a\", b). #Resolved\n. prefer std::lock_guard for scoped locking around mutices #Closed\n. Fortunately, std::lock_guard locks a scope, and you could introduce a scope for this.\n\nIn reply to: 70674087 \n. I understand now: GitHub's e-mail did not include the <NSString*> (because HTML :P) and I thought you were asking why it was an NSSet.\nThis is a great suggestion. Thanks. :)\n\nIn reply to: 70035761 \n. This is part of the CFXML contract. CFXMLCreateStructure callbacks must return a structure to continue parsing, else the element is skipped. In order, the calls become create -> add -> end. That doesn't work for us, however, because we want to realize all our elements before we add them to the hierarchy.\nWe return something here and move the work into endStructure so that we get final control.\n\nIn reply to: 70722579 \n. It should not be possible to easily emit a new state without returning; coupling them here neatly enforces that soft contract.\n\nIn reply to: 70722626 \n. Good catch, thanks.\n\nIn reply to: 70720366 \n. I think you should keep this as-is; use a magic static to force threadsafe init.\nstatic NSUserDefaults* standard = [self new];\nreturn standard;\nC++11 ensures it only happens once.\nIdeally, the suspend/resume methods would be per-instance; UIApplication would then call [[NSUserDefaults standardUserDefaults] _zhuLiDoTheThing]. #Resolved\n. Doing this would ameliorate concerns of state leakage.\n\nIn reply to: 70878446 \n. ?\nOur coding convention usually places ivars in the class extension block in the implementation file, which this is.\nThey're not exposed, though. min/max value are exposed only through the validation predicates.\n\nIn reply to: 70720550 \n. Alas :(\n\nIn reply to: 70721690 \n. What happens if we suspend it, then another thread injects a synchronize, and then we try to wait on an operation that'll never complete (since it was suspended)?\n. Likely, but this is not intended to be used supremely often. Logging Entity, attribute, and property descriptions is not a use case that needs to be performant.\n. Discussed offline; Doing this should suffice:\n[_synchronizeQueue addOperations:@[[NSBlockOperation blockOperationWithBlock:^{ [_synchronizeQueue suspend]; }]] waitUntilFinished:YES];\n\nIn reply to: 70908191 \n. I might prefer these to be in ForFoundationOnly.h or CFFoundation.h, but I won't hold approval for it.\n. > return [(UIColor*)color _getColors]->a; \nShould we just use curColor here instead of using the accessor again? #Pending\n. let's not static cast, this is a C file and upstreamable.\n\nIn reply to: 71390074 \n. This might do well to check that the file URLs are file URLs; it doesn't make sense to move anything else. #Resolved\n. > TraceVerbose(TAG, L\"Moving %hs to %hs\", src, dest); \nWe can probably destroy this log. #Resolved\n. > \"\\ \nThe slashes here worry me; we should be using something like -[NSString stringByAddingPathComponent:] and its friends rather than relying on the input string to have a \\ at the beginning. #Resolved\n. This entire function could be [content writeToFile:xxx atomically:NO]; #Resolved\n. pre-cache this, and simply use [_cachedModulePath stringByAppendingPathComponent:filePathWhichIsNowAnNSString] #Resolved\n. Prefer a WIL scope defer, actually. RAII is king!\n\nIn reply to: 71407993 \n. This is not testing whether we can read UTF-8, and additional encodings are out-of-scope here.\nIt'd probably be better to avoid using NSString entirely for this and just compare two NSData instances.\n\nIn reply to: 71408245 \n. dest should be an ASSERT, and src should be an EXPECT. The destination not existing will be fatal, but the source not existing will not impact the rest of the test.\n\nIn reply to: 71407123 \n. It seems unusual to use NSFileHandle here; NSData is equally capable of reading a file from disk in a single line, and makes for a more succinct test surface. #Resolved\n. It might be even better to use ASSERT_OBJCEQ(content, [NSString stringWithContentsOfFile:...]) to avoid encoding shenanigans. #ByDesign\n. Glad you think so! I used some of the other NSString tests as inspiration.\n\nIn reply to: 71446495 \n. Foundation seems capable of linking this alright; I'll check on ARM.\n\nIn reply to: 71446639 \n. I've been caught! Probably not. I'll throw them into ARM_DISABLED_TESTS.\n\nIn reply to: 71574294 \n. We can't take a dependency on error reporting here, as it requires Foundation to be loaded.\n\nIn reply to: 71574472 \n. We could throw a std::runtime_error with a known what, since we have access to the CRT. It would be just as catchable and generate a trace, I think. What do you think?\nThat said, if this is being called, something far far more egregious has failed. It'll only happen when Foundation doesn't load and stomp the superclass for the types derived herefrom, or something in CF uses Objective-C in a bad way before that happens.\n\nIn reply to: 71575314 \n. Apparently not.\n\nIn reply to: 71573534 \n. These tests actually do work on ARM, puzzlingly.\n\nIn reply to: 71574787 \n. I decided to use RaiseFailFastException. Verified that it generates a dump via WER when Local Dumps are enabled. The exception record is intact, too!\n\nIn reply to: 71582230 \n. This function is technically wrong, because C:Hello.txt is a relative path, not an absolute one.\nFixing it is out-of-scope for this change.\n. We don't exactly want that here; if length is 5, NSLocationInRange(5, {1,2}) will be false but that doesn't make this invalid.\n. We should standardize on whether we call this Windows or windows internally. OS X filesystems can be case-sensitive, and the include would be rightly confused.\nYou don't necessarily need to fix this here, but it will be something to remain aware of! #Resolved\n. I don't think this works; you need to use NSLogv, which takes a vararg pack. #Resolved\n. It looks like this file still for reformatted. #ByDesign\n. This might fail to build on Win32+ARM #ByDesign\n. allHeaderFields needs to be treated specially when deserializing. It needs to have the same callbacks as when it is created in -init, because it does case-insensitive comparisons and hashing. #Resolved\n. (So you will have to deserialize it into a temporary and then copy it.)\n\nIn reply to: 72313701 \n. bwa ha ha\nUsing a CFDictionary mapping pointers (uncopied/unhashed) to integers (indices) will avoid object creation overhead and make the per-comparator cost O(1) instead of O(2n)\n\nIn reply to: 72308284 \n. We might need a macro like ARM_DISABLED_TEST called OSX_DISABLED_TEST; also, is there a plain DISABLED_TEST? #Resolved\n. It worries me that these can't work on OS X??? #ByDesign\n. Commented out? #Resolved\n. These should also work on OS X. #ByDesign\n. These should also work on OS X? #ByDesign\n. (another instance of \"These should also ...\")? #ByDesign\n. These look like they should be shimmable. #ByDesign\n. nit: The executable suffix on OS X is just \"\", not \".exe\". Ideally the binary would be ./Foundation.UnitTests, which would probably conflict with the directory name :( #ByDesign\n. Instead of caching the HRESULT in a temporary, you can THROW_NS_IF_FAILED(holderObject.xxx) #Resolved\n. > ey in [toastArgument.userInput allKeys]) { \nThere seem to be two copies of this code, one in UIApplicationMain.mm #Resolved\n. > ```\n\n// Cre \n```\n\nTabs! #Resolved\n. > i = keys.begin() \nfor(auto i: keys) #Resolved\n. > XMLInterf \n@MSFTFox is working on libxml-related fixes that address this.\n. This was never in the .def, so it was being stripped out anyway.\nThe native functions I'm referring to are used in the above functions on 38 and 42. \"We use the System framework implementation on Mach.\"\n\nIn reply to: 72318824 \n. That is, NSGetNextSearchPathEnumeration\n\nIn reply to: 72319135 \n. We should definitely evaluate this, and possibly have vsimporter detect it and turn it on.\nFor now, it's too large a hammer to drop on 3rd-party consumers. #ByDesign\n. you've got to release it now!\n\nIn reply to: 71627991 \n. or autorelease it\n\nIn reply to: 72358602 \n. Please give this static linkage #Resolved\n. please autorelease #Resolved\n. If you autorelease in _constructCase..., please retain here #Resolved\n. or just rename it so it follows the \"Create\" naming rule\n\nIn reply to: 72358749 \n. This could move up to be the first check to save even more;\nAlso, tab characters! #Resolved\n. tabbers #Resolved\n. These may require casts to NSUInteger to look/be safe #Resolved\n. This doesn't need to be __block since you are not changing the pointer. #Resolved\n. __block here is extraneous, since you're not changing where ret points. #Resolved\n. don't retain actually, since this is a strongid. do, however, autorelease in _construct.\n\nIn reply to: 72358772 \n. It might be better to test NSArray's sort directly -- since it doesn't make sense to force a stable sort on the keys when the keys are not in a known order.\nSomething like this: Sort [3, 100, 2, 200, 1, 300]  with a comparator that says 1-3 and 100-300 are the \"same\". Then check for [3, 2, 1, 100, 200, 300] #Resolved\n. Possibly reorder these, so that the increment always stages before the decrement.\nOtherwise, you might run into an underflow situation when addObserver drops it below 0. #Resolved\n. You can still NSFastEnumerate a set! #Resolved\n. FWIW github mistakenly aimed this at the line below the line I was intending?\n\nIn reply to: 72358654 \n. Should we document removals with WINOBC comments as well? Or use !defined(WINOBJC) or similar?\nIs that a silly question because of the scope of the changes in this file? #Resolved\n. > CFStringCreateWithBytes \nSince we already have a buffer of unicode characters in the appropriate format, we should use CFStringCreateWithCharacters - it avoids the sizing dance with sizeof(UniChar) #Resolved\n. We shouldn't call both [super init] and [self init ...]; it might be more prudent to deserialize these two members and then return [self init...] from there. #Resolved\n. Sounds good to me!\n\nIn reply to: 72719013 \n. For a prototype, this is a no-op. It can stay, but it might be confusing that we're only releasing ourselves in one codepath (since neither codepath returns self) #Resolved\n. > ASSERT_OBJCEQ \nSince the AST test isn't contingent upon the result of this one, you should use the EXPECT version of the macro instead.\n(Applies globally.) #WontFix\n. Oh, this is the Reference test. Ignore me!\n\nIn reply to: 72719325 \n. I disagree; I'm not certain that we need to introduce more dependencies here.\n\nIn reply to: 72719945 \n. It might help to pull the creation logic out, if possible. However, a regex would be a different kind of \"too many things going on\" -- both pulling in a regex engine for time zone name decompilation, and then the regex itself (which I gather would follow the form GMT[+-](\\d{1,2})(:(\\d{2}))??)\n\nIn reply to: 72720016 \n. We could also just make this a new file and exclude the old one from the build locally! #WontFix\n. nah, since it's not a rule. having it being a phony rule made make think that Foundation.UnitTests.exe was out of date all the time.\n\nIn reply to: 72871776 \n. Gladly! :)\n\nIn reply to: 72871659 \n. My concern here is that we're bringing in a dependency on Projections for an otherwise strictly-WRL header.\nIs it possible to coerce this into another type of WRLToNSCollection, with another specialization? #Resolved\n. std::move is well-defined for AutoId: the source is nil'd.\nThat said: a moved-from object is said to be in an undefined state. If we give it a defined state, we are attempting to trump the standard.\nThoughts?\n. > 1<3\"] \nIs TRUE a valid predicate? If so, it might be more straightforward to just use that. #WontFix\n. > [copyObj release]; \nWhy did you remove this release? The copy is still +1. #Resolved\n. > \"1<3 \nIs TRUE a valid predicate? If so, it might be better to use it.\n. Is it possible to get better names for these tests, since you're touching them?\nNSPredicate, StringsFilteredByRegularExpression\nNSPredicate, InstanceFieldsFilteredByRegularExpression #Resolved\n. Is there a better name for this test? #Resolved\n. Since an objc property get on nil returns nil, this is still valid. :)\n. > T_TRUE([actual is \nThis could also be ASSERT_OBJCEQ, right? #Resolved\n. > ableIndexSet new] autoreleas \n[[NSMutableIndexSet new] autorelease] => [NSMutableIndexSet indexSet] #Resolved\n. !!! This is alarmingly different behaviour, but I can verify. #Closed\n. > odeWithOp \nThis test says WithOptions, but it is using the option-free variety.\nShould we add another test for the non-option-free variety, which DOES return nil for invalid data? #Resolved\n. These come up in a lot of tests. Can you unify them?\n. This is a mildly terrifying use of unique_ptr.\n. Make that very instead of just mildly.\n\nIn reply to: 73436574 \n. > langCompile Include=\"$(StarboardBasePath)\\Frameworks\\Foundation\\NSObject_NSCoding.mm\" /> \nout-of-scope; This should be unnecessary since the /WHOLEARCHIVE fixes #Resolved\n. > DISABLED_TEST \nFully disabled? Or OSX_DISABLED? #Resolved\n. Sorry, I mean the NSCoding line.\n\nIn reply to: 73436698 \n. It did, but it merged before Foundation.WindowsOnly\n\nIn reply to: 73439035 \n. > _internal_keyDerivedTwoTimes \nPlease release these, or use StrongId. #Closed\n. Chatted; Prefer EXPECT_NEAR.\n. You can combine these all into a single $(RM) -r \"$(OUT_OBJ_DIR)\" \"$(OUTDIR)\"\nIt may also be good to put a - before $(RM), to signify that an error can be ignored and should not result in a failure. #Resolved\n. I think it's safe here. It helps the case where you run make clean all without having an output directory (which is nonfatal), and the user is probably going to ignore the error from clean anyway.\nIf it's a problem with locking, the build will fail to copy it or the test will fail to interact with it, which hints at a deeper problem anyway.\n\nIn reply to: 73583199 \n. That worries me, because isEqual: should definitely call through to isEqualToIndexSet:\n #Resolved\n. > kTLSProtocol1 \nis this an iOS vs OS X difference? Can you check in the Simulator? #Closed\n. > e sharedURLCache] retain]; \nWe're retaining this but never releasing it? #Resolved\n. I wouldn't use StrongId here. Since they're property getters and setters, you'd need to implement the backing ivar, any atomicity requirements, and the getter/setter yourself. #Closed\n. EXPECT_FALSE? #Resolved\n. (No reason to ASSERT unless it must stop the test.)\n\nIn reply to: 73764722 \n. > //the below should be 0 \nThese are both indented with tabs and not extremely helpful comments? #Resolved\n. > OSX_DISABLED_TEST \nbetter to put the reason above instead of inside. #Resolved\n. Can we see why this actually fails on ARM? #WontFix\n. And split it up into real testable components?\n\nIn reply to: 73764865 \n. Could you literally not just\n```\nif !TARGET_OS_WIN32\nif (NSFoundationVersionNumber >= NSFoundationVersionNumber_OS_X_10_10_3)\nendif\n{\n...\n}\n```\n. Please include a reason. #Resolved\n. > OSX_DISABLED_TEST \nPlease include a reason. #Resolved\n. spacing, indentation. #Resolved\n. Why is \"this matches the reference platform\" now inside a block that doesn't build on the reference platform? #ByDesign\n. I would generally agree, but we can't assume that people are only putting allocated memory into these things. There's stuff like function pointers from different modules (different load addresses), section/segment headers, etc.\nThe problem is that it doesn't even make sense to \"hash\" pointers. They're already 32-64 full bits of entropy.\n\nIn reply to: 73764838 \n. Bad! This is going through the property setter, and the property is declared as taking a copy already.\nThis will 1) make an unnecessary copy and 2) leak it. #Resolved\n. If it is an exception test that isn't checking the result, please use EXPECT ANY THROW. That works on ARM.\n. The reference platform appears to pull the first filename, not the last one, in case there is more than one. #ByDesign\n. I totally didn't realize these were in ReferenceFoundation!\nThat worries me, since the tests were largely incorrect for OS X.. :( #Resolved\n. That means the reference foundation tests also ignored MIME types ... oh boy #Resolved\n. Is there room to determine whether a double-precision value truncated into a float-precision location returns false? #WontFix\n. Whoops! The revert fell over where I did both a name change and a disable.\n. Why remove these? What's it mean?\n. the above comment covers both :)\n. > keyArray.attach([_keyEnumerator allObjects]) \nThis will almost certainly explode later; allObjects returns an autoreleased and attach does not add a +1.\n. StrongId isn't the right choice for these, since autorelease takes care of it delightfully well.\n\nIn reply to: 73979408 \n. Is this API guaranteed to be thread-safe?\nIf not, there's no reason to @synchronized here. None of the other APIs do. #Resolved\n. > self removeObject:obj]; \nIt is not legal to mutate a collection while enumerating it.\nPlease build up a second set of removals and then use -minusSet: with it. #WontFix\n. > eWithFormat:@\"(SELF >= 4) AND (SELF < 32)\"]; \nplease test with an always-false predicate (removes all objects) and an always-true predicate. #Resolved\n. Nevermind: you're using -allObjects.\n\nIn reply to: 74296016 \n. This is a somewhat worrying encapsulation break.\nWe should just override copyWithZone: in NSMutableURLRequest. #Resolved\n. > EXPECT_TRUE_MSG \nPossibly attempt to mutate the new one and confirm that it didn't mutate the old one? #Resolved\n. @bbowman ARC is per-file, though, not per-module. Additionally, .attach is invalid in ARC mode, since StrongId resolves to __strong id.\nOur options here are minimal; either we use stringWithCString:encoding: which does not allow us to specify length, or we use autorelease and make 100% certain that this file is built with ARC off. My vote is for the second, since it makes it significantly easier to reason about what's happening.\n. This is the only meaningful change here. The rest is tidying.\n. Moving this up may not actually work if the macro is sufficiently silly: The preprocessor is not as advanced as all that. #Resolved\n. Not this early, no. The file that sets these sets the others as well. #ByDesign\n. This will be removed.\n. Comments would be good. [@\"x\" componentsSeparatedByString:@\"y\"] will return @[@\"x\"] if there's no y. We already made sure the length was safe above.\n\nIn reply to: 74492304 \n. You could make this test work on ARM with ASSERT_ANY_THROW. That would remove the need for both of these and the explicit catch. #Resolved\n. If you're going to check the name of the exception, however, please use the constant NSInvalidArgumentException.\n\nIn reply to: 74656977 \n. > DISABLED_TEST \nDoes this test work on OS X? #Resolved\n. I believe.\n. This behaviour was confirmed on the reference platform!\n. This change backs out the strongid use for these properties..\n. Since the AutoId destructor does the release for you, it's not necessary to stomp it with nil in dealloc! :+1: on this change though!\n. Windows.ApplicationModel.Contacts.ContactDate has some tips on integrating with actual dates:\n1. If year has a value, set year to that value, else set year to 2004 (a leap year so every day is valid).\n2. If month has a value, set month to that value, else set month to 1 (a month with every day valid).\n3. if day has a value, set day to that value (day will be set to some value automatically and we don't really care what it is so no need to explicitly set it).\nIt's possible, I believe, for a contact to have a birthday of \"8/28\" (without a year), for example. #Resolved\n. -[NSDate _dateWithWACContactDate:] sounds perfect to me!\n\nIn reply to: 75170063 \n. Since it is a category, it will require either a category force-include or manual inclusion in the .dll and .UnitTests.exe.\n\nIn reply to: 75180351 \n. Does it make sense here to have a separate version of the class that is Mutable? Similar to the Foundation way of doing things\n. $(MSBuildThisFileDirectory) #Pending\n. $(StarboardBasePath) #Pending\n. Are these files intended to be visible to Foundation-external consumers? If not, please move them to Frameworks/Foundation #Pending\n. > else \nElse: UNIMPLEMENTED_WITH_MSG() #Pending\n. > if ([_redoStack count] == 0) { \nI'm worried about who controls whether these groups exist: you create them in init AND you make sure they exist when registering an action. #ByDesign\n. If you make all of these conform to an internal interface such as _NSUndoing, you don't need to switch on the class.\n_NSUndoGroup's implementation of _NSUndoing would just call the _NSUndoing implementation on every one of its subjugates.\nWith Objective-C, class checking is a code smell. #Pending\n. The cast should be unnecessary with generic syntax. If it's necessary, please file a bug to get NSArray fixed. #Pending\n. Is this intended to be threadsafe? #ByDesign\n. You're stomping a strong referenced array with an autoreleased one. #Resolved\n. You're stomping a strong referenced array with an autoreleased one. #Pending\n. Casts should not be necessary.\n\nIn reply to: 75709894 \n. > elf.object = [[anObject retain] autorelease]; \nWhat.\nThe pool is almost guaranteed to drain before this _NSUndoCall is used. #Pending\n. No superclasses in @implementation. #Pending\n. > _NSUndoCall \n_NSBasicUndoAction? #Pending\n. With an appropriate @protocol, you won't need the base class. #Pending\n. (also: is both consumers override it, there's no reason to have it.)\n\nIn reply to: 75725333 \n. > NSUndoManagerGroupIsDiscardableKey \nSince this is a Key, you don't need Key in the name. #Pending\n. Also, why's that here and not in NSUndoGroup or NSUndoManager?\n\nIn reply to: 75725453 \n. You could likely get away with making these StrongId #Pending\n. > createMutableCopy \nWhy use this and not conform to NSMutableCopying by implementing mutableCopyWithZone: #Resolved\n. (and therefore call mutableCopy later)\n\nIn reply to: 75725849 \n. > addValue \nThis one doesn't seem to check [self isMutable] #Resolved\n. This could be not-thread-safe. How does the reference platform hold up in that situation?\n\nIn reply to: 75710964 \n. > UWP/WindowsApplicationModelContacts.h\" \nShould this be a <> style include? #Resolved\n. No particular reason; almost every other type-switch we do uses a switch\n\nIn reply to: 75930104 \n. My advice to release this only applied if you were pushing it onto the std::list in the same place you were allocating it.\nIf you think about it, this means that push: is now a consumer for a +1 reference. That's not what something named push should do.\nWhy not just have the std::lists right on NSUndoManager? It seems like we could avoid the dynamic dispatch here. #Resolved\n. > _NSUndoManagerStack \nDon't use * with StrongId; while it will work, it doesn't match the rest of the code. #Resolved\n. > SomeObject \nCan you give this a name that won't necessarily collide with other tests? #Resolved\n. > _disableCount \nWhy have both a counter and a flag that says whether the counter is 0? That just screams \"we can drift out of sync!\" #Resolved\n. > [[_NSUndoManagerStack alloc] init]; \nYou are putting a +1 reference into a StrongId; you have to use .attach() #Resolved\n. > Cannot invoke redo while undoing is active. \nPhrase exceptions more as a statement of fact; \"-redo called during an undo operation.\" or something. #Closed\n. Might as well check this before you get the grouping level! #Closed\n. And/or throw the exception.\n\nIn reply to: 76160709 \n. Because you don't want to adjust the grouping level if you're about to bail out.\n\nIn reply to: 76160720 \n. >  ; \n; #Resolved\n. That doesn't change the fact that _disableCount==0 means \"It's not disabled\"; you're using a second flag to store whether this is 0... when you could just check that it is 0.\n\nIn reply to: 76288487 \n. If this is ARC, this copy should work properly. Do we trust it? :)\n. That is awesome. Thanks!\n\nIn reply to: 76449948 \n. I would like to, and any advice you have for that would be exceptionally useful :)\n\nIn reply to: 76459746 \n. I bet I should be using kxarm.h and the procedure macros.. hm\n\nIn reply to: 76459820 \n. I don't believe we support them elsewhere right now, but it'll be good to keep in mind. Are vector types vended into q0/q1/q2/q3 even if they contain integer data?\n\nIn reply to: 76460844 \n. For what it's worth, objc does not have a type encoding for vector types, IIRC\n\nIn reply to: 76461957 \n. I take it back, gcc specifies one! ![\n\nIn reply to: 76461989 \n. jmp JUMPTABLE[ebx*4] #Resolved\n. I'm worried it'd add a little more overhead than I'm comfortable with; what were you thinking it would look like?\n\nIn reply to: 76333507 \n. The method signature's return length can be less than one register in width, so we need to pin it to at least uintptr_t\n\nIn reply to: 76335845 \n. Talked with @rajsesh-msft about prioritizing ARM exception handling and stack unwinding. For now, we'll kick it down the road a little bit.\n\nIn reply to: 76474680 \n. >    \nThere are some tabs in here, somehow. #Resolved\n. Good eye! That makes more sense.\n\nIn reply to: 76332700 \n. We may like to consider it; we can emit events based on allocation sizes, and determine what we're hitting most often.\n\nIn reply to: 76332892 \n. AddressBook is an ARC-enabled framework\n\nIn reply to: 76673982 \n. Since they're exported constant symbols, not defines or enums, they cannot be case labels :(\n\nIn reply to: 76669898 \n. @bviglietta I couldn't determine how to do this and maintain the ability to use proc/routine-specific locals :( #ByDesign\n. > WINOBJCchange \nnit: WINOBJC #Resolved\n. > EXPECT_OBJCEQ \nReally? That scares me a little #Closed\n. Why not:\n1. Use id<_NSUndoable> for the argument type\n2. Rename it to addUndoAction: (rationale: -[NSUndoGroup addUndoCallToUndoGroup:] is unnecessarily redundant, since you're already operating on an undo group #Resolved\n. > createUndoGroup \nThese method names are unclear to me. What does it mean for an undo group to create an undo group? #Resolved\n. > std::list>>::const_iterator \nThese are great candidates for auto #Resolved\n. (Naming it addUndoAction: also matches the kind of thing you're adding to it: an action.\n\nIn reply to: 76707255 \n. Or even, addUndoable:)\n\nIn reply to: 76707650 \n. > dealloc \nMake certain you call super. #Resolved\n. > runLoopModes \nArrays should be copied in; otherwise, they could be mutated by the caller. #Resolved\n. > NSUndoManagerGroupIsDiscardableKey \nnit: Key should only be in the name, not in the value. #Closed\n. > _runLoopModes \n_runLoopModes is a +1 property, by virtue of being marked copy. Please make sure it is holding onto a +1 object. #Closed\n. > popBack \n-popBack is not documented in the public interface for _NSUndoManagerStack. #Resolved\n. > _removeUndoActions \nShould these also reset the depths? You are keeping track of a lot of state, but you're not resetting it all when you call removeAllActions #Resolved\n. What if a group becomes empty while you do this?? #Resolved\n. _x = [x copy];\n_x = [x copy]; // The old value of _x is leaked.\nPlease be careful with memory management :) #Resolved\n. We already don't support vectors; I'll update this document when we do. Thanks!\n\nIn reply to: 76474190 \n. > if (_undoActionName) { \n[nil release] is valid. There's no reason to do these checks. #Resolved\n. > implementation \nThis class has retain and copy properties but it does not have a dealloc :| #Resolved\n. > Must do this in else as ordering of iterator must be incremented before removing. \nThis comment needs to be reworded to make sense. #Resolved\n. Why is it removeAllActions' responsibility to set the grouping level to 0, but there's a special function called _removeUndoActions that doesn't?\nIt seems like you'd either:\n1) have one function that clears all states\nor\n2) have one function per stack that resets stack-specific state.\nRight now, you have two functions, one that clears half the states and then individual ones that clear the other halves of the states.\n\nIn reply to: 76708543 \n. > updateLevel \nIs this called updateLevel because it is a level of updates, or because it will update the level.\nIf the first, why are we talking about updates? If the second, it doesn't look like it's setting anything... it isn't performing an update. #Resolved\n. Always memcpy'd in and out bytewise; alignment should not matter here. It looks like for struct returns the compiler emits a memcpy before the epilogue as well. #Resolved\n. Actually, ptrdiff_t may be better still #Resolved\n. > CFCharacterSetCreateWithCharactersInString \nThese character sets have to be CFReleased after you're done using them. #Resolved\n. > ```\n\n} else { \n```\n\nPlease do not reformat CoreFoundation files; return lines 1398-1414 to their original state. #Resolved\n. also 1424-1436\n\nIn reply to: 77097021 \n. > / WINOBJC : An additional method for using character sets has been added for efficiency. \nYou can word this in a less circuitous manner.\nWINOBJC: Add a function for escaping strings with character sets.\n``` #Resolved\n. (There's no need for passive voice.)\n\nIn reply to: 77097076 \n. > UTF8StringEncoding \n\"APIs ... is unsupported\" #Resolved\n. > which is why \nI do not think that we can say with certainty that that is why they deprecated it. #Resolved\n. Call [super dealloc]. . . #Resolved\n. Can you search for other deallocs in this pull request and make sure they call super too?\n\nIn reply to: 77097364 \n. > EXPECT_EQ \nnit: You can compare NSNumber instances with OBJCEQ instead of querying their primitive values... #Resolved\n. > EXPECT_EQ(object.value.intValue, val1.intValue); \nI am surprised that this undo undoes until 5. #ByDesign\n. > undoRedoTests \nyour test names lost their titlecase at this point. #Resolved\n. > undoRedoTestsWithMutableObject \nI do not know what this is testing. You're using a mutable array in the object? #ByDesign\n. > ExtraUndoOperations \nUndoWithoutAnyUndoableActions #Resolved\n. > IndividualUndoOperationsUndoCall \nThis test is identical with the one above it. #Closed\n. > dealloc \n.. such as this one. #Closed\n. > _undoManager \nYou did not retain this, you cannot release it. #Closed\n. > manager \nYou are releasing this later, but you did not retain it. #Closed\n. Heck, it says it's a retain property.\n\nIn reply to: 77098028 \n. > manager \nWhy not autorelease this? #Closed\n. > undoManager \nEXPECT_NO_THROW? #Resolved\n. If an undo group remains, what? #Resolved\n. > getListOfModifiableContacts \nThese two functions look ripe for turning into a helper that turns a contactList into a list of _ABContacts #Resolved\n. > _toAdd \nSince it's in _toAdd: What if you add, save, add again? #Resolved\n. Ah, I see. Below.\n\nIn reply to: 77099735 \n. > already \nThis error does not seem right for ReadOnly/Default #Resolved\n. > tion getResults]; \nCan this fail? Should we return true even if it does? #Resolved\n. Oh, I see. TODO above.\n\nIn reply to: 77100271 \n. but also there's no need to use self->\n\nIn reply to: 76677390 \n. > 64 \nDarn. Did they expose any constants for these that we could have used?\nIf not, we might ask them to, since that's silly.\n. > nickname \nDoes nickname not have a length limit? #Resolved\n. > NSDictionary \nYou can, if you want, save these dictionaries by making them static.\nstatic NSDictionary* abWACTypeMappingDictionary = [@{ ... } retain]; #WontFix\n. That'll avoid creating them repeatedly. The choice, however, is yours. :)\n\nIn reply to: 77101566 \n. > kABPersonURLProperty \nlength limit? #Resolved\n. > kCFStringEncodingUTF8 \nPlease do not reformat CoreFoundation files; return line 1406 to its original state. #Resolved\n. > #prop); \\ \nFix the alignment of the \\s. #Closed\n. nit: please run this through clang-format\n. Sorry, I don't understand the question.\nstret gets memcpy'd in through the invocation codepath; other return values are register-loaded by the platform-specific thunks.\n\nIn reply to: 77276695 \n. no real reason. :)\n\nIn reply to: 77266740 \n. I feel like it reads better this way :)\n\nIn reply to: 77266919 \n. > 955 AddressBook ModifyContactsTests Crashes Visual Studio Project #955 \nwhy 955 #955?\n. This was from the macros in kxarm, which we're now using directly.\n\nIn reply to: 77705648 \n. > NSMakeRange \nI don't think this should be here; it introduces a dependency from CF headers to Foundation headers. #Resolved\n. Is it safe to keep the factory around for the lifetime of the application? #Resolved\n. it does, though. unfortunately, just like vector, it will construct the entire range (or here, memset it)\ntemplate <typename CharT, ...>\nbasic_string(size_t count, CharT ch, ...);\n\nIn reply to: 77755880 \n. > CFRuntimeBase _base; \nThis is beautiful. #Resolved\n. > NULL \nHowever, we do need a deallocator here. ~__CTFont() only gets called if this __CTFont is deleted.\nYou'll probably have to implement a deallocator that explicitly placement-deletes the ComPtr and any other non-trivial types:\nvoid __CTFontDeallocate(...) {\n    thing->_dwriteFont.~ComPtr();\n    // ...\n}\nThat having been said, technically, having a non-POD type in a struct we're memsetting and stuff could be technicaly in violation of C++ standard. #Resolved\n. > NULL \nSince you need a deleter, you need an init:\nnew (&thing->_dwriteFont) ComPtr<IDWriteFont>();\n``` #Resolved\n. > [[static_cast(CTFontCopyFamilyName(font)) autorelease] UTF8String], \nYou should be able to do this with %@, and you won't need to go through Objective-C or UTF8String #Resolved\n. If you implement this in terms of CFArray, we might eventually be able to break the Foundation dependency fro CoreText #Resolved\n. > familyName \nEdge case: There may be a font called something silly like \"Black Light\", but it's not black- or light-weighted.\nAlso, I didn't realize \"Light\" was also a weight when I was making that example :( #ByDesign\n. Or well, Black Light Light, if it is light-weighted. I think that would superexplode the weight guesser.\n\nIn reply to: 78221211 \n. -[NSArray copy] absolutely returns a new array with retained references to the items inside it. So long as either array is around, the objects inside them will live on. #Resolved\n. > Arial \nShould we store the system font names somewhere consolidated?\n. Oh, I see: we have one. Arial doesn't match though o_O\n\nIn reply to: 78639264 \n. And Segoe in UIFontDescriptor\n\nIn reply to: 78640452 \n. Can you propagate this comment to CFBridgeUtilities.h? It might be useful to pretend CFBridgeUtilities is an upstream header with our own modifications (for change-tracking purposes) #Resolved\n. > __CFISAForTypeID \nI'm not super stoked that this was made non-inline. Is there a way you can preserve the inlined version for CF internal consumers and keep an out-of-line version for external ones? #Resolved\n. > mutableCopy \nThis returns a +1 #Resolved\n. oh, i see. sorry.\nI think we should use \"WINOBJC\" just as liberally in CFBridgeUtilities -- to make sure we know what we \"changed\" versus what we \"moved\" :)\nWe could probably kill this whole comment block in here, and move the commented-out CFEXPORTs to CFBridgeUtilities\n\nIn reply to: 78864285 \n. Like: in CT, CF_INLINE works fine? Even though this refers to __CFRuntimeObjCClassTable?\n\nIn reply to: 78866010 \n. I believe this is a perfectly acceptable use of a literal #ByDesign\n. I didn't know we accessed it from Foundation; I thought we went through _CFRuntimeBridgeTypeToClass! Cool.\n\nIn reply to: 79025442 \n. Smuggling things is literally the point of a void* context\n\nIn reply to: 79033322 \n. Also, I do not believe you can use a capturing lambda as a bare function pointer. CFDictionaryApplyFunction expects a function pointer, and only capture-free lambdas can be used as function pointers.\n\nIn reply to: 79033675 \n. > CFDictionaryCreateMutableCopy \nThis looks like it'll leak. #Resolved\n. Wait wait wait..\nCF_INLINE in a .c file doesn't make sense.\nThe intent of having it in the header is for every internal CF consumer to inline it -- not just the ones in this file. The compiler can't inline from one .c file to another (or, LTCG can, but it is difficult).\nCOMDAT folding might help this, but we still have an unnecessary branch to the function impl.\n\nIn reply to: 79033450 \n. My proposal is to have it in the header for corefoundation-internal consumers, and have it forward-declared and exported for corefoundation-external consumers.\n\nIn reply to: 79034377 \n. It looks like __CFRuntimeClass has a copy field, and that generic copies should be possible. I'm not sure it's surfaced anywhere, though? #WontFix\n. pRemainder != nullptr is an invariant. #Resolved\n. I'd rather be safe.\n\nIn reply to: 79024603 \n. (I'm choosing to ignore this one :))\n\nIn reply to: 79024385 \n. I am choosing to reduce the visual noise.\n\nIn reply to: 79666944 \n. At the very worst case, this will produce a .b from a..b; The rest will work properly (. in any position)\n\nIn reply to: 79673352 \n. Please DO pretend it is an NSArray.\nFast enumeration is a compiler contract optimization that allows an array to return its backing store directly, in a single message dispatch.\nNon-arrays can leverage it by putting up to 16 items into a provided stack buffer, potentially reducing the message sends required to N/16.\nAn object enumerator, however, due to its design must return one object at a time. You end up using all the power of the fast enumeration for object-by-object batching.\nIf you want to be totally type safe and not tell any lies, cast it as such: (id<NSFastEnumeration>)x\n\nIn reply to: 79686612 \n. If it is intended to be retained, it should be retained by the lineRef setter. This applies equally to every instance of x.y = z; Retain(x.y);. The burden belongs on the callee, not the caller. #Resolved\n. > CFRelease(_lineRef); \nThis is almost certainly the exact wrong place to do it! #Resolved\n. (drawRect: can be called multiple times, and does not signify the end of the ownership of _lineRef)\n\nIn reply to: 79957313 \n. No-can-do: CT* are not NSObject descendents; pending #719, when they will be.\nRetain properties require __attribute__((NSObject)), which in turn requires objc_retain and objc_release conformance.\n\nIn reply to: 79957106 \n. > _lineRef \nAlso, you still need to delete _lineRef #Resolved\n. er, CFRelease it.\n\nIn reply to: 79957519 \n. Are you using \\\\ at the ends of your lines, or just \\?\n\nIn reply to: 80341299 \n. > _InternalDecimalCopy \ninternal? make it static #Resolved\n. if possible.\n\nIn reply to: 80537096 \n. So if you just delete these otherwise blank lines, clang-format adds them back?\n\nIn reply to: 80537387 \n. This seems wrong to me; if NSDecimal is a representation of XeY, should we not compare their magnitudes Y (_exponent)?\nIf we don't, we run the risk of saying that 1e1 and 1e10 are the same. #Resolved\n. > _length \nWhat does _length represent? It would be very helpful to have comments about the structure of NSDecimal and what you were intending for your algorithms.\nIf _length is a measure of the number of digits in the mantissa (or the number of shorts required to store it), it is not correct to compare them to measure equality.\n65538e-7 and 1e1 are Ascending, but you would say they are Descending simply because 65538 requires more shorts to store than 1. #ByDesign\n. interesting.\n\nIn reply to: 80589221 \n. Could that cause us to lose precision?\n\nIn reply to: 80589284 \n. I see that normalization/compaction would help this case.\n\nIn reply to: 80589192 \n. In some places you used 0x10; in others you used 16. #Resolved\n. > NSDecimalMultiplyByPowerOf10 \nThis seems like it could just increment exponent and compact (or normalize) #WontFix\n. note/caveat: does not lock rect.\nIn the future, we will want this ! #Resolved\n. This should automatically happen if it's a ComPtr<>, right? #ByDesign\n. Ah, it is not.\n\nIn reply to: 80768683 \n. Are these changes unrelated? #Pending\n. > ([ret retain]); \nIf you move the retain into _createFrame, you'll get this for free. #Resolved\n. You could do away with the enum by using a function pointer here; it seems odd to have a four-member enum for a strictly internal method. #Resolved\n. Can you make each of the enums in this file NS_ENUMs? #Resolved\n. Since the official documentation has been gimped, we can no longer tell whether it was NS_ENUM or not.\nStill, we have an opportunity to be more concise and better-specified than the reference platform. Wherever that's possible, I think we should.\n\nIn reply to: 80775800 \n. I think a true test of a JSON parser is difficult if you're examining the raw output.\nIs there room to move some of these to round-trip tests, and make sure that what we emit as json can be read back in?\nIf we had a verifiable third-party JSON parser, we could test against it as well... however, that would cause sufficiently many problems as to be impractical.\n\nIn reply to: 80978644 \n. Alternatively, we could reconstruct these test cases to test single-element dictionaries. We can't lose fidelity, though, so we need to test everything we would have otherwise tested for a multi-member dictionary.\n\nIn reply to: 80983725 \n. > static_cast \nThis seems like a surprising amount of churn for little gain. #ByDesign\n. This will all but guarantee that range archives serialized on 32-bit platforms are unusable on 64-bit ones, and vice versa. As archives are intended for data portability, this may not be great.\nUnfortunately, I don't have a proper solution here; we may want to discuss it. #WontFix\n. would this matter at all? #Closed\n. I'd rather not get my peanut butter in my chocolate over here :)\n\nIn reply to: 81260899 \n. EXPECT_*_THROW are ARM-safe; it's @catch(NSException*) that's not ARM-safe :)\n\nIn reply to: 81263134 \n. Headers shouldn't leak namespaces into their consumers; ideally, we would fully qualify every type in the header, and use the using directive in the .mm or .cpp files. #Resolved\n. This should be wrl/client.h, since we're only using ComPtr #Resolved\n. I'm torn on this. CGPath can be manipulated from any thread, I believe, but CGContext cannot.\nI'm not certain whether objects need to be derived from the same factory to interoperate.\n\nIn reply to: 82000836 \n. Ah, I see. This document clarifies cross-factory and cross-device use.\n\nIn reply to: 82023742 \n. My concern here is that a CGPath, which can be manipulated from multiple threads, will be backed by a thread-bound ID2D1Geometry. #Resolved\n. \ud83d\ude12 this does not seem ideal #WontFix\n. >    \nnit: Tab, should be four spaces #Pending\n. > $BRANCH \nI'd prefer another variable here, like $BASE or $SOURCE.\nIn the far future, if VSO ever gets the ability to specify a repo and ref as the source, we can move away from the pull request merge-in and use Ref directly. #Pending\n. (So we keep BRANCH for \"the thing the user wants built\" in all of the cases :))\n\nIn reply to: 82856817 \n. This has been a pain in my side for literal years. #Resolved\n. This is one of many very cool C++ _CFRuntimeBase helpers, and I want there to be more.\nWhen there are more, they can migrate to BridgeHelpers. #ByDesign\n. You would not guess, but clang-format insisted on this. #WontFix\n. > _CGContextCreateWithD2DRenderTarget \nMarked for cross-library export. #Resolved\n. The regions in this file are not exhaustive. They will be. #Resolved\n. This will ideally be a function that sets up the drawing stack and takes a draw block/lambda. For now, geometries are the only things we can draw. #Closed\n. Comments on why we're using command list. #Closed\n. There are instances in which the draw target will need to be recreated, but we have perhaps lost the recipe. #Closed\n. remove some commented code. #Closed\n. I attempted to cover that here. :) #WontFix\n. This can't be at the context level without additional complexity. We are doing C++ member construction via placement new on _impl; it's undefined behavior otherwise.\nAdditionally, there is only conceptual indirection. Since impl is inlined into its parent, there isn't any practical overhead.\n #WontFix\n. Good point. I crosschecked, as I thought CF allocated with calloc. It doesn't :) #Resolved\n. I think there are still depending components here; they'll be dropped the moment it becomes feasible.\n\nIn reply to: 82915584 \n. Nope! Looks like CG defaults to these two.\n\nIn reply to: 82916541 \n. sizeof(PT)will always be 4 on our supported platforms. It is definitely not what we want. #Closed\n. Good idea. I'll do that when this starts to cache the stroke style.\n\nIn reply to: 82902120 \n. This needs to be evaluated case-by-case; I'd like to keep the control flow simple and not put too much of the logic in Impl; my ideal mental model for these things is that they are dumb data containers that we manipulate externally (ala the CF model)\n\nIn reply to: 82920043 \n. Absolutely. That would be ideal. :D\nThe effect stack will ideally consume an \"image\" input, which could be a command list or a bitmap or what-have-you.\n\nIn reply to: 82921442 \n. Marking ByDesign here, flagged as future work.\nCodeFlow needs a \"WillFixNextTime\" tag ;P\n\nIn reply to: 83067811 \n. Yep. Hopefully this entire set of functions can go away and consumers can rely on the public API.\n\nIn reply to: 82921891 \n. Indeed! I'll add a 1125 comment here too.\n\nIn reply to: 82922718 \n. Opaque and no background colour was taking an optimization on bitmap contexts; ideally all of this will be replaced with the surface logic from 1125\n\nIn reply to: 82922896 \n. Good question. I know that for invalid conditions some of the layer and stack stuff aborts immediately.\n\nIn reply to: 83026505 \n. add_pointer will transform PT to PT* unequivocally; if this becomes a generic CF helper, there is no harm in it being flexible in this regard: it's free and the generated code COMDAT-folds to the same location.\n\nIn reply to: 83036116 \n. (This comment was on an old diff. Marking Resolved.)\n\nIn reply to: 82903055 \n. Findings:\nContext supports alpha\nDefault brush is black on transparent black (see below).\nContext does not support alpha\nDefault brush is black on black.\nInference: background is alpha-0 black; when alpha is ignored, it is full black.\n\nIn reply to: 82918423 \n. Removed!\n\nIn reply to: 83078503 \n. I know :/; I'd like to specify explicit defaults here even if they can be inferred by default construction.\n\nIn reply to: 83091463 \n. As above\n\nIn reply to: 83091538 \n. (Will wrap into next update.)\n\nIn reply to: 83068100 \n. The DPI scaling will be fixed as part of CGD2D, of course, but it makes sense to keep in here right now.\n\nIn reply to: 83123845 \n. No point in keeping commented code #Resolved\n. We were faking inodes for .. some .. reason?\n\nIn reply to: 83125758 \n. It worries me that these are scatted across so many files, but I see that that is a la mode #WontFix\n. > wchar_t path[CFMaxPathSize]; \nDoes this change need a WINOBJC comment? #Resolved\n. unused iiuc #Resolved\n. > StubReturn \nas before #Resolved\n. Please log a github issue for this! #Resolved\n. > functions \nSame as last time; github issue! #Resolved\n. Can you determine this by setting _geometrySink to nullptr? #Resolved\n. Make sure you clear the points on create, otherwise Create+GetPoint will return garbage #WontFix\n. Might be good to explain why this is necessary #Resolved\n. > return true; \nfor now, return FALSE! #Resolved\n. (also, should be a CF boolean, not a C++ one)\n\nIn reply to: 83128291 \n. Empty function; is this for linking compatibility with external consumers? #Resolved\n. You already did this.\nPerhaps it can be done in init for clarity's sake!\n\nIn reply to: 83128234 \n. > struct \nYou can drop the struct in C++ files #Resolved\n. Can you use CreatePathGeometry(ID2D1PathGeometry*) here as well? #Resolved\n. Don't forget to copy the source point!\nAlso, you should be able to do mutableRet->point = path->point instead of going member by member #Resolved\n. nit: fold into CGPoint pt{x, y}; #Resolved\n. > UNIMPLEMENTED \nIn the future, this can be theirs->Stream(mySink) #Resolved\n. > CGPathAddLineToPoint \nLet D2D make this decision: Sink->EndFigure has a flag on whether to add a closing line #ByDesign\n. Perhaps they want to continue their figure! #Resolved\n. Only BeginFigure if necessary; this might do with some tracking. #Resolved\n. incidentally: subpaths map better to figures than to geometry openness\n\nIn reply to: 83128798 \n. Might be good to comment why this is necessary #Resolved\n. Did this need to pair with a change to D2DWrapper.mm? #Resolved\n. super-nit: should this be static? #Pending\n. I think one e was missed here! #Pending\n. Can we be sure this is thread-safe? #Pending\n. WontFix'ing since this code will be destroyed.\n\nIn reply to: 83068064 \n. Requires ongoing investigation.\n\nIn reply to: 83068337 \n. For now, yes. It has unmerged font drawing code.\nKeeping the file lets us take merges without conflicts until we're ready to delete it.\n\nIn reply to: 83311217 \n. This was a side effect of a global replace, and will be deleted with time.\n\nIn reply to: 83312670 \n. Sure.\n\nIn reply to: 83332624 \n. Alas, no:\nCC for this file dictates that file-internal functions are __-prefixed, and framework-internal functions are _-prefixed. Initialize/Create embody the difference between allocation and setup, as well. :)\n\nIn reply to: 83332977 \n. Didn't format it; I'll add some crazy format lines to keep this forever :)\n\nIn reply to: 83315342 \n. We could, but ideally we'll safely remove this entire function and replace it with a cold unloving void of an existence. :)\n\nIn reply to: 83333837 \n. Since we own our webview, doesn't it not matter that its delegate is being nil'd out? It won't have a word to say about it in just a few more seconds. #ByDesign\n. I intend to fix this with _CFBase.cpp later.\n\nIn reply to: 83312275 \n. Requires investigation.\n\nIn reply to: 82900919 \n. This one I think is needed, for the same reason we have to placement new the Impl structures: the C++ constructor and destructor for these embedded types need to be called before any member operators. #Resolved\n. Absolutely. Please don't use destructors for general-purpose management of lifetimes. The compiler will make sure they are called at the right times.\nYou only need the constructor and destructor calls when you bypassed new and delete, like in CFInit and CFFinalize. #Resolved\n. Additionally, using a value after it has been destructed is totally in the realm of undefined behaviour. It is the proverbial kiss of death. #Resolved\n. If this does that, why is it safe to do it earlier in this file? #Closed\n. You're right. This is a holdover from when I tried this:\nstruct CGX: base {\n    struct Impl { ... };\n};\nAlas, there were various reasons it didn't work.\n\nIn reply to: 83496476 \n. I will merge this into develop without the Context changes, and then we can resolve.\n\nIn reply to: 83501621 \n. > _ \nto echo Raj's earlier comment, these nested member _s can die #Resolved\n. After the merge, consider CoreFoundation::CppBase<__CGPath, __CGPathImpl> #Resolved\n. > transformatrix \none of these things is not like the others\nit's the transformatrix #Resolved\n. > __CGPathEqual \nNot used, but perhaps rename to CGPathEqual(...) and stomp the other one. #Resolved\n. Nit: keep the style of the above comment (WINOBJC:)  #Pending\n. > numBytes \nOnly -1 is an error. 0 < numBytes <= maxBytes is legal and should be retried to consume the rest of the buffer. #Resolved\n. I'm wary of introducing a copy here. #Pending\n. > [tempData appendBytes:byteBuffer length:result]; \nSorry, two copies. #Pending\n. At the very least, NSMutableData has mutableBytes, which you can write into up to .capacity.\n\nIn reply to: 83926383 \n. I certainly hope NSURLConnection is up to the task. As well, I wonder if the reference platform short-circuits file URL handling.\nIt is fully possible to load a file from a file URL without spinning a run loop inbetween. #WontFix\n. Since this is in a public folder, use <> #Resolved\n. > include \nPlease use import unless strictly necessary #Closed\n. No need to fully qualify these names. #Closed\n. > D2D1::Point2F( \nPerhaps put this into D2DWrapper.h\nc++\ninline D2D_POINT_2F _CGPointToD2D_F(CGPoint point) {\n    return {\n        point.x, point.y\n    };\n}\n``` #Closed\n. Unnecessary now! #Closed\n. nit: fold into CGPoint pt{x, y}; to avoid using the assignment operator or copy constructors.\n\nIn reply to: 83128604 \n. Do we have notes for this? #Closed\n. > D2D1::Point2F \nPerhaps use helper #Closed\n. > CGPathMoveToPoint \nWhat if you move to a point while you're in the middle of drawing a figure? #Resolved\n. > CGPathMoveToPoint \nIs this correct? Move first, then add lines? Or does it add a line to the first point. #Closed\n. > CGPathAddEllipseInRect \nThis is not for this review:\nI wonder if we can use path combining, or somehow stream an ellipse geometry into the path geometry. #Closed\n. This sentence doesn't into sense #Closed\n. > INFINITY \nX+Y are infinite, width+height are 0? #ByDesign\n. > D2D1_RECT_F \nThis could use an inline helper too! #Closed\n. D2DRectFToCG\n\nIn reply to: 83932636 \n. We should note this for further investigation.\n\nIn reply to: 83946485 \n. So now we are just calling endFigure and setting the current point to the starting point?\nNo need for the point compare, then! #Resolved\n. and now we are allowing D2D to insert the closure?\n\nIn reply to: 83963372 \n. Will this make the pretty star go ugly? #Resolved\n. Per the haps.\n\nIn reply to: 83963404 \n. clang-format put this all on one line :( #Closed\n. The reference platform logs for these. #Resolved\n. This is a way smarter interpretation than mine. Thanks! #Closed\n. Nope, these ones are intended to be silent (as per reference platform) #Closed\n. @bbowman isn't tempdata just an NSData already? You're still doing a copy...\n. actually, there is; but i have the direction backwards.\nCGFloat flips between float and double in certain reference platform configurations, but D2D prefers float. Since we're passing a raw buffer, we must type-match.\nI should be storing CGFloats internally and converting to float here.\n\nIn reply to: 84096583 \n. > D2DUtility \n(This file doesn't need to be renamed.) #Resolved\n. Definitely don't put this inside the __Impl class for CppBase. CppBase has one already. #Resolved\n. This structure should eventually move into CGImage.mm and be completely private. #Resolved\n. > number_of_jpeg_files \nno need for this, you can use _countof on a statically-initialized array. #Resolved\n. The format of this file was changed in error, and it needs to be not changed.\nIt clutters up the diff, and makes it harder to follow.\n\nIn reply to: 84149027 \n. I think running clang-format (once fixed) will clear these all up. #Resolved\n. self is a perfectly cromulent name for a parameter to a function that intends to act like it was an Objective-C method body. Which is fine.\n\nIn reply to: 84145012 \n. Brilliant!\n\nIn reply to: 83980776 \n. 0 doesn't bother it, but i'll bail out here anyway\n\nIn reply to: 83978267 \n. I'm leaving this one open for now; I know we need to recreate the target, but we might have to do some magic to figure out how to recreate it; perhaps we want a callback that does it for us, since the render target can be specified by an external caller.\n\nIn reply to: 83979563 \n. (There's no good generic way for us to recreate it, and we'll need to log all the device-specific resources we use to recreate them too.)\n\nIn reply to: 84196354 \n. perhaps this code should save the transform and restore it; we need to make certain that we are composing command lists down with the right transformation, but other direct draw functions than this need to know about the transformation too.\nEvaluating.\n\nIn reply to: 83979657 \n. I may keep this for now.\n\nIn reply to: 83979877 \n. This is covered by upcoming tasks.\n\nIn reply to: 84129211 \n. Adding a todo for #1194!\n\nIn reply to: 84196384 \n. > (...) \nnit: remove this (...); __PRETTY_FUNCTION__ includes one ;P #Closed\n. Are font faces cached appropriately so that comparisons like this are legal? #Resolved\n. (What if the DWriteFontFaces come from different factories?)\n\nIn reply to: 84346961 \n. We might need a CF_BRIDGED here so that they can be treated like id in some cases\n. magic statics will work a treat here, but there's little wrong with dispatch_once\n\nIn reply to: 83340826 \n. every class is now bridged, so it does work... but it still is underideal.\n\nIn reply to: 83339711 \n. Is there a public API to get this? It looks like there should be since it returns an enum value. #Resolved\n. > GUID_WICPixelFormatBlackWhite \nWe have to match the bitsPerPixel with their WIC counterparts:\n1bpp -> BlackWhite\n2bpp -> 2bppGray\n4bpp -> 4bppGray\n8..\n16..\n32..\nPresumably we want fixed point for 32, but it's weird there's no UINT version of it. #Resolved\n. > GUID_WICPixelFormat32bppCMYK \n\nGUID_WICPixelFormat32bppCMYK \n\nYou might be able to get away with GUID_WICPixelFormatDontCare in these two, but I'm not sure. #WontFix\n. > _CGImageJPEGRepresentation \n\n_CGImageJPEGRepresentation \n\nIt doesn't look like this actually wraps it in a container format ... it just returns the bytes after converting them to another pixel format. #Resolved\n. (I'd expect PNGRepresentation and JPEGRepresentation to return an NSData containing the PNG/JPEG itself, not their pixels.)\n\nIn reply to: 84357404 \n. Can IStream return without writing every byte? If so, do we need to finish the write? #WontFix\n. Can't we unify these codepaths?\nInitializeFromMemory should work here, too, and CreateDecoderFromStream takes a decoder vendor GUID...\nwhich means this entire conditional folds down into\nCreate Stream\nInitialize from Memory\nCreate Decode From Stream ( ... user-provided GUID ... )\n``` #Resolved\n. Nope! Just layout.\n\nIn reply to: 84550159 \n. I'm concerned that this gives the caller too much control (or, alternatively, the need for too much control)\n. > {} \nPrefer CGRectZero\n. Sorry if this is a dupe comment; it looks like github ate my original.\nWhat is _textContainerInset used for now?\nTechnically there is no guarantee that drawRect: gets called with the full bounds of the view (!) as well, so in this case, you might draw the text in a weird location.\n. Practically, it's almost always called for that... but making assumptions like this makes it hard for us to optimize dirty regions later.\n\nIn reply to: 84553408 \n. This is necessary for integration with CF while having C++ members.\n\nIn reply to: 84554973 \n. This is necessary for integration with CF while having C++ members.\n\nIn reply to: 84555028 \n. I think we should avoid registering these things on library load, but:\nif you move this entire thing into CGFontGetTypeID, it will automatically only happen once, thread-safely, the first time somebody uses CGFont. #Resolved\n. > fontFamilyNames.release(); \nI'm a little worried that a function named with the Get convention is returning a +1 object, when Get specifies that it should return a +0/unowned reference. #Resolved\n. > Names.release(); \nSame as abov #Resolved\n. e\n\nIn reply to: 84564008 \n. This one, however, is great. :) #Resolved\n. Same as in CGFont #Resolved\n. I really don't like the use of special file: schema URLs for special behaviour... if there were some way to get this to interoperate with the existing URL protocol system, that'd be grand.\nIf not, I understand, and accept this as a cost... but it is clever and opaque. #Closed\n. > ULL_IF_FALSE(maxItems > 0); \nIs there a future world where they're unlimited and managed by the system? We may not want to break on those platforms. #Closed\n. > addint \nnit: spelling? #Closed\n. WIL cannot be used in the xplat tests, and I think we should aspire to have all our tests xplat-capable.\n\nIn reply to: 84808008 \n. > on\\ \nplease frontslash this #Resolved\n. these implementation details should be hidden inside impl; generally if you find yourself saying x.y = x.Z(), that should be the reponsibility of x ;) #Resolved\n. or put into a woc::unique_cf! :)\n\nIn reply to: 84944101 \n. I don't understand the second question, but: unique_iw lacks a T[] specialization (projected fix here), so we need to use the pointer version.\n\nIn reply to: 84944596 \n. > ASSERT_TRUE \nDo we not have the OBJCEQ/OBJCNE macros in here? #Closed\n. Did clang format this weird? #Closed\n. agreed; this requires cleanup.\n\nIn reply to: 84942793 \n. > PlatformSupport \nThis should be EbrFile now, presumably #Closed\n. > EbrGetOSFHandle \nDoes someone use this?\n. > regex \nI know this isn't your code, but we're using a whole regex engine to detect a single letter and a colon?!\n. > auto \nOnly use auto when the return type cannot be easily expressed or is intuitively obvious from the righthand side.\n. > m_fid != - \nHow do we get an EbrIOFile with a fid of -1?\n. > storageFile \nWhy pass-by-rvalue-reference with std::move on the outside (keeping external consumers aware of our internals) instead of pass-by-value with std::move on the inside? There does not appear to be consensus on this on the internet at large, but it looks like a lot of people lean towards the second.\n. but why?\n\nIn reply to: 84938944 \n. > AwaitResult \nWill this not break due to the vtable thunk compiler bug?\n. > AwaitProgressComplete \nAs above? #Closed\n. I am very surprised this works.\n\nIn reply to: 84969356 \n. > th = 0; \nnit: Why = 0 here and {} above? #Closed\n. It bothers me so much that ReadAsync can give you a different buffer than the one you provided, effectively eliminating nocopy optimizations. Is there something we can do to fix that? #Closed\n. > result \nThis probably wants to be initialized. #Closed\n. fwrite returns a size_t, and write returns a ssize_t; I'd prefer that if we're going to pretend to be POSIX we follow their signatures. This gets rid of the cast on 289, too. #WontFix\n. > int \nsame as Write #WontFix\n. > int \nWill this be enough for huge files? #Closed\n. > initWithStorageFile \nperhaps this should be initWithPathToStorageFile, since you can't really have a \"URL\" with a \"storage file\" #Closed\n. > source \nnit nit: bitmapImageSource = std::move(source) #Resolved\n. add this to your next pull request, not this one.\n\nIn reply to: 84975050 \n. nit nit: if (!colorSpace) #Resolved\n. I still wonder what happens if you just fold these together and pass the decoder vendor #Resolved\n. I think FAIL_FAST is most appropriate here, as we cannot fulfill the user's request at all, but we can't throw an exception since we're behind both an ObjC and a C++ ABI boundary.\nFAIL_FAST may not be correct in all cases, and this will require continual evaluation. Alas.\n. Done.\n. Whoops, thank you.\n. @aballway It exposes an interface more like classic COM APIs, which don't consume C++ types.\n. This scale is for Cairo's sake and needs to be done.\nPerhaps we should keep it and apply an inverse scale based on the DPI to the D2D context instead of eliminating it here.\n. It complained when I attempted to capture a member by reference. Don't think I didn't try ;P\n\nIn reply to: 85365904 \n. In a future world where we differentiate CGFloat based on some platform-specific thing, yes.\n\nIn reply to: 85250462 \n. Correct; CGContext is not explicitly thread-safe.\n\nIn reply to: 85250507 \n. I don't believe; all the context APIs are noisy for context, but they differ on their noisiness for parameters. We can definitely evaluate it.\n\nIn reply to: 85250610 \n. mehhh fiiiineeee\n\nIn reply to: 85251197 \n. no.\n\nIn reply to: 85366284 \n. you caught me.\n\nIn reply to: 85250925 \n. Context always noisy, empty path not noisy.\n\nIn reply to: 85251032 \n. Either is fine.\n\nIn reply to: 85367100 \n. You really hate early returns, don't you?\n\nIn reply to: 85367729 \n. ughghg i got this backwards because i suck\n\nIn reply to: 85366792 \n. Perhaps NS should just be implemented in terms of UI?\n\nIn reply to: 85553544 \n. or the other way around actually.. yeah\n\nIn reply to: 85629574 \n. We had this as NS_ENUM before; it's somewhat silly but it makes it unable to be used itnerchangeably with NSTextAlignment.\n\nIn reply to: 85448628 \n. Look in the history for this file for potentially more info!\n\nIn reply to: 85629604 \n. > preparePathForEditing \ncurious why we have Uppercase and notUppercase functions in the same class #Resolved\n. Each INFINITY,INFINITY,0,0 rect here should just be CGRectNull #Resolved\n. Why? nullptr is superior in every way. #Resolved\n. > NULL \nEvery NULL to nullptr #Resolved\n. die you comment! #Resolved\n. I don't recall doing that, but I think naming consistency within a class trumps other concerns. :)\n\nIn reply to: 85790869 \n. Oh god, no! Great catch.\n. Chatted about this. I prefer explicit, and right now capturing this is a very minor worry.\n\nIn reply to: 85810642 \n. unique_cf takes care of this.\n\nIn reply to: 85814512 \n. This is not redundant, as ->Path() will create a useless path otherwise. #Closed\n. This is not redundant, as ->Path() will create a useless path otherwise. #Closed\n. This is not redundant, as ->Path() will create a useless path otherwise. #ByDesign\n. This is not redundant, as ->Path() will create a useless path otherwise. #Closed\n. Rather not; that file does not express a dependency on Logging.\n. C++-style casts are line noise.\n. dun-dun\n. I do not understand. You commented on a setter and asked if we could move to setters.\n\nIn reply to: 85824100 \n. I cannot say I understand or agree with our convention of introducing A_BUNCH_OF_MACROS to do really common things; it flies in the face of our other coding convention, \"don't use macros very often\"\n\nIn reply to: 85824909 \n. This is covered by the comment on _CGContextSetShadowProjectionTransform\n. This colorspace does not seem to be used.\n. This is a helper that's only used internally. Why?\n. Only used internally?\n. I very much dislike this. Very very much.\nMembers should almost never return mutable references through which you can make an assignment.\n. Can this fail?\n. If you use woc::unique_cf here, you don't need to worry about lifetime.\n. Absolutely not.\nThe user requested a path. We cannot fulfill that. These APIs cannot \"Fail\" in the classical sense.\n\nIn reply to: 85839205 \n. This is getting completely out-of-hand.\nWe are supposed to introduce these sorts of things to make the code clearer.\nImpl is a dumb data container, for all intents and most purposes. This isn't an exposure across a public interface. If every private implementation detail needs a protected-private-public interface, we'll find ourselves drowning in methods with identical names where a basic indirect and field access would work.\nImpl is literally the struct we have to use because we can't put the members on the outer struct. It doesn't need to be treated like a separate entity.\n\nIn reply to: 85838765 \n. In short, this all damages code clarity.\n\nIn reply to: 85839897 \n. wut #Pending\n. @bbowman You're absolutely right in this case: an lvalue reference screams for a refactor. In a lot of other cases, however, we're advocating for identically-named functions two or more levels deep to do simple data access, which is less unequivocally-right than not using lvalue references.\n\nIn reply to: 85843540 \n. I would expect a new path to have no open figure?\n\nIn reply to: 85844394 \n. please something more like:\nHRESULT _CGPathGetGeometry(CGPathRef path, ID2D1Geometry** pGeometry);\n\nIn reply to: 86264580 \n. > _GetD2DFactoryInstance \nThis might be going cross-module soon; perhaps it should be named _CGGetD2DFactory(), and have the signature\nHRESULT _CGGetD2DFactory(ID2D1Factory** pFactory);\n``` #Resolved\n. > _getAndClosePathGeometry \nif(!HasPath)\n// we can abort\nOtherwise, Path() will create an empty path just to draw it #Resolved\n. > __CGContextDrawGeometry \nWe may need to invert the user transform on this draw, because otherwise we could apply a double-transformed path. #WontFix\n. Please format! #Resolved\n. > Dimanip \nnit: Shouldn't these be DManip, not Dimanip? #Resolved\n. You do not need to set StrongId instances to nil. #Resolved\n. > _setManipulationMode \nMake this static?\nIt could also be a method.. #Resolved\n. This tests a few things: Members expressible only through C++ semantics work properly, constructors and destructors get called properly, and inherited members do not lose their magic.\n. You shouldn't be able to call T::CreateInstance with anything but T; and I'd like to use reinterpret to circumvent any chicanery the compiler may pull on layout adjustment. I don't expect it to do any, but the block of memory we get back from _CFRuntimeCreateInstance is definitely normally a __CFRuntimeBase first and foremost.\n. cfisa, cfinfo.\n. > nil \nnit: nullptr, since it's not objc #ByDesign\n. > _CTFrame \nIf you do a StrongId<_CTFrame> and then .detach() when you return, this will memory manage sanely.\n. prefer sFactory.CopyTo(pFactory) #Resolved\n. If we are not using a magic static, there is no real point in having this be a separate function #Resolved\n. Please make this a ComPtr<ID2D1Geometry>. Right now you're getting a +1 reference to a Geometry and then dropping it on the floor.\nYou should almost never use bare COM interface pointers. :) #Resolved\n. Unless you're at a module boundary, or a boundary that makes sense (like CGContext <-> CGPath), and even then only in function parameters. #Resolved\n. Can this fail? #ByDesign\n. You might need to .CopyTo this. COM out pointers are expected to be given a new +1. #Resolved\n. only CopyTo\nNow you are doing +2. #Resolved\n. The render target generators in CGImage and friends are going away (and are only being updated as necessary as part of this PR); ideally, yes, we'd fix everything all at once. There's little point when it's gonna be turfed. :)\n. Is there a @Status we can use for this? That'd be cool.\n. https://github.com/Microsoft/WinObjC/pull/1307#discussion_r86611665 \ud83d\ude09  #Closed\n. We should push for a @status to note this, it'd be cool to show our additions in another chart area #Resolved\n. > eTransform re \nInstead of poking at these directly, you can use CGAffineTransformMake(a,b,c,d,tx,ty) #Resolved\n. If one static referring to another as part of its initialization is safe, then this should be totally fine.\n. > RETURN_HR \nreturn sHR?\n. just a nit.\n\nIn reply to: 86633664 \n. nit: These two could be in the body of the class, right? #Resolved\n. > EXPECT_TRUE_MSG \nyou could FAIL() << \"message\" for this to escape the weird EXPECT_TRUE(false) #Resolved\n. Or, ADD_FAILURE_AT() << \"msg\" to make it a non-fatal failure.\n\nIn reply to: 86888788 \n. Good call. I'll put that and the includes under TARGET\n. Yep; once we're done here we can go through and adjust them vis-a-vis #1323 \n. The test will immediately except if you do that; no point.\n. That's a good point. I'll think on the best name for this.\n. Nits about these guys:\n- __declspec(thread) objective-C things will not be properly ref-counted.\n- they're being compared against NULL (not even nullptr!) instead of nil everywhere in this file.\n  #Resolved\n. yeah: if before is nil, [nil _layerProxy] will return the right thing. Unless it's a C++ type, but really the ideal here is to do the right thing :P\n\nIn reply to: 86621323 \n. the compiler on the reference platform memsets an out struct pointer to 0 if the destination of the message is nil.\n\nIn reply to: 86900544 \n. >  inline ComPtr& RenderTarget() { \nWe can't do this, unfortunately. It's not virtual, so callers who think they're calling CGContext::RenderTarget will be statically compiled to refer to it (and it may be inlined.)\nI think this logic belongs in CGBitmapContextCreate, or a helper, which will allow us to back out this change, and the other SetRenderTarget change. #Resolved\n. Prefer not to know about Image's internal methods; look at CGPath with its _CGPathGetGeometry(...) #Resolved\n. > THROW_IF_FAILED \nNo throw here; FAIL_FAST is more appropriate #Resolved\n. > CACompositor \nUnnecessary include? #Resolved\n. Even cooler: QuartzCore can do this itself, and call _CGContextCreateWithD2DRenderTarget :) #Resolved\n. > _CGImageObtainImageBytes \n\n_CGImageObtainImageBytes \n\nnit: Maybe _CGImageGetRawBytes() #Closed\n. > _CGImageCreateCustomWICImage \n\n_CGImageCreateCustomWICImage \n\nIf QuartzCore is the only one who knows about this, it might be good to move CGIWICBitmap into QuartzCore and provide _CGImageCreateWithWICBitmap\nThat'll expose a similar API to Context, _CGContextCreateWithD2DRenderTarget #Closed\n. > _CGImageConvertImageToPixelFormat \n\n_CGImageConvertImageToPixelFormat \n\nnit: Rework this name so it has Create in it; Create says \"I am returning a new +1 object\" #Closed\n. Worried about this; should it definitely be BGRA and not RGBA?\n\nIn reply to: 87028254 \n. > nil \nnit: nullptr #Resolved\n. In this case, we want to CGImageRetain the image they pass us. Do that in SetImage #Resolved\n. and then remove the comment here.\n\nIn reply to: 87101477 \n. > context->SetRenderTarget(renderTarget); \nI still don't think this should be here; let's back out SetRenderTarget and we can land it with a full constructor once develop merges in.\nWhat say you? #Resolved\n. >  \nPrivate header; consider using \"s #ByDesign\n. > _CGImageCreateWithPixelFormat \nnit: CreateCopyWithPixelFormat :) #Resolved\n. You can replace this with a call to _CGImageCreateWithWICBitmap() #WontFix\n. Does this dynamic_cast definitely work for COM things? #Resolved\n. This file can't include CACompositor; quartz links CG #Resolved\n. > lacks \nnit: lack #Resolved\n. > texture \nnit: comment slightly wrong #Resolved\n. >    \ntabs! #Resolved\n. > IDisplayTextureImpl \nI guess the naming convention for an Impl of an I is CThing #WontFix\n. (That is, IThing -> CThing)\n\nIn reply to: 87102644 \n. > ),t \nformat this! #Resolved\n. > texture \nI don't think texture exists in this scope. #Resolved\n. Ignore me, it does.\nThe names are a little confusing; can you clear them up a bit?\n\nIn reply to: 87102962 \n. Can you document these changes in the commit log as well?\n. > mutableCopyWithZone \nCheck on the reference platform whether [mutableStyle copy] gives you an immutable one or a mutable one.\nConvention states that a copy of a mutable object is immutable, but there are some exceptions. #Resolved\n. > nonatomic \nnit: add a comment that you're redeclaring these as readwrite. you might even want to explicitly state it so that the compiler will have the chance to complain. #Closed\n. > UITextAlignmentRight \nShould you instead be checking the NS versions? #Closed\n. > init \nIs it true that the defaults for this are all zeroes across the board?\n. !NO!\nIf this file is not ARC-enabled, and tabStops is not a StrongId (it's a property's backing ivar, so it's not likely to be a StrongId), you must -release_ it. #Closed\n. > [decoder decodeObjectForKey:@\"_NSParagraphStyle._tabStops\"]; \n!NO!\nIf this file is not ARC-enabled, and tabStops is not a StrongId (it's a property's backing ivar, so it's not likely to be a StrongId), you must -retain_ it. #Closed\n. If these values do not approach the boundaries of a signed int, please uncomplicate the archive by storing them as ints. Perhaps int64s if you're worried about the uint boundaries.\n. Consider this only a nit.\n\nIn reply to: 87270844 \n. wut?\n\nIn reply to: 87270987 \n. > CFArrayRef \nperhaps this should be a static unique_cf, just to round it all out. That way when the module unloads, CFRelease will be called.\n. Is it even possible to construct an object with itself as the constructor parameter?\n. If not, why bother checking?\n\nIn reply to: 87271484 \n. > typedef \ntypedef struct x { } x; is unnecessary in C++; x enters the scope in which it was created automatically.\n. SetValue can fail; should a failure (i.e. an invalid CTParagraphStyleSetting) return null (and destroy the object?)\n. > paragraphStyle \nno point in even calling in if !valueBuffer; thjat way you can simplify the code that follows. #Closed\n. we should seek to declutter our code of unnecessary conditionals the compiler can easily optimize out in every case ;)\n\nIn reply to: 87272321 \n. like: do they accrue to another bugfix?\n\nIn reply to: 87268996 \n. > EXPECT_TRUE_MSG \ncan you use EXPECT_NEAR?\n. > EXPECT_TRUE_MSG \nwhy not EXPECT_NE?\n. > EXPECT_TRUE_MSG \nwhy not EXPECT_TRUE_MSG(success,?\n. Why fix them for just one malcompliance and not another?\n\nIn reply to: 87272919 \n. > }; \nplease format\n. > _convertToCTParagraphStyle \nCan this method be named something that reveals that it returns a +1?\n. > NSMutableParagraphStyle \nPlease add a test that copies can/cannot be mutated as expected on the reference platform.\n. The default DPI for bitmap render targets is 96; scale is handled at a fundamentally different level here.\n. This creator returns a +1; you'll need to make sure it's appropriately lifetime-tracked here.\n. Design question: Why did we go for mirroring all the properties, instead of composing an NSParagraphStyle from a CTParagraphStyle? That would have made this easier, made copy easier, and made mutable/immutable slightly easier.\n. Git does not track directories, it tracks files. This is an empty file intended to keep the data directory around.\n. :lgtm:\n. nit: i don't know whether this should be tested; we don't want to capture platform version behavioural changes\n. Some of these can be empry; UT_FRAMEWORKS is one of them.\nIf RESOURCES, RESOURCE_DIRS, FRAMEWORKS, CFLAGS, or LDFLAGS are empty, they're ignored.\n. Actually, the UIKitMimicTest fixture does exactly that; It presents a 2x-scaled context.\n. c\n// Number derived by absolutely guessing at a sane size for an image; 1MB\n1048576\n. That is worth calling out, absolutely.\n. These three arrays are autoreleased and will be automatically destroyed when the pool containing them goes out of scope.\nPlease set them with retained values #Resolved\n. Since this is a publicly-exported constant, its type cannot be changed. We'd have to do one of:\n1. wrap them in a static getter that has a static strongid in it\n2. set them in +load\n3. set them statically to [@[x] retain]\n\nIn reply to: 87642191 \n. @yiyang-msft nit: use [NSMutableArray array] or\n\nIn reply to: 87643726 \n. or, perhaps, [NSMutableArray arrayWithObjects:([ret count] ? 0) ? ret : nil, nil]\n\nIn reply to: 87644080 \n. #1369 removes alpha from this check. #Resolved\n. I am not removing this because #1368 will just re-add it.\n. > __CFStringCreateUppercaseCopy \nIf this is only used in this file, it can be static! #Resolved\n. > _DWriteFontProperties \nIs it reasonable to return an empty font properties versus a nonexistent font properties? #ByDesign\n. I would very much prefer that not to be the case\n\nIn reply to: 87663736 \n. c\nint numberOfGeometriesInGeometries = sizeof(&geometry) / sizeof(geometry);\n\ud83d\udc4e \n. Good call: It actually returns the size of the context (!!!!!!!!)\n. Because kCGPathEOFill is kCGPathFill | anUndefinedConstantForkCGPathEOToggle #WontFix\n. you hate early returns.\n. oh i see, this is handled elsewhere.\n\nIn reply to: 87677987 \n. > _CGGetPixelFormatProperties \nDoes this need to be exported? #Resolved\n. > RETURN_FALSE_IF \nyou could just\nc++\nreturn iterator != xxxxx.end();\n``` #Resolved\n. <memory> only #Resolved\n. Let's log for this too; perhaps UNIMPLEMENTED_WITH_MSG? #Resolved\n. You don't need to clear these here; the dtor should never get called twice. #ByDesign\n. I suppose you could use new[] and delete[] instead of IwMalloc and IwFree! #Resolved\n. Oh! Yes. This got muddled in the condition flip AJ suggested.\n\nIn reply to: 87893114 \n. Indeed. We absolutely should; this should be part of CGPath, but CGPath's default is backwards from CG's default right now.\nI'll file an issue to track it and its removal here.\n\nIn reply to: 87899206 \n. I'd reword this; CGBitmapContext does not currently support conversion and can only render into 32bpp PRGBA buffers. #Resolved\n. I might suggest having a test that draws a red rectangle into a 1x1 PRGBA context and checks that the buffer contains 0xff, 0x00, 0x00, 0xff.\nAdditionally, you might want to add a test that goes through the image pipeline (Context -> Render -> Create Image -> Read Pixel); that would have caught the GetResolution issue. #Closed\n. > D2D1_COMBINE_MODE_XOR \nPer our discussion; is XOR correct? #Closed\n. > SetPathGeometry \nThere shouldn't be a world where you can set one but keep an old value in the other.\nHow about SetPathGeometryAndSink(xxx, nullptr), SetPathGeometryAndSink(xxx, yyy) #Resolved\n. Reference platform docs say closes and completes; \"adds a line segment\" #Closed\n. Ignore me, i am braindead.\n\nIn reply to: 88095262 \n. > __CreateCGPointWithTransform \nI am worried about transformed points without transforming the beziers somehow as well.. hmm. #Resolved\n. I don't think this is what we want: the transform must apply to the ellipse, not to the rect it's contained in. #Resolved\n. > CGRectApplyAffineTransform \nAs above with transform concern. #Resolved\n. Here's a thought: What if we \"simplify\" an ellipse or rounded rect geometry into the sink for our existing geometry?\nThat also allows us to propagate transform via D2DTransformedGeometry. #Resolved\n. If you do that, however, i'd ask that you please make this a helper in __CGPath\n\nIn reply to: 88096284 \n. No.\nPlease move the one from CGContext into D2DWrappers and adjust its visibility appropriately. #Resolved\n. yes. they should.\nIf they're not, please set x = std::move(y)\n\nIn reply to: 88083735 \n. > remainingRect \nshould you invalidate remainingRect otherwise? it will contain garbage if you don't.\n. Storing this as a pointer is bad news: you'll probably be keeping a pointer to a transform that was on the user's stack. #Resolved. How much of this OLD_CODE is still necessary? #ByDesign\n. While you're doing this, how do you feel about getting rid of Impl? #ByDesign\n. Possibly change the issue number but keep the comment! #Resolved\n. >_CGImageGetImageSource \nplease prefer out pointers; _CGImageGetWICImageSource would return an HRESULT and take an IWICImageSource** #Resolved. I think this one should perhaps be noisy\n\nIn reply to: 88759177 . I think there's a d2d drawing mode that will do this in one go. Layer clipping is somewhat expensive!. Please document why the image needs to be flipped. #Resolved. >d2dBitmap \nCan probably capture this by reference to save an AddRef/Release #Resolved. >CGRectEqualToRect \nIf they're equal, just call DrawImage without clipping #Resolved. please annotate issue number #Closed. private; needs rename.\n\nIn reply to: 88747870 . I'm confused about what this math is doing; please explain w/ comment? #Resolved. >_CGImageGetPixelFormat \nnit: get WIC pixel format #Resolved. Don't commit this! #Resolved. base first!. i know this wasn't you, but can you make this a <>?. I think maybe:\nIf the input is integral to the function doing what it's supposed to, you should be noisy.\nCGContextAddPath can take a null path silently because a null path is just like no path.\nCGContextDrawImage, however, can't take a null image quietly because otherwise what would it be doing?\n\nIn reply to: 88962608 . please DISABLED_ your new tests for now; we can force-run them with GTestRunner in the interim. #Pending. Darn CFAssert!. While you're reformatting this, can you remove the text from the exception that says it's throwing an exception? that's just silly!. This should probably be _nilSymbol.attach([symbol copy]) to uphold the property contract.. This will erroneously fail to overwrite an extant file! #WontFix. bah.\n\nIn reply to: 89018241 . Surprisingly, I never profiled it to hit the alternative case.\n\nIn reply to: 89018766 . That is to say: It is too reliable.\n\nIn reply to: 89021592 . Probably not.\n\nIn reply to: 89019014 . The actual constant on windows is MAX_PATH.\n\nIn reply to: 89023623 . Not a problem.\n\nIn reply to: 89012430 . It's NO. #Resolved. frame isn't even used here.\n\nIn reply to: 89177950 . >_tintColor \nThis scares me a little. I know our CGColor is a UIColor, and this code isn't yours... but would you mind adding a call to -[UIColor CGColor] for these? #Resolved. This will not compile on OS X, as .cpp files must be Objective-C-clean. #Resolved. This is not new code. It was moved from CGColorSpace and cleaned.. This ended up exported anyway :|. nit: reinterpret_cast<> #Resolved. >CoreGraphics \n??? #Resolved. >const \ncurious choice; const rvalue?. >TLambda \nPlease add a comment documenting the typical parameter set and return type expected of a lambda. >0 \nnit: save some array growths and reallocs by passing count as capacity.. If this were built on CGDataProvider (and CGDataProvider worked properly), you could remove the bifurcated codepaths servicing URLs and data streams.\nAfter all, a data provider is \"a readable thing\", and it can be created from a URL or from a data. Or from a file! or from anything really.. You seem to have added the fonts, but not committed to any testing strategy.\nCan you add a visual/UI-driven test that renders text in the three winobjc fonts?\nDo these fonts propagate to XAML controls? If so, can you set up a UIButton or UITextField that uses the winobjc font? That'd be cool. #Closed. I don't think it can; curFontName is pulled from info.plist with its extension fully formed.\n... URLForResource:@\"x.ttf\" withExtension:@\"ttf\" will look for a file x.ttf.ttf.\n\nIn reply to: 89406546 . Does this hold on the reference platform?\nNot Segoe exactly, but font failure leading to default font.. >__UserCreatedFontCollection \nnit: u. or nit: s_\n\nIn reply to: 89407071 . This is absolutely not created in a threadsafe manner. Magic statics?\n\nIn reply to: 89407080 . nit: early return. >typedef \nprefer using x = y; over typedef y x;. Are these things safe to do during DLL initialization? It seems a little heavy and ill-specified to do COM during DllMain().\n\nBecause Kernel32.dll is guaranteed to be loaded in the process address space when the entry-point function is called, calling functions in Kernel32.dll does not result in the DLL being used before its initialization code has been executed. Therefore, the entry-point function can call functions in Kernel32.dll that do not load other DLLs. For example, DllMain can create synchronization objects such as critical sections and mutexes, and use TLS. Unfortunately, there is not a comprehensive list of safe functions in Kernel32.dll.\nCalling functions that require DLLs other than Kernel32.dll may result in problems that are difficult to diagnose. For example, calling User, Shell, and COM functions can cause access violation errors, because some functions load other system components. Conversely, calling functions such as these during termination can cause access violation errors because the corresponding component may already have been unloaded or uninitialized.\nBecause DLL notifications are serialized, entry-point functions should not attempt to communicate with other threads or processes. Deadlocks may occur as a result.. Using a const ComPtr<T>& confers no benefit over using a T*, and disallows the use of this function as a C API facet.. fold into one line.. fold?. >DWriteFontCollectionLoader \n\nThis scares me a lot: You're implicitly calling a pointer-to-member-function across a function boundary with an instance created elsewhere.\nIs there a better way to do this? Perhaps a lambda that consumes a DWriteFontCollectionLoader*?. @rajsesh-msft These aren't static inside a method, though. They're static at file scope (initialized by lambda call), so they'll happen when the module is loaded.. Oh, sorry: I think I misinterpreted your response. Carry on!. The propagation of the loader into the functor will be explicit, rather than implicit. Right now there is no express contract between the caller and callee that a bound member function is in use. #Closed. Illegal transform. That will cause a leak.\n\nIn reply to: 89017034 . Illegal transform. That will cause a leak.\n\nIn reply to: 89016880 . Not in a C++ file.\n\nIn reply to: 89410332 . no?\n\nIn reply to: 88943733 . When you merge up, would you mind adding these to CoreGraphics.Drawing tests, in the Path case? Or, file an issue and do it later. :). nit: I am not comfortable with using this indirect throughout. We could save these in locals and copyto or release them to store them into the out pointers.. >SetCurrentPoint \nIs there ever a time when you would want to set the point and transform separately?\nIf not, you could almost certainly combine the two, and have the math take place in there.. nit: might want to document:\n\"We do not set the current point here as with the completion of the rectangle we have not moved.\". The Drawing test vcxproj absolutely copies a data/ directory.\nIf we standardize on data/, we don't have to propagate that decision into every test file consumer (and centralizing it here lets us change it in a single place if we do decide to.) #ByDesign. Very true.\n\nIn reply to: 90145740 . >__GetURLFromPathRelativeToCurrentDirectory \nnit: the module's directory is not the current directory ;P. Interfaces should not have implementations!. Is this export used?. It is a statement rather than a question:\nTransparency Layer is Alpha-Composited All at Once.\n\nIn reply to: 90587231 . Why? There isn't a function for this, and otherwise it's just a function that takes a size and a rect vs a size and a point.\n\nIn reply to: 90587551 . good catch.\n\nIn reply to: 90587281 . Yes?\n\nIn reply to: 90588464 . no.\n\nIn reply to: 90605246 . comment above, with auxiliary commentary in the pull request body.\n\nIn reply to: 90589260 . It once contained a unique_ptr so could not be copied; this made it a move.\nI wanted to be able to move a popped value all at once, but thanks C++.\n\nIn reply to: 90589392 . And what if you add something after PopGState? It introduces unnecessary churn to combine the return with the erstwhile final statement.\n\nIn reply to: 90589430 . small body vs large body.\n\nIn reply to: 90589638 . getters vs actors\n\nIn reply to: 90697695 . Save a +1/-1 refcount pair.\n\nIn reply to: 90605115 . They cannot be Swap'd because they differ in type.\n\nIn reply to: 90697786 . ```objc\nifdef WINOBJC\n// NOTE or whatever\nimport \nstatic void anchorUIKit() { [UIView class]; }\nendif\n```. the CopyTos are only truly necessary if the copy-from-er will be retaining a reference. it does add an unnecessary +1 -1 pair otherwise.\n\nIn reply to: 90737178 . That's likely acceptable :)\n\nIn reply to: 90742277 . Our runtime class names should have the final class name in them as well; right now they will collide since they're just namespaces #ByDesign. @bbowman I think the correct abstraction here is CGDataProvider. Right now, it is incomplete, and can't serve this purpose.\n\nIn reply to: 90937378 . Fairly well-dismayed about this churn :) #Resolved. No need for the temporary here; rename ele to element and just pass &element. #Resolved. nit: could return CGPoint{point,x point.y} for concision's sake. #Resolved. please add a DrawingTests test for this. #Resolved. O(N*M)! While this is fairly low-bounded for the common case, I'm worried about not using something more hashtabley here. CFData supports hashing, and we could make do with an adapter like CFStringRef's? #Resolved. Thinking about this more, is there any benefit we gain from having these classes be IInspectable and not simply IUnknown? It looks like DWrite uses Classic COM only.\n\nIn reply to: 90946927 . >RuntimeClassInitialize \nIf we use Make I don't think we even need RuntimeClassInitialize as a stub! #Resolved. @aballway CopyTo adds an unnecessary +1 on the pointed-to COM object that's -1'd when the method returns immediately after. *x = y.Detach() is the idiomatic way to commute a +1 reference to a caller. #ByDesign. Yeah: MAX_PATH lives in minwindef standalone and _MAX_PATH lives in stdlib with proximity to the standard library path functions.. O7. I'll take this on as I wrote this code. I'm hoping to reduce merge conflicts from develop in the meantime.. but y #Closed. @ms-jihua Given a T* x, x + N is equivalent to (unsigned char*)x + (sizeof(T) * N) \ud83d\ude04 . Can it be fixed? There may be some clang-format magic we can pull\n\nIn reply to: 90973712 . This kind of stuff can cause annoying merge conflicts :)\n\nIn reply to: 91582171 . Don't fail fast; return early. Applying on a null path is a no-op.\n\nIn reply to: 91568802 . Please only pass raw com pointers at TU bounaries. It'll let us drop the WRL dependency from CGPathInternal, and avoid some unnecessary addref/release/copy construction on the ComPtr. #Resolved. _CGPathApplyInternal(ID2D1PathGeometry* pathGeometry)\n\nIn reply to: 91632808 . but directly above it CG->D2D uses the other convention.\n\nIn reply to: 90985613 . these lines are almost the same for every element type. could you lift it out into a helper such as __CGContextHighlightPointRGB(CGContextRef, CGPoint, CGFloat r, g, b)? #Resolved. also, it might be better to do point - 2.5, + 5 instead of + 4 (so the center of the rect would be the point)\n\nIn reply to: 91633249 . Stretch goal: a test fixture that inherited UIKitMimicTest and added all of this boilerplate that drew and applied paths.. Not extremely pleased with the save/restore on text matrix (!). nit: toplevel/global const for this, perhaps?. Confused why this doesn't render \"Abcde\" as \"AAAAA\". This translation is being ignored because SetTextMatrix does not clobber the tx/ty.. It looks like SetTextMatrix should clobber tx/ty.. egad can these be lifted into a common thing. Can you add tests for this into the standard CoreGraphics tests?\nHere's what I'm seeing:\n```\nCGContextSetTextMatrix(ctx, CGAffineTransformMake(1, 0, 0, 1, 10, 3))\nCGContextGetTextMatrix(ctx)\n{a:1,b:0,c:0,d:1,tx:10,ty:3}\nCGContextGetTextPosition(ctx)\n{x:10,y:3}\nCGContextSetTextPosition(ctx, 100, 300)\nCGContextGetTextPosition(ctx)\n{x:100,y:300}\nCGContextGetTextMatrix(ctx)\n{a:1,b:0,c:0,d:1,tx:100,ty:300}\n```. Please undo this one #Resolved. I think that's too much work (digging around in CF to map the type ID) #WontFix. There would be too much churn if I were to adjust the CC in this file. #WontFix. Good idea.\n\nIn reply to: 92092026 . I agree. It can also live here for posterity.\n\nIn reply to: 92093543 . I don't know what you mean.\n\nIn reply to: 92093019 . because silly.\n\nIn reply to: 92094109 . it's glorious. It's not a char* const afterall!\n\nIn reply to: 92094081 . er, a char const *?\n\nIn reply to: 92300230 . Nah: That's not the thing on test here.\n\nIn reply to: 92094286 . Probably, but it may not be worth it. Transform isn't the thing on test, and it was being passed via generator for some limited code reuse.\n\nIn reply to: 92094249 . That sacrifices the locality of something else (alpha8 image stuff.)\n\nIn reply to: 92092724 . Could, but then somebody would say:\n\nnit: the values here are non-obvious.\n\n\nIn reply to: 92093869 . I am averse to that.\nIt is used so frequently that it should be intuitively obvious. Also, where would it go? What would it be called?\nkCGTheConstantWeHaveToUseToEnsureLinesAreStrokedAtTheFullPixel? :smile:\n\nIn reply to: 92093095 . There may be additional things here acting on context.\n\nIn reply to: 92289253 . Good question! No particular reason. It's not a pointer diff, but it does make sense as a size_t.\n\nIn reply to: 92295954 . It can. That'd be a <8bpp image, and we should bomb out for that ;P\n\nIn reply to: 92295930 . no.\n\nIn reply to: 92295888 . That's fine?\n\nIn reply to: 92295863 . Switch to CoreFoundation::CppBase? :smile: #WontFix. nit: fold these together? if (transform && !CGAffine... #Resolved. It bothers me a bit that GetPathGeometry returns a ComPtr<ID2D1Geometry>; it's an unnecessary +1/-1/+1 for this case (and an unnecessary +1/-1 for every other case where you call it (!) #Resolved. This requires a conversion into a valid render target format first.\nThere is some work around this in #1528. #ByDesign. Oh, I see. I don't think this needs to be in two functions\u00a0:P They'll always be found together. #ByDesign. Please put this through the rendering stack as in my comment in #1542. Otherwise, you get no clipping and no masking and no global transform. #Resolved. These are a good candidate for parameterized testing! #ByDesign. Please add support for kCGGradientDrawsBeforeStartLocation.\nI don't know what this is doing, actually:\nIt's setting the start to be at 1E-45, and then setting the end (gradientCount) to be at .. 0?\nSo a gradient 0.1 0.2 0.3 would become: 1E-45 0.2\u00a00.3 0 ??\n #ByDesign. This simply does not seem reasonable.. you were so close to not saving/restoring text position in GState!. please document why.. nit: it would be pretty awesome if you added a identity transform short-circuit. left<->center?. image is the input image, it is contractually disallowed from being a mask.. good idea. this will return a cascading null, but it's better to be safe.. See notes above; the reference platform requires a mask (black/white image). We add support for an alpha clip (alpha image), but an alpha image is not a mask.. They can't change the bitmap info. Do you mean some internal consumer?. Only if the CGImage says to interpolate. Otherwise, D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR.\nPerhaps we need a helper in GState for this :) #Resolved. Perhaps prefer CFStringGetLength if it is provably a CFString. #ByDesign. These are potentially copied from the base state before them (as comment above.). (so they do have values(!)). I think this would damage clarity: it could be __CGContextDrawingState& or __CGContext::__CGContextDrawingState&. Having it on the right hand side is clearer (in my opinion). Indeed! And this hit is only taken the first time the mask is composed.. That'd work!. nit: this should return HRESULT #Resolved. nit: as above #Resolved. output captures it better: it's not the input format in the user-provided data :)\n\nIn reply to: 92748140 . @rajsesh-msft Done with the latest revision!. You're right, this is unused.. nit: \\n before. >acks(callba \ncallbacks isn't guaranteed to outlive the caller's scope (it could be on the stack); take a copy. nit: you can use an anonymous namespace here. are you using unique_ptr for std::optional?\nHaving a 4-byte indirect allocation is a minor waste :). threadsafe?. perhaps short-circuit via hash. it worries me that nobody \"owns\" this :/. do we have to take a copy?\n\nIn reply to: 92906947 . >__DirectDataProvider \nDirectData and Raw look like the same thing; is there a chance of merging them?. >__SequentialDataProvider \nis this a user data provider with skipForward instead of skipBytes? :(. >__CFDataProvider \nnit: _CFDataDataProvider. >mutable \nusing mutable + const bothers me, even though I understand why it's like that. Hmm... please note why this is overridden. nit: grammar #Resolved. please match the convention used in the rest of this class (capitalized method name) #Resolved. while you're here, might as well convert this to use the new interp method... #Resolved. can you leave this as Caveat, Notes \"The color space is never used.\" #Pending. static. #Resolved. note components is not used. #ByDesign. Should these methods force the colorspace to be Pattern? What do the docs say about this? #ByDesign. By adding this method, you're increasing the objective-c burden. Please just use pattern->callbacks in the C function that calls this.\nIt will make it easier to move to CppBase later.\nIn fact, can you move this to CppBase? #Resolved. nit: grammar a lot #Resolved. nit: this doesn't say what the method does at all #Resolved. static. #Resolved. static. #Resolved. oh, it is! #ByDesign. You can't get into _processException with a nil self to then call _hresult on a nil self.\nIt is completely safe to assume that a method declared on a class can access an adjacent method declared on the same class. #Resolved. This could be modelled as two ifs. It looks like that is the intended configuration, since the two constants are bitshifted.\n```c\nif (!(options & kCGGradientDrawsAfterEndLocation)) {\n    // insert transparent end\n}\nif (!(options & ...before start...)) {\n    // insert transparent start\n}\n```\nUsing a switch requires you to duplicate the stops in two different branches. #Closed. This does not appear to insert them in order. Are we required to do that for D2D's sake? #ByDesign. this is a \"start point\" but you are subtracting it from 1 later. That seems like a bad constant name :) #Resolved. please add a note or a todo referencing the CGColorSpace issue; this hardcoded *4 will bite somebody otherwise. #Resolved. Can you move these to another drawing test file named similarly to the others? CGContext_GradientDrawingTests.cpp or something similar?\nOur hygiene is subpar here, we can improve incrementally. #Resolved. Each of these tests that resolves to a single function is better modelled as a parameterized test. #WontFix. RedBox isn't an image test! #Resolved. (can you remove images that are orphaned by this change?) #ByDesign. I know this is not your code, but now it is! This will leak. #ByDesign. (I couldn't determine whether ARC was on for this framework.)\n\nIn reply to: 94636333 . >CGImageCreateCopy \nThis shouldn't need a copy; images are mutable. #Resolved. Sorry, not mutable.\n\nIn reply to: 94636453 . >ObtainJPEGRepresentationFromCGImage \nWe have a version of this in CoreGraphics.Drawing.UnitTests. #WontFix. This doesn't seem like it should fix the issue; when you delete a character it will still jump, because _text != _textBox.text? #WontFix. I don't think == is what you want here. #Resolved. There's not much point in sticking an autoreleased thing into a StrongId ;P #WontFix. !! Absolutely not! #Resolved. The solution to the mixed up dependency chain is to remove the use of foundation (which, iirc, is only logging-related) from MobileCoreServices, not to merge MobileCoreServices into Foundation\n\nIn reply to: 95276171 . These are the reference tests. We must make certain that they work on the reference platform, and we must make sure we document every change we make to them.\nWhere possible, do tests for this sort of stuff outside of the Reference* directories. #ByDesign. These three tests should not even test filenames; nor should the ones below. Only the filename tests should test them!\n\nIn reply to: 95277050 . this also masks the fact that it will be adding another +1, leaking this extension.\n\nIn reply to: 95277280 . yes, nil\n\nIn reply to: 95426628 . wait a second, no. not nil! aj you tricked me!\nit's an NSError**, so, nullptr.\n\nIn reply to: 95448529 . nit: could move this to the initializer list and use stringWithFormat. #WontFix. nit: \"on that this\" #Resolved. worry: this \"getter\" has a side effect. #Resolved. Could this be done in one fell swoop? Or should you std::move into the operationsHoldingArea? #Resolved. nit: condition.wait(lock, [](){ predicate! }) #WontFix. Note for eventual future implementer: The C++ class is providing no benefit. Objective-C++ classes can contain C++ things, and these aren't being custom-initialized. #Resolved. nit: Unnecessary? It should be just as many checks as iterating over an empty list. #Pending. As below #WontFix. I'm not certain a binary OR here is valid #Resolved. prefer = x || for clarity/operator integrity? #WontFix. If the no-argument constructor on NSOperationQueuePriv does what we need, we don't need to indirect through a  unique_ptr and can embed it directly. #WontFix. LOL. likely -> absolutely! #Resolved. ah, i see. name should perhaps be injected to make it a 0-arg ctor. #WontFix. [nil x] will never result in a method call. You can rest assured that if you are in a method body, self != nil. #Pending. since we're manually setting _completedUnitCount, we must trigger a willChange and didChange for it. #Pending. >0 is also fine here :) #WontFix. It'd be a pain, but it may be worth adding a test that changing a value on a child triggers a KVO notification on a parent -- specifically for the keys that this changeset fixes. #ByDesign. implemented but unused. #WontFix. It's autoreleased, but stored in a StrongId (conferring +1). This is, unfortunately, idiomatic use of StrongId's constructor. #WontFix. Might like to also assert that if month == 2, !exactMatch. s #Resolved. This file has CRLF line endings.. This file has CRLF line endings.. I am not happy about having to do this.\nHowever.\nWithout this escape hatch, our NSKeyedArchiver will encode [NSMutableString stringWithString:@\"x\"] as:\n0: $null\n1: {\n    class: <2>\n    NS.string: <1>\n}\n2: {\n    $className: NSMutableString\n    ...\n}\n(where the string is object 1 and <x> indicates a reference to object x). That is to say: NSKeyedArchiver will encode a string that refers to itself as its string.. Convention dictates that we never use self-> in ObjC code unless it's unclear. It's just an instance variable.\nAlso, this could be done via @property; you wouldn't need to implement -extent yourself #Resolved. Since you are introducing this private initializer, you should absolutely:\n\nMake sure the public initializers use THIS initializer.\nDo not use public initializers from this initializer.\n\nThis should be the end of the line. #WontFix. It is safe to not do this work. [nil CGImage] will return nullptr and cause the next-level initializer to fail. #WontFix. It'd be quick to move the code from initWithImage: into this function and add @Notes saying that options is unsupported. Then you'd move one API out of Stub and into Caveat! #Resolved. Is there no way to not use a private function? #ByDesign. as above. #Resolved. You do not need to guard every entry point with null checks, only the ones that matter.\nThe more you have, the more likely it is that you'll miss one. #WontFix. ???\n???\nAt the very least, copy/paste the known tested and working code from CoreGraphics.Drawing tests. #WontFix. ASSERT_OBJCNE(nil, photo) #Resolved. ASSERT_OBJCNE #Resolved. ASSERT_NE #Resolved. ASSERT_NE #Resolved. ASSERT_NE #Resolved. You'll have to do memory management if you do, however. #WontFix. @msft-Jeyaram I'll keep this since it came in from develop. If we want it removed, we can remove it on develop.. Didn't touch this. This is a merge.. This one was introduced after your changes. In this merge.. This is going to make merging exceptionally painful :(\nYou can force template instantiations in the .cpp file. It'll have the benefit of cleaning up the diffs so we can actually see what changed here.. (I'd recommend that approach in the interim.)\n\nIn reply to: 95861143 . >PixelByPixelImageComparator \nI'm iffy on introducing more boilerplate for the \"default\" case, but if it has to be done, it has to be done. this is a bad example since it's not the default case, but you know what i meant. :P\n\nIn reply to: 95863602 . nit: prefer calling the options init too, so that when that gets brought online this automatically works (!). as above. \"Literal syntax\" refers only to @{@\"key\": @\"val\"}; you probably want Subscripting. for fun, add an EXPECT_NO_THROW around these. #WontFix. I'll try to fix the casing on this directory name. Case-sensitive filenames are very much not happy about this.. It absolutely is.\nThe only useful information we would get out of this is that it is a NSInvalidArgumentException. Unfortunately, that's not fine-grained enough to support what we care about.\n\"Any\" exception is fine.. This is nearly 1:1 from the implementation of WRL::Details::ComPtrRef, after which this is modelled. Since it's the ref type that's const, we can change the mutable pointer through it (and that is, in fact, what WRL does!). (this applies above as well: the const version of their pointer-to-T* operator does not return a const pointer). The implementations of store(...) will stop that from being catastrophic.. Early returns: AJ's kryptonite. I want to explicitly static_assert with a useful message, not \"lol could not find an applicable constructor, I tried <these 5 ctors>\". Yes. I'm fairly certain the assignment operator explanation below applies here as well.. Using the past tense since it's a \"compatibility shim\" now, and i'm documenting its prior/intended behaviour. I can clear that up if necessary :) #Closed. What on earth would compel somebody to do this. I am so not okay with checking that perceptually-encoded data is the same across launches of an application!. I would prefer CreateImageRepresentation, and it would return a +1.\nThen, UIImageXXXRepresentation could cast it and autorelease it.\nI'd like to avoid using CFAutorelease wherever possible because it goes through the objective-C runtime and vends objects out to the local thread's autorelease pool.\nUsing woc::AutoCF or even woc::unique_cf is infinitely preferable to manually managing these lifetimes by vending them to global state.. perhaps this needs zero initialization.. It was wrong.. The commit it is in is titled \"Fix the default ... from the reference platform.\". nit.. CC explicitly allows the use of auto when the type is unwieldy and immediately expressly identified by the right side. This doesn't exist. The dream isn't real.. This is only called by proper consumers who are aware of the contract.. Good catch.. Why's it not necessary to do the thing this comment said it was doing now?. Can it still be \"canceling but not cancelled\" at this point?. Also,\n Only works on untransformed coordinates. The cleared region will be cleared in device space.\n #Resolved. ditch this file #Resolved. >BeginFigure \nI wonder what happens if you take a mutable copy of a path with an open figure.. hm. >BeginFigure \nIs this so? It doesn't seem like we should start a figure here. #Pending. >ID2D1GeometrySink \ncurious cast. #Pending. I suppose I don't understand why a beginfigure is necessary for this; comments  may help!. nit: ASSERT_NE(nil, ...) #Resolved. note from offline: move to ~78 #Pending. this can't be a member var; i don't think anything can\notherwise, the block captures this, and this is dead when dtor'd. #Closed. I agree, but this is fairly localized :). A weak reference to what exactly? #Closed. If you find value in the destructor having hold of the token and unregistering it when it triggers, you'll have to make sure the lifetime of this object extends beyond the lifetime of the possibly async callback.. >rgbaPixel \nis there really literally no way to not move this into the header :P. >2300 \ndocument why 2300, that's a heck of a lot. This will probably fail on ARM, due to our slightly busted exception handling. @catch(...) will sidestep the issue at the cost of some clarity.. nit: disprefer returning these C++ things across API boundaries; use an autoreleased NSArray* instead :smile:. ah, I see. This wasn't initially your code.\nI'll downgrade it to a non-showstopper, but it might make the memory management here easier to reckon about.. Actually, it could be a better solution to simply make that return an autoreleased thing, and drop the StrongId from each of its consumers. Feel free to go either way!. dead; drop.. \ud83d\ude32 we are literally allocating an objective-c thing that wraps a com thing to get at the com thing and discard the objective-c thing.\nwhat the actual heck #Resolved. The change in this file does not appear to match anything related to the pull request. #Resolved. I think you're correct. I recall Begin->Set->End being specified in one of the MSDN documents. #Resolved. There will be a future where we want to keep track of the user's input data and destroy it with their release callback, but we don't necessarily want the CGIWICBitmap to hold a reference to it.\nI'd like to leave this in for that time, but maybe rename it to something more appropriate.. #1811  #Resolved. This might not be necessary, but I'll add an issue to track \"something about vertical text centering in UITextField\"\nThis is more of a CT concern, but EbrCenterTextInRectVertically was part of CGContext for some unknown reason. #Resolved. #1812 #Resolved. The true recommendation was to have inner functions return HRESULT and FAIL_FAST or ignore the error gracefully at the C API boundary. #Pending. Nit: name this with two underscores, and perhaps have it return a size_t as it can never be negative and we are using it for pointer offsets #Resolved. You'll want const CGPathElement&, otherwise the compiler will emit a copy of CGPathElement that will be immediately destroyed after you copy it again. #Resolved. Naming! Or, put this in an anonymous namespace. Or both. #Resolved. Fully internal things get two underscores #Resolved. Nit: explain short circuiting logic #Resolved. Use the size() of the existing points vector instead of calculating this more than once #Resolved. You can break after this #Resolved. To avoid the duplicate casting, do it once at the top of the function #Resolved. The above check is redundant with this one. Remove the above one in favour of this one #Resolved. This copy leaks #Resolved. I prefer testSymmetricEquivalence to be a macro. That would allow GTest to log the real test source line that caused the failing comparison.. Sorry about that. We could also probably do it by adding a move constructor to unique_cf, but since that's practically dead at this point and no new code should be using it . . . little point eh. @aballway what is the value in distinguishing Objective-C and C++ code? Members and instance variables are, for all intents and purposes, identical. A fully-qualified out-of-body member function refers to members just like an Objective-C method refers to ivars.\nThey have similar lifetime requirements, as well.\nour CF stuff is closer to Objective-C due to the reference counting; it's only C++ as a measure of convenience.\nAlso, our coding convention states\n\nUse the \"_\" prefix on all data members of Objective C and C++ classes. This is consistent with Objective C instance variables that are synthesized automatically by the compiler.. No; there's no data to be released.. How strange that it leave a space at the end; I was even cautious to have it not do that.. aww, these moved around w.r.t. the true original. the diff could look so much prettier if Version was below fullName and copyright was above familyName! :P. you could revert this to the original completely. no point in taking a diff on an unnecessary reorganization. It would be better to check outputPixelFormat == GUID_WICPixelFormat8bppGray for ultimate truthiness.. Still no; just use *element in the emplace_back. #Resolved. (A naive compiler could emit a copy here.) #Pending. nit: drop struct; that's a C thing. #Resolved. nit: could use AutoCF here, but w/e. !!!!!!!\n\nwhat #Resolved. Can confirm, e-mail popup distracted me into looking at this.. ..? you already did this, you're commenting on a comment that you resolved already.\n\nIn reply to: 97907600 . Actually, since this dropped the use of DrawImageRect, srcRect can be removed entirely.. nit: standardize on /; we do that elsewhere in WOC code #Resolved. lol?!?! #Closed. How did this ever work? #Resolved. This guy uses a custom entry point so that it can take command line arguments. Is there going to be a way to pass in run-specific state with TAEF/TE?\nIt uses this state for:\n Generation mode (writing images to disk without testing)\n Comparison against a separate image root. I cannot place a comment on the appropriate line since it's not in the diff.\nDrawingTest uses RecordProperty to poke URL references out of the test output via XML.\nA modified test runner can use these to display the images inline in its UI.\nWhat's the TAEF equivalent? #Resolved. This scares me, but I'll have to look a little more at why.. Wait whoa no way, TE can pass args in argc/v?!. I still like the idea of there being one nice shared thing that does this.. but for \"lowest common denominator\" support it would have to be either CFString or std::string/std::wstring returning. The CG.Drawing tests run as C++ only.. saddest comment. can you reflow this so clang-format doesn't? :smile: #Resolved. It might even be more correct to do this in CGBitmapContext.\nHere's what we can potentially do:\nIf the user passes !data, we push a begin draw. When they call CreateImage/GetImage, we pop an endDraw if we know we are in control of the data.\nThat way, people using data get immediate mode rendering, and people not using data automatically get batched mode rendering.\nThis opens up some testing avenues that don't require internal implementation details (pass data, do not pass data, etc.).\nI do, however, think this is the right thing to do here until we normalize on a strategy for bitmap contexts. #WontFix. Actually, it seems like this could be wrapped up into the current thread machinery. At file scope, a thread_local StrongId<NSThread>, which _associateWith... and _threadObjectFrom... could refer to. That way, its lifetime would be managed by the same thing that keeps track of its current-threadiness.. If you're gonna do this, y'might'swell fold the following statements into the initializer.. I'd like to see this abstracted out into something like context.ShouldBuffer(); additionally:\nIf you create a CGBitmapContext and pass data, we cannot in good faith buffer.\nIf you create a CGBitmapContext and pass !data, we can buffer. Except:\n    1. If the user calls CGBitmapContext(Get|Create)Image, we must flush the buffer before we give them the image.\n    2. If the user calls CGBitmapContextGetData, we must flush the buffer and turn off future buffering.\nWe need to make sure that anybody who hasn't signed a buffering contract with us gets immediate mode rendering, to most accurately mimic the reference platform.\nWe might want to consider an expanded version of CGBitmapContextCreate(...) or a custom CGBitmapContextSet[WOC]BufferingMode() that allows the user to turn on buffering by agreeing to our contract (must Flush). Additionally, it might be worthwhile to implement CGContextFlush at this juncture so that the bitmap context APIs can use it.. I like it, but I'll defer to what eh have here. Accelerate's integration tests are not really great, and they could use a lot of cleanup. Setting the image twice isn't even necessary here, so we should evaluate just not doing it.. Is WideToNarrow a Multibyte conversion?. nit: \"delimiters\". Does the presence of a \"\" always mean it's an absolute unix path?\n. nit: I don't understand this comment; it implies we'll walk backwards to eliminate the ..s.\nWhat it looks like is we iterate forward, and when we encounter a .. we step the iterator backwards, delete it and the component preceding it.\nTherefore, something like a/b/c/../.. folds to a?. Are we concerned about reverse-iterating a std::list? I thought they were singly-linked, making -- a taxing operator, but perhaps they're not!. I'm worried about the performance of regex matching for every path we map.\nIt'd be easier/cheaper if we were to take the length >= 2 && wisalpha(root[0]) && root[1] == L':' approach below.. Is there room to exchange EbrGetWritableFolder with a new _EbrGetWritableFolder, its UTF-16 counterpart?. Since both of these are std::wstrings, it'll be better to use == comparison (it can optimize for length differences better than _wcsicmp). nit: for(auto& specialFolder: c_specialFolders) { (range for is awesome!). I understand. Then, at least, I'd like to keep the suggestion to rename it. While we only have shadows for now, #1389 may require a buffer readback/target swap as well. We'll need the same \"create command list before composition\" behaviour.. :+1:. nit: for these guys, prefer EXPECT_STREQ(expected, actual); gtest/taef will properly log the inputs and use the wchar_t overload of StrHelperCmpEQ. (it means we don't have to rely on the logging infrastructure in the _MSG macro variants, and gtest can print expected/actual next to eachother). This worries me, it is not a TLS constant. Please check whether they introduced a new one for the value you are seeing.. You should almost universally prefer string formatting column widths instead of using \\t.. std::setw!\n\nIn reply to: 99246724 . >Microseconds \nwhy not just use std::duration?. like: typedef Microseconds to that, instead of feeding microseconds to it as a template arg\n\nIn reply to: 99247345 . >BENCHMARK_REGISTER_TEST_P \nI don't get why we've cloven to the name TEST\nWe could use macros very similar to gtest's if we simply standardize on calling them BENCHMARK.\n```\nBENCHMARK(a, b, c)\nBENCHMARK_F(a, b, c)\nINSTANTIATE_BENCHMARK_CASE_P(a, b, c)\n```. Rationale: they are not tests\n\nIn reply to: 99247720 . aaaaaaaaaaaaaaaaaa. please standardize on / for include paths.\nThere is a visual studio option for this (!). (there may have been an innate unsafeness here: I don't know if the static init order here is specified or if it's guaranteed that this ComPtr will construct before the static HRESULT is initialized.. nit: is it worthwhile to aggregate time spent in setup and teardown?. >created \nstd::shared_ptr has an operator bool that you could use to check s_publisher's residence.. (instead of keeping track of this silly thing.)\n\nIn reply to: 99419315 . If PostRun time doesn't count, you're ignoring how long it takes to actually draw here; is that your intent?\nWith the new CG model, every frame draw will be batched and flushed once down here.. Making this the expensive operation.\n\nIn reply to: 99419564 . @ehren we do that in a lot of places where the type is expressed fully on the righthand side :). Darn. If there was some way to get a HSTRING out of the layer above this one, we could pass it via the NSString HSTRING bridge. That'd save us a whole copy :). Prefer class_conformsToProtocol(object->_cfisa, ...) -- that will remove Objective-C from purely C++ CFInternal.h consumers.. (this header is shared externally -- CoreGraphics, CoreText, etc. use it). nit: semicolon #Resolved. propagate this message to the setter as well; people will be calling the setter far more often than the getter. #Resolved. This doesn't seem like a type-safe comparison. _curState & x evaluates to an int, not a boolean. There's probably a cleaner way to structure this check. #Pending. This only works if/when the floats in CGRect are packed back-to-back. While that's true now, it might not be universally true. Worth being concerned about? #Pending. Do we need an issue tracking this TODO?. Is this header including itself?\nIf not, why does it have the same name? #Resolved. What if there's no font?. If the compiler is working as intended, yes :) We had issues with returning floats from nil receivers before.. the TestConfig base class is pure virtual so that we don't need to clowncar all of the TAEF behaviours into the \"command line\" one ;P. like: there are so many ifdefs in this file it might simply be easier to have a win32 file that has its own config impl and the os x file that keeps the commandline one.. This introduces a dependency on Foundation, which not all of our test modules can take. We also cannot take that dependency on OS X.. Why add toReturn+ here? It looks like it's being done for std::string coercion? That's not great.. Is this intended to be part of this change or part of the packaging change?. length is marked _Out_opt_ in the header; don't make it populate something you're discarding immediately.. nit: not plural anymore. Based on this comment, the following macros could simply be destroyed? Or does this exist for cross-platform support?. I'd personally prefer to see all the Iw Writable Folder changes in a separate pull request with a separate commit (instead of squashed all together at the end). It will help future bisecting if we regress something.\nIn fact, I think all framework changes should be separate from this testing-related PR.. This does not belong in a well-behaved test.. Should we port this VSO item to a GitHub item?. A comment explaining this and why we need it would be excellent.. ??? noinline inline. Yeah, I think so. gtest tries them all (?) in their own exception handlers i think.. Does Log::Property requiretypeof(value) == std::wstring? If not, and it's overloaded, we should pass value through unharmed for the appropriate implicit conversions to happen. This is too narrowly-specified as-is, it will only work for utf8 strings.. This isn't antialiasing-specific; perhaps something like CGTrinary would be better.. bool?. These do not have a direct mapping to D2D. The default should be _true, allow. They aren't trimodal.. Dropping \"default\" from the allow states will simplify these.. I think I misunderstood what you meant when you said Default. I assumed that nothing would be set on the render target if the value was \"default\". nit: GetTextRenderingMode. perhaps CreateDerivedTextRenderingParams, and these can all be private and underscore-prefixed since they're consumed by ::Draw. I am really confused as to why there are three rendering params being passed all around.. you're doing this to get the defaults?\nyou're leaking it.. Is the \"RGB\" or \"BGR\" pixel geometry a better approximation for ShouldSubpixelPosition? It definitely sounds like that flag should tell dwrite that RGB are in separate places. The other option is FLAT, which implies that there is no subpixel positioning.\nClearType is for RGB antialiasing; perhaps something from CG maps to Grayscale antialiasing?. nit: move this down with its friends. The entry point and framework are here, the tests are below.. yep!. nah, not necessary to record the property in an xml file we don't generate for a platform we don't want to diff on :). I still don't think there's a need for a terinary for allow.. nit: move this down with its friends. The entry point and framework are here, the tests are below.. I understand the need for a trinary; I just don't think that we need to have a \"yes/default/no\" optionset for \"Allow\". Allow's default is On. If allow+default, do nothing.\nIf !allow+default, disable (effectively, set our default for \"disallow\" to be \"no dwrite antialiasing\" or w/e property)\n\nIn reply to: 100920282 . There's no point in doing a push begin and pop end if runs.empty(). Since we're not managing gstates, it would also be reasonable to get rid of the scopeguard.. There's no point in doing a push begin and pop end if runs.empty(). You could concentrate all the drawing logic here.. I must admit, I was hoping for the shadow test to be separate. One per text drawing mode, including clip, but i suppose it doesn't matter since this is a strict superset.. Should this manipulate global drawing state, or should it set the D2D brush to use later?. What is the benefit of this over a vector? Is it that it doesn't painstakingly initialize each member?. Should this manipulate global state or simply change which ID2D1Brush is used?. Curious; there should be some sort of RAII container for this, right?. But the fill mode for a simple shape like a rectangle doesn't matter, as it has no overlapping sections.. just put this into CFStringCreateWithFormat :) #Resolved. @aballway it is impossible to query the antialias state of the context, and this allowed us to check against the reference platform. Actually, this is bad. & calls ReleaseAndGetAddressOf.\nWe should make it not take a pointer to the original params; it can simply create new ones on the fly for the custom params.. Sorry: not take a pointer to a pointer to the original params. That just complicates the ownership rules.\nI guess returning an HRESULT would be safe too, since it does COM interop.. @rajsesh-msft alpha first + default = BGRA \ud83d\ude38 . However, @msft-Jeyaram: If you want to avoid unnecessary bitmap copies, please use AlphaLast|Big: That is RGBA, and won't have the overhead of a format-swizzling copy when we give it to D2D.. Sorry: premultiplied alpha last | big. so funny story!\nFill clears the path, and stroke will not have a path to stroke.\nThe benefit of using fillMode is that you can just do...\nCGContextDrawPath(context, fillMode);\nit will do the right thing :). Nit: \"supports\". This will almost certainly make tests fail on ARM. We had these set up for a reason. What's up?. Oh, I see. Interesting.. This can return something weird like 20 (5bpp + alpha) or 15 (5bpp no alpha) when it should return 16 for both cases.\nSeeing as we don't support 16bpp contexts, however .... We will failfast/error out later for this, when it comes time to make the context. This table/function is used for both CGImage and CGBitmapContext, and CGImage supports a wider range of formats!. This is used in CGBitmapContext :). We cannot create these contexts, so there is no point in imputing their formats.. there are such cases; they have been elided from the table.. This is a public API! It's even annotated with a Status!. (It's also in a public header. \ud83d\ude1b). If this is private, please unannotate it or mark it @Public No. While you're here, please change this to kCGColorBlack. While you're here, please change this to kCGColorBlack. You removed this function; no need to keep it in the header!. Public header!. nit: Since we use this in two different places, but with flipped senses, it might be reasonable to abstract it out into a helper macro or inlinable function. if(!RUN_IS_BIDI(...)) seems clearer than that we currently have.. nit: comment \"we have compensated for the RTL glyph positions, so we don't need DWrite to do it for us.\". lol accumulate. nit: cache line->_runs[0] to avoid double (or triple!) dynamic dispatch. no more relative y offset!\nhow uh\nhow do we handle top-to-bottom scripts?. This will ignore the antialias modes set in @msftfox's change #Resolved. Consider caching the ID2D1Factory. #Resolved. I wonder how this works in combination with transparency layers. Can you do a test on our platform and the reference platform where you draw red, begin a transparency layer, draw blue, clear a sub-region, and end the layer? I'd expect the blue to have a \"hole\" in it where the red is visible. #Resolved. These must be DRAW_TEST_P for TAEF. #Resolved. nit: filename doesn't need the word rect or transformationAffine in it. #Resolved. Is this a test for two different clipping regions? #ByDesign. include an identity test! #Resolved. you can remove RectClear from this test name; it's implied and it's part of CGContext. #Resolved. Disabled?\nThis one is named Ram; perhaps Arc is better!\nAlso, why is it disabled? #ByDesign. @msft-jeyaram we are running up against Windows' relatively short MAX_PATH. Please reduce these filenames. #Resolved. that's not good. please file an issue and tag this code with that issue. #Resolved. why is this a RETURN_NULL_IF but the other functions in this file are return x ? : nullptr?. nit: prefer taking ComPtr values by unboxed ptr\nI know there's precedent for doing the wrong thing in this code, so it may not be worth fixing. #WontFix. l o l. Just like we've done with some CG constants, we can simply force these to have the values we want them to.\nThat'll reduce stuff like this down to, say, not existing at all.. per oliver's comment; nil.length is 0, so this is a redundant check. It is the listener's job to make sure that it can be called on any thread.\nAccess to the listener list is not currently synchronized because there is ONE consumer.\nIn the future, that consumer will be removed.. No, it's not global. It's static.. :smile:. A listener is added for all CGImages, not just one.. any compiler worth its salt will optimize /2 to >>1; we can likely rely on that behaviour and prefer /2 where it's clearer.. parentheses will probably make this clearer too?. Since you're introducing a totally new function, can you name it _CGImageCreateFromDataProvider? While the other Get is wrong, this one doesn't have to be! #Resolved. /me assists with the doubling down. @aballway might like this. It's very cheap.. nit: oh well :). @yiyang-msft done. unused.. Hilarious. prefer SUCCEEDED or !FAILED #Closed. And probably && #Closed. no.. sel_isEqual. @aballway no; external bitmap context consumers are not enlightened as to error handling. #ByDesign. S_FALSE is a valid \"success\" return :). Good catch.. @aballway hm. we go back and forth on this a lot.. cleverer. #Closed. bah, i suppose ;). @aballway default IS the \"something went terribly wrong\" case. #ByDesign. I don't know that there's worth in exposing this. #Resolved. oof. How about static_const_CFStyleConstantWithAK_CALayer.... prefer return PopEndDraw() at the end; otherwise, we lose the HRESULT from EndDraw.. The error description can be augmented to include the failing HRESULT, printing it plus the layer should allow us to correlate events and layer classes.. I very much do not like this mechanism.. It doesn't; however, there's no the object you pass in will be ignored completely, as objects go annotation; assign would be truer, but copy is what the reference platform specifies and it is expected for all strings.\nSince we've implemented it in terms of an enumerated value, we hold true to one of the core tenets of copy: The string they pass into the setter and the string they get back from the getter may not be the same pointer ;). @msftfox this is straight from your pull request. however, i'm concerned about what it's checking.\nIt looks like it will NOT fill the background if there is a solid color/solid brush background color?. nit: if you do make this API, please perhaps call it _CGImageCreateFromFileWithWICFormat -- specifically, we need to differentiate it from the CGBitmapInfo/CGAlphaInfo APIs.. And it'll have to take a CFStringRef.. Since you are fixing this code, you might as well make it use _CGDataProviderGetBytes.. I don't entirely like this return-through-reference-param pattern.. nit: will not do instead of will no do. double underscore, but not static?. these four functions are largely the same. can they be deduplicated somehow?. !bad!\nThis will overrelease the dictionary member value.. just use an unguarded local. no need to retain it and then release it across a single sequence point.. unique_iw?. vector?. this is just a vector in disguise.. CFAutorelease is not really a great API to use; can we avoid it somehow?. it is strange that _CFStringFromLo... doesn't contain Get or Create, so we do not know who owns its return value... #WontFix. should this logic be in the above function?. A comment explaining what this one is doing would be exceptionally helpful.. nit: , however, (missing preceding comma). this is too wordy, and could be trimmed down to a succinct\nAll arcs from 0 to 2pi in either direction will result in a circle; the reference platform, by contrast, does not honor this behavior.. This does not seem like it would append; this callback is for appending, right?\nI am not completely certain I like this inline lambda callback style ;P. If you're going to do this, please annotate them with what callback method they implement.\nc\n{\n    /* Release */\n    [](){ ... }\n}. please remove empty notes.\n[esc]:g/@Notes$/d. Let's keep these __ to match the entire rest of CoreGraphics.. nit: callbacks. this isn't empty, it has a release callback.. aaaaaaaaa RAII!. you never free these things.... Weird! We don't need to be idiosyncrasy-compatible, though. Hmm.. ?!?!?!\ncreating a new CFWriteStream is identical to writing the data to the new file again every time...\nYou have to make the write stream the shared context.. I'm not certain what this function is doing anymore.\nDoes it boil down to\nc++\nreturn std::min(abs(angle), 2 * M_PI);\n?. You may have to release the consumer here to make utterly certain the buffer has been flushed. It is technically allowable for the I/O system to buffer these two writes and for them to not hit the disk.. Hmm. This will change for VS2017?. It is cool that this is a drawing test, but it can be validated completely mathematically. Regressions will be easier to catch then a drawing failure because we won't be testing the entire graphics stack.. stupid clang-format. #ByDesign. you should not be reaching into ::tr1..? #Resolved. might be worth forcing these to format the same as the others and disabling clang-format in this zone #ByDesign. please add brief comments explaining what each test does.\n// Advances X (normal case)\n...\n// Advances X (outside of rectangle)\n..\n// Reduces height (below 0)\n.. #ByDesign. hm, why can't this be part of the other thinger? #ByDesign. :+1: #ByDesign. The point of comments is to clarify difficult-to-read sections of code. Since this is a pile of constant values in no discernible order, it is a difficult-to-read section of code.\nAdding comments will only serve to increase its clarity.\nIt also helps us think about all the test cases and whether there are gaps. #Pending. It will be worth forcing these to format the same as the others and disabling clang-format in this zone. This will not build as not-C++!. nit: no shouty KEYPATH.\nPlease add -[%hs %hs] with object_getClassName(self), sel_getName(_cmd); this will add the class (obvs.) and avoid the NSString intermediary for _cmd.. enumerator is an unusual header into which to put this. Reckon we could go with NSKeyValueObserving-Internal.h, but iunno.. This should be a macro. otherwise, every test failure will point to this function instead of the actual place the rect is being compared.. strip comments. nit: show? #Resolved. This will discard the error value. We have to go through PopEndDraw to collect all of the error values from all of the draw operations. #Resolved. offline conversation about UT:\nthis should be a UT, but it can be a drawing test if we look at what happens if we flush+draw+flush+draw.\nnot 100% okay with testing something out of our control (d2d batching params) #Resolved. If we're going to go with the \"override\" flag, putting it first will save unnecessary manipulation of the counter. #Resolved. Choco-lately! #Closed. nit: remove the from the Windows PowerShell #Closed. I'm not sure about noting either of these here; they're gaps from NSData, really, and if we fix those this works \"for free\". nit: std::move this to avoid an addref/release.. nit: this ain't a font name. UNIMPLEMENTED_WITH_MSG may be more helpful, since these keys are strings and their values can be logged.. do we need to do this before we widen into it?. do we know this new sink is in a state that matches up with the externals we're tracking? It seems like we might corrupt currentPoint, lastTransform, etc.. please use woc::MakeStrongCF for this; you're leaking it.. ? ? how does this compile. nit: remove empty notes. <ESC>:g/@Notes$/d. This doesn't match the other exception formats NSArray uses. Move this above 1035 and use end in the if(...). This is curious; if you prefer getObjects:range:, a \"fast\" NSArray implementation can turn that into an n-wide buffer copy into your provided buffer. Right now, _NSCFArray doesn't do that... but it could!\nArguably, it should, for optimization purposes. It would call CFArrayGetValues under the hood.. This can apply anywhere you iterate manually over a range.. Optimization:\nIf you add another level of block here, you can stop enumeration on the first hit instead of continuing to aggregate every index and then discarding the rest of them. #ByDesign. Sorry, I meant the wording was inconsistent :). If this is file-internal, i'd prefer a _ prepended :smile:. nit: prefer ivars on class extension above instead of implementation. nit: comment redundant with location. (and with naming). it worries me that we're mixing dispatch queues with STL mutexes and atomics.. Are operations inherently indexed? Do we need to use an ordered set here for quick removal?. nit: \"tries to starts\". [Curiosity only]\nWhy'd you choose to use NSThread's thread dictionary instead of a thread_local?. clarity: Why's the queue drained as a \"side effect of exiting\"? This doesn't seem clearer than sequencing the operation start before the code inside this block.. nit: no need for the getter call for QOS here. ! ! !\nThis wasn't allowed before (when we were C++11); do we have CC on whether we can do this?. nit: if we request the 'new' value from the change, we can avoid the synchronized call back into operation to query it.. Prefer indexOfObjectIdenticalTo:, as it will require far fewer isEqual: calls. I know this name makes more sense, but our convention everywhere else is the shouty TAG. Can isReady ever be transitioning to false? If so, we may have to handle that.. While it won't break anything, using [self class] in a + method is ambiguous as to whether it should be a meta-metaclass, or just a metaclass.. (technically, it is well-defined, but I thought this was an instance method when i saw the -class call). We may want to have an exception formatter that prepends -[ClassName selector:name:] to our exceptions; i know we have a couple scattered around.. Should we be guarding the will/did?. Can the operation change status between when we add it to the array and when we register for its notifications?. copy + autorelease; otherwise, this leaks. What if another operation is added while we're waiting for them all to finish?. (since it's under the same lock). we may have to add the suspended property. you could use .attach here and avoid the round trip. You beat me to it, and the other issue ID questions. Deleting.. when we add the property for suspended, this should become self.suspended; the getter form is for [self isSuspended] use. Absolutely. It feels like this is a little bigger than \"cleanup\" though, it'll even go and reschedule more operations.\nAside: Should we pay any heed to trying to run operations back-to-back without spinning up another async dispatch?. We don't use the type-declaring version, though.. Oh jeez, I was looking at the wrong file locally T_T. If \"constructors\" was on the losing side of that debate, we need to reopen that decision space :wink: #Resolved. wait, don't reset that. both of these are More Correct :tm: than what was there. #Resolved. aj is right. #Resolved. Actually, I think the appropriate model for this API is:\ncpp\nstd::vector<CGFloat> values;\nCFIndex count;\n_CGGradientGetColorComponents(gradient, nullptr, &count);\nvalues.resize(count);\n_CGGradientGetColorComponents(gradient, values.data(), &count);\nThis would be just like the CFArray, CFDictionary, etc. APIs that return caller-unknown counts of members via out pointer. #ByDesign. Since you'll do this in the constructor, you can use the vector's iterator copy ctor.\n(If you don't, I'll point it out in the next revision \ud83d\ude1b) #Resolved. we may want to log if they request an unusable color space. #Resolved. woc::StrongCF/woc::MakeStrongCF #Resolved. why wontfix? #Resolved. It is objectively an improvement in code quality. #Resolved. nit: why not i=0, < range.length?. This is only the appropriate fix for black/white/clear! #Resolved. it might be safe to assert that the #components in the color space is 3-4. Just so that we don't index beyond the end of components. #ByDesign. this +1 is somewhat worrying #ByDesign. whoa boy, give this a lifetime and an atomicity specifier! #Resolved. it doesn't look like this test fixture anchors the UIKit symbols. #Resolved. specifically: not all colours have alphas #ByDesign. I'm torn on how this is supposed to work. Shouldn't it call the next one with the next level, and always make sure to indent itself to this level? The thread local becomes superfluous, and it's initialized with the wrong value anyway.. I'm still not sure this is totally correct; if you nest arrays, you'll double-indent them because you're appending level*\"spaces\", and then passing level to the nested value which will prepend level*\"spaces\". these should perhaps be StrongCF; that'll make sure they are \"owned\" by someone. #Resolved. This should be immutable #Resolved. nit: const #Resolved. nit: const #Resolved. this should be immutable, right? #Resolved. a pattern space cannot be based on a pattern space though? #ByDesign. UNIMPLEMENTED takes care of this #Resolved. So this is sorta silly; ehren ran into an issue with destructors on file-level thread_locals; they never get called and then leak.. isEqual is likely overkill here; == will do. nit: you can use use static char _xyz and then &_xyz later; no need for initialization (or emitting a binary relocation that requires updating a pointer :smile:). (doing it the aforementioned way is common in objc associated object scenarios; they use keys which are just void*). nit: comment out of date. since you didn't in the end decide to use the change dictionary, you'll save a few cycles killing the new option here.. huh, is block observable? \ud83c\udf1f never knew!. though, wait; we generally avoid using setters in init, because they can be overridden by subclasses who are not yet initialized.. even though that doesn't apply here. :(\ni guess we should file a task to do this for dictionary too.. nit: missing - before [%s. I fail to see what that has to do with this; using *stop = YES; to abort the iteration inside the block still has us calling indexesOfObjects... and getting the blowing-up behaviour.. fwiw i don't think this needs commenting, as the reference tests didn't have TraceError to remove to begin with. as above. please make sure the drawing tests still compile.. What benefits does using a unique_ptr<char> get us over a vector? The vector can be copy-initialized without memcpy, and that would let you delete the entire constructor body.\nWhen in doubt, try to construct things in the initializer list :smile: #Resolved. You can use the vector's built-in iterator-range copy constructor for this! It'll let you simplify a lot.\nI encourage you to think about how you can empty out all your constructor bodies and move things into initializer lists. :smile: #Resolved. these can be parameterized on CGAffineTransform #ByDesign. also, we don't know what happens to stroke pattern brushes under transformation #Resolved. nit: since it's truly a bool, you'll want true; though we're using an atomic_bool to back a BOOL property o_O. These can be serviced by the same class.\nYour DRAW_TEST_P(...) can have the same class on the left and a different name on the right.\nTo differentiate them in CreateOutputFilename, you can look at the blending tests.. static this. we might want to test the zero-width cases separately so we don't spit out a hundred identical test images with different names.. *stop optimization?. please always call the most-specific version in these shim implementations; you'll avoid an entire level of dynamic dispatch and a stack frame.. huh; indexRange is in/out?. you're right, this DOES seem like it should be able to be lifted out/commonized.. please revert these. #Pending. didn't we decide to make this return a CGFloat*? #ByDesign. since set will contain only one index, this is no longer necessary. nit: space?. nit: the space from above probably belongs before this =. since for arcs these are the control points, is this accurate?. since curves aren't mitered, you could even remove this parameter!. what happens when you add a line from a completed stroked path is sorta an implementation detail; you could consider dropping that parameter from every test to half the search space.. We can't do this; especially if we want peoples' preferences to eventually roam to ARM and other platforms whose NSIntegers are different from x86.. This is unused. Either use it or delete IssuePatternCallback #Resolved. this doesn't actually take or create a color space? #Resolved. this is only used internally, why is it exported? #Resolved. indexPathForRow:inSection: is supposed to be a category method implemented in UIKit.. As above. standardize on /. You probably want a HStringReference here; i think get_Path will return a +1 HSTRING, and you'll leak it.. I'm worried that adding -Wno-deprecated-declarations will come back to bite us, since we use deprecation internally to signify unimplementedness.\nIf it doesn't warn, we will lose compiler warnings (and therefore errors) when we try to use something we have ourselves not implemented. #Resolved. >) \nshould these be marked const/ #Closed. sorry, I misread this as operator==. Ignore.\n\nIn reply to: 109243318 . nit: I'd prefer CopyColorTable or CopyColorTableToBuffer. localizedStandardContainsString: should be case- AND diacritic-insensitive; can you test T\u00c9ST with its fully lowercase version, and also te\\u0301st (which will test both diacritic sensitivity and case sensitivity?). Sorry, just the decomposed different-case one; you have the first.. the early return almost certainly improves code clarity here. \ud83d\udccf . I know, these ^Ms aren't great. The entire file has them, though! #Pending. I will cap this review with a reformat, but I don't want to churn unchanged lines. #Pending. Nah; self is simply a local that's used for the scope of this method.\n[self release] is common in class clusters; we need to discard the instance of the toplevel class that could have been allocated and replace it with one from a factory.\nOptimization opportunity: Since we know that [self alloc] returns an _NSConcreteNotification, we could set the members directly. However: this method gets called for all NSNotification subclasses that don't override it... so we can't do that. #Resolved. It doesn't really matter; it's visible to clang, and that's all that matters. #WontFix. good catch! \ud83d\udca2  #Resolved. Not in this case. We want strict control over the lifetimes of these receivers, and we don't want to vend them into an autorelease pool. objectsPassingTest: will vend them into an autorelease pool. #ByDesign. I am very sad that StrongId requires a two-step init for consuming a +1 reference. #ByDesign. It could, sure. #ByDesign. no. I'll document this better, but withOwningReference:YES below consumes it. #Resolved. I have a sudden aversion to blanket disabling this warning, but I don't know why. #ByDesign. r+ #Closed. Will this safely extend the lifetime of callback? My lambda-fu is relatively weak, but I recall that lambdas are intended to be copied or moved, not captured by const reference. Especially when they close over locals.. (since the scope they close over will disappear shortly after they're registered via objcwinrt::callback.). You don't really need to declare this; internal consumers can use it because it is in the @implementation.. how does stop work for concurrent enumeration? o_O. nit: A more pessimistic capacity hint would be \"all of our objects\"; consider?. we cannot be certain of the order of elements on our platform either.. this test _will spontaneously fail at some point in the future.. (can you explain the logic in here?). this still has an objective-C message dispatch. #ByDesign. I'm vaguely worried about the implications of two different TUs containing CreateInstance calls. Do they share static storage? Do they call the same instance of GetTypeID? #Resolved. This will leak. Please use woc::MakeStrongCF. #Resolved. behold this, the death of character #ByDesign. the compiler will handily totally fall over for this line when that transition is made :) #ByDesign. It shouldn't happen, but it's also not catastrophic if it does. It'd mean that @synchronized is terribly broken, but we'd have farther-reaching consequences if that were true.. I'd like to keep these separate; if the name-free removals are a performance issue, there're some opportunities we can take that don't apply to the other codepath.. this seems like an unusual workaround to using __block. why not CFAttributedStringGetLength? Technically, an NSAttributedString subclass can override -length, and with the way you've implemented this, it will not get called. #Resolved. Double underscores are for file-private static functions in the CT convention. #Resolved. this one can use the internal function ->AttributedString() #Resolved. same as in CTFramesetter #Resolved. huh.. it certainly should. Is this leaked? #Closed. Doesn't that mean this is in plan? #Closed. (like: it's not a far leap to make it available here) #Closed. These don't need a setter/getter/ivar decl if they're doing nothing special #Closed. Since applications can be written to re-layout due to keyboard presence, we should log an issue to propagate those notifications properly. Right now we're just removing them.\nAlternatively, are we just dropping support for UIKit keyboard resize? #Closed. nit: could use NSClassFromString(delegateClassName) now, instead of manually unboxing. #Closed. This message seems unclear: my first parse resulted in \"they can? cool! why are you crashing here though\" #Closed. don't you mean to NOTINPLAN_ all of these? #Closed. nit: calculate. Whoops; got my macros backwards! I thought this one threw an exception. #Closed. We totally do have NOTINPLAN_ macros for headers.  #Closed. I hate that this method returns an \"un-owned\" CTFrame. It should be a Create method or it should not exist. #Resolved. nit: prefer all factory functions X to go through an appropriate initializer initWithX:. Do we know whether the queue is fire-and-forget or fire-and-wait?\nI assumed NSNotificationCenter+OperationQueue was fire-and-forget, but it actually waits for the notification block to complete.. This delegate should be protocol-qualified; StrongId<NSObject<NSURLConnectionDelegate>>. This also requires a -[protocolClass canInitWithRequest:]. It would be safer to only retain data in here and only autorelease it outside the block. Otherwise, this +1/-1 pair could resolve when the Operation Queue loops around again and drains its pool.. nit: this could have instancetype as return type (even though the docs don't specify it). nit: prefer if(_delegateQueue); StrongId/AutoId have an operator bool that will not require the pointer to be returned to the caller.. nit: why addOperation: and not addOperationWithBlock:?. nit: as above. nit: prefer emplace_back; you get to pass the constructor arguments directly, and these three lines flatten to \nxxx.emplace_back(aRunLoop, mode);\nThis also avoids the +1/-1/+1/-1 on both runloop and mode.. do we need a && queue? What if you set the delegate queue to nil?\nWhat if you set the delegate queue when it's already running?. may want to caveat this for \"only one run loop\" so we can find it later. whoa, this is scary. I realize it is what was already happening, but those two things are very much not the same thing. not start anymore!. do we need to update _request like setRequest was doing?. hmm.. why move away from StrongId?. these getter calls seem unnecessary; NSURLProtocol for HTTP is a leaf class and cannot be subclassed.. it's a property, which makes it a less good candidate for StrongId. huh.. AutoId should be able to remove_pointer that properly. I wanted for AutoId<SNString> and AutoId<NSString*> to be functionally equivalent, so it strips or adds the pointer as necessary.. @aballway This is iterating in reverse. Cheaper than a reverseObjectEnumerator.. Wait, this doesn't even seem like it gets used in the body of this data delegate... but started gets used in NSURLConnection. Did some wires get crossed?. you can keep this folded, actually. [nil canInitWithRequest:request] returns NO. (no need for the if check that the compiler is going to emit anyway). this appears to be finding \"the run loop\"? It doesn't care about its arguments. If that's the case, why not just _scheduledRunLoops.clear()?. commented code. nit: prefer not cluttering the URL tests with URL Download tests. nit: delegate calls. nit: assert_eq?. this appears unused. If that's the case, we should at least lift these out to locals then. Otherwise, each hit is a [[_request retain] autorelease]. (the compiler can't perform common subexpression elimination as it can't prove that self.request is idempotent). also, shouldn't this call something _on the runloop to unschedule ourselves?. No need for this if you're implementing it directly under it. Also, @dynamic isn't for manually-implemented properties; it's more for \"these will exist at runtime, compiler, I promise\". Huh. It looks like the goal posts keep moving on what/when autosynthesis is engaged. Github does not have an emoticon that is glowering quite enough for me to express myself.. Nah, you're right to use @dynamic here. :). (is this superior to property autosynthesis? it looks like there's already a property for this ivar, and the ivar will be automatically generated just like it was before this change). should this ref be const?. nit: AutoId should have an operator== for T (but I wouldn't be surprised if it didn't). I'm not entirely certain I like this fallthrough case. It seems like an implementation detail that CGColorSpaceGetModel returns RGB for null colorspaces and we simply propagate that forward. #ByDesign. Can we test what happens when you provide an array of colors from different color spaces? #Resolved. TakeOwnership LIIIIIIVESSSSSSSSS. @rajsesh-msft yep! the Clear, White and Black colors are from the Gray colorspace, but any other colors aren't. Gradients fading from transparent to red would have a dual-colorspace spread. #ByDesign. The header was updated :confused:. this could also be CFRetain #ByDesign. If you create the new string with a capacity hint from the original string, you can avoid the inevitable reallocations #Resolved. it may be cheaper to create a unichar buffer and pass that off to CFStringCreateWithCharacters -- you get the added benefit of not creating a mutable string\nIt should be somewhat \"safe\" to use utf-16 codepoints or unichars; it's definitely safer than utf-8 #Resolved. Good point! #ByDesign. nit: prefer <cwchar> #Resolved. If you use unique_iw instead of std::vector, you can use CFStringCreateWithBytesNoCopy and detach it instead of copying the buffer. #Resolved. ??? can't we use CFAttributedStringCreate? #ByDesign. @pradipd \n\n\ud83d\ude09  #Resolved. nit: explicit int not required. no need for the temporary?. you'll likely want to either include headers for or forward-declare for NSNumber, NSDate, NSString, OSType, BOOL, NSInteger and NSUInteger. I'd be willing to bet these are all in NSFileManager.h on OS X: somebody including just NSFileManager would probably want to use them.. nit: I'd prefer not having the format changes in this PR. then again, some of them are good ... nit: macro these, and use %hs + __PRETTY_FUNCTION__ to get the method name in the macro. Not sure on whether this should be calling [self class]; thoughts?. nit: cast necessary?. aaa is it really guaranteed that it calls forwardInvocation: for class?. i'm not sure I like that this is different from calling class. it's strange to me that these go through invocation instead of hitting the invocation-forwarding path. you may have to implement doesNotRecognizeSelector:, and call it from the default forwardInvocation: implementation just like NSObject -- that's how people will get missing selector exceptions. Doesn't the NSObject protocol contain this?. nit: document not calling super init. It seems like performSelector: and friends could just call objc_msgSend; that would go through the invocation forwarding and capture codepath\nIt's less verbose, but perhaps there is an advantage to creating the invocation directly!. Indeed! It'd be good to have a comment in here so somebody doesn't think it's broken.\nOur CC (or that one really didactic talk I gave) states that we should almost never not call init. Since this is one of the cases where we mustn't, it deserves callout!. Will the C++ lambda here extend the lifetime of queue if it gets released before the reading callback fires? I know blocks will explicitly do so.\nThis could be a concern for all async objective-c things, and necessitate the use of AutoId/StrongId with its copy constructor to ensure object lifetimes.. c'mon, you only need to set the last character in the buffer. you will need to provide an allocator to delete this string; look at the implementation of initWithBytesNoCopy:freeWhenDone: for NSString, expecting freeWhenDone=YES. nit: on the. this looks like it belongs in NSDictionary+NSFileManager.. nit: give this a better name since it is exposed cross-TU. I don't understand why this needs WinRT at all; can't it use the std::high_resolution_clock? It seems like using the system's localized clock will introduce interesting rendering issues as the user travels across spacetime.. Indeed. Since we're using the calendar from Windows.Globalization, it should be primed with the user's timezone and location; we're not, as far as I can tell, compensating for distance from UTC or anything.. Ah, that's an interesting feature of the API. Let's file a bug to reevaluate its use here!. since you've done the conversion of line->runs to a CFArray, you can make these two changes to CFArray as well! #ByDesign. do you need to use woc::TakeOwnership here? (is _attributes a StrongCF?) #Resolved. _ut supra #Resolved. you can fold these into one RETURN_NULL_IF(!x || !y) #Resolved. lol\n #ByDesign. really really don't prefer CFAutorelease; this is getting put into an array that will own the reference! #Resolved. takeownership? #Resolved. The point of CppBase is that you do not have to think about this and the only reason to override it is to set different parameters.\nAre we doing that? #ByDesign. Oh, I see. We overrode copy.\nCopying is ill-defined for CF, and it doesn't look like anything ever calls it... #Resolved. there are two of these? l o l #Resolved. yeah to be a copy ctor this must be const __CTRun& #Resolved. l o l. you could mark this OSX_DISABLED_TEST?. please note when you've changed reference tests.. ut supra. I do not understand what this means. Wouldn't disabling the test on OS X ensure that it is not forced when undefined?. y'could just use .attach :P #Resolved. ut supra #Resolved. It is slightly more concise and involves fewer temporary objects to simply use woc::TakeOwnership #Resolved. it literally is the path to the current directory; if this test is based on the folder from which you're running it, the test is incorrect.. This test is not well-architected and should be replaced.\nIt manipulates global state (current directory) to do something it could simply do from the base path returned by GetCurrentTestDirectory.. will to revert. _result is a member. If we didn't retain+autorelease, this would be potentially fatal:\nobjc\nid r = [operation result];\n[operation release]; // remove last reference\n[r anything]; // boom: last owning reference was in operation. should this be in a temp folder?. nit: does->do (\"x and y do not x (and do not y)\"). The other path goes through this one!. Sorry t.t. So blending still requires a threshold even with perceptual?. @pradipd libclang is used to parse these headers in isolation. We don't have any apps that consume each header individually, so the problem gets hidden by the include order.\nIt is usually important that each header stand alone, but it is only a requirement because of libclang #Resolved. we were literally manually setting the cwd 10 lines above this, and then using the API for it down here? \ud83d\ude3f \n. nit: %@URL will format hilariously.. wait, why does this run need to be non-const? we aren't manipulating it, so it's actually better that it's const.. nit: get should not be necessary. should this be in a temp folder?. fun fact!\nthe Dictionary description, when the dictionary contains no sets or other strange objects, should match the original OpenStep property list format!. PixelComparisonModeDifferenceIt_sFridayWhoCares. you can struct-initialize components to remove the constructor body here #Resolved. You might like to make this more like a copy constructor and take const __CGColor& #Resolved. whack some TODOs in here about support components #Resolved. my word, these macros generate an explosion of branches #Resolved. nit: this is the only one that's lowercase? #Resolved. is it private? #Resolved. make these static. #Resolved. this is at the top of the file with the other static initializers; on purpose? #ByDesign. will a colorspace with an RGB or Monochrome model ever have 0? #ByDesign. CF takes care of ==, but not NULL #ByDesign. nit: seems like not the most necessary change #ByDesign. nit: regions can be named in normal english #Resolved. this is an incompatible concept. you can't provide a generic colorspace and then require r/g/b/a.\nPlease reimplement callers in terms of CGColorCreate or CGColorCreateGenericRGB #Resolved. is this threadsafe? :P #Resolved. Why the ? YES : NO? It seems superfluous. #ByDesign. Security is nominally below the Foundation line and shouldn't take another dependency. It can't throw exceptions. :frowning:\nDoing so will complicate NSURLSession, NSURLConnection, and NSURLProtocol's ability to do authentication exchanges, as those live in Foundation.. This won't be switched to StrongId because NSNull cannot be retained or released, and making that switch would confer no benefit.. can we file an issue on this, or document why ANGLE is not \"correct\"?. what here ensures that libobjc2 is linked?\nalso, i'm worried about the libobjc2 build itself perhaps trying to links libobjc2 since we got rid of StarboadLinkObjcRuntime. there is such a test ;P. eh, one more message dispatch. I'd prefer we expose it in NSObject as an internal function and use it from there, but I'm won't be horribly hurt if we don't.. @bbowman This is actually verbatim copypasta'd from another test in this very file \ud83d\ude09 . nit: id objc_msgSend(id, SEL, ...) does not guarantee that vararg calling convention matches that of fixed arguments. This requires a cast to be completely safe.\nAlternatively,\nobjc\n@protocol _ProjectionClassInformal\n+ (id)createWith:(IInspectable*)i;\n@end\n// ...\nresult = [static_cast<Class<_ProjectionClassInformal>>(cls) createWith:source]. If it is default, why must it be specified?. When you do so, please endeavour to clean out the test directory. It might have left-over runtime libraries.. iswdigit?. aaaa my eyes they are burning\nnit: please fix these weirdos :smile:. can these states be unified?. (the first two). can we implement scanHexInt in terms of scanHexLongLong? we'd have to accoutn for overflow behaviour, but it would kill half our hex reading code. doesn't this need ULL at the end? hmm. these two seem close enough to be mergeable, if you abstract out the terminal condition. (scanFrom, scanUpTo). nit: your new code has hasValue as a bool but the old code has it as BOOL; standardize?. is there an overflow case to be had for decimals?. none of the other APIs are @synchronized... should they be?. nit: nececssary. I'd like to see an additional test for something that fits in 64 but not 32; this doesn't have that. while you're here, can you make this static? #Pending. y. nit: switch these to StrongCF with TakeOwnership. range.location + replaceRange.location\nsoooo...\nreplaceRange.location?\nwait, sooo\nindex ? #Resolved. Nit:\nMagic\nNumber . Nit:\nImplicit unsigned on constant, consider U suffix\n:wink:. since we got rid of our operator new and friends, does this need removal?. do you intend to condition this on the presence of BranchName?. putting a .lib in the additionaloptions is scary; it can't be an Input? I worry that a change in link option order would break this.. nit: include -[NSObject setValueForKey:] in the message. avoid a heap allocation by using alloca... or just a locally-sized array. no need for this heap nonsense :). this is not a caveat, it is interoperable. we may want to prefer [class methodSignatureForSelector:]; this is a safe override point for subclassers.\nSome of our other KVC code may run afoul of this.. and then you can check the method signature's properties. without copying the return type. methodReturnLength~. early return ;P. untouched file, please revert?. hey hey hey now let's not get ahead of ourselves. aaaaaaaaaaaaaaaaaaaaaaaaa y. do you know if the validators are ever called automatically by the value setters?. we must also test the consumption of this method by setValue:nil forKey:x. I don't get it. Can't you just call [self setNilValueForKey:]? Or is this to get the appropriate \"is not key-value coding compliant\" exception?. nit: nil checking sig is not required, since nil.numberOfArguments == 0. this one will actually throw for id; is that expected?. so ^ will happily splode?. you will want to name this _UIColorConcrete; it's not a prototype #Resolved. in fact, you have combined the prototype and the non-prototype #Resolved. that's actually really quite bad; the prototype is a singleton (!!!!) #Resolved. you could also stuff an error into outError (!) if you wanted!. AJ answered offline: yes.. These casts are in the Apple-recommended Xcode autofixit format for string formats of unknown integer types.. ad-hoc reimplementation of common library function removed. These still throw warnings, because unichar and wchar_t are certainly not the same thing.. nit: why?. since it takes a va_arg, the compiler cannot tell us anything about the arguments -- we still want the format string security check though!. the reference macro is not expressive enough to capture a single arg. No objection to S, but that was an attempt to fix the wchar_t issue. What i'd like is a %ws for places where wchar_t is different from unichar :(. And CF/Foundation deftly ignore the h on s; the state h generates in __CFParseFormatSpec is steamrolled when the s comes around.. Actually, this is measurably worse. l is also stomped, so S is more valid.\nTime for another scrub :smile:. @bviglietta Agreed! The format annotations were totally missing/disabled, though, so.. it never knew :grin:. nit: consider adding a todo here, because this assumes a 4-component color space!. is this not an API that exists?. this may not be a valid cast on all platforms. prefer a temporary that you copy into NSInteger for truncation purposes. lel clang is actually completely wrong here. it thinks c1 is the selector name, but it's the argument name. the method is truly called interleavedAlignmentsCharMax::::::::::::. This file is impossible to review; did the line endings change? #Resolved. nit: \"dispaly\". you can use the append(size_t, CharT) overload here instead of constructing a temporary string. nit: this is autoinitialized to 0. nit: I'd prefer NSUInteger; it lets us expand seamlessly if we ever widen the NS* family of types. warning: statement result not used;. where did this underscored name come from?. it'll be worth documenting :smile:. I was talking about _WinMDFilePath; it didn't look like it was introduced in this pull request. Are we sure this const implementation works with the constant CGColors?. nit: 8 not 6. oh i know. trust me i know.. my heart can only break so many times. it could.. :rofl:. if only you could do a type-parameterized test to test the sizeof/alignof for the actual backing type.... nit: Notes #Resolved. this is using a static in a non-threadsafe way; also, it's moderately confusing as to what's happening #Resolved. consider rewriting this #Resolved. Consider using %g instead.. This is all new code; can we use woc::StrongCF?. Should we make sure that drawing after WithWidth does or does not set the global width?. nit: @aballway \ud83d\ude2d . very confused.\nif you use an std::vector here you don't need to cap it at 4, and count can be automatically inferred. It's infinitely better!. LineCap here is redundant since it's LineWithCap tests. no. incidentally, this string is leaking.\nuse StrongCF.. I think it might make more sense to have phase and dashes be separate test parameters, so you can test every dash set with every phase?. nit: got a problem?. got a problem?\nthis is more specific.. i wish this didn't have such a large diff. why?. why?. why?. why?. why?. cut it out.. seriously?. is swizzling every method appropriate here?\nwe're only supposed to swizzle in the array case if it has an insertion method. this changes that logic.. add a kvcMediatedSet test. #done. add a manualNotificationSet test #done. nit: underscores are for private things; setWindowsServiceToken: might be a good name?. gotta fix it here too!. nit: not totally true.. this test should almost certainly be drawing at the half pixel mark, not transforming the world such that the world aligns at the half pixel mark.\nalso, it should just use CGContextStrokeRect.. this CFStringCreateWithFormat is still being leaked.. you could avoid this if you wanted to by creating an empty mutable string and using CFStringAppendFormat like you already are. I believe using __block on these avoids copying the StrongId -- self is therefore not strongly held by the block.. Is it possible for the thread to be dismantled before we finish here?. It's safe to just capture things in blocks normally; Strong semantics are preserved since blocks referring to id types will retain/release.. (it's clearer, in fact, and avoids the StrongId machinery). there ma ybe other ignores on these tests; would you mind checking?. this file still has __block StrongIds!. makes perfect sense. thanks!. it's valid/specified for block objects to have an invoke method, so you could use callbackBlock performSelector:@selector(invoke) .... you know, I take that back. It's valid on the reference platform and on winobjc, but it isn't specified in the Language Specification for Blocks. 1. They do inherit NSObject! It's awesome/terrifying all at the same time.\n2. Meh, I left that comment a long time ago because I didn't think -invoke was valid.\nI did just test it, though:\n```\n(duhowett-mac) ~/woc/block % cat main.m\ninclude \nint main() {\n        void (^x)() = ^{ fprintf(stderr, \"lol?\\n\"); };\n        [x invoke];\n        return 0;\n}\n(duhowett-mac) ~/woc/block % ./main\nlol?\n``. so if you want to do it, be my guest!. I still don't think this one's necessary either. (or this one, sincereq` will be captured). another one here :). since you are changing this code, you should bring it up to par with NSInvocation's perfect forwarding implementation\n..\n..\n..\n..\n..\n..\n\ud83d\ude00 . keyb?. perf: creating two dictionaries per observer. format: = self ]. nit: using side effect from =. capturing by reference here is not likely the correct thing to do.. expand these a little more; what do they mean?. you can short-circuit out if the observer does not want the new value. so like, this will be \"the entire set\"?. please prefer removeObjectForKey: -- remember how painful it was to figure out that subscript assignment to nil deleted?. to the original dictionary? or to the original set?. this comment was clearly copied, since indexes don't exist. this is common to all three DidChanges, right?. so much code duplication.\ncan you fold this into a common function?. like _dispatchDidChange?. not even kidding.\nyou've taken ownership of this code, it is now your responsibility ;). nit: TKind. the point of the previous code was to avoid even formatting a single selector that we wouldn't end up using. this has the added effect of changing changeKind for all future observers; is that what we want?\nI don't think it is; keyObserver is local to a single observer dispatch, but changeKind if global to all observer dispatches for this key!. NSInvocation is the thing that supports an infinite amount of args; this no longer matches NSInvocation!~. Since you're making changes here, please update these types to ensure register width; perhaps uintptr_t?. You've introduced an observer information leak.\nobjc\n[object setValue:@\"x\" forKeyPath:@\"key\"]\n...\n[object addObserver:observer1 forKeyPath:@\"key\" options:/* prior, old, new */ context:0];\n[object addObserver:observer2 forKeyPath:@\"key\" options:/* prior */ context:0];\n...\n[object setValue:@\"y\" forKeyPath:@\"key\"]\n...\n// observer1 will receive old=\"x\"\n// observer2 will receive old=\"x\" as well, despite not requesting it.. outdated comment :). since we're not mutating this, do we need to store it locally instead of in the capture?. er sorry, since we're not using this after we mutate it. oh, i understand what was happening. do you know if this holds up with the comment on 662? We're degrading a collection mutation event to a single setter mutation event. valueForPendingChange... was supposed to explicitly not do objectsAtIndexes: in that case.\nIt was intended to fall back to the !indexes case (original code, line 524). I believe this is subject to the same caveats as above.\nI swear we had tests testing this.. it will be worth testing this to see what happens for the key.collection.key case -- I think you're supposed to get a set notification since .key is a calculated subcollection.. Incidentally, this is why that function pulled Indexes out of the change dictionary -- it was the ideal way to communicate that we had degraded a collection mutation to a single setter mutation across the will->did divide.. Not 100% sure we should change this indentation unless it's in code WinObjC added.. should we document this removal?. it will be worth documenting what removing this does to the later function call. nit: you have a space after your ( #Resolved. nit: Windows-MetaData has an unnecessary hyphen and metadata should never be camel case. Windows Metadata #Resolved. Oh no! @aballway this is what actually introduced the \"information leak\" I was talking about.. still says keybserver. this change is due to formatting alone. S_FALSE would be fine here; it'll not return a comErrorInfo. it might be worthwhile to port this to a github ID :). It seems curious to send this before the connection is established.. though i guess this is the earliest viable time?. formatter gone mad. The burden might be on NSURLProtocol to set the outgoing content-length, right?. Or to use the chunked transfer-encoding if the stream is of unknown length.. It's strange we can't use OBJCEQ :(. Oh, right. I hate those macros actually.\nThe way they're implemented, they'll break up the args to ASSERT_OBJCEQ({@1, @2}, arr) into {@1, @2} and arr, and then try to emit (simplified) {@1 == @2} (lel). no version for GitVersionTask?. nit: magic, not majic. __block StrongId<T> will not commute ownership of the object into the block. Prefer T*.. Unless that's what you want?. This one makes sense because the block is mutating it, I reckon.. how should this method handle value==nil?. this formatting is objectively worse than the one that existed before :(\nobjective-c often lines up on colons; I noticed that clang-format wasn't doing that in a prior PR, but didn't think much of it.. It might be worth checking whether this works on immutable requests... even though this is specified for NSMutableURLRequest*, we'll want to figure out what the error case looks like. NSMutableDictionary should not be doing that.\nAdditionally, actually, this should be using setObject:forKey: -- setValue:... is a KVC method that dictionary conforms to with additional logic. As well, since it's inherited, NSDictionary can't override its type to support lightweight genericity.\nsetObject:forKey:, however, does not remove on nil set.. If it's not burdensome to emulate, why not do it?\nAlso, do we know how those properties hold up when the request is copied/mutableCopied?. Oh crap. I just realized our .clang-format is configured for Cpp, not ObjC -- that could explain some of the really bizarre behaviours we're seeing.. I replied to the wrong comment, but ... \ud83d\ude1b . Here's a curious one: do they get encoded/decoded via archival?. It is fine to encode nil; if there is nothing in properties there's no point in storing an empty dictionary. In fact, it's actively bad to do that: it makes it so that all requests that get decoded get a properties dictionary even if they didn't have properties on the other end.\nUse objective-c's nil propagation to your advantage!. That requires you to store an additional once token... and then make sure that it doesn't lie when you set _properties manually (through copying or decoding).... These constants almost certainly need a LL suffix. Isn't there an initializer that doesn't take a char*? that seems sketchy.. ..? isn't that an obvious caveat? can you really enumerate a nonexistent directory on iOS?. It's just as much code to set error (to a generic \"lol error failed\") as it is to add @notes1. you just annotated thisNOTINPLAN` in the header, but you implemented it?. Can this note just not be itself?\nThat's like saying \"We don't throw things away in this house, we recycle them\"\nBut the user still wants to know where the detritus goes.. Yes it does, it's called rename(2). yes it does, access(2). ____. dang WRL code. I am pretty sure this is implemented, and this is the API to do it. ut supra. you literally implemented this, sans handler support. Just Caveat it and ignore handler.. ut supra. How is this different from setAttributes?. at least return @\"C:\\\" then. this is actually not testing that.\nyou need to use access -- you're telling whether the path is marked executable for anyone, but the API is asking whether it's executable for us. !DANGER!\nEbrStat?. (You may have began reviewing before it did :smile:). Okay, but we'll only be testing that all three have fired; ordering is not guaranteed.. you wanted early returns, you got early returns. No particular reason, but it's not harming anything being manually synthesized . Ugh clang why. The loop is scheduled every 0.1 seconds and bails out due to lack of input. It's functionally equivalent to having the timer with less overhead. When there is input (a scheduled callback!), the loop is no longer a no-op.. Yep! An NSThread is just a pthread that's run through the NSThread APIs. NSRunLoop and NSThread work together to make sure that even untracked native threads get run loops.\nUnfortunately, NSThread just can't be used for this anyway :). Fair. @aballway Ideally we'd get ARC to screw with this ownership as little as possible. Also, this happens immediately when the thread starts; if the object is dead by then (which it can't be, since we don't return from init until the thread is started successfully), something is terribly wrong and we should crash anyway.. We're not coalescing; this is for reference platform compliance. nope, ARC!. :grin:. This is an interesting approach!\nDo you think it should go down with the other PackageReferences?. Indentation is odd here!. LOL.. That doesn't mean it can't go in the same block of package references... that just means we have to keep the Condition. technically, evaluating integer as a logical expression folds to integer != 0. Negative values can be considered failures, right? Should we update this method to return an HRESULT?. Interesting; did this exist the whole time? Does it have the same semantics?. Interesting. This doesn't respect the corner flags?. You will want to cast this to id and autorelease it. Right now it's returning a +1.\nI guess that is why it uses NS_RETURNS_INNER_POINTER!. We should be using StrongCF for this.. replace NULL with nullptr everywhere. !DANGER! !DANGER! !DANGER!\nPlease use a smart pointer type for this.. Or a vector!. Interesting; I didn't think other dependencies added this block.\nCan you remove it and make sure everything else works? We're trying to avoid expressing dependencies in SLN. both of these annotations are now incorrect.. There is a file called SimpleTest that does not have a test backing it. Please make sure all test images are accounted for!. @rajsesh-msft I think he's going from bool to \"stack\" -- to allow for nested calls to enable/disable figure state without trampling eachother. both of these annotations are still incorrect.. Please standardize on test names being in PascalCase. y'could just .attach(..CreateCopy...) instead of doing this.. The way it is now, it creates a temporary StrongCF, copies it (+1) to workingPath, then destructs it (-1)... If you use attach you get a true +0. attach _ut supra. attach ut supra. technically stupidly easy to implement... and the others should be implemented in terms of these ones by passing kCGBlendNormal or kCGBlendSourceOver. saaaaayyyy.... doesn't _pattern.size() make a good stand-in for keeping a separate patternCount?. :+1:. @Status nonyabiznis. I can't comment on the STUB_METHODs on blendmode. nit: prefer a name more related to Copying. @ms-jihua: @synchronized(self) locks around self; an atomic property locks only around &_ivar. We'd like to guard the mutation of the members _as well as their access.. Incidentally, a mutable array property returned through synchronized locking and then queried is not itself concurrency-safe, even if the mutation is performed synchronized as well... however, since we're guaranteeing that mutation should be done (with the boolean condition), it's \"safer\" than what we had before.. This conforms to the original implementation of NSURLSession tests... and it more completely fills out THBooleanCondition's implementation of NSCondition. This test becomes a no-op if you remove this. Specifically, the default state of a \"regular file\" is regular file + !immutable.. You should set it to immutable, and then set it to mutable... or test a different flag entirely.. Also, setting the \"file type\" of a file after its creation simply shouldn't be possible o_O. In looking for this issue, I realized that no header declares the protocol method URLProtocol:didWriteData:...; could we add one in NSURLProtocolInternal? Ideally, NSURLConnection would conform to this private protocol, and the compiler would warn us if it didn't have the right methods on it. NSURLSessionTask should eventually do this, but it doesn't.. This seems cleaner.. Alas, yes. [x isEqual:y] returns BOOL. Functions that return one/the other aren't implicitly convertible.. Please create a tracking issue for this :smile:. This should still say \"for evaluation virtual machines\"; the VMs are \"evaluation VMs\" :smile:. >n>10.0.15063.0</WindowsTargetP \nthe minimum version should not be 15063.. (the minimum version should be whatever minimum version the rest of the SDK uses; perhaps 14393?)\n\nIn reply to: 141440251 . this pull request should be kept clean of 3rdparty file changes not necessary to build with VS2017.3. these 3 UT project changes look far wider in scope than \"fixing for vs2017.3\". >15063 \n\nthis does not seem necessary. my \"exploratory fix\" comments should probably be purged. >15063 \n\n14393?. Using None here caused multiple readmes to get packaged, actually, due to Inference.. (and throw error NG0021). >15063 \nnope. >15063 \nno can do. >15063 \nalmost certainly not. >> \nwhy now?. With this fix, can you produce a WinObjC.Logging.nupkg? If so, how big is it?\n\nIn reply to: 141440908 . the filter adds project.json but project.json has been deleted.. i meant the entire change from uap10.0 to UAP,Version=v10.0... the FILE seems necessary (!!!!)\n\nIn reply to: 141440846 . wait, now i'm really concerned... wasn't this, like, the thing that made things work?. It may be worth commenting that this may not work for certain msbuild invocations and refer to the nugetizer issue number right here. !! make sure you carry the issue number forward in your squash commit message. Biiiiiigggg comments here explaining what and why and when and where are absolutely appreciated. Since you are only using _ProjectReferencesWithPack here, can you move its Include expression into the Remove here and get rid of the temporary?. this seems like the only file that changed from uap to UWP,Version=. Do both this and the below project need a Min version, or is it okay without one?. let's not  just revert files... Nit: we should reduce unnecessary changes to vendored headers. Nit: it looks like dispatch uses tabs, not spaces. Please follow the existing format. If this is indented with spaces, it should be indented with tabs to match the libdispatch coding style.. it looks like this code's just been copied. nit: if a specific exists for this key. Concern: On line 2027 you remove an existing specific if you set its value to null.\nHere, you will insert a new specific even if its value is null.. do we need to be wary of locking and threading here?. nit: looks like dispatch uses ctxt for context; care to match?. nit: this seems more like a dqsl. nit: missing space before NULL. 'scuse me?. FOREVER is not likely to be correct, just on principle. you need to release the group and the queue when you're done.. (otherwise you're not testing the queue -> specific_list dealloc codepath). I'd like to see a test that involves multiple queues, just to make sure that we never get cross-contamination.. this file still got reformatted.. reformatted. Ah, I see. Then this is a change we have to take.\nMake sure it\u2019s part of the \u201cupdate prebuilts\u201d commit :). You need to do this because var contains var->next, right?\nThere may be another TAILQ macro that handles this, but perhaps not.. I can't figure out how this compiles. dq_specific_q is a member of dq, but you are lacking a -> here. nit: this function should take a dq_specific_list, it's more of a dispatch_queue_specific_list_release. This won't compile, your dq is named queue..?. what happens if two callers get here at the same time?. this is unused. clever!. you can save this temporary by just specifying that context is itself a void**. The formatting  in this test file seems all sorts of strange. Is that just GitHub acting up?. Minor nit: The EXPECT and ASSERT macros work better if the \u201cexpected\u201d value is on the left.. This is actually reverting formatting changes we made to prebuilt headers years ago :). Brian, you and I discussed this a long time ago. The Language package includes libdispatch, and if not ignored it will copy it over the newly compiled version.. Msbuild requirement. A dangling \\ will eat an adjacent \u201c in the compiler command line or the command line for any other tool.. Please format.. Please don\u2019t format weird. Format. Path. I'm dismayed about this file being included at all. I know it's formatted wrong, but fixing its format is utterly unrelated since it's not otherwise changed. These tests don't validate the locking behavior: Block 2 will be scheduled after block 1 naturally, so it won't even have to wait for the spinlock to be uncontested.\nYou can solve this by waiting for block 2 to start (using a dispatch semaphore) before even scheduling block 1. You'll need to make the queue concurrent.\n. release queue. we need a test for the case where OSSpinLockTry succeeds. why're these static?. hank these are still tabs. please format this file.. Should this be default priority, or lower?. Please make sure to set this to null. Otherwise, subsequent tests will signal on a free\u2019d semaphore!\nI guess also check if the semaphore exists in the dtor callback ;p. Waiting on a destructor is not likely to be a very common case though :). Per offline suggestion, I'd prefer we use CFLocaleGetPreferredUserLanguages or whatever it's called. That way we don't need to use our WinRT Enumerate directly everywhere.. CFStringCreateWithSubstring. nit: add note that ualoc_ is an apple-specific ICU API suite. nit: give examples of these. \"The user's preferred language list comes in as en-US and de-DE, ...\". minor: should we be transforming this list from - to _ on creation? it could save us the step of converting the - to a _ for every lookup. . we could do it inside Enumerate if CF prefers _ locale names. these multiple scope-nested counts scare me. it looks like the codepath below has fallbacks for en_US and devlang (they've called them \"backstops\").. nit: extra line. is this the apple official name or the windows name for this locale?. nit: prefer self.tableView.allowsSelection. NOT A NIT: don't do this in the getter for \"how many rows are there\" !!!. i'm sorry? what? a crash?. agh stringByAppendingPathComponent:. same. just flatten these all into one path, but set withIntermediateDirectories:true.. ?? you're only testing looking strings up in the single lproj that exists, which usually matches the system locale.. what I mean by this is that you're behoven to do the same ;). then you're not exercising the _ variants. Compile time? Runtime? Either way, please file it. by testing the base localization, we aren't testing anything related to 1. localization or 2. localization changes though.. Thanks to me viewing code in github's web UI, I didn't see that the backstop is in a completely different function (the one that calls this one), and that returning is the correct thing to do.. commented!. nit: you may need [super viewDidLoad] here for completeness' sake. / is not a path component, so you can leave this call out.. funny question: why not just expose bundlePath in the fixture and use that instead of re-combining _playground and _bundleName later?. _. is this still necessary?. ! DANGER !\nI don't think we can build with 0.2.0. Are we specifying conflicting versions in the project versus in the project.json?. I'm a bit worried about this, as well. We don't need NugetRestore anymore? For any packages consuming IW?. This is like declspec(selectany), but for functions: It's not inlined, but it's also not emitted as a symbol in each translation unit. Info here.. (rebuilding to verify why I did this). 1. All the code will be available for eternity in git history\n2. This doesn't compile because VS2017 stopped shipping the VS2015 extensibility toolkit.\n3. VS2017 and new rule sets largely obviated the need for these guys.. This is required in CoreText, actually, because CT uses CD_OBJC_FUNCDISPATCHV, which uses CF_IS_OBJC, which uses NSCFType. The release build was failing here due to new optimizations; it was never valid to use ptr1 or ptr3 (derived from ptr1) for any reason except, perhaps, addressof.. This is copied from Nugetizer-3000's default template, and is required so that package target lookup doesn't fail during restore. It doesn't add any additional dependencies!. this file is autogenerated!. this died long ago, we never read it in sbclang.targets/props. may not be necessary.. yeah, don't need these. we do need hmapmaker though. another unused guy!. ",
    "H2CO3": "actually, the first point is still not fixed, either (if you look in UnifiedFoundation/Foundation/NSArray.mm in the same method, the count is still 4, not 5.)\n. ",
    "alexzielenski": "Someone forgot to reindent after a copy & paste\n. ",
    "khouzam": "Thanks for reporting this, we'll take a look\n. ",
    "volkrass": "@asimonov-msft Sorry for my misinterpretation of the .tlh files. I got it, they have no impact on compiler or linker errors. It seems to be that through the vsimporter tasks either the header files are not in the correct place or the paths for header files are not imported correctly. In my case RCTBridge.h hasn't found. Might be I have to add some folders to \"include path\" to fix it. \n. @asimonov-msft Thanks for your advice. It solved my issue with RTCBridge.h. There are still few issues with header files. CoreLocation/CLError.h seems to be that is not part of WinObjC project.  Is there any plan to support JavaScriptCore? I have seen MapKit is on your roadmap. I try to create a build without the missing components anyway.\n. @joewood  You are absolutly right, JavaScriptCore is fundamental for RN.\nRegarding missing macros and attributes will it be fixed by WinObjC Project? \nLet me know if I can help you in anyway.\n@DeChrist Never considered to use WinObjc-Check, but this is definitly a helpful tool. Thanks for your advice!\n. It looks like we can close this ticket for now, because there is a way to to get ReactNative running on Windows 10. https://github.com/ReactWindows/react-native\n. @wjk Thanks for your support, works perfect. \nShould I still let this issue open because the clang compiler seems to be not compatible with the XCode version?\n. @wjk Ok I'm going to close my ticket, your hint has worked for me.\n. @nicholasgerard-msft, sure I will do. \n. @Ramu-msft Great to see that.\n. @asimonov-msft I did double check it. Now I can rebuild the package without any issue. I followed your suggestion to rebuilt build/build.sln instead of using 'clean build' and 'build' again, like I did it before  From a first impression it looks good now.\nBut what does confuse me is, that after I compare the content of my currently built & zipped winobjc in SDKPackage with the content of the current package from the download link, I see that StarboardXAML.lib, StarboardXAML.dll and XamlCompositorCS.winmd is missing in the folder \"lib/Universal Windows/x86\".\nSo it looks like for me that package build is not working correctly.\nAny hints for me?\n. asimonov-msft  Not sure what I did different then before. I repeated all steps from cloning the git repository til rebuild the project starting at build/build.sln, now everything is fine. I don't get the clue what I did different. Ok, I restarted Visual Studio 2015 several times new, but don't believe this has an Impact. Sorry for bothering you with my stupid issue.\n. @Volkrass, I will give definitely the tool of @fdierick a try. I agree with @NuttGuy, question is how we could combine an automated tool with voting & ranking for particular APIs? One thought come in my mind: What would be when we can use the tool and it automatically generator a statistic which can be upload to an github page where we collect the ranking? There are several things we have to consider like fraud protection or how we can avoid fake entries?\n. Ok, thanks for your feedback.\n. @s5msft: The view is rotated 180 degress around - not mirror inverted (sorry for wrong explanation first)\n. Has been solved.\n. @rajsesh-msft Last missing function in my project for now :) Thanks a lot. \n. @s5msft Thanks a lot for your fair answer. I'm pretty sure Microsoft have the resources & money for an adequate staffing. Looking forward to see your progress in next few weeks. This project would be very helpful for us.\n. Great guys! Will come back with feedback asap. Keep up the good work!\n. ",
    "DeChrist": "@volkrass You may want to use this tool to detect the currently missing components:\nhttps://github.com/fdierick/WinObjC-Check\n. ",
    "DanielRosenwasser": "I have a CONTRIBUTING.md almost done, though I can't seem to get tests to run. I've rebooted after installing\n- Visual Studio 2015 with\n  - Visual C++\n  - Universal Windows App Development Tools (all)\n  - Windows 8.1 and Windows Phone 8.0/8.1 Tools (all)\nHowever, if I try running buildall.bat from the , I get\n```\nMicrosoft (R) Build Engine version 14.0.23107.0\nCopyright (C) Microsoft Corporation. All rights reserved.\nBuild started 8/29/2015 12:16:05 AM.\nThe target \"AfterGenerateAppxManifest\" listed in an AfterTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\n.NetNative\\Microsoft.Net.CoreRuntime.targets (68,11)\" does not exist in the project, and will be ignored.\nThe target \"_GeneratePrisForPortableLibraries\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\M\nicrosoft.NetNative\\Microsoft.Net.CoreRuntime.targets (177,11)\" does not exist in the project, and will be ignored.\nThe target \"AfterGenerateAppxManifest\" listed in an AfterTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\n.NetNative\\Microsoft.NetNative.targets (126,11)\" does not exist in the project, and will be ignored.\nThe target \"AfterGenerateAppxManifest\" listed in an AfterTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Microsoft\n.NetNative\\Microsoft.NetNative.targets (174,11)\" does not exist in the project, and will be ignored.\nThe target \"BeforeGenerateProjectPriFile\" listed in a BeforeTargets attribute at \"C:\\Program Files (x86)\\MSBuild\\Micros\noft\\NuGet\\Microsoft.NuGet.targets (149,61)\" does not exist in the project, and will be ignored.\nProject \"C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj.template\" on node 1 (default targets).\nC:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Platform.targets(57,5): error MSB8020: The build t\nools for v120 (Platform Toolset = 'v120') cannot be found. To build using the v120 build tools, please install v120 bui\nld tools.  Alternatively, you may upgrade to the current Visual Studio tools by selecting the Project menu or right-cli\nck the solution, and then selecting \"Retarget solution\". [C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj.templat\ne]\nDone Building Project \"C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj.template\" (default targets) -- FAILED.\nBuild FAILED.\n\"C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj.template\" (default target) (1) ->\n(PlatformPrepareForBuild target) ->\nC:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Platform.targets(57,5): error MSB8020: The build\n tools for v120 (Platform Toolset = 'v120') cannot be found. To build using the v120 build tools, please install v120 b\nuild tools.  Alternatively, you may upgrade to the current Visual Studio tools by selecting the Project menu or right-c\nlick the solution, and then selecting \"Retarget solution\". [C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj.template]\n0 Warning(s)\n1 Error(s)\n\n```\nIf I try copying the cmdline.vcxproj.template to cmdline.vcxproj and running msbuild (or having VS2015 import/update it), then I get the following:\n```\nBuild FAILED.\n\"C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj\" (default target) (1) ->\n(Link target) ->\n  LINK : fatal error LNK1104: cannot open file 'ucrtd.lib' [C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\cmdline.vcxproj]\n0 Warning(s)\n1 Error(s)\n\n```\nAnd if I try to retarget the SDK version to 10.0.10240.0, then I get\n| Severity | Code | Description | Project | File | Line |\n| --- | --- | --- | --- | --- | --- |\n| Error | LNK2019 | unresolved external symbol _main referenced in function \"int __cdecl invoke_main(void)\" (?invoke_main@@YAHXZ) | cmdline | C:\\Users\\drosen\\WinObjC\\tests\\cmdline\\msvcrtd.lib(exe_main.obj) | 1 |\n. ",
    "mehmet6parmak": "@asimonov-msft Yes, I was trying with the repo instead of pre-built package but when I tried building build/build.sln I got the following errors. Then tried with the pre-built sdk and got the same error above while building HelloUI sample. I tried setting target cpu architecture to x86 instead of mixed platforms but did not work. \nSeverity    Code    Description Project File    Line\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   objcrt.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Windows\\CLANG    1\nError       error reading 'static'  objcrt.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Universal\\CLANG  1\nError       error reading '19'  objcrt.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   objcrt.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Universal\\CLANG  1\nError       error reading 'static'  objcrt.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Windows\\CLANG    1\nError       error reading '19'  objcrt.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.Windows\\CLANG    1\nError       error reading 'static'  objcrt.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.WindowsPhone\\CLANG   1\nError       error reading '19'  objcrt.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   objcrt.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\objcrt\\objcrt.WindowsPhone\\CLANG   1\nError       error reading 'static'  Starboard.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Universal\\CLANG    1\nError       error reading '19'  Starboard.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Universal\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Starboard.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Universal\\CLANG    1\nError       error reading 'static'  Starboard.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Windows\\CLANG  1\nError       error reading '19'  Starboard.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Windows\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Starboard.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.Windows\\CLANG  1\nError       error reading 'static'  Starboard.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.WindowsPhone\\CLANG 1\nError       error reading '19'  Starboard.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.WindowsPhone\\CLANG 1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Starboard.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Starboard\\Starboard.WindowsPhone\\CLANG 1\nError       error reading 'static'  CoreFoundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Universal\\CLANG  1\nError       error reading '19'  CoreFoundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreFoundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Universal\\CLANG  1\nError       error reading 'static'  CoreFoundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Windows\\CLANG    1\nError       error reading '19'  CoreFoundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreFoundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.Windows\\CLANG    1\nError       error reading 'static'  CoreFoundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.WindowsPhone\\CLANG   1\nError       error reading '19'  CoreFoundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreFoundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreFoundation\\CoreFoundation.WindowsPhone\\CLANG   1\nError       error reading 'static'  Foundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Universal\\CLANG  1\nError       error reading '19'  Foundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Foundation.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Universal\\CLANG  1\nError       error reading 'static'  Foundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Windows\\CLANG    1\nError       error reading '19'  Foundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Foundation.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.Windows\\CLANG    1\nError       error reading 'static'  Foundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.WindowsPhone\\CLANG   1\nError       error reading '19'  Foundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   Foundation.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\Foundation\\Foundation.WindowsPhone\\CLANG   1\nError       error reading 'static'  CoreGraphics.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Universal\\CLANG  1\nError       error reading '19'  CoreGraphics.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreGraphics.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Universal\\CLANG  1\nError       error reading 'static'  CoreGraphics.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Windows\\CLANG    1\nError       error reading '19'  CoreGraphics.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreGraphics.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.Windows\\CLANG    1\nError       error reading 'static'  CoreGraphics.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.WindowsPhone\\CLANG   1\nError       error reading '19'  CoreGraphics.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreGraphics.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreGraphics\\CoreGraphics.WindowsPhone\\CLANG   1\nError       error reading 'static'  QuartzCore.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Universal\\CLANG  1\nError       error reading '19'  QuartzCore.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   QuartzCore.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Universal\\CLANG  1\nError       error reading 'static'  QuartzCore.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Windows\\CLANG    1\nError       error reading '19'  QuartzCore.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   QuartzCore.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.Windows\\CLANG    1\nError       error reading 'static'  QuartzCore.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.WindowsPhone\\CLANG   1\nError       error reading '19'  QuartzCore.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   QuartzCore.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\QuartzCore\\QuartzCore.WindowsPhone\\CLANG   1\nError       error reading 'static'  UIKit.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Universal\\CLANG    1\nError       error reading '19'  UIKit.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Universal\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   UIKit.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Universal\\CLANG    1\nError       error reading 'static'  UIKit.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Windows\\CLANG  1\nError       error reading '19'  UIKit.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Windows\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   UIKit.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.Windows\\CLANG  1\nError       error reading 'static'  UIKit.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.WindowsPhone\\CLANG 1\nError       error reading '19'  UIKit.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.WindowsPhone\\CLANG 1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   UIKit.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\UIKit\\UIKit.WindowsPhone\\CLANG 1\nError       error reading 'static'  StarboardWS.Universal   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Universal\\CLANG    1\nError       error reading '19'  StarboardWS.Universal   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Universal\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardWS.Universal   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Universal\\CLANG    1\nError       error reading 'static'  StarboardWS.Windows C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Windows\\CLANG  1\nError       error reading '19'  StarboardWS.Windows C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Windows\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardWS.Windows C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.Windows\\CLANG  1\nError       error reading 'static'  StarboardWS.WindowsPhone    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.WindowsPhone\\CLANG 1\nError       error reading '19'  StarboardWS.WindowsPhone    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.WindowsPhone\\CLANG 1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardWS.WindowsPhone    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardWS\\StarboardWS.WindowsPhone\\CLANG 1\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1468\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1506\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1468\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1506\nWarning CS0618  'DisplayInformation.ResolutionScale.get' is obsolete: 'ResolutionScale is not supported on Windows Phone, and can return incorrect results. Instead, use RawPixelsPerViewPixel' XamlCompositorCS.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   155\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1468\nWarning CS4014  Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call. XamlCompositorCS.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\XamlCompositorCS\\XamlCompositorCS.Shared......\\Frameworks\\XamlCompositorCS\\CALayerXaml.cs   1506\nError       error reading 'static'  AVFoundation.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Universal\\CLANG  1\nError       error reading '19'  AVFoundation.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AVFoundation.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Universal\\CLANG  1\nError       error reading 'static'  AVFoundation.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Windows\\CLANG    1\nError       error reading '19'  AVFoundation.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AVFoundation.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.Windows\\CLANG    1\nError       error reading 'static'  AVFoundation.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.WindowsPhone\\CLANG   1\nError       error reading '19'  AVFoundation.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AVFoundation.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AVFoundation\\AVFoundation.WindowsPhone\\CLANG   1\nError       error reading 'static'  AudioToolbox.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Universal\\CLANG  1\nError       error reading '19'  AudioToolbox.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AudioToolbox.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Universal\\CLANG  1\nError       error reading 'static'  AudioToolbox.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Windows\\CLANG    1\nError       error reading '19'  AudioToolbox.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AudioToolbox.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.Windows\\CLANG    1\nError       error reading 'static'  AudioToolbox.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.WindowsPhone\\CLANG   1\nError       error reading '19'  AudioToolbox.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   AudioToolbox.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\AudioToolbox\\AudioToolbox.WindowsPhone\\CLANG   1\nError       error reading 'static'  CoreAudio.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Universal\\CLANG    1\nError       error reading '19'  CoreAudio.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Universal\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreAudio.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Universal\\CLANG    1\nError       error reading 'static'  CoreAudio.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Windows\\CLANG  1\nError       error reading '19'  CoreAudio.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Windows\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreAudio.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.Windows\\CLANG  1\nError       error reading 'static'  CoreAudio.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.WindowsPhone\\CLANG 1\nError       error reading '19'  CoreAudio.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.WindowsPhone\\CLANG 1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   CoreAudio.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\CoreAudio\\CoreAudio.WindowsPhone\\CLANG 1\nError       error reading 'static'  OpenAL.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Universal\\CLANG  1\nError       error reading '19'  OpenAL.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenAL.Universal    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Universal\\CLANG  1\nError       error reading 'static'  OpenAL.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Windows\\CLANG    1\nError       error reading '19'  OpenAL.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenAL.Windows  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.Windows\\CLANG    1\nError       error reading 'static'  OpenAL.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.WindowsPhone\\CLANG   1\nError       error reading '19'  OpenAL.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenAL.WindowsPhone C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenAL\\OpenAL.WindowsPhone\\CLANG   1\nError       error reading 'static'  OpenGLES.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Universal\\CLANG  1\nError       error reading '19'  OpenGLES.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Universal\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenGLES.Universal  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Universal\\CLANG  1\nError       error reading 'static'  OpenGLES.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Windows\\CLANG    1\nError       error reading '19'  OpenGLES.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Windows\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenGLES.Windows    C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.Windows\\CLANG    1\nError       error reading 'static'  OpenGLES.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.WindowsPhone\\CLANG   1\nError       error reading '19'  OpenGLES.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.WindowsPhone\\CLANG   1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   OpenGLES.WindowsPhone   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\OpenGLES\\OpenGLES.WindowsPhone\\CLANG   1\nError       error reading 'static'  StarboardXaml.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Universal\\CLANG    1\nError       error reading '19'  StarboardXaml.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Universal\\CLANG    1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardXaml.Universal C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Universal\\CLANG    1\nError       error reading 'static'  StarboardXaml.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Windows\\CLANG  1\nError       error reading '19'  StarboardXaml.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Windows\\CLANG  1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardXaml.Windows   C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.Windows\\CLANG  1\nError       error reading 'static'  StarboardXaml.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.WindowsPhone\\CLANG 1\nError       error reading '19'  StarboardXaml.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.WindowsPhone\\CLANG 1\nError       error reading 'Microsoft.Build.Framework.ITaskItem[]'   StarboardXaml.WindowsPhone  C:\\Users\\mehme\\Downloads\\WinObjC-master\\WinObjC-master\\build\\StarboardXaml\\StarboardXaml.WindowsPhone\\CLANG 1\n. @asimonov-msft here it is\n1>------ Build started: Project: HelloUI (HelloUI\\HelloUI), Configuration: Debug Win32 ------\n1>Build started 2.09.2015 18:08:11.\n1>Environment at start of build:\n1>ALLUSERSPROFILE = C:\\ProgramData\n1>ANDROID_HOME = E:\\AndroidSdk\n1>APPDATA = C:\\Users\\mehme\\AppData\\Roaming\n1>CommonProgramFiles = C:\\Program Files (x86)\\Common Files\n1>CommonProgramFiles(x86) = C:\\Program Files (x86)\\Common Files\n1>CommonProgramW6432 = C:\\Program Files\\Common Files\n1>COMPUTERNAME = DESKTOP-OTUSNEQ\n1>ComSpec = C:\\WINDOWS\\system32\\cmd.exe\n1>FPS_BROWSER_APP_PROFILE_STRING = Internet Explorer\n1>FPS_BROWSER_USER_PROFILE_STRING = Default\n1>HOMEDRIVE = C:\n1>HOMEPATH = \\Users\\mehme\n1>LOCALAPPDATA = C:\\Users\\mehme\\AppData\\Local\n1>LOGONSERVER = \\MicrosoftAccount\n1>MSBuildLoadMicrosoftTargetsReadOnly = true\n1>NUMBER_OF_PROCESSORS = 8\n1>OS = Windows_NT\n1>Path = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\\n1>PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\n1>PkgDefApplicationConfigFile = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\devenv.exe.config\n1>PROCESSOR_ARCHITECTURE = x86\n1>PROCESSOR_ARCHITEW6432 = AMD64\n1>PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9, GenuineIntel\n1>PROCESSOR_LEVEL = 6\n1>PROCESSOR_REVISION = 3a09\n1>ProgramData = C:\\ProgramData\n1>ProgramFiles = C:\\Program Files (x86)\n1>ProgramFiles(x86) = C:\\Program Files (x86)\n1>ProgramW6432 = C:\\Program Files\n1>PSModulePath = C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\\n1>PUBLIC = C:\\Users\\Public\n1>SESSIONNAME = Console\n1>SystemDrive = C:\n1>SystemRoot = C:\\WINDOWS\n1>TEMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>TMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>USERDOMAIN = DESKTOP-OTUSNEQ\n1>USERDOMAIN_ROAMINGPROFILE = DESKTOP-OTUSNEQ\n1>USERNAME = mehme\n1>USERPROFILE = C:\\Users\\mehme\n1>VisualStudioDir = C:\\Users\\mehme\\Documents\\Visual Studio 2015\n1>VisualStudioEdition = Microsoft Visual Studio Professional 2015\n1>VisualStudioVersion = 14.0\n1>VS110COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\\n1>VS120COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\\n1>VS140COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\\n1>VSLANG = 1033\n1>windir = C:\\WINDOWS\n1>\n1>Initial Properties:\n1>ApplicableDebuggers = AppHost\n1>_ApplicationTypeDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\Default.props\n1>_ApplicationTypePlatformFolderFound = true\n1>_ApplicationTypeRevisionDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Default.props\n1>_AppxMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll\n1>_AppxMSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\\n1>_BuildActionType = Build\n1>_BuildSuffix =\n1>:VCEnd\n1>_CheckDev11ToolsInstalled = true\n1>_CompatibilityIssuesCharacterSetIssue =\n1>_CompatibilityIssuesUseOfATLIssue = false\n1>_CompatibilityIssuesUseOfMFC = false\n1>_CoreRuntimeMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Build.Net.CoreRuntimeTask.dll\n1>_CppCommonExtensionTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\WindowsXaml\\v14.0\\Microsoft.Windows.UI.Xaml.Cpp.targets\n1>_CreateAppxBundleFilesDependsOn =\n1>      ;\n1>\n1>      _GetSdkToolPaths;\n1>      _ValidatePresenceOfAppxManifestItems;\n1>      _GetPackageProperties;\n1>\n1>      _GetOtherPlatformsToBundle;\n1>      _ProducePlatformSpecificBundleArtifactsForOtherPlatforms;\n1>\n1>      _GetPlatformSpecificBundleArtifacts;\n1>\n1>      _CreateBundle_CalculateInputsAndOutputs;\n1>      _CreateBundle;\n1>      _CreateBundle_AddFileWrites;\n1>\n1>      _CreateUploadBundle_CalculateInputsAndOutputs;\n1>      _CreateUploadBundle;\n1>      _CreateUploadBundle_AddFileWrites;\n1>\n1>      _CreateAppStoreBundleContainer_CalculateInputsAndOutputs;\n1>      _CreateAppStoreBundleContainer;\n1>      _CreateAppStoreBundleContainer_AddFileWrites;\n1>\n1>      _CreateTestLayout;\n1>      _AddWindowsInstallScriptToTestLayout;\n1>\n1>\n1>\n1>_CreateAppxBundlePlatformSpecificArtifactsDependsOn =\n1>\n1>\n1>      _GetPackageProperties;\n1>\n1>      _CreatePackageLayout_CalculateInputsAndOutputs;\n1>      _CreatePackageLayout;\n1>      _CreatePackageLayout_AddFileWrites;\n1>\n1>      _CreateUploadPackageLayout_CalculateInputsAndOutputs;\n1>      _CreateUploadPackageLayout;\n1>      _CreateUploadPackageLayout_AddFileWrites;\n1>\n1>      _GetDefaultResourceLanguage;\n1>\n1>      _CreatePriConfigXmlForSplitting;\n1>      _CreatePriConfigXmlForSplitting_AddFileWrites;\n1>\n1>      _CreateUploadPriConfigXmlForSplitting;\n1>      _CreateUploadPriConfigXmlForSplitting_AddFileWrites;\n1>\n1>      _SplitResourcesPri_CalculateInputsAndOutputs;\n1>      _SplitResourcesPri;\n1>      _SplitResourcesPri_AddFileWrites;\n1>\n1>      _SplitUploadResourcesPri_CalculateInputsAndOutputs;\n1>      _SplitUploadResourcesPri;\n1>      _SplitUploadResourcesPri_AddFileWrites;\n1>\n1>      _ExpandMainPriFile;\n1>      _ValidateAppxPackage;\n1>\n1>      _CreatePriConfigXmlForMainPackageFileMap;\n1>      _CreatePriConfigXmlForMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateUploadPriConfigXmlForMainPackageFileMap;\n1>      _CreateUploadPriConfigXmlForMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateMainPackageFileMap_CalculateInputsAndOutputs;\n1>      _CreateMainPackageFileMap;\n1>      _CreateMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateUploadMainPackageFileMap_CalculateInputsAndOutputs;\n1>      _CreateUploadMainPackageFileMap;\n1>      _CreateUploadMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateMainPackageFileMap;\n1>      _UpdateMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateUploadMainPackageFileMap;\n1>      _UpdateUploadMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateAppxManifestForBundle_CalculateInputsAndOutputs;\n1>      _UpdateAppxManifestForBundle;\n1>      _UpdateAppxManifestForBundle_AddFileWrites;\n1>\n1>      _UpdateAppxUploadManifestForBundle_CalculateInputsAndOutputs;\n1>      _UpdateAppxUploadManifestForBundle;\n1>      _UpdateAppxUploadManifestForBundle_AddFileWrites;\n1>\n1>      _CreateMainPackage;\n1>      _CreateMainPackage_AddFileWrites;\n1>\n1>      _CreateMainUploadPackage;\n1>      _CreateMainUploadPackage_AddFileWrites;\n1>\n1>      _GenerateAppxSymbolPackage;\n1>\n1>      _CreateResourcePackages_CalculateInputsAndOutputs;\n1>      _CreateResourcePackages;\n1>      _CreateResourcePackages_AddFileWrites;\n1>\n1>      _CreateUploadResourcePackages_CalculateInputsAndOutputs;\n1>      _CreateUploadResourcePackages;\n1>      _CreateUploadResourcePackages_AddFileWrites;\n1>\n1>      _CreatePlatformSpecificArtifactsList;\n1>      _CreatePlatformSpecificUploadArtifactsList;\n1>\n1>      _CreateAppxBundleFiles;\n1>\n1>\n1>\n1>_CreateAppxPackageDependsOn =\n1>      _ValidateAppxPackage;\n1>      _GenerateAppxPackageFile;\n1>      _GenerateAppxUploadPackageFile;\n1>      _GenerateAppxSymbolPackage;\n1>      _CreateAppStoreContainer;\n1>      _CreateAppStoreContainerForUAP;\n1>      _CreateTestLayout;\n1>      _AddWindowsInstallScriptToTestLayout;\n1>\n1>_DebugSymbolsProduced = true\n1>_DefaultPlatform = win32\n1>_DeploymentApplicationManifestIdentity = HelloUI.exe\n1>_DeploymentBuiltUpdateInterval = 0\n1>_DeploymentBuiltUpdateIntervalUnits = Days\n1>_DeploymentDeployManifestIdentity = HelloUI.application\n1>_DeploymentFileMappingExtension =\n1>_DeploymentPublishableProjectDefault = true\n1>_DeploymentTargetApplicationManifestFileName = HelloUI.exe.manifest\n1>_DeploymentUrl =\n1>_Dev11Installed =\n1>_Dev11WDExpressInstalled =\n1>_DocumentationFileProduced = false\n1>_EmbedFileResfilePath = Debug\\embed.resfiles\n1>_GatekeeperPlatformTarget = x86\n1>_GenerateAppxManifestDependsOn =\n1>      ;_FixVCLibs120References;\n1>      BeforeGenerateAppxManifest;\n1>      _GetRecursiveResolvedSDKReferences;\n1>      _CopyCurrentProjectAppxManifestOverride;\n1>      _CopyCurrentProjectAppxUploadManifestOverride;\n1>      _CalculateInputsForGenerateCurrentProjectAppxManifest;\n1>      _GenerateCurrentProjectAppxManifest;\n1>      _CreateFinalAppxManifestItem;\n1>      _FindStoreAssociationFile;\n1>      _ValidateAppxManifest;\n1>      AfterGenerateAppxManifest\n1>\n1>_GenerateAppxPackageBaseDependsOn =\n1>      _ComputeAppxPackageOutput;\n1>      _CreateAppxPackage;\n1>      _CreateAppxBundlePlatformSpecificArtifacts;\n1>\n1>_GenerateAppxPackageDependsOn =\n1>      ;\n1>      _SuppressDeploymentOnlyFeatures;\n1>      Build;\n1>\n1>      _ComputeAppxPackageOutput;\n1>      _CreateAppxPackage;\n1>      _CreateAppxBundlePlatformSpecificArtifacts;\n1>    ;\n1>\n1>_GenerateAppxPackageRecipeDependsOn =\n1>      BeforeGenerateAppxPackageRecipe;\n1>      ;\n1>      _CalculateInputsForGenerateAppxPackageRecipe;\n1>      _GenerateAppxPackageRecipeFile;\n1>      _FileReadsAndWritesForGenerateAppxPackageRecipe\n1>\n1>_GenerateAppxUploadPackageRecipeDependsOn =\n1>      BeforeGenerateAppxPackageRecipe;\n1>      ;\n1>      _CalculateInputsForGenerateAppxUploadPackageRecipe;\n1>      _GenerateAppxUploadPackageRecipeFile;\n1>      _FileReadsAndWritesForGenerateAppxUploadPackageRecipe\n1>\n1>_GenerateBindingRedirectsIntermediateAppConfig = Debug\\HelloUI.vcxproj.HelloUI.exe.config\n1>_GenerateProjectPriFileDependsOn =\n1>      ;\n1>      BeforeGenerateProjectPriFile;\n1>      _GeneratePrisForPortableLibraries;\n1>      _GetPriFilesFromPayload;\n1>      _ComputeInputPriFiles;\n1>      _GenerateProjectPriConfigurationFiles;\n1>      _CalculateInputsForGenerateProjectPriFileCore;\n1>      _GenerateProjectPriFileCore;\n1>      _AddFileReadsAndFileWritesForProjectPri;\n1>      _CreateProjectPriFileItem;\n1>      _ExpandProjectPriFile;\n1>      _ExpandPriFiles;\n1>      _ExpandPriUploadFiles;\n1>      AfterGenerateProjectPriFile\n1>\n1>_GetChildProjectCopyToOutputDirectoryItems = true\n1>_GetPackagePropertiesDependsOn =\n1>      ;\n1>      _GetProjectArchitecture;\n1>      _GetRecursiveProjectArchitecture;\n1>      _GetPackageArchitecture;\n1>      _GetDefaultResourceLanguage;\n1>      _CalculateAppxBundleProperties;\n1>\n1>_IgnoreInstalledPlatformToolset_v110 = true\n1>_IgnoreInstalledPlatformToolset_v110_wp80 = true\n1>_IgnoreInstalledPlatformToolset_v110_xp = true\n1>_LayoutResfilesPath = Debug\\layout.resfiles\n1>_MultipleQualifiersPerDimensionFoundPath = Debug\\MultipleQualifiersPerDimensionFound.txt\n1>_NuGetRuntimeIdentifierWithoutAot = win10-x86\n1>_NuGetTargetFallbackMoniker = UAP,Version=v10.0\n1>_OriginalConfiguration = Debug\n1>_OriginalPlatform = Win32\n1>_PlatformDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\Platform.default.props\n1>_PlatformFolder = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\\n1>_PlatformTargetForCoreRuntime = x86\n1>_PlatformTargetForIlcVersion = x86\n1>_PlatformToolsetFriendlyNameFor_v100 = Visual Studio 2010 (v100)\n1>_PlatformToolsetFriendlyNameFor_v110 = Visual Studio 2012 (v110)\n1>_PlatformToolsetFriendlyNameFor_v110_wp80 = Windows Phone 8.0 (v110_wp80)\n1>_PlatformToolsetFriendlyNameFor_v110_xp = Visual Studio 2012 - Windows XP (v110_xp)\n1>_PlatformToolsetFriendlyNameFor_v120 = Visual Studio 2013 (v120)\n1>_PlatformToolsetFriendlyNameFor_v120_wp81 = Windows Phone 8.1 (v120_wp81)\n1>_PlatformToolsetFriendlyNameFor_v120_xp = Visual Studio 2013 - Windows XP (v120_xp)\n1>_PlatformToolsetFriendlyNameFor_v140 = Visual Studio 2015 (v140)\n1>_PlatformToolsetFriendlyNameFor_v140_xp = Visual Studio 2015 - Windows XP (v140_xp)\n1>_PlatformToolsetFriendlyNameFor_v90 = Visual Studio 2008 (v90)\n1>_PlatformToolsetShortNameFor_v100 = Visual Studio 2010\n1>_PlatformToolsetShortNameFor_v110 = Visual Studio 2012\n1>_PlatformToolsetShortNameFor_v110_wp80 = Windows Phone 8.0\n1>_PlatformToolsetShortNameFor_v110_xp = Visual Studio 2012 - Windows XP\n1>_PlatformToolsetShortNameFor_v120 = Visual Studio 2013\n1>_PlatformToolsetShortNameFor_v120_wp81 = Windows Phone 8.1\n1>_PlatformToolsetShortNameFor_v90 = Visual Studio 2008\n1>_PriConfigXmlPath = Debug\\priconfig.xml\n1>_PriResfilesPath = Debug\\pri.resfiles\n1>_ProjectArchitecturesFilePath = Debug\\ProjectArchitectures.txt\n1>_ProjectDefaultTargets = Build\n1>_ProjectNPlatformSupported = true\n1>_ProjectNProjectSupported = true\n1>_ProjectPriFullPathOriginal = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\resources.pri\n1>_PropertySheetDisplayName = Application\n1>_QualifiersPath = Debug\\qualifiers.txt\n1>_ResolveReferenceDependencies = false\n1>_ResourceCompileDependsOn =\n1>\n1>      ;\n1>      BeforeResourceCompile;\n1>    ;\n1>      ;\n1>      MakeDirsForResourceCompile;\n1>      ResourceCompile;\n1>\n1>      ;\n1>      AfterResourceCompile;\n1>\n1>\n1>_ResourcesResfilesPath = Debug\\resources.resfiles\n1>_SGenDllCreated = false\n1>_SGenDllName = HelloUI.XmlSerializers.dll\n1>_SGenGenerateSerializationAssembliesConfig = Off\n1>_SupportEmbedFileResources = true\n1>_SupportXbfAsEmbedFileResources = true\n1>_TargetPlatformIsWindowsPhone = false\n1>_TargetsCoreRuntime = true\n1>_ToolsetFound = true\n1>_ToolsetPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.props\n1>_ToolsetTargetsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.targets\n1>_UpgradePlatformToolsetFor_v100 = v140\n1>_UpgradePlatformToolsetFor_v110 = v140\n1>_UpgradePlatformToolsetFor_v110_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v120 = v140\n1>_UpgradePlatformToolsetFor_v120_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v140 = v140\n1>_UpgradePlatformToolsetFor_v140_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v90 = v140\n1>_VC_x64_ToolsInstalled = true\n1>AddAppConfigToBuildOutputs = true\n1>AddBuildInfoToAssembly = false\n1>AddItemTemplateGuid = {FE0B9DF8-A7C2-4687-A235-316C1ACA78D3}\n1>AfterBuildCompileTargets =\n1>\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLinkInputs;\n1>    ;\n1>      ComputeManifestGeneratedLinkerInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLinkInputs;\n1>    ;\n1>        ComputeLinkInputsFromProject;\n1>      ;\n1>      ComputeReferenceLinkInputs;\n1>    ;\n1>            CreateWinMD;\n1>            ComputeGeneratedWinMD;\n1>            MarkupCompilePass2;\n1>            ComputeInvalidXamlGenerated;\n1>            CompileXamlGeneratedFiles;\n1>\n1>      ;\n1>      AfterBuildCompileEvent;\n1>\n1>\n1>AfterBuildGenerateSourcesTargets =\n1>\n1>      ;\n1>      AfterBuildGenerateSources;\n1>    ;\n1>      AfterBuildGenerateSourcesEvent;\n1>\n1>AfterBuildLinkTargets =\n1>      ;RunMergeNativeCodeAnalysis;RunNativeCodeAnalysis;\n1>      CreateSatelliteAssemblies;\n1>      _Appverifier;\n1>      _Deploy;\n1>      PrepareForRun;\n1>      PostBuildEvent;\n1>\n1>AfterClCompileTargets =\n1>      ;\n1>      AfterClCompile;\n1>\n1>AfterImpLibTargets =\n1>      ;\n1>      AfterImpLib;\n1>\n1>AfterLibTargets =\n1>      ;\n1>      AfterLib;\n1>\n1>AfterLinkTargets =\n1>      ;\n1>      AfterLink;\n1>\n1>AfterManifestTargets =\n1>      ;\n1>      AfterManifest;\n1>\n1>AfterMidlTargets =\n1>      ;\n1>      AfterMidl;\n1>\n1>AfterResourceCompileTargets =\n1>      ;\n1>      AfterResourceCompile;\n1>\n1>AllOutputGroupsDependsOn =\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>AllowedPlatformsForProjectN = ARM,x64,x86\n1>AllowedReferenceAssemblyFileExtensions =\n1>      .winmd;\n1>      .dll;\n1>      .exe\n1>\n1>AllowedReferenceRelatedFileExtensions =\n1>      .pdb;\n1>      .xml;\n1>      .pri\n1>\n1>AllowLocalNetworkLoopback = true\n1>AllProjectOutputGroupsDependsOn =\n1>      ;\n1>      BuiltProjectOutputGroup;\n1>      DebugSymbolsProjectOutputGroup;\n1>      DocumentationProjectOutputGroup;\n1>      SatelliteDllsProjectOutputGroup;\n1>      SourceFilesProjectOutputGroup;\n1>      ContentFilesProjectOutputGroup;\n1>      SGenFilesOutputGroup\n1>\n1>ALLUSERSPROFILE = C:\\ProgramData\n1>ANDROID_HOME = E:\\AndroidSdk\n1>AppContainerApplication = true\n1>APPDATA = C:\\Users\\mehme\\AppData\\Roaming\n1>ApplicationType = Windows Store\n1>ApplicationTypeRevision = 10.0\n1>AppxBundle = Auto\n1>AppxBundleAutoResourcePackageQualifiers = Language|Scale|DXFeatureLevel\n1>AppxBundleExtension = .appxbundle\n1>AppxBundleFolderSuffix = _Bundle\n1>AppxBundleMainPackageFileMapGeneratedFilesListPath = Debug\\filemap.generatedFiles.txt\n1>AppxBundleMainPackageFileMapIntermediatePath = Debug\\filemap.map.txt\n1>AppxBundleMainPackageFileMapIntermediatePrefix = filemap\n1>AppxBundleMainPackageFileMapIntermediatePriPath = Debug\\filemap.pri\n1>AppxBundleMainPackageFileMapPath = Debug\\main.map.txt\n1>AppxBundleMainPackageFileMapPrefix = main\n1>AppxBundleMainPackageFileMapSuffix = .map\n1>AppxBundlePlatforms =\n1>AppxBundlePriConfigXmlForMainPackageFileMapFileName = Debug\\filemap.priconfig.xml\n1>AppxBundlePriConfigXmlForSplittingFileName = Debug\\split.priconfig.xml\n1>AppxBundleProducingPlatform =\n1>AppxBundleResourcePacksProducingPlatform =\n1>AppxBundleSplitResourcesGeneratedFilesListPath = Debug\\split.generatedFiles.txt\n1>AppxBundleSplitResourcesPriPath = Debug\\split.pri\n1>AppxBundleSplitResourcesPriPrefix = split\n1>AppxBundleSplitResourcesQualifiersPath = Debug\\split.qualifiers.txt\n1>AppxCopyLocalFilesOutputGroupIncludeXmlFiles = false\n1>AppxDefaultHashAlgorithmId = sha256\n1>AppxDefaultResourceQualifiers = Language={DefaultResourceLanguage}|Contrast=standard|Scale=200|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=|Platform=UAP\n1>AppxDefaultResourceQualifiers_UAP = Language={DefaultResourceLanguage}|Contrast=standard|Scale=200|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=|Platform=UAP\n1>AppxDefaultResourceQualifiers_Windows_80 = Language={DefaultResourceLanguage}\n1>AppxDefaultResourceQualifiers_Windows_81 = Language={DefaultResourceLanguage}|Contrast=standard|Scale=100|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=\n1>AppxDefaultResourceQualifiers_Windows_82 = Language={DefaultResourceLanguage}|Contrast=standard|Scale=100|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=\n1>AppxDefaultResourceQualifiers_Windows_Phone = Language={DefaultResourceLanguage}|Contrast=standard|Scale=240|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Theme=Dark|AlternateForm=\n1>AppxFilterOutUnusedLanguagesResourceFileMaps = true\n1>AppxGeneratePackageRecipeEnabled = true\n1>AppxGeneratePriEnabled = true\n1>AppxGeneratePrisForPortableLibrariesEnabled = true\n1>AppxGetPackagePropertiesEnabled = true\n1>AppxHarvestWinmdRegistration = true\n1>AppxIntermediateExtension = .intermediate\n1>AppxLayoutDir = Debug\\PackageLayout\\\n1>AppxLayoutFolderName = PackageLayout\n1>AppxMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll\n1>AppxMSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\\n1>AppxOSMaxVersionTested = 6.4.0\n1>AppxOSMaxVersionTestedReplaceManifestVersion = true\n1>AppxOSMinVersion = 6.3.1\n1>AppxOSMinVersionReplaceManifestVersion = true\n1>AppxPackage = True\n1>AppxPackageAllowDebugFrameworkReferencesInManifest = true\n1>AppxPackageArtifactsDir =\n1>AppxPackageDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\AppPackages\\HelloUI\\\n1>AppxPackageDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\AppPackages\\\n1>AppxPackageDirName = AppPackages\n1>AppxPackageDirWasSpecified = true\n1>AppxPackageExtension = .appx\n1>AppxPackageFileMap = Debug\\package.map.txt\n1>AppxPackageIncludePrivateSymbols = false\n1>AppxPackagePipelineVersion = 2.0\n1>AppxPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.build.appxrecipe\n1>AppxPackageSigningEnabled = true\n1>AppxPackageValidationEnabled = true\n1>AppxPackagingInfoFile = Debug_pkginfo.txt\n1>AppxPrependPriInitialPath = true\n1>AppxPriConfigXmlDefaultSnippetPath =\n1>AppxPriConfigXmlPackagingSnippetPath =\n1>AppxPriInitialPath =\n1>AppxSkipUnchangedFiles = true\n1>AppxStoreContainerExtension = .appxupload\n1>AppxStrictManifestValidationEnabled = true\n1>AppxSymbolPackageEnabled = true\n1>AppxSymbolPackageExtension = .appxsym\n1>AppxSymbolStrippedDir = Debug\\Stripped\n1>AppxTestLayoutEnabled = true\n1>AppxUploadBundleMainPackageFileMapGeneratedFilesListPath = Debug\\Upload\\filemap.generatedFiles.txt\n1>AppxUploadBundleMainPackageFileMapIntermediatePath = Debug\\Upload\\filemap.map.txt\n1>AppxUploadBundleMainPackageFileMapIntermediatePriPath = Debug\\Upload\\filemap.pri\n1>AppxUploadBundleMainPackageFileMapPath = Debug\\Upload\\main.map.txt\n1>AppxUploadBundlePriConfigXmlForMainPackageFileMapFileName = Debug\\Upload\\filemap.priconfig.xml\n1>AppxUploadBundlePriConfigXmlForSplittingFileName = Debug\\Upload\\split.priconfig.xml\n1>AppxUploadBundleSplitResourcesGeneratedFilesListPath = Debug\\Upload\\split.generatedFiles.txt\n1>AppxUploadBundleSplitResourcesPriPath = Debug\\Upload\\split.pri\n1>AppxUploadBundleSplitResourcesQualifiersPath = Debug\\Upload\\split.qualifiers.txt\n1>AppxUploadLayoutDir = Debug\\PackageUploadLayout\\\n1>AppxUploadLayoutFolderName = PackageUploadLayout\n1>AppxUploadPackageArtifactsDir = Upload\\\n1>AppxUploadPackageFileMap = Debug\\upload.package.map.txt\n1>AppxUploadPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\HelloUI.build.appxrecipe\n1>AppxUploadPackagingInfoFile = _pkginfo.txt\n1>AppxUseHardlinksIfPossible = true\n1>AppxValidateAppxManifest = true\n1>AssemblyFoldersSuffix = AssemblyFoldersEx\n1>AssemblyName = HelloUI\n1>AssemblySearchPaths =\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      {AssemblyFolders};\n1>      {GAC};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>AssignTargetPathsDependsOn =\n1>Attach = false\n1>AutoIncrementPackageRevision = true\n1>AutoUnifyAssemblyReferences = false\n1>AvailablePlatforms = Any CPU,x86,x64,ARM\n1>BaseIntermediateOutputPath = obj\\\n1>BaseNuGetRuntimeIdentifier = win10\n1>BeforeBuildCompileTargets =\n1>      ;\n1>\n1>BeforeBuildGenerateSourcesTargets =\n1>\n1>      ;\n1>      BeforeBuildGenerateSources;\n1>    ;\n1>\n1>BeforeClCompileTargets =\n1>            MarkupCompilePass1;\n1>\n1>      ;\n1>      BeforeClCompile;\n1>\n1>\n1>BeforeImpLibTargets =\n1>      ;\n1>      BeforeImpLib;\n1>\n1>BeforeLibTargets =\n1>      ;\n1>      BeforeLib;\n1>\n1>BeforeLinkTargets =\n1>      ;\n1>      BeforeLink;\n1>\n1>BeforeManifestTargets =\n1>      ;\n1>      BeforeManifest;\n1>\n1>BeforeMidlTargets =\n1>      ;\n1>      BeforeMidl;\n1>\n1>BeforeResourceCompileTargets =\n1>      ;\n1>      BeforeResourceCompile;\n1>\n1>BuildAppxUploadPackageForUap = false\n1>BuildCompileAction = _BuildCompileAction\n1>BuildCompileTargets =\n1>      ;\n1>      _ClCompile;\n1>      _ResGen;\n1>      _ResourceCompile;\n1>\n1>      ;\n1>      _ImpLib;\n1>      _Lib;\n1>    ;\n1>    ;_ClangCompile\n1>BuildDependsOn =\n1>      _PrepareForBuild;\n1>\n1>      ResolveReferences;\n1>      PrepareForBuild;\n1>      InitializeBuildStatus;\n1>      BuildGenerateSources;\n1>      BuildCompile;\n1>      BuildLink;\n1>    ;\n1>      AfterBuild;\n1>      FinalizeBuildStatus;\n1>\n1>BuildGenerateSourcesAction = _BuildGenerateSourcesAction\n1>BuildGenerateSourcesTargets =\n1>      ;\n1>      PreBuildEvent;\n1>      _Xsd;\n1>      _Midl;\n1>\n1>BuildInfoBinPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\BuildInfo\n1>BuildInfoTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\BuildInfo\\Microsoft.VisualStudio.ReleaseManagement.BuildInfo.targets\n1>BuildInParallel = true\n1>BuildingInsideVisualStudio = true\n1>BuildingProject = true\n1>BuildLibTargets =\n1>      ;\n1>      _ImpLib;\n1>      _Lib;\n1>\n1>BuildLinkAction = _BuildLinkAction\n1>BuildLinkTargets =\n1>      ;\n1>      ComputeLegacyManifestEmbedding;\n1>      _Link;\n1>      _ALink;\n1>      _Manifest;\n1>      RegisterOutput;\n1>      _XdcMake;\n1>      _BscMake;\n1>\n1>BuildProjectReferences = true\n1>BuildSteps =\n1>      ResolveReferences;\n1>      PrepareForBuild;\n1>      InitializeBuildStatus;\n1>      BuildGenerateSources;\n1>      BuildCompile;\n1>      BuildLink;\n1>\n1>BuiltProjectOutputGroupDependsOn = PrepareForBuild\n1>CAExcludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;\n1>CanBeStartupProject = True\n1>CanReferenceWinRT = true\n1>CanUseProjectN = true\n1>CC1Args = -cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName]\n1>CC1ArgsTLog = -Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0\n1>CC1DefaultIncludesTLog = -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\"\n1>CC1PlatformArgs = -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS\n1>CC1TargetCpu = pentium4\n1>CC1TargetTriple = i686-pc-windows-msvc\n1>CharacterSet = Unicode\n1>ClangCompileAfterTargets = ClCompile\n1>ClangCompileBeforeTargets = Link;Lib;ImpLib\n1>ClangCompileDependsOn = _SelectedFiles;MakeDirsForClang;GenerateHeaderMaps;ComputeClangOptions\n1>ClangCompileExtraInputs = HelloUI.vcxproj\n1>CleanDependsOn =\n1>\n1>      _PrepareForClean;\n1>\n1>      BeforeClean;\n1>      UnmanagedUnregistration;\n1>      CoreClean;\n1>      CleanReferencedProjects;\n1>      CleanPublishFolder;\n1>      AfterClean\n1>    ;\n1>    ;\n1>      CppClean\n1>    ;CleanClang;;CleanSBResources;\n1>CleanFile = HelloUI.vcxproj.FileListAbsolute.txt\n1>CleanPackageAction = _CleanAppxPackage\n1>CLRSupport = false\n1>ClYieldDuringToolExecution = true\n1>CodeAnalysisApplyLogFileXsl = false\n1>CodeAnalysisFailOnMissingRules = false\n1>CodeAnalysisForceOutput = true\n1>CodeAnalysisGenerateSuccessFile = true\n1>CodeAnalysisIgnoreGeneratedCode = true\n1>CodeAnalysisIgnoreInvalidTargets = true\n1>CodeAnalysisIgnoreMissingIndirectReferences = false\n1>CodeAnalysisInputAssembly = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>CodeAnalysisLogFile = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.CodeAnalysisLog.xml\n1>CodeAnalysisModuleSuppressionsFile = GlobalSuppressions.cpp\n1>CodeAnalysisOutputToConsole = false\n1>CodeAnalysisOverrideRuleVisibilities = false\n1>CodeAnalysisPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\FxCop\\\n1>CodeAnalysisQuiet = false\n1>CodeAnalysisRuleDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\FxCop\\Rules\n1>CodeAnalysisRuleSet = NativeRecommendedRules.ruleset\n1>CodeAnalysisRuleSetDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\n1>CodeAnalysisSaveMessagesToReport = Active\n1>CodeAnalysisSearchGlobalAssemblyCache = true\n1>CodeAnalysisStaticAnalysisDirectory = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\\n1>CodeAnalysisSucceededFile = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.lastcodeanalysissucceeded\n1>CodeAnalysisSummary = false\n1>CodeAnalysisTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\n1>CodeAnalysisTimeout = 120\n1>CodeAnalysisTLogFile = Debug\\CodeAnalysis.read.1.tlog\n1>CodeAnalysisTreatWarningsAsErrors = false\n1>CodeAnalysisUpdateProject = false\n1>CodeAnalysisUseTypeNameInSuppression = true\n1>CodeAnalysisVerbose = false\n1>CombinedHMapFilename = Debug\\HelloUI-combined\n1>CombinedHMapRequired = @(ClangCompile->AnyHaveMetadataValue('HeaderMap','Combined'))\n1>ComFilesOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CommonBuildOnlyTargets =\n1>      PrepareForBuild;\n1>      ResolveReferences;\n1>\n1>CommonProgramFiles = C:\\Program Files (x86)\\Common Files\n1>CommonProgramW6432 = C:\\Program Files\\Common Files\n1>CommonTargetsPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\n1>CommonXamlResourcesDirectory = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\en-US\\\n1>CompileDependsOn =\n1>      ResolveReferences;\n1>      ResolveKeySource;\n1>      SetWin32ManifestProperties;\n1>      _GenerateCompileInputs;\n1>      BeforeCompile;\n1>      _TimeStampBeforeCompile;\n1>      CoreCompile;\n1>      _TimeStampAfterCompile;\n1>      AfterCompile;\n1>\n1>CompileLicxFilesDependsOn =\n1>CompileTargetNameForTemporaryAssembly = CompileTemporaryAssembly\n1>ComputeCompileInputsTargets =\n1>            ComputeXamlGeneratedCompileInputs;\n1>\n1>\n1>\n1>      ;\n1>      ComputeMIDLGeneratedCompileInputs;\n1>    ;\n1>      ComputeCLInputPDBName;\n1>      ComputeReferenceCLInput;\n1>      WarnCompileDuplicatedFilename\n1>    ;\n1>      FixupCLCompileOptions;\n1>\n1>\n1>ComputeImpLibInputsTargets =\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLibInputs;\n1>    ;\n1>      ComputeRCGeneratedImpLibInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedImpLibInputs;\n1>    ;\n1>        ComputeImpLibInputsFromProject;\n1>      ;ComputeClangImpLibInputs;\n1>ComputeIntermediateSatelliteAssembliesDependsOn =\n1>      CreateManifestResourceNames\n1>\n1>ComputeLibInputsTargets =\n1>      ComputeLibAdditionalOptions;\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLibInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLibInputs;\n1>    ;\n1>        ComputeLibInputsFromProject;\n1>      ;\n1>      ComputeReferenceLibInputs;\n1>\n1>    ;ComputeClangLibInputs;\n1>ComputeLinkInputsTargets =\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLinkInputs;\n1>    ;\n1>      ComputeManifestGeneratedLinkerInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLinkInputs;\n1>    ;\n1>        ComputeLinkInputsFromProject;\n1>      ;\n1>      ComputeReferenceLinkInputs;\n1>    ;ComputeClangLinkInputs;ComputeRuntimeInputs\n1>ComputeManifestInputsTargets =\n1>      ;\n1>      ComputeManifestInputsTargets;\n1>\n1>COMPUTERNAME = DESKTOP-OTUSNEQ\n1>ComReferenceExecuteAsTool = false\n1>ComReferenceNoClassMembers = false\n1>ComSpec = C:\\WINDOWS\\system32\\cmd.exe\n1>Configuration = Debug\n1>ConfigurationName = Debug\n1>ConfigurationType = Application\n1>ConsiderPlatformAsProcessorArchitecture = true\n1>ContentFilesProjectOutputGroupDependsOn = PrepareForBuild;AssignTargetPaths;PrepareForBuild;AssignTargetPaths;MakeDirsForFxc\n1>ContinueOnError = false\n1>CopyLocalFilesOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CopyNuGetImplementations = true\n1>CopyWinmdArtifactsOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CoreBuildDependsOn =\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      PreBuildEvent;\n1>      ResolveReferences;\n1>      PrepareResources;\n1>      ResolveKeySource;\n1>      Compile;\n1>      ExportWindowsMDFile;\n1>      UnmanagedUnregistration;\n1>      GenerateSerializationAssemblies;\n1>      CreateSatelliteAssemblies;\n1>      GenerateManifests;\n1>      GetTargetPath;\n1>      PrepareForRun;\n1>      UnmanagedRegistration;\n1>      IncrementalClean;\n1>      PostBuildEvent\n1>\n1>CoreCleanDependsOn =\n1>CoreCompileDependsOn =\n1>      DesignTimeMarkupCompilation;\n1>\n1>        DesignTimeXamlMarkupCompilation;\n1>\n1>\n1>\n1>CoreCppCleanDependsOn =\n1>CoreResGenDependsOn =\n1>CoreRuntimeSDKName = Microsoft.NET.CoreRuntime, Version=1.0\n1>CppCleanDependsOn =\n1>      BeforeCppClean;\n1>      ;\n1>      CoreCppClean;\n1>      AfterCppClean;\n1>    ;PGInstrumentedClean\n1>CppCleanLogFile = HelloUI.Build.CppClean.log\n1>CppWindowsStoreUnitTestLibraryType = false\n1>CreateCustomManifestResourceNamesDependsOn =\n1>CreateHardLinksForCopyAdditionalFilesIfPossible = false\n1>CreateManifestResourceNamesDependsOn =\n1>CreateSatelliteAssembliesDependsOn =\n1>      _GenerateSatelliteAssemblyInputs;\n1>      ComputeIntermediateSatelliteAssemblies;\n1>      GenerateSatelliteAssemblies\n1>\n1>CRTDefinitionalFile = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\VCProjectDefault\\Microsoft.AppX.VCFrameworkReferences.xml\n1>CrtSDKReferenceInclude = Microsoft.VCLibs, Version=14.0\n1>CrtSDKReferenceVersion = 14.0\n1>CurrentMajorVersionNumber = 10\n1>CurrentSolutionConfigurationContents = \n1>Debug|Win32\n1>\n1>CustomAfterMicrosoftCommonProps = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.After.Microsoft.Common.props\n1>CustomAfterMicrosoftCommonTargets = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.After.Microsoft.Common.targets\n1>CustomBeforeMicrosoftCommonProps = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.Before.Microsoft.Common.props\n1>CustomBeforeMicrosoftCommonTargets = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.Before.Microsoft.Common.targets\n1>CustomBuildAfterTargets = BscMake\n1>CustomBuildBeforeTargets = PostBuildEvent\n1>CustomBuildToolAfterTargets = PreBuildEvent\n1>CustomBuildToolBeforeTargets = Midl\n1>DebugCppRuntimeFilesPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\Debug_NonRedist\\x86\n1>DebuggerFlavor = AppHostLocalDebugger\n1>DebuggerLaunchApplication = true\n1>DebuggerRequireAuthentication = true\n1>DebuggerType = NativeOnly\n1>DebugSymbols = true\n1>DebugSymbolsProjectOutputGroupDependsOn =\n1>DefaultLanguage = en-US\n1>DefaultLanguageSourceExtension = .cpp\n1>DefaultPlatformToolset = v140\n1>DefaultToolArchitecture = Native32Bit\n1>DefineCommonReferenceSchemas =\n1>DefineConstants = ;CODE_ANALYSIS\n1>DefineExplicitDefaults = true\n1>DelayImplib = dloadhelper.lib\n1>DelaySign =\n1>DesignTimeBuildInitTargets = _PrepareForReferenceResolution;;InitGetClCommandLines;ResolveReferences;FixupReferences\n1>DesignTimeIntermediateOutputPath = Debug\\InProcessTempFiles\\\n1>DesignTimeResolveAssemblyReferencesDependsOn =\n1>      GetFrameworkPaths;\n1>      GetReferenceAssemblyPaths;\n1>      ResolveReferences\n1>\n1>DetermineProjectTypeTargets = _PrepareForReferenceResolution;\n1>DevEnvDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\n1>DisableXbfGeneration = false\n1>DocumentationProjectOutputGroupDependsOn = ResolvedXDCMake;ComputeCLCompileGeneratedXDCFiles\n1>DocumentLibraryDependencies = true\n1>DotNetSdk_IncludePath = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>DotNetSdk_LibraryPath = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\n1>DotNetSdk_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm\n1>DotNetSdk_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm64\n1>DotNetSdk_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64\n1>DotNetSdk_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86\n1>DotNetSdkRoot = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\\n1>EmbeddedWin32Manifest =\n1>EmbedManifest = false\n1>EnableAppLocalFXWorkaround = false\n1>EnableCoreRuntime = true\n1>EnableDesignTimeBuild = true\n1>EnableDotNetNativeCompatibleProfile = true\n1>EnableManagedIncrementalBuild = false\n1>EnableSigningChecks = true\n1>ExcludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;\n1>ExecutablePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;\n1>ExpandSDKAllowedReferenceExtensions =\n1>      .winmd;\n1>      .dll\n1>\n1>ExpandSDKReferencesDependsOn =\n1>      ResolveSDKReferences\n1>\n1>ExtensionsToDeleteOnClean = .cdf;.cache;.obj;.ilk;.ipdb;.iobj;.resources;.tlb;.tli;.tlh;.tmp;.rsp;.pgc;.pgd;.meta;.tlog;.manifest;.res;.pch;.exp;.idb;.rep;.xdc;_.pdb;manifest.rc;.bsc;.sbr;.xml;.metagen;.bi;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.tlb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.bsc;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.ilk;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.intermediate.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.CodeAnalysisLog.xml;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.lastcodeanalysissucceeded;.g.h;_.g.cpp;.xaml\n1>ExtraStarboardOptions = -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char\n1>FacadeWinmdPath = C:\\Program Files (x86)\\Windows Kits\\10\\UnionMetadata\\facade\\Windows.winmd\n1>FinalAppxManifestName = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\AppxManifest.xml\n1>FinalAppxPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.appxrecipe\n1>FinalAppxUploadManifestName = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\AppxManifest.xml\n1>FinalAppxUploadPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\HelloUI.appxrecipe\n1>FindInvalidProjectReferencesDependsOn =\n1>      GetReferenceTargetPlatformMonikers\n1>\n1>FPS_BROWSER_APP_PROFILE_STRING = Internet Explorer\n1>FPS_BROWSER_USER_PROFILE_STRING = Default\n1>Framework20Dir = @(_TargetFramework20DirectoryItem)\n1>Framework30Dir = @(_TargetFramework30DirectoryItem)\n1>Framework35Dir = @(_TargetFramework35DirectoryItem)\n1>Framework40Dir = @(_TargetFramework40DirectoryItem)\n1>FrameworkDir = C:\\Windows\\Microsoft.NET\\Framework\\\n1>FrameworkDir_110 = C:\\Windows\\Microsoft.NET\\Framework\\\n1>FrameworkRegistryBase = Software\\Microsoft\\\n1>FrameworkSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>FrameworkSDKRoot = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\\n1>FrameworkVersion = v4.6\n1>FullReferenceAssemblyNames = Full\n1>FxCompileAfterTargets = CustomBuild\n1>FxCompileBeforeTargets = Midl\n1>GenerateBindingRedirectsOutputType = true\n1>GenerateBuildInfoConfigFile = false\n1>GenerateClickOnceManifests =\n1>GeneratedFilesDir = Generated Files\\\n1>GeneratedFilesOutputGroupDependsOn = XamlGeneratedFilesOutputGroup;\n1>GenerateManifest = false\n1>GenerateManifestsDependsOn =\n1>      SetWin32ManifestProperties;\n1>      GenerateApplicationManifest;\n1>      GenerateDeploymentManifest\n1>\n1>GenerateProjectionAssembly = True\n1>GenerateTargetFrameworkAttribute = false\n1>GetCopyToOutputDirectoryItemsDependsOn =\n1>      AssignTargetPaths;\n1>      _SplitProjectReferencesByFileExistence\n1>\n1>GetFrameworkPathsDependsOn =\n1>GetPackagingOutputsDependsOn =\n1>      ;\n1>      AssignProjectConfiguration;\n1>      _SplitProjectReferencesByFileExistence\n1>\n1>GetTargetPathDependsOn =\n1>GetTargetPathWithTargetPlatformMonikerDependsOn = ; GetTargetPath\n1>GPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>GPURefDebuggerBreakOnAllThreads = GPURefBreakOncePerWarp\n1>HighEntropyVA = true\n1>HOMEDRIVE = C:\n1>HOMEPATH = \\Users\\mehme\n1>HostOsVersion = 6.3\n1>IgnoreImportLibrary = true\n1>ImplicitlyExpandTargetFramework = false\n1>ImplicitlyExpandTargetFrameworkDependsOn =\n1>      ;\n1>      GetReferenceAssemblyPaths\n1>\n1>ImplicitlyExpandTargetPlatform = false\n1>ImportByWildcardAfterMicrosoftCommonProps = true\n1>ImportByWildcardAfterMicrosoftCommonTargets = true\n1>ImportByWildcardBeforeMicrosoftCommonProps = true\n1>ImportByWildcardBeforeMicrosoftCommonTargets = true\n1>ImportUserLocationsByWildcardAfterMicrosoftCommonProps = true\n1>ImportUserLocationsByWildcardAfterMicrosoftCommonTargets = true\n1>ImportUserLocationsByWildcardBeforeMicrosoftCommonProps = true\n1>ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets = true\n1>ImportXamlTargets = true\n1>IncludeBuiltProjectOutputGroup = true\n1>IncludeComFilesOutputGroup = false\n1>IncludeContentFilesProjectOutputGroup = true\n1>IncludeCopyLocalFilesOutputGroup = true\n1>IncludeCopyWinmdArtifactsOutputGroup = true\n1>IncludeCustomOutputGroupForPackaging = true\n1>IncludeDebugSymbolsProjectOutputGroup = true\n1>IncludeDocumentationProjectOutputGroup = false\n1>IncludeFrameworkReferencesFromNuGet = true\n1>IncludeGetResolvedSDKReferences = true\n1>IncludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;\n1>IncludePriFilesOutputGroup = true\n1>IncludeProjectPriFile = true\n1>IncludeSatelliteDllsProjectOutputGroup = false\n1>IncludeSDKRedistOutputGroup = true\n1>IncludeServerNameInBuildInfo = false\n1>IncludeSGenFilesOutputGroup = false\n1>IncludeSourceFilesProjectOutputGroup = false\n1>IncludeVersionInInteropName = true\n1>IncludeXamlCompositor = true\n1>InsertReverseMap = false\n1>IntDir = Debug\\\n1>IntermediateOutputPath = Debug\\\n1>IntermediateUploadOutputPath = Debug\\Upload\\\n1>InteropOutputPath = Interop\\\n1>IslandwoodDRT = true\n1>IWCompat = true\n1>KIT_SHARED_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>LangID = 1033\n1>LangName = en-US\n1>Language = C++\n1>LastBuildState = Debug\\HelloUI.tlog\\HelloUI.lastbuildstate\n1>LastBuildUnsuccessful = Debug\\HelloUI.tlog\\unsuccessfulbuild\n1>LayoutDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\AppX\n1>LibraryPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86\n1>LibraryWPath = C:\\Program Files (x86)\\Windows Kits\\10\\References;\n1>LinkCompiled = true\n1>LoadTimeSensitiveProperties =\n1>      ;\n1>\n1>LoadTimeSensitiveTargets =\n1>      ;\n1>      XamlMarkupCompilePass1;\n1>\n1>LOCALAPPDATA = C:\\Users\\mehme\\AppData\\Local\n1>LocalDebuggerAttach = False\n1>LocalDebuggerCommand = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>LocalDebuggerDebuggerType = Auto\n1>LocalDebuggerMergeEnvironment = true\n1>LocalDebuggerSQLDebugging = False\n1>LocalDebuggerWorkingDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>LocalGPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>LOGONSERVER = \\MicrosoftAccount\n1>MakeAppxExeFullPath =\n1>MakePriExeFullPath =\n1>ManagedAssembly = false\n1>ManagedIncrementalBuildProcessDependencyGraphAfterTarget =\n1>      ClCompile\n1>\n1>ManagedIncrementalBuildProcessDependencyGraphBeforeTarget =\n1>      ClCompile\n1>\n1>ManagedWinmdInprocImplementation = CLRHost.dll\n1>MarkupCompilePass1DependsOn = CppDesignTimeMarkupCompilation;\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>MarkupCompilePass2DependsOn =\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>MaxTargetPath = 100\n1>MergedOutputCodeAnalysisFile = Debug\\vc.nativecodeanalysis.all.xml\n1>MetagenInputTarget = Link\n1>MetaGenTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.MetaGen.targets\n1>MicrosoftCommonPropsHasBeenImported = true\n1>MidlYieldDuringToolExecution = true\n1>MinimalCoreWin = KernelOnly\n1>MinimumVisualStudioVersion = 14.0\n1>MinSupportedVCTargetsVersion = v140\n1>MpiDebuggerCleanupDeployment = True\n1>MpiDebuggerDebuggerType = Auto\n1>MpiDebuggerDeployCommonRuntime = True\n1>MpiDebuggerNetworkSecurityMode = AnyAddress\n1>MpiDebuggerSchedulerNode = localhost/1\n1>MpiDebuggerSchedulerTimeout = 5000\n1>MsAppxPackageTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets\n1>MSBuild_ExecutablePath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildAllProjects = ;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.targets;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Xaml.targets;C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets\n1>MSBuildAssemblyVersion = 14.0\n1>MSBuildBinPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\n1>MSBuildExtensionsPath = C:\\Program Files (x86)\\MSBuild\n1>MSBuildExtensionsPath32 = C:\\Program Files (x86)\\MSBuild\n1>MSBuildExtensionsPath64 = C:\\Program Files\\MSBuild\n1>MSBuildFrameworkToolsPath = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildFrameworkToolsPath32 = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildFrameworkToolsRoot = C:\\Windows\\Microsoft.NET\\Framework\\\n1>MSBuildLoadMicrosoftTargetsReadOnly = true\n1>MSBuildNodeCount = 8\n1>MSBuildProgramFiles32 = C:\\Program Files (x86)\n1>MSBuildProjectDefaultTargets = Build\n1>MSBuildProjectDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\n1>MSBuildProjectDirectoryNoRoot = Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\n1>MSBuildProjectExtension = .vcxproj\n1>MSBuildProjectFile = HelloUI.vcxproj\n1>MSBuildProjectFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>MSBuildProjectName = HelloUI\n1>MSBuildRuntimeVersion = 4.0.30319\n1>MSBuildStartupDirectory = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\n1>MSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\n1>MSBuildToolsPath32 = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\\n1>MSBuildToolsRoot = C:\\Program Files (x86)\\MSBuild\\\n1>MSBuildToolsVersion = 14.0\n1>MSBuildUserExtensionsPath = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\MSBuild\n1>MsTestToolsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\TeamTest\\Microsoft.TeamTest.targets\n1>NativeCodeAnalysisTLogFile = Debug\\NativeCodeAnalysis.read.1.tlog\n1>NetfxCoreRuntimeSettingsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Net.CoreRuntime.Settings.targets\n1>NetfxCoreRuntimeTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Net.CoreRuntime.targets\n1>NETFXKitsDir = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\\n1>NETFXSDKDir = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\\n1>NuGetProps = C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.props\n1>NuGetRuntimeIdentifier = win10-x86\n1>NuGetTargetFrameworkMonikerToInject = .NETCore,Version=v5.0\n1>NuGetTargetMoniker =\n1>NuGetTargetMonikerToInject = .NETCore,Version=v5.0\n1>NuGetTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets\n1>NUMBER_OF_PROCESSORS = 8\n1>OnlyCreateWinMD = true\n1>OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration = true\n1>OnXamlPreCompileErrorTarget = _OnXamlPreCompileError\n1>OS = Windows_NT\n1>OutDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>OutDirWasSpecified = false\n1>OutputPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>OutputType = exe\n1>OverwriteReadOnlyFiles = false\n1>PackageAction = _GenerateAppxPackage\n1>PackageCertificateKeyFile = HelloUI_TemporaryKey.pfx\n1>PackagingDirectoryWritesLogPath = Debug\\PackagingDirectoryWrites.log\n1>PackagingFileWritesLogPath = Debug\\PackagingFileWrites.log\n1>Path = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\\n1>PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\n1>PdbCopyExeFullPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\PDBCopy.exe\n1>PkgDefApplicationConfigFile = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\devenv.exe.config\n1>Platform = Win32\n1>Platform_Actual = Win32\n1>PlatformArchitecture = 32\n1>PlatformName = Win32\n1>PlatformPropsFound = true\n1>PlatformShortName = x86\n1>PlatformSpecificBundleArtifactsListDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\\n1>PlatformSpecificBundleArtifactsListDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\\n1>PlatformSpecificBundleArtifactsListDirName = BundleArtifacts\n1>PlatformSpecificUploadBundleArtifactsListDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\Upload\\\n1>PlatformSpecificUploadBundleArtifactsListDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifactsUpload\\\n1>PlatformTarget = x86\n1>PlatformTargetAsMSBuildArchitecture = x86\n1>PlatformTargetAsMSBuildArchitectureExplicitlySet = false\n1>PlatformTargetsFound = true\n1>PlatformToolset = v140\n1>PlatformToolsetVersion = 140\n1>PostBuildEventDependsOn =\n1>PostBuildEventUseInBuild = true\n1>PreBuildEventDependsOn =\n1>PreBuildEventUseInBuild = true\n1>Prefer32Bit = true\n1>PreferredToolArchitecture = x86\n1>PreLinkEventUseInBuild = true\n1>Prep_ComputeProcessXamlFilesDependsOn =\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>PrepareForBuildDependsOn = PlatformPrepareForBuild;UAP_PlatformPrepareForBuild;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata;SetCABuildNativeEnvironmentVariables\n1>PrepareForRunDependsOn =\n1>\n1>\n1>      CopyFilesToOutputDirectory\n1>    ;\n1>      _GetAppxManifestSchemaItems;\n1>      _GetSdkToolPaths;\n1>      _GetPriConfigXmlSnippets;\n1>      _ValidatePresenceOfAppxManifestItems;\n1>      GetPackagingOutputs;\n1>      _GetPackageProperties;\n1>      _AddUnionWinmd;\n1>      _GenerateProjectPriFile;\n1>      _ComputeAppxPackagePayload;\n1>      _GenerateAppxManifest;\n1>      _ValidateStoreManifest;\n1>      _GenerateAppxPackageRecipe;\n1>      _GenerateAppxUploadPackageRecipe;\n1>    ;\n1>      _AppendToReadTlogFile;\n1>      _AppendToWriteTlogFile;\n1>      _AppendToPackagingWriteLogs\n1>\n1>PrepareLayoutDependsOn =\n1>      ;\n1>      BeforePrepareLayout;\n1>      _PrepareLayout;\n1>      AfterPrepareLayout\n1>\n1>PrepareLibraryLayoutDependsOn =\n1>      GetPackagingOutputs;\n1>\n1>\n1>PrepareResourceNamesDependsOn =\n1>      AssignTargetPaths;\n1>      SplitResourcesByCulture;\n1>      CreateManifestResourceNames;\n1>      CreateCustomManifestResourceNames\n1>\n1>PrepareResourcesDependsOn =\n1>      ResolveKeySource;\n1>      MarkupCompilePass1;\n1>      XamlPreCompile;\n1>      MarkupCompilePass2;\n1>\n1>      XamlMarkupCompilePass1;\n1>      XamlMarkupCompilePass2;\n1>\n1>      PrepareResourceNames;\n1>      ResGen;\n1>      CompileLicxFiles\n1>\n1>\n1>\n1>PriIndexName =\n1>PROCESSOR_ARCHITECTURE = x86\n1>PROCESSOR_ARCHITEW6432 = AMD64\n1>PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9, GenuineIntel\n1>PROCESSOR_LEVEL = 6\n1>PROCESSOR_REVISION = 3a09\n1>ProcessorArchitecture = x86\n1>ProgramData = C:\\ProgramData\n1>ProgramFiles = C:\\Program Files (x86)\n1>ProgramW6432 = C:\\Program Files\n1>ProjectDesignTimeAssemblyResolutionSearchPaths =\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>ProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>ProjectEvaluationFingerprint = Debug|Win32|C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI|\n1>ProjectExt = .vcxproj\n1>ProjectFileName = HelloUI.vcxproj\n1>ProjectFlavor = Client\n1>ProjectGuid = {4EB34FDE-1B6C-4B1D-BEEF-33D300ABD49C}\n1>ProjectHMapFilename = Debug\\HelloUI-project\n1>ProjectHMapRequired = @(ClangCompile->AnyHaveMetadataValue('HeaderMap','Project'))\n1>ProjectLockFile = project.lock.json\n1>ProjectName = HelloUI\n1>ProjectNProfileEnabled = true\n1>ProjectNSettingsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.NetNative.Settings.targets\n1>ProjectNTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.NetNative.targets\n1>ProjectPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>ProjectPriFileName = resources.pri\n1>ProjectPriFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\resources.pri\n1>ProjectPriUploadFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\resources.pri\n1>PSModulePath = C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\\n1>PUBLIC = C:\\Users\\Public\n1>PublishableProject = true\n1>PublishBuildDependsOn =\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      ResolveReferences;\n1>      PrepareResources;\n1>      ResolveKeySource;\n1>      GenerateSerializationAssemblies;\n1>      CreateSatelliteAssemblies;\n1>\n1>PublishDependsOn =\n1>      SetGenerateManifests;\n1>      Build;\n1>      PublishOnly\n1>\n1>PublishDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.publish\\\n1>PublishOnlyDependsOn =\n1>      SetGenerateManifests;\n1>      PublishBuild;\n1>      BeforePublish;\n1>      GenerateManifests;\n1>      CopyFilesToOutputDirectory;\n1>      _CopyFilesToPublishFolder;\n1>      _DeploymentGenerateBootstrapper;\n1>      ResolveKeySource;\n1>      _DeploymentSignClickOnceDeployment;\n1>      AfterPublish\n1>\n1>PublishPipelineCollectFilesCore =\n1>            ;\n1>            CollectFilesFromBuildInfoConfigFile;\n1>\n1>RealOSVersion = 6.4\n1>RebuildDependsOn =\n1>      _PrepareForRebuild;\n1>\n1>      BeforeRebuild;\n1>      Clean;\n1>      Build;\n1>      AfterRebuild;\n1>    ;\n1>\n1>RebuildPackageAction = _RebuildAppxPackage\n1>RedirectionTarget = 8.2\n1>ReferencePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;\n1>RemoteDebuggerAttach = False\n1>RemoteDebuggerConnection = RemoteWithAuthentication\n1>RemoteDebuggerDebuggerType = Auto\n1>RemoteDebuggerServerName = DESKTOP-OTUSNEQ\n1>RemoteDebuggerSQLDebugging = False\n1>RemoteDebuggerWorkingDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>RemoteGPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>ReportingServicesTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\ReportingServices\\Microsoft.ReportingServices.targets\n1>RequiredBundles = VC_140ToolsAndLibs;Windows10_ToolsAndSDKV1;\n1>ResGenDependsOn = ResolveAssemblyReferences;SplitResourcesByCulture;BeforeResGen;CoreResGen;AfterResGen\n1>ResGenExecuteAsTool = false\n1>ResgenToolPath =\n1>ResolveAssemblyReferencesDependsOn = _PrepareForReferenceResolution;\n1>      GetFrameworkPaths;\n1>      GetReferenceAssemblyPaths;\n1>      PrepareForBuild;\n1>      ResolveSDKReferences;\n1>      ExpandSDKReferences;\n1>    ;ResolveNuGetPackageAssets\n1>ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch = Error\n1>ResolveNuGetPackages = true\n1>ResolveReferencesDependsOn =\n1>      _PrepareForReferenceResolution;ComputeCrtSDKReference;\n1>\n1>      BeforeResolveReferences;\n1>      AssignProjectConfiguration;\n1>      ResolveProjectReferences;\n1>      FindInvalidProjectReferences;\n1>      ResolveNativeReferences;\n1>      ResolveAssemblyReferences;\n1>      GenerateBindingRedirects;\n1>      ResolveComReferences;\n1>      AfterResolveReferences\n1>    ;\n1>      ResolveTestReferences\n1>    ;\n1>      ImplicitlyExpandTargetFramework;\n1>      ImplicitlyExpandTargetPlatform\n1>\n1>ResolveSDKReferencesDependsOn = _PrepareForReferenceResolution;ComputeCrtSDKReference;\n1>      GetInstalledSDKLocations\n1>\n1>RootNamespace = HelloUI\n1>RunCodeAnalysisDependsOn = ;ClCompile;RunMergeNativeCodeAnalysis\n1>RunCodeAnalysisInputs = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>RunDependsOn =\n1>RunMergeNativeCodeAnalysisDependsOn = ClCompile\n1>RunNativeCodeAnalysisInputs =\n1>SatelliteDllsProjectOutputGroupDependsOn = PrepareForBuild;PrepareResourceNames\n1>SBResourceArchive = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.zip\n1>SBResourceCompileAfterTargets = Link\n1>SBResourceCompileBeforeTargets =\n1>SBResourceCompileDependsOn = _XibCompile;_StoryboardCompile;_DataModelCompile;_AssetCatalogCompile;CopyInfoPlist\n1>SBResourcesDir =\n1>SDK35ToolsPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\\n1>SDK40ToolsPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\\\n1>SDKDisplayName = Windows 10\n1>SDKExtensionDirectoryRoot = C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>SDKIdentifier = Windows\n1>SDKRedistOutputGroupDependsOn = ResolveSDKReferences;ExpandSDKReferences\n1>SDKReferenceDirectoryRoot = C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>SDKReferenceRegistryRoot = Software\\Microsoft\\Microsoft SDKs\n1>SDKVersion = 10.0\n1>SESSIONNAME = Console\n1>SGenFilesOutputGroupDependsOn =\n1>SGenShouldGenerateSerializer = true\n1>SGenUseKeep = false\n1>SGenUseProxyTypes = true\n1>ShouldMarkCertainSDKReferencesAsRuntimeOnly = true\n1>SignAppxPackageExeFullPath =\n1>SignToolPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\n1>SkipCopyBuildProduct = true\n1>SkipCopyUnchangedFiles = true\n1>SkipILCompilation = true\n1>SkipIntermediatePriGenerationForResourceFiles = true\n1>SolutionDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\\n1>SolutionExt = .sln\n1>SolutionFileName = HelloUI-WinStore10.sln\n1>SolutionName = HelloUI-WinStore10\n1>SolutionPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI-WinStore10.sln\n1>SourceFilesProjectOutputGroupDependsOn = PrepareForBuild;AssignTargetPaths\n1>SourcePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfcm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src;C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;;;\n1>SQLDebugging = false\n1>StandardBuildPipeline = 1.0\n1>StarboardDefaultLibs = Starboard.lib;objcrt.lib;Foundation.lib;CoreFoundation.lib;UIKit.lib;QuartzCore.lib;CoreGraphics.lib;objcuwp.lib\n1>StarboardIncludes = -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\"\n1>StarboardLibDirs = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>StarboardLLVMDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\\n1>StarboardPrebuiltLibsDir = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>StarboardSdkRoot = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\n1>StoreManifestName = StoreManifest.xml\n1>SubsystemVersion = 6.00\n1>SupportWindows81SDKs = true\n1>SupportWindowsPhone81SDKs = false\n1>SystemDrive = C:\n1>SystemRoot = C:\\WINDOWS\n1>TargetCulture = \n1>TargetDeployManifestFileName = HelloUI.application\n1>TargetDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>TargetedFrameworkDir = @(_TargetedFrameworkDirectoryItem)\n1>TargetedSDKArchitecture = x86\n1>TargetedSDKConfiguration = Debug\n1>TargetExt = .exe\n1>TargetFileName = HelloUI.exe\n1>TargetFrameworkAsMSBuildRuntime = CurrentRuntime\n1>TargetName = HelloUI\n1>TargetOsAndVersion = Universal Windows\n1>TargetPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>TargetPlatformDisplayName = Universal Windows\n1>TargetPlatformIdentifier = UAP\n1>TargetPlatformIdentifierWindows81 = Windows\n1>TargetPlatformMinVersion = 10.0.10240.0\n1>TargetPlatformMoniker = UAP,Version=10.0.10240.0\n1>TargetPlatformName = UAP\n1>TargetPlatformRegistryBase = Software\\Microsoft\\Microsoft SDKs\\UAP\n1>TargetPlatformResourceVersion = 10.0.10240.0\n1>TargetPlatformSdkMetadataLocation = C:\\Program Files (x86)\\Windows Kits\\10\\References\\CommonConfiguration\\Neutral\n1>TargetPlatformSdkPath = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>TargetPlatformSdkRootOverride =\n1>TargetPlatformVersion = 10.0.10240.0\n1>TargetPlatformVersionWindows81 = 8.1\n1>TargetPlatformWinMDLocation = C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>TargetRuntime = Native\n1>TargetUniversalCRTVersion = 10.0.10240.0\n1>TaskKeyToken = 31bf3856ad364e35\n1>TaskVersion = 4.0.0.0\n1>TEMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>TLogLocation = Debug\\HelloUI.tlog\\\n1>TMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>ToolsetPropsFound = true\n1>ToolsetTargetsFound = true\n1>TrackFileAccess = true\n1>UapBuildPipeline = 2.0\n1>UapDefaultAssetScale = 200\n1>UCRTContentRoot = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>UM_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>UnitTestPlatformVersion = 14.0\n1>UniversalCRT_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;\n1>UniversalCRT_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm;\n1>UniversalCRT_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm64;\n1>UniversalCRT_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64;\n1>UniversalCRT_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;\n1>UniversalCRT_PropsPath = C:\\Program Files (x86)\\Windows Kits\\10\\DesignTime\\CommonConfiguration\\Neutral\\ucrt.props\n1>UniversalCRT_SourcePath = C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;\n1>UniversalCRTSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>UnmanagedRegistrationDependsOn =\n1>UnmanagedUnregistrationDependsOn =\n1>UseCommonOutputDirectory = false\n1>UseDefaultDebuggersPropertyPageSchemas = false\n1>UseDotNetNativeToolchain =\n1>UseIncrementalAppxRegistration = true\n1>UseLegacyManagedDebugger = true\n1>UseNetNativeCustomFramework = true\n1>UseOfATL = false\n1>UseOfMFC = false\n1>USERDOMAIN = DESKTOP-OTUSNEQ\n1>USERDOMAIN_ROAMINGPROFILE = DESKTOP-OTUSNEQ\n1>USERNAME = mehme\n1>USERPROFILE = C:\\Users\\mehme\n1>UserRootDir = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\MSBuild\\v4.0\n1>UseSourcePath = true\n1>ValidatePresenceOfAppxManifestItemsDependsOn =\n1>\n1>      ;\n1>    ;\n1>            _CreateContentItemOutOfCustomAppxManifest\n1>\n1>VC_ExecutablePath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_arm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x64_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64_arm\n1>VC_ExecutablePath_x64_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\n1>VC_ExecutablePath_x64_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64_x86\n1>VC_ExecutablePath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x86_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_arm\n1>VC_ExecutablePath_x86_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_amd64\n1>VC_ExecutablePath_x86_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_IncludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;\n1>VC_LibraryPath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\ARM;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\ARM;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm;;\n1>VC_LibraryPath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\amd64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64;;\n1>VC_LibraryPath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;\n1>VC_ReferencesPath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\ARM;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\ARM\n1>VC_ReferencesPath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\amd64\n1>VC_ReferencesPath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\n1>VC_SourcePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfcm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src;C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;;\n1>VCInstallDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\\n1>VCInstallDir_140 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\\n1>VCLibs14SDKName = Microsoft.VCLibs, Version=14.0\n1>VCProjectUpgraderObjectName = WindowsSDKVersionUpgrader\n1>VCTargetsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPath10 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\\n1>VCTargetsPath11 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\\n1>VCTargetsPath12 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\\n1>VCTargetsPath14 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPathActual = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPathEffective = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCToolArchitecture = Native32Bit\n1>VisualStudioDir = C:\\Users\\mehme\\Documents\\Visual Studio 2015\n1>VisualStudioEdition = Microsoft Visual Studio Professional 2015\n1>VisualStudioVersion = 14.0\n1>VS_ExecutablePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;\n1>VS110COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\\n1>VS120COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\\n1>VS140COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\\n1>VSIDEResolvedNonMSBuildProjectOutputs = \n1>VSInstallDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\\n1>VSInstallDir_140 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\\n1>VSLANG = 1033\n1>VSVersion = $(VisualStudoVersion)\n1>WebBrowserDebuggerDebuggerType = Auto\n1>WebReference_EnableLegacyEventingModel = false\n1>WebReference_EnableProperties = true\n1>WebReference_EnableSQLTypes = true\n1>WebServiceDebuggerDebuggerType = Auto\n1>WebServiceDebuggerSQLDebugging = False\n1>WholeProgramOptimization = false\n1>WholeProgramOptimizationAvailabilityInstrument = true\n1>WholeProgramOptimizationAvailabilityOptimize = true\n1>WholeProgramOptimizationAvailabilityTrue = true\n1>WholeProgramOptimizationAvailabilityUpdate = true\n1>WINOBJC_SDK_ROOT = ........\n1>windir = C:\\WINDOWS\n1>Windows81SdkInstalled = true\n1>WindowsAppContainer = true\n1>WindowsSDK_ExecutablePath = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\n1>WindowsSDK_ExecutablePath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\arm;\n1>WindowsSDK_ExecutablePath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\arm64;\n1>WindowsSDK_ExecutablePath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\\x64\n1>WindowsSDK_ExecutablePath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\n1>WindowsSDK_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>WindowsSDK_LibraryPath = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\n1>WindowsSDK_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\arm;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm;\n1>WindowsSDK_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\arm64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm64;\n1>WindowsSDK_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64;\n1>WindowsSDK_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;\n1>WindowsSDK_MetadataFoundationPath = C:\\Program Files (x86)\\Windows Kits\\10\\References\\windows.foundation.foundationcontract\\1.0.0.0\n1>WindowsSDK_MetadataPath = C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>WindowsSDK_PlatformPath = C:\\Program Files (x86)\\Windows Kits\\10\\Platforms\\UAP;\n1>WindowsSDK80Path = C:\\Program Files (x86)\\Windows Kits\\8.1\\\n1>WindowsSDKDesktopARM64Support = true\n1>WindowsSDKDesktopARMSupport = true\n1>WindowsSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSdkDir_10 = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSdkDir_81 = C:\\Program Files (x86)\\Windows Kits\\8.1\\\n1>WindowsSdkDir_81A = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1A\\\n1>WindowsSdkPath = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSDKToolArchitecture = Native32Bit\n1>WindowsTargetPlatformMinVersion = 10.0.10240.0\n1>WindowsTargetPlatformVersion = 10.0.10240.0\n1>WinMDAssembly = false\n1>WinRT_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>WMSJSProject = WJProject\n1>WMSJSProjectDirectory = JavaScript\n1>XamlBuildTaskAssemblyName = XamlBuildTask, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\n1>XamlBuildTaskLocation = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>XamlBuildTaskPath = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>XAMLCompilerVersion = 8.2\n1>XAMLFingerprint = true\n1>XAMLFingerprintIgnorePaths =\n1>      @(ReferenceAssemblyPaths);\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\\n1>\n1>XamlGenCodeFileNames = HelloUI.vcxproj.XamlGeneratedCodeFileListAbsolute.txt\n1>XamlGeneratedOutputPath = Generated Files\\\n1>XamlGenMarkupFileNames = HelloUI.vcxproj.XamlGeneratedXamlFileListAbsolute.txt\n1>XamlPass2FlagFile = HelloUI.vcxproj.XamlPass2Flag.txt\n1>XamlPreLinkDependsOn =\n1>            ;\n1>            ComputeXamlGeneratedCLOutputs\n1>\n1>XamlRequiresCompilationPass2 = false\n1>XamlSavedStateFileName = XamlSaveStateFile.xml\n1>XamlSavedStateFilePath = Debug\\XamlSaveStateFile.xml\n1>XamlTemporaryAssemblyName = HelloUI\n1>YieldDuringToolExecution = true\n1>\n1>Building with tools version \"14.0\".\n1>Target \"_CheckForInvalidConfigurationAndPlatform: (TargetId:2)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (entry point):\n1>Set Property: _InvalidConfigurationMessageText=The OutputPath property is not set for project 'HelloUI.vcxproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='Win32'.\n1>Set Property: _InvalidConfigurationMessageText=The OutputPath property is not set for project 'HelloUI.vcxproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='Win32'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\n1>Task \"Error\" skipped, due to false condition; ( '$(_InvalidConfigurationError)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Task \"Warning\" skipped, due to false condition; ( '$(_InvalidConfigurationWarning)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Using \"Message\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Message\" (TaskId:2)\n1>  Task Parameter:Text=Configuration=Debug (TaskId:2)\n1>  Task Parameter:Importance=Low (TaskId:2)\n1>  Configuration=Debug (TaskId:2)\n1>Done executing task \"Message\". (TaskId:2)\n1>Task \"Message\" (TaskId:3)\n1>  Task Parameter:Text=Platform=Win32 (TaskId:3)\n1>  Task Parameter:Importance=Low (TaskId:3)\n1>  Platform=Win32 (TaskId:3)\n1>Done executing task \"Message\". (TaskId:3)\n1>Task \"Error\" skipped, due to false condition; ('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')) was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\' != '' and !HasTrailingSlash('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\')).\n1>Task \"Error\" skipped, due to false condition; ('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)')) was evaluated as ('obj\\' != '' and !HasTrailingSlash('obj\\')).\n1>Task \"Error\" skipped, due to false condition; ('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)')) was evaluated as ('Debug\\' != '' and !HasTrailingSlash('Debug\\')).\n1>Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"HelloUI.vcxproj\".: (TargetId:2)\n1>Target \"_PrepareForBuild: (TargetId:3)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Set Property: BuildType=Build\n1>Set Property: _BuildActionType=Build\n1>Task \"CreateItem\" skipped, due to false condition; ('%(CustomBuild.IncludeFileToTool)'!='') was evaluated as (''!='').\n1>Removed Item(s):\n1>    CustomBuildStep=\n1>        HelloUI\n1>                Message=Performing Custom Build Step\n1>Done building target \"_PrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:3)\n1>Target \"_PrepareForReferenceResolution: (TargetId:4)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Set Property: WinMDAssembly=true\n1>Set Property: TargetFrameworkMoniker=\n1>Set Property: _FindDependencies=false\n1>Set Property: AdditionalExplicitAssemblyReferences=\n1>Added Item(s):\n1>    Reference=\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>Task \"Message\" skipped, due to false condition; ('$(_REFERENCE_DEBUG)'=='true') was evaluated as (''=='true').\n1>Done building target \"_PrepareForReferenceResolution\" in project \"HelloUI.vcxproj\".: (TargetId:4)\n1>Target \"ComputeCrtSDKReference: (TargetId:5)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Set Property: UseCrtSDKReferenceConfig=Debug\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(UseCrtSDKReferenceStaticWarning)'=='true') was evaluated as (''!='true' and ''=='true').\n1>Added Item(s):\n1>    SDKReference=\n1>        Microsoft.VCLibs, Version=14.0\n1>                Implicit=true\n1>                TargetedSDKArchitecture=x86\n1>                TargetedSDKConfiguration=Debug\n1>Done building target \"ComputeCrtSDKReference\" in project \"HelloUI.vcxproj\".: (TargetId:5)\n1>Target \"BeforeResolveReferences: (TargetId:6)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Done building target \"BeforeResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:6)\n1>Target \"AssignProjectConfiguration: (TargetId:7)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Set Property: ShouldUnsetParentConfigurationAndPlatform=true\n1>Using \"AssignProjectConfiguration\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"AssignProjectConfiguration\" (TaskId:4)\n1>  Task Parameter:CurrentProject=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj (TaskId:4)\n1>  Task Parameter:CurrentProjectConfiguration=Debug (TaskId:4)\n1>  Task Parameter:CurrentProjectPlatform=Win32 (TaskId:4)\n1>  Task Parameter:OutputType=exe (TaskId:4)\n1>  Task Parameter:ResolveConfigurationPlatformUsingMappings=False (TaskId:4)\n1>  Task Parameter:SolutionConfigurationContents=\n1>  Debug|Win32\n1>   (TaskId:4)\n1>  Task Parameter:OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration=True (TaskId:4)\n1>  Task Parameter:ShouldUnsetParentConfigurationAndPlatform=True (TaskId:4)\n1>Done executing task \"AssignProjectConfiguration\". (TaskId:4)\n1>Done building target \"AssignProjectConfiguration\" in project \"HelloUI.vcxproj\".: (TargetId:7)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence: (TargetId:8)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveProjectReferences\" depends on it):\n1>Task \"ResolveNonMSBuildProjectOutput\" skipped, due to false condition; ('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='') was evaluated as ('true'=='true' and ''!='').\n1>Done building target \"_SplitProjectReferencesByFileExistence\" in project \"HelloUI.vcxproj\".: (TargetId:8)\n1>Target \"_RemoveNameMetadataFromProjectReferenceItems\" skipped, due to false condition; ('@(ProjectReference)'!='') was evaluated as (''!='').\n1>Target \"ResolveProjectReferences: (TargetId:9)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and ('true' == 'true' or 'true' != 'true') and '14.0' != '10.0' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' == '10.0' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and ('true' == 'true' or 'true' != 'true') and '14.0' == '10.0' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and 'true' != 'true' and 'true' == 'true' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and 'true' == 'true' and '' != '').\n1>Task \"Warning\" skipped, due to false condition; ('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '') was evaluated as ('' != '' and '' != '').\n1>Done building target \"ResolveProjectReferences\" in project \"HelloUI.vcxproj\".: (TargetId:9)\n1>Target \"FindInvalidProjectReferences\" skipped, due to false condition; ('$(FindInvalidProjectReferences)' == 'true') was evaluated as ('' == 'true').\n1>Target \"ResolveNativeReferences\" skipped, due to false condition; ('@(NativeReference)'!='') was evaluated as (''!='').\n1>Target \"_PrepareForReferenceResolution\" skipped. Previously built successfully.\n1>Target \"GetFrameworkPaths: (TargetId:10)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Done building target \"GetFrameworkPaths\" in project \"HelloUI.vcxproj\".: (TargetId:10)\n1>Target \"GetReferenceAssemblyPaths: (TargetId:11)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Set Property: TargetFrameworkDirectory=\n1>Task \"GetReferenceAssemblyPaths\" skipped, due to false condition; ('$(TargetFrameworkMoniker)' != '' and ('$(_TargetFrameworkDirectories)' == '' or '$(_FullFrameworkReferenceAssemblyPaths)' == '')) was evaluated as ('' != '' and ('' == '' or '' == '')).\n1>Set Property: TargetFrameworkDirectory=;;\n1>Set Property: TargetFrameworkDirectory=;;;C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>Set Property: RemoveAssemblyFoldersIfNoTargetFramework=true\n1>Set Property: AssemblySearchPaths=\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      ;\n1>      {GAC};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>Set Property: TargetFrameworkProfile=\n1>Done building target \"GetReferenceAssemblyPaths\" in project \"HelloUI.vcxproj\".: (TargetId:11)\n1>Target \"SetBuildDefaultEnvironmentVariables: (TargetId:12)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Using \"SetEnv\" task from assembly \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll\".\n1>Task \"SetEnv\" (TaskId:5)\n1>  Task Parameter:Name=PATH (TaskId:5)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\; (TaskId:5)\n1>  Task Parameter:Prefix=False (TaskId:5)\n1>  PATH=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\; (TaskId:5)\n1>  Output Property: Path=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\bin%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\bin\\x86%3b%3bC:\\Program Files %28x86%29\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\tools%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\ide%3bC:\\Program Files %28x86%29\\HTML Help Workshop%3b%3bC:\\Program Files %28x86%29\\MSBuild\\14.0\\bin\\%3bC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\%3bC:\\WINDOWS\\SysWow64%3b%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86%3bC:\\WINDOWS\\system32%3bC:\\WINDOWS%3bC:\\WINDOWS\\System32\\Wbem%3bC:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\%3bC:\\Program Files %28x86%29\\Skype\\Phone\\%3bC:\\Program Files %28x86%29\\Git\\cmd%3bC:\\Program Files %28x86%29\\Git\\bin%3bE:\\AndroidSdk\\platform-tools%3bC:\\Program Files\\TortoiseSVN\\bin%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Windows Performance Toolkit\\%3bC:\\WINDOWS\\system32\\config\\systemprofile.dnx\\bin%3bC:\\Program Files\\Microsoft DNX\\Dnvm\\%3b (TaskId:5)\n1>Done executing task \"SetEnv\". (TaskId:5)\n1>Task \"SetEnv\" (TaskId:6)\n1>  Task Parameter:Name=LIB (TaskId:6)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:6)\n1>  Task Parameter:Prefix=False (TaskId:6)\n1>  LIB=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:6)\n1>  Output Property: LIB=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib\\store%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86%3b%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:6)\n1>Done executing task \"SetEnv\". (TaskId:6)\n1>Task \"SetEnv\" (TaskId:7)\n1>  Task Parameter:Name=LIBPATH (TaskId:7)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib; (TaskId:7)\n1>  Task Parameter:Prefix=False (TaskId:7)\n1>  LIBPATH=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib; (TaskId:7)\n1>  Output Property: LIBPATH=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib%3b (TaskId:7)\n1>Done executing task \"SetEnv\". (TaskId:7)\n1>Task \"SetEnv\" (TaskId:8)\n1>  Task Parameter:Name=INCLUDE (TaskId:8)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:8)\n1>  Task Parameter:Prefix=False (TaskId:8)\n1>  INCLUDE=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:8)\n1>  Output Property: INCLUDE=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\include%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt%3b%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\um%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\shared%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\Include\\um%3b (TaskId:8)\n1>Done executing task \"SetEnv\". (TaskId:8)\n1>Done building target \"SetBuildDefaultEnvironmentVariables\" in project \"HelloUI.vcxproj\".: (TargetId:12)\n1>Target \"SetUserMacroEnvironmentVariables\" skipped, due to false condition; ('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' != '' and '' != 'true').\n1>Target \"GetResolvedWinMD: (TargetId:13)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Added Item(s):\n1>    Link=\n1>        tmp\n1>                AcceptableNonZeroExitCodes=\n1>                AdditionalDependencies=WindowsApp.lib;\n1>                AdditionalLibraryDirectories=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>                AllowIsolation=true\n1>                AppContainer=true\n1>                CLRImageType=Default\n1>                DataExecutionPrevention=true\n1>                DelaySign=\n1>                DeleteSoon=true\n1>                Driver=NotSet\n1>                EnableCOMDATFolding=true\n1>                EnableUAC=\n1>                GenerateDebugInformation=true\n1>                GenerateMapFile=false\n1>                GenerateWindowsMetadata=true\n1>                IgnoreEmbeddedIDL=false\n1>                ImageHasSafeExceptionHandlers=true\n1>                KeyFile=\n1>                LinkErrorReporting=PromptImmediately\n1>                ManifestFile=\n1>                MapExports=false\n1>                MinimalRebuildFromTracking=true\n1>                NoEntryPoint=false\n1>                OptimizeReferences=true\n1>                OutputFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>                PerUserRedirection=false\n1>                Profile=false\n1>                ProfileGuidedDatabase=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pgd\n1>                ProgramDatabaseFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb\n1>                RandomizedBaseAddress=true\n1>                RegisterOutput=false\n1>                SetChecksum=false\n1>                ShowProgress=NotSet\n1>                SubSystem=Windows\n1>                SuppressStartupBanner=true\n1>                SwapRunFromCD=false\n1>                SwapRunFromNET=false\n1>                TargetMachine=MachineX86\n1>                TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                TurnOffAssemblyGeneration=false\n1>                TypeLibraryResourceID=1\n1>                UACExecutionLevel=\n1>                UACUIAccess=false\n1>                WindowsMetadataFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>Added Item(s):\n1>    WinMDFullPath=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>                Primary=true\n1>                TargetPath=HelloUI.winmd\n1>Removed Item(s):\n1>    Link=\n1>        tmp\n1>                AcceptableNonZeroExitCodes=\n1>                AdditionalDependencies=WindowsApp.lib;\n1>                AdditionalLibraryDirectories=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>                AllowIsolation=true\n1>                AppContainer=true\n1>                CLRImageType=Default\n1>                DataExecutionPrevention=true\n1>                DelaySign=\n1>                DeleteSoon=true\n1>                Driver=NotSet\n1>                EnableCOMDATFolding=true\n1>                EnableUAC=\n1>                GenerateDebugInformation=true\n1>                GenerateMapFile=false\n1>                GenerateWindowsMetadata=true\n1>                IgnoreEmbeddedIDL=false\n1>                ImageHasSafeExceptionHandlers=true\n1>                KeyFile=\n1>                LinkErrorReporting=PromptImmediately\n1>                ManifestFile=\n1>                MapExports=false\n1>                MinimalRebuildFromTracking=true\n1>                NoEntryPoint=false\n1>                OptimizeReferences=true\n1>                OutputFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>                PerUserRedirection=false\n1>                Profile=false\n1>                ProfileGuidedDatabase=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pgd\n1>                ProgramDatabaseFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb\n1>                RandomizedBaseAddress=true\n1>                RegisterOutput=false\n1>                SetChecksum=false\n1>                ShowProgress=NotSet\n1>                SubSystem=Windows\n1>                SuppressStartupBanner=true\n1>                SwapRunFromCD=false\n1>                SwapRunFromNET=false\n1>                TargetMachine=MachineX86\n1>                TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                TurnOffAssemblyGeneration=false\n1>                TypeLibraryResourceID=1\n1>                UACExecutionLevel=\n1>                UACUIAccess=false\n1>                WindowsMetadataFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>Done building target \"GetResolvedWinMD\" in project \"HelloUI.vcxproj\".: (TargetId:13)\n1>Target \"PlatformPrepareForBuild: (TargetId:14)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Platform.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Set Property: ConfigurationPlatformExists=true\n1>Set Property: _CurrentPlatformToolsetShortName=v140\n1>Task \"VCMessage\" skipped, due to false condition; ('$(_Error64bitToolsNotInstalled)' == 'true') was evaluated as ('' == 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v110') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v110').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v100') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v100').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v90') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v90').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' != 'v90' and '$(PlatformToolset)' != 'v100' and '$(PlatformToolset)' != 'v110') was evaluated as (''!='true' and 'true' != 'true' and 'v140' != 'v90' and 'v140' != 'v100' and 'v140' != 'v110').\n1>Done building target \"PlatformPrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:14)\n1>Target \"UAP_PlatformPrepareForBuild: (TargetId:15)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Task \"Error\" skipped, due to false condition; ('$(MissingSDKPropsForUAP)' == 'true') was evaluated as ('' == 'true').\n1>Done building target \"UAP_PlatformPrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:15)\n1>Target \"GetFrameworkPaths\" skipped. Previously built successfully.\n1>Target \"GetReferenceAssemblyPaths\" skipped. Previously built successfully.\n1>Target \"AssignLinkMetadata\" skipped, due to false condition; ( '$(SynthesizeLinkMetadata)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Target \"SetCABuildNativeEnvironmentVariables: (TargetId:16)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Initializing task factory \"CodeTaskFactory\" from assembly \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Build.Tasks.Core.dll\".\n1>Using \"SetEnvironmentVariable\" task from the task factory \"Code Task Factory\".\n1>Task \"SetEnvironmentVariable\" (TaskId:9)\n1>  Task Parameter:EnvValue=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:9)\n1>  Task Parameter:EnvKey=CAExcludePath (TaskId:9)\n1>Done executing task \"SetEnvironmentVariable\". (TaskId:9)\n1>Done building target \"SetCABuildNativeEnvironmentVariables\" in project \"HelloUI.vcxproj\".: (TargetId:16)\n1>Target \"PrepareForBuild: (TargetId:17)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Set Property: TargetDir=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>Set Property: LocalDebuggerCommand=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>Set Property: BuildProjectReferences=false\n1>Set Property: ConfigurationPlatformExists=true\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)' != 'true' and '$(ConfigurationPlatformExists)' != 'true') was evaluated as ('' != 'true' and 'true' != 'true').\n1>Using \"MakeDir\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"MakeDir\" (TaskId:10)\n1>  Task Parameter:Directories=Debug\\ (TaskId:10)\n1>Done executing task \"MakeDir\". (TaskId:10)\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(WindowsAppContainer)'=='true' and '$(ConfigurationType)'!='Application' and '$(ConfigurationType)'!='DynamicLibrary' and '$(ConfigurationType)'!='StaticLibrary') was evaluated as (''!='true' and 'true'=='true' and 'Application'!='Application' and 'Application'!='DynamicLibrary' and 'Application'!='StaticLibrary').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(VCInstallDir)'=='' and '$(UseEnv)' != 'true' and ('$(TargetFrameworkVersion)'=='v3.5' or '$(TargetFrameworkVersion)'=='v3.0' or '$(TargetFrameworkVersion)'=='v2.0' )) was evaluated as (''!='true' and 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true' and (''=='v3.5' or ''=='v3.0' or ''=='v2.0' )).\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(VCInstallDir)'=='' and '$(UseEnv)' != 'true' and '$(PlatformToolset)'=='v90') was evaluated as (''!='true' and 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true' and 'v140'=='v90').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(VCInstallDir)'=='' and '$(UseEnv)' != 'true') was evaluated as ('C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(WindowsSDKDir)'=='' and '$(UseEnv)' != 'true') was evaluated as ('C:\\Program Files (x86)\\Windows Kits\\10\\'=='' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IntDirTrailingSlashWarning)'=='true') was evaluated as (''=='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(OutDirTrailingSlashWarning)'=='true') was evaluated as (''=='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('%(CompatibilityIssues.Identity)' != '' and '$(DesignTimeBuild)'!='true') was evaluated as ('' != '' and ''!='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(_MBCS_Using)' == 'true' and '$(_MBCS_Installed)' != 'true' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' == 'true' and '' != 'true' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IgnoreWarnIntDirSharingDetected)' != 'true' and '$(IntDirSharingDetected)' == 'true') was evaluated as ('' != 'true' and '' == 'true').\n1>Set Property: _IntDirFullpath=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\\n1>Set Property: _OutDirFullpath=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IgnoreWarnIntDirInTempDetected)' != 'true' and ('$(_IntDirFullpath.StartsWith($(Tmp), true, null))' == 'true' or '$(_IntDirFullpath.StartsWith($(Temp), true, null))' == 'true' or '$(_OutDirFullpath.StartsWith($(Tmp), true, null))' == 'true' or '$(_OutDirFullpath.StartsWith($(Temp), true, null))' == 'true')) was evaluated as ('' != 'true' and ('False' == 'true' or 'False' == 'true' or 'False' == 'true' or 'False' == 'true')).\n1>Task \"MakeDir\" (TaskId:11)\n1>  Task Parameter:\n1>      Directories=\n1>          Debug\\\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>          Debug\\HelloUI.tlog\\\n1>          Generated Files\\ (TaskId:11)\n1>Done executing task \"MakeDir\". (TaskId:11)\n1>Done building target \"PrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:17)\n1>Target \"_PrepareForReferenceResolution\" skipped. Previously built successfully.\n1>Target \"ComputeCrtSDKReference\" skipped. Previously built successfully.\n1>Target \"GetInstalledSDKLocations: (TargetId:18)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveSDKReferences\" depends on it):\n1>Using \"GetInstalledSDKLocations\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"GetInstalledSDKLocations\" (TaskId:12)\n1>  Task Parameter:\n1>      SDKDirectoryRoots=\n1>          C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs\n1>          C:\\Program Files (x86)\\Microsoft SDKs (TaskId:12)\n1>  Task Parameter:\n1>      SDKExtensionDirectoryRoots=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\n1>          C:\\Program Files (x86)\\Windows Kits\\10 (TaskId:12)\n1>  Task Parameter:SDKRegistryRoot=Software\\Microsoft\\Microsoft SDKs (TaskId:12)\n1>  Task Parameter:TargetPlatformVersion=10.0.10240.0 (TaskId:12)\n1>  Task Parameter:TargetPlatformIdentifier=UAP (TaskId:12)\n1>  Searching for SDKs targeting \"UAP, 10.0.10240.0\". (TaskId:12)\n1>  Found \"14\" SDKs. (TaskId:12)\n1>  Installed SDKs: (TaskId:12)\n1>      SDK \"CppUnitTestFramework.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.Midi.GmDls, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.NET.CoreRuntime, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.NET.Native.Runtime.1.1, Version=1.1\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\" (TaskId:12)\n1>      SDK \"Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.VCLibs, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\" (TaskId:12)\n1>      SDK \"Microsoft.VCLibs.120, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\" (TaskId:12)\n1>      SDK \"MSTestFramework.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\" (TaskId:12)\n1>      SDK \"TestPlatform.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\" (TaskId:12)\n1>      SDK \"WindowsDesktop, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\" (TaskId:12)\n1>      SDK \"WindowsIoT, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\" (TaskId:12)\n1>      SDK \"WindowsMobile, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\" (TaskId:12)\n1>      SDK \"WindowsTeam, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\" (TaskId:12)\n1>  Output Item(s):\n1>      InstalledSDKLocations=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.Midi.GmDls, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.CoreRuntime, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.Native.Runtime.1.1, Version=1.1\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs.120, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsDesktop, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsIoT, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsMobile, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsTeam, Version=10.0.10240.0 (TaskId:12)\n1>Done executing task \"GetInstalledSDKLocations\". (TaskId:12)\n1>Task \"GetInstalledSDKLocations\" (TaskId:13)\n1>  Task Parameter:\n1>      SDKDirectoryRoots=\n1>          C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs\n1>          C:\\Program Files (x86)\\Microsoft SDKs (TaskId:13)\n1>  Task Parameter:SDKRegistryRoot=Software\\Microsoft\\Microsoft SDKs (TaskId:13)\n1>  Task Parameter:TargetPlatformVersion=8.1 (TaskId:13)\n1>  Task Parameter:TargetPlatformIdentifier=Windows (TaskId:13)\n1>  Searching for SDKs targeting \"Windows, 8.1\". (TaskId:13)\n1>  Found \"9\" SDKs. (TaskId:13)\n1>  Installed SDKs: (TaskId:13)\n1>      SDK \"Microsoft.VCLibs, Version=11.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\" (TaskId:13)\n1>      SDK \"Microsoft.WinJS.1.0, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\" (TaskId:13)\n1>      SDK \"BehaviorsXamlSDKManaged, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\" (TaskId:13)\n1>      SDK \"BehaviorsXamlSDKNative, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\" (TaskId:13)\n1>      SDK \"CppUnitTestFramework, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\" (TaskId:13)\n1>      SDK \"Microsoft.VCLibs, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\" (TaskId:13)\n1>      SDK \"Microsoft.WinJS.2.0, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\" (TaskId:13)\n1>      SDK \"MSTestFramework, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\" (TaskId:13)\n1>      SDK \"TestPlatform, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\" (TaskId:13)\n1>  Output Item(s):\n1>      InstalledSDKLocations=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=11.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.1.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKManaged, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKNative, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.2.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform, Version=14.0 (TaskId:13)\n1>Done executing task \"GetInstalledSDKLocations\". (TaskId:13)\n1>Task \"GetInstalledSDKLocations\" skipped, due to false condition; ('@(SDKReference)' != '' and '$(SupportWindowsPhone81SDKs)' == 'true' and '$(TargetPlatformIdentifierWindowsPhone81)' != '' and '$(TargetPlatformVersionWindowsPhone81)' != '') was evaluated as ('Microsoft.VCLibs, Version=14.0' != '' and 'false' == 'true' and '' != '' and '' != '').\n1>Done building target \"GetInstalledSDKLocations\" in project \"HelloUI.vcxproj\".: (TargetId:18)\n1>Target \"ModifyUnitTestPlatformVersion: (TargetId:19)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\Microsoft.Common.targets\\ImportBefore\\Windows.8.1.UT_SDKReference.props\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveSDKReferences\" depends on it):\n1>Done building target \"ModifyUnitTestPlatformVersion\" in project \"HelloUI.vcxproj\".: (TargetId:19)\n1>Target \"ResolveSDKReferences: (TargetId:20)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Using \"ResolveSDKReference\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ResolveSDKReference\" (TaskId:14)\n1>  Task Parameter:\n1>      SDKReferences=\n1>          Microsoft.VCLibs, Version=14.0\n1>                  Implicit=true\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug (TaskId:14)\n1>  Task Parameter:\n1>      References=\n1>          XamlCompositorCS\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true (TaskId:14)\n1>  Task Parameter:TargetPlatformVersion=10.0.10240.0 (TaskId:14)\n1>  Task Parameter:TargetPlatformIdentifier=UAP (TaskId:14)\n1>  Task Parameter:ProjectName=HelloUI (TaskId:14)\n1>  Task Parameter:TargetedSDKConfiguration=Debug (TaskId:14)\n1>  Task Parameter:TargetedSDKArchitecture=x86 (TaskId:14)\n1>  Task Parameter:\n1>      InstalledSDKs=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.Midi.GmDls, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.CoreRuntime, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.Native.Runtime.1.1, Version=1.1\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs.120, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsDesktop, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsIoT, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsMobile, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsTeam, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=11.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.1.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKManaged, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKNative, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.2.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform, Version=14.0 (TaskId:14)\n1>  Task Parameter:Prefer32Bit=True (TaskId:14)\n1>  Searching for SDK \"Microsoft.VCLibs, Version=14.0\":  (TaskId:14)\n1>  Found at search location \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\". (TaskId:14)\n1>    Reading SDK manifest file \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\SDKManifest.xml\". (TaskId:14)\n1>    Targeted configuration and architecture \"Debug|x86\" (TaskId:14)\n1>    Could not find \"FrameworkIdentity\" attribute \"FrameworkIdentity-Debug-x86\" in the SDK manifest.  (TaskId:14)\n1>    Found \"FrameworkIdentity\" attribute \"Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\" in the SDK manifest. (TaskId:14)\n1>    Found \"APPX\" location attribute \"AppX-Debug-x86=.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\" in the SDK manifest. (TaskId:14)\n1>    Found \"APPX\" location attribute \"AppX-Debug-x64=.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx\" in the SDK manifest. (TaskId:14)\n1>    Found \"APPX\" location attribute \"AppX-Debug-ARM=.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx\" in the SDK manifest. (TaskId:14)\n1>  Output Item(s):\n1>      ResolvedSDKReference=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:14)\n1>Done executing task \"ResolveSDKReference\". (TaskId:14)\n1>Done building target \"ResolveSDKReferences\" in project \"HelloUI.vcxproj\".: (TargetId:20)\n1>Target \"ResolveSDKReferences\" skipped. Previously built successfully.\n1>Target \"ExpandSDKReferences: (TargetId:21)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Using \"GetSDKReferenceFiles\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"GetSDKReferenceFiles\" (TaskId:15)\n1>  Task Parameter:\n1>      ResolvedSDKReferences=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:15)\n1>  Task Parameter:\n1>      ReferenceExtensions=\n1>          .winmd\n1>          .dll (TaskId:15)\n1>  Task Parameter:TargetSDKIdentifier=Windows (TaskId:15)\n1>  Task Parameter:TargetSDKVersion=10.0 (TaskId:15)\n1>  Enumerating SDK Reference \"Microsoft.VCLibs, Version=14.0\" from \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\". (TaskId:15)\n1>  Looking for references under \"References\\CommonConfiguration\\Neutral\\\". (TaskId:15)\n1>Done executing task \"GetSDKReferenceFiles\". (TaskId:15)\n1>Done building target \"ExpandSDKReferences\" in project \"HelloUI.vcxproj\".: (TargetId:21)\n1>Target \"ResolveNuGetPackageAssets\" skipped, due to false condition; ('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)')) was evaluated as ('true' == 'true' and exists('project.lock.json')).\n1>Target \"ResolveAssemblyReferences: (TargetId:22)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Added Item(s): _ReferenceInstalledAssemblyDirectory=C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>Set Property: ResolveAssemblyReferencesStateFile=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache\n1>Set Property: ResolveAssemblyReferencesSilent=false\n1>Using \"ResolveAssemblyReference\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ResolveAssemblyReference\" (TaskId:16)\n1>  Task Parameter:\n1>      Assemblies=\n1>          XamlCompositorCS\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true (TaskId:16)\n1>  Task Parameter:TargetFrameworkDirectories=C:\\Program Files (x86)\\Windows Kits\\10\\References (TaskId:16)\n1>  Task Parameter:CandidateAssemblyFiles=HelloUI_TemporaryKey.pfx (TaskId:16)\n1>  Task Parameter:\n1>      SearchPaths=\n1>          {CandidateAssemblyFiles}\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\n1>          {HintPathFromItem}\n1>          {TargetFrameworkDirectory}\n1>          {Registry:Software\\Microsoft\\,,AssemblyFoldersEx}\n1>          {GAC}\n1>          {RawFileName}\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\ (TaskId:16)\n1>  Task Parameter:\n1>      AllowedAssemblyExtensions=\n1>          .winmd\n1>          .dll\n1>          .exe (TaskId:16)\n1>  Task Parameter:\n1>      AllowedRelatedFileExtensions=\n1>          .pdb\n1>          .xml\n1>          .pri (TaskId:16)\n1>  Task Parameter:TargetProcessorArchitecture=x86 (TaskId:16)\n1>  Task Parameter:AutoUnify=False (TaskId:16)\n1>  Task Parameter:SupportsBindingRedirectGeneration=True (TaskId:16)\n1>  Task Parameter:FindDependencies=False (TaskId:16)\n1>  Task Parameter:FindSatellites=True (TaskId:16)\n1>  Task Parameter:FindSerializationAssemblies=True (TaskId:16)\n1>  Task Parameter:FindRelatedFiles=True (TaskId:16)\n1>  Task Parameter:Silent=False (TaskId:16)\n1>  Task Parameter:StateFile=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:16)\n1>  Task Parameter:FullTargetFrameworkSubsetNames=Full (TaskId:16)\n1>  Task Parameter:\n1>      ResolvedSDKReferences=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:16)\n1>  Task Parameter:WarnOrErrorOnTargetArchitectureMismatch=Error (TaskId:16)\n1>  TargetFrameworkMoniker: (TaskId:16)\n1>       (TaskId:16)\n1>  TargetFrameworkMonikerDisplayName: (TaskId:16)\n1>       (TaskId:16)\n1>  TargetedRuntimeVersion: (TaskId:16)\n1>       (TaskId:16)\n1>  Assemblies: (TaskId:16)\n1>      XamlCompositorCS (TaskId:16)\n1>          HintPath = 'C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd' (TaskId:16)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd (TaskId:16)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd (TaskId:16)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd (TaskId:16)\n1>  AssemblyFiles: (TaskId:16)\n1>  CandidateAssemblyFiles: (TaskId:16)\n1>  TargetFrameworkDirectories: (TaskId:16)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References (TaskId:16)\n1>  InstalledAssemblyTables: (TaskId:16)\n1>  IgnoreInstalledAssemblyTable: (TaskId:16)\n1>      False (TaskId:16)\n1>  SearchPaths: (TaskId:16)\n1>      {CandidateAssemblyFiles} (TaskId:16)\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib (TaskId:16)\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib (TaskId:16)\n1>      {HintPathFromItem} (TaskId:16)\n1>      {TargetFrameworkDirectory} (TaskId:16)\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx} (TaskId:16)\n1>      {GAC} (TaskId:16)\n1>      {RawFileName} (TaskId:16)\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\ (TaskId:16)\n1>  AllowedAssemblyExtensions: (TaskId:16)\n1>      .winmd (TaskId:16)\n1>      .dll (TaskId:16)\n1>      .exe (TaskId:16)\n1>  AllowedRelatedFileExtensions: (TaskId:16)\n1>      .pdb (TaskId:16)\n1>      .xml (TaskId:16)\n1>      .pri (TaskId:16)\n1>  AppConfigFile: (TaskId:16)\n1>       (TaskId:16)\n1>  AutoUnify: (TaskId:16)\n1>      False (TaskId:16)\n1>  CopyLocalDependenciesWhenParentReferenceInGac: (TaskId:16)\n1>      True (TaskId:16)\n1>  FindDependencies: (TaskId:16)\n1>      False (TaskId:16)\n1>  TargetProcessorArchitecture: (TaskId:16)\n1>      x86 (TaskId:16)\n1>  StateFile: (TaskId:16)\n1>      Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:16)\n1>  InstalledAssemblySubsetTables: (TaskId:16)\n1>  IgnoreInstalledAssemblySubsetTable: (TaskId:16)\n1>      False (TaskId:16)\n1>  TargetFrameworkSubsets: (TaskId:16)\n1>  FullTargetFrameworkSubsetNames: (TaskId:16)\n1>      Full (TaskId:16)\n1>  ProfileName: (TaskId:16)\n1>       (TaskId:16)\n1>  FullFrameworkFolders: (TaskId:16)\n1>  LatestTargetFrameworkDirectories: (TaskId:16)\n1>  ProfileTablesLocation: (TaskId:16)\n1>  Primary reference \"XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:16)\n1>      Resolved file path is \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\". (TaskId:16)\n1>      Reference found at search path location \"{HintPathFromItem}\". (TaskId:16)\n1>          For SearchPath \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\". (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.winmd\", but it didn't exist. (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.dll\", but it didn't exist. (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.exe\", but it didn't exist. (TaskId:16)\n1>          For SearchPath \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\". (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.winmd\", but it didn't exist. (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.dll\", but it didn't exist. (TaskId:16)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.exe\", but it didn't exist. (TaskId:16)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4;CLR v4.0.30319\". (TaskId:16)\n1>      This reference is a WinMDFile. (TaskId:16)\n1>  Primary reference \"Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:16)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\". (TaskId:16)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:16)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:16)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:16)\n1>      This reference is a WinMDFile. (TaskId:16)\n1>  Primary reference \"Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:16)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\". (TaskId:16)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:16)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:16)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:16)\n1>      This reference is a WinMDFile. (TaskId:16)\n1>  Primary reference \"Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:16)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\". (TaskId:16)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:16)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:16)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:16)\n1>      This reference is a WinMDFile. (TaskId:16)\n1>  Output Item(s):\n1>      ReferencePath=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:16)\n1>  Output Item(s):\n1>      _ResolveAssemblyReferenceResolvedFiles=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:16)\n1>  Output Item(s):\n1>      ReferenceCopyLocalPaths=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:16)\n1>  Output Item(s): FileWrites=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:16)\n1>  Output Property: DependsOnSystemRuntime=True (TaskId:16)\n1>Done executing task \"ResolveAssemblyReference\". (TaskId:16)\n1>Done building target \"ResolveAssemblyReferences\" in project \"HelloUI.vcxproj\".: (TargetId:22)\n1>Target \"GenerateBindingRedirects\" skipped, due to false condition; ('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true') was evaluated as ('' == 'true' and 'true' == 'true').\n1>Target \"GenerateBindingRedirectsUpdateAppConfig\" skipped, due to false condition; ('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)')) was evaluated as ('' == 'true' and 'true' == 'true' and Exists('Debug\\HelloUI.vcxproj.HelloUI.exe.config')).\n1>Target \"ResolveComReferences\" skipped, due to false condition; ('@(COMReference)'!='' or '@(COMFileReference)'!='') was evaluated as (''!='' or ''!='').\n1>Target \"AfterResolveReferences: (TargetId:23)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Done building target \"AfterResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:23)\n1>Target \"ResolveTestReferences\" skipped, due to false condition; ('@(Shadow)'!='') was evaluated as (''!='').\n1>Target \"ImplicitlyExpandTargetFramework\" skipped, due to false condition; ('$(ImplicitlyExpandTargetFramework)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ImplicitlyExpandTargetPlatform\" skipped, due to false condition; ('$(ImplicitlyExpandTargetPlatform)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ResolveReferences: (TargetId:24)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Done building target \"ResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:24)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"InitializeBuildStatus: (TargetId:25)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Using \"ReadLinesFromFile\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ReadLinesFromFile\" (TaskId:17)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.lastbuildstate (TaskId:17)\n1>  Output Item(s):\n1>      _ReadProjectStateLine=\n1>          #TargetFrameworkVersion=:PlatformToolSet=v140:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit\n1>          Debug|Win32|C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI| (TaskId:17)\n1>Done executing task \"ReadLinesFromFile\". (TaskId:17)\n1>Set Property: ProjectStateLine=#TargetFrameworkVersion=:PlatformToolSet=v140:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit\n1>Set Property: StateBuildType=Build\n1>Using \"WriteLinesToFile\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"WriteLinesToFile\" (TaskId:18)\n1>  Task Parameter:Overwrite=True (TaskId:18)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.lastbuildstate (TaskId:18)\n1>  Task Parameter:\n1>      Lines=\n1>          #TargetFrameworkVersion=:PlatformToolSet=v140:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit\n1>          Debug|Win32|C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI| (TaskId:18)\n1>Done executing task \"WriteLinesToFile\". (TaskId:18)\n1>Using \"Touch\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Touch\" (TaskId:19)\n1>  Task Parameter:AlwaysCreate=True (TaskId:19)\n1>  Task Parameter:Files=Debug\\HelloUI.tlog\\unsuccessfulbuild (TaskId:19)\n1>  Touching \"Debug\\HelloUI.tlog\\unsuccessfulbuild\". (TaskId:19)\n1>Done executing task \"Touch\". (TaskId:19)\n1>Done building target \"InitializeBuildStatus\" in project \"HelloUI.vcxproj\".: (TargetId:25)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence\" skipped. Previously built successfully.\n1>Target \"BuildGenerateSourcesTraverse: (TargetId:26)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildGenerateSources\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '' and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true') was evaluated as ('' == 'true' and '' != '' and '' != '' and '' == 'true').\n1>Done building target \"BuildGenerateSourcesTraverse\" in project \"HelloUI.vcxproj\".: (TargetId:26)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"BeforeBuildGenerateSources: (TargetId:27)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"BeforeBuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:27)\n1>Target \"PreBuildEvent: (TargetId:28)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Task \"Message\" skipped, due to false condition; ('%(PreBuildEvent.Message)' != '' and '%(PreBuildEvent.Command)' != '') was evaluated as ('' != '' and '' != '').\n1>Task \"Exec\" skipped, due to false condition; ('%(PreBuildEvent.Command)' != '') was evaluated as ('' != '').\n1>Done building target \"PreBuildEvent\" in project \"HelloUI.vcxproj\".: (TargetId:28)\n1>Target \"CustomBuild\" skipped, due to false condition; ('@(CustomBuild)' != '') was evaluated as ('' != '').\n1>Target \"FxCompile\" skipped, due to false condition; ('@(FxCompile)' != '') was evaluated as ('' != '').\n1>Target \"Xsd\" skipped, due to false condition; ('@(Xsd)' != '') was evaluated as ('' != '').\n1>Target \"_Xsd: (TargetId:29)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"_Xsd\" in project \"HelloUI.vcxproj\".: (TargetId:29)\n1>Target \"MakeDirsForMidl: (TargetId:30)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Set Property: Midl_OutputDir=\n1>Task \"Makedir\" (TaskId:20)\n1>Done executing task \"Makedir\". (TaskId:20)\n1>Done building target \"MakeDirsForMidl\" in project \"HelloUI.vcxproj\".: (TargetId:30)\n1>Target \"Midl\" skipped, due to false condition; ('@(Midl)' != '') was evaluated as ('' != '').\n1>Target \"CustomBuild\" skipped, due to false condition; ('@(CustomBuild)' != '') was evaluated as ('' != '').\n1>Target \"FxCompile\" skipped, due to false condition; ('@(FxCompile)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs: (TargetId:31)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Set Property: Midl_OutputDir=\n1>Done building target \"ComputeMIDLGeneratedCompileInputs\" in project \"HelloUI.vcxproj\".: (TargetId:31)\n1>Target \"AfterMidl: (TargetId:32)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Done building target \"AfterMidl\" in project \"HelloUI.vcxproj\".: (TargetId:32)\n1>Target \"_Midl: (TargetId:33)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"_Midl\" in project \"HelloUI.vcxproj\".: (TargetId:33)\n1>Target \"AfterBuildGenerateSources: (TargetId:34)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"AfterBuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:34)\n1>Target \"AfterBuildGenerateSourcesEvent: (TargetId:35)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"AfterBuildGenerateSourcesEvent\" in project \"HelloUI.vcxproj\".: (TargetId:35)\n1>Target \"_BuildGenerateSourcesAction: (TargetId:36)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildGenerateSources\" depends on it):\n1>Done building target \"_BuildGenerateSourcesAction\" in project \"HelloUI.vcxproj\".: (TargetId:36)\n1>Target \"BuildGenerateSources: (TargetId:37)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Done building target \"BuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:37)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence\" skipped. Previously built successfully.\n1>Target \"BuildCompileTraverse: (TargetId:38)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildCompile\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true') was evaluated as ('' == 'true' and '' != '' and '' != ''  and '' == 'true').\n1>Done building target \"BuildCompileTraverse\" in project \"HelloUI.vcxproj\".: (TargetId:38)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"MarkupCompilePass1\" skipped, due to false condition; ('@(Page)' != '' Or '@(ApplicationDefinition)' != '' ) was evaluated as ('' != '' Or '' != '' ).\n1>Target \"BeforeClCompile: (TargetId:39)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"BeforeClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:39)\n1>Target \"ComputeXamlGeneratedCompileInputs\" skipped, due to false condition; ('@(Page)@(ApplicationDefinition)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs\" skipped. Previously built successfully.\n1>Target \"ComputeCLInputPDBName: (TargetId:40)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"ComputeCLInputPDBName\" in project \"HelloUI.vcxproj\".: (TargetId:40)\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"ComputeReferenceCLInput: (TargetId:41)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Added Item(s):\n1>    WinMDReferenceToCompile=\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Added Item(s):\n1>    __ReferenceCopyLocalPaths=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Added Item(s): _ReferenceCopyLocalPaths=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>Task \"WriteLinesToFile\" (TaskId:21)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.write.1u.tlog (TaskId:21)\n1>  Task Parameter:\n1>      Lines=\n1>          ^C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd (TaskId:21)\n1>  Task Parameter:Encoding=Unicode (TaskId:21)\n1>Done executing task \"WriteLinesToFile\". (TaskId:21)\n1>Task \"Message\" skipped, due to false condition; ('$(_REFERENCE_DEBUG)'=='true') was evaluated as (''=='true').\n1>Removed Item(s): _ReferenceCopyLocalPaths=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>Removed Item(s):\n1>    __ReferenceCopyLocalPaths=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Done building target \"ComputeReferenceCLInput\" in project \"HelloUI.vcxproj\".: (TargetId:41)\n1>Target \"WarnCompileDuplicatedFilename: (TargetId:42)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Task \"VCMessage\" skipped, due to false condition; ('%(ClCompile.ExcludedFromBuild)' != 'true' and '%(Filename)%(Extension)' != '@(ClCompile->'%(Filename)%(Extension)')' and '%(ObjectFileName)' == '@(ClCompile->Metadata(ObjectFileName)->Distinct())') was evaluated as ('' != 'true' and 'ConsumeRuntimeComponent.cpp' != 'ConsumeRuntimeComponent.cpp' and 'Debug\\' == 'Debug\\').\n1>Done building target \"WarnCompileDuplicatedFilename\" in project \"HelloUI.vcxproj\".: (TargetId:42)\n1>Target \"FixupCLCompileOptions: (TargetId:43)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"FixupCLCompileOptions\" in project \"HelloUI.vcxproj\".: (TargetId:43)\n1>Target \"MakeDirsForCl: (TargetId:44)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Task \"MakeDir\" (TaskId:22)\n1>  Task Parameter:\n1>      Directories=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug (TaskId:22)\n1>Done executing task \"MakeDir\". (TaskId:22)\n1>Removed Item(s):\n1>    ClDirsToMake=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Done building target \"MakeDirsForCl\" in project \"HelloUI.vcxproj\".: (TargetId:44)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"SetBuildDefaultEnvironmentVariables\" skipped. Previously built successfully.\n1>Target \"SetUserMacroEnvironmentVariables\" skipped, due to false condition; ('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' != '' and '' != 'true').\n1>Target \"_SelectedFiles: (TargetId:45)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"SelectClCompile\" depends on it):\n1>Done building target \"_SelectedFiles\" in project \"HelloUI.vcxproj\".: (TargetId:45)\n1>Target \"ComputeXamlGeneratedCompileInputs\" skipped, due to false condition; ('@(Page)@(ApplicationDefinition)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs\" skipped. Previously built successfully.\n1>Target \"ComputeCLInputPDBName\" skipped. Previously built successfully.\n1>Target \"ComputeReferenceCLInput\" skipped. Previously built successfully.\n1>Target \"WarnCompileDuplicatedFilename\" skipped. Previously built successfully.\n1>Target \"FixupCLCompileOptions\" skipped. Previously built successfully.\n1>Target \"_SelectedFiles\" skipped. Previously built successfully.\n1>Target \"SelectCustomBuild: (TargetId:46)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"SelectClCompile\" depends on it):\n1>Done building target \"SelectCustomBuild\" in project \"HelloUI.vcxproj\".: (TargetId:46)\n1>Target \"SelectClCompile: (TargetId:47)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ClCompile\" depends on it):\n1>Done building target \"SelectClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:47)\n1>Target \"GenerateTargetFrameworkMonikerAttribute\" skipped, due to false condition; ('$(GenerateTargetFrameworkAttribute)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ManagedIncrementalBuildPreProcessDependencyGraph\" skipped, due to false condition; ('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True') was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp' != '' and 'false' == 'True').\n1>Target \"ClCompile: (TargetId:48)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Set Property: CLToolArchitecture=Native32Bit\n1>Set Property: CLDeleteOutputOnExecute=true\n1>Task \"Delete\" skipped, due to false condition; ('%(ClCompile.DebugInformationFormat)' != '' and '%(ClCompile.DebugInformationFormat)' != 'None' and '%(ClCompile.DebugInformationFormat)' != 'OldStyle' and '%(ClCompile.ProgramDataBaseFileName)' != '' and !Exists(%(ClCompile.ProgramDataBaseFileName))) was evaluated as ('ProgramDatabase' != '' and 'ProgramDatabase' != 'None' and 'ProgramDatabase' != 'OldStyle' and 'Debug\\vc140.pdb' != '' and !Exists(Debug\\vc140.pdb)).\n1>Task \"CL\" skipped, due to false condition; ('%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.ExcludedFromBuild)'!='true' and '%(ClCompile.CompilerIteration)' == '') was evaluated as ('NotUsing' == 'Create' and ''!='true' and '' == '').\n1>Using \"CL\" task from assembly \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll\".\n1>Task \"CL\" (TaskId:23)\n1>  Task Parameter:BuildingInIde=True (TaskId:23)\n1>  Task Parameter:\n1>      Sources=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp\n1>                  AcceptableNonZeroExitCodes=\n1>                  AdditionalIncludeDirectories=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\;Generated Files\\;Debug\\;;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  AdditionalOptions=/bigobj\n1>                  AssemblerListingLocation=\n1>                  AssemblerOutput=NoListing\n1>                  BasicRuntimeChecks=Default\n1>                  BrowseInformation=false\n1>                  BrowseInformationFile=Debug\\\n1>                  BufferSecurityCheck=true\n1>                  CallingConvention=Cdecl\n1>                  CompileAs=CompileAsCpp\n1>                  CompileAsWinRT=true\n1>                  DebugInformationFormat=ProgramDatabase\n1>                  DisableLanguageExtensions=false\n1>                  DisableSpecificWarnings=4453;28204\n1>                  EnableEnhancedInstructionSet=NotSet\n1>                  EnableFiberSafeOptimizations=false\n1>                  EnablePREfast=false\n1>                  ErrorReporting=Prompt\n1>                  ExceptionHandling=Sync\n1>                  ExpandAttributedSource=false\n1>                  FavorSizeOrSpeed=Neither\n1>                  FloatingPointModel=Precise\n1>                  ForceConformanceInForLoopScope=true\n1>                  ForcedIncludeFiles=\n1>                  ForcedUsingFiles=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\references\\platform.winmd;;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  FunctionLevelLinking=true\n1>                  GenerateXMLDocumentationFiles=false\n1>                  IgnoreStandardIncludePath=false\n1>                  ImpLibCompiled=\n1>                  InlineFunctionExpansion=Default\n1>                  IntrinsicFunctions=true\n1>                  LibCompiled=\n1>                  LinkCompiled=true\n1>                  MinimalRebuild=false\n1>                  MinimalRebuildFromTracking=true\n1>                  MultiProcessorCompilation=true\n1>                  ObjectFileName=Debug\\\n1>                  OmitDefaultLibName=false\n1>                  OmitFramePointers=false\n1>                  Optimization=MaxSpeed\n1>                  PrecompiledHeader=NotUsing\n1>                  PrecompiledHeaderFile=\n1>                  PrecompiledHeaderOutputFile=\n1>                  PreprocessKeepComments=false\n1>                  PreprocessorDefinitions=_UNICODE;UNICODE;;WINAPI_FAMILY=WINAPI_FAMILY_APP;__WRL_NO_DEFAULT_LIB\n1>                  PreprocessSuppressLineNumbers=false\n1>                  PreprocessToFile=false\n1>                  ProgramDataBaseFileName=Debug\\vc140.pdb\n1>                  RemoveUnreferencedCodeData=true\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  SDLCheck=true\n1>                  ShowIncludes=false\n1>                  SmallerTypeCheck=false\n1>                  StructMemberAlignment=Default\n1>                  SuppressStartupBanner=true\n1>                  TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                  TreatWarningAsError=false\n1>                  TreatWChar_tAsBuiltInType=true\n1>                  UndefineAllPreprocessorDefinitions=false\n1>                  UseFullPaths=false\n1>                  UseUnicodeForAssemblerListing=\n1>                  WarningLevel=Level3\n1>                  WholeProgramOptimization=false\n1>                  WinRTNoStdLib=true\n1>                  XMLDocumentationFileName=Debug\\ (TaskId:23)\n1>  Task Parameter:\n1>      AdditionalIncludeDirectories=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>          Generated Files\\\n1>          Debug\\\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude (TaskId:23)\n1>  Task Parameter:AdditionalOptions=/bigobj  (TaskId:23)\n1>  Task Parameter:AssemblerOutput=NoListing (TaskId:23)\n1>  Task Parameter:BasicRuntimeChecks=Default (TaskId:23)\n1>  Task Parameter:BrowseInformation=False (TaskId:23)\n1>  Task Parameter:BrowseInformationFile=Debug\\ (TaskId:23)\n1>  Task Parameter:BufferSecurityCheck=true (TaskId:23)\n1>  Task Parameter:CallingConvention=Cdecl (TaskId:23)\n1>  Task Parameter:CompileAsWinRT=True (TaskId:23)\n1>  Task Parameter:CompileAs=CompileAsCpp (TaskId:23)\n1>  Task Parameter:DebugInformationFormat=ProgramDatabase (TaskId:23)\n1>  Task Parameter:DisableLanguageExtensions=False (TaskId:23)\n1>  Task Parameter:\n1>      DisableSpecificWarnings=\n1>          4453\n1>          28204 (TaskId:23)\n1>  Task Parameter:EnableEnhancedInstructionSet=NotSet (TaskId:23)\n1>  Task Parameter:EnableFiberSafeOptimizations=False (TaskId:23)\n1>  Task Parameter:EnablePREfast=False (TaskId:23)\n1>  Task Parameter:ErrorReporting=Prompt (TaskId:23)\n1>  Task Parameter:ExceptionHandling=Sync (TaskId:23)\n1>  Task Parameter:\n1>      ExcludedInputPaths=\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>          C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>          C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\\n1>          C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86 (TaskId:23)\n1>  Task Parameter:ExpandAttributedSource=False (TaskId:23)\n1>  Task Parameter:FavorSizeOrSpeed=Neither (TaskId:23)\n1>  Task Parameter:FloatingPointModel=Precise (TaskId:23)\n1>  Task Parameter:ForceConformanceInForLoopScope=True (TaskId:23)\n1>  Task Parameter:\n1>      ForcedUsingFiles=\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\references\\platform.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd (TaskId:23)\n1>  Task Parameter:FunctionLevelLinking=True (TaskId:23)\n1>  Task Parameter:GenerateXMLDocumentationFiles=False (TaskId:23)\n1>  Task Parameter:IgnoreStandardIncludePath=False (TaskId:23)\n1>  Task Parameter:InlineFunctionExpansion=Default (TaskId:23)\n1>  Task Parameter:IntrinsicFunctions=True (TaskId:23)\n1>  Task Parameter:MinimalRebuild=False (TaskId:23)\n1>  Task Parameter:MultiProcessorCompilation=True (TaskId:23)\n1>  Task Parameter:ObjectFileName=Debug\\ (TaskId:23)\n1>  Task Parameter:OmitDefaultLibName=False (TaskId:23)\n1>  Task Parameter:OmitFramePointers=False (TaskId:23)\n1>  Task Parameter:Optimization=MaxSpeed (TaskId:23)\n1>  Task Parameter:PrecompiledHeader=NotUsing (TaskId:23)\n1>  Task Parameter:PreprocessKeepComments=False (TaskId:23)\n1>  Task Parameter:\n1>      PreprocessorDefinitions=\n1>          _UNICODE\n1>          UNICODE\n1>          WINAPI_FAMILY=WINAPI_FAMILY_APP\n1>          WRL_NO_DEFAULT_LIB (TaskId:23)\n1>  Task Parameter:PreprocessSuppressLineNumbers=False (TaskId:23)\n1>  Task Parameter:PreprocessToFile=False (TaskId:23)\n1>  Task Parameter:ProgramDataBaseFileName=Debug\\vc140.pdb (TaskId:23)\n1>  Task Parameter:RemoveUnreferencedCodeData=True (TaskId:23)\n1>  Task Parameter:RuntimeLibrary=MultiThreadedDebugDLL (TaskId:23)\n1>  Task Parameter:SDLCheck=True (TaskId:23)\n1>  Task Parameter:ShowIncludes=False (TaskId:23)\n1>  Task Parameter:SmallerTypeCheck=False (TaskId:23)\n1>  Task Parameter:StructMemberAlignment=Default (TaskId:23)\n1>  Task Parameter:SuppressStartupBanner=True (TaskId:23)\n1>  Task Parameter:TreatWarningAsError=False (TaskId:23)\n1>  Task Parameter:TreatWChar_tAsBuiltInType=True (TaskId:23)\n1>  Task Parameter:UndefineAllPreprocessorDefinitions=False (TaskId:23)\n1>  Task Parameter:UseFullPaths=False (TaskId:23)\n1>  Task Parameter:WarningLevel=Level3 (TaskId:23)\n1>  Task Parameter:WholeProgramOptimization=False (TaskId:23)\n1>  Task Parameter:WinRTNoStdLib=True (TaskId:23)\n1>  Task Parameter:XMLDocumentationFileName=Debug\\ (TaskId:23)\n1>  Task Parameter:TrackerLogDirectory=Debug\\HelloUI.tlog\\ (TaskId:23)\n1>  Task Parameter:TrackFileAccess=True (TaskId:23)\n1>  Task Parameter:MinimalRebuildFromTracking=True (TaskId:23)\n1>  Task Parameter:ToolArchitecture=Native32Bit (TaskId:23)\n1>  Task Parameter:DeleteOutputOnExecute=True (TaskId:23)\n1>  Task Parameter:YieldDuringToolExecution=True (TaskId:23)\n1>  Using cached input dependency table built from: (TaskId:23)\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI.tlog\\CL.read.1.tlog (TaskId:23)\n1>  Outputs for C:\\USERS\\MEHME\\DOWNLOADS\\WINOBJC\\MSVC\\CONSUMERUNTIMECOMPONENT.CPP: (TaskId:23)\n1>      C:\\USERS\\MEHME\\DOWNLOADS\\WINOBJC\\SAMPLES\\HELLOUI\\HELLOUI.VSIMPORTER\\HELLOUI-WINSTORE10\\DEBUG\\CONSUMERUNTIMECOMPONENT.OBJ (TaskId:23)\n1>  All outputs are up-to-date. (TaskId:23)\n1>Done executing task \"CL\". (TaskId:23)\n1>Done building target \"ClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:48)\n1>Target \"ManagedIncrementalBuildPostProcessDependencyGraph\" skipped, due to false condition; ('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True') was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp' != '' and 'false' == 'True').\n1>Target \"AfterClCompile: (TargetId:49)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"AfterClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:49)\n1>Target \"_ClCompile: (TargetId:50)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Done building target \"_ClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:50)\n1>Target \"_ResGen\" skipped, due to false condition; ('@(EmbeddedResource)'!='') was evaluated as (''!='').\n1>Target \"BeforeResourceCompile: (TargetId:51)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Done building target \"BeforeResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:51)\n1>Target \"MakeDirsForResourceCompile: (TargetId:52)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Task \"MakeDir\" (TaskId:24)\n1>Done executing task \"MakeDir\". (TaskId:24)\n1>Done building target \"MakeDirsForResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:52)\n1>Target \"ResourceCompile\" skipped, due to false condition; ('@(ResourceCompile)' != '') was evaluated as ('' != '').\n1>Target \"AfterResourceCompile: (TargetId:53)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Done building target \"AfterResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:53)\n1>Target \"_ResourceCompile: (TargetId:54)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Done building target \"_ResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:54)\n1>Target \"_ImpLib\" skipped, due to false condition; ('$(ImpLibCompiled)' == 'true') was evaluated as ('' == 'true').\n1>Target \"_Lib\" skipped, due to false condition; ('$(LibCompiled)' == 'true') was evaluated as ('' == 'true').\n1>Target \"_SelectedFiles\" skipped. Previously built successfully.\n1>Target \"ComputeClangOptions: (TargetId:55)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"MakeDirsForClang\" depends on it):\n1>Done building target \"ComputeClangOptions\" in project \"HelloUI.vcxproj\".: (TargetId:55)\n1>Target \"MakeDirsForClang: (TargetId:56)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClangCompile\" depends on it):\n1>Task \"MakeDir\" (TaskId:25)\n1>  Task Parameter:Directories=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug (TaskId:25)\n1>Done executing task \"MakeDir\". (TaskId:25)\n1>Done building target \"MakeDirsForClang\" in project \"HelloUI.vcxproj\".: (TargetId:56)\n1>Target \"GenerateCombinedHMap\" skipped, due to false condition; ('$(CombinedHMapRequired)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ComputeProjectHMap: (TargetId:57)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateProjectHMap\" depends on it):\n1>Added Item(s): HeaderMap=Debug\\HelloUI-project\n1>Added Item(s): HeaderMapEntry=Empty\n1>Done building target \"ComputeProjectHMap\" in project \"HelloUI.vcxproj\".: (TargetId:57)\n1>Target \"GenerateProjectHMap: (TargetId:58)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateHeaderMaps\" depends on it):\n1>Building target \"GenerateProjectHMap\" completely.\n1>Input file \"Empty\" does not exist.\n1>Task \"WriteLinesToFile\" (TaskId:26)\n1>  Task Parameter:File=Debug\\HelloUI-project.txt (TaskId:26)\n1>  Task Parameter:Lines=Empty (TaskId:26)\n1>  Task Parameter:Overwrite=True (TaskId:26)\n1>  Task Parameter:Encoding=ASCII (TaskId:26)\n1>Done executing task \"WriteLinesToFile\". (TaskId:26)\n1>Removed Item(s): HeaderMapEntry=Empty\n1>Done building target \"GenerateProjectHMap\" in project \"HelloUI.vcxproj\".: (TargetId:58)\n1>Target \"WriteHeaderMaps: (TargetId:59)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateHeaderMaps\" depends on it):\n1>Building target \"WriteHeaderMaps\" completely.\n1>Input file \"Debug\\HelloUI-project.txt\" is newer than output file \"Debug\\HelloUI-project.hmap\".\n1>Using \"Exec\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Exec\" (TaskId:27)\n1>  Task Parameter:Command=\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\bin\\hmapmaker.exe\" \"Debug\\HelloUI-project.txt\" \"Debug\\HelloUI-project.hmap\" (TaskId:27)\n1>Done executing task \"Exec\". (TaskId:27)\n1>Done building target \"WriteHeaderMaps\" in project \"HelloUI.vcxproj\".: (TargetId:59)\n1>Target \"GenerateHeaderMaps: (TargetId:60)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClangCompile\" depends on it):\n1>Done building target \"GenerateHeaderMaps\" in project \"HelloUI.vcxproj\".: (TargetId:60)\n1>Target \"ComputeClangOptions\" skipped. Previously built successfully.\n1>Target \"_ClangCompile: (TargetId:61)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Using \"Clang\" task from assembly \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ClangCompileTask.dll\".\n1>Task \"Clang\" (TaskId:28)\n1>  Task Parameter:\n1>      InternalSystemIncludePaths=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>          C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude (TaskId:28)\n1>  Task Parameter:AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] AdditionalOptions\n1>  Task Parameter:CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] AdditionalOptions\n1>  Task Parameter:CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog (TaskId:28)\n1>  Task Parameter:CompileAs=CompileAsObjC (TaskId:28)\n1>  Task Parameter:DebugInformation=True (TaskId:28)\n1>  Task Parameter:ExceptionHandling=True (TaskId:28)\n1>  Task Parameter:HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\" (TaskId:28)\n1>  Task Parameter:IncludePaths=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat (TaskId:28)\n1>  Task Parameter:\n1>      Input=\n1>          ....\\HelloUI\\HelloUI.m\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false\n1>          ....\\HelloUI\\main.m\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false (TaskId:28)\n1>  Task Parameter:LLVMDirectory=C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\ (TaskId:28)\n1>  Task Parameter:ObjectiveCARC=True (TaskId:28)\n1>  Task Parameter:ObjectFileName=Debug\\ (TaskId:28)\n1>  Task Parameter:OptimizationLevel=Disabled (TaskId:28)\n1>  Task Parameter:PreprocessorDefinitions=DEBUG=1 (TaskId:28)\n1>  Task Parameter:ProjectFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj (TaskId:28)\n1>  Task Parameter:RuntimeLibrary=MultiThreadedDebugDLL (TaskId:28)\n1>  Task Parameter:ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog (TaskId:28)\n1>  Task Parameter:AdditionalOptions=  -D__ISLANDWOOD_COMPAT (TaskId:28)\n1>  ....\\HelloUI\\HelloUI.m (TaskId:28)\n1>CLANG : error : error reading 'static'\n1>CLANG : error : error reading '19'\n1>CLANG : error : error reading 'Microsoft.Build.Framework.ITaskItem[]'\n1>  The command exited with code 1. (TaskId:28)\n1>  Output Item(s):\n1>      ClangOutputs=\n1>          Debug\\HelloUI_ED87E5B6.obj\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\HelloUI_ED87E5B6.obj\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OriginalItemSpec=....\\HelloUI\\HelloUI.m\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false\n1>          Debug\\main_3117315F.obj\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\main_3117315F.obj\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OriginalItemSpec=....\\HelloUI\\main.m\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false (TaskId:28)\n1>Done executing task \"Clang\" -- FAILED. (TaskId:28)\n1>Done building target \"_ClangCompile\" in project \"HelloUI.vcxproj\" -- FAILED.: (TargetId:61)\n1>\n1>Project Performance Summary:\n1>      156 ms  C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj   1 calls\n1>                156 ms  Build                                      1 calls\n1>\n1>Target Performance Summary:\n1>        0 ms  _BuildGenerateSourcesAction                1 calls\n1>        0 ms  ResolveSDKReferences                       1 calls\n1>        0 ms  _CheckForInvalidConfigurationAndPlatform   1 calls\n1>        0 ms  ResolveReferences                          1 calls\n1>        0 ms  BuildGenerateSourcesTraverse               1 calls\n1>        0 ms  InitializeBuildStatus                      1 calls\n1>        0 ms  AssignProjectConfiguration                 1 calls\n1>        0 ms  _PrepareForBuild                           1 calls\n1>        0 ms  PreBuildEvent                              1 calls\n1>        0 ms  MakeDirsForResourceCompile                 1 calls\n1>        0 ms  ComputeMIDLGeneratedCompileInputs          1 calls\n1>        0 ms  SelectClCompile                            1 calls\n1>        0 ms  BuildGenerateSources                       1 calls\n1>        0 ms  ComputeProjectHMap                         1 calls\n1>        0 ms  ComputeCLInputPDBName                      1 calls\n1>        0 ms  ResolveProjectReferences                   1 calls\n1>        0 ms  MakeDirsForMidl                            1 calls\n1>        0 ms  GetFrameworkPaths                          1 calls\n1>        0 ms  FixupCLCompileOptions                      1 calls\n1>        0 ms  _Midl                                      1 calls\n1>        0 ms  AfterResolveReferences                     1 calls\n1>        0 ms  MakeDirsForCl                              1 calls\n1>        0 ms  AfterBuildGenerateSources                  1 calls\n1>        0 ms  BuildCompileTraverse                       1 calls\n1>        0 ms  _ResourceCompile                           1 calls\n1>        0 ms  WarnCompileDuplicatedFilename              1 calls\n1>        0 ms  GetReferenceAssemblyPaths                  1 calls\n1>        0 ms  ComputeClangOptions                        1 calls\n1>        0 ms  SelectCustomBuild                          1 calls\n1>        0 ms  MakeDirsForClang                           1 calls\n1>        0 ms  UAP_PlatformPrepareForBuild                1 calls\n1>        0 ms  BeforeClCompile                            1 calls\n1>        0 ms  ComputeCrtSDKReference                     1 calls\n1>        0 ms  ModifyUnitTestPlatformVersion              1 calls\n1>        0 ms  _SelectedFiles                             1 calls\n1>        0 ms  GenerateHeaderMaps                         1 calls\n1>        0 ms  BeforeBuildGenerateSources                 1 calls\n1>        0 ms  ExpandSDKReferences                        1 calls\n1>        0 ms  GetResolvedWinMD                           1 calls\n1>        0 ms  BeforeResolveReferences                    1 calls\n1>        0 ms  AfterBuildGenerateSourcesEvent             1 calls\n1>        0 ms  SetBuildDefaultEnvironmentVariables        1 calls\n1>        0 ms  _ClCompile                                 1 calls\n1>        0 ms  AfterClCompile                             1 calls\n1>        0 ms  AfterMidl                                  1 calls\n1>        0 ms  _SplitProjectReferencesByFileExistence     1 calls\n1>        0 ms  GenerateProjectHMap                        1 calls\n1>        0 ms  PrepareForBuild                            1 calls\n1>        0 ms  _PrepareForReferenceResolution             1 calls\n1>        0 ms  _Xsd                                       1 calls\n1>        0 ms  AfterResourceCompile                       1 calls\n1>        0 ms  BeforeResourceCompile                      1 calls\n1>        0 ms  SetCABuildNativeEnvironmentVariables       1 calls\n1>       16 ms  PlatformPrepareForBuild                    1 calls\n1>       16 ms  ClCompile                                  1 calls\n1>       16 ms  ComputeReferenceCLInput                    1 calls\n1>       16 ms  ResolveAssemblyReferences                  1 calls\n1>       31 ms  _ClangCompile                              1 calls\n1>       31 ms  GetInstalledSDKLocations                   1 calls\n1>       31 ms  WriteHeaderMaps                            1 calls\n1>\n1>Task Performance Summary:\n1>        0 ms  MakeDir                                    6 calls\n1>        0 ms  WriteLinesToFile                           3 calls\n1>        0 ms  SetEnv                                     4 calls\n1>        0 ms  Touch                                      1 calls\n1>        0 ms  GetSDKReferenceFiles                       1 calls\n1>        0 ms  SetEnvironmentVariable                     1 calls\n1>        0 ms  AssignProjectConfiguration                 1 calls\n1>        0 ms  ResolveSDKReference                        1 calls\n1>        0 ms  Message                                    2 calls\n1>        0 ms  ReadLinesFromFile                          1 calls\n1>       16 ms  CL                                         1 calls\n1>       16 ms  ResolveAssemblyReference                   1 calls\n1>       31 ms  Clang                                      1 calls\n1>       31 ms  GetInstalledSDKLocations                   2 calls\n1>       31 ms  Exec                                       1 calls\n1>\n1>Build FAILED.\n1>\n1>Time Elapsed 00:00:00.15\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n. @davelamb \n^C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI\\HelloUI.m\n -cc1 -triple i686-pc-windows-msvc -internal-isystem \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.6.1\\include\" -emit-obj -disable-free -main-file-name  -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file Microsoft.Build.Framework.ITaskItem[] -resource-dir \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.6.1\" -fdebug-compilation-dir  -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  -o \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI_ED87E5B6.obj\" -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char Microsoft.Build.Framework.ITaskItem[] -iquote\"Debug\\HelloUI-project.hmap\" -D_DEBUG -D_MT -D_DLL --dependent-lib=msvcrtd --dependent-lib=oldnames -O0 -mrelax-all -g -fexceptions -fobjc-exceptions -fcxx-exceptions -fobjc-arc -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\" -internal-isystem \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -internal-isystem \"C:\\Users\\mehme\\Downloads\\winobjc\\include\" -internal-isystem \"C:\\Users\\mehme\\Downloads\\winobjc\\include\\VCInclude\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\include\\compat\" -DDEBUG=1 -x objective-c  -MT \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI_ED87E5B6.obj\" -dependency-file \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI_ED87E5B6.obj.d\" -D__ISLANDWOOD_COMPAT\nOther files inside the folder are here\nhttps://onedrive.live.com/redir?resid=9F1CEE764999EC30!304506&authkey=!ANz4__9Jm2NXWJc&ithint=file%2czip\n. @davelamb same error, \n1>------ Rebuild All started: Project: HelloUI (HelloUI\\HelloUI), Configuration: Debug Win32 ------\n1>Build started 2.09.2015 22:57:50.\n1>Environment at start of build:\n1>ALLUSERSPROFILE = C:\\ProgramData\n1>ANDROID_HOME = E:\\AndroidSdk\n1>APPDATA = C:\\Users\\mehme\\AppData\\Roaming\n1>CommonProgramFiles = C:\\Program Files (x86)\\Common Files\n1>CommonProgramFiles(x86) = C:\\Program Files (x86)\\Common Files\n1>CommonProgramW6432 = C:\\Program Files\\Common Files\n1>COMPUTERNAME = DESKTOP-OTUSNEQ\n1>ComSpec = C:\\WINDOWS\\system32\\cmd.exe\n1>FPS_BROWSER_APP_PROFILE_STRING = Internet Explorer\n1>FPS_BROWSER_USER_PROFILE_STRING = Default\n1>HOMEDRIVE = C:\n1>HOMEPATH = \\Users\\mehme\n1>LOCALAPPDATA = C:\\Users\\mehme\\AppData\\Local\n1>LOGONSERVER = \\MicrosoftAccount\n1>MSBuildLoadMicrosoftTargetsReadOnly = true\n1>NUMBER_OF_PROCESSORS = 8\n1>OS = Windows_NT\n1>Path = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Users\\mehme.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Users\\mehme\\AppData\\Local\\atom\\bin\n1>PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\n1>PkgDefApplicationConfigFile = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\devenv.exe.config\n1>PROCESSOR_ARCHITECTURE = x86\n1>PROCESSOR_ARCHITEW6432 = AMD64\n1>PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9, GenuineIntel\n1>PROCESSOR_LEVEL = 6\n1>PROCESSOR_REVISION = 3a09\n1>ProgramData = C:\\ProgramData\n1>ProgramFiles = C:\\Program Files (x86)\n1>ProgramFiles(x86) = C:\\Program Files (x86)\n1>ProgramW6432 = C:\\Program Files\n1>PSModulePath = C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\\n1>PUBLIC = C:\\Users\\Public\n1>SESSIONNAME = Console\n1>SystemDrive = C:\n1>SystemRoot = C:\\WINDOWS\n1>TEMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>TMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>USERDOMAIN = DESKTOP-OTUSNEQ\n1>USERDOMAIN_ROAMINGPROFILE = DESKTOP-OTUSNEQ\n1>USERNAME = mehme\n1>USERPROFILE = C:\\Users\\mehme\n1>VisualStudioDir = C:\\Users\\mehme\\Documents\\Visual Studio 2015\n1>VisualStudioEdition = Microsoft Visual Studio Professional 2015\n1>VisualStudioVersion = 14.0\n1>VS110COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\\n1>VS120COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\\n1>VS140COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\\n1>VSLANG = 1033\n1>windir = C:\\WINDOWS\n1>\n1>Initial Properties:\n1>ApplicableDebuggers = AppHost\n1>_ApplicationTypeDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\Default.props\n1>_ApplicationTypePlatformFolderFound = true\n1>_ApplicationTypeRevisionDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Default.props\n1>_AppxMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll\n1>_AppxMSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\\n1>_BuildActionType = Build\n1>_BuildSuffix =\n1>:VCEnd\n1>_CheckDev11ToolsInstalled = true\n1>_CompatibilityIssuesCharacterSetIssue =\n1>_CompatibilityIssuesUseOfATLIssue = false\n1>_CompatibilityIssuesUseOfMFC = false\n1>_CoreRuntimeMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Build.Net.CoreRuntimeTask.dll\n1>_CppCommonExtensionTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\WindowsXaml\\v14.0\\Microsoft.Windows.UI.Xaml.Cpp.targets\n1>_CreateAppxBundleFilesDependsOn =\n1>      ;\n1>\n1>      _GetSdkToolPaths;\n1>      _ValidatePresenceOfAppxManifestItems;\n1>      _GetPackageProperties;\n1>\n1>      _GetOtherPlatformsToBundle;\n1>      _ProducePlatformSpecificBundleArtifactsForOtherPlatforms;\n1>\n1>      _GetPlatformSpecificBundleArtifacts;\n1>\n1>      _CreateBundle_CalculateInputsAndOutputs;\n1>      _CreateBundle;\n1>      _CreateBundle_AddFileWrites;\n1>\n1>      _CreateUploadBundle_CalculateInputsAndOutputs;\n1>      _CreateUploadBundle;\n1>      _CreateUploadBundle_AddFileWrites;\n1>\n1>      _CreateAppStoreBundleContainer_CalculateInputsAndOutputs;\n1>      _CreateAppStoreBundleContainer;\n1>      _CreateAppStoreBundleContainer_AddFileWrites;\n1>\n1>      _CreateTestLayout;\n1>      _AddWindowsInstallScriptToTestLayout;\n1>\n1>\n1>\n1>_CreateAppxBundlePlatformSpecificArtifactsDependsOn =\n1>\n1>\n1>      _GetPackageProperties;\n1>\n1>      _CreatePackageLayout_CalculateInputsAndOutputs;\n1>      _CreatePackageLayout;\n1>      _CreatePackageLayout_AddFileWrites;\n1>\n1>      _CreateUploadPackageLayout_CalculateInputsAndOutputs;\n1>      _CreateUploadPackageLayout;\n1>      _CreateUploadPackageLayout_AddFileWrites;\n1>\n1>      _GetDefaultResourceLanguage;\n1>\n1>      _CreatePriConfigXmlForSplitting;\n1>      _CreatePriConfigXmlForSplitting_AddFileWrites;\n1>\n1>      _CreateUploadPriConfigXmlForSplitting;\n1>      _CreateUploadPriConfigXmlForSplitting_AddFileWrites;\n1>\n1>      _SplitResourcesPri_CalculateInputsAndOutputs;\n1>      _SplitResourcesPri;\n1>      _SplitResourcesPri_AddFileWrites;\n1>\n1>      _SplitUploadResourcesPri_CalculateInputsAndOutputs;\n1>      _SplitUploadResourcesPri;\n1>      _SplitUploadResourcesPri_AddFileWrites;\n1>\n1>      _ExpandMainPriFile;\n1>      _ValidateAppxPackage;\n1>\n1>      _CreatePriConfigXmlForMainPackageFileMap;\n1>      _CreatePriConfigXmlForMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateUploadPriConfigXmlForMainPackageFileMap;\n1>      _CreateUploadPriConfigXmlForMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateMainPackageFileMap_CalculateInputsAndOutputs;\n1>      _CreateMainPackageFileMap;\n1>      _CreateMainPackageFileMap_AddFileWrites;\n1>\n1>      _CreateUploadMainPackageFileMap_CalculateInputsAndOutputs;\n1>      _CreateUploadMainPackageFileMap;\n1>      _CreateUploadMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateMainPackageFileMap;\n1>      _UpdateMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateUploadMainPackageFileMap;\n1>      _UpdateUploadMainPackageFileMap_AddFileWrites;\n1>\n1>      _UpdateAppxManifestForBundle_CalculateInputsAndOutputs;\n1>      _UpdateAppxManifestForBundle;\n1>      _UpdateAppxManifestForBundle_AddFileWrites;\n1>\n1>      _UpdateAppxUploadManifestForBundle_CalculateInputsAndOutputs;\n1>      _UpdateAppxUploadManifestForBundle;\n1>      _UpdateAppxUploadManifestForBundle_AddFileWrites;\n1>\n1>      _CreateMainPackage;\n1>      _CreateMainPackage_AddFileWrites;\n1>\n1>      _CreateMainUploadPackage;\n1>      _CreateMainUploadPackage_AddFileWrites;\n1>\n1>      _GenerateAppxSymbolPackage;\n1>\n1>      _CreateResourcePackages_CalculateInputsAndOutputs;\n1>      _CreateResourcePackages;\n1>      _CreateResourcePackages_AddFileWrites;\n1>\n1>      _CreateUploadResourcePackages_CalculateInputsAndOutputs;\n1>      _CreateUploadResourcePackages;\n1>      _CreateUploadResourcePackages_AddFileWrites;\n1>\n1>      _CreatePlatformSpecificArtifactsList;\n1>      _CreatePlatformSpecificUploadArtifactsList;\n1>\n1>      _CreateAppxBundleFiles;\n1>\n1>\n1>\n1>_CreateAppxPackageDependsOn =\n1>      _ValidateAppxPackage;\n1>      _GenerateAppxPackageFile;\n1>      _GenerateAppxUploadPackageFile;\n1>      _GenerateAppxSymbolPackage;\n1>      _CreateAppStoreContainer;\n1>      _CreateAppStoreContainerForUAP;\n1>      _CreateTestLayout;\n1>      _AddWindowsInstallScriptToTestLayout;\n1>\n1>_DebugSymbolsProduced = true\n1>_DefaultPlatform = win32\n1>_DeploymentApplicationManifestIdentity = HelloUI.exe\n1>_DeploymentBuiltUpdateInterval = 0\n1>_DeploymentBuiltUpdateIntervalUnits = Days\n1>_DeploymentDeployManifestIdentity = HelloUI.application\n1>_DeploymentFileMappingExtension =\n1>_DeploymentPublishableProjectDefault = true\n1>_DeploymentTargetApplicationManifestFileName = HelloUI.exe.manifest\n1>_DeploymentUrl =\n1>_Dev11Installed =\n1>_Dev11WDExpressInstalled =\n1>_DocumentationFileProduced = false\n1>_EmbedFileResfilePath = Debug\\embed.resfiles\n1>_GatekeeperPlatformTarget = x86\n1>_GenerateAppxManifestDependsOn =\n1>      ;_FixVCLibs120References;\n1>      BeforeGenerateAppxManifest;\n1>      _GetRecursiveResolvedSDKReferences;\n1>      _CopyCurrentProjectAppxManifestOverride;\n1>      _CopyCurrentProjectAppxUploadManifestOverride;\n1>      _CalculateInputsForGenerateCurrentProjectAppxManifest;\n1>      _GenerateCurrentProjectAppxManifest;\n1>      _CreateFinalAppxManifestItem;\n1>      _FindStoreAssociationFile;\n1>      _ValidateAppxManifest;\n1>      AfterGenerateAppxManifest\n1>\n1>_GenerateAppxPackageBaseDependsOn =\n1>      _ComputeAppxPackageOutput;\n1>      _CreateAppxPackage;\n1>      _CreateAppxBundlePlatformSpecificArtifacts;\n1>\n1>_GenerateAppxPackageDependsOn =\n1>      ;\n1>      _SuppressDeploymentOnlyFeatures;\n1>      Build;\n1>\n1>      _ComputeAppxPackageOutput;\n1>      _CreateAppxPackage;\n1>      _CreateAppxBundlePlatformSpecificArtifacts;\n1>    ;\n1>\n1>_GenerateAppxPackageRecipeDependsOn =\n1>      BeforeGenerateAppxPackageRecipe;\n1>      ;\n1>      _CalculateInputsForGenerateAppxPackageRecipe;\n1>      _GenerateAppxPackageRecipeFile;\n1>      _FileReadsAndWritesForGenerateAppxPackageRecipe\n1>\n1>_GenerateAppxUploadPackageRecipeDependsOn =\n1>      BeforeGenerateAppxPackageRecipe;\n1>      ;\n1>      _CalculateInputsForGenerateAppxUploadPackageRecipe;\n1>      _GenerateAppxUploadPackageRecipeFile;\n1>      _FileReadsAndWritesForGenerateAppxUploadPackageRecipe\n1>\n1>_GenerateBindingRedirectsIntermediateAppConfig = Debug\\HelloUI.vcxproj.HelloUI.exe.config\n1>_GenerateProjectPriFileDependsOn =\n1>      ;\n1>      BeforeGenerateProjectPriFile;\n1>      _GeneratePrisForPortableLibraries;\n1>      _GetPriFilesFromPayload;\n1>      _ComputeInputPriFiles;\n1>      _GenerateProjectPriConfigurationFiles;\n1>      _CalculateInputsForGenerateProjectPriFileCore;\n1>      _GenerateProjectPriFileCore;\n1>      _AddFileReadsAndFileWritesForProjectPri;\n1>      _CreateProjectPriFileItem;\n1>      _ExpandProjectPriFile;\n1>      _ExpandPriFiles;\n1>      _ExpandPriUploadFiles;\n1>      AfterGenerateProjectPriFile\n1>\n1>_GetChildProjectCopyToOutputDirectoryItems = true\n1>_GetPackagePropertiesDependsOn =\n1>      ;\n1>      _GetProjectArchitecture;\n1>      _GetRecursiveProjectArchitecture;\n1>      _GetPackageArchitecture;\n1>      _GetDefaultResourceLanguage;\n1>      _CalculateAppxBundleProperties;\n1>\n1>_IgnoreInstalledPlatformToolset_v110 = true\n1>_IgnoreInstalledPlatformToolset_v110_wp80 = true\n1>_IgnoreInstalledPlatformToolset_v110_xp = true\n1>_LayoutResfilesPath = Debug\\layout.resfiles\n1>_MultipleQualifiersPerDimensionFoundPath = Debug\\MultipleQualifiersPerDimensionFound.txt\n1>_NuGetRuntimeIdentifierWithoutAot = win10-x86\n1>_NuGetTargetFallbackMoniker = UAP,Version=v10.0\n1>_OriginalConfiguration = Debug\n1>_OriginalPlatform = Win32\n1>_PlatformDefaultPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\Platform.default.props\n1>_PlatformFolder = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\\n1>_PlatformTargetForCoreRuntime = x86\n1>_PlatformTargetForIlcVersion = x86\n1>_PlatformToolsetFriendlyNameFor_v100 = Visual Studio 2010 (v100)\n1>_PlatformToolsetFriendlyNameFor_v110 = Visual Studio 2012 (v110)\n1>_PlatformToolsetFriendlyNameFor_v110_wp80 = Windows Phone 8.0 (v110_wp80)\n1>_PlatformToolsetFriendlyNameFor_v110_xp = Visual Studio 2012 - Windows XP (v110_xp)\n1>_PlatformToolsetFriendlyNameFor_v120 = Visual Studio 2013 (v120)\n1>_PlatformToolsetFriendlyNameFor_v120_wp81 = Windows Phone 8.1 (v120_wp81)\n1>_PlatformToolsetFriendlyNameFor_v120_xp = Visual Studio 2013 - Windows XP (v120_xp)\n1>_PlatformToolsetFriendlyNameFor_v140 = Visual Studio 2015 (v140)\n1>_PlatformToolsetFriendlyNameFor_v140_xp = Visual Studio 2015 - Windows XP (v140_xp)\n1>_PlatformToolsetFriendlyNameFor_v90 = Visual Studio 2008 (v90)\n1>_PlatformToolsetShortNameFor_v100 = Visual Studio 2010\n1>_PlatformToolsetShortNameFor_v110 = Visual Studio 2012\n1>_PlatformToolsetShortNameFor_v110_wp80 = Windows Phone 8.0\n1>_PlatformToolsetShortNameFor_v110_xp = Visual Studio 2012 - Windows XP\n1>_PlatformToolsetShortNameFor_v120 = Visual Studio 2013\n1>_PlatformToolsetShortNameFor_v120_wp81 = Windows Phone 8.1\n1>_PlatformToolsetShortNameFor_v90 = Visual Studio 2008\n1>_PriConfigXmlPath = Debug\\priconfig.xml\n1>_PriResfilesPath = Debug\\pri.resfiles\n1>_ProjectArchitecturesFilePath = Debug\\ProjectArchitectures.txt\n1>_ProjectDefaultTargets = Build\n1>_ProjectNPlatformSupported = true\n1>_ProjectNProjectSupported = true\n1>_ProjectPriFullPathOriginal = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\resources.pri\n1>_PropertySheetDisplayName = Application\n1>_QualifiersPath = Debug\\qualifiers.txt\n1>_ResolveReferenceDependencies = false\n1>_ResourceCompileDependsOn =\n1>\n1>      ;\n1>      BeforeResourceCompile;\n1>    ;\n1>      ;\n1>      MakeDirsForResourceCompile;\n1>      ResourceCompile;\n1>\n1>      ;\n1>      AfterResourceCompile;\n1>\n1>\n1>_ResourcesResfilesPath = Debug\\resources.resfiles\n1>_SGenDllCreated = false\n1>_SGenDllName = HelloUI.XmlSerializers.dll\n1>_SGenGenerateSerializationAssembliesConfig = Off\n1>_SupportEmbedFileResources = true\n1>_SupportXbfAsEmbedFileResources = true\n1>_TargetPlatformIsWindowsPhone = false\n1>_TargetsCoreRuntime = true\n1>_ToolsetFound = true\n1>_ToolsetPropsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.props\n1>_ToolsetTargetsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.targets\n1>_UpgradePlatformToolsetFor_v100 = v140\n1>_UpgradePlatformToolsetFor_v110 = v140\n1>_UpgradePlatformToolsetFor_v110_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v120 = v140\n1>_UpgradePlatformToolsetFor_v120_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v140 = v140\n1>_UpgradePlatformToolsetFor_v140_xp = v140_xp\n1>_UpgradePlatformToolsetFor_v90 = v140\n1>_VC_x64_ToolsInstalled = true\n1>AddAppConfigToBuildOutputs = true\n1>AddBuildInfoToAssembly = false\n1>AddItemTemplateGuid = {FE0B9DF8-A7C2-4687-A235-316C1ACA78D3}\n1>AfterBuildCompileTargets =\n1>\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLinkInputs;\n1>    ;\n1>      ComputeManifestGeneratedLinkerInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLinkInputs;\n1>    ;\n1>        ComputeLinkInputsFromProject;\n1>      ;\n1>      ComputeReferenceLinkInputs;\n1>    ;\n1>            CreateWinMD;\n1>            ComputeGeneratedWinMD;\n1>            MarkupCompilePass2;\n1>            ComputeInvalidXamlGenerated;\n1>            CompileXamlGeneratedFiles;\n1>\n1>      ;\n1>      AfterBuildCompileEvent;\n1>\n1>\n1>AfterBuildGenerateSourcesTargets =\n1>\n1>      ;\n1>      AfterBuildGenerateSources;\n1>    ;\n1>      AfterBuildGenerateSourcesEvent;\n1>\n1>AfterBuildLinkTargets =\n1>      ;RunMergeNativeCodeAnalysis;RunNativeCodeAnalysis;\n1>      CreateSatelliteAssemblies;\n1>      _Appverifier;\n1>      _Deploy;\n1>      PrepareForRun;\n1>      PostBuildEvent;\n1>\n1>AfterClCompileTargets =\n1>      ;\n1>      AfterClCompile;\n1>\n1>AfterImpLibTargets =\n1>      ;\n1>      AfterImpLib;\n1>\n1>AfterLibTargets =\n1>      ;\n1>      AfterLib;\n1>\n1>AfterLinkTargets =\n1>      ;\n1>      AfterLink;\n1>\n1>AfterManifestTargets =\n1>      ;\n1>      AfterManifest;\n1>\n1>AfterMidlTargets =\n1>      ;\n1>      AfterMidl;\n1>\n1>AfterResourceCompileTargets =\n1>      ;\n1>      AfterResourceCompile;\n1>\n1>AllOutputGroupsDependsOn =\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>AllowedPlatformsForProjectN = ARM,x64,x86\n1>AllowedReferenceAssemblyFileExtensions =\n1>      .winmd;\n1>      .dll;\n1>      .exe\n1>\n1>AllowedReferenceRelatedFileExtensions =\n1>      .pdb;\n1>      .xml;\n1>      .pri\n1>\n1>AllowLocalNetworkLoopback = true\n1>AllProjectOutputGroupsDependsOn =\n1>      ;\n1>      BuiltProjectOutputGroup;\n1>      DebugSymbolsProjectOutputGroup;\n1>      DocumentationProjectOutputGroup;\n1>      SatelliteDllsProjectOutputGroup;\n1>      SourceFilesProjectOutputGroup;\n1>      ContentFilesProjectOutputGroup;\n1>      SGenFilesOutputGroup\n1>\n1>ALLUSERSPROFILE = C:\\ProgramData\n1>ANDROID_HOME = E:\\AndroidSdk\n1>AppContainerApplication = true\n1>APPDATA = C:\\Users\\mehme\\AppData\\Roaming\n1>ApplicationType = Windows Store\n1>ApplicationTypeRevision = 10.0\n1>AppxBundle = Auto\n1>AppxBundleAutoResourcePackageQualifiers = Language|Scale|DXFeatureLevel\n1>AppxBundleExtension = .appxbundle\n1>AppxBundleFolderSuffix = _Bundle\n1>AppxBundleMainPackageFileMapGeneratedFilesListPath = Debug\\filemap.generatedFiles.txt\n1>AppxBundleMainPackageFileMapIntermediatePath = Debug\\filemap.map.txt\n1>AppxBundleMainPackageFileMapIntermediatePrefix = filemap\n1>AppxBundleMainPackageFileMapIntermediatePriPath = Debug\\filemap.pri\n1>AppxBundleMainPackageFileMapPath = Debug\\main.map.txt\n1>AppxBundleMainPackageFileMapPrefix = main\n1>AppxBundleMainPackageFileMapSuffix = .map\n1>AppxBundlePlatforms =\n1>AppxBundlePriConfigXmlForMainPackageFileMapFileName = Debug\\filemap.priconfig.xml\n1>AppxBundlePriConfigXmlForSplittingFileName = Debug\\split.priconfig.xml\n1>AppxBundleProducingPlatform =\n1>AppxBundleResourcePacksProducingPlatform =\n1>AppxBundleSplitResourcesGeneratedFilesListPath = Debug\\split.generatedFiles.txt\n1>AppxBundleSplitResourcesPriPath = Debug\\split.pri\n1>AppxBundleSplitResourcesPriPrefix = split\n1>AppxBundleSplitResourcesQualifiersPath = Debug\\split.qualifiers.txt\n1>AppxCopyLocalFilesOutputGroupIncludeXmlFiles = false\n1>AppxDefaultHashAlgorithmId = sha256\n1>AppxDefaultResourceQualifiers = Language={DefaultResourceLanguage}|Contrast=standard|Scale=200|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=|Platform=UAP\n1>AppxDefaultResourceQualifiers_UAP = Language={DefaultResourceLanguage}|Contrast=standard|Scale=200|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=|Platform=UAP\n1>AppxDefaultResourceQualifiers_Windows_80 = Language={DefaultResourceLanguage}\n1>AppxDefaultResourceQualifiers_Windows_81 = Language={DefaultResourceLanguage}|Contrast=standard|Scale=100|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=\n1>AppxDefaultResourceQualifiers_Windows_82 = Language={DefaultResourceLanguage}|Contrast=standard|Scale=100|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Configuration=|AlternateForm=\n1>AppxDefaultResourceQualifiers_Windows_Phone = Language={DefaultResourceLanguage}|Contrast=standard|Scale=240|HomeRegion=001|TargetSize=256|LayoutDirection=LTR|DXFeatureLevel=DX9|Theme=Dark|AlternateForm=\n1>AppxFilterOutUnusedLanguagesResourceFileMaps = true\n1>AppxGeneratePackageRecipeEnabled = true\n1>AppxGeneratePriEnabled = true\n1>AppxGeneratePrisForPortableLibrariesEnabled = true\n1>AppxGetPackagePropertiesEnabled = true\n1>AppxHarvestWinmdRegistration = true\n1>AppxIntermediateExtension = .intermediate\n1>AppxLayoutDir = Debug\\PackageLayout\\\n1>AppxLayoutFolderName = PackageLayout\n1>AppxMSBuildTaskAssembly = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.Build.AppxPackage.dll\n1>AppxMSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\\n1>AppxOSMaxVersionTested = 6.4.0\n1>AppxOSMaxVersionTestedReplaceManifestVersion = true\n1>AppxOSMinVersion = 6.3.1\n1>AppxOSMinVersionReplaceManifestVersion = true\n1>AppxPackage = True\n1>AppxPackageAllowDebugFrameworkReferencesInManifest = true\n1>AppxPackageArtifactsDir =\n1>AppxPackageDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\AppPackages\\HelloUI\\\n1>AppxPackageDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\AppPackages\\\n1>AppxPackageDirName = AppPackages\n1>AppxPackageDirWasSpecified = true\n1>AppxPackageExtension = .appx\n1>AppxPackageFileMap = Debug\\package.map.txt\n1>AppxPackageIncludePrivateSymbols = false\n1>AppxPackagePipelineVersion = 2.0\n1>AppxPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.build.appxrecipe\n1>AppxPackageSigningEnabled = true\n1>AppxPackageValidationEnabled = true\n1>AppxPackagingInfoFile = Debug_pkginfo.txt\n1>AppxPrependPriInitialPath = true\n1>AppxPriConfigXmlDefaultSnippetPath =\n1>AppxPriConfigXmlPackagingSnippetPath =\n1>AppxPriInitialPath =\n1>AppxSkipUnchangedFiles = true\n1>AppxStoreContainerExtension = .appxupload\n1>AppxStrictManifestValidationEnabled = true\n1>AppxSymbolPackageEnabled = true\n1>AppxSymbolPackageExtension = .appxsym\n1>AppxSymbolStrippedDir = Debug\\Stripped\n1>AppxTestLayoutEnabled = true\n1>AppxUploadBundleMainPackageFileMapGeneratedFilesListPath = Debug\\Upload\\filemap.generatedFiles.txt\n1>AppxUploadBundleMainPackageFileMapIntermediatePath = Debug\\Upload\\filemap.map.txt\n1>AppxUploadBundleMainPackageFileMapIntermediatePriPath = Debug\\Upload\\filemap.pri\n1>AppxUploadBundleMainPackageFileMapPath = Debug\\Upload\\main.map.txt\n1>AppxUploadBundlePriConfigXmlForMainPackageFileMapFileName = Debug\\Upload\\filemap.priconfig.xml\n1>AppxUploadBundlePriConfigXmlForSplittingFileName = Debug\\Upload\\split.priconfig.xml\n1>AppxUploadBundleSplitResourcesGeneratedFilesListPath = Debug\\Upload\\split.generatedFiles.txt\n1>AppxUploadBundleSplitResourcesPriPath = Debug\\Upload\\split.pri\n1>AppxUploadBundleSplitResourcesQualifiersPath = Debug\\Upload\\split.qualifiers.txt\n1>AppxUploadLayoutDir = Debug\\PackageUploadLayout\\\n1>AppxUploadLayoutFolderName = PackageUploadLayout\n1>AppxUploadPackageArtifactsDir = Upload\\\n1>AppxUploadPackageFileMap = Debug\\upload.package.map.txt\n1>AppxUploadPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\HelloUI.build.appxrecipe\n1>AppxUploadPackagingInfoFile = _pkginfo.txt\n1>AppxUseHardlinksIfPossible = true\n1>AppxValidateAppxManifest = true\n1>AssemblyFoldersSuffix = AssemblyFoldersEx\n1>AssemblyName = HelloUI\n1>AssemblySearchPaths =\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      {AssemblyFolders};\n1>      {GAC};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>AssignTargetPathsDependsOn =\n1>Attach = false\n1>AutoIncrementPackageRevision = true\n1>AutoUnifyAssemblyReferences = false\n1>AvailablePlatforms = Any CPU,x86,x64,ARM\n1>BaseIntermediateOutputPath = obj\\\n1>BaseNuGetRuntimeIdentifier = win10\n1>BeforeBuildCompileTargets =\n1>      ;\n1>\n1>BeforeBuildGenerateSourcesTargets =\n1>\n1>      ;\n1>      BeforeBuildGenerateSources;\n1>    ;\n1>\n1>BeforeClCompileTargets =\n1>            MarkupCompilePass1;\n1>\n1>      ;\n1>      BeforeClCompile;\n1>\n1>\n1>BeforeImpLibTargets =\n1>      ;\n1>      BeforeImpLib;\n1>\n1>BeforeLibTargets =\n1>      ;\n1>      BeforeLib;\n1>\n1>BeforeLinkTargets =\n1>      ;\n1>      BeforeLink;\n1>\n1>BeforeManifestTargets =\n1>      ;\n1>      BeforeManifest;\n1>\n1>BeforeMidlTargets =\n1>      ;\n1>      BeforeMidl;\n1>\n1>BeforeResourceCompileTargets =\n1>      ;\n1>      BeforeResourceCompile;\n1>\n1>BuildAppxUploadPackageForUap = false\n1>BuildCompileAction = _BuildCompileAction\n1>BuildCompileTargets =\n1>      ;\n1>      _ClCompile;\n1>      _ResGen;\n1>      _ResourceCompile;\n1>\n1>      ;\n1>      _ImpLib;\n1>      _Lib;\n1>    ;\n1>    ;_ClangCompile\n1>BuildDependsOn =\n1>      _PrepareForBuild;\n1>\n1>      ResolveReferences;\n1>      PrepareForBuild;\n1>      InitializeBuildStatus;\n1>      BuildGenerateSources;\n1>      BuildCompile;\n1>      BuildLink;\n1>    ;\n1>      AfterBuild;\n1>      FinalizeBuildStatus;\n1>\n1>BuildGenerateSourcesAction = _BuildGenerateSourcesAction\n1>BuildGenerateSourcesTargets =\n1>      ;\n1>      PreBuildEvent;\n1>      _Xsd;\n1>      _Midl;\n1>\n1>BuildInfoBinPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\BuildInfo\n1>BuildInfoTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\BuildInfo\\Microsoft.VisualStudio.ReleaseManagement.BuildInfo.targets\n1>BuildInParallel = true\n1>BuildingInsideVisualStudio = true\n1>BuildingProject = true\n1>BuildLibTargets =\n1>      ;\n1>      _ImpLib;\n1>      _Lib;\n1>\n1>BuildLinkAction = _BuildLinkAction\n1>BuildLinkTargets =\n1>      ;\n1>      ComputeLegacyManifestEmbedding;\n1>      _Link;\n1>      _ALink;\n1>      _Manifest;\n1>      RegisterOutput;\n1>      _XdcMake;\n1>      _BscMake;\n1>\n1>BuildProjectReferences = true\n1>BuildSteps =\n1>      ResolveReferences;\n1>      PrepareForBuild;\n1>      InitializeBuildStatus;\n1>      BuildGenerateSources;\n1>      BuildCompile;\n1>      BuildLink;\n1>\n1>BuiltProjectOutputGroupDependsOn = PrepareForBuild\n1>CAExcludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;\n1>CanBeStartupProject = True\n1>CanReferenceWinRT = true\n1>CanUseProjectN = true\n1>CC1Args = -cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName]\n1>CC1ArgsTLog = -Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0\n1>CC1DefaultIncludesTLog = -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\"\n1>CC1PlatformArgs = -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS\n1>CC1TargetCpu = pentium4\n1>CC1TargetTriple = i686-pc-windows-msvc\n1>CharacterSet = Unicode\n1>ClangCompileAfterTargets = ClCompile\n1>ClangCompileBeforeTargets = Link;Lib;ImpLib\n1>ClangCompileDependsOn = _SelectedFiles;MakeDirsForClang;GenerateHeaderMaps;ComputeClangOptions\n1>ClangCompileExtraInputs = HelloUI.vcxproj\n1>CleanDependsOn =\n1>\n1>      _PrepareForClean;\n1>\n1>      BeforeClean;\n1>      UnmanagedUnregistration;\n1>      CoreClean;\n1>      CleanReferencedProjects;\n1>      CleanPublishFolder;\n1>      AfterClean\n1>    ;\n1>    ;\n1>      CppClean\n1>    ;CleanClang;;CleanSBResources;\n1>CleanFile = HelloUI.vcxproj.FileListAbsolute.txt\n1>CleanPackageAction = _CleanAppxPackage\n1>CLRSupport = false\n1>ClYieldDuringToolExecution = true\n1>CodeAnalysisApplyLogFileXsl = false\n1>CodeAnalysisFailOnMissingRules = false\n1>CodeAnalysisForceOutput = true\n1>CodeAnalysisGenerateSuccessFile = true\n1>CodeAnalysisIgnoreGeneratedCode = true\n1>CodeAnalysisIgnoreInvalidTargets = true\n1>CodeAnalysisIgnoreMissingIndirectReferences = false\n1>CodeAnalysisInputAssembly = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>CodeAnalysisLogFile = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.CodeAnalysisLog.xml\n1>CodeAnalysisModuleSuppressionsFile = GlobalSuppressions.cpp\n1>CodeAnalysisOutputToConsole = false\n1>CodeAnalysisOverrideRuleVisibilities = false\n1>CodeAnalysisPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\FxCop\\\n1>CodeAnalysisQuiet = false\n1>CodeAnalysisRuleDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\FxCop\\Rules\n1>CodeAnalysisRuleSet = NativeRecommendedRules.ruleset\n1>CodeAnalysisRuleSetDirectories = ;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\Rule Sets\n1>CodeAnalysisSaveMessagesToReport = Active\n1>CodeAnalysisSearchGlobalAssemblyCache = true\n1>CodeAnalysisStaticAnalysisDirectory = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Static Analysis Tools\\\n1>CodeAnalysisSucceededFile = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.lastcodeanalysissucceeded\n1>CodeAnalysisSummary = false\n1>CodeAnalysisTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\n1>CodeAnalysisTimeout = 120\n1>CodeAnalysisTLogFile = Debug\\CodeAnalysis.read.1.tlog\n1>CodeAnalysisTreatWarningsAsErrors = false\n1>CodeAnalysisUpdateProject = false\n1>CodeAnalysisUseTypeNameInSuppression = true\n1>CodeAnalysisVerbose = false\n1>CombinedHMapFilename = Debug\\HelloUI-combined\n1>CombinedHMapRequired = @(ClangCompile->AnyHaveMetadataValue('HeaderMap','Combined'))\n1>ComFilesOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CommonBuildOnlyTargets =\n1>      PrepareForBuild;\n1>      ResolveReferences;\n1>\n1>CommonProgramFiles = C:\\Program Files (x86)\\Common Files\n1>CommonProgramW6432 = C:\\Program Files\\Common Files\n1>CommonTargetsPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\n1>CommonXamlResourcesDirectory = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\en-US\\\n1>CompileDependsOn =\n1>      ResolveReferences;\n1>      ResolveKeySource;\n1>      SetWin32ManifestProperties;\n1>      _GenerateCompileInputs;\n1>      BeforeCompile;\n1>      _TimeStampBeforeCompile;\n1>      CoreCompile;\n1>      _TimeStampAfterCompile;\n1>      AfterCompile;\n1>\n1>CompileLicxFilesDependsOn =\n1>CompileTargetNameForTemporaryAssembly = CompileTemporaryAssembly\n1>ComputeCompileInputsTargets =\n1>            ComputeXamlGeneratedCompileInputs;\n1>\n1>\n1>\n1>      ;\n1>      ComputeMIDLGeneratedCompileInputs;\n1>    ;\n1>      ComputeCLInputPDBName;\n1>      ComputeReferenceCLInput;\n1>      WarnCompileDuplicatedFilename\n1>    ;\n1>      FixupCLCompileOptions;\n1>\n1>\n1>ComputeImpLibInputsTargets =\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLibInputs;\n1>    ;\n1>      ComputeRCGeneratedImpLibInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedImpLibInputs;\n1>    ;\n1>        ComputeImpLibInputsFromProject;\n1>      ;ComputeClangImpLibInputs;\n1>ComputeIntermediateSatelliteAssembliesDependsOn =\n1>      CreateManifestResourceNames\n1>\n1>ComputeLibInputsTargets =\n1>      ComputeLibAdditionalOptions;\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLibInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLibInputs;\n1>    ;\n1>        ComputeLibInputsFromProject;\n1>      ;\n1>      ComputeReferenceLibInputs;\n1>\n1>    ;ComputeClangLibInputs;\n1>ComputeLinkInputsTargets =\n1>\n1>\n1>\n1>\n1>\n1>      ;\n1>      ComputeRCGeneratedLinkInputs;\n1>    ;\n1>      ComputeManifestGeneratedLinkerInputs;\n1>    ;\n1>      ComputeCustomBuildOutput;\n1>    ;\n1>      ComputeCLGeneratedLinkInputs;\n1>    ;\n1>        ComputeLinkInputsFromProject;\n1>      ;\n1>      ComputeReferenceLinkInputs;\n1>    ;ComputeClangLinkInputs;ComputeRuntimeInputs\n1>ComputeManifestInputsTargets =\n1>      ;\n1>      ComputeManifestInputsTargets;\n1>\n1>COMPUTERNAME = DESKTOP-OTUSNEQ\n1>ComReferenceExecuteAsTool = false\n1>ComReferenceNoClassMembers = false\n1>ComSpec = C:\\WINDOWS\\system32\\cmd.exe\n1>Configuration = Debug\n1>ConfigurationName = Debug\n1>ConfigurationType = Application\n1>ConsiderPlatformAsProcessorArchitecture = true\n1>ContentFilesProjectOutputGroupDependsOn = PrepareForBuild;AssignTargetPaths;PrepareForBuild;AssignTargetPaths;MakeDirsForFxc\n1>ContinueOnError = false\n1>CopyLocalFilesOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CopyNuGetImplementations = true\n1>CopyWinmdArtifactsOutputGroupDependsOn =\n1>      ;\n1>\n1>\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      AssignTargetPaths;\n1>      ResolveReferences\n1>\n1>\n1>CoreBuildDependsOn =\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      PreBuildEvent;\n1>      ResolveReferences;\n1>      PrepareResources;\n1>      ResolveKeySource;\n1>      Compile;\n1>      ExportWindowsMDFile;\n1>      UnmanagedUnregistration;\n1>      GenerateSerializationAssemblies;\n1>      CreateSatelliteAssemblies;\n1>      GenerateManifests;\n1>      GetTargetPath;\n1>      PrepareForRun;\n1>      UnmanagedRegistration;\n1>      IncrementalClean;\n1>      PostBuildEvent\n1>\n1>CoreCleanDependsOn =\n1>CoreCompileDependsOn =\n1>      DesignTimeMarkupCompilation;\n1>\n1>        DesignTimeXamlMarkupCompilation;\n1>\n1>\n1>\n1>CoreCppCleanDependsOn =\n1>CoreResGenDependsOn =\n1>CoreRuntimeSDKName = Microsoft.NET.CoreRuntime, Version=1.0\n1>CppCleanDependsOn =\n1>      BeforeCppClean;\n1>      ;\n1>      CoreCppClean;\n1>      AfterCppClean;\n1>    ;PGInstrumentedClean\n1>CppCleanLogFile = HelloUI.Build.CppClean.log\n1>CppWindowsStoreUnitTestLibraryType = false\n1>CreateCustomManifestResourceNamesDependsOn =\n1>CreateHardLinksForCopyAdditionalFilesIfPossible = false\n1>CreateManifestResourceNamesDependsOn =\n1>CreateSatelliteAssembliesDependsOn =\n1>      _GenerateSatelliteAssemblyInputs;\n1>      ComputeIntermediateSatelliteAssemblies;\n1>      GenerateSatelliteAssemblies\n1>\n1>CRTDefinitionalFile = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\VCProjectDefault\\Microsoft.AppX.VCFrameworkReferences.xml\n1>CrtSDKReferenceInclude = Microsoft.VCLibs, Version=14.0\n1>CrtSDKReferenceVersion = 14.0\n1>CurrentMajorVersionNumber = 10\n1>CurrentSolutionConfigurationContents = \n1>Debug|Win32\n1>\n1>CustomAfterMicrosoftCommonProps = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.After.Microsoft.Common.props\n1>CustomAfterMicrosoftCommonTargets = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.After.Microsoft.Common.targets\n1>CustomBeforeMicrosoftCommonProps = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.Before.Microsoft.Common.props\n1>CustomBeforeMicrosoftCommonTargets = C:\\Program Files (x86)\\MSBuild\\v14.0\\Custom.Before.Microsoft.Common.targets\n1>CustomBuildAfterTargets = BscMake\n1>CustomBuildBeforeTargets = PostBuildEvent\n1>CustomBuildToolAfterTargets = PreBuildEvent\n1>CustomBuildToolBeforeTargets = Midl\n1>DebugCppRuntimeFilesPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\Debug_NonRedist\\x86\n1>DebuggerFlavor = AppHostLocalDebugger\n1>DebuggerLaunchApplication = true\n1>DebuggerRequireAuthentication = true\n1>DebuggerType = NativeOnly\n1>DebugSymbols = true\n1>DebugSymbolsProjectOutputGroupDependsOn =\n1>DefaultLanguage = en-US\n1>DefaultLanguageSourceExtension = .cpp\n1>DefaultPlatformToolset = v140\n1>DefaultToolArchitecture = Native32Bit\n1>DefineCommonReferenceSchemas =\n1>DefineConstants = ;CODE_ANALYSIS\n1>DefineExplicitDefaults = true\n1>DelayImplib = dloadhelper.lib\n1>DelaySign =\n1>DesignTimeBuildInitTargets = _PrepareForReferenceResolution;;InitGetClCommandLines;ResolveReferences;FixupReferences\n1>DesignTimeIntermediateOutputPath = Debug\\InProcessTempFiles\\\n1>DesignTimeResolveAssemblyReferencesDependsOn =\n1>      GetFrameworkPaths;\n1>      GetReferenceAssemblyPaths;\n1>      ResolveReferences\n1>\n1>DetermineProjectTypeTargets = _PrepareForReferenceResolution;\n1>DevEnvDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\\n1>DisableXbfGeneration = false\n1>DocumentationProjectOutputGroupDependsOn = ResolvedXDCMake;ComputeCLCompileGeneratedXDCFiles\n1>DocumentLibraryDependencies = true\n1>DotNetSdk_IncludePath = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>DotNetSdk_LibraryPath = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\n1>DotNetSdk_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm\n1>DotNetSdk_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm64\n1>DotNetSdk_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64\n1>DotNetSdk_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86\n1>DotNetSdkRoot = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\\n1>EmbeddedWin32Manifest =\n1>EmbedManifest = false\n1>EnableAppLocalFXWorkaround = false\n1>EnableCoreRuntime = true\n1>EnableDesignTimeBuild = true\n1>EnableDotNetNativeCompatibleProfile = true\n1>EnableManagedIncrementalBuild = false\n1>EnableSigningChecks = true\n1>ExcludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;\n1>ExecutablePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Users\\mehme.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Users\\mehme\\AppData\\Local\\atom\\bin;\n1>ExpandSDKAllowedReferenceExtensions =\n1>      .winmd;\n1>      .dll\n1>\n1>ExpandSDKReferencesDependsOn =\n1>      ResolveSDKReferences\n1>\n1>ExtensionsToDeleteOnClean = .cdf;.cache;.obj;.ilk;.ipdb;.iobj;.resources;.tlb;.tli;.tlh;.tmp;.rsp;.pgc;.pgd;.meta;.tlog;.manifest;.res;.pch;.exp;.idb;.rep;.xdc;_.pdb;manifest.rc;.bsc;.sbr;.xml;.metagen;.bi;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.tlb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.bsc;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.ilk;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.intermediate.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.CodeAnalysisLog.xml;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.lastcodeanalysissucceeded;.g.h;.g.cpp;.xaml\n1>ExtraStarboardOptions = -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char\n1>FacadeWinmdPath = C:\\Program Files (x86)\\Windows Kits\\10\\UnionMetadata\\facade\\Windows.winmd\n1>FinalAppxManifestName = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\AppxManifest.xml\n1>FinalAppxPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.appxrecipe\n1>FinalAppxUploadManifestName = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\AppxManifest.xml\n1>FinalAppxUploadPackageRecipe = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\HelloUI.appxrecipe\n1>FindInvalidProjectReferencesDependsOn =\n1>      GetReferenceTargetPlatformMonikers\n1>\n1>FPS_BROWSER_APP_PROFILE_STRING = Internet Explorer\n1>FPS_BROWSER_USER_PROFILE_STRING = Default\n1>Framework20Dir = @(TargetFramework20DirectoryItem)\n1>Framework30Dir = @(_TargetFramework30DirectoryItem)\n1>Framework35Dir = @(_TargetFramework35DirectoryItem)\n1>Framework40Dir = @(_TargetFramework40DirectoryItem)\n1>FrameworkDir = C:\\Windows\\Microsoft.NET\\Framework\\\n1>FrameworkDir_110 = C:\\Windows\\Microsoft.NET\\Framework\\\n1>FrameworkRegistryBase = Software\\Microsoft\\\n1>FrameworkSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>FrameworkSDKRoot = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\\n1>FrameworkVersion = v4.6\n1>FullReferenceAssemblyNames = Full\n1>FxCompileAfterTargets = CustomBuild\n1>FxCompileBeforeTargets = Midl\n1>GenerateBindingRedirectsOutputType = true\n1>GenerateBuildInfoConfigFile = false\n1>GenerateClickOnceManifests =\n1>GeneratedFilesDir = Generated Files\\\n1>GeneratedFilesOutputGroupDependsOn = XamlGeneratedFilesOutputGroup;\n1>GenerateManifest = false\n1>GenerateManifestsDependsOn =\n1>      SetWin32ManifestProperties;\n1>      GenerateApplicationManifest;\n1>      GenerateDeploymentManifest\n1>\n1>GenerateProjectionAssembly = True\n1>GenerateTargetFrameworkAttribute = false\n1>GetCopyToOutputDirectoryItemsDependsOn =\n1>      AssignTargetPaths;\n1>      _SplitProjectReferencesByFileExistence\n1>\n1>GetFrameworkPathsDependsOn =\n1>GetPackagingOutputsDependsOn =\n1>      ;\n1>      AssignProjectConfiguration;\n1>      _SplitProjectReferencesByFileExistence\n1>\n1>GetTargetPathDependsOn =\n1>GetTargetPathWithTargetPlatformMonikerDependsOn = ; GetTargetPath\n1>GPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>GPURefDebuggerBreakOnAllThreads = GPURefBreakOncePerWarp\n1>HighEntropyVA = true\n1>HOMEDRIVE = C:\n1>HOMEPATH = \\Users\\mehme\n1>HostOsVersion = 6.3\n1>IgnoreImportLibrary = true\n1>ImplicitlyExpandTargetFramework = false\n1>ImplicitlyExpandTargetFrameworkDependsOn =\n1>      ;\n1>      GetReferenceAssemblyPaths\n1>\n1>ImplicitlyExpandTargetPlatform = false\n1>ImportByWildcardAfterMicrosoftCommonProps = true\n1>ImportByWildcardAfterMicrosoftCommonTargets = true\n1>ImportByWildcardBeforeMicrosoftCommonProps = true\n1>ImportByWildcardBeforeMicrosoftCommonTargets = true\n1>ImportUserLocationsByWildcardAfterMicrosoftCommonProps = true\n1>ImportUserLocationsByWildcardAfterMicrosoftCommonTargets = true\n1>ImportUserLocationsByWildcardBeforeMicrosoftCommonProps = true\n1>ImportUserLocationsByWildcardBeforeMicrosoftCommonTargets = true\n1>ImportXamlTargets = true\n1>IncludeBuiltProjectOutputGroup = true\n1>IncludeComFilesOutputGroup = false\n1>IncludeContentFilesProjectOutputGroup = true\n1>IncludeCopyLocalFilesOutputGroup = true\n1>IncludeCopyWinmdArtifactsOutputGroup = true\n1>IncludeCustomOutputGroupForPackaging = true\n1>IncludeDebugSymbolsProjectOutputGroup = true\n1>IncludeDocumentationProjectOutputGroup = false\n1>IncludeFrameworkReferencesFromNuGet = true\n1>IncludeGetResolvedSDKReferences = true\n1>IncludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;\n1>IncludePriFilesOutputGroup = true\n1>IncludeProjectPriFile = true\n1>IncludeSatelliteDllsProjectOutputGroup = false\n1>IncludeSDKRedistOutputGroup = true\n1>IncludeServerNameInBuildInfo = false\n1>IncludeSGenFilesOutputGroup = false\n1>IncludeSourceFilesProjectOutputGroup = false\n1>IncludeVersionInInteropName = true\n1>IncludeXamlCompositor = true\n1>InsertReverseMap = false\n1>IntDir = Debug\\\n1>IntermediateOutputPath = Debug\\\n1>IntermediateUploadOutputPath = Debug\\Upload\\\n1>InteropOutputPath = Interop\\\n1>IslandwoodDRT = true\n1>IWCompat = true\n1>KIT_SHARED_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>LangID = 1033\n1>LangName = en-US\n1>Language = C++\n1>LastBuildState = Debug\\HelloUI.tlog\\HelloUI.lastbuildstate\n1>LastBuildUnsuccessful = Debug\\HelloUI.tlog\\unsuccessfulbuild\n1>LayoutDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\AppX\n1>LibraryPath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86\n1>LibraryWPath = C:\\Program Files (x86)\\Windows Kits\\10\\References;\n1>LinkCompiled = true\n1>LoadTimeSensitiveProperties =\n1>      ;\n1>\n1>LoadTimeSensitiveTargets =\n1>      ;\n1>      XamlMarkupCompilePass1;\n1>\n1>LOCALAPPDATA = C:\\Users\\mehme\\AppData\\Local\n1>LocalDebuggerAttach = False\n1>LocalDebuggerCommand = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>LocalDebuggerDebuggerType = Auto\n1>LocalDebuggerMergeEnvironment = true\n1>LocalDebuggerSQLDebugging = False\n1>LocalDebuggerWorkingDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>LocalGPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>LOGONSERVER = \\MicrosoftAccount\n1>MakeAppxExeFullPath =\n1>MakePriExeFullPath =\n1>ManagedAssembly = false\n1>ManagedIncrementalBuildProcessDependencyGraphAfterTarget =\n1>      ClCompile\n1>\n1>ManagedIncrementalBuildProcessDependencyGraphBeforeTarget =\n1>      ClCompile\n1>\n1>ManagedWinmdInprocImplementation = CLRHost.dll\n1>MarkupCompilePass1DependsOn = CppDesignTimeMarkupCompilation;\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>MarkupCompilePass2DependsOn =\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>MaxTargetPath = 100\n1>MergedOutputCodeAnalysisFile = Debug\\vc.nativecodeanalysis.all.xml\n1>MetagenInputTarget = Link\n1>MetaGenTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.MetaGen.targets\n1>MicrosoftCommonPropsHasBeenImported = true\n1>MidlYieldDuringToolExecution = true\n1>MinimalCoreWin = KernelOnly\n1>MinimumVisualStudioVersion = 14.0\n1>MinSupportedVCTargetsVersion = v140\n1>MpiDebuggerCleanupDeployment = True\n1>MpiDebuggerDebuggerType = Auto\n1>MpiDebuggerDeployCommonRuntime = True\n1>MpiDebuggerNetworkSecurityMode = AnyAddress\n1>MpiDebuggerSchedulerNode = localhost/1\n1>MpiDebuggerSchedulerTimeout = 5000\n1>MsAppxPackageTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets\n1>MSBuild_ExecutablePath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildAllProjects = ;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.targets;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Xaml.targets;C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets\n1>MSBuildAssemblyVersion = 14.0\n1>MSBuildBinPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\n1>MSBuildExtensionsPath = C:\\Program Files (x86)\\MSBuild\n1>MSBuildExtensionsPath32 = C:\\Program Files (x86)\\MSBuild\n1>MSBuildExtensionsPath64 = C:\\Program Files\\MSBuild\n1>MSBuildFrameworkToolsPath = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildFrameworkToolsPath32 = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>MSBuildFrameworkToolsRoot = C:\\Windows\\Microsoft.NET\\Framework\\\n1>MSBuildLoadMicrosoftTargetsReadOnly = true\n1>MSBuildNodeCount = 8\n1>MSBuildProgramFiles32 = C:\\Program Files (x86)\n1>MSBuildProjectDefaultTargets = Build\n1>MSBuildProjectDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\n1>MSBuildProjectDirectoryNoRoot = Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\n1>MSBuildProjectExtension = .vcxproj\n1>MSBuildProjectFile = HelloUI.vcxproj\n1>MSBuildProjectFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>MSBuildProjectName = HelloUI\n1>MSBuildRuntimeVersion = 4.0.30319\n1>MSBuildStartupDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\n1>MSBuildToolsPath = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\n1>MSBuildToolsPath32 = C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\\n1>MSBuildToolsRoot = C:\\Program Files (x86)\\MSBuild\\\n1>MSBuildToolsVersion = 14.0\n1>MSBuildUserExtensionsPath = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\MSBuild\n1>MsTestToolsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\TeamTest\\Microsoft.TeamTest.targets\n1>NativeCodeAnalysisTLogFile = Debug\\NativeCodeAnalysis.read.1.tlog\n1>NetfxCoreRuntimeSettingsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Net.CoreRuntime.Settings.targets\n1>NetfxCoreRuntimeTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.Net.CoreRuntime.targets\n1>NETFXKitsDir = C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\\n1>NETFXSDKDir = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\\n1>NuGetProps = C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.props\n1>NuGetRuntimeIdentifier = win10-x86\n1>NuGetTargetFrameworkMonikerToInject = .NETCore,Version=v5.0\n1>NuGetTargetMoniker =\n1>NuGetTargetMonikerToInject = .NETCore,Version=v5.0\n1>NuGetTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\NuGet\\Microsoft.NuGet.targets\n1>NUMBER_OF_PROCESSORS = 8\n1>OnlyCreateWinMD = true\n1>OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration = true\n1>OnXamlPreCompileErrorTarget = _OnXamlPreCompileError\n1>OS = Windows_NT\n1>OutDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>OutDirWasSpecified = false\n1>OutputPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>OutputType = exe\n1>OverwriteReadOnlyFiles = false\n1>PackageAction = _GenerateAppxPackage\n1>PackageCertificateKeyFile = HelloUI_TemporaryKey.pfx\n1>PackagingDirectoryWritesLogPath = Debug\\PackagingDirectoryWrites.log\n1>PackagingFileWritesLogPath = Debug\\PackagingFileWrites.log\n1>Path = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Users\\mehme.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Users\\mehme\\AppData\\Local\\atom\\bin\n1>PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\n1>PdbCopyExeFullPath = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\PDBCopy.exe\n1>PkgDefApplicationConfigFile = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\devenv.exe.config\n1>Platform = Win32\n1>Platform_Actual = Win32\n1>PlatformArchitecture = 32\n1>PlatformName = Win32\n1>PlatformPropsFound = true\n1>PlatformShortName = x86\n1>PlatformSpecificBundleArtifactsListDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\\n1>PlatformSpecificBundleArtifactsListDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\\n1>PlatformSpecificBundleArtifactsListDirName = BundleArtifacts\n1>PlatformSpecificUploadBundleArtifactsListDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifacts\\Upload\\\n1>PlatformSpecificUploadBundleArtifactsListDirInProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\BundleArtifactsUpload\\\n1>PlatformTarget = x86\n1>PlatformTargetAsMSBuildArchitecture = x86\n1>PlatformTargetAsMSBuildArchitectureExplicitlySet = false\n1>PlatformTargetsFound = true\n1>PlatformToolset = v140\n1>PlatformToolsetVersion = 140\n1>PostBuildEventDependsOn =\n1>PostBuildEventUseInBuild = true\n1>PreBuildEventDependsOn =\n1>PreBuildEventUseInBuild = true\n1>Prefer32Bit = true\n1>PreferredToolArchitecture = x86\n1>PreLinkEventUseInBuild = true\n1>Prep_ComputeProcessXamlFilesDependsOn =\n1>      GetXamlCppIncludeDirectories;\n1>\n1>\n1>PrepareForBuildDependsOn = PlatformPrepareForBuild;UAP_PlatformPrepareForBuild;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata;SetCABuildNativeEnvironmentVariables\n1>PrepareForRunDependsOn =\n1>\n1>\n1>      CopyFilesToOutputDirectory\n1>    ;\n1>      _GetAppxManifestSchemaItems;\n1>      _GetSdkToolPaths;\n1>      _GetPriConfigXmlSnippets;\n1>      _ValidatePresenceOfAppxManifestItems;\n1>      GetPackagingOutputs;\n1>      _GetPackageProperties;\n1>      _AddUnionWinmd;\n1>      _GenerateProjectPriFile;\n1>      _ComputeAppxPackagePayload;\n1>      _GenerateAppxManifest;\n1>      _ValidateStoreManifest;\n1>      _GenerateAppxPackageRecipe;\n1>      _GenerateAppxUploadPackageRecipe;\n1>    ;\n1>      _AppendToReadTlogFile;\n1>      _AppendToWriteTlogFile;\n1>      _AppendToPackagingWriteLogs\n1>\n1>PrepareLayoutDependsOn =\n1>      ;\n1>      BeforePrepareLayout;\n1>      _PrepareLayout;\n1>      AfterPrepareLayout\n1>\n1>PrepareLibraryLayoutDependsOn =\n1>      GetPackagingOutputs;\n1>\n1>\n1>PrepareResourceNamesDependsOn =\n1>      AssignTargetPaths;\n1>      SplitResourcesByCulture;\n1>      CreateManifestResourceNames;\n1>      CreateCustomManifestResourceNames\n1>\n1>PrepareResourcesDependsOn =\n1>      ResolveKeySource;\n1>      MarkupCompilePass1;\n1>      XamlPreCompile;\n1>      MarkupCompilePass2;\n1>\n1>      XamlMarkupCompilePass1;\n1>      XamlMarkupCompilePass2;\n1>\n1>      PrepareResourceNames;\n1>      ResGen;\n1>      CompileLicxFiles\n1>\n1>\n1>\n1>PriIndexName =\n1>PROCESSOR_ARCHITECTURE = x86\n1>PROCESSOR_ARCHITEW6432 = AMD64\n1>PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9, GenuineIntel\n1>PROCESSOR_LEVEL = 6\n1>PROCESSOR_REVISION = 3a09\n1>ProcessorArchitecture = x86\n1>ProgramData = C:\\ProgramData\n1>ProgramFiles = C:\\Program Files (x86)\n1>ProgramW6432 = C:\\Program Files\n1>ProjectDesignTimeAssemblyResolutionSearchPaths =\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>ProjectDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>ProjectEvaluationFingerprint = Debug|Win32|C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI|\n1>ProjectExt = .vcxproj\n1>ProjectFileName = HelloUI.vcxproj\n1>ProjectFlavor = Client\n1>ProjectGuid = {4EB34FDE-1B6C-4B1D-BEEF-33D300ABD49C}\n1>ProjectHMapFilename = Debug\\HelloUI-project\n1>ProjectHMapRequired = @(ClangCompile->AnyHaveMetadataValue('HeaderMap','Project'))\n1>ProjectLockFile = project.lock.json\n1>ProjectName = HelloUI\n1>ProjectNProfileEnabled = true\n1>ProjectNSettingsTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.NetNative.Settings.targets\n1>ProjectNTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft.NetNative\\Microsoft.NetNative.targets\n1>ProjectPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>ProjectPriFileName = resources.pri\n1>ProjectPriFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\resources.pri\n1>ProjectPriUploadFullPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\Upload\\resources.pri\n1>PSModulePath = C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\\n1>PUBLIC = C:\\Users\\Public\n1>PublishableProject = true\n1>PublishBuildDependsOn =\n1>      BuildOnlySettings;\n1>      PrepareForBuild;\n1>      ResolveReferences;\n1>      PrepareResources;\n1>      ResolveKeySource;\n1>      GenerateSerializationAssemblies;\n1>      CreateSatelliteAssemblies;\n1>\n1>PublishDependsOn =\n1>      SetGenerateManifests;\n1>      Build;\n1>      PublishOnly\n1>\n1>PublishDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.publish\\\n1>PublishOnlyDependsOn =\n1>      SetGenerateManifests;\n1>      PublishBuild;\n1>      BeforePublish;\n1>      GenerateManifests;\n1>      CopyFilesToOutputDirectory;\n1>      _CopyFilesToPublishFolder;\n1>      _DeploymentGenerateBootstrapper;\n1>      ResolveKeySource;\n1>      _DeploymentSignClickOnceDeployment;\n1>      AfterPublish\n1>\n1>PublishPipelineCollectFilesCore =\n1>            ;\n1>            CollectFilesFromBuildInfoConfigFile;\n1>\n1>RealOSVersion = 6.4\n1>RebuildDependsOn =\n1>      _PrepareForRebuild;\n1>\n1>      BeforeRebuild;\n1>      Clean;\n1>      Build;\n1>      AfterRebuild;\n1>    ;\n1>\n1>RebuildPackageAction = _RebuildAppxPackage\n1>RedirectionTarget = 8.2\n1>ReferencePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib;\n1>RemoteDebuggerAttach = False\n1>RemoteDebuggerConnection = RemoteWithAuthentication\n1>RemoteDebuggerDebuggerType = Auto\n1>RemoteDebuggerServerName = DESKTOP-OTUSNEQ\n1>RemoteDebuggerSQLDebugging = False\n1>RemoteDebuggerWorkingDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>RemoteGPUDebuggerTargetType = {F4453496-1DB8-47F8-A7D5-31EBDDC2EC96}\n1>ReportingServicesTargets = C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\ReportingServices\\Microsoft.ReportingServices.targets\n1>RequiredBundles = VC_140ToolsAndLibs;Windows10_ToolsAndSDKV1;\n1>ResGenDependsOn = ResolveAssemblyReferences;SplitResourcesByCulture;BeforeResGen;CoreResGen;AfterResGen\n1>ResGenExecuteAsTool = false\n1>ResgenToolPath =\n1>ResolveAssemblyReferencesDependsOn = _PrepareForReferenceResolution;\n1>      GetFrameworkPaths;\n1>      GetReferenceAssemblyPaths;\n1>      PrepareForBuild;\n1>      ResolveSDKReferences;\n1>      ExpandSDKReferences;\n1>    ;ResolveNuGetPackageAssets\n1>ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch = Error\n1>ResolveNuGetPackages = true\n1>ResolveReferencesDependsOn =\n1>      _PrepareForReferenceResolution;ComputeCrtSDKReference;\n1>\n1>      BeforeResolveReferences;\n1>      AssignProjectConfiguration;\n1>      ResolveProjectReferences;\n1>      FindInvalidProjectReferences;\n1>      ResolveNativeReferences;\n1>      ResolveAssemblyReferences;\n1>      GenerateBindingRedirects;\n1>      ResolveComReferences;\n1>      AfterResolveReferences\n1>    ;\n1>      ResolveTestReferences\n1>    ;\n1>      ImplicitlyExpandTargetFramework;\n1>      ImplicitlyExpandTargetPlatform\n1>\n1>ResolveSDKReferencesDependsOn = _PrepareForReferenceResolution;ComputeCrtSDKReference;\n1>      GetInstalledSDKLocations\n1>\n1>RootNamespace = HelloUI\n1>RunCodeAnalysisDependsOn = ;ClCompile;RunMergeNativeCodeAnalysis\n1>RunCodeAnalysisInputs = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>RunDependsOn =\n1>RunMergeNativeCodeAnalysisDependsOn = ClCompile\n1>RunNativeCodeAnalysisInputs =\n1>SatelliteDllsProjectOutputGroupDependsOn = PrepareForBuild;PrepareResourceNames\n1>SBResourceArchive = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.zip\n1>SBResourceCompileAfterTargets = Link\n1>SBResourceCompileBeforeTargets =\n1>SBResourceCompileDependsOn = _XibCompile;_StoryboardCompile;_DataModelCompile;_AssetCatalogCompile;CopyInfoPlist\n1>SBResourcesDir =\n1>SDK35ToolsPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\\n1>SDK40ToolsPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\\\n1>SDKDisplayName = Windows 10\n1>SDKExtensionDirectoryRoot = C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>SDKIdentifier = Windows\n1>SDKRedistOutputGroupDependsOn = ResolveSDKReferences;ExpandSDKReferences\n1>SDKReferenceDirectoryRoot = C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>SDKReferenceRegistryRoot = Software\\Microsoft\\Microsoft SDKs\n1>SDKVersion = 10.0\n1>SESSIONNAME = Console\n1>SGenFilesOutputGroupDependsOn =\n1>SGenShouldGenerateSerializer = true\n1>SGenUseKeep = false\n1>SGenUseProxyTypes = true\n1>ShouldMarkCertainSDKReferencesAsRuntimeOnly = true\n1>SignAppxPackageExeFullPath =\n1>SignToolPath = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\n1>SkipCopyBuildProduct = true\n1>SkipCopyUnchangedFiles = true\n1>SkipILCompilation = true\n1>SkipIntermediatePriGenerationForResourceFiles = true\n1>SolutionDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\\n1>SolutionExt = .sln\n1>SolutionFileName = HelloUI-WinStore10.sln\n1>SolutionName = HelloUI-WinStore10\n1>SolutionPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI-WinStore10.sln\n1>SourceFilesProjectOutputGroupDependsOn = PrepareForBuild;AssignTargetPaths\n1>SourcePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfcm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src;C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;;;\n1>SQLDebugging = false\n1>StandardBuildPipeline = 1.0\n1>StarboardDefaultLibs = Starboard.lib;objcrt.lib;Foundation.lib;CoreFoundation.lib;UIKit.lib;QuartzCore.lib;CoreGraphics.lib;objcuwp.lib\n1>StarboardIncludes = -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\"\n1>StarboardLibDirs = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>StarboardLLVMDirectory = C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\\n1>StarboardPrebuiltLibsDir = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>StarboardSdkRoot = C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\n1>StoreManifestName = StoreManifest.xml\n1>SubsystemVersion = 6.00\n1>SupportWindows81SDKs = true\n1>SupportWindowsPhone81SDKs = false\n1>SystemDrive = C:\n1>SystemRoot = C:\\WINDOWS\n1>TargetCulture = *\n1>TargetDeployManifestFileName = HelloUI.application\n1>TargetDir = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>TargetedFrameworkDir = @(_TargetedFrameworkDirectoryItem)\n1>TargetedSDKArchitecture = x86\n1>TargetedSDKConfiguration = Debug\n1>TargetExt = .exe\n1>TargetFileName = HelloUI.exe\n1>TargetFrameworkAsMSBuildRuntime = CurrentRuntime\n1>TargetName = HelloUI\n1>TargetOsAndVersion = Universal Windows\n1>TargetPath = C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>TargetPlatformDisplayName = Universal Windows\n1>TargetPlatformIdentifier = UAP\n1>TargetPlatformIdentifierWindows81 = Windows\n1>TargetPlatformMinVersion = 10.0.10240.0\n1>TargetPlatformMoniker = UAP,Version=10.0.10240.0\n1>TargetPlatformName = UAP\n1>TargetPlatformRegistryBase = Software\\Microsoft\\Microsoft SDKs\\UAP\n1>TargetPlatformResourceVersion = 10.0.10240.0\n1>TargetPlatformSdkMetadataLocation = C:\\Program Files (x86)\\Windows Kits\\10\\References\\CommonConfiguration\\Neutral\n1>TargetPlatformSdkPath = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>TargetPlatformSdkRootOverride =\n1>TargetPlatformVersion = 10.0.10240.0\n1>TargetPlatformVersionWindows81 = 8.1\n1>TargetPlatformWinMDLocation = C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>TargetRuntime = Native\n1>TargetUniversalCRTVersion = 10.0.10240.0\n1>TaskKeyToken = 31bf3856ad364e35\n1>TaskVersion = 4.0.0.0\n1>TEMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>TLogLocation = Debug\\HelloUI.tlog\\\n1>TMP = C:\\Users\\mehme\\AppData\\Local\\Temp\n1>ToolsetPropsFound = true\n1>ToolsetTargetsFound = true\n1>TrackFileAccess = true\n1>UapBuildPipeline = 2.0\n1>UapDefaultAssetScale = 200\n1>UCRTContentRoot = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>UM_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>UnitTestPlatformVersion = 14.0\n1>UniversalCRT_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;\n1>UniversalCRT_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm;\n1>UniversalCRT_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm64;\n1>UniversalCRT_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64;\n1>UniversalCRT_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;\n1>UniversalCRT_PropsPath = C:\\Program Files (x86)\\Windows Kits\\10\\DesignTime\\CommonConfiguration\\Neutral\\ucrt.props\n1>UniversalCRT_SourcePath = C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;\n1>UniversalCRTSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>UnmanagedRegistrationDependsOn =\n1>UnmanagedUnregistrationDependsOn =\n1>UseCommonOutputDirectory = false\n1>UseDefaultDebuggersPropertyPageSchemas = false\n1>UseDotNetNativeToolchain =\n1>UseIncrementalAppxRegistration = true\n1>UseLegacyManagedDebugger = true\n1>UseNetNativeCustomFramework = true\n1>UseOfATL = false\n1>UseOfMFC = false\n1>USERDOMAIN = DESKTOP-OTUSNEQ\n1>USERDOMAIN_ROAMINGPROFILE = DESKTOP-OTUSNEQ\n1>USERNAME = mehme\n1>USERPROFILE = C:\\Users\\mehme\n1>UserRootDir = C:\\Users\\mehme\\AppData\\Local\\Microsoft\\MSBuild\\v4.0\n1>UseSourcePath = true\n1>ValidatePresenceOfAppxManifestItemsDependsOn =\n1>\n1>      ;\n1>    ;\n1>            _CreateContentItemOutOfCustomAppxManifest\n1>\n1>VC_ExecutablePath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_arm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x64_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64_arm\n1>VC_ExecutablePath_x64_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\n1>VC_ExecutablePath_x64_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64_x86\n1>VC_ExecutablePath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_ExecutablePath_x86_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_arm\n1>VC_ExecutablePath_x86_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\x86_amd64\n1>VC_ExecutablePath_x86_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\n1>VC_IncludePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;\n1>VC_LibraryPath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\ARM;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\ARM;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\arm;;\n1>VC_LibraryPath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\amd64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64;;\n1>VC_LibraryPath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;\n1>VC_ReferencesPath_ARM = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\ARM;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\ARM\n1>VC_ReferencesPath_x64 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\amd64\n1>VC_ReferencesPath_x86 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\n1>VC_SourcePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfcm;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src;C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt;;\n1>VCInstallDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\\n1>VCInstallDir_140 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\\n1>VCLibs14SDKName = Microsoft.VCLibs, Version=14.0\n1>VCProjectUpgraderObjectName = WindowsSDKVersionUpgrader\n1>VCTargetsPath = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPath10 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\\n1>VCTargetsPath11 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V110\\\n1>VCTargetsPath12 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\\n1>VCTargetsPath14 = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPathActual = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCTargetsPathEffective = C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\\n1>VCToolArchitecture = Native32Bit\n1>VisualStudioDir = C:\\Users\\mehme\\Documents\\Visual Studio 2015\n1>VisualStudioEdition = Microsoft Visual Studio Professional 2015\n1>VisualStudioVersion = 14.0\n1>VS_ExecutablePath = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;\n1>VS110COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\\n1>VS120COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\\n1>VS140COMNTOOLS = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\\n1>VSIDEResolvedNonMSBuildProjectOutputs = \n1>VSInstallDir = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\\n1>VSInstallDir_140 = C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\\n1>VSLANG = 1033\n1>VSVersion = $(VisualStudoVersion)\n1>WebBrowserDebuggerDebuggerType = Auto\n1>WebReference_EnableLegacyEventingModel = false\n1>WebReference_EnableProperties = true\n1>WebReference_EnableSQLTypes = true\n1>WebServiceDebuggerDebuggerType = Auto\n1>WebServiceDebuggerSQLDebugging = False\n1>WholeProgramOptimization = false\n1>WholeProgramOptimizationAvailabilityInstrument = true\n1>WholeProgramOptimizationAvailabilityOptimize = true\n1>WholeProgramOptimizationAvailabilityTrue = true\n1>WholeProgramOptimizationAvailabilityUpdate = true\n1>WINOBJC_SDK_ROOT = ........\n1>windir = C:\\WINDOWS\n1>Windows81SdkInstalled = true\n1>WindowsAppContainer = true\n1>WindowsSDK_ExecutablePath = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\n1>WindowsSDK_ExecutablePath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\arm;\n1>WindowsSDK_ExecutablePath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\arm64;\n1>WindowsSDK_ExecutablePath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\\x64\n1>WindowsSDK_ExecutablePath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools\n1>WindowsSDK_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>WindowsSDK_LibraryPath = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\n1>WindowsSDK_LibraryPath_arm = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\arm;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm;\n1>WindowsSDK_LibraryPath_arm64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\arm64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\arm64;\n1>WindowsSDK_LibraryPath_x64 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x64;\n1>WindowsSDK_LibraryPath_x86 = C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;\n1>WindowsSDK_MetadataFoundationPath = C:\\Program Files (x86)\\Windows Kits\\10\\References\\windows.foundation.foundationcontract\\1.0.0.0\n1>WindowsSDK_MetadataPath = C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>WindowsSDK_PlatformPath = C:\\Program Files (x86)\\Windows Kits\\10\\Platforms\\UAP;\n1>WindowsSDK80Path = C:\\Program Files (x86)\\Windows Kits\\8.1\\\n1>WindowsSDKDesktopARM64Support = true\n1>WindowsSDKDesktopARMSupport = true\n1>WindowsSdkDir = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSdkDir_10 = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSdkDir_81 = C:\\Program Files (x86)\\Windows Kits\\8.1\\\n1>WindowsSdkDir_81A = C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1A\\\n1>WindowsSdkPath = C:\\Program Files (x86)\\Windows Kits\\10\\\n1>WindowsSDKToolArchitecture = Native32Bit\n1>WindowsTargetPlatformMinVersion = 10.0.10240.0\n1>WindowsTargetPlatformVersion = 10.0.10240.0\n1>WinMDAssembly = false\n1>WinRT_IncludePath = C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>WMSJSProject = WJProject\n1>WMSJSProjectDirectory = JavaScript\n1>XamlBuildTaskAssemblyName = XamlBuildTask, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\n1>XamlBuildTaskLocation = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>XamlBuildTaskPath = C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>XAMLCompilerVersion = 8.2\n1>XAMLFingerprint = true\n1>XAMLFingerprintIgnorePaths =\n1>      @(ReferenceAssemblyPaths);\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\\n1>\n1>XamlGenCodeFileNames = HelloUI.vcxproj.XamlGeneratedCodeFileListAbsolute.txt\n1>XamlGeneratedOutputPath = Generated Files\\\n1>XamlGenMarkupFileNames = HelloUI.vcxproj.XamlGeneratedXamlFileListAbsolute.txt\n1>XamlPass2FlagFile = HelloUI.vcxproj.XamlPass2Flag.txt\n1>XamlPreLinkDependsOn =\n1>            ;\n1>            ComputeXamlGeneratedCLOutputs\n1>\n1>XamlRequiresCompilationPass2 = false\n1>XamlSavedStateFileName = XamlSaveStateFile.xml\n1>XamlSavedStateFilePath = Debug\\XamlSaveStateFile.xml\n1>XamlTemporaryAssemblyName = HelloUI\n1>YieldDuringToolExecution = true\n1>\n1>Building with tools version \"14.0\".\n1>Target \"_CheckForInvalidConfigurationAndPlatform: (TargetId:2)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (entry point):\n1>Set Property: _InvalidConfigurationMessageText=The OutputPath property is not set for project 'HelloUI.vcxproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='Win32'.\n1>Set Property: _InvalidConfigurationMessageText=The OutputPath property is not set for project 'HelloUI.vcxproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='Win32'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\n1>Task \"Error\" skipped, due to false condition; ( '$(_InvalidConfigurationError)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Task \"Warning\" skipped, due to false condition; ( '$(_InvalidConfigurationWarning)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Using \"Message\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Message\" (TaskId:2)\n1>  Task Parameter:Text=Configuration=Debug (TaskId:2)\n1>  Task Parameter:Importance=Low (TaskId:2)\n1>  Configuration=Debug (TaskId:2)\n1>Done executing task \"Message\". (TaskId:2)\n1>Task \"Message\" (TaskId:3)\n1>  Task Parameter:Text=Platform=Win32 (TaskId:3)\n1>  Task Parameter:Importance=Low (TaskId:3)\n1>  Platform=Win32 (TaskId:3)\n1>Done executing task \"Message\". (TaskId:3)\n1>Task \"Error\" skipped, due to false condition; ('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)')) was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\' != '' and !HasTrailingSlash('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\')).\n1>Task \"Error\" skipped, due to false condition; ('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)')) was evaluated as ('obj\\' != '' and !HasTrailingSlash('obj\\')).\n1>Task \"Error\" skipped, due to false condition; ('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)')) was evaluated as ('Debug\\' != '' and !HasTrailingSlash('Debug\\')).\n1>Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"HelloUI.vcxproj\".: (TargetId:2)\n1>Target \"_PrepareForRebuild: (TargetId:3)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Rebuild\" depends on it):\n1>Set Property: BuildType=Rebuild\n1>Set Property: _BuildActionType=Rebuild\n1>Removed Item(s):\n1>    CustomBuildStep=\n1>        HelloUI\n1>                Message=Performing Custom Build Step\n1>Done building target \"_PrepareForRebuild\" in project \"HelloUI.vcxproj\".: (TargetId:3)\n1>Target \"_BeforeBeforeRebuild: (TargetId:4)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BeforeRebuild\" depends on it):\n1>Set Property: _Rebuilding=true\n1>Done building target \"_BeforeBeforeRebuild\" in project \"HelloUI.vcxproj\".: (TargetId:4)\n1>Target \"BeforeRebuild: (TargetId:5)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Rebuild\" depends on it):\n1>Done building target \"BeforeRebuild\" in project \"HelloUI.vcxproj\".: (TargetId:5)\n1>Target \"_PrepareForClean: (TargetId:6)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Set Property: _BuildActionType=Clean\n1>Using \"Delete\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Delete\" (TaskId:4)\n1>  Task Parameter:Files=Debug\\HelloUI.tlog\\HelloUI.lastbuildstate (TaskId:4)\n1>  Deleting file \"Debug\\HelloUI.tlog\\HelloUI.lastbuildstate\". (TaskId:4)\n1>Done executing task \"Delete\". (TaskId:4)\n1>Done building target \"_PrepareForClean\" in project \"HelloUI.vcxproj\".: (TargetId:6)\n1>Target \"BeforeClean: (TargetId:7)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Done building target \"BeforeClean\" in project \"HelloUI.vcxproj\".: (TargetId:7)\n1>Target \"UnmanagedUnregistration\" skipped, due to false condition; ((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or\n1>                    ('$(_AssemblyTimestampBeforeCompile)' == '')) and\n1>                   Exists('@(_UnmanagedRegistrationCache)')) was evaluated as ((('' != '' or '' != 'true' or 'exe' != 'library') or\n1>                    ('' == '')) and\n1>                   Exists('obj\\HelloUI.vcxproj.UnmanagedRegistration.cache')).\n1>Target \"CoreClean: (TargetId:8)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Task \"Delete\" (TaskId:5)\n1>  Task Parameter:\n1>      Files=\n1>          Debug\\TempCA\\HelloUI.pdb\n1>          Debug\\TempCA\\HelloUI.exe (TaskId:5)\n1>  Task Parameter:TreatErrorsAsWarnings=True (TaskId:5)\n1>  File \"Debug\\TempCA\\HelloUI.pdb\" doesn't exist. Skipping. (TaskId:5)\n1>  File \"Debug\\TempCA\\HelloUI.exe\" doesn't exist. Skipping. (TaskId:5)\n1>Done executing task \"Delete\". (TaskId:5)\n1>Using \"ReadLinesFromFile\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ReadLinesFromFile\" (TaskId:6)\n1>  Task Parameter:File=Debug\\HelloUI.vcxproj.FileListAbsolute.txt (TaskId:6)\n1>Done executing task \"ReadLinesFromFile\". (TaskId:6)\n1>Using \"FindUnderPath\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"FindUnderPath\" (TaskId:7)\n1>  Task Parameter:Path=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\ (TaskId:7)\n1>  Comparison path is \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\". (TaskId:7)\n1>Done executing task \"FindUnderPath\". (TaskId:7)\n1>Task \"FindUnderPath\" (TaskId:8)\n1>  Task Parameter:Path=Debug\\ (TaskId:8)\n1>  Comparison path is \"Debug\\\". (TaskId:8)\n1>Done executing task \"FindUnderPath\". (TaskId:8)\n1>Task \"Delete\" (TaskId:9)\n1>  Task Parameter:TreatErrorsAsWarnings=True (TaskId:9)\n1>Done executing task \"Delete\". (TaskId:9)\n1>Using \"RemoveDuplicates\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"RemoveDuplicates\" (TaskId:10)\n1>Done executing task \"RemoveDuplicates\". (TaskId:10)\n1>Using \"MakeDir\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"MakeDir\" (TaskId:11)\n1>  Task Parameter:Directories=Debug\\ (TaskId:11)\n1>Done executing task \"MakeDir\". (TaskId:11)\n1>Using \"WriteLinesToFile\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"WriteLinesToFile\" (TaskId:12)\n1>  Task Parameter:File=Debug\\HelloUI.vcxproj.FileListAbsolute.txt (TaskId:12)\n1>  Task Parameter:Overwrite=True (TaskId:12)\n1>Done executing task \"WriteLinesToFile\". (TaskId:12)\n1>Done building target \"CoreClean\" in project \"HelloUI.vcxproj\".: (TargetId:8)\n1>Target \"AssignProjectConfiguration: (TargetId:9)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CleanReferencedProjects\" depends on it):\n1>Set Property: ShouldUnsetParentConfigurationAndPlatform=true\n1>Using \"AssignProjectConfiguration\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"AssignProjectConfiguration\" (TaskId:13)\n1>  Task Parameter:CurrentProject=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj (TaskId:13)\n1>  Task Parameter:CurrentProjectConfiguration=Debug (TaskId:13)\n1>  Task Parameter:CurrentProjectPlatform=Win32 (TaskId:13)\n1>  Task Parameter:OutputType=exe (TaskId:13)\n1>  Task Parameter:ResolveConfigurationPlatformUsingMappings=False (TaskId:13)\n1>  Task Parameter:SolutionConfigurationContents=\n1>  Debug|Win32\n1>   (TaskId:13)\n1>  Task Parameter:OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration=True (TaskId:13)\n1>  Task Parameter:ShouldUnsetParentConfigurationAndPlatform=True (TaskId:13)\n1>Done executing task \"AssignProjectConfiguration\". (TaskId:13)\n1>Done building target \"AssignProjectConfiguration\" in project \"HelloUI.vcxproj\".: (TargetId:9)\n1>Target \"_SplitProjectReferencesByFileExistence: (TargetId:10)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CleanReferencedProjects\" depends on it):\n1>Task \"ResolveNonMSBuildProjectOutput\" skipped, due to false condition; ('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='') was evaluated as ('true'=='true' and ''!='').\n1>Done building target \"_SplitProjectReferencesByFileExistence\" in project \"HelloUI.vcxproj\".: (TargetId:10)\n1>Target \"CleanReferencedProjects: (TargetId:11)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('true' != 'true' and 'true' == 'true' and '' != '').\n1>Done building target \"CleanReferencedProjects\" in project \"HelloUI.vcxproj\".: (TargetId:11)\n1>Target \"CleanPublishFolder: (TargetId:12)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Task \"RemoveDir\" skipped, due to false condition; ('$(PublishDir)'=='$(OutputPath)app.publish\\' and Exists('$(PublishDir)')) was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.publish\\'=='C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.publish\\' and Exists('C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\app.publish\\')).\n1>Done building target \"CleanPublishFolder\" in project \"HelloUI.vcxproj\".: (TargetId:12)\n1>Target \"AfterClean: (TargetId:13)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Done building target \"AfterClean\" in project \"HelloUI.vcxproj\".: (TargetId:13)\n1>Target \"BeforeCppClean: (TargetId:14)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppClean.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CppClean\" depends on it):\n1>Done building target \"BeforeCppClean\" in project \"HelloUI.vcxproj\".: (TargetId:14)\n1>Target \"CoreCppClean: (TargetId:15)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppClean.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CppClean\" depends on it):\n1>Task \"MakeDir\" (TaskId:14)\n1>  Task Parameter:Directories=Debug\\ (TaskId:14)\n1>Done executing task \"MakeDir\". (TaskId:14)\n1>Using \"CppClean\" task from assembly \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll\".\n1>Task \"CppClean\" (TaskId:15)\n1>  Task Parameter:FoldersToClean=Debug\\;Debug\\HelloUI.tlog\\;Generated Files\\ (TaskId:15)\n1>  Task Parameter:FilesExcludedFromClean=HelloUI.Build.CppClean.log (TaskId:15)\n1>  Task Parameter:DoDelete=True (TaskId:15)\n1>  Task Parameter:FilePatternsToDeleteOnClean=.cdf;.cache;.obj;.ilk;.ipdb;.iobj;.resources;.tlb;.tli;.tlh;.tmp;.rsp;.pgc;.pgd;.meta;.tlog;.manifest;.res;.pch;.exp;.idb;.rep;.xdc;.pdb;__manifest.rc;.bsc;.sbr;.xml;.metagen;.bi;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.tlb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.bsc;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.ilk;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.intermediate.manifest;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.CodeAnalysisLog.xml;C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe.lastcodeanalysissucceeded;.g.h;.g.cpp;_.xaml (TaskId:15)\n1>  Output Item(s):\n1>      DeletedFilesByCppCleanTask=\n1>          c:\\users\\mehme\\downloads\\w\u0131nobjc\\samples\\hellou\u0131\\hellou\u0131.vs\u0131mporter\\hellou\u0131-w\u0131nstore10\\debug\\vc140.pdb\n1>          c:\\users\\mehme\\downloads\\w\u0131nobjc\\samples\\hellou\u0131\\hellou\u0131.vs\u0131mporter\\hellou\u0131-w\u0131nstore10\\debug\\consumerunt\u0131mecomponent.obj\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\debug\\hellou\u0131\\xamlcompositorcs.winmd\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.vcxprojresolveassemblyreference.cache\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\consumeruntimecomponent.obj\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\vc140.pdb\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.command.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.read.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.write.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.command.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.read.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.write.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\hellou\u0131.write.1u.tlog (TaskId:15)\n1>Done executing task \"CppClean\". (TaskId:15)\n1>Task \"WriteLinesToFile\" (TaskId:16)\n1>  Task Parameter:File=Debug\\HelloUI.Build.CppClean.log (TaskId:16)\n1>  Task Parameter:\n1>      Lines=\n1>          c:\\users\\mehme\\downloads\\w\u0131nobjc\\samples\\hellou\u0131\\hellou\u0131.vs\u0131mporter\\hellou\u0131-w\u0131nstore10\\debug\\vc140.pdb\n1>          c:\\users\\mehme\\downloads\\w\u0131nobjc\\samples\\hellou\u0131\\hellou\u0131.vs\u0131mporter\\hellou\u0131-w\u0131nstore10\\debug\\consumerunt\u0131mecomponent.obj\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\debug\\hellou\u0131\\xamlcompositorcs.winmd\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.vcxprojresolveassemblyreference.cache\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\consumeruntimecomponent.obj\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\vc140.pdb\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.command.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.read.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\cl.write.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.command.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.read.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\clang.write.1.tlog\n1>          c:\\users\\mehme\\downloads\\winobjc\\samples\\hellou\u0131\\hellou\u0131.vsimporter\\hellou\u0131-winstore10\\debug\\hellou\u0131.tlog\\hellou\u0131.write.1u.tlog (TaskId:16)\n1>  Task Parameter:Overwrite=True (TaskId:16)\n1>Done executing task \"WriteLinesToFile\". (TaskId:16)\n1>Done building target \"CoreCppClean\" in project \"HelloUI.vcxproj\".: (TargetId:15)\n1>Target \"AfterCppClean: (TargetId:16)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppClean.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CppClean\" depends on it):\n1>Done building target \"AfterCppClean\" in project \"HelloUI.vcxproj\".: (TargetId:16)\n1>Target \"PGInstrumentedClean: (TargetId:17)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppClean.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CppClean\" depends on it):\n1>Task \"Delete\" (TaskId:17)\n1>Done executing task \"Delete\". (TaskId:17)\n1>Done building target \"PGInstrumentedClean\" in project \"HelloUI.vcxproj\".: (TargetId:17)\n1>Target \"CppClean: (TargetId:18)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppClean.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Done building target \"CppClean\" in project \"HelloUI.vcxproj\".: (TargetId:18)\n1>Target \"ComputeClangOptions: (TargetId:19)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"CleanClang\" depends on it):\n1>Done building target \"ComputeClangOptions\" in project \"HelloUI.vcxproj\".: (TargetId:19)\n1>Target \"CleanClang: (TargetId:20)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Task \"Delete\" (TaskId:18)\n1>  Task Parameter:\n1>      Files=\n1>          Debug\\HelloUI-combined.txt\n1>          Debug\\HelloUI-combined.hmap\n1>          Debug\\HelloUI-project.txt\n1>          Debug\\HelloUI-project.hmap (TaskId:18)\n1>  File \"Debug\\HelloUI-combined.txt\" doesn't exist. Skipping. (TaskId:18)\n1>  File \"Debug\\HelloUI-combined.hmap\" doesn't exist. Skipping. (TaskId:18)\n1>  Deleting file \"Debug\\HelloUI-project.txt\". (TaskId:18)\n1>  Deleting file \"Debug\\HelloUI-project.hmap\". (TaskId:18)\n1>Done executing task \"Delete\". (TaskId:18)\n1>Done building target \"CleanClang\" in project \"HelloUI.vcxproj\".: (TargetId:20)\n1>Target \"CleanSBResources\" skipped, due to false condition; ('@(SBResourceCopy)' != '') was evaluated as ('' != '').\n1>Target \"RemoveDirIfEmpty: (TargetId:21)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbresources.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Clean\" depends on it):\n1>Task \"RemoveDir\" skipped, due to false condition; ('@(RemoveDirIfEmpty)' != '') was evaluated as ('' != '').\n1>Done building target \"RemoveDirIfEmpty\" in project \"HelloUI.vcxproj\".: (TargetId:21)\n1>Target \"Clean: (TargetId:22)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Rebuild\" depends on it):\n1>Done building target \"Clean\" in project \"HelloUI.vcxproj\".: (TargetId:22)\n1>Target \"_CleanAppxPackage\" skipped, due to false condition; ('$(AppxPackage)' == 'true' and '$(GenerateAppxPackageOnBuild)' == 'true') was evaluated as ('True' == 'true' and '' == 'true').\n1>Target \"_PrepareForBuild: (TargetId:23)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Set Property: _BuildActionType=Build\n1>Task \"CreateItem\" skipped, due to false condition; ('%(CustomBuild.IncludeFileToTool)'!='') was evaluated as (''!='').\n1>Done building target \"_PrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:23)\n1>Target \"_PrepareForReferenceResolution: (TargetId:24)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Set Property: WinMDAssembly=true\n1>Set Property: TargetFrameworkMoniker=\n1>Set Property: _FindDependencies=false\n1>Set Property: AdditionalExplicitAssemblyReferences=\n1>Added Item(s):\n1>    Reference=\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                ReferenceOutputAssembly=true\n1>Task \"Message\" skipped, due to false condition; ('$(_REFERENCE_DEBUG)'=='true') was evaluated as (''=='true').\n1>Done building target \"_PrepareForReferenceResolution\" in project \"HelloUI.vcxproj\".: (TargetId:24)\n1>Target \"ComputeCrtSDKReference: (TargetId:25)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Set Property: UseCrtSDKReferenceConfig=Debug\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(UseCrtSDKReferenceStaticWarning)'=='true') was evaluated as (''!='true' and ''=='true').\n1>Added Item(s):\n1>    SDKReference=\n1>        Microsoft.VCLibs, Version=14.0\n1>                Implicit=true\n1>                TargetedSDKArchitecture=x86\n1>                TargetedSDKConfiguration=Debug\n1>Done building target \"ComputeCrtSDKReference\" in project \"HelloUI.vcxproj\".: (TargetId:25)\n1>Target \"BeforeResolveReferences: (TargetId:26)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Done building target \"BeforeResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:26)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence\" skipped. Previously built successfully.\n1>Target \"_RemoveNameMetadataFromProjectReferenceItems\" skipped, due to false condition; ('@(ProjectReference)'!='') was evaluated as (''!='').\n1>Target \"ResolveProjectReferences: (TargetId:27)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and ('true' == 'true' or 'true' != 'true') and '14.0' != '10.0' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' == '10.0' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and ('true' == 'true' or 'true' != 'true') and '14.0' == '10.0' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and 'true' != 'true' and 'true' == 'true' and '' != '').\n1>Task \"MSBuild\" skipped, due to false condition; ('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '') was evaluated as ('' == 'true' and '' != '' and 'true' == 'true' and '' != '').\n1>Task \"Warning\" skipped, due to false condition; ('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '') was evaluated as ('' != '' and '' != '').\n1>Done building target \"ResolveProjectReferences\" in project \"HelloUI.vcxproj\".: (TargetId:27)\n1>Target \"FindInvalidProjectReferences\" skipped, due to false condition; ('$(FindInvalidProjectReferences)' == 'true') was evaluated as ('' == 'true').\n1>Target \"ResolveNativeReferences\" skipped, due to false condition; ('@(NativeReference)'!='') was evaluated as (''!='').\n1>Target \"_PrepareForReferenceResolution\" skipped. Previously built successfully.\n1>Target \"GetFrameworkPaths: (TargetId:28)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Done building target \"GetFrameworkPaths\" in project \"HelloUI.vcxproj\".: (TargetId:28)\n1>Target \"GetReferenceAssemblyPaths: (TargetId:29)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Set Property: TargetFrameworkDirectory=\n1>Task \"GetReferenceAssemblyPaths\" skipped, due to false condition; ('$(TargetFrameworkMoniker)' != '' and ('$(_TargetFrameworkDirectories)' == '' or '$(_FullFrameworkReferenceAssemblyPaths)' == '')) was evaluated as ('' != '' and ('' == '' or '' == '')).\n1>Set Property: TargetFrameworkDirectory=;;\n1>Set Property: TargetFrameworkDirectory=;;;C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>Set Property: RemoveAssemblyFoldersIfNoTargetFramework=true\n1>Set Property: AssemblySearchPaths=\n1>      {CandidateAssemblyFiles};\n1>      C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib;;\n1>      {HintPathFromItem};\n1>      {TargetFrameworkDirectory};\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx};\n1>      ;\n1>      {GAC};\n1>      {RawFileName};\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>\n1>Set Property: TargetFrameworkProfile=\n1>Done building target \"GetReferenceAssemblyPaths\" in project \"HelloUI.vcxproj\".: (TargetId:29)\n1>Target \"SetBuildDefaultEnvironmentVariables: (TargetId:30)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Using \"SetEnv\" task from assembly \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll\".\n1>Task \"SetEnv\" (TaskId:19)\n1>  Task Parameter:Name=PATH (TaskId:19)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Users\\mehme.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Users\\mehme\\AppData\\Local\\atom\\bin; (TaskId:19)\n1>  Task Parameter:Prefix=False (TaskId:19)\n1>  PATH=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86;;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\ide;C:\\Program Files (x86)\\HTML Help Workshop;;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\;C:\\WINDOWS\\SysWow64;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;E:\\AndroidSdk\\platform-tools;C:\\Program Files\\TortoiseSVN\\bin;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Users\\mehme.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Users\\mehme\\AppData\\Local\\atom\\bin; (TaskId:19)\n1>  Output Property: Path=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\bin%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\bin\\x86%3b%3bC:\\Program Files %28x86%29\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\Tools\\bin%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\tools%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\ide%3bC:\\Program Files %28x86%29\\HTML Help Workshop%3b%3bC:\\Program Files %28x86%29\\MSBuild\\14.0\\bin\\%3bC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\%3bC:\\WINDOWS\\SysWow64%3b%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86%3bC:\\WINDOWS\\system32%3bC:\\WINDOWS%3bC:\\WINDOWS\\System32\\Wbem%3bC:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\%3bC:\\Program Files %28x86%29\\Skype\\Phone\\%3bC:\\Program Files %28x86%29\\Git\\cmd%3bC:\\Program Files %28x86%29\\Git\\bin%3bE:\\AndroidSdk\\platform-tools%3bC:\\Program Files\\TortoiseSVN\\bin%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Windows Performance Toolkit\\%3bC:\\Users\\mehme.dnx\\bin%3bC:\\Program Files\\Microsoft DNX\\Dnvm\\%3bC:\\Users\\mehme\\AppData\\Local\\atom\\bin%3b (TaskId:19)\n1>Done executing task \"SetEnv\". (TaskId:19)\n1>Task \"SetEnv\" (TaskId:20)\n1>  Task Parameter:Name=LIB (TaskId:20)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:20)\n1>  Task Parameter:Prefix=False (TaskId:20)\n1>  LIB=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;;;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86;;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:20)\n1>  Output Property: LIB=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib\\store%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86%3b%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\lib\\10.0.10240.0\\um\\x86%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\lib\\um\\x86%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\Lib\\um\\x86 (TaskId:20)\n1>Done executing task \"SetEnv\". (TaskId:20)\n1>Task \"SetEnv\" (TaskId:21)\n1>  Task Parameter:Name=LIBPATH (TaskId:21)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib; (TaskId:21)\n1>  Task Parameter:Prefix=False (TaskId:21)\n1>  LIBPATH=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib; (TaskId:21)\n1>  Output Property: LIBPATH=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\lib%3b (TaskId:21)\n1>Done executing task \"SetEnv\". (TaskId:21)\n1>Task \"SetEnv\" (TaskId:22)\n1>  Task Parameter:Name=INCLUDE (TaskId:22)\n1>  Task Parameter:Value=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:22)\n1>  Task Parameter:Prefix=False (TaskId:22)\n1>  INCLUDE=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:22)\n1>  Output Property: INCLUDE=C:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\include%3bC:\\Program Files %28x86%29\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt%3b%3b%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\um%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\shared%3bC:\\Program Files %28x86%29\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt%3bC:\\Program Files %28x86%29\\Windows Kits\\NETFXSDK\\4.6\\Include\\um%3b (TaskId:22)\n1>Done executing task \"SetEnv\". (TaskId:22)\n1>Done building target \"SetBuildDefaultEnvironmentVariables\" in project \"HelloUI.vcxproj\".: (TargetId:30)\n1>Target \"SetUserMacroEnvironmentVariables\" skipped, due to false condition; ('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' != '' and '' != 'true').\n1>Target \"GetResolvedWinMD: (TargetId:31)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Added Item(s):\n1>    Link=\n1>        tmp\n1>                AcceptableNonZeroExitCodes=\n1>                AdditionalDependencies=WindowsApp.lib;\n1>                AdditionalLibraryDirectories=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>                AllowIsolation=true\n1>                AppContainer=true\n1>                CLRImageType=Default\n1>                DataExecutionPrevention=true\n1>                DelaySign=\n1>                DeleteSoon=true\n1>                Driver=NotSet\n1>                EnableCOMDATFolding=true\n1>                EnableUAC=\n1>                GenerateDebugInformation=true\n1>                GenerateMapFile=false\n1>                GenerateWindowsMetadata=true\n1>                IgnoreEmbeddedIDL=false\n1>                ImageHasSafeExceptionHandlers=true\n1>                KeyFile=\n1>                LinkErrorReporting=PromptImmediately\n1>                ManifestFile=\n1>                MapExports=false\n1>                MinimalRebuildFromTracking=true\n1>                NoEntryPoint=false\n1>                OptimizeReferences=true\n1>                OutputFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>                PerUserRedirection=false\n1>                Profile=false\n1>                ProfileGuidedDatabase=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pgd\n1>                ProgramDatabaseFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb\n1>                RandomizedBaseAddress=true\n1>                RegisterOutput=false\n1>                SetChecksum=false\n1>                ShowProgress=NotSet\n1>                SubSystem=Windows\n1>                SuppressStartupBanner=true\n1>                SwapRunFromCD=false\n1>                SwapRunFromNET=false\n1>                TargetMachine=MachineX86\n1>                TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                TurnOffAssemblyGeneration=false\n1>                TypeLibraryResourceID=1\n1>                UACExecutionLevel=\n1>                UACUIAccess=false\n1>                WindowsMetadataFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>Added Item(s):\n1>    WinMDFullPath=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>                Primary=true\n1>                TargetPath=HelloUI.winmd\n1>Removed Item(s):\n1>    Link=\n1>        tmp\n1>                AcceptableNonZeroExitCodes=\n1>                AdditionalDependencies=WindowsApp.lib;\n1>                AdditionalLibraryDirectories=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\n1>                AllowIsolation=true\n1>                AppContainer=true\n1>                CLRImageType=Default\n1>                DataExecutionPrevention=true\n1>                DelaySign=\n1>                DeleteSoon=true\n1>                Driver=NotSet\n1>                EnableCOMDATFolding=true\n1>                EnableUAC=\n1>                GenerateDebugInformation=true\n1>                GenerateMapFile=false\n1>                GenerateWindowsMetadata=true\n1>                IgnoreEmbeddedIDL=false\n1>                ImageHasSafeExceptionHandlers=true\n1>                KeyFile=\n1>                LinkErrorReporting=PromptImmediately\n1>                ManifestFile=\n1>                MapExports=false\n1>                MinimalRebuildFromTracking=true\n1>                NoEntryPoint=false\n1>                OptimizeReferences=true\n1>                OutputFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>                PerUserRedirection=false\n1>                Profile=false\n1>                ProfileGuidedDatabase=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pgd\n1>                ProgramDatabaseFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.pdb\n1>                RandomizedBaseAddress=true\n1>                RegisterOutput=false\n1>                SetChecksum=false\n1>                ShowProgress=NotSet\n1>                SubSystem=Windows\n1>                SuppressStartupBanner=true\n1>                SwapRunFromCD=false\n1>                SwapRunFromNET=false\n1>                TargetMachine=MachineX86\n1>                TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                TurnOffAssemblyGeneration=false\n1>                TypeLibraryResourceID=1\n1>                UACExecutionLevel=\n1>                UACUIAccess=false\n1>                WindowsMetadataFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.winmd\n1>Done building target \"GetResolvedWinMD\" in project \"HelloUI.vcxproj\".: (TargetId:31)\n1>Target \"PlatformPrepareForBuild: (TargetId:32)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Platform.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Set Property: ConfigurationPlatformExists=true\n1>Set Property: _CurrentPlatformToolsetShortName=v140\n1>Task \"VCMessage\" skipped, due to false condition; ('$(_Error64bitToolsNotInstalled)' == 'true') was evaluated as ('' == 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v110') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v110').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v100') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v100').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' == 'v90') was evaluated as (''!='true' and 'true' != 'true' and 'v140' == 'v90').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(_ToolsetFound)' != 'true' and '$(PlatformToolset)' != 'v90' and '$(PlatformToolset)' != 'v100' and '$(PlatformToolset)' != 'v110') was evaluated as (''!='true' and 'true' != 'true' and 'v140' != 'v90' and 'v140' != 'v100' and 'v140' != 'v110').\n1>Done building target \"PlatformPrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:32)\n1>Target \"UAP_PlatformPrepareForBuild: (TargetId:33)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Application Type\\Windows Store\\10.0\\Platforms\\Win32\\PlatformToolsets\\v140\\Toolset.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Task \"Error\" skipped, due to false condition; ('$(MissingSDKPropsForUAP)' == 'true') was evaluated as ('' == 'true').\n1>Done building target \"UAP_PlatformPrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:33)\n1>Target \"GetFrameworkPaths\" skipped. Previously built successfully.\n1>Target \"GetReferenceAssemblyPaths\" skipped. Previously built successfully.\n1>Target \"AssignLinkMetadata\" skipped, due to false condition; ( '$(SynthesizeLinkMetadata)' == 'true' ) was evaluated as ( '' == 'true' ).\n1>Target \"SetCABuildNativeEnvironmentVariables: (TargetId:34)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\CodeAnalysis\\Microsoft.CodeAnalysis.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"PrepareForBuild\" depends on it):\n1>Initializing task factory \"CodeTaskFactory\" from assembly \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Build.Tasks.Core.dll\".\n1>Using \"SetEnvironmentVariable\" task from the task factory \"Code Task Factory\".\n1>Task \"SetEnvironmentVariable\" (TaskId:23)\n1>  Task Parameter:EnvValue=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um; (TaskId:23)\n1>  Task Parameter:EnvKey=CAExcludePath (TaskId:23)\n1>Done executing task \"SetEnvironmentVariable\". (TaskId:23)\n1>Done building target \"SetCABuildNativeEnvironmentVariables\" in project \"HelloUI.vcxproj\".: (TargetId:34)\n1>Target \"PrepareForBuild: (TargetId:35)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Set Property: TargetDir=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>Set Property: LocalDebuggerCommand=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\HelloUI.exe\n1>Set Property: BuildProjectReferences=false\n1>Set Property: ConfigurationPlatformExists=true\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)' != 'true' and '$(ConfigurationPlatformExists)' != 'true') was evaluated as ('' != 'true' and 'true' != 'true').\n1>Task \"MakeDir\" (TaskId:24)\n1>  Task Parameter:Directories=Debug\\ (TaskId:24)\n1>Done executing task \"MakeDir\". (TaskId:24)\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(WindowsAppContainer)'=='true' and '$(ConfigurationType)'!='Application' and '$(ConfigurationType)'!='DynamicLibrary' and '$(ConfigurationType)'!='StaticLibrary') was evaluated as (''!='true' and 'true'=='true' and 'Application'!='Application' and 'Application'!='DynamicLibrary' and 'Application'!='StaticLibrary').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(VCInstallDir)'=='' and '$(UseEnv)' != 'true' and ('$(TargetFrameworkVersion)'=='v3.5' or '$(TargetFrameworkVersion)'=='v3.0' or '$(TargetFrameworkVersion)'=='v2.0' )) was evaluated as (''!='true' and 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true' and (''=='v3.5' or ''=='v3.0' or ''=='v2.0' )).\n1>Task \"VCMessage\" skipped, due to false condition; ('$(DesignTimeBuild)'!='true' and '$(VCInstallDir)'=='' and '$(UseEnv)' != 'true' and '$(PlatformToolset)'=='v90') was evaluated as (''!='true' and 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true' and 'v140'=='v90').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(VCInstallDir)'=='' and '$(UseEnv)' != 'true') was evaluated as ('C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'=='' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(WindowsSDKDir)'=='' and '$(UseEnv)' != 'true') was evaluated as ('C:\\Program Files (x86)\\Windows Kits\\10\\'=='' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IntDirTrailingSlashWarning)'=='true') was evaluated as (''=='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(OutDirTrailingSlashWarning)'=='true') was evaluated as (''=='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('%(CompatibilityIssues.Identity)' != '' and '$(DesignTimeBuild)'!='true') was evaluated as ('' != '' and ''!='true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(_MBCS_Using)' == 'true' and '$(_MBCS_Installed)' != 'true' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' == 'true' and '' != 'true' and '' != 'true').\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IgnoreWarnIntDirSharingDetected)' != 'true' and '$(IntDirSharingDetected)' == 'true') was evaluated as ('' != 'true' and '' == 'true').\n1>Set Property: _IntDirFullpath=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\\n1>Set Property: _OutDirFullpath=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>Task \"VCMessage\" skipped, due to false condition; ('$(IgnoreWarnIntDirInTempDetected)' != 'true' and ('$(_IntDirFullpath.StartsWith($(Tmp), true, null))' == 'true' or '$(_IntDirFullpath.StartsWith($(Temp), true, null))' == 'true' or '$(_OutDirFullpath.StartsWith($(Tmp), true, null))' == 'true' or '$(_OutDirFullpath.StartsWith($(Temp), true, null))' == 'true')) was evaluated as ('' != 'true' and ('False' == 'true' or 'False' == 'true' or 'False' == 'true' or 'False' == 'true')).\n1>Task \"MakeDir\" (TaskId:25)\n1>  Task Parameter:\n1>      Directories=\n1>          Debug\\\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\\n1>          Debug\\HelloUI.tlog\\\n1>          Generated Files\\ (TaskId:25)\n1>Done executing task \"MakeDir\". (TaskId:25)\n1>Done building target \"PrepareForBuild\" in project \"HelloUI.vcxproj\".: (TargetId:35)\n1>Target \"_PrepareForReferenceResolution\" skipped. Previously built successfully.\n1>Target \"ComputeCrtSDKReference\" skipped. Previously built successfully.\n1>Target \"GetInstalledSDKLocations: (TargetId:36)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveSDKReferences\" depends on it):\n1>Using \"GetInstalledSDKLocations\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"GetInstalledSDKLocations\" (TaskId:26)\n1>  Task Parameter:\n1>      SDKDirectoryRoots=\n1>          C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs\n1>          C:\\Program Files (x86)\\Microsoft SDKs (TaskId:26)\n1>  Task Parameter:\n1>      SDKExtensionDirectoryRoots=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\n1>          C:\\Program Files (x86)\\Windows Kits\\10 (TaskId:26)\n1>  Task Parameter:SDKRegistryRoot=Software\\Microsoft\\Microsoft SDKs (TaskId:26)\n1>  Task Parameter:TargetPlatformVersion=10.0.10240.0 (TaskId:26)\n1>  Task Parameter:TargetPlatformIdentifier=UAP (TaskId:26)\n1>  Searching for SDKs targeting \"UAP, 10.0.10240.0\". (TaskId:26)\n1>  Found \"14\" SDKs. (TaskId:26)\n1>  Installed SDKs: (TaskId:26)\n1>      SDK \"CppUnitTestFramework.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.Midi.GmDls, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.NET.CoreRuntime, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.NET.Native.Runtime.1.1, Version=1.1\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\" (TaskId:26)\n1>      SDK \"Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.VCLibs, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\" (TaskId:26)\n1>      SDK \"Microsoft.VCLibs.120, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\" (TaskId:26)\n1>      SDK \"MSTestFramework.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\" (TaskId:26)\n1>      SDK \"TestPlatform.Universal, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\" (TaskId:26)\n1>      SDK \"WindowsDesktop, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\" (TaskId:26)\n1>      SDK \"WindowsIoT, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\" (TaskId:26)\n1>      SDK \"WindowsMobile, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\" (TaskId:26)\n1>      SDK \"WindowsTeam, Version=10.0.10240.0\" is installed at \"C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\" (TaskId:26)\n1>  Output Item(s):\n1>      InstalledSDKLocations=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.Midi.GmDls, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.CoreRuntime, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.Native.Runtime.1.1, Version=1.1\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs.120, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsDesktop, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsIoT, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsMobile, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsTeam, Version=10.0.10240.0 (TaskId:26)\n1>Done executing task \"GetInstalledSDKLocations\". (TaskId:26)\n1>Task \"GetInstalledSDKLocations\" (TaskId:27)\n1>  Task Parameter:\n1>      SDKDirectoryRoots=\n1>          C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs\n1>          C:\\Program Files (x86)\\Microsoft SDKs (TaskId:27)\n1>  Task Parameter:SDKRegistryRoot=Software\\Microsoft\\Microsoft SDKs (TaskId:27)\n1>  Task Parameter:TargetPlatformVersion=8.1 (TaskId:27)\n1>  Task Parameter:TargetPlatformIdentifier=Windows (TaskId:27)\n1>  Searching for SDKs targeting \"Windows, 8.1\". (TaskId:27)\n1>  Found \"9\" SDKs. (TaskId:27)\n1>  Installed SDKs: (TaskId:27)\n1>      SDK \"Microsoft.VCLibs, Version=11.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\" (TaskId:27)\n1>      SDK \"Microsoft.WinJS.1.0, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\" (TaskId:27)\n1>      SDK \"BehaviorsXamlSDKManaged, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\" (TaskId:27)\n1>      SDK \"BehaviorsXamlSDKNative, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\" (TaskId:27)\n1>      SDK \"CppUnitTestFramework, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\" (TaskId:27)\n1>      SDK \"Microsoft.VCLibs, Version=12.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\" (TaskId:27)\n1>      SDK \"Microsoft.WinJS.2.0, Version=1.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\" (TaskId:27)\n1>      SDK \"MSTestFramework, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\" (TaskId:27)\n1>      SDK \"TestPlatform, Version=14.0\" is installed at \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\" (TaskId:27)\n1>  Output Item(s):\n1>      InstalledSDKLocations=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=11.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.1.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKManaged, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKNative, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.2.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform, Version=14.0 (TaskId:27)\n1>Done executing task \"GetInstalledSDKLocations\". (TaskId:27)\n1>Task \"GetInstalledSDKLocations\" skipped, due to false condition; ('@(SDKReference)' != '' and '$(SupportWindowsPhone81SDKs)' == 'true' and '$(TargetPlatformIdentifierWindowsPhone81)' != '' and '$(TargetPlatformVersionWindowsPhone81)' != '') was evaluated as ('Microsoft.VCLibs, Version=14.0' != '' and 'false' == 'true' and '' != '' and '' != '').\n1>Done building target \"GetInstalledSDKLocations\" in project \"HelloUI.vcxproj\".: (TargetId:36)\n1>Target \"ModifyUnitTestPlatformVersion: (TargetId:37)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\Microsoft.Common.targets\\ImportBefore\\Windows.8.1.UT_SDKReference.props\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveSDKReferences\" depends on it):\n1>Done building target \"ModifyUnitTestPlatformVersion\" in project \"HelloUI.vcxproj\".: (TargetId:37)\n1>Target \"ResolveSDKReferences: (TargetId:38)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Using \"ResolveSDKReference\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ResolveSDKReference\" (TaskId:28)\n1>  Task Parameter:\n1>      SDKReferences=\n1>          Microsoft.VCLibs, Version=14.0\n1>                  Implicit=true\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug (TaskId:28)\n1>  Task Parameter:\n1>      References=\n1>          XamlCompositorCS\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true (TaskId:28)\n1>  Task Parameter:TargetPlatformVersion=10.0.10240.0 (TaskId:28)\n1>  Task Parameter:TargetPlatformIdentifier=UAP (TaskId:28)\n1>  Task Parameter:ProjectName=HelloUI (TaskId:28)\n1>  Task Parameter:TargetedSDKConfiguration=Debug (TaskId:28)\n1>  Task Parameter:TargetedSDKArchitecture=x86 (TaskId:28)\n1>  Task Parameter:\n1>      InstalledSDKs=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\CppUnitTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.Midi.GmDls\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.Midi.GmDls, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.CoreRuntime\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.CoreRuntime, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.NET.Native.Runtime.1.1\\1.1\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.NET.Native.Runtime.1.1, Version=1.1\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10150.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10150.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.UniversalCRT.Debug\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.UniversalCRT.Debug, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs.120\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs.120, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\MSTestFramework.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\TestPlatform.Universal\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=10.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform.Universal, Version=14.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsDesktop\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsDesktop, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsIoT\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsIoT, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsMobile\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsMobile, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Extension SDKs\\WindowsTeam\\10.0.10240.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  PlatformVersion=0.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=WindowsTeam, Version=10.0.10240.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.VCLibs\\11.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=11.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\\Microsoft.WinJS.1.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.1.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKManaged\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKManaged, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\BehaviorsXamlSDKNative\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=BehaviorsXamlSDKNative, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\CppUnitTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=CppUnitTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.VCLibs\\12.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=12.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\Microsoft.WinJS.2.0\\1.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.WinJS.2.0, Version=1.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\MSTestFramework\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=MSTestFramework, Version=14.0\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1\\ExtensionSDKs\\TestPlatform\\14.0\\\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  ExtensionDirectoryRoots=\n1>                  PlatformVersion=8.1\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=TestPlatform, Version=14.0 (TaskId:28)\n1>  Task Parameter:Prefer32Bit=True (TaskId:28)\n1>  Searching for SDK \"Microsoft.VCLibs, Version=14.0\":  (TaskId:28)\n1>  Found at search location \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\". (TaskId:28)\n1>    Reading SDK manifest file \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\SDKManifest.xml\". (TaskId:28)\n1>    Targeted configuration and architecture \"Debug|x86\" (TaskId:28)\n1>    Could not find \"FrameworkIdentity\" attribute \"FrameworkIdentity-Debug-x86\" in the SDK manifest.  (TaskId:28)\n1>    Found \"FrameworkIdentity\" attribute \"Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\" in the SDK manifest. (TaskId:28)\n1>    Found \"APPX\" location attribute \"AppX-Debug-x86=.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\" in the SDK manifest. (TaskId:28)\n1>    Found \"APPX\" location attribute \"AppX-Debug-x64=.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx\" in the SDK manifest. (TaskId:28)\n1>    Found \"APPX\" location attribute \"AppX-Debug-ARM=.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx\" in the SDK manifest. (TaskId:28)\n1>  Output Item(s):\n1>      ResolvedSDKReference=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:28)\n1>Done executing task \"ResolveSDKReference\". (TaskId:28)\n1>Done building target \"ResolveSDKReferences\" in project \"HelloUI.vcxproj\".: (TargetId:38)\n1>Target \"ResolveSDKReferences\" skipped. Previously built successfully.\n1>Target \"ExpandSDKReferences: (TargetId:39)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveAssemblyReferences\" depends on it):\n1>Using \"GetSDKReferenceFiles\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"GetSDKReferenceFiles\" (TaskId:29)\n1>  Task Parameter:\n1>      ResolvedSDKReferences=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:29)\n1>  Task Parameter:\n1>      ReferenceExtensions=\n1>          .winmd\n1>          .dll (TaskId:29)\n1>  Task Parameter:TargetSDKIdentifier=Windows (TaskId:29)\n1>  Task Parameter:TargetSDKVersion=10.0 (TaskId:29)\n1>  Enumerating SDK Reference \"Microsoft.VCLibs, Version=14.0\" from \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\". (TaskId:29)\n1>  Looking for references under \"References\\CommonConfiguration\\Neutral\\\". (TaskId:29)\n1>Done executing task \"GetSDKReferenceFiles\". (TaskId:29)\n1>Done building target \"ExpandSDKReferences\" in project \"HelloUI.vcxproj\".: (TargetId:39)\n1>Target \"ResolveNuGetPackageAssets\" skipped, due to false condition; ('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)')) was evaluated as ('true' == 'true' and exists('project.lock.json')).\n1>Target \"ResolveAssemblyReferences: (TargetId:40)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Added Item(s): _ReferenceInstalledAssemblyDirectory=C:\\Program Files (x86)\\Windows Kits\\10\\References\n1>Set Property: ResolveAssemblyReferencesStateFile=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache\n1>Set Property: ResolveAssemblyReferencesSilent=false\n1>Using \"ResolveAssemblyReference\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"ResolveAssemblyReference\" (TaskId:30)\n1>  Task Parameter:\n1>      Assemblies=\n1>          XamlCompositorCS\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  ReferenceOutputAssembly=true (TaskId:30)\n1>  Task Parameter:TargetFrameworkDirectories=C:\\Program Files (x86)\\Windows Kits\\10\\References (TaskId:30)\n1>  Task Parameter:CandidateAssemblyFiles=HelloUI_TemporaryKey.pfx (TaskId:30)\n1>  Task Parameter:\n1>      SearchPaths=\n1>          {CandidateAssemblyFiles}\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\n1>          {HintPathFromItem}\n1>          {TargetFrameworkDirectory}\n1>          {Registry:Software\\Microsoft\\,,AssemblyFoldersEx}\n1>          {GAC}\n1>          {RawFileName}\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\ (TaskId:30)\n1>  Task Parameter:\n1>      AllowedAssemblyExtensions=\n1>          .winmd\n1>          .dll\n1>          .exe (TaskId:30)\n1>  Task Parameter:\n1>      AllowedRelatedFileExtensions=\n1>          .pdb\n1>          .xml\n1>          .pri (TaskId:30)\n1>  Task Parameter:TargetProcessorArchitecture=x86 (TaskId:30)\n1>  Task Parameter:AutoUnify=False (TaskId:30)\n1>  Task Parameter:SupportsBindingRedirectGeneration=True (TaskId:30)\n1>  Task Parameter:FindDependencies=False (TaskId:30)\n1>  Task Parameter:FindSatellites=True (TaskId:30)\n1>  Task Parameter:FindSerializationAssemblies=True (TaskId:30)\n1>  Task Parameter:FindRelatedFiles=True (TaskId:30)\n1>  Task Parameter:Silent=False (TaskId:30)\n1>  Task Parameter:StateFile=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:30)\n1>  Task Parameter:FullTargetFrameworkSubsetNames=Full (TaskId:30)\n1>  Task Parameter:\n1>      ResolvedSDKReferences=\n1>          C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10\\ExtensionSDKs\\Microsoft.VCLibs\\14.0\\\n1>                  AppxLocation=ARM|.\\AppX\\Debug\\ARM\\Microsoft.VCLibs.ARM.Debug.14.00.appx|x64|.\\AppX\\Debug\\x64\\Microsoft.VCLibs.x64.Debug.14.00.appx|x86|.\\AppX\\Debug\\x86\\Microsoft.VCLibs.x86.Debug.14.00.appx\n1>                  CopyLocalExpandedReferenceAssemblies=false\n1>                  CopyRedist=false\n1>                  DirectoryRoots=C:\\Users\\mehme\\AppData\\Local\\Microsoft SDKs;C:\\Program Files (x86)\\Microsoft SDKs\n1>                  DisplayName=Visual C++ 2015 Runtime for Universal Windows Platform Apps\n1>                  ExpandReferenceAssemblies=true\n1>                  ExtensionDirectoryRoots=C:\\Program Files (x86)\\Microsoft SDKs\\Windows Kits\\10;C:\\Program Files (x86)\\Windows Kits\\10\n1>                  FrameworkIdentity=Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US'\n1>                  Implicit=true\n1>                  OriginalItemSpec=Microsoft.VCLibs, Version=14.0\n1>                  RegistryRoot=Software\\Microsoft\\Microsoft SDKs\n1>                  SDKName=Microsoft.VCLibs, Version=14.0\n1>                  SimpleName=Microsoft.VCLibs\n1>                  SupportsMultipleVersions=Error\n1>                  TargetedSDKArchitecture=x86\n1>                  TargetedSDKConfiguration=Debug\n1>                  Version=14.0 (TaskId:30)\n1>  Task Parameter:WarnOrErrorOnTargetArchitectureMismatch=Error (TaskId:30)\n1>  TargetFrameworkMoniker: (TaskId:30)\n1>       (TaskId:30)\n1>  TargetFrameworkMonikerDisplayName: (TaskId:30)\n1>       (TaskId:30)\n1>  TargetedRuntimeVersion: (TaskId:30)\n1>       (TaskId:30)\n1>  Assemblies: (TaskId:30)\n1>      XamlCompositorCS (TaskId:30)\n1>          HintPath = 'C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd' (TaskId:30)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd (TaskId:30)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd (TaskId:30)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd (TaskId:30)\n1>  AssemblyFiles: (TaskId:30)\n1>  CandidateAssemblyFiles: (TaskId:30)\n1>  TargetFrameworkDirectories: (TaskId:30)\n1>      C:\\Program Files (x86)\\Windows Kits\\10\\References (TaskId:30)\n1>  InstalledAssemblyTables: (TaskId:30)\n1>  IgnoreInstalledAssemblyTable: (TaskId:30)\n1>      False (TaskId:30)\n1>  SearchPaths: (TaskId:30)\n1>      {CandidateAssemblyFiles} (TaskId:30)\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib (TaskId:30)\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib (TaskId:30)\n1>      {HintPathFromItem} (TaskId:30)\n1>      {TargetFrameworkDirectory} (TaskId:30)\n1>      {Registry:Software\\Microsoft\\,,AssemblyFoldersEx} (TaskId:30)\n1>      {GAC} (TaskId:30)\n1>      {RawFileName} (TaskId:30)\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\ (TaskId:30)\n1>  AllowedAssemblyExtensions: (TaskId:30)\n1>      .winmd (TaskId:30)\n1>      .dll (TaskId:30)\n1>      .exe (TaskId:30)\n1>  AllowedRelatedFileExtensions: (TaskId:30)\n1>      .pdb (TaskId:30)\n1>      .xml (TaskId:30)\n1>      .pri (TaskId:30)\n1>  AppConfigFile: (TaskId:30)\n1>       (TaskId:30)\n1>  AutoUnify: (TaskId:30)\n1>      False (TaskId:30)\n1>  CopyLocalDependenciesWhenParentReferenceInGac: (TaskId:30)\n1>      True (TaskId:30)\n1>  FindDependencies: (TaskId:30)\n1>      False (TaskId:30)\n1>  TargetProcessorArchitecture: (TaskId:30)\n1>      x86 (TaskId:30)\n1>  StateFile: (TaskId:30)\n1>      Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:30)\n1>  InstalledAssemblySubsetTables: (TaskId:30)\n1>  IgnoreInstalledAssemblySubsetTable: (TaskId:30)\n1>      False (TaskId:30)\n1>  TargetFrameworkSubsets: (TaskId:30)\n1>  FullTargetFrameworkSubsetNames: (TaskId:30)\n1>      Full (TaskId:30)\n1>  ProfileName: (TaskId:30)\n1>       (TaskId:30)\n1>  FullFrameworkFolders: (TaskId:30)\n1>  LatestTargetFrameworkDirectories: (TaskId:30)\n1>  ProfileTablesLocation: (TaskId:30)\n1>  Primary reference \"XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:30)\n1>      Resolved file path is \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\". (TaskId:30)\n1>      Reference found at search path location \"{HintPathFromItem}\". (TaskId:30)\n1>          For SearchPath \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\". (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.winmd\", but it didn't exist. (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.dll\", but it didn't exist. (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\\XamlCompositorCS.exe\", but it didn't exist. (TaskId:30)\n1>          For SearchPath \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\". (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.winmd\", but it didn't exist. (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.dll\", but it didn't exist. (TaskId:30)\n1>          Considered \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\XamlCompositorCS.exe\", but it didn't exist. (TaskId:30)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4;CLR v4.0.30319\". (TaskId:30)\n1>      This reference is a WinMDFile. (TaskId:30)\n1>  Primary reference \"Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:30)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\". (TaskId:30)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:30)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:30)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:30)\n1>      This reference is a WinMDFile. (TaskId:30)\n1>  Primary reference \"Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:30)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\". (TaskId:30)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:30)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:30)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:30)\n1>      This reference is a WinMDFile. (TaskId:30)\n1>  Primary reference \"Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\". (TaskId:30)\n1>      Resolved file path is \"C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\". (TaskId:30)\n1>      Reference found at search path location \"{RawFileName}\". (TaskId:30)\n1>      This reference is not \"CopyLocal\" because it's in a Frameworks directory. (TaskId:30)\n1>      The ImageRuntimeVersion for this reference is \"WindowsRuntime 1.4\". (TaskId:30)\n1>      This reference is a WinMDFile. (TaskId:30)\n1>  Output Item(s):\n1>      ReferencePath=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:30)\n1>  Output Item(s):\n1>      _ResolveAssemblyReferenceResolvedFiles=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  CopyLocal=false\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FrameworkFile=true\n1>                  FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  ImageRuntime=WindowsRuntime 1.4\n1>                  Implicit=true\n1>                  IsSystemReference=True\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={RawFileName}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Native\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:30)\n1>  Output Item(s):\n1>      ReferenceCopyLocalPaths=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  CopyLocal=true\n1>                  CopyLocalSatelliteAssemblies=true\n1>                  FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                  HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                  IsWinMDFile=true\n1>                  OriginalItemSpec=XamlCompositorCS\n1>                  ReferenceOutputAssembly=true\n1>                  ReferenceSourceTarget=ResolveAssemblyReference\n1>                  ResolvedFrom={HintPathFromItem}\n1>                  Version=\n1>                  WinMDFile=true\n1>                  WinMDFileType=Managed (TaskId:30)\n1>  Output Item(s): FileWrites=Debug\\HelloUI.vcxprojResolveAssemblyReference.cache (TaskId:30)\n1>  Output Property: DependsOnSystemRuntime=True (TaskId:30)\n1>Done executing task \"ResolveAssemblyReference\". (TaskId:30)\n1>Done building target \"ResolveAssemblyReferences\" in project \"HelloUI.vcxproj\".: (TargetId:40)\n1>Target \"GenerateBindingRedirects\" skipped, due to false condition; ('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true') was evaluated as ('' == 'true' and 'true' == 'true').\n1>Target \"GenerateBindingRedirectsUpdateAppConfig\" skipped, due to false condition; ('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and Exists('$(_GenerateBindingRedirectsIntermediateAppConfig)')) was evaluated as ('' == 'true' and 'true' == 'true' and Exists('Debug\\HelloUI.vcxproj.HelloUI.exe.config')).\n1>Target \"ResolveComReferences\" skipped, due to false condition; ('@(COMReference)'!='' or '@(COMFileReference)'!='') was evaluated as (''!='' or ''!='').\n1>Target \"AfterResolveReferences: (TargetId:41)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ResolveReferences\" depends on it):\n1>Done building target \"AfterResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:41)\n1>Target \"ResolveTestReferences\" skipped, due to false condition; ('@(Shadow)'!='') was evaluated as (''!='').\n1>Target \"ImplicitlyExpandTargetFramework\" skipped, due to false condition; ('$(ImplicitlyExpandTargetFramework)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ImplicitlyExpandTargetPlatform\" skipped, due to false condition; ('$(ImplicitlyExpandTargetPlatform)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ResolveReferences: (TargetId:42)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Done building target \"ResolveReferences\" in project \"HelloUI.vcxproj\".: (TargetId:42)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"InitializeBuildStatus: (TargetId:43)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Task \"ReadLinesFromFile\" (TaskId:31)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.lastbuildstate (TaskId:31)\n1>Done executing task \"ReadLinesFromFile\". (TaskId:31)\n1>Set Property: ProjectStateLine=#TargetFrameworkVersion=:PlatformToolSet=v140:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit\n1>Set Property: StateBuildType=Build\n1>Task \"WriteLinesToFile\" (TaskId:32)\n1>  Task Parameter:Overwrite=True (TaskId:32)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.lastbuildstate (TaskId:32)\n1>  Task Parameter:\n1>      Lines=\n1>          #TargetFrameworkVersion=:PlatformToolSet=v140:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit\n1>          Debug|Win32|C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI| (TaskId:32)\n1>Done executing task \"WriteLinesToFile\". (TaskId:32)\n1>Using \"Touch\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Touch\" (TaskId:33)\n1>  Task Parameter:AlwaysCreate=True (TaskId:33)\n1>  Task Parameter:Files=Debug\\HelloUI.tlog\\unsuccessfulbuild (TaskId:33)\n1>  Touching \"Debug\\HelloUI.tlog\\unsuccessfulbuild\". (TaskId:33)\n1>Done executing task \"Touch\". (TaskId:33)\n1>Done building target \"InitializeBuildStatus\" in project \"HelloUI.vcxproj\".: (TargetId:43)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence\" skipped. Previously built successfully.\n1>Target \"BuildGenerateSourcesTraverse: (TargetId:44)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildGenerateSources\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '' and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true') was evaluated as ('' == 'true' and '' != '' and '' != '' and '' == 'true').\n1>Done building target \"BuildGenerateSourcesTraverse\" in project \"HelloUI.vcxproj\".: (TargetId:44)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"BeforeBuildGenerateSources: (TargetId:45)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"BeforeBuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:45)\n1>Target \"PreBuildEvent: (TargetId:46)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Task \"Message\" skipped, due to false condition; ('%(PreBuildEvent.Message)' != '' and '%(PreBuildEvent.Command)' != '') was evaluated as ('' != '' and '' != '').\n1>Task \"Exec\" skipped, due to false condition; ('%(PreBuildEvent.Command)' != '') was evaluated as ('' != '').\n1>Done building target \"PreBuildEvent\" in project \"HelloUI.vcxproj\".: (TargetId:46)\n1>Target \"CustomBuild\" skipped, due to false condition; ('@(CustomBuild)' != '') was evaluated as ('' != '').\n1>Target \"FxCompile\" skipped, due to false condition; ('@(FxCompile)' != '') was evaluated as ('' != '').\n1>Target \"Xsd\" skipped, due to false condition; ('@(Xsd)' != '') was evaluated as ('' != '').\n1>Target \"_Xsd: (TargetId:47)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"_Xsd\" in project \"HelloUI.vcxproj\".: (TargetId:47)\n1>Target \"MakeDirsForMidl: (TargetId:48)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Set Property: Midl_OutputDir=\n1>Task \"Makedir\" (TaskId:34)\n1>Done executing task \"Makedir\". (TaskId:34)\n1>Done building target \"MakeDirsForMidl\" in project \"HelloUI.vcxproj\".: (TargetId:48)\n1>Target \"Midl\" skipped, due to false condition; ('@(Midl)' != '') was evaluated as ('' != '').\n1>Target \"CustomBuild\" skipped, due to false condition; ('@(CustomBuild)' != '') was evaluated as ('' != '').\n1>Target \"FxCompile\" skipped, due to false condition; ('@(FxCompile)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs: (TargetId:49)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Set Property: Midl_OutputDir=\n1>Done building target \"ComputeMIDLGeneratedCompileInputs\" in project \"HelloUI.vcxproj\".: (TargetId:49)\n1>Target \"AfterMidl: (TargetId:50)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_Midl\" depends on it):\n1>Done building target \"AfterMidl\" in project \"HelloUI.vcxproj\".: (TargetId:50)\n1>Target \"_Midl: (TargetId:51)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"_Midl\" in project \"HelloUI.vcxproj\".: (TargetId:51)\n1>Target \"AfterBuildGenerateSources: (TargetId:52)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.BuildSteps.Targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"AfterBuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:52)\n1>Target \"AfterBuildGenerateSourcesEvent: (TargetId:53)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildGenerateSourcesAction\" depends on it):\n1>Done building target \"AfterBuildGenerateSourcesEvent\" in project \"HelloUI.vcxproj\".: (TargetId:53)\n1>Target \"_BuildGenerateSourcesAction: (TargetId:54)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildGenerateSources\" depends on it):\n1>Done building target \"_BuildGenerateSourcesAction\" in project \"HelloUI.vcxproj\".: (TargetId:54)\n1>Target \"BuildGenerateSources: (TargetId:55)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"Build\" depends on it):\n1>Done building target \"BuildGenerateSources\" in project \"HelloUI.vcxproj\".: (TargetId:55)\n1>Target \"AssignProjectConfiguration\" skipped. Previously built successfully.\n1>Target \"_SplitProjectReferencesByFileExistence\" skipped. Previously built successfully.\n1>Target \"BuildCompileTraverse: (TargetId:56)\" in file \"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"BuildCompile\" depends on it):\n1>Task \"MSBuild\" skipped, due to false condition; ('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true') was evaluated as ('' == 'true' and '' != '' and '' != ''  and '' == 'true').\n1>Done building target \"BuildCompileTraverse\" in project \"HelloUI.vcxproj\".: (TargetId:56)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"MarkupCompilePass1\" skipped, due to false condition; ('@(Page)' != '' Or '@(ApplicationDefinition)' != '' ) was evaluated as ('' != '' Or '' != '' ).\n1>Target \"BeforeClCompile: (TargetId:57)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"BeforeClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:57)\n1>Target \"ComputeXamlGeneratedCompileInputs\" skipped, due to false condition; ('@(Page)@(ApplicationDefinition)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs\" skipped. Previously built successfully.\n1>Target \"ComputeCLInputPDBName: (TargetId:58)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"ComputeCLInputPDBName\" in project \"HelloUI.vcxproj\".: (TargetId:58)\n1>Target \"ResolveReferences\" skipped. Previously built successfully.\n1>Target \"ComputeReferenceCLInput: (TargetId:59)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Added Item(s):\n1>    WinMDReferenceToCompile=\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Foundation.FoundationContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                CopyLocal=false\n1>                CopyLocalSatelliteAssemblies=true\n1>                FrameworkFile=true\n1>                FusionName=Windows.Networking.Connectivity.WwanContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                ImageRuntime=WindowsRuntime 1.4\n1>                Implicit=true\n1>                IsSystemReference=True\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={RawFileName}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Native\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Added Item(s):\n1>    __ReferenceCopyLocalPaths=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Added Item(s): _ReferenceCopyLocalPaths=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>Task \"WriteLinesToFile\" (TaskId:35)\n1>  Task Parameter:File=Debug\\HelloUI.tlog\\HelloUI.write.1u.tlog (TaskId:35)\n1>  Task Parameter:\n1>      Lines=\n1>          ^C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd (TaskId:35)\n1>  Task Parameter:Encoding=Unicode (TaskId:35)\n1>Done executing task \"WriteLinesToFile\". (TaskId:35)\n1>Task \"Message\" skipped, due to false condition; ('$(_REFERENCE_DEBUG)'=='true') was evaluated as (''=='true').\n1>Removed Item(s): _ReferenceCopyLocalPaths=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>Removed Item(s):\n1>    __ReferenceCopyLocalPaths=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\Debug\\HelloUI\\XamlCompositorCS.winmd\n1>                CopyLocal=true\n1>                CopyLocalSatelliteAssemblies=true\n1>                FusionName=XamlCompositorCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime\n1>                HintPath=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                ImageRuntime=WindowsRuntime 1.4;CLR v4.0.30319\n1>                IsWinMDFile=true\n1>                OriginalItemSpec=XamlCompositorCS\n1>                ReferenceOutputAssembly=true\n1>                ReferenceSourceTarget=ResolveAssemblyReference\n1>                ResolvedFrom={HintPathFromItem}\n1>                Version=\n1>                WinMDFile=true\n1>                WinMDFileType=Managed\n1>Done building target \"ComputeReferenceCLInput\" in project \"HelloUI.vcxproj\".: (TargetId:59)\n1>Target \"WarnCompileDuplicatedFilename: (TargetId:60)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Task \"VCMessage\" skipped, due to false condition; ('%(ClCompile.ExcludedFromBuild)' != 'true' and '%(Filename)%(Extension)' != '@(ClCompile->'%(Filename)%(Extension)')' and '%(ObjectFileName)' == '@(ClCompile->Metadata(ObjectFileName)->Distinct())') was evaluated as ('' != 'true' and 'ConsumeRuntimeComponent.cpp' != 'ConsumeRuntimeComponent.cpp' and 'Debug\\' == 'Debug\\').\n1>Done building target \"WarnCompileDuplicatedFilename\" in project \"HelloUI.vcxproj\".: (TargetId:60)\n1>Target \"FixupCLCompileOptions: (TargetId:61)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"FixupCLCompileOptions\" in project \"HelloUI.vcxproj\".: (TargetId:61)\n1>Target \"MakeDirsForCl: (TargetId:62)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Added Item(s): ClDirsToMake=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Task \"MakeDir\" (TaskId:36)\n1>  Task Parameter:\n1>      Directories=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug (TaskId:36)\n1>Done executing task \"MakeDir\". (TaskId:36)\n1>Removed Item(s):\n1>    ClDirsToMake=\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>        C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\n1>Done building target \"MakeDirsForCl\" in project \"HelloUI.vcxproj\".: (TargetId:62)\n1>Target \"PrepareForBuild\" skipped. Previously built successfully.\n1>Target \"SetBuildDefaultEnvironmentVariables\" skipped. Previously built successfully.\n1>Target \"SetUserMacroEnvironmentVariables\" skipped, due to false condition; ('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true') was evaluated as ('' != '' and '' != 'true').\n1>Target \"_SelectedFiles: (TargetId:63)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"SelectClCompile\" depends on it):\n1>Done building target \"_SelectedFiles\" in project \"HelloUI.vcxproj\".: (TargetId:63)\n1>Target \"ComputeXamlGeneratedCompileInputs\" skipped, due to false condition; ('@(Page)@(ApplicationDefinition)' != '') was evaluated as ('' != '').\n1>Target \"ComputeMIDLGeneratedCompileInputs\" skipped. Previously built successfully.\n1>Target \"ComputeCLInputPDBName\" skipped. Previously built successfully.\n1>Target \"ComputeReferenceCLInput\" skipped. Previously built successfully.\n1>Target \"WarnCompileDuplicatedFilename\" skipped. Previously built successfully.\n1>Target \"FixupCLCompileOptions\" skipped. Previously built successfully.\n1>Target \"_SelectedFiles\" skipped. Previously built successfully.\n1>Target \"SelectCustomBuild: (TargetId:64)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"SelectClCompile\" depends on it):\n1>Done building target \"SelectCustomBuild\" in project \"HelloUI.vcxproj\".: (TargetId:64)\n1>Target \"SelectClCompile: (TargetId:65)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"ClCompile\" depends on it):\n1>Done building target \"SelectClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:65)\n1>Target \"GenerateTargetFrameworkMonikerAttribute\" skipped, due to false condition; ('$(GenerateTargetFrameworkAttribute)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ManagedIncrementalBuildPreProcessDependencyGraph\" skipped, due to false condition; ('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True') was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp' != '' and 'false' == 'True').\n1>Target \"ClCompile: (TargetId:66)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Set Property: CLToolArchitecture=Native32Bit\n1>Set Property: CLDeleteOutputOnExecute=true\n1>Task \"Delete\" skipped, due to false condition; ('%(ClCompile.DebugInformationFormat)' != '' and '%(ClCompile.DebugInformationFormat)' != 'None' and '%(ClCompile.DebugInformationFormat)' != 'OldStyle' and '%(ClCompile.ProgramDataBaseFileName)' != '' and !Exists(%(ClCompile.ProgramDataBaseFileName))) was evaluated as ('ProgramDatabase' != '' and 'ProgramDatabase' != 'None' and 'ProgramDatabase' != 'OldStyle' and 'Debug\\vc140.pdb' != '' and !Exists(Debug\\vc140.pdb)).\n1>Task \"CL\" skipped, due to false condition; ('%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.ExcludedFromBuild)'!='true' and '%(ClCompile.CompilerIteration)' == '') was evaluated as ('NotUsing' == 'Create' and ''!='true' and '' == '').\n1>Using \"CL\" task from assembly \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll\".\n1>Task \"CL\" (TaskId:37)\n1>  Task Parameter:BuildingInIde=True (TaskId:37)\n1>  Task Parameter:\n1>      Sources=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp\n1>                  AcceptableNonZeroExitCodes=\n1>                  AdditionalIncludeDirectories=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\;Generated Files\\;Debug\\;;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  AdditionalOptions=/bigobj\n1>                  AssemblerListingLocation=\n1>                  AssemblerOutput=NoListing\n1>                  BasicRuntimeChecks=Default\n1>                  BrowseInformation=false\n1>                  BrowseInformationFile=Debug\\\n1>                  BufferSecurityCheck=true\n1>                  CallingConvention=Cdecl\n1>                  CompileAs=CompileAsCpp\n1>                  CompileAsWinRT=true\n1>                  DebugInformationFormat=ProgramDatabase\n1>                  DisableLanguageExtensions=false\n1>                  DisableSpecificWarnings=4453;28204\n1>                  EnableEnhancedInstructionSet=NotSet\n1>                  EnableFiberSafeOptimizations=false\n1>                  EnablePREfast=false\n1>                  ErrorReporting=Prompt\n1>                  ExceptionHandling=Sync\n1>                  ExpandAttributedSource=false\n1>                  FavorSizeOrSpeed=Neither\n1>                  FloatingPointModel=Precise\n1>                  ForceConformanceInForLoopScope=true\n1>                  ForcedIncludeFiles=\n1>                  ForcedUsingFiles=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\references\\platform.winmd;;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd;C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd\n1>                  FunctionLevelLinking=true\n1>                  GenerateXMLDocumentationFiles=false\n1>                  IgnoreStandardIncludePath=false\n1>                  ImpLibCompiled=\n1>                  InlineFunctionExpansion=Default\n1>                  IntrinsicFunctions=true\n1>                  LibCompiled=\n1>                  LinkCompiled=true\n1>                  MinimalRebuild=false\n1>                  MinimalRebuildFromTracking=true\n1>                  MultiProcessorCompilation=true\n1>                  ObjectFileName=Debug\\\n1>                  OmitDefaultLibName=false\n1>                  OmitFramePointers=false\n1>                  Optimization=MaxSpeed\n1>                  PrecompiledHeader=NotUsing\n1>                  PrecompiledHeaderFile=\n1>                  PrecompiledHeaderOutputFile=\n1>                  PreprocessKeepComments=false\n1>                  PreprocessorDefinitions=_UNICODE;UNICODE;;WINAPI_FAMILY=WINAPI_FAMILY_APP;__WRL_NO_DEFAULT_LIB\n1>                  PreprocessSuppressLineNumbers=false\n1>                  PreprocessToFile=false\n1>                  ProgramDataBaseFileName=Debug\\vc140.pdb\n1>                  RemoveUnreferencedCodeData=true\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  SDLCheck=true\n1>                  ShowIncludes=false\n1>                  SmallerTypeCheck=false\n1>                  StructMemberAlignment=Default\n1>                  SuppressStartupBanner=true\n1>                  TrackerLogDirectory=Debug\\HelloUI.tlog\\\n1>                  TreatWarningAsError=false\n1>                  TreatWChar_tAsBuiltInType=true\n1>                  UndefineAllPreprocessorDefinitions=false\n1>                  UseFullPaths=false\n1>                  UseUnicodeForAssemblerListing=\n1>                  WarningLevel=Level3\n1>                  WholeProgramOptimization=false\n1>                  WinRTNoStdLib=true\n1>                  XMLDocumentationFileName=Debug\\ (TaskId:37)\n1>  Task Parameter:\n1>      AdditionalIncludeDirectories=\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\\n1>          Generated Files\\\n1>          Debug\\\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude (TaskId:37)\n1>  Task Parameter:AdditionalOptions=/bigobj  (TaskId:37)\n1>  Task Parameter:AssemblerOutput=NoListing (TaskId:37)\n1>  Task Parameter:BasicRuntimeChecks=Default (TaskId:37)\n1>  Task Parameter:BrowseInformation=False (TaskId:37)\n1>  Task Parameter:BrowseInformationFile=Debug\\ (TaskId:37)\n1>  Task Parameter:BufferSecurityCheck=true (TaskId:37)\n1>  Task Parameter:CallingConvention=Cdecl (TaskId:37)\n1>  Task Parameter:CompileAsWinRT=True (TaskId:37)\n1>  Task Parameter:CompileAs=CompileAsCpp (TaskId:37)\n1>  Task Parameter:DebugInformationFormat=ProgramDatabase (TaskId:37)\n1>  Task Parameter:DisableLanguageExtensions=False (TaskId:37)\n1>  Task Parameter:\n1>      DisableSpecificWarnings=\n1>          4453\n1>          28204 (TaskId:37)\n1>  Task Parameter:EnableEnhancedInstructionSet=NotSet (TaskId:37)\n1>  Task Parameter:EnableFiberSafeOptimizations=False (TaskId:37)\n1>  Task Parameter:EnablePREfast=False (TaskId:37)\n1>  Task Parameter:ErrorReporting=Prompt (TaskId:37)\n1>  Task Parameter:ExceptionHandling=Sync (TaskId:37)\n1>  Task Parameter:\n1>      ExcludedInputPaths=\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>          C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>          C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\\n1>          C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\lib\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86 (TaskId:37)\n1>  Task Parameter:ExpandAttributedSource=False (TaskId:37)\n1>  Task Parameter:FavorSizeOrSpeed=Neither (TaskId:37)\n1>  Task Parameter:FloatingPointModel=Precise (TaskId:37)\n1>  Task Parameter:ForceConformanceInForLoopScope=True (TaskId:37)\n1>  Task Parameter:\n1>      ForcedUsingFiles=\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\\store\\references\\platform.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.FoundationContract\\1.0.0.0\\Windows.Foundation.FoundationContract.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Foundation.UniversalApiContract\\1.0.0.0\\Windows.Foundation.UniversalApiContract.winmd\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\References\\Windows.Networking.Connectivity.WwanContract\\1.0.0.0\\Windows.Networking.Connectivity.WwanContract.winmd\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\lib\\Universal Windows\\x86\\XamlCompositorCS.winmd (TaskId:37)\n1>  Task Parameter:FunctionLevelLinking=True (TaskId:37)\n1>  Task Parameter:GenerateXMLDocumentationFiles=False (TaskId:37)\n1>  Task Parameter:IgnoreStandardIncludePath=False (TaskId:37)\n1>  Task Parameter:InlineFunctionExpansion=Default (TaskId:37)\n1>  Task Parameter:IntrinsicFunctions=True (TaskId:37)\n1>  Task Parameter:MinimalRebuild=False (TaskId:37)\n1>  Task Parameter:MultiProcessorCompilation=True (TaskId:37)\n1>  Task Parameter:ObjectFileName=Debug\\ (TaskId:37)\n1>  Task Parameter:OmitDefaultLibName=False (TaskId:37)\n1>  Task Parameter:OmitFramePointers=False (TaskId:37)\n1>  Task Parameter:Optimization=MaxSpeed (TaskId:37)\n1>  Task Parameter:PrecompiledHeader=NotUsing (TaskId:37)\n1>  Task Parameter:PreprocessKeepComments=False (TaskId:37)\n1>  Task Parameter:\n1>      PreprocessorDefinitions=\n1>          _UNICODE\n1>          UNICODE\n1>          WINAPI_FAMILY=WINAPI_FAMILY_APP\n1>          WRL_NO_DEFAULT_LIB (TaskId:37)\n1>  Task Parameter:PreprocessSuppressLineNumbers=False (TaskId:37)\n1>  Task Parameter:PreprocessToFile=False (TaskId:37)\n1>  Task Parameter:ProgramDataBaseFileName=Debug\\vc140.pdb (TaskId:37)\n1>  Task Parameter:RemoveUnreferencedCodeData=True (TaskId:37)\n1>  Task Parameter:RuntimeLibrary=MultiThreadedDebugDLL (TaskId:37)\n1>  Task Parameter:SDLCheck=True (TaskId:37)\n1>  Task Parameter:ShowIncludes=False (TaskId:37)\n1>  Task Parameter:SmallerTypeCheck=False (TaskId:37)\n1>  Task Parameter:StructMemberAlignment=Default (TaskId:37)\n1>  Task Parameter:SuppressStartupBanner=True (TaskId:37)\n1>  Task Parameter:TreatWarningAsError=False (TaskId:37)\n1>  Task Parameter:TreatWChar_tAsBuiltInType=True (TaskId:37)\n1>  Task Parameter:UndefineAllPreprocessorDefinitions=False (TaskId:37)\n1>  Task Parameter:UseFullPaths=False (TaskId:37)\n1>  Task Parameter:WarningLevel=Level3 (TaskId:37)\n1>  Task Parameter:WholeProgramOptimization=False (TaskId:37)\n1>  Task Parameter:WinRTNoStdLib=True (TaskId:37)\n1>  Task Parameter:XMLDocumentationFileName=Debug\\ (TaskId:37)\n1>  Task Parameter:TrackerLogDirectory=Debug\\HelloUI.tlog\\ (TaskId:37)\n1>  Task Parameter:TrackFileAccess=True (TaskId:37)\n1>  Task Parameter:MinimalRebuildFromTracking=True (TaskId:37)\n1>  Task Parameter:ToolArchitecture=Native32Bit (TaskId:37)\n1>  Task Parameter:DeleteOutputOnExecute=True (TaskId:37)\n1>  Task Parameter:YieldDuringToolExecution=True (TaskId:37)\n1>  Using cached input dependency table built from: (TaskId:37)\n1>      C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug\\HelloUI.tlog\\CL.read.1.tlog (TaskId:37)\n1>  Outputs for C:\\USERS\\MEHME\\DOWNLOADS\\WINOBJC\\MSVC\\CONSUMERUNTIMECOMPONENT.CPP: (TaskId:37)\n1>      C:\\USERS\\MEHME\\DOWNLOADS\\WINOBJC\\SAMPLES\\HELLOUI\\HELLOUI.VSIMPORTER\\HELLOUI-WINSTORE10\\DEBUG\\CONSUMERUNTIMECOMPONENT.OBJ (TaskId:37)\n1>  All outputs are up-to-date. (TaskId:37)\n1>Done executing task \"CL\". (TaskId:37)\n1>Done building target \"ClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:66)\n1>Target \"ManagedIncrementalBuildPostProcessDependencyGraph\" skipped, due to false condition; ('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True') was evaluated as ('C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ConsumeRuntimeComponent.cpp' != '' and 'false' == 'True').\n1>Target \"AfterClCompile: (TargetId:67)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClCompile\" depends on it):\n1>Done building target \"AfterClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:67)\n1>Target \"_ClCompile: (TargetId:68)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Done building target \"_ClCompile\" in project \"HelloUI.vcxproj\".: (TargetId:68)\n1>Target \"_ResGen\" skipped, due to false condition; ('@(EmbeddedResource)'!='') was evaluated as (''!='').\n1>Target \"BeforeResourceCompile: (TargetId:69)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Done building target \"BeforeResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:69)\n1>Target \"MakeDirsForResourceCompile: (TargetId:70)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Task \"MakeDir\" (TaskId:38)\n1>Done executing task \"MakeDir\". (TaskId:38)\n1>Done building target \"MakeDirsForResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:70)\n1>Target \"ResourceCompile\" skipped, due to false condition; ('@(ResourceCompile)' != '') was evaluated as ('' != '').\n1>Target \"AfterResourceCompile: (TargetId:71)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ResourceCompile\" depends on it):\n1>Done building target \"AfterResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:71)\n1>Target \"_ResourceCompile: (TargetId:72)\" in file \"C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Done building target \"_ResourceCompile\" in project \"HelloUI.vcxproj\".: (TargetId:72)\n1>Target \"_ImpLib\" skipped, due to false condition; ('$(ImpLibCompiled)' == 'true') was evaluated as ('' == 'true').\n1>Target \"_Lib\" skipped, due to false condition; ('$(LibCompiled)' == 'true') was evaluated as ('' == 'true').\n1>Target \"_SelectedFiles\" skipped. Previously built successfully.\n1>Target \"ComputeClangOptions\" skipped. Previously built successfully.\n1>Target \"MakeDirsForClang: (TargetId:73)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClangCompile\" depends on it):\n1>Task \"MakeDir\" (TaskId:39)\n1>  Task Parameter:Directories=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\Debug (TaskId:39)\n1>Done executing task \"MakeDir\". (TaskId:39)\n1>Done building target \"MakeDirsForClang\" in project \"HelloUI.vcxproj\".: (TargetId:73)\n1>Target \"GenerateCombinedHMap\" skipped, due to false condition; ('$(CombinedHMapRequired)' == 'true') was evaluated as ('false' == 'true').\n1>Target \"ComputeProjectHMap: (TargetId:74)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateProjectHMap\" depends on it):\n1>Added Item(s): HeaderMap=Debug\\HelloUI-project\n1>Added Item(s): HeaderMapEntry=Empty\n1>Done building target \"ComputeProjectHMap\" in project \"HelloUI.vcxproj\".: (TargetId:74)\n1>Target \"GenerateProjectHMap: (TargetId:75)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateHeaderMaps\" depends on it):\n1>Building target \"GenerateProjectHMap\" completely.\n1>Output file \"Debug\\HelloUI-project.txt\" does not exist.\n1>Task \"WriteLinesToFile\" (TaskId:40)\n1>  Task Parameter:File=Debug\\HelloUI-project.txt (TaskId:40)\n1>  Task Parameter:Lines=Empty (TaskId:40)\n1>  Task Parameter:Overwrite=True (TaskId:40)\n1>  Task Parameter:Encoding=ASCII (TaskId:40)\n1>Done executing task \"WriteLinesToFile\". (TaskId:40)\n1>Removed Item(s): HeaderMapEntry=Empty\n1>Done building target \"GenerateProjectHMap\" in project \"HelloUI.vcxproj\".: (TargetId:75)\n1>Target \"WriteHeaderMaps: (TargetId:76)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"GenerateHeaderMaps\" depends on it):\n1>Building target \"WriteHeaderMaps\" completely.\n1>Output file \"Debug\\HelloUI-project.hmap\" does not exist.\n1>Using \"Exec\" task from assembly \"Microsoft.Build.Tasks.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\".\n1>Task \"Exec\" (TaskId:41)\n1>  Task Parameter:Command=\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\bin\\hmapmaker.exe\" \"Debug\\HelloUI-project.txt\" \"Debug\\HelloUI-project.hmap\" (TaskId:41)\n1>Done executing task \"Exec\". (TaskId:41)\n1>Done building target \"WriteHeaderMaps\" in project \"HelloUI.vcxproj\".: (TargetId:76)\n1>Target \"GenerateHeaderMaps: (TargetId:77)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_ClangCompile\" depends on it):\n1>Done building target \"GenerateHeaderMaps\" in project \"HelloUI.vcxproj\".: (TargetId:77)\n1>Target \"ComputeClangOptions\" skipped. Previously built successfully.\n1>Target \"_ClangCompile: (TargetId:78)\" in file \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\sbclang.targets\" from project \"C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj\" (target \"_BuildCompileAction\" depends on it):\n1>Using \"Clang\" task from assembly \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\ClangCompileTask.dll\".\n1>Task \"Clang\" (TaskId:42)\n1>  Task Parameter:\n1>      InternalSystemIncludePaths=\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\n1>          C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\n1>          C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\n1>          C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\n1>          C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude (TaskId:42)\n1>  Task Parameter:AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] AdditionalOptions\n1>  Task Parameter:CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] AdditionalOptions\n1>  Task Parameter:CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog (TaskId:42)\n1>  Task Parameter:CompileAs=CompileAsObjC (TaskId:42)\n1>  Task Parameter:DebugInformation=True (TaskId:42)\n1>  Task Parameter:ExceptionHandling=True (TaskId:42)\n1>  Task Parameter:HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\" (TaskId:42)\n1>  Task Parameter:IncludePaths=C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat (TaskId:42)\n1>  Task Parameter:\n1>      Input=\n1>          ....\\HelloUI\\HelloUI.m\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false\n1>          ....\\HelloUI\\main.m\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false (TaskId:42)\n1>  Task Parameter:LLVMDirectory=C:\\Users\\mehme\\Downloads\\winobjc\\msvc\\LLVM-3.6.0\\ (TaskId:42)\n1>  Task Parameter:ObjectiveCARC=True (TaskId:42)\n1>  Task Parameter:ObjectFileName=Debug\\ (TaskId:42)\n1>  Task Parameter:OptimizationLevel=Disabled (TaskId:42)\n1>  Task Parameter:PreprocessorDefinitions=DEBUG=1 (TaskId:42)\n1>  Task Parameter:ProjectFile=C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj (TaskId:42)\n1>  Task Parameter:RuntimeLibrary=MultiThreadedDebugDLL (TaskId:42)\n1>  Task Parameter:ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog (TaskId:42)\n1>  Task Parameter:AdditionalOptions=  -D__ISLANDWOOD_COMPAT (TaskId:42)\n1>  ....\\HelloUI\\HelloUI.m (TaskId:42)\n1>CLANG : error : error reading 'static'\n1>CLANG : error : error reading '19'\n1>CLANG : error : error reading 'Microsoft.Build.Framework.ITaskItem[]'\n1>  The command exited with code 1. (TaskId:42)\n1>  Output Item(s):\n1>      ClangOutputs=\n1>          Debug\\HelloUI_B67EC006.obj\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\HelloUI_B67EC006.obj\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OriginalItemSpec=....\\HelloUI\\HelloUI.m\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false\n1>          Debug\\main_23BBE24D.obj\n1>                  AdditionalOptions= -D__ISLANDWOOD_COMPAT\n1>                  AutocompleteCommandLineTemplate=-Xclang -triple -Xclang i686-pc-windows-msvc -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -dwarf-column-info -resource-dir \"[LLVMResourceDir]\" -Xclang -internal-isystem -Xclang \"[LLVMResourceDir]\\include\" -Xclang -internal-isystem -Xclang \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -Xclang -internal-isystem -Xclang \"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [AllOptions] [AdditionalOptions]\n1>                  CommandLineTemplate=-cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] [AllOptions] [DependencySource] [DependencyFile] [AdditionalOptions]\n1>                  CommandTLogFile=Debug\\HelloUI.tlog\\clang.command.1.tlog\n1>                  CompileAs=CompileAsObjC\n1>                  DebugInformation=true\n1>                  ExceptionHandling=true\n1>                  HeaderMap=Project\n1>                  HeaderMapInclude=-iquote\"Debug\\HelloUI-project.hmap\"\n1>                  IncludePaths=;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\compat;\n1>                  InternalSystemIncludePaths=C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um;C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt;;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include;C:\\Users\\mehme\\Downloads\\winobjc\\msvc..\\include\\VCInclude\n1>                  ObjectFileName=Debug\\main_23BBE24D.obj\n1>                  ObjectiveCARC=true\n1>                  OptimizationLevel=Disabled\n1>                  OriginalItemSpec=....\\HelloUI\\main.m\n1>                  OtherFlags=\n1>                  PreprocessorDefinitions=DEBUG=1\n1>                  ReadTLogFile=Debug\\HelloUI.tlog\\clang.read.1.tlog\n1>                  RuntimeLibrary=MultiThreadedDebugDLL\n1>                  ShowOnlyRuleProperties=false (TaskId:42)\n1>Done executing task \"Clang\" -- FAILED. (TaskId:42)\n1>Done building target \"_ClangCompile\" in project \"HelloUI.vcxproj\" -- FAILED.: (TargetId:78)\n1>\n1>Project Performance Summary:\n1>      196 ms  C:\\Users\\mehme\\Downloads\\winobjc\\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10\\HelloUI.vcxproj   1 calls\n1>                196 ms  Rebuild                                    1 calls\n1>\n1>Target Performance Summary:\n1>        0 ms  RemoveDirIfEmpty                           1 calls\n1>        0 ms  AfterMidl                                  1 calls\n1>        0 ms  AfterCppClean                              1 calls\n1>        0 ms  ComputeCLInputPDBName                      1 calls\n1>        0 ms  ModifyUnitTestPlatformVersion              1 calls\n1>        0 ms  _ClCompile                                 1 calls\n1>        0 ms  BeforeClean                                1 calls\n1>        0 ms  _Midl                                      1 calls\n1>        0 ms  _PrepareForBuild                           1 calls\n1>        0 ms  CleanReferencedProjects                    1 calls\n1>        0 ms  _BeforeBeforeRebuild                       1 calls\n1>        0 ms  SelectClCompile                            1 calls\n1>        0 ms  ResolveReferences                          1 calls\n1>        0 ms  AfterClean                                 1 calls\n1>        0 ms  SelectCustomBuild                          1 calls\n1>        0 ms  AfterBuildGenerateSources                  1 calls\n1>        0 ms  CleanPublishFolder                         1 calls\n1>        0 ms  BuildCompileTraverse                       1 calls\n1>        0 ms  Clean                                      1 calls\n1>        0 ms  GenerateHeaderMaps                         1 calls\n1>        0 ms  AfterResourceCompile                       1 calls\n1>        0 ms  ComputeProjectHMap                         1 calls\n1>        0 ms  BeforeCppClean                             1 calls\n1>        0 ms  _ResourceCompile                           1 calls\n1>        0 ms  MakeDirsForResourceCompile                 1 calls\n1>        0 ms  BeforeRebuild                              1 calls\n1>        0 ms  _Xsd                                       1 calls\n1>        0 ms  GetFrameworkPaths                          1 calls\n1>        0 ms  CppClean                                   1 calls\n1>        0 ms  ComputeClangOptions                        1 calls\n1>        0 ms  ComputeMIDLGeneratedCompileInputs          1 calls\n1>        0 ms  PreBuildEvent                              1 calls\n1>        0 ms  UAP_PlatformPrepareForBuild                1 calls\n1>        0 ms  _BuildGenerateSourcesAction                1 calls\n1>        0 ms  BeforeResolveReferences                    1 calls\n1>        0 ms  AfterResolveReferences                     1 calls\n1>        0 ms  _SelectedFiles                             1 calls\n1>        0 ms  BeforeClCompile                            1 calls\n1>        0 ms  AfterBuildGenerateSourcesEvent             1 calls\n1>        0 ms  _PrepareForRebuild                         1 calls\n1>        0 ms  BuildGenerateSources                       1 calls\n1>        0 ms  MakeDirsForClang                           1 calls\n1>        0 ms  ComputeCrtSDKReference                     1 calls\n1>        0 ms  ResolveProjectReferences                   1 calls\n1>        0 ms  _SplitProjectReferencesByFileExistence     1 calls\n1>        0 ms  PlatformPrepareForBuild                    1 calls\n1>        0 ms  BuildGenerateSourcesTraverse               1 calls\n1>        0 ms  AfterClCompile                             1 calls\n1>        0 ms  MakeDirsForMidl                            1 calls\n1>        1 ms  FixupCLCompileOptions                      1 calls\n1>        1 ms  MakeDirsForCl                              1 calls\n1>        1 ms  GetResolvedWinMD                           1 calls\n1>        1 ms  AssignProjectConfiguration                 1 calls\n1>        1 ms  GetReferenceAssemblyPaths                  1 calls\n1>        1 ms  CleanClang                                 1 calls\n1>        1 ms  BeforeBuildGenerateSources                 1 calls\n1>        1 ms  BeforeResourceCompile                      1 calls\n1>        1 ms  SetBuildDefaultEnvironmentVariables        1 calls\n1>        1 ms  PGInstrumentedClean                        1 calls\n1>        1 ms  WarnCompileDuplicatedFilename              1 calls\n1>        2 ms  GenerateProjectHMap                        1 calls\n1>        2 ms  ResolveSDKReferences                       1 calls\n1>        2 ms  _PrepareForReferenceResolution             1 calls\n1>        3 ms  PrepareForBuild                            1 calls\n1>        3 ms  ExpandSDKReferences                        1 calls\n1>        3 ms  _CheckForInvalidConfigurationAndPlatform   1 calls\n1>        3 ms  InitializeBuildStatus                      1 calls\n1>        4 ms  _PrepareForClean                           1 calls\n1>        6 ms  SetCABuildNativeEnvironmentVariables       1 calls\n1>        7 ms  ComputeReferenceCLInput                    1 calls\n1>       11 ms  CoreClean                                  1 calls\n1>       12 ms  ClCompile                                  1 calls\n1>       13 ms  ResolveAssemblyReferences                  1 calls\n1>       17 ms  CoreCppClean                               1 calls\n1>       27 ms  GetInstalledSDKLocations                   1 calls\n1>       33 ms  _ClangCompile                              1 calls\n1>       33 ms  WriteHeaderMaps                            1 calls\n1>\n1>Task Performance Summary:\n1>        0 ms  ReadLinesFromFile                          2 calls\n1>        0 ms  SetEnvironmentVariable                     1 calls\n1>        0 ms  AssignProjectConfiguration                 1 calls\n1>        0 ms  Message                                    2 calls\n1>        1 ms  MakeDir                                    8 calls\n1>        1 ms  RemoveDuplicates                           1 calls\n1>        1 ms  Touch                                      1 calls\n1>        1 ms  SetEnv                                     4 calls\n1>        2 ms  ResolveSDKReference                        1 calls\n1>        3 ms  GetSDKReferenceFiles                       1 calls\n1>        6 ms  Delete                                     5 calls\n1>        8 ms  FindUnderPath                              2 calls\n1>       11 ms  CL                                         1 calls\n1>       12 ms  ResolveAssemblyReference                   1 calls\n1>       13 ms  CppClean                                   1 calls\n1>       14 ms  WriteLinesToFile                           5 calls\n1>       26 ms  GetInstalledSDKLocations                   2 calls\n1>       32 ms  Clang                                      1 calls\n1>       33 ms  Exec                                       1 calls\n1>\n1>Build FAILED.\n1>\n1>Time Elapsed 00:00:00.19\n========== Rebuild All: 0 succeeded, 1 failed, 0 skipped ==========\n. @davelamb uploaded here \nhttps://onedrive.live.com/redir?resid=9F1CEE764999EC30!304511&authkey=!AL0t_5wBCKpKFvI&ithint=file%2ctxt \n. @davelamb you are right! I changed my date time, number format settings from Turkish to United States and it worked after restarting visual studio. The latest assembly still does not work with Turkish. \nUnfortunately I did not save the failure log and interestingly it builds successfully even I change my settings back to Turkish. Then I tried with the WOCCatolog and it failed here the log for it \nhttps://onedrive.live.com/redir?resid=9F1CEE764999EC30!304515&authkey=!AK9RRwJZR43xt-Y&ithint=file%2ctxt \n. @asimonov-msft @davelamb  live sdk for android used to have the same problem :) i am glad the problem is clear, thanks for your help. \nhttps://github.com/liveservices/LiveSDK-for-Android/commit/9a20335cbc19be510886df7456f53c00802d4bf9 \n. ",
    "brusMX": "Hey guys, whenever I do \nobjc\n[[UINavigationBar appearance] setTintColor:[UIColor whiteColor]];\nI get the next Exception \n\nPlaform::NotImplemented Exception ^.\nSelector +[appearenceWhenContainedIn:forUIClass] is not implemented for class UIApperanceSetter on object 0x1754840!\n\nAny help will be welcome, also is there a way to change the blue color of the nav bar?\n. ",
    "bdrlamb-ms": "@Alx06 You can manually set/override the application startup orientation using the display settings override callback that's issued to +[UIApplication setStartupDisplayMode:] - set \"mode.presentationTransform = UIInterfaceOrientationLandscapeLeft\"\nSee \"WOCDisplayMode\" in /include/UIKit/UIApplication.h and \"setStartupDisplayMode:\" in /samples/WOCCatalog/AppDelegate.m for an example.\n. You can manually set/override the application startup orientation using the display settings override callback that's issued to +[UIApplication setStartupDisplayMode:] - set \"mode.presentationTransform = UIInterfaceOrientationLandscapeLeft\"\nSee \"WOCDisplayMode\" in /include/UIKit/UIApplication.h and \"setStartupDisplayMode:\" in /samples/WOCCatalog/AppDelegate.m for an example.\n. Can you elaborate on what you saw?  I ran it and it appeared to work alright.  Were there any other animations being applied to the view?\n. Do you have a sample project you could share that repros the issue?  I stuck this into an empty project and it looked fine:\n```\nUIImageView *view = [UIImageView new];\nview.image = [UIImage imageWithContentsOfFile: @\"Logo.scale-100.png\"];\n[self.view addSubview: view];\nview.frame = CGRectMake (50,50,100,200);\nview.backgroundColor = [UIColor redColor];\n[UIView animateWithDuration:0.3\n```\nanimations:^{\nview.frame = CGRectMake (0,0,10,20);\n}\ncompletion:^(BOOL finished){\n}];\n. I did, it still looked OK.  Are you using autolayout or an autoresizing mask on any of these views?\n. ",
    "GitMarJansen": "I am also running into this issue.\n. Hi Rajsesh,\nI attacht the logfile. (I replace customer/project names with 'customer' and 'project')\nProjectLog.zip\nRegards,\nHilmar\n. ",
    "hologramas": "Any idea when this be available?, or a temporal workaround or alternative?\nthanks.\n. ",
    "jasssonpet": "One more time to be sure :)\n. ",
    "vertostudio3d": "\n. ",
    "PooyaZv": "Can you please try with ARC turned off? (Project > Properties > Clang > General > Enable Objective-C ARC = No)\nAlso, please see https://github.com/Microsoft/WinObjC/issues/354 and https://github.com/Microsoft/WinObjC/issues/405 . If the issue turns out to persist after the latter is fixed as well, please follow up with us :) Thank you.\n. Our apologies for the delayed response. We have a new release of the compiler. Can you try with the new version to see if the problem still persists?\n. @ninjanpotter : I will close this issue since we don't have enough information to proceed including whether or not the issue has been resolved with the substantial changes since when it was opened. Should you run into this again, please let us know and we'd be happy to look into it further.\n. We have a technology preview out for ARM. Please use any release after Feb 18th and let us know if you run into any issues.\n. We support .lib. So if you have the source for those libraries you can re-compile them to generate .lib static libs and link against them.\n. Gary, can we work together to further look into this issue? My email address is PoZandev@microsoft.com\n. @harcalion: Can we communicate through email: PoZandev@microsoft.com\n. Thank you Alvar for working with us on this issue. To elaborate, the issue is caused by @throw; statements in catch blocks. We will be working on a fix soon. In the meanwhile, one possible workaround is to replace @throw; with a @throw statement with an argument.\n. @gary17: please see comments on #296. It is possible that the source of all the Devil is in exception handling code. June 9th had a fix for #556, which might be why you are seeing #294 (this issue) go away (It could also be because of fix for #354 that we pushed a while back). We are still working on a related issue (#405) tho and I'd be curious to see once that is fixed if all of these crashes and C1001's go away. In the meanwhile, can you try commenting out @finally blocks and seeing if that changes anything?\n@harcalion: #556 is the issue you were running into and it should be fixed now.\n. @kodekuru This is a different issue related to how (variable) scoping and debug information interact. Can you try with -gline-tables-only (by adding -gtable-lines-only to the clang command line in Project > Properties > Clang > Command line > Additional options)?\n. In the source code we have received from customers, so far all the crashes have been because of exception handling code rather than the size of source files. I wonder if you're running into the same issue. These are specifically the below 3 issues: \n- https://github.com/Microsoft/WinObjC/issues/354 (finally blocks cause a crash) (fixed)\n- https://github.com/Microsoft/WinObjC/issues/556 (@throw; causing a crash). (fix was rolled out just this week i.e. Jun 9th, which might be why you are seeing fewer errors.)\n- https://github.com/Microsoft/WinObjC/issues/405, which we are working on. Can you please try the workarounds in the issue page to see if it solves the crashes?\nThank you very much again for working with us on this issue.\n. @michyprince: We have not been able to reproduce this issue. I will close the issue for now. If the problem does persist, please let us know.\n. Hello Rupert,\nWe have a fix to be rolled out in the next few days. Please stay tuned with our next release. Thank you for reporting this and please don't hesitate to let us know if you run into any other issues we can help with.\nThank you\nPooya\n. This is fixed in SDKs released on April 21st or later. Thank you for working with us to resolve this issue. Please do not hesitate to let us know of any other issues you run into any other issues with Windows Bridge for iOS.\n. Hello Rupert,\nWe have a fix for this issue that we are expecting to roll out next week. Thank you for reporting this and please don't hesitate to let us know if you run into any other issues we can help with.\nThank you\nPooya\n. This is fixed in SDKs released on April 21st or later. Thank you for working with us to resolve this issue. Please do not hesitate to let us know of any other issues you run into any other issues with Windows Bridge for iOS.\n. Fixed in Jan 9th release.\n. :shipit:\n. @annagrin is added to the review. #Closed\n. @GreatKeeper is added to the review. #Closed\n. ",
    "pradipd": "Try:\n#include <string>\nhttp://en.cppreference.com/w/cpp/string/basic_string/operator_ltltgtgt\n. I believe we fixed this a while ago, but forgot to close out the bug.. I believe we fixed this a while ago, but forgot to close out the bug.. If you doing live debugging in windbg, you can:\n1. !analyze -v\n2. sxe eh - This will force the debugger to break on first chance C++ exceptions.\nI'm still looking into minidump's.\n. Note: Even if we implement this, we will not be able to support all of the functionality in RTLD_DEFAULT.  There are no UWA API's to find the shared objects in the executable and it's dependencies.  We would only be able to support searching symbols in shared objects loaded by RTLD_GLOBAL.. That means there is an issue with parallel builds.\n\nIn reply to: 248383261 \n. Err. Maybe not.\n\nIn reply to: 248384868 \n. :shipit:\n. :shipit:\n. @mukhole is added to the review. #Closed\n. It is.\n\nIn reply to: 253648558 \n. Err. It's in lfs because it's a binary.  Aren't all binaries in lfs?\n\nIn reply to: 253648659 \n. @asimonov-msft is added to the review. #Closed\n. :shipit:\n. @rajsesh-msft is added to the review. #Closed\n. No. How do I recall/cancel this pull request?\n\nIn reply to: 254254289 \n. I'll have a correct fix without the other changes in a 30 min's or so.\n\nIn reply to: 254265628 \n. I'll clean this up and send a new CR.\nPlease ignore this PR.\n. @rajsesh-msft is added to the review. #Closed\n. Looks like Oct, 14-17, 2016 was a momentous date.  Since I started this change, many of the samples started failing because the keys for their apps expired.\nI went back and update all the keys to use the one from msvc\\vsiimporter-templates\\WinStore10-App\nI also updated all the *.appxmanifest.  I'm not sure why they don't show up in the pull request though.\n. @muktesh is added to the review. #Closed\n. @asimonov-msft is added to the review. #Closed\n. :shipit:\n. Are you using clang modules?\n. I only see ARM binaries. #Resolved\n. And I don't see RTObjcInterop.dll\n\nIn reply to: 256468943 \n. Apparently, github doesn't scale all that well.  We confirmed using gitk all the projections binaries were changed.\n\nIn reply to: 256469086 \n. :shipit:\n. :shipit:\n. :shipit:\n. @bbowman is added to the review. #Closed\n. @memontic-ms is added to the review. #Closed\n. :shipit:\n. :shipit:\n. A newer version is already checked in at build\\nuget\\nuget.exe.\n. @bbowman is added to the review. #Closed\n. I also checked to make sure were not using this in the build definitions.\n\nIn reply to: 261065025 \n. :shipit:\n. What is a pkgdef file?\n\nRefers to: WinObjC.Build/bin/VC_Pkg_Core_Registration_ObjC.pkgdef:4 in 1072d65. \n. @bbowman is added to the review. #Closed\n. This is just a temp fix until the real nuget solution comes in.\n. :shipit:\n. @bbowman is added to the review. #Closed\n. :shipit:. :shipit:. @jaredhms is added to the review. #Closed. :shipit:. :shipit:. Did you validate the TestRuntime.zip provided in 1397 works? #Closed. :shipit:. :shipit:. :shipit:. :shipit:. @DHowett-MSFT is added to the review. #Closed. @rajsesh-msft is added to the review. #Closed. @bbowman is added to the review. #Closed. Please reopen if mukhole suggestion to use WIndowsApplicationModelContacts.h does not work.. Fixed by #1627 . :shipit:. @jaredhms is added to the review. #Closed. @rajsesh-msft is added to the review. #Closed. @asimonov-msft is added to the review. #Closed. @asimonov-msft is added to the review. #Closed. Functional tests are running as part of all builds.. @mukhole is added to the review. #Closed. @mukhole is added to the review. #Closed. > using System.Reflection;\nAre all these files add's or moves?\nIt would be nice to not lose the git history.\n\nRefers to: tools/BuildMonitor/Properties/AssemblyInfo.cs:1 in fb72438. . https://github.com/Microsoft/WinObjC/commit/991023e70e34e035eb7a25a70dd20b9894349232\n. The test was trying to launch the wrong app.\nI updated the test, reran it, and it passed.. :shipit:. Thanks for looking into this.. :shipit:. Ehren,\nFirst thanks again for this commit.  We really appreciate the memory leak fixes.\nHowever, we had to revert this because the change in NSThread.mm L359 was causing the functional tests (CancelPreviousPerformRequestsWithTarget) to fail.\nA prior test allocates the currentThread object and assigns it to thread local storage (pthread_setspecific(tlsNSThread, reinterpret_cast(self)); L205).\nSTARBOARD.DLL!pthread_setspecific\nFOUNDATION.DLL!-[NSThread _associateWithCurrentThread]\nFOUNDATION.DLL!+[NSThread currentThread]\nFOUNDATION.DLL!+[NSRunLoop currentRunLoop]\nFoundation.UnitTests.exe!NSObject_PerformSelectorAfterDelaySanity_Test::TestBody\nOnce the test finishes the autorelease pool is drained, and TLS is left holding a pointer to a released object.\nThen, CancelPreviousPerformRequestsWithTarget runs, and eventually tries to use the released object that is stored in TLS\nSTARBOARD.DLL!pthread_getspecific\nFOUNDATION.DLL!+[NSThread _threadObjectFromCurrentThread]\nFOUNDATION.DLL!+[NSThread currentThread]\nFOUNDATION.DLL!+[NSRunLoop currentRunLoop]\nFoundation.UnitTests.exe!NSObject_CancelPreviousPerformRequestsWithTarget_Test::TestBody\n. Actually, we need  2 things:\n1. We need to get wttlog.dll from somewhere to create output files.\n2. We need a way to upload the results to VSO.\nI need to do the same things for getting functional tests running on hte build machine.\nSo, please hold off merging before I figure that out.  Hopefully I'll have it figured out tomorrow (we already do this in the lab).\n\nIn reply to: 275573399 . Also, #1 is harder than #2.\n\nIn reply to: 275574352 . Also, sorry, I didn't think of this sooner....\n\nIn reply to: 275574435 . This is all sorted out.\nYou should be able to use the Run TAEF and Publish Task in VSTS.\n\nIn reply to: 275577758 . :shipit:. @jaredhms is added to the review. #Closed. @mukhole is added to the review. #Closed. :shipit:. @jaredhms is added to the review. #Closed. @rajsesh-msft is added to the review. #Closed. :shipit:. @jaredhms is added to the review. #Closed. @bbowman is added to the review. #Closed. :shipit:. :shipit:. :shipit:. What caused the projections binaries to be updated? #Resolved. nevermind.\n\nIn reply to: 281839514 . :shipit:. :shipit:. Out of curiosity, what is unit of measurement is \"1em\"? #Closed. Thanks for the info.\n\nIn reply to: 282799721 . I think we have already done this.\nIs there anything else you want to do here?. Dup of #2127 . @mukhole is added to the review. #Closed. :shipit:. :shipit:. Fixed by  #2219 . @bbowman is added to the review. #Closed. Looks like vctip was writing out link.VCTIP.* files well after the build was finished.\nAfter disabling vctip, we've had 3 successful builds in a row.\nBefore that, the failure rate was ~50%.\nWill reopen if we see this again.. The fix looks good.\nIs this a new issue?  I don't recall ever hearing about this?\n. :shipit:. If this is a recent regression, my concern is that .Net changed their behavior and perhaps they could like to know about it.\n\nIn reply to: 287396506 . This was due to the visual studio tools extensions not being installed.  We updated the build machines and added documentation that this is a required component.\n. Sorry, it's not 100% clear to me what this change is for.\nIs this so that we give precedence to the packages we locally built ?\n#Closed. Where did the gitverstion task come from?  How do we update it (if necessary)? #Closed. Awesome!.  Thanks for the explanation.\n\nIn reply to: 287472748 . :shipit:. Note that this will not upload the files to VSO.  We will still have to go find them in the joblog output folders.\nI'll file a separate task to upload the files to VSO. @DHowett-MSFT is added to the review. #Closed. @bbowman is added to the review. #Closed. @jaredhms is added to the review. #Closed. I'll file a separate issue.. This is failing on desktop for me.\nAnd in the labs on a consistent basis.\nRepro:\ninit.cmd\n.tools\\nuget restore build\\build.sln\nmsbuild /p:configuration=debug /p:platform=x86 build\\build.sln\n run-unitests.ps1. That's a weird developer experience.  I and many others build debug.  And, our process mandates we run UT's locally before submitting a PR.  Now we will have to take extra time to go back and build release just to run UT's.\nAlso, how would an external developer figure out that debug UT\"s are expected to fail?\nI'd much prefer to disable these tests in debug.\nOr change our process (we can add a script) to build all the necessary bits to run tests in debug and release.. Also, wouldn't this be considered a regression?  this is something we were clearly able to do before.\nNow, we are saying UT's with debug bits don't work.. Can we file a task to move the tests then if that is the right solution?. Are there 2 changes here?\n1. Remove circular dependency between Frameworks.core and frameworks.UWP \n2. separate rtobjcinterop into uwp.core\nIf so, the first one looks fine.  But, I thought we weren't going to do the 2nd change and instead move all frameworks to use c++/winrt.\n#Closed. :shipit:. I see.  thanks for the explanation.. I didn't realize you already filed an issue.  Will close this as it is a duplicate of #2346.. Reopening and making this the tracking bug since it is more generic than 2346.. StrongId in SmartTypes.h should be moved to \"Foundation or even lower. It's a great opportunity for us to make ObjC/C++ interop better!\" (DHowett-MSFT )\nFoundationErrorHandling.h needs to be made public since wil\\result.h depends on it.. Also, the error is the missing brackets around the list of dotnet imports.\n\"imports\": [\n...\n]\nThe brackets are missing in the malformed project.json. And the missing \", \" between elements. But that is not the real error.  That is a red herring.\nThe real error is that the project.json is malformed. . I'm blocked on this for middleware.  So, I'm assigning this to myself.\n. Fixed by #2350 . Do you need to rerun vsimporter on these? #Closed. nevermind.\n\nIn reply to: 289983668 . :shipit:. Closing.  Please use #2317 to track this issue.. Excellent!  I was just about to file a bug about this.. :shipit:. @bbowman is added to the review. #Closed. Is this just for winobjc.tools?    Or is this all the packages?\n. So will we have different prerelease string for tools vs other packages?\n\nIn reply to: 290313159 . :shipit:. I'm fine with this change, but, I'm curious what is the reason for the change?\n. I sign off, but codflow won't let me.\n\nIn reply to: 290541570 . :shipit:. I mainly looked at the changes in avfoudnation.. +1 on Dustin's comment.  It is not clear why _ is missing in the export or the filenames.\n\"The problem is WindowsCreateString method returns a null pointer if the length of the string to create is 0. So an empty string will return a null object.\" -- what is this comment referring to?  Nugetizer?  winmd2objc?\n. Completed in 1704.. SDK is published and apps are available.. I lied.  I don't see the package.. Packages & Apps published.\nNote: there is a bug when sharing photos.  But, I'll file a separate issue.. The change itself is fine.\nHowever, I don't fully understand the motivation for it.\n\"Very low pri as we can add the linker search paths ourselves but since this in the vcxproj proper it makes things a little harder if we change our minds later.\"\nDo we currently add the linker search paths somewhere?\nIf so, can we remove it now?\n. So, is the issue that vsimporter does not  need to add these lib's since they are already included in the package? If so, what's the harm in keeping them? Extra link time?\n\nIn reply to: 291965047 . I think this is fine.  I don't really have the foresight to see any short comings.  \n\nIn reply to: 291970362 . :shipit:. The original PR title was supposed to be a teaser to make people click on it.  Just kidding.\nthanks.\n\nIn reply to: 291669860 . Isn't the  only other thing we'd have to update is libobjc2?\nI'm fine updating libobjc2 to remove the _.\n\nIn reply to: 291669943 . :shipit:. git lfs has issues.\nAs a workaround all build machines are configured with \"git lfs install --skip-smudge\" which avoids downloading files on a pull.  However, we now have an extra \"git lfs pull\" in every build step that involves pulling a repo.. :shipit:. Any particular reason for the change?  Did I break something by not having the xplat/startboard? #Resolved. Bah humbug.  I knew I should have mirrored the whole directory structure.\nMy fault.\nWhat does the inlcude directory of the language package look like?\n\nIn reply to: 293397480 . Also, thanks for fixing this!\n\nIn reply to: 293399501 . :shipit:. Looks good.\n\nIn reply to: 293728227 . :shipit:. :shipit:. Another hit on 4/17 daily build release configuration.. There is a change to rthelpers.h.  You need to use the github because codeflow can't handle such large reviews.\n\nIn reply to: 294205679 . static NSString* hstrToNSStr(HSTRING str, bool free = false) {\n    if (WindowsIsStringEmpty(str))\n        return nil;  <-- @\"\" would be better than nil.\n. Simple fix.  Just haven't had a chance to do it.\nWe aren't running the IndexSymbols.ps1 in our release defs.. Ooops. didn't mean to close.. We need to add it to the other 2 repo's we build.  . Change itself is fine.\nDoes this cover all our apps or just the samples apps in winobjc?  If not all, probably want to confirm with @tadam-msft  that it covers the majority of the apps.\n. If you prefer, you can just disable this test in wack.ps1. Do I need to add IsWinObjc metadata to the ReferenceCopyLocalPaths item?\n. I see. I changed the default name of the package. . Hank,\nIt looks like you added some files to the app in VS.  You need to add them in xcode.\nIn the build, we vsimport these apps, then build them.\nA local repro would be:\nvsimport\nnuget restore \nmsbuild /m /p:configuration=debug /p:platform=win32 CGCT-WinStore10.sln. I think you'll also need:\nhttps://github.com/Microsoft/WinObjC/pull/2612. > store libraries  \nI think you mean onecore libraries.\n. > 14.0 \nWhat will happen in the next VS version? 15.0?\nIs it possible to use /NoDefaultLib in each UT and specify the libs with some VS variable that is set in MS.Cpp.Defaults.props\n. They other reason I point this is out is, when VS 15 comes out, some poor sap, let's call him Artem, will be tasked with validating VS 15.  And, it will probably work because he'll have VS14 and VS15 side by side.  We'll sign off, and then somebody who only has VS15 installed will hit this.\nBut, if this is the only way, it's OK.  The VS targets/props are quite complex.  \n\nIn reply to: 74666079 \n. > Visual Studio attempting to parse the contents of this test \nHave we contacted VS about this?  I'd hate to have to do this in every UT.   #Closed\n. > _webView \nDo you have to check if this is null? #ByDesign\n. > CN=islandwood \nI'm nervous about backwards compat.  Does anyone have a machine without 14393?\nHow can we validate we won't break external developers who haven't installed 14393 SDK.\n. if appCanOpenURL returns FALSE, should OpenWithAppDelegate be set to NO?\nIf not, do we even need to call appCanOpenURL if OpenWithAppDelegate is already YES?\n. Thanks for the clarification.\nI'm fine leaving as is or changing it to skip the appCanOpenURL call.\neither way is fine.\n\nIn reply to: 83745451 \n. nit: Can you add {} #Resolved\n. > ```\n\n\n```\n\nnit: tabs/spaces are inconsitent. #Resolved\n. Agreed.  It also doesn't work well for managed binaries.\nPri 1 is to get version information for vsimporter for the next release.  \n\nIn reply to: 84183500 \n. >  file.WriteLine(\"#define FILE_VERSION {0}, {1}, {2}, {3 \nCan you share out what the generated version files look like?\n #ByDesign\n. > WinObjCVersionFile \nI'm a slightly bit concerned that each tools binary is going to rebuild the version file.  This means that each binary will always be out-of-date.\nHowever,  given our expected use cases , I think this is acceptable.\n #ByDesign\n. No worries.  Thanks for the review.\n\nIn reply to: 87461400 \n. What about the InvokeObjc2Winmd.dummy file?\n. > .pr \nHardcoded, because this is short term.\n. What is your format.  I wanted to copy what you did.\n\nIn reply to: 88525013 \n. Ha.  Sure.  I made it this because you suggested this in a previous CR.  I'll change it to 1.0.1\n\nIn reply to: 88525352 \n. I like conformity\n\nIn reply to: 88536435 \n. Like Brian mentioned.  this is prototyping.\nWe are testing out the workflow using PM's as guinea pigs.\n\nIn reply to: 88757560 \n. Are we going to contribute this back to TAEF? #ByDesign. we can remove this.. Discussed offline with Dustin.\nWe are changing the semantics of this function.  \nPreviously, _hresult would return an HRESULT if an exception was generated using one of the wil macros.\nNow _hresult will also try to map an NSException to a HRESULT if an HRESULT was not already stored in it.\nI'm a little nervous about changing the semantics of a released method.  However, I looked around our code base and this is hardly used,  Although, external people could have taken a dependency on this.\nShould we create a new function for this?  It really feels like overkill.\n. Hmm. That link wasn't all that helpful.  Or maybe I didn't get the jist of it.\nDid I leak reason?  or hsReason?\nFrom the link, as I read it, it sounds like I'm doing this correctly.\n\nIn reply to: 93125423 . reason is the backing store for hsReason and gets freed up when the autorelase pool is drained.  That is my understanding.\n\nIn reply to: 93297284 . It gets ignored.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/br224651(v=vs.85).aspx\n\nIn reply to: 93125265 . Why? Do we normally check to this?  I don't see us doing this consistently in other files.\n\nIn reply to: 93125224 . How is that \"weird\"?  It is clearly documented.\n\nIn reply to: 93300590 . I assume Dustin answered this?\n\nIn reply to: 93327635 . I am relying on the API to do what it says...\nAnyway, would you prefer I check if hr == S_OK and skip doing any work?  that's fine by me.\n\nIn reply to: 93375624 . Ah, now, I see (or at least I hope).  You prefer me to use Wrappers::HStringReference ?\nIf so, that is fine with me.\nThe original remark (from the original CR) was:\n:-( Wrappers::HStringReference???\nI did not know what you meant.    It is obvious to me now.\nAnd then the original comment here:\nYou leak this. :-( (technically you don't....\nConfused me even more because there was no leak.\nFor future reference, something like \"prefer using Wrappers::HstringReference\" would be more useful than \":-( Wrappers::HStringReference???\"\nI have no problems using HStringReference.  In retrospect, (again painfully obviously now) I don't know why I didn't use it in the first place.  Especially since I was pointed to it.  (Yeah, I'm feeling a little embarrassed.)\n\nIn reply to: 93301103 . And it is less code....\nAgain, feeling stupid I missed the \n\"Try using* https://msdn.microsoft.com/en-us/library/hh771147.aspx as mentioned in previous iteration.\"\n\nIn reply to: 93377905 . Actually, hr == S_OK doesn't make sense to me.  I'd go with an assert.\n\nIn reply to: 93375861 . I believe Dustin answered this question.\n\nIn reply to: 93302629 . added assert\n\nIn reply to: 93495346 . Used MS::WRL::Wrappers::HstringReference\n\nIn reply to: 93378401 . Used HStringReference.\nAlso, I understood how this worked.  I just missed the  \" you should be using Wrappers::HStringReference\" from previous comments.\nI'm not sure why/how I missed that.\n\nIn reply to: 93327581 . >StripAppContainerBit \n:) #Closed. Out of curiosity, why are you using a lambda?\nIt is harder to set breakpoints on lambda's.. Clarity isn't the issue.  It is debugging.\nI just want to make sure we can set a breakpoint in the lambda.\nIf you can set a breakpoint using F9, I'm fine.\n\nIn reply to: 98274111 . Can we just merge this with run-functionaltests?  Would be nice to only \"maintain\" 1 script.\nGranted, once these are written, they usually don't have to be modified.. Should it be all the nuget packages?  Or just the WinOjbc.Frameworks.UWP?  I thought there was a dependency chain.. Just so I understand (from the other CR).\nproject.json is for iOS apps that run through vsimporter.\npackageable.project.json is for iOS middleware that runs through vsimporter.  So, we need to include winobjc.packaging for iOS middleware to create a nuget package.\n. >\"*\" \nShould this be * or the last SDK release?\nSame with project.json\nI assume a user doesn't want to automatically upgrade to a new SDK without knowing it.. >ImportedByThisProj \nDo you have to import and include the project?. @bbowman just be able to take this and add it to his pull request so we can have the UT's running TAEF as well.. >= ABI::FacebookSDK::FBSDKLoginKit::FBSDKLoginManagerLoginResu \nWe shold remove this. #Resolved. This is all duplicated.  It would be nice to avoid the duplication.\nHowever, for now, let's leave it.\nI'd really like to switch to some WRL templates if they exist.\nI'll file a task to:\n1. find and swtich to a supported WRL template.\n2. If that doesn't exist, clean this up.. exit $script:exitCode. https://winobjc.visualstudio.com/WinObjC/_build/explorer?_a=summary&definitionType=2&buildId=7825\nfails.  It has some errors from CG.\n\nIn reply to: 100258200 . I guarantee that it is not being called on the UI thread.\nUIApplicationInitializeFunctionalTest uses Coredispatcher to call the important parts on the UI thread. \n\nIn reply to: 100440302 . Is that what those // are for?\nWill do.\n\nIn reply to: 100440979 . >TestWorkingDirectory \nNo longer needed.  this was used in the WTT jobs.  . >PackageRootPath \nNo longer needed since the TAEF binaries are now in the tests folder.. >TAEFDirectory \nNo longer needed since the TAEF binaries are now in the tests folder. Sure.  I was originally going to get rid of run-functionatest.ps1 and run-unittest.ps1 but decided to keep them for the build defeinitions.\n\nIn reply to: 100863948 . >false \nWhat does this do? #Resolved. >-fmsvc-real-char -Wdeprecated-declarations \nDo these flags need to be moved somewhere like tests.shared.vcxitems? #Resolved. Should this be removed?  The mobilecoreservices project doesn't have much in it, but, I think we should keep building it. #Resolved. >Universal Windows\\ \nIs all the build output being put here?. Still seems odd that this is needed.  seems like it should never be set to true.\n\nIn reply to: 102293732 . We'll need to update our lab tests to account for this.\nShould be a 1 line fix (famous last words) in Atlas studio.\nBut, we'll want to checkin the change in a winobjc_internal packaging branch.\n\nIn reply to: 102313367 . Let me know when you get a daily build out with published bits and then we can see what changes need to be made.\n\nIn reply to: 102321885 . >Arcadia \nWhat is arcadia? :)\n #WontFix. I thought this file was never used.  My limited understanding is that it was just output.  Could be wrong.\n\nIn reply to: 102826848 . output /debug info.  As in these were the original xcode variables.  \n\nIn reply to: 102846565 . I'm not sure what the build def looks like, but, do we need to do this at all?  I thought we don't have  a zip file anymore.. >Returns nil if cast fails. \nThanks for updating the comment.\n. I like all the red!. >C++/WinRT types when you need a trivial default constructo \nOut of curiosity, do you know why c++/winrt doesn't provide this?  Seems odd that clients would have to provide this. #Resolved. https://github.com/Microsoft/cppwinrt/blob/master/Docs/Migrating%20C%2B%2B%20CX%20source%20code%20to%20C%2B%2B%20WinRT.md\nI assume that is the topic covered in \"Instantiating a C++/WinRT class\".\n\nIn reply to: 109488370 . >c_durationCoef \nI think we can remove this constant.\n. How did the old way ever work?\nDid we just not call it?\nEither way this looks correct.. >auto \nI suppose Jared's comment about auto applies to these typesas well.. >self \nShould this be weakself?\n. What is this linking?\nI would have thought the link task is run in some other target. #Resolved. It seems like this list should only contain iOS libraries as they are not likely to change.\nuikit.xaml and starboard are libraries we created and can change. \n. Yes.\n\nIn reply to: 110000107 . Thanks for the explanation.\nI still prefer tmp to be renamed \"Zelda\", but....\n\nIn reply to: 109974322 . Would it be cleaner to not to do this and leave the headers in the package as include\\xplat\\starboard*.h?\nthis way there is consistency in how we include the headers.\nSo, consumers in the tool package use include\\xplat to use the headers.\nAnd, consumers of the tool package also use include\\xplat.\nOr something like that.\n. Interesting apparently putting asteriks around words italicizes or bolds them.\n\nIn reply to: 111030228 . Most projects include Starboard.h and that includes Starboard\\SmartTypes.h.\nSo, we should just have to change that to xplat\\Starboard\\smarttypes.h\nAnd for the files that directly include we change them to xplat/Starboard/SmartTypes.h\n\nIn reply to: 111036207 . I'm fine with either:\n1. Leaving as is.\n2. Modifying 80 files to use xplat/starboard/smarttypes.h\nPlease don't do the ......\\tools\\include\\starboard.h because that would be including headers outside the package.\n\nIn reply to: 111221091 . Why is libclang choking when this isn't here?\nIs this new?\nPresumably this file builds in build.sln. \nSo, it is going to be very hard to know when apianalyzer is going to break #import stuff vs. @class #Resolved. Ok. Thanks.  I guess I find it amazing that this is the first apianalyzer failure of this kind that I can remember.\n\nIn reply to: 111599749 . I would need to modify StringHelpers.h to not include Starboard.h.\nI'll look into it, but, I'd prefer not to change more than I need to do for this bug fix.\n. >E1BA5F74-6863-437D-9AF5-72666F6D25B5 \nWhat is the change here?\n #Resolved. Just want to make sure we don't do something like https://github.com/Microsoft/WinObjC/pull/2503\n\nIn reply to: 112072314 . >_LibsFromPackage \nNit: LibsFromPackage seems misleading since these are dll's.\nNot that big a deal though.. Does this mean new will no longer call IwMalloc()?. set (not det).. What is the overall effect of  updatebuildnumber and addbuildtag on our build?\nWill the build have a new name?\nAlso, will this target be called when tools.sln is run?  If we are going to rename our build number, it seems like we should be doing that in the first build step in our build definition.\n. Doesn't the build produce different version/timestamps for different packages.  I've always noticed the tools packages (language, logging, tools, packaging) have a different timestamp than the packages build in build.sln.\nWill we get one timestamp for all packages and have be consistent with the build number?. Why can't the build server publish the  timestamp file and subsequent release defs use that timestamp file?\nI'd would be nice if the build were consistent for local builds as well as builds on the build server.\n. What does Condition=\"'%(FileName)' == ''  ?  If FileName == '' does that mean it is a directory?. PackageId == winobjc.facebooksdk\nMSBuildProjectName == facebooksdkpackage\nSo we were using the wrong file name when trying to package the facebooksdkpackage.custom.targets/props.. Passed spellcheck!. The unittests here are not used.  I would just nix them.. You can get rid of this now that you are in winobjc.\nAnd you can remove any references to WINOBJC_SDK_ROOT #Pending. Never realized ......\\ was hardcoded.\nHopefully this can be overridden. #ByDesign. Is ......\\ correct? #ByDesign. Why is Nuget.Build.packaging needed? #ByDesign. Why is nuget.build.packaging needed? #ByDesign. ",
    "ryjen": "I have the same problem, but at least its compiling after many ifdef's on a large app.  I'm starting to think it might be the project settings but I am at a loss.\nsymbol objcclass_name_NSPropertyListSerialization\nsymbol _objc_class_name_NSInputStream \nsymbol __imp__CFBundleGetValueForInfoDictionaryKey\nsymbol __imp__CFBundleGetMainBundle\nsymbol __imp__kCFBundleVersionKey\nsymbol __imp__kCFBundleIdentifierKey\nsymbol __imp__NSLocalizedFailureReasonErrorKey\nsymbol _NSFileSize \nsymbol __imp__NSURLErrorFailingURLErrorKey\nsymbol _NSStreamDataWrittenToMemoryStreamKey\nsymbol _class_getClassMethod \nsymbol _imp_implementationWithBlock \nsymbol _method_getTypeEncoding \nsymbol _objc_getMetaClass\nsymbol __imp__NSLocalizedRecoverySuggestionErrorKey \nsymbol _NSStreamFileCurrentOffsetKey\nsymbol objcclass_name_NSOutputStream\nsymbol _objc_class_name_NSURLCredential\nsymbol objcclass_name_NSURLCredentialStorage\nsymbol imp__CFStringConvertIANACharSetNameToEncoding\nsymbol __imp__CFStringConvertEncodingToNSStringEncoding \nsymbol __imp__CFURLCopyUserName\nsymbol __imp__CFURLCopyPassword \nsymbol __imp__UIBackgroundTaskInvalid \nsymbol _NSURLAuthenticationMethodServerTrust\nsymbol _NSURLAuthenticationMethodClientCertificate \nsymbol _NSStreamDataWrittenToMemoryStreamKey symbol objcclass_name_UIPopoverController\nsymbol _RAND_add\nsymbol _EVP_MD_size\nsymbol _EVP_sha1\nsymbol _EVP_CIPHER_block_size\nsymbol _EVP_CIPHER_iv_length\nsymbol _EVP_CIPHER_key_length\nsymbol _OBJ_nid2sn\nsymbol _EVP_CIPHER_nid\nsymbol _EVP_get_cipherbyname\nsymbol _EVP_CipherInit\nsymbol _EVP_CIPHER_CTX_set_padding\nsymbol _EVP_CipherUpdate\nsymbol _EVP_CipherFinal\nsymbol _EVP_CIPHER_CTX_cleanup\nsymbol _PKCS5_PBKDF2_HMAC_SHA1\nsymbol _HMAC_CTX_init\nsymbol _HMAC_Init_ex\nsymbol _HMAC_Update\nsymbol _HMAC_Final\nsymbol _HMAC_CTX_cleanup\nsymbol _RAND_bytes\nsymbol _EVP_cleanup\nsymbol _OPENSSL_add_all_algorithms_noconf\nsymbol _NSGregorianCalendar\nsymbol _S_ISDIR\nsymbol _NSFileModificationDate\nsymbol _NSFilePosixPermissions\nsymbol _objc_class_name_NSProcessInfo\nsymbol _UIAccessibilityPostNotification\nsymbol __imp__UIApplicationDidChangeStatusBarOrientationNotification\nsymbol __imp__UIWindowLevelNormal\nsymbol _UIAccessibilityScreenChangedNotification\nsymbol _UIAccessibilityAnnouncementNotification\nsymbol _NSGregorianCalendar\nsymbol objcclass_name_NSProcessInfo\nsymbol _objc_class_name_UIPasteboard\nsymbol objcclass_name_NSPredicate\nsymbol _objc_class_name_CAGradientLayer\nsymbol objcclass_name_MFMailComposeViewController\nsymbol imp__UIBackgroundTaskInvalid\nsymbol objcclass_name_NSURLCache\nsymbol _objc_class_name_NSProcessInfo\nsymbol gcovflush\nsymbol _NSFoundationVersionNumber\nsymbol imp__UIApplicationDidEnterBackgroundNotification\nsymbol objcclass_name_CLLocationManager\nsymbol _objc_class_name_NSProcessInfo\nsymbol objcclass_name_MFMailComposeViewController\nsymbol _objc_class_name_NSMutableAttributedString\nsymbol _NSFontAttributeName\nsymbol __imp__UIApplicationDidEnterBackgroundNotification\nsymbol __imp__UIApplicationWillEnterForegroundNotification\nsymbol __imp__UIApplicationWillResignActiveNotification\nsymbol __imp__UIApplicationDidBecomeActiveNotification\nsymbol __imp__UIApplicationDidEnterBackgroundNotification\nsymbol objcclass_name_NSPredicate\nsymbol _objc_class_name_MFMailComposeViewController\nsymbol objcclass_name_UINavigationItem\nsymbol imp__UIApplicationDidReceiveMemoryWarningNotification\nsymbol objcclass_name_UINavigationItem\nsymbol _objc_class_name_UIPopoverController\nsymbol objcclass_name_UIImagePickerController\nsymbol _objc_class_name_UIActivityViewController\nsymbol _UIActivityTypeAssignToContact\nsymbol objcclass_name_UIRefreshControl\nsymbol _objc_class_name_CAGradientLayer\nsymbol objcclass_name_UIRefreshControl\nsymbol _objc_class_name_NSRegularExpression\nsymbol objcclass_name_NSFileHandle\nsymbol _objc_class_name_UINib\nsymbol objcclass_name_NSPredicate\nsymbol _objc_class_name_NSDataDetector\nsymbol _UIImagePickerControllerEditedImage\nsymbol _UIImagePickerControllerOriginalImage\nsymbol _UICollectionElementKindSectionHeader\nsymbol _UICollectionElementKindSectionFooter\nsymbol objcclass_name_NSURLCache\nsymbol _objc_class_name_NSCachedURLResponse\nsymbol _CTFontCreateWithName\nsymbol _kCTFontAttributeName\nsymbol _kCTForegroundColorAttributeName\nsymbol objcclass_name_CLLocationManager\nsymbol _objc_class_name_NSURLProtocol\nsymbol __imp__UITableViewIndexSearch\nsymbol _UICollectionElementKindSectionHeader\nsymbol objcclass_name_NSPredicate\nsymbol _objc_class_name_UICollectionReusableView\nsymbol _UICollectionElementKindSectionHeader\nsymbol _UICollectionElementKindSectionFooter\nsymbol objcclass_name_AVCaptureDevice\nsymbol _objc_class_name_AVCaptureDeviceInput\nsymbol objcclass_name_AVCaptureSession\nsymbol _objc_class_name_AVCaptureVideoPreviewLayer\nsymbol _AVMediaTypeVideo\nsymbol _AVLayerVideoGravityResizeAspectFill\nsymbol __imp__SCNetworkReachabilityCreateWithName\nsymbol __imp__SCNetworkReachabilityCreateWithAddress\nsymbol __imp__SCNetworkReachabilitySetCallback\nsymbol __imp__SCErrorString\nsymbol __imp__SCError\nsymbol __imp__SCNetworkReachabilitySetDispatchQueue\nsymbol __imp__SCNetworkReachabilityGetFlags\nsymbol __imp__CFDataCreateMutableCopy\nsymbol __imp__CFDataGetLength\nsymbol __imp__CFDataGetBytes\n. ",
    "SNanjappa": "@mlfarrell Even i am stuck with the same problem. Did you find any solution for the LinkerErrors? If so please let me know.\n. @SivaguruElangovan Even i am facing the same issue, did you find any way to solve the issue? \n@winobjc-bot \n. @nicholasgerard-msft  Please find the log file in the zip file attached below\nFerguson Manager_log.zip\n. ",
    "joagwa": "How did you fix this?\n. ",
    "yw346090249": "I did not fix it but just saw that the MapKit was just on process, so I close this issue.\n. Thx\n. @cloudmonkeypeng hi, how can I use it? When I open the solution (.sln file), the first project shows unavailable. \n. @cloudmonkeypeng thank you for your answer. The first time I loaded your repo, and it told me that I need to install something. After I installed, it still did not work and told that load failed. When I tried to load manually, it told that \"One or more errors occurred\" without details.\n. @cloudmonkeypeng which way did you use to import the iOS project into windows project? vsimporter or the other way described in the wiki?\n. @cloudmonkeypeng do you know how to import a project with the method two. I'm not very clear about how to use it. I have one try but it failed to build the project.\n. @cloudmonkeypeng I saw the picture of your repo and it seems that you just use the \"label\", right? I created a project using only \"label\" however when I tried to debug it in VS2015, it failed. Have you ever tried other elements such as \"image view\" and \"textField\"?\n. ",
    "SAPNALnT": "How to fix this issue?\n. same error for me.\ni used Woccatalog-winstore10.sln.\ngot error LNK1181 - can not input file'OpenGLES.lib'\nthanks!\n. and FOR helloUI \nError   LNK1181 cannot open input file 'StarboardXaml.lib'  :(\n. ",
    "joaofranco": "up. Like.\n- suggestion1: google form (free) \n- suggestion1.1: my project uses the cocoapod for package management (like nuget). We can create the options based on all their repos (https://github.com/CocoaPods/Specs/tree/master/Specs). Anyone know how export all these git folders to a cvs ?\n- suggestion1.2: +options: Apple libraries can be found in Library/com.Apple/Data/Library \nmy repo suggestions\n- Google-Maps-iOS-SDK\n- GoogleAnalytics-iOS-SDK\n- CrashlyticsFramework ?\n- AFNetworking\n- Facebook-iOS-SDK \n- Mantle\n- NewRelicAgent\n. ",
    "NuttGuy": "A good approach to this might be Microsoft opening up a UserVoice for WinObjC?\nThat would allow people to add in the missing APIs that they find and search for ones that have already been found to be missing, then vote them up if they feel it's really important.\nThat being said although it does flood the issue forum I do think having open issues for missing APIs in GitHub is important, it allows everyone who is watching this project to see the progress on missing APIs in once place vs having to search out to multiple places.\n. First off @fdierick love the tool you wrote, it's awesome. Yes I agree that it could be automated to some degree, though I'm not sure how an automated solution would work with a voting solution, for ranking particular APIs?\n. ",
    "fdierick": "Can't this be automated to some degree? I wrote a naive \"Sanity Check\" for Xcode projects at https://github.com/fdierick/WinObjC-Check ... It's a starting point. Need to look into digging deeper to see which symbols are defined/missing. Not sure where to start with that.\n. @yw346090249 I have used UITextField, UITextView & simple view controller-based navigation (UINavigationController, UITabBarController). Right now the trick is to build & manage all your views programmatically, but I hear Storyboards & XIBs are high on the priority list.\n. ",
    "bleupierre": "@asimonov-msft  thank you, it's helpful for me\n. ",
    "rashan": "Exactly, this can be a killer feature!\n. ",
    "cloudmonkeypeng": "\n. Yeah , now it works!\n. https://github.com/cloudmonkeypeng/WinObjC_demo\nYou can find it here. I think it can give you a help. \nThis repo is just my toy. I am not sure I will maintain it later.\n\uff1a\uff09\n. Yeah, you just need open the .sln file.  I clone my repo again, and debug the repo correctly.\nI guess maybe something wrong with your environment.\n\nCan you debug the WOCCatalog in the samples?\n. I have used vsimporter to import the project.\n. @yw346090249   I have found  if your downloaded SDK in another path which isn't same with us. My project will can't launch . I will test method two , \"image view\" and \"textField\". \n. @yw346090249  I have test \"image view \" and \"textField\". I also find samples in the  WOCCatalog.\nBut my codes don't show well . Maybe it's a new bug.\n```\n- (void)viewDidLoad {\n      [super viewDidLoad];\n  UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 100, 200, 30)];\n  label.text = @\"Hello World, Hello IslandWood,Hello WinObjC\";\n  label.backgroundColor = [UIColor blackColor];\n  label.textColor = [UIColor yellowColor];\n  label.textAlignment = UITextAlignmentCenter;\n  label.font = [UIFont fontWithName:[[UIFont familyNames] objectAtIndex:10] size:20];\n\n  UITextField *text = [[UITextField alloc]initWithFrame:CGRectMake(20, 20, 130, 30)];\n  text.borderStyle = UITextBorderStyleRoundedRect;\n  text.text = @\"textTest\";\n\n  [self.view addSubview:label];\n  [self.view addSubview: text];\n\n}\n```\nFeel free to correct me . Because I'm a fish in IOS\n. I have know it.   It is same with isuues 221.\nhttps://github.com/Microsoft/WinObjC/issues/221\nI can call Winmd or something else by C++ file.\nAnd the file should have correct properties.\n. I'm sorry for the Error Operation\n. I can use .winmd in .ConsumeRuntimeComponent.cpp .  What is the difference between .ConsumeRuntimeComponent.cpp and *.cpp(I added)?\n. Change the property pages about .cpp. \nSame as .ConsumRuntimeComponent.cpp\n1.  Item Type: C/C++ compiler\n2. Code Generation->Runtime Library: Multi-threaded Debug DLL (/MDd)\n3. Precompiled Headers-> Precompiled Header: Not Using Precompiled Headers\n4. Command Line -> Additional Options: \u201c$(AdditionalOptions) -D_WOC_APP\u201d\nThen you can use CX and other Windows API\n. Change wiki about the *.cpp property pages . WinObjc-wiki\nUnfortunately the wiki can't pull request. Maybe need you help to update the wiki manually.\nThe update is:\nAdd *.cpp and use cx/Windows APIs\nIf you want to call Windows APIs in .cpp, you should set the proper pages same as ConsumeRuntimeComponent.cpp.\nRight click the *.cpp and choose Properties and set the pages:\n1. Item Type: C/C++ compiler\n2. Code Generation->Runtime Library: Multi-threaded Debug DLL (/MDd)\n3. Precompiled Headers-> Precompiled Header: Not Using Precompiled Headers\n4. Command Line -> Additional Options: \"$(AdditionalOptions) -D_WOC_APP\"\nThen you can use c++/cx or Windows APIs.\n. Hey, what happened? Do you have some good information share with me? :)\n. No. I set the *.cpp as my write.  I also find the wiki has updated. \nHow effective you are!\n. Maybe you can build StarboardXaml and OpenGLES project by yourself, then build all WinObjC SDK again.\nI guess the sample will find the lib. \n. I faced the error in another develop environment\uff0c too.\n\nMaybe I need change some default config?\n. @asimonov-msft   I'm sorry for my negligence.  Thanks for your help.\n. I guess you can try to use .dll or .winmd\n. The last sentence is\nWOCCatalog.exe' (Win32): Loaded 'U:\\programs\\WINDOWSAPPS\\Microsoft.VCLibs.140.00.Debug_14.0.23506.0_x86__8wekyb3d8bbwe\\vcruntime140_app.dll'. Cannot find or open the PDB file.\n'WOCCatalog.exe' (Win32): Loaded 'C:\\Windows\\System32\\ucrtbase.dll'. Cannot find or open the PDB file.\nThe thread 0x15ac has exited with code -1073741515 (0xc0000135).\nThe program '[5544] WOCCatalog.exe' has exited with code -1073741515 (0xc0000135) 'A dependent dll was not found'.\n. This is come from my suggestion.\nBecause my project need all of them. \nMy case is using the cx  files to call winmd, how about yours?\n. ```\nNSString* testString = @\"HelloWorld\";\nNSUInteger len = testString.length;\nNSUInteger numBytes = 0;\n[testString getBytes:NULL maxLength:0x7FFFFFF usedLength:&numBytes \nencoding:NSUTF8StringEncoding options:0\n\nrange:NSMakeRange(0, len) remainingRange:NULL];\n\nchar pData = (char)malloc(numBytes);\n[testString getBytes:pData maxLength:numBytes usedLength:NULL \nencoding:NSUTF8StringEncoding options:0\n\nrange:NSMakeRange(0, len) remainingRange:NULL];\n\nNSData* ret = [NSData dataWithBytesNoCopy:pDatalength:numBytes freeWhenDone:TRUE];\nNSLog(@\"%s\",ret.bytes);\n```\nI also try the code which is get from \"NSString dataUsingEncoding\" on Xcode.\nIt also output string with random tail string every time.\nI'm glad to discuss this question with you. :)\n. I'm sorry for the incorrect operation about the pull request.\nWe have add new functions and tests about NSTimeZone.\nSo I will close this  pull request and make a new one.\n. Hi, @rajsesh-msft.\nI have resubmitted and rebased this pull request.\n. @rajsesh-msft    I have faced the same problem on the constants string  NSCalendarIdentifierGregorian / NSCalendarIndentifierChinese.  I'm not relying on the actual values. But in my opinion, when I want to output the constants string, it will be better if the actual values are same as the iOS.\n. @ImDestinedMe   \nSorry for reply so late. I have tried to repro the bug and create UINavigationController and UiViewController in the AppDelegate.m.\nIn my opinion, if you call a initial view, the viewDidLoad should run successful.\nCould you give me more information about this bug?\nIt will be helpful, if you can give me a repository about it. \n:)\n. @ImDestinedMe \nAre you still working on this issue?  I hope to get feedback from you.\n. ",
    "lanesurface": "I tried setting my path in an NSString and assigning the string to the imageNamed:, but I get an error.\nCode\nNSString *_path = @\"/Assets/galaxy.jpg\";\nUIImage *_backgroundImage = [[UIImage alloc] imageNamed:_path];\nOutput\n```\nWinRT information: Selector -[initWithImage:] is not implemented for class UIImage on object       0x32e29d8!\nStack trace:\n\n[External Code]\nobjcrt.dll!0f463081()\nobjcrt.dll!0f46417c()\nobjcrt.dll!0f46425d()\nLivelyQuotes.exe!i_LoginWindowViewController__viewDidLoad() Line 16\nUIKit.dll!0f5763c1()\nUIKit.dll!0f57f48d()\nLivelyQuotes.exe!_i_LivelyQuotesApp__applicationDidFinishLaunching() Line 25\nUIKit.dll!0f4cbb7a()\nStarboardWS.dll!0f1e4391()\nStarboardWS.dll!0f1e18ac()\n[External Code]\n```\n. \n",
    "sawyerlin": "Can you explain where should the image \"galaxy.jpg\" be placed in VS solution?\n. ",
    "ash-rain": "My guess is: dead serious :laughing: Sorry I just had to...\n. @LeoNatan I think this is part of the point of the project being open-source.\n. @LeoNatan I get your point. It's neither black nor white. I think it's an effort from Microsoft to contribute to open-source software and save some money while doing so. I respect that as both developer enthusiast and a guy that makes money with coding.\nI'm not defending anyone, I also think Microsoft should put some more manpower into this but I also admire what the guys have done so far. I take this opportunity to learn more about iOS and contribute to the project. You don't have to do it but you should put more effort into understanding the open-source status of the project and mostly why it is the way it is, if you intend to rely on it sometime in the near future.\nCheers.\n. ",
    "BMProjects": "I think MS had already put \"adequate\" effort in this project, considering the priority of the whole WM platform. They seemed to have more interest in push Office to the other platforms than bring other apps back. \nI'm a lumia user, so I really really hope the prosperity of WM and more apps. But personally, I don't encourage any developer waste his time on this platform until MS take it seriously.\n. ",
    "matthiasg": "reminiscent of other microsoft open source projects .. lets see\n. @LeoNatan if i look at https://github.com/Microsoft/WinObjC/graphs/contributors i see 25 contributors but basically only 2-4 main committers and thus limited amount of changes (but i would assume the subject matter to be more difficult than eg a javascript library).\nIf this project is really important to microsoft, i would assume it to be more important to them as e.g angular-material would be to google (a subproject of a project). Right now they arent there, judging by the commits etc, but at least they are involved. so lets give them constructive feedback that actually improves the situation and focus on getting real apps to work with proper code-sharing etc.\nin the long term i would assume making the entire app just recompilable is a fools errant (running behind the entire time). I would rather want them to make it as recompilable as possible to enable code-sharing between the ios and the 'ported' windows app and then adjust only the most important ui parts and backend services where needed. That would mean proper C library support etc of course, but i think they are already getting there (as far as i know). Not perfect but only real IOS devs with real big and small apps can answer this definitively.\n. @LeoNatan that was my point .. it seems they are not really interested in it sadly. quite sad for them to start with such an old api. \nwhat is disappointing is that they demonstrated and heavily implied something else in the demos.\n. ",
    "jwhitehorn": "case and point for @LeoNatan : https://github.com/Microsoft/WinObjC/blob/683f6d6f225596d6cbfc16e518635d34a32bf6dc/Frameworks/Foundation/NSJSONSerialization.mm\nIt's hard to believe there are many, non-hello world, iOS apps that don't use JSON to some degree, and NSJSONSerialization has been the defacto library for several iOS versions. \n. ",
    "jpros": "@LeoNatan however, you have to acknowledge that they have done a great work so far, and the biggest part is from iPhone SDK 1 until iOS SDK 6. If they manage to finish this iOS 6 SDK until mid 2016, I think it is possible to finish iOS SDK 7 by the end of the year.\n. @LeoNatan Indeed the networking and UI changed a lot in SDK 7, at least for us developers. However I think the basis underground are still the same (at least on the networking part).\nAnyway, we can point to them what are the priorities for a basic application, keep testing and providing feedback.\n. Great job guys! :+1: \n. UIAlertController is new in iOS SDK version 9, and this project is based on version 6. There are a lot more important stuff to do from iOS 6, 7 and 8 before adding this kinda thing. For example commoncrypto and the new networking based on iOS 7.\nIf you are using UIAlertController to present alert views, you can use UIAlertView, and if you are using it for showing a popover you can use an UIPopoverController. I agree it is not as customizable as the new component, however it should work in most cases. \n. ",
    "mgoemmel": "There are two files in Frameworks/limbo: SKProductsRequest.mm and SKPaymentQueue.mm. They both look like a first try for a possible bridge between the Windows Universal Store and the AppStore. I guess most iOS developers would need StoreKit to handle InApp purchases, which seems to be possible to implement to me. The way the Universal Windows Store and the Apple AppStore is handling InApp purchases is nearly identical, isn't it.\nSo a brigde should be not that hard to implement. Or am I wrong?\n. fixed with build from 11 Dec 2015 -> CLOSED.\n. Great work. Seems to work now. Thx!\n. WTF, sorry. Will resubmit right after closing this one. Sorry again.\n. I've tried the overlay solution, but it does not work for me. But installing git and git lfs works.\n. > nitty comment to use {} with the if statements. \nFixed.\n. Digging a bit deeper brought me to\n- (void)drawInRect:(CGRect)pos {\n  [self drawInRect:pos blendMode:kCGBlendModeNormal alpha:1.0f];\n  }\nand\n- (void)drawInRect:(CGRect)pos blendMode:(CGBlendMode)mode alpha:(float)alpha {\n  //  [BUG: Need to honor mode and alpha]\nin UIImage.mm, which I guess is the root of the problem, right?\n. It is an UIImageView containing a playing board graphics, which is loaded with [UIImage imageNamed]. A lot of other UIImageViews for play stones, also UIImageViews containing UIImage graphics, are added to this base view with addSubview. Some of the play stones needs to be invisible sometimes, and alpha will be set to 0.0 for these UIImageViews.\nFrom time to time I need a stored copy of the board with all play stones for later restore. So I call renderInContext for the whole playing board UIImageView, which will normally be rendered showing the board and all the subviews (play stones) which are visible, and not showing the subviews having alpha set to 0.0.\nWith the bridge all objects will be rendered visible.\nPlease let me know if I can be of any more help.\nMarkus\n. I only wanted to mention the problem. So we should close the issue for now?\n. I've tried it, but it doesn't work. It seems that there is a problem in the framework. But I didn't find time so far to investigate into it. The last git pull version did not even run my app, so I have to look into this new problem first. I will check it during the next 2-3 days and will add my result here.\nThanks for your interest!\nMarkus\n. Well, after checking again, it works when I set\nmode.presentationTransform= UIInterfaceOrientationLandscapeLeft;\nSo all is well here. You can close this thread.\nThanks\nMarkus\n. ",
    "segadude": "I don't remember if I was using the pre-packaged SDK or not, I think I tried both. I downloaded the February 18, 2016 release from the releases page, and while my app still doesn't build successfully, I no longer get this error.\n. I'm having the same issue with my own project.\n. ",
    "felixonmars": "A friendly ping to bring this back to life :)\n. ",
    "timotiusmargo": "Awesome. Thanks Dave \ud83d\ude01\n. ",
    "mufanfan": "hit the same error:\nAPPX1609 \"The package contains a Debug framework reference 'Name = Microsoft.VCLibs.140.00.Debug, MinVersion = 14.0.23019.0, Publisher = 'CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US''. Ensure all framework references in the package are valid frameworks hosted by the Store.\"\nWhen will it be fixed? \n. Yes, I  tried it on another PC and got the same error, the sample file is from the latest SDK (which was not built from source, I just downloaded and unzipped it ) ;\nrepro steps:(\n(1) go to the folder \\WinObjC-master\\samples\\HelloUI;\n(2) double click HelloUI-WinStore10.sln and open it in Visual studio;\n(3) Click debug -> Start Debugging\n(4) Get the error as below: \n1>------ Build started: Project: HelloUI (HelloUI\\HelloUI), Configuration: Debug Win32 ------\n1>C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets(1819,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"XamlCompositorCS\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\n1>  ConsumeRuntimeComponent.cpp\n1>  ....\\HelloUI\\HelloUI.m\n1>  ....\\HelloUI\\main.m\n1>LINK : fatal error LNK1181: cannot open input file 'StarboardXaml.lib'\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\n##### Visual Studio info:\nVisual Studio Enterprise 2015 \nVersion 14.0.23107.0 D14REL\n##### Windows 10 info:\nWindows 10 Enterprise\n. In addition, it worked totally fine with the earlier SDK that was release around 10/09/2015\n. On another PC, I have Visual Studio Community and Windows 10 pro, always get the same error. \n. That's great, looking forward to this updated version. \n. Okay, the sdk you provided is totally fine. I didn't encounter any issues. \nBut I'm so confused, I always click the 'Download Zip' button on https://github.com/Microsoft/WinObjC and click , and a 245MB WinObjc-master.zip file will be downloaded. That SDK has all kinds of Link1181 errors and can't create store packages at all. \n. Thanks so much to Keluo-ms for your clarification. \nHere I have another question, I'm trying to build a open-source ios project and I got below errors which prevent me from creating the store packages: \n1>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets(1778,5): warning APPX0104: Certificate file 'climbers_TemporaryKey.pfx' not found.\n1>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets(1778,5): warning APPX0107: The certificate specified is not valid for signing. For more information about valid certificates, see http://go.microsoft.com/fwlink/?LinkID=241478.\nTo my understanding, the TemporaryKey.pfx is auto-generated by VS, right? \nIs there anything or settings I didn't do? Thanks. \n. I also checked the \\samples\\HelloUI\\HelloUI.vsimporter\\HelloUI-WinStore10 folder, there's already a HelloUI_TemporaryKey.pfx file there. All of the other samples have this xxxx_TemporaryKey.pfx files too. \nIt seems like a vsimporter's issue?  the tool was not able to generate the xxxx_TemporaryKey.pfx file? \n. Okay, so I created a brand new climbers project,  and then manually copied the climbers_TemporaryKey.pfx under my ios project folder \\climbers.vsimporter\\climbers-WinStore10 \nAnd it works, the store appxupload package is successfully generated!!! Finally. \nBut still, will you fix this minor issue? \n. ",
    "andrejo-msft": "mufanfan, you mention that you tried to build the same samples. \nTo clarify: \n- did you open and attempt to build the original sample projects that you built last month, or \n- did you take the latest sample files from the SDK and attempt to build them?\nThanks!\n. @v-brflem You can build out the develop branch as an SDK to test out the TARGET_IPHONE_SIMULATOR fix by following the directions here:\nhttps://github.com/Microsoft/WinObjC/wiki/Building-From-Source\nAs @rajsesh-msft points out, SecItemCopyMatching still needs to be investigated, so this issue should not be closed.\n. @rajsesh-msft, do you know which app this is with regard to?. Closing. @BIDSG - please let us know whether this should be reopened. We're uncertain of the problem.. :shipit: \n. :shipit:\n. msvc/language/BuildMonitor/source.extension.vsixmanifest was updated, replacing BuildMonitor metadata with the VSIX's own information. Expected?\n. :shipit: \n. It does indeed. Body updated.. As part of our monthly release process, we perform some manual tests with a variety of devices. This particular issue has been difficult to reproduce with anything other than an older model Windows Phone device.. @ali1997 - what was your configuration here? What version of Windows are you running on?. Also of note; it seems that you can\u00a0scroll the\u00a0numbers around in the box with your finger; is that expected?. Closing this issue, as\u00a0work on it is being tracked by issue #1537.. From #1488 -\nPhone: Lumia 640 device (14393 build)\nMaster commit:\u00a03a18ee2\nBuild/run WoCCatalog in Release.\nBring up PageView.\nClick on arrows.\nExpected: transition of PageView is fluid\nActual: transition of PageView from one page to another flickers\u00a0significantly on the first three loads, then becomes less pronounced (but visible) in subsequent transitions.\nMentioned by @bebauer-msft:\nFound an additional issue that may result from this flickering.\nIf you tap pages fast enough and happen to tap during transition (in the flickery part), you will end up losing one of the pages and making the paging completely broken.. The issue can be seen by running the present BoltsInClasspath app in winobjc-samples and removing the workaround code that he mentions above.. App linking overall is referenced here (with Windows Universal tags):\nhttps://developers.facebook.com/docs/applinks/metadata-reference\n. This particular page is referenced by our external submission site, so it would be useful to let folks know how to link in Bolts.. > choco upgrade winobjc-tools\nNeeds to be 'install winobjc-tools -pre'. #Closed\n\nRefers to: README.md:55 in 27b298b. . >   - Static analysis tools\nI appreciate this list, but the discovery on this is difficult through the light-weight installer. Could we simply state 'Select Universal Windows Platform development workflow' and then add the individual components that remain?\n\nRefers to: README.md:36 in 27b298b. . :clock1:. >   - Static analysis tools\nThe list should contain the core component and the additions needed to give the developer the analysis tools that they need.\nIn general, we should assume that this is the developer's first time with Visual Studio.\n\nIn reply to: 288179569 \n\nRefers to: README.md:36 in 27b298b. . I see this in both 15063 and 14393 on VS 2015/2017 using the most recent two releases.\nCode failure can be found by running the JSONKit code found below through the bridge:\nhttps://github.com/venkatkongara/WinObjC-Samples/tree/develop/ThirdParty/Middleware-JsonKit\nFailure occurs in JSONKit.m:2148 (clearCache),\n@DHowett-MSFT the allocation in question is being done as part of a larger struct allocation. The allocation of specific item that is being free'd is performed with calloc at line 2118 (parseOptionFlags).\n. :shipit: . The same problem can be seen from mousing the app around the screen into corners, the side, etc.\nI have not seen the problem occur with non-GL frame as of yet.\n. I don't see a jump in memory use via task manager. \nOne note: it's not limited to GLKitComplex; I can repro on WocCatalog's OpenGLES 1.1/2.0/GLKit screens as well.. Yup. It's just a problem that we appear to have missed with our eyes for a while.. I'm missing some symbols which is causing me to not get you something useful. I'll see what I can find, but I was able to reproduce it both as a packaged test app as well as building from the prerelease 4/24 packages.. \nLooks like a good read on the problem.. Closing - it appears that this was an older version of the app that no longer is valid.. To be clear: the workflow for updates to VSImporter and Xib2Nib will be:\n- Make changes\n- Update the version number here\n- Build the tools\n- Publish the binary via Git LFS #ByDesign\n. I might suggest leaving the first sentence, but replace the second with:\nNote: Use the directory containing your .workspace or .xcodeproj folder.\nSometimes too much direction is more confusing than too little.\n. r/Live Tiles/Windows Notifications\nOverall, WNS is more easily used by the external developer. You pretty much need a WinPhone to see a live tile in action.. Drop the first comma. Remove the parenthesis.. Remove parentheses.. r/Still from the Command Prompt, run/Run.\nr/, which/This. You could simply say '[location of unzipped SDK]\\bin\\vsimporter.exe'. Consider using the '(cmd)' notation before each command so that the user knows to run it from the command prompt...or 'c:\\MyProject> MyProject.sln'. Suggestion: point the user to a specific landing directory as an example so you can use it when showing your command sample.\n...local directory of your choice (example: c:\\winobjc) when complete.. Wrong location for prompt. This suggests you start in a non-existent directory in the SDK.\nSuggest:\nc:> cd c:\\myObjCProject. Now you can use what you've already suggested above to give them clear directions as an example.\nc:\\myObjCProject> c:\\winobjc\\bin\\vsimporter.exe. c:\\myObjCProject> myObjCProject.sln. 'Ninjas'? :) #Closed. ",
    "kennethtroch": "I have the same problem, i get the following error:\nError 'MobileCoreServices/MobileCoreServices.h' file not found\nIt's just on an import of the MobileCoreServices header file\n. ",
    "ap3rus": "+1, exactly the same issue.\n. @rajsesh-msft Great, thanks!\n. Also getting this for kCFStreamPropertyHTTPProxyHost, kCFStreamPropertyHTTPProxyPort, kCFStreamPropertyHTTPSProxyHost and kCFStreamPropertyHTTPSProxyPort, seems like it's not yet implemented.. ",
    "joalmeid": "Is there any update on this? Being a MobileCoreServices  a set of fundamental system services for apps, these should be supported. initially. For example AFNetworking depends on this.\n. Any recommendations on this?\nUIPopoverBackgroundView - https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIPopoverBackgroundView_class/index.html\nThe UIPopoverBackgroundView class provides the background appearance for a popover.\nRemoving this background appearance should work, however high impact in UI. Is it planned to be supported?\n. ",
    "edvv": "@rajsesh-msft Is workaround (2) needed only for .m files that have only a category definition; or is workaround (2) also needed for .m files that have class definitions (and perhaps also a category definition)?. @rajsesh-msft What if the new class (defined in the static library) is never referenced by the app [at link time]? - like when will occur if it is looked up and bound at runtime.. @DHowett-MSFT Can you please elaborate on the linker include #pragma, how to use it and an example?. @DHowett-MSFT Just a quick FYI here (referencing https://github.com/Microsoft/WinObjC/issues/1589):\nThis is the same way the Mach linker works on darwin (Mac and iOS), the -load_all was added about a decade ago and was always thought to be a temporary patch (from what I recall regarding discussions about it). It was supplanted by -force_load (which loads on a per archive basis). Before -load_all, static archives needed a manual reference as explained here. The linker include #pragma, if it worked, would have been a very nice feature and easy to use.\nI see this is due to be fixed in 1704, if that can be moved up to 1702 then it would help.\nSincerely,\nEd\n. @Alx06 FYI: The idea of orientation is deprecated on iOS. Instead use the frame aspect to determine the layout. That will save a lot of vexation over the idea of mobile/tabloid/desktop layout because the frame lengths and aspect are a more consistent geometric model. Thus needing to pin the aspect is a non sequitur (e.g.: Don't use the plist attribute). . Please reference: https://github.com/Microsoft/WinObjC/issues/1210\n. The workaround is to #import <Foundation/Foundation.h> in MyClass.h - and in the larger project import that into the root class of the object graph. That may be why this issue does not show up in other projects (as people often import a cover header first off and rely upon PCH for optimization). This is not good for limited scoping of header files, but it does provide a mainstream workaround.\nAlso, the problem does not appear specific to defining an additional system header directory for search purposes, as initially hypothesized.\n. @ArnOmsft  @oliversa-msft Just a quick note: The instance indirection in the storyboard or xib to set a connection is pretty much an archetype and important use case to implement.. Update: I think I figured it out. I think it was the way non-ddlexport classes were used; and not necessarily the number of classes.\n. The crash scenario identification is being narrowed down (by process of elimination) and I think I may have a small example project demonstrating it by next week. If it gets that far then I'll post the project.\n. So far, the crash was resolved to this bug:\nin the file objc_2stage_init.cpp\nfunction __objc_resolve_compiled_modules()\ncall to __objc_resolve_module(*i);\nprints this to the system console:\nError: Class MyClass has an unexpected ivar myIvar with a negative offset of -2!\nand then the app crashes.\nWhen the type of myIvar is changed from unsigned char to unsigned then the program runs.\nThere seems to be something wrong with the objc runtime when computing ivar offsets.\n__objc_resolve_module on github and google search gives only one hit, so I don't know what it is doing.\nAlso, see the related samples app issue: https://github.com/Microsoft/WinObjC/issues/1203\nI think this is a bug deep in libobjc2.\nSincerely,\nEd\n. @rajsesh-msft I put a small example project demonstating the crash at the issue https://github.com/Microsoft/WinObjC/issues/1208\nSincerely,\nEd\n. @DHowett-MSFT You are right, so I closed this issue in preference to #1208.\n. FYI: I got bit by this expiring cert so had to set the date back two weeks; but then the AppManifest.xml showed with an invalid schema due to the lack of CN= pattern, which is strange because it worked before. I manually edited the pattern to get it to complete the build.\nShort story: It would be nice to fold this change into a new release ASAP (release 42).\n. @DHowett-MSFT Thank you for looking into this and the future fix. Your analysis is consistent with the workaround here, which is to manually add 32 bit padding in the ivar list to prevent the crashing. Sincerely, Ed\n. I am not explicitly using Clang modules, but if Islandwood uses them (or vsimporter.exe sets the solution to use them) then I am implicitly using Clang modules. vsimporter.exe sets the solution property Maximum Clang processes to -1 (auto), but when the compiler runs it logs MaxClangProcesses as having a value of 1.\n. With Clang > General > Enable C and Objective-C Modules set to Yes, the compile produced no errors and the solution ran. With that same flag set to No the compile produced 25 errors, such as:\nuse of undeclared identifier 'UIPasteboard'\nWith that flag set to No, the compile used 100% of the CPU most of the time, and the compile was much faster, but the solution would not run because of the errors.\n. No repro yet. If I'm able to get one then I'll post it.\n. @rajsesh-msft logging.dll is not called into directly. It is my understanding that the debugger will call into it to produce a call stack (for visual studio). The call stack shown in visual studio mostly terminates in logging.dll or shows a call stack that is not consistent with the calling sequence of methods. I can't indicate more at this time because I don't have the logging.dll source code and can only infer possibilities based upon limited usage. If I detect a more concrete pattern then I'll post some more details.\n. @bbowman I'm closing this and will reopen if I get more/better info. Right now, the call stack shown in VS is essentially random and nothing can be made of it. Fortunately the codebase is setup in a full logging mode which is nearly just as good or better so figuring out how to get a proper call stack is on the back burner for now. Plus, obvious, the further along in bring up the less a call stack is needed. Sincerely, Ed.\n. @DHowett-MSFT Thank you for opening this again. It turns out that this works:\nself.fileSavePicker.fileTypeChoices[@\"Plain Text\"] = @[@\".txt\"];\nbut attempting to access fileTypeChoices itself does not work, so for example this bombs:\nNSLog(@\"self.fileSavePicker.fileTypeChoices: %@\", self.fileSavePicker.fileTypeChoices); // bombs\nso, this does not work:\nid fileChoices = self.fileSavePicker.fileTypeChoices; // bombs here\n[fileChoices setValue:@[@\".txt\"] forKey:@\"Plain Text\"];\nIn any event, using the working pattern above is enough of a workaround.\nSincerely,\nEd\n. @DHowett-MSFT FYI:\nhttps://developer.apple.com/reference/objectivec/1418736-sel_isequal?language=objc\nDiscussion\nsel_isEqual is equivalent to ==.\n== is often used in a lot of code to test action variables, see for example:\nhttps://developer.apple.com/reference/objectivec/nsobject/1518160-validatemenuitem?language=objc\nThis appears to be an incompatability between iOS Obj-C and winobjc.\n. @bbowman FYI: I've already converted the codebase here to only use sel_isEqual() which is working well, so I no longer need the fix (no hurry on my part). It might be a good idea to document this issue for other people though. Whether selectors should be typed, and what to do about it long term, is another matter.\n. @rajsesh-msft Thank you for your team's great work bringing the bridge up to speed. I am planning to publish to the Windows store; hopefully early next year, maybe as soon as January 2017. That is based upon estimates on the bridge's state and also a lot of production testing that needs to be done. I am sure you are aware that a timeline can slip here and there :-) and January may be too optimistic and it may slip to Q1 or even Q2. So far, based upon the current bridge performance, I am very optimistic.\n. When the text color is suppose to be black, it looks mostly cyan. The blue channel seems to be at maximum all of the time and the other channels seem somewhat \"inverted\".\nIt is more complex than I thought because I can't repro it in a simple test app.\nIt seems like a font bitmap compositing bug such as attempting to composite a font raster cache into a buffer of different raster cache type.\nIt only happens with custom string drawing, the labels for buttons (UIButton) are the correct color (black).\nI reverted to release 41 and that release draws the font colors as expected.\n. @rajsesh-msft I am currently using this:\n-[NSString drawAtPoint:withAttributes:]\nwhich is drawing to UIGraphicsGetCurrentContext() - nothing fancy. So, drawing directly to the display device. I think the issues you cited are very consistent with what I am seeing.\n. @rajsesh-msft Attached is a small unit test demonstrating the error. On iOS the text is red color. On Windows (with WinObjC release 42) the text is cyan-ish in the white rectangle portion and green-ish in the black (alpha) portion. I constructed the test to duplicate a backstore promotion to demonstrate the error, i.e.: one of the drawing elements is promoting the backstore into something the glyph rendering does not like. It may be the layer promotion, scrollview, image with alpha channel or opaque or alpha method override. Sincerely, Ed\ncolorerror.zip\n. Perhaps this is all referenced in issue https://github.com/Microsoft/WinObjC/issues/1177 . If it is then please feel free to close this issue.\n. @rajsesh-msft The API is that of the project at this URL:\nhttps://github.com/Microsoft/WinObjC/issues/1335\nWhere [aString drawAtPoint:aPoint withAttributes:stringAttributes]; is called tens to hundreds of times for tables formatted as shown at this URL:\nhttp://www.vvidget.org/manuals/GraphIDE/Controls/Tables/index.html\nand while scrolling. It is noticeable by a user while scrolling, but is not particular to this situation.\nSincerely,\nEd. This problem persists with release 43.. This problem persists with release 43.. @DHowett-MSFT That is correct.. @ArnOmsft That sounds very sensible. Thank you for the consideration.. @DHowett-MSFT I am very excited to try this out in the next release. Thank you for the note and fix.. They \"prefer\" (not recommend) CGGradient because it is easier. This:\nhttps://developer.apple.com/reference/coregraphics/cgshading?language=objc\nsays \"CGGradient objects are much simpler to use.\"\nwhich is true. From my memory, about a decade ago Apple depreciated CGShading but then changed their minds and re-appreciated the feature. The function callbacks for CGShading is spread out, but it is all available on Apple's site. CGGradient is not a replacement for CGShading because it is not general enough. CGGradient can only approximate smoothly varying shading functions (sine, etc.).. @jaredhms Anything to reduce the thread count would be appreciated. Also, I notice, upon closing the app window (termination of app), the threads exit with status code 1 and not 0 (?) and I'm also wondering about that.. @bebauer-msft Please also see: https://github.com/Microsoft/WinObjC/issues/1609 using release 0.2.161130. You stated: \"There may be a regression in []UITextView's caret handling\". If editing of a UITextView instance is in the works then that would be very timely.. @tadam-msft  It is being used to mark when text has changed for the purpose of a later commit if the mark has changed (is true). I suppose a XAML event processing token can be installed for this purpose. But, it seems that is something that a framework designer and/or developer (Microsoft) would want to do and it should not be done at the app level. I mentioned this issue, in a larger context, to Raj and Arnaud already on 2/8/2017. The workaround here for this present issue is to simply commit every time; but yeah, we are already installing XAML event tokens for other things so that can probably be done in this case as well.. @spalda2 Probably, put CN= before the word islandwood in the manifest file; or update winobjc on your computer.\nSincerely,\nEd. NSString is typically a class cluster, returning private classes from its constructors. Try this:\nNSLog(@\"json: %@\", json);\nand see the type of your receiver (which according to your error is an instance of _NSCFString).\ni.e.: Don't use categories on a class cluster.\nSincerely,\nEd. That code frag is helpful, I'll give that a try. This type of textual editing has been replaced except for one non-blocking use case. That use case is [non-attributed] plain text. I'll try out your RichEditBox frag hopefully next week (the codebase here is frozen now in a QA cycle and I need to wait for that to be over).. @tadam-msft It is not blocking, a workaround is done. UIAlertView is just a stopgap measure to deal with the lack of UIAlertController and lack of other UI elements. They both suffer from a lack of features (even on the iPad).\nYou might want to at least put a check for the 16 limit (and perhaps a log statement) so that it doesn't throw a memory exception.. @ArnOmsft It is non-blocking and fixed on this end. Thanks for asking :-). @tadam-msft Thanks for the added information. Given that a WXCContentControl is installed onto the visual tree, how to I get the indirection (reference) to unprocessed ink input instance? Once I have that reference (a pointer) then I can call upon it, but I need to know the proper way to reference it within a given node in an object tree.. @jaredhms Thank you for your help. I got what I needed, so I'm closing this.. @rajsesh-msft Suggestion: If you set a baseline against Release 41 ( https://github.com/Microsoft/WinObjC/issues/1500 ) then that would give pass/fail criterion and the unit tests would be more fudge proof.. > Therefore this will only be useful if the Xcode search paths somehow contain a Windows library\n... that is exactly the use case at hand.\n\nImporting Xcode library search paths could be helpful for developers that are willing to customize their Xcode projects to make the import/reimport easier.\n\n... that is the reason for the issue. Right now, each reimport requires the manual adjustment of the linker line.. @rajsesh-msft Can you please inform me about this: Are long paths only available with UTF16 API? I thought long paths was more a function of UWP settings and not a particular file system API.. Ah. On Unix MAX_PATH is 1024. It appears that MAX_PATH is 260 on Windows - which is a pretty severe limitation. So, are you saying that if I convert to wchar_t API such as using _wmkdir() then I get a max math length of 32767?\nThat fact (if it is true?) is not mentioned at: https://msdn.microsoft.com/en-us/library/2fkk4dzw.aspx. Regarding the workaround, if layer is nil then CGRectEqualToRect compares garbage. The only result is a no-op on a nil anyways, unless the garbage contains a NaN value (highly improbable) which could result in an arithmethic exception.... @alakoring I think the title to this thread is poorly worded and the actual issue is how are the (function return) registers initialized when the receiver is nil. For a word length it is zero'd out but for anything greater than a word length (such as double or a struct where sizeof is greater than word length) the registers are not necessarily zero'd past a word length (32 bits in this case, or 64 bits on a 64bit implementation). This is the same way it works on iOS and Mac and its always been that way ever since Objective-C was invented. It is pretty standard that a pointer byte length (an id type) is also the same as a word length.. @DHowett-MSFT : @jaredhms wrote: \"or make a thorough pass through the codebase to make sure we're not relying on this behavior for complex types\". ... that is a good idea and is the main takeaway that I got from this thread. (in fact, the entire codebase can use a good cleaning and methodical going over).. This is still a bit confusing. It is my understanding that the compiler works correctly for x86 targets. That is it zeros out 32 bit in the return register when the receiver is nil. That is the way it is suppose to work. Thus you need to scrub your code anyways for returns > 32 bits.\nThe ARM target compile may be something different (?). From what I am reading the arm target assembly does not zero out 32 bit in the return register when the receiver is nil? - that definitely needs to be fixed in the compiler and not in a WinObjC scrub if that is the case.\nAlso, if the return is typed as a float (as opposed to double) then it shouldn't matter anyways because float is 32 bits.\nAm I understanding this issue right?\nI also am getting the impression that you want to extend the ObjC compiler to handle complex returns. Why is that? If the receiver type is \"id\" (an uncast type, i.e.: void *) then the return type is unknown and there is no way to know how much of the register to zero out; so it defaults to 32 bits.\nFrom my historical understanding, when the receiver is nil then 32 bits (or 64 on 64 bit implementations) is zero'd in the return register just because that is the implicit function [method] prototype return value for ObjC. -- i.e.: Nothing fancy in attempting to zero out the entire return register, etc.\n. @DHowett-MSFT Thank you for spending the time explaining it. Much appreciated.. @DHowett-MSFT \n\n\nThe signature does not use SEL (you are right)\n\n\nThe API does not appear in the header file (thus unsuspectingly overwriting what should be the published API with a private implementation that is not right.\n\n\nThe implementation does not use a mark and sweep, thus the O(computation) is inefficient (although it probably does not matter too much).\n. @rajsesh-msft performSelectorOnMainThread:... has been replaced with custom dispatching which works as expected, so this issue is no longer a blocker and I'm closing it.. @alakoring Interesting, I just did a very quick test in Xcode. Apparently Xcode/Clang can promote to unsigned when needed (and there is an option for short), but VS/Clang can not? I wonder why that is. OTOH: UINT32_MAX * 2 does not seem to promote the underlying type to a long in Xcode/Clang. From what I recall, compilers don't do the greatest job at promoting enums and it is best to stick in the int range. In your example, the enum constant should wrap to a negative max int and it should work [theoretically]? I wouldn't rely upon anything outside an int range though.. Regarding CGContextAddLines(), see:\n\n\nhttps://developer.apple.com/reference/coregraphics/1455461-cgcontextaddlines\n\"The first point in the array specifies the initial starting point.\"\nNOTE:\nhttps://github.com/Microsoft/WinObjC/blob/b06f7b32815237aad6e41c4a35d33008233244d9/Frameworks/CoreText/DWriteWrapper_CGPath.mm\nsays: \"CGPathAddLines does a CGPathMoveToPoint to the first point,\"\nBUT:\nhttps://github.com/Microsoft/WinObjC/blob/17d53bd912bea247b558c08a69916836d0fd0d7e/Frameworks/CoreGraphics/CGContext.mm\nCGPathAddLines()\nimplementation does not do a moveto to begin with so it must be picking up on a default gstate current point of {0,0}.\nAlso, the unit tests for these functions need to be updated to reflect the correct implementations.\n. @DHowett-MSFT  The image was made with raw CG calls. Here is an example code frag:\nCGContextRef ctx= UIGraphicsGetCurrentContext();\nCGContextSetLineWidth(ctx,10);\nCGContextSetRGBStrokeColor(ctx,1.0,0.0,0.0,1.0);\nCGContextAddArc(ctx,100.0,100.0,50,0.0,M_PI*2,YES);\nCGContextStrokePath(ctx);\nThat draws a red circle. The actual code is part of a library/application I spoke offline with Arnaud about using.\nSincerely,\nEd. @rajsesh-msft Thanks for the pointers. That answers the question so I'm going to close this issue.. @msft-Jeyaram Can you please post a code frag of what you were expecting that duplicates the function of what I posted. Perhaps what you expect is better and I can adjust on this end.. @msft-Jeyaram Thank you very much.. @rajsesh-msft It is an internal test. I'll attempt to get more information in April by which time I hope to have more resources (to address winobjc issues) as well. The OP is a heads up post for now until I get more info.. @rajsesh-msft Just checking in on this one. Release 0.2.170407 takes a little longer to meltdown; so it did improve a bit from the previous release. I'll try to get some more specifics as soon as I can.. @ArnOmsft I am planning on picking this up again on Release 47.. @rajsesh-msft This can no longer be duplicated under the current interation so I am closing this issue.. @DHowett-MSFT This problem persists in release 0.2.170407.\nIt is a static library. The derived and superclass are both in the static library, along with the entire class hierarchy of the calling sequence.\nThe workaround at https://github.com/Microsoft/WinObjC/issues/236 is being used, i.e.: Each TU has a function hook that is called to pull in the object file during linking. Note: This workaround is also used on iOS and it works there.\n. That could be it, or at least related.\nIf M1 is implemented like this in the superclass: \n- (void)M1\n{\nNSLog(@\"** got here 2\");\n}\nand in the derived class:\n- (void)M1\n{\n[super M1];\nNSLog(@\"** got here 1\");\n}\nThen the logging is:\n** got here 1\nbut if it is implemented like this in the superclass: \n- (void)M1_hack\n{\nNSLog(@\"got here 2\");\n}\nand in the derived class:\n- (void)M1\n{\n[super M1_hack];\nNSLog(@\"got here 1\");\n}\nThen the logging is:\n got here 2\n got here 1\nSo, for some reason it has something to do with the method name as well as super being resolved at load time.\n. Just an additional piece of information. At the end of the static library build, the linker gives the warning messages shown below.\nobjc_2stage_init.obj : warning LNK4264: archiving object file compiled with /ZW into a static library; note that when authoring Windows Runtime types it is not recommended to link with a static library that contains Windows Runtime metadata unless /WHOLEARCHIVE is specified to include everything from the static library\nConsumeRuntimeComponent.obj : warning LNK4264: archiving object file compiled with /ZW into a static library; note that when authoring Windows Runtime types it is not recommended to link with a static library that contains Windows Runtime metadata unless /WHOLEARCHIVE is specified to include everything from the static library\n. @DHowett-MSFT A workaround was developed and the library appears to be working properly in testing at this point. So this issue is (at present) no longer a blocker to deployment.. @DHowett-MSFT I look forward to checking this and other issues out when the newer version of WinObjC becomes available. Sincerely, Ed. Just an FYI: The mainScreen is the screen of the device, not the main screen associated with an apps window. Thus this is [probably] not a bug. To get the window resolution of your app you need to redirect to a window ivar.. @rajsesh-msft See the attached two images of a closed polygon.\nThis is on iOS/Mac:\n\nThis is on WinobjC:\n\nNotice how the lower left vertex of the polygon is closed on iOS/Mac, but not on WinObjC.\n. @rajsesh-msft I should have also stated that the lower left vertex is the first and last point in the path and closing the last point (to the first) should render the vertex as a vertex is rendered at any other point (vertex) in the path.. The attached project gives a radial gradient on iOS but not on winobjc\nrgradient.zip\n\n. This happens in Graph IDE as well (as would be expected). I suppose this will be fixed when https://github.com/Microsoft/WinObjC/issues/2443 is complete.\n. @DHowett-MSFT FYI: This is fixed in the current iteration of Graph IDE as well. Thank you.. Just an FYI: If you are going to redesign the run loop then you may want to consider both threaded and multi-mode asynchronous processing. That is because in the current implementation if a compute intensive timer is put on the run loop it will starve the system XAML events and freeze the window and system to app processing. The effect is to freeze the app window on the screen making it appear that the app is wedged. That type of starving does not take place on either iOS or the Mac.. @DHowett-MSFT So, switch the variables or the text? Here is an interesting read:\nhttp://stackoverflow.com/questions/7309121/preferred-order-of-writing-latitude-longitude-tuples\n. @rajsesh-msft Using kCGInterpolationMedium gives what appears to be the same result. The images are not smoothed and are jagged; looking much like kCGInterpolationHigh.. I compared 30 images scaled to 1/8 scale each using kCGInterpolationMedium and then using kCGInterpolationNone. Took screen shots of both renderings and compared them side by side and they look visually the same to me. Meaning CGContextSetInterpolationQuality() and CGContextSetShouldAntialias() have no effect for the code shown.. @DHowett-MSFT All the images look much better now on release 48. Thank you.. NSLog() is working as expected for release 0.2.170510 here while the app config is Debug.. @rajsesh-msft Please see the attached file/project.\nwebviewbug.zip\n. @rajsesh @DHowett-MSFT I'm closing this because you have the reproducible project example showing this issue and a workaround has been developed which eliminates this issue in the Graph IDE application thus it is not a showstopper in that regard.. I opened this again because, although its affect is largely mitigated in Graph IDE, it appears to be a bug in the WARP engine that affects WinObjC as well. This bug should probably be filed with a different group at Microsoft.. @Shagufta4786 In your Xcode project's build phase take out the System library explicit dependency and see if your target links and runs. It is probably a relic from a long time ago. If so then use vsimporter on the result to aquire a solution without that dependency. The other libraries can be obtained on the web. If your hybrid app has a good ObjC/Cocoa Touch component then you might want to port using WinObjC, otherwise one can do a rewrite to a different technology depending on the needs.. @steventroughtonsmith Can you make sure the MainMenu file is in the AppX directory? It could be that it is failing translation, is not there and the perception is that pathForResource is not working.. @Koalar This may explain some issues:\nhttps://stackoverflow.com/questions/9794508/glcolor4ub-in-opengl-es-2-0\nhttps://developer.apple.com/library/content/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/OpenGLESontheiPhone/OpenGLESontheiPhone.html\nstates:\nOpenGL ES 2.0 is the baseline profile for iOS devices, featuring a configurable graphics pipeline based on programmable shaders.\n. See:\nhttps://stackoverflow.com/questions/18449709/is-there-and-alternatice-for-gllinewidth-in-opengl-es-2-0\nIn general, I think you will find that one needs to use polygons and shaders and accept many limitations unless you want to start writing a lot of OpenGL code. OpenGL is good for some things, but not great for other things. As a reference, you may wish to google  QuartzGL:\nhttps://en.wikipedia.org/wiki/Quartz_Compositor#QuartzGL\nI can't get into the details of the limitations because of NDA issues.\n. @MSFTFox We are using VS 15.2 with a lot of success and am eagerly waiting for your merge so VS can be updated (presumably to 15.4 at that time). Thanks for your update and all your work ... it is definitely appreciated a great deal.. This:\nhttps://www.visualstudio.com/vs/preview/\nstates: \"Preview installs next to your stable Visual Studio IDE, allowing you to use either independently\"\nI do not know how to install a previous release once the current is upgraded; although I think it may not be possible. Also, I do not think you will be able to wipe and install through an ISO because the ISOs tend to miss things that need to be there. You may need to wait for the winobjc update - although I could be wrong about that. Even so, one might be able to do some mods to get winobjc to install its nuget packages on 15.4, but that might be pretty site dependent. It might be too hard to figure it out and a lot easier to wait for the winobjc update. Sorry I can't be of more help :-) but it looks like @MSFTFox may come to the rescue with an update in the near future - for which I am very grateful.. @rajsesh-msft No. Attached is a project and two images of that project's app window on Windows and the iPhone showing the issue.\nSincerely,\nEd\niPhone:\n\nWindows:\n\nProject:\ntextfield.zip\n. @rajsesh Do you have any idea on how to work around this bug?. @calbot You may have to convert the xib to ObjC code. Either by hand or using something like nib2objc ( https://github.com/akosma/nib2objc ). In any event, even in Xcode, the IB (nib) concept does not scale and is not very maintainable so if a xib gets too complex then it might be more efficient to reduce to code to begin with or use a different tool.. ... a XML entry with a nil tag. I can see how a general XML dictionary parser would choke on that. I would consider that an Apple bug. You might want to delete the nil-tag lines (or replace the tag with the key value) and see if it runs through xib2nib ... and also see if Xcode can parse it. Also, you might try setting Xcode to save in format version 6.3.. JSON not Json. @konisx You may want to check in with Andrew Pardoe at this blog:\nhttps://blogs.msdn.microsoft.com/vcblog/tag/clang/\nhttps://blogs.msdn.microsoft.com/vcblog/2016/06/03/clang-3-8-in-the-may-release-of-clang-with-microsoft-codegen/\n... and also let him know that clang is at v5.0\n. Did you figure this out yet? I suspect that there may be a rendezvous issue with your main view (loadView in the main controller). It all depends upon the exact code, but even on iOS the initialization sequence for bootstrapping the main view can be touchy. Usually this is not the case if you don't do anything fancy (use boilerplate storybook (sic: storyboard) and view controllers). You might have to manually log the bootstrapping calls to see where the issue occurs - at least log the [viewController view] and app delegate window ivars to make sure they are not nil. Once the bootstrapping is complete (the initial object graph is constructed) then the reference sequence does not matter (the object graph creation has no cyclic dependencies) and then it should go fine. Even so, your issue might be different.. @paskur This is a dup of this: https://github.com/Microsoft/WinObjC/issues/2376 which defines the answer. . @armadsen You might want to pull files from R-51 era and work with those and then wait for a comprehensive synch with Clang 6+ related assets.. @Liastre I mean stick with a known pre-release version such as version 0.2.180220 (0.2 Preview (February 2018)) and the corresponding version of Visual Studio (Visual Studio 2017 15.4.5 or such) until Microsoft releases a unit tested release that is tested against Clang 6/7, the corresponding version of Visual Studio which ever that may be and the corresponding nuget facilities. Either that or fork/download the entire source structure and get ready for some heavy lifting.. @yistn @sakrist According to this:\nhttps://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes-preview\nClang/C2 is stripped out. It would be interesting to see if your noted issue went away with a VS 2019 PR.\nSincerely,\nEd\n. @techlabz  I think this is a dup of issue https://github.com/Microsoft/WinObjC/issues/2884#issuecomment-412061585 . WinObjC is very productive if you are able to setup the prescribed situation, otherwise I suspect you will have to wait for a full-out Clang 6 related release.. I closed this because it is a UWP issue, not specific to winobjc, and a workaround was developed.. @Liastre Interesting. We're scheduled for another deploy cycle this Friday (on our own codebase) so it will be interesting to see if this crops up.\nDid you see this?: https://social.msdn.microsoft.com/Forums/vstudio/en-US/e76a6db5-b2cf-46d0-866a-f934d1ec00c4/wack-pass-on-desktop-failure-on-security-for-online-submission?forum=wpsubmit\nAre you certifying against a Release build?\nAre you using a local certification or online?\nIf local did you click the \"Update\" link to update your certification rules (that may cause new conditions)?\nAre you able to add the suggested linker flags (apparently it is only a linker issue and you don't need to recompile a dll)?\nDid you try to submit to the MS Store anyways, and does it pass certification there?\nSincerely,\nEd. @Liastre Thanks! Good to know. We're about to do an upload/publish, maybe tomorrow - this version is better than the iPad version (IMHO). I'll let you know how it goes. Sincerely, Ed. @Liastre Just a quick followup: Our apps still pass certification on the MS store using a 0.2 Preview release, so I assume this is truly a regression with a prerelease only per @DHowett-MSFT  comment. Sincerely, Ed. @Liastre Thank you for trying out the prerelease and saving me the time to find this issue out. I'm awestruck at how well WinObjC works and a few rough edges is no problem. I think sticking with a 0.2 Preview is a good idea until the Clang 6/7 based Previews materialize - I'm looking forward to that!. @darkoverlordofdata Cocoa Touch has limited keyboard processing, hence a UIKit look alike will be similarly deficient. You will need to install XAML Event processing for your purpose. One of the WinObjC sample apps shows how to do that. Sincerely, Ed. I've linked this closed issue: https://github.com/Microsoft/WinObjC/issues/2891 just for reference.. Exciting stuff!!. ",
    "SaeedAkhter-MSFT": "Thanks for the feedback.  Ideally you only need to run vsimporter once as long as the structure of the project has not changed.\nIs it possible to provide steps to reproduce the problem?  That would help us to investigate further.\n. Hi Alx06, if this is an example project that can be shared publicly, please feel free to push a new project on GitHub and we will take a look.\nIf you would like to share it with Microsoft as confidential information, I recommend that you apply to join the \"Islandwood Developer Program\".  Please email me at s-a-e-e-d-a@m-i-c-r-o-s-o-f-t.com (please remove all hyphens) and I can walk you through that process.\n. Improving support of the OpenGL API is on our roadmap and it will get better over time.  If you would like to see a working OpenGL sample please check out HelloOpenGL inside the latest WinObjC release (https://github.com/Microsoft/WinObjC/releases).\nTo help target and prioritize this investment, is there a specific set of interfaces that your application depends on would enable you to port to Windows?\n. Hi petriw,\nCan you help me understand your requirements around Cocos2d-x?  Since Cocos2d-x is C++ my expectation was that developers would use the work contributed by Microsoft Open Technologies for porting to Windows:\nhttps://msopentech.com/opentech-projects/cocos2d-x-windows-devices/\nhttps://msopentech.com/blog/2015/05/04/cocos2d-x-3-6-is-here-modern-windows-support-too/\nFor WinObjC, we recently started evaluating https://github.com/cocos2d/cocos2d-objc to identify work that would improve our compatibility with that framework.  That would allow games written in Objective-C using Cocos2d-ObjC to port to Windows.\nThanks,\nSaeed\n. Improving Cocos2d-ObjC support is on our roadmap.  To help us prioritize our investments, can you provide a little more background on which classes or extensions are required in order for you to publish your app on Windows?\n. @swa6589 Thanks for reporting this issue, unfortunately we have not been able to reproduce this type of error.  Can you provide us steps that would help us reproduce this error?  If you can push example code that reproduces the problem to a GitHub project that would be great.  If you need to share confidential source code with Microsoft, then I can walk you through the paperwork offline.\n. @jpalbert Thanks for reporting this issue.  This appears to be an error that we have not seen before.  Can you provide steps that would help us reproduce this error?  If you can push example code that reproduces the problem to a GitHub project, then that is a simple solution. If you need to share confidential source code with Microsoft, then please email me at s-a-e-e-d-a@m-i-c-r-o-s-o-f-t.com (remove all hyphens) and I can walk you through the paperwork offline.\n. @JHT1958, thanks for reporting the issue.  Can you copy & paste the error from your build log?\n. Sorry, I should have been more clear.  The \"build log\" can be accessed in two places:\n1) In Visual Studio you can find it inside the \"Output\" window when you set the dropdown \"Show output from:\" = \"Build\".\n2) Or you can also find the \"build log\" on the file system.   If your project name was myapp, the build log can be found under myapp.vsimporter\\myapp-WinStore10\\Debug\\myapp.log\n. @mlfarrell, thank you for reporting this issue.  Would it be possible to copy/paste the errors from your build log?\n. Be sure to pass your request along to Valve!  If they are interested in evaluating Islandwood to see if it's a good fit for porting their iOS app, we would be happy to help!\n(Note that Islandwood is not an emulator and cannot be used to run iOS apps on Windows.  It is a porting solution that enables iOS developers to leverage some of their existing source code and skills to build an app for Windows)\n. ",
    "steventroughtonsmith": "This looks to be the _AssetCatalogCompile step, perhaps on projects that don't include an asset catalog? I was able to comment it out in sbresources.targets without issue\n. ",
    "jeffdav": "+1\n. ",
    "hendelali": "Same here! +1\n. ",
    "razvandub": "Great, thanks. \n. ",
    "ardentra": "How long will an issue remain under review?\n. This would be pretty much a requirement to port our app over... it would be a pretty massive investment on our part to rewrite our entire audio engine.\n. ",
    "jorkenqq1": "The last version changed some function, so spend serveral time to read the code of AFNETWORKING~\n. ",
    "ehren": "I've enabled the diagnostic msbuild verbosity. I don't see any issues with overly long individual path names. I should note our project is quite large in terms of number of files. \nHere's the diagnostic output:\nmsbuild-cleansed.txt\nIt's the \"Clang\" task that's failing (TaskId:34)\n. Thanks. Tried that suggestion with no luck so far.\nMy project also relies on a large number of XCode targets (40+) to support separate app brandings. I've deleted all targets but one to see if that was the issue - also didn't fix.\n. So, using the \"Detailed\" rather than \"Diagnostic\" output makes this more clear. For some reason the Library and Framework paths that get translated to -I include arguments are getting duplicated (that is, multiple of the same -I include params are present in a single call to clang.exe).\nStill not sure how to address yet but this is the reason for the error (actually, this may be an issue with overzealous glob handling).\n\nDetailed build output:\nC:\\winobjc\\msvc\\LLVM-3.6.0\\bin\\clang.exe -cc1 -internal-isystem \"C:\\winobjc\\msvc..\\include\\WOCStdLib\" -include WOCStdlib.h -cc1 -triple i686-pc-windows-msvc -internal-isystem \"[LLVMResourceDir]\\include\" -emit-obj -disable-free -main-file-name [InputFileName] -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file [Input] -resource-dir \"[LLVMResourceDir]\" -fdebug-compilation-dir [InputAbsDir] -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=17.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  [ObjectFileName] -fconst-strings -fconstant-string-class CFConstantString -fblocks -I\"C:\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"C:\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" -fmsvc-real-char [Input] -iquote\"Debug\\Universal-project.hmap\" -D_DEBUG -D_MT -D_DLL --dependent-lib=msvcrtd --dependent-lib=oldnames -O0 -mrelax-all -g -fexceptions -fobjc-exceptions -fcxx-exceptions -fobjc-arc -internal-isystem \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -internal-isystem \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\um\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\shared\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\winrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\" -internal-isystem \"C:\\winobjc\\include\" -internal-isystem \"C:\\winobjc\\include\\VCInclude\" -I\"C:\\ipt\\Libraries\" -I\"C:\\ipt\\Libraries\\Airline\" -I\"C:\\ipt\\Libraries\\Alerts\" -I\"C:\\ipt\\Libraries\\Barcode\" -I\"C:\\ipt\\Libraries\\Bluetooth\" -I\"C:\\ipt\\Libraries\\CoreData\" -I\"C:\\ipt\\Libraries\\Crypto\" -I\"C:\\ipt\\Libraries\\Date\" -I\"C:\\ipt\\Libraries\\DragDrop\" -I\"C:\\ipt\\Libraries\\HelpTip\" -I\"C:\\ipt\\Libraries\\Http\" -I\"C:\\ipt\\Libraries\\Image\" -I\"C:\\ipt\\Libraries\\Javascript\" -I\"C:\\ipt\\Libraries\\JSON\" -I\"C:\\ipt\\Libraries\\Kal\" -I\"C:\\ipt\\Libraries\\Keychain\" -I\"C:\\ipt\\Libraries\\Label\" -I\"C:\\ipt\\Libraries\\MagstripeEncoder\" -I\"C:\\ipt\\Libraries\\NSArray\" -I\"C:\\ipt\\Libraries\\NSDictionary\" -I\"C:\\ipt\\Libraries\\NSNumber\" -I\"C:\\ipt\\Libraries\\NSObject\" -I\"C:\\ipt\\Libraries\\NSString\" -I\"C:\\ipt\\Libraries\\PhoneNumber\" -I\"C:\\ipt\\Libraries\\Progress\" -I\"C:\\ipt\\Libraries\\QR\" -I\"C:\\ipt\\Libraries\\Settings\" -I\"C:\\ipt\\Libraries\\TabBar\" -I\"C:\\ipt\\Libraries\\UIButton\" -I\"C:\\ipt\\Libraries\\UIColor\" -I\"C:\\ipt\\Libraries\\UINavigationController\" -I\"C:\\ipt\\Libraries\\UISegmentedControl\" -I\"C:\\ipt\\Libraries\\UIView\" -I\"C:\\ipt\\Libraries\\UnitTests\" -I\"C:\\ipt\\Libraries\\Alerts\\TSAlertView\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\" -I\"C:\\ipt\\Libraries\\Barcode\\ZBarSDK\" -I\"C:\\ipt\\Libraries\\DragDrop\\OBDragDrop\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\" -I\"C:\\ipt\\Libraries\\JSON\\JSONKit\" -I\"C:\\ipt\\Libraries\\Keychain\\Lockbox\" -I\"C:\\ipt\\Libraries\\MagstripeEncoder\\msrx6\" -I\"C:\\ipt\\Libraries\\PhoneNumber\\Metadata Classes\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\" -I\"C:\\ipt\\Libraries\\UINavigationController\\KNSemiModalViewController\" -I\"C:\\ipt\\Libraries\\UIView\\ClockView\" -I\"C:\\ipt\\Libraries\\UIView\\REFrostedViewController\" -I\"C:\\ipt\\Libraries\\UIView\\RoomSelectionTableViewCell\" -I\"C:\\ipt\\Libraries\\UnitTests\\Airline\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\config\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\doc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\gtk\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\include\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\java\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\plugin\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\pygtk\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\python\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\qt\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbarcam\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbarimg\" -I\"C:\\ipt\\Libraries\\Barcode\\ZBarSDK\\Headers\" -I\"C:\\ipt\\Libraries\\Barcode\\ZBarSDK\\Resources\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Build Scripts\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Classes\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\External\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\iPhone Sample\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\iPhone.xcodeproj\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Mac Sample\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Mac.xcodeproj\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.vsimporter\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderDemo\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.vsimporter\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.xcodeproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\Configurations\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcodeproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcworkspace\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitTests\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.bundle\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\example\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\src\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\cache\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\jni\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\doc\\api\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\doc\\ref\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\include\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\bin\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\doc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\include\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\java\\net\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\java\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\\inc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\\t\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\\ZBar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\python\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\python\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\\decoder\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\\processor\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\\qrcode\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\\video\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\zbar\\window\" -I\"C:\\ipt\\Libraries\\Barcode\\ZBarSDK\\Headers\\ZBarSDK\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Classes\\ASIWebPageRequest\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Classes\\CloudFiles\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Classes\\S3\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Classes\\Tests\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\External\\GHUnit\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\External\\Reachability\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\iPhone Sample\\Resources\" -I\"C:\\ipt\\Libraries\\Http\\ASIHTTPRequest\\Mac Sample\\English.lproj\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\tesseract\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.vsimporter\\ImageUtilities-Headers-WinStore10\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.vsimporter\\ImageUtilities-WinStore10\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\branches\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\hooks\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\info\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\logs\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\objects\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\refs\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderDemo\\en.lproj\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.vsimporter\\QRCodeEncoderObjectiveCAtGithub-Headers-WinStore10\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.vsimporter\\qrencoder-WinStore10\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\branches\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\hooks\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\info\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\logs\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\objects\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\refs\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit\\Controllers\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit\\Models\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit\\Views\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\Classes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\de.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\en.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\fr.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\Images\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\Settings.bundle\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitTests\\en.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitTests\\Settings.bundle\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\branches\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\hooks\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\info\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\logs\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\objects\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\refs\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\example\\res\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\example\\src\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\src\\base\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\res\\layout\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\res\\values\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\bin\\Mac\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\doc\\static\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\include\\ZBarSDK\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\java\\net\\sourceforge\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\perl\\inc\\Devel\" -I\"C:\\ipt\\Libraries\\Barcode\\ZBarSDK\\Headers\\ZBarSDK\\zbar\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\calib3d\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\contrib\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\core\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\features2d\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\flann\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\highgui\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\imgproc\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\legacy\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\ml\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\nonfree\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\objdetect\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\optim\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\photo\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\shape\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\stitching\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\video\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\videostab\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\tesseract\\leptonica\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\tesseract\\tessdata\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\tesseract\\tesseract\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.vsimporter\\ImageUtilities-WinStore10\\Debug\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\project.xcworkspace\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\xcuserdata\\graeme.xcuserdatad\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\logs\\refs\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\objects\\info\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\objects\\pack\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\refs\\heads\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\refs\\remotes\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\refs\\tags\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.vsimporter\\qrencoder-WinStore10\\Debug\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\logs\\refs\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\objects\\info\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\objects\\pack\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\refs\\heads\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\refs\\remotes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\refs\\tags\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\project.xcworkspace\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\Settings.bundle\\de.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\Settings.bundle\\en.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitTests\\Settings.bundle\\de.lproj\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitTests\\Settings.bundle\\en.lproj\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\logs\\refs\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\objects\\info\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\objects\\pack\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\refs\\heads\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\refs\\remotes\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\refs\\tags\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\project.xcworkspace\\xcuserdata\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\example\\src\\base\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\config\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\debian\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\doc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\gtk\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\include\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\java\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\plugin\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\pygtk\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\python\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\qrcode\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\qt\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbarcam\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbarimg\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebra\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebracam\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebraimg\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\bin\\Mac\\Finder\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphoneos\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphonesimulator\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\project.xcworkspace\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\java\\net\\sourceforge\\zbar\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\core\\cuda\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\stitching\\detail\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.vsimporter\\ImageUtilities-WinStore10\\Debug\\ImageUtilities.tlog\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\project.xcworkspace\\xcuserdata\\graeme.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities.xcodeproj\\xcuserdata\\graeme.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\logs\\refs\\heads\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C.git\\refs\\remotes\\origin\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.vsimporter\\qrencoder-WinStore10\\Debug\\qrencoder.tlog\" -I\"C:\\ipt\\Libraries\\QR\\QR-Code-Encoder-for-Objective-C\\QRCodeEncoderObjectiveCAtGithub.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\logs\\refs\\heads\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit.git\\refs\\remotes\\origin\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKit.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\project.xcworkspace\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\logs\\refs\\heads\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController.git\\refs\\remotes\\origin\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\project.xcworkspace\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\TabBar\\BCTabBarController\\BCTabBarController.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\jni\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\doc\\api\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\doc\\ref\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\include\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\include\\zebra\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\bin\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\doc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\include\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\zbar.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\java\\net\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\java\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl\\inc\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl\\t\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl_barcode\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl_zebra\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl_z_bar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\python\\examples\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\python\\test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\qrcode\\src\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\qrcode\\unix\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\test\\iphone\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\decoder\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\processor\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\qrcode\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\video\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\window\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebra\\decoder\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebra\\video\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zebra\\window\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\res\\layout\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\res\\values\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\\net\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphoneos\\libzbar.build\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphonesimulator\\libzbar.build\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\\xcuserdata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\project.xcworkspace\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\zbar.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Image\\ImageUtilities\\ImageUtilities\\opencv2\\core\\cuda\\detail\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\IASKSampleAppStaticLibrary.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\project.xcworkspace\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Settings\\InAppSettingsKit\\InAppSettingsKitSampleApp\\InAppSettingsKitSampleApp.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\res\\layout\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\res\\values\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\bin_mac\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\doc\\static\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples\\readertest\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\include_z_bar_s_d_k\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\zbar.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\java\\net\\sourceforge\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl\\inc_devel\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\perl_barcode_zebra\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\test\\iphone\\readertest.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\zbar\\decoder\\qrcode\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\\net\\sourceforge\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphoneos\\libzbar.build\\Objects-normal\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphonesimulator\\libzbar.build\\Objects-normal\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\res\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\bin_mac_finder\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples\\readertest\\readertest.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader_embed_reader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader_embed_reader.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_classes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_reader_sample\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_reader_sample.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader_tab_reader\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader_tab_reader.xcodeproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\zbar.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\java\\net\\sourceforge\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\\net\\sourceforge\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphoneos\\libzbar.build\\Objects-normal\\armv7\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphoneos\\libzbar.build\\Objects-normal\\armv7s\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\build\\zbar.build\\Debug-iphonesimulator\\libzbar.build\\Objects-normal\\i386\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\EmbedReader\\EmbedReader.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\ReaderSample\\ReaderSample.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\iphone\\examples\\TabReader\\TabReader.xcodeproj\\xcuserdata\\emetcalfe.xcuserdatad\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\res\\layout\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\res\\values\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\\net\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader_embed_reader\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader_embed_reader.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_reader_sample\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_reader_sample.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader_tab_reader\\en.lproj\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader_tab_reader.xcodeproj\\xcshareddata\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\\net\\sourceforge\\zbar\\android\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\\net\\sourceforge\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples\\readertest\\readertest.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_embed_reader_embed_reader.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_reader_sample_reader_sample.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\iphone\\examples_tab_reader_tab_reader.xcodeproj\\xcshareddata\\xcschemes\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1\\android\\examples\\CameraTest\\src\\net\\sourceforge\\zbar\\android\\CameraTest\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\\net\\sourceforge\\zbar\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\\net\\sourceforge\\zbar\\android\" -I\"C:\\ipt\\Libraries\\Barcode\\zbar-1.3.1.hg\\store\\data\\android\\examples_camera_test\\src\\net\\sourceforge\\zbar\\android_camera_test\" -DDEBUG -x objective-c -include \"C:\\ipt\\iTouch\\iTouch\\iTouch-Prefix.pch\"  [DependencySource] [DependencyFile] [AdditionalOptions]\n1>         ....\\iTouch\\main.m\n. I can confirm the issue was the XCode project's Header Search Paths containing the entry \"../Libraries/**\"\nNow that I've removed it, the build continues (though now I need to manually specify proper paths to some headers). \nPerhaps the recent change to expand path globs in ClangCompileTask.dll should be modified to check if the directory actually contains a \".h\" file before adding it to the includes (may need to check for other source file types as well in case someone is evilly including them - though arguably they could specify a manual include path in that case). I may try making that change - it could be easier for me than specifying the paths manually.\n. Hi, I'm just going to close this ticket.\nUltimately, this results from my project's (arguably bad) practice of checking in the sources for several libraries (e.g. zbar, opencv) used by our app into subdirectories of the app's source dir itself (though these directories weren't added to the XCode project). \nJust using non-glob Header Search Paths is a good solution for me.\nThanks\n. Apparently this is the same issue encountered by two others in #178. I should note I also have a large project that required many ifdefs to even get to the linking stage.\n. Just adding \nUINavigationItem *item = [[UINavigationItem alloc] init];\nto the AppDelegate of the WOCCatalog sample app is enough to reproduce the issue:\n1>AppDelegate_43CC2BDF.obj : error LNK2001: unresolved external symbol objcclass_name_UINavigationItem\n1>     1>\n1>AppDelegate_43CC2BDF.obj : error LNK2019: unresolved external symbol OBJC_CLASS_UINavigationItem referenced in function __i_AppDelegate__application_didFinishLaunchingWithOptions_\n1>     1>\n1>C:\\Users\\ijws\\Downloads\\winobjc\\samples\\WOCCatalog\\Debug\\WOCCatalog\\WOCCatalog.exe : fatal error LNK1120: 2 unresolved externals\n1>         The command exited with code 1120.\n1>       Done executing task \"Link\" -- FAILED.\n1>     1>\n. It looks like the classes mentioned above just aren't implemented (only references in project are all extern declarations) -- I've been able to bypass link errors by providing my own stub implementations (I have other run time issues that need addressing before worrying about needing real implementations for e.g. UIPopoverController).\n. no more link errors for me with an out of the box winobjc.\n. Haven't had the time to remove the #ifdefs disabling our app's use of message forwarding in a few cases - but I'll have to try this soon. Thanks folks!. Hmm, my \"squash\" seems to have removed your review comments. That should do it though (NSDateComponents header converted to properties and unnecessary copying of tz property avoided). Also added another unit test to ensure the NSDateComponents timeZone takes precedence over the NSCalendar timeZone.\n. Latest updated/squashed commit removes the spurious \": NSObject\" from the NSDateComponents.mm @implementation.\n. I'm going to look at https://github.com/werner77/WEPopover (and possibly also https://github.com/alvises/FPPopover) at some point - possibly by next week. If WEPopover converts reasonably well it might make the most sense to just use it internally for the popover implementation.\n. basic implementation now in repo\n. Just as a sanity check I compiled and ran the C++ touch keyboard sample app from \n    https://code.msdn.microsoft.com/windowsapps/Touch-keyboard-sample-43532fda\nThe touch keyboard does appear - so a fix for UITextField should be doable.\n. More or less fixed by #483 (or at least the touch keyboard appears!)\n. I wasn't exhaustive with the accessors switch in the last commit - e.g. didn't touch priv->_view and some instances of private access to _parentViewController even in non init contexts seemed better to leave private. Let me know if that went overboard though (suppose there's a bit of overhead in the objective-c message dispatch added here).\nI'm going to put further comments related to popovers in issue #302.\n. No rush on these changes but perhaps I misunderstood the comment i.e. I should instead change UIViewControllerPriv to a class with public accessors?\nIn any case, I'm not sure if the public properties of e.g. UIViewController are invoked internally on iOS - you're definitely going to have a bad time with any non-trivial overriding of e.g. -(UIViewController*)parentViewController; but that's probably the case on iOS too. \n. I'll avoid any more push -f changes to the commit as of May 10 (will modify this comment if this changes).\n. should the others like _leftButton go too?\n. added removal of the rest of them (decided not to add unsetting of the delegate though)\n. No longer crashes with latest release. Looks to have been fixed by 8cdbcab935eef41197620a9ccbd1509f38e8557b\n. see also: https://social.msdn.microsoft.com/Forums/en-US/c78e0b6d-4bd1-4405-bb70-1c97f89ce4a5/windows-1511-x86-100-access-violation-in-win-10-uwp-adcontrol?forum=aiasdk\n. Cool. Didn't realize that could be continued. OK to close ticket.\n. Let me know if I should squash the second commit addressing @bviglietta's comment. That code actually won't be called in either case. There is some commented out code in pathForResource:ofType: that would call it -- so looks like ~ipad resources won't be handled correctly when using that API. My use case is just to have ~ipad specific xib files chosen on startup which is fixed by this pull.\n. squashed\n. The HRESULT is E_INVALIDARG.\nI'm just building those changes now.\n. Unfortunately, I still get the exact same crash stack after doing a clean debug build with those changes. Should mention this apparently happens on a GC of some kind - about 6 seconds after a bunch of deallocations associated with popping a few view controllers off the UINavigationController stack (not in response to user interaction).\n. May have a different crash stack (now on app startup) with a release build with the added noexcept changes. I'm going to ensure I'm dealing with a clean release build before posting the stack.\n. Here's a different crash stack from a release build (HRESULT is E_INVALIDARG) \n``\n    combase.dll!RoFailFastWithErrorContextInternal2(HRESULT hrError, unsigned long cStowedExceptions, _STOWED_EXCEPTION_INFORMATION_V2 * * aStowedExceptionPointers) Line 1034  C++\n    combase.dll!RoFailFastWithErrorContext(HRESULT hrError) Line 1041   C++\n    twinapi.appcore.dll!wil::ErrorHandlingHelpers::Instance(void)'::2'::dynamic atexit destructor for 'wrapper''(void)   Unknown\n    twinapi.appcore.dll!Windows::ApplicationModel::Core::CoreApplicationFactory::ForwardLocalError(struct IRestrictedErrorInfo *)   Unknown\n    combase.dll!CallErrorForwarder(void * hProcess, int fLocal, IRestrictedErrorInfo * pRestrictedErrorInfo) Line 1167  C++\n    combase.dll!RoReportUnhandledError(IRestrictedErrorInfo * pRestrictedErrorInfo) Line 1251   C++\n\nmsvcp140_app.dll!516aac71() Unknown\n    [Frames below may be incorrect and/or missing, no symbols loaded for msvcp140_app.dll]\n    [External Code] \n\n```\nAs a sanity test (should have done this first!) I'm also getting the same crash stack with the latest winobjc.zip release (so it's not something silly like linking the wrong .obj file)\n```\n\ncombase.dll!RoFailFastWithErrorContextInternal2(HRESULT hrError, unsigned long cStowedExceptions, _STOWED_EXCEPTION_INFORMATION_V2 *  aStowedExceptionPointers) Line 1035  C++\n    combase.dll!RoFailFastWithErrorContext(HRESULT hrError) Line 1041   C++\n    twinapi.appcore.dll!wil::ErrorHandlingHelpers::Instance(void)'::2'::`dynamic atexit destructor for 'wrapper''(void)   Unknown\n    twinapi.appcore.dll!Windows::ApplicationModel::Core::CoreApplicationFactory::ForwardLocalError(struct IRestrictedErrorInfo )   Unknown\n    combase.dll!CallErrorForwarder(void * hProcess, int fLocal, IRestrictedErrorInfo * pRestrictedErrorInfo) Line 1167  C++\n    combase.dll!RoReportUnhandledError(IRestrictedErrorInfo * pRestrictedErrorInfo) Line 1251   C++\n    msvcp140_app.dll!527dac71() Unknown\n    [Frames below may be incorrect and/or missing, no symbols loaded for msvcp140_app.dll]\n    [External Code] \n```\n\nI'm going to play around a bit with those noexcept changes + look a bit more at the places in my app apparently causing the issue. One case may be related to changing a visible UIImageView's image\nwith UIView transitionWithView: while a UITableView row animation is running - but can't say for sure.\n. I don't think the noexcepts did anything but I was able to \"fix\" this by just disabling that SnapshotLayer function pointed to by @jaredhms (fixed all crashes and even a bit of new jankiness in the 'UITableViewRow + transitionWithView' double animation case mentioned above):\n```\ndiff --git a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\nindex d3771a1..10366a8 100644\n--- a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n+++ b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n@@ -1684,7 +1684,7 @@ void EventedStoryboard::_CreateWoosh(CALayerXaml^ layer, bool fromRight, bool in\n }\nconcurrency::task EventedStoryboard::SnapshotLayer(CALayerXaml^ layer) {\n-    if (((layer->m_size.Height == 0) && (layer->m_size.Width == 0)) || (layer->Opacity == 0)) {\n+    if (true || ((layer->m_size.Height == 0) && (layer->m_size.Width == 0)) || (layer->Opacity == 0)) {\n         return concurrency::task_from_result(nullptr);\n     }\n     else {\n```\nHaven't tried setting a breakpoints in that lambda etc yet.\n. Looks like the lambda needs to check if the task is cancelled before doing anything - seeing if I've got a clean fix.\n. Taking off for today but this change is not the right fix -- app just hangs or rather stays idle (probably something isn't firing):\ndiff --git a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\nindex d3771a1..1c8a046 100644\n--- a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n+++ b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n@@ -1691,7 +1691,16 @@ concurrency::task<CALayerXaml^> EventedStoryboard::SnapshotLayer(CALayerXaml^ la\n         RenderTargetBitmap^ snapshot = ref new RenderTargetBitmap();\n         return concurrency::create_task(snapshot->RenderAsync(layer, (int)(layer->CurrentWidth * CALayerXaml::s_screenScale), 0))\n             .then([snapshot, layer](concurrency::task<void> result) {\n-            // Return a new 'copy' layer with the rendered content\n+\n+            try\n+            {\n+                result.get();\n+            }\n+            catch (const task_canceled&)\n+            {\n+                return layer;\n+            }\n+\n             CALayerXaml^ newLayer = CALayerXaml::CreateLayer();\n             newLayer->_CopyPropertiesFrom(layer);\n. If I use this patch:\n```\ndiff --git a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\nindex d3771a1..72f9b00 100644\n--- a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n+++ b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n@@ -1689,9 +1689,13 @@ concurrency::task EventedStoryboard::SnapshotLayer(CALayerXaml^ la\n     }\n     else {\n         RenderTargetBitmap^ snapshot = ref new RenderTargetBitmap();\n-        return concurrency::create_task(snapshot->RenderAsync(layer, (int)(layer->CurrentWidth * CALayerXaml::s_screenScale), 0))\n-            .then(snapshot, layer {\n-            // Return a new 'copy' layer with the rendered content\n+        return concurrency::create_task([snapshot, layer] {\n+            __debugbreak();\n+\n+            snapshot->RenderAsync(layer, (int)(layer->CurrentWidth * CALayerXaml::s_screenScale), 0);\n+        }).then(snapshot, layer {\n+            __debugbreak();\n+\n             CALayerXaml^ newLayer = CALayerXaml::CreateLayer();\n             newLayer->_CopyPropertiesFrom(layer);\n```\nto step into the RenderAsync I get the following stack (though curiously setting the breakpoints seems to cause the crash to happen at an earlier point in my app):\n```\n    combase.dll!SendReport(HRESULT error, unsigned int cchMax, const wchar_t * message, unsigned short pSid, void * pExceptionObject, IUnknown *) Line 387  C++\n\ncombase.dll!RoOriginateError(HRESULT error, HSTRING__ * message) Line 490   C++\n    vccorlib140d_app.dll!Windows::Foundation::Diagnostics::OriginateError(HRESULT error, HSTRING__ * message) Line 211  C++\n    vccorlib140d_app.dll!Platform::Details::ReCreateException(long hrEx) Line 137   C++\n    vccorlib140d_app.dll!__abi_WinRTraiseWrongThreadException() Line 538    C++\n    UIKIT.DLL!__abi_WinRTraiseException(long __hrArg) Line 1117 C++\n    UIKIT.DLL!__abi_ThrowIfFailed(long __hrArg) Line 102    C++\n    UIKIT.DLL!Windows::UI::Xaml::Media::Imaging::IRenderTargetBitmap::RenderAsync(Windows::UI::Xaml::UIElement ^ __param0, int __param1, int __param2)  C++\n    UIKIT.DLL!XamlCompositor::Controls::EventedStoryboard::SnapshotLayer::__l7::() Line 1696    C++\n    [External Code] \n    [Async Call]  \n    UIKIT.DLL!XamlCompositor::Controls::EventedStoryboard::SnapshotLayer(XamlCompositor::Controls::CALayerXaml ^ layer) Line 1692   C++\n    UIKIT.DLL!DisplayAnimation::AddTransitionAnimation(DisplayNode * node, const char * type, const char * subtype) Line 249    C++\n    UIKIT.DLL!DisplayAnimationTransition::AddToNode(DisplayNode * node) Line 382    Objective-C++\n    UIKIT.DLL!DisplayNode::AddAnimation(DisplayAnimation * anim) Line 906   Objective-C++\n    UIKIT.DLL!QueuedAnimation::Process() Line 1118  Objective-C++\n    UIKIT.DLL!DispatchCompositorTransactions::__l10::() Line 663    C++\n    [External Code] \n    [Async Call]  \n    UIKIT.DLL!DispatchCompositorTransactions(std::deque,std::allocator > > && subTransactions, std::deque,std::allocator > > && animationTransactions, std::map,std::allocator >,std::shared_ptr,std::less,std::allocator > >,std::allocator,std::allocator > const ,std::shared_ptr > > >,std::less,std::allocator,std::allocator >,std::shared_ptr,std::less,std::allocator > >,std::allocator,std::allocator > const ,std::shared_ptr > > > > > > && propertyTransactions, std::deque,std::allocator > > && movementTransactions) Line 662    C++\n    UIKIT.DLL!DisplayTransaction::Process() Line 1252   Objective-C++\n    UIKIT.DLL!DispatchCompositorTransactions(std::deque,std::allocator > > && subTransactions, std::deque,std::allocator > > && animationTransactions, std::map,std::allocator >,std::shared_ptr,std::less,std::allocator > >,std::allocator,std::allocator > const ,std::shared_ptr > > >,std::less,std::allocator,std::allocator >,std::shared_ptr,std::less,std::allocator > >,std::allocator,std::allocator > const ,std::shared_ptr > > > > > > && propertyTransactions, std::deque,std::allocator > > && movementTransactions) Line 654    C++\n    UIKIT.DLL!DisplayTransaction::Process() Line 1252   Objective-C++\n    UIKIT.DLL!CAXamlCompositor::ProcessTransactions() Line 1538 Objective-C++\n    UIKIT.DLL!i_UIApplication__notify(UIApplication * self, objc_selector * cmd, unsigned int activity) Line 355 Objective-C++\n    FOUNDATION.DLL!_i_NSRunLoopStatenotifyObservers(NSRunLoopState * self, objc_selector * _cmd, unsigned int mode) Line 200    Objective-C++\n    FOUNDATION.DLL!_i_NSRunLooplimitDateForMode(NSRunLoop * self, objc_selector * cmd, NSString * mode) Line 198    Objective-C++\n    FOUNDATION.DLL!_i_NSRunLoop__runMode_beforeDate(NSRunLoop * self, objc_selector * _cmd, NSString * mode, NSDate * date) Line 259   Objective-C++\n    FOUNDATION.DLL!_i_NSRunLoop__run(NSRunLoop * self, objc_selector * _cmd) Line 301   Objective-C++\n```\n\nerror is RPC_E_WRONG_THREAD.\nAnd then if I continue, I'll hit the breakpoint in the .then lambda where I can see the task is cancelled.\nAt this point I still don't think I'm doing something silly in my app (like dispatching an animation off the main thread.....)\n. @jaredhms that works perfectly!\n. Sorry meant @mnithish \nThanks!\n. Possibly related to the change in ~ipad bundle loading.\nDoes the Info.plist of your target contain something like:\n<key>UISupportedInterfaceOrientations</key>\n    <array>\n        <string>UIInterfaceOrientationPortrait</string>\n    </array>\n    <key>UISupportedInterfaceOrientations~ipad</key>\n    <array>\n        <string>UIInterfaceOrientationLandscapeRight</string>\n        <string>UIInterfaceOrientationLandscapeLeft</string>\n    </array>\n(my app is set up as portrait on iphone and landscape on iPad)\nTry changing it too:\n<key>UISupportedInterfaceOrientations~ipad</key>\n    <array>\n       <string>UIInterfaceOrientationPortrait</string>\n   </array>\nI also have a landscape only tablet app. I've found that the Winobjc handling of UIInterfaceOrientationLandscapeRight (to just apply a rotation transform), does not work properly (resulting in improperly rotated app).\nHowever, UIInterfaceOrientationPortrait has worked since the beginning (with my landscape app).\nSo possibly, with the change in bundle loading, winobjc is now picking up the ~ipad specific interface orientation from your plist and applying the rotation transform which causes problems.\nHowever, I would expect that if the issue is due to ~ipad resource loading, removing the \nmode.operationMode = WOCOperationModeTablet;\nshould resolve the issue - so perhaps there's something else going on.\nfyi, this is my setup for a landscape only tablet app that seems to be working fairly well:\nmode.fixedWidth = 1024.0f;\n    mode.fixedHeight = 768.0f;\n    mode.fixedAspectRatio = 0.0f;\n    mode.magnification = 1.0f;\n    mode.autoMagnification = YES;\n    mode.operationMode = WOCOperationModeTablet;\n(with the UISupportedInterfaceOrientations set in the plist as UIInterfaceOrientationPortrait)\n. fixed in latest release\n. Hi @ArnOmsft \nIt looks like I was mistaken in the above description with one point:\n- a UITextField with clear background color will not result in a background color change upon mouseover (it stays clear).\nHowever, I was correct that a UITextField with clear background will result in a background color change (to FFFFFF) on gaining focus.\nTo test you can modify the WOCCatalog app with the below patch.\n```\ndiff --git a/samples/WOCCatalog/WOCCatalog/TextFieldsViewController.m b/samples/WOCCatalog/WOCCatalog/TextFieldsViewController.m\nindex 8a9b953..bf262eb 100644\n--- a/samples/WOCCatalog/WOCCatalog/TextFieldsViewController.m\n+++ b/samples/WOCCatalog/WOCCatalog/TextFieldsViewController.m\n@@ -190,6 +190,19 @@ static const CGFloat c_labelFontSize = 17.0f;\n                                                borderStyle:UITextBorderStyleLine\n                                            backgroundImage:[UIImage imageNamed:@\"photo1.jpg\"]]];\n\n// Row 12. Clear text field\n[_textFields addObject:[self _createTextFieldWithColor:[UIColor blackColor]\nbackground:[UIColor clearColor]\nsecureTextEntry:NO\nplaceHolder:@\"Clear background color\"\nkeyboardType:UIKeyboardTypeDefault\nborderStyle:UITextBorderStyleNone\ntextAlignment:UITextAlignmentLeft\nspellCheckingType:UITextSpellCheckingTypeNo]];\n+\n// change background to make color issues more evident\nself.view.backgroundColor = [UIColor greenColor];\n+\n     [self tableView].allowsSelection = NO;\n }\n\n```\nThis will be the result when the newly added text field (with clear background color) gains focus:\n\nNote: I've taken more of a look at some of these textfield issues recently. The above problem is due to the setup in Frameworks/UIKit.Xaml/TextBox.xaml\nI've yet to find the right modifications to TextBox.xaml that would support a similar config to the default UITextField on iOS (in particular, to disable appearance changes on focus gain, disabled status, etc)\nAlso, independent of this problem of finding the right xaml markup to support a 'vanilla UITextField' (no focus highlighting etc), it would probably be nice longer term to allow users to specify their own xaml template for a given UITextField (perhaps on an instance by instance basis). Because in some cases I like the current behaviour (with color changes on mouseover etc) - just not everywhere.\n. @mukhole This was only filed to document the need to #ifdef around the call in the winobjc internal Foundation/UIKit/WYPopoverController.m. I definitely agree this ticket should be closed. Thanks!\n. @bbowman, @DHowett-MSFT makes sense. I think @bbowman is right that adding explicit setter=, getter= to the property declaration will turn off autosynthesis. I'll try rebasing with that change.\n. @DHowett-MSFT that's right, just adding an explicit getter was enough to disable the synthesis (as bbowman mentioned above). Fix now in rebased commit.\n. @oliversa-msft thanks for the review. rebase handles the above comments (and also replaces two additional uses of an integer literal in UIControl.cpp with the enum constants).\n. I can squash that fixup commit. Thanks.. I found an additional view in my app that needs legacy hit testing enabled against the latest revisions. It's a UITableViewCell (no popovers involved). Will post if I find out more.. @jaredhms toggling isHitTestVisible in the tree viewer fixed the issue for the UITableView cell (this view does have a few disabled UIImageViews as subviews - may be related - will look further). Haven't tested if this is the case for overlayView yet.. @jaredhms I'm going to try recursively applying setUserInteractionEnabled for that problematic cell mentioned above (I'm also debugging a possibly unrelated issue where a control seems to require a long press? don't have details yet).\nNo rush in any case - this particular issue really isn't a blocker.\nfyi, I was able to modify WOCCatalog to highlight some interesting issues (one of them reproduces the WYPopoverController overlay problem)\n```\ndiff --git a/samples/WOCCatalog/WOCCatalog/ControlsViewController.m b/samples/WOCCatalog/WOCCatalog/ControlsViewController.m\nindex 8dc431f..a1bfc11 100644\n--- a/samples/WOCCatalog/WOCCatalog/ControlsViewController.m\n+++ b/samples/WOCCatalog/WOCCatalog/ControlsViewController.m\n@@ -66,6 +66,11 @@ static const int MULTIPLEPRESENTDISMISS_ROW = 5;\n     [self.rightPopoverButton setFrame:CGRectMake(self.view.bounds.size.width - originOffset - buttonWidth, originOffset, buttonWidth, buttonHeight)];\n     [self.rightPopoverButton addTarget:self action:@selector(pressedPopoverButton:) forControlEvents:UIControlEventTouchUpInside];\n     [self.view addSubview:self.rightPopoverButton];\n+\n+    // this blocks touches\n+    UIView *blah = [[UIView alloc] initWithFrame:self.view.bounds];\n+    blah.alpha = 0.0;\n+    [self.view addSubview:blah];\n }\n\n(void)viewDidDisappear:(BOOL)animated {\ndiff --git a/samples/WOCCatalog/WOCCatalog/MenuTableViewController.m b/samples/WOCCatalog/WOCCatalog/MenuTableViewController.m\nindex 988c857..8d56ce2 100644\n--- a/samples/WOCCatalog/WOCCatalog/MenuTableViewController.m\n+++ b/samples/WOCCatalog/WOCCatalog/MenuTableViewController.m\n@@ -39,6 +39,18 @@ static NSString* viewTitleKeyName = @\"ViewName\";\n     [self.menuItems addObject:[NSDictionary dictionaryWithObjectsAndKeys:title, viewTitleKeyName, controllerClass, controllerKeyName, nil]];\n }\n(void)viewDidLoad {\n// this doesn't even show up (same issue as WYPopoverController _overlayView)\nUIView* red = [[UIView alloc] initWithFrame:self.view.bounds];\nred.backgroundColor = [UIColor redColor];\nred.alpha = 0.5;\n[self.view.window addSubview:red];\n+\n// this shows up but touches on menu table aren't blocked\nUIView* green = [[UIView alloc] initWithFrame:self.view.bounds];\ngreen.backgroundColor = [UIColor greenColor];\ngreen.alpha = 0.5; // none of these alpha values matter for these tests\n[self.view addSubview:green];\n+\n     [super viewDidLoad];\n }\n```\n\nIt's weird that the same code in the pushed view controller blocks touches while in the root touches aren't blocked (and adding directly to the window reproduces the WYPopover issue).. @jaredhms no prob, thanks for the assistance (with the autolayout stuff too!). I may file a few more bugs before going on break but my current app dev isn't blocked.. Just a note - the above patch modifying WOCCatalog is misleading. The \"doesn't even show up\" example is accessing the window of the controller's view in viewDidLoad - but this controller has yet to be set as the root view controller of the app's main window - so the behaviour is expected. The other example \"this shows up but touches on menu table aren't blocked\" is a bug (and may be related to the WYPopoverController overlay issue).\nAnother note: The underlying issue with touches on the popover overlay not intercepted might be related to weirdness encountered manipulating views when no UIWindow exists in their hierarchy: \nI fixed a bug in our app where programmatically resizing a UITableView would always fail when performed in viewDidLoad in a popover launched via presentViewController. The fix was easy: just had to move the resizing to viewWillAppear.\nLooking at UITableView's setFrame:\nhttps://github.com/Microsoft/WinObjC/blob/ec804795a924609eb975a6518475a6371c871b14/Frameworks/UIKit/UITableView.mm#L1206\nif ([self window] == nil) {\n        //  We shouldn't try to re-layout the tableview if it's not part of the view heiarchy\n        return;\n}\nit appears handling of 'no window' scenarios might be problematic (although a call to super setFrame: is made there regardless - note that just removing the above 'window is nil' check from UITableView didn't fix my problem requiring move of the layout code to viewWillAppear).\nSo I have to confirm a few things to investigate the popover specific issues here:\n1) (so long as the view has not been accessed prior to presentation), does the view of a popover's content view controller have a UIWindow during viewDidLoad on iOS? I think yes.\n2) With WYPopoverController on iOS or Windows, (so long as the view has not been accessed prior to presentation), does the view of a content view controller have a UIWindow during viewDidLoad? Likely not (I need to confirm this) - do know my issue with tableview resizing during viewDidLoad existed prior to ec80479, so it's possible that commit introduced new issues with an empty view.window.. Note: I mentioned above some other problems with UITableViewCells and other misc views behaving strangely or not responding to touches. These issues have all been fixed against the latest develop (that contains the #1685 pull).. The above crash is due to bad handling of popovers in dismissViewController. The above patch is also unnecessary. Fixes for dismissViewController will be in an upcoming pull.. note: the stack above is a red herring - I didn't have breaking on all c++ exceptions enabled which would have made things more clear.  . These changes (as several commits) have been incorporated into pull #1601. @ArnOmsft not a prob. This isn't an immediate blocker since the behaviour is much better on a Surface tablet. The patch just adds more rows to WOCCatalog to highlight the issue. I wasn't able to find any fixes though. . This is fixed by #1511 (aside: the dismissViewControllerAnimated: implementation was always improper with popovers - but only resulted in a crash after some related memory leaks were fixed - requiring the new pull).. Re the comment (can't reply directly via github interface...) \n[curController dismissViewControllerAnimated:animated completion:completion];\n\n\ndo we need need earlier return? \n\n\nThis is the existing logic for dismissing multiple view controllers. An early return would improve the situation somewhat but a more extensive fix is needed (one has to walk the parent hierarchy dismissing view controllers - this is handled by the more extensive changes in #1511).. if ([self parentViewController] != nil) {\n\n\n\nwe could combine, but need comments here why we early return.\n\n\n\nI'll add the comments from #1511 regarding this (this is the existing code - which works - handling dismissViewController: when it's called on the modal instead of the parent).. Hi Yi, To address those comments I did have to pull in more changes from the other pull. With both commits here this is essentially the same change as #1511 except I've avoided making the changes (with corresponding cleanups) to always present a popover even in non-tablet mode. In particular, to address the comment around the bad early teardown (and autorelease dance) of the presented controller (formerly called 'curController'), I've gone ahead with the StrongId change (and also removal of the unnecessary alias ivar _modalViewController). \nAlso, the change adding proper multiple child dismiss logic arguably should be in a separate pull - however as noted above the current implementation of multiple child dismiss is so broken that I think it makes sense to go forward with the changes in this pull.. I've forced pushed a change making the subsequent fixup commit more simple (we can address more robust handling of multiple child dismiss in a subsequent pull). \nThe current followup commit 477ac1f addresses these comments:\nComment 1\n```\n\n@@ -1250,18 +1256,29 @@ - (void)dismissViewControllerAnimated:(BOOL)animated completion:(void (^)(void))\n         curController->priv->_parentViewController->priv->_modalViewController = nil;\n     }\n\nit is strange these clean up have to be done here.\n```\nall parent/child cleanup has been refactored into a common method (and it's called at the appropriate time - just before calling the dismiss completion block).\nComment 2\n```\n        [curController dismissViewControllerAnimated:animated completion:completion];\ndo we need need earlier return?\n``` \nI ended up doing some testing last night regarding multiple child dismissal (using my WOCCatalog testcase). \nThe current recursive implementation doesn't happen to crash (with my WOCCatalog testcase) - but it is unsafe to call dismissViewControllerAnimated:YES on a parent before the animation of a dismissed child has completed. I've just added a comment to clarify that this needs work but have avoided more extensive modifications (and I've left the multi child dismiss example in WOCCatalog out of this pull)\n Comment 3 \n```\n    [curController autorelease];\ncan we use strong here?\n```\nWe could just change curController to a StrongId there. However, the better change (which also addresses the comment \"it is strange these clean up have to be done here\") is to make the _presentedViewController ivar a StrongId which I have done\n\nThe fixup commit also includes various comment improvements in general.\nNote:\nSorry this is down to the wire! \nIt's still safe to take just the first patch  2ca7f9d which only fixes the crash on popover Done button press in WOCCatalog. However, I would opt to also take the subsequent patch 477ac1f as well (it is a definite improvement to handle the child/parent cleanup just before calling the user completion block). I've manually tested to ensure both patches do not introduce new leaks or crashes.. One note re multiple child dismissal: the latest commit uses a do while for walking the inheritance chain. This could also be done (safely) with recursion in fewer lines (see similar changes here: https://github.com/ehren/WinObjC/blob/8f02a5d00fb02dc829ea70d5215a878562cfed6f/Frameworks/UIKit/UIViewController.mm#L1225 against an older WinObjC) however I opted to avoid unnecessary use of non-tail recursion.. That assert is due to the 'overlay doesn't block touches issue' ;) It's because you're trying to launch a new popover by pressing a button that's normally blocked by the popover overlay (resulting in WOCCatalog trying to present a popover on a view controller that's already presenting a popover).. re that last fixup commit, I read some docs incorrectly wrt presentedViewController property.\nOn the one hand they say :\n\"When you present a view controller modally (either explicitly or implicitly) using the present(_:animated:completion:) method, the view controller that called the method has this property set to the view controller that it presented. If the current view controller did not present another view controller modally, the value in this property is nil. \"\nLies. The right behaviour is the sentence above \"The view controller that is presented by this view controller, or one of its ancestors in the view controller hierarchy.\"\nApparently this is the correct behaviour: http://stackoverflow.com/questions/31316238/what-does-presentedviewcontroller-in-uiviewcontroller-mean/31329884#31329884\n(commit just undoes my changes to presentedViewController property and replaces my use of the property with direct use of ivar - I still think it makes sense that _presentedViewController ivar actually holds the modal)\n. @jaredhms will give it a full test tomorrow (it's very likely this fixes a number of issues in my app against the current develop). thanks!. mind if I sneak in some UITabBarController fixes in this pull?. I'll change them all to .get()s in the next commit. I'm a bit curious how that worked with the old presentViewController:\nhttps://github.com/Microsoft/WinObjC/blob/fbd5601f539bfdf0e61e59d4155921eb85f88abd/Frameworks/UIKit/UIViewController.mm#L1146\n- (void)presentViewController:(UIViewController*)controller animated:(BOOL)animated completion:(void (^)(void))completion {\n    bool shouldShow = false;\n    UIViewController* curController = self;\n    while (curController != nil) {\n        if (curController->priv->_visibility != controllerNotVisible) {\n            shouldShow = true;\n        }\n        curController = [curController parentViewController];\n    }\n    if (!shouldShow) {\n        TraceWarning(TAG, L\"Controller is not visible!\");\n        return;\n    }. priv->_visibility is a bit confusing... I think UINavigationController and UIView poke at it too. Perhaps you're presenting over a view controller with _visibility controllerNotVisible.\nDon't see any problem with the change though. I know with UINavigationController that pushing onto a completely not visible view controller e.g. in viewDidLoad is fine (not actually sure about the correct logic for presentViewController though). I'm wrong that UIView accesses priv->_visible. It's just UIViewController and UINavigationController. I don't have any insight why present with a parent hierarchy all controllerNotVisible worked before though.. No prob (kinda fun!). @pradipd, that's not a problem. Glad it wasn't the NSObject_CancelPreviousPerformRequestsWithTarget implemetation itself!\nI can submit a new commit not including the NSThread change (though there's no rush getting that in - I'll wait until after an NSThread/NSRunloop fix is determined). I wouldn't mind taking a look at the underlying memory management issue for curiosities sake but anyone that wants to look at this today should go ahead (won't have time today).. @pradipd thanks for the test fix!\nI took the opportunity to push another change. No change in behavior - but this avoids creating a new thread-lifetime NSThread object unnecessarily (isMainThread is called frequently via UIView RunSynchronouslyOnMainThread). Hi @rupertdaniel. I have some speculative comments below. Your best bet might be to just try against the latest develop though.\n--\nI'm wondering if this is a similar issue to something we hit in our app with UIBezierPath CGPath. UIView CGImage has an attribute macro NS_RETURNS_INNER_POINTER on other platforms (apparently this prevents clang from optimizing out some autorelease usage under ARC). See https://github.com/Microsoft/WinObjC/pull/1012.\nI was unable to reproduce your test case on the latest develop though, so you might be better off to just try upgrading. The alternative speculative fix against your current release SDK is to modify your local copy of UIImage.h, changing the property declaration:\n@property (nonatomic, readonly) CGImageRef CGImage;\n\nto \n@property (nonatomic, readonly) CGImageRef CGImage NS_RETURNS_INNER_POINTER CF_RETURNS_NOT_RETAINED;\n\nRecompiling the SDK shouldn't be necessary with this header only change.. just a heads up - this needs a fixup commit that I'll push tonight. Test is unchanged but the unsetting of the presenting controller StrongId (see comment \"presentViewController mechanism should handle lifetime.\") should happen in the same block scope as the presentViewController call. . @jaredhms no prob. I need to take a look at this prior to merging though - changes to the 'lifetime validation' in the second commit to pull introduced an issue. Test is passing in current state with latest changes to #2195 though. . excuse the churn. 'fixup 1' (4ed330c) incorrectly avoided the block auto capture (the niling out of the __block StrongId wasn't correct as this would result in a nil reference in the block body). The current code avoids the block autocapture (and in the event a change was made to presentViewController s.t. the controller is not kept alive, this test should hopefully die sending a message to a deallocated object).\nIn any case, there's no new issue with the test or with #2195 (I've run this case against the latest #2195 so it should be good to go).. ended up just squashing the recent fixup commits when doing the rebase. I haven't been able to reproduce the failures occurring on the test machine locally. Given that none of the EXPECTs are failing, this might be a 'hang'; the most recent commit should provide a better diagnosis if this is the case. The most recent commit also implicitly allows more time for the full present/dismiss to occur (by signaling separate UXEvents for each present/dismiss).. @jaredhms could you post the output from the last run? It should indicate which present or dismiss is failing.\nThe other logs above indicate it's the animated=YES tests failing. I'm still thinking why this isn't occurring locally.. @jaredhms cool! I'm guessing a test exercising e.g. the animationDidStop:finished: selector would also fail in this scenario. I think it would be reasonable to push this with c_animationModes = {NO} with a TODO. I'll hold off for the moment but I can commit that change anytime.. Latest commit disables the animations but re-adds the __block qualifier to ensure that presentViewController keeps its presented controller alive.. The addition of the extension to access the modalOverlayView is to make hacks like http://stackoverflow.com/questions/9102497/dismiss-modal-view-form-sheet-controller-on-outside-tap much easier than on the ref platform.. This isn't a blocker for me in any case (I rebased my functional test pull against the recent 96255883f4dff8c6d16fb49ecd067d56ea2a841d mentioned above - the functional tests also work fine in that commit). I was able to complete the build after the successful tools.sln build.. Hmm, I just hit the first The target \"CreateManifestResourceNames\" does not exist in the project.    WinObjC.Logging C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets   2630 with a clean build.\nI ran Init.ps1 again before doing the .\\.tools\\nuget.exe restore .\\tools\\tools.sln  which looks to have succeeded; hadn't tried that from the command line previously.\nHere's the .targets:\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <PropertyGroup>\n    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>\n  </PropertyGroup>\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\n    <Import Project=\"$(NuGetPackageRoot)nuget.build.packaging\\0.1.186\\build\\NuGet.Build.Packaging.targets\" Condition=\"Exists('$(NuGetPackageRoot)nuget.build.packaging\\0.1.186\\build\\NuGet.Build.Packaging.targets')\" />\n  </ImportGroup>\n</Project>\n. oops, this last time I built the project my visual studio was pointing to a different copy of the repo. It's possible I haven't run Init.ps1 in that repo. Trying a build from the proper repo this time.... and it worked. I think trying this yesterday, I never ran the tools.sln specific nuget restore. Thanks! Will try using the copy of WinObjC tools for the main build. . Noticed earlier that some files need ARC enabled in GLKit. I can open a pull unless anyone has a patch in progress.. no issues running WOCCatalog. @oliversa-msft It is to address the preferredContentSize issue. I'd have to do a clean framework build to confirm but I'm pretty sure you'll see an undefined (== fullscreen) height if you pref optimization back on.\nIn general WYPopoverController is pretty gross in that it swizzles all calls to preferredContentSize in order to modify it's internal state. A from scratch popover implementation could instead handle this with some extra logic in UIViewController.mm\n. Also in debug builds most/all of the problems in WYPopoverController were from calling a method returning a struct on a nil object. In fact, if I add back the unconditional messaging to WYPopoverController, the issue should show up in debug builds as well. Totally speculative but I wonder if clang is removing the nil checks under some bad assumptions about the ABI (more likely some other issue though).\n. This isn't implemented - another WYPopoverController tweak would be necessary.\n. Even the #pragma once isn't strictly necessary since we're #import ing these - but added them to all headers.\n. squashed that change into the fixup commit\n. PasswordBox doesn't have the SelectionStart/Length properties. However it already implements the right functionality automatically. (I did the basic test which is to programmatically set the text then programmatically gain focus with a secureMode UITextField - the caret just appears at the end)\n. my original commit to this pull actually undid someone's earlier change making _backgroundColor a StrongId. I've put that code back in the latest commit and also made better use of StrongId in UIPopoverController.mm.\n. I had the headers in the wrong directory. Now that I've moved them to Frameworks/include it was possible to remove those lines from the vcxitems.\n. I think I'll have to make a few simple changes to the WYPopoverController headers to properly support these attributes throughout. I will change all of these in the next fixup commit.\n. I've squashed  all changes adding the attributes into the last commit.\n. I've made the two s/bool/BOOL/ changes and squashed all review changes into a single review comments commit.\n. This is not implemented. I was concerned about memory leaks from the added popoverBackgroundViewClass retain property being autosynthesized (note the existing handling of the stub backgroundColor).\n. Debug builds of the bridge with the WOCCatalog app should show the issue - you'll just see a blank gray popover opening one of the popovers on the \"Controls\" screen instead of the actual content view controller (without applying this pull request).\nI can look at this a little more tomorrow (root cause wise) but it may be related to the KVO of \"viewContentInsets\": https://github.com/Microsoft/WinObjC/blob/d9578b016df6cfc3822ff409904b69544a2a6ec6/Frameworks/UIKit/WYPopoverController.m#L609\n. @jaredhms the best/only fix for the issue is still the current pull. \nTrying the following instead of the current pull still leaves the bug:\n```\ndiff --git a/Frameworks/UIKit/WYPopoverController.m b/Frameworks/UIKit/WYPopoverController.m\nindex 442df3c..89b0bd2 100644\n--- a/Frameworks/UIKit/WYPopoverController.m\n+++ b/Frameworks/UIKit/WYPopoverController.m\n@@ -606,7 +606,7 @@ static char const * const UINavigationControllerEmbedInPopoverTagKey = \"UINaviga\n }\n\n(NSArray *)observableKeypaths {\nreturn [NSArray arrayWithObjects:@\"tintColor\", @\"outerStrokeColor\", @\"innerStrokeColor\", @\"fillTopColor\", @\"fillBottomColor\", @\"glossShadowColor\", @\"glossShadowOffset\", @\"glossShadowBlurRadius\", @\"borderWidth\", @\"arrowBase\", @\"arrowHeight\", @\"outerShadowColor\", @\"outerShadowBlurRadius\", @\"outerShadowOffset\", @\"outerCornerRadius\", @\"innerShadowColor\", @\"innerShadowBlurRadius\", @\"innerShadowOffset\", @\"innerCornerRadius\", @\"viewContentInsets\", @\"overlayColor\", nil];\nreturn [NSArray arrayWithObjects:@\"tintColor\", @\"outerStrokeColor\", @\"innerStrokeColor\", @\"fillTopColor\", @\"fillBottomColor\", @\"glossShadowColor\", @\"glossShadowOffset\", @\"glossShadowBlurRadius\", @\"borderWidth\", @\"arrowBase\", @\"arrowHeight\", @\"outerShadowColor\", @\"outerShadowBlurRadius\", @\"outerShadowOffset\", @\"outerCornerRadius\", @\"innerShadowColor\", @\"innerShadowBlurRadius\", @\"innerShadowOffset\", @\"innerCornerRadius\", /@\"viewContentInsets\",/ @\"overlayColor\", nil];\n }\n\n@end\n@@ -983,6 +983,8 @@ static float edgeSizeFromCornerRadius(float cornerRadius) {\n         self.arrowOffset = 0;\n     self.layer.name = @\"parent\";\n\n+\n+        self.viewContentInsets = UIEdgeInsetsZero;\n     if (WY_IS_IOS_GREATER_THAN_OR_EQUAL_TO(@\"6.0\"))\n     {\n\n```\n. @msft-Jeyaram this should be clearer now with the latest pull (also might be easier to review the change in my WYPopoverController fork). The above was an overzealous workaround for an issue accessing UIDevice methods at + (void)load; time. \nHere's a stacktrace for the issue:\n```\n    KernelBase.dll!_RaiseException@16\u001e()    Unknown\n    vcruntime140d_app.dll!__CxxThrowException@8\u001e()  Unknown\n    LIBOBJC2.DLL!objc_exception_throw(void * object) Line 127   C++\n    OBJCUWP.DLL!wil::details::ReportFailure(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, void * returnAddress, wil::FailureType type, HRESULT hr, const wchar_t * message, details::ReportFailureOptions options) Line 3134    Objective-C++\n    OBJCUWP.DLL!wil::details::ReportFailure_Msg() Line 3145 Objective-C++\n    OBJCUWP.DLL!wil::details::in1diag5::Objc_Throw_HrMsg(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, HRESULT hr, const char * formatString, ...) Line 4728    Objective-C++\n    OBJCUWP.DLL!WAIPackageStatics_inst() Line 509   Objective-C++\n    OBJCUWP.DLL!+WAPackage current Line 516  Objective-C++\n\nUIKIT.DLL!-UIDevice _newIdentifierForVendor Line 71    Objective-C++\n    UIKIT.DLL!-UIDevice init Line 65   Objective-C++\n    FOUNDATION.DLL!+NSObject new Line 68 Objective-C++\n    UIKIT.DLL!+UIDevice currentDevice Line 50    Objective-C++\n    UIKIT.DLL!+_WYPopoverTheme theme Line 450  Objective-C\n    UIKIT.DLL!+_WYPopoverController load Line 1653 Objective-C\n    LIBOBJC2.DLL!objc_send_load_message(objc_class * class) Line 58 C\n    LIBOBJC2.DLL!objc_resolve_class(objc_class * cls) Line 249  C\n    LIBOBJC2.DLL!objc_resolve_class_links() Line 269    C\n    LIBOBJC2.DLL!__objc_resolve_module(objc_module_abi_8 * module) Line 133 C\n    LIBOBJC2.DLL!__objc_resolve_legacy_modules() Line 182   C\n    UIKIT.DLL!___objc_legacy_resolve_all() Line 84  C++\n    [External Code] \n```\n. @jaredhms rebased with TODOs and filed issues #597 and #598\n. That's the issue, one can't use StrongId because of the error: \n\n\"type of property 'minimumDate' ('NSDate *') does not match type of instance variable '_minimumDate' ('AutoId')\nNote that the existing StrongIds are named __minimumDate, __maximumDate (two underscores). But the code is using the auto synthesized variables _minimumDate, _maximumDate resulting in use after frees.\nThe alternative fix would be to keep the __minimumDate, __maximumDate StrongIds and change the .mm file to use these (but then you would still have \"extra\" _minimumDate, _maximumDate ivars due to autosynthesis).\n. removed those in final rebase\n. those were copied from the Framework/UIKit headers - changed in rebase\n. fixed that in rebase. removing that also kills some messaging of self in init!. UIPresentationController is still basically a stub. We have to +1 the retain count via StrongId just to satisfy the property declaration in UIPresentationController.h. But there's no lifetime management here otherwise (these strong refs are destroyed when the UIPopoverPresentationController subclass is destroyed which is taken care of elsewhere)\n. This is slightly improved by the followup commit. I've still opted to keep the teardown of the UIViewController priv variables inside UIViewController.mm (instead of poking at these from UIPopoverPresentationController.mm). The _prepareForPresentation call needs to stay in UIViewController so that the UIPopoverPresentationDelegate is still informed even when there's no actual popover (non-tablet scenarios). . Handled by strong id change. The dismissCompletion won't be invoked prior to dealloc though (this is ensured by grabbing the strong ref in _handleDismiss). Fixed and added more detail to comment. fixed in new commit. I see that the UIViewController.mm setStoryboard: method isn't exposed publicly so technically there's no crash in the current code (but the ivar should still be changed to a strong id). fixed (also similar change made in UIPopoverController). that should be won't be invoked after dealloc. I need this header for the class extension / anonymous category exposing methods for UIViewController. I did fix a whitespace error with the \"()\" in the last commit.. @jaredhms I've added a comment. Regarding your message (which I think was deleted) about whether to simplify the implementation by always showing a popover on phones/non-tablets, I'm initially supportive though would prefer a separate pull. The behaviour has changed in iOS 9 anyway to allow popovers on phones in \"non-horizontally compact\" environments. There would also be an easy workaround for users that don't want the popover - just use a different modal presentation style. Simplification wise, this would allow the popover presentation controller setup to be moved out of _addToTop and into presentViewController:. I'm also not sure whether the UIPopoverPresentationControllerDelegate is being handled correctly for non actual popover presentations right now (I'm not sure if calling dismissViewController: should fire the didDismiss delegate - would have to be checked) - so it probably would be an improvement to just always show a popover.\nWe'd have to consider the behaviour of UIModalPresentationFormSheet on non-tablets as well. There I'm thinking that the current behaviour to display as full screen might still be best (since the default hardcoded dimensions of the FormSheet modal are inappropriate for phones) - though on the other hand these are resizable via preferredContentSize.\nNote however, there are a few framework issues I need to file that have come up regarding popovers though the problems are unrelated to this pull (just a heads up).. Yes it should. This is handled by #1511 but I'll add the proper late cleanup of curController to this pull (in a coming commit).. I have some changes in #1511 making the presentedViewController a StrongId and some related changes that better handle the cleanup of the modal you've pointed to. I can put those changes into this commit as well.. I think it makes sense to handle removing the tablet vs nontablet logic now since it affects presentViewController. The pull in #1511 includes this but I think would be better to bring in the additional changes as a third commit in this pull for clarity, then close #1511. . I've got some changes for handling the dismissal in the required order that I can handle in a third commit to this pull.. will add this. I was thinking for cases where the property just returns the ivar (at least in UIViewController) it's better to access via the property for the benefit of subclassing (not that subclassing presentedViewController is likely to work or be useful).. Presenting a popover still requires setting presentationStyle = UIModalPresentationPopover. Before this would result in a full screen modal.. To clarify, specifying presentationStyle = UIModalPresentationPopover under a non-tablet UIInterfaceIdiom resulted in presentation of a full screen modal previously.. I _think even with non-ARC an implicit copy takes place as a result of the block capture (We don't have to worry about leaks because the capturing block is guaranteed to be nilled out.... so actually there are a few cases where I'm unnecessarily grabbing a strongSelf - just for safety's sake). In particular, using a reference to weakSelf with the cleanupCompletion block on line 1323 is unnecessary (but doesn't hurt).\njust fyi, have a small unrelated fixup push coming in next 5 mins. will switch the helper to return an autoreleased object in the next commit to the pull. I would kind of prefer to stick with returning a StrongId since it's a cool way to avoid the autorelease pool (though forgetting to assign the call to a StrongId is a big use-after-free footgun). \nSince it turns out _statesForMode is only used in NSRunLoop.mm I'm thinking the best option is to remove the method declaration from the header but keep it returning a StrongId.. removing the declaration of _statesForMode from the +Internal header would've required another declaration in a class extension in the .mm.... so just went with the autorelease after all.. switching to local StrongId would be an easy change. That makes sense. I'll include that + some cleanups in the next commit - I can see there's e.g. an unused pthread tls key in that file too.. In the body of the lambda we're not creating the NSThread via alloc init. We just get a non-owning reference by the call to |currentThread|. The call to |currentThread| does happen to create an owning reference (because it's called from a thread not created via the NSThread API), but this is relinquished on thread exit via the thread_local StrongId destructor. \nI'll add some comments to the test case when I add in @DHowett-MSFT's suggested changes - likely sometime tonight. It might also be clearer to convert that test to ARC - but I had some difficulty attempting this initially.. @rajsesh-msft there's a few more asserts in the unit test which should improve things. @DHowett-MSFT I don't think non-POD file scope thread_locals are supported by this version of clang (c2?). \ne.g. this is fine at file scope\n```\nstruct Blah {\n    Blah() {\n        abort();\n    }\n~Blah() {\n        abort();\n   }\n};\nthread_local Blah blah;\n```\nBut even if thread_local worked the lazy approach avoids the static initialization/destruction overhead for every thread created outside the NS* APIs.\nI also haven't confirmed but I think this means there's a leak from thread_local use in NSProgress: https://github.com/Microsoft/WinObjC/blob/develop/Frameworks/Foundation/NSProgress.mm#L50. @rajsesh-msft I'll open a pull with the NSProgress change. Not the biggest fan of asserting on the retain count everywhere in tests.... but a conversion to ARC would be straightforward.. @rajsesh-msft fixed. Also, it's not expressly allowed by the style guide but what about using auto& / return type deduction to replace the removed use of decltype?. @DHowett-MSFT cool, switched in latest.. the double auto might be skirting the rules a bit... no prob either way to switch.. crash exposed by testcase in #2194. No need for a private dismissCompletion API anymore (for the one user UIViewController.mm). This was used for the unlinking of the modal from the parent which is now handled in WYPopoverController (doing the unlinking after didDismissPopover is way too late).. reason for setting the presentedViewController after [controller view] (which implicitly can call viewDidLoad) is to match ref platform behavior; but this is not something validated by the #2194 testcase.  #Resolved. rename of method made the diff worse but |_unlinkPresentedController| is the same method as the previous |_childDismissCleanup|.. This is the scariest change in that there's no test coverage (previously only the animated code path used this method to recursively call viewDidAppear on any view/subview with an owning controller (likely the existing code relied on the default handling in UIView.mm to handle this in the non-animated case). I wanted to make sure there was no incorrect behavior change after disabling the default appearance handling in UIView.mm so this method is now invoked in the non-animated case as well. Note that the underlying scenario (the need to invoke appearance events for a controller whose view is a subview of a controller being presented via presentViewController) seems obscure. Same comments apply for the similar method that handles viewDidDisappear.. If there's no objection, I'm going to push a commit in the coming days to remove this added WinObjC extension from the header. I'll just leave an _ prefixed method in the .mm so that clients can access the modalOverlayView via performSelector.. That's needed to allow users to interact with the overlay view, typically to dismiss the modal on overlay-touch (by attaching a gesture recognizer). I didn't want to expose this in the public header, instead forcing the user to access via performSelector (since it requires private API on iOS, but it's often done). What about a commit adding dismiss via touch on overlay to the modal example in WOCCatalog? (will also remove the annotations from the method comment while I'm at it). There's an implicitly strong local defined just above (ARC's enabled) but I need to keep its lifetime tied to that completionBlock via a capture. Unfortunately, I can't say do assert(popoverPresentationController != nil); in the body of the block since it can be nil in the current implementation with the deprecated UIPopoverController API. I'm inclined to leave as is but the best alternative would probably be to use popoverPresentationController in a logging statement in the block body.. fixed in latest.. or an explicit ivar is doable too. I think this might need to be rebased again after #2436 lands, assuming that's the reason for the hang.\nIn any case, it's worth trying to change this to use the proper macros. I'm not sure what my reasoning was to avoid BEGIN_TEST_CLASS as looking now it does seem to be compatible with the special class declaration needed for the parameterization. I'll post a comment if I run into any issues here.. Ran into some issues changing that. If I follow the BEGIN_TEST_CLASS/TEST_CLASS_SETUP pattern while still inheriting from the TestWithParam template class I'll end up with\nallocating an object of abstract class type 'UIViewControllerModalTest' FunctionalTests (Tests\\FunctionalTests\\FunctionalTests) C:\\Users\\emetcalfe\\.nuget\\packages\\Taef.Redist.Wlk\\1.0.170206001-nativeTargets\\build\\Include\\WexTestClass.h 440\n\nAlso looking at the INSTANTIATE_TEST_CASE_P macro https://github.com/Microsoft/WinObjC/blob/650e74942ccf99907aac59f250df9151ec34a70d/tests/Tests.Shared/test-api.h#L500 it expects a class with methods named SetUp and TearDown, and I don't think these are created by the TEST_CLASS_SETUP macro in WexTestClass.h\nOne option would be to just add an explicit TEST_METHOD for each test case and avoid the parameterization via INSTANTIATE_TEST_CASE_P. I still have a version of the patch that does this so it's easy to make this change. It would also provide more clear test names e.g. TestPresentDismissPopoverTabletNonAnimated instead of just a numbered test name.. I'm also having some issues with a new vs2017 setup; need to investigate before opening an issue though. Probably best to hold off on any more test runs until I've got the latest rebase of this pull running locally.. rebased against the latest develop; no issues with a full functional test run. addShaderNamed:source: doesn't retain p so this is missing a release in the non-error case were ARC to be left disabled. ",
    "150up": "Interested, but in my case I've also available an .dll version.\n. ",
    "cridlig": "Same issue with Objective C header files\n. See attached screenshot\n\n. I am blocked by the same issue with the latest Jan 14 version.\n. The project is using ARC and runs with Xcode, there is no use after free I think.\nIs there a way to debug this exception?\nThank you\n\nOn Feb 8, 2016, at 11:31 AM, Dustin L. Howett notifications@github.com wrote:\nThis looks like a use-after-free, where the string being referenced has been replaced with an array. Arrays aren't intended to respond to -UTF8String.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Microsoft/WinObjC/issues/346#issuecomment-181470589.\n. Sure. What is the best way to include the stack trace? Just copy from the log?\nOn Feb 9, 2016, at 4:31 PM, Dustin L. Howett (MSFT) notifications@github.com wrote:\nAh, interesting. Could you include a stack trace? I'd like to get a bearing on where this is happening.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/Microsoft/WinObjC/issues/346#issuecomment-182147107.\n. Stack trace:\n    KernelBase.dll!_RaiseException@16\u001e()    Unknown\n    vcruntime140d_app.dll!__CxxThrowException@8\u001e()  Unknown\n    libobjc2.dll!547e5edc() Unknown\n    [Frames below may be incorrect and/or missing, no symbols loaded for libobjc2.dll]  \nFoundation.dll!i_NSException__raise(NSException * _cmd, objc_selector * self) Line 112 C\n    libobjc2.dll!548027d3() Unknown\n    Foundation.dll!_i_NSObject__respondsToSelector(NSObject * selector, objc_selector * cmd, objc_selector * self) Line 86    C\n    QuartzCore.dll!_i_CALayer__setDelegate(CALayer * delegateAddr, objc_selector * _cmd, objc_object * self) Line 1296 C\n    UIKit.dll!_i_UIView__initPriv(UIView * _cmd, objc_selector * self) Line 105 C\n    [External Code] \n. \n. \n",
    "ZuSe": "I have the same problem with my existing Xcode 7 App. \nIt seems like the error appears when trying to compile the Pods.\nI would appreciate any advise, I really like the idea behind winObjC :)\n. ",
    "sasukaru": "hi everyone,\ni have exactly the same probleme, i have t'y to retargeted the solution as https://github.com/Microsoft/WinObjC/issues/55 , but it didn't work : (\n. ",
    "ganchito55": "I have the same problem and I think that the problems are the pods.\n\n. ",
    "christopheplat": "FYI, this bug has been fixed via commit 063c14dc94ae4f27a407dfec31c8a7d464c70df0 (Add __deprecated_msg macro).. ",
    "jkellywilkerson": "Getting the same build error for mapView - Unable to find class mapping for required object mapView. Any helpful insight as to how to adjust would be helpful.\nThanks,\nJKellyWilkerson\n. ",
    "RustyMoyher": "Hi Saeed,\nOn a similar note, I'm looking at getting several projects working with https://github.com/cocos2d/cocos2d-iphone-classic\nThis repo is version 2 of cocos2d-obj (which was formerly called cocos2d-iphone). A ton of games still use this version.\n. ",
    "userz87": "Is there a way I can use this framework as a third party framework?\n. When will there be support for EventKit framework for WinObjC bridge?\nAny ideas anyone?\n. ",
    "LSUPERMAN735": "Is ARM build supported now @asimonov-msft ?\n. ",
    "JamesGu0116": "me too\n. ",
    "Neil-Wan": "What problems did you encounter when these are not added?\nMy case is exposing a C style function for Objective-C to call WinRT API like below:\nc++\n    void setupApplication()\n    {\n        auto appView = Windows::UI::ViewManagement::ApplicationView::GetForCurrentView();\n        auto titleBar = appView->TitleBar;\n        titleBar->BackgroundColor = Colors::White;\n    }\n. ",
    "DHowett": "This is actually crazy.\nBeing the destination of a message should be triggering AutoId<T>::operator id(), as it's the only implicit conversion operator. Is the issue that untyped-id doesn't respond to someProperty, and the resulting dispatch is ill-formed?\nRegardless, if -someProperty returns anything coercible to id, Clang should be resolving someExpectedMethod: for type detection later via global name lookup.\nColor me baffled!\n. Interesting! Clang throws warnings for instances where auto deduces id, though. That doesnt absolve us of running afoul of it anyway!\nIf I get some time this week I'll see if I can't come up with something workable. \nCan you try (SomeOtherInterface*)soi in the interim? That should exercise AutoId<T>::operator Any() instead of the implicit operator id.\nAs an aside, I think Clang's deduction of id responder types in general is something to be afraid of!\n. Interesting! It looks like everything's running (and even responding to touches), it's just not rendering to the screen. I saw the \"headphones recommended\" splash briefly on a single launch.\nI'm not certain this is related to the libobjc2 switchover; it looks like the issue persists with legacy method dispatch as well :(\n. This looks like a use-after-free, where the string being referenced has been replaced with an array. Arrays aren't intended to respond to -UTF8String.\n. @rupertdaniel thanks for the report;\nDoes the backtrace run through line 262 as well?\nI wonder if std::map will re-hash on erase(iterator&)?\nIf so, key is dead by then, and [key hash] would almost certainly be a bad thing to do.\nA quick fix might be to rearrange 262 above 261, so that the last release happens after the last use. \n. Interesting! If array->isa is bad, we'll bomb out here in arc.m:228 when we try to release it through an ARC storeStrong. The curious thing is that isa was once fine.\nCan you see if isa is 0xdddddddd or 0xcdcdcdcd? That could point to an accidental early deallocation.\n. Nit: I'd prefer an outstandingDependenciesCount instead of a readyCount: It saves us having to think about the actual depth of the dep queue when we're figuring out if there are outstanding deps.\nSeparately, you can possibly replace isReady with {return _outstandingDependencies==0;} instead of storing a separate ready flag. Less state to drift out of sync! #Resolved\n. Each mutableCopy here requires an autorelease. Even the existing factory methods that you haven't changed.\nI noticed that you removed only half of the NSMutableCharacterSet factory methods; are all the other ones specified to return mutable versions of the respective character sets?\nIf so, is it more valid for us to make the cases you're deleting work natively, and say that the reference platform is incorrect?\n. Note to self: calloc the return value, don't malloc it; we want to zero-initialize it for the forwardInvocation: case where a receiver may not invoke it. #Closed\n. Optimization: ARM allocator could determine whether VFP is used before allocating the arena to save 64 bytes. #Closed\n. This change contains a Makefile that was copied from Foundation.UnitTests.\nPROPOSAL\n- Create UnitTests/UT.common.mk, with the following interface:\n``` make\nRequired\nUT_NAME = Foundation # Can be automatically derived.\nUT_FILES = $(wildcard .cpp) $(wildcard .mm)\nOptional, if we want pluggable entry points.\nUT_FILES += $(UT_DEFAULT_FILES)\nOptional\nUT_CFLAGS = -Wall -Werror\nA space-separated list of all linked frameworks.\nFoundation will be required by default as Logging uses it.\nTherefore, it might make sense to put it in UT.common.mk.\nUT_FRAMEWORKS = CoreFoundation Foundation\nUT_RESOURCE_DIRS = data/ otherdata/\ninclude ../UT.common.mk\n```\n- Port Foundation.UnitTests over to it.\n- Do the above work on develop.\n- Consume this after a merge from develop.\n@ms-jihua This is pretty quick work; what do you think?\n. Add tests:\n\n[ ] Mask, Save State, Mask, Draw, Pop State, Draw (test clip stack)\n[ ] Transparency layer double composition\n\nThe second test above will fail; the transparency layer stack does not clear the opacity brush. #Resolved. Move commit be87eb9 to #1529. #Resolved. Consider moving 9patch drawing into CoreGraphics as a shared feature.\nIf the bitmap is not in a D2D-compliant format, this will save us 8(!) image copies at the cost of having more of the complexity in CG.\nIt will also fix shadowing a 9patch image: right now, each section is shadowed independently and their draw order can influence shadow layering.. 1/1677 tests failed, 1676 disabled tests skipped\nTotal build machine failure.. fwiw, the name of this pull request will be ignored when I choose rebase and merge. (title fixed). TODO: Include patches in tools/msvc/patches, but don't package them.. (#2886). Unfortunately, these were hand-rolled; we build Foundation with ARC disabled globally, and since NSHashTable supports pluggable \u201cpointer functions\u201d we went with a low-knowledge backend.\nWe\u2019ll have to revisit that decision.. Ah, range! Good call.\n. I can't find a reference to %ws in the IEEE printf specification; should this be %ls instead? #Pending\n. You can only assume this will be little endian on little endian platforms. If you want to be 100% sure, please encode it as separate LE bytes, const unsigned char attachmentCharacterUnicharBytes[] = {0xFC, 0xFF};\n. Actually, there's a pointless copy here!\nNSEnumerator can be fast-enumerated using for(...in...) syntax just as well as an array can.\nWe can kill the temporary, the retain on all the keys, and all their various friends by using for (id key in _keyEnumerator).\n. This doesn't seem like it should be operating on the redoStack\n. Right now, these files are only being compiled as C++ for Debug+Win32!\nTwo suggestions:\n1. Make this apply to all configurations.\n2. Rename those files to .cpp to clear up the naming confusion. #Closed. Very worried about the memory management here! These Create functions return +1 references, and those references are immediately discarded and leaked. #Resolved. As above. #Resolved. Prefer woc::unique_cf for the array, and make sure that you return CFRetain(...get value...). This function is supposed to return a +1, but it's returning a +0 owned by a leaked +1. #Resolved. You seem to have left this named s_CGThings. Probably don't do that.. yes. Interlocked* are from Windows.h, and none of the OS X platform headers include Windows.h for us. sorry man, that's how InterlockedExchange is specified. There're three issues here:\n\nThe tests don't compile on OS X\nThe tests don't work on OS X\nThe tests can't be in WindowsOnly because of ... something? Something fun and compiler-related due to the fact that WO tests consume FoundationLib. Reviewers' notes: this is the bit that actually fixes 0.2.3 :P\n. \n",
    "swa6589": "Thanks SaeedAkhter. Sure I will share  a document.\n. Hi All,\nIs there any solution or workaround for the above mention issue.\nAny suggestions will be helpful.\n. Yes we are trying to access https resource.\n. Thanks DHowett-MSFT. We will our sample code with you.\n. Apologies for late response. \nPlease find the attached code where we aere facing the issues.\nVmImporter.zip\nThese error we are getting during runtime Generic Error  followed by Objcrt not loaded, UiKIt is not loaded.\n. ",
    "Harisam26": "hi .. i tried building the woc catalog and gives me the same error as :cannot open: \".../wocCatalog/Debug/GLKit.tlh\"\n. HI.. did u get it fixed?\nif so pls tell me how..\n. the same continues in build 0.1.0.160107\n. release of  22nd december file is works perfectly.. \n. @brianker : thanks fr ur concern..  :) \ni am doing as per instructions given in wiki and github....  i tried installing atop on older ones too....but i get the same linker errors... for all files i get some linker error..  i unistalled/ removed everything completely and then tried older version (release of 22nd december and it works perfectly alight... )  if i did anything wrong  pls explain.. i am new to this... so pls..  :)\n. ",
    "baptcoll": "Hi there !\nI have actually the same issue.\nI already red a post about \"Foundation.h\" which is unrecognized and someone said \"It should not cause compilation problems\" (here https://github.com/Microsoft/WinObjC/issues/185).\nBut when I build my project under Visual Studio, I obtain this : \n\"cannot open source file \"F:/bdbuzz/bdbuzz-ios/bdBuzz.vsimporter/bdBuzz-WinStore10/Debug/Foundation.tlh \"\"\nI have the same problem with \"sqlite3.tlh\" and \"MTSerie.tlh\" .\n. ",
    "gary17": "FYI: moving the entire source tree across NTFS and ReFS file systems, with and without junction points, does NOT seem to correct the problem.\n. FYI: the problem persists in WinObjC version 0.1.0.160107 (January 7, 2016).\n1>D:\\winobjc\\msvc\\sbclang.targets(161,5): error MSB6006: \"clang.exe\" exited with code -1073741819.\n. In my case, removing ObjectiveCModules from sbclang.targets does NOT make any difference, both in case of 0.1.0.160128 (January 14, 2016) as well as 0.1.0.160114 (January 28, 2016). (Appreciate the suggestion, though.)\n. Pooya, I replied to your e-mail (PoZandev@microsoft.com) on 02/27, re-sending my reply.\n. I can confirm that as of version 0.1 Preview (June 9, 2016) the issue has been resolved.\nAs a side note, I keep running into the fatal error C1001 on the same source file. Not sure if this is a separate problem or a related-to (secondary) failure.\n. I can confirm that as of version 0.1 Preview (June 9, 2016) the issue has been resolved.\n. FYI: moving the entire source tree across NTFS and ReFS file systems, with and without junction points, does NOT seem to correct the problem.\n. FYI: the problem persists in WinObjC version 0.1.0.160107 (January 7, 2016).\n. I can confirm that as of version 0.1 Preview (June 9, 2016) the issue remains (not resolved).\nThe -gline-tables-only suggestion was not effective.\nInterestingly, I am pretty sure that before 0.1 Preview (June 9, 2016) I was getting this error with multiple source files, but afterwards I am seeing it only on one (1), large source file. Bumped up some kind of a hard-limit, somewhere?\nA (somewhat) potentially related issue here.\n. I can confirm that as of version 0.2.160927 (September 27, 2016) the issue has been resolved.\nThe compiler now emits an appropriate error : __block variable '<name>' cannot be captured in a captured statement.\n. Converted a basic Xcode 8 \"Master-Detail Application\" project template to WinObjC using vsimporter.exe, but [application:didFinishLaunchingWithOptions:] fails to receive an instance of UISplitViewController:\n``` objective-c\n- (BOOL)application:(UIApplication )application didFinishLaunchingWithOptions:(NSDictionary )launchOptions\n{\n    // always nil\n    UISplitViewController splitViewController = (UISplitViewController )self.window.rootViewController;\nUINavigationController *navigationController = [splitViewController.viewControllers lastObject];\n\nnavigationController.topViewController.navigationItem.leftBarButtonItem = splitViewController.displayModeButtonItem;\nsplitViewController.delegate = self;\n\nreturn YES;\n\n}\n```\nConsidering that 1.) UISplitViewController is probably the most commonly used UI control for tablet-style (iPad) apps, especially in the Business and Productivity areas, and 2.) Microsoft Surface tablets and laptop/tablet 2-in-1s are the strongest Windows 10 mobile devices - is UISplitViewController planned to be supported?\nAlternatively, is there perhaps a way to create a split view controller through XAML and hook UINavigationController instances into it?\n. Yes, I'm still interested whether it is possible to create a UWP split view control programmatically or through XAML and hook UINavigationController instances into it.. Any news on UISplitViewController support or perhaps a way to create a split view controller through XAML and hook it up manually?. Even if you do not plan to implement the entire automatic row height functionality in the short term, I would suggest at least emitting a compiler warning when rowHeight is set to the special value of UITableViewAutomaticDimension. Otherwise, anyone compiling iOS 8.0+ sources under WinObjC might judge WinObjC as simply broken, (completely quietly) discarding [tableView:cellForRowAtIndexPath:] messages. It takes a while to realize, by trial and error, that it is the client side, not the API side, that is causing the issue.\n. Unfortunately, no idea - the first version I tested against was 0.2.160927 (September 27, 2016).. On a related note, WUCSystemNavigationManager does not seem to work, either:\n``` objective-c\nimport \"Platform\\Universal Windows\\UWP\\WindowsUIXamlControls.h\"\n\n\n(void)viewDidLoad\n{\n    [super viewDidLoad];\nWUCSystemNavigationManager* manager = [WUCSystemNavigationManager getForCurrentView];\n/\n// fails, even though the navigation bar \"<-\" (back) button is visible and clickable\nassert(manager.appViewBackButtonVisibility == WUCAppViewBackButtonVisibilityVisible);\n/\nEventRegistrationToken token = [manager addBackRequestedEvent:\n    ^(RTObject, WUCBackRequestedEventArgs)\n    {\n        // never called back\n    }\n];\n// later // [manager removeBackRequestedEvent:token];\n}\n``\n. On a second related note, theWXCFrame` approach does not seem to be applicable, either:\n\n\n``` c#\nprotected override void OnLaunched(LaunchActivatedEventArgs e)\n{\n    Frame rootFrame = Window.Current.Content as Frame;\n// ...\n\n}\n```\n``` objective-c\n- (BOOL)application:(UIApplication)application didFinishLaunchingWithOptions:(NSDictionary)launchOptions\n{\n    // ...\n[self.window makeKeyAndVisible];\n\n// fails\nassert([[WXWindow current].content isKindOfClass:[WXCFrame class]]);\n\nWXCFrame* rootFrame = (WXCFrame*) [WXWindow current].content;\n\nEventRegistrationToken token = [rootFrame addNavigatedEvent:\n    ^(RTObject*, WUXNNavigationEventArgs*)\n    {\n    }\n];\n\n}\n```\n. ",
    "kodekuru": "the problem is solved by removing the line \nObjectiveCModules=\"%(ClangCompile.ObjectiveCModules)\"\nin sbclang.targets.\n. I don't know this is related or not, the method test1 in the code below also crashes compiler with C1001. But test2 does not crash.\n```\nimport \nimport \"AppDelegate.h\"\nint var1 = 0;\nint var2 = 0;\n@interface Crash : NSObject\n-(BOOL)test1;\n-(BOOL)test2;\n@end\n@implementation Crash\n-(BOOL)test1\n{\n    @synchronized(self) {\n        return var1 <= 0 && var2 >= 0;\n    };\n}\n-(BOOL)test2\n{\n    @synchronized(self) {\n    BOOL var3 = var1 <= 0 && var2 >= 0;\n        return var3;\n    };\n}\n@end\nint main(int argc, char * argv[]) {\n    @autoreleasepool {    \n        return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n    }\n}\n```\n. ",
    "anandjp": "Hello Pooya, \nI am hitting same issue. I have sent you an email regarding this. I am using 0.1 release dated Feb 18th.\n. ",
    "harcalion": "I am having the same error with WinObjC 0.1 Preview (March 4, 2016). The code file where clang exits is also big (around 1000 LOC).\n. After working with Pooya on the issue, in my case the problem with clang was caused by rethrows of exceptions. Handling the exceptions in a different way resolved the issue. Thanks! \n. Same behaviour for 0.2.170609 version.. Works fine for 0.2.171110, logging the unhandled nodes for all input XIB files. Still no clue what is failing in the XIB, but now the tool logs properly.\nWill have to debug xib2nib.. ",
    "Tessjay": "Thanks!\nSent from my Huawei Mobile\n. ",
    "MiraAwad": "I have the same issue now. However, the beginUpdates and endUpdates are not marked as STUBS any more which makes it very difficult to track the problem since there is no pointer to it. It is mentioned in the documentation of the ToDoList sample app that the warning will be displayed in the build window for stubs but it is not a stub any more and it is not working.. ",
    "ace37": "I converted my iOS app to WinObjC but IBUIWebView don`t want to be transparent.  \n- (void)loadWebView\n{\n        [m_webView setOpaque:YES]; \n    m_webView.backgroundColor = [UIColor clearColor];\n    m_webView.userInteractionEnabled = NO;\n        NSString *sHtml = [NSString stringWithFormat:@\"<html><head><meta name='viewport'     content='width=device-width-20; initial-scale=1.0; maximum-scale=1.0;'></head><body style='padding-left: 15px; padding-right: 15px; padding-bottom: 15px;'><font face=\\\"Helvetica\\\" color=\\\"Black\\\">%@</font></body></html>\", m_examData.m_sText];\n    [m_webView loadHTMLString:sHtml baseURL:nil];   \n}\nin iOS IBUIWebView background is transparent and i can see parent background, in Windows 10  IBUIWebView background is not tranparent.\n. thank you will try\n. it`s work!\n. ",
    "RaulDev": "Installed, and also NuGet package of sqlite3 but doesn't work.\n. \"sqlite3\" library that i got from Nuget Package, It doesn't work. \n. I only have \"sqlite3\" Nuget pacakge active in my solution but don't run anyway. \nAlso have both packages you said installed and the error won't disappear.\n. \n. Nice! thx mate :+1: \n. Try to comment the line that requires this header file, and then execute and see what happen.\n. You must link the library directory of \"WinObjC\" projecto to your solution.\nRight click on your project --> Properties --> Linker --> General --> Additional Directories\n. \n. \n. I did but it doesn't work. I don't know where the project is calling that library.\nIn Additional Dependences had this: %(AdditionalDependencies);AVFoundation.lib;AudioToolbox.lib;CoreGraphics.lib;Foundation.lib;QuartzCore.lib;SystemConfiguration.lib;UIKit.lib;libz.lib\nAlso ignore default libraries: %(IgnoreSpecificDefaultLibraries);Accounts.lib\n. Now i try to open the winobjc sample \"WOCCatalog-WinStore10\" and thats the same\n\n. ",
    "cicorias": "this is the HyperV image - says \"see site\"\n\n. ",
    "lux2911": "VMWARE image for MAC - same thing ...\n. ",
    "JHT1958": "Since I install the updated Visual Studio it works! So closed topic. Thank you\n. Merci c'est vraiment dommage car beaucoup d'application utilise cela \nThank you it's a shame because many application uses this\n. \n. Hello,\n is it you want?\n1>------ D\u00e9but de la g\u00e9n\u00e9ration\u00a0: Projet\u00a0: voxmapp (voxmapp\\voxmapp), Configuration\u00a0: Debug Win32 ------\n1>  ....\\proxibuzz\\main.m\n1>C:\\winobjc\\samples\\voxmapp\\proxibuzz/VoxMappAppDelegate.h(9,9): fatal error : 'MapKit/MapKit.h' file not found\n========== G\u00e9n\u00e9ration\u00a0: 0 a r\u00e9ussi, 1 a \u00e9chou\u00e9, 0 mis \u00e0 jour, 0 a \u00e9t\u00e9 ignor\u00e9 ==========\n========== D\u00e9ploiement\u00a0: 0 a r\u00e9ussi, 0 a \u00e9chou\u00e9, 0 a \u00e9t\u00e9 ignor\u00e9 ==========\n. Goodnight For now I stop converting my IOS since it uses MapKit not yet provided for by this development.\nI waited a long time this kind of thing, but it's not enough yet finalized.\n. Thank you for this information, but I thought may be a wrong that this project was to convert the iOS applications, also very ambitious project. So rewrite the application using the Windows little interest services.\nthanks anyway\n. ",
    "rgil65": "If I take off imports UIPopoverBackgroundView.h the class  UIPopoverBackgroundView\n is no longer recognized, and consequently errors of compilations\nThis is the code:\nimport \nimport \n@interface ComicPopoverBackgroundView : UIPopoverBackgroundView\n{\n    CGFloat                     _arrowOffset;\n    UIPopoverArrowDirection     _arrowDirection;\n    UIImageView                _arrowImageView;\n    UIImageView                _popoverBackgroundImageView;\n}\n@property (nonatomic, readwrite)            CGFloat                  arrowOffset;\n@property (nonatomic, readwrite)            UIPopoverArrowDirection  arrowDirection;\n@property (nonatomic, readwrite, strong)    UIImageView             arrowImageView;\n@property (nonatomic, readwrite, strong)    UIImageView             popoverBackgroundImageView;\n- (CGFloat)arrowHeight;\n- (CGFloat)arrowBase;\n- (UIEdgeInsets)contentViewInsets;\n@end\n. ",
    "tadam-msft": "UIPopoverBackgroundView is not currently implemented an is on the backlog.. See recommendation in #2162 . Resolving as\u00a0duplicate of #988 . Decision has been made to default to the Windows behavior for UITextField. The issue appears to have happened while copying files to output directory, clear the output directory or change permissions on the file and it should be good to go.. Decision has been made to default to the Windows behavior for UITextField. Fixed by #1638. As seen in the thread the pull request was incorporated into another pull request and checked in.  This pull request is no longer needed.. Can't repro issue, closing\u00a0pull request.. Please close the issue if it\u2019s fixed.\nFrom: ad1Dima [mailto:notifications@github.com]\nSent: Tuesday, February 7, 2017 7:32 PM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nCc: Terry Adams Terry.Adams@microsoft.com; Assign assign@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] UILabel wrong default background (#1015)\n@ArnOmsfthttps://github.com/ArnOmsft @rajsesh-msfthttps://github.com/rajsesh-msft should I close it?\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, Iview it on GitHubhttps://github.com/Microsoft/WinObjC/issues/1015#issuecomment-278219690, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AUXHkMzpzh19upwPhkJKKnKGcfeTON77ks5raTc-gaJpZM4KCZHF.\n. Issue was resolved with Revert.\n. Decided this should track button task of adding default pressed behavior.. No Repro. Need to determine if this was a regression. Fixed. Thanks\nSent from Windows Mail\nFrom: yiyang-msftnotifications@github.com\nSent: ?Thursday?, ?December? ?1?, ?2016 ?4?:?06? ?PM\nTo: Microsoft/WinObjCWinObjC@noreply.github.com\nCc: Terry AdamsTerry.Adams@microsoft.com, Mentionmention@noreply.github.com\nAssigned #1493https://github.com/Microsoft/WinObjC/pull/1493 to @tadam-msfthttps://github.com/tadam-msft.\n-\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/pull/1493#event-879334860, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AUXHkMiKrmINtrpyYZHOeAxGMZdLnO53ks5rD2EGgaJpZM4LCC1I.\n #Resolved. This issue no longer reproes, tested with 20170228.1 Master build.. These elements can be scrolled into view.  . Can you explain the scenario that you are using the API for.  Is it possible to workaround this by subscribing to the TextChanging event on the underlying XAML TextBox?. Test pages\u00a0should be\u00a0horizontally\u00a0scrollable to\u00a0view all content on phone.. These pages are going to be removed when we move to viewcontroller pattern for tests.. @edvv, thanks for logging this issue.  The intent was to limit it\u00a0to 16 buttons, is the limit blocking you?. Agreed\nFrom: Ed VanVliet [mailto:notifications@github.com]\nSent: Wednesday, January 4, 2017 9:54 AM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nCc: Terry Adams Terry.Adams@microsoft.com; Mention mention@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] In UIAlertView.mm the number of buttons is hardcoded to 16 (#1614)\n@tadam-msfthttps://github.com/tadam-msft It is not blocking, a workaround is done. UIAlertView is just a stopgap measure to deal with the lack of UIAlertController and lack of other UI elements. They both suffer from a lack of features (even on the iPad).\nYou might want to at least put a check for the 16 limit (and perhaps a log statement) so that it doesn't throw a memory exception.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/1614#issuecomment-270438150, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AUXHkE7QawrOoYB-yvJF_BxdMSm2VHFHks5rO9y4gaJpZM4LZywQ.\n. PointerHovered and PointerLost aren't part of the ContentControl's\u00a0interface, those are only on InkUnprocessed input--can you use those directly.  If you need the Hover functionality, you can rely on PointerEnter and PointerExit functionality to\u00a0determine when control is hovered over.. Issue was fixed with\u00a0PR #1683. Would be great to have a XAML Catalog test case that illustrates this (or CALayer test case). #Pending. :shipit:. Fixed with UILabel refactoring work.. Thanks, we'll take a look.. Option 3. Issue no longer reproes.. Resolving as a duplicate of 1950. Lower priority issue, not much could be done with nil return value. During UIButton testing, we noticed that the UIButton actions were still being triggered after the VC was destroyed. I addressed it by unregistering button actions explicitly in the VC\u2019s dealloc but there is probably a framework issue to automatically unregister these target-actions in the parent UIView or superclass. It\u2019s good practice to unregister target-actions explicitly in dealloc or some teardown function but in the ARC world, I can see that it might cause some headaches.\nSee UIButtonWithControlsViewController::dealloc() for an example.\n. Fixed with #2195. This is being added to the XAML TextBlock backlog. Do you have any workarounds for this issue?. > */\nLet's go with NotInPlan because this isn't a property that XAML has available for TextBlock.  #Resolved\n\nRefers to: Frameworks/UIKit/UILabel.mm:488 in a0db61f. . >  @Status Stub\nLet's go with NotInPlan because this isn't a property that XAML has available for TextBlock.  #Resolved\n\nRefers to: Frameworks/UIKit/UILabel.mm:495 in a0db61f. . > @Status Stub\nThis is the only one that we may want to Stub out; but I'd rather we go NotInPlan and see what pushback we get. #Resolved\n\nRefers to: Frameworks/UIKit/UILabel.mm:555 in a0db61f. . > \nWe should have the code that produces this checked in.  It would also be good to have a comment in the file or a readme that sits alongside of it explaining what it is used for. #Resolved\n\nRefers to: tests/functionaltests/Tests/UIKitTests/Assets/uilabel-ios.xml:3 in a0db61f. . This issue is the same as #1845, closing as a duplicate.. Do you have a workaround for this issue?  Have you considered Windows.Graphics.Display.DisplayInformation events\\properties?. Closing as a duplicate of #2401, same root cause.. Doesn't repro when window is full screen; but does when window is less than full screen.. Was this working for you in Visual Studio 2015?  Do you have a repro app you could share?. >     }\nIn this case ScrollBarVisibility is already being set to hidden so it conforms to the pattern.  It would be an issue if it set it to disabled.\n\nIn reply to: 295364641 \n\nRefers to: Frameworks/UIKit/UIScrollView.mm:971 in fb79b1a. . >     }\nGood catch.\n\nIn reply to: 295431348 \n\nRefers to: Frameworks/UIKit/UIScrollView.mm:971 in fb79b1a. . > <Grid\nWe should update the names of these files to be ActivityIndicatorView.xxx. #Resolved\n\nRefers to: Frameworks/UIKit.Xaml/ProgressRing.xaml:1 in ea5027a. . :shipit:. Looks good, can we get a XAMLCatalog sample that would demonstrate this issue 100%--maybe on a new \"Bugs\" section #Pending. >ontentSize.Width * contentScale \nShould we save the original width and height from SetContent--this is undoing the divide by scale done in that function.. >int maxWidth = static_cast(imageWidth / 3); \nI don't understand what this divide by 3 does?. Do we want to add a runtime impact to improve debugability?. >setupButton \nAs we move along, it would be great to have the button truly be a default button without any properties set directly on it, including the xxxforState properties.  We could default them in the text boxes that we are using to control the button, for instance _textButtonLabel would be set to Default Button--although we'd need to decide whether we are testing the button's default label or its normal state title. #Pending. >textFieldShouldEndEditing \nAs we talked about today, you may want UITextFieldTextDidChangeNotification #Pending. Do these machine specific changes get checked in?\n #Pending. >_buildTrackingGesturesListForView \nDo we need to build this list up every time we process a touch event?  #Pending. > // Separating gestures into regular (Non-DManip) and DManip Gesture \nDoes the ordering matter between the regular gesture recognizers and dmanip gesture recognizers--it seems to be lost here. #Resolved. What's the user impact?. Should this update the new view controller Oliver is checking in--this is going to be deleted?. >_updateXamlElementWithAdjustedFont \nDo we need to set all of these properties every time adjustedFont is passed in, won't it likely only change the FontSize?   #Resolved. >default \nTypo #Resolved. Let's go with NotInPlan because this isn't a property that XAML has available for TextBlock.  We can reconsider if customers need this and manually dim the text when it's disabled. #Resolved. Let's go with NotInPlan because this isn't a property that XAML has available for TextBlock.  We can reconsider if customers need this and manually dim the text when it's disabled. #Resolved. Let's go with NotInPlan because these aren't properties XAML supports. #Resolved. Would help customer understand what was happening.\n\nIn reply to: 104821652 . >Margin=\"0,0,0,0\" \nNo need to set the margin, 0 is the default value. #Resolved. >MaxZoomFactor=\"1.0\" MinZoomFactor=\"1.0\" \nWe shouldn't need to set ZoomFactors if ZoomMode is being disabled.  Doc isn't clear; but I believe that ZoomMode is disabled by default as well. #Resolved. It seems strange that we have a GetScrollView method that doesn't return a ScrollView instead it returns a grid.  Should this be named something like GetScrollViewRootElement? #Resolved. What are we getting from this generated file? #Resolved. >_isXamlElementPressed \nThis method needs to be triggered by IsPressed changed; but can't this just access the xaml button's IsPressed property directly? #Resolved. disabled. Sorry, this was done when I \"git commit\"ed the change.\n\nIn reply to: 112262947 . Yes, iOS doesn't show the ScrollIndicators (ScrollBars) when scrollEnabled = NO.\n\nIn reply to: 112270292 . >UIActivityIndicatorView_HidesWhenStopped_BeforeStartAnimation \nSome comments about expected behavior on this test and others (where not obvious) about expected behavior would be good. #Resolved. >50 \nMight be good to have a constant for this value as well--consistent with expectedNormalSize #Resolved. >(frame.size.width < [self _width] || frame.size.height < [self _height]) \nParenthesis to group the expression on each side of the || would be good. #Resolved. >controls \ncontrol #Resolved. >depeneding \ndepending #Resolved. I think it also makes sense for the two way scenario; but we don't have that here.  \n\nIn reply to: 113753740 . The selected code could easily pulled out into a separate function and reused--all the APIs are on control, or it could be combined with the next function since much of the code is similar. #Resolved. ",
    "mj1856": "Another method that would be acceptable is to call GetDynamicTimeZoneInformation and then pass the TimeZoneKeyName from the resulting DYNAMIC_TIME_ZONE_INFORMATION structure into the icu::TimeZone::getIDForWindowsID function.\n. I reviewed the changes.  It's slightly better in that you take DST into consideration, but it's still going to give many mismatches.  Ultimately, the problem cannot be solved purely algorithmically - it needs access to the Windows zone mappings in CLDR, as exposed by ICU.\nCould you at least use the getIDForWindowsID function in ICU 52?  Or is this project stuck on ICU 48?\n. Understood.  Thanks!\n. ",
    "MSFTFox": "I've investigated this issue for quite some time, ever since the original NSTimeZone implementation was worked on. The bug primarily lied in our implementation of NSLocale where a particular method was incorrectly relying on the language code set by the user. This has since been updated.\nAdditionally, I want to say thank you for the suggestions in regards to more accurately retrieving the user's time zone information. Unfortunately not all of them are able to be used given some of the constraints we're working under. For example, the icu getIDForWindowsID function cannot be used at this time due to it only being available in newer version of ICU. This same issue affects the ICU default system time zone detection methods. We understand this problem and are working to correct it.\nI'm happy to say we now correctly support daylight savings time and also support the correct region settings from the user to detect system time zone information. Our implementation is not yet perfect for all scenarios and we fully understand that. We have however taken measures to ensure that our system time zone implementation provides sufficient coverage for nearly all use cases.\nThank you again for your diligence on this issue.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. This issue was addressed in Pull Request 656\n. :shipit: \n. Sub tasks for the work to enable NSUndoManager.\n- [ ] Testing for NSUndoManager and investigation on OSX #807 \n- [ ] Basic Registering of Undo Events #808 \n- [ ] Grouping Undo Events into undo sets #811 \n- [ ] Modifying undo/redo stack #813\n. Investigating this, I don't have the failure reproducing. This test passes for me.\nOne thing that might have caused this is the 1ms run time I see in the posted log. Mine is running at 0ms. I suppose it's possible for NSMatchingReportProgress to trigger more times over longer running matching operations but every test I've done has allowed the number reported to remain constant. I'll look into if I can get it to report a different value and work on a fix that way.\n. :shipit:\n. Tests to write:\nBasic undo/redo\nUndoing in groups\nUndo in nested groups\nUndo operations based on action names\nRegistering and removing actions for undo operations\nThread safety and their associated helper functions: (isUndoing)\n. :shipit:\n. :shipit:\n. :shipit:\n. That's not true, week works fine on our platform. I have some tests in NSCalendar verifying so, not as many as the other calendar units since it is deprecated however. If the concern is our analysis tools, a better solution may be to flag this in some way so the analyzer doesn't mark it as invalid.\n\nIn reply to: 239018515 \n. :shipit:\n. :shipit:\n. :shipit:\n. These changes do not support manual creation of undo groups nor nested groups. Additionally, this does not cover forwardInvocation undo operations.\n. This turned into implementing NSUndoManager in full. Apart from the forward invocation calls and UI involved changes (such as action and menu item names) this class should be working as intended.\n. > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nUpdate copyright. #Resolved\n\nRefers to: Frameworks/Foundation/NSInvocation.mm:3 in 4043661. \n. Do you need to import Foundation or NSObject here? #Pending\n\nRefers to: include/MapKit/MKMapSnapshotter.h:21 in 58c28c5. \n. :clock1:\n. :shipit: \n. :shipit: \n. > //\nUpdate copyright: // Copyright (c) Microsoft. All rights reserved.\n- other files. #Closed\n\nRefers to: Frameworks/AddressBook/ABAddressBook.mm:4 in 41f8a17. \n. :shipit:\n. :shipit: \n. :shipit:\n. There's a bit of interesting information on this and I believe int should be correct the type here.\nhttp://oss.sgi.com/archives/ogl-sample/2005-07/msg00003.html\n. :shipit: \n. > //\nnit: update copyright. #Resolved\n\nRefers to: Frameworks/Foundation/NSKeyValueCoding.mm:4 in f8418ea. \n. > //\nnit: update copyright. #WontFix\n\nRefers to: Frameworks/Foundation/NSKVOSwizzling.mm:4 in f8418ea. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\n// TODO::\n```\n\nshould this TODO have an associated issue?\nEdit\nThere appears to be quite a few 'TODO::'s that are empty. As a general question, are these being tracked by any tasks or are they a part of future work in any way? #Resolved\n\nRefers to: Frameworks/CoreText/CTRun.mm:251 in e1afcff. \n. :shipit:\n. Fixed by #1255 \n. Fixed by #1255 \n. :shipit:\n. You've been showing us a lot of really awesome stuff in your sample app, will those changes be checked in? #Resolved\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nHeader. :P #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:3 in 7850894. \n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\nFAIL_FAST_IF_FAILED(path->_impl.pathGeometry->Stream(mutableRet->_impl.geometrySink.Get()));\n```\n\nActually we should be releasing any resources we made before leaking them when we return NULL. \n\nIn reply to: 256970578 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:187 in ac21011. \n. > ```\n\n}\n```\n\nThat doesn't exist, even if it did I don't think reducing a null check+return to a macro would be very useful.\n\nIn reply to: 256970753 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:201 in ac21011. \n. >  @Notes transform property not supported\nWell, nothing about this function is particularly true... We haven't gotten to arcs yet. ;)\n\nIn reply to: 256971251 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:224 in ac21011. \n. > ```\n\n}\n```\n\nWell I agree that the standard we're using is for the macros to handle them but the macros do a bit more than just returning. I'll change it since that's the standard we're following but I don't think in a case like this it's terribly important.\n\nIn reply to: 256986759 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:201 in ac21011. \n. > ```\n\nUNIMPLEMENTED();\n```\n\nI think that would work. return CGPathEqualsPath(path, CGPathCreateWithRect(CGPathGetBoundingBox(path))).\nIf it's logically equal to the path created by its bounding box.\n\nIn reply to: 257422149 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:739 in a12387b. \n. > ```\n\nCGDrawView* cgView = [[CGDrawView alloc] initWithFrame:self.view.bounds drawOptions:self.options];\n```\n\nIgnore this file, I never meant to edit this, it was merely a quick validation check on null paths and what the return value is for some APIs.\n\nIn reply to: 257435345 \n\nRefers to: tests/testapps/CGCatalog/CGCatalog/CGPathApplyViewController.m:30 in 3c21e8f. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:. :shipit:. :shipit:. :shipit: . :shipit:. Both debug and release builds have actually succeeded. Two prior tests failed due to warnings but the most recent commit fixes this known issue by ignoring the arm compiler warnings.. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. Nothing changed to the actual files but git refuses to acknowledge that they're still the same... I don't know why.\n\nIn reply to: 271397354 . :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. Well the previous check made sure this was always expecting alternate in the ternary. It was just an unnecessary extra check for which fill mode to use.\nFrom: Raj Seshasankaran [mailto:notifications@github.com]\nSent: Tuesday, February 14, 2017 7:04 PM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nCc: Hank Fox henryfox@microsoft.com; Author author@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] Avoid D2D1Group fill mode conversion for CGPath. (#1954)\n@rajsesh-msft approved this pull request.\nApproved contingent on the one remaining issue in _CGPathGeometryWithFillMode. BTW, why didn't the tests catch this?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/pull/1954#pullrequestreview-21916160, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AQX2iqgIcy12i4VyLsm8ExXC6XVi1cZiks5rcmsNgaJpZM4L_0JM.\n. These APIs are already marked interoperable and in use by CGContext in CGContextAddPath. This was implemented to resolve the failures in transforms and CGPath in pull request #1550.. We don't have regression testing for the AddRoundedRects API. It looks like the problem is in how a D2D1 geometry is added to our customized GeometrySink. Our custom geometry sink makes the assumption that a geometry being added is not a completed geometry in the sense that it assumes the geometry doesn't rely on an EndFigure call to complete the shape. Rounded rects in D2D are created with 4 arc segments, 3 straight lines, and an EndFigure call while our custom geometry sink ignores any EndFigure call that we haven't explicitly made in CG as a part of our figure tracking work. I'm working on a solution to this which most simply will be enabling full functionality of Simplifying into the custom geometry sink for certain scenarios that we will turn on and off in CoreGraphics if and only if we are expecting D2D to rely on these calls. I've also added this case to the CoreGraphics.drawing tests as a part of this.. My changes address some of these but for full test coverage we would need to go over the other APIs as well. I think an additional parameterized test covering all 5 of these options with various paths would be great. I would like to avoid bloating the CopyByStroking PR with this additional test collateral though so I think it would be best to address this in a separate PR.. As for the various parameters to pass in, I will two tests (for straight lines as well as curves) into parameter tests with the various line caps, joins, and some widening widths.. Yes, this addressed in the latest pull request.. I was seeing something similar. Working with one of our sample apps, I was building for debug but the pdb's were not matching. It turns out in my case that it was grabbing the package for the release build I had from a good while back instead of the debug builds. Once I cleared out the release folder and did nuget restore it was fine.\nUltimately this isn't the same thing I was seeing and talking with @memontic-ms it seems this is intended. As for rebuilding the pdb's again instead of using the one packaged, I'm not sure. I didn't see any issues but that does seem like an extra/incorrect step.\nEDIT\nFollowed up with Brian and the packages should be pulled by order built. Trying to repro my issue.. Hit this yesterday as well. Definitely need a proper fix to compare new test collateral coming in as this blocks #2187 and #2299.. @edvv This issue was fixed but has not made it to the current release yet. I would recommend trying this code path again with either a develop build or waiting until the next release. If you're still experiencing the issue then, please let us know. Thanks for your help!. This issue was fixed on the samples repo.. The changes on the images seem pretty drastic. Do we see something comparable from the reference platform? If so, you have my sign off. #Closed. Hi @konisx and @sriranjanr,\nI've  been working on updating the WinObjc repo for the tools solution to use the current versions of Visual Studio 2017 (specifically updates 15.3+). There shouldn't be an issue moving forward with using VSImporter on Xcode projects. I'm currently working on fixing the main build solution as well.\nIf it's urgent, feel free to check out the VS2017Update branch to use VSImporter with VS2017. However, know that the build.sln project will not build if you are attempting to contribute to or modify the frameworks packages.\nI also wouldn't suggest modifying WoCCatalog for testing any changes. This app has some unique workarounds to grab the locally built versions of any packages. You may see some weird behavior. If you need a project to try things out in, feel free to use the projects in the Samples folder. They are intended to be a more accurate approach to importing a project of your own.\nPlease let me know if you hit any issues or need help at all.. @sriranjanr What might work better for you then is to wait until I'm able to merge these updates with our main develop branch and produce a proper package.\nSome things to check if you're interested though would be your Visual Studio 2017 version. Check to see if you have update 15.3 or newer. If you do, the changes that I'm working on are required. If not, the current state of WinObjc should be sufficient.\nMy changes are on a separate branch from the develop branch. If you're interested in looking at them, you need to run something like: \ngit checkout origin/VS2017Update\ngit checkout -b \nWith this, you'll also have to ensure your VS2017 installation is set up properly with the 15063 windows SDK. You will also have to install Nugetizer 3000 version 0.2.0. You can follow their instructions here: https://github.com/NuGet/NuGet.Build.Packaging.\nAgain though, I would recommend waiting until I can formulate more official instructions along with the fixes to the build project. The errors you've listed are all issues I deal with in these changes. I appreciate your enthusiasm though!. Over the weekend I've been testing the new version of Visual Studio. Update 15.4.0 and newer appear to fix these issues without my changes. Moving forward, I believe it would be best for me to not modify our build process extensively and instead suggest migrating to this new updated version.. @sriranjanr I've tried your attached project and the only issue appears to be that you're using APIs not available on our platform. Things like strlcpy, inline assembly, usleep, FFTSetup from the Accelerate framework, and various others.\nAs far as the build output you've attached, it appears that you don't have the nuget packages containing our frameworks added or linking to your project. You could try doing a manual nuget restore on the solution file generated from the vsimporter command.\nLet me know if this helps at all.. Note\nThis updates only the tools solution, not build. That is why this branch is not intended to merge into develop, but rather a new branch to work on for the Visual Studio updates required.. build.sln is not expected to build with this fix, however it's verified that tools.sln builds for both debug and release. Checking the packages manually validates that the proper files are included. This includes on the build machines.\nNote\nOne build machine has been modified to run with VS 2017 15.3+. The other build machines have not and are enabled for nightly builds with older versions.. I'll revert the project files affected by updating the certificates. These files shouldn't be changed.. WinObjc ships with Clang version 3.7. This predates the availability of class properties.. The commit has been broken out into 3 different commits as @DHowett-MSFT suggested. Additionally, I removed the clang formatting from each of the files affected.. Mmk, all issues should have been addressed.. Xaml controls cannot be treated simply as UIView objects. What you may be looking for is the initWithFrame:xamlElement: constructor for a UIView. I would recommend trying something like...\nWCXInkCanvas *inkCanvas = [WCXInkCanvas make];\nCGRect frame = CGRectMake(0, 0, 500, 500);\nUIView *inkCanvasView = [[UIView alloc] initWithFrame:frame xamlElement:inkCanvas];\n[mainView addSubview: testView];\nLet me know how this works out for you. Thanks!. Wonderful! I'm glad to hear it!\nI'll close this issue then.. It should have fixed a fundamental problem in lproj lookup. The problem was that an API for looking up localized resources did not have support for retrieving user preferred languages. This has been solved.\nIf you have some other particular APIs you would like us to take a look at, please let us know. This fix was really focused on ensuring localized strings were functional.. Oh, I was following how he named the merge from master into develop earlier.. #2817 is related to this issue.. When compiling the generated projections solution, it appears there's an issue in the windows sdk itself. There's a possibility it's an issue with our compiler and the newer/changed headers and macros. For example, most errors appear to happen when using the InspectableClass macro. I'm investigating this further and may reach out to other people for help.. After some unexpected issues I now have binaries built with the newest SDK. One such issue was when building the projections' solution file calling GetPackageContents on a previously built sub-project would cause the linker to fail when building that project again. The line running the link command was missing a piece that we must include on everything compiled with objective c.\nI'll have a pull request out soon after I finish up #2828.. Fixed by #2835. Additionally, #2733 still remains an issue. Binaries are still checked in to generate a nuget package from the main build as opposed to using the nuget package produced by building the projections solution generated from winmd2objc.. Not sure why those \u274c's are there. One particular build failed due to an issue recently fixed, but that shouldn't have affected these older commits.. This is being tracked in Issue #25 . As far as I know, Unity discontinued the 32 bit version of their IDE but did not end support for 32 bit builds. I would imagine that you could target your project to x86 in Unity's build settings and in that way utilize the 32 bit dll you've been able to build. You would have to make sure everything else your project uses is 32 bit as well.\nhttps://blogs.unity3d.com/2016/11/15/end-of-support-for-32-bit-editor-for-windows/\n(Specifically the paragraph titled, \"I use 32-bit plugins, what are my options?\"). I'm fairly confident that the 64 bit editor should play nice with 32 bit plugins as long as your build settings are targeting x86 and not x86_x64. Only the latter would require a 64 bit dll.. Why the custom build of clang 6? I thought the intention was to move away from having our own binaries here.\nEdit\nI realized this is probably an intermediate step as our proposed changes get merged with official binaries. There's no reason for us to halt changes blocked on outside dependencies.. I'm a bit confused. Why are the reference images being moved (read renamed) to the actual data folder? Isn't this where the test's generated images go?. As @edvv mentioned, this is a duplicate of #2376 . \"-3,230\" Definitely an obscene number of duplicate properties. \ud83d\udc4d. Update annotation for not being a stub anymore. #Resolved\n. Are these static methods only used in this file? If so, nit: prefix with '_'\n. Is a while loop really the best way to hold onto a suspended state? #Pending\n. Cool, makes sense. I remember a similar situation some time ago where I was told not to use a while loop on a condition. I was just curious as to the reasoning. Thanks. :)\n\nIn reply to: 69806286 \n. It seems like you can break away this CGRect bit into it's own constant since the same CGRect is used repeatedly. #ByDesign\n. Might be worth it to put some of these time intervals and other numbers at the top as statics to make updating this test easier in the future as well.\n. Is there a reason this is commented out and not just removed? Also, it seems like the error parameter is unused. This is probably outside the scope of this review, but could you take a look at it and file issues if necessary or follow up with somebody? #Resolved\n. In the wake of these logs, could you scrub this file for any unnecessary logging? It might also be worth looking into standardizing the error messages while you're in here since you seem to be touching on those a bit. #Resolved\n. Is there a reason these are expects and not asserts? Just curious. #Resolved\n. This Expect nil, error really doesn't do a whole lot. It might be worthwhile to add a test for actual errors instead of a test that just makes sure nil comes back as nil through a function. #ByDesign\n. The deletes here worry me a bit. In a really bad situation, we could have files lying around. It might be best to move any deletes to a separate test so they get sweeped regularly instead of at the end of their own tests. Something like a test at the end of this file that checks if these files exist and deletes them if they do would be great. #Resolved\n. Might it be worthwhile to add a test for data other than UTF8? #ByDesign\n. > ```\n\n\n```\n\nPlease use spaces, not tabs. #Pending\n. > _ABAddressBook \nI'm not sure you need an extra class to handle the fetch for the contact store. It might be better to break it out into a static helper function and store the contact store as a private ivar in address book. #Pending\n. > NULL \nnullptr #Pending\n. That makes sense then. I would prefer a more descriptive name then. Something like _ContactListManager. Having a name virtually identical to another class can create confusion going forward.\n\nIn reply to: 73080445 \n. > dateWithTimeIntervalSinceReferenceDate \nnit; could use calendar [dateWithEra:1 year:2014 hour:19 minute:48 second:38] if you wanted to avoid the magic number there. #WontFix\n. Good catch.\n. Yes, the system can essentially do whatever it wants with the thread priority. From the reference platform's documentation: \"...but because the priority is determined by the kernel, there is no guarantee what this value actually will be.\" That said, I took the larger of the two values that I've seen the priority change by. In this case, it's Windows since the system priorities are bucketized to particular values that I've mapped to more expected values. If the priority changes by more than .07 then that indicates the priority of the thread was changed by more than the size of one of these buckets which means the priority was not preserved.\nI've seen the OSX values change significantly less on an average basis however they change more often. Usually by a couple decimals in either direction. Seems like the reference platform is very hands on with thread priorities.\n\nIn reply to: 73447706 \n. CI Builds succeed on builds Release: Build 20160803.6  and Debug: Build 20160803.7. No new tests have been added but old tests have been fixed.\n. These tests are entirely invalid. You're not allowed to call characterSetWithBitmapRepresentation:nil. The argument must be non-nil. If it's nil it causes a failure on OSX.\n. > OSX_DISABLED_TEST \nnit: provide similar comment as above or just mention that this test behaves similarly. #WontFix\n. Calculate provides the number of weeks within that particular month if the larger unit is the year. As you pointed out previously, this is incorrect. The behavior is to always return 6 weeks. Thus we can return 6 here instead of relying on calculate.\n\nIn reply to: 74336418 \n. > EXPECT_EQ_MSG \nnit: You don't need messages for every test failure. The default printout would be good enough to let whoever's looking understand what happened. In fact, it would be better not to stomp the default message as in this case the actual value will not be printed out. #Resolved\n. Honestly, I'm pretty confused by this. What benefit is there to remove the week property and replacing it with an ivar and some selectors? This does the same thing as having a property for week does it not? #Closed\n. It seems to be an issue with ICU. Since ICU is operating on a particular date, and that date happens to not have 6 weeks in it, ICU will not update weekOfMonth to 6. It's essentially an out of bounds date component. Setting the smaller unit to week would instead return how many weeks are in the year. Even if we changed the unit to add to week, it would still not update to 6 weeks if the month does not have that because again, it's an out of bounds value for the unit of WeekOfMonth. To begin with, it doesn't make much sense to ask how many weeks are in a month in a year. I'm merely matching what the reference platform does in this case. I'd consider this a very low priority fringe case that doesn't provide much of a basis for changing core foundation code.\n\nIn reply to: 74354002 \n. > EXPECT_OBJCEQ \nAny particular reason for EXPECT over ASSERT?\nAlso, if the justification is for EXPECT (Which I agree with) then could you change the other tests to use EXPECTS if it makes sense for them while you're in here? #ByDesign\n. Yup, so should we then modify the other tests in this file to use EXPECT instead of ASSERT while you're updating this file? It just seems inconsistent which I don't like.\n\nIn reply to: 74357771 \n. Yeah, it definitely seems like calculate has a few problems in it. Fixing that is beyond the scope of fixing the tests for OSX though. Could you file another issue for fixing the calculate function?\n\nIn reply to: 74461625 \n. It begs the question as to why other units are fast tracked to return constant values here though.  Everything from second up through hour seems incorrect to then return constant values. Especially given that there hopefully aren't 60 seconds in a year. These should also be addressed in the work done for fixing calculate.\nI think the workaround to return a constant 6 is sufficient to match the reference platform on this one case for the time being. I've yet to find a case where it's incorrect even if it's a faulty mechanism for determining the actual values. Especially given the other short cuts that core foundation has already taken for those smaller values I think it's acceptable until the actual calculations are fixed.\n\nIn reply to: 74473193 \n. Looking into this further, I agree we shouldn't patch this with a constant 6 value. There's simply too many cases where this function returns the incorrect range and adding any additional patches just creates a bigger mess. Removing.\n\nIn reply to: 74478358 \n. I'm not a fan of catching any throw. Sure it's expected that it's the correct throw but not guaranteed. It's more accurate to verify which exception was thrown.\n. Yes, I'll enable on OSX.\n\nIn reply to: 74657115 \n. > LOG_INFO \nnit: if the message doesn't have to come after the InitGoogle call you could move the init and result lines out of the ifdef blocks. #Resolved\n. Shouldn't be, removed it.\n\nIn reply to: 75725498 \n. No, NSUndoManager is not thread safe. \n\nIn reply to: 75724843 \n. It's a strange situation. As called out in the design doc, a top level group will be created if _groupsByEvent is true. It will also automatically close the top level group when an undo message is sent.\n\nIn reply to: 75724410 \n. > NSObject \nConforms to NSCopying. #Pending\n. > NSObject \nConforms to NSCopying. #Pending\n. > NSObject \nConforms to NSCoding, NSCopying. #Pending\n. > NSCoding \nConforms to UIContentContainer, UIFocusEnvironment, UITraitEnvironment. #Pending\n. I would rather do something like, _value = newValue, to stay consistent with using the ivar directly instead of the getters/setters.\n\nIn reply to: 76114880 \n. We will however have to traverse this \"stack\" for undo operations on particular targets though with the -removeAllActionsWithTarget:(id)target method. I figured it would be significantly worse to use std::stack in that situation.\n\nIn reply to: 76124040 \n. retain. There's no reason to copy a number.\n\nIn reply to: 76114710 \n. Correct. I've been testing thoroughly.\n\nIn reply to: 76124255 \n. That's actually the point believe it or not. Multiple disable calls are recorded. Enable calls must equal the amount of disable calls when invoking any undo operation. Otherwise, an inconsistency exception is raised.\n\nIn reply to: 76160566 \n. I thought that was correct since there's a bool property for registration but the implementation expects something else. Should we just forego the property here then?\n\nIn reply to: 76291490 \n. The reason I broke it out into this separate class was to avoid cluttering undo manager. It turned out to be a smaller class than I expected. Particularly I wanted the the remove call to be done in here to keep the logic for walking this tree isolated.\n\nIn reply to: 76160405 \n. It is not, NSUndoManager makes no promises of thread safety. However, I've read that a common pattern is for multiple objects to call enable/disable. Making this counter thread safe couldn't hurt.\n\nIn reply to: 76338299 \n. However, the same code is reused many many times. Removing this class would clutter the NSUndoManager. In addition, it makes sense to have the remove logic that will be added in this class as it deals strictly with the stack.\n\nIn reply to: 76338176 \n. It merely calls characterSetWithBitmap but with the contents of the file. It would merely be testing file lookup. As characterSetWithBitmap isn't tested either, there's no point in exploring this function before it gets any actual attention. A real test needs to be developed for this function which is not the priority of this pull request. #Closed\n. Check if error is nil before using it. #Resolved\n. As a Fox, I prefer the line as written. #Closed\n. > CFErrorRef* error \n@Status Caveat? Seems like error is unused. #Closed\n. > __ABContactOperation \nYou should keep all interfaces in your header file. Especially for internal classes. #Closed\n. > self \nnit: \"self->\" is unnecessary. #Resolved\n. It seems like you could be leaking some of these objects. I would recommend using StrongId for the NS* objects and double check WAC* objects. #Closed\n. > _setError \nJust curious why this method is declared here instead of in the header file's interface declaration. #Closed\n. > TODO \nIs this TODO associated with another task? If so, place the task's issue ID here for proper tracking. If not, please create one. :) #Closed\n. nit: condense to if(self = [super init]) { #Closed\n. Don't call messages on a currently initializing object. Use the ivars directly to avoid bad messages. Setters and getters should not be used in init and dealloc methods. #Closed\n. Is there documentation of this? It might be helpful to link to where you got these numbers so anybody looking at this can understand why these limits are set. #Closed\n. Well it seems like a lot of the classes are internal only here. The pattern I've been following has been that any private classes can go in the internal header for the file that needs to know of it.\n\nIn reply to: 76687605 \n. Since it's a private helper function you can make it a normal function call instead of an objective c message. This will avoid a dynamic look up.\n\nIn reply to: 76687800 \n. Well, you use 'self->' in quite a few places. In my opinion, it should only be used when the name of the ivar and the name of what it's being set to are significantly similar.\n\nIn reply to: 76672822 \n. Most likely not, but it's more clear this way that the stack has the object now.\n\nIn reply to: 76881492 \n. It's now removed from the stack if it's empty.\n\nIn reply to: 76708572 \n. I thought calling any setter in the init was always a bad idea.\n\nIn reply to: 76852007 \n. Yup, left over from testing various fixes to this API. Forgot to remove.\n\nIn reply to: 77075166 \n. Formatter messed things up somehow. Fixed.\n\nIn reply to: 77075978 \n. If neither, make my method names actually describe what they do.\n\nIn reply to: 76904743 \n. Oh woops, I have a bad habit of letting the formatter handle my comments.\n\nIn reply to: 77091827 \n. All of these undo calls are part of a single undo group. [manager undo] undoes everything in a single top level group.\n\nIn reply to: 77097544 \n. Because groupsByEvent is on by default, a top level undo group is opened and closed automatically.\n\nIn reply to: 77102647 \n. Just a slightly different test of using undo operations to mutate an object instead of assigning it.\n\nIn reply to: 77097663 \n. > {result.location + 1, length - (result.location + 1)} \nA comment about what substring is being created here and what it should look like could prove useful. Is there a situation where this substring is incorrect as in some malformed path? #Pending\n. > pRemainder \nThis is an internal function and I expect this case won't be hit but should you check if pRemainder isn't a null pointer first? #ByDesign\n. > _zero \nnit, statics should be s_zero #Closed\n. Code comments without tasks? Are you planning on fixing this up in this review or addressing this later? #Closed\n. > refit \nWhat does refit mean? #ByDesign\n. I don't think you can retain/copy a CGColorRef since it's not an object?\n\nIn reply to: 80593760 \n. This file should have been deleted. Will remove.\n\nIn reply to: 80592524 \n. These should actually just be readonly since the individual pages don't modify the color. Then release in a dealloc call.\n\nIn reply to: 80776634 \n. Refactor these line and drawing options into a container otherwise this is going to get ridiculous passing around all these individual values. #Closed\n. Fix this to follow the same pattern as other samples + drawing options. #Closed\n. Move these screenshots into a folder for project cleanliness. #Closed\n. Why have an empty true case? Why not just !(useContextColor && CFBooleanGetValue(useContextColor))? #Closed\n. Fix include paths. #Closed\n. Based on the reading it seems like a singlethreaded factory really isn't needed.\n\nIn reply to: 82024085 \n. Not particularly, if we do need to test it we can move it there later. I was just following closely what you did with the DWrite wrapper.\n\nIn reply to: 82025651 \n. D2D1CreateFactory doesn't work well with a ComPtr since it's not typed correctly. There are two ways to work with this then, tell D2D1 the actual type of what's being passed in with __uuidof(ID2D1Factory) or to pass something with the proper type. It might be better to just use the uuid here though for clarity.\n\nIn reply to: 82041278 \n. I thought I had fixed this in the previous iterations. Something must have happened. Fixed now though.\n\nIn reply to: 82096404 \n. > [button setTitle:@\"Selected Button\" forState:UIControlStateNormal]; \nThis seems redundant to set the title to the same thing for two different states. The documentation shows that you only need to set the title* for UIControlStateNormal and it will propagate to the other states.\n. Adding a path back to a normal state seems important. A single button might not be the correct sample here. Much of what I've read on UIButton uses the selected button state to indicate which button in a group of buttons is currently selected.\nAlso, that seems interesting, the button can be in both selected and highlighted states while the button is being held down? Is this correct?\n\nIn reply to: 82700702 \n. nit: I don't think we'll miss anything but since these are technically being converted to stubs should we be changing the @status on these to stubs for proper tracking? #WontFix\n. That would be an extremely weird case where a line segment has only a beginning or only an end point. It would be worth investigating what the reference platform does with odd counts.\n\nIn reply to: 82902834 \n. > Stub \nNot a stub? #Resolved\n. > assetName \nUnused. Unused above as well in a similar function. #Resolved\n. I think that may create two paths that are both edited when a single operation occurs. I'll verify. #Resolved\n. Yes, we'll probably do a similar thing to the open/close tracking. #Closed\n. Looks like this fixed a missed pairing between the mm. #Resolved\n. the equal function is just a stand  in at the moment.\n\nIn reply to: 83136640 \n. A comment on the __closepath function has been added. It would be cumbersome to add a comment to every __closePath call.\n\nIn reply to: 83128915 \n. Shouldn't return null here, we should fail instead of silently pretending things are okay.\n\nIn reply to: 83132249 \n. Yes, the default is 0,0.\n\nIn reply to: 83132608 \n. The current point? I don't think the sink tells us where the current point is.\n\nIn reply to: 83128196 \n. Unfortunately we can't avoid that, in order to call stream and copy the contents of the original path into the new copy we must close this path. Otherwise the D2D calls will return that a bad state has been entered.\n\nIn reply to: 83345783 \n. This is unavoidable. Without closing this path in D2D any calls to retrieve information about the path will result in a bad state. This is why we have a function to re-open the path.\n\nIn reply to: 83345867 \n. There's quite a lot of files out there with an outdated header. Should we just do a mass replace? It might clear up a lot of this.\n\nIn reply to: 83494095 \n. I'm not sure what you mean. We do it earlier to re-open the sink on the same path. Here we're copying the contents of one path into a new sink that is representative of a new path.\n\nIn reply to: 83363300 \n. There will be a document on OneNote with the status of any APIs that have changed status. It may be helpful to look at the API status snapshots on develop to double check any APIs in question.\n\nIn reply to: 83132884 \n. Sorry, I had this fix locally, forgot to push last night.\n\nIn reply to: 83929529 \n. Not particularly no.\n\nIn reply to: 83931964 \n. Raj had the same comment. Ellipses and curves in general might behave differently than we originally thought. I have to look into it more closely but I'm confident we shouldn't be adding 4 curves to represent an ellipse. Stream seems like the best option to append an ellipse.\n\nIn reply to: 83932426 \n. Yes, I confirmed this matches the reference platform's behavior.\n\nIn reply to: 83932603 \n. I didn't change the behavior from the previous implementation however it is incorrect. It should draw a line to the first point not just move there. I'll update it. I've made a note to add it in the sample app when we update it for supporting more cases like this.\n\nIn reply to: 83932270 \n. Good luck? Haha. That seems like something explicitly bad to do that sounds like undefined behavior. Here we wouldn't get any particular change since the current point and starting point are only used in tandem with adding actual geometry figures.\n\nIn reply to: 83932143 \n. Should I file an issue?\n\nIn reply to: 83963132 \n. Yes, it's fine to let D2D close the path since we moved it to a function that handles the bad case more easily of the path already being closed.\n\nIn reply to: 83963413 \n. Oh woops, didn't mean to check this in. I was verifying the behavior of addlines. Ugly star is sad.\n\nIn reply to: 83963476 \n. I'll file an issue for this. The reason this regressed is because even though we can add the path we can't transform the individual elements of that path as the original implementation did.\n\nIn reply to: 83971341 \n. > { nullptr } \nnit: no need for nullptr + other locations. #WontFix\n. ID2D1 Geometry uses BOOL.\n\nIn reply to: 85554218 \n. Nope, it's only used in comparisons.\n\nIn reply to: 85553969 \n. That wouldn't remove any nested logic and would be logically equivalent to what I have if that macro existed.\n\nIn reply to: 85566823 \n. #define BOOL WINDOWS_BOOL\nThis is correct.\n\nIn reply to: 85578185 \n. Although it should be initialized to FALSE to match the type.\n\nIn reply to: 85579045 \n. I forgot to put the bounding box check here as well. I initially did it to verify a rectangle could be added to an existing path as a simple scenario.\n\nIn reply to: 85589602 \n. The intention I used with fail_fast was that if the geometry APIs ever resulted in an unrecoverable state for the path that this should fail. This one in particular should have been to return false instead of failing.\n\nIn reply to: 85594909 \n. I was following what you did with the inline encapsulation functions while using normal camel case for functions. Do we have a preference on this? Should they be treated the same?\n\nIn reply to: 85629662 \n. Consistency with the rest of the file. I'll change them to nullptr instead then.\n\nIn reply to: 85629785 \n. We must close the path here. Any D2D1 operations require closed figures otherwise an error state is reached. This closes the path strictly for D2D1 operations and any future operations will re-open the path as necessary.\n\nIn reply to: 85667239 \n. I'm not sure what you mean? The reason for this ternary instead of just returning the containsPoint BOOL is because we don't want types to get in the way if anything were to change. They might be equivalent but I've always found it's better to be explicit in typing even for primitives like this.\n\nIn reply to: 85667276 \n. > currentPath \nMight as well use your fancy HasPath here.\n. > SetPath \nShould you close/release the previous path if there is one? #ByDesign\n. > nullptr \nDid we come to a conclusion on what to do with the transform here?\n. > !context->HasPath() \nnit: this is a redundant check. CGPathIsEmpty will check if the path is null. #ByDesign\n. nit: redundant. CGPathGetBoundingBox will return CGRectNull if the path is empty. #ByDesign\n. nit: redundant. CGPath handles this. #Closed\n. nit: redundant. CGPath handles this. #ByDesign\n. Yup, forgot about that.\n\nIn reply to: 85817685 \n. Would rather not overload the variable name with a capitalized version of a getter. The naming convention for functions says to use isFigureClosed so I might as well change the entire variable name at this point. However, we're just dancing around semantics at this point.\n\nIn reply to: 85826920 \n. Yeah, I'm confused as to what this is actually referencing now. Care to start a new comment thread here?\n\nIn reply to: 85841234 \n. Nope, the new figure is assumed to be open since it would just be additional work to close/re-open it for editing.\n\nIn reply to: 85843401 \n. figureClosed represents whether or not a CGPath has closed the geometry sink. A newly created geometry sink being closed is just madness.\n\nIn reply to: 85844653 \n. I made a note of this. We'll explore this more with the affine transform work item.\n\nIn reply to: 86265029 \n. > DISABLED_TEST \nThese tests should have been disabled initially since they involve work with arcs/curves. These will be re-enabled then.\n. virtual void EndFigure(\n   D2D1_FIGURE_END figureEnd\n) = 0;\nIt cannot. Calling it multiple times can result in a bad state though which makes this API slightly weird since it doesn't report that itself.\n\nIn reply to: 86611357 \n. We should sync up.\n\nIn reply to: 86614591 \n. Figured this was better from result.h\n\"// Always returns a known result (HRESULT) - logs failures in pre-release\ndefine RETURN_HR(hr) __RETURN_HR(wil::verify_hresult(hr), #hr)\"\n\nIn reply to: 86633680 \n. Looks like this is unused here. #Resolved\n. Correct.\n\nIn reply to: 88087978 \n. The helper accounts for this.\n\nIn reply to: 88084937 \n. The next line was supposed to use it as per your other comment.\n\nIn reply to: 88085762 \n. Yup, this contains the line color, dash pattern, width, etc.. that each CG sample view uses.\n\nIn reply to: 88085579 \n. Doesn't matter, combine is dead. :P\n\nIn reply to: 88094900 \n. > hr \nresult and hr seem unused? Are you missing some fail fasts here? #Resolved\n #Resolved. >    \nTABS!!!!  #Resolved. I think some comments about what's expected/what's happening in these tests could help explain a lot as it's not entirely obvious what is a successful test. #Closed. Just curious what this is used for instead of _MAX_PATH. #Resolved. >pretty \nSubjective.. >0xcd \nnit: magic number. As we add more tests it might be good to have a default for what this first pixel (I presume) is? What is 0xcd?\nEdit same below with 0xff.. Seems like this should be FAIL_FAST? Ignoring a dwrite error seems to go against the pattern of failing at the public api level that we've been following.. This should be rafactored to return the HRESULT. The pattern we've been following has been to let the API at the public level handle the expected failures and values.. Formatter too strong. #Closed. I've been following the pattern of d2d to cg using the make functions.\n\nIn reply to: 90974360 . It's the recommended typing from D2D in their instructions on how to implement the custom geometry sink. I would prefer to match their documentation in this case.\n\nIn reply to: 91124025 . Following the refactor work from Jingtao's pull request.\n\nIn reply to: 91437716 . Removing extra Microsoft::WRL::'s\n\nIn reply to: 91437818 . It's perfectly fine. We're doing nothing with it, just handing it off to the CGPathApplier function. If they use their own NULL incorrectly then that's their fault. :P\n\nIn reply to: 91437902 . I don't know if it supports wild cards, there seems to be a bigger problem overall though that I have no idea what's going on. Visual studio is adamant about creating multiple references to the same pictures... Just look at the few lines above. Removing these and re-adding the files to the project just results in these duplicates being recreated. Seems like an issue that needs more investigation.\n\nIn reply to: 91632444 . >shapeName \nSeems like the shapename is shortened for the sake of smaller file names? Would it make more sense to group by test type rather than by the shape drawn as the filename has shape before type? #WontFix. >5 \nnit, .5's should be a constant as they're used so often. This way the .5 can be explained as aligning properly to the pixel boundaries in a single spot.. >FillGeometry \nnit, This comment sounds great for the design doc/follow up questions to D2D but seems a bit excessive for in code comments. You could shorten it to something like \"Using two stacked layers as brush opacity results in failure of other, preferable APIs.\" #Pending. Could you make a comment about what 0x98 is meant to be? Somebody coming back and reading this isn't going to understand exactly what this is testing. #Resolved. >png3.9. \nNot too happy about the names here. What is png3.9? A file name should describe at least partially what the file is. #Resolved. I get that, but what does 0x98 mean? I understand that we're checking the first pixel to be a particular something but that something is pretty ambiguous just from looking at the code.\n\nIn reply to: 93538970 . >jpg1 \nnit: name. The private endfigure call is necessary. We pass this to some D2D code which will be calling the normal EndFigure. We need to ignore those and end the figure ourselves.\n\nIn reply to: 96962369 . We don't want the simplify method from D2D to call close and invalidate our figure work. We want full control over closing the geometrysink. If close is called, it may put our geometrysink in a bad state and prevent further calls.\n\nIn reply to: 96963185 . You mean without us closing it first?\n\nIn reply to: 96993664 . It does log the line since testSymmetricEquivalence returns the result. It doesn't grab which direction the equivalence failed on but this was preferable to having two macros for fail vs succeed or having to pass an extra bool to state whether it should fail or succeed. At least in my opinion.\n\nIn reply to: 97699788 . Woops, reasons to not get distracted by email pop ups.\n\nIn reply to: 97888196 . I'm not sure what you mean here, could you elaborate?\n\nIn reply to: 97700178 . I'd prefer if it's unsigned. I don't think the ptrdiff_t would be any more clear.\n\nIn reply to: 97700376 . I misunderstood that. My bad.\n\nIn reply to: 97907976 . no need for temp, just toss this in the if.. Font Antialiasing*. Follow D2DWrapper factory code style to respect HRESULTs in their proper place as well as in place construction of DWrite interface without passing raw interface pointers.. Update API status.. The point of a default value here is to avoid setting any Anti aliasing information when we don't have to. It avoids the work of updating the D2D1 drawing parameters when nothing has been changed and allows D2D to make the decisions as to the best AA to use.. nit: we shouldn't fail fast in private functions. Our pattern has been to return an HRESULT and fail in the base CG API function. That said, I don't think you need the null check in particular here. Since it's a private method, move the fail_fast_if_null to CGContext. If you plan on using this method in more places though I would recommend keeping the fail fast here and returning a struct for {HRESULT, returnvalue} which has been our preferred pattern or passing a return bool by reference. #Resolved. The stars with the lowest size don't appear. I don't think it's worth having a test for those sizes especially when the images are blank. #Resolved. It's still required since a rectangle geometry is created without a particular fill mode. There's no way to set a particular default for simply an ID2D1RectangleGeometry (Similarly for others). An equivalent comparison would be creating a path, streaming a rectangle geometry into that path, and setting the fill mode on the geometrysink. I think the groups work better for this though.\nAs far as I know, you can't just assign a fill mode to a rectangle geometry or any normal ID2D1Geometry for that matter and have to do it through a group.. I'm not sure what you mean by that. drawMode here is passed in. We already know we have to fill the geometry but if it's a winding fill and a path geometry we're allowed to skip this conversion step since CGPath has already set the fill mode by default.. Well I guess I should move it from the \"; private exports below\" section of the def then. :P. They're on different angles.. But could still be negative from a counterclockwise rotation. This negative is important later on but the strict value being close enough to zero here is the important factor for when to draw a full circle.. Not quite, since that would ignore any angle like 7pi/2 and instead return 2 *M_PI. We only want to return an angle of 2pi if the angle is a multiple of 2pi and not 0. That's what the extra checks are for.. \ud83d\udc4d. I'd rather be consistent with the rest of the file which uses CGPathRelease, an API we also need to test.. Formatter? #ByDesign. A note on which pixels (I presume that's what this is?) these are checking would be nice. The draw test itself is just checking that we can successfully draw a rectangle and the real test is here in the EXPECTs. The same can certainly be accomplished in a normal test with the data point checking before and after a flush. #ByDesign. That actually doesn't need to be there, but the fill mode does not affect the widen call in any way. This call should be removed since the baking sink already has this fill mode applied to it from the initial creation of this new path.. That's a good point, we need additional tests to track behavior beyond the creation of this widened/stroked path.. applyBounds was a static Rect used earlier in the file. It should not be used here. Fixing + other tests.. A quadratic bezier curve has the form, {point1, point2} where point1 is the only control point and point2 is the ending point of the curve.. This image is for another test.. Seems unused with LoggingNative? #Resolved. xstep and ystep could be CGSize for simplicity. #WontFix. Are these actually correct? The documentation says to use the section property which doesn't seem to line up with these constant values.. Can you confirm the behavior matches NSArray's concurrent option? NSArray specifically calls out the behavior of stop  in that it will finish running any current blocks but NSSet does not.. You could modify the test to check that all elements are represented in the description but not in any particular order. For each element in set check that the description string contains some form of an expected substring of each element. #Resolved. Personally, I don't see value in testing the behavior of undefined options. This test could fail in the future and still be an acceptable implementation, right?. I'm not sure this is actually testing the intended effect of makeObjectsPerformSelector. This should be testing that the objects in the set respond appropriately to the message in the block, right? Instead, this is just enumerateWithBlock where the block variable, otherSet, is adding each enumerated object.. Would it make sense to go the other way then and modify NSArray's implementation? Or possibly break this out into a partially shared implementation since so much of the code is similar? Just a couple thoughts.. Yup, you're right.. I see what you're saying. You're just using the reverse enumeration as another set to match against. I still think it shouldn't be used though, since it is still technically undefined.. Well it's worth thinking about that there's a handful of classes that each have a similar API. Like NSOrderedSet, NSDictionary, etc... They're unimplemented at the moment but if each of these produces a similar result then it might be useful to consider. I'm not saying to do it right now, but as we fill out the implementations of Foundation we may have to revisit this.. I agree, it's probably the right thing. I was just curious since the documentation mentions this in NSArray but not NSSet.. These transformations seem a bit unnecessary to test the path location in isolation. I would be a bit more confident in the test without them, or one without them in addition to this showing it works in isolation and in conjunction with transforms.. For all %f's, truncate them to 1 decimal place. No need for obscene file name lengths.. Well the point was to test specific scenarios. Setting the phase to the first value of the dash pattern should create a line that starts with blank space. In the case of the 1, 1 dash pattern, the different phases create an inverted image. I don't see much value in creating virtually random combinations of phases and patterns. It would create more test cases, but the same can be accomplished more effectively by creating actual cases that we have an expectation for how it's meant to look. I'm not in favor of just mashing the numbers together and seeing what comes out. This is why I created the phase/dash/count struct to test particular scenarios.. How do you mean? This uses a transform to align the rectangle to the half pixel mark. Are you just looking for redundancy with other types of transforms?. I've had this in for a while used in other locations. It's just more simple than querying the amount of figures or segments.. Yup, this implementation ignores them entirely.. Exactly what Dustin said. There are times in the code where allowing figure calls will call into other functions which will then disable it. Having a stack of allow/disallow let's the top level call be the only one to disable this permission.. i before e except after c. Oh... yeah. I don't know why I did it that way when I've used the macros in every other conceivable instance.. I believe you do. It must be of type CGPath at return but requires an id for the autorelease.. It should simply clear the pattern. I'll add a case for that.. Woops, I forgot that. Good catch. Thanks!. Doesn't seem to be shorter, but does seem more accurate to do.. Yes, I'm reverting this to keep the changes more incremental.. As I understand it, the new lines replace what this was doing. This keeps the full path but also ensures distinction.. The problem was that various dll's weren't being included in the final output package. This seems to fix the issue but I did want to talk to you about it.. I was checking each nuget package's content before pushing. It was late and I must have not checked this one.. I would prefer to do each one explicitly when messing with these project references to ensure ordering.. It seems fine without it. The build machine builds have passed beyond tools.. Yup, clang format certainly did a number on these files.. I removed the duplicate headers that were copied into deps\\prebuilt\\include\\libdispatch. It doesn't make sense to have two additional copies of every header for libdispatch checked in. Tools uses them from the tools\\deps\\prebuilt\\include folder.. Good catch. There shouldn't be a specific with a null context.. Woops... I was copying from a backup of the formatted file and copied the wrong lines.. Believe it or not, the file was formatted incorrectly before. The file in deps\\3rdparty\\libdispatch\\ is formatted to this. My assumption is that this file should be the most accurate since the one checked into tools\\deps\\prebuilt\\include must be a copy. Copying over this file is why it changed and will happen each time libdispatch is built. This formatting most closely resembles the original fork of dr pizza's libdispatch repo.\nShould I apply the (clearly better looking) formatting that was applied to the copy of this header to the original header?. As is the same for each \"formatted\" file in the tools folder.. Fixed the locking issues. A dispatch_queue_t has been added to a dispatch_queue_t with delayed initialization. The specific list is stored on this embedded queue such that this queue can be run/locked on to perform operations on the specific list. Using the barrier functions, it's guaranteed that a single operation finishes before another is performed on that particular queue.. We use it as a void* out pointer though for the return value of the context.. I was merely copying the double backslash from the changed line. In retrospect, we don't need this anyway. The target that used it was removed.. Yeah, the target that used them was removed. This target copies over checked in files in the main repo. In an ideological sense, this is bad. We don't want to have any 3rdparty projects copying over files checked into the main repo.. LibDispatch must be compiled with ClangCompile though. This exists in the WinObjC Language package.. Yeah, it seems to just be github acting strangely. The format in the file itself seems fine to me.. Fixed.. I don't see why it should be lower. It's not a high priority item, but I can't imagine the user wants to wait longer than they have to.. Since it's their only way of freeing those resources though, we shouldn't be a barrier to getting it done.. Windows locales are set up to use -. If somebody is setting up localization, they may think to use the natural windows syntax in their bundle names. I think it makes sense to support both - and _ in that case.. Yup. I'm not sure what you mean by this though.. Windows.. Yup, unicode characters in ASSERT_OBJCEQ was just like... \u00af_(\u30c4)_/\u00af crash.. The point was to always find a localization we have. Since we know we can use English as a fallback the test doesn't care about what locale or language settings the machine has. This way we can ensure we're testing the localization changes.. Run time. Will do!. Mmm, no? We want to return NULL so that the rest of the code will hit it's fallbacks. Where it creates \"devLangArray\" and an \"en_US\" array to call _CFBundleCreateMutableArrayOfFallbackLanguages.\nSorry if I'm missing something.. I mean, we're certainly testing the NSLocalizedString path. Grabbing a particular locale is not the goal here, nor is that something I think we can rely on with a unit test. The system can only have one locale setting, so it doesn't seem to matter to me which locale that is. Since English is a known fallback is that not acceptable?. Oh woops. I wanted to keep that around in case I goofed anything in the substring call.. Not funny at all. That seems like a good idea to avoid extra string work. \ud83d\udc4d . This was a workaround to have each project depend on a single thing to manually nuget restore from. It appears that this workaround isn't needed anymore. When running a regular build with the workaround removed, Visual Studio seems able to restore the nuget packages itself.. What? \"declspec(noinline) inline\"???. This doesn't look like it's being used in CoreGraphics (unless I missed something). Is this in preparation for something else? If so, shouldn't it be checked in alongside that?. This seems like a lot to delete without having a replacement. Are we sure this can be tossed so easily?\nI understand it's all \"legacy\" but I'd simply like to be sure.. Whoah.... Quite the fallbacks here. What are the ramifications of this? Did we severely spike which packages we require to contribute to Islandwood by including all these now? I'm all for manipulating NuGet if it helps us unblock certain troublesome scenarios but a giant list of all these frameworks seems strange in the least.. ",
    "brianker": "I have been unable to duplicate this with both the pre-built SDK (version 0.1.0.160114), and by building the SDK myself from the GitHub source.  Are you doing anything other than unzipping/building the SDK and then immediately building WOCCatalog?  do you have older SDK versions, or did you install overtop of an older SDK?\n. Would it be possible for us to get a small example solution that replicates the issue?  If your project was imported from XCode, could we get the original XCode project as well?\nEdit: Also, are you using the pre-built SDK, or are you building it yourself?\nThanks.\n. :shipit:\n. ",
    "ilMalvagioDottorProsciutto": "I've the same problem probably. I remove MapKit from my import (My app can run without it) but still UIKit import gives me errors.\nLooks like the linker could not find the \"standard\" libraries/frameworks. It may be a setting in the project?\n. ",
    "Leen15": "@weswmsft is now fb sdk supported?. ",
    "ghost": "Need to close #116.\n. Hi!\nUsing the most recent SDK https://github.com/Microsoft/WinObjC/releases/tag/0.1.160906 I get the following error:\nno visible @interface for 'UIView' declares the selector 'setNativeElement:'    MixMatchUIKitXaml .\nThere is no method 'setContentsElement:' in CALayer (Please have a look at XAML interoperability section at this page: https://github.com/Microsoft/WinObjC/wiki/Using-the-SDK )\nSo how to mix XAML and UIKit controls using latest SDK?\n. Nope, because we wrapped code using preprocessor directive. So objective-c code is:\n```\nif !WINOBJC\nNSString *result = [self.webView stringByEvaluatingJavaScriptFromString:javascriptCommand];\nif (completionHandler) {\n    completionHandler(result,nil);\n}\n\nelse\n[self.webView evaluateJavaScript:javascriptCommand completionHandler:completionHandler];\n\nendif\n```\nwhere webView is an instance of UIWebView class.\n. Thank you for raising this issue. We are following up with the compiler team (who is separate from this team) and will get back to you with an update soon.\n. ",
    "DavidBurela": "So the issue is there in Jan 28 with legacy method dispatch, but it works with Jan 14.\nNot sure what else changed between those 2 releases.\n. ",
    "mjmeans": "Not supported on iOS7 or later anyway. No need to fix.\n. ",
    "cre8ivepark": "Had same issue. in my case, I was using NSIndexSet to do batch update in UICollectionView, with following code:\n    [self.collectionView performBatchUpdates:^{\n        [self.collectionView reloadSections:[NSIndexSet indexSetWithIndex:0]];\n    } completion:nil];\n. Sometimes I get similar errors with other libraries such as AVKit.lib, even though I haven't used it on my app. Restarting/cleaning project or deleting Debug folder or re-creating VS solution with vsimporter fixed the error. \n. @alexdrenea Thanks - However, I don't use storyboard or xib. Try assigning the color from the code. It is not working. I am creating UITextView programmatically.\n. I have same issue on saving current view as PNG image to the photos album(camera roll)\nIt looks like this API is not implemented yet.\nUIImageWriteToSavedPhotosAlbum(viewImage, self,\n                                   @selector(image:didFinishSavingWithError:contextInfo:),\n                                   nil);\n. Here is another my app used Windows Bridge for iOS:\nhttps://www.microsoft.com/en-us/store/apps/typography-insight/9nblggh4qrs5\nhttp://typeinsight.org\n. @rajsesh-msft  Is it included in Sep 27 release?\n. @rajsesh-msft  Thanks Rajesh, I would like to try it. When I try checking out CT-DW branch, it gives me following errors with long list of files. Should I use different git command? (It is clean new WinObjC just cloned from this GitHub)\nPS F:\\WinObjC> git checkout CT-DW\nerror: The following untracked working tree files would be overwritten by c\n        .ci-repo.xml\n        .clang-format\n        .gitattributes\n        .gitignore\n        .gitmodules\n        Frameworks/AVFoundation/AVAsset.mm\n        Frameworks/AVFoundation/AVAssetExportSession.mm\n        Frameworks/AVFoundation/AVAssetImageGenerator.mm\n        Frameworks/AVFoundation/AVAssetReader.mm\n        Frameworks/AVFoundation/AVAssetReaderAudioMixOutput.mm\n        Frameworks/AVFoundation/AVAssetReaderOutput.mm\n        Frameworks/AVFoundation/AVAssetReaderOutputMetadataAdaptor.mm\n        Frameworks/AVFoundation/AVAssetReaderSampleReferenceOutput.mm\n        Frameworks/AVFoundation/AVAssetReaderTrackOutput.mm\n ...\n. ",
    "oren-MSFT": "should be fixed. Let me know if you do not see it fixed as then I might have miss diagnosed the issue. \n. @mgoemmel are you adding a UIImage to a UIImageView then setting the alpha to zero on the UIImageView or the UIImageView's parent. More details would be greatly appreciated or code snippets as I really would like understand the issue better. Thanks in advance! \n. We need to do some work to respect alpha's when drawing on our bitmaps but for now we are looking at a fix similar to what you did above. -(void)renderInContext:(CGContextRef)ctx { if (priv->hidden || priv->opacity<=0.01f) { return; } ... }\n. I submitted the fix and tracking the proper fix for later so going to close this issue. Thanks Markus for the help! 0ec55f3 was the commit. \n. I think i have a fix for this and we should have it out soon.\n. The fix should resolve this issue.\n. I believe I have a fix for this and I am working on it now.\n. Can you please attach the xib \"......\\PageName.xib? Sounds like our xib2nib tool is crashing when that xib is passed in. If you don't want it public please ping @s5msft who can help get the data from you securely. \nThank you!\n. One of our other developers is checking this out thanks for attaching the file!\n. ",
    "afaruqui": "Yes and \"squash\"ed\n. Made the suggested changes\n. Thank You for the feedback. We addressed the comments and made appropriate changes.\n. Thank you for the feedback. We addressed the latest comments and uploaded the changes.\n. Thanks for the feedback. We have made the changes and updated the PR.\n. Thanks for the feedback. Made changes and updated the PR.\n. We are currently not blocked\n. Thanks much for the feedback, Made changes based on it. I am adding the changes in a new commit for ease of review and will squash it into the previous commit before merging.\n. Updated the PR with the latest feedback changes\n. @rajsesh-msft Resolved the conflicts and rebased the PR.\n. Fixed the mentioned issues. \nAlso looks like there might be more changes required per the latest release. I am looking into those changes and will comment or update as needed.\n. Resolved the conflicts\n. CR changes complete.\n. @winobjc-bot please test Debug. @winobjc-bot please test. Added \"-DAUDIOTOOLBOX_IMPEXP= \" under additional options. . made them ivars\n. Made the change\n. As discussed the projections for Windows Phone are currently not available, Issue #480. Hence we use WRL.\n. Added a new audio file to the project, and removed the reference to this file.\n. The api is sync and using an async call would cause problems. The calls to MFTransform are blocking, hence there wont be redundant checks for the if statements.. Moved all of the tests from here to AudioToolbox unit test.. Moved all of the common stuff to AudioConverterInternal.h. I believe ARC should handle it as we are returning NULL. Also went ahead and explicitly declared self = nil for the failure case . Added checks for it. Removed. Moved them above the statements. I wasnt getting any build errors and confirmed again that I can build without errors with a new clone and build. \nWithout the dependency on AudioToolbox.lib (or with dependency on AudioToolboxLib.lib) I am getting an unresolved external symbol error for the AudioConverterNew and AudioConvertDispose calls. ",
    "Bartmax": "i still can't make this to work. Another idea?\n. I thought you were abondoning this project, yet on Build you talk about being very active and want to help people with existing ios code.\nIt's been almost 2 month since I opened this issue. I'm wondering, are you interested on apps ported to uwp ? Can we talk?\n. ",
    "jiaolianxin": "@asimonov-msft Here is the content of the log file, as follow:\n^E:\\WINOBJC\\MSVC\\CONSUMERUNTIMECOMPONENT.CPP\n/c /I\"E:\\TBAPP\\IOSAPP\\TBCLIENT\\TBCLIENT\\TBCLIENT.VSIMPORTER\\TBCLIENT-WINSTORE10\\\" /I\"GENERATED FILES\\\" /IDEBUG\\ /IE:\\WINOBJC\\MSVC..\\INCLUDE\\VCINCLUDE /Zi /ZW /ZW:nostdlib /nologo /W3 /WX- /sdl /O2 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D WRL_NO_DEFAULT_LIB /Gm- /EHsc /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo\"DEBUG\\\" /Fd\"DEBUG\\VC140.PDB\" /Gd /TP /wd4453 /wd28204 /FU\"D:\\PROGRAM FILES (X86)\\MICROSOFT VISUAL STUDIO 14.0\\VC\\LIB\\STORE\\REFERENCES\\PLATFORM.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.APPLICATIONMODEL.CALLS.CALLSVOIPCONTRACT\\1.0.0.0\\WINDOWS.APPLICATIONMODEL.CALLS.CALLSVOIPCONTRACT.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.DEVICES.PRINTERS.PRINTERSCONTRACT\\1.0.0.0\\WINDOWS.DEVICES.PRINTERS.PRINTERSCONTRACT.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.FOUNDATION.FOUNDATIONCONTRACT\\1.0.0.0\\WINDOWS.FOUNDATION.FOUNDATIONCONTRACT.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.FOUNDATION.UNIVERSALAPICONTRACT\\2.0.0.0\\WINDOWS.FOUNDATION.UNIVERSALAPICONTRACT.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.GRAPHICS.PRINTING3D.PRINTING3DCONTRACT\\2.0.0.0\\WINDOWS.GRAPHICS.PRINTING3D.PRINTING3DCONTRACT.WINMD\" /FU\"C:\\PROGRAM FILES (X86)\\WINDOWS KITS\\10\\REFERENCES\\WINDOWS.NETWORKING.CONNECTIVITY.WWANCONTRACT\\1.0.0.0\\WINDOWS.NETWORKING.CONNECTIVITY.WWANCONTRACT.WINMD\" /FU\"E:\\WINOBJC\\MSVC..\\LIB\\UNIVERSAL WINDOWS\\X86\\XAMLCOMPOSITORCS.WINMD\" /analyze-  -D_WOC_APP E:\\WINOBJC\\MSVC\\CONSUMERUNTIMECOMPONENT.CPP\n. @asimonov-msft Here is the content of the  clang.command.1.tlog , as follow:\n^E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\n -cc1 -internal-isystem \"E:\\winobjc\\msvc..\\include\\WOCStdLib\" -include WOCStdlib.h -cc1 -triple i686-pc-windows-msvc -internal-isystem \"E:\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.7.0\\include\" -emit-obj -disable-free -main-file-name TBCPPChuDianImageItem.m -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\" -resource-dir \"E:\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.7.0\" -fdebug-compilation-dir \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=19.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fobjc-dispatch-method=non-legacy -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  -o \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_30F71474.obj\" -Werror=return-type -fconst-strings -fconstant-string-class CFConstantString -fblocks -include StubIncludes.h -I\"E:\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"E:\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\" -iquote\"Debug\\TBClient-project.hmap\" -D_DEBUG -D_MT -D_DLL --dependent-lib=msvcrtd --dependent-lib=oldnames -O0 -mrelax-all -g -fexceptions -fobjc-exceptions -fcxx-exceptions -internal-isystem \"D:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -internal-isystem \"D:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\ucrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\um\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\shared\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\winrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\" -internal-isystem \"E:\\winobjc\\include\" -internal-isystem \"E:\\winobjc\\include\\VCInclude\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\sbuild\\Debug-iphoneos\" -I\"E:\\tbapp\\idp\" -I\"E:\\tbapp\\idp.svn\" -I\"E:\\tbapp\\idp\\build\" -I\"E:\\tbapp\\idp\\IDP\" -I\"E:\\tbapp\\idp.svn\\pristine\" -I\"E:\\tbapp\\idp.svn\\tmp\" -I\"E:\\tbapp\\idp\\build\\Debug-iphoneos\" -I\"E:\\tbapp\\idp\\IDP\\IDP\" -I\"E:\\tbapp\\idp\\IDP\\IDP.vsimporter\" -I\"E:\\tbapp\\idp\\IDP\\IDP.xcodeproj\" -I\"E:\\tbapp\\idp\\IDP\\IDPTests\" -I\"E:\\tbapp\\idp.svn\\pristine\\00\" -I\"E:\\tbapp\\idp.svn\\pristine\\01\" -I\"E:\\tbapp\\idp.svn\\pristine\\02\" -I\"E:\\tbapp\\idp.svn\\pristine\\03\" -I\"E:\\tbapp\\idp.svn\\pristine\\04\" -I\"E:\\tbapp\\idp.svn\\pristine\\05\" -I\"E:\\tbapp\\idp.svn\\pristine\\07\" -I\"E:\\tbapp\\idp.svn\\pristine\\0b\" -I\"E:\\tbapp\\idp.svn\\pristine\\0c\" -I\"E:\\tbapp\\idp.svn\\pristine\\0f\" -I\"E:\\tbapp\\idp.svn\\pristine\\11\" -I\"E:\\tbapp\\idp.svn\\pristine\\12\" -I\"E:\\tbapp\\idp.svn\\pristine\\14\" -I\"E:\\tbapp\\idp.svn\\pristine\\16\" -I\"E:\\tbapp\\idp.svn\\pristine\\17\" -I\"E:\\tbapp\\idp.svn\\pristine\\18\" -I\"E:\\tbapp\\idp.svn\\pristine\\19\" -I\"E:\\tbapp\\idp.svn\\pristine\\1b\" -I\"E:\\tbapp\\idp.svn\\pristine\\1c\" -I\"E:\\tbapp\\idp.svn\\pristine\\1e\" -I\"E:\\tbapp\\idp.svn\\pristine\\1f\" -I\"E:\\tbapp\\idp.svn\\pristine\\20\" -I\"E:\\tbapp\\idp.svn\\pristine\\21\" -I\"E:\\tbapp\\idp.svn\\pristine\\22\" -I\"E:\\tbapp\\idp.svn\\pristine\\24\" -I\"E:\\tbapp\\idp.svn\\pristine\\25\" -I\"E:\\tbapp\\idp.svn\\pristine\\26\" -I\"E:\\tbapp\\idp.svn\\pristine\\27\" -I\"E:\\tbapp\\idp.svn\\pristine\\28\" -I\"E:\\tbapp\\idp.svn\\pristine\\2a\" -I\"E:\\tbapp\\idp.svn\\pristine\\2c\" -I\"E:\\tbapp\\idp.svn\\pristine\\2d\" -I\"E:\\tbapp\\idp.svn\\pristine\\2f\" -I\"E:\\tbapp\\idp.svn\\pristine\\30\" -I\"E:\\tbapp\\idp.svn\\pristine\\31\" -I\"E:\\tbapp\\idp.svn\\pristine\\32\" -I\"E:\\tbapp\\idp.svn\\pristine\\33\" -I\"E:\\tbapp\\idp.svn\\pristine\\35\" -I\"E:\\tbapp\\idp.svn\\pristine\\36\" -I\"E:\\tbapp\\idp.svn\\pristine\\37\" -I\"E:\\tbapp\\idp.svn\\pristine\\38\" -I\"E:\\tbapp\\idp.svn\\pristine\\39\" -I\"E:\\tbapp\\idp.svn\\pristine\\3b\" -I\"E:\\tbapp\\idp.svn\\pristine\\3c\" -I\"E:\\tbapp\\idp.svn\\pristine\\3d\" -I\"E:\\tbapp\\idp.svn\\pristine\\3e\" -I\"E:\\tbapp\\idp.svn\\pristine\\40\" -I\"E:\\tbapp\\idp.svn\\pristine\\41\" -I\"E:\\tbapp\\idp.svn\\pristine\\42\" -I\"E:\\tbapp\\idp.svn\\pristine\\43\" -I\"E:\\tbapp\\idp.svn\\pristine\\44\" -I\"E:\\tbapp\\idp.svn\\pristine\\45\" -I\"E:\\tbapp\\idp.svn\\pristine\\47\" -I\"E:\\tbapp\\idp.svn\\pristine\\4b\" -I\"E:\\tbapp\\idp.svn\\pristine\\4c\" -I\"E:\\tbapp\\idp.svn\\pristine\\4d\" -I\"E:\\tbapp\\idp.svn\\pristine\\4e\" -I\"E:\\tbapp\\idp.svn\\pristine\\50\" -I\"E:\\tbapp\\idp.svn\\pristine\\51\" -I\"E:\\tbapp\\idp.svn\\pristine\\52\" -I\"E:\\tbapp\\idp.svn\\pristine\\53\" -I\"E:\\tbapp\\idp.svn\\pristine\\56\" -I\"E:\\tbapp\\idp.svn\\pristine\\59\" -I\"E:\\tbapp\\idp.svn\\pristine\\5a\" -I\"E:\\tbapp\\idp.svn\\pristine\\5e\" -I\"E:\\tbapp\\idp.svn\\pristine\\5f\" -I\"E:\\tbapp\\idp.svn\\pristine\\60\" -I\"E:\\tbapp\\idp.svn\\pristine\\61\" -I\"E:\\tbapp\\idp.svn\\pristine\\62\" -I\"E:\\tbapp\\idp.svn\\pristine\\63\" -I\"E:\\tbapp\\idp.svn\\pristine\\64\" -I\"E:\\tbapp\\idp.svn\\pristine\\65\" -I\"E:\\tbapp\\idp.svn\\pristine\\66\" -I\"E:\\tbapp\\idp.svn\\pristine\\67\" -I\"E:\\tbapp\\idp.svn\\pristine\\70\" -I\"E:\\tbapp\\idp.svn\\pristine\\71\" -I\"E:\\tbapp\\idp.svn\\pristine\\72\" -I\"E:\\tbapp\\idp.svn\\pristine\\73\" -I\"E:\\tbapp\\idp.svn\\pristine\\74\" -I\"E:\\tbapp\\idp.svn\\pristine\\75\" -I\"E:\\tbapp\\idp.svn\\pristine\\76\" -I\"E:\\tbapp\\idp.svn\\pristine\\78\" -I\"E:\\tbapp\\idp.svn\\pristine\\79\" -I\"E:\\tbapp\\idp.svn\\pristine\\7b\" -I\"E:\\tbapp\\idp.svn\\pristine\\7c\" -I\"E:\\tbapp\\idp.svn\\pristine\\7d\" -I\"E:\\tbapp\\idp.svn\\pristine\\7f\" -I\"E:\\tbapp\\idp.svn\\pristine\\82\" -I\"E:\\tbapp\\idp.svn\\pristine\\83\" -I\"E:\\tbapp\\idp.svn\\pristine\\84\" -I\"E:\\tbapp\\idp.svn\\pristine\\85\" -I\"E:\\tbapp\\idp.svn\\pristine\\86\" -I\"E:\\tbapp\\idp.svn\\pristine\\87\" -I\"E:\\tbapp\\idp.svn\\pristine\\88\" -I\"E:\\tbapp\\idp.svn\\pristine\\8a\" -I\"E:\\tbapp\\idp.svn\\pristine\\8b\" -I\"E:\\tbapp\\idp.svn\\pristine\\8c\" -I\"E:\\tbapp\\idp.svn\\pristine\\8e\" -I\"E:\\tbapp\\idp.svn\\pristine\\8f\" -I\"E:\\tbapp\\idp.svn\\pristine\\91\" -I\"E:\\tbapp\\idp.svn\\pristine\\93\" -I\"E:\\tbapp\\idp.svn\\pristine\\94\" -I\"E:\\tbapp\\idp.svn\\pristine\\95\" -I\"E:\\tbapp\\idp.svn\\pristine\\96\" -I\"E:\\tbapp\\idp.svn\\pristine\\99\" -I\"E:\\tbapp\\idp.svn\\pristine\\9a\" -I\"E:\\tbapp\\idp.svn\\pristine\\9b\" -I\"E:\\tbapp\\idp.svn\\pristine\\9d\" -I\"E:\\tbapp\\idp.svn\\pristine\\9e\" -I\"E:\\tbapp\\idp.svn\\pristine\\a2\" -I\"E:\\tbapp\\idp.svn\\pristine\\a3\" -I\"E:\\tbapp\\idp.svn\\pristine\\a5\" -I\"E:\\tbapp\\idp.svn\\pristine\\a6\" -I\"E:\\tbapp\\idp.svn\\pristine\\a7\" -I\"E:\\tbapp\\idp.svn\\pristine\\a8\" -I\"E:\\tbapp\\idp.svn\\pristine\\a9\" -I\"E:\\tbapp\\idp.svn\\pristine\\ab\" -I\"E:\\tbapp\\idp.svn\\pristine\\ac\" -I\"E:\\tbapp\\idp.svn\\pristine\\ad\" -I\"E:\\tbapp\\idp.svn\\pristine\\ae\" -I\"E:\\tbapp\\idp.svn\\pristine\\af\" -I\"E:\\tbapp\\idp.svn\\pristine\\b0\" -I\"E:\\tbapp\\idp.svn\\pristine\\b2\" -I\"E:\\tbapp\\idp.svn\\pristine\\b3\" -I\"E:\\tbapp\\idp.svn\\pristine\\b4\" -I\"E:\\tbapp\\idp.svn\\pristine\\b5\" -I\"E:\\tbapp\\idp.svn\\pristine\\b6\" -I\"E:\\tbapp\\idp.svn\\pristine\\b7\" -I\"E:\\tbapp\\idp.svn\\pristine\\bb\" -I\"E:\\tbapp\\idp.svn\\pristine\\bc\" -I\"E:\\tbapp\\idp.svn\\pristine\\bd\" -I\"E:\\tbapp\\idp.svn\\pristine\\be\" -I\"E:\\tbapp\\idp.svn\\pristine\\bf\" -I\"E:\\tbapp\\idp.svn\\pristine\\c2\" -I\"E:\\tbapp\\idp.svn\\pristine\\c3\" -I\"E:\\tbapp\\idp.svn\\pristine\\c4\" -I\"E:\\tbapp\\idp.svn\\pristine\\c5\" -I\"E:\\tbapp\\idp.svn\\pristine\\c7\" -I\"E:\\tbapp\\idp.svn\\pristine\\c9\" -I\"E:\\tbapp\\idp.svn\\pristine\\cb\" -I\"E:\\tbapp\\idp.svn\\pristine\\cc\" -I\"E:\\tbapp\\idp.svn\\pristine\\cd\" -I\"E:\\tbapp\\idp.svn\\pristine\\ce\" -I\"E:\\tbapp\\idp.svn\\pristine\\cf\" -I\"E:\\tbapp\\idp.svn\\pristine\\d1\" -I\"E:\\tbapp\\idp.svn\\pristine\\d2\" -I\"E:\\tbapp\\idp.svn\\pristine\\d3\" -I\"E:\\tbapp\\idp.svn\\pristine\\d4\" -I\"E:\\tbapp\\idp.svn\\pristine\\d9\" -I\"E:\\tbapp\\idp.svn\\pristine\\da\" -I\"E:\\tbapp\\idp.svn\\pristine\\db\" -I\"E:\\tbapp\\idp.svn\\pristine\\dc\" -I\"E:\\tbapp\\idp.svn\\pristine\\dd\" -I\"E:\\tbapp\\idp.svn\\pristine\\e1\" -I\"E:\\tbapp\\idp.svn\\pristine\\e2\" -I\"E:\\tbapp\\idp.svn\\pristine\\e3\" -I\"E:\\tbapp\\idp.svn\\pristine\\e4\" -I\"E:\\tbapp\\idp.svn\\pristine\\e5\" -I\"E:\\tbapp\\idp.svn\\pristine\\e6\" -I\"E:\\tbapp\\idp.svn\\pristine\\e8\" -I\"E:\\tbapp\\idp.svn\\pristine\\e9\" -I\"E:\\tbapp\\idp.svn\\pristine\\ea\" -I\"E:\\tbapp\\idp.svn\\pristine\\eb\" -I\"E:\\tbapp\\idp.svn\\pristine\\ec\" -I\"E:\\tbapp\\idp.svn\\pristine\\ed\" -I\"E:\\tbapp\\idp.svn\\pristine\\ee\" -I\"E:\\tbapp\\idp.svn\\pristine\\f0\" -I\"E:\\tbapp\\idp.svn\\pristine\\f3\" -I\"E:\\tbapp\\idp.svn\\pristine\\f4\" -I\"E:\\tbapp\\idp.svn\\pristine\\f5\" -I\"E:\\tbapp\\idp.svn\\pristine\\f6\" -I\"E:\\tbapp\\idp.svn\\pristine\\f7\" -I\"E:\\tbapp\\idp.svn\\pristine\\f8\" -I\"E:\\tbapp\\idp.svn\\pristine\\fc\" -I\"E:\\tbapp\\idp.svn\\pristine\\fd\" -I\"E:\\tbapp\\idp.svn\\pristine\\fe\" -I\"E:\\tbapp\\idp.svn\\pristine\\ff\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPThirdParty\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPUI\" -I\"E:\\tbapp\\idp\\IDP\\IDP.vsimporter\\IDP-Headers-WinStore10\" -I\"E:\\tbapp\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\" -I\"E:\\tbapp\\idp\\IDP\\IDP.xcodeproj\\project.xcworkspace\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPLog\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPNetwork\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPParser\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPProxy\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPStats\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPStorage\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPUtility\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Client\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Listener\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Manager\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Message\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Profile\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Rule\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Setting\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\TaskConfig\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseController\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseModel\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseView\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPMessageCenter\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPPluginArchtecture\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPThirdParty\\ASIHttp\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPThirdParty\\FMDB\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPThirdParty\\JSONKit\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPUI\\IDPAnimation\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPUI\\IDPComponent\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPUI\\IDPControl\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPUI\\IDPTransitionAnimation\" -I\"E:\\tbapp\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\Debug\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPCore\\IDPStorage\\innerClass\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMessageFramework\\Client\\Agent\" -I\"E:\\tbapp\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseView\\IDPUIUtility\" -I\"E:\\tbapp\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\Debug\\IDP.tlog\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\MessagePack\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\client\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\common\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\core\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\multi\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\client\\result\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\common\\detector\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\common\\reedsolomon\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\decoder\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\detector\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\encoder\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\multi\" -I\"E:\\tbapp\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\multi\\detector\" -I\"E:\\tbapp\\iosapp\\lib\\opensslLib\\include\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\\io\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\\stubs\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addFreeChance\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addMsgRecord\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addPollPost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addTail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\applyGameCard\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\buyIcon\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\checkPost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\commonlog\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerOff\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerOn\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerPage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\deleteFriend\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\deleteTail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\delMyGameBatch\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\foundNew\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\frsPage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\gameIndex\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getAddressList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getAlbumPhotoList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getBaiduAlbumList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getBawuInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getClientConfig\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getDealerList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getForumForNovel\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getFrsTWLiveList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGambleBetInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGambleResult\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameAdvertise\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameCategory\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameCategoryDetail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameDetail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGiftCommonList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHistoryFineThread\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHotGameList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHotThread\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getIconList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getInterview\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getLevelInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMemberInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMutilGameList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMyPost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getNewGameList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getOrder\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getPoisByLocation\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSingleGameList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSubscribeList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSuggestionByAddrName\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getTails\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getThreadListByTag\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getThreadListByUid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getTodayRecommend\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getUserInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getUserOrder\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getWlConf\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\godFeed\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hideOrOpenUserFeed\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\homePage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hotForum\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hotWords\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\killAd\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\likeBatch\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\liveReport\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\logincard\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\logTogether\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\mbet\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\newVillage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\passFriend\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pbFloor\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pbPage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\profile\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pv\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\queryCollectUpdateNum\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\searchFriend\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\searchGame\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGift\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGiftAndroid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGiftIos\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\setBackground\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\setTail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\subscribe\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\threadList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\topicList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\unlike\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\updateTail\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\userMuteCheck\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\userMuteQuery\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\xiubaExchange\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\xiubaGetOpenId\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\zanCai\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addLabelForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addLiveGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addVipForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\anchorCheckingForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\checkMaskUser\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\clearClientInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitPcMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitPusherCount\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitReceivedPmsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\delGroupMsgs\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\delLabelForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\forumOwnerManageLivegroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getAccessToken\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getGroupMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getHotTWLikers\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLivableForumList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLiveGroupBackgrounds\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLiveGroupLabels\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getOnlineInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getRobotMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWHotBenefitRule\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWHotLiveList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWLiveList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\hasLikeGroupLiving\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\incrHotTWLive\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\incrLiveGroupLike\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\joinLiveGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\livegroupOwnerGag\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\liveReport\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\logStat\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\pullPcMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\pushNotify\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryChatroomTopicList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupCount\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupsByFid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupsByUid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryHotLiveGroups\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLabelForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupByGid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupByGidAndPid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupConfig\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupHistory\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupLikeList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupsByFid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupsByUid\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLivePostConfig\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryOwnerGagList\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryOwnerSpeakers\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryRemindCountForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryUserMemberGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryUserPermission\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\remindUpdateForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\sendCallerMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\sendForenoticeMsg\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\subscribeLiveGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateClientInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateDeviceInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateLabelForLivePost\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateLiveGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateMask\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateMaskInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updatePCClientInfo\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\upgradeMemberGroup\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\uploadClientLog\" -I\"E:\\tbapp\\iosapp\\lib\\pop\\Headers\" -I\"E:\\tbapp\\iosapp\\lib\\pop\\Headers\\POP\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\Components\\TDouPay\\TDouPay\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\libGPUImage\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\Components\\VipCenter\\VipCenter\" -I\"E:\\tbapp\\iosapp\\TBClient\\TBClient\\Components\\Gift\\Gift\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\data\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\lib\" -I\"E:\\tbapp\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\license\" -x objective-c -include \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\TBClient_Prefix.pch\"  -MT \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_30F71474.obj\" -dependency-file \"E:\\tbapp\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_30F71474.obj.d\" -DDEBUG\n. @asimonov-msft May I ask the progress of my issue ?\n. @mukhole Thanks for your reply, I will pay attention to GitHub in time.\n. @mukhole Hi, may I ask you the news of this issue?\n. @mukhole Hi, I got a repro with the latest release version (https://github.com/Microsoft/WinObjC/releases/download/0.1.160407/winobjc.zip). But this time, the error message is error MSB6003: The specified task executable file \"clang.exe\" failed to run. filename or extension is too long.\n. @mukhole Here is the content of the clang.command.1.tlog , as follow:\n^E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\n -cc1 -internal-isystem \"E:\\winobjc\\msvc..\\include\\WOCStdLib\" -include WOCStdlib.h -cc1 -triple i686-pc-windows-msvc -internal-isystem \"E:\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.7.0\\include\" -emit-obj -disable-free -main-file-name TBCPPChuDianImageItem.m -mrelocation-model static -mthread-model posix -mdisable-fp-elim -relaxed-aliasing -fmath-errno -masm-verbose -mconstructor-aliases -target-cpu pentium4 -fdiagnostics-format msvc -fno-caret-diagnostics -dwarf-column-info -coverage-file \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\" -resource-dir \"E:\\winobjc\\msvc\\LLVM-3.6.0\\lib\\clang\\3.7.0\" -fdebug-compilation-dir \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\" -ferror-limit 19 -mstackrealign -fms-extensions -fms-compatibility -fms-compatibility-version=19.00 -fdelayed-template-parsing -fobjc-runtime=objfw -fobjc-dispatch-method=non-legacy -fdiagnostics-show-option -D_HAS_EXCEPTIONS=0 -DWINOBJC -D__WRL_NO_DEFAULT_LIB__ -DWINAPI_FAMILY=WINAPI_FAMILY_APP -D_WINSOCK_DEPRECATED_NO_WARNINGS  -o \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_15F3C4E.obj\" -Werror=return-type -fconst-strings -fconstant-string-class CFConstantString -fblocks -include StubIncludes.h -I\"E:\\winobjc\\msvc..\\deps\\prebuilt\\include\" -I\"E:\\winobjc\\msvc..\\include\\Platform\\Universal Windows\" \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonItem\\TBCPPChuDianImageItem.m\" -I\"Debug\\TBClient-project.hmap\" -D_DEBUG -D_MT -D_DLL --dependent-lib=msvcrtd --dependent-lib=oldnames -O0 -mrelax-all -g -fexceptions -fobjc-exceptions -fcxx-exceptions -fmodules-cache-path=\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\ModuleCache\" -internal-isystem \"D:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\" -internal-isystem \"D:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\ucrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\um\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\shared\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\winrt\" -internal-isystem \"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um\" -internal-isystem \"E:\\winobjc\\include\" -internal-isystem \"E:\\winobjc\\include\\VCInclude\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\sbuild\\Debug-iphoneos\" -I\"E:\\tiebaappwin10\\idp\" -I\"E:\\tiebaappwin10\\idp\\IDP\" -I\"E:\\tiebaappwin10\\idp\\build\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDPTests\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\" -I\"E:\\tiebaappwin10\\idp\\build\\Debug-iphoneos\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPThirdParty\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPUI\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-Headers-WinStore10\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Message\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Listener\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Rule\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\TaskConfig\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Manager\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Setting\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Client\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Profile\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseController\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseView\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPMessageCenter\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPPluginArchtecture\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseModel\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPLog\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPProxy\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPUtility\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPStorage\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPNetwork\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPParser\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPStats\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPThirdParty\\FMDB\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPThirdParty\\ASIHttp\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPThirdParty\\JSONKit\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPUI\\IDPTransitionAnimation\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPUI\\IDPAnimation\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPUI\\IDPControl\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPUI\\IDPComponent\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\Debug\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\Generated Files\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\ModuleCache\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMessageFramework\\Client\\Agent\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPMVC\\IDPBaseView\\IDPUIUtility\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP\\IDPCore\\IDPStorage\\innerClass\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\Debug\\IDP.tlog\" -I\"E:\\tiebaappwin10\\idp\\IDP\\IDP.vsimporter\\IDP-WinStore10\\ModuleCache\\GLF91I\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\MessagePack\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\client\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\common\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\core\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\multi\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\decoder\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\detector\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\multi\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\encoder\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\client\\result\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\common\\reedsolomon\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\common\\detector\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\ZXingLib\\Headers\\qrcode\\multi\\detector\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\opensslLib\\include\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\\stubs\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\ThirdPartyModule\\protocBuf\\google\\protobuf\\io\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getDealerList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerPage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerOn\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\godFeed\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addMsgRecord\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\passFriend\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\searchGame\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\gameIndex\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hotForum\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\buyIcon\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\applyGameCard\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getInterview\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\deleteTail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getNewGameList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMutilGameList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\subscribe\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHotThread\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMemberInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addPollPost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getThreadListByTag\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\deleteFriend\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getMyPost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHistoryFineThread\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\setBackground\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameDetail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\newVillage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getPoisByLocation\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGiftCommonList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\logincard\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGift\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getClientConfig\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\setTail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\zanCai\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\delMyGameBatch\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getAlbumPhotoList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\xiubaGetOpenId\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getOrder\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSubscribeList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hideOrOpenUserFeed\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getAddressList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\checkPost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\logTogether\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\foundNew\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\dealerOff\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\frsPage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\unlike\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getWlConf\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getUserInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\commonlog\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addFreeChance\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\updateTail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\searchFriend\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGambleBetInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\userMuteQuery\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\killAd\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\profile\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getForumForNovel\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pbFloor\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\threadList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\userMuteCheck\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getTodayRecommend\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getBawuInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSuggestionByAddrName\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGiftIos\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getHotGameList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\homePage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pv\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\likeBatch\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGambleResult\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\mbet\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameCategoryDetail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\liveReport\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\pbPage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\queryCollectUpdateNum\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getThreadListByUid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getBaiduAlbumList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\addTail\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\sendGiftAndroid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getSingleGameList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameCategory\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\hotWords\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getUserOrder\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\topicList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\xiubaExchange\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getTails\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getGameAdvertise\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getFrsTWLiveList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getLevelInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbclient\\getIconList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\incrLiveGroupLike\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLiveGroupBackgrounds\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLabelForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getAccessToken\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\livegroupOwnerGag\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\pushNotify\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateMaskInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateLabelForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getHotTWLikers\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitPcMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\uploadClientLog\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupByGidAndPid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\clearClientInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\incrHotTWLive\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupsByUid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getGroupMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addVipForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryRemindCountForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\delGroupMsgs\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\logStat\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\subscribeLiveGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryOwnerSpeakers\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateLiveGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLivePostConfig\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupByGid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWHotLiveList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupsByUid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addLiveGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\checkMaskUser\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupCount\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\joinLiveGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\upgradeMemberGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryChatroomTopicList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getOnlineInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\delLabelForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\anchorCheckingForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWLiveList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\forumOwnerManageLivegroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryGroupsByFid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\addLabelForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitReceivedPmsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupConfig\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getTWHotBenefitRule\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryOwnerGagList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\liveReport\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getRobotMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateClientInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateMask\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLiveGroupLabels\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryHotLiveGroups\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupsByFid\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupLikeList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\pullPcMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\hasLikeGroupLiving\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryUserMemberGroup\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryUserPermission\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updateDeviceInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\sendForenoticeMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\remindUpdateForLivePost\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\updatePCClientInfo\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\sendCallerMsg\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\getLivableForumList\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\queryLiveGroupHistory\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\IDK\\CommonService\\TBCIMService\\TBCProtoBuf\\protolIDL\\tbim\\commitPusherCount\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\pop\\Headers\" -I\"E:\\tiebaappwin10\\iosapp\\lib\\pop\\Headers\\POP\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\Components\\TDouPay\\TDouPay\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\libGPUImage\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\Components\\VipCenter\\VipCenter\" -I\"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\Components\\Gift\\Gift\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\data\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\license\" -I\"E:\\tiebaappwin10\\iosapp\\Application\\ThirdPartyModule\\baiduTTS\\lib\" -x objective-c -include \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\TBClient_Prefix.pch\"  -MT \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_15F3C4E.obj\" -dependency-file \"E:\\tiebaappwin10\\iosapp\\TBClient\\TBClient\\TBClient.vsimporter\\TBClient-WinStore10\\Debug\\TBCPPChuDianImageItem_15F3C4E.obj.d\" -DDEBUG\n. [W] Ignoring unsupported PBXShellScriptBuildPhase\n. [W] Ignoring \"xxxxx\" target with unsupported product type \"com.apple.product-type.app-extension\"\n. [W] Failed to process PBXTargetDependency (B6CFDE7C1AFF25CD00324A13) for \"xxxxxx\" target. Unable to create dependency target in \"xxxxxx\" project.\n[W] Ignoring \"xxxxxxx\" target with unsupported product type \"com.apple.product-type.bundle.ocunit-test\".\n. @winobjc-bot Hi, Is this issue will figure out ?\n. ",
    "mukhole": "@jiaolianxin : We have identified the issue and the fix should make it to GitHub in ~1-2 weeks.\n. Are you still getting a repro with the latest commit?\nExclude subdirectories from recursive search feature was pushed with commit# 645b9330edae885f4c71e2181059155c9b6092e3 which considerably reduces size of command line.\nDo let us know if you still get a repro.\n. This looks like a different issue.\nThe problem is that the file which actually caused the problem is not present in the logs you have pasted.\nWe need your help to get more information on this.\nCould you please follow the below mentioned steps and paste the log file here:\n1. Open your project and go to Tools->Options:\n\n1. In the options menu select \"Projects and Solutions\" from the left hand panel. On the right side under the \"MSBuild project log file verbosity\" select \"Diagnostic\".\n   \n2. Rebuild your solution.\n3. Go to the following path: \n   \"Solution Folder/.vsimporter/-WinStore10/\"\n   Here you will find the log file .log, please share its contents so that we can have a better understanding of the issue.\nThanks.\n. PBXXopyFilesBuildPhase: The path provided does not map to path on Windows (absolute paths are different on Mac and on Windows, framework paths do not exist on Windows etc.) so nothing (or very little) can be done here.\nPBXShellScriptBuildPhase: We do not have sh (shell terminal interface similar to Mac) so nothing can be done here.\nunsupported product type \"com.apple.product-type.bundle.ocunit-test\": We do not support XCode's test framework so nothing can be done here.\nunsupported product type \"com.apple.product-type.app-extension\": We will be investigating this.\n. This has been fixed.\nMaster branch should pick this up in 1~2 weeks.\nClosing this.\n. This will be tracked\u00a0separately.\nClosing this bug.. fileTypeFilter expects an extension so the filter strings should begin with a '.'\nThe only change required to fix your problem is to make the following code change:\n[self.filePicker.fileTypeFilter addObject:@\".xml\"];\nNotice that I am using \".xml\" instead of \"xml\" while assigning the fileTypeFilter.\n. Support for network drives is added, closing this.\n. @ehren +load is not the correct place to call these APIs as COM is not yet initialized for all threads.\nWe suggest you make that call in +initialize method instead.\n. The workaround we have is good enough, closing this.. Update projection binaries: Make protocols with backing implementation publicly available.\n. :shipit:\n. :shipit:\n. Some problem with github, I can see them in gitk.\nLooks like there is a limit to the number of files which can be sent out for review :)\n\nIn reply to: 256469086 \n. The runtime class which implements \"fileTypeChoices\" does not implement IIterable interface and so this type cannot be enumerated. The exception is caused when we try to create an iterator for this type.\nThis has been fixed now.\n. :shipit:\n. @sakrist will it be possible for you to share a small repro code?\nAlso, I am not exactly sure what you mean by \"And DWORD, BYTE, etc. windows types appearing available\". \nDo you mean that they become available?\nIf yes, I don't think that is going to cause any harm.\nMy guess is that this is happening because runtime.h becomes part of two separate modules, which your code imports and therefore, the symbol becomes ambiguous. A repro code will really help to resolve this issue sooner.\n. Checking in this change without waiting for the builds as this binary does not affect the builds in any way.\n. @pradipd is added to the review. #Closed. Yes.\nFor others: TestRuntime.zip is the sample repro code shared by the user who filed this bug.\n\nIn reply to: 265559493 . @jboich ,\nThe first argument to 'make' is an RTObject,\u00a0https://msdn.microsoft.com/en-us/library/windows/apps/windows.graphics.imaging.bitmaptypedvalue.bitmaptypedvalue.aspx will tell you that\u00a0this is System.Object or a PropertyValue.\nThe way you\u00a0create an RTObject from value types is by creating an instance of WFPropertyValue.\nSo the below code\u00a0is what you need:\nimport \nimport \nRTObject rtObj = [WFPropertyValue createInt32:WSFPhotoOrientationRotate90];\nWGIBitmapTypedValue bitmapTypedValue = [WGIBitmapTypedValue make:rtObj type:WFPropertyTypeInt32];\nLet me know if you still have any problem using it.. @spalda2 \nThis namespace is part of ObjCUWP_Windows_RandomStuff.lib, and the linker should get this file automatically when you include WIndowsApplicationModelContacts.h.\nAre you explicitly telling the linker to link against ObjCUWP_Windows_ApplciationModel_Contacts.lib?. :shipit:. Ping,\nStarted a new iteration.\nNatvis file is removed from VS2017 VSIX.\nThe contents of the natvis from VS 2017\u00a0are being merged with those of VS2015 (just NSObject was required).. Fixed.. They are there, you just cannot see them on github because of the large number of files modified.\n\nIn reply to: 276532250 . Blocked on bug#2319. I changed the header RTHelpers.h which is used by all the projection binaries.. We are making this change to avoid allocating NSAutorelease objects each time we dispatch a runtime call or invoke a callback.. Fixed.. MSAds is now part of WinObjC.Frameworks.UWP.. agreed.. :shipit:. Fixed.. This is phase 1 of the implementation, in this we generate a single solution for all meta data files using our tool.\nPhase 2 will have separate solutions and then we will have only MS Ads binaries.\n\nIn reply to: 285151637 . This will be fixed as a part of task\u00a0https://github.com/Microsoft/WinObjC/issues/2346 which will make the required headers public and expose them using nuget packages.. I removed \"_\" because I was hitting command line string limit when I tried to restore packages.\nA bug is filed on Nuget team.\nThe comment of getting a null string refers to nsStrToHstr method.\n. @DHowett-MSFT, Yes the binary and the required DLL gets packaged to WinObjC-tools package and gets installed with it.. Yes, I misunderstood the way webview loads.\nWill update and send another PR. #Resolved. The PR is updated.\nNow we use webViewDidFinishLoad delegate callback to update the buttons displayed on toolbar.\n\nIn reply to: 92525226 . ",
    "decademoon": "+1\n. ",
    "yiyang-msft": "Hi, Please try latest drop, especially make sure it contains this change 568a9ec270114def684684de6dcc6e9f41a604be. it should fix your issue. I tried my repro but failed. \nThanks\nYi\n. Hi, I created textview programmatically with black background with white text, but it renders properly in my repro. Could you post the few lines how you create the textview during the repro so I can try on that. \nThanks\n. Hello,  \nI am trying to get a repro. Could you give me a little bit detail? \nDid you attach any other additional gesture recognizer to the object other than the UITapGestureRecognizer? \nThanks\n. Thanks, We got a repro and understand the issue. Look into potential fixes.\n. :+1:\n. fixed with 1ec1a845a36aa18f053058d39c25db1423c84dfc. . fixed with 1ec1a845a36aa18f053058d39c25db1423c84dfc. :shipit:\n. :shipit:\n. Hi, @pittmab, \nI merge your code into a new pull request #1909, would you mind taking a look?  The gesture code has gone through significant changes since this request.  It would be a loteasier for me to pull your code into latest code and working on top of it. \nThanks\nYi. Hi, \n  I am trying to understand the issue here. would you mind giving me a little more info on your repro. It would be great if you can give me some more info. \n1. what is the contentInset config on your UIScrollview view? \n2. when you do pan/zoom. what do you mean by \" we pop to the contentInset and have to pan to get back to where we started. \"?\n. I can not repro this issue, please re-activate this issue if you have a repro.. :shipit:\n. :shipit:\n. yes, we do. In WoCcatalog, the textview is a good example of gesture attached to subview get fired first and DM will be cancelled. and also, when DM gesture started, it can be chained to upper UIScrollview as well.\n\nIn reply to: 258266383 \n. :shipit:\n. > ```\n\nreturn [WADClipboard getContent];\n\n```\n\nyes.\n\nIn reply to: 260031179 \n\nRefers to: Frameworks/UIKit/UIPasteboard.mm:60 in 06eeb5a. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\n}\n\n```\n\nnit:existing. extra line #Resolved\n\nRefers to: Frameworks/UIKit/StarboardXaml/StoryboardManager.cpp:266 in 814a131. \n. > ```\n\n    int height = snapshot->PixelHeight;\n\n```\n\ncan delete? #Resolved\n\nRefers to: Frameworks/UIKit/StarboardXaml/LayerAnimation.cpp:157 in 814a131. \n. :shipit:\n. :shipit:\n. > ```\n\n    self.shapeLayer.lineCap = kCALineCapRound;\n\n```\n\nno change on this file? #Closed\n\nRefers to: samples/CoreAnimationTest/CoreAnimationTest/CAShapeLayerViewController.m:150 in edbd6c7. \n. :shipit:\n. :shipit:. :shipit:. :shipit:. adjustTextLayerSize is being renamed as _updateXamlElement. _updateXamlElementWithAdjustedFont is break out to smaller functions and setting correponding properties only calls into corresponding smaller functions. e.g., setTextColor only setting color and only calls setNeedsDisplay.. fixed with 6fcf514c273d32104026c0a973a10ca84d36a5f3. fixed.. :shipit:. :shipit:. :shipit:. where _CreateWoosh gets disabled? . and may need a work item on that.\n\nIn reply to: 266920587 . :shipit:. :shipit:. :shipit:. fixed.. checked in the revert which causes this issue.. checked in the revert which causes this issue.. fixed.. >     [curController autorelease];\ncan we use strong here? \n\nRefers to: Frameworks/UIKit/UIViewController.mm:1237 in 2ca7f9d. . >         if ([self parentViewController] != nil) {\nwe could combine, but need comments here why we early return. \n\nRefers to: Frameworks/UIKit/UIViewController.mm:1225 in 2ca7f9d. . >         [curController dismissViewControllerAnimated:animated completion:completion];\ndo we need need earlier return?\n\nRefers to: Frameworks/UIKit/UIViewController.mm:1246 in 2ca7f9d. . Fixed with 78259bd9686dc0e8a741ecec6a67f35505b3b7d9. The setter is correct based on the semantics of XAML scrollviewer. We fixed the getter to match the setter.. :shipit:. in reality, The table view content are too small to scroll in order to display the wrong behaviour, but i fixed them anyway in case they will grow over the time.\n\nIn reply to: 271725366 . >     _toolBar = _toolBar;\nexisting, mind put a todo here to determine why we are doing this?\n\nRefers to: Frameworks/UIKit/UINavigationController.mm:491 in 46331d9. . :shipit:. :shipit:. :shipit:. :shipit:. I have tested\u00a0the latest develop on phone\u00a0with/without label.adjustsFontSizeToFitWidth = YES; and also,\u00a0I also tested\u00a0develop before f0ba901226e73b50e67ef5972b8548b9ab4a5dcd which\u00a0fixed the linebreakMode in UILabel. in all my testing, I didn't see\u00a0a repro of the above issue\u00a0- that is the description didn't get rendered.\u00a0\nScanning the history I don't see any other change in between 08b3fbc0c1d53df16f3e6430f633e3e9f95f367f (commit when issue reported) and d294d7c1e5c6839d69b27f6393523644a99b4834\u00a0(now)  could possible impact UILabel other than f0ba901226e73b50e67ef5972b8548b9ab4a5dcd. With that, I closed this issue as not repro..  f0ba901 is when I fixed the UILabel, I synced back to commit earlier than that\u00a0and\u00a0I saw the description gets wrapped on phone, which is the bug  f0ba901 to fix. but description still shows up for me, instead of not showing anything\u00a0- this is with/without label.adjustsFontSizeToFitWidth = YES.. :shipit:. :shipit:. this is same issue as #1711. . :shipit:. :shipit:. :shipit:. fixed.. pushed.. :shipit:. :shipit:. >     [super dealloc];\nstill need keep this? otherwise, super will not be called? \n\nRefers to: Frameworks/UIKit/UIButton.mm:815 in 5ba191e. . :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. @jaredhms , i will close this pull request and re-evaulate.  @rajsesh-msft, i will take the bug #1865. Since this change alone does change the delegate firing sequence. We could potentially need do that for all delegate call in order to presverve the right ordering.. fixed with e2d09d550ab61e0b8987d427864801fdccd230ec. fixed with 6fcf514c273d32104026c0a973a10ca84d36a5f3. > - (bool)_processGesturesForTouch:(UITouch)touch event:(UIEvent)event touchEventName:(SEL)eventName {\ntotally agree we need add a lot more tests on gestures, including their state transit machine machinery.  let me think about your recommendation.\n\nIn reply to: 277849691 \n\nRefers to: Frameworks/UIKit/UIView.mm:137 in 155e8cb. . > - (bool)_processGesturesForTouch:(UITouch)touch event:(UIEvent)event touchEventName:(SEL)eventName {\nadded initial set of tests. \n\nIn reply to: 278187976 \n\nRefers to: Frameworks/UIKit/UIView.mm:137 in 155e8cb. . > @protocol UIGestureRecognizerDelegate;\nthis foward declaration requires whoever include UIGesutreRecognizer.h also need include UIGestureRecognizerDelegate.h, otherwise, runtime could potentially run into AV when looking for delegate's optional method. According to Dustin, class and its delegate should be declared in the same header. \n\nRefers to: include/UIKit/UIGestureRecognizer.h:47 in 5b14f8d. . :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. fixed with 6fcf514c273d32104026c0a973a10ca84d36a5f3. fixed with 6fcf514c273d32104026c0a973a10ca84d36a5f3. . The first search bar didn't set the delegate thus do nothing. If you try the second one with cancel button, it sets the delegate and will clear the text. Thus this is by design. However, i will enhance the app to make it clear what the expectation is.. :shipit:. > \nported the expected result generation code into VC and add comments\n\nIn reply to: 285197324 \n\nRefers to: tests/functionaltests/Tests/UIKitTests/Assets/uilabel-ios.xml:3 in a0db61f. . > UIKIT_XAML_EXPORT IInspectable* XamlGetFrameworkElementSublayerCanvasProperty(const Microsoft::WRL::ComPtr& targetElement);\nok, for now, keep it.\n\nIn reply to: 287425670 \n\nRefers to: Frameworks/UIKit.Xaml/ObjCXamlControls.h:80 in 6aa23ea. . :shipit:. :shipit:. :shipit:. 18e570babc3efeda4141e431e764d5dc4adf06b7 conclude this task.. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. >  @Status Stub\ndid a pass. please take a second look.\n\nIn reply to: 292037260 \n\nRefers to: Frameworks/UIKit/UITextField.mm:827 in 480449a. . correct. but it was considered safer to do #2435 to unblock the master. . Fixed issue #2434. FunctionalTests hang due to use of wrong macros . Fixed issue #2434.. :shipit:. :shipit:. :shipit:. :shipit:. Hi, @esa-h \nTo disable IsThumbToolTipEnabled yourself, you can utilize one of extensions property that is provided in UIView.h.  We will evaluate and consider changing this to default in the future. \n// WinObjC Xaml Extensions\n@interface UIView (UIKitXamlExtensions)\n+ (RTObject)createXamlElement;\n- (instancetype)initWithFrame:(CGRect)frame xamlElement:(RTObject)xamlElement;\n// To use this object, it must be cast to the appropriate type using rt_dynamic_cast,\n// like so:\n//   RTObject rtobj = [myUITextField xamlElement];\n//   WXCTextBox xamlTextBox = rt_dynamic_cast(rtobj);\n//   NSLog(@\"The text is %@\", xamlTextBox.text);\n@property (nonatomic, readonly, strong) RTObject* xamlElement;\n@end\nSo in your case, you can disable the tooltip by do this. \n   RTObject rtobj = [myUISlider xamlElement];\n   WXCSlider xamlSlider  = rt_dynamic_cast(rtobj);\n   xamlSlider.isThumbToolTipEnabled = NO;\nFor your root problem - \"My problem is that some of my sliders should only show integer values or no values at all in the thumbtooltips\", can you give us the your config of your sliders - e.g., min/Max range etc and its bounds, so that we can repro it and trying to fix them in our side? \nThanks\n   . @esa-h, \nas part of  #2706, i disabled the tooltip on UISlider. so once we publish it master on next release, you will get it for free. Hope this helps.\nThanks\nYi. Could you elaborate your scenario - when user change the aspect ration of a screen and then click outside of app window, what you are trying to achieve? \nwhen user clicks/taps outside the app screen, the app lose focus, are you trying to detect if the app is about to lose the focus and thus acting on something? . > <Grid\nyeah, so the naming conventions that we established here for UIkit.xaml is that \"UIContorl\" in UIkit is mapped to \"Control\" in UIkit.xaml\n\nIn reply to: 296847032 \n\nRefers to: Frameworks/UIKit.Xaml/ProgressRing.xaml:1 in ea5027a. . :shipit:. call stack: \n    [External Code] \n    libobjc2.dll!objc_exception_throw(void * object) Line 134   C++\n    ObjCUWPWindowsApplicationModelDataTransfer.dll!wil::details::ReportFailure(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, void * returnAddress, wil::FailureType type, HRESULT hr, const wchar_t * message, details::ReportFailureOptions options) Line 3144 Objective-C++\n    ObjCUWPWindowsApplicationModelDataTransfer.dll!wil::details::ReportFailure_Hr() Line 3165   Objective-C++\n    ObjCUWPWindowsApplicationModelDataTransfer.dll!wil::details::in1diag5::_Objc_Throw_Hr(void * callerReturnAddress, unsigned int lineNumber, const char * fileName, const char * functionName, const char * code, HRESULT hr) Line 4743   Objective-C++\n    ObjCUWPWindowsApplicationModelDataTransfer.dll!+WADClipboard flush Line 1161 Objective-C++\n\nUIKit.dll!+UIPasteboard _setStringToClipboard: Line 570 Objective-C++\n    UIKit.dll!-UIPasteboard setString: Line 526 Objective-C++\n    WOCCatalog.exe!-UIPasteboardViewController onCopyTextChanged: Line 208    Objective-C\n    Foundation.dll!-NSObject performSelector:withObject:withObject: Line 282    Objective-C++\n    UIKit.dll!-UIControl sendAction:to:forEvent: Line 120   Objective-C++\n    UIKit.dll!-UIControl sendActionsForControlEvents: Line 157  Objective-C++\n    UIKit.dll!__\u0001??R@28-[UITextField _initTextBox:]UITextField@@QBE?A?@@ABUIInspectable@Foundation@Windows@winrt@@ABUTextChangedEventArgs@Controls@Xaml@UI@56@@Z_block_invoke() Line 1423   Objective-C++\n    libdispatch.dll!_dispatch_call_block_and_release(void * block) Line 124 C\n    libdispatch.dll!_dispatch_continuation_pop(dispatch_object_t dou) Line 415  C\n    libdispatch.dll!_dispatch_queue_drain(dispatch_queue_s * dq) Line 1548  C\n    libdispatch.dll!_dispatch_queue_serial_drain_till_empty(dispatch_queue_s * dq) Line 1405    C\n    libdispatch.dll!_dispatch_manual_queue_drain(dispatch_queue_s * q) Line 107 C\n    libdispatch.dll!dispatch_main_queue_callback() Line 309 C\n    Foundation.dll!-NSRunLoop(Internal) _processMainRunLoop: Line 502   Objective-C++\n    Foundation.dll!_ProcessMainRunLoop() Line 66    Objective-C++\n    Foundation.dll!??R@?_DispatchMainRunLoopOnUIThread@@YAXH@Z@QBEJXZ() Line 79   Objective-C++\n    Foundation.dll! ?? :: ?? ::Invoke() Line 240    Objective-C++\n    [External Code] \n. hr 0x800401d0 : OpenClipboard Failed. It seems we ran into a Platform Clipboard bug here, which result in clipboard failed to open and thus flush. Previously we don't see this and this might be the result of newer platform built.. We can provide work-around and move the bug to platform team, but I don\u2019t believe this bug is blocking. . :shipit:. :shipit:. :shipit:. fixed.. #2681 is used to track the work of long term solution.. also adding the fix for https://github.com/Microsoft/WinObjC/issues/2704 #Resolved. :shipit:. :shipit:. we have some logging improvement and extend the test starting time after VC is presented to 2 seconds ( instead of 0). Today's daily build, Test passed in both legs. We will re-activate if the issue repro again, hopefully we have more logs to analyze.. > Ignore \n\nDid this test is ignored when executing? why? #Closed\n. > Ignore \nwhy? #Closed\n. > accessibilityIdentifier \nwhere is this being used? \nI don't see other sliders need this in this file.  #Closed\n. remove? #Resolved\n. i can revert the change here and wait for your change to come in. but this is going to leave corresponding issue hanging around a little longer given ux/uxe will probably take longer to arrive develop. On the other hand, for the merge conflicts that is going to occur if I leave this change here, you can just reject mine and accept yours when merging since you already have equivalent?  Let me know what you think. I can do either.\n\nIn reply to: 86420400 \n. like that\n\nIn reply to: 86440003 \n. the current form is actually better. notice default is true. If remove send, the conditional clause becomes much more complex and not clear. \n\nIn reply to: 86438414 \n. > CGFloat \naccidental, i will revert. #Resolved\n. yeah.\n\nIn reply to: 86598268 \n. you mean StrongId _routedEventArgs;? StrongId here is to make sure UITouch has the same life time for routedEventArgs, as we see in multiple-finger gesture cases, routedEventArgs can be become invalid though UITouch is still valid. Still a mystery to figure out why. But copy won't solve this problem either plus add additional cost.  \n\nIn reply to: 86604604 \n. > TraceVerbose \nif verbose might put in if(verbose) otherwise traceWarning? \n. nit: may consider check if fromLayer == toLayer, if so, return the point directly? \n. Thanks! #Resolved\n. > (CGRect)convertRect:(CGRect)pos fromLayer:(CALayer_)fromLayer toLayer:(CALayer_)toLayer { \nThanks! #Resolved\n. > XamlSetFrameworkElementLayerProperties \nit is bit inflexible if we need setting new layer properties.  might consider passing a dictionary contains key/value as the second param? #Resolved\n. > _xamlWebControl = nil; \naccording to Dustin earlier, this should not be required for StrongId #ByDesign\n. > _grabStreamFromUIImage \nin WocCatalog, the last test is copy and Paste. please run through that to make sure image copy & paste is still working.\n. > _grabStreamFromUIImage \ni can not find my early comment. Please test this with WoCatalog copy and paste scenario to make sure image copy and paste is still working. Thx #Resolved\n. CF is behaving strangely. now i saw earlier comment. close this one.\n\nIn reply to: 87309387 \n. i am changing its value, not sure what do you mean?\n\nIn reply to: 87522391 \n. nothing special. For those three supported types, we can copy them them. but for the others,  we can not. I can change it to the other way to make it look better.\n\nIn reply to: 87522974 \n. yes. \n\nIn reply to: 87639301 \n. true. removed. the behavior was a surprise to me \n\nIn reply to: 87639485 \n. it returns an empty array just like us.\n\nIn reply to: 87641421 \n. used [NSMutableArray array] given reference platform return empty array.\n\nIn reply to: 87644267 \n. Thx! we discussed here, use 3 and added comment to make it obvious\n\nIn reply to: 87642571 \n. > arrary \ntypo #Resolved\n. one #Resolved\n. no problem. you are right. should use attach.\n\nIn reply to: 87678981 \n. > LayerCoordinator::SetValue(newLayer, \"size\", LayerCoordinator::GetValue(layer, \"size\")); \nit wasn't obvious to me if this is not working or optimization?  #Resolved\n. do we even need this given we setContent using layer->Width/Height below?  #Resolved\n. > = \n==? #Resolved\n. Thanks! #Closed\n. > setDisabled \nnit: feels setEnabled is more aligned. #WontFix\n. > NO \nshould this be !disabled? #Resolved\n. from reference doc. When animating is stopped, the indicator is hidden, unless hidesWhenStopped is NO.\n\nIn reply to: 88730717 \n. definitely not.\n\nIn reply to: 88730797 \n. >ObjectType \nwhat is the difference between these two usage? . indeed strange. we will re-visit its usage pattern later though.\n\nIn reply to: 90150584 . I have a repro and a test case in progress. will check it in separately.\n\nIn reply to: 90150570 . >[caLayerVC view]; \nmind adding a comment this line why we need this? #Resolved. >__block \ndo these have to be __block? #Closed. no one changes callbackToken? #Resolved. >backingElement \nso if callback didn't fire for some reason, are you leaking this? #Resolved. may as well move this outside of dispatch and use __block WXUIElement* backingElement =nil;\nand do creation and retain as usual\nand release at the end after check if backingElement is not nil. or better \n    auto reset = wil::ScopeExit( {\n        if(backingElement) {\n             [backingElement release]\n        }\n    });\n\nIn reply to: 90351052 . >isn't captured \nwhen it is nil, is it because the touch get cancelled? . changes in CAAnimation/LayerCoordinator already merged?. sorry, changes in UIButton/LayerCoordnator\n\nIn reply to: 92522383 . >realPopoverPresented \nwould be great if we have some comments here to clarify why we have different code path for dismiss. >[curController _onDismissCleanup]; \nshould this be moved to end of the function? because we still see curController being used below.. it is strange these clean up have to be done here.. >_setPropertyForLayer \nmind adding  a comments why moving it down this is necessary? #Resolved. both insertion/deletion case will be guarded by this newly added check, the code right above updated the cached value when insertion/deletion happens via text/password changed listener. we so when it comes down to the newly added check, the evaluation will be true and thus no-op.  \n\nIn reply to: 94637079 . _prompt == prompt will do the comparison for string . length check if for nil and empty\n\nIn reply to: 94880288 . Yay! #Resolved. >-Wnullability-completeness \ncurious, what warning this turns off? #Pending. in UITableViewInternal.h, it defines \n- (void)_cellSelectedUp:(UITableViewCell*)cell; #Resolved. >strongSelf \nthanks!. >\\ \nnit: / #Pending. These are still going through manual verification through XAMLCatalog. we can add more functional test once the pattern is fixed. I believe Oliver is still working out the detail how functional test/XAMLCatalog can share viewcontroller code. Once the contract is defined. we should be able to start to author more automated tests. \n\nIn reply to: 95400508 . yes ;/\n\nIn reply to: 95470285 . good idea\n\nIn reply to: 95474383 . not yet.\n\nIn reply to: 95474033 . referencing platform expose the same issue. ;/, so it is app issue.\n\nIn reply to: 94885465 . reference platform has the same issue.\n\nIn reply to: 94888495 . > testView.backgroundColor  \nnit: can we add a test for nil color?  #Pending. >UIImagePNGRepresentation \nin WOCCataglog, there is copy and paste page which contains copying / pasting graphic data. minding test that?  #Closed. >UIImagePNGRepresentation \nany test for this since it is marked as Interoperable #Closed. i am not clear if it is a bug when you say I have test for it but looks like our PNG representation ends up being a bit off vs the actual PNG data on disk or simply we need regenerate the test artifact so that the test can pass? \nwhen you say update the CR, i was expecting another iteration potentially with above test update? \n\nIn reply to: 96090810 . >objForKey \nexisting, never used?. because it might be a value that is handled. as you second comment pointed out, i added a warning message in such case.\n\nIn reply to: 95921835 . as much as I like to do that, but only define 4 as a const didn't really make the readability better because we still have other values like 0/1/2/3 for linkBreak in UILabel. and the same property can be used elsewhere, like UIButton. What should happen is that we define enums like UIKit implementation does so that meaningful enums can be used across the board. but this is out of scope of this change. let me know if you disagree.\n\nIn reply to: 96054766 . 0 is for this purpose. but i change some 0 to value > 1 to make that clear\n\nIn reply to: 96056109 . will file one before push.\n\nIn reply to: 96538840 . >UIApplicationInitialize \nshould this be UIApplicationInitializeFunctionalTest? #Resolved. >UIApplicationInitialize \nand here as well? #Resolved. > Investigate fat-fingers \nwhat does this mean?  #Resolved. > (void)dealloc { \nnit: can be removed? #Resolved. should this be moved into UIControl?  #Pending. we can call [self setHightlighted:currentTouchInside] to reuse some logic in UIControl.\n\nIn reply to: 96944367 . not sure worthwhile to check in these changes. #WontFix. >E:/GIT_REPOS/winobjc/ \nalso this file. seemed related to different user config. should we check this file in at all?  #WontFix. >GIT_REPOS \nsame here. #WontFix. >//[NSThread sleepForTimeInterval:3]; \nnit: can we do something like if (timeout != 0) and then [NSThread seelp]. and define timeout as 0 on top. so user does not have to uncomment multiple places if they want to turn on timeout #Resolved. >viewDidLoad \nnit; would be nice to have comments to describe the config of test view controller itself.  #Resolved. use  _updateXamlElement and updated #1497\n\nIn reply to: 97386744 . i was wondering so. I changed to <=, seems more logical. \n\nIn reply to: 97387666 . the starting point can be randomly chosen. I don't have strong opinion where to start. I changed it to max.\n\nIn reply to: 97402423 . I got rid of it and adding additional test case for multi-line adjustWidthToFit. \n\nIn reply to: 97388485 . because this function intend to fit the string to rect without truncation, even if you set linbreakMode as trailing or any other truncations, we still should not truncate the string with larger potentially font, but should try to fit the string with smaller font without truncation if possible.\n\nIn reply to: 97389805 . >[textField resignFirstResponder]; \nno need for this. #WontFix. >textButtonNormal \ntextButton or textField? #Resolved. > // Ensure that the XAML color values match the viewcontroller property \nwhy we care given above verification confirmed backingxaml color is the same as its outter UIButton? #Closed. if the delegate return TRUE, it should dismiss keyboard.  Is it not the case?\n\nIn reply to: 97799074 . apparently you have to do it youself. nvm\n\nIn reply to: 97840037 . >marker \nwasn't quite sure how these are used coupled with autolayout, we can sync offline. #Resolved. >autorelease \nis there anything preventing us from turning on arc on UIButton/UILabel? #Resolved. > probably safe to do in all cas \nagreed. #Resolved. Awesome! Thanks for pushing this!\n\nIn reply to: 97875917 . I added three tests in XamlCatalog, which change the minimum font size to illustrate adjustFontSize behavior is different when we can not find the fit font. Search for. \n // number of Lines = 2, unlimited, 3 and adjustFontSize YES, TailTruncation, change minimum size to different values\n\nIn reply to: 98052549 . i c. let me do that in UILabel work in this comming iteration. I am expecting a lot more tests will be written for UILabel. and this function should be move to somewhere that can be shared by multiple controls.\n\nIn reply to: 98065011 . >Wait \nnit: \ni feel we can change the name to something like TimeoutIn(seconds). returning true when timed out, false otherwise. so the test can be written as \nASSERT_FALSE_MSG(uxEvent->TimeoutIn(3), \"porperty change didn't happen within 3\"\ncurrent way of naming wait is bit unclear what return value (true/false) stands for\nASSERT_TRUE_MSG(uxEvent->Wait(c_testTimeoutInSec), \"FAILED: Waiting for property changed event timed out!\");\n#Resolved. ncie: so much shorter! #Resolved. agree wait is more aligned, it is just return is unclear \nif read \nASSERT_TRUE_MSG(uxEvent->Wait(c_testTimeoutInSec), \"FAILED: Waiting for property changed event timed out!\");\nI feel uxEvent->Wait isn't clear enough for reader to know what the expectation is. should we expect true or false. \n\nIn reply to: 98268635 . @ , on retrospection,  return true if the wait succeeded, not if it timed out. is consistent across the board, even with iOS. so i am totally ok with that. \n\nIn reply to: 98278040 . >UIButton \nunrelated:  in UIView.mm, line 758, is it also another misusage?\n// Subscribe to the XAML node's input events\n__block UIView* weakSelf = self; #Resolved. interesting, block will +1 for reference count in arc but not for non-arc case.\n\n\nIn reply to: 98295339 . >dispatch_async \nmy only concern is that we probably should dispatch_async all delegate calls if we do this, otherwise, the sequence between this and those which used to fire after this might be changed. But This might or might not, unfortunately we don't have enough apps to tell.  I 'd prefer to work-around this on app given this is xaml framework issue based on commucation. \nThoughts? . >true \nrevert #Resolved. >tive \nclang-format #Resolved. >+ 1 \ncomment, why + 1? #Closed. seems this can be combined into setUpWithView:andTitle? #WontFix. >if (size.height == 0.0) { \nno wonder with this, it works. :) #Resolved. there is no default for adjustFontToFit, it is either false or true. depending on whether or not you set minimum font size or minimum scale. if set, it is true. otherwise false. both xib and storyboard uses this contract.\n\nIn reply to: 99473218 . weird, some change is missing from my CR.\n\nIn reply to: 99672319 . yes. they are different and separate and independent of each other.\n\nIn reply to: 99672980 . yes, comments added.\n\nIn reply to: 99712340 . @alballw@microsoft.com , make sense.\n\nIn reply to: 99671953 . also,please verified with MM. check with the introduction label on first screen.\n\nIn reply to: 99942712 . using Began and Changed to make sure it is active.\n\nIn reply to: 99713207 . tighten it more, only allow possible state. see comments for reasoning.\n\nIn reply to: 99711043 . >reply \nrely #Resolved. fortunately no. _resetAllTrackingGestures is a switch basically guard against rebuid. if _resetAllTrackingGestures is set to TRUE, normally gets set when all finger lifted off screen.  Otherwise, once it sets to FALSE, stay as FALSE until reset.\n\nIn reply to: 100588999 . through testing. doc didn't say anything.\n\nIn reply to: 100627710 . Good point. I move this directly from earlier implemention. on reflection. this should matter. I am adding DMGesture into tracking list as well (renamed to __gestureTrackingList which holds all gestures. Not only it guarantee the order, but also simplify the code a lot.\n\nIn reply to: 100589248 . code refactored\n\nIn reply to: 100627188 . it did. \n\nIn reply to: 100622933 . UIGestureRecognizerStateCancelled matters for [self _fire].\n\nIn reply to: 100620762 . i think so.\n\nIn reply to: 100621728 . >$(MSBuildThisFileDirectory) \n$(MSBuildThisFileDirectory) #Resolved. $(MSBuildThisFileDirectory) #Resolved. >Fire regular gestures first \nmistmaching comments #Resolved. >!enabled \nsutble #Resolved. sweat! #Resolved. >directly from the Xaml \nso close! #Resolved. >self.titleLabel.text = self.currentTitle; \nshould we check if current state is the title state before updating this? #Resolved. >self.titleLabel.textColo \nsimilar question as title state. #Resolved. >// TODO: Should we be asking our label for its intrinsicContentSize? \nI guess not. \nintrinsicContentSize\nThe natural size for the receiving view, considering only properties of the view itself.\nhttps://developer.apple.com/reference/uikit/uiview?language=objc\n. sorry. I mean, when I setTitle for dsiabled state, but button current state is normal. and i still end up with updating the title for normal state?\n\nIn reply to: 100653158 . wish the doc is more clear, looks good candidate for an experiment later.\n\nIn reply to: 100653270 . got you, setting value on other states might impact current state title, you need re-evaluate.\n\nIn reply to: 100653762 . Oh,  i think i missunerstand your point earlier.\nIt is a little weird why we are not asking TitleLabel for its size, instead, we are using the sizeWithFont with that string. This does not make sense. some of properties on UIButton such as linkbreakMode is just a pass through to UILbael.\n\nIn reply to: 100653705 . and i guess we have not run into a button which should display two line of text yet. :)\n\nIn reply to: 100654429 . yeah, the code is simpler. I was a little worry involved UIView would potentially complicates the stuff. But it is not the case.\n\nIn reply to: 100647687 . >dispatch_async(dispatch_get_main_queue() \nisn't this event firing on UI thread? do you need dispatch again? #Closed. just to confirm. we don't have to add any \"connector\" code here any more? or is connector code being put somewhere else? which i didn't find. #Closed. >whiteColor \nis whiteColor our contract for titleColor for default (normal) state for Default type UIButton? \nI was playing around and seems The ios contract is that normal state title color for normal state for default type of UIButton is default to Tint Color which is set to Blue for UIButton. or at least this is on iOS 10. #Resolved. >40.0f \nare these defauts, if so, we should define them. #Pending. wait, i thought default button is using UIButtonTypeSystem, yes, the blue color i was talking about is for UIButtonTypeSystem button. \n\nIn reply to: 100697674 . ok. cool.\n\nIn reply to: 100864193 . we should make that calculation (contract) clear. otherwise, if the test failed with a value, let us say 41. it becomes difficult to track down it is our contract failed vs impl regression?\n\nIn reply to: 100697740 . #1961\n\nIn reply to: 100935659 . is this to make sure that border's zindex is bigger than sublayer thus display on top? . >stretch \ninit stretch to CGRectZero should avoid the issue as well. i have seen some code pattern like that in our code base.. typical think too fast or type too fast.\n\nIn reply to: 103579177 . >CGAffineTransformMake \nmind adding a comment calling out why this this transform is needed so that other people without the context can understand the reasoning behind. Thx!. yep. re-grouped.\n\nIn reply to: 104796907 . Push it to a background thread allows main thread to be responsive  while test enumeration is going on. \n\nIn reply to: 104797832 . my intention is to only exercise a test config when user finishes the editing - thus when textFieldEditDidEnd, not UIControlEventEditingChanged which TestEnabledUITextField supports. So i don't want to execute unnecessary tests in manual mode (imaging user typing in font size 7 and 8 and tests executed for 7, and 78, which is not what i want. I only want test execute for 78 when user exit editing.  In auto execution mode (functional test), the test itself enumerate all config and after finishing last config (e.g., fontSize), and tests knows it can start to execute the API call or start verification since all configs have been set and it does not have to reply on any events to trigger verification.\nDoes this make sense? \n\nIn reply to: 104793428 . sure :)\n\nIn reply to: 104797653 . this is already supported by UITextField, so i don't have to add anything? \n\nIn reply to: 105040618 . UNIMPLEMENTED_WITH_MSG has been added in ApplyLineBreakModeOnTextBlock in XamlUtilies.mm\n\nIn reply to: 105034771 . correct, that is already part of this VC.\n\nIn reply to: 105046901 . yep. i ran into some strange linking error which i can not figure out when include xamlUtilities. For now, i am moving this helper to UXTestHelpers.\n\nIn reply to: 104798275 . let me know if my explanation in the other comment didn't cover this.\n\nIn reply to: 104796150 . color are added for visual cue to know where the boundary is. removed.  \n\nIn reply to: 104794999 . agreed. now we are consistent.\n\nIn reply to: 105047481 . already seen some pretty good perf gain after addressing #1497.\n\nIn reply to: 105066550 . addressed #1497\n\nIn reply to: 105066693 . Yes, this is in _InitUILabel, thus default. \n\nIn reply to: 105781932 . fixed. #Resolved. Got you. good idea.  Fixed. #Resolved. Yeah. it maybe some special behaviour for TextBlock. I can take a look at this separately since this is existing code. #Pending. _scrollViewer is initialized using  scrollViewer.  \n\nIn reply to: 106549343 . I spent quite some time on this and i could not get it working if i don't do this. It reports could not find this property? is there any trick here? \n\nIn reply to: 106705678 . since these are completely removed in the new implementation, so definitely improvement. \n\nIn reply to: 106568739 . I see. i believe that is why the attached property line is required! \n\nIn reply to: 106708779 . good idea. i was a little hesitant here regarding the name. \n\nIn reply to: 106712808 . public interface class ILayer  is defined in there. Might as well move it out.\n\nIn reply to: 106713163 . actually, this is get the scrollViewer from the Grid. So there isn't confusion here.\n\nIn reply to: 106713268 . yeah. The creation part is a little confusing - meaning it returns Grid instead of Scrollview.  But i guess that is the price that we need to pay before projection is ready.\n\nIn reply to: 106713161 . per discussion. removed ZoomMode but keep roomFactor.\n\nIn reply to: 106711820 . so this conclusion is not valid any more? . >UIViewContentHuggingPriority \nis this bogus? just curious #Pending. > 6 \nwhat 6 stands for?  #Resolved. nvm, this just refactor the existing code. i wish old code have some comments there.\n\nIn reply to: 107232314 . >x:Bind \nany known issue with xBind?  #Pending. we don't adjust the height when height is smaller because you don't want to stretch the height vertically - which is current hehavior.\n\nIn reply to: 108253765 . >WXCTextBlock* textBlock = nil; \nsuper nit: move closer to its usage. #Resolved. nvm. :S\n\nIn reply to: 108989240 . removed bunch of them. and correct the annotations.\n\nIn reply to: 110058933 . actually SecureTextEntry is what reference platform is using for SecureTextMode. so i will keep it.\n\nIn reply to: 110059600 . for the same reason.SecureTextEntry is what ref platform using.\n\nIn reply to: 110059624 . in comments of original issue, UIRefreshControl has been called out to miss this as well. Mind adding UIKIT_EXPORT_CLASS  too to UIRefreshControl?  . > \nnit: bug# #Resolved. >point \nwhat is wrong to return StubReturn for CGPoint/CGRect etc? #Resolved. >_sizeUIWindowToFit \ni could not find sizeUIWindowToFit on ref doc. and it seems we only cache a value and did not do anything using it anyway?  #Pending. > \nnit: bug# #Resolved. >RunSynchronouslyOnMainThread \nshould not the caller make sure invoking this from UIThread? . ok. \n\nIn reply to: 112565027 . >Current \ntypos #Resolved. >UpdateSourceTrigger=PropertyChanged \ngiven all these are one way binding, you don't need to update the source then.  #Resolved. >// TODO: This DependencyProperty should be attached to UIKit::Xaml::ProgressRing \nnit: keep one comment line with slightly rewording for clarity?  also, can use one newline as separator before the comment for clarity.\nhttps://github.com/Microsoft/WinObjC/wiki/Coding-Standards is the general code conventions for islandwood. #Resolved. Yes, both have the same elements.\n\nIn reply to: 113563703 . only s_textVerticalAlignmentProperty s_borderStyleProperty are not used for bindings to internal controls. But i kind of want to keep them as dependence properties as well.  We might find ways to use binding for them as well. e.g. through Converter etc.\n\nIn reply to: 113562562 . nice, didn't realize this in on control.\n\nIn reply to: 113563428 . good point. the behavior on reference platform is the font change while typing, so this needs to moved to textchanged handler.\n\nIn reply to: 113561500 . make sure.\n\nIn reply to: 113563339 . text is two way binding, which i am keeping. for the rest, i changed them to properties.\n\nIn reply to: 113789238 . sorry, wrong comments. This is when user tap into the text control. I will correct the comments.\n\nIn reply to: 113971401 . ?? I don't have problem to view this\n\nIn reply to: 113998799 . nit: if we have WI#, we can put it here so that we don't forget to remove this. #Resolved. >fromLayerElement = Window::Current().Content(); \nin your description ; \"In theory this would also work when not running in framework mode, but I was reluctant to make such a sweeping change without a good reason.\". So in theory, this line should work for either cases? . >Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" \nnit: unncessary? #Resolved. are these necessary? #Resolved. x:Name? #Resolved. >GetRestrictedErrorInfo \nnit:check S_OK vs S_S_FALSE?. nit: probably move it closer to if (comErrorInfo) check\n\nIn reply to: 118055298 . nvm for the closer comment cause you mention _NSExceptionCallUnhandledExceptionHandler might stomp it.\n\nIn reply to: 118055620 . ",
    "arnoldt3": "@rajsesh-msft \nIs this resolved? I see that it's checked as completed on the roadmap. \n. Excellent, thanks for the quick response!\n. ",
    "cesardelgadof": "I am using the example https://blogs.windows.com/buildingapps/2016/03/10/mixing-and-matching-uikit-with-xaml-and-the-windows-bridge-for-ios/ in Debug Mode but this happens:\n\nThis does not happen in Release mode. I'm using Bridge Release(March 10).\n. ",
    "GrantMeStrength": "Hi \u2013\nI am using this code:\nUITapGestureRecognizer *tapRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTapFrom:)];\n    [view addGestureRecognizer:tapRecognizer];\nUISwipeGestureRecognizer *swipeUpRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(handleSwipeUpFrom:)];\n[swipeUpRecognizer setDirection:(UISwipeGestureRecognizerDirectionUp)];\n[view addGestureRecognizer:swipeUpRecognizer];\nUISwipeGestureRecognizer *swipeDownRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(handleSwipeDownFrom:)];\n[swipeDownRecognizer setDirection:(UISwipeGestureRecognizerDirectionDown)];\n[view addGestureRecognizer:swipeDownRecognizer];\nRemoving the swipe gestures doesn\u2019t seem to make a difference. I\u2019m writing a game, and on the iOS device the taps are enough to fire ten items at once. On the Islandwood version, I can fire two.\nWould you like a copy of the project?\n-john\nFrom: yiyang-msft [mailto:notifications@github.com]\nSent: Thursday, March 24, 2016 11:51 AM\nTo: Microsoft/WinObjC WinObjC@noreply.github.com\nCc: John Kennedy jken@microsoft.com\nSubject: Re: [WinObjC] UITapGestureRecognizer has a limit on how fast tap events are generated (#396)\nHello,\nI am trying to get a repro. Could you give me a little bit detail?\nDid you attach any other additional gesture recognizer to the object other than the UITapGestureRecognizer?\nThanks\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/396#issuecomment-200967595\n. ",
    "quincycs": "Agreed. \n. ",
    "nicolasjon": "I will take a another look. I have to get the hang of isolating where the exceptions are occurring!\nI know things are at an early stage. But I was really pleased with how much of my app fired up and started to work, and that I identified at least some of the currently unsupported parts.\nRegards\nSent from my iPad 4\n\nOn 18 Mar 2016, at 20:12, Ryan Haning notifications@github.com wrote:\nWe do currently have support for CLLocationManager. Please see the following: https://github.com/Microsoft/WinObjC/tree/01508cca6e583ecb9064bdb028bdd593df057728/Frameworks/CoreLocation\nIs there a specific area that you need?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. Had a further look\nJust needed to add Location permission to the package.appx(!) \nDoes not seem to update using dummy locations in the emulator, \n- (void)locationManager:(CLLocationManager )manager\n  didUpdateToLocation:(CLLocation )newLocation fromLocation:(CLLocation *)oldLocation {\n  Just seems to get called on startup, I tried pins and live.\n  But -\n  On the device location gets called as I would expect. Also loaded the latest WINOBJC which has fixed more things. Great. Thanks!\n. Just needed to add location permission to the manifest(!). Then all worked. Thanks.\n. Hi,\n\nNot sure how helpful this is, but I have a couple of apps I am keen to get\nonto W10.\nStoryboard support seems to be the key issue now. I have produced a list\nthat might be of interest I am also keen to understand if there is anything\nI am missing or how I might help further\nThanks\nNicolas\nStoryBoard support Missing Nodes and Attributes.\nUnknown UIBarButton item type edit\n1> Unhandled\nattribute:/document:(null):type:com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\n1> Unhandled attribute:/document:(null):version:3.0\n1> Unhandled attribute:/document:(null):toolsVersion:9532\n1> Unhandled attribute:/document:(null):systemVersion:14F27\n1> Unhandled attribute:/document:(null):targetRuntime:iOS.CocoaTouch\n1> Unhandled attribute:/document:(null):propertyAccessControl:none\n1> Unhandled attribute:/document:(null):initialViewController:4\n1> Unhandled node:/document/dependencies:(null)\n1> Unhandled node:/document/dependencies/deployment:(null)\n1> Unhandled attribute:/document/dependencies/deployment:(null):version:1296\n1> Unhandled\nattribute:/document/dependencies/deployment:(null):identifier:iOS\n1> Unhandled node:/document/dependencies/plugIn:(null)\n1> Unhandled\nattribute:/document/dependencies/plugIn:(null):identifier:com.apple.InterfaceBuilder.IBCocoaTouchPlugin\n1> Unhandled attribute:/document/dependencies/plugIn:(null):version:9530\n1> Unhandled node:/document/scenes:(null)\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:iI7-NG-A7t\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController:(null):hidesBottomBarWhenPushed:YES\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController:(null):sceneMemberID:viewController\n1> Unhandled\nnode:/document/scenes/scene/objects/viewController/webView/dataDetectorType:dataDetectorTypes\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):userLabel:First\nResponder\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled\nattribute:/document/scenes/scene/objects/swipeGestureRecognizer:(null):direction:right\n1> Unhandled node:/document/scenes/scene/point:canvasLocation\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:x:2094\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:y:-221\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:15\n1> Unhandled\nattribute:/document/scenes/scene/objects/tabBarController:(null):sceneMemberID:viewController\n1> Unhandled\nnode:/document/scenes/scene/objects/tabBarController/nil:simulatedBottomBarMetrics\n1> Unhandled\nattribute:/document/scenes/scene/objects/tabBarController/connections/segue:(null):relationship:viewControllers\n1> Unhandled\nattribute:/document/scenes/scene/objects/tabBarController/connections/segue:(null):relationship:viewControllers\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled node:/document/scenes/scene/point:canvasLocation\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:x:-67\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:y:70\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:vfB-Ju-MhA\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController:(null):title:Info\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController:(null):definesPresentationContext:YES\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController:(null):sceneMemberID:viewController\n1> Unhandled\nnode:/document/scenes/scene/objects/navigationController/simulatedTabBarMetrics:simulatedBottomBarMetrics\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController/connections/segue:(null):relationship:rootViewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):userLabel:First\nResponder\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled node:/document/scenes/scene/point:canvasLocation\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:x:94\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:y:-668\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:vX5-Uk-o5v\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController:(null):title:List\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController:(null):sceneMemberID:viewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController/tabBarItem:tabBarItem:badgeValue:0\n1> Unhandled\nattribute:/document/scenes/scene/objects/navigationController/connections/segue:(null):relationship:rootViewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled node:/document/scenes/scene/point:canvasLocation\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:x:574\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:y:70\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:pib-su-oky\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController:(null):title:Master\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController:(null):sceneMemberID:viewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:alwaysBounceVertical:YES\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:dataMode:prototypes\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:style:plain\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:separatorStyle:default\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:rowHeight:70\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:sectionHeaderHeight:22\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView:view:sectionFooterHeight:22\n1> Unhandled\nnode:/document/scenes/scene/objects/tableViewController/tableView/prototypes:(null)\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):selectionStyle:blue\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):accessoryType:disclosureIndicator\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):hidesAccessoryWhenEditing:NO\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):indentationLevel:1\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):indentationWidth:0.0\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):reuseIdentifier:Cell\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell:(null):rowHeight:70\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView:contentView:tableViewCell:oc7-nI-iY6\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):lineBreakMode:tailTruncation\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):baselineAdjustment:alignBaselines\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):adjustsFontSizeToFit:NO\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):lineBreakMode:tailTruncation\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):baselineAdjustment:alignBaselines\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):adjustsFontSizeToFit:NO\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):lineBreakMode:tailTruncation\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):baselineAdjustment:alignBaselines\n1> Unhandled\nattribute:/document/scenes/scene/objects/tableViewController/tableView/prototypes/tableViewCell/tableViewCellContentView/subviews/label:(null):adjustsFontSizeToFit:NO\n1> Unhandled\nnode:/document/scenes/scene/objects/tableViewController/tableView/sections:(null)\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled node:/document/scenes/scene/point:canvasLocation\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:x:980\n1> Unhandled attribute:/document/scenes/scene/point:canvasLocation:y:-243\n1> Unhandled node:/document/scenes/scene:(null)\n1> Unhandled attribute:/document/scenes/scene:(null):sceneID:R8r-2i-poL\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController:(null):title:Detail\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController:(null):sceneMemberID:viewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView:view:autoresizesSubviews:NO\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView:view:showsHorizontalScrollIndicator:NO\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView:view:maximumZoomScale:4\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView/subviews/label:(null):lineBreakMode:tailTruncation\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView/subviews/label:(null):baselineAdjustment:alignBaselines\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/scrollView/subviews/label:(null):adjustsFontSizeToFit:NO\n1> Unhandled\nnode:/document/scenes/scene/objects/viewController/scrollView/subviews/label/nil:highlightedColor\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/navigationItem/barButtonItem:rightBarButtonItem:systemItem:edit\n1> Unhandled\nnode:/document/scenes/scene/objects/viewController/freeformSimulatedSizeMetrics:simulatedDestinationMetrics\n1> Unhandled\nnode:/document/scenes/scene/objects/viewController/size:freeformSize\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/size:freeformSize:width:527\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController/size:freeformSize:height:700\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled\nattribute:/document/scenes/scene/objects/swipeGestureRecognizer:(null):direction:right\n1> Unhandled\nattribute:/document/scenes/scene/objects/swipeGestureRecognizer:(null):userLabel:Right\nSwipe Gesture Recognizer\n1> Unhandled\nattribute:/document/scenes/scene/objects/viewController:(null):sceneMemberID:viewController\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):userLabel:First\nResponder\n1> Unhandled\nattribute:/document/scenes/scene/objects/placeholder:(null):sceneMemberID:firstResponder\n1> Unhandled node:/document/resources:(null)\n1> Unhandled node:/document/resources/image:(null)\n1> Unhandled attribute:/document/resources/image:(null):name:info_24.png\n1> Unhandled attribute:/document/resources/image:(null):width:24\n1> Unhandled attribute:/document/resources/image:(null):height:24\nOn 23 March 2016 at 19:35, Nick Gerard notifications@github.com wrote:\n\nClosed #399 https://github.com/Microsoft/WinObjC/issues/399.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/399#event-600811923\n. \n",
    "oliversa-msft": "Investigating\n. To debug this further I'll need a log file or better yet the XIB or storyboard that resulted in this error. At this stage, I have to assume it's a label attribute issue which we may or may not supported.\nPlease supply the XIB/SB if possible otherwise we're really guessing as to the root cause.\n. Investigating\n. Would it also be possible to get the XIB that was being parsed that cause this issue?\n. Investigating - I'm not sure  is supported yet in our Xib2Nib tool.\n. :shipit:\n. :shipit:\n. :shipit:\n. Looks like a copy-paste bug. A reasonable person would assume the presentedVC property would return the _presentedVC controller.\n. Great stuff! Can we verify with WOCCatalog as well - ControlsViewController references it as well. #Resolved\n. :shipit: \n. I just merged the last develop commits. Waiting for the CI build to complete and then I'll submit the merge\n. > ```\n\n[_mediaElement addCurrentStateChangedEvent:^(RTObject* sender, WXRoutedEventArgs* e) {\n\n```\n\nNit - Couldn't find the remove/unregister of these events in the dealloc. Might be something we'll need to track with a bug.\n\nRefers to: Frameworks/AVFoundation/AVAudioPlayer.mm:78 in ff95a9a. \n. > ```\n\nCGColorRef _backgroundColor, _borderColor;\n```\n\nI'd really love to know why in the PrivateInfo class we have these underscore properties (e.g. _backgroundColor, _borderColor, _name, _xamlElement) and some properties that are not - just confusing for a new person to the codebase. Shouldn't they all be underscored or not underscored given the internal nature of CAPrivateInfo? #Resolved\n\nRefers to: Frameworks/include/CALayerInternal.h:65 in ff95a9a. \n. > - (void)exchangeSublayer:(CALayer_)layer1 withLayer:(CALayer_)layer2;\nThis should be an underscored method - it's not listed in the API reference I could find. #Resolved\n\nRefers to: Frameworks/include/CALayerInternal.h:111 in ff95a9a. \n. > - (void)bringSublayerToFront:(CALayer*)sublayer;\nThese two methods are also not listed - move them to internal i.e. _sendSublayerToBack #Resolved\n\nRefers to: Frameworks/include/CALayerInternal.h:114 in ff95a9a. \n. > - (void)exchangeSubviewAtIndex:(int)index1 withSubviewAtIndex:(int)index2;\nThis is not needed in CALayer - UIView declares its own interoperable method with the same name #Pending\n\nRefers to: Frameworks/include/CALayerInternal.h:112 in ff95a9a. \n. > #define CALAYERPRIVATE_H\npragma once #Resolved\n\nRefers to: Frameworks/include/CALayerInternal.h:18 in ff95a9a. \n. > CACompositorInterface* _globalCompositor;\nCould have defined this in the Compositor itself along with its getter/setter. It's externed there #Pending\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:101 in ff95a9a. \n. > ```\n\nsuperlayer = 0;\n```\n\nsuperlayer = nil #Resolved\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:244 in ff95a9a. \n. > ```\n\nassert(0);\n\n```\n\nWe should probably get rid of this assert as well.\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:1143 in ff95a9a. \n. > ```\n\nnewTransform = CATransform3DMakeTranslation(0, 0, 0);\n```\n\nSame comment as Dustins - it's interesting that we didn't use CGAffineTransformMake here #Closed\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:1463 in ff95a9a. \n. > ```\n\nnewTransform = CATransform3DMakeTranslation(0, 0, 0);\n```\n\nActually, it makes sense now - it's using the 3D version below - setTransform() method\n\nIn reply to: 258990934 \n\nRefers to: Frameworks/QuartzCore/CALayer.mm:1463 in ff95a9a. \n. > ```\n\n}\n\n```\n\nI'm not sure about this code change - I didn't come across it in the Apple's API reference docs if we dealing with a standalone CALayer. Interesting. I guess we could also move it as the first conditional if it is indeed required. #Pending\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:1803 in ff95a9a. \n. > __declspec(thread) CATransaction* _curTransaction, *_rootTransaction;\nReally should be prefixed with g_ #Resolved\n\nRefers to: Frameworks/QuartzCore/CATransaction.mm:35 in ff95a9a. \n. > ```\n\nreturn self;\n```\n\nShouldn't this one be the designated initializer and call [super init]  as well? You can then pipe initWithIdentifier through it for a simple optimization of the autoResizingMask setting. #Pending\n\nRefers to: Frameworks/UIKit/UIViewController.mm:248 in 6d10e3d. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit: \n. > ```\n\n    self.shapeLayer.lineCap = kCALineCapRound;\n\n```\n\nclangformat changes\n\nIn reply to: 261600847 \n\nRefers to: samples/CoreAnimationTest/CoreAnimationTest/CAShapeLayerViewController.m:150 in edbd6c7. \n. Don't forget to kick off the sanity CI builds.\n. :shipit: \n. :shipit: \n. :shipit:\n. Agreed\n\nIn reply to: 262001903 . :shipit:. This issue existed prior to the composition refactor. We also noticed that it's intermittent - sometimes the gap when changing the UISwitch from off to on is noticeably, other times you'll won't see any gap at all.. :shipit:. :shipit:. Think I can squash it first and compare against github/develop. Opening a new PR soon.. Commit 537410eb2c1a10c7 pushed to develop.. This seems like a bug in XCode8.0, just found out that the  tag is no longer present when I use XCode8.2.1. This means Xib2Nib will parse the  tag correctly in both XIB and storyboard files. I believe it might have been fixed in XCode8.1 as part of Apple bug  28221021.. Arnaud, this is now a doc bug to alert developers to upgrade to the latest XCode.. :shipit:. :shipit:. CATransactions are now executed synchronously which affected our CoreAnimation tests that validate the ObjC state is in sync with its backing XAML element state. Moved clean-up of several tests to run on the UI thread.. :shipit:. :shipit: . :shipit:. This should not block today's release. It's a rarely repro'ed issue in the test cleanup which does not fail the TAEF test. I'm changing the pattern to these tests in a PR shortly as well.. I attempted to repro the issue after applying the new UX change (which also removes __block decoration) and I've been unable to reproduce the offending stack. \nPreviously I was only able to see the leaked object once in about 50 attempts but it's potentially just harder to repro with my local setup. Worth keeping a eye out for any recurrence.. #1771 . Pushed #1771. Pushed #1771. Pushed #1771. Pushed #1771. Pushed #1771. :shipit:. :shipit:. :shipit:. :shipit:. :shipit:. :shipit: . Investigating. We have a root cause and a fix for that issue in the WinObjC projections. However, we are trying to find a band aid in the mean time as well until the projection fix can be made.. Hmmm, the band of unsafe_unretained didn't work; might need to address #1950 earlier if there are few alternatives.. I haven't investigated to deeply to determine if there are known gaps - just wanted to make sure I captured an issue to track the follow-up.. :shipit:. :shipit:. This is not a recent regression; @kellymor and @jaredhms confirmed it is present in December's release as well.. :shipit:. :shipit:. Here is the example I've used in UIButtonTests or XAMLCatalog's UIButton VC\nFor titleInset values of {0.0f, 0.0f, 0.0f, 0.0f}:\n\nFor titleInset values of {80.0f, 80.0f, 80.0f, 80.0f}:\n\nThe odd thing - assuming insets of {80, 80, 80, 80} against a UIButton with content frame of 200x200, it would seem that resultant titleLabel frame dimensions should be 40x40. Why is the iOS's UIButton.titleLabel.frame width < 40 (i.e. 31.5).\n. :shipit:. Disabled optimization to address preferredContentSize issue? This is the part that I don't really like - not understanding the root cause. I'll let someone else be the tie breaker.\n. Collapse down to true\n. Ditto\n. Normally we don't need this - is it necessary here?\n. Same question as before - is this implicit already or necessary here\n. Remove\n. BOOL\n. BOOL displayPopover  = NO;\n. Will doublecheck\n. With selected == true, do we ever encounter the normal state? How do we move from selected to normal and vice-versa.\n. Change to getAttribAndHandle(...)\n. We typically don't assert even though we might have a few legacy places where this is still done. Instead, just replace it with printf(\"Unknown verticalightment value: %s\\n\", verticalAlign) for now\n. Issue getAttrAndHandle (line 40) in the initial call and then remove this line. Do the same for verticalAlign.\n. Typically we use printf statements to log it\n. Why do it this way instead of just typedef enum {.....} UIControlContentHorizontalAlignment?\n. Same change as above\n. UIButton is not ARC-enabled. File a bug so we can move it to ARC-enabled and then the \"weak\" decoration will work.\n. We can remove if ARC-enabled?\n. The right thing to do here is pull out the code. However, I'm was a little hesitant that there is a corner case or some usage I haven't accounted for. I'll pull it out - we can always restore it using source history. #Resolved\n. For testing parity with the iOS version - iOS obviously renders them but I wanted to limit settings and variables so I could focus on the differences between iOS and WinObjC for interoperable APIs/properties. #Resolved\n. For testing parity with the iOS version - iOS obviously renders them but I wanted to limit settings and variables so I could focus on the differences between iOS and WinObjC for interoperable APIs/properties.\n\nIn reply to: 84809439 \n. Sure\n\nIn reply to: 84970301 \n. This test is actually an expected exception test but I need more info from the framework on how to extract the inner exception instead of the framework exception.\n\nIn reply to: 84972796 \n. This is used within the external XAMLCatalogTest WinAppDriver test DLL - it's used to identify the slider by its accessibility ID.\n\nIn reply to: 84973509 \n. It's a good practice to exercise storyboards and the full Xib2Nib import flow. I didn't have time to include this test in this sprint though.\n\nIn reply to: 84973785 \n. The WinAppDriver framework needs to provide the SetImmediateValue() and GetAttribute() support. This API is included by the Appium DotNet driver which is what we use for C# tests.\n\nIn reply to: 84972885 \n. Typo\n. Is it just me but I'd love to see the dealloc close to the init so I can compare the init/cleanup steps.\n. Typo - element #Resolved\n. Out of interest, why is it a reference and not just a copy? #Resolved\n. I'm really bad at this but my eyes are drawn to capitalization changes - direct manipulation is what you used above. #Resolved\n. Is _routedEventArgs.pointer guaranteed to be populated and non-null? #Resolved\n. Super nit: MAXIMUM_GESTURE_ALLOWED #Resolved\n. However, if this case is it also why we need to keep the StrongId<> around? If we did make a copy are things cleaner? #Pending\n. Did we fix this pathing issue already?\n. Remove this line - no longer necessary\n. Is this correctly annotated  - should it be caveat or stubbed with UNIMPLEMENTED()\n. What is stopping us from making UIButton ARC-enabled like the other XAML-backed controls?\n. Newline above\n. Were you suppose to reference _text here in some way?\n. Newline above\n. > ```\n\n\n```\n\nNit - extra spaces #Resolved\n. > (BOOL)wasAborted; \nDo we still need this \"internal\" wasAborted property if we removed the internal _abortAnimation method? #Resolved\n. Could we move these global vars/defines to the top of the file? It's really a pain tracking them down when they are scattered within the body of a file. #Pending\n. Move these forward declarations with the others on line 25? #Resolved\n. > uint32_t contentsOrientation; \nJust for full disclosure - contentsOrientation is not part of the CALayer API reference. It's only here because it's used by UIImage - worth a bug to investigate how to remove it cleanly #Resolved\n. > XAML \nNit: Xaml is used below #Resolved\n. Another property only placed here because it is used by UIWindow - file a bug so we can clean it up and integrate it more cleanly. We removed all other z-methods (zPosition, anchorPointZ, etc.) from CALayer #ByDesign\n. > /* CALAYERPRIVATE_H */ \nIf you replace with #pragma once, please remove #Resolved\n. > 0 \ndelegate = nil #Resolved\n. Could collapse into a single line #Resolved\n. Could have replace with CGRectMake #Resolved\n. > FAIL_FAST(); \nWe should really use FAIL_FAST_MSG or accompany this state with a Trace* message. #Resolved\n. > @Status Stub \nNice! #Resolved\n. > priv->_layerProxy->GetPropertyValue \nSweet! #Resolved\n. > WXUIElement* \nCould we make this work with WXFrameworkElement instead? Just wondering if we need to keep it consistent for readability or is there something else that is used in the parent class. #Resolved\n. > // Default to CALayer's default backing Xaml element \nStale comment? #Resolved\n. > CreateRtProxy \nThis utility function doesn't have the autorelease support. Is that intentional? #Pending\n. > RunSynchronouslyOnMainThread \nShould we have called [super init] preceded this as well? UIView -> UIResponder -> NSObject? I noticed that UIWebView has this pattern. #Pending\n. > Name = L\"UILabel\"; \nI wonder if we did this in the other controls as well. Seems like a good idea. #Resolved\n. If any type in pasteboardTypes is supported, return YES. #Resolved\n. Nit - should this just be dataPackageView? #Resolved\n. Nit: Since you're not returning it, prefer to use dictionary or mutableDict. #Pending\n. I thought UIPasteBoard was ARC-enabled. :-( #Resolved\n. Weird that dataset = [UIPasteboard ...] here but we have to explicitly set it to YES below.  #Resolved\n. Typo #Resolved\n. > [[UIView alloc] init] \nShould these be also autoreleased? #ByDesign\n. I'm a stickler for grammar - Invalid URL  #Resolved\n. Did you really mean to leave this as-is?\n. Empirically\n. ....OrApplyDefaultFont?\n. Newline above\n. Why are these commented out here - are they applicable in some way. The code will fall into the default block for these values so why not make them as a comment there.\n. Slight perf upgrade if you move self.text and self.text.length after self.adjustFontSizeToFitWidth. \nCould we find a way to simply the 5 conditions down or break it up?\n. Newline\n. Why did we prefer _secureTextMode  over secureTextEntry above? Great if we could be consistent.\n. Is it possible that calling stopAnimating displays the spinner without the animation. Wouldn't your change hide it now? #WontFix\n. I am certain you don't want to check in this temp file :-) #Resolved\n. My pleasure  #Closed\n. It's subjective - since it's more effort to rename all the other cell versions, I'll keep as-is.\n\nIn reply to: 88709311 \n. Since you're in this code, would you mind collapsing these 2 lines into one: CGRect frame = [self bounds] #Resolved. Nit - we prefer a newline above to separate the scopes. #Resolved. Nit - no need to fix now but we're trying to move away from assert(0) and replace with FAIL_FAST_MSG etc.. Just curious is it setOpaque:FALSE or setOpaque:NO. #Resolved. >stay \nSuper nitpicky - \"Stay\" - I'm sorry just my nature. ;-). >[_onDismissCleanupHandler release]; \nDo we need to set to nil as well? It's possible this has already happened if _handleDismissCleanup was called.. >_presentingViewController = presentingViewController \nIs this right? Are we now managing the passed-in presentingViewController lifetime or just +1 on its retainCount? If UIPresentationController is dealloc'ed, can we nil out the presentingViewController because we own it? Do we need to make a copy or something?. The file is named UIPopoverPresentationControllerInternal - generally the interfaces match that name as well.. I am changing its sublayer values (opacity, background color) - kept as-is.\n\nIn reply to: 90350038 . Hmmmm, in the failure case they would probably leak before its owning object (e.g. VC) and the entire UIApplication is torn down. We could tackle it with ARC which is what I'm investigating as the next step.\n\nIn reply to: 90351052 . Nice! Unfortunately, the scopexit doesn't like __block variables but we can still explicitly release it for now.\n\nIn reply to: 90351820 . No problem \n\nIn reply to: 90349626 . No, it's only used to unregister. I guess it's safe to remove __block.\n\nIn reply to: 90350182 . It's the proper design when using NSCondition as per Apple doc (https://developer.apple.com/reference/foundation/nscondition). In this example, if the property change callback is fired before we get to the wait state, we can conclude the test at that point using the signaled predicate.\n\nIn reply to: 94669086 . I assumed that the return result may have affected the outcome of the test. However, it doesn't so I will move to test the HRESULT as well.\n\nIn reply to: 94668846 . >getAttrib \nWhy not just call getAttrAndHandle here? #Pending. >} \nShould we print out a warning message that we extracted an unexpected linebreakMode setting? #Resolved. >purpleColor \nI could revert this but the upside is that it draws your attention when dismiss the UIViewController ;-) #Closed. >CGSizeMake(0.0f, 0.0f) \nCGSizeZero #Resolved. >< \nWhy is this not <= #Resolved. >Re-try \nnit: Retry  #Resolved. >{ 0 } \nCGSizeZero #Resolved. Nit: typo - intrinsicContentSize #Resolved. >lables \nnit: labels #Resolved. It was automatically populated with the re-import. I prefer to keep the autogen portion and not manually revert it.\n\nIn reply to: 97386296 . No problem.\n\nIn reply to: 97388482 . Yes, I'll be adding more controls in future that manipulate the UIButton. But I'll hold that change for the next PR.\n\nIn reply to: 97408406 . I tested it using a small factor phone initially and I didn't like the truncation. I'll revert since it since it's no longer an issue on larger screens.\n\nIn reply to: 97407985 . Sure - ideally we'll revert update all existing VCs and keep the old naming convention (UISlider, UIButton, etc) but for now I can be more descriptive.\n\nIn reply to: 97406300 . Yes, that is correct. I took this shortcut because I didn't implement the discrete combobox yet. I could move to a UITextfield and pass through blueColor, redColor etc but I also wanted to leverage another common control such as UISlider for our pattern.\n\nIn reply to: 97414580 . Done and done, I like the cleaner overloaded constructor with it. I have noticed though that even with a zero value for the timeout, it keeps displaying the VC.view whereas with the comment, it didn't.\n\nIn reply to: 97411131 . Jared and I discussed this offline - my pattern assumed a one-shot event but it's useful to declare the subscriber once and trigger it multiple times with different actions. We still find value in the setter/destructor pattern for this reason.\n\nIn reply to: 97410140 . Good point - right now, my pattern was mostly focused on the pipeline from VC to functional test. The only caveat to your suggestion is that sometimes the default state does not render anything visually (white on white, no text, etc.)\n\nIn reply to: 97436503 . Maybe in the next PR. \n\nIn reply to: 97411758 . Jared and I discovered that iOS doesn't actually trigger this callback when the text is set programmatically. We find that strange and we're still investigating why or looking for documentation to explain it.\n\nIn reply to: 97437560 . As we discussed, we're going to have multiple delegates for different text fields. We only 1 textfield right now so we only need 1 delegate. We'll add more as we add more controls.\n\nIn reply to: 97445443 . Yes, every time you use VSIMPORTER, these changes are automatically made on your behalf. We could revert them, as Yi suggested, but it's going to resurface each time someone else makes a change.\n\nIn reply to: 97601767 . A fine suggestion - I'll add it in my in my next commit since it should be quick and easy.\n\nIn reply to: 97414846 . In view of the other member names,, it would probably be textTitleNormal (similar to sliderTitleColorNormal).\n\nIn reply to: 97700191 . It still helps when dismissing the keyboard on iOS.\n\nIn reply to: 97699783 . We care about the actual color - the pattern in the future might be that we set this property explicitly (e.g. blueColor) Our verification should include that (XAML == UIButton.titleColor) and that both == blueColor.\n\nIn reply to: 97702035 . I had to retract this change - we have to investigate if the _MSG version is or _OBJNE is compatible. I'll file a bug to track. \n\nIn reply to: 97399064 . Correct, without the resign - it doesn't dismiss the keyboard on iOS.\n\nIn reply to: 97840037 . I can add the constructor UXEvent(autoReset) but using the \"factory-like\" methods to create UXEvents runs into issues because I'm removed the CC/operator=. As we discussed, I'll keep the constructor public with the enum for Manual vs Auto.\n\nIn reply to: 98241423 . How about WaitFor? WaitFor(3.0f / timeoutInSeconds /)\n\nIn reply to: 98268635 . I have no problem changing the API to be WaitFor(....) which returns true if we timed out or false if we were signaled. Incidentally, the iOS documentation for its [NSCondition waitUntilDate:...] is confusing. It returns YES if the condition was signaled. My instincts would expect [NSCondition waitUntilDate:..] should return YES if it waited the full period.\n\nIn reply to: 98269735 . >BOOL* \nWhy BOOL* and not just BOOL. #Resolved. I merged UXEvent into develop - should be able to leverage it now. #Resolved. >{ \nDoes scoping it like this mean all objects are freed at the end or could we still have some autoreleasepools that need to release objects? Just asking because that was one of the concerns with fixing #1757. #Resolved. async? #Resolved. My bad, I see the usage now.\n\nIn reply to: 98299648 . >__block \nI might have missed this before but do you really need __block here. I am under the impression, it should be retained correctly. #Resolved. nit: tailTruncation #Resolved. >false \nSo we're changing it to always false in X2N (previous default was true). By design? #WontFix. Headers are now table cells as well.\n\nIn reply to: 99435804 . It could but I wanted the separation in case I expanded the cell and added more logic. I also wanted to avoid passing nil to a view in the combined version.,\n\nIn reply to: 99437407 . This was suggested by Nick - let me see if I can spot whether removing it has an impact on iOS or IW.\n\nIn reply to: 99437839 . Partially - most of the controls in this VC work fine except for a few. If < ~50% was non-functional, we'd remove the VC from the sample.\n\nIn reply to: 99437888 . Terry and I discussed this - there is value in showing how we compare. I can go either way.\n\nIn reply to: 99437929 . Same response as above - we will keep it for now.\n\nIn reply to: 99437943 . Filed #1942 to capture differences - removing the \"not supported\" text on the CAShapeLayer menu entry.\n\nIn reply to: 99848734 . >. \nAdd $(MSBuildThisFileDirectory) prefix for consistency? If it's me, I'd also manually move to alongside the other \\test\\functionaltest files - one contiguous block. #Resolved. >. \nDitto - about MSBuildThisFileDirectory #Resolved. >_state = UIGestureRecognizerStateCancelled; \nSince this state is set in both conditions, you could move it outside the if-else block and set it always. #WontFix. >exist \nnit: existing #Resolved. >break; \nIs the \"break\" typically outside the scope in switch-case convention? #WontFix. Nit: curGesture #Resolved. >2015 \nI think the convention is now to strip the year from the copyright notice. #Resolved. >all container to possible state \nNot sure I understand this comment - all containers to possible state - what state? #Closed. >innteral \nTypo #Resolved. >behaviour \nAmerican \"behavior\" versus everywhere else. ;-) #Resolved. Did this go through clangformat? Looks unlikely. #WontFix. >! \nPersonally I'd swop the conditions around and use the explicit test instead of the NOT Case.\nif (gesture == dmanip) {\n   dmanip.add(gseture)\n} else {\n   add regular gesture\n}\n #Resolved. You learn knew things everyday - it's called the possible state. Wow.\n\nIn reply to: 100622373 . >FALSE \nChange to \"NO\" - it's a BOOL and they init'ed it correctly to YES. #Resolved. >FALSE \nDitto #Resolved. >Dim \nTypo - DManipGesture #Resolved. >TRUE \nYES #Resolved. >hav \nTypo: we have #Resolved. Probably good idea to search and replace TRUE where applicable #Resolved. Same code used in both places - pull out into a little utility method? #Resolved. reference #Resolved. Might be nice to write out a small truth table for these states in comments :-) #Resolved. >doPixelRound \nProbably explains why I see Canvas.Left values of 101 when I expect 100. Experienced this during inset testing #Resolved. >textColor \nnit: titleColor would have been in line with the iOS fields.. I may have seen it on images as well - not sure but definitively on label.\n\nIn reply to: 100638812 . This test will be updated shortly - the title color is being updated to a white color but the timing of this test picks up the XAML default. #Resolved. It's a typo - sorry I should be been more clear.\n\nIn reply to: 100635187 . To be honest, I can remove this change. Jared has a PR out that adds this feature. I'll remove. #Resolved. I'll take a shot at it - VS wasn't happy when I specified them as resources/content so I followed the same pattern used by CTDrawingTests. #Resolved. Correct, it was not firing on the UI thread. #Closed. Correct, no more trampolining/connector code required. All nice and self-contained within the mm file.\n\nIn reply to: 100679868 . Are you're sure it's not UIButtonTypeSystem? That one is blue by default. In my testing, UIButtonTypeCustom (and default) is white. IslandWood also sets its default to white.\n\nIn reply to: 100680288 . These are the values XAML output when we set the insets to (80, 80, 80, 80) inside a (200x200) button. It's a calculation that factors in the insets and frame of the content container. This is just one example that we can use for regression testing.\n\nIn reply to: 100681068 . Default refers to the allocation method: [[alloc] init] vs [buttonWithType]. I believe [[alloc] init] is actually UIButtonTypeCustom under the covers.\n\nIn reply to: 100863125 . >( \nYou don't need the outer parenthesis.. I was looking at contentCanvas under VS's Live Property Explorer. I've disabled tests for ContentEdgeInsets and TitleEdgeInsets after the last merge as these tests need to be updated and I'd like understand if I'm looking at the right values.\n\nIn reply to: 101126737 . TBH the contract to calculate insets is more complex than I initially expected. To fully understand this contract will require more time.\n\nIn reply to: 100920302 . Exactly, the object was released more aggressively under release which made the repro more obvious.. We'd have to crack open the NIB from iOS and inspect its values for various UIButton types to see if they align with UIButtonType*. Right now, I don't know if this value is correct - might be a legacy value or just a hack.\n\nIn reply to: 102358917 . >currentTitle \n[currentTitle length] > 0?. Are you saying we should not do the same check like below: currentTitle && currentTitle.length > 0?\n\nIn reply to: 103035505 . Yes that's a good idea. I'll add that as a fourth button even though it's just system under the covers.\n\nIn reply to: 103040445 . >UITextField* \nWhy did you not use the TestEnabled- text field? As we add new features to these test controls, all these tests benefit. Did you have to workaround the setting the text programmatically? #Pending. I thought the idea was also the make view controllers with controls without initial settings. Essentially we also want to test the default text and default backgroundColor. #Resolved. >UIViewController \nUsing a generic viewcontroller vs a tableviewcontroller means as means we're not converging on the same pattern: adding a new control is not as simple as [addObject]. You also need to add a label explaining each control programmatically. It does save some space and workaround a tableview issue but it means our view controllers will look inconsistent. #Resolved. If you used TestEnabled- controls, you could have leveraged the same shorthand used in UIButton inset tests. We could have built the a single control for all these types (CGRect, UIEdgeInsets,etc.) #Pending. Is this the control we're manipulating? Can we pull it out on its own above and make a comment so it's clear. #Resolved. This is cool - we should have pulled it into its own TestEnabled- control so other VCs can use it. #Pending. >UISlider* fontSize \nIs fontSizeLabel  + fontSize slider supposed to go together for readability? Does it show the current slider value? #Resolved. >t \nWe can make it more reabable than this, please :-) #Resolved. Can you explain why you needed to do this? #Resolved. >autFit \ntypo #Resolved. Don't we have these helper functions already in XamlUtilities? We should try and converge them or put them outside of LabelTests at least in case other controls need to use them. #Pending. Makes sense but could you have added that support into TestEnabledUITextField. That way we can all benefit from the addition. This addition is useful functionality so we wouldn't need to use sentinel characters to denote the end of input etc.  \n\nIn reply to: 105038372 . Worth a comment explaining that - assume new team member will not have the context.\n\nIn reply to: 105032490 . I remember adding EditingDidEnd or ensuring the keyboard was dismissed but please confirm that it works and meets your needs.\n\nIn reply to: 105043984 . I also realized generic viewcontrollers might not be as adaptive as tables on various form factors. It's one reason I think we used it in WOCCatalog etc.\n\nIn reply to: 104795774 . Adding comments to explain the format - we still need to build more intuitive controls but this will have to do for now.\n\nIn reply to: 104816170 . Since this is an input field, we should draw attention to the invalid value by turning it red or some standard UI validation approach (! etc)\n\nIn reply to: 104816209 . >UIKit::ScrollView \nDid you mean UIKit::Xaml::ScrollView's #Resolved. >ScrollViewer \nScrollView #Resolved. >WXCScrollViewer* scrollViewer = nil; \nWhy not use _scrollViewer directly? #Resolved. I just wondered if you _scrollViewer = XamlControls::GetScrollViewer(scrollViewGrid) and avoid the local variable (sort of like what you did with _contentCanvas below)\n\nIn reply to: 106552317 . >this-> \nIt's unfortunate we call it the same name as the type. Also prefer we avoid the \"this->\" prefix where possible. #Resolved. >topInset = [WUXSRectangle make]; \nI wonder how the perf is now that we're not incurring expensive projection allocations #Pending. Great stuff that this can be moved into markup - makes the code more readable. #Resolved. > + 1 \nWhy the +1? #Resolved. >self.font = [UIFont buttonFont]; \nI know you removed the font setting on _titleLabel but why not just move self.font into _initUIButton instead of duplicating it in both initWithFrame/initWithFrame:xamlElement. It could just sit alongside self.adjustImage... near the top. #Pending. >EdgeInsets \nWe couldn't leverage the framework's UIEdgeInset? I guess this is the pain of the disconnect between our framework and this tool. #Resolved. >strtof \nstatic_cast #Pending. ",
    "vkvenkat": "Thanks for the suggestions. We have incorporated the feedback and updated the PR.\n. CGImageSource.mm:634 - For ICO images, Apple returns kCGImageStatusUnknownType from the minimum stream length of 96 until all of the data is available. The stream length would fall in this category over here. \n. CGImageSource.mm:245, 254 - The succeeding get16BitValue & get32BitValue APIs access the next 2 or 4 bytes beyond the current offset. This is a check to make sure that an out of bounds access doesn't happen here. Do you suggest we use constants here in place of an explicit '2' or '4'? \n. Thanks, added static constants and comments for bound checks\n. Fixed\n. Fixed. Removed. Now defined AudioConverter as an ObjC interface (typedef'ed as a struct in header). ARC is enabled on this repo. Now calling CFBridgingRelease here to transfer ownership back to ARC after prior CFBridgingRetain. Also, ComPtrs used elsewhere have self-cleanup. . Now using the RETURN_AUDIOERR_IF_FAILED_WITH_MSG macro. Fixed. Now encapsulated in status-check macro. Removed. Fixed. Is now a ComPtr with self-cleanup. Replaced with new ObjC interface-based AudioConverter . Removed from here. Also, transform is ComPtr. Now transferring ownership of AudioConverter to ARC in AudioConverterDispose.. ",
    "mohamednossair": "at the compile time \n. ",
    "ImDestinedMe": "@Ramu-msft I changed it to have that ViewController be the initial view but the viewDidLoad method is still never called; is there any news of an upcoming release to fix this? I don't really wanna redo my entire app just because of one small problem. \n. ",
    "rupertdaniel": "Ahh ok. Actually I think the issue I'm seeing is with unarchiving.\nWhen NSKeyedUnarchiver is unarchiving the NSDate object, the following line result = [result initWithCoder:self]; returns nil and it throws an exception.\nhttps://github.com/Microsoft/WinObjC/blob/master/Frameworks/UnifiedFoundation/Foundation/NSKeyedUnarchiver.mm#L215\n. Yeah for that sample code the next line was actually:\n[self addObserver:self forKeyPath:@\"testObject.selectedChildObject.childObject.name\" options:0 context:nil];\nIf I comment out the observer, objc_getAssociatedObject works as expected.\n. Sorry for the delay in replying.\nI've re-run the attached demo project and unfortunately I'm still seeing the same behaviour, memory usage grows and it seems to never be reclaimed.\nHere is a screen grab from the memory profiler showing where the area the allocations are occurring.\n\n. Yeah it does run through line 262, attached is a screenshot of the stack trace.\nI've tried swapping lines 262 & 261, but it still crashes.\n\n. Yeah you're right the new key is supplied so it's just the kind key that is missing.\n. Yeah looks like testObject isa is 0xdddddddd after creation.\n\n. Argh good catch, it was a mistake in the demo code :-( Let me get back to you on this, as the demo code was an attempt to simplify a crash we are seeing in the main app.\n. Sorry false alarm on this one.\nTurns out it is https://github.com/Microsoft/WinObjC/issues/577 that is causing our crash.\n. Also this only happens when using a release built from HEAD, the July 1st release works as expected.\n. Great, thanks for looking at this.\nHere is a simple operation subclass...\n```\n@interface MyOperation : NSOperation\n@property (assign, getter = isExecuting) BOOL executing;\n@property (assign, getter = isFinished, readonly) BOOL finished;\n@end\n@implementation MyOperation\n@synthesize executing = _executing;\n@synthesize finished = _finished;\n\n\n(void)setExecuting:(BOOL)executing\n{\n    [self willChangeValueForKey:@\"isExecuting\"];\n    [self willChangeValueForKey:@\"isFinished\"];\n_executing = executing;\n_finished = !executing;\n[self didChangeValueForKey:@\"isExecuting\"];\n[self didChangeValueForKey:@\"isFinished\"];\n}\n\n\n(BOOL)isExecuting\n{\n    return _executing;\n}\n\n\n(BOOL)isFinished\n{\n    return _finished;\n}\n\n\n(void)start\n{ \n    if (self.isCancelled)\n        return;\nself.executing = YES;\n[self doSomething];\n}\n\n\n(void)doSomething\n{\n    // Do some async task.\n    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0), ^{\n            self.executing = NO;\n    });\n}\n\n\n@end\n```\nThen to run it...\n```\nself.op = [[MyOperation alloc] init];\nself.op.completionBlock = ^{\n  NSLog(@\"FINISHED!!!\");\n};\n[self.queue addOperation:self.op];\n```\n. @DHowett-MSFT sorry was this a ping at me? :-)\nIf so...\n\nOperations should be scheduleable without a queue and run manually.\n\nWe don't do this at the moment so should be ok for us.\n\nOperations with dependencies need to perform dependency resolution if they're at the head of the queue.\n\nWe don't use dependencies at the moment so should be ok too.\n. Ahh thanks @ms-jihua for looking into this. I will give that suggestion try!. @DHowett-MSFT if you still need it here is some input/output from the call to CGBitmapContextCreate()\nbitmapRef: 00000000 bitsPerComponent: 8 colorSpace: 09A32760 bitmapInfo: 8196. @msft-Jeyaram this was using release 1/27/2017 10:26:23 AM f09dc5cb4325532d7abf10751062190930b4757c.\nIs this something that might be resolved with the latest changes?\n. @DHowett-MSFT no we don't have modules enabled in our configuration.. ",
    "msft-Jeyaram": "@rupertdaniel  the functionality is available now.\nclosing as per commit 2bb45ad334d58198a8927d889c1ca04c2a786222. \n. Yep, all of the variables wrapped in idretain do not need to be set to nil in dealloc. \n. :shipit:\n. :clock1:\n. @rupertdaniel @rajsesh-msft  the fix is available as per 2e5dc0c6fa44c68040ec3b90ee1cda3053a690b2 \n. @rupertdaniel  The fix is in and will be available soon\n. @rupertdaniel  thank you for filing the issue.\nThe root cause has been tracked down and it turns out to be, the changes we made to NSNumber isEqual in the new CoreFoundation.\n. :clock1:\n. I'm doing an initial investigation on this, but @ms-jihua  do you think it might be an issue with the old version of icu  we are using. (we saw issues with Chinese character ranges)\n. :shipit:\n. :clock1:\n. :shipit:\n. :shipit:\n. > #include \"Foundation/NSString.h\"\nuse of angular brackets <>, since they are not in the same directory.\n\nRefers to: Frameworks/Foundation/NSHTTPURLResponse.mm:18 in bcfd673. \n. :shipit:\n. > ```\n\nid userInfo;\n```\n\nnit: could we just wrap them in StrongId?  #Resolved\n\nRefers to: Frameworks/Foundation/NSNotification.mm:23 in 9291c4e. \n. :shipit:\n. > ```\n\nid userInfo;\n```\n\nalthough you can still copy it and attach to it (so you aren't getting a retain), at the end it would give the auto-autorelease mechanism.\nGiven we have these properties backed by internal ivars, we could ease the pain and use StrongId (which comes with it's own shenanigans). \nYour direction makes sense, we can get rid of the these and directly set the properties. \n\nIn reply to: 229856697 \n\nRefers to: Frameworks/Foundation/NSNotification.mm:23 in 9291c4e. \n. STUB_* are entities that are not yet implemented (/to be implemented in the future)\nI can see that for STUB_* properties and methods in UIKit project is indicating it's deprecated when used. @asimonov-msft  would be able to shed more light into why we are getting deprecated tags for the warning.\n. :clock1:\n. :shipit:\n. :shipit:\n. :clock1:\n. :shipit:\n. :shipit:\n. :clock1:\n. > nit: these can be easily implemented. the encoder/decoder methods\n\nRefers to: Frameworks/CoreLocation/CLHeading.mm:76 in 1de20c3.  #Closed\n. we should enclose them in {} #Resolved\n. can be made into a single declaration and assignment  #Resolved\n. I agree, a system under stress can delay the timers. Although we seem to have timed test pattern in some other tests in our code base (e.g NSObject_PerformSelector* tests). I'll look into this.\n\nIn reply to: 232461993 \n. this will be obsolete with the use of CFRunLoopTimer as most of the time based tests are removed to use conditional checks. \n. handle NULL blocks? #ByDesign\n. :shipit:\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nshould we correct this while at it? #Resolved\n\nRefers to: include/CoreGraphics/CoreGraphics.h:3 in 1847854. \n. :shipit: \n. somehow I lost that in my squash and ended up adding it manually.\n\nIn reply to: 233735940 \n. :shipit:\n. When I was going through your CR for the mac port, I thought the same thing. Although we do have tryLock tests (which works fine on mac). \n. Actually this isn't going to give us much, i would rather leave the lock/unlock tests and since tryLock already be ported to MAC it's fine. Changing the lock test to try Lock would end up testing the same scenario in mac and missing out the actual lock/unlock scenario on windows.\n. Closing this out as per comment above.\n. closed as per commit #789 \n. fix in #805\n. Looks like it might be an infrastructure issue. we expect NSFileManagerUT.txt to be placed at a fixed path. \nAlso the path to verify against is constructed via windows specific path.\nWill look further.\n. Actually this is the only issue, the file staging .\nI was thinking of NSFileHandler issues when I took it back.\n. Looks like the copy issue has to do with the way reference platform implements the NSPredicate class.\nusing a static function to obtain a predicate should fix that.\n. Closing this as per commit #788\n. Closing this as per CR #788\n. Re-opening this as the wrong one was closed.\n. there is a PR, not sure why it's not linked. My CI builds failed since I didn't track the Expected string case for localized Descriptor. sending and update and scheduling the build.\nPR #836 \n. Given this is being washed away with recent CFRunLoop changes, it would be a no fix.\nbut looking into what's going on here. It does definitely seem interesting. \n. This is mainly due to the locking unlocking routine, same seen in the NSObject_CancelPerform.\nThis will become fixed with the appverifier fixes #856\n. I have a fix for that. I'll work on top of yours when it's in\n. :shipit:\n. recalling this back. Sending out all of CompoundPredicate changes together. \n. In CI Build\n. ping!\n. In CI Build\n. The Dispatch.autorelease test was hit again. As per previous discussion, i'll go ahead with the merge.\n. In CI Build\n. CI Build passed.\n. This is being added in conjunction with #746 \n. :shipit:\n. :shipit:\n. Ping!\n. > ```\n\n[fh closeFile];\n```\n\ntalked offline, if something occurs before we get here, scope will take care of this.\nDouble close is fine, since if it's closed once, it reject the next close on the file.\n\nIn reply to: 237713623 \n\nRefers to: tests/unittests/Foundation/NSFileHandleTests.mm:267 in 43ac298. \n. In CI build\n. :shipit:\n. :shipit:\n. :fire: \n. :shipit:\n. :shipit:\n. :shipit:\n. fix in #805\n. :shipit:\n. #836 is getting around this\n. Assigning to @ms-jihua  as she implemented this class.\n. In CI Build\n. In CI Build for another run.\n. Ping! CI Builds passed. if everything is good. i'll merge.\n. :shipit:\n. :shipit:\n. In CI Build\n. Ping!\n. :shipit:\n. In CI Build\n. Ping!\n. Going to take this back and send a new one.\n. :shipit:\n. ping!\n. [Au] LOL it was the test of all tests.\n. :shipit:\n. :shipit:\n. > ```\n\nNSDateComponents* dateComponents = [[NSDateComponents alloc] init];\n```\n\nneeds to be released. #Resolved\n\nRefers to: tests/unittests/Foundation/NSDateComponentsTests.m:26 in 8f72d34. \n. > #include \"gtest-api.h\"\nnit: replace it by TestFramework.h #Resolved\n\nRefers to: tests/unittests/Foundation/NSDateComponentsTests.m:17 in 8f72d34. \n. :clock1:\n. This is done in #712 , propagating the estimate to there. \n. :shipit:\n. :clock1:\n. :clock1:\n. #712 \n. Closing this out and starting a new CR\n. The build definition is already setup to support the pull request.\nJust need to add it to the xml file and test it. Blocked by OSX tests that are currently failing.. Yay, I'll get that up and be running today :). We have support to build and run the OSX unit tests as part of the release pipelines.\nThe OSX tests are running and passing (YAY). Thus OSX tests will be part of daily builds, we decided not to run them during CI builds for now.\nGoing forward #2645 address any enhanced work.. :shipit:\n. :shipit:\n. :shipit:\n. this will be inline with #1052\n. Also the correct behavior can be fully tested when rounding is implemented.\n. removing for triage\n. closing as per #1082\n. :shipit:\n. Closed as per #1371 \n. > }\nno longer needed.\n\nRefers to: Frameworks/CoreText/CTLine.mm:44 in dfd8a8d. \n. > CFRange CTFrameGetStringRange(CTFrameRef frame) {\nuse MACROs from result.h to take care of the default null cases. \n\nRefers to: Frameworks/CoreText/CTFrame.mm:44 in 0f5a0f0. \n. > ```\n\n_CTFrame framePtr = static_cast<_CTFrame>(frame);\n```\n\nas mentioned above and other places.\n\nRefers to: Frameworks/CoreText/CTFrame.mm:60 in 0f5a0f0. \n. > ```\n\n_textStorage = storage;\n```\n\ncopy and attach?\n\nRefers to: Frameworks/UIKit/NSLayoutManager.mm:212 in 0f5a0f0. \n. > ```\n\n_needsLayout = TRUE;\n```\n\nYES.\nSuch that elsewhere \n\nRefers to: Frameworks/UIKit/NSLayoutManager.mm:193 in 0f5a0f0. \n. > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nupdate copyright\n\nRefers to: Frameworks/UIKit/NSString+UIKitAdditions.mm:3 in 0f5a0f0. \n. :clock1:\n. :shipit:\n. :shipit:\n. > ```\n\n_needsLayout = TRUE;\n```\n\njust caught my eye. super init? #WontFix\n\nRefers to: Frameworks/UIKit/NSLayoutManager.mm:60 in 04ba630. \n. > ```\n\nreturn frame;\n\n```\n\nneeds to be autoreleased. #Resolved\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:372 in 04ba630. \n. > }\nremove, not needed. #Resolved\n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:30 in 04ba630. \n. > ```\n\n}\n```\n\nMacro #Resolved\n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:36 in 04ba630. \n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nupdate header #Resolved\n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:3 in 04ba630. \n. > CTLineRef CTTypesetterCreateLineWithOffset(CTTypesetterRef ts, CFRange range, double offset) {\nnull case is not handled, also _DWriteGetFrame (and the function path where ts ends up) is not handling null cases. #Resolved\n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:87 in 04ba630. \n. > ```\n\nTHROW_NS_IF_FALSE(E_UNEXPECTED, [frame->_lines count] == 1);\n```\n\ncurious, we see the use of return null and throwing exceptions.\nwhat is the standard you are making here?\nAlso if it's invalid (null), what is the reference platform behavior? are we trying to match that? I'm curious since I've seen some portion of the code return null for some cases and throw exception for the others. #Closed\n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:89 in 43b6e0a. \n. > ```\n\nTHROW_NS_IF_FALSE(E_UNEXPECTED, [frame->_lines count] == 1);\n```\n\nA task items to keep track of it?\n\nIn reply to: 255288503 \n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:89 in 43b6e0a. \n. > ```\n\nTHROW_NS_IF_FALSE(E_UNEXPECTED, [frame->_lines count] == 1);\n```\n\nAlso given we are adding code, why don't we just set the standard  now to follow through. It seems weird to add code here, then come back to clean it up after we accumulate so much of it throughout the project.\n\nIn reply to: 255799568 \n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:89 in 43b6e0a. \n. > ```\n\nret = (array != nullptr) ? true : false;\n\n```\n\ncan be removed.\nGiven the statement would produce the value. #Closed\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:64 in 43b6e0a. \n. > ```\n\nret = (array != nullptr) ? true : false;\n\n```\n\nAlthough it does make it seem much clear.\n\nIn reply to: 255800842 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:64 in 43b6e0a. \n. :shipit:\n. :shipit:\n. > - Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nupdate #Resolved\n\nRefers to: include/UIKit/UIImage.h:3 in afe2203. \n. > \u0013\u0011\f\u0017\u00e0\u000eR~\u0000\u0000\u0000\u001diTXtComment\u0000\u0000\u0000\u0000\u0000Created with GIMPd.e\u0007\u0000\u0000 \u0000IDATx\u00da\u00ec\u00bd\u00e9rcI\u2019\u00a5\u00a9fv7\u0000\u00a4\u00bb\u00c7\u00ea\u0011\u0019\u2122UYY]\u00d5\u00d2\u00cbK\u00cc\u001b\u00cd\u00bb\u00cc\u00bb\u00f5\u02c6\u0152\u00c8\u201dLUg\u00e5\u0012\u00e1\u001b7\u00dc\u00cd\u2013\u00f9q\u0000u#\u0016\u00ae \b\u0090\u00e7\u02c6\u000b\u0004\u00a4\u0192 x\u00ef%\u00ed\u00c3Q\u00b5\u00a3&\u00a5$\u0014EQ\u0014EQ\u00d4\u00eedy\b(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"`Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160ZU\u00c1C@Q\u0014E\u00fd\u001fR\u00e5\u001f\u001a1\"\u2019$\u00e1\u017d\u02c6Y\u00de\u0011\u00fb\u00f5\u009d\u00f9\u00e2\u201cVl\u2019\u00e4\u00a4\u02c6\u0012\u00ac\u00b8(\u00d1\u2030\u00cb\u00bev\u00f1<Qb\u2019\u0014%$IIb\u2019\u201d$\u00c9\u00e2Vp{G\u00e93o\u00d4\u00bd\u017e\u00ea^2b\u00f2\u0178+{\u0019\u00c6,\u00feY\u00dcqR\u00e0\u00d6I\u00e1\u00a4tR\u201dR\u0016R\u0015RV\u00d2\u201dR\u0015R\u00e1\u00b6\u2019\u00ba\u201d\u00ba\u2019\u00ba\u2019\u00a6\u2019\u00a6\u2013I!U#3|\u00c6I\u00d1\u00c8\u00d4I\u0081\u00fb\u20224Vl%\u0013'E-\u0013+\u00a6\u0090\u00ca\u0160sRX\u00b1N\nyep the binaries will be.\n\nIn reply to: 255899137 \n\nRefers to: tests/unittests/CoreGraphics/images/tiff1.tiff:5 in 487abed. \n. > gimp-comment\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012Created with GIMP\u0000\u0000\u0000\u0000\u0010gimp-image-grid\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000(style solid)\nas per other comment. yep.\n\nIn reply to: 255899168 \n\nRefers to: tests/unittests/CoreGraphics/images/xcf1.xcf:2 in 487abed. \n. > \u0013\u0011\f\u0017\u00e0\u000eR~\u0000\u0000\u0000\u001diTXtComment\u0000\u0000\u0000\u0000\u0000Created with GIMPd.e\u0007\u0000\u0000 \u0000IDATx\u00da\u00ec\u00bd\u00e9rcI\u2019\u00a5\u00a9fv7\u0000\u00a4\u00bb\u00c7\u00ea\u0011\u0019\u2122UYY]\u00d5\u00d2\u00cbK\u00cc\u001b\u00cd\u00bb\u00cc\u00bb\u00f5\u02c6\u0152\u00c8\u201dLUg\u00e5\u0012\u00e1\u001b7\u00dc\u00cd\u2013\u00f9q\u0000u#\u0016\u00ae \b\u0090\u00e7\u02c6\u000b\u0004\u00a4\u0192 x\u00ef%\u00ed\u00c3Q\u00b5\u00a3&\u00a5$\u0014EQ\u0014EQ\u00d4\u00eedy\b(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"`Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160ZU\u00c1C@Q\u0014E\u00fd\u001fR\u00e5\u001f\u001a1\"\u2019$\u00e1\u017d\u02c6Y\u00de\u0011\u00fb\u00f5\u009d\u00f9\u00e2\u201cVl\u2019\u00e4\u00a4\u02c6\u0012\u00ac\u00b8(\u00d1\u2030\u00cb\u00bev\u00f1<Qb\u2019\u0014%$IIb\u2019\u201d$\u00c9\u00e2Vp{G\u00e93o\u00d4\u00bd\u017e\u00ea^2b\u00f2\u0178+{\u0019\u00c6,\u00feY\u00dcqR\u00e0\u00d6I\u00e1\u00a4tR\u201dR\u0016R\u0015RV\u00d2\u201dR\u0015R\u00e1\u00b6\u2019\u00ba\u201d\u00ba\u2019\u00ba\u2019\u00a6\u2019\u00a6\u2013I!U#3|\u00c6I\u00d1\u00c8\u00d4I\u0081\u00fb\u20224Vl%\u0013'E-\u0013+\u00a6\u0090\u00ca\u0160sRX\u00b1N\nAlready Addressed via dustin. Pending change.\n\nIn reply to: 255899430 \n\nRefers to: tests/unittests/CoreGraphics/images/tiff1.tiff:5 in 487abed. \n. {}\n\nRefers to: Frameworks/CoreGraphics/CGContextCairo.mm:74 in ff1ac10. \n. > ```\n\n}\n```\n\nnot needed\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:129 in ff1ac10. \n. > ```\n\nif (DEBUG_VERBOSE) {\n```\n\nnot needed.\n\nRefers to: Frameworks/QuartzCore/CALayer.mm:497 in ff1ac10. \n. :shipit:\n. > }\nnot needed\n\nRefers to: Frameworks/CoreText/CTFrame.mm:42 in 3062895. \n. :shipit:\n. :shipit:\n. > #define __EBRPLATFORM_H\npragma once #Closed\n\nRefers to: Frameworks/include/Platform/EbrPlatform.h:18 in 4e817ad. \n. Review status: 0 of 22 files reviewed at latest revision, 55 unresolved discussions.\n\nFrameworks/Starboard/EbrFile.cpp, line 3 at r1 (raw file):\n\ncpp\n//******************************************************************************\n//\n// Copyright (c) Microsoft Corporation. All rights reserved.\n\ndrop corporation\n\nComments from Reviewable\n Sent from Reviewable.io \n. :clock1:\n. > ```\n\nreturn nil;\n```\n\n[self release]? #Resolved\n\nRefers to: Frameworks/Foundation/NSCFData.mm:62 in 7ac059b. \n. > ```\n\nreturn nil;\n```\n\n[self release]? #Resolved\n\nRefers to: Frameworks/Foundation/NSData.mm:410 in 7ac059b. \n. > - (instancetype)initWithBytes:(const void*)bytes length:(unsigned)length {\ncheck for invalid bytes? #WontFix\n\nRefers to: Frameworks/Foundation/NSData.mm:225 in 7ac059b. \n. > - (void)getBytes:(void*)dest range:(NSRange)range {\ncheck for invalid dest? #WontFix\n\nRefers to: Frameworks/Foundation/NSData.mm:279 in 7ac059b. \n. > - (instancetype)initWithBytes:(const void*)bytes length:(unsigned)length {\nThis might cause a bug in the future.\nIt's a pretty trivial change.\n\nIn reply to: 256463416 \n\nRefers to: Frameworks/Foundation/NSData.mm:225 in 7ac059b. \n. :shipit:\n. :shipit:\n. > ```\n\n\\\n```\n\nclang gone mad? #Closed\n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:181 in 345b521. \n. > ```\n\nif (!context) {                                                          \\\n\n```\n\nI assume the merge would take care of this. #WontFix\n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:181 in c38281f. \n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nupdate  #WontFix\n\nRefers to: Frameworks/UIKit/StarboardXaml/CompositorInterface.mm:4 in e193e65. \n. remove? #WontFix\n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. > ```\n\n    //     properties->style = DWRITE_FONT_STYLE_NORMAL;\n\n```\n\ncurious why these are commented out, are they to come back sometime in the future?\nif so TODO? #WontFix\n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:329 in a31c45e. \n. still curious why this code is commented out and still present?\n\nIn reply to: 256795517 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. :shipit:\n. the commented out else code just looks ugly being present.\nWhen it's in scope, it should get wiped.\n\nIn reply to: 256795654 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. > #endif\nI know this is not part of the CR, but I'm curious why \nCourier New Bold Italic maps to Courier-BoldOblique here , where as in the static consts above maps Courier New Bold Italic to CourierNewPS-BoldItalicMT. \n\nRefers to: tests/unittests/CoreText/CTFontTests.mm:227 in a31c45e. \n. > ```\n\nint j = 0;\n```\n\nuh I just noticed this, although this is in. i,j might not of been the best choice to denote what they actually represent.\n\nRefers to: Frameworks/CoreText/DWriteWrapper_CoreText.mm:397 in 90d1c31. \n. > ```\n\n}\n```\n\nswitch the validity checks to use the macros in result.h.\nRETURN_NULL_IF(!path); #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:167 in ac21011. \n. > ```\n\nFAIL_FAST_IF_FAILED(path->_impl.pathGeometry->Stream(mutableRet->_impl.geometrySink.Get()));\n```\n\nI feel as this should be returning NULL, rather than failing fast. \nGiven how it's a public function that attempts to obtain something, it makes it valid to return NULL. Also the user may/may not have the code to handle the null case.\n #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:187 in ac21011. \n. > ```\n\n}\n```\n\nRETURN_IF(!path) #WontFix\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:201 in ac21011. \n. >  @Notes transform property not supported\nis this still true? #Closed\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:224 in ac21011. \n. :shipit:\n. >  @Notes transform property not supported\ngotcha.\n\nIn reply to: 256985573 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:224 in ac21011. \n. > ```\n\n}\n```\n\nIt exists now after my merge into CGD2D. Agree, but given we are having this defacto standard of using MACROS to deal with these .\nYou can leave it as is for now.\n\nIn reply to: 256985291 \n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:201 in ac21011. \n. > ```\n\nCGDrawView* cgView = [[CGDrawView alloc] initWithFrame:self.view.bounds drawOptions:self.options];\n```\n\ndo we need to release this or is it managed by the View somehow? #WontFix\n\nRefers to: tests/testapps/CGCatalog/CGCatalog/CGPathApplyViewController.m:30 in 3c21e8f. \n. :shipit:\n. > ```\n\n}\n```\n\nfix this up too?\nThis looks horribly bad.  #Resolved\n\nRefers to: Frameworks/UIKit/UIFont.mm:311 in 99920d9. \n. > ```\n\n}\n```\n\ncleaned up and follow a proper format?\nIt has a weird pattern of self assignment and pretty much using the objects static method to generate an object within the shell object.\nI'm sure it can be cleaned up using CTFontCreateWithName directly or a wrap around it (if we want to keep encapsulation) \n\nIn reply to: 257024231 \n\nRefers to: Frameworks/UIKit/UIFont.mm:311 in 99920d9. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Thanks for the filing Hank.\nI was just hitting this and debugging it.\n. This is not blocking develop.\nOnly blocking CGD2D branch, fix in the works.\n. Verifying fix for this.\nThe proper fix will come with the total removal of the old backing and migration to new design.\n. :shipit:\n. :clock1:\n. :shipit:\n. :shipit:\n. My Clang went mad again... Ignore the clang formats. They will be corrected.\n. > struct __CGImageImpl {\nwe can now move this into the CGImage.mm file. Yay :) #Pending\n\nRefers to: Frameworks/include/CGImageInternal.h:92 in 20bf8cb. \n. > ```\n\n_CTFramesetter* ret = [_CTFramesetter alloc];\n```\n\nnew?\n\nRefers to: Frameworks/CoreText/CTFramesetter.mm:83 in e0b809d. \n. uh, I assume this got messed up during the replacements with functions and the merge\nFixing as part of  #1332 \n. :shipit:\n. :shipit:\n. > ```\n\nRETURN_NULL_IF_FAILED(img->ImageSource()->CopyPixels(nullptr, stride, size, data.get()));\n```\n\nThis should be __CGImageGetRawBytes() #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGImage.mm:175 in 81c6ff3. \n. > ```\n\nRETURN_NULL_IF_FAILED(img->ImageSource()->CopyPixels(nullptr, stride, size, data.get()));\n```\n\nI'm doing this in a seperate CR, given other frameworks use this incorrectly (cased on internal implementation)\n\nIn reply to: 260728285 \n\nRefers to: Frameworks/CoreGraphics/CGImage.mm:175 in 81c6ff3. \n. > };\nIt's pretty straight forward on where it's being used.\nnon the less, i'll indicate it's used to obtain the texture.\n\nIn reply to: 260747910 \n\nRefers to: Frameworks/include/CGIWICBitmap.h:51 in 81c6ff3. \n. > class CGIWICBitmapLock : public RuntimeClass, IAgileObject, FtmBase, IWICBitmapLock> {\nIdeally it should be in a cpp file, given the file manifested as a header,it'll be moved into a cpp file.\nas for now it's not the scope of the CR.\n\nIn reply to: 260747790 \n\nRefers to: Frameworks/include/CGIWICBitmap.h:56 in 81c6ff3. \n. > inline CGPoint __CreateCGPointWithTransform(CGFloat x, CGFloat y, const CGAffineTransform* transform) {\nstatic inline? #Resolved\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:37 in 20639d8. \n. :shipit:. :shipit:\n. :clock1:\n. Saw this issue when we did bitmap context,  made these changes in bitmap context. missed the decoder one.\nUpdating\n. LOL so the existing CGImage tests would of got this easily, but we autoreleased the CFData, rather than a release right away.\n. #1413\n. lol yeah I caught that and changed the title, i'll fix it in the commit.\n. #1235  #1245 #Resolved. :shipit:\n. Thanks on the fix.. I am going to do a bit more diligence on the take in ownership by IWICSource for CGImage struct.. Wrong brach. The build failed since _CGContextDrawImageRectwas in CGContextInternal.h and it was removed here.\nWe still need that import (needs to be ifdefined for Mac testing).\n\"It was testing an internal function wieldy used by  UIImage, had to render images for check  \uf04c.\". > / static / DrawingTestConfigImpl* DrawingTestConfig::Get() {\nstatic? #ByDesign\n\nRefers to: tests/UnitTests/CoreGraphics.drawing/EntryPoint.cpp:93 in f000645. . yep not so known. >     filename = nil;\nnit: remove\n\nRefers to: Frameworks/CoreGraphics/CGDataProvider.mm:33 in 04cd65c. . :clock1:. The failed tests on build pass locally.\nThe 4 failed tests are the ones that load a pre-staged file.\nInvestigating. . Looks like a file copy over issue. Stale old files don't help you find path changes :(. @jaredhms  @DHowett \nTo add onto to previous comments. \nThe current testing is CGCatalog   + unit tests.\nTrying some of the WOC catalog features (but we did break some of them in CGD2D at one point)\nE.g pasteboard.. Also:\nFrameworks/QuartzCore/CALayer.mm\n    Frameworks/UIKit/StarboardXaml/CompositorInterface.mm\nCore of the re-integration work took place, pretty much the cross over point.. :D . ++ Also thank you for draining the nestlings :). > // #1207: Do not move this block, it has to come first for some reason\ngiven the task is closed, doesn't make sense to have it here anymore.\nthis mystery might be solved one day. #Resolved\n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:17 in 4fad654. . :shipit:. :shipit:. Created a bug, it isn't blocking this PR for say.\nStill tracked figured out.\n\nIn reply to: 267120339 . as per offline, I'm planning to do it this iteration but would like it keep it as separate PR for now (since it's independent) . Commit  769d982\n. tests failed due to green line tests not being disabled :(. >     size_t memSize = sizeof(struct __CGFont) - sizeof(CFRuntimeBase);\nit would be nice to have it as cpp based at some point  #WontFix\n\nRefers to: Frameworks/CoreGraphics/CGFont.mm:129 in 9a3d204. . :clock1:. Yes this is fixed. hmmm but the rotation bug is still there.\nThe bug number needs to be updated. I'm doing that.. @DHowett  yep that's what's happening, taking the changes to develop and putting out a CR. @DHowett-MSFT  please take a look. @DHowett-MSFT  looks like the merge destroyed the enablement of the redbox test.\nOther tests are enabled for which ref image is being checked in.\n. #1418 #Closed. Ping \u26f5\ufe0f  #Closed. already fixed based on an earlier CR (before the github days). :shipit:. :shipit:. :shipit:. :shipit:. :clock1:. Unable to reproduce.\nThe tests run fine on ARM and pass.. On this. Still passing on ARM (Release/Debug).\nDisabling the NSTimer.ScheduledTimerWithTimeIntervalWithInvocation on ARM\nThe tests pass, I suspect this is due to the fact the tests have a small window (around 0.1-1 second) waiting periods to see if an invocation happen.\nWe\u2019ve seen cases where the invocation took longer than that at odd times. As for now this is a non-blocker and I am disabling the test on ARM.\n[----------] 6 tests from NSTimer\n[ RUN      ] NSTimer.NegativeTimeInterval\n[       OK ] NSTimer.NegativeTimeInterval (1 ms)\n[ RUN      ] NSTimer.ScheduledTimerWithTimeInterval\n[       OK ] NSTimer.ScheduledTimerWithTimeInterval (201 ms)\n[ RUN      ] NSTimer.ScheduledTimerWithTimeIntervalRepeat\n[       OK ] NSTimer.ScheduledTimerWithTimeIntervalRepeat (602 ms)\n[ RUN      ] NSTimer.ScheduledTimerWithTimeIntervalFireOnce\n[       OK ] NSTimer.ScheduledTimerWithTimeIntervalFireOnce (0 ms)\n[ RUN      ] NSTimer.ScheduledTimerWithTimeIntervalFireRepeat\n[       OK ] NSTimer.ScheduledTimerWithTimeIntervalFireRepeat (502 ms)\n[ RUN      ] NSTimer.ScheduledTimerWithTimeIntervalWithInvocation\n[       OK ] NSTimer.ScheduledTimerWithTimeIntervalWithInvocation (200 ms)\n[----------] 6 tests from NSTimer (1529 ms total)\n. Closing as per #1774. PING\n #Closed. separate PR for develop.\nLeaving the UIKit changes here too (since it wouldn't be an issue in merge). I'm curious when these started to fail.\nThe issue here is that in reference platform their subtraction introduces precision anomalies.\ne.g  1186805866786 - 212169414290 = 974636452495.999872 vs 974636452496. #1908 . :shipit:. closed via #2133. :shipit:. Also the performance seems bad now.\nNavigating to the next tab and displaying the listview content is noticeably slow.. ```\n    LIBOBJC2.DLL!objc_exception_throw(void * object) Line 134   C++\n    FOUNDATION.DLL!-NSException raise Line 131  Objective-C++\n\nFOUNDATION.DLL!+NSException raise:format: Line 96    Objective-C++\n    FOUNDATION.DLL!-NSCFArray objectAtIndex: Line 86  Objective-C++\n    UIKIT.DLL!-_UIPageViewScrollView _populatePagesWithOffset:interactive: Line 491  Objective-C++\n    UIKIT.DLL!-_UIPageViewScrollView touchesBegan:withEvent: Line 208   Objective-C++\n    FOUNDATION.DLL!-NSObject performSelector:withObject:withObject: Line 275   Objective-C++\n    UIKIT.DLL!-UIView _processPointerEvent:forTouchPhase: Line 609   Objective-C++\n    UIKIT.DLL!__41-[UIView _initPrivWithFrame:xamlElement:]_block_invoke(void * .block_descriptor, RTObject * sender, WUXIPointerRoutedEventArgs * e) Line 767  Objective-C++\n\n``. ^^ pretty much launch the application then click on any of the news article to open and voila, you get the above crash with the stack trace. :shipit:. Could we get this in today and spin off a full build? \ud83d\udc6f\u200d\u2642\ufe0f \nso we can start the awesome verification process on ARM/x86. \nThis was the root cause of #1751\nPlease close that with this.. @ms-jihua  I updated the bug #1751 .\nThis might not as well be related, but I have seen the crash upon attempting to obtainstatic_cast(CFArrayGetValueAtIndex(CTFrameGetLines(frame.get()), 0));` and the frame is empty.\nAre you able to repo as per #1751 steps?\n. :shipit:. closing this as behaviours changed from 10.10 to 10.11.\nWe will keep up with the latest versioning for now.. These fail on 10.12.3.\nI've updated the failure logs above.\n. @aballway could you take a look at this, given you added these tests. Looks like the  build agent is out of date:\nsw_vers -productVersion\n10.10.5\nupdating and running the tests again.\n. closing this as behaviours changed from 10.10 to 10.11.\nWe will keep up with the latest versioning for now.. closing this as behaviours changed from 10.10 to 10.11.\nWe will keep up with the latest versioning for now.. @ms-jihua  could you take a look at this, these tests were enabled via e6e6ece8504fc8bc850f8d9fdf0730b45fbee55a . closing this as behaviours changed from 10.10 to 10.11.\nWe will keep up with the latest versioning for now.. :shipit:. @ms-jihua Did you validate 7a73991d1f252525fd47a3e81ac34b0865d87ae3 with any applications?. Thanks. Looks like in UIGraphicsBeginImageContextWithOptions, we can't create the bitmap due to \n_CGImageGetWICPixelFormatFromImageProperties unable to find a match (opaque handling of endianess )\n\"E/CGImage: Unfulfillable request for format with 32bpp (8/component), 3-component color space, bitmap info 2001\"\n. no longer seeing the crash on CGD2D, able to cycle through all the images fine.. \ud83d\ude22 \nIt's interesting how Timers failed earlier. ++ \n\nIn reply to: 275712723 . > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nnit: update this #Resolved\n\nRefers to: Frameworks/include/ErrorHandling.h:3 in 53f7de8. . @DHowett-MSFT I'm going to leave it as it is.\nIf I do the change, I need to change the usage across and it can introduce accidental bugs.\nI'm keeping the usage tight here to avoid errors.. It will be one less merge and people (likes of brain) could use it if needed until we do it.\nTalked this over with Raj, he gave it \ud83d\udc4d . This was a direct cherry pick.. Verbal sign off from @DHowett-MSFT . > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nnit: update\n\nRefers to: Frameworks/UIKit/UIImage.mm:4 in 409c5aa. . :shipit:. ping. ping! some movements please take a look\n. Why are we disabling this?\nOSX isn't doing a good job with subtraction.\n1000-999 = 1, but for them they take the double computation which ends up being 0.99999999997\nWe can assert near but this would mean we would have to take the double value of the NSDecimalNumber (which will have rounding errors) and sadly thats not fully implemented yet. Given we only have subtraction and addition implemented as of now.\n. :shipit:. @rajsesh-msft \nremoving some of the redundant sizes. #Resolved. @rajsesh-msft @DHowett-MSFT  Ping!\nCould you please review, i need to get this in by today.. Ping! :). :shipit:. @rupertdaniel @DHowett-MSFT  I suspect it's due to bytesPerRow being 0 and automatic calculations aren't happening. So we try to find a bpp of 0 in the map.. @DHowett-MSFT  awesome!! . Hi @rupertdaniel  I am seeing Cairo in the logs. '!CGContextCairo:'\nwhich  release are you using?. > #if 0\n@duhowett@microsoft.com\nI recall you disabled them, looks like these aren't enabled?\n\nRefers to: Frameworks/UIKit/UIColor.mm:510 in 3459877. . This can be closed as per the below pull requests:\n2427, #2437, #2586, #2479,#2437,#2379,  #2511, #2374, #2361, #2364, #2538. Enable a failing test.\nAny of the disabled ones should make it work.\nIf you want specific try:\nDISABLED_DRAW_TEST_F(CGPatternTests, PatternFillWindowsLogoRotate\nor \nDISABLED_DRAW_TEST_F(CGPatternTests, PatternDrawPath\nor \nDRAW_TEST_F(CGContext, Canva,\netc.  baf55d2 . @DHowett-MSFT  @rajsesh-msft  Ping. >  @Notes Returns family name\nsuper nit: I feel the note here could be better.\nJust saying returns family name doesn't help.\nSo It doesn't return the full name and  'only' returns family name? #WontFix\n\nRefers to: Frameworks/CoreGraphics/CGFont.mm:225 in 031bf91. . It's only with CGContextAddArc , creating from 2pi to 0.\n*update, arcs are not being created properly by CGContextAddArc\nCreating a mutable path and adding lines, works fine for fill and clear rect.\n@MSFTFox  knows what's going on with the Arc creation and looking into it. depends on this being fixed #2062. Yep definitely, added the comment:)\nComing up in the iteration, i think the drawings are valid to have #Resolved. Given CGRectDiv is mainly used for layouts within the view. The drawings are valid to have, but they should really be toned down\nThe math ones should be more, but given it's a parameterized test and two outcomes, it would be odd to do a pure parameterized test. I'd rather not repeat the calculations in the test nor have expected values for all those combinations #Resolved. @DHowett @rajsesh-msft @aballway  ping! #Resolved. @DHowett-MSFT  ping . @DHowett-MSFT  tests validated on ARM. uh I'll look into this.\nThanks dustin.. The previous implementation ignored the type of loading it should do. e.g even though if you specify load PNG or JPEG, it would just load the data through the api\nNow we force WIC to treat the data as PNG or JPEG for those apis. I suspect the problem arises due to that.\nWe still support loading straight from data without specifying the types (so WIC can figure it out).\nI recall having a test where we had a PNG data file that would fail to load if we specify the type of file, but can be loaded by wic without specifying the format it's in.. Yep, maybe using an appropriate api would be better , given the code is incorrect in the first place and doesn't really check for formats.. @DHowett-MSFT  @rajsesh-msft  if it's not strictly CG, it can use UIImage initWithContentsOfFile and can take the CGImage out of it via, UIImage.cgimage.. @rajsesh-msft  on it.\n. > static const wchar_t* g_logTag = L\"CTFont\";\nnit: what does the g means?  #Closed\n\nRefers to: Frameworks/CoreText/CTFont.mm:41 in a2dac20. . :p I figured after i made the comment LOL\n\nIn reply to: 282899498 . Looks like there are few other instance I need to update.\nUpdating it. Note: the second iteration is the change from the last CR.\nThe implementation was correct, it was the way how tests were that caused some failures, which are fixed now.\n@DHowett-MSFT please take a look at the new heart art :). Looks like git lfs is failing on build machines. so on the build machine, the generated image for one of the tests differ by a pixel :(\nmaking it such that we check if the pixel is present.. Verbal extra sign off by @DHowett-MSFT  merging .. @MSFTFox  where are the generated base images for the tests?\nI think it got missed in your addition. @MSFTFox I've also added some FillMode tests for Arcs.\nThese were parameterized tests that I've added to ensure arcs was working.\nPlease enable them when #2133 is in.\nThere is a TODO with issue id #2062 \nAlso depending on who gets the changes in first, arc clearing tests need to be enabled.\nThe disabled tests are tagged with the Arc issue ids.. @DHowett-MSFT  this does hold on reference platform.. >  We only support formats that are 32 bits per pixel, colorspace and bitmapinfo that are ARGB.\nnit: Notes\n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:3048 in d66f2b5. . Taking a look into this. These are the expected Images:\n\n\n\n. There is only one bug here and the root cause was due to GLKit's implementation of GLKTexture only handled an image format of 32bpp properly (other formats e.g 8bpp indexed,etc) was not handled properly (the code was never exercised).\nThe root cause of this was that the earlier Cairo implementation treated every image as a 32bpp. Thus when we created an image with it's proper pixel format, GLKTexture code didn't know how to handle it and thus the errors were produced.. I have the fix and sending out a CR for it.. \nActual:\n\nExpected:\n\n. I think taking in char * would be fine, given that's what CGDataProviderCreateWithFilename takes not.\nso no need for CFString. fixes #2150. >     D2D1_RECT_F bounds;\nremove\n\nRefers to: Frameworks/CoreGraphics/CGPath.mm:801 in 3153c92. . @edvv  taking a look at this.\n I can add in the support, although it didn't quite match what we were expecting . @edvv A fix is on the way to support your scenario :) . Validated pass on ARM #ByDesign. ping!. @aballway  pingy. @DHowett  @aballway ping!. @DHowett-MSFT @aballway \nhad to force push, take a look at the latest version for updates.. @aballway @rajsesh-msft \nPing!. @aballway @rajsesh-msft  the 'super ::' format correction will be done, after sign offs.\nSince it has to be forced manually.. @DHowett-MSFT pingy ping. @DHowett-MSFT @aballway  ping. \ud83d\ude31 . @DHowett-MSFT  TEST_P(CGPatternColoredRectBasedStroke, PatternStrokeRegion) {\nCover the stroke #Resolved. Temp file being removed \ud83d\ude2d  #ByDesign. Ping! #Resolved. @rajsesh-msft @MSFTFox ping! #Resolved. @rajsesh-msft  ping. @jaredhms  Passing this onto AJ as worked on these.\n. @DHowett-MSFT indicated that he ran them locally and the tests passed.\nSeeing the outputs, it looks like our image diff might not be doing it's job.\nThe color values are slightly off. This could be due to different versions of the rendering stack.\nValidating the build versions.\n\nRendered:\n\nDiff:\n\n. The root cause is the different versions of windows that are being used. looks like in the latest version, there are few changes to the rendered pixel values.\nThis is the reason we are seeing the failures on some user's machines (who are running the latest version of windows) vs the others/labs (who are running the current version). Due to the nature of this bug (release blocking), we should be using the current version of windows. When we upgrade to the next version of windows, we will at various ways to fix/prevent these forms of errors.. \ud83d\ude22 . Initial investigation, earlier passed on local build arm.\nIt seems that the images were blank when generated and it seems only for some cases.\nLooking at it further.. Unable to debug on ARM.\nunable to debug via TDP as tdp seems to cause an RPC error when checking for nuget version.\nUnable to launch an application onto the phone via visual studio for debugging.\nIt keeps on asking a pair coding and is rejecting the code that's shown on the phone. (note even if discovery is turned off, it keeps on asking for pin).\nAdding traces and debugging, while i sort out the debugging on ARM thing.. Update:\nWe are still having issues with debugging on ARM :( w/ visual studio 2017.\nThe root cause seem to be that although the gradient brush is being created, fill fails to do anything on ARM.. Root cause is due to this bug on ARM.\n #1769 . Task complete with above Pull requests being merged in.. Wrong item, re-purpose.. Item - [ ] CTLine: remove usage of NSMutableAttributedString falls under issue #2357 \nAs there too many usage of NS* components.\nAs other items are complete, closing this out.. @aballway  yes yes yes\n@ms-jihua  this is a small part of the grand plan of completely removing Foundation/UIKit dependencies from CoreText and CoreGraphics. There are few more instances, updating CR.. nuget restore failure\n. @DHowett-MSFT @rajsesh-msft  updated :). Awaiting ARM test verification. . @ms-jihua @aballway  Please take a look. I have the implementation + just needs validation. @DHowett-MSFT thanks Dustin . Adding onto Dustin:\n\\u00E9 (\u00e9) vs e\\u0301 (e + \u00b4) check if they qualify as contains. . Was this working on the earlier master build?\nI was trying to setup my phone and attempt to install the app with visual studio (also using the scripts).\nLooks like the build I flashed on isn't being picked up by my computer :(.\nI'll try it again in the morning. I tried it with the current version of windows on phone, with master build 20170331.3 and was unable to reproduce the bug.\nThis may be related to D2D changes that occurred with the new version of windows #2284\n. @DHowett-MSFT  it's not entirely that, but it looks like there were changes in the new version of windows that is causing this & the issue in your bug . They are not the same root cause, but it looks like there are changes in the new version of windows we need to look into, so same grouping. \nThis bug  needs  further investigation. . @DHowett-MSFT @aballway @ms-jihua  Ping! #ByDesign. hmm would building catch this? maybe? \ud83d\ude15 . > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nnit: remove\n\nRefers to: Frameworks/include/NSURLProtocolInternal.h:3 in 120e3ec. . > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nstill needs update \n\nIn reply to: 292643560 \n\nRefers to: Frameworks/include/NSURLProtocolInternal.h:3 in 120e3ec. . @steventroughtonsmith  Currently CGGradientCreateWithColors is returning NULL if CGGradientCreateWithColors::colorSpace is null. so the crash might be due to some other code attempting to access null.\nSadly these are some of the undocumented behaviours that ios have. I am sending out a fix soon to address this.\nThank you for reporting your finding \ud83d\ude03 . Further investigation reveals the support is only for CGGradientCreateWithColors, while CGGradientCreateWithColorComponents with a null colorspace will return NULL on the ref platform.. This was made low-priority due to other work.\nI need to verify some behaviours in reference platform and will have an update out. #ByDesign. @DHowett-MSFT  cleaned up history so it's good for rebase and merge. Getting some bench mark for old vs new #Resolved. @rajsesh-msft  still need reverse in CFString backed by strrev, that is contained in CoreText.\nUpdating the CR #Resolved. @DHowett-MSFT  @ms-jihua  please take a look. @DHowett-MSFT please take a look. >     }\nlet's fix this up too :)\nIt seems like old  code dies hard.\n\nRefers to: Frameworks/Foundation/NSSet.mm:566 in 6de58cf. . > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nnit: update this\n\nRefers to: Frameworks/include/NSEnumeratorInternal.h:3 in 6de58cf. . @DHowett-MSFT as mentioned in the earlier comment: rather than doing a for loop + append space, you can just create a stringwithformat and use %<len>s . *Note: The NSAttribute changes will be part of the CTLine code review #ByDesign. @ms-jihua @DHowett-MSFT @aballway knock knock . @DHowett-MSFT @aballway @ms-jihua ping. @DHowett-MSFT  but you must TakeOwnership of thy work ;P. @DHowett-MSFT @aballway ping #ByDesign. @DHowett-MSFT @aballway @MSFTFox Ping #ByDesign. @DHowett-MSFT @aballway @MSFTFox Ping. Ping! . @MSFTFox  Thanks, we had different starting and ending points for Gradient Start Location/End Location, but not the placement location :( \nThis is due to the clear color inserts that are happening near the end and start of the location placement.\nWe took a min/max of it and moved it.. Could you indicate what is not correct?\nI included the code you gave and various other changes and was able to get a rendering matching the ref platform.. Thanks @edvv \nI'm taking a look at this.\nAccidenly pressed closed.. @edvv The implementation has not made it to release yet.\nplease try again with the release that contains the Radial Gradient changes.\nThanks.\nJeyaram. @aballway  there is, #1 you aren't doing message dispatches anymore, second there some redundant code that was reduced + reduced allocations.\nUpdating this PR with run time perfs with benchmark.. @ms-jihua @DHowett-MSFT @aballway \nplease review #Resolved. \n. I've done most of this work already , we need to revisit this again.\nThis gives us NSTimer on top of CFTimer. @rajsesh-msft  yep, retrieving it . This would require the whole validation of the xaml events + validation of the new changes that makes NSRunloop run on top of CFRunloop (which never ran before). This would be a breaking change to get just the getCFRunLoop  functionality . We need team-wide validation on all apps.\nIt's a breaking change because we are replacing the run loop.\nCurrently, CFRunloop doesn't even run and NSRunloop is its own entity. \nThe changes remove the current implementation of NSRunloop and we implemented CFRunloop (our own way ) and then we made NSRunloop run on top of CFRunloop.\nPretty much old runtime gutted and replaced with a newly implemented runtime (by us). @bbowman we don't need the auth, build machine already has git auth setup, so we can just clone the repo and checkout to the specific branch ;)\nRe-purposing this to do more enhancements. \nAlso, we have it running, just needs enhancements. . I'm going to close this out, we support OSX test execution on release now :) + we got test results uploaded too.\n\n. Closing this out as $(Build.SourceBranchName) is supported.\n. Taking a look at this. The root cause is that the sample was written wrong.\nYou should be passing CGColor to CoreText, but the sample was passing UIColor. Thus it was not able to render it.. I'm working on it :)\n\n. Closed as per #2662. Is this the same known bug, where you try to change fonts and it crashes?. I am unable to repo this.\nI can launch and run the samples fine.. @aballway how does ref platform render differently?\nsample?  #Closed. @rajsesh-msft @DHowett-MSFT  #2662 fixes the issue.. Also doing another run of verification with two apps of different version installed to verify the latest fix.\n\n. closed as per #2662. @DHowett-MSFT thank you for updating, given we started this at the start of the CPPbase helper era, the impl remained and now its gone \ud83d\ude02 \n. @DHowett-MSFT  we were looking at improving the conversion path.\nI assume windows  is being smart and internally caching them.\nEven though we would end up getting a copy vs a reference. It would be good to just have one converted image flying around..  58212e0406fb82daa9a7e4f5414efa1b704e09e3 needs to be cherry-picked to master.. @SourceF  I am taking a look at this.\nWe had similar tests that exercise this and it's been valid.. @SourceF  the same exact code is working as intended.\nEXPECT_EQ(4, CGColorGetNumberOfComponents([UIColor colorWithRed:1 green:0 blue:1 alpha:1].CGColor));\n. @rajsesh-msft @DHowett-MSFT ping. @rajsesh-msft Inclusion of NSGeometry.h & NSAffineTransform.h prevents frameworks.core package from being used independently. \nNSGeometry.h defines NSPoint,NSRect,etc in terms of CGPoint,CGRect, etc. Thus making foundation depend on CoreGraphics. I need to break this dependency for packaging work, given these are not even part of ios and are not used, I've removed it.. No longer seeing this issue.\n. Seeing fails with NSOperations, TAEF Seems to not cooperate \n\n2017-05-25T17:29:45.8590299Z StartGroup: NSOperation_CancelAllOperations_Suspended::Test\n2017-05-25T17:29:45.8590299Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] Failed to invoke test operation: 'NSOperation_CancelAllOperations_Suspended::Test'. (Test Host Process could not be reached. It has terminated with an exit code of 0x000000FF.) (The message to invoke a test operation was not properly handled by the host process.)\n2017-05-25T17:29:45.8590299Z ##[error]: EndGroup: NSOperation_CancelAllOperations_Suspended::Test [Failed]\n2017-05-25T17:29:45.8590299Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] The test host controller has stopped communicating with the test host process due to a previous failure.\n2017-05-25T17:29:45.8590299Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] The test host controller has stopped communicating with the test host process due to a previous failure.\n2017-05-25T17:29:45.8746557Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] Failed to destroy 'NSOperation_CancelAllOperations_Suspended'. (The test host controller has stopped communicating with the test host process due to a previous failure.)\n2017-05-25T17:29:45.8746557Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] The test host controller has stopped communicating with the test host process due to a previous failure.\n2017-05-25T17:29:45.8746557Z ##[error]: Error: TAEF: [HRESULT 0x800706BE] Failed to destroy 'D:\\build\\agent3_work\\5\\s\\build\\Win32\\Release\\Universal Windows\\Foundation.UnitTests.dll'. (The test host controller has stopped communicating with the test host process due to a previous failure.)\n2017-05-25T17:29:45.8746557Z\n\nInvestigating . blocked via #2730. There is two instance of WINOBJC_SDK\\ usage, that is being cleaned up now :)\n #ByDesign. @rajsesh-msft  the projection code is generated after applying the fixes to winmd2objc  (my other CRs) #ByDesign. This saw random failures with NotificationQueue and filemanager tests.\nNow it second run and local run seem to be fine . ping! @rajsesh-msft @DHowett-MSFT . Will force push the diffs to make it easier to review.. @DHowett-MSFT this is needed since build.sln never used the packages it produced. \nGiven projections binaries were already checked in, it never had to refer to a nuget package.\nNow that we won't have those binaries in place anymore, we need build.sln to look at the build\\outputpackages to see if there are any nuget packages that it can use. nit: would prefer if this is wrapped in {}. Just to be safe for future changes. \n. #pragma once should do it\n. need #pragma once\n. can be replaced by #pragma once\n. static_cast(inFileUrl) should work here for the warnings.\n. #pragma once\n. We try to avoid adding tests/changes to tests/unittests/Foundation/ReferenceFoundation/\nIf you want to add tests they should go in the tests/unittests/Foundation folder. The following is the file name convention we used for tests that we created NS<>Tests.mm. The imports from swift are named TestNS<>.mm\n. #pragma once\nnit: copyright indicate 2015\n. please add #pragma once to all the header files.\n. nit: else is not needed\n. we are moving away form using just asserts as they do not give much information.\nyou can use one of the THROW macros in result.h or use an exception with NSInternalInconsistencyException.\nAlso could you verify the behavior on reference platform? \n. use $(MSBuildThisFileDirectory)\n. this needs to be released. #Resolved\n. you need to release this. Also please release the objects that are being created via CGColorSpaceCreateDeviceRGB() elsewhere.@ #Resolved\n\n. use of CATransform3DMakeRotation, then just concat with CATransform3DConcat.\nreturn CATransform3DConcat(CATransform3DMakeRotation(angle,x,y,z), cur);\n. could you comment on the assumptions here that is being made.\n. Great, thanks for the quick fix.\n\nIn reply to: 69025232 \n. If you could separate out each logic and comment on what you are doing in each stage, it would make it easier to read and maintain in the future. #Resolved\n. nit: not needed #WontFix\n. format issue #Pending\n. we talked earlier about using NSLock and it's not going to be efficient as just using raw pthreads since it objc_msgSend will add addition overhead.\nAlthough pthreads are fine, we have allot going on here, it's easier to forget the sequences or something else. Since we support C++ on these files, we should go ahead and use std::mutex, recursive mutex, etc. \nThis would make the code much cleaner to maintain and read, also avoid pitfalls that we might encounter in the future maintenance.  we should be using them going forward (where it's reasonable)  #Closed\n. use angular brackets <> #Closed\n. nit: TODO 7346158 ...... #Resolved\n. instancetype?\n. \"Setting the properties raises an exception if the receiver\u2019s model has been used by an object graph manager.\"\nis this something to consider? #ByDesign\n. nit: instancetype \n. entityName is not being used? #ByDesign\n. release when we enter this function? or did we intend this be released when url is nil? #ByDesign\n. Given this is a faster resolution does it make sense to add the other well known bridged classes here (NSCF*).\nAlthough I assume these are the most popular classes that are used commonly. \n. we are indicating that isa 0 is a CFObject in the __CF_IsCFObject and then we are covering the logic with a call into __CF_IsBridgedObject, for the __CF_IsCFObject, I assume isa nil is not a CFObject?\n. Lets add a comment there to indicate that case?\n. nit: you could use the RETURN_IF_NULL(condition) macros.\n. null check for flatPath? we are doing a memory reference. \n. could these  be made purely virtual to make things a bit more easier?\n. ^indeed.\n. nit: else is not needed.\n. nit: I would prefer validity checks like this when the objects are assigned/created, that way you can easily exit on failure cases and don't have to have multiple checks for validity of memory throughout the code. Note: you can wrap them in CFAutoRelease, so when you exit on failure cases you don't have to have explicit releases for the ones above. If not you can write a macro to release multiple objects. Although autorelease seems more appropriate.  #Resolved\n. needs default case #Closed\n. static const array assignment , if this doesn't change? #Resolved\n. should we add a test for an aggregate  function with property? e.g max,avg.\nAlthough we do have the aggregate function tests already.\n. super nit: 2016 #Resolved\n. nit: %lu #Resolved\n. nit: new copyright header #Resolved\n. github sends you an email when there is a pull request #Resolved\n. new copyright header here and elsewhere #Resolved\n. nit: brackets as per windows convention, given they aren't in the same folder. #Resolved\n. looks like it's the internal header for OSX replacement #Resolved\n. for some oddly weird reason, I seem to like the old format. #Resolved\n. explicitly add NSArrayTest? #Resolved\n. Would you \"Interop\" these with the makefile? I'd rather not add ifdef's to Traces and Logs?\n #Resolved\n. make a shim? (Although I don't think anyone is using these in Foundation tests, it would make it much easier, if they were to) #Resolved\n. this test is being omitted? #Resolved\n. why is the below test getting boxed out? #ByDesign\n. nit: <> #Resolved\n. > assert(0); \nalthough this is old code, it would be much better to Throw and exception with some information on why this is an issue.\nIt would provide much more information rather than just asserting.\n. > assert(0); \nsame as the comment on the earlier assert.\n. {x,y,z} these are read-only and I don't see them set anywhere to be interoperable \n. nit: formatting needed #Resolved\n. if(self = [super init]) #Resolved\n. the call to super should be through the designated initializer. #Resolved\n. I can reduce this to 3/4 #Resolved\n. there are allot of things that needs to be cleaned up in this file + most of the functionality does not have unit tests. I opened a separate bug for that.\nSo far this review is to implement and test MoveToUrl. Thanks.\n\nIn reply to: 71405791 \n. Yep, the error reflects reference platform, except for rename call, reference platform sets type to POSIX, we are setting it to WIN32. although the code is the errno that is being set.\nOverall file clean up/error standardization  will be part of #662\n\nIn reply to: 71406908 \n. this is to make sure that although the file was moved, we don't have any error flags set.\nWill add negative tests.\n\nIn reply to: 71407552 \n. wrapped up with RAII \n\nIn reply to: 71407993 \n. indeed. switched to NSData, will makes it easier to verify data.\n\nIn reply to: 71408764 \n. ASSERT: Fails fast, aborting the current function.\nEXPECT: Continues after the failure.\nUpdating, also using RAII, that should make life easier :D\n\nIn reply to: 71408625 \n. I was letting it fall down to the fact if it's not fileURL then we throw exception. looks like reference platform returns an error with the exception.\n\nIn reply to: 71392720 \n. oh god everything got caped. #Closed\n. either way we end up encoding, but it's a single pass. changed .\n\nIn reply to: 71443437 \n. nit: NS.code and else where #Resolved\n. nit: NS.statusCode\nsame for the other keys,. #Resolved\n. nit: if they are the same object, address comparison would save few message being dispatched =. #Resolved\n. should be NSUInteger #Resolved\n. same as before, NS.* for all #Resolved\n. if(self == other) {\nreturn YES;\n} #Resolved\n. type should be NSUInteger #Resolved\n. although perfectly fine, seems a bit strange. if(_suggestedFileName) ?? #Resolved\n. it seems there are too many things going on here.Given we are looking for specific things. it's easy to make mistakes here (now+future maintenance).\nThis seems like it can be done with using regex. #WontFix\n. std::regex is a good candidate here\n\nIn reply to: 72719945 \n. fair, but it seems it's too hardcoded here, given we already use C++ features in CF, it could make life easier if someone were to maintain this in the future.\n\nIn reply to: 72720081 \n. > U_SUCCESS \nnit: log the error?\n#Resolved\n. > U_SUCCESS \nQuestion, can the method succeed and set the status flag (e.g to a warning). I recall seeing this in the documentation when i was looking at string tokenizer. #Resolved\n. #import and angular brackets for the appropriate imports  #Resolved\n. these can be EXPECT #Resolved\n. :D  :dragon:  #Resolved\n. accidental, it was supposed to be the other.\n\nIn reply to: 73251344 \n. Given this is just to obtain a valid object, this should be fine for the scope of this test.\n\nIn reply to: 73250728 \n. this is due to the fact that with created options, when you do the regex match you need an absolute match. We weren't supporting the full array of options, since we didn't have the functionality to map them.\nNow there is coreFoundation. I'm going to send out the changes in that CR (for few of the old todos, that can be supported now).\n\nIn reply to: 73245208 \n. already in the works with using a scope guard\n. they run fine\n. ideally should be using the _SCOPE. will do it in a separate CR that has filemanager changes.\n. can we place the files that are being staged into a certain folder.\nThis would make sure future staging files don't' have to be added to this make file.\nPretty much has a designated folder for staging and just copy it over. #Resolved\n. getModulePath()? one or the macro.\nsorry looks like the placement of the comment is messed up.\n\nIn reply to: 73606151 \n. >   //_URLCredentialStorage = [[NSURLCredentialStorage sharedCredentialStorage] retain]; \ncan this be set? given NSURLCredentialStorage is implemented now. #Resolved\n. > identifier \nshould be copied. #Resolved\n. and released.\n\nIn reply to: 73748509 \n. nit: you can wrap them around StrongId #WontFix\n. if(self = [self _initWithPersistence::NSURLCredentialPersistenceForSession]) {\n  _trust = trust\n}\ngiven we are calling [super init] there anyways. #Resolved\n. could you add test for invalid cases here. nil, etc.\nand verify the behavior #Pending\n. thanks for the catch.\nYep EXPECT should be used here.\n\nIn reply to: 73764735 \n. looks like my auto formatter didn't do what it's supposed to do :(\n\nIn reply to: 73765478 \n. This has to do with the     } @catch (NSException* exception) {\n        _exceptionWasCaught = YES;\n    }\n}\ngiven that's pretty much amounts to what the test is.\nI'll leave it as is.\n\nIn reply to: 73764878 \n. It never matched, xcode seems to return the same as osx, Talked to raj about it and we figured we didn't have to match the descriptions being parsed.\n\nIn reply to: 73765687 \n. this had to do with an issue with capitalization option.  we didn't support the full fledged options. now we do.\n. are vs Are\n\nIn reply to: 73914570 \n. > NSArray \nNSArray*? #ByDesign\n. > NSMutableArray \nshould be NSMutableArray* #ByDesign\n. > toRet \nis this really need to be wrapped in StrongId? given it's already auto released (as per [NSMutableArray array]) and it's being returned.\n. > static_cast \ncan be removed if the above changes are made. #WontFix\n. ops. [NSMutableArray array] should be autoreleased. * corrected above\n\nIn reply to: 73973752 \n. NSMutableArray* toRet =[NSMutableArray array];\n..\nreturn toRet; should make things more clear?\nHaving StrongId is also fine.\n\nIn reply to: 73973850 \n. True. I went with the assumption of creator ownership as per ios documentation, given this class creates it and it's not the known (copy,alloc) methods. it's naturally autoreleased. \n\nIn reply to: 73974242 \n. Given it's all over the place, for (W/w)indows. it would be a change on it's own.\n. This should be sufficient given the element is not mutable. \n\nIn reply to: 74267425 \n. but it would be a nice to have. adding.\n\nIn reply to: 74289845 \n. > NULL \nnit: nil #Resolved\n. > americanMakes \nlol rename. #Resolved\n. As talked offline, we aren't going through the set. I am using the allobjects which is the snapshot (copy)\n\nIn reply to: 74296016 \n. Nope it's not. i'll go ahead with the removal. I thought i can guard the copy->removal phase\n\nIn reply to: 74295924 \n. :joy: \n. > dateComponents \nneeds to be released #Resolved\n. > nullptr \nnil #Resolved\n. this is based of the substring. so yes.\nbar///\nThis is the expected behaviour on OSX\n\nIn reply to: 74351965 \n. i take that back, it's not based on the substring. if we have only following flashes, we have to use the actual string itself. given the first slash would be found after the actual string.\n\nIn reply to: 74352319 \n. true, at the moment it would actually end up returning a /. i'll fix this. lol string parsing :(\n\nIn reply to: 74353252 \n. can't implement without test :p\n\nIn reply to: 74353658 \n. > _CFStartOfLastPathComponent2 \n_CFStartOfLastPathComponent2 will not be helpful in case of trailing slashes as this would end up pointing to the slash before the last. #Pending\n. more the merrier \n\nIn reply to: 74354034 \n. /temp/\n\nIn reply to: 74353642 \n. I wish the result from CF was good. then we wouldn't have to do much of this extra painful parsing. it seems it was assumed during implementation. \n\nIn reply to: 74354338 \n. _CFStartOfLastPathComponent2 would return 1 , meaning the result would be temp/\n\nIn reply to: 74354418 \n. we are testing multiple cases here and they are independent of each other.\nso expect is appropriate. \n\nIn reply to: 74357619 \n. I will update it for the ones that seems independent. Although I'm sure we can go through each test case and see if they can be converted to EXPECT, but this is not the scope of this CR.\n\nIn reply to: 74357911 \n. > CTLineRef \nuse static_cast not c casting. #Resolved\n. this needs to be updated, if we are supporting this or add a caveat  #Resolved\n. status needs to be updated #Resolved\n. > with \nremove #Resolved\n. although for arm, expect any throw seems to work.\n. resonable\n\nIn reply to: 74654704 \n. else can be removed for default return. #Resolved\n. can you break these down into various property sections and do a check & return.\nThe function itself it over 100 lines of code and the multitude of if statements makes it much more cumbersome.\nAlso if an 'if' statement return's the following can be an 'if' rather than an 'else if' #Resolved\n. do you want to add the fact that we are treating this as Person record in the notes?\n #Resolved\n. we have a macro for this: RETURN_NULL_IF(var) #Resolved\n. > } else { \nnot needed #Resolved\n. > import \"ABMultiValueInternal.h\" \nangle brackets #Resolved\n. interestingly non of your properties have any form on ownership declared (copy/retain), is this intended?\n. > if (self) { \nif(self = [super init]) #Resolved\n. given your _list is an array, you can use enumeration here  #Resolved\n. > ((__ABMultiValuePair*)self->_lis \nuse static_cast #Resolved\n. > ((__ABMultiValuePair*) \nstatic_cast #Resolved\n. > } else { \nmost of your default cases have if, you can remove them throughout the file. #Resolved\n. > value \nmark is as __block. given it's not being modified. it's not neccesary \n. will add note on the switch here. #Pending\n. > NSDecimal* foo = new NSDecimal{ 0 }; \nremoved; #Resolved\n. this is internal, and I don't need to be presented as a var.\npreprocessor placement is fine for it's limited use.\n\nIn reply to: 75560569 \n. This is being tested via EXPECT_OBJCEQ when we compare two decimals in the tests.\nIt ends up calling NSDecimalNumber:compare, which calls this.\n\nIn reply to: 75560855 \n. The method is being tested via NSDecimal functions that call into it, which are being called by NSDecimalNumber methods, which have tests.\n\nIn reply to: 75560999 \n. bah, yes. Also at other places.\nI switched to this wearily named macro from a normal if check, looks like i messed it up. \n\nIn reply to: 75560872 \n. > || \n&& #Resolved\n. i'll change it to leftWidth;\n\nIn reply to: 75561578 \n. that comment should be worded better. \n\nIn reply to: 75561709 \n. it could be 0, in that case you will not enter the loop and exit with the result as y.\n\nIn reply to: 75562017 \n. I think this could use more tests. will add more.\n\nIn reply to: 75561008 \n. uh I forgot to normalize. Looks like i didn't hit this unique case. \nWill add more tests to cover this.\n\nIn reply to: 75561877 \n. ah yes. updated.\n\nIn reply to: 80341079 \n. LOL yep\n\nIn reply to: 80341237 \n. It's automatically adding it for some reason.\n\nIn reply to: 80341159 \n. given it's a TODO in the future. it's a caveat\n\nIn reply to: 80342086 \n. getting removed. not being used anymore.\n\nIn reply to: 80499547 \n. given it's a NSNumber, it should pass through and end up in the same scenario.\ntest added.\n\nIn reply to: 80504609 \n. Yep Limits tests are being added\n\nIn reply to: 80506974 \n. so given it's LLONG_MIN, the absolute of it will be the same.\nthen it's being casted into unsigned long long. It matches the reference platform.\n\nIn reply to: 80504012 \n. it's getting removed.\n\nIn reply to: 80529815 \n. the size changes depending on the calculation. so leaving it as is.\n\nIn reply to: 80530016 \n. at most it points to the internal decimal._mantissa, thus uses it's length.\nthere are few cases where we need a size bigger than MAX\n\nIn reply to: 80530675 \n. my use of dividers lol, so it stands out in syntax highlighting. \n\nIn reply to: 80536309 \n. > Since \nremoved #Resolved\n. making all internals static (if possible)\n\nIn reply to: 80537096 \n. sure, all of the operations are done after normalization. Will add more comments.\n\nIn reply to: 80536966 \n. I was using just \\\n\nIn reply to: 80536986 \n. > (number1 == NULL) && (number2 == NULL \nchanged when moved to macro.  updated to != NULL. #Resolved\n. i'll re-word this. This is being compacted via NSDecimalCompact before being sent out as a result.\nThere are places I have TODO: i'll add task numbers for them\n\nIn reply to: 80541351 \n. fit as much as possible into the 8byte mantissa \n\nIn reply to: 80541435 \n. i'll move it to a const.\nthis is more of trail and error (as above) to figure out the undocumented behavior. \n\nIn reply to: 80502918 \n. that's only during calculation (e.g, to support carry over), then they are compacted to fit into NSDecimalMaxSize.\nSo when this function get's called. the size is NSDecimalMaxSize\n\nIn reply to: 80564374 \n. this matches and passes with the reference platform. Given mantissa is public (and can be set manually to create a decimal value) we needed a match.\n\nIn reply to: 80568815 \n. since we are limiting this by length, we'll ignore the arbitrary values.\n\nIn reply to: 80568168 \n. sadly yes.\n\nIn reply to: 80587741 \n. it's being NSDecimalNormalize, so we end up having the same exponent.\n\nIn reply to: 80588809 \n. i'll standardize. \n\nIn reply to: 80589717 \n. If you look at initWithMantissa in NSDecimalNumber (where the decimal structure is created), it indicates how the length is calculated.\nI'll add a note\n\nIn reply to: 80589608 \n. fair, but at the end the NSDecimal needs to be created, which is the exact tests that go through NSDecimal*\n\nIn reply to: 80601818 \n. If you follow the path that subtraction was called, you can see the conditions.\nBest way to start would be from NSDecimalNumber. Given, I will add some more comments. \n\nIn reply to: 80597922 \n. for some reason I decided to change that from the last CR.\n\nIn reply to: 80603423 \n. Yes, verifying with platform, it seems for those cases yes we can.\nAdding a check\n\nIn reply to: 80589323 \n. Talked and check with reference platform, we will have some cases where we lose precision. Adding some checks as per the other comment.\n\nIn reply to: 80588035 \n. it doesn't help us much with the error messages when we have failures. \n\nIn reply to: 80738231 \n. not always, often they might differ. e.g SCHARexample.\nsecondly, MIN becomes 0x8000000000000000 just before it's set as the mantissa, while max becomes 0x7fffffffffffffff \n\nIn reply to: 80737862 \n. when the old docs were there (If I recall), it wasn't a NSEnum, so I decided to keep it the same..\n\nIn reply to: 80771005 \n. it's dead code now, with change to function pointer.\n\nIn reply to: 80787909 \n. yes, but given it ends up being a short multiplication, we reduce the number of times we overflow.\n\nIn reply to: 80588010 \n. All of the fields are set to 0.\n\nIn reply to: 80787871 \n. The functions will be macros, which helps with pin pointing errors.\nAlso the way it is makes it easier to read and understand what's going on. I agree it can be parametrized, i'll let is as is for now.\n\nIn reply to: 80785175 \n. Also need to take care of cases for exp + power >= 127 and the lower -127 limit. \nI'll add this as separate CR (given I need to write extensive tests to test edge cases)\n\nIn reply to: 80589824 \n. note the mantissa is a 2byte, each byte represent a factor of USHRT_MAX + 1. when you down cast from int to mantissa, you are storing the (overflow & 0x0000FFFF)\n\nIn reply to: 80598557 \n. this can be memcpy-ed and so it the mantissa. I think at point ben suggested leave it as assignment for now.\n\nIn reply to: 81205825 \n. LOL my use of dividers, so they pop out in syntax highlighting. \n\nIn reply to: 81209076 \n. the tests are self exoplanetary, this is just for visual guidance for those who have a hard time separating white lines (e.g me).\nIt would be an overkill to comment them.\n\nIn reply to: 81209671 \n. this is internal and used only once, i'm going to leave it as as for now, as opposed to having an internal header.\n\nIn reply to: 81209839 \n. interestedly interesting. \n\nIn reply to: 81210156 \n. comment removed. this is self explanatory. \n\nIn reply to: 81211126 \n. i'm going to leave this as is for now.\n\nIn reply to: 81211332 \n. taken care of in all places.\n\nIn reply to: 81210095 \n. I don't see the difference of using for vs while here. while I understand all three vars will be at one place. this is also fine as is now.\n\nIn reply to: 81213548 \n.  if the pow was 10^5, given the multiplier is a unsigned short, it will over flow the multiplier.\n\nIn reply to: 81215000 \n. there is a better way, when you fit the multiplicand into a mantissa and do a mantissa by mantissa multiplication.  where you don't have to go through dividing up the exponent way above.\nThis will be in when NSDecimalMultiplcation is implemented.\n\nIn reply to: 81216246 \n. done.\n\nIn reply to: 81216875 \n. good point. i'm going to open a bug for this and send out a seperate CR (this has gotten too big), as it would need some more testing after the change.\n\nIn reply to: 81217804 \n. ah the typos.\n\nIn reply to: 81225772 \n. that means taking a copy of struct on every loop. I'd rather not do that.\n\nIn reply to: 81226090 \n. usually only time this could be false is if the user strictly passes in a custom decimal struct . The reason i'm not checking at the top for that exact case.\nJust try to compact as much as we can (if it's already compacted , great\n\nIn reply to: 81226595 \n. i'm going to leave it as it is. this would just add more logic and could easily make it error prone.\n\nIn reply to: 81226982 \n. which is a fair assumption given we are just going back a step. nonetheless it would save time on the multiplication and addition \n\nIn reply to: 81228168 \n. i this is much more elegant :p. also easily readable/understandable. \n\nIn reply to: 81230505 \n. looks likes it.\n\nIn reply to: 81231952 \n. standardized \n\nIn reply to: 81232239 \n. Definitely , but the API assumption is it's compacted as much as possible. Now again the user directly create a NSDecimal, set the mantissa (weird that you would want to do that) and the other fields (If they were to do that, I assume they understand the implementation) and  it's advised not to do that. \n\nIn reply to: 81231293 \n. i'm going to leave it as is. It makes the reading easier for separate cases.\n\nIn reply to: 81243194 \n. looking at the failure log, it seems pretty much clear on where the failure is, based on the assert log that spewed. Leaving it as is.\n\nIn reply to: 81243112 \n. it seems pretty clear as is with the () already there.\n\nIn reply to: 81246072 \n. sadly, that's what the reference platform is choosing to do.\n\nIn reply to: 81245689 \n. given it has to to be in the ranges of unsigned long long for initwithmantissa, caching doesn't help much.\n\nIn reply to: 81246993 \n. it's converted to a function, although not nice, it's pretty much result.h\n\nIn reply to: 81244804 \n. LOL\n\nIn reply to: 81245870 \n. i think it's small enough to be on its own. rather than expose the _obtain through the header.\nIf we use it more often, i'll consider.\n\nIn reply to: 81248196 \n. not necessarily. as you can see this is destination->_mantissa, where as, the other is destination->decimal._mantissa.\n\nIn reply to: 81245816 \n. there is already tests where the exponents differ.\nAlso these tests cover, difference in length, exponent.\n\nIn reply to: 81250443 \n. sadly we want to fit into the unsigned long long as much as possible, for memcpy.\n\nIn reply to: 81246684 \n. I seen it hit the exponent check. also it's normalized. still free test case :p\n\nIn reply to: 81251407 \n. it get's compacted in the initwithDecimal\n\nIn reply to: 81252181 \n. there are cases above that does the big differences. \n\nIn reply to: 81251926 \n. non the less adding few.\n\nIn reply to: 81252554 \n. also from the way it will be compacted, there is a difference, but it doesn't matter, since it will be normalized during comparison. if so majority of the subtraction cases would fail too.\n\nIn reply to: 81252646 \n. comment #2 is the answer. look at initwithmantissa where we make the unsigned long long copy, we reduce the chances of error, if those bytes are filled up.\n\nIn reply to: 81252442 \n. leaving it as it is, since it much simpler like this, especially when we walk the whole array.\n\nIn reply to: 81242623 \n. okay I remember it now (it's been awhile). this was to make sure that the floating point precision of double was saved. pretty much shift the value.\nNow this was to match the reference platform specifically,  I tried to bind to a lower bound, but storing 23.5 into long will be 23, so we wanted to save the percision and that was their limit.\n\nIn reply to: 81253840 \n. true, so is if it's a long long. the appropriate initializers should be used for those cases. here we assume it's a double (although it could be an int, a char, or long)\n\nIn reply to: 81257162 \n. good point\n\nIn reply to: 81257792 \n. it's  a | since you are casting the unsigned short into an int and then pretty much adding onto the remainder.\n\nIn reply to: 81243253 \n. usually bitwise operation is faster than using addition. non the less, if it makes easier to understand.\n\nIn reply to: 81260000 \n. if we come to the condition, then we have the overflow that will take one more slot than the length. so it's been compared to the given length.\nThe _extendedLen is the one that hold the limit (it could be NSDecimalMazSize or more).\n\nIn reply to: 81242248 \n. reason in the other comment.\n\nIn reply to: 81242226 \n. 1. we don't need to do this, if it's already a non decimal number.\n2. when it's a non decimal number, we have to bring it up to the size of the unsigned long long, specifically for decimal exponent with precision, since if we get up to a point where we have 92.00000000 (while going through the loop), this is a fair integer which would be 92, but we lost the rest of the precision. \n\nIn reply to: 81263752 \n. yes, but sadly, it not what they seem to do. to have the internal mantissa match, (with ref) it has to be brought up.,\n\nIn reply to: 81397406 \n. i'm going to hold the precision one, till we have rounding. I'm wrapping up this CR. anything else can be opened as a bug.\n\nIn reply to: 81398086 \n. we already have overflow checks. If there anything else you would like to be added, please open it as a bug. Given how it is, the test cases are limitless.\n\nIn reply to: 81398304 \n. ooks like it disappeared. \n\nIn reply to: 81399065 \n. i'm confused, this works fine.\n\nIn reply to: 81239938 \n. it'll be added with the bug\n\nIn reply to: 81417400 \n. we talked offline this is to match apple.\n\nIn reply to: 81400476 \n. we should  just put this in the mm file, it would be safer (accidental inhertience/conflicts in other source files?)  #Resolved\n. :D\n\nIn reply to: 82900097 \n. > rects \nrects could be an invalid pointer, add a check?\nhmmm we check how ref behaves, given a user can pass in a valid count and for some unknown reason a invalid rects? #Resolved\n. > dealloc \ncan be removed. no longer needed.\n. > (_CTFrame*)frame \ncan frame be NULL? given you are validating it's not below.\n. > count \nis this being used anymore?\n. > uint32_t count = [((_CTFrame*)frame)->_lines count]; \nAlso can be moved within the if check. This takes care of NULL references and reduce the code path.\n. > CTFrameCreateWithAttributedString \nwe should be following some sort of naming convention to identify this is not part of the public api. \nLooking at the name, makes me think it might be a public API.\n. > CTLineCreateWithAttributedStringAndWidth \nplease follow naming convention to identify this as an internal method.\nSame below.\n. > static_cast \nis this really necessary? given it's pretty much a NSMutableArray.\n. > run->_range.location + run->_range.length \nparenthesis to make the code more readable \n. > FAILED \nthis macro should make these easier: RETURN_NULL_IF_FAILED(factory->CreatePathGeometry(&mutableRet->_pathGeometry)) #WontFix\n. mutableRet should be released and below #WontFix\n. why are we ignoring _metrics and _cachedMetrics? #Resolved\n. RETURN_NULL_IF #Resolved\n. RETURN_FALSE_IF #Resolved\n. > else { \nnot needed. #Resolved\n. > else { \ncan be removed to reduce the if nests #WontFix\n. > anyway \nremove #WontFix\n. > UTF8String \nUTF8String is a heavy call, you have some buffer allocation + NSData creations.\nwe are over using it. #Resolved\n. > Arial Bold Italic \nI'm sure there would be more tests for fonts at some point in the future.\ndeclare them above as consts. this will reduce the #if/#endif usage every time we want font names. #Resolved\n. > Arial Italic \nbetter yet, have a test header file that defines these for OSX and Windows. this will reduce the #if defs and make it easier to maintain.  #WontFix\n. > options parameter not supported \nseems like we are supporting a portion of it? #Resolved\n. > 100 \nI can't recall If I checked this, but does this match the reference platform? #WontFix\n. > result = [outputStream write:(const unsigned char*)[self bytes] maxLength:numBytes]; \nwe might not write the whole buffer, we need to check if we have any left over and write the rest?\nI recall similar code existing already. #Resolved\n. > result \ncheck for failure condition (-1)? #Pending\n. > byteBuffer \nyou can just get the mutableBytes of the NSMutableData and read into it directly (would help you avoid the copy)\nIf you need to grow the capacity, you can do it via increaseLength #Pending\n. Agreed, in this context, append is appropriate (but just thought I would surface that).\n\nIn reply to: 83930789 \n. > _InitDWriteFontPropertiesFromName \nchange of naming convention  #Resolved\n. > TODO: This can be removed given deferredLoading is no longer used. \nin WIC we trust #ByDesign\n. brain's changes would take care of the EBR usage here #ByDesign\n. these are going away ASAP #Closed\n. i'm taking these out, these don't need to be exported. #Resolved\n. > /* mask, clip, etc. */ \ndo we need to add a TODO here? #WontFix\n. > pt \nvalidate pt #Resolved\n. > 96 \ncurious where the 96 is coming from?\n. ignore that, given the DPI is set to 96 PPI.\nMake this a const?\n\nIn reply to: 84132723 \n. existing comment.\n\nIn reply to: 84146533 \n. good question, this in the the context of the CR.\nGiven these already lack tests (and more or less documented implementation), I'm leaving this alone.\nA bug for the UI team.\n\nIn reply to: 84146802 \n. explain\n\nIn reply to: 84147544 \n. not context of this CR.\n\nIn reply to: 84147591 \n. Different project.\n\nIn reply to: 84147801 \n. given how it's passed to WIC, leave it as is.\n\nIn reply to: 84141914 \n. not sure what you are referring to\n\nIn reply to: 84147225 \n. Ops, when I migrated it from my old def to this.\n\nIn reply to: 84149431 \n. this is not present in result.h.\ni'll move it there so it can be used by others.\n\nIn reply to: 84145558 \n. as per documentation, we do not support the other case\n\nIn reply to: 84143106 \n. clang format;\n\nIn reply to: 84143254 \n. status will be updated in later iteration\n\nIn reply to: 84143387 \n. looks like the comment is off. It looks fine as is.\n\nIn reply to: 84144125 \n. The todo's are for upcoming iteration/ will have issues attached.\n\nIn reply to: 84144287 \n. Given it's not strictly D2D (e.g IWIC)\nlooks like I might change it back.\n\nIn reply to: 84144680 \n. this comment seemed misplaced.\n\nIn reply to: 84145437 \n. this is getting cleaned up by brain. Leaving it as is for now.\n\nIn reply to: 84145944 \n. hmmm correct. I'll look into that.\n\nIn reply to: 84150494 \n. Given it had WIC methods, I thought it might be sane., but Wrapper seems more generic.\n\nIn reply to: 84149288 \n. Yep, that's the plan when we shed off the old code we are carrying.\n\nIn reply to: 84149494 \n. Hopefully so :L)\n\nIn reply to: 84150620 \n. not valid\n\nIn reply to: 84152763 \n. as per other comment.\n\nIn reply to: 84149490 \n. seems so.\n\nIn reply to: 84145705 \n. it's static inline.\n\nIn reply to: 84153721 \n. I'd rather not as we will be adding CoreGraphics related helpers here and we don't necessarliy need it in foundation.\n\nIn reply to: 84152959 \n. > ctx \ncould this be null?\nif so add a null check\n. line break for readability \n. > scale \nthis can be set to 0? and how is that handled in the arithmetic \n. > _scale \nsanitize 0? or are you already handling it?\n. debug verbose logs from before (incase the UI team is depending on this).\nnot the context of this CR.\n\nIn reply to: 84146123 \n. > Setters \nremoved #Resolved\n. given data could be huge, i'd rather not introduce copies.\n\nIn reply to: 84143048 \n. lifetime of the image has to be independent from the data (where the data can come from a file, etc)\n\nIn reply to: 84159980 \n. curious on what's going on here, add some comments what you are trying to do here?\n. RETURN_IF_NULL()\n. > string \ncan the string be null?\n. > sizeOut \nif(sizeOut) {\n...\n}\n. this does not seem thread safe\n. NO\n. I will add a note, but my next iteration should replace the 4, with the appropriate bytes for the format.\n\nIn reply to: 84333976 \n. CGColorSpaceGetModel. replaced.\n\nIn reply to: 84348935 \n. > frame ? static_cast<_CTFrame*>(frame)->_path.get() : nil; \nfor invalid cases, please use the macros in result.h, not only  will it support any future alteration, it can also provide more information on the case.\nthe current one is not so useful when debugging. \n. again use the macros for invalid cases, it can be done before the cast, and it makes the code much more readable. \n. > static_cast> \nis this cast really needed?\n. outside side effects?\nAlso Macros make much more sense here and given it's the defacto standard, it would be nice to have all of the code in a certain way.\n\nIn reply to: 84375730 \n. This already exsits, forgot to update.\n\nIn reply to: 84357054 \n. It seems much clearer given these. \nWe are already have inline functions for getters.\n\nIn reply to: 84331527 \n. The apple documentation makes clear of this. \n\nIn reply to: 84548940 \n. the unimplemented is for the analyzer, this is prep code.\nAlso a caller would not be able to make this call given we will have a stubbed method.\n\nIn reply to: 84549825 \n. prefer not to use lambda. This is fine as it is.\n\nIn reply to: 84550241 \n. It's autoreleased.\n\nIn reply to: 84551298 \n. out of scope for this CR.\nThere should be a UIImage cleanup at somepoint by the UI Team.\n\nIn reply to: 84550720 \n. hmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n\nIn reply to: 84551045 \n. Taking care of it in the next CR iteration.\n\nIn reply to: 84331167 \n. switch the sentence around.\nIt makes more sense to tell what is does first then talk about the return values. #WontFix\n. this file somehow resurfaced. It's removed as it's counter part. #Closed\n. Color space will be based off of  Pixel format.\n\nIn reply to: 84151190 \n. Looking at the documentation and testing on IOS, we get the raw data of the format.\nI'm converting to the stated format in the CR (based on the Native Pixel format table for JPEG). Thus in case the image is in PNG, we convert it to JPEG and write out the data.\n\nIn reply to: 84357497 \n. > TODO: Add cavet everywhere for how format changes \nTODO without issues are coming up in next iteration (soon)_ #Resolved\n. > object_setClass((id)this, [CGNSContext class]); \nC++ cast?\n. > / 2.0f \nwhat is the significance of this division by 2?\n. Yes it is.\n\nIn reply to: 84747216 \n. Yes\n\nIn reply to: 84749461 \n. I'll leave it as is, given it's an early check. rather than going through two function calls.\n\nIn reply to: 84749628 \n. Given some of the conditions (e.g) initWithImage, can return nil.  Given getImage is used in multiple places, the return nil is useful.\n\nIn reply to: 84748990 \n. This is a code that will be removed. so there is no benefit to changing the existing code.\nThis code path will not survive going forward.\n\nIn reply to: 84755985 \n. given  a UIImage, you try to obtain the m_pImage.\ne.g in _initWithCopyOfImage. Note it's an inline function.\n\nIn reply to: 84756600 \n. changed to copy after build and not be part of the SDK\n\nIn reply to: 84752712 \n. > Properties \nstore the value on first call, to be used later.\nso we don't have to invoke the PixelFormat everytime. #ByDesign\n. not as of now, there are still some code, that's using it. Given this is WIP. yes eventually., \n\nIn reply to: 84763290 \n. Hmm actually , CGImage is mutable.\nTaken care of the compound stuff.\n\nIn reply to: 84762994 \n. Given CGImage is not strictly immutable. ByDesign.\n\nIn reply to: 84758952 \n. hmm looks like refraction gone mad.\n\nIn reply to: 84762069 \n. removed /\n\nIn reply to: 84357857 \n. The vendor encoder is different from the container format.\n\nIn reply to: 84358222 \n. removed.\n\nIn reply to: 84761417 \n. CreateDecoderFromStream  does not take in the format, rather it takes in the vendor.\n\nIn reply to: 84770089 \n. talked offline with dustin. Needs to get encoded .\n\nIn reply to: 84728161 \n. Yes, the Decoder can figure out which data it is. The specification is specifically for those function that gives us some data and request it to be Decoded as a PNG/JPEG.\nThis is to ensure that when you give some other format to CreatewithJPEGData, it fails.\n\nIn reply to: 84806569 \n. forward slashes\n. Addressed this earlier, I would have image related helpers here. Would just like to keep it separate. \n\nIn reply to: 84807862 \n. This was to ensure we work on OSX unit tests.\n\nIn reply to: 84807933 \n. Will occur in a separate PR.\n\nIn reply to: 84808434 \n. let's talk on this one. yep\n\nIn reply to: 84810493 \n. The ScopeExit implementation is not ported over to xplat. \n\nIn reply to: 84810168 \n. That should be more of a fail fast/\n\nIn reply to: 84810633 \n. I'm going to send it out as a separate PR.\n\nIn reply to: 84357249 \n. Added TODO, will be part of separate PR.\n\nIn reply to: 84786690 \n. > strcmp \nuse strncmp  #Closed\n. > include \nnit: Import #Closed\n. > GetFile \ninvalid pointer when we can't find the file?\nDeal with grace or not? #Closed\n. > n rename(CPathMapper(path1), CPathMapper(path2)) == 0; \nnit: Log errno if failure? #Closed\n. > strcpy_s \nThis can fail, are we staying silent?  log the error? #Closed\n. > 2048 \nwhere does this value come from?\nMAX_PATH? #Closed\n. > dirOut \ncan this be invalid?\n. > %s\\Documents\" \nPut the directory names/path strings in an internal header as a const/define?\nThis would make future maintenance easier\n. > strcpy_s \nwhat is the copy fails? we end up returning true regardless. \n. > 4096 \nMAX_PATH?\n. if(_sopen_s(&fid, CPathMapper(path), mode, share, pmode) != 0 ) {\n  return nullptr;\n} #Closed\n. > path \ninvalid path pointer? #Closed\n. Based on documentation, it's pretty much an auto determiner. Given some functions want explicit control over the type of decoder. we'll have two.\n\nIn reply to: 84975466 \n. > if (FAILED(m_randomAccessStream->get_Position(&currentPosition))) { \nRETURN_RESULT_IF_FAILED\n. I just realized this change is not in the repo. Still doesn't hurt to introduce it.\n\nIn reply to: 84979111 \n. as above, this and below can be covered via the MACRO\n. again, the macro introduction of RETURN_RESULT_IF_FAILED(.......,-1);\nwould help allot here.\n. > MSFT \nWINOBJC? #Closed\n. >  [writeData writeToURL:storageUrl options:0 error:nil]; \nASSERT_TRUE([writeData writeToURL:storageUrl options:0 error:nil]); #Closed\n. > writeData writeToURL:storageUrl \ncheck for success, as here and other writes #Closed\n. removed, you must have a valid colorspace as per native platform. #Resolved\n. > LT status = imageFa \nadded RETURN_IF_NULL #Resolved\n. EXPECT_NE #WontFix\n. If it's time sensitive, understood.\n\nIn reply to: 85244713 \n. setters? to keep the encapsulation?  #Resolved\n. These are being taken care of it in 16/11 and contunie into 12\nIt's part of the re-integration tasks (which will be created)\n\nIn reply to: 85251230 \n. > Segoe UI \nmake this into a defined cost. #WontFix\n. make this an NE_ENUM, such as above?\n. > eachother \neach other\n. > path \nvalidity check.\nRETURN_FALSE_IF_NULL #Resolved\n. This an already existing pattern. Also code reuse.\n\nIn reply to: 85251489 \n. A class would make it better given how we have assessors, but given how the initial designed was rolled out like this for all of graphics/text, let's keep inline.\n\nIn reply to: 85251659 \n. Already addressed in earlier comment, please take a look.\n\nIn reply to: 85251955 \n. this is a valid keyword\n\nIn reply to: 85252277 \n. something for the next.\n\nIn reply to: 85252977 \n. The cute pattern is called the variant of the builder pattern.\nAdding these to the constructor is not much help, given not all of the vars will always be set, second it just makes it way harder to read and maintain.\n\nIn reply to: 85252056 \n. please see the other comments.\n\nIn reply to: 85251339 \n. This nesting can be uncoupled via the usage of RETURN_FALSE_IF_FAILED.\nThis would help introduce early fail conditions and make the code much leaner.  #Resolved\n. > EXPECT_TRUE(! \nEXPECT_FALSE #Resolved\n. some of these are not released before being reassigned.  #Resolved\n. > context \nis this really a good pattern?\n. move this a generic file, so all of us call use it :)\nresult.h might be a good destination. \n\nIn reply to: 85814159 \n. nit: could you add a comment on why this is added.\n. >   inline void SetPath(CGMutablePathRef path) { \ncould we just switch over to the standard of having getters and setters to keep encapsulation throughout the code?\nWe have a mix of direct access and using getters and setters. It would be good to just follow one standard (encapsulation works the best here).\n^I meant for the rest of the code that access the struct variables directly, we should have a setter/getter just like this for them.\n. To be the devil: RETURN_RESULT_IF(!context->HasPath(),CGRectNull);\nYou can use RETURN_IF(), etc for the non noisy conditional checks.\n. This generally seems unconventional. Although it makes sense in code terms. It might be better to have a setter?\nActually why don't you move this code into the actual implementation and make this a forwarding call, that way you provide better encapsulation and have the majority of the logic attached with the implementation.  #Resolved\n. If you move this into the Impl, you can avoid the getters and just forward the method call here. #Closed\n. > CFTypeRef cf1, CFTypeRef cf2 \ncould either of these be invalid (null)?\nAdd a check for that condition? #Pending\n. >   FAIL_FAST_IF_FAILED(mutableRet->InitializeGeometries()); \nGiven this is a back and forth discussion we had. This feels more appropriate to return a null, rather than fail fast.\nof course release the allocated blocks then return. #Resolved\n. > path \nvalidity check here. #Pending\n. >  ; \nextra ; remove? #Pending\n. understood, but given we have a mixed use, it does damage the code clarity.\nWe have function that looks more or less like getters and can be used as setters.\ne.g Foo() = x;\nThen we have some direct access and some use of encapsulations. \nGiven these are private, we may do whatever we wish that's sensible, but we should try to avoid damaging the clarity of the code for the future generation.\n\nIn reply to: 85839929 \n. This is one messed up comment sequence. The order is way out of line.\n\nIn reply to: 85839929 \n. Sorry not familiar with the API behaviour, then is CGPathCreateMutableCopy supposed to behave the same?\n\nIn reply to: 85839523 \n. > path \nvalidity check here.\nAlso a validity sweep of this file should be good :) #Pending\n. >  path->PathGeometry()->GetFigureCount(&count); \nThis can FAIL #Resolved\n. > path->PathGeometry()->GetFigureCount(&count); \nRETURN_FALSE_IF_FAILED #Resolved\n. is figureClosed need to be copied over? #ByDesign\n. > ol te \nwe should this static, given it's internal to this file. #Resolved\n. > RETURN_FALSE_IF(!cf1); \nwhat if both of them are NULL? #Resolved\n. > framePtr->_lineOrigins[i].y > 0 \nswitch around and have this check first.\n. Although you don't \"prefer\" early returns. This code would be much simpler and so much simpler to read if you used early returns.\nWe have if layers that aren't the greatest looking for code readability. \n. > multiple \nlineHeightMultiple\n. > CFAttributedStringRef \nproper casting?\n. bad formatting?\n. this is a duplicate of the above with slightly different configuration. Refactor the code so you can use it generically and can add more tests easily.\n. RAII? #WontFix\n. > _getAndClosePathGeometry \nextra nit: _CGPathGetAndClosePathGeometry(...) ? #Resolved\n. This code has gone away, i'll be sending out the PR soon.\nActually this whole file is gone.\n\nIn reply to: 86612430 \n. > pGeometry \nif pGeometry is invalid, we end up returning S_OK.\nadding a check for pGeoMetry and path should help.\nRETURN_HR_IF_NULL(E_POINTER,pGeometry);\nRETURN_HR_IF_NULL(E_POINTER,path); #Resolved\n. > opyright (c) 2015 Microsoft Corporation. All rights reserved. \nheader updates #Resolved\n. > DisplayTextureContent \nnit: DisplayTexture #Resolved\n. Never mind, it's getting removed in my change over to use WIC/D2D\n\nIn reply to: 86869562 \n. > int \nsize_t? #WontFix\n. This class will go away, when we get Jared's changes. #ByDesign\n. This will also go away when we get Jared's refactoring work. #ByDesign\n. > / TODO: RAM: a constructor with the new baseCPP would make life easier here. \nwill do with merge #Pending\n. fixing this and all the other crazy clang gone wild issues. #Resolved\n. Yes, but given it's a COM object. I've updated how this gets resolved.\n\nIn reply to: 86919393 \n. same as before, i'll update.\n\nIn reply to: 86920203 \n. > GUID_WICPixelFormat32bppPBGRA \nAdded a comment to indicate this needs to be GUID_WICPixelFormat32bppPBGRA\n. This is Clang :(\n\nIn reply to: 86919144 \n. Talked offline. Moving the creation into Quartz\n\nIn reply to: 87046467 \n. This is going away now. And eventually No, we'll be crossing DLL boundaries. \n\nIn reply to: 87041192 \n. given IWICimage takes in UNIT, nope.\n\nIn reply to: 87049503 \n. Depends on the context. They can be mutable or immutable.\nIf you access the pixels via a lock, yes they can be mutable. Given this is off the code of CALayer processing, it's expected this way.\n\nIn reply to: 87049935 \n. Given it's being sent across dll boundaries, rather not\n\nIn reply to: 87050706 \n. Hmm I thought of self containing it here given it's a derivation of IWICImage., but can move it.\n\nIn reply to: 87048740 \n. Given QuartzCore expects a BitMapContext, we still need the image. \nBut the rendering target it moved to QuartzCore and passed here.\n\nIn reply to: 87046864 \n. Also it's not a COM object.\n\nIn reply to: 87056633 \n. With in CG it's mostly bpr. \nI'll leave it as is for now.\n\nIn reply to: 86919975 \n. > //TODO: do it for image? \nTaken care of #Resolved\n. We need to queryinterface with ID. implementing it.\n\nIn reply to: 87101932 \n. Although it works fine, this was mainly to resolve issues with the IDisplayTexture definition Jared has.\nI can see to move it out.\n\nIn reply to: 87102053 \n. uh I'd rather not increase it by one more call.\nThis should be fixed when we go constructor based (as well as other places).\n\nIn reply to: 87101870 \n. This is something that's going away, the reason the naming is so weird is that, first it stands out.\nSecond there is already DisplayTexture defined.\n\nIn reply to: 87102669 \n. formatter fail.\n\nIn reply to: 87102772 \n. Given it's not in the same directory as this file.\nuse <> as per windows documentation. \n\nIn reply to: 87101659 \n. I'm going with \"image\" ?\n\nIn reply to: 87103132 \n. > _static_cast(outValue) \nmakes sense, but syntax looks odd.\nparenthesis? \n. invalid access?\n. > decodeObjectForKey \nnit: decode for class given it's secure coding. #Closed\n. It could be null at some point.\ne.g if the context didn't having a backing image, etc.\n\nIn reply to: 87296908 \n. > else { \nnot needed?\n. we have an issue in this case where data was provided and we might end up needing more space due to change in format.\ne.g 24->32 #WontFix\n. we have the functionality to convert, but we still need a direct access to the backed buffer (WIP)\n\nIn reply to: 87855777 \n. I think it's fine as it is.\n\nIn reply to: 87858489 \n. I think we are already there, so not much of an issue. It's pretty much a basic bitsperpixel calculation.\n((bytesperrow/width) * 8bits/byte)\n\nIn reply to: 87858799 \n. the issue is that at one point it can be and other times i cannot be free-ed.\nI thought of using a container, didn't find one that fit both. if there is one let me know.\n\nIn reply to: 87861378 \n. LOL\n\nIn reply to: 87863052 \n. Sadly not all of it will work against the reference platform, we already have a caveat regarding that.\n\nIn reply to: 87862080 \n. yes that's the match and also the match on ref platform.\nthere is a const update.\n\nIn reply to: 87859492 \n. hmmm I don't think so.\n\nIn reply to: 87862945 \n. I usually get comments to set them to invalidate state. Leaving as it is #ByDesign\n. Sure, I can do that.  #Resolved\n. > > Height < m_height) || (region->Width < m_width) \nmore so it can be !=\n. >   RETURN_HR_IF(E_INVALIDARG, (region->Width > m_width) || (region->Height > m_height)); \nthis might be doing something similar to above, but above code will eventually go away. #ByDesign\n. > delete m_dataBuffer; \noh god, delete[] m_dataBuffer #Resolved\n. Yep was WIP.\n\nIn reply to: 87943153 \n.  this should be isInvertible/canInvert etc to reflect the actual return.\nI initially thought it was a indicator of pass/fail.\nAlso it seems this value is not being used, if we don't need it, we can just pass null in.\n. > endPoint \nmove it closer to use? #ByDesign\n. > (CGPointMake(tanPointBx, tanPointBy) \nis this supposed to be endPoint? #Resolved\n. > { clockwise ? D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE : D2D1_SWEEP_DIRECTION_CLOCKWISE } \nclockwise -> counter_clockwise : I assume this due to the filliped coordinates?  #Closed\n. > // CLOSED \nnit: necessary?  #Resolved\n. more of the old code. Agreed.\n\nIn reply to: 88099822 \n. This is not supposed to be thread safe, the design of the old DisplayTexture is confusing enough, this has been made much better via Jared's change (hopefully it'll migrate here soon).\nuntil then this is a temporary fix.\n\nIn reply to: 88099416 \n. Talked off line, this is ugly enough to stand out. This is a temp fix until jared's changes come here.\nWe have a task for that #1337\n\nIn reply to: 88100057 \n. hmm technically this can be wrapped in unique_ptr for now.\n\nIn reply to: 88114838 \n. at the end we are still using a flag so it's not 'unsafe' as it sounds given the requirements at hand.\nOther than that, i'm wrapping everything that can be wrapped in RAII, including the databuffer.\n\nIn reply to: 88114811 \n. The logic seems odd, given that naturally it's suggested that we allocate the data at most times.\nAlthough RAII are great, I feel as if this is seems unconventional. \nIf(free) {\n .release();\n}\nAlso it makes the assignments make it look like, it could be free-ed.\nI'm leaving it as is for now. \n\nIn reply to: 88114811 \n. > cgDataProvider \ninvalid state check? what is the behavior on ref platform. #Resolved\n. at some point it would be a good idea to make this utilize CPPBase #WontFix\n. > dataProvider \ndid you validate if the changes needs to be reflected in the input or not?\n #ByDesign\n. given our odd implementation of CGDataProvider, i'm curious about this.\n\nIn reply to: 88146706 \n. would be good to have the comment at the top of this function, so it's obvious for the reader/user #Resolved\n. RETURN_HR_IF_NULL consistent use in file. #Resolved\n. >  // Ignore first two params, just return the same kind of stream always \nindicate that at the top of this function, pretty much our Caveats  #Resolved\n. given this is an entity of it's own, It would be best if it's in a separate file.\nI fear this file is going to just grow out of proportion and can easily get messy. #WontFix\n. use getPathToFile() in TestUtils.\ngetPathToFile(\"/.....tif\") #Resolved\n. If that does not satisfy the usage, make this into a utility function (given it looks like a general sequence) so it can be reused in the future.\n\nIn reply to: 88152656 \n. > WinRtClassicComMix \ndo we really need the mix?\nClassicCom?? #ByDesign\n. use GetSystemTimeAsFileTime(&fileTime)  #Resolved\n. > SystemTimeToFileTime \nalso preferably, if this fails, you can just set the time to 0 and leave, rather than running through the below code. #WontFix\n.  RETURN_HR_IF_NULL(E_INVALIDARG, fontFileStream); #Resolved\n. in all honestly why do we need to wait until later, this is not old code, this code is new code being introduced in this change. Let's do it properly the first time, rather than postponing it.\n\nIn reply to: 88280909 \n. When we introduce something new, we should try to do it right as much as possible rather than postponing it to a clean up.\n\nIn reply to: 88312848 \n. i don't think this got moved :(\n\nIn reply to: 88147586 \n. :) glad the refactoring helped clean this up.\nQQ: I assume this passed in OSX and Windows and not related to the bug you recently opened up?\n. in all honestly this looks gruesome to read. uh with all those static_casts :(\n. yep exactly, this file is getting out of hand. In the future if you were to introduce any new classes, it would be wise to evaluate the appropriate place, rather than putting them in the default place where everything else is (just because something is already there, it doesn't necessarily mean, that's the right thing to do). I understand your frustration of just wanting to get this fix in, but as I mentioned due diligence at the start would be good. \nGenerally it would be appreciated if there were smaller PRs and that would be great. but as I said, if we do this correct the first time, it would be the best.\nIt would be fine to have it in the post-work PR, as long as that doesn't become a giant bubble.\n\nIn reply to: 88316782 \n. other than that, other changes looks fine. Also I feel the general notation of \"there are already similar stuff there and given people signed off, i'm just going to add onto it\" might not be the right choice going forward.\nwe all know the pain of refactoring exisitng code :(, so if we put them in the correct place at the start, it would make everyone's life better. Also what you said above is appropriate if you are just changing few lines in the existing code, but here you are introducing completely new classes.\n\nIn reply to: 88317726 \n. I understand your frustration of trying to get this in, but  we all know how much fun it is to refactor code :D (especially if we introduced it). #nohardfeelings.\n\nIn reply to: 88318143 \n. parenthesis (which would make this so much easier to read)\n. > __FirstPossibleRectForProposed \nappend the appropriate framework/Section this function belongs to (e.g _CGTextFirstPossible....) #ByDesign\n.  CGFloat newXPosition = ret.origin.x + ret.size.width + 2 * padding;\nif(!remainingRect && (newXposition >= _size.width) {\n return ret;\n}\n....\nThe use of nested ifs is really getting messy. #ByDesign\n. new line between, hard to read with everything clumped. \n. > 2 * padding \ntrying to understand what's going on here, explanation of the 2*padding? Add a comment.\n. use empty() here.\nif(exclusionRectsForHorizontal.empty()) {\n return ret;\n}\n. > self.lineFragmentPadding; \nyou have a mix usage of self.xxxx and access via _xxxxx\nstandardize. \n. yes it's two ifs and rather than going with preference, we should look at code readability.\nMost of this code is already heavy and it would make sense reduce the clutter. \n\nIn reply to: 88341543 \n. > __FirstPossibleRectForProposed \nreading this makes me think that it's defined in here. given __ usually means very restricted internal usage.\nMore appropriate would be _xxFirstPoxxx #ByDesign\n. need a better story for this. \nWe need to fix the path issues for unit tests once and for all #Resolved. the default s_deviceColorSpace is messing up during Linking.\nTemp solution. #Resolved. unit test + drawing tests + validation via CGCatalogue  #Resolved. This was an older method. I'll update the name\n\nIn reply to: 88731599 \n #Resolved. sure, but most of our annotation is pretty broken.\n\nIn reply to: 88731366 \n #Resolved. Yep, this is gone in the next iteration. \n\nIn reply to: 88732063 \n #Resolved. we set the displaytexture to generate PBGRA in the compositor., Needs an update \n\nIn reply to: 88731112 \n #Resolved. > DRAW_TEST_F \nreverted.  #Resolved\n #Resolved. oh god, yes. I removed this accidently for some testing forgot to revert\n\nIn reply to: 88733470 \n #Resolved. better option is more bit comparison.\nBut given it's a red rectangle that get's flooded. this should be fine for now. #ByDesign\n #ByDesign. given context is being logged noisy, we don't always want everything to be noisy.\nThere is a small delta difference in how these are used, I think we are fine for now.\n\nIn reply to: 88747402 \n #Resolved. LOL yep\n\nIn reply to: 88747496 \n #Resolved. that's pretty much the old code. given compositor uses this to release the textured images, we need a support for this.\nAfter the refactor it can be simplified. \n\nIn reply to: 88774081 \n. WIP, I though of just pushing this through for now and send that out later. Given I don't think i'll have that out  till Monday.\n\nIn reply to: 88774084 \n. Actually maybe not monday, tomorrow. \n\nIn reply to: 88774125 \n. Got it.\n\nIn reply to: 88774090 \n. any standard rule?\n\nIn reply to: 88942529 . >result \nFailed fast #Resolved. i'll do that with the rebase, given most of the tests here aren't disabled as per now.\n\nIn reply to: 88964021 . Adding comment, this is pretty much to select the sub-region + scaled.\n\nIn reply to: 88942995 . Finally :) it was a fair fight. I'm curious, was this old code ? If not what's happening here, why are we just churning allot of code. Parent initialization? . Nullptr instead of 0.\n. Curious on the values being used here, it seems pretty odd. Add a comment?. static_cast?. nit:import #WontFix. Both if can be joined. If(data && CFSetContains...)\nTo be fair, the nested ifs are growing in length throughout. It would be good to see if things can be factored or structured differently. Don't need else, do an early return. . The default implementation has validity checks. Add them to be compatible. MLocation. Unsigned?. Re-computation on every test. Make it a utility. Validate size. Check if the default value is returned for size of 0. As noted earlier, you are computing the same base path again.. Any specific error. Nit: end region name. You don't need to double the logic, just call with the errors, log it, if the caller passed in error set it and return. Validate some properties to wrap up the loading tests. This isn't a hard test to add and will make sure we work as expected. We should try to match the rest of the code. Given overall framework usage is early returns, it would be best to go with the pattern. Although you might dislike it :). Add the member convention *m_. Given we register the font. We should be able to obtain information about it (which we supplied). Thus we should make sure what we requested is what we got.\n Again pretty straightforward test to add and will make sure what you added work as intended.. Please elaborate how it is irrelevant? . >__GetRelativeURL \nif it's used only within this file, make it static. If not need to make it a util.. nit: explicit imports. Again as I said before it seems pretty trivial to add that test (1 line???).\nWhy do we need to wait for a later time?\nEasier question to ask is: Do we support the proper set size when we register fonts from files? (That would make it part of this test).\nIf you still don't think testing functionality associated with registered fonts is not appropriate here,  create a bug to add the tests (if it's not there already).. Another questions is: What is the default value for registered fonts? Does the answer match with reference platform?\n. > \"/data/\"  \nCurious: In windows the files aren't copied into data. \nAlso it would be better not to hard code /data/ in this function and pass it in?\n(make it more generic? maybe?) #ByDesign. for some reason I was thinking it wasn't. Double checked and it is.\ngotcha.\n\nIn reply to: 90145289 . this and CGDataProviderCreateWithFilename are pretty much the same logic.\nre-use/refactor. rather than introducing the same code path.. >ret \nnit: result. why use S_FALSE?\nAre you expecting partial failure?. why does this have to be S_FALSE?\nAre you expecting this to succeed, where you have failures?. addition of registering/unregistering multiple fonts test would be useful.. what happened here?\nHow does this behave on the ref platform?. Add a test to attempt to register the same font.\n. >opyTo(fontFile); \n:D. you have repeated code here and in few other tests that do the same thing.\nConsider using a general function. This can help add more tests in the future.. >tring> firstName = (NSString*)CTFontCopyFullName(firstFont.get()); \nthis feels wrong. The general = causes a retain??. something went wrong uhh.\nremoved.. fixed. >try.Attach(newClippingPathGeometry.Detach() \nwhy use attach/detach? #ByDesign. >  RETURN_HR_IF(E_INVALIDARG, !drawingState); \nRETURN_HR_IF_NULL(E_INVALIDARG,drawingState) #WontFix. Never mind, this is needed. since CGIWIC is in header implementation, if it get's imported in another framework. this needs to be exported. This should be solved when CGIWIC impl gets moved to a mm file (have some wip). >fontFile \nvalidity check. #Resolved. validity check? #ByDesign. i'm being too picky here, but what if data was null.\nIs this a valid success? #Resolved. same question as below.\nI assume null data is not valid? #ByDesign. Usually OUT invalid args are pretty much: E_POINTER\nused prominently  in windows. use E_POINTER\n\nIn reply to: 90736872 . >ret.Detach() \nCopyTo() #Resolved. >xtLayout.Detach(); \nuse CopyTo #Resolved. >E_INVALIDARG \ninvalid pointer. #Resolved. >Detach \nuse CopyTo(...) #Resolved. nit: As mentioned earlier, have the comments to indicate something is unused at the top of the function.\nThis makes it much easier for usage. Pretty much call it out at the top. #Resolved. Given it's an internal class.. meh i'll leave it up to you.\n\nIn reply to: 90737774 . all of the headers need #pragma once #Resolved. >Out \nas per SAL Outptr is the most appropriate here.\nuse Outptr #Resolved. >kCFAllocatorDefault \nconsistent usage.  #Resolved. nit: comments on the usage please. #Resolved. return  [super initWithDrawingOptions:options]; ? #Resolved. >D2DWrapper_CustomGeometrySink \nPathApplyGeometrySink.h?\nor something of sort *CustomPathApplySink or something along those lines to reflect the class? #Resolved. not needed as you are fully specifying it #Resolved. curious, how does this behave if info is NULL? #Resolved. >. \nuse (MSBuildThisFileDirectory) and below #Resolved. >D2DWrapper \nas mentioned earlier, we don't have to prefix the D2DWrapper.\nWe should closely align with the parent name (to make it clearer to the reader). #Resolved. >........\\t \n(StarboardBasePath)\\tests.... here and there. >........\\t \nfor neatness sake, move it to the grouping with the other test files or create grouping for CGText*\nGiven this is pretty much Enter point and frameworks.. >designUnitAdvances \ngiven you know the size already, use an array for performance gain . uhhhh why?\n. so if it fails it's valid? no fast fail?. >return font ? font->_dwriteFontFace.CopyTo(outFace) : E_POINTER; \nlets keep it the normal usage in our code base.\nRETURN_HR_IF_NULL(E_POINTER, .....);\nAlso the base check will survive merges (less likely to be accidently deleted)\n. >outFace \nalso check this. >DRAW_TEST_F \nDISABLED_DRAW_TEST_F or not. what happened here? negative to positive flip? . > - \nis this due to the cascade effect?. Please update the usage across the file.\nIt would be a better choice going forward.\n\nIn reply to: 91551180 . >= 14.0.25420.1 \nversioning change?  #Resolved. can we just not copy over everything in the directory?\nThat way we don't have to keep on expanding this.\n\n\n. thanks. I think at one point we decided not to do this. It makes sense and is needed :) #Closed. >!SUCCEEDED \nFAILED ? #WontFix. >!SUCCEEDED \nsame here? #WontFix. we need the indexing to be incremental by 1 + keeps it simple\n\nIn reply to: 92449056 . the comments explains it.\nPretty much get close to the border as possible.\nso smallest delta is needed.\n\nIn reply to: 92449152 . Agreed, but again it's internal access + we can wrap it at a cost,\n\nIn reply to: 92450607 . not part of this scope.\nYep does definitely needs to be updated  #1541\n\nIn reply to: 92450352 . #1541 will in the future\n\nIn reply to: 92309043 . LOL missed.\n\nIn reply to: 92450707 . i'm not implementing CGGradient (it's already implemented in a poor way).\nI'm merely reading the data. It needs to be properly implemented (separate CR #1541)\n\nIn reply to: 92517645 . sadly D2D is interpreting that as 0\n\nIn reply to: 92517563 . >state \nmove it closer to use. >w = 0, h \nnit:I guess using width and height might lighten the mood up?. >clipType == ClippingTypeAlpha ? 4 : 1 \nnit: parenthesis to be easier on the eyes :). >CGContextRef context = bitmapContext.get(); \njust use bitmapContext.get() below?. >CGImageIsMask \nreturn null if it's not a mask?\nRETURN_NULL_IF(!CGImageIsMask(image)); ?. >context [](start = 33, length = 7)\n\nfor some unforeseen reason check if bitmapcontextcreate failed. Yep, I'm thinking if someone decides to change the bitmap info (without realizing we don't support all of it due to D2D restrictions)\n\nIn reply to: 92708281 . Ops, LOL I was thinking it was mask.\nCan you add a check to see if the mask is really as mask?\n\nIn reply to: 92708221 . some how my comment won't appear:\nOps, LOL I was thinking it was mask.\nCan you add a check to see if the mask is really as mask?. I see it being used separately in CGImage usage in one of your CR, i'll leave it be for now.\n\nIn reply to: 92528114 . noisy\n\nIn reply to: 92660158 . talked off line, no that would be 1e-45, 0.1, 0.2, 0.3 ...\nby default kCGGradientDrawsBeforeStartLocation is supported (it's pretty much a binary option)\n\nIn reply to: 92529276 . Definitely., it's being used by all brushes that have image as source.\n#ByDesign. I'll pull that commit in. nit: can we use a inline function to take both of them in and set.\ncontext->setTextMatrix(x,y);. hmmm given getting it back separately, maybe not. >GetSize \nuse this to make it c;ear #WontFix. >UInt8 \nnit:static_cast #WontFix. >size_t count = 0, delta = 0; \ndeclare them separately. This makes it less readable and more prone to error as one line is doing multiple things. #ByDesign. >m_callbacks \nare you assuming the callback can never be invalid?. template + function pointer\ngiven most of these classes are pretty much the same with minor difference, it doesn't make since to duplicate code.. > return provider ? provider->GetSize() : 0; \nlets not do ternary statements.\nIt complicates stuff more than it needs to and makes it easier to lose during merges.. >vider ? provider->GetData() : nullpt \nsame as below. this seems to be more complicated that it should be :(. RETURN_NULL_IF(!provider);\nreturn CFDataCreate(nullptr, (const UInt8*)provider->GetData(), provider->GetSize());\n. you aren't checking for invalid state here nor within the internal implementation.\nplease do so here and elsewhere. duplicate code, make it into a helper #WontFix. >  return font ? font->_data.get() : nullptr; \nsame as the other ternary comments, let's not use these going forward. #ByDesign. components are being used.\n\nIn reply to: 92969499 . >CGContextSetFillPattern \nactually need to add Caveat and notes saying components are treated as RGBA for now. #Resolved. actually patterns is using them.\n\nIn reply to: 92969413 . we don't need to, if someone were to do that we get 0 scaling out of it\n\nIn reply to: 93075962 . going with the convention. I think it will stick around much better.\n\nIn reply to: 93076586 . the lamda returns HRESULT LOL\n\nIn reply to: 93076852 . HOW!!!! LOL\n\nIn reply to: 93077636 . not the same\n\nIn reply to: 93077490 . no one should be calling this with null context, secondly I would like to know ASAP, given this is the meat of the logic.\nI guess I can make it return and do nothing, and it will cascade into a null at some point. Earlier the better for this.\n\nIn reply to: 93077913 . nope,. this should never happen. this should cause a failure\n\nIn reply to: 93077871 . curios why you don't want to fix this?\nwe seen errors introduced easily via this and not a good practice.\n\nIn reply to: 92931361 . curious why you don't want to fix this?\n\nIn reply to: 92931590 . make code better :)\nThis is really trivial to do\n\nIn reply to: 92931648 . there is a significant gain, which is reducing errors that can be accident;y introduced by a future author.\nAlso this is a standard no no situation within C++\n\nIn reply to: 93115701 . it's reasonable but not ideal. we seen issues with merges where ternary operations for conditional checks end up being more work than it needs to be.\nusually these conditions do not have tests and regressions come back.\n\nIn reply to: 93115787 . let's do the right thing :)\n\nIn reply to: 93116128 . uh this what happens when we push off things to be fixed later :(\n\nIn reply to: 93115850 . \"The number of array elements must equal the number of components in the base space of the stroke pattern color space,\"\nPretty much it should be set.\n\nIn reply to: 92969524 . >purple \nLOL red. going to leave it as, there are too many parameters that will keep on changing and making it will reduce readability.\n\nIn reply to: 92529089 . not supposed to be\n\nIn reply to: 93269884 . technically we are only going to be able to fully modularize 2-3 lines and we will have multitude of variables being passed in, which ends up being just like the DrawLinearGradient.\n\nIn reply to: 93269632 . tested it and d2d uses the position rather than the order as it seems\n\nIn reply to: 93370134 . LOL yep\n\nIn reply to: 93370154 . the helpers would end up being a plain convoluted wrappers around  CGContextDrawLinearGradient\n\nIn reply to: 93475425 . Hmm s_k* is more appropriate  #Resolved. darn i forgot about that #Resolved. this is going to stay likes this. given it's an odd case and i'd rather not generalize the function more for an odd case. #ByDesign. haha I think these are simpler for now :)\n\nIn reply to: 93475189 . uh it's going to be a huge wrapped convoluted function, going to lock it down on this. \n\nIn reply to: 93496632 . these are simple enough for now\n\nIn reply to: 93496267 . >ramesetter ? \nLOL #Closed. >ingRef) static_cast<_CTFra \nmix of type casting conventions. #Closed. >CFRange \ngithub id. > textLayout->GetLineMetrics(nullptr, 0, &lineCount); \nis this guaranteed to return the correct line count if the function fails? #Closed. tried looking at the documentation could not find it :(.\nany insights? \n\nIn reply to: 93508293 . >::vector metrics(lineCount); \nsince this is about performance, use array rather than a vector here (you will have a slight gain) #Closed. hmm I guess you might not know the size? nvm\n\nIn reply to: 93508769 . >font \ndoes the validity of the font matter? #Closed. is the intended behavior is to extend the region, specifically if one of the constraints are 0? #Closed. some comments on the extension of area would be good to have.\n\nIn reply to: 93510034 . I saw that, but that is only if E_NOT_SUFFICIENT_BUFFER is returned as the HRESULT, it doesn't specify for other errors.\n\nIn reply to: 93509971 . safer to check for that exact case (also good for unwanted behavior)\nGiven the implementation and documentation only mention it for the specific error above.\ne.g someone decides to change the LINE_METRICS to and invalid state, this would help catch the error faster.\n\nIn reply to: 93510430 . \"If the length portion of the range is set to 0, then the framesetter continues to add lines until it runs out of text or space.\"\nThis does not seem to match that behaviour #Closed. should be returning this value :) #Closed. >_NSTextAlignmentToCTTextAlignment \nthis seem to be a a public function, why is it private?\nmove the implementation to the actual function #Closed. >lineBreakMode \nsome of the below functions indicate this is not fully supported, update? #Closed. >(NSString*) \nswitching to static cast is going to really obscure readability.\nI guess we can leave it as be  #Closed. hmmm given it's a compile time allocated array, can deduce the count from the array? #Closed. returning a zero size here if something fails above.\nDoes that match the intended behavior?  #Closed. I would perfer you catch the failures of creation here rather than adding more functions calls, attempt to allocate a vector of size 0 and then returning  the size. #Closed. also this ends up propagating the errors and makes it harder to catch later on.\n\nIn reply to: 93514860 . how are these being verified?  #Closed. >framesetter \nRETURN_RESULT_IF_NULL(framesetter,CGSizeZero);. >{ \nRETURN_RESULT_IF_NULL(path,CGSizeZero);. >frame \nRETURN_RESULT_IF_NULL(frame,CGSizeZero);\n:) #Closed. >0], 0x98); \nchange is due to the use of proper interpolation mode. #Resolved. uhh sorry, Accidently :p\n\nIn reply to: 93534190 . I did and they show as moved/renamed\n\nIn reply to: 93534482 . I had the comment \" // Check the canvas context pixel after drawing\"\npretty much the first pixel value\n\nIn reply to: 93538810 . that was for a nine patch image. will update\n\nIn reply to: 93538951 . hmm actually this is from an earlier naming convention. to indicate the file name.\nalthough it should be png1.9 here.\n\nIn reply to: 93539042 . it's pretty much the color value.\nI was thinking about keeping it or getting rid of it, since it can be a confusing issue. It did help me find few issues, so keeping it.\n\nIn reply to: 93539254 . Same reason I touched it, but ARC is enabled :)\n\nIn reply to: 94636365 . removing it and just leaving the notes\n\nIn reply to: 95273116 . this case ensures that if something has foo.pdf and the designated extension is .txt , it will get appended,\nbut if the designated extension is .pdf the it won't\n\nIn reply to: 95272900 . >// If the filename already has the extension do not append \nmore like: // If the filename already has the expected extension (based on MIME type_ do not append #Resolved. These were run on reference platform and they pass.\nYep we should keep the separate, but it was soo tempting to add an extra check here.\n\nIn reply to: 95276334 . >name.extension \nthe old value was hardcoded to work with the improper implementation.\nthe actual values were ran on OSX and they pass. #ByDesign. I'll remove the extra checks, but given how our tests are the name of the test case + extra checking is usual.\nWe can be strict and keep it to only such that.\n\nIn reply to: 95277356 . uh too much time spent with unique_ptrs :(\n\nIn reply to: 95277449 . this is old code that was moved, clearly this is confusing, names need an update.\n\nIn reply to: 95278794 . and much more offline talks ended up in just compiling it as C++ to get over the error linking issues.\n\nIn reply to: 95277632 . the changes.\nlooks like precommit clang script  decided to format it it's way #ByDesign. verified via AFNetworking sample.\nthank you @memontic-ms for the sample #ByDesign. on point. I had to fix these since as you mentioned most of the memory management here was not well written before.\n\nIn reply to: 95506147 . >|| ![(NSObject*)provider isKindOfClass:[NSData class]]) || (colorSpace == nullptr)); \nkudos to the proper implementation. . for larger files i'm worried that this is going to be allot of extra overhead.\nSince we are pretty much duplicating it now.. same as above.. use _CGDataProviderGetData ? rather than taking a copy?\n\nIn reply to: 95705695 . _CGDataProviderGetData this will reduce the copy overhead.. same as above about just direct access vs copying the whole image. super duper nit: just pass in them directly rather than having it as a var and then pass it in.. #import . remove?. this is getting removed with the UIImage JPEG representation and this works :D\nSo leaving it.\n\nIn reply to: 95705999 . talked off line.\nThis is an internal initializer that's pretty much a wrapper around the actual designed path, without the use of this we would have to manually set the field :(\n\nIn reply to: 95705384 . i'll leave it as is for now. it's more explicit rather than a chain.\nboth ways work fine\n\nIn reply to: 95705497 . LOL i thought I cleaned up all these. i'll leave it for now as it's already here and after fighting with merges and losing these simple checks when implementation change, i think it would be wise to leave it\n\nIn reply to: 95705705 . sadly no they have ways to load only JPEG and PNG, it if was any other format we have to go with this.\n\nIn reply to: 95705644 . ++ repetitive code. use THROW_NS_IF_MSG\nyou don't have do the repetitive work.. THROW_NS_IF_MSG. check for the specific throw?\nnot sure if it's still an issue on arm.. Tested that and works as expected  #Closed. I have test for it but looks like our PNG representation ends up being a bit off vs the actual PNG data on disk (I took it out for now, i'll update the CR)\nNote this function is what is used in WOCCataglog paste and it works fine. #Closed. yep adding, the ping was for the rest of the reviewers. \n\nIn reply to: 96518605 . >testJPEGRepresentationOfCroppedImage \nchanging name\n #Closed. the actual fix is postponed till the merge?, is it too much work to actually fix the ImageIO test rather than introducing intentional bugs to satisfy bad test code?\n. >CGDataProviderRelease \nThanks! :D. why did this change?.    context->CurrentGState().font= font;.    context->CurrentGState().mode= mode;. >auto \nwe should just give it the correct type, maybe we are over abusing auto here?. sure, I feel like this could lead to every single instance of woc:MakeStrong/ woc:* end up being auto.\nyour call.\n\nIn reply to: 96745127 . nit:  context->CurrentGState().fontSize = ptSize;. i would be happy if we also check the validity of glyphRun here. It doesn't look like DrawGlyphRunis takes care of this and can crash. > // TODO(DH) GH#1070 Merge in CGContextCairo.mm's Gl \nis this being missed? or it's will/not arrive?. >THROW_IF_FAILED \ni thought we settled on fast fail?. :D. i would suggest to add it at least in the actual function (makes sense to validate it, rather than expecting the user to give it in)\nIn the future someone decide to be less cautious and call it, we would end up with a crash.\n. uhhhh I do not like TMP files #Resolved. .f\nfloating point arithmetic . same here. default byte order then?. >(((colorSpaceModel & 0xFF) << 24) | ((bpp & 0xFF) << 16) | ((alpha | byteOrder) & 0xFFFF)) \nthat is an awesome key :D. formatInputedBpp?. >THROW_IF_FAILED \nwho is catching the throws?\nWe standardized on FAIL_FAST #Resolved. same here #Resolved. >proposed.size.width  \nproposed.size.width of 0 is valid? if the min ends up being maxWidth?. >image \nimage.get()?. >format@string@woc@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDZZ \nI assume this mangled export is still needed?  #WontFix. RETURN_RESULT_IF_FAILED((applicationDataStatics->get_Current(&applicationData)),toReturn)? #WontFix. rest of these same as above? #WontFix. uh so if this, fails, mkdir wouldn't be correct, but we still return true :O #WontFix. I know it's not your code, but it got touched. interesting write. \n\nIn reply to: 98273229 . silly #WontFix. >mkdir \nsame here, error value is totally ignored.\nI know it's not your code, but it got touched :p, but these are all repeats. could probably be modular and do better state checking. #WontFix. >2016 \nnit #Resolved. >THROW_IF_NULL_REQUEST \nshocking, AJ using macros.. >false \nnit: 0 to be in par #WontFix. test these on OSX 10.12 please.\n. Which version did you already test on?\n\nIn reply to: 98281815 . nit: the whole Foundation?. i have the urge to say \"since this macro is internal to this function it should have some signature indication that.\".  it's in CGD2D branch. I added it awhile back.\nwe can do it when we bring it over then.\n\nIn reply to: 98289085 . it was never used #Resolved. curious why are we doing manual time measurements. \ngtest can do this for us.. have we looked into the built in support gtest provides us?. gtest already provides utility to help you measure running times.\nIt's part of the UnitTest lib.. Double checked and no they seem to use this and no new ones are introduced. . nit: naming confusion between the **factory vs factory. nit:C++ style cast?\n. I assume the formats got corrected here?. formatter says it's fine..\n\nIn reply to: 99223362 . yes it is and for the second part, yes it would be good, but not the current scope of the PR. definitely, but not the scope of this CR.. merging has bigly gone wrong.. definitely, but not the scope of this CR. >ternColored.%s.size.%d.A%1.01f.pn \nneed light naming fix. #Resolved. it's because the drawing gets clipped due to the size.\nI can remove those tests, but they work as intended  #Resolved. it'll be duplicated in both stoke and fill.\nI'll leave it here as the comments will also get duplicated.\n\nIn reply to: 100935286 . it's much nicer to have the lambda last in my opinion. \n\nIn reply to: 101327104 . no and we don't need to keep on passing it.\nI just did it at one place, to add the comments on what's happening with the colored/non-colored indication.\n\nIn reply to: 101328139 . this is just a test, doesn't make sense to make everything in tests as consts.\nif so  paths test would have done mad :).\n\nIn reply to: 101328691 . doesn't work as expected. \nBugs associated. \n\nIn reply to: 101332405 . yes but this helps make this more general.\nLeaving it as it is.\n\nIn reply to: 101356532 . @DHowett-MSFT  updating \ud83d\ude04 . nit: c style casts!. could you add a grayscale ones?\n16s?. yes, i would of made both of them parameterized but then we would end up with a spew of files.\n\nIn reply to: 102640945 . when we attempt to fill the geometry with an arc.\nThe fill is a success but the rendering doesn't show any signs of being filled.\nI tried with a custom circle geometry of the same size and it works.\ninvestigating, it looks like some issues with the arc geometry.  #ByDesign. why don't use just use default parameter?\nYou can leave these as is. #Resolved.  CFStringRef* language = nullptr\nThis saves you from all the extra null addition changes. #Resolved. >_DWriteFontCopyInformationalString \nsame here \n CFStringRef* language = nullptr #Resolved. given these are private methods, this should make life easier.\n\nIn reply to: 102774998 . >c_localeName \nstatic #Resolved. >MetadataTest \nnit: make it a const? #WontFix. >(const void*) \nnit: c++ cast #WontFix. >anyway \nsuper nit: 'anyway' is not needed #WontFix. >actualLanguage \nsame here with the default argument  #Resolved. >tableContext \nnit: c++ cast #WontFix. >actualLanguage \nnit: if actualLanguage was nil, this would never run.\nGiven they are not dependent, They should be able to be evaluated regardless. #Resolved. we haven't :D but fine :)\n\nIn reply to: 102779346 . adding few test cases , aside from the drawing tests. #Resolved. was planning on then switched back, adding.\n\nIn reply to: 103335956 . hmm looks like others functions too, loadJPEG, etc.\n\nIn reply to: 103336909 . >UniChar \nUniChar? no shouty . nit: I assume S_FALSE is valid to have here?\nor should we take care of that?. i'm thinking about S_FALSE, looking at the documentation, i don't see much about it for EndDraw(), but given it's technically a success, I assume we don't have to worry about it? #ByDesign. > auto cleanup = wil::ScopeExit(this, layer { \nno longer needed?. >ect wholeRect = CGRectMake(0, 0, width, height); \nnit: you can directly pass it. maybe we should have some tag to indicate we have an extension?\nAlso it would make it easier to look at all the extensions we support/have. nit: set the values explicitly to reduce future mishaps (if it were to ever happen). >/ returns-retained / \nsince this is a public api and we are adding it, we should add c/c++ style document to it, to explicitly say what it returns and what's going on.. super nit: _skCA.. ?. nit: CGFloat. nit: return if invalid context?. ? needed?. hmm not sure if we need the drawing test.\nThoughts?. for these it uses the existing value.\nIt's covered in the test. #ByDesign. I need like we are bloating CG. we already have an internal method, and we keep on building on top of it for every case. #Resolved. but i'll go ahead and make that change #Resolved. and here was me thinking it was the other way around.\n. >no \nnit:not?. >_DWriteCreateMatchingFontDescriptors \nyou should guard these, as they are at the lowest level in terms of this function.\nIn the future if someone were to call this with a pointer that ends up being invalid, we will blow up.\nWe saw this happen in CG ;).\n. thanks. weird ones :p\nThe tests validate it\n\nIn reply to: 103261259 . >static \nsince you are using anonymous namespace ( since it's strictly internal linkage), is this really necessary?. there are exact duplicates of this tests below, this would be a good test to be parameterized. . >hRef thepath = CGPathCreateMut \nnit: AutoCF. making it static #Resolved. it just makes this odd case stand out. also makes life easier + we don't have to compute CGRectInf\n\nIn reply to: 105253463 . not useful if we have expected values. pre populated \n\nIn reply to: 105253532 . isn't supported\n\nIn reply to: 105253190 . hmm but it makes it soo readable :)\n\nIn reply to: 105253114 . looking at the CGRectEdge and the amount you reduce by, the test itself indicates what it does.\n\nIn reply to: 105253335 . this can be a unit test, but I wanted to validate the drawings did render properly. #ByDesign. adding some functionality after the flush.\n++Dustin #Resolved. As earlier common indicated, it should be, but with more drawings it can be a valid drawing test.\n:D\n\nIn reply to: 105513897 . please see the comments below to address why it's a drawing test.\nAlso I want to ensure that he final EndDraw via DrawingTests.cpp works as expected. \n\nIn reply to: 105514587 . @DHowett-MSFT other alternative suggestions are welcome \ud83d\ude04  #Resolved. >No UNIMPLEMENTED \nnit: no, not? not sure what it means.. nit: context->CurrentGState().blendMode = mode;. if PopEndDraw fails, CGContextFlush would FailFast so all states are lost.\n\nIn reply to: 105751972 . Given forceEndDraw can be used by anyone, i would prefer the counter to be manipulated.\nregardless of manipulation, if someone does not start a PushBeginDraw.forceEndDraw after doing a PopEndDraw.forceEndDraw, we'll get into an invalid state.\nSo again it depends on how it's being used.\n\nIn reply to: 105750699 . it's validated below, so no need here.\n\nIn reply to: 106073225 . if the state is out of balance, any subsequent requests that end up with D2D End will fail. I rather not break the pattern here and start introducing failures.\n\nIn reply to: 106073049 . The whole point was to make it more usable, we don't want to start making private functions for every single case.\nThis seems like too much dancing around to do the thing we are going to do any way.\n\nIn reply to: 106077266 . resetting the whole file #Resolved. Talked to raj regarding this, ideally, the whole thing should be fixed!\nbut given the load this iteration and the re-write is coming up, this should be sufficient. \nas much as I don't like doing this, until the re-write happens this would fix up some stuff for us. #ByDesign. now I just wish there was a simpler way to do this.\n\nIn reply to: 106458788 . Yes and no!\nIncase someone wants to use it after they release the object.\n\nIn reply to: 106459352 . It can be, then you do extra work of the vector of vector. \n\nIn reply to: 106460882 . it's needed.\n\nIn reply to: 106461735 . LOL this should only be doing it once. soo you shouldn't be trying to append more locations.\n\nIn reply to: 106460219 . I debated in my head.\n\nIn reply to: 106462392 . Definitely, all the methods are to be moved to a constructor. \n\nIn reply to: 106478611 . the Caveat indicates it's limited. Should probably move it up so the 'future' is not clouded.  #Resolved. include standard is fine here\n\nIn reply to: 106512085 . again not needed, the drawing would catch it.\nthere is enough variable-ness to this. if we really want to go mad, we can check after every single call from start to end,.\n\nIn reply to: 106512296 . but that can happen any time...\nThis is to be generic.\n\nIn reply to: 106513837 . leaving it as it could be useful.\n\nIn reply to: 106515394 . it is in CGColorSpace :)\n\nIn reply to: 106516141 . LOL\n\nIn reply to: 106479676 . it's part of the whole CGColorSpace rewrite :)\n\nIn reply to: 106480069 . deciding to keep on with this.\n\nIn reply to: 106480780 . Nope. #ByDesign. this and other consts. #Resolved. note: As per D2D DrawGeo.. a transformed geometry will have a thinner line width, than an untransformed geometry + transformation.\nWorking on a fix in the coming iteration. #Resolved. hmm i don't want to do this, as it's only supporting RGB, not even grayscale.\nThis is not the main purpose of the CR. The main purpose is to move it to Add CGColorGetColorSpace only.\n\nIn reply to: 106506478 . this is based off of the limited support. Again a while fix to the colorspace is needed. \n\nIn reply to: 106507058 . already added a comment regarding this, leaving it as a C cast.\nWe'll be doing too much dancing around to get the same.\nMost of our code does a c-style cast for CFArratGetValue #ByDesign. since the consumers do some manipulations (e.g append).\nIt would be best to return as this for now. #ByDesign. it's being auto formatted that way.\n\nIn reply to: 107005905 . This is just an attempt to create a collection of objects. the error handling pipeline is setup for rendering failures.\n\nIn reply to: 107022429 . This is the sample code from the feature bug. #Resolved. already being used here in context & it's from math.h\n\nIn reply to: 107499794 . since we can have a float lol, but other than that, i agree.\n\nIn reply to: 107500426 . LOL yes, but\nit's because we want to do the cool constructor initialization of prams, also i went back and forth on this with dustin.\nleaving it as it is.\n\nIn reply to: 107501560 . LOL it's just that i need to disable and re-enable it every darn time.\nI'll do a regex replacement at the end.\n\nIn reply to: 107502011 . >static NSString* c \nstatic const?. > NSUInteger indexes[] = { section, row }; \ndanger:NSInteger to NSUnsignedInteger. >init \nwhich one is the default initializer? \nWe should respect the order . >(length != 0 && indexes != nullptr)  \nnit: if(length && indexes) ? #WontFix. reserve & insert??. >[[[NSIndexPath alloc] init] autorelease]; \nnite: new? #WontFix. >th = [[[NSIndexPath alloc] initWithIndex:5] autorelease]; \nindexPathWithIndex\nThis way you get to test both functions ;). same at other places.\n\nIn reply to: 107549224 . >indexPathForRow \nit's not supported? o.0?. hmm is this the same case?\nIf it's not supported (why?) add the comment here too.. >[[[NSIndexPath alloc] init] autorelease]; \nnit: new #WontFix. >oc::unique_cf upperFontName \nuse StrongCF?. >UINT32 \nUInt32 ????. mix of macros and ifs deep within the function.\nwhy cant above be the same or vise versa?. >  fontFace->GetFiles(&fileCount, nullptr); \nthe error is falling through, validate if the attempt to obtain the count was successful . >(const void**)&fontProvider \nwoah that casting game. are you starting to use macros everywhere? :p. if so be consistent \n\nIn reply to: 107769673 . >CFStringRef)CFA \nnit: static cast #WontFix. you are using early returns anyways, just switch it up, makes things simpler.\nRETURN_NULL_IF(!userFontInfo);\nthen do the rest of the logic.. :( we should of never let that occur in the first place.\n\nIn reply to: 107799297 . curious why are you just mixing early returns and late returns.\nbe consistent with code.\n\nIn reply to: 107775106 . >   EXPECT_OBJCEQ(@\"Arial\", (id)_DWriteGetXamlCompatibleFamilyName(CFSTR(\"Arial Black\"), nullptr)); \ndo these pass in OSX?. >(\"ms-appx:///%@#%@\") \nwhat happened here?. mix of macros and ternary within this PR.\nConsistency is not going well :(\n. >d \nnit:%u. nit: GetSize()?\nany opinions? . >........\\ \nuse (StarboardBasePath). nit: can this be private? it's not being used outside the function. also comment on why this is being applied to some of the functions vs the other will help.. This can be replaced with CGBitmapContextCreateImage.\nActually reverting this file and sending out a PR to fix this.\n\nIn reply to: 108798952 . why did this change?. const char. same here and other places.\nYou are assigning a const char to char. >thepath \nAutoCF. static. actually it was in UIColor but now that's being removed. taking it out.\n\nIn reply to: 109017192 . no longer needed.\n\nIn reply to: 109017103 . >\"_NS.IP\" \nnit: is this the standard format we are using?\nI recall seeing a different one.. nit: std::extent::value #WontFix. >2 \nnit: std::extent::value #WontFix. >row < 0 || section < 0) { \nis this valid? given the fact that they are passing in a NSInteger vs NSUInteger.\nis this the expected behavior on ref platform?. You have it such that, if you pass in an invalid index, you get a object rather nil.\nI don't think that's what you want. >FALSE \nnit: NO as it's the proper usage for BOOL. please don't do this.\nmove this to a init method, rather than individually manipulating in a '+' method . nit: if they are the same object, we can short circuit earlier vs doing more method calls and validating.\n. why? I don't see any issues using new here. #WontFix\n\nIn reply to: 107549082 . ?. much more concise :)\n\nIn reply to: 109024879 . it's much more implicit this way.\n\nIn reply to: 109041128 . Add tests with other languages.. ForFoundationOnly.h? maybe?. Add test for Empty String contains NULL.\n. nit: but does that mean it's the right place?\nGiven the fact we have a file called ForFoundationOnly.h? maybe that's for something else??\n\nIn reply to: 109267433 . >getCacheFolders \nreturn this by ref vs making a copy.. could you add Chinese (simplified) too?\n\u6d4b\u8bd5\u4e00\u4e9b\u5b57\u7b26\u4e32 (testing some string). OR /I love Microsoft/ \"\u6211\u7231\u5fae\u8f6f\" ;)\n\u6211 I\n \u7231 love\n\u5fae\u8f6f microsoft. +1 Please update to use early returns, it makes it much easier to read and improves quality.. sadly due to the extensive usage of the internal vars outside the actual class, these had to go internal-public  \ud83d\ude22  #ByDesign. These are  being moved with their associated class being RuntimeBase.\nNow i can go a huge change that does all this, but it makes it easier for bugs to go unnoticed.\nI'm just breaking out the main classes and it follows through.\n #ByDesign. Code Clarity, it makes much easier to read + follow the standards of other frameworks. #ByDesign. \ud83d\ude22  #ByDesign. This is the only one occurrence. \n\nIn reply to: 110012166 . also when you make it private, to track down all these places. well it really goes off ;) #ByDesign. This is due to the minor shortfall of StrongCF, assignment of a  return value will cause it to invoke a +0 recount and since we don't own the object, it will end up with over releases. #ByDesign. LOL yes was about to ;) #ByDesign. this can go away #Resolved. The initial implementation is this, so the bug pretains. get the string out of the attributedString then get the length.\nyou are correct, needs to be updated.\n\nIn reply to: 110286467 . Since it's returning and auto released object, i'd rather not AutoCF it it then detach it and autorelease it.\n\nIn reply to: 110446169 . I've already done them in a separate branch, i'll  merge that in when it's done.\nMain reason it's not part of this cr is that i would have to add extra castings, which would get removed in the final sweep. so waiting till then.\n\nIn reply to: 110446875 . The way this method does stuff does makes me sad. The frame is created in parts :(\nSadly it's not the scope of this review to fix this up real good.\n #ByDesign. nit: should really be in an initializer then called by the +method. >#: \nTask ID. > if (request) { \nnit: early return :p. >   [_originalRequest release]; \ngood candidate for StrongId. >[NSCondition alloc] init]; \n:). >self->_thread = [[NSThread alloc] initWithTarget:self selector:@selector(spinRunLoop) object:nil]; \n+1 on the init and +1 on the retain?. If the input is a mutable string, retain might not be a good idea/ #ByDesign. that's what i was going with first, it might be more sensible given that only CT uses it.\nHmm i might as well move it in there, but this kind of makes it more util based. #Resolved. That's what my initial plan was, but since this seems very common and could be utilized by others, it would make a good addition. Also we already have some tests that can be tested independently.  #Resolved. YEP utf-16 is safer than utf-8 :)\n\nIn reply to: 110780284 . might as well use buffer indexing, given it's somewhat \"safe\"\n\nIn reply to: 110780304 . _strrev + UTF-16 encoding should do the trick then.\n\nIn reply to: 110782324 . removed #Resolved. @DHowett-MSFT actually CGColorSpaceGetModel  returns unknown. Updating our definition to do the same.\nIt's really hard to know what's happening and how the colors are being treated. I'm attempting some tests on ref platform to figure out how the gradients are being rendered.\n #ByDesign. using CFStringGetBytes to be safer\n #Resolved.  I already have changes for all NSAttributed, this is strictly for the reverse. #ByDesign. Yes it does take a faster way than if you provide a buffer.\nFurther improvements can be addressed by a bug to improve core text. The CR is mainly to remove Foundation dependency and what we have now is better than the earlier Foundation/copy based implementation. \n #ByDesign. UnitTests\n\nIn reply to: 111007038 . >[[NSMutableArray alloc] init]; \n\n[[NSMutableArray alloc] init]; \n\nnit: new #Resolved. >NSMutableArray \n\nNSMutableArray \n\nARC doesn't seem to be enabled on this. This seem to be leaking #ByDesign. >[NSMutableArray alloc] init]; \n\n[NSMutableArray alloc] init]; \n\nsame here? #Resolved. >_protocolForRequest \nnit: __ for static function used within the file. >innerError ? [innerError retain] : nil; \ndoes this matter, if the innerError is nil, retain would return nil?. >self->_condition \njust use _condition, I almost confused myself thinking this was +2.\n. It would be, given self.* isn't a syntax access of the instance variable directly. It would be confusing to use self-> which is a direct instance access (by passing the property) \n\nIn reply to: 111228615 . it wouldn't be a good choice to use self->, unless you have a specific reason to.\n\nIn reply to: 111229286 . > self-> \nhere too. \ud83e\udd23  that was coming \ud83d\ude04 . It's already changed as part of CTLine, that will be out soon.\n\nIn reply to: 111453255 . Yep, I forgot that the bug is now fixed :p\n\nIn reply to: 111453534 . can do.\n\nIn reply to: 111453793 . can't due to the address of usage below.\n &curRun->_dwriteGlyphRun\n\nIn reply to: 111454096 . rather not expose the actual creation in another file. Let's say we decide to change how it's being created in the future :p\n\nIn reply to: 111454483 . not really, I don't want to do extra work to make the usage of _runs work and just kill it in CTLine :p\n\nIn reply to: 111455578 . if you look below, you are accessing members of the struct, if it's CTRunRef, it would end up being a const ref.\ncan't assign to a const ref :p\n\nIn reply to: 111455427 . nit: hmm did this test get an update from the original authors?. abstractions make life easier for maintainers.\nJust because it's already bad, i don't think it should go on :p\nI do realize that i introduced one and that will get fixed up. \n\nIn reply to: 111501891 . Let's just do the padding with format.\n%<indent>s. combine it with above so you can use stringwithformat.\nReduce creation + appending of strings :). >s \nnit: this needs a better name, rather than having a single char . same here, let's use string format to do this.\nGiven the fact that it's a doubly nested for-loop, we end up doing allot of appendStrings :(. same as above. do we need to test this with other locales?. this would be good only if we had it: https://developer.apple.com/reference/foundation/nsstring/1416395-stringbypaddingtolength\nbut you can do this:\n  NSMutableString* s = [NSMutableString stringWithFormat:@\"%10c\",\" \"];\n. hmm i don't think this is being used :0\n\nIn reply to: 111624327 .  &curRun->_dwriteGlyphRun \nis holding it via a pointer which isn't non-const.\nI can downcast it here (GlyphRunData{ &curRun->_dwriteGlyphRun but i'll just be safe and leave it very similar to how it was before.. hmm +2 calls vs +1.\nactually -1 since it's inlined #ByDesign. CGColorCreateGenericRGB  now how did I forget about that :(\nthis will allow us to add the missing apis #Resolved. nit: __throwUn*. #pragma once. Does this mean these APIs don't have tests? The compiler would have warned the usage of these if they were marked stub.. what is the long term plan for this?\nare we going to figure out a way to still validate it on ARM (fix the issue?)?\nIf so could you open a task and put the number here.. Why can't you just disable it only on arm?. hmm it's also in the TestFramework.h\ntry using ARM_DISABLED_TEST?. Already passing in the nullptr for deallocation.\nSwitched to use characters, which does it for you.. if colorspacemodel is unimplemented. \n #ByDesign. in UIKit  #ByDesign. you can use the public struct NSDecimal to keep track of this.. no purpose at all.\n\nIn reply to: 111798370 . add a comment on what's going on. >CGMutablePathRef \nnit: Use StrongCF. LOL this is from earlier code.\nI'll update it.\n\nIn reply to: 112725988 . this reflects what NSAttributedString is doing.\nGiven i don't have the full range of context on the CoreText dancing here, I decide to do the same.\nwhich is also pretty trivial. If you are 100% this is sufficient, i can move forward. \n\nIn reply to: 112734332 . LOL\n\nIn reply to: 112724123 . It would be ideal, but the earlier code violated the getter/setter pattern and exposed private vars outside the file.\nso it doesn't help us much here.\n\nIn reply to: 112724807 . i'm not going to make logic changes in this CR.\nThat's out of scope, it should of been done initially to avoid modifying private vars.\n\nIn reply to: 112725004 . I'm not sure why it was named like that too ;P\n\nIn reply to: 112725508 . The can easily be separated into a commit. \n\nIn reply to: 112725826 . ah okay , you want to move the whole function into __CTLine.\nuh, this is where it's going to get weird. __CTline is already violated elsewhere, so it has to go public strut.\nThen this moves into it and expose a function. it would be ideal to clean everything up, so please open a bug for it.\nThe main purpose of this is to get rid of foundation.\n\nIn reply to: 112742309 . LOL yes it would not require for that to occur, uh but this just get's uglier.\n\nIn reply to: 112746377 . inline functions in structs are pretty awesome ;P Also it troubles me to write a getter for a public field. \n\nIn reply to: 112742078 . sadly this guy has to go :(.\nAlso the CF version of this in CFStroage doesn't seem to account for it.\n\nIn reply to: 112723252 . That would be done by an extra issue.\n\nIn reply to: 112492607 . early return would void the call into CFEqual\n\nIn reply to: 111798718 . Also we need the cast anyways, since this method is modifying lineRef. so we can't do lineRef->GetTypographics...(), given GetTypographics can't be a const method.\n\nIn reply to: 112746739 . uh mutable \ud83d\ude04\n\nIn reply to: 112780387 . we keep on creating AttributedStrings and trying to insert them in the for-loop for based on the glyph count, it can be a bottleneck.\nIf glyph count is usually low, then this isn't needed.\n\nIn reply to: 112783999 . nit: do it via an init, . >        state = STATE_SIGN; \nyou could just use the NSDecimal struct and if the precision is not too high, it would only take up the first slot of the mantissa array.\nAlso it would make the code much simpler, with tracking all the states.. hmm maybe not, given this is being looped over.\n\nIn reply to: 113068748 . >else \nnit: can just return NO. >goto \ngoto :(. the below two are just moved. These are from the earlier implementation.. consider them dead\n\nIn reply to: 113286201 . yes, it's our own implementation. \n\nIn reply to: 113287177 . This is with the knowledge of transparent information. \nthe backing of CGColorGetComponents are a quad struct. Another way is to have a private getter or just take it out of the Quad struct and put it into another Quad struct. \n\nIn reply to: 113286126 . grayspace \n\nIn reply to: 113502948 . that is not the scope of this PR.The main purpose to detangle CGColor<->UIColor dependencies \nWe should do that at some point, Raj could weight in on the priority of this.\n\nIn reply to: 113504346 . why not eh\n\nIn reply to: 113503612 . that's not the scope of this PR. What we have is sufficient. \n\nIn reply to: 113503142 . what do you mean by handle?\nso far we only support RGB and Grayscale. \nso you are limited to  RGBColspace:{r,g,b,alpha} and GrayScaleColSpace:{gray,alpha}\n\nIn reply to: 113503071 . Yep, but the colorspace is still different if you are asking if it optimizes, nope.\n\nIn reply to: 113512713 . separated out commits are wonderful though \n\nIn reply to: 113529420 . kCGColorSpaceModelUnknown  would do.\n\nIn reply to: 113351799 . >reinterpret_cast \nchanging this #Resolved. nit: __tryGetSet* #WontFix. duplicated code makes life harder :( especially for maintenance. >alloc] init]; \nnit: usage of new vs init.\nJust use new? #WontFix. >[self alloc] init \nnit: [[self new] autorelease] #WontFix. some of these tests are very similar, can't they be made into a shared function ?. why? follow the convention? . hmmm i still feel reluctant about this, could we get a method like copy properties so everyone can use that.\nThis way a future developer who tries to manually copy over properties will not miss it.. LOL the early early days of our lives. Yep they do. LOL . can be omitted since it's auto calculated anyways. #Resolved. nit: consistency on import vs include . lol, is this for real? :P. unnecessary changes and deviating from convention. . These are all the same with one parameter variant, make this into a utility function and pass the variant parameter. . ops somehow this copyright escaped  #Resolved. I agree, but this isn't worth the effort to do this as it's a mass usage across the cpp files.\nIt was also being used in the header files, I went ahead and removed that already. #ByDesign. Yep, this was through visual studio.\n\nIn reply to: 117095345 . Yes i have override it with -output.\n\nIn reply to: 117095042 . This is from installing the nugetizer from visual studio, it takes dependencies on both of these.\n\nIn reply to: 117095975 . NT_ASSERT*\nAlso NT_ASSERT is #define NT_ASSERT assert // @_@\n\nIn reply to: 117041110 . The common target defines a version, so it will use whatever that version is.. which one? codeflow isn't being nice here. LOL inherited;P can fix that up. nope, we want to avoid Frameworks.Core from consuming this package.. ah, I assumed you meant to just include it without the condition.\nConsider it moved.\n. nit: maybe UseWinObjCFrameworksCorePackage?. ",
    "sssuourabh": "thanks\n. if i am running with windows 10 on local machine , i am still getting the same exception\nand wkernelbase.pdb could not be found in selected paths\n@antoine-haas \n. @antoine-haas on local machine\n. ",
    "sourabh-vvdn": "Unhandled exception at 0x51C989E7 (Windows.UI.Xaml.dll) in DemoTest.exe: 0xC000027B: An application-internal exception has occurred (parameters: 0x00853638, 0x00000002).\n. Hi when i run WOCCatalog.exe with configuration - attached as image the i get error\nException thrown at 0x772E3E28 in WOCCatalog.exe: Microsoft C++ exception: Platform::InvalidCastException ^ at memory location 0x04BBF540. HRESULT:0x80004002 No such interface supported\nWinRT information: No such interface supported\nStack trace:\ncombase.dll!RoOriginateError() + 61 bytes\nvccorlib140_app.dll!Platform::Details::EventSourceRemove() + 3023 bytes\nvccorlib140_app.dll!__abi_WinRTraiseInvalidCastException() + 22 bytes\nSTARBOARDXAML.DLL!568f29b1()\nSTARBOARDXAML.DLL!56936ad1()\nSTARBOARDXAML.DLL!5692a163()\nSTARBOARDXAML.DLL!56911733()\nSTARBOARDXAML.DLL!5694dee6()\nQUARTZCORE.DLL!CATransform3DGetAffineTransform() + 3272 bytes\nQUARTZCORE.DLL!GetCACompositor() + 639 bytes\nFOUNDATION.DLL!54c2137e()\nUIKIT.DLL!UIImageJPEGRepresentation() + 13672 bytes\nUIKIT.DLL!UIImageJPEGRepresentation() + 13918 bytes\nUIKIT.DLL!53f975d2()\nFOUNDATION.DLL!54c213a2()\nUIKIT.DLL!53eff36c()\nFOUNDATION.DLL!54c2137e()\nUIKIT.DLL!UIApplicationMainInit() + 218 bytes\nSTARBOARDXAML.DLL!5694aa2f()\nSTARBOARDXAML.DLL!5691d4e7()\nKernelBase.dll!AdjustTokenPrivileges() + 86 bytes\nIf there is a handler for this exception, the program may be safely continued.\n. @antoine-haas i had upgraded windows , visual studio community update 2 , Emulator - 10.0.10586.0 with latest windows SDK but still i am getting the same error \nException thrown at 0x75773E28 (KernelBase.dll) in DemoiOSApp.exe: 0x40080201: WinRT originate error (parameters: 0x8000000B, 0x00000040, 0x006BE7B0).\n'DemoiOSApp.exe' (Win32): Unloaded 'C:\\Windows\\SysWOW64\\rmclient.dll'\nException thrown at 0x75773E28 (KernelBase.dll) in DemoiOSApp.exe: 0x40080201: WinRT originate error (parameters: 0x80004002, 0x0000001D, 0x045BF23C).\nException thrown at 0x75773E28 in DemoiOSApp.exe: Microsoft C++ exception: Platform::InvalidCastException ^ at memory location 0x045BF6CC. HRESULT:0x80004002 No such interface supported\nWinRT information: No such interface supported\nStack trace:\n\ncombase.dll!RoOriginateError(HRESULT error, HSTRING__ * message) Line 490\nvccorlib140_app.dll!Platform::Details::ReCreateException(long hrEx) Line 137\nvccorlib140_app.dll!__abi_WinRTraiseInvalidCastException() Line 488\nSTARBOARDXAML.DLL!__abi_WinRTraiseException(long __hrArg) Line 1090\nSTARBOARDXAML.DLL!Windows::UI::Xaml::Hosting::ElementCompositionPreview::GetElementVisual(Windows::UI::Xaml::UIElement ^ __param0)\nSTARBOARDXAML.DLL!XamlCompositor::Controls::CALayerXaml::CreateLayer() Line 1084\nSTARBOARDXAML.DLL!DisplayNode::DisplayNode() Line 162\nSTARBOARDXAML.DLL!CAXamlCompositor::CreateDisplayNode() Line 1389\nQUARTZCORE.DLL!CAPrivateInfo::CAPrivateInfo(CALayer * self, bool) Line 302\nQUARTZCORE.DLL!i_CALayer__init(CALayer * self, objc_selector * _cmd) Line 372\nFOUNDATION.DLL!_c_NSObject__new(id * self, objc_selector * _cmd) Line 62\nUIKIT.DLL!_i_UIView__initPriv(UIView * self, objc_selector * _cmd) Line 117\nUIKIT.DLL!_c_UIView__allocWithZone(objc_class * self, objc_selector * cmd, NSZone * zone) Line 144\nUIKIT.DLL!_c_UIImageView__allocWithZone(objc_class * self, objc_selector * _cmd, NSZone * zone) Line 44\nFOUNDATION.DLL!_c_NSObject__alloc(id * self, objc_selector * _cmd) Line 69\nUIKIT.DLL!_i_UIApplication__init(UIApplication * self, objc_selector * _cmd) Line 1340\nFOUNDATION.DLL!_c_NSObject__new(id * self, objc_selector * _cmd) Line 62\nUIKIT.DLL!UIApplicationMainInit(int argc, char * * argv, NSString * principalClassName, NSString * delegateClassName, unsigned int defaultOrientation) Line 135\nSTARBOARDXAML.DLL!ApplicationMainStart(int argc, char * * argv, const char * principalName, const char * delegateName, float windowWidth, float windowHeight) Line 136\nSTARBOARDXAML.DLL!WinObjcMainLoop(void * param) Line 100\nKernelBase.dll!_BaseFiberStart@0\u001e()\n\nPlease provide me a solution \nThanking you in anticipation.\n. Hi @antoine-haas \n please check \n\n. @antoine-haas - thanks for support i managed to run my app  on emulator \n. Hi @asimonov-msft\ni have attached the output window after running my app.\nplease have a look\nthanking you in anticipation\n\n. Hi \nPlease check the error\n1>C:\\Users\\rrana\\Desktop\\NewWinobjc\\winobjc\\include\\AddressBookUI/ABNewPersonViewController.h(21,9): fatal error : could not build module 'AddressBook'\n\n. @asimonov-msft  This error come when compiling * LNK1181   cannot open input file 'libiconv.lib * \ni checked over internet its showing give the path of lib to additional dependencies it will take \nbut i didn't found this lib anywhere \nplease suggest how to solve this.\n. ",
    "andreluizbarbieri": "I can upload the 'dialog box' that appear after open VS solution generated for winobjc\n\n\n. Yes, I import this two projects (WocCatalog and the game Canabalt) with vs2015 but show these dialog box about access violation.\n. ",
    "bbowman": ":+1:\n. We discussed this and have decided that is not worthwhile to ask you to class cluster NSOrderedSet in this review. We unfortunately don't have a good example / doc on our proposed design at the moment and feel it unfair to ask you to do something we haven't done ourselves. In light of that, we are recommending that this change cover both NSOrderedSet and NSMutableOrderedSet (as mentioned in the PR comments) and the mutable version can use the iterators etc from the immutable one via an internal header (NSOrderedSetInternal.h) that has a class extension with the \"backing store\" ivars at a @protected visibility. This will allow shared code and hopefully minimal extra work on your part. How does that sound?\n. :shipit:\n. Please use .\\tests\\Run-UnitTests.ps1 to run tests now. Apologies for the out of date documentation.\n. Sorry I don't have it in front of me to tell you the exact flag but I think you'll need to use -Configuration Release (defaults to debug builds).\n. Can you post a call stack with the local variables for the failing frame? Based on the screenshot you are trying to ref new an array for the launch args. I'd validate that you aren't receiving something weird in the launch arguments. I agree with raj though and it doesn't seem like a winobjc issue.\n. (As an additional note, you should be able to get the hr or error code from the exception which might provide more information)\n. :shipit:\n. :shipit:\n. > ```\n\nfalse\n```\n\nif this is false, just remove.\n\nRefers to: build/AudioToolbox/dll/AudioToolbox.vcxproj:63 in 51a24a0. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\n(object->_cfisa == (uintptr_t)(&_OBJC_CLASS__NSCFBoolean)) ||\n\n```\n\ncan be removed?\n\nRefers to: Frameworks/CoreFoundation/Base.subproj/CFInternal.h:739 in f56cacc. \n. :shipit:\n. :clock1:\n. File seems like internal gtest stuff? If so, please add clang-format ignores here and try to not unduly reformat external code in case we ever upgrade our version or whatever. #Resolved\n. :shipit:\n. :clock1:\n. > ```\n\n}\n```\n\nbusy waits are about my least favorite mechanism to do multithreaded tests. Especially since this is hard to get correct as coded. I forget all of the details on volatile and would much prefer us to use a condition variable, std::atomic or other syncronization object.\n\nRefers to: tests/unittests/Foundation/NSTimerTests.mm:128 in db05926. \n. :clock1:\n. :shipit:\n. :shipit:\n. > ```\n\n_components = new float[count * componentCount];\n```\n\nwould prefer an RAII construct for this guy. #WontFix\n\nRefers to: Frameworks/CoreGraphics/CGGradient.mm:75 in a0b7360. \n. :shipit:\n. :shipit:\n. :shipit:\n. I don't see the new binaries in the commit here. What is the deal? Is that a git-lfs artifact or did they not get added accidentally? #ByDesign\n. :clock1:\n. :shipit:\n. > ```\n\n\n```\n\nwas this already here and just being stripped? I'm just a little confused since its not showing as an addition in iteration 9. #Resolved\n\nRefers to: build/CoreFoundation/lib/CoreFoundationLib.vcxproj:126 in 8ab9f86. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. @yweijiang This change does not pass our CI Build due to:\n2016-08-01T21:05:26.1763368Z ##[error]MainViewController_F6152B9A.obj(0,0): Error LNK2001: unresolved external symbol objcclass_name_GeocodingViewController\n2016-08-01T21:05:26.1919528Z ##[error]MainViewController_F6152B9A.obj(0,0): Error LNK2019: unresolved external symbol OBJC_CLASS_GeocodingViewController referenced in function -[MainViewController viewDidLoad]\n2016-08-01T21:05:26.1919528Z      2>MainViewController_F6152B9A.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_GeocodingViewController referenced in function -[MainViewController viewDidLoad]\nPlease make sure you build the sample apps as well and submit a new PR when this has been addressed (likely you just need to add CoreLocation.lib to the list of default libs in /msvc).\n. @yweijiang I was thinking of  in sbclang.props but it looks like CoreLocation.lib is actually already listed there. Let me try kicking off another build from your pr and hopefully everything will work this time...\n. @yweijiang I see the real error now. The issue is that you only updated the pre-imported WOCCatalog in your change to add GeocodingViewController.mm ... In our CI builds, we also test to make sure that the VSImporter step is correctly working so it reconverts the .xcodeproj into a .vcxproj so your change to add that was missed and thus you encountered missing symbols. Can you please send an update that also adds that file to the .xcodeproj?\n. This is not the case. In one example middle ware we see the following dll dependencies from WinObjC:\nAUTOLAYOUT.DLL\nCAIRO.DLL\nCOREFOUNDATION.DLL\nCOREGRAPHICS.DLL\nCORETEXT.DLL\nFBSDK.DLL\nFOUNDATION.DLL\nFREETYPE.DLL\nICUDT57.DLL\nICUIN57.DLL\nICUUC57.DLL\nLIBDISPATCH.DLL\nLIBJPEG.DLL\nLIBOBJC2.DLL\nLIBPNG.DLL\nLIBXML2.DLL\nLIBZ.DLL\nLOGGING.DLL\nMOBILECORESERVICES.DLL\nOBJCUWP.DLL\nQUARTZCORE.DLL\nRTOBJCINTEROP.DLL\nSTARBOARD.DLL\nUIKIT.DLL\nWINOBJCRT.DLL\nWhich means many frameworks are not loaded even if all the libs are specified to the linker anyway.\n. After investigation it appears that I was incorrect in my initial analysis. It is not the loader itself that is causing the delay. This was a mistake when reading the trace. For the sample app, the time is broken down as follows:\n154.6 ms total startup thread time\n| - 129.82 ms  - GetActivationFactory (runtime setup time)\n|          | - 108.7 ms - Framework CRT init (objc static init) <----- BIG HITTER\n|          | - 21.14 ms - Loader, Interop, etc. (mostly fixed cost overhead)\n| - 24.29 ms - ActivateInstance (actual business logic time)\nThe differences seen in different investigations was likely just due to differing environments / surrounding conditions not actual savings. My mistake for misreading the traces (was confused because it broke down the framework init calls into several different sections underneath identical loader calls that made it hard to find them all). This suggests that the work to defer selector registration etc will be more valuable than initially expected and probably worth the risks.\n. Investigation complete. There are other areas of value we will implement in 1609 to improve perf.\n. :clock1:\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @ms-jihua addressed most feedback. Is there anything besides the wchar thing that is blocking this going in for you? #Resolved\n. [ RUN      ] NSBundle.Resources\n[       OK ] NSBundle.Resources (6 ms)\n[ RUN      ] NSBundle.InfoPlist\n[       OK ] NSBundle.InfoPlist (0 ms)\non latest. Closing issue.\n. libobjc2 should not have changed. Investigating.\n. @DHowett-MSFT is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. :shipit:\n. :shipit:\n. :clock1:\n. :clock1:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. Would love it if you guys would try it out to confirm. This should do the trick though.\n. This is sort of a dupe of issue 871. We have seen other /WHOLEARCHIVE issues and will fix this issue when we fix that. Closing for now. @DHowett-MSFT or @rajsesh-msft  will make sure incremental linking works or is turned off when the other issues are sorted out.\n. @DHowett-MSFT is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. :shipit:\n. :shipit:\n. :clock1:\n. :clock1:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > //************\nThere are roughly three paces to put headers:\n1. /include/* - Public headers that will be reflected in the final WinObjC SDK.\n2. /Frameworks/include/* - Private headers that need to be shared across modules.\n3. /Frameworks/WaffleKit/* - (next to the .mm) - private headers that are contained to the framework that needs them.\n\nIn reply to: 240525044 \n\nRefers to: Frameworks/include/ABContactInternal.h:1 in 616d5ac. \n. :shipit:\n. \ud83d\udd50\n. Seems like the wrong fix. Commenting out tests is rarely the correct approach as it only hides issues and incorrectly gives the impression that everything is passing. \n. Uh what? This doesn't seem like the correct solution. What about this test is crashing vs?\n. Discussed with @mukhole and this appears to be a duplicate of issue #456 . Closing this one and hopefully @edvv can track the original for a fix.\n. Seems like this would merit some sort of UT to validate. I know @davelamb mentioned not having UI automation yet but I don't think the test needs to be that extreme to prove out that the subclassing works and that the code you changed is operating correctly / not regressing things etc. \n. :clock1:\n. > ```\n\nmemcpy(newStr, path, pathEnd - path);\n\n```\n\nnot your change but this string manipulation isn't exception safe, makes potentially unsafe assumption about the sizes of some datatypes, doesn't use the secure versions of certain common buffer overrun attack vectors, has a lot of duplicated code that could be factored out with RAII constructs, and doesn't follow WinObjC coding conventions. I'd be over the moon if we took the opportunity to improve the codebase where possible.\n\nRefers to: Frameworks/UIKit/UIImage.mm:376 in 2518fe7. \n. :clock1:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. FYI your review title doesn't make sense. Our version of CT* will never be interoperable with anything on the reference platform (they have their own version). #Closed\n. compatible / matching / etc are fine. Interoperable means able to work with (specifically to communicate / pass data between) I believe. Mostly just a semantic difference that may mislead reviewers into thinking this review is trying to build and function on the reference platform and use / communicate components from it.\n\nIn reply to: 249301613 \n. Our \"interoperable\" tag on apis and other discussions of interoperability have been in reference to app code not to reference platform code I guess. I've never thought our other uses were weird and its not a big deal obviously.\n\nIn reply to: 249302879 \n. If we wanted to be crazy, i think the term AJ is really meaning would be \"idemoperable\" or something?\n\nIn reply to: 249303282 \n. :shipit:\n. :shipit:\n. :clock1:\n. +100 here.\n\nIn reply to: 250881581 \n. :clock1:\n. Agreed. This also doesn't appear to valuable for any modules we provide internally so it doesn't really make sense what this review is trying to accomplish. Lets discuss offline and figure out the correct approach.\n\nIn reply to: 251723177 \n. :clock1:\n. :shipit:\n. :shipit:\n. @davelamb is added to the review. #Closed\n. @v-brflem I've looked into the sample you provided and the key (pun sort of intended) difference is that you are calling SecItemCopyMatching with a key that we don't support (can't store). As you can see at https://github.com/Microsoft/WinObjC/blob/develop/Frameworks/Security/GenericPasswordItemHandler.mm#L308 we have a large table of handlers for different properties and there is no comparator for kSecAttrGeneric which means that on the query side I have no way to know if the supplied value matches or not. I try to be more receptive than overly restrictive as many attributes are unfortunately not supported and I don't want to return 0 items for basically any query. You may be thinking that the obvious fix at this point is to simply add support for the kSecAttrGeneric key, but unfortunately, the backing store used https://msdn.microsoft.com/en-us/library/windows/apps/windows.security.credentials.passwordcredential.aspx only supports a very few items. We have already engaged with the team that owns those APIs to enhance them and I will pass along your feedback. Until then you can workaround this in your code by querying off of one of the few things we do support like Account, username, or Service. \n. I looked at the dropbox repro and it looked like you are trying to create a subview off of the main thread. Fixing that I don't see the repro for the bug mentioned here. I am closing this unless you can provide a more detailed repro with call stack etc. Thanks!. Why do we want to update our min?\n\nIn reply to: 253003067 \n. hmm got a little confused here but it is true that we use 10586 stuff and don't do a \"fantastic\" job of back compat so I approve.\n\nIn reply to: 253011472 \n. (Does look like your build failed though so check that out)\n\nIn reply to: 253017160 \n. :shipit:\n. @ms-jihua is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. Microsoft/WinObjC#1099\nextend fopen to look for things in Windows.Storage.AccessCache is what this works towards. The basic steps are:\n1. Bridge use of CF/NSStream\n2. Consolidate Ebr usage across repo to use Stream\n3. Enhance underlying support for storage file.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. @DHowett-MSFT @msft-Jeyaram My full build passed and it seems like CAF audio is not broken. huzzah. Any other comments before I go go?\n. :clock1:\n. > \u0013\u0011\f\u0017\u00e0\u000eR~\u0000\u0000\u0000\u001diTXtComment\u0000\u0000\u0000\u0000\u0000Created with GIMPd.e\u0007\u0000\u0000 \u0000IDATx\u00da\u00ec\u00bd\u00e9rcI\u2019\u00a5\u00a9fv7\u0000\u00a4\u00bb\u00c7\u00ea\u0011\u0019\u2122UYY]\u00d5\u00d2\u00cbK\u00cc\u001b\u00cd\u00bb\u00cc\u00bb\u00f5\u02c6\u0152\u00c8\u201dLUg\u00e5\u0012\u00e1\u001b7\u00dc\u00cd\u2013\u00f9q\u0000u#\u0016\u00ae \b\u0090\u00e7\u02c6\u000b\u0004\u00a4\u0192 x\u00ef%\u00ed\u00c3Q\u00b5\u00a3&\u00a5$\u0014EQ\u0014EQ\u00d4\u00eedy\b(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160\"Q\u0014EQ\u0014E\u0011\u00b0(\u0160\u00a2(\u0160\u00a2\bX\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0160\u20acEQ\u0014EQ\u0014E\u00c0\u00a2(\u0160\u00a2(\u0160\"`Q\u0014EQ\u0014EQ\u0004,\u0160\u00a2(\u0160\u00a2(\u0016EQ\u0014EQ\u0014\u0001\u2039\u00a2(\u0160\u00a2(\u0160ZU\u00c1C@Q\u0014E\u00fd\u001fR\u00e5\u001f\u001a1\"\u2019$\u00e1\u017d\u02c6Y\u00de\u0011\u00fb\u00f5\u009d\u00f9\u00e2\u201cVl\u2019\u00e4\u00a4\u02c6\u0012\u00ac\u00b8(\u00d1\u2030\u00cb\u00bev\u00f1<Qb\u2019\u0014%$IIb\u2019\u201d$\u00c9\u00e2Vp{G\u00e93o\u00d4\u00bd\u017e\u00ea^2b\u00f2\u0178+{\u0019\u00c6,\u00feY\u00dcqR\u00e0\u00d6I\u00e1\u00a4tR\u201dR\u0016R\u0015RV\u00d2\u201dR\u0015R\u00e1\u00b6\u2019\u00ba\u201d\u00ba\u2019\u00ba\u2019\u00a6\u2019\u00a6\u2013I!U#3|\u00c6I\u00d1\u00c8\u00d4I\u0081\u00fb\u20224Vl%\u0013'E-\u0013+\u00a6\u0090\u00ca\u0160sRX\u00b1N\nseems like it should be lfs'ed? #Resolved\n\nRefers to: tests/unittests/CoreGraphics/images/tiff1.tiff:5 in 487abed. \n. > gimp-comment\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012Created with GIMP\u0000\u0000\u0000\u0000\u0010gimp-image-grid\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000(style solid)\ngit lfs this guy? #Resolved\n\nRefers to: tests/unittests/CoreGraphics/images/xcf1.xcf:2 in 487abed. \n. :clock1:\n. In the future, try to squash a bit before sending out the PR as in some review tools it shows one interation per commit on your branch versus the merge branch. In this case I see 14 iterations with no comments which makes the state you intent people to look at a little confusing and cluttered. #Closed\n. Given other issues you've filed, I would try turning off clang modules in your solution. I t should fix the include weirdness and the max processors. @mukhole should know more.\n. Do you have a small repro of this? Sounds like with Modules set to NO there may be a bug but it would be good to get a minimal repro to be sure.\n. @rajsesh-msft that is exactly what we are already doing but its the ones it doesn't use that can be problematic. The linker still looks for all of the import libs added and only discards them if they don't provide any needed unresolved external symbols. This means all libraries in the sdk consumer build props (all our frameworks) must exist so that lib can be found and found to be useless. \n. packaging fixed this I believe. FunctionalTests no longer inherit a huge linker line with all the libraries on it. This only happens when consuming packages which by definition all the binaries would be in the package. . @rajsesh-msft @memontic-ms @DHowett-MSFT  @bviglietta  please take a look  #Closed\n. Review status: 0 of 22 files reviewed at latest revision, 19 unresolved discussions.\n\nFrameworks/Foundation/NSURL.mm, line 38 at r1 (raw file):\n\nPreviously, msft-Jeyaram (Ram) wrote\u2026\n\nforward slashes\n\n@msft-Jeyaram you should get a better picture.\n\n\nFrameworks/Foundation/NSURL.mm, line 922 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nsuper nit: storageFile.comObj\n\nWon't fix. I prefer message send syntax as its more clear what is going on with the objects involved. This is especially true in interop code with C++ classes like ComPtr where . operator means a very different thing.\n\n\nFrameworks/Foundation/NSURL.mm, line 940 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nULL_IF_FALSE(maxItems > 0); \n\nIs there a future world where they're unlimited and managed by the system? We may not want to break on those platforms.\n\nI agree that we wouldn't want to break in that case but that is ultimately a concern for the api developer not us. I need to guard against maxItems <= 0 for any sort of reasonable for loop / boundary checks so if they want to introduce the notion of an unbounded collection, a new field would be added or something because any sentinel value for this extra logic may mess up existing code (imagine if I blindly did a while(i <= maxItems) loop or something). So won't fix. We will address that if and when new semantics are introduced but not guess at them unless you are thinking of something different that would be more robust?\n\n\nFrameworks/Foundation/NSURL.mm, line 949 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\naddint \n\nnit: spelling?\n\nDone.\n\n\nFrameworks/Foundation/NSURL.mm, line 954 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nshould this remove an item when we have exactly maxItems?\n\nIt should. And does? \n\n\nFrameworks/Foundation/NSURL.mm, line 966 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: use Strings::WideToNSString rather than directly using NSString internals\n\nDone.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 95 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: flip this if so this only has one return at the end\n\nOK. not sure I like it better but ok.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 109 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\ndo we want these to blow up when no file is found?\n\nHmm I guess return -1 would be nicer.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 168 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nthis always returns true? make a void/just return at the end if we can't change the signature for some reason\n\ndidn't mess with this guy. I want to expunge / rewrite the mapping logic too at some point but not in this review probably.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 253 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: braces\n\nUgh you and reviewing code that isn't mine and making me do the right thing and clean up whats around me. Darn you!!!!\n\n\nFrameworks/Starboard/EbrIOFile.cpp, line 24 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nwhy braces here?\n\nHooray initializing variables!!!! If you don't do this or an assignment on release mode, the value of fid will be random stack junk until something more useful happens. As this is an out parameter, it is generally customary to initialize it yourself ahead of time if possible so that any failure conditions don't leave you with junk that you may accidentially use later. \n\nI generally prefer the {} methodology as it universally works in C++ (i.e. inits structs classes etc too)\n\nFrameworks/Starboard/EbrIOFile.cpp, line 27 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: ternary return\n\nEh. looked less clean to me. Going to leave it.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 95 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nsuper nit: add int to type\n\nthat isn't the same ... \n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 96 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nRETURN_IF_FAILED?\n\ni didn't want to co-opt HRESULT into int returns. It is generally true that failure HRs are negative but that is a little different. I could add a RETURN_X_IF_FAILED but that seems maybe overkill as I don't know how many other people will need that sort of translation. \n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 250 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: make one if\n\nDone.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 279 at r1 (raw file):\n\nPreviously, aballway (AJ Ballway) wrote\u2026\n\nnit: no shouty\n\nused for interop with WriteAsync. Won't fix.\n\n\ntests/functionaltests/FunctionalTests.cpp, line 649 at r1 (raw file):\n\nPreviously, memontic-ms (Meredith Monticello) wrote\u2026\n\n\nUIApplicationTests \n\nNSURLStorageFileTests. Also below.\n\nDone.\n\n\nComments from Reviewable\n Sent from Reviewable.io \n#Closed\n. Review status: 0 of 22 files reviewed at latest revision, 41 unresolved discussions.\n\nFrameworks/Starboard/EbrDevRandomFile.cpp, line 20 at r1 (raw file):\n\nPreviously, msft-Jeyaram (Ram) wrote\u2026\n\n\nstrcmp \n\nuse strncmp \n\nDone.\n\n\nFrameworks/Starboard/EbrDevRandomFile.h, line 19 at r1 (raw file):\n\nPreviously, msft-Jeyaram (Ram) wrote\u2026\n\n\ninclude \n\nnit: Import\n\nmeh. won't fix. These guys are all straight c++ and just happen to be clang compiled for funsies. No need to introduce objC isms if we don't need it.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 36 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nPlatformSupport \n\nThis should be EbrFile now, presumably\n\nsure.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 116 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nEbrGetOSFHandle \n\nDoes someone use this?\n\nyes.\n\n\nFrameworks/Starboard/EbrFile.cpp, line 208 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nregex \n\nI know this isn't your code, but we're using a whole regex engine to detect a single letter and a colon?!\n\napparently yes.\n\n\nFrameworks/Starboard/EbrIOFile.cpp, line 25 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nauto \n\nOnly use auto when the return type cannot be easily expressed or is intuitively obvious from the righthand side.\n\nfair\n\n\nFrameworks/Starboard/EbrIOFile.cpp, line 38 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nm_fid != - \n\nHow do we get an EbrIOFile with a fid of -1?\n\nwell its passed in from the ctor so it could presumably happen. Given the new pattern of CreateInstance it shouldn't unless _sopen_s returns 0 but fid is assigned -1.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 3 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\nDrop the corporation here.\n\nDone.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 78 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nstorageFile \n\nWhy pass-by-rvalue-reference with std::move on the outside (keeping external consumers aware of our internals) instead of pass-by-value with std::move on the inside? There does not appear to be consensus on this on the internet at large, but it looks like a lot of people lean towards the second.\n\nThe reasoning here is to save an addRef Release pair. The consensus I think we should go with is:\n1. Use raw * / ** at ABI boundary.\n2. use const ComPtr& as a non transferring input argument\n3. use ComPtr&& to transfer ownership. \n\n3 could also be a Detach Attach here but as its internal to this module (and I think imma go ahead and make the ctors private to enforce CreateInstance use) it seems cleaner to keep the jacket and pass it off rather than unwrap and rewrap around the callsite?\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 106 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nAwaitResult \n\nWill this not break due to the vtable thunk compiler bug?\n\nNo! (Well not anymore). This file is ClCompile. I made that change while trying to figure out what was up. \n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 137 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\nYes, please remove TODO.\n\nIn reply to: 84801640 \n\nDone.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 149 at r1 (raw file):\n\nPreviously, bbowman wrote\u2026\n\nconsider a templated internal function to remove duplicated stat code.\n\nDone.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 167 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\n\n{}; \n\n{} are overkill for scalar types in this case..\n\nnot really? still needs initialized and this is a universal way to do it.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 211 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\nI am very surprised this works.\n\nIn reply to: 84969356 \n\nMagic! (ClCompile as per other comment. Super not obvious due to change being hidden in vcxproj goop)\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 215 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nth = 0; \n\nnit: Why = 0 here and {} above?\n\nCause I'm fickle. (or more likely I copy pasta'ed from elsewhere)\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 232 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\nIt bothers me so much that ReadAsync can give you a different buffer than the one you provided, effectively eliminating nocopy optimizations. Is there something we can do to fix that?\n\nBitch and moan to the API implementors to make a less shitty interface in a future version.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 243 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\nshort circuit for count 0?\n\nsure why not.\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 244 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\nfwrite returns a size_t, and write returns a ssize_t; I'd prefer that if we're going to pretend to be POSIX we follow their signatures. This gets rid of the cast on 289, too.\n\nyeah there were a few signature weirdnesses that I didn't address here as some will spill out to the public interface. Like int64 seek accepting an int64 arg but not returning an int64 position. Hilarious. I'll be a good dev I guess. You guys are just so demanding :-p\n\n\nFrameworks/Starboard/EbrStorageFile.cpp, line 279 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nresult \n\nThis probably wants to be initialized.\n\nindeed.\n\n\ninclude/Foundation/NSURL.h, line 237 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\n\nMSFT \n\nWinOBJC\n\nDone.\n\n\ntests/functionaltests/Tests/NSURLStorageFileTests.mm, line 35 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\nDid clang format this weird?\n\nclang doesn't format for me anymore :-( someone was going to check something in to fix that but I haven't pulled recently.\n\n\ntests/functionaltests/Tests/NSURLStorageFileTests.mm, line 40 at r1 (raw file):\n\nPreviously, rajsesh-msft (Raj Seshasankaran) wrote\u2026\n\n\n2 \n\nThis might sporadically fail on the build server.\n\ncan increase to 10? should never hit timeout but just so tests dont hang.\n\n\ntests/functionaltests/Tests/NSURLStorageFileTests.mm, line 65 at r1 (raw file):\n\nPreviously, DHowett-MSFT (Dustin L. Howett (MSFT)) wrote\u2026\n\n\nASSERT_TRUE \n\nDo we not have the OBJCEQ/OBJCNE macros in here?\n\nHilariously no. Not for TAEF functional test interop with gtest macros.\n\n\nComments from Reviewable\n Sent from Reviewable.io \n. @edvv That seems unlikely. WinOjC has a Logging.dll that is called into to log errors etc. that is not controlled by the debugger. If you can get a full stack trace of the calls that end up in Logging.dll (or provide a small sample that reproduces the issue) we should be able to at least get a bit more info. As is, I'm not sure there is much actionable here.\n. > - (void)getBytes:(void*)dest range:(NSRange)range {\nnot part of this change.\n\nIn reply to: 256453172 \n\nRefers to: Frameworks/Foundation/NSData.mm:279 in 7ac059b. \n. > - (instancetype)initWithBytes:(const void*)bytes length:(unsigned)length {\nnot part of this change\n\nIn reply to: 256452673 \n\nRefers to: Frameworks/Foundation/NSData.mm:225 in 7ac059b. \n. > - (instancetype)initWithBytes:(const void*)bytes length:(unsigned)length {\nfeel free to file a different issue for it. There are a number of places where we are ok crashing in cases of invalid arguments and we'd want to take the time to do the right thing here. It is trivial but as seen with this change, trivial changes may have bigger impacts than first thought (hooray objective C). \n\nIn reply to: 256464010 \n\nRefers to: Frameworks/Foundation/NSData.mm:225 in 7ac059b. \n. :shipit:\n. :clock1:\n. :shipit:\n. :shipit:\n. Yeah looks different. fileTypeChoices appears to be a required parameter so the second callstack makes sense. The first one though I'll need to dig in to see if there is something wrong with the projections internals.\n. Reassigning to @mukhole ... a first glance suggests a projections bug with how the iterator is being produced. \n. @asimonov-msft should be working on a solution to this.\n. :shipit:\n. > ```\n\nComPtr renderTarget = newImage->Backing()->GetRenderTarget();\n```\n\nFor instance, this line actually causes the Render Target to leak unexpectedly. Because GetRenderTarget returns a raw , this assignment operator is doing an implicit ComPtr construction around the raw . \nwrl\\client.h has the following (can check in Visual studio sdk):\nComPtr& operator=(_In_opt_ T *other) throw()\n{\n    if (ptr_ != other)\n    {\n        ComPtr(other).Swap(*this); <-- GREAT SADNESS\n    }\n    return *this;\n}\nWhich shows the construction around a raw* that does an additional AddRef. (Was already +1 from the .Detach() )\n\nRefers to: Frameworks/CoreGraphics/CGContext.mm:1900 in 5eab616. \n. Storing a Com Object as a raw* as a member variable is a problematic pattern. It is removing all the niceness of RAII and makes the consumer have to think at all points about the reference count and its management. For instance, this code is completely not needed if you were to store it as a ComPtr and the other code I commented on is easier to rationalize about (I was actually wrong given how this pattern is. The other code is safe but you really need to pay attention to understand that).\n\nRefers to: Frameworks/CoreGraphics/CGBitmapImage.mm:404 in 5eab616. \n. > ```\n\n}\n```\n\nI don't know what data is but it sure seems like a RAII helper like std::unique / shared ptr would help ref count some memory and delete it for you safely when it is done. This pattern is not thread safe here and the fact that you don't just straight up delete it suggests that the ownership model is more than a simple one so knowing what thread all its uses occur on can be problematic.\n\nRefers to: Frameworks/CoreGraphics/CGBitmapImage.mm:409 in 5eab616. \n. And actually the non owning return raw * while it doesn't leak now, doesn't necessarily correctly describe the ownership as that * could become invalidated at any point while the caller (one of which jackets immediately and minimizes the room for explosions but not totally removes) still has one laying around. \nPoint being, don't use raw * unless you have a real good reason.\n\nIn reply to: 258521890 \n\nRefers to: Frameworks/CoreGraphics/CGBitmapImage.mm:404 in 5eab616. \n. :clock1:\n. @param idx The index from which to remove the value. If the index is\n    outside the index space of the array (0 to N-1 inclusive,\n    where N is the count of the array before the operation), the\n    behavior is undefined.\nSounds like we should do a parameter check before calling into CF there.\n. :shipit:\n. Make sure to update the issue w.r.t. IIterable QI failure.\n. @DHowett-MSFT would there be anything we could do with operator overloading in C++ environments to get the behavior @edvv is requesting here? Might be an easy-ish first step?\n. @DHowett-MSFT should we be closing issues that are duplicates\n. > //\ndoesn't seem changed? #Resolved\n\nRefers to: Frameworks/include/MockClass.h:4 in ff95a9a. \n. > ```\n\n1.0.0\n```\n\nshould be bumped no?\n\nRefers to: build/nuget/WinObjC.nuspec:5 in 08bff3a. \n. :clock1:\n. > ```\n\n1.0.0\n```\n\nAlso thinking but we probably should be 0.0.X since we technically haven't released a first truly usable package. We are still in \"beta\"/development with these packages.\n\nIn reply to: 259294852 \n\nRefers to: build/nuget/WinObjC.nuspec:5 in 08bff3a. \n. :shipit:\n. > class CGIWICBitmapLock : public RuntimeClass, IAgileObject, FtmBase, IWICBitmapLock> {\nWhy are we implementing classes in a header? #WontFix\n\nRefers to: Frameworks/include/CGIWICBitmap.h:56 in 81c6ff3. \n. > };\nDeserves some big old comments I think. #Resolved\n\nRefers to: Frameworks/include/CGIWICBitmap.h:51 in 81c6ff3. \n. :clock1:\n. This 100% WILL break the build right now. I still need to get WinObjC.Frameworks added and integrated before we have any hope of a final build working. This change is already massive though so I wanted to get a first thing into a new long running branch (packaging) before anything else too crazy gets lumped on.\n. I probably DONT want to check in the contents of .tools. Right now running .\\init.cmd or .\\init.ps1 will add those items. Need to re-read \nhttps://www.visualstudio.com/en-us/docs/package/nuget/bootstrap-nuget \n. what are those things?\n\nIn reply to: 261120037 \n. ClangCompileTask items shouldn't be there in the root of the repo.\n. If there is something missing from the actual contents of a produced package yes but I think I got them all. Things like acbuilder etc that appear to just be deleted are usually a project added to packager. Let me know if something is gone gone though.\n\nIn reply to: 261123970 \n. correct. I am trying desperately to reduce the number of checked in binaries we have. We will not be checking in final packages either. \n\nIn reply to: 261129683 \n. no clue! Its something leonard added in the long ago for supporting .mm .m file automagic handling?\n\nIn reply to: 261328280 \n\nRefers to: WinObjC.Build/bin/VC_Pkg_Core_Registration_ObjC.pkgdef:4 in 1072d65. \n. its possible this needs to go with the vsix not with the clang.dll\n\nIn reply to: 261336287 \n\nRefers to: WinObjC.Build/bin/VC_Pkg_Core_Registration_ObjC.pkgdef:4 in 1072d65. \n. :shipit:\n. :shipit:. @memontic-ms is doing the template work. This could be handled by the packaging work as we are touching the templates but this is not really packaging persay. On the consumption side of the package we try to look at $(PlatformTarget) which is x86 even if $(Platform) is Win32. This should mean it works either way. I agree it would nice to be a bit more consistent if the default .vcxproj for win10 C++ apps is x86.. No longer needed. Was rolled into different PR.. :shipit:. Doubtful. This path (WinObjC/Frameworks/AudioToolbox/SystemSound.mm) does the following:\n```\n            WMPMediaPlayer* mediaPlayer = [WMPBackgroundMediaPlayer current];\n        if (mediaPlayer.currentState == WMPMediaPlayerStatePlaying) {\n            [mediaPlayer pause];\n\n            // This runs the callback function, if any, for the audio file that was playing.\n            _handleMediaEndedEvent();\n        }\n\n        [mediaPlayer setAutoPlay:false];\n        [mediaPlayer setIsLoopingEnabled:false];\n\n        if (vibration) {\n            vibrateDevice();\n        }\n\n        _latestSystemSoundID = inSystemSoundID;\n        [mediaPlayer setUriSource:[systemSoundObject mediaUri]];\n        [mediaPlayer play];\n\n```\nWhich suggests the issue may be with projections or our Uri handling (which is supposed to be pointing to a wav file off of the Bundle:\n// Currently using the example wav file located at deps/3rdparty/openal-soft-winphone/examples.\n    // The file duration 1 min 15 secs, which is a bit on the longer side.\n    CFURLRef url = (__bridge CFURLRef)[[NSBundle mainBundle] URLForResource:@\"test\" withExtension:@\"wav\"];. :shipit:. :shipit:. @vkvenkat @afaruqui \nI can't merge this PR because the CI build failed with: \n2017-01-12T06:43:46.6538180Z          LINK : fatal error LNK1104: cannot open file 'AudioToolbox.lib' [D:\\Build\\Agent1\\_work\\2\\s\\build\\Tests\\UnitTests\\AudioToolbox\\AudioToolbox.UnitTests.vcxproj]\nWhich usually means that the project producing the import lib failed to build, or a build order dependency meant that the unit tests were built before the implementation was. \nAs a general rule, the UTs link against the static lib not the dll (in this case that would be AudioToolboxLib.lib ) so I'd double check the .vcxproj file for the project references, /msvc/ for any sbclang.props/.targets link goo and try a clean build locally to see what is going on. . >       NO_STUBS;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)\nAll of the PreprocessorDefinitions lines should read:\nNO_STUBS;_CRT_SECURE_NO_WARNINGS;AUDIOTOOLBOX_IMPEXP;%(PreprocessorDefinitions)\nThis is because you are including the Lib so you don't want to import AudioToolbox symbols as controlled by AudioToolboxExport.h\nAlternatively you can use the lines in AudioToolBoxLib.vcxproj to add it to AddidtionalOptions defined as a space. In any case you don't want to dllimport those symbols\nAs a third option, you could choose to link against the dll instead of the lib (which is what your sometimes working solution sort of tries to do). To do this properly, you should change the project reference to point to the dll project instead of the lib project, but then you can't test the innards of the module; Only the public apis with no mocking (or much more difficult mocking).\n\nRefers to: build/Tests/UnitTests/AudioToolbox/AudioToolbox.UnitTests.vcxproj:192 in a36d92c. . @afaruqui Kicking off new builds. Thanks for the changes!. This is mostly complete. The packaging branch exists and creates packages. @memontic-ms needs to send a PR for some final stuff on this front.. :shipit:. libobjc2 is modified?. :shipit:. :clock1:. You have misspelled words in your commit message.\nI also don't quite understand the issue and what the fix is here. Can you elaborate?. Please add unit tests. I'm not sure what the confusion is for testing? \nMy usual strategy for bug fixes:\n1. Write a test that encapsulates the current bug condition. This should fail.\n2. Fix the product code.\n3. Verify test now passes.\nIn terms of mocking, we have support for using MOCK_CLASS and similar macros that allow for lambda replacement of function bodies at runtime but that is usually used with an interface pattern to substitute in a mock class in place of the production layers above and below the class under test.\nIn this case, it seems like you want to verify the URL returned by the function you modified? The key consideration here would be the file system differences on other people's machines and the access rights of the test code. A generally safe assumption is that you can access resources in the current test directory and can access / mess with paths in well known locations like TEMP, etc. Please make sure that the tests use good RAII / similar patterns to ensure consistent cleanup of any machine state that is modified.. :clock1:. \n@jboich ,\nThe likely case here is simply a UTF encoding issue where we are getting a different CFstring encoding resulting in a nullptr return from CFStringGetPtr or whatever that call was. \nThis is probably the interesting bit to test. In terms of testing, its a bit annoying because its a file scoped static function that we want to test. It does look like though that the inner most failing function we could test would be:\n_CFPreferencesCreateDomainList\nSo i'd suggest making a new test in WinObjC\\tests\\unittests\\CoreFoundation\\ for CFPreferences that calls _CFPreferencesCreateDomainList and checks the result when the username field is something weird (foreign language and with a space). It would be good to write this test and try it without your fix to see that it fails and then make sure it passes with it.\nThanks!\n-Brian\n\nIn reply to: 271939958 . @jboich Sorry you are correct. It does appear that the user name (which we believe is the issue we are fixing) comes in via that GetAppDataPath  call.\nThis makes testing even a bit more difficult which is unfortunate. We have the capability to mock out the WinRT calls that are being made there but we will need to modify the CoreFoundation library and tests to make it more testable. This is nontrivial. Please file a separate issue for that and we can write that test at a later point. \nOtherwise I think we are ok accepting your change pending CI build and sign off (I'll go ahead and schedule a build).\nThanks!. @jboich That would be great. You can submit a new commit on this one if you feel like it is still part of the same issue seen here.. \"Works very well.\"\nShould we not make subjective assertions about the code in the commit message? Seems like either you are trying to convince someone of it which seems wrong in a commit message or that you are extra proud of yourself which is fine but also probably not appropriate for the commit message. I'd prefer if we had a concrete metric+comparison point to back up any such claims. #Pending. Looks awesome thanks! 80ms seems like a good savings if I recall right (I think it was ~200-300 ms load time for projections). . :clock1:. I did a git move. I don't know if there is a better way. The BuildMonitor stuff accidentially got deleted so it probably shows up as an add? Without redoing the packaging branch again I don't know what else I can do.\n\nFrom: Pradip Dhara notifications@github.com\nSent: Thursday, January 19, 2017 7:56:29 PM\nTo: Microsoft/WinObjC\nCc: Brian Bowman; Author\nSubject: Re: [Microsoft/WinObjC] Address feedback and merge issues on packaging branch (#1749)\nusing System.Reflection;\nAre all these files add's or moves?\nIt would be nice to not lose the git history.\n\nRefers to: tools/BuildMonitor/Properties/AssemblyInfo.cs:1 in fb72438https://github.com/Microsoft/WinObjC/commit/fb72438ebdccec75fe0466d2dd256c790fcc594d. \n-\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/pull/1749#issuecomment-273971632, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AO6vzShUhYvTJHobsIeW18yhkIVrpKLgks5rUDBtgaJpZM4Loza8.\n. Wiki and README have been updated.. > #include \nI don't know what an .inl file is??? This looked like it needed to change though.\n\nRefers to: tests/unittests/Starboard/StarboardAutoIdTests.inl:17 in 53f7de8. . Need to adjust the scripts still so that build definitions don't break. May be a bit non trivial since the output is a different format #Resolved. > EndProject\nCoreGraphics, CoreImage, and COreGraphcis.Drawing had a different OutDir. This should be standardized. I need to figure out what I missed. #Resolved\n\nRefers to: build/build.sln:90 in 53f7de8. . >     $(SolutionDir)$(Platform)\\$(Configuration)\\$(RootNamespace)\nRemove. I missed a few.  The new outDir is /build/Release or /build/Debug. Perhaps we should do $(SolutionDir)$(Platform)\\$(Configuration)\\ so its close to the same? It just needs to be different from the frameworks out dir so that the package .zip stuff (soon to be removed) doesn't pick up uts. This means we will have 1 copy of the binaries around to support the UTs but that seems a lot better.\nResolved #Resolved\n\nRefers to: build/Tests/UnitTests/CoreImage/CoreImage.UnitTests.vcxproj:73 in 53f7de8. . > //************\nLooks like the test_p benchmark tests fail... Is it possible that you aren't using standard GTEST macros for that? \n\nRefers to: tests/Benchmark/EntryPoint.cpp:1 in a3246d1. . I changed the test info name dealio and it seems to all pass for whatever that means... \n\nIn reply to: 278493789 . yep. Currently planning to file one on DrawingTests to integrate with the change (seems like we need to validate the arguments, perhaps adjust the ifdefs, and rework the test runner) and one for Benchmark tests\n\nIn reply to: 278498755 . Prerun seems to be conflated with setup. What are the semantics for failures in the prerun method? Does this work with test_p?  #Pending. :shipit:. FOO_DISABLED_TEST is supposed to indicate that tests are temporarily disabled and will be fixed pending some change. We already have a windows only test binary for foundation for tests that are truly windows specific in their operation. Let's not muddy the waters here.... :shipit:. :clock1:. > \njust whitespace change? Revert this file? #Resolved\n\nRefers to: tests/functionaltests/FunctionalTests.cpp:58 in ea546ee. . Didn't look at the test themselves since I don't know the UI stuff but looks good otherwise. #Closed. :shipit:. >                                                                    GetTestFullName().c_str(),\nIs this not wrong now? It would pick up the interstitial name as well right? #WontFix\n\nRefers to: tests/UnitTests/CoreGraphics.drawing/DrawingTest.cpp:80 in c7d625e. . >                                                                    GetTestFullName().c_str(),\nI\"m a dummy. I see how this works. polymorphism is fun. Erm inheritance. I code goodly.\n\nIn reply to: 279105423 \n\nRefers to: tests/UnitTests/CoreGraphics.drawing/DrawingTest.cpp:80 in c7d625e. . yep. I see that now. sweet sword.\n\nIn reply to: 279105585 . :shipit:. :shipit:. :shipit:. This is kickass. Love it.. The last commit is the interesting one (fixing merge conflicts). Dunno the best way to review it.. :shipit:. :shipit:. maybe not a real issue.. @memontoc-ms you should kick off a CI build. :shipit:. Added 3rdparty package. . :shipit:. :shipit:. :shipit:. having that line there adds requirements to the linker search paths that we have which isn't the end of the world but also kinda annoying. Very low pri as we can add the linker search paths ourselves but since this in the vcxproj proper it makes things a little harder if we change our minds later.. >     \nYes. I opened them all in VS to build. I didn't notice if it overwrote these filters from what vsimporter did. +1 on you checking that out.\n\nIn reply to: 282103326 \n\nRefers to: samples/HelloGLKit/HelloGLKit.vsimporter/HelloGLKit-WinStore10/HelloGLKit.vcxproj.filters:72 in c66e169. . > <?xml version=\"1.0\" encoding=\"utf-8\"?>\nYeah not sure. Wouldn't surprise me if it was vs2017 rewriting it.\n\nIn reply to: 282107952 \n\nRefers to: tests/testapps/CGCatalog/CGCatalog.vsimporter/CGCatalog-WinStore10/CGCatalog.vcxproj:1 in c66e169. . > <?xml version=\"1.0\" encoding=\"utf-8\"?>\ngoing to let it be for now though.\n\nIn reply to: 282132028 \n\nRefers to: tests/testapps/CGCatalog/CGCatalog.vsimporter/CGCatalog-WinStore10/CGCatalog.vcxproj:1 in c66e169. . :shipit:. :shipit:. :shipit:. :shipit:. @kzu probably cares about how we do this. Also how we attribute the nugetizer stuff to him. I'd love a review on this.. @kzu We still need to support VS2015 consumers (until 2017 comes out and is validated .. which I know is soon). My plan until then was to manually redist that vsix since it still works in our scenarios. \nFrom the sound of it you are confident with the 2017 evergreen url not chaning soon? I don't want to break the install script unnecessarily. . @kzu @memontic-ms @rajsesh-msft any more feedback here?. Fixed by https://github.com/Microsoft/WinObjC/pull/2580. :shipit:. Good find!. :shipit:. updated.. now running. App launch tests now run in packaging branch.. @memontic-ms  and I both hit this at various points but then it never repro'ed. What changed recently for you?. pushed fix.. Change of plans to use packageReference instead.. @aballway commit 78f6f8baf24cf87ca065fbc6f9efa0a712b9edc5 put it back. pull latest and you should be good to go. It snuck in because I didn't run a build for the commit since it was adding an unused (at the time) file.. @memontic-ms can you look at this? I think we may need to update vsimporter to do package reference + the overrides imports so we can turn this on.. Running now.. Pushed this workaround.. :clock1:. @kellymor looks good to me!. https://github.com/bbowman/WinObjC/tree/bbowman/packaging_documentation if you want to see it as markdown. A lot of the badges obviously aren't lit up yet. I don't know why the Github release one isn't.. >     \nThis effectively removes the need to do the BuildingFrameworksCore check, which is incorrect right now. (@memontic-ms you'd want BuildingFrameworksCore to be in each of these projects and then to have this project reference the tip of the subtree).\n\nRefers to: build/WinObjC.Frameworks.Core/WinObjC.Frameworks.Core.nuproj:64 in 38ccfc2. . oops.. Looks good. #shipit. Related to https://github.com/chocolatey/choco/issues/1201 . @DHowett-MSFT updated.. >    Create package version based on GitInfo (if available) and a timestamp \nChange.\n\nRefers to: tools/WinObjC.Packaging/WinObjC.Packager.props:21 in f71c8bd. . Looks Good!. pushed to develop.. I agree we shouldn't comment our tests but there isn't a need for Iw anything on the reference platform by definition. Looks like a std unique ptr would fit the bill fine here. It's up to the reference platform to choose the right heap. As \"app code\" in these tests we shouldn't need to be extra fancy / helpful. On our platform yes(for now). On the ref platform it is meaningless since there is only one controllable side of the equation. The entire purpose of IwMalloc and friends is actually so you don't need the extension. It's to match the app developers \"normal\" heap so that blind memory alloc / dealloc between components doesn't explode with wrath of 1000 suns. . :shipit:. :shipit:. It's a recent regression due to packaging or vs2017. Our best guess right now is that there was a change in how msbuild is being invoked and before we were just inheriting the parent process handle so it didn't matter but now that parent process can spawn UI in some circumstances\n@rainersigwald may know more on recent msbuild changes? \nSeems like a long standing bug that we got lucky with either way.. @pradipd \nBefore this change, the precedence was:\n1. Use Locally built packages if possible. \n2. Otherwise use \"*\" Version (latest stable package)\nAfter this change it goes:\n1. Use Locally built packages if possible. \n2. Otherwise Use Latest pre-release package if building pre-release (determined by gitversion)\n3. Otherwise use \"*\" Version (latest stable package)\nThis would allow us to get the latest daily builds when building on develop. (Answers the question you asked in person this morning about trying out the fix for the clang windows)\nIn terms of where gitversion came from, this was the nuget package installed on my machine for version 4.0.0-beta0011, as shown in the path. Its a pre-restored package. To update we'd need to check in new binaries here. The other option is to have init.ps1 or other script get the latest version before the build but this is error prone if people forget, clean their repo etc. #Closed. > CodeFlow for GitHub does not download executable files. If you trust this file and would like to run it, please download it yourself through GitHub.\nmaybe I just did the whole nuget so #won't fix.\n\nIn reply to: 287474738 \n\nRefers to: common/gitversiontask/4.0.0-beta0011/build/lib/linux/x86_64/libgit2-baa87df.so:1 in 680a7de. . >     TaskName=\"FixupVersionOfWinObjCProjectReferences\"\nsure.\n\nIn reply to: 287477586 \n\nRefers to: common/winobjc.packagereference.override.targets:9 in 680a7de. . @DHowett-MSFT @memontic-ms updated for \"*\" and packages that are substrings.. Can @asimonov-msft file an issue for this then?. Assigning to @memontic-ms to investigate. As we've discussed before, we shouldn't be overly ambitious with what we do for people automatically since we can't know everything about our consumer (do they use git, do they use GitFlow, do they have remotely the same versioning scheme etc).\nI'm thinking what we should do is provide a file that has the SetPackageVersion target for them but it is empty except for a commented out version that does our stuff with instructions of what is needed if they want to uncomment it? . Assigning to @memontic-ms to investigate. The Packaging package shouldn't be using SystemIncludePaths because it logically doesn't map to system components. If/When we move build.sln to use the packaging package we may want this to be configurable.\n@mukhole I'll follow up with you on this but either one should theoretically work with different implications to the compiler. I'm surprised it totally didn't work?. @jaredhms @andrejo-msft I have updated the wiki at https://github.com/Microsoft/WinObjC/wiki/Packaging let me know if there is still additional information you want captured there.. > choco upgrade winobjc-tools\nThat is only if we want to direct people towards our pre-release packages which I don't think we should.\n\nIn reply to: 288177498 \n\nRefers to: README.md:55 in 27b298b. . >   - Static analysis tools\nI'm confused. Thats exactly what I'm saying? Or are you saying that you want the list to only include the items not covered by that workflow?\n\nIn reply to: 288178049 \n\nRefers to: README.md:36 in 27b298b. . No it won't fail. Upgrade is the prefered call. See https://chocolatey.org/docs/commandsupgrade . the same as before (it will re package things ). \n\nIn reply to: 288553358 . :shipit:. :shipit:. @asimonov-msft is this a regression?. :shipit:. Note: This only works when building in visual studio. Also this means that the CI build won't accurately reflect this change. If we want other builds to be able to take part, they need to add this project to their solution which is super unfortunate.. The reason for both points above is that VS uses a bottom up approach that first analyzes dependencies and then builds the projects bottom to top so this new project will be loaded and built before anyone that depends on it. In msbuild (command line) it operates in the reverse (top down) so there isn't a chance to restore first as the project is already loaded.\n\nIn reply to: 289613699 . :shipit:. msbuild /t:restore returns \"response status code does not indicate success: 401 (Unauthorized)\"\nIs normal. This means you are trying to get packages from a feed that needs credentials and you don't have the credential provider. Using the /t:restore unfortunately doesn't pick up Cred providers. I already filed an issue on them for that. Please try nuget.exe and let me know if the project.json still doesn't work.. merged fix. thanks.. Agreed. Taking. I'll clean this up across the board since we have a checked in version now.. Should be gone with latest develop changes to versioning.. :shipit:. Just tools. @pradipd Yeah tools will be different. I can revert them all but that makes me more sad. . @pradipd / @jaredhms / @rajsesh-msft  / @memontic-ms would you prefer all of them to be reverted?\nThe pros / cons or reverting them all are as follows:\nPros:\n1. They are all the same\n2. You can use 0.2.170229-dev- as a version string to say I want the latest pre-release package off of develop or 0.2.170229-pr- to say I want the latest pre-release package off of a private branch\nCons:\n1.  pr > dev > [0-9]+ meaning that in version strings like 0.2.170229-*, private branch packages will always be preferred over develop daily packages, etc. We've already pushed a package to nuget.org with -pr-### so its being preferred over our develop packages. If this happens again we need to wait for a stable package release to \"reset\" it. With the timestamp first, each day resets it so its more likely a daily build will be preferred.. The build machines builds from the command line daily and I fixed some issues recently. Please reopen if you are still seeing issues.. Looks good.. :shipit:. @bviglietta sounds like a feature to me ;-) I think after this change is applied across the board we will be putting Frameworks.UWP at a layer above/apart from Frameworks so that apps won't need to include projections at all unless they opt-in (Add a dependency themselves to it). I also have a task to be smarter about how we copy in but that problem is much harder with packaging and multiple middleware /languages potentially in the picture.. :shipit:. @chiefgreek Thank you for trying out the new packaging stuff!\nI believe the issue you are hitting is because we have not released a stable (master) package yet (we are currently in the process of building and validating a new master release).  In your project.json you can make the following changes for now to pick up our latest daily builds for this next release. After we release the stable package, please change back to \"*\" to get the stable packages.  \nMore information about NuGet version strings can be found here.  Also note that just \"*\" means \"latest stable package\"\nNOTE: You can also make these changes in the Nuget Package Manager by right clicking on the solution and selecting \"Manage NuGet Packages for Solution\". It should show you latest versions of our packages so you can update.\ndiff\n{\n  \"dependencies\": {\n-    \"WinObjC.Frameworks\": \"*\",\n-    \"WinObjC.Language\": \"*\"\n+    \"WinObjC.Frameworks\": \"0.2.170229-dev-*\",\n+    \"WinObjC.Language\": \"0.2.170229-dev-*\"\n  },\n  \"frameworks\": {\n    \"uap10.0\": {\n      \"imports\": \"native\"\n    }\n  },\n  \"runtimes\": {\n    \"win10-arm\": {},\n    \"win10-x86\": {},\n    \"win10-arm-aot\": {},\n    \"win10-x86-aot\": {}\n  }\n}\nI'm going to close this issue but please re-open it if this doesn't fix your problem. I very much want our packaging story to be as seamless as possible for you guys.. pushed fix.. @memontic-ms I think its fine if we remove the search paths since we add it to Link directly and we are now removing duplicates from the link line when importing. The one concern would be if someone adds one back themselves and expects it to work. I don't see a need to remove the search path so i'd say leave it for now?. Looks like parallel builds are still busted? #Resolved. @memontic-ms @pradipd @rajsesh-msft and other reviewers, I think it is actually good to review now. I am spinning another CI build to confirm. Sorry for jumping the gun here. #Resolved. @weswmsft how does this impact? . I think this is correct now? Or isn't impacting the new packages? Please reopen if I misunderstood.. @kellymor what is the concern exactly? I don't follow.. :shipit:. I swore I already cherry picked this. @mattmunich unfortunately our stable package is in moderation right now (https://chocolatey.org/packages/winobjc-tools/0.2.170407) and until that is done you won't be able to see it with the normal commands. Use -pre for now\nIn terms of the machine differences, looks like you are getting:\nExtensionManager.NestedExtensionInstallException\nWhich I'll have to dig into more. Did you happen to have already installed any winobjc VSIXs?. @DHowett-MSFT was able to repo locally and we found out the issue is related to the nugetizer VSIX that we try to install. I have opened https://github.com/NuGet/Home/issues/5026 on them. \n@mattmunich, You can workaround the issue for now by installing the xamarin tools (Mobile development with .NET workflow option) and trying again.\nI will investigate other workarounds for our install script in new versions of the tools package.. Updated the readme. Please reopen if you are still having issues.. True. We will need to adjust the multiplexing logic for cleaning too.. Readme is updated.. Yeah I don't know that I agree. What situation is this failing in? Should we have it default to the existing behavior but be plugable for your situation?. master packages locally were produced fine.. :shipit:. @pradipd any more info here?. I tried to fix it today. Check after tomorrow's build and see if it's fixed?. I did. Not super tested. It was validated by looking at the imports of WOCCatalog and doing some light testing with it. After the change we get:\nWinObjCRT.dll\n            46C484 Import Address Table\n            524CD8 Import Name Table\n                 0 time date stamp\n                 0 Index of first forwarder reference\n\n               1A free\n               22 malloc\n\nSo I assume it works.. https://github.com/chocolatey/choco/wiki/CommandsSources\nYou will want to add the source first and then refer to it by name instead of location (a little cumbersome I know). Let me know if that still isn't working.. @edvv closing for now. Please reopen if you are still having issues. @memontic-ms no. It only changes the version and what is shown on the window chrome as the app display name. It seems that the appx install is a little wonky and overwrites the appx if its the same publisher but a different version (I guess its sort of like an update but it doesn't prompt you) and allows multiple installs of the same app with different publishers. . @pradipd it affects all apps that use the override targets which will be all our apps except for the samples repo. Seems good enough to me.. This Release CoreFoundation -> Debug App and that is correctly triggering the free to use the Debug crt. The allocation however must still be on the release CRT. I will need to track down what exactly I missed. Perhaps a weird other function or a call was proxied through a dll that doesn't have the CRT replacement in it (libobjc2? does it hand out memory for new classes?). ucrtbase!_realloc_base+0x30\nCoreFoundation!__CFDataGrow+0xf8\nCoreFoundation!CFDataSetLength+0xbe\nIs at least one. Probably most of the _base symbols need redirected as well.. @DHowett-MSFT was just guessing. Looking more I just missed things. . LOL. why in the world would the app ucrt even expose this then. Thats so dumb.. is this a nugetizer issue? I don't think we mess with the clean behavior? Note that switching from Any CPU to x86 / ARM will change the caching behavior for this and it won't delete them all but I'm not sure it should in that case.. looks like one test app has an AV in libGLESv2. Its possible this is due to me and possible its something real that got uncovered by re-jiggering this. Need to investigate more to be sure.. @rajsesh-msft look like this crash repros in the debug-debug case before (tested with 0.2.170407 release bits) so my CRT changes aren't the issue here. I think I've narrowed it down to an app problem so I'm going to go ahead with this change.. @teras you can make static libraries that depend on WinObjC apis. Just make sure that you include references to winobjC in the final project so that the symbols in the static library can be found.\n. @pradipd  yes partially. . @nathpete-msft what do you mean by: \n\nOnce it is possible to expose the type information of our custom XAML controls to the testing framework\n\nPerhaps we can chat about what we need in testing?. @nathpete-msft if you are owning this task / bug, I'd like you to figure that out. I did most of the investigation with @jaredms and can answer questions.. Should be none? . I misunderstood the original question. This is around being able to call LoadLibrary. . @DHowett-MSFT much to my surprise that is exactly what explicitly links means. https://msdn.microsoft.com/en-us/library/784bt7z7.aspx . See https://github.com/Microsoft/WinObjC/pull/2631. I think it does more appxmanifest validationso I'd like to keep it. Easy workaround is to create a branch or set PackageVersionOverride. It would be nice to support though with a warning. I think basically what I will do is set PackageVersionOverride if the branch can't be determined and its not currently set to something like 0.0.1-detached. It obviously won't follow all the jazz to be the latest daily but if you build everything locally it will still pick it up.. :shipit:. :shipit:. @pradipd nope!. @rajsesh-msft . Hi @lafezhang \nThis usually indicates that nuget can't load the project for some reason. Unfortunately nuget.exe doesn't give the best error messages for this.\nFrom a Developer Command Prompt for VS 2017 (you should be able to search your start menu for this), navigate to the folder where build.sln is and try running:\nmsbuild .\\build.sln /t:Restore /p:Configuration=Debug /p:Platform=x86\nThis will run the restore target that nuget uses to inspect the projects and should provide a little more information on what is going wrong. A first guess is that git lfs may not have run and some binary used in the build (like .\\common\\gitversiontask\\4.0.0-beta0011\\build\\GitVersionTask.dll) isn't actually pulled down and it can't load the placeholder file.\nPlease let me know what the issue ends up being so that I can update https://github.com/Microsoft/WinObjC/wiki/Packaging#known-issues to help other folks in the future.\nThanks!\n. Closing since this was figured out.. If you set your symbol path to look at the output folder of the sdk build, you should be able to get local symbols. (.\\build\\win32\\Debug\\Universal Windows\\ should have all the .pdbs you are looking for). \nWhy do you want to not use nuget? If you are just using the sdk, it is the easiest way to consume the sdk (you don't need to build the sdk and can easily jump between versions). please see \nhttps://github.com/Microsoft/WinObjC/wiki/packaging#what-benefit-does-a-developer-get-from-winobjc-shipping-via-packages for more info on why we ship with nuget.. :shipit:. @Ron2 ,\nWe also would like to have our samples be as easy to get up and running with as possible. Did you check out https://github.com/Microsoft/WinObjC-samples ? These are our more polished samples that just consume the sdk packages directly while the ones in the main repo are a little convoluted in how they try to automatically pick up locally built packages where possible. Apologies for the confusion on the documentation! Sounds like you got up and running though?. The NugetRestore project is a special workaround because the checked in version of WOCCatalog uses PackageReferences instead of a project.json file (these are different ways to describe package dependencies and more information can be found here. \nFrom the look of the error it seems like it might be an issue with how the project is compiling C++ code by default ( struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^ suggests that this project is compiled with /ZW turned on). You might try ensuring that you turn this off in your app's settings.\nThe other possible issue is a difference in the linker options used to link the xaml generated code and the options used to link together the objective c code. This would cause the linker to be run twice and miss symbols from the other run. A diagnostic log output of your build would reveal this but it may be non trivial to correct the issue. . Based on the error message you are failing to link in UIApplicationLaunched and UIApplicationActivated\nThese symbols should be provided by UIKit.dll (you can see this in its def file  if you search for the symbols). The next step in figuring out what is wrong is going to be looking at the link statement used to build your app. If you could build higher verbosity logging and find in the build log where link.exe is executed we can maybe start to see what the issue is. Perhaps also useful would be if you could include your .vcxproj to see what the result of importing your app actually yielded.. I am seeing new pre-release packages that meet the requirements in the screenshot WinObjC.Language >= 0.2.170610 so @jboich you might try building build.sln from develop again. . I believe you can't have spaces in the path. . Because the error is from C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(5350,39), which is part of the core of MSbuild not WinObjC, I would suggest filing that piece of feedback with the MSBuild folks at https://github.com/Microsoft/msbuild. . Hi there @konisx,\nIt  looks like you are trying to use the .zip provided at https://github.com/Microsoft/WinObjC/releases? I would recommend against this approach unless you are planning to build WinObjC from source (perhaps to include some additional customization or code change). Instead I would recommend using the Nuget Packages shown in the dashboard of the readme (The latest frameworks package stable release is here https://www.nuget.org/packages/WinObjC.Frameworks/0.2.171110).\nPlease see the getting started guide at https://github.com/Microsoft/WinObjC/blob/develop/README.md and the in depth page on packaging https://github.com/Microsoft/WinObjC/wiki/Packaging for more information.\nApologies that the https://github.com/Microsoft/WinObjC/wiki/Adding-Objective-C-to-an-Existing-Project page is out of date. It should be changed to say that you just need to add references to the two nuget packages (https://docs.microsoft.com/en-us/nuget/tools/package-manager-ui#finding-and-installing-a-package for general nuget instructions).\nDoes that help?\nLet me know if there is more I can do to help / what documentation would make the process easier.\n-Brian. Can you provide a zip/link to your project with the single ObjC file that isn\u2019t working?. Sorry for taking a bit on this but I finally got a chance to check out your zip file.\nI was able to get it to build by doing a few things:\n1. Removing starboard-sdk.targets and starboard-sdk.props from your project. These aren't needed as they are automatically provided by the language package.\n2. Adding an import Foundation/Foundation.h to the file that was complainng about missing NSString\n3. Also adding a dependency to the Frameworks package. It looks like there might be a bug in NSUrlCredential and Security layering violations between the two packages. Depending on both works around the issue.\nAs an aside, I recommend switching from a package.config to project.json or PackageReferences style of nuget dependency declaration. packages.config litters the project with lots of imports that don't up to date very well. See  https://github.com/Microsoft/WinObjC-Samples/blob/master/Apps/Calculator/Calculator.vsimporter/Calculator-WinStore10/project.json as an example.\nClosing this. Please reopen if you are still having trouble.. You will need to install the winobjc-tools command line package using chocolatey.\nhttps://github.com/Microsoft/WinObjC/blob/develop/README.md has instructions for downloading and installing Chocolatey and the tools package.\n. do we need to do this? I'm a little confused on how this will work since 0 obviously < min interval. I understand its a default but I know in other apis, there was some weirdness about not letting you set it back to that.\n. Yes. I believe that we should be using both an array and a map here. The array is used for ordered operations while the map is used for set operations.\n\nIn reply to: 61937416 \n. Note that \"normal\" ordered maps etc won't work for the ordered portion as it is not an ordering defined by hash value, or item comparison. IIRC, NSOrderedSet provides the ability to insert an item at a desired index.\n\nIn reply to: 61937816 \n. ( CC stands for coding convention btw. We use that abbreviation internally but figured you may not know)\n\nIn reply to: 62362657 \n. Is this really what we want? seems like it may be more hassle than its worth. As ben mentioned elsewhere, inserts etc will invalidate the iterators in the map which will be expensive to rebuild. I assume the reasoning here was to be more performant in a few operations that otherwise would require linear traversal but I'm not so sure that is needed? It appears that OrderedSet is O(n) for \"array like\" operations so I don't think we need to be super aggressive at optimizing at this point. Thoughts?\n. std::distance may be a better choice as pointer math can be hard to get right / hard to understand to the casual observer.\n. Sorry for commenting super late here but what was the rational for using stl containers vs building on top of NSArray + NSSet? It seems like the general call patterns here may match closer with the NS counterparts and we can worry about optimizing / using a good backing store like stl there instead of re-implementing that \"adapter\" code. Just thinking that may be a bit easier in light of ben's concerns on iterators, the equals comparisons, etc...\n. It is an odd data structure but yes I think a combination of NSArray + NSSet is the way to go. Keeping them in sync is a bit of a challenge but I don't believe Apple makes any thread safe promises about ordered set so it shouldn't be a huge burden. I see what ben is saying about an ordering on a hash table but that isn't what we want here. Hash table orderings are usually used internally for faster operations which implies an ordering according to some well defined scheme. NSOrderedSet however allows for programmatic index manipulations (insertAtIndex etc) that act like an array. A hash table with a linked list would need to be a single linked list which removes the benefit of the hash table unless I'm misunderstanding Ben's idea. For simplicity I would go with NSArray and NSSet as you have suggested.\n\nIn reply to: 62720222 \n. Insufficient. You should make sure that nil can't be added to the set. That more closely matches the reference platform and then this check would not be needed.\n. discussed offline. we still want this check and ideally would like a nil check on adding a member in the mutable version. The change, as is, is good though.\n\nIn reply to: 63953430 \n. I agree with Dustin. It seems like a lot of work to make this proxy object just for the mutability weirdness. Can we validate that the returned object on the reference platform isn't actually a mutable one?\n\nIn reply to: 63978319 \n. I agree with Ben. In general I've learned that the compiler / linker teams have lots of smart people that have been working for years on them. Doing things to simply get warnings / errors to go away is rarely the right call as it usually will reveal a bigger underlying issue in the code. Lets figure out what the error was and see if we can understand why it thinks it needs to be exported.\n\nIn reply to: 64072253 \n. Prefer using StrongId where possible.\n\nIn reply to: 63978985 \n. I disagree here. copyWithZone should return an instance of NSMutableOrderedSet (since that is the class being implemented here) but it should be a new, copied instance ... \n\nIn reply to: 63976700 \n. ?\n. Not a big deal but I would have preferred an NSArray parameter here for clarity. \n. this function needs to be static or better yet shared between files. As is it breaks the one definition rule as C style functions are extern by default meaning both Translations units will see the definitions and the linker will just choose one for you. That is \"fine\" as long as they stay the exact same but that begs the question why they just aren't sharing the implementation to begin with.\n. We have some macros for this that we'd prefer that you use. THROW_NS_IF_FALSE and friends are useful for these sorts of arg checks. Note that E_INVALIDARG maps to NSInvalidArgumentException.\n. Please remove commented out code. In general commented out code just clutters the code base and makes things harder to read. Because commented out code by definition never compiles, it often is quickest to get stale and lacks the appropriate context for why the code isn't working, what needs done to enable it, etc. \n. please remove commented out code.\n. (and everywhere else in this file)\n\nIn reply to: 64478371 \n. Sorry was unclear. Meant to only comment on one line. The \"#pragma mark NSArray\" doesn't make sense to me here.\n. The test wouldn't depend on another test. Both would depend on a common helper function.\nIn terms of code hygiene and maintainability, we want to factor out duplicated code where possible. Imagine not that someone wants to add different logic in the future (as this is always easy by adding a new function and calling it) but instead imagine someone changing the logic to an existing function. With two functions of duplicated logic, this makes two places the author needs to change and increases the opportunity for bugs / mismatches to arise. \nRenaming the functions is not sufficient as the extern / one definition rule issue still exists if someone else comes along and creates their own function called this. We should be very precise about how we expose functions where possible. Either a function is private to that TU and should be marked as static or it is (possibly) shared across files and it is not. Here you are claiming they are private but only changed the name. \nPlease change this to have a common helper .h file (along with an implementation .mm or .cpp) that each test includes for this function. \n. Oops. I'm a dummy and forgot about the mutableCopy guys. Carry on. \n\nIn reply to: 64486017 \n. Yes. i believe the _Nonnull there is saying that items in the objects[] are _Nonnull not that the pointer itself is _Nonnull. But we'd want to double check that.\n. Prefer that we don't use auto unless the type is unknowable (lambda), unwieldy (c++ iterators), or already fully described from the rhs (std::make_unique). In this case it is a little unclear if the left side will be a raw IVibrationDevice* or a ComPtrwhich have very different memory management implications. \n. Prefer creating a separate ItemGroup for CLCompile items to make it more clear to the casual observer where the differences are.\n. Can you remove the Condition given that this covers all our configurations and I don't see a difference in the import statements.\n. Why do we need to compile /ZW? That seems excessive for what we are doing here. Can we not use WRL instead? /ZW adds a fair amount of overhead and initialization code that I'm not sure we want to pay the price for here. Please take a look at Foundation or Security module for using WRL in ObjC code.\n. same concerns here about compiling /ZW.\n. Prefer that you move the code directly into this file. I don't think you need a separate .cpp for this. If you do determine for whatever reason that you need a separate file, please create a header for any functions you put in it. This helps with code maintainability by reducing code duplication and so that all callers don't need to go update their declarations should something change. \n. nit: Prefer that you don't use abbreviations where possible. Though the meaning may be obvious to you, it is unlikely that you will be the only author / contributor to this code. Abbreviations add to a sense of \"tribal knowledge\" that discourages casual readers from understanding and being able to contribute.\n. As a more concrete example, a casual observer may see SSID and incorrectly think it refers to Service Set Identifier (from WIFI) and be really really confused what this code is doing. \n. If you absolutely need this file, please choose a more descriptive name. WinPhone is incredibly broad and doesn't seem appropriate for a vibration helper function.\n. nit: please be consistent with _foo vs _Foo names for static variables.\n. Note that arc was turned on for these files.\n. this seems like it may be better served by a vector or something local so that you can just make the final dictionary without doing potentially expensive grows and copies on the mutable guy.\n. I think you want an HStringReference here like below. Should be able to use RuntimeClass_Windows_Phone_Devices_Notification_VibrationDevice.\n. As we discussed offline, what is the reasoning to use WRL or C++\\Cx over projections here? It appears both WinRT apis used here should be available in projections for you to use.\n. This file seems specific to OrderedSet tests. seems like it should be named something more specific as TestUtils sounds very generic and applicable to all/most tests.\n. The second @\"\" is a continuation of the sentence and, to me, does not lexically parse well. It at least needs correct spacing... Was this just copied from above?\n. nit: please use spaces instead of tabs to match the rest of the codebase. To that end, we have setup clang-format for the project and ask that all PRs have it run prior to submission so that we can avoid silly formatting comments like this. :-)\n. Curious why this was changed. In general I agree that using magic numbers is bad but this is also changing the code path slightly. With the change we are testing the whole array, whereas before we were testing a subset. I think both are good test cases and we should probably include both (especially for the below case dealing with index of 9). #Closed\n. Good catch. \n\nIn reply to: 67916770 \n. What @msft-Jeyaram  and @ms-jihua have said is correct. That said, I definitely agree that it is not very clear at the moment. @ms-jihua and I talked, and she will add a header to each of the ReferenceFoundation files to make this hopefully more clear in the future. Sorry for the confusion and thank you for putting up with us :-)\n\nIn reply to: 67920136 \n. Would be nice to use more descriptive names across the board here. dx0 could be deltaX0 and x10 could be distance10. I know its common to be extra terse in general math but more descriptive names aids the casual reader in remembering what the components all are when the code is longer than a single screen etc. \n. Ideally we deduplicate the code in some regard to remove this hassle in the future. Failing that, i'd add a todo and open an issue to deduplicate the code so that we can tackle that problem by itself at a later point.\n\nIn reply to: 68681687 \n. Actually would be nice to make dx0 deltaX10. I was confused why there was no dx1 / dy1 but that is because a single point was chosen for the deltas. \n\nIn reply to: 68683240 \n. might be worth a comment on why we need to redefine these. For instance discuss nil being a keyword / objectiveC class already and __alignof being a MSVC specific builtin.\n. probably want to rewrite this example to use gtest syntax instead of TAEF syntax since we standardized on gtest for our test verification macros.\n. needs the MOCK_CLASS macro here.\n. Probably worth a comment about what the MOCK_CLASS macro is doing. I.e. explain the need to squirrel away the class name but do so in a repeatable mechanism.\n. Might be worth looking at CX_MOCK_INTERFACE to see if we could have borrowed code / concepts for our MOCK_CLASS macro.\n. Remove any references to Arcadia\n. Change namespace to Islandwood or something more appropriate for our project.\n. TestFoundation doesn't make a lot of sense as it can be confused with Foundation module. Perhaps choose something like TestCommon or TestBase or something else to indicate its a \"foundational\" piece of the test infrastructure.\n. This file is really cool! You are a wizard with macros and templates!\n. might be worth adding newlines to separate the COMIncludes block for increased readability.\n. also this block should be inside an ifdef OBJC so it will still work for C++\\Cx / straight C++ tests.\n\nIn reply to: 68807873 \n. these new includes aren't needed right?\n. Nit: I would prefer these comment lines to go on a separate line before this. The line itself is long enough as is. Additionally coding conventions state that the first word of the comment should be capitalized as a comment is lexically an english sentence.\n. nit: coding conventions state that comments on their own line should have a new line preceding them to clearly delineate with which line of code the comment belongs and to make the code more easily read in discrete blocks.\n. nit: coding conventions state that a new line should be present after a closing } block. This makes each {} section a discrete block and more easily read.\n. nit: coding conventions state that a new if(){} block should be preceding by a new line. I understand you probably copied whats above but lets fix it too while we are in the area.\n. super nit: would love a newline before the return to just visually separate the function parameters from the  called function args.\n. nit: please make comments full English sentences. A fragment like this almost always has an implied context that a casual observer may not pick up on. In this case there is an implied \"Why are there two of the almost identical functions here\" but someone unfamiliar with C++\\Cx at all may be internally asking very different questions about what is going on here.\n. Sounds pretty good except the mocks can be used in unit tests too.... \n\nIn reply to: 68810797 \n. Great place for a comment explaining this. As you get more familiar with developing for large projects, I think your priorities should be: 1. Correctness, 2. Maintainability, 3. Speed / Optimizations/ Cuteness / etc ... A lot of the comments on this review fall into 2. In any large project, especially an open source one, you never know who will pick up this code and we want to be as friendly as possible to developers unfamiliar with the code base. This means following coding conventions to have uniform and readable code, including lots of comments, using descriptive variable names etc.\n\nIn reply to: 68809747 \n. Would be worth double checking that createWith creates an autoreleased object and that we don't need to use StrongId or similar here.\n. Please no tabs.\n. just include the proper projections header instead>\n. What is Accel. ?\n. This is a reason that we shouldn't be using static flags for test markers. Every test should be independent and static test flags like this make that easier to mess up than some scoped variables. As you can see from the MOCK_METHOD implementations, there are mechanism to dynamically control what something does at runtime. I would prefer if the CortanaProtocolForegroundTestDelegate class had similar functionality. #Resolved\n. This is not actually a performance optimization (although it may be useful in that sense too). This is because these three classes in particular are used at static init time and these checks may happen before they are registered as bridge classes due to the non determinism in static init.\n\nIn reply to: 69767697 \n. Remember that we are manually looking into the object's isa field here. Nil is comparison made on the pointer itself. A 0 isa means its a cf object that has not been bridged yet. \n\nIn reply to: 69772935 \n. http://web.stanford.edu/class/cs140/cgi-bin/lecture.php?topic=locks may be useful reading. A while on a condition variable is a pretty typical pattern to wait until the desired condition is met. Remember that it will broadcast on any set (not just a set to false from true).\n\nIn reply to: 69805759 \n. Hooray saying the same things at roughly the same time.\n\nIn reply to: 69806160 \n. perhaps remove time specific wording since this could change and the doc will be there for \"all time\" #Resolved\n. This makes me very sad to look at. more explicit parens would be great. #Pending\n. Feels like we need a comment to explain the differences when we have them (especially when whole tests / files are commented out). I'm a little wary of how many of these we are sprinkling around. #Resolved\n. > _WIN32 \nThis seems like a weird choice for a def to key off of. I believe WIN32 is also defined and is a little less private / compiler dependent. Additionally, CF already uses TARGET_OS_XXX for platform differences. Have you considered using that instead? #Resolved\n. 1. this feels like it should be factored out.\n2. This sort of change brings to light a problem in this approach. Namely we can't test any implementation specific details. This includes privately exported functions but also anything in the libs. UTs are currently linking with the libs to allow access to internal / private state modification (although I think security is one of the only tests to use it). What is the plan going forward to address this? #Resolved\n. I don't think you need this if its using sdk-build.props. #Pending\n. I thought the hotness was to put this in the implementation? Also curious that _ things are publicly exposed. #ByDesign\n. would %hs be more efficient here?\n. two comment lines here appear disconnected / lack context to make sense of them. Please add to these / move them to be connected to the code block in question. Perhaps a header comment on the init function if you are saying these aren't getting set got some reason?\n. This makes me so sad. I suppose this is due to synthesized properties but :-( ... RAII would be much nicer. #ByDesign\n. Why a void* return? #ByDesign\n. seems overkill here. Can you just push and call return? Whats the savings? #WontFix\n. > _LazyUIColor \n:-( The inverteed dependency here still makes me so sad. #Pending\n. perhaps this my lack of knowledge about Core Graphics in general but it seems like this is using a weird coordinate system for delta x to be -sin  and delta y to be cos. If you are doing something \"tricky\" here like automatically adjusting for the normal of the input angle (+ PI/2) , then it deserves comments.\n. seems a little arbitrary? How was this constant and optimization decided on?\n. should we file a github issue for this todo and add the number here?\n. > 2 \nin terms of unit tests 2 seconds is still a long time. Perhaps consider something in the ms range.\n. > CFBase.h \nShould things in CFBase instead be moved here? Take a look at the comment:\n// WINOBJC: Start. Include old WinObjC additions to CFBase.h. Some might not really belong here but are still needed by other dependencies. \nEssientially everything there appears to be CG related ... \n. > _components.r = _components.g = _components.b = [coder decodeFloatForKey:@\"UIWhite\"]; \nI'm not a big fan of multi = lines. #Pending\n. > icudata.lib \nhooray!! Any numbers on the reduced dll size? #Resolved\n. > UDisplayContext \nstatic cast? // WINOBJC comment? #Pending\n. This is so cool!!!!! #Closed\n. > _CFStringCreateWithFormatAndArgumentsAux \ndo we need this in a .def? #Closed\n. > system intrinsics \nI'm not seeing the system intrinsics here. what are we missing to allow this? Who are the callers of this? do we need to adjust a .def? #Resolved\n. > StarboardLinkWholeArchive \nIs this something we would expect our 3rd party consumers to want by default? I imagine any of them that want categories will be sad if this is off (and they make a lib + dll I guess).... just wondering if we want this to be opt out instead of in. #ByDesign\n. Clang format I assume? I actually think its more readable the other way but no big deal. #WontFix\n. Shouldn't be necessary to specify the compileAs for all ClangCompile right? That seems overkill and possibly hiding other bugs. #ByDesign\n. might be worth adding a comment line here indicating what this set of tests is just to help make it extra double super clear to other devs that these tests are the subset that only will work on windows for some reason. #Resolved\n. What was the final decision on this? Can we use TARGET_OS_* instead?  #ByDesign\n. Can you explain more what this means? I'm sure I understand how this is \"on by default\" and how we don't at least need to be extern \"C\" ing things  #Resolved\n. Should be pretty easy to make the change and then only scope guard is if def'ed. The idea is to use an RAII type to contol the CoInit / uninit calls so that if an exception occurs, we still uninit properly. http://stackoverflow.com/questions/31365013/what-is-scopeguard-in-c for the general concept in question. We can talk in person about if we already have one implemented somewhere.\nAt the very least please file an issue and add the number here. #Resolved\n. I concur. With both of those; although DISABLED_TEST is easy enough but to be uniform it could be nice. Can you at least open an issue and put the number here? #Resolved\n. other tests you disabled here you commented. Can we be consistent? #Resolved\n. is there a non private way we can rewrite the test? like an isLocked or something? #Resolved\n. This seems wrong. Why don't you need to do an if def for slashes here? #WontFix\n. For all windows only tests it would be nice to have a comment block explaining why they are windows only. #Resolved\n. not a fan of the new formatting and did not expect you to be touching files outside of foundation tests given the status in your .md #Pending\n. >   _dependenciesLock.lock() \ncan we be consistent with the style of locking? I prefer lock_guard as its RAII so there is less chance of accidentally leaving things locked. #Resolved\n. > _outstandingDependenciesCount++; // will be decremented if necessary in observeValueForKey, due to NSKeyValueObservingOptionInitial \nseems wrong. What if dependency is already finished? Shouldn't you only increment for unfinished ones? Does KVO send an immediate observation for the current state or only when it changes? Additionally this logic seems wrong if you add the same dependency twice. You will send a change notification for _dependencies when no change occured and you'll be double counting the same object which is unclear how the _outstandingDepCount will work out.... #ByDesign\n. this is a terrifying number of locks for a single object. Can you add a comment here explaining what order locks need to be taken in? #Closed\n. and also what data each is protecting as it looks like _finishLock protects some non obvious members like _cancel \n\nIn reply to: 72513398 \n. might want to make these more full english sentences. I thought it was commented out code at first. #Resolved\n. I think we should have a single one at the top that explains the scope of the changes made. just something so that if/when we merge, people understand that basically this is a new file....\n\nIn reply to: 72719052 \n. > assertCFTimeZoneProperties \nfeels like a good candidate to use parameterized tests.  #Resolved\n. Do we need to follow up with Shawn about this? #Resolved\n. > Temporarily \nbug number? #Resolved\n. Do you need to copy/retain these since you are using ivar syntax for the properties? #Closed\n. looks like you have ARC on in the lib .vcxproj that I missed.\n\nIn reply to: 72732695 \n. can we instead change the macro definitions to use the namespace? this change adds a global operator overload in a .h which includers may not want ...  #WontFix\n. also I'm pretty confused why this didn't work ...\n\nIn reply to: 72853566 \n. > ABAddressBookRequestAccessWithCompletion \nIs there any way to deep link to the privacy page in settings for this?\n. To tack on to what Ben said, busy loops are also not my favorite mechanism for waiting. pumping the run loop here is also questionable as you don't know what thread you are being called from. What if you are on a background thread already (that doesn't have a run loop) what does it mean to be pumping the current run loop in that case?\n\nIn reply to: 73199542 \n. Ignoring the failure here seems questionable. I would think if we failed this that we should return a nil object and release self? #Pending\n. >    \nno tabs! please make sure you are clang formatting all code before sending a pr.  #Pending\n. This seems pretty hacky. What happens if this is included before the test framework headers? Is there anything better we can do here?\n. > statusToMock \nshould probably initialize this guy to something. #Pending\n. seems like a good candidate for paramterized tests #Pending\n. > [__ABAddressBook_Swizzle tearDownMock:originalImplementation]; \nsetup and teardown methods are hard to get correct. For example what happens if your test encounters an exception? what about if it AVs (seg faults)? What state are we corrupting and how it will impact future tests? In general we want to isolate the test code itself from any setup / cleanup that needs to occur. In other test frameworks like TAEF, there is a facility known as test fixtures (for example TEST_CLASS_SETUP) that handle this nicely. You should investigate if something similar exists in gtest that you can use for this purpose. #Pending\n. ditto on this this test for all comments on the other. #Pending\n. formatting? seems like it should be on separate lines?\n. > nonatomic \ninteresting choice to use nonatomic. Why? #Pending\n. > __bridge_retained \nwhy do you need a __bridge_retained here? This is not a bridged class in the traditional sense of the term.  #ByDesign\n. > CFErrorRef \nconsider using woc::unique_cf for error here. if the code in completion throws an exception (and you don't own that code) you will leak error. If you make completion async you have other interesting memory management problems. In objective C, especially with ARC disabled, we need to think very hard about memory management and the ownership of objects.  #Pending\n. switch instead? #Pending\n. link doesn't seem to talk about __bridge_retained at all ... __bridge_retained only matters when ARC is turned on (which I don't think it is here) and will add a retain call that you don't need here. [[Waffle alloc] init] returns an object with a +1 ref count. This means you either need to (auto)release it or transfer ownership. Here you are transferring ownership to the caller by nature of returning it at a +1. This means it becomes the caller's responsibility to (auto)release it when they are done with it and the Create rule is satisfied. \n\nIn reply to: 73218322 \n. Probably should remove these.\n. This is interesting. Can the system both increase and decrease the priority? I'm wondering if there are stronger statements we can make or if this is it. Also  how exactly did you arrive at .07? given that this needs to run on OSX and Windows we want the max of the two's range of movement right?\n. >  \nremove? Not sure on merge timing here...  #Resolved\n. These don't run on OSX do they?\n. Agreed. We shouldn't do things like this. any custom unique ptr should take the resource directly and do the correct close / delete on scope exit. This is leaking the NSString (unless arc is on?)in an attempt to pigeonhole what you want to do. Instead lets use a different scope_guard to make sure it gets deleted... \n\nIn reply to: 73436585 \n. > initWithBase64EncodedString \nBut the init method with options DOES return nil on the reference platform?! Insanity. #Closed\n. IIRC this was needed / confirmed to be used. Why did you remove it?\n\nIn reply to: 73397672 \n. what is the ownership of contact here? \n. can this be removed? #Resolved\n. remove this? #Resolved\n. yes. Its a good habit.  Also [Waffle new] is not autoreleased.\n\nIn reply to: 73973293 \n. No it shouldn't. Please see the implementation of StrongId. essentially all smart ptr types remove the * for convenience. \n\nIn reply to: 73973051 \n. true that would be autoreleased but you are adding complication to the object lifetime by doing an autorelease on copy rule object. There is no need to autorelease and its not necessarily clear from the callee perspective when an autorelease will actually take place which makes the object lifetime longer than needed and may in fact cause some issues with resource de-init (see Java's or other garabage collected language's issues around closing files deterministically etc.)\n\nIn reply to: 73973850 \n. apologies. I mis-remembered what the copy attribute is signifying. Its copy-on-set not copy-on-get. I detest languages that use conventions as the primary mechanism to describe ownership.\n\nIn reply to: 73974316 \n. yep.\n\nIn reply to: 74168773 \n. maybe? I don't really care one way or another but I don't think many other devs are going to stumble on WCHAR_ENCODING. I also don't think there are big endian OSX environments? We can chat in person about what we want.\n\nIn reply to: 74168895 \n. not fixing. \n\nIn reply to: 74169017 \n. no. the comment is the old code that was commented out. \n\nIn reply to: 74169117 \n. probably not. Someone may still have that laying around.\n\nIn reply to: 74169170 \n. lol\n\nIn reply to: 74169190 \n. This is a file that will get compiled into all cross plat test binaries if I understand the build you set up ... some of those may have ARC on. This suggests we should use a mechanism that easily handles arc vs not which strong id does. Additionally it will be the same length as the alternative requires release statements in place of the attaches. The static cast is meh to me. I wouldn't mind a .get() method on a strong id so its more concise. \n\nIn reply to: 74295731 \n. the \"new hotness\" for this is to use a pragma push which will push the old def onto to macro stack. You can then undef / redef things to your heart's content and pop at the end. This a convenient way to make sure the window's header gets what it wants but doesn't corrupt state down the line without the big hammer of killing anyone else's DELETE macro ... \n\nIn reply to: 74333570 \n. > RETURN_IF_FAILED \nmove this up to ForEach line. no need for hr local. #Resolved\n. > collection \nautorelease? #Resolved\n. put declarations as close as possible to their use. This isn't straight C where you need to put stack variables first or something weird. \nBy placing the decl near its use, you are minimizing that amount of mental jumping a reader needs to do to remember what a variable's type is etc. \nTypically I also like to separate decl+use blocks by a newline to add to readability so it ends up as:\nWRL::Foo foo;\nRETURN_IF_FAILED(bacon->get_foo(&foo));\nWRL::Wafffle waffle;\nRETURN_IF_FAILED(foo->get_waffle(&waffle));\n #Resolved\n. > userInput \nbased on what I read in the other one, this was callee allocated (hence being an outparam)? #Resolved\n. > userInput \nditto on allocation weirdness #Resolved\n. It'll work. Promise.\n\nIn reply to: 74481946 \n. seeing as a property value is just a dumb container anyway, I don't see the value in mocking it ...  #Resolved\n. Same. The real version is likely sufficient. #Resolved\n. > MockIterator \nsame. #Resolved\n. > MockValueSet \nsame. #Resolved\n. > MockToastNotificationActivatedEventArgs \nthis is the only mock I'm expecting to see ...  #Closed\n. Also a good candidate for parameterized tests.\n\nIn reply to: 74358052 \n. > is, if \npunctuation of this sentence is incorrect. #Resolved\n. > if ([self length] == 1) { \nmay be useful to comment what this case if for. \"/\" right? #Resolved\n. > tokens[0] \nblind index here seems risky? Any concerns for that / comments we need to reassure the reader that this is ok?\n. > // {storeid.itemtype.id} \nas discussed offline this may not be sufficient. #Resolved\n. no other build variables that already this stuff? #ByDesign\n. weird formatting. Double check that you don't have anything else weird preventing this from being correct. (clang-format uses a syntax tree form to evaluate how format which means weird formatting can sometimes be indicative of other errors).\n. > // FT does not seem to be able to print tabs, so we have to replace it with a space for now \ndo we need to add a TODO with an issue number to track this work? #Resolved\n. > 10 || curChar == 13 \nmagic numbers are no fun. consider using a static const variable at the top with a comment on the value meaning. #Resolved\n. again with magic numbers. \n\nIn reply to: 74656857 \n. I agree with Pradip here. THis is a bit scary. We might want to talk to VS folks to see what else we could do?\n\nIn reply to: 74666494 \n. > [2] \nDo we need to make sure that the parse has this many components first? #Closed\n. > notes \nis this an array when you should be getting something different?\n. not the most super useful of comments. Please add details on the why of the code rather than just the what, especially for the ones that have significant business logic in the transformation. #Resolved\n. add todo if this is a later task. #Resolved\n. grammar? Contacts don't? or The Windows Contacts Framework doesn't? #Resolved\n. > make \nARC doesn't appear to be on for the test files. I think you are probably leaking these things? #Resolved\n. > (__bridge_transfer NSString*)ABRecordCopyValue \nnone of the properties are non string ones?\n. Can we change these ivars to use StrongId? That seems like it would be more concise and avoid other issues like this in the future.\n. Yeah I suppose its helpful if I actually read your change description :-p ... I need to check the .h but if we specify getters and setters in the property decl it should turn off synthesis barring compiler bugs right?\n\nIn reply to: 74983076 \n. Actually I think if we just define our own getter, the compiler will turn off synthesis. That is the problem. The getter isn't defined so the compiler has to synthesize one with an ivar (one underscore and raw*). If we instead define it ourselves and return the strong id, no extra ivar will be produced, but we will have to change internal uses of self->_min/maxdate as those won't exist now. Basically we either need to go full custom with StrongId or full synthesized and I'm arguing for Strong id since it cleans up the memory management and we don't get the atomicity benefits of synthesized since they are declared as nonatomic anyway. How does that sound?\n\nIn reply to: 74986350 \n. @DHowett-MSFT May have other comments on the general convention we want here?\n\nIn reply to: 74988055 \n. >  // phonetic middle name, instant message/social profile). \nthis comment should probably be expanded with a TODO to fill these in or an explanation stating they never will (if they never will we could also remove the cases).  #Resolved\n. agreed default is good.\n\nIn reply to: 75176024 \n. since this is logically a one way valve, why not just make it part of the init call? init could take an array/dictionary of pairs and then it would never need to deal with mutability.\n. > ABMultiValueIdentifier \ndoes this need to be unique across multivalues?\n. would be interesting to know what is supposed to happen if this isn't a valid phone number (wrong number of digits etc). Does the reference platform truncate or fail or pad or anything special we may need to handle?\n. this removal is beautiful. #ByDesign\n. > CFRange \nCFMakeRange? #ByDesign\n. > CFStringRef \nstatic cast\n. > *pRemainder \nincredi-nit: I prefer for \"multiple\" return functions like this (using out ptr and a return val) to not use early return as it makes setting the out param harder to keep track of. A centralized place to set it and return may be nicer? I'm totally ok with you ignoring this though and making me suck it up. #WontFix\n. > length > 0 \ncurious if this is actually needed or if CFStringFindCharacterFromSet will do the right thing. Either way is fine though. #ByDesign\n. well this is mildly terrifying. I'm pretty positive we shouldn't be knowingly including a .h smack dab in the middle of a function. That is asking for trouble and abusing the preprocessor in a way I'm not ok with. Having that header define macros etc to make this easier would be acceptable but not this.  #Resolved\n. ditto. #Resolved\n. > separated \nmight mention the original location here. #Resolved\n. > _OBJC_CLASS__NSCFString \nDidn't we also need to do this with Number or did that get removed with a different change? #ByDesign\n. To help readability here we might add a comment after each case explaining (I should have done this initially):\n1. // Treat nil as ObjC\n2. // Any isa means ObjC but make sure it isn't a bridge\n3. // Special handling for String due to static ordering and registration (see above)\n4. // Make sure its not the concrete impl that is bridged\n5. // Make sure its not a subclass (should only be KVO) of the concrete bridged impl\n#Resolved\n. > __CFGenericValidateType \nis this actually necessary for CT / CG? #Resolved\n. I'm not sure how I feel about that. Seems like we shouldn't be exporting that guy if possible?\n\nIn reply to: 79025442 \n. Maybe would be a little nicer if we used CFSTR instead? Our NSConstantString impl isn't the nicest #Resolved\n. > context \nwould prefer it if we didn't smuggle things into context if possible I think? we can pass newAttributes as a lambda capture to get more correct typing instead of falling down to void* #ByDesign\n. its probably ok as is since it no-ops in release\n\nIn reply to: 79030373 \n. yeah you'd need to do both a static number and a static init time call to CF_IS_OBJC (preferably in the same file and higher than the definition of the number so that the IS_OBJC is executed first) and see what it says. true would be wrong, false would be correct but I'm guessing it will be wrong as currently written we just don't have a call pattern in the real world to hit it?\n\nIn reply to: 79029831 \n. > CFCopy \nnot sure if thats true. I seem to remember a copy being there but in a confusing way / name. But if this matches the ref plat. #yolo? #ByDesign\n. add a comment on these magic numbers about where these came from / how you determined? #Resolved\n. oh didn't know the impl was a func pointer that makes sense.\n\nIn reply to: 79035467 \n. commented out \"code\" is generally not my favorite. I understand this is \"showing your work\" but it may benefit from a line describing that instead of what just looks like commented out arithmetic. #Resolved\n. Yeah anytime we are hardcoding a file extension, I'm a little dubious if that is the correct approach.\n\nIn reply to: 78836323 \n. sounds like things we should have tests for. What do we need to be able to do this? Can we avoid fullblown UI automation via mocking?\n\nIn reply to: 78622666 \n. also lets not make these members public unless we really need to and make sure we have accessors so we can lock  appropriately / otherwise reason about access patterns.\n\nIn reply to: 80756934 \n. RuntimeClassInitialize is only needed versus a normal ctor if you can fail (HRESULT return). I'm pretty sure that the Make call in WRL is templated to pass on args. #Resolved\n. This file should be rewritten as paramterized tests. Too many of these tests hide the validation behind a helper function which doesn't help to pinpoint errors. The test file will be shorter and debugging will be easier using TEST_P #ByDesign\n. why did you choose dispatch_once as opposed to c++ function local statics? Seems easier (and more efficient) to do the latter to me ...  #Resolved\n. > 0  \n? IN general prefer the use of empty {} initializers as {0} will only 0 init the first field in a struct I think. #Resolved\n. no commented out code. #Closed\n. ``` c++\ninclude \"stdafx.h\"\ninclude \"stdio.h\"\ninclude \nclass Bar\n{\n    int baz;\n};\nstruct Foo\n{\n    int a;\n    //float a2;\n    union B {\n        float c;\n        long long d[4];\n    } b;\n    int e;\n    Bar bar;\n};\nvoid _printFoo(const Foo& f) \n{\n    std::cout << \"==================\\n\";\n    std::cout << f.a << \"\\n\";\n    std::cout << f.b.c << \"\\n\";\n    std::cout << f.b.d[0] << \"\\n\";\n    std::cout << f.b.d[1] << \"\\n\";\n    std::cout << f.b.d[2] << \"\\n\";\n    std::cout << f.b.d[3] << \"\\n\";\n    std::cout << \"==================\\n\";\n}\nint main()\n{\n    Foo f{};\n    Foo f2{ 0 };\n_printFoo(f);\n_printFoo(f2);\n\nreturn 0;\n\n}\n```\n\nIn reply to: 80795216  #Resolved\n. -  f {a=0 b={c=0.000000000 d=0x00dbfb20 {0, 0, 0, 0} } e=0 ...} Foo\n  a 0 int\n-  b {c=0.000000000 d=0x00dbfb20 {0, 0, 0, 0} } Foo::B\n  c 0.000000000 float\n-  d 0x00dbfb20 {0, 0, 0, 0} __int64[4]\n  [0] 0 __int64\n  [1] 0 __int64\n  [2] 0 __int64\n  [3] 0 __int64\n  e 0 int\n-  bar {baz=0 } Bar\n-  f2 {a=0 b={c=0.000000000 d=0x00dbfaf0 {61919066037682176, 11289035728869430, 8392977107035880220, 87311050130587648} } ...} Foo\n  a 0 int\n-  b {c=0.000000000 d=0x00dbfaf0 {61919066037682176, 11289035728869430, 8392977107035880220, 87311050130587648} } Foo::B\n  c 0.000000000 float\n-  d 0x00dbfaf0 {61919066037682176, 11289035728869430, 8392977107035880220, 87311050130587648} __int64[4]\n  [0] 61919066037682176 __int64\n  [1] 11289035728869430 __int64\n  [2] 8392977107035880220 __int64\n  [3] 87311050130587648 __int64\n  e 0 int\n-  bar {baz=0 } Bar\non x86 Release\n\nIn reply to: 81210095 \n. not buying it. macros make finding the source of an issue harder not easier\nas the source/failure line doesn't line up 1:1 \n\nIn reply to: 80795434 \n. no thank you\n\nIn reply to: 80536669 \n. > _DOUBLE_LIMIT \nSHOUTY_NAMES are only allowed (and required) for preprocessor macros\nhttps://github.com/Microsoft/WinObjC/wiki/Coding-Standards #Resolved\n. glorious #Closed\n. Lets not use this pattern. Including a return statement in a macro is a dangerous game as it may not be clear to a casual reader what the full implications are and control path assumptions may prove to be invalid. \nIn general I am not a fan of how many macros you are using here. From CC:\n2.2.15 Use macros with discretion\nUse macros only when they are absolutely necessary. Most functionality that is typically achieved through macros can be implemented through other C++ constructs (using constants, enums, inline functions, or templates) which will yield clearer, more resilient, more debuggable code.\nhttps://github.com/Microsoft/WinObjC/wiki/Coding-Standards\nMuch of the MACRO use here simply obfuscates the true intent and doesn't save all that much code. #WontFix\n. why won't fix? This is against CC and is all new code. Lets make the effort to be compliant.\n\nIn reply to: 81209420 \n. > TODO \ngithub issue # tracking this work? #ByDesign\n. > memcpy(destination->_mantissa, source->_mantissa, NSDecimalMaxSize * sizeof(unsigned short)); \n? isn't this already done? #ByDesign\n. nit: new line after closing } #Resolved\n. > overflow += USHRT_MAX + ((left->_mantissa)[index] - (right->_mantissa)[index]); \nuse of () would make order of ops here clearer #WontFix\n. no\n\nIn reply to: 82293757 \n. this is the easiest way to prefer gtest if present but not break back compat\n\nIn reply to: 82296551 \n. well you use WMSSpeechRecognitionResult so you were getting lucky with the include ordering before .... \n\nIn reply to: 82294162 \n. I assume I should update your tests too then?\n\nIn reply to: 82295347 \n. sweet emoji. What part seems non ideal? Having a strongID prop seems fine to me. I don't particularly like the methodsCalled doodad but it works and follows AJs pattern\n\nIn reply to: 82296469 \n. I'll update yours too I guess\n\nIn reply to: 82295491 \n. Memory leaks from _methodsCalled = [NSMutableDictionary new]; in the old implementation. There was no corresponding release in the dtor. The options were 1. add a dtor 2. use strong id 3. turn on arc. I chose 2 but @DHowett-MSFT  seems less enthused with that choice.\n\nIn reply to: 82302619 \n. I prefer doing the right thing and fixing issues preventing us from doing the right thing rather than leaving scary things hidden for someone else to deal with. If there was \"something funky\" lets address that rather than running from it. Additionally this is an Internal header and thus shouldn't be subjected to modules. \n\nIn reply to: 82297724 \n. this is probably what you were thinking of @aballway and this has an todo so we are at least tracking the work here. It likely is due to circular deps between Projections and Foundation/Other frameworks creating the issue which I'd love us to solve at some point.\n. > and not all classes support alloc-init anyway \nall nsobject deriving ones should?\n. > // TODO: #1105 \n@davelamb  should probably take a look here ... \n. it seems they are different patterns with the ability for multiple files and Verbs (open vs post vs edit, etc) and the ability to be called while active as Nithish points out. In light of that, I think the pattern here should be used rather than reducing fidelity / trying to cram extra parameters into an options dictionary that probably wouldn't be checked and be incongruous with the other delegate call.\n\nIn reply to: 82463028 \n. oops. I fixed it with the .cpp but not .h\n\nIn reply to: 82850185 \n. I have no clue. This was a mostly copied version to support 64i32 versions of things. but sure I'll remove commented out line in both.\n\nIn reply to: 83125777 \n. I agree but I thought putting these in a commonly included header would be a bit much as I don't really want to #def something like open unless I'm pretty sure its only used in a file sense. some other terms there are pretty common words so I felt a little better about it and it is obviously the system CF is already expecting so yes. Worrisome but the best of a bad situation?\n\nIn reply to: 83126012 \n. it could but its not a change needed specifically for us as the normal impl of _NS_open calls _wopen. It was just to have better code reuse but will comment anyway.\n\nIn reply to: 83126093 \n. no. Every other file had it as _stat64i32 so that is almost assuredly the right thing.\n\nIn reply to: 83308434 \n. RETURN_IF_FAILED? #Resolved\n. > = std::vector(count) \nwhy assignment? #Resolved\n. > ComPtr fontFace \n:-( This is a bad pattern to use. In C++ everything is pass by value by default. This means that you are passing a ComPtr<> by value which means that you making a copy of a ComPtr object and unnecessarily doing an extra AddRef Release on it. \nPlease use const ComPtr<>& as I hoped you had gotten used to in previous projects with shared_ptr ...  #Resolved\n. > CFDataRef ret \n\nCFDataRef ret \n\nconsider using a RAII friendly construct to avoid leaking this guy if an exception happens before its handed off. unique_cf is probably what you are looking for ...  #Resolved\n. > fontFace.As(&dwriteFontFace3); \nThrow if failed needed here too. Any QueryInterface call (.As in WRL) can fail as you are runtime interrogating a class to see if it has other functionality (and it may not!) #Resolved\n. move closer to use #Resolved\n. RETURN_NULL_IF #Resolved\n. RETURN macro here?\nin general you want to avoid blindly originating a new HR as that loses context when looking at logs. all of the RETURN_* macros trace and the bottom most one should be using some logging to originate the error. blind conversions etc make it confusing when looking at it later. #Resolved\n. RETURN_IF_.... #Resolved\n. > [static_cast(name) UTF8String] \nplease don't use UTF8String if possible. It is not a nice method as it makes a copy and has to loft that copy to the autorelease pool due to a poor api signature.  #Resolved\n. helper macros #Resolved\n. mixing throw and return semantics is not a nice game to play. It makes the callers take on extra responsibility and code paths for your failure cases. Use one or the other. Since you return HRESULT the choice should be RETURN_* #Resolved\n. There are faster mechanisms here with the GetCharactersPtr functions. Please take a look at those. #WontFix\n. awkward indents. clang format? #Resolved\n. these don't appear to be valuable? #Resolved\n. > pPropertyContext \nI think we don't use hungarian notation like this. #ByDesign\n. werid to have a struct definition in a function? #Resolved\n. > *pPropertyContext->weight \nconfusing syntax due to the * and -> . Please use () to clearly indicate what is being derefed via * and what is from -> #Resolved\n. > propertyContext \n\npropertyContext \n\nI dont get what you are doing with this guy. Looks the CFApplyFunction is setting some members here but I don't see it being used after? Also seems like a weird set of values to init with. Why not use the values directly. Finally, why are these are pointers? Is it an attempt to make setting in/out or out params easy? \nAs a general rule you should avoid this sort of thing as it makes getting into \"halfway\" states easy and obfuscates where the return happens. Try to operate only on local state and then set your out params when the full set of returns is known and no errors are present. #Resolved\n. > fontNameTokens \n\nfontNameTokens \n\nconsider using unique_cf instead of autoreleasing in CF land as CFAutorelease doesn't actually work on any non bridged class / before Foundation is loaded.  #Resolved\n. This pattern is rarely needed with C++11 unless you need to control on which thread the one time init happens. I would prefer not taking this dep if you can re-write to just use c++ function local static init. #Resolved\n. macro #WontFix\n. return / throw if failed. #Resolved\n. > ret \nuse a RAII construct to avoid ugly release logic that is easy to miss when adding code later. #Resolved\n. wut. #ByDesign\n. wut. #ByDesign\n. is a ComPtr comparison really what you want? This is probably a pointer comparison which makes some assumptions on how COM will return pointers to you for the proxy objects. Not super sure that is always what you want ... \n\nIn reply to: 83339592 \n. static init is probably enough ...  #WontFix\n. macro use in this function #Closed\n. increaseLength isn't really desirable here. Ideally I'd be able to read the chunks directly in and return the same data. If the length is wrong I can't return that data and need to manually reconstruct it with the right length that I keep track of. appendBytes is morally equivalent of what you are suggesting but it adjusts the capacity instead of length at the expense of the temp buffer (which is only allocated once and is stack space so its \"cheap\" in the grand scheme of things). Basically this is letting the NSData append impl be smart about growth etc which seems better than me trying to be smart (since I'm not very). I'll look for other ways to avoid extra copies though.\n\nIn reply to: 83929862 \n. see my other response to JJ. Its not quite as bad as you make it out to be and any other solution is potientially more error prone. I will keep looking at other solutions though.\n\nIn reply to: 83926449 \n. hilariously no because of the use of strncmp\n\nIn reply to: 83959944 \n. a cast is needed somewhere so I put it here.\n\nIn reply to: 83964371 \n. Whoever is looking at 116 2can make those determinations.\n\nIn reply to: 83928251 \n. copied from the file one now that file forwards to URL. Not the purpose of this pr to validate our error codes.\n\nIn reply to: 83927171 \n. will update the comment but its still caveat.\n\nIn reply to: 83927091 \n. Please leave comments on the other PR. This was simply to kick off a build. Ignore the mess for now.\nIn response to the comment though I should add a comment in code. This copy is to allow proper bridging. The NSCF variant overrides this and does not copy but to reduce down to primitive methods, one copy is made. Seemed like a fair trade to me \n. validated. \n\nIn reply to: 83975337 \n. there is no functional change. \n\nIn reply to: 83974374 \n. not sure how I feel about these being #defs ... that seems pretty restrictive when we want to include this information in a non C-ish environment (like say in a .nuspec)\n. > / Do not move this block, it has to come first for some reason \ncan you figure out the reason? #Closed\n. I believe this was in reference to the helper functions that don't seem to help much. A number seem to only save like 1 line.\n\nIn reply to: 84399836 \n. manually calling dtors seems very shady.\n\nIn reply to: 84415796 \n. manually calling placement new for construction seems very shady\n\nIn reply to: 84415801 \n. use locals? bridge to something more convenient if you want? Do a normal for loop? I don't see the excuse to have poor code here... \n\nIn reply to: 84414262 \n. I kind of don't care what you want. They are different semantics and the difference is important. \n\nIn reply to: 84348109 \n. sure seems like a ref counting wrapper like unique_cf would make this super easy so you can't forget / screw it up in the future ... and wouldn't require bizarre comments explaining the ref counting ... \n\nIn reply to: 84410817 \n. why not magic static? #Resolved\n. context was lost I think but just more correct use of RETURN_* macros to correctly propagate and log errors I think\n\nIn reply to: 84415484 \n. usually points to a \"curious\" design decision in the first place. In this case you have a void return function with three out parameters and then a bunch of weird glue code to make that work. How about defining the struct outside the function and using it as a return type? Then you don't need to worry about the modification contracts with the caller's data.\n\nIn reply to: 84400714 \n. yeah I don't think it was this function I meant to comment on. Most of my comments seem to be misplaced / recalled / otherwise not as I intended.... \n\nIn reply to: 84556614 \n. in general it looks like you cleaned up a lot so probably ok\n\nIn reply to: 84557133 \n. While true, the \"correct\" fix here would be to return a +1 item with a different name because CFStyle things should not obey the same idea of +0 items. Those don't really exist in CF land. Unowned returns exist but that semantic is different that what is going on here. CFAutorelease really shouldn't be used if possible. since these are private functions I'd prefer a unique_cf return to correctly describe the transfer of ownership to the caller which is the pattern that is actually be attempted here with CFAutorelease being used to make the return work with a raw * which is just a silly Objective-C ism due to the bolt on nature of extra meaning to a * without an ability to in language convey that. Relying on naming conventions to express memory management is an error prone system that I'd like to not rely on ... \n\nIn reply to: 84563998 \n. > &locale \nSeems weird to have a local variable be passed by ref to a one time init static lambda. My expectation would be that the locale would be static too if some static state needed it otherwise it would potentially get out of sync?  #Resolved\n. ret {.._NORMAL, ..._NORMAL, ..._NORMAL} #Resolved\n. return macro? #Resolved\n. return macro? #Resolved\n. DO we need a todo with  tracking issue for something or should we just delete the commented out code? \nCommented out code pollutes code bases as future maintainers rarely have full context (even with comments like this) to understand how commented out code may / may not fit in with potentially vastly diverged compiling code. Rarely does the commented code add value as git history and other tools can show what used to be present and any \"future work\" should be tracked with issues so that it will definitely be addressed in a follow up review. #Resolved\n. whats the idea here? SBResourceCopy is typically used to indicate what needs to be in the final SDK package which is different than what tests typically require. #Resolved\n. can we not do this? If we need to enhance the macros, how about we do it some place that benefits everyone? #Resolved\n. > colorSpaceAllocated = true \nthese sorts of things make me very sad. Manually keeping track of if you need to release things is extremely error prone when maintaining code in the future. It becomes super easy for someone else to come along later and add a path that forgets to set this etc. \nAdditionally, setting out parameters should be done in an \"all or none\" fashion in general. As it is, you may have failure conditions where you are assuming the caller is accepting responsiblity for this colorSpace object but if there is an error that contract is a lot less clear. The general pattern we should follow is to build up variables as local state in RAII friendly constructs (unique_cf and friends) and then release / detach those resources out to callers only at the end when we know everything worked out. This makes maintenance easier as there is a single spot where all out parameters are transferred and ownership inside the function is clearly communicated at all times by nature of the types holding the objects (you really have to try to mess it up). #Resolved\n. .Attach with .Detach is generally wrong. ComPtr Attach and Detach should only be used when going to and from a raw /* which should usually be happening only at ABI boundaries / to interop with other APIs that expect void* or other bad patterns that we can't change. \nWithout reading more here it seems ImageSource() is return value (r val) to which the assignment would be lost in the next line as no one is holding on to it. It would be \"clever\" of you to be returning a ComPtr& from ImageSource() as a mechanism around this but that breaks encapsulation as bad a public member, introduces code like this that appears incorrect at first glance, and is arguable just as much or more typing than a traditional setter. In general try to ask yourself if being \"clever\" is really necessary whenever you feel like you need to be. #Resolved\n. > push_back \nemplace_back with an std::move is the preferred mechanism to not invoke more copies than necessary on the input objects. Not sure what a CGImageDestructionListener is yet to know how expensive a copy is but would like us to follow an emplace_back pattern where transfer of ownership is possible. #WontFix\n. Reading more it looks like you are actually just stomping the function argument here to use it as a local variable that may or may not be passed in. In general this is another bad pattern as it makes future code maintainers potentially unsure of the preconditions and the validity of arguments at all points throughout the function. I'd prefer us to write clean and clear code and let the compiler do its magic to save a local if that is what you are concerned about. \nTo do this sort of thing in an RAII friendly pattern, you would use some construct that does a +1 on assignment (similar to say shared_ptr instead of unique_ptr in the unique_cf example) and then assign from the argument or .attach if you create locally. That way the RAII object is always at the correct refcount and the release happens at the end without harm.\n\nIn reply to: 84754523 \n. Please don't use CFAutorelease if possible. The fact that you are using it here suggests that the dataProvider object maybe should be a member of CGImage instead of created everytime? This could also be a more efficient solution as a new pixel buffer wouldn't need to be allocated everytime. I'm not sure if / how the image can change but maybe consider creating on the first call and assigning a member variable that you return otherwise? #ByDesign\n. return macro(s)? #WontFix\n. > CreateStreamOnHGlobal \nseems ... weird to create stream on a global handle with NULL. Is this really the preferred mechanism to make an empty stream? #Resolved\n. for real. Seems simpler and it appears you can pass in a decoder GUID ... \n\nIn reply to: 84755233 \n. > size_t height, width; \nsuper nit: prefer us to not do compound initialization as weird things can happen when you do this pointers, etc. Saving you time when coding it the first time is less important than saving maintainers time when reading and debugging issues. #Resolved\n. also you should really actually init them \n\nIn reply to: 84762361 \n. use an RAII construct to store this guy. #Resolved\n. ditto on compound stuff. #ByDesign\n. also should these be cached values?\n\nIn reply to: 84762952 \n. can you just nuke it now? #WontFix\n. spelling\n. perhaps remove TODO. could add things like last modified time / created time but that seems probably not needed and not all storage files may even have that. Maybe just wait and do it later if people want it? #Closed\n. consider a templated internal function to remove duplicated stat code.\n. https://msdn.microsoft.com/en-us/library/windows/desktop/ee690304(v=vs.85).aspx\nwhats the difference?\n\nIn reply to: 84779273 \n. I'm not smart. I see now. This does raise an interesting point though. I'm wondering how much we even should be caring here? Presumably the CreateDecoderFromStream is smart enough to figure out what the stream can be and pick one that works. It looks like all of these are internal functions where you are choosing so do we even need to hardcode them?\n\nIn reply to: 84805950 \n. > pragma once \nwould prefer us to move this file someplace common instead of duplicating it ...  #WontFix\n. > _SCOPE_GUARD \nRemove. this is not needed as we already have wil::ScopeExit #ByDesign\n. And also previous feedback about not doing MACROs where possible still applies.\n\nIn reply to: 84807933 \n. Make a coregraphics specific helper file then?\n\nIn reply to: 84154588 \n. This cache design didn't make much sense when I looked at the impl. Can you fix it? \n\nIn reply to: 84753537 \n. what part can't be used in the xplat tests? Would be nice to be able to use that code across the board and most of wil should be useable (especially this example)\n\nIn reply to: 84808115 \n. you are more than welcome to have a separate CoreGraphics file. I'm not sure how thats related ... \n\nIn reply to: 84808056 \n. > THROW_IF_FAILED \nwhy throw? who is going to catch this? #Resolved\n. seems like a better pattern is to maybe return nullptr for failures and then have callers check that and do the right thing (return a nullptr CGImageRef or whatever)\n\nIn reply to: 84810633 \n. yep commented myself on that. Looks like some comments are special and don't show up in all PR tools. Hooray innovation\n. Yep I totally agree. It would be super grand to have a clear, coherent design here. Unfortunately the public apis for this force our hand a bit. The call pattern in specific that we are seeing for this scenario is:\nUIImage *image = ... ;\n      if (!image && [imageURL isFileURL]) {\n       image = [UIImage imageWithContentsOfFile:[imageURL path]];\n      }\nWhich means the URL needs to return true for isFileURL and needs to interact withimageWithContentsOfFile when using just the raw path. The way to get this to interop easiest and most fully seemed to be to go ahead and use a real file URL with a custom path. Given that /.file/id=... URLs exist on the reference platform, this seemed sort of natural anyway but I definitely agree this isn't a clean design like I normally advocate for. :-(\n. > ASSERT_TRUE_MSG( (downloadLocation || downloadResponse || downloadError) ||  \nsome of these don't handle spurious wakeups well but its at least a lot better than before. NSCondition needs locking and if you signal before a wait it just goes into the ether so needed another piece of information to check against.\n. > int \n@DHowett-MSFT @msft-Jeyaram  still working on this bit. Got very much sidetracked from test failures due to ridiculously wrong NSCondition use.\n. I prefer early returns for failure conditions as it gets it out of the way quickly. What you suggest is a pattern that can and does to severely nested code. I agree that this function is kinda cluttered though but meh.\n\nIn reply to: 85214139 \n. _read and _write are the msdn ISO c++ compliant methods used and those are int based so I'm going to leave it. \n\nIn reply to: 84970060 \n. these methods return HRESULTs that can fail ... \n. super duper nit: I personally would move the creation and use of composite effect all to the end just so its :\nThings with A\nThings with B\nThings that combine A and B\n. > As \nQuery Interface can fail ... there seems to be a bit of haphazardness on the CG\\CT failure mechanisms. I've seen FAILFASTs, THROW_IF, and RETURN_IF. Is there one we should be consolidating on for all internal code and then do a translation at the ABI boundary?\n. > float \nis this actually needed?  #ByDesign\n. I assume its not supposed to be thread safe? #ByDesign\n. whats the difference? Should be \"noisy\" here too? #ByDesign\n. this is an interesting way to break encapsulation. Should we be doing something else here? Seems like currentPath might need protected given other checks around #Resolved\n. > woc::unique_cf newPath{CGPathCreateCopyByStrokingPath(currentPathRef.get(), &state.transform, state.lineWidth, (CGLineCap)state.strokeProperties.startCap, (CGLineJoin)state.strokeProperties.lineJoin, state.strokeProperties.miterLimit)}; \nplease clang format code before sending a PR. this is obviously a way too long line. #Resolved\n. > woc::unique_cf& currentPathRef{context->Impl().currentPath}; \nencapsulation? #Resolved\n. both noisy? #ByDesign\n. neither noisy?\n\nIn reply to: 85251026 \n. > DISABLED_TEST \ndo we have an issue for this? #ByDesign\n. > DISABLED_TEST \nissue for this? #WontFix\n. RETURN_HR_IF style please. #WontFix\n. why struct and not class? Seems like there is a lot here with actual business logic in these methods so the decision to make them all inline and not protect any data members seems like an interesting choice... #WontFix\n. > status \nnot checked. We should be doing something useful with failed HRs. #Resolved\n. > __CGImage&  \nThis is a really weird return for a setter.  #WontFix\n. > SetImageSource(image).SetColorSpace(colorSpace).SetRenderingIntent(intent).SetInterpolate(shouldInterpolate); \nThis pattern is cute but I'd much rather have these all as separate statements or better yet add these as arguments to the CreateInstance call as you are basically doing a .ctor like operation here ...  #WontFix\n. >  CGImageRef imageRef = __CGImage::CreateInstance(); \n\nCGImageRef imageRef = __CGImage::CreateInstance(); \n\nsame with ctor like operations here. Also move the creation down to the bottom. As written this ref will leak in failure cases (like the return_null_if). #Resolved\n. > ref \n\nref \n\nwould prefer a name different than ref. ref is a keyword in other c++ like dialects so some syntax highlighters get confused and the name is not very descriptive of its purpose. #WontFix\n. > CGColorSpaceRelease \nconsider using a unique_cf here #Resolved\n. Generally not the nicest pattern to use as it forces the hand of the underlying COM machinery. COM cannot unload the supplying DLL while this guy still has a ref so you are effectively tying the lifetime of that module to CG which may not be what we want. If you create it when needed you all COM to make the caching and unloading decisions itself.  #WontFix\n. This needs to be a const & otherwise it's pass by Val which will copy the inner string\n. The nested logic in question is around the if(SUCCEEDED clauses. It is hard to read where the actual conditionals are admist those. A rewritten version is cleaner and looks like:\nD2D1_GEOMETRY_RELATION relation = D2D1_GEOMETRY_RELATION_UNKNOWN;\nRETURN_FALSE_IF_FAILED(path1->_impl.pathGeometry->CompareWithGeometry(path2->_impl.pathGeometry.Get(), D2D1::IdentityMatrix(), &relation)));\n// Does path 1 contain path 2?\nif (relation == D2D1_GEOMETRY_RELATION_IS_CONTAINED) {\n    RETURN_FALSE_IF_FAILED(path2->_impl.pathGeometry->CompareWithGeometry(path1->_impl.pathGeometry.Get(), D2D1::IdentityMatrix(), &relation)));\n// Return true if path 2 also contains path 1\nreturn (relation == D2D1_GEOMETRY_RELATION_IS_CONTAINED ? true : false);\n}\nwhich makes the actual conditions around relation pop out.\n\nIn reply to: 85576878 \n. > path1->_impl.pathGeometry \nencapsulation? #Resolved\n. > FAIL_FAST_IF_FAILED \nwhats up with the inconsistencies on the failure mechanisms here? FAIL_FAST_IF, RETURN_IF, THROW_IF all impose different contracts on the caller and rarely should be mixed in the same function and even more generally in the same module. I would like us to standardize on one mechanism internally and then convert to whatever the external abi requires. #Resolved\n. Is this not valuable for derived? (if thats a thing) UIFonts. I'm just slightly confused as initWithCoder isn't a typical designated initializer is it?  Is there something we should be providing on the base class that calls a different designated initializer? #ByDesign\n. > [name length] < 1 \nlength < 1 seems like a curious way of writing this. #Resolved\n. I do sure wish there was something better we would do here. Its pretty silly that we don't just set this to  winobjc or something.\n. Talked to @DHowett-MSFT on how to standardize this. All internal method that have some failure state should be unified to do the same thing (likely HRESULT return as they call windows-y things). At the outermost layer, the determination is made for that function what style it should be. CG appears to be a generally \"no fail\" set of apis so likely this means FAIL_FAST for us until we determine to dial it back. If we dial it back we should LOG and early return in any failure cases to preserve the code flow and keep it clean. Sound good?\n\nIn reply to: 85607025 \n. > preparePathForEditing \nFor instance this guy would be failure communicating via an HRESULT return and the user of __CGPath (likely a public API function) will do a single FAIL_FAST #Resolved\n. Hooray! @msft-Jeyaram killing it here. An lvalue reference return type is rarely what you want to use especially when used in both a setting and getting context. This call pattern is really weird  looking and in fact for the casual reader looks like a bug as it appears to throw away newPath and newSink by assigning them to anonymous rvalues. This is a case where being clever makes the code hard to read and error prone for future contributors. I agree with @msft-Jeyaram that a refactor/redesign here to better encapsulate the data is the way to go.\n\nIn reply to: 85838588 \n. > CGPathRelease(mutableRet); \nseems like an RAII construct may be useful for ensuring resources are properly released?\n. > InitializeGeometries \n@DHowett-MSFT and I chatted and agreed on the form we think this should take. the Impl is a dumb private data container and the outer C++ class will access it with _impl.theFooThing. The Outer C++ class will have proper encapsulation for its members and be called in a public C style method like:\nCGFooThing(CGFooRef ref) {\n    ref->GetTheFooThing();\n}\nThis may appear to break the encapsulation between the C++ style class and C struct but its an incremental improvement over what currently exists and will allow for future work to remove the _impl entirely and do an easy-ish find replace for _impl.\n@DHowett-MSFT thats sounds right yeah?\n. Seems a little silly to be using int references here #ByDesign\n. I guess it makes sense for the dtor count.\n. can this be a static_cast? Every T here should work out for that and we should maybe static_assert or enable_if with is_base_of to validate that CreateInstance only gets called on __CFRuntimeBase things. (Would be super nifty to know it was the root base (not a multi inheritance weirdness) which is maybe doable with template magic?) #WontFix\n. :-( super sad at the inconsistencies here. I thought the decision was to be error returning out to the public layer at which point a decision would be made on the correct course of action. This still seems internal as it returns a D2D object.  \nAdditionally, returning a Com object with a raw * usually speaks to a problematic design pattern. This is because it requires the \"unjacketing\" of the ComObject to return it to the caller without a clear communication on transfer/sharing of ownership which is by definition occuring by handing it out.  #Resolved\n. Yes, yes, yes.\nusing raw * means you really have to think about it and its easy to forget something / mess up. Com stuff gets a ComPtr almost always.\n\nIn reply to: 86611265 \n. not might. Definitely need. CopyTo is ever so slightly worse than a .Detach here as CopyTo does an extra AddRef Release that isn't needed for the anonymous rvalue vs detach but yes. The more efficient and more sane, probably, pattern is a raw ** here for the GetPathGeometry method.\n\nIn reply to: 86611487 \n. > sFactory.Get()->AddRef(); \n!!!!!!!!!ACHTUNG!!!!!!!!!\nmanual AddRef / Release of Com Objects almost always speaks to a design patten issue. Especially when used in conjuction with ComPtr methods in other places. \nWhat is the goal here? You are AddRefing once and then again in the CopyTo. Hooray extra amazing leakage. #Resolved\n. why did we go back to dispatch once? as mentioned before, dispatch_once doesn't buy you much except make code more dependent on  a third party library and harder to read. I preferred the second helper function / you could do something with a c++ lambda if you are concerned about the \"multi-return\" / \"return transforming\" you need to do. That is a language feature that we can be more confident in than our pseudo hacked up libdispatch just to get a static initialized. #Resolved\n. I spell real goodly.\n\nIn reply to: 86616809 \n. > WinRtClassicComMix \nDoh!!! I tihnk we've gone through this exercise before. My bad.\n. whats going on here? You have a raw* but aren't jacketing in an RAII appropriate construct. Ownership is confusing and certainly not thread safe as is. #ByDesign\n. looks like m_texture isn't always set so this is not the best plan. How about we make things easier to maintain by using an RAII friendly concept.\n. this is real bad to do in a header. #Resolved\n. > IDisplayTexture \nnot shown but if this is a COM object (implied by IFoo name style) manual delete is a real, real bad idea. #ByDesign\n. would still prefer unique_ptr and a release if you don't need to free? \n\nIn reply to: 87863221 \n. > CleanObjc2WinmdGeneratedFiles \nBring this back. Assumed to be lost in the merge. I don't recall doing this and objc2winmd targets would be fairly new.\n. > yyyyMMdd-HHmm \nconsider adding seconds. #Resolved\n. > yyyyMMdd-HHmm \nyou almost assuredly do not want the - in there. This is going to confuse nuget as the - is the special character used to indicate the start of the prerelease string. Perhaps use . instead as that separates out tokens of the prerelease string or just glob it all together. #Resolved\n. > \"0.0.1\" \nis this ok? If you've already handed out something higher, it may be slightly more complicated to get on the new train as somone's cache will have something that may more \"ideally\" meet the version range described by a consumer. #Resolved\n. Just depends on how much we care about people we've already given a package to :-p\n\nIn reply to: 88535301 \n. .0.0.1-20161117113815.pr.nupkg\n\nIn reply to: 88534964 \n. yyyyMMddHHmmss\n\nIn reply to: 88536124 \n. Also don't feel like we need to match exactly. We are different packages so we will never collide. All of my packages will be new packages named distinctly from current prototype ones.\n\nIn reply to: 88536195 \n. That is a different version number that I don't really understand. It is what is baked into vsimporter and xib2nib only at the moment. It is independent of the nuget version but we could later bring them in line. Remember that the package @pradipd  is working on here is strictly prototype for now. We will start over the versioning with the new packages I am working on.\n. not sure how I feel about this. Why are we cross module exporting c++ things?  #Resolved. also here. #Closed. >OBJC \nis this actually needed? CF should be useable from straight c / c++ right? #Resolved. >__WeightMapping \ncould make this an anonymous definition instead of using weird __ syntax to try to indicate its super private? #Resolved. >__CTLineBreakModeToDWrite \nwhats the coding convention on _ vs __ as a prefix? #Resolved. uninitialized #ByDesign. >exist \nuninitialized. #ByDesign. just curious why we decided to use SAL here. Do we have uniform conventions about this?\n\nIn reply to: 90738161 . this pattern suggests an issue in the design here. Should we create a shared_cf? or maybe more correctly just auto_cf?  #WontFix. RuntimeClassInitialize is useful if failure is possible. That doesn't seem to be the case here. Why not just make a ctor with args? #Resolved. >ReleaseFileFragment \nI see what you are doing but should you reset m_data here? What is the contract supposed to be? #ByDesign. >CopyTo \nprefer detach here if you aren't saving the reference internally for later. CopyTo adds an extra AddRef that technically isn't needed since you are transferring ownership. #Resolved. >* \ninteresting decision to use a raw * here. What is the ownership contract of this vector? #Resolved. >*errors = outErrors; \nstrange pattern. Typically you want to wait until the end to assign out parameters as returning a \"half baked\" structure in the case of failure can create confusion on the part of the caller. #Resolved. >S_FALSE \nThis is my least favorite return ever. It is still a success value (S_* is success) so all the macros like RETURN_IF_FAILED won't trip. I'd recommend against a pattern that relies on this. #ByDesign. The fact that this class, DWriteFontFileEnumerator, is a COM class makes this a dubious assumption. COM describes a shared ownership of objects. Presumably this guy is being handed out somewhere and the caller is free to hang on to it for as long as he/she wants. This could be longer than DWriteFontBinaryDataCollectionLoader is held onto. And in fact there is nothing else linking the Enumerator to the Loader which raises serious concerns about the assumptions you made in that comment. Can you explain more about how you are ensuring the validity of this pointer?\n\nIn reply to: 90908183 . would CFStream afford you anything nicer / different / more efficient?\n\nIn reply to: 90747118 . It fine to use SAL I guess (we don't get the benefit of actually doing anything useful with it except for reading clarity) but it seems to be inconsistent about when you are using it. Take the below _GetFontLIstForFamilyName method that doesn't annotate its in parameter. If we are going to do it, lets make it consistent so that COM style HRESULT returning functions all use SAL or whatever ...\n\nIn reply to: 90746813 . you used the word export there and I want to make sure we actually know what the relationships are there. Did you mean exported, as in a dll export, or extern, as in visible outside the current translation unit (.mm or .cpp)\n\nIn reply to: 90746929 . well seeing as I mentioned an in parameter, which one do you think I meant? If you don't think a CF type should be annotated, it begs the question why and what value you are seeing from this process ... \n\nIn reply to: 90928031 . does it? Is that a safe assumption from the caller's point of view? \n\nIn reply to: 90747010 . >loader \ns_loader? #Resolved. >s_userFontCollectionLock \nwhat is this protecting? Seems like the encapsulation is potentially wrong if the FontCollectionHelper is the one actually manipulating the data that needs protecting. Why not lock in that UpdateCollection function? #Resolved. probably. I was trying to get you to think about a little more defensive programming but whatever.\n\nIn reply to: 90936195 . LOL consistency. #Resolved. it offers little by little reading which allows you to build releasable chunks no? This would improve memory consumption right?\n\nIn reply to: 90935815 . hmmm. Seems like we should be more confident with this. How do the unit tests build? Are these items in a .def file? Would a private dll export have any other potential pitfalls with regards to encapsulation and versioning? \n\nIn reply to: 90936774 . The key thing you said is \"lock around the whole data structure\"\nThis points to a problem where you don't have the ownership quite correct. The data structure should be able to manage itself (hooray object oriented programming) and therefore the responsibility of locking should be encapsulated to the owning class / object. The pattern as is presents maintainability issues as every new callsite needs to remember to lock otherwise the whole lock is useless. Presumably the problem space for the class itself is much smaller and isolated which makes this a simpler maintainability problem.\n\nIn reply to: 90937664 . hence the question mark, lol. I personally think its more clear but don't care too much\n\nIn reply to: 90938094 . I want you to find the error and think about it more. I have a sneaking suspicion that the error is more related to our #defs etc for clang than for objective c as a language. I bet if you built for c++ in clang it would work fine. This mostly points to a failing in our sbclang.props / .targets in that its not symmetric building clang and cl but i'd like us to not overindex on this difference as it makes fixing it even harder as each of these things needs to be re-evaluated for what they really are trying to do.  \nperhaps an ifdef for clang? or something else related to having CoreFoundation includes available?\n\nIn reply to: 90938607 . Yep thats basically what I wanted to know. I was being on purposely obstinate here to make sure we understand the risks and implications. I'm fine if we are ok making that assertion and understand how we need to ship these things together as a result. Just wanted to make sure we are thinking about it and clearly communicating it.\n\nIn reply to: 90940630 . seems like this guy deserves a comment about this assumption or a move to a shared_ptr between the two objects to make the ownership clear from the code at all locations and increase the flexibility of the future design (i.e. there is no real good reason to have it as a singleton except that it makes life somewhat easier / faster but that shouldn't be a forcing function on the rest of the design)\n\nIn reply to: 90917725 . very true (its not ever going to be used since we aren't registering our runtime classes to be activatable in a RoActivateInstance type scenario) but yes would be great to do.\n\nIn reply to: 90944936 . \"shouldn't be owning at all\" ... the class blindly uses the pointer which implies something about the lifetime of that memory. This is pretty much the definition of shared ownership. It is saying, \"I didn't create the thing, but I have a reasonable expectation that whenever I want, I can use it and therefore store it among my member variables, the set of objects I own and manage\". To correctly make that work, you need something that enforces that. Right now its a tenuous contract with the singleton parent object that requires a future code maintainer to read  and understand all of the dwrite loader classes and uses as there is nothing else linking the two. The \"child\" class is not a child in any traditional sense. Its lifetime is not tied to the parent, its definition is not private to the parent, etc. \nThis makes the contract hard to continue in the future as someone may invalidate the baseline assumption and then be real confused. One of the amazing things about shared_ptr and friends is that the type itself implies the ownership so its much harder to do the wrong thing and at all times the use is clear and communicated. \nMy 2 cents is that code should be correct first, maintainable second, and fast/clever/whatever third. If you think that the shared_ptr is overly cumbersome, please take performance measurements to show its impact and we can evaluate from there. Until then, lets make it as easy as possible for the next person.\n\nIn reply to: 90944931 . Talked offline but the basic idea was that CFReadStream can read into arbitrary buffers which we could manage and release when they tell us to. The real kicker is that we are stealing the whole data from CGDataProvider at the beginning nullifying this benefit. A later change that actually implements CGDataProvider correctly should do better.\n\nIn reply to: 90956518 . be wary of classic com as the runtime flags. We should make ours mix because it implies the implementation is Agile (can be called on any thread). Unless we want to cause sta marshalling of calls, we probably want to stay with IInspectable and be agile.\n\nIn reply to: 91176606 . yes agreed. Was just putting it close to the use as I was trying things out.\n\nIn reply to: 92518736 . So I thought that my code formatter was going wacky here. I'm fine putting it back but I wasn't aware of any \"scoping\" convention here. # define looks like a syntax error at first glance. Would it be more clear to do \nif (...)\n#define ...\n\nas a scoping mechanism? \nI'm also fine punting this just to minimize churn though.\n\nIn reply to: 92519227 . oops\n\nIn reply to: 92519294 . Yeah I agree. I was overly cautious in the first go to not touch MSVC stuff as much as possible but I think adding new macros for the deltas should make it more clear and still be safe. I think here specifically we could add the class type qualifier and be happy in both case but I'm fine if we want a macro that bifuractes here.\n\nIn reply to: 92519390 . I agree. I was having a few issues using the Array version to initialize wchar_t* types in the structs but I didn't put much time in. Probably just need a &array[0] or to muck with the consts to get it to be happy.\n\nIn reply to: 92519559 . The more you know! I didn't know about std::integer_sequence but I'd say lets not reinvent the wheel here. I'm personally fine pulling in  if we scope it to clang. I can see other users not necessarily wanting to take a dep on the standard lib.\nThoughts?\n\nIn reply to: 92519153 . > N -> N, N-1, N-2, .. , 1 , 0 \ncomment is actually backwards in terms of template arg order (correct in recursion order though). Probably just remove in favor of std::integer_sequence #Resolved. yeah. Talked offline about the UT plan but lets make functional tests nice. Will leave the verification macros as is for now and file a task to clean those up later.\n\nIn reply to: 92248037 . just moved over from functionaltests.cpp but yes that would be cleaner.\n\nIn reply to: 92248343 . The more you know! I didn't know about std::integer_sequence but I'd say lets not reinvent the wheel here. I'm personally fine pulling in  if we scope it to clang. I can see other users not necessarily wanting to take a dep on the standard lib.\nThoughts? #Resolved. The issue is laid out here: http://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char which is pretty unfortunate but makes sense I guess. The fun part is that by using the constexpr concatenation stuff, it actually is only needed in one form (although maybe a little less efficient as it perfectly replicates the MSVC behavior with extra junk in the names that really doesn't need to be there).\n\nIn reply to: 92519915 . > \nShows a \"fancy\" unit test working. Was added here since FunctionalTests rely on a custom logger for TAEF that will need injected into other builds via .props / .targets but then we can move UTs to use TAEF.. Kind of a hack but seemed like the minimal thing to do to be able to run tests outside of the GTEST infra. We could maybe actually incept GTEST infra inside of TAEF and just run them all that way (name filter or something?) but this seemed to give a bit more control.. >impl file \ngtest.cc seems like a good candidate.. also kind of invasive... the normal thing is that these metafactories are all used to register the test with the main UT impl class in a static variable at dll load time. This would be fine if it were easier to read them back out and run them without setting up all of GTEST. seems like this is maybe less invasive / hacky but I'm open to other ideas.. this is the same assumption that gtest makes.. >className##_##methodName \nassumed to be unique. Also means that we don't get nice grouping in the output but I'll take what we can get here. An alternative would be to add new macros that do nothing in gtest land but make a new test class in taef land. the normal TEST macros could then just become TEST_METHOD. This would let us do fancier things with test class properties but would require modifying every test file and firmly put us in a franken test framework state that is neither GTEST or TAEF. . needed for bool conversion. Maybe should guard differently like with a try/catch to indicate success?. overly cautious here. Test could be TestBody so this funciton isn't needed but I didn't want to mess with trying to figure out if the attributes etc on the functions matched.. >for (const auto& metaFactory : ::testing::UnitTest::GetInstance()->parameterized_test_registry() \nThis is unfortunately super extra double complicated because TEST_P does (className, testName) and INSTANTIATE_TEST_P does (prefix, className) but expects all values to be run over all TEST_P for a matching className. This means we need to know about all classes that derive from className here to iterate over. Luckily the GTEST framework handles this but it feels super icky to reach in like this.. >_hresult \nresponds to selector? #Resolved. >hr \nwhat if this is S_OK? #Resolved. You leak this. :-(  (technically you don't due to confusing remarks on the msdn page for CreateHStringReference but I'd like to make it clear)\nTry using https://msdn.microsoft.com/en-us/library/hh771147.aspx as mentioned in previous iteration. #Resolved. >IMFTransform \ncomptr?. wut. i dont think we want to do this here. that is going to make anyone else doing com things on this thread super unhappy. >inAudioConverter \nCalling delete on passed in memory is not a scalable memory management strategy. This creates CRT / heap dependencies between the allocation call and this call. Take for instance if someone made a derived AudioCOnverterRef etc. Given that the type is called FooRef there is a certain expectation about its memory management as well that a straight delete is likely violating. Consider instead calling release on this object and making it a real CF or ObjC object under the convers.. We nice macros for this sort of thing.. >IMFMediaType \nComPtr. >SetGUID \nI have a sneaking suspicion that all of these can fail. How are you handling that?. >CoInitializeEx \nis this needed? I think we CoInit on our threads already and I'm not very comfortable with the flag you have here. Can you explain the logic behind this?. >IUnknown* spTransformUnk; \nComPtr. >spTransformUnk->Release(); \nIs this a safe call to be making?  What is the failure means it wasn't assigned a value??. this seems awfully reminiscent of a constructor that would encapsulate what you want better. ALong with other comments about the lifetime and ownership of this object, please consider an alternate approach.. who controls the lifetime of transform then??. this makes me cringe a bit. Is there anything we can do better here? What happens if Output isn't ready for awhile? Are we going to spin / block potientially indefinitely? Does MF have a callback mechanism instead? What are the threading implications of these calls on the reference platform?. Unit tests?. seems like a weird internal implementation detail to rely on here. \n\nIn reply to: 93300439 . The \"jist\" of it is that you should be using Wrappers::HStringReference instead of manually creating one and having to worry about its lifetime. \nI totally understand that \"reason\" is the backing store but that then begs the question of why don't need to delete the HSTRING that is presumably pointing to it. The interesting bit is the HEADER that is on the stack and that under the covers that header is being cast to the output HSTRING hsReason. This means that the storage for the HSTRING itself is just the header on the stack. \nThe fact though that you had to read the remarks, and still weren't 100% certain what was going on here suggests that a lifetime managed object like the wrappers one will make the code more maintainable, less verbose, and all around more clear what you are intending. \n\nIn reply to: 93299684 . if you don't do this, you are making the assumption that the code will work. That isn't necessarily wrong but you then rely on what the \"nil\" behavior is here. This means that you'd get an exception with S_OK (0)  as the error code which is a weird case to try to operate on and doesn't make sense to throw/originate.\nWe should handle that case one way or another. \n\nIn reply to: 93301074 . Good point. Also be on vacation!\n\nIn reply to: 93306728 . The \"jist\" of it is that you should be using Wrappers::HStringReference instead of manually creating one and having to worry about its lifetime. \nI totally understand that \"reason\" is the backing store but that then begs the question of why don't need to delete the HSTRING that is presumably pointing to it. The interesting bit is the HEADER that is on the stack and that under the covers that header is being cast to the output HSTRING hsReason. This means that the storage for the HSTRING itself is just the header on the stack. \nThe fact though that you had to read the remarks, and still weren't 100% certain what was going on here suggests that a lifetime managed object like the wrappers one will make the code more maintainable, less verbose, and all around more clear what you are intending.  #Resolved. if you don't do this, you are making the assumption that the code will work. That isn't necessarily wrong but you then rely on what the \"nil\" behavior is here. This means that you'd get an exception with S_OK (0)  as the error code which is a weird case to try to operate on and doesn't make sense to throw/originate.\nWe should handle that case one way or another.  #Resolved. assert sounds good enough probably. Just seems like an obvious place to be a little defensive in our programming. \n\nIn reply to: 93384408 . this compiled before?!!?! #Resolved. Should we have a common header (possibly internal) that does this and the com includes for the mf stuff?. >RETURN_NULL_IF_FAILED \nI like the use of macro here but I'm a little concerned. Should you do a [self release] here? Alloc init ends up at a +1 ref and you are returning null which would mean that the instance is leaked right?. >(inSourceFormat-> \ncan inSourceFormat be null / do we care?. > = nullptr; \nnit: = nullptr not really needed for ComPtr<> init. super nit: I'd put the comment above the ComPtr decl and try to be consistent with capitalization.. well that way to initialize variables looks absurdly confusing to me. Why did you choose multiline brace init that makes it look like a function definition? #Resolved. Talked to dustin offline a bit. I think he is correct (per usual) and the \"Core\" set of frameworks are below foundation. It means I will need to adjust my packaging to include them in the\"Core\" package but it is almost certainly more correct and cleaner overall than adding these privates here. Sorry for giving you bad advice.\n\nIn reply to: 95276230 . >        \nPlease make sure to run clang-format before submitting any code. In this case you have tabs that should be spaces. Coding conventions are a sticking point for a lot of people so we make it pretty easy to ensure the code is conformant (https://github.com/Microsoft/WinObjC/wiki/ClangFormat) for more info.\nEDIT: Just realized that core foundation turns off clang-format because we don't want to make unecessary churn from the ref platform. Can you just manually change your tabs to spaces? Thanks!. Please make sure any and all changes to CoreFoundation are annotated with a // WINOBJC:\ncomment. This helps more easily pinpoint differences from the reference platform implementation.. >completePath \nwhat is this used for now?. >CFMaxPathSize \nwhat is this value and is it sufficient for all cases?. probably but I was just going to let whoever is redo'ing the whole thing do that.\n\nIn reply to: 95446765 . its still wrong without the assert and I'm not confident in a quick fix for a queue per thread or anything like that.\n\nIn reply to: 95447067 . yes that is the intent. There is already an issue Dustin filed awhile ago. I will update it to mention that all the NOTE: comments here should be addressed.\n\nIn reply to: 95448320 . documentation states that notify calls are most efficient outside of the lock. Otherwise it causes a \"hurry up and wait\" scenario where the notified thread immediately waits again to re-acquire the mutex. Some implementations optimize for this but to be most portable, the recommendation is to notify outside of the lock.\n\nIn reply to: 95448692 . not in spirit. They are implemented in that they don't break things but they do not actually influence concurrency. I decided to leave as is. The re-write will actually do something useful there presumably.\n\nIn reply to: 95449162 . I could but I don't think I will. Its a pretty long line already and I think it would look weird in the init list and it uses the weirder autorelease pattern that I don't super enjoy.\n\nIn reply to: 95449339 . this.\n\nIn reply to: 95449581 . I'll add a note. I agree that its weird. I didn't have it like that initially but that is most in the spirit of the previous code. I very much dislike nil'ing out the thread to indicate state but some flag is needed under the lock to indicate that things are done and a new thread is needed next go around. \nA much preferable solution long term is to use a threadpool or some other mechanism where we aren't manually trying to optimize thread lifetime.\n\nIn reply to: 95450052 . lol oops. I meant to std::move. It doesn't really matter though too much.\n\nIn reply to: 95450127 . totally. The issue is that an add could happen after the decision to stop the thread has been made but before the stop actually occured. Right now its the add that determines the new thread needs created. This means that the decision point of stopping the current thread needs to also indicate the new one needs constructed. Its weird and stupid but it is the existing logic that I didn't want to touch without ripping out the entire thread management.\n\nIn reply to: 95459642 . yeah I thought about it. I'm going to wont fix just because all our logic is currently written in the positive and it seemed more confusing to me to ! it some places. A full rewrite could make use of it better.\n\nIn reply to: 95450281 . yep I agree. Was keeping existing logic as much as possible. \n\nIn reply to: 95450533 . why not?\n\nIn reply to: 95450845 . short circuit here would not be advisable. The logic here is pretty dastardly in that it for loops without a didWork check in the while loop. This means that even in the cases where work already occured, we should be trying the other priorities. It also means we can't just set it because we don't want to invalidate a previous priority that did in fact do work.\n\nIn reply to: 95457228 . a setName call could be made but I don't really like that. I think unique_ptr is fine here.\n\nIn reply to: 95451424 . swell.\n\nIn reply to: 95453130 . kept the logic but yes its rather silly all around. This is why a deque was used so that reversing it was fast but totally not needed in reality. The real redesign won't use this weird holding area with demotion business, instead relying on KVO, the ready state, and a std::priority_queue to manage the pool.\n\nIn reply to: 95453430 . good catch. forgot to remove when I moved to safe static init.\n\nIn reply to: 95456671 . should be removed. was going to mention the thread loop but it doesn't actually impact that case.\n\nIn reply to: 95456923 . True. I just kept the priv around as the encapsulating doodad but that could have just as easily been the objc class itself.\n\nIn reply to: 95450433 . I thought the general convention was at the end for C++ classes? \n\nIn reply to: 95458070 . >AudioToolbox.lib \nLooks like this is the culprit. Please remove. The project reference above for the static lib should be sufficient. If it is not, please comment with the build error you get and lets investigate.. >CFURLGetFileSystemRepresentation \nlooking at the implementation for this, it appears that it can return false if the buffer is too small as well. Not a lot we can do here about that though. I think the MaxPath thing is fine for now but it does worry me a for very long names.. PLEASE PLEASE PLEASE NO.\nThis is NOT a good way to test this sort of thing. These tests should honestly be scrapped and rewritten using events / mocks / something so we aren't guessing on when it will complete. It just slows down things for everyone and only adds minimal more reliability because they still hit real endpoints that could take arbitrary time to respond .... . @afaruqui I cannot in good faith just re-test the current build as I see the issue and agree with the build error. Any successful builds are likely due to chance and the binary in question just happening to be built in time but without a strong ordering enforced by the build machine. If I were to accept as-is, even with testing again, I would be knowingly making our build results unstable going forward.\nAll of that being said, it should be pretty easy to make the correct fix here. You mention unresolved external symbols for  AudioConverterNew  and AudioConverterDispose. Those symbols are found in AudioConverter.mm and declared in AudioConverter.h.  You can see that AudioToolboxLib.vcxproj is responsible for building this .mm file which means that the project reference should be sufficient to pull in the lib that has the implementations in question. \nThis then begs the question why is the linker complaining about unresovled external symbols if they are in a lib being built with the unit tests. Well the key thing there is that they shouldn't be external. They are located simply in another TU in that module. It appears that changing the preprocessorDefines as mentioned in a comment I\"m about to make should do the trick.\n. This file needs the most review.. I mean I think it just ignores it if there is nothing there. WHich is true now. I forget what used to be there that CF needed. Scary indeed. #WontFix. Yes but I was a little lazy. Its called RuntimeParameters. YOu can see it for the test directory stuff. We'd want to hide away those things behind a macro / function probably.. Yeah sorry. I saw this but forgot to go make a macro for it. We'd want Log::Property I think. I'll make a macro for it. #Resolved. I agree. I was trying to avoid having to use a .cpp for this but I remembered that I already did that work for the logger so I could make this a bit nicer my having a class with more sane storage and helpers.. no. it can't. this is me stamping out argc/v to interop with the below call. See my comment on runtime params.. I'm not sure what you mean... this is a std::string returning thing. The thing is just a bit weird. Are you wanting a more formalized class or something? I agree that the macro \"function\" isn't super clean ... . yeah don't worry about it. There has been a lot of cleanup of the old code. You don't know half of the horrors of this project ;-) #WontFix. I'll try but I think I did that and it was complaining about needing the typename stuff. Maybe auto will work though.. what do you mean? Is there something better I should be doing?. I dunno this is copied from the current behavior in develop. I tried to not actually change the functional tests just consolidate them. But I may have messed up. You make a good point about if setup fails though to not run the test. I don't do that right in my test_p shim ...  #WontFix. yeah sorry bad merge on this file. I just wanted to delete everything in it basically but y'all made a bunch of changes to it. #Resolved. I know but I'm not changing how it was for people already. This is just transplanted code. #lazy. #WontFix. kk #Resolved. probably? Despite outward appearances, my goal is not to fix everything potentially wrong with this project. #WontFix. maybe. I didn't want to bring in a dep on NSException and friends here. I think that we maybe fixed that but I was being lazy. #WontFix. out of convenience / laziness mostly. Since lambdas are anonymous, I don't need to worry about ODR violations or weird storage concerns as much. I believe I could define a static function under the ifndef and be fine though if you think that is more clear?  #Resolved. yeah possibly. not for this change.  #WontFix. agreed. Not for this change. #WontFix. agreed. not for this change. #WontFix. that doesn't exist right now. I suppose I could make it but it seems these are getting out of hand.\n\nIn reply to: 98271294 . I found it and yes we can use it but we don't have a macro for that. I don't really want to make a new one. If you are super adamant, I can look at doing that.\n\nIn reply to: 98271548 . @jejeyara@microsoft.com awesome. File an issue and I'll do it when we are merged. You rock.\n\nIn reply to: 98289411 . @DHowett-MSFT  @jaredms this means that I should bail out and log a failure here right? Test Cleanup should still run though? Basically put the TestBody in the first try block?. >WEX::Logging::Log::StartGroup(currentTest.c_str()); \\ \nwould be useful to also log what the parameters used here are. I think gtest has a method for that somewhere. I dunno if I can get to it off of the ParamGenerator though?. >ypename ::testing::internal::ParamGenerator::iterator  \nprobably use auto& here?. Any change to cf not in the swift version should be documented with a // WINOBJC comment to make it easy to identify where we are diverging and why.. There is a dependency chain described already. The only difference is what version is picked up due to the constraints being satisfied with an older version or not. We should expect the typical case to just depend on the tip even if our internal samples etc depend on all to force the latest of everything even in prerelease mode.. This mostly a question of what it looks like to invoke vsimporter on middleware VS an app. How does vsimporter know it's middleware? Do we need more user obvious knobs to control this?. The star is latest stable version which I think is a fair thing to auto upgrade to. This is less overhead all around I think.. What does that mean @pradipd . clang-format is turned off for CF to minimize churn but we should be diligent ourselves anyway.\n\nIn reply to: 99636921 . please put the comment at the start of the changed block. In this case that looks like it would be above the declaration for lastPathComponent\n\nIn reply to: 99227616 . >lastPathComponent = CFStringCreateWithSubstring \npretty please don't do assignments in conditionals. Especially not compound conditionals. Its real real confusing to figure out whats going on.. >testNSURLMethod(@selector(URLByDeletingPathExtension), testURL7, nil, [[NSURL alloc] initWithString:@\"http://www.test.com/.foo\"]); \nis the old one still a valid test case? Should we switch to paramterized tests here? . This is really, really silly. Why do we need to set these at runtime like this. When would this not be what we want. Seems like we should have the getters return this ... . Yes it will be copied there anyway. It would still save a copy to not have a useless extra layer here to set it ... \n\nIn reply to: 99445013 . .. They are both silly. It doesn't make sense that the application compositor sets any sort of file system stuff. Starboard should know how to do this itself. That would be more proper encapsulation ... \n\nIn reply to: 99649338 . Yeah that is what it was for. I agree not great. I'll change.. This is only for OSX and it is what was happening before anyway somewhere ... I didn't make up that code at least.. I agree in principle. I'll let you handle that. There were already a number of ifdefs in there for WIN32 so it seems like we need to think more about how to divide up the entrypoint code for the two.. >GetTestFullName() \nI'll let you figure that out later. I don't think you do / you may want to rethink that. . yes.. I didn't look at that. I assume those run cross-plat so i think we should keep as is.. which part?. oh actually I think I can remove that extern. Got lost in the merge.. maybe?. extra special inlining. It means __declspec(selectany) for inline functions. \nhttps://blogs.msdn.microsoft.com/freik/2005/10/26/how-to-make-a-no-inline-inline-function-and-why-you-might-want-to/ has a good summary. \nThe gist of it is that I'm using a global variable that needs to be shared across TUs (DrawingTest and the Test file that derives from it). This means I can't have more than one static function stamped out / use an inline function because the storage for the alternate name wouldn't be the same across TUs. However, I wanted to keep this in the header to minimize the additional goop needed by the tests (an alternate solution would be to place this stuff in the logger static lib). This means I need a \"selectAny\" type of behavior which you get from this hilarious syntax.. I believe it requires wchar_t*s . It will but I didn't really want to introduce that dependency to Starboard since its a weird private function anyway. I can though if we feel thats nicer?  #Pending. from a valid location. We can take this offline. #Closed. seems like backwards progress? was this just wrong before? #Resolved. >UXResources \nthis makes me a little sad. Could we use ReferenceCopyLocalPaths instead and let the build just do its thing to copy? #Resolved. >TAEFEntryPoint \nNice! much cleaner.. >TEST_P \nJust so I understand this, you are modifying the gtest api to have another level of indirection here so we can do the interstitial doodad? . solid.. add a newline before this guy? I was confused what the log test thing did until I realized this was separate.. no record property?. fair. Would be useful to move this macro to TestFramework for the benefit of other tests?\n\nIn reply to: 100652177 . TestType not mentioned here ...  #Resolved. Not sure how I feel about restricting the tests like this. I don't think FunctionalTests.dll should really be hardcoded anywhere. Seems like we be better served by just using a TestRun.wtl output and letting people stick in whatever filters and output directories they want.  #Resolved. Update this.. >getcwd() \ndon't do this. Its a bad idea to assume that the cwd is the vsimporter directory. I think this should be binaryDir with some relative path?. >VcxProj \nmaybe add some *** around this to highlight the difference. #Resolved. should this key off of PackageId or ShouldPackage or some other nuetizer metadata that knows if it is a packaging project or not? Probably fine as is.. >ItemGroup Condition=\"'$(ConfigurationType)' != 'StaticLibrary' \nwas thinking and we might actually want to remove this so that the import lib is bundled in a static lib too. The scenario I encountered that made me think of this was if we had a dll project that is straight c++ and just has a project reference to a static lib that is objC. The dll would need to also need to depend on the nuget to get it to link sucessfully but thats a little weird. \nSo I think what we want to do is always link but only do the ReferenceCopyLocalPaths if its not a static lib.. Shouldn't be needed with the above Link include (at least if you pull out the fullpath i think). If its not working try doing:\n<!-- Add each .lib to the linker -->\n<Link Include=\"@(_ImportLibsFromPackage -> %(FullPath))\"/>\n\nI think.\n. >IsPackable \nYeah this one (my other comment about keying off of metadata instead of extension). >OutDir \nIs this what we want? I was thinking that TargetPath was the more generalized thing or whatever I did for the frameworks ones ...\n  <_ImportLibraryFileNames Include=\"@(Link -> '%(ImportLibrary)')\">\n  </_ImportLibraryFileNames>\n\n\n  <PackageFile Include=\"@(_ImportLibraryFileNames->Distinct())\" Condition=\"Exists('%(FullPath)')\">\n    <PackagePath>$(PackageContentBasePath)\\%(Filename)%(Extension)</PackagePath>\n  </PackageFile>\n\nThe ImportLibrary metadata on Link is telling it what to make the importLibrary called / where to output it so I think that is the safest? spot? I think OutDir*.lib is going to maybe pick up more than you want if other packages etc dump stuff to the output folder. #Resolved. I dunno what this is... can you make this comment more descriptive? I'm also a little worried that we are overloading the ConfigurationType for this. Do bundle projects actually build C/C++/ObjC code like other .vcxproj files?. Oh I see a little more what you are doing here but its still wrong. You have this under Condition=\"'$(ConfigurationType)' == 'StaticLibrary'\"\nbut a static lib doesn't have an import lib. An import lib is paired with a dll so you want this bit to go below and to copy the BuiltProjectOutputGroupOutput to this block as the static lib is the main project output for a static library config.\n\nIn reply to: 100939160 . I used this for debugging. Maybe turn this into a more human friendly version with a lower pri if we feel its still nice to keep around. #Resolved. Is this the right name? You had the other one as packagable #Resolved. if it should be a .vcxproj at all. Its probably outside the scope of this change but .vcxproj files imply something about what the project is doing (building native code) and that is not the case for this. If its just adding SBResourceCopy items it also doesn't seem like a stand alone project is necessarily correct.\n\nIn reply to: 100939382 . should just need Packaging and Frameworks I think?. this is the one that will end up in the imported project's directory right?\n\nIn reply to: 100940627 . >\"WinObjC.Frameworks\": \"*\", \nshould just need Frameworks I think?. do we want to just go ahead and give them packaging anyway? Unless they have a .nuproj its harmless and would make it easier for them to add after the fact?\n\nIn reply to: 100940735 . lets file an issue to think about that some more. I'm not convinced we want this approach long term.\n\nIn reply to: 100940736 . > \nThis line confuses me. Isn't that what this file is doing? #Resolved. vsimporter.exe and templates will eventually live in a Tools package in some random not super easy to get to path. \nFull path to the templates is best if thats knowable ahead of time. Was thinking that at least we can know the relative directory structure between vsimporter.exe and the templates and can get the .exe path at runtime\n\nIn reply to: 100940407 . Perhaps I don't understand what Package.targets is here but I thought this is what is going to be the consumption targets anyway. It seems you are making another level of indirection and i\"m not sure why.\n\nIn reply to: 100941520 . They are the \"return\" values here. some of these guys are supposed to return themselves so you can [[foo retain] bar ] which was creating errors somewhere. I was surprised it worked before.. done. my comment from Iteration 2 stands. I think we want to do part of this for static libs too.. >InternalSystemIncludePaths \nThis should probably be IncludePaths not InternalSystemIncludePaths ... We use the latter in frameworks because Foundattion et al are \"system\" frameworks unlike what a 3rd party component would be. We would need to xmlPoke or something fancy here to allow a flag on the production side determine this when we have the frameworks consume the packaging nuget.. >Link \nStill valid comments here about this being not needed if the other part is done with full paths. Probably better that way so that the metadata here isn't as polluted and harder for the user to mess up. nit: add a new line in between these. The comment doesn't need to mention WinRT. And I might switch it to be off by default since I think that is going to be the common case. . >WinRT \nnormal dlls could go through this path too and I think then you'd want to include the public headers here too.\nThe weird / hard part is going to be if its a WinRT component, we do want to include the generated WinRT headers instead of the normal headers (for C++\\Cx consumptions since it doesn't technically go through the .winmd). \nWe can use the winmd presense of an indicator to look for these though. I'd talk to muktesh / pradip about if / how objc2winmd produces these.. >Resources \nthe resources bit look common? could we factor this out different? maybe not cause of bundle projects?. >MSBuildProjectDirectory \ncan you put a comment for the custom ones about them living in the project folder. Just scanning this its hard to see this one is special if someone comes along later and fixes something up. This can be removed since you are adding things to Link directly with the full path now. . >WinObjC \nremove this file. This snuck in accidentally.. >\"WinObjC.Language\": \"0.2.160915-*\" \n@memontic-ms This was causing issues for totally clean builds. Since it builds at the same time as Language and the build machine I set to not look at VSO for packages to ensure its locally built ones were used, it couldn't restore this. I couldn't find / remember what this was needed for. Is this ok?. ensures that by default we aren't compiling /ZW for any c++ test files like entrypoint.cpp etc. This was apparently needed because it upset the linker line and put vccorlib before something else that was unhappy. i did work in sbclang.targets to try to handle this (so that consumers don't need to care) but was frustrated and didn't look into much further. Nothing in our tests need ZW so this seemed fine for now.\n\nIn reply to: 102292643 . (I think part of the weirdness for tests vs elsewhere is that the tests don't build into an app ... which is also why I had to switch away from sbresourcecopy. That only copies into the appx directory now. Before it had a custom hook for our uts but that didnt seem like a good separation of duty).\n\nIn reply to: 102293339 . I don't think so?\n\nIn reply to: 102293959 . This lib is straight c++ so clang options aren't useful ... \n\nIn reply to: 102294319 . Its moved to be part of the Core package now as Foundation apparently depends on it.\n\nIn reply to: 102296613 . (It does have Core in the name for what its worth)\n\nIn reply to: 102297109 . I'm not touching these. I don't think the Label makes a difference but these are required to have VS not rewrite the .sln out from under us. \n\nIn reply to: 102304769 . yep! no more copies of stuff. Its one flat output directory\n(packaging allows this because we self describe the pacakge output instead of making guesses after a build based on output folders)\n\nIn reply to: 102312399 . This seems wrong. I think we should try to figure out the \"end product\" instead of just containing a packagable thing.. it is. This doesn't actually matter. I built in 2017 for funsies.\n\nIn reply to: 102594106 . not really but this is consistent with other things we've done. The ones above are more nugety / external imports rather than just a customization to the current project. meh.\n\nIn reply to: 102594920 . yeah.\n\nIn reply to: 102594711 . WinRTSample and KVO Perf didn't have the original xcode around so I manually did them.\n\nIn reply to: 102804684 . yeah probably but this is fine for now. Just trying to get builds working. We can re-re-import later if we want.\n\nIn reply to: 102805999 . no clue!\n\nIn reply to: 102805890 . that would be awesome. Getting rid of as many of these as possible / converting them into msbuild props would make me ever so happy.\n\nIn reply to: 102809102 . why?  #Resolved. I think we should use the more generic thing where the xcode folder is passed in.  #WontFix. is that the normal way? gci is usually used to get a child item of the current item.\n\nIn reply to: 103061610 . I was thinking you'd pass in \\build\\ and let it recurse from there\n\nIn reply to: 103061909 . We will need to \"install\" the tools package. I thought it would be better for build isolation to not actually install it and instead just unzip the package and run vsimporter from the unzipped package . If and when we move vsimporter into the VSIX for \"new project\" support, well need to come up with a way to test that in isolation. Not sure what that will look like.. The 2015 link disappeared and it seemed more error prone to rely on them. I suppose if they were published to the extension gallery or a more official place, I'd be happier relying on those links.. yes thanks. chocolatey appears to have a slightly different SemVer parser that didn't like the other style of version string.. >NSRunLoop \nAny other tests we should add?. >    \ntabs are sad. I can try that out.. or actually none. I think.. @pradipd same!. >False \nWhat is this doing?. >1.6.1 \nWhy this version? Do we need to keep this in sync / auto rev in a more unified way?. why?. >'$(IsPackagingProject)' == 'true' \nProbably remove these since no one weird imports these now.. I was thinking develop since it will be the latest always. In case we have changes, this will most quickly reflect any license changes but I honestly don't know which is better.\n\nIn reply to: 106000391 . its 2017 or later so I didn't want to be too specific. I'll add a line to description though.. Following the Install-ChocoalteyVsix pattern as much as possible here which doesn't. #wontfix. lol. yes #Resolved. yeah that is a little weird\nbut its so that if we do a dynamic version replacement\nwe correctly describe what version was used when making a package\nthis is seen in Frameworks -> Language\nright now Frameworks .nuspec says it dpends on \"\" for Language even if it was built with a specific version. You'll want to use PackageReference style nuget deps with the override targets here if you want to use the latest / local packages.. You'll want to move to PackageReference instead. Additionally, you'll want to add all packages (except tools and packaging) here to handle cases where you update a single pacakge that isn't a leaf node and want to test local updates. #Pending. Look at WOCCatalog as an example. #Pending. @jaredhms it did for a normal app developer. This is not a normal app. The two leaf nodes with a \"\" version is exactly what we want most external developers to use as it is the simplest way to have them stay up to date on the latest pre-release version.\nWe don't currently have a switch in VSImporter to do version swapping but it is something we know about and are working on. See https://github.com/Microsoft/WinObjC/issues/2199  #Resolved. Not sure what you mean by \"make it look like a link\". I can't do markdown in the summary field it doesn't look like.. I had fun.\n\nIn reply to: 107240965 . nope!. no I was seeing it locally and was upset. \n\nIn reply to: 107544404 . Correct. It gets set here which is when the .nuproj gets re-evaluated for the other configs. . these were in the in original. They are coming back from reverting the revert. I was seeing some instability in tools.sln builds without this. @memontic-ms says I don't these now but they don't hurt anything to my knowledge so I left them.. >@autoreleasepool { \nIs there something more general we should do to make sure our threads have pools set up?. Agreeed. if we hit an exception before here, there will be sadness. \n\nIn reply to: 107801632 . Only for packagereferences and only until it's fixed. It should have a copy of this project though instead of pointing to this one.. bad merge maybe. let me look.. ><_XamlFilesFromPackage Include=\"$(MSBuildThisFileDirectory)\\xaml***.xaml\" /> \nWhy is this file modified but doesn't have the new .pri file consumption targets?\nPackage.Default.props is the default consumption props/targets for middleware using WinObjC\nIf they have xaml components, what needs to happen to ensure it works for them? #Resolved. >_GenerateProjectPriFileCore \nThis should probably be in a conditioned property group to += it onto GetPackageContentsDependsOn based on if its an AppContainerApplication project. \nSince this is being added to build.sln's common targets, you should probably consider adding it to the Packaging Package's default production targets so that the same things happen for middleware consumers. #Resolved. > Condition=\"Exists('%(RootDir)%(Directory)%(Filename).winmd') \nThis condition really isn't what we want.\nYou should be checking for the existence of the .pri file not the .winmd and then And ing with the notion that \"this project is going to produce a winmd\". \nAre there any scenarios where a pri file is needed but a winmd isn't created? #Resolved. WinObjC.Frameworks.targets are the consumption rules for the WinObjc.Frameworks package, so yes you want to think about how to generalize what is going on there to work for middleware.\n\nIn reply to: 108994382 . >  \nSo why was this target needed again? The pri files that we package have the xbf data embedded in them right? \nThis is strictly for functional tests?\nIf so please add a comment for this target explaining. #Resolved. See my above comment, \n\"Package.Default.props is the default consumption props/targets for middleware using WinObjC\"\n\nIn reply to: 108995058 . Right above is an example.\nxml\n  <PropertyGroup Condition=\"'$(ConfigurationType)' == 'DynamicLibrary' or '$(ConfigurationType)' == 'Application'\">\n      <GetPackageContentsDependsOn>$(GetPackageContentsDependsOn);$(ComputeLinkInputsTargets)</GetPackageContentsDependsOn>\n  </PropertyGroup>\nThis says \"If its a dll or app, make the new contents of GetPackageContentsDependsOn the old contents appended with the contents of ComputeLinkInputsTargets\"\n\nIn reply to: 108994265 . You aren't considering whats really going on here. Remember that this is in sdk-build.targets (and you are going to add something similar to the middleware targets). This needs to work generically. Things to consider:\n\n\nYou can't package a file that doesn't exist.\n Its imperative that when you add a PackageFile item, it exists. Currently you don't check at all if this exists. Its possible in a different scenario that on disk the pri file isn't at ProjectPriFullPath or that ProjectPriFullPath is defined but a Pri file isn't made. Perhaps in the scenario of a non AppContainerApplication project, no pri file is created.\n\n\nThe winmd file may not be located at %(RootDir)%(Directory)%(Filename).winmd\nPeople can change where the winmd is output similar to changing their output directory. This combination is using metadata (the % ) off of each item from the expansion of _PriFileNames, so you are assuming that the pri file is always next to the winmd. That is true for UIKit.Xaml but is that true always? \n\n\nThe precise condition that you are wanting to capture is \"Only add a pri file if I have a pri file on disk and that this project produces a winmd\"\nthe current condition is \"Only add a pri file if there is a winmd file on disk in the same folder where I might write a pri file\"\nin the UIKit.xaml case this is equivalent but in the general case I would like to be more exact.\n\nIn reply to: 108994641 . Yeah probably. Talk to @memontic-msft about that.\n\nIn reply to: 108996733 . Is this file something we will want to redirstibute to people using our project that also want to use CppWinRT? . >TrivialDefaultConstructor \nI'm a little confused why this is needed. Is this because PointerPoint doesn't have a default ctor in the cpp winrt types? . You actually want a Wrappers::HString https://msdn.microsoft.com/en-us/library/hh771141.aspx\nHStringReference is for a reference to an existing string resource to avoid copies.\n\nIn reply to: 109047974 . > XCConfigurationList* \nthis is fine as a raw ptr? do we not own the config list here?. >extension \nshould you std move extension here?. >    pDict = nullptr; \nmove this up to the declaration?. This causes GetPackageContents to not depend on resolve references. See here\n #Resolved. This needs to stay to make sure that import libs are included. I need to check what this guy depends on to make sure its not trying to resolve references to get a static lib link input or updated import lib. #Resolved. @pradipd I want to very precise when are talking about MSBuild stuff cause we all know how confusing the syntax and stuff is. This is adding a temp item to the Link itemgroup. Link, the task, is run in the Link target against items in the Link item group. This is used here to extract the ImportLibrary metadata off of the Link item group without needing to run the targets that could normally precede the Link target as those include resolving references / compiling the project itself which is already done at this point.\nThis can all mostly be avoided though (I think) if I figure out how to clear the BuildingPackage global property that .nuprojs add when calling GetPackageContents. I believe that was what was triggering a re-execution of already completed targets and still is for some cases. #Resolved. It looked like all the other ones in Tools already had this. common-build in tools.sln is for vcxproj. (Also tools is a lot easier basically only Logging.dll would be a real issue here since most of the problem is coming from nuproj->nuproj->vcxproj project reference chains.)\n@kzu also for FYI. Not sure if the BuildingPackage invoking a unique MSBuild which causes rebuilds would be a bug for Nugetizer in general.. Because you wrote Packager and I wrote common? You pass through IsPackable on line #22 whereas I keyed off of the SkipGetPackageContentsForOtherPlatforms to set it in a props. Its not a big deal either way we just need to account for it.\n\nIn reply to: 110029872 . I assume rc is for \"return code\"? Please don't choose single letter / abbreviated variable names as it is unclear to future readers what the abbreviation / implicit word is.  Perhaps statusCode / returnCode, etc here?. @DHowett-MSFT I didn't see the surrounding context sorry. Probably ok then.. Yeah I think we should transform to NSException where reasonable. WinRT is getting better at only throwing where exceptional but we probably want to try to do the nice thing where possible.. Fair.. fixed.. not sure I want people messing with that one but sure.. https://github.com/Microsoft/angle/issues/107. Again we should split it up correctly and possibly have libobjc2 build as part of the normal build instead of as a checked in binary. \nNothing in this file ensures that its linked. I am making as much of this as simple as possible / not special. It is added to the linker in WinObjC.Language.targets like in all the other packages. . I am trying to standardize our packages as much as possible (to make it easier to use the packaging package). sbclang.props is definitely not standardized and should probably reduced down to the strict core of what is needed to call clang and compile things (imagine a WinObjC.Compiler package that libobjc2 could depend on).\nPerhaps I should remove more things from the default InternalSystemIncludePaths in sbclang.props. . Yeah I decided that we don't need that condition since all that is happening is adding additional search directories. If someone want to manually add libdispatch.lib as an AdditionalLibrary to a static lib, that should probably link successfully. We want to be more conservative with what we add to the linker ourselves but we should let devs do what they want. . I mean it would be nicer to do it better but probably not ever going to happen realistically. . Yes its basically supposed to be a generic one. This is all supposed to be handled by the packaging package. Didn't we have a task to use it in the main build?. lets chat. I don't get your concern.. Its moving the subfolder for SafariServices. Somehow it got moved under security. #Resolved. Other tests use Ignore and True or TRUE. I don't think caps matter but maybe we could be consistent?. its still not the one provided by TAEF. Its our default custom one :-p. @Bviglietta look at the appxmanifest. The vclibs come from an appx dependency. I do need to test on arm though because I'm not sure how that install process looks.. from the appx targets and I messed up the caps but that doesn't matter apparently. Fixed.. The Version and uap:VisualElements/DisplayName elements in the appxManifest. oops just the branch one and with the opposite condition. I'm smart.. no it can be I just didn't feel like doing it as input and wanted to make sure it was there. the important part is making sure no one else is a default lib. I'm going to leave it as is for now.. correct. I will also be removing Iw* soon-ish. probably a good idea. Don't know about need.. Yes it will rename the build. It is currently being called multiple times. \n\nIn reply to: 113063928 . That wasn't a specific goal of this change but yes. After this it will choose to prefer the build number over the timestamp file so it will use a uniform version across solutions\n\nIn reply to: 113305792 . the timestamp file is per solution not per ? whatever it would be for cross-repo, cross-solution builds. If you want it to be smart about how to regenerate the timestamp file on local rebuilds, you can't really do a truly global file.\n\nIn reply to: 113306502 . https://github.com/GitTools/GitVersion/blob/1094a95117488a62e46a3c97e0f2b5d3449acb11/src/GitVersionTask/NugetAssets/buildMultiTargeting/GitVersionTask.targets#L51. It tells GitVersion where to look for the tags and other information. So when this guy is imported in a sample in another repo it would previously use that repo's tags which probably don't line up with ours. This roots it to the main repo as long as the .git directory is there (just being overly cautious).. @bviglietta  Should they be treated as something else? It doesn't make sense for them to be used as RTObject if they aren't actually one right?. @bviglietta good point, I should switch to use new to allocate the buffer instead of malloc.. yeah I guess so.\n\nIn reply to: 113569073 . agreed.\n\nIn reply to: 113573646 . actually this should be malloc still since we hand it off to CF\n\nIn reply to: 113577598 . nope! oops!\n\nIn reply to: 113578228 . What do you mean? It's a private implementation detail. It's like a member variable.. >Project \nI don't think its a bad thing to do but updating the 3rdparty deps looks like a separate change to me? At least would be easier if we need to revert to avoid shoving too much in this review?. I believe this is because its x86 not Win32. You should use $(TargetPlatform) instead. Take a look at some of the other msbuild files in the tree for this.\n\nIn reply to: 141207703 . If you want to be super extra double awesome, you could also factor this out of the per configuration blocks into a global ItemDefinitionGroup\n\nIn reply to: 141459171 . This is doing an ItemGroup transform to make a new list that is the %(FinalOutputPath) property of all the items in BuiltProjectOutputGroupOutput.\nThat said, what is going on here? Why are you adding packaging information here? Are we going to start building this as part of tools.sln instead of as a prebuilt?\n\nIn reply to: 141208433 . I see looks like just dispatch would be a package. What is the value of breaking this out? Is this so we could ship different versions of dispatch / ship them on a different cadence?\n\nIn reply to: 141459971 . also though I'd expect that you'd remove the checked in dispatch binaries if thats what you are intending to do.\n\nIn reply to: 141460824 . >Project \nLooks like most cassowary libs were updated but one in x86 was just deleted. why?. >\nThis almost assuredly wrong. The _ImportLibraryFileNames itemgroup is built up out of every item in the link groups ImportLibrary property. Because of project dependencies and other things getting linked in, there are almost assuredly more than one item in Link so I added Distinct() to ensure we only get one. If you feel you need the FullPath property transformation, i'd add another intermediate item group. >         \nwhy extra indentation?. >PackageFile \nchange this back to None. None items show up in the IDE whereas PackageFile do not. This was done so that the readme was easily visible and editable from within VS.. (same for all packages you did this in)\n\nIn reply to: 141463510 . >PackageFile \nsame.. all of these should be None with IncludeInPackage\n\nIn reply to: 141463658 . ok actually not all. There are two here that help describe how to package this project (ImportedByThisProj.*) that don't belong in the package since they are only used in how to make this pacakge.\n\nIn reply to: 141463797 . >IncludeProjectReferencesInPackage \nThis looks new to me. Does it need to go into winobjc.nuproj.common as well? . >BuiltProjectOutputGroup \nThis change scares me a little. Its probably fine but there were issues in the past where we would link multiple times per flavor (config+platform) causing issues (symbols didn't match binaries) because of the dependencies of packaging. Can you validate that in an AnyCPU build we only link once per flavor?. In general, the idea was that just building a .vcxproj itself would only build the outputs. Building a .nuproj would only package it and its dependencies up. This means that the AddBuiltOutput target should only be run if the build already happened (which it will have because of project dependencies such that the .nuproj is only built after its dependencies, the .vcxprojs, are built).\nAll of the above is totally fine if the BuiltProjectOutputGroup is only used to figure out what the project outputs are and where they will end up, not actually to produce them. \n\nIn reply to: 141685886 . You can double check that this is the case by looking at Microsoft.CppBuild.targets or wherever its defined and checking the dependencies of this target.\n\nIn reply to: 141687222 . >);</Add \nshouldn't be a necessary change.. indenting is wrong. >true \nwould be a little cleaner to maybe change the itemdefinitiongroup for None and only manually specify the ones that shouldn't be in the package. I know these wound up in the package before. Is there custom logic in either ImportedByThisProj.* that needs adjusted for what you've done here?. what is going on here? This is invalid XML. \nHow are you verifying your changes before you push?. +1. I believe prior to this change, The Frameworks build didn't have any tendrils reaching over to tools and just depended on the tools package to keep the layers as separate and clean as possible. It worries me that we need to make this change especially when thinking about applications that need to depend on libdispatch that only use our packages. How will those work? \nI don't quite understand exactly what you are reaching over to include here?\n\nIn reply to: 151585379 . >\\ \ndouble backslash?. >PrebuiltPath \nI don't see this used. Whats the deal?. >tools \nI don't understand why this is looking in tools?. > \nWhat is this trying to do and why?. Why? I don't see you adding code that uses ObjC?. ",
    "bapandyaOutlook": "I have removed Google Analytics, but i do have two more \"TestFlightSDK2.0.0\" and \"ZBarSDK\" so if i am going to remove that two as well my core features will not work. so what you will suggest for the same ?\nAnd is it possible to add my custom lib ? because in my project i also have my own lib there.\n. ",
    "josepharunjoseph": "ok thanks @nicholasgerard-msft . I tried with my old code which have not use CocoaPods. But it give me error 'GoogleMaps/GoogleMaps.h' file  not found. and also I found another error:\nno visible @interface for 'UISlider' declares the selector 'setValue:animated:'\n. ",
    "Nambukarthy": "I did the same for what has explained in #424. it resolved :+1:\n. I have commented those lines where i have used arc4random, so i bypass the issue.\n. Its working fine, Thanks @asimonov-msft \n. @asimonov-msft Initially i got \"Error - LNK2019   unresolved external symbol _index referenced in function __catch$___27-[DetailsMain createPage1:]_block_invoke_2.1740$3 \", the error occurred due to try catch block, so i removed all the try catch block in the particular page (DetailsMain), then i got these error \"Error - LNK2019    unresolved external symbol _index referenced in function _CGSizeMake, Error - LNK2019    unresolved external symbol _index referenced in function _CGPointMake, Error - LNK2019    unresolved external symbol _index referenced in function _CGRectMake \", then i removed all the lines where i have used these CG methods, after removing these i end up with the issue #449, but in our ios code try catch block and CG methods have used in several pages but only i got error in DetailsMain page (Note: DetailsMain is .xib viewcontroller)\n. Thanks for your reply, Please find the file attached \nDetailsMain.zip\n. Its working fine, Thanks @asimonov-msft \n. ",
    "bdrlamb": ":+1:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Might want to use [UIColor blackColor] for more clarity\n\nIn reply to: 64473453 \n. Could you run tools/scripts/clang-format.ps1 on these files?  It will unify tabs/formatting\n. Should multiply by 8 here instead of bitsPerComponent - bytesPerPixel specifies bytes, not number of components\n. ",
    "robinmanuelthiel": "Yes, that was the problem. SDK and source code both were located on a network share. Interesting, that after copying the ported code to a local share it still didn't work. Only after I moved both and reran the VSIMPORTER, it began working...\n. ",
    "tmm1": "This issue still occurs if your source is located on an ExFAT filesystem.. Everytime I try to upload an IPA, it says:\n\nThe file you submitted is not a correctly formatted iOS app package. Please try again with a different IPA.\n\nI generated the IPA using the instructions on the page.\n. I see, thanks for the pointer. My app targets 64-bit iOS devices only. Some of my dependencies are aarch64 only, so it would require considerable effort to create an armv7 ipa.\n. ",
    "alakoring": "I just got this as well. I'm running Parallels, and the error is at\n\\mac\\Home\\Transporter\\6AS\\SixAges\\Source\\App\\ChapterManager.h\nor if I try the Z: drive\nZ:\\Transporter\\6AS\\SixAges\\Source\\App\\ChapterManager.h\nThis is shown as Network Drive, PrlSF file system.. Is this ongoing? My app relies on NSMutableOrderedSet\u2026\nWarning     'unionOrderedSet:' is deprecated: method not yet implemented\nWarning     'removeObject:' is deprecated: method not yet implemented\nWarning     'minusOrderedSet:' is deprecated: method not yet implemented  \n. In my code, I rely on sending messages to nil to work as defined (doing nothing and returning 0). If WinObjC does not behave the same, it would be a bug.. Makes sense, thanks. I somehow managed to get this to work with VMware but cannot remember how. Please give a paragraph of instructions as to how to make the VM \u2014 I think I imported (where previously I was trying to create from scratch) but not sure from what.\nPlease consider that your audience is iOS developers \u2014 I have not touched Visual Studio in over 5 years. (Which is why I really appreciate the idea of these VMs and want to get them to work.). Isn\u2019t it captured by the closures?. Um, the FAQ was about building with a shared folder\u2026\nI converted them all to non-$(Temp) paths and got rid of the warning. But then I happened to copy everything out of the shared folder and get\nWarning MSB8029 The Intermediate directory or Output directory cannot reside under the Temporary directory as it could lead to issues with incremental build.   Six Ages    C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppBuild.targets   400 \nDon't know if I missed that because of #2008 or what, but the warning seems to say: never use $(Temp).. Right, the bug is against the documentation. (Which wasn\u2019t super clear, I think I was trying to say that I was just starting and having a hard time because the directions weren\u2019t correct.)\nIt turns out there are other issues when building with a shared folder, so I am no longer doing it.. I saw that you said to copy & paste the log (https://github.com/Microsoft/WinObjC/wiki/FAQ#how-do-i-get-my-project-log-file-to-help-determining-the-cause-of-an-issue) but 621K seems a bit big\u2026\nSix Ages.log.zip. Aha, I copied everything from a shared folder and no longer get that issue, I get\nError       'asl.h' file not found  CocoaLumberjack-iOS C:\\Users\\User\\Documents\\SixAges\\Libraries\\CocoaLumberjack-master\\Classes\\DDASLLogCapture.m  25  \nwhich is probably merely something that has not been ported.\n(Building from a shared folder would be really good, since I have no idea how to set up Git in Visual Studio and the folder in question is almost 5GB and it would be nice not to duplicate it.). Ah, it was all working fine in Xcode so I assumed it was correct.\nBut I couldn\u2019t get yours to compile (which is the only reason I\u2019m not closing this).\nI ended up going old school,\n```\ndefine kNotExploded UINT32_MAX\n```. I wonder if it's this?\nC:\\Users\\User\\Documents\\SixAges\\Source\\App\\SavedGameDataSource.m(129,66): error : reference to 'OBJC_ASSOCIATION_RETAIN_NONATOMIC' is ambiguous\n  C:\\WinObjC\\include\\objc/runtime.h(896,2) :  note: candidate found by name lookup is '::OBJC_ASSOCIATION_RETAIN_NONATOMIC' (TaskId:15)\n  C:\\WinObjC\\include\\objc/runtime.h(896,2) :  note: candidate found by name lookup is '::OBJC_ASSOCIATION_RETAIN_NONATOMIC' (TaskId:15)\nSix Ages.log.zip\n. Yes, that works (for now, I turned it off only for this source file, since I occasionally do use @import. Thanks for getting me on to the next issue\u2026 (I don\u2019t consider this issue resolved, since I assume the goal is to handle modules.). Right, though I was so happy to finally be able to require iOS 8 and use the more readable one.\nTurns out I need -localizedCaseInsensitiveContainsString: as well.. Oops, I didn't realize that GitHub didn't show the actual class: it's UIVisualEffectView. I don't have a great way to catalog the UIKit classes I use, especially since I don't even know how to exclude this from the build to get to the next error.\n(Oh, at least it's just the project, I was afraid there was some other mapping file created by the converter.)\nSo my next error from Xib2Nib is worse:\nUnable to find class mapping for required object <nil>\n. I wonder if this was an Interface Builder bug?\n<label opaque=\"NO\" userInteractionEnabled=\"NO\" contentMode=\"left\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" text=\"Sacred Time\" lineBreakMode=\"tailTruncation\" baselineAdjustment=\"alignBaselines\" adjustsFontSizeToFit=\"NO\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"ijC-2a-i2C\" customClass=\"SmallCapsLabel\">\n                            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"96.5\" height=\"20.5\"/>\n                            <fontDescription key=\"fontDescription\" type=\"system\" pointSize=\"17\"/>\n                            <color key=\"textColor\" red=\"0.0\" green=\"0.0\" blue=\"0.0\" alpha=\"1\" colorSpace=\"custom\" customColorSpace=\"sRGB\"/>\n                            <nil key=\"highlightedColor\"/>\n                        </label>\nI manually removed any <nil \u2026> lines and proceeded.. Here\u2019s the storyboard\nMain.storyboard.zip\n. It looks like this may be a direction I have to go too \u2014 using WinObjC for its Foundation support, but Unity for the majority of my game.. Any luck? I managed to build a DLL, but I'm not sure how to deploy it (given I want to include resources, and because there are a whole bunch of other DLLs sitting next to it in the \u201cDebug\u201d build folder.. I\u2019m pretty sure I am blocked by #122. The Unity editor is a 64-bit app, so the plugin has to be 64-bit. (I still have no idea if I would have to copy all the other DLLs, or where to put files for the plugin to read.). Oh drat, it was the .zip (that always seems simplest since I don't have to install anything). I now vaguely remember reading that didn't work\u2026. Oh, because https://developer.microsoft.com/en-us/windows/bridges/ios said to get the .zip file\u2026\nI have one or two .mm files, but they don\u2019t use STL.. Yes, I had to unload NugetRestore, otherwise this error blocked me\n\nAfter that, I got HelloUI working (switched samples because it seemed a little simpler).. Darn, I am using std::string so I guess I am using STL. I am blocked by that\u2026\n(BTW, thanks for the prompt and helpful reply, Dustin \u2014 you\u2019ve saved me a lot of frustration.). I don\u2019t see a 64-bit configuration there, and my vsimporter run didn\u2019t make one for my own project. Is this supported?. I stubbed out my limited use of std::string, and eventually managed to get all my code building as a (32-bit) DLL. But, per #2861, the Unity Editor is now 64-bit. (I think I can download a 2 year old version, but that\u2019s not a very good answer for a big project.)\nThis game doesn\u2019t use NSInvocation, and I could probably rewrite my limited use of exceptions. But I guess you\u2019d have to do the whole thing.\nSadly, it looks like I may have to rethink Windows support.. I think the 64-bit Unity editor still needs to have a usable plugin, even though it can target 32-bit. At least that\u2019s how I interpreted its error messages.\nBut at least Unity 5.6 isn\u2019t as old as I feared I would have to try.. I get\nFailed to load 'Assets/Plugins/SAPlugin.dll', expected x64 architecture, but was x86 architecture. You must recompile your plugin for x64 architecture.\nalthough the build settings are for x86. (I assume it\u2019s because I\u2019m not actually building when I use the Editor. But I haven\u2019t used Unity enough to be certain.). ",
    "RG-J": "yep that sounds fair. I've already made that changes; I'm testing it\n. If its okay, I'll go ahead with the implementation.\nR\n. @rajsesh-msft I've pushed in my changes reflecting the discussion above.\n. updated, please take a look.\nR\n. comments are addressed, please take a look.\nR\n. NULL and count 0 addressed. please take a look.\n. @rajsesh-msft  I have re-based  and resubmitted the pull request.\n. @alakoring \nI can implement them.\n\nRJ. Have the changes ready with the tests.\nI'm attempting to push it and dealing with some lfs issues. @rajsesh-msft As per documentation it's true, but if a variable is passed in and becomes null, current implementation crashes and reference platform handles it gracefully.\n. @rajsesh-msft nil issue addressed, please take a look.\n. comments addressed\n. got a fix, Thanks.\n. I am implementing most of the functions, expect to see a review out soon.\n\nRJ. @rajsesh-msft  I'll push my changes soon, just pulled it up to the latest code and setting up VS2017.. @rajesh-msft yeah I can do them. Yep, sorry just reverting that change.\n. did you mean the +// - (NSArray*) array { implementation? \n. I can switch the backing storage to a dictionary.\nbut then only the value gets retained in a dictionary. thus the contains would still be O(N).\nor I can use an map have the key wrapped  in StrongId, but still then it would be (obj,1), so objectAtIndex would not be O(1)\n. usage of set would lead to the order being different. when it removes duplicates, the last encountered duplicate ends up coming at the start of the iterator. so the order is not maintained. \n. sure.\n. yep indeed. operator[] would be might lighter. \n. ops,  yep this is the offset from the location.\n. okay, if I use the map<id, vector<StrongId>::iterator\nthe key is the object and the value is an iterator to the object?\nWouldn't it be simpler to just do this, map<id,NSUInteger> and during the insert call.\n//use the map to ensure the object doesn't exist.\nvector.push_back(obj);\nmap[obj] = (vector.size() -1);\nthis way we are keeping track of the order/index of the object in the map via value.\n. __block? could you elaborate\n. since most of my initial implementation is based around set/array. Switching to NSMutableArray&NSMutableSet would not be much of a change and it would resolve the issue revolving around enumerator. \n. Follow up, ping\n. could you address the comment; I've made regarding switching from vector\nand map to mutable array and set.\nR\nOn 6 May 2016 at 15:35, bbowman notifications@github.com wrote:\n\nIn Frameworks/include/NSOrderedSetInternal.h\nhttps://github.com/Microsoft/WinObjC/pull/482#discussion_r62379870:\n\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+//\n+//************\n+#pragma once\n+\n+#import \n+#import \n+#import \n+#import \n+\n+@interface NSOrderedSet () {\n+@protected\n-    std::vector> setContainer;\n-    std::map>::iterator> mapContainer;\n\nSorry for commenting super late here but what was the rational for using\nstl containers vs building on top of NSArray + NSSet? It seems like the\ngeneral call patterns here may match closer with the NS counterparts and we\ncan worry about optimizing / using a good backing store like stl there\ninstead of re-implementing that \"adapter\" code. Just thinking that may be a\nbit easier in light of ben's concerns on iterators, the equals comparisons,\netc...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/WinObjC/pull/482/files/d3659325425a354010ddbc9b4424d62b1cdd2ede#r62379870\n. yes, when I tried to compile the foundation dll, it started to complain about this class.\n. for the array, it's working correctly with the pass through with the mutability being striped.\nI was going to do the same for the set, but if you are fine with it, I can just return the internal container?\n. I decided to use the initWithArray because user can specify a range and a flag. which might be a subset of the nsorderedset :)\n. The proxy array is a reflection of the NSOrdredSet (the internal array), so if the internal array is no longer alive; our retain will cause the _arrayContainer to out live the actual NSOrderedSet\n. not sure, what you are referring to?\n. I have renamed the functions: assertOrderedSetContent and assertMutableOrderedSetContent; made them static as well \n\n@ \"begs the question why they just aren't sharing the implementation to begin with\"\nWe shouldn't, because we don't want the tests to depend on another test, in case someone decides to add different logic in the future\n. I added it for code organization, given the classes don't really use them anyway for grouping, i removed it.\n. auto formatted is reordering the import order.\n. adding a test to cover null case\n. This was auto formatted \n. ",
    "pittmab": "One thing to note is that the gestureRecognizerShouldBegin: selector should be called before the selector to check if gestures should be recognized simultaneously.  So code will have to be modified in the implementation of UIPanGestureRecognizer (as an example) since it calls the shouldBegin selector within it's touchesMoved implementation.\n. In this case our use case is pretty simple.  We are just using it to collect the events while the gesture is still possible so that we can use this information once the gesture is recognized.\nDo you have any idea on the timeline for the gesture rework?\nThanks,\nBrent\n. We use this protocol to create our own custom text input widget.\nOn Fri, Jun 3, 2016 at 2:26 PM, Arnaud Montembault <notifications@github.com\n\nwrote:\nThis is currently stubbed out. Can you describe how this is impacting your\napplication?\nThanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/521#issuecomment-223655953,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AKDI5B8yyOQ-vdMsDz2_QlYLvMOE6D75ks5qIHHMgaJpZM4Iowh9\n.\n. I was debugging a custom widget we have and it was not being called at\nall.  The default behaviour is to return NO.  Below is the Apple Docs.\n\nReturn Value\nYES if the receiver can become the first responder, NO otherwise.\nDiscussion\nReturns NO by default. If a responder object returns YES from this method,\nit becomes the first responder and can receive touch events and action\nmessages. Subclasses must override this method to be able to become first\nresponder.\nOn Fri, Jun 3, 2016 at 3:17 PM, Arnaud Montembault <notifications@github.com\n\nwrote:\nCan you explain what you're using this for in your app?\nThanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/522#issuecomment-223668958,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AKDI5A-fuPm38af_N8WOZAW8yCFjcJmuks5qIH3igaJpZM4Iowup\n.\n. It is a custom subclass of UIView.  It provides text editing.\n\nOn Mon, Jun 6, 2016 at 2:46 PM, Jared notifications@github.com wrote:\n\nCan you please be more specific? What type of custom widget? Is it a\ncustom UIView, a custom UIControl, a custom UITextField, etc?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/WinObjC/issues/522#issuecomment-224050693,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AKDI5JlRKlDIQ0eCTEGoyyVbJipX16iSks5qJGr3gaJpZM4Iowup\n.\n. Accidentally submitted a pull request off of master not develop.  Closing this one and will submit a new one.\n. @rajsesh-msft made the change to avoid the include and use the forward declare.\n. @jaredhms The issue I found happened after a successful pinch gesture was recognized.  The next interaction was locked to a pinch gesture since the reset method was not implemented in the pinch gesture.  The commit you referenced only cleans up data on touchesCancelled, did it address this issue where the Pinch Gesture needs to be reset?\n. We do not need a fix for this immediately.  If it is going to be fixed by the CT-DW branch then we can keep the change locally and discard it once that branch makes it into master.\n. Is there a way to start the app and force it to be non-retina via a simulator?  We are trying to find a non retina device to set this up on again.  Basically, the images did not load when going down the non retina code path.  @mnithish Can you load images on a non-retina device?\n. Adding a debug log when debug_all is set to true in UIScrollView.\noutput.txt\n. Updated to use spaces.\n. Updated the code to reflect your preferences.  Thanks\n. Hi Raj,\n\nI originally tried to forward declare the struct but couldn't get it to work given how the original CVTimeStamp is declared.\ntypedef struct {\n    uint32_t version;\n    int32_t videoTimeScale;\n    int64_t videoTime;\n    uint64_t hostTime;\n    double rateScalar;\n    int64_t videoRefreshPeriod;\n    CVSMPTETime smpteTime;\n    uint64_t flags;\n    uint64_t reserved;\n} CVTimeStamp;\nDo you know how to forward declare it?\nThanks,\nBrent\n. @aballway I have updated the code to reflect your comments.  Thanks\n. @rajsesh-msft Converted the tab to spaces.  Thanks\n. @aballway I am guessing that you would prefer that we use a reverseObjectEnumerator to traverse in reverse order.  I have noticed that the code in this file uses a mixture of old for counting loops and for in loops.  Should all new code be for in when it can?  I initially used the style I found in the existing code.\n. @aballway I agree that for in is quicker to read so I will make the changes.  Just curious as to what your team prefers given the mix in this file.  I will make the changes.\n. @jaredhms The original code that sets the currentTranslation to 0 does a simultaneous assignment.  Should we change both at the same time to be consistent?\n. @jaredhms I just ran it and it doesn't indicate that any changes are necessary.  Is there something that I am missing?  Thanks\n. I edited the file and ran the pre-commit check.  The output was Performing pre-commit validation...  Commit approved.\n. Yes.  I have to run clang-format.  Thanks\n. @jaredhms Added and other changes have been made.  Please take a look.\n. @jaredhms Changes have been made.\n. So I previously wrote some simple tests to see what happens on iOS with the gesture lists.  From what I can tell the order in the list gives the priority.  The gesture delegates and other callbacks (e.g. simultaneous recognizing, prevention, etc) help control the recognition.  I haven't implemented the full delegate/coordination api across all gestures.  We do not use all of them, do you have a full test suite?  I think this implementation is a potential step in the right direction since we rely on creating our own gestures.  Any thoughts on next steps?\n. @jaredhms Fixed and the original debugging code put back.  Thanks\n. ",
    "alejandrovelozb": "Thank you! But now I have another issue there's another lib \n1>LINK : fatal error LNK1181: cannot open input file 'libstdc++.lib'\nThey gave me this project and its kind of big and have a lot of libs, what would you recommend, try to find libs that would work as the old ones, or starting from scratch?\n. ",
    "bviglietta": "\n@Status Stub\n\nInteroperable\n\nRefers to: Frameworks/Foundation/NSMutableOrderedSet.mm:41 in d365932. \n. > - (void)insertObject:(ObjectType)object atIndex:(NSUInteger)idx STUB_METHOD;\nDelete if the method is implemented.\n\nRefers to: include/Foundation/NSMutableOrderedSet.h:37 in d365932. \n. >  @Status Stub\nInteroperable\n\nRefers to: Frameworks/Foundation/NSMutableOrderedSet.mm:42 in 6294a35. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :clock1:\n. > ```\n\nNSDecimal ret = {[self doubleValue] };\n```\n\nThis doesn't make much sense.\n\nRefers to: Frameworks/Foundation/NSNumber.mm:523 in a31027d. \n. :shipit:\n. :shipit:\n. @pradipd is added to the review. #Closed\n. @pradipd is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. >             NSLayoutConstraint* constraint = [(id)constraints objectAtIndex:i];\nThis cast was weird before and is super weird now.\n(The if statement is also curious.) #Pending\n\nRefers to: Frameworks/UIKit/NSLayoutConstraint.mm:354 in 46331d9. . :shipit:. :shipit:. The\u00a0test output is CoreText.UnitTests.exe.txt.. @bbowman is added to the review. #Closed. @GreatKeeper is added to the review. #Closed. Oh, good point. Yes, we'll need those signed ret binaries whenever you've got them.\n\nIn reply to: 272340503 . Most of UIKit and a couple of other frameworks have been transitioned to C++/WinRT.. There's a rudimentary UI for the Social kit now. Most of the back-end network traffic still isn't hooked up yet.. :shipit:. @jaredhms is added to the review. #Closed. I know a lot of this is unfinished. I wanted to build this feature incrementally instead of working on it in private for months before disgorging it all at once, fully formed.\nA clear message that I take from the comments so far is that I should make a brighter distinction in the code between things that are supposed to be finished and working and things that are intentionally unfinished. I will work on that for the next iteration. #Resolved. @pradipd is added to the review. #Closed. Here are some preliminary numbers taken from the HelloUI sample app:\n\n\nAppX directory size reduced by 8.9 MB\n\n\nPeak working set reduced from 66.7 MB to 60.5 MB, a reduction of 9.2%\n\n\nApp startup time (process launch to window focus) reduced from 286ms to 250ms, a reduction of 12.5%\n\n\nBear in mind that there's more work to be done here. I've mostly just removed the use of XAML projections, but there are others we can eliminate as well.\nAlso note that there's currently a bug in our packaging that causes all of the projection DLLs to be copied into the AppX package, regardless of whether they're used. That means that, until that bug is fixed, you won't see a reduction in AppX package size from this change. You will see the runtime effects, though.\n\nIn reply to: 290803157 . All our frameworks now use C++/WinRT exclusively instead of ObjCUWP projections.. Facebook now works as well on ARM as it does on x86.. @oliversa-msft is added to the review. #Closed. The changes in UIButtonTests.mm are included because it appears that the new compiler exposed a test bug that wasn't previously causing the test to fail. #Closed. :shipit:. @ms-jihua is added to the review. #Closed. @memontic-ms is added to the review. #Closed. @aballway is added to the review. #Closed. @msft-Jeyaram is added to the review. #Closed. @aballway is added to the review. #Closed. The title refers to a fix in RTHelpers.h, but there's no change to RTHelpers.h in this pull request? #Closed. Oh wait, I get it. These are projection binaries that have been rebuilt with a previous fix to RTHelpers.h?\n\nIn reply to: 294205085 . Thanks, I see it now.\n\nIn reply to: 294206399 . @jaredhms is added to the review. #Closed. In WinRT there's no distinction between an empty string and a null string. This makes it unclear how to translate results to Objective-C, where there's a mild distinction between empty strings and null strings.\nFor what it's worth, I think returning @\"\" instead of nil is better, more closely matching the semantics of the underlying WinRT result.. @bbowman is added to the review. #Closed. >     _enumerateWithBlock(enumerator, options, ^(id key, BOOL* stop) {\nLooks like there are a bunch of other places where concurrent enumeration can cause problems.\n\nRefers to: Frameworks/Foundation/NSArray.mm:767 in 5e4f98c. . >     _enumerateWithBlock(enumerator, options, ^(id key, BOOL* stop) {\nNSIndexSet -indexesInRange:passingTest: would be another.\n\nIn reply to: 294629355 \n\nRefers to: Frameworks/Foundation/NSArray.mm:767 in 5e4f98c. . :shipit:. :shipit:. @yiyang-msft is added to the review. #Closed. Dustin, I'm not sure I understand all of your points here. We already do implement these activations as application launch with options: they show up as entries inside the options dictionary that the app delegate receives in application:didFinishLaunchingWithOptions:.\nAlso, why is it burdensome to use the projection classes? I don't see how WMSSpeechRecognitionResult is more difficult to use than NSObject<SpeechRecognitionResultProtocolThatIJustInvented>.\nI'll grant that the rt_dynamic_cast requirement is a new thing that this change adds, but I think it's pretty minor.. If people really don't like the typeless RTObjects, I'm entirely open to introducing some new classes -- SpeechActivation and FileActivation, let's say -- that wrap the underlying WinRT objects.. > We're not, though [implementing these as application launch options].\nWe are, really! The methods you pointed out that we added to the application delegate are useful if an activation comes in after the app is already running.. In the latest commit, I've switched back to using the projection types, so this is no longer a breaking change. The only difference between this and the original code is that we now load the projection classes dynamically, so there's no link-time dependency between UIKit and the projections.\n(I even switched protocol activation back to WFUri from NSURL, even though NSURL was arguably a strict improvement.). > - (BOOL)scanInteger:(int*)valuep {\nNSInteger\n\nRefers to: Frameworks/Foundation/NSScanner.mm:137 in 658f544. . :shipit:. Could conceivably be the same issue as #2618, which I recently introduced and then fixed.. Then I guess I haven't seen this before. I can take a look at it.. :shipit:. :shipit:. This is just going to compare pointers, isn't it? Not Objective-C object equality?\n. It shouldn't be necessary to duplicate the set into an array.\nMaybe initWithSet, initWithOrderedSet, and initWithArray should all delegate to a common initializer that takes NSEnumerator.\n. This is just going to compare pointers, isn't it? Not Objective-C object equality?\n. It shouldn't be necessary to duplicate the set into an array.\nMaybe initWithSet, initWithOrderedSet, and initWithArray should all delegate to a common initializer that takes NSEnumerator.\n. This will invalidate the iterators in mapContainer.\n. You can simplify this some:\nreturn [NSArray arrayWithObjects:setContainer.data() count:setContainer.size()];\nAnd then you don't have to copy the array at the end.\n. Similarly, you can use NSSet setWithObjects:count: here.\n. Is it legal to call this on a different NSArray object every time we're invoked? Can the state parameter be migrated from one object to another? I don't know the answer.\n. You must override copyWithZone, even if it's just to stub it out.\n. The logic is backwards here: you want to check if self is a subset of other.\n. Backwards logic here too.\n. Looks like some debugging code slipped through.\n. Should retain-autorelease this object.\n. A combination of an array (for indexing) and a set (for membership checks) seems fine to me. It's not optimal, because you have to keep two data structures with duplicated data, and make sure they stay in sync, but I don't object too much.\nNSOrderedSet seems like an odd data structure to me. To get sub-linear membership checks, where the objects are not necessarily comparable, we're probably talking about a hash table. A hash table doesn't usually provide an ordering, but it could, if you modified it so that the entries in the hash table are all joined in a big linked list. That would give you fast membership checks and an ordered enumeration, but slow lookup of an element by index. I don't really know if that's what Apple had in mind.\n\nIn reply to: 62575598 \n. It looks like this would work better with 5.\n. copyWithZone should probably return an immutable object.\n. Why @package?\n. Does this need to be exported?\n. This retains the set twice, once because of alloc and once in StrongId's assignment operator. You should use _setContainer.attach(...) instead.\n. This doesn't satisfy the contract for this method. Subsequent modifications to the NSOrderedSet are supposed to be reflected in the returned NSSet.\n. Oh, I see. Because the field is accessed in _NSProxyOrderedSetArray.\n\nIn reply to: 63977056 \n. You should retain this array, and release it in dealloc.\nOr use StrongId for the _array field.\n. You can't release the object yet, or it might be deallocated before you insert it into the set.\n. Probably better to leave the method as a stub.\nIf we do push this code, we must at least mark the method @Caveat with a note explaining how it differs from the reference implementation.\n\nIn reply to: 64046573 \n. What you describe seems OK to me.\nThe problem I want to avoid is with code like this:\nNSOrderedSet* oset = [NSOrderedSet new];\nNSArray* array = [oset array];\n[oset release];\n[array count];  // Crash accessing deallocated object\n\nIn reply to: 64047960 \n. What was the error? I can't think of a reason why it would be necessary to export this class.\n\nIn reply to: 64045867 \n. The reference platform actually does return an immutable container.\n\nIn reply to: 64078518 \n. objects can be NULL if count is 0.\n(Also prefer NULL or nullptr for non-ObjC pointers.)\n. This can be simplified somewhat:\nif (!CGRectContainsPoint(boundingBox, point))\n. The Cairo library that CoreGraphics is built on already has a function to do this test: cairo_in_fill. It might be more natural, rather than doing the fill and the color test, to add something like _CGContextIsPointInPath, which itself calls through to cairo_in_fill.\n. Oh, I agree absolutely that we should stick to Apple's API on the surface. I don't propose changing the interface to CGPathContainsPoint. What I was proposing was that, after we create the CGContext here, we delegate the rest of the logic to the CGContext object (via my hypothetical _CGContextIsPointInPath function). Since our CGContext objects are implemented on top of Cairo, the CGContext object could then turn around and call cairo_in_fill.\nI doubt it would make a huge difference one way or the other, but if there's already a dedicated function for this, I figure it's probably the best route.\n\nIn reply to: 68843448 \n. We'd want to mimic iOS's behavior, but I'm surprised if cairo_fill and cairo_in_fill don't compute the same fill region. Is there a current transformation matrix that you need to apply before calling cairo_in_fill?\n\nIn reply to: 69068519 \n. The expressions in a struct initialization are evaluated in indeterminate order. There's no telling whether the increment will happen before or after the x-value is computed. #Closed\n. Oops, looks like the rules changed in C++11 so that the ordering is now well-defined. Feel free to ignore me...\n\nIn reply to: 70360966 \n. > // Wait until async method completes. \nThis isn't quite thread-safe. Just because completed has been set to YES doesn't mean that result has been set.\nJust swapping the order in which completed and result are set won't necessarily fix it. You should probably wait on some kind of synchronization object here. #Pending\n. > DEFINE_GUID \nIs this GUID available from some Windows header, rather than redefining it ourselves?\n. >  \nDo we need a vsimporter change to insert this into app manifests if they're using the AddressBook framework?\n. > In this case, the caller is responsible to release error. \nAre you sure? Error out-parameters are usually autoreleased. #WontFix\n. > completion(accessGranted, error); \nMaybe for compatibility with the reference platform we should dispatch this async. #Pending\n. Create rule in this case applies to the return value, but not to out-parameters.\n\nIn reply to: 73217170 \n. > @catch (NSException* e) \nHave you validated this test on ARM? I don't think we're able to catch exceptions there. #Resolved\n. > rangeOfUnit:NSCalendarUnitWeekOfMonth inUnit:NSCalendarUnitYear \nYou're asking for the range within a year, not the range within a month. It sounds like OS X is doing the right thing by returning 6.\n. This behavior on OSX is not limited to leap days. It always trims the smaller units when it finds an exact match. The documentation is a little ambiguous, but I think this is the intended behavior, and we should probably match it.\n. > case kCFCalendarUnitWeekOfYear: \nBeware fallthrough. #Resolved\n. > Asking for the range of WeekOfMonth in Year always returns 6. \nWhy do we need a special case here? The logic in calculate: looks sound, as far as I can tell. #Pending\n. OK, but that sounds like a bug in the calculate logic, or maybe in ICU underneath it. Do you know why you were getting that result? I would prefer to fix the error at the source if possible.\n\nIn reply to: 74342094 \n. For example, maybe ucal_add doesn't do what we want when told to add one WeekOfMonth to a date? If that's the case, maybe calculate should set fieldToAdd to Week instead of WeekOfMonth. Just speculating.\n\nIn reply to: 74354002 \n. I think the question makes sense: it's asking what is the range of WeekOfMonth values within a year. Normally (always?) it can range from 1 to 6.\n\nIn reply to: 74356593 \n. OK, I see the problem here. The calculate logic works by setting the starting date to the first moment in the larger unit, then advancing in increments of the smaller unit to find the min and max values. The problem is that this may not work correctly when the smaller unit doesn't divide the larger unit evenly.\nFor example, try getting the range of WeekOfMonth in Month for July 2016. The answer should be [1..6], but you will actually get [1..5].\nThis also explains why you sometimes get the wrong answer when asking for the range of WeekOfMonth in Year. It's not returning the number of weeks in the current month; it's advancing from Jan 1 week by week through the year, querying the WeekOfMonth each time.\nThe logic in calculate should be fixed.\n\nIn reply to: 74359393 \n. I opened bug 8463791 for this.\nBut I don't think we should put in the workaround that you have now for WeekOfMonth in Year. It's insufficient and not the right way to address the problem.\n\nIn reply to: 74468177 \n. These two conditions are backwards.\n. > NSDecimal zero \nThis is creating a variable called \"zero\" in the scope of wherever this macro is used. That means, for instance, that you can't use the macro twice in the same function.\n. > NSDecimalSubtract(result, leftOperand, rightOperand, roundingMode) \nThe caller has asked for x+y and you're instead returning x-y.\n. > decimal \nIf you put the macro argument in parentheses here, you wouldn't have to use double parentheses when calling the macro, as you do later on.\n. > number->_length \nLENGTH(number)\n. destination = source;   ?\n. > _DecimalOperand \nNaming: these are operations, not operands.\n. > if ([objAddr isKindOfClass:[NSDecimalNumber class]]) { \nAn NSDecimalNumber should compare equal to other NSNumbers with the same value, even if they aren't NSDecimalNumbers.\n. > min() \nShould be max(). The minimum unsigned long long value is zero. #Resolved\n. > NSDecimal* _decimal; \nWhy a pointer instead of storing the decimal by value?\n. > std::vector digits; \nYou don't need a separate vector for this. Store the digits directly into decimal._mantissa, then reverse them in place.\n. > -num \nIf I do initWithInt:INT_MIN, this will overflow and produce undefined behavior. Depending on how the compiler feels, it might do what you want and it might not.\n. > _Addition \nThis is a noun and the other enum values are verbs.\n. > // We pretty much rounded it off fully. \nNot necessarily. If we round 7 to a scale of -1 with default rounding, it should round up to 10, not down to 0.\n. > _roundUp \n_roundUp(999) == 0 ?\n. > would of \nThis is the worst've all possible errors.\n. > shiffting \nshifting\n. > decimal._isNegative = flag; \nIt's unclear whether you intend to support negative zero as a value. This initializer will allow you to create it, but other arithmetic functions like NSDecimalCompare will not handle it correctly.\n. > _length:4 \nHow are you going to represent values up to 38 in a 4-bit field?\n. Conditional VFP instructions are deprecated as of ARMv8 and not officially supported on Windows. You should probably prefer to use a branch here. #Resolved\n. > LDR pc, [ip, r3, lsl #2] \nMinor optimization: your jump table will be a quarter the size if you use TBB [ip, r3] here. #Resolved\n. > |_CallFrameInternal_VFP| \nDo you expect to be able to propagate exceptions thrown by invocation targets? If so, I expect we'll have to generate .xdata for these functions. #WontFix\n. > Aggregates of 1-4 single- or double-precision values are allocated to available floating-point registers. \nThis also applies to aggregates of vector types, where a single vector can be up to 128 bits long and may contain either floating-point or integer data. I don't know if we're intending to support those types now. #Resolved\n. Yes, vectors are passed in floating-point registers + the stack regardless of the type of data they contain.\n\nIn reply to: 76461957 \n. Normally, yes, you use those macros: NESTED_ENTRY, NESTED_END, etc., and they take care of emitting the pdata and xdata into the image. With the stack pointer shenanigans going on here, though, it might not be so simple. Without investigating more deeply, I'm not sure exactly what has to be done.\n\nIn reply to: 76460282 \n. > INT32 \nINT64 #Resolved\n. Minor: the code might be a little clearer with text labels instead of numeric labels. JUMPTABLE, CASE_INT32, etc. #ByDesign\n. > MOV \nPrefer MOVS. Smaller encoding, strictly better than MOV. #Resolved\n. > ;;; This code must match the layout of _NSInvocation_ForwardingBridge.prolog.xdata below. \nIs it possible to use the macros from kxarm.h here instead of building your own xdata? PROLOG_PUSH, etc.? #Resolved\n. > VSTMDB sp! \nThis is fine, but VPUSH probably makes the intent clearer. #Resolved\n. > LTORG \nWhat's this for? Seems harmless, but I don't see any uses of literal pools. #Resolved\n. No, if it's null, this will be a no-op.\n\nIn reply to: 83332466 \n. True, but the UIWebView docs specify very sternly that the delegate field must be reset to nil before deallocating the UIWebView, so maybe I should just comply?\nIn looking at this question, I did discover that UIWebView has a retain cycle involving its callbacks, so that's something that needs to be fixed.\n\nIn reply to: 83337136 \n. I could, but I feel the code would be less clear that way.\n\nIn reply to: 83669085 \n. [UIWebView issue addressed in second commit.]\n\nIn reply to: 83342864 \n. First question: no, openWithAppDelegate should be set to YES if either condition is true.\nSecond question: That's a good point. We can skip the call to appCanOpenURL if openWithAppDelegate is already YES.\n\nIn reply to: 83742017 \n. That would require me to understand why it's necessary...\n\nIn reply to: 88144728 \n. Sounds reasonable.\n\nIn reply to: 88144677 \n. Maybe, but it could also look weird if the controls behind the popup are visible but not interactive. Maybe a dimming effect would be appropriate?\nIn any event, it's moot for the moment, since all we're using right now is the Safari view controller, which doesn't do animations and is completely opaque. For now I'll leave this as is.\n\nIn reply to: 88291699 \n. >TODO: File bug \nHave you filed this bug? #Pending. >[priv->gestures release]; \ngestures is a StrongId now. #Resolved. Should these be StrongId? Lifetime management doesn't look right now. #Resolved. >NSRange tempRange = NSMakeRange(NSNotFound, 0); \nThis line can be removed. #Pending. >CFArrayCreateCopy \nIf the caller owns a ref, shouldn't the name of this function be changed to indicate that?\nIt doesn't look like the caller in _UTTypeCreatePreferredIdentifierForTag is aware of this. #Resolved. This is unused and shadowed in the mainQueue function. #Resolved. >autorelease \nShould this really be released? #WontFix. >and \nI'm on the edge of my seat. #Resolved. Although that could change the behavior because of short circuiting.\n\nIn reply to: 95450897 . You're right, I overlooked the StrongId. Never mind...\n\nIn reply to: 95456936 . No, we plan to support other privacy settings. I haven't built the UI to select them, though.\n\nIn reply to: 107996496 . No.\n\nIn reply to: 107996042 . Hang on, let me search the web for \"XAML property binding\"...\nOK, I see what you mean. Fair point on the TextBlocks and such.\nI'm not sure I see the harm in hard-coding the titles of the Post and Cancel buttons, though. Those won't ever change, so I don't see a need to complicate things.\n\nIn reply to: 107995907 . We probably won't support sharing more than one link at a time, since the Facebook API doesn't provide a way to do that, at least as far as I can see. I should add checks to prevent that from happening.\nSharing multiple images at once is possible, so I should fix that. The images should appear in a horizontal row, to match the reference platform.\n\nIn reply to: 107997438 . It's not a WinRT object. This interface is just used to bridge the gap between the C++/CX code in Social.Xaml.dll and the Objective-C++ code in Social.dll.\nThe only reason I made it a COM object at all is because I wanted its lifetime semantics to be easily understood.\n\nIn reply to: 107999932 . Yeah, and we should really be returning HRESULTs here.\n\nIn reply to: 107999474 . Multiple images will be allowed. Maybe multiple links, but maybe not. I'll definitely have to change the images to a list.\n\nIn reply to: 107999686 . Yes.\n\nIn reply to: 108001139 . It turns out that data bindings seem not to work in WinObjC for some reason. We'll need to figure that out, but for the moment we'll have to live without them here.\n\nIn reply to: 107999531 . Or maybe yes? I tried letting the Canvas auto-size itself, but then it remains zero-size no matter what you put in it.\n\nIn reply to: 107996862 . Async results are TODO\n\nIn reply to: 107998705 . TODO\n\nIn reply to: 107997002 . Clients are free to use C++/WinRT if they want to, but making it easier for them is not currently one of our goals.\n. That is a good question, because it's not very obvious.\nC++/WinRT objects have a default constructor that instantiates the object. It is not like ComPtr or other smart types where the default constructor leaves the object uncreated.\nC++/WinRT also have a constructor that takes nullptr_t that leaves the object initialized to null, but fields in Objective-C++ can only be initialized with the default constructor, so the nullptr_t constructor is not available. Therefore I've created TrivialDefaultConstructor<> that wraps a C++/WinRT object and forwards the default constructor to the nullptr_t constructor.. >WINRT_EXPORT \nThis macro conflicts with one used in the C++/WinRT headers, so I renamed ours.. >Bug in XAML TextBox \n\nBug in XAML TextBox \n\nNewer versions of the C++/WinRT headers have been changed to swallow these exceptions. Once we pick up those headers, we can remove this try/catch block. #Resolved. This test has always been broken. These changes have improved the test so that it is broken and failing instead of broken and passing. I'll open a separate issue to fix the test, and then we can re-enable it.. There's a compiler bug tracking this problem. Once the compiler is fixed, we can remove this workaround.. We can't reference WXFrameworkElement directly if we don't want UIKit to have a dependency on the projection libraries. Instead we'll return a generic RTObject*.\nNotice that this is a breaking change for clients. Not only is the return type different, but you cannot downcast from RTObject to WXFrameworkElement. The returned object is genuinely not a WXFrameworkElement. To get from the RTObject to WXFrameworkElement, clients will have to do a rt_dynamic_cast.. Code inside the frameworks should not call xamlElement to get the underlying XAML element. Instead, it should call _xamlElementInternal, declared in UIViewInternal.h.\nThe xamlElement property is intended for use only by application code. It will work inside the frameworks, but it's less efficient and harder to use.. The problem is that the C++/WinRT headers generate these warnings. In a near-future release those headers will be updated not to produce those warnings, but that fix is only going to work for VC++ and not for clang. They do support clang, but it's a second-class citizen.\nOne possible solution is to disable these warnings only around the C++/WinRT header inclusions. That would be cumbersome, except they're all already wrapped in COMIncludes.h/COMIncludes_End.h, so maybe an easy fix is to disable and re-enable warnings in those headers.\n\nIn reply to: 109239222 . Linker error.\n\nIn reply to: 109241603 . Because I wrote this before I invented to_insp. Will fix...\n\nIn reply to: 109241662 . Yes, as() throws on failure.\n\nIn reply to: 109241845 . createWith returns nil on failure.\nI would argue that this provides a less silent failure than before. If this fails, the next thing that happens will be an access violation. It's not like Objective-C, where a nil pointer can go unnoticed for a long time.\n\nIn reply to: 109241704 . Sure, will do.\n\nIn reply to: 109242868 . Actually, now that I think about it, this would be a compiler error, because it's trying to return an int instead of an IReference. But regardless, a static_assert would be more explicit.\n\nIn reply to: 109244077 . Maybe. Using try_as just preserves the existing logic.\n\nIn reply to: 109244995 . It is extremely necessary because yes, the default constructor actually creates an object.\n... usually. I'm not sure that UIElement is actually activatable, so I'm not sure what happens there.\nIn any case, you usually want to say \"winrt::SomeType myObj = nullptr;\" rather than \"winrt::SomeType myObj;\"\n\nIn reply to: 109245698 . No good reason. At one point I had changed the xamlElement to a C++/WinRT type, which is why I did this, but then I changed it again to RTObject*.\n\nIn reply to: 109245834 . That's a good catch. Yeah, we'll need to do that.\n\nIn reply to: 109247283 . >RTObject* \n\nRTObject* \n\nThis is a breaking change for our clients. Not only has the type of this property changed, but you can't downcast it to WXFrameworkElement or WXCTextField or whatever, because the object returned is genuinely not one of those things. You also can't just go ahead and invoke WXFrameworkElement methods on the object. You now have to use rt_dynamic_cast to do a downcast first. #Resolved. We've been presenting projections as the way for our clients to interact with WinRT. I wouldn't want to muddy the waters and start talking about C++/WinRT as an alternative without a very deliberate decision from team leads.\n\nIn reply to: 109248642 . >other \nThis should be std::forward(other). Aha, a better solution: clang will not generate warnings from headers that it considers \"system\" headers. So if we add --system-header-prefix=winrt/ to the command line, we get no more warnings from the C++/WinRT headers.\n\nIn reply to: 109240292 . C++/WinRT does provide default constructors, but they have behavior that can be surprising. The default constructor will instantiate the underlying object, unlike other smart pointer types like ComPtr or unique_ptr. This wrapper is provided for those cases where you need to have a default constructor that doesn't  instantiate the underlying object.\n\nIn reply to: 109485708 . Actually it looks like the C++/WinRT headers from NuGet have this fix, so I've removed the try/catch entirely.\n\nIn reply to: 109244741 . I've added objcwinrt::callback, which wraps every callback in an autorelease pool. Try not to forget to use it!\n\nIn reply to: 109247664 . Good catch. Capturing by reference is a mistake here.. This use of projections is a merge error.. >foundNSException \nDoes this work if someone @throws something that doesn't derive from NSException? #ByDesign. Upon closer inspection, it looks like NSUncaughtExceptionHandler is only defined to work for thrown NSExceptions, so I guess we don't want to handle the other cases.\n\nIn reply to: 110259226 . Does __block tunnel through multiple levels of blocks? I tried that first and the test was still crashing, so I assumed that it didn't, but I don't know for sure how it's supposed to work.. I've verified that things should work as you describe. I believe the reason it works with a pointer and not with a __block variable is because of a compiler bug, which I'll follow up on.. > \nThis change is accidental. I'll remove it.. I believe I need @dynamic to suppress auto-generation of the field backing the property, don't I?. I would be happy enough to let autosynthesis do its thing, except that in this case I want the property and the synthesized field to have different types.. >XXXX \nWill actually file an issue and update this comment before merging. #Pending. ARC is enabled here. #ByDesign. Normally yes, but GetTickCount64 is declared as returning ULONGLONG, so I think it's best to conform.\n\nIn reply to: 111271794 . When ARC is enabled (as it is here), objects captured by lambdas should be retained.\n\nIn reply to: 111273056 . I agree that use of WinRT is not really required here.\nI'm not sure I understand the concern about the system clock, though. Are you suggesting that the interval calculation would be wrong if the user moves, e.g., into a different time zone while the system is running?. The timestamps are offsets from the Windows epoch, which is fixed, so I'd be surprised if localization affected them at all.\nI haven't done any serious tests on this, though. I just translated the code as-is.. Can't be const, because mktime modifies the tm struct.. That's intentional. Geopoint has a constructor that takes nullptr_t. #Resolved. \"dataBytes\" is an exceedingly bad name for a count of characters.. It looks like, when the source string is empty, we're creating a length-1 HSTRING containing a single embedded NUL character. That doesn't seem like the right behavior, since that's not the same as an empty string. In particular, WindowsIsStringEmpty will return FALSE for such a string, and WindowsGetStringLen will return 1.\nI see the comment that says we're trying to avoid having WindowsCreateString return a null pointer for empty strings. But why are we trying to avoid that?. The comment dated from a time when the projections swallowed errors instead of throwing them. I removed it because it was out of date.\nC++/WinRT handles errors in pretty much the same way that our projections do: by throwing them. Most WinRT APIs should not throw under normal circumstances, so I wouldn't advocate putting catch blocks everywhere. Maybe we should at least translate the C++ exceptions to Objective-C exceptions?. I put in a feature request to the C++/WinRT team to provide a facility for custom error handling.. >Fix up AdditionalLibraryDirectories \nComment is out of date.. >_ImportLibsFromPackage \nSeems like a bit of a misnomer. This will pick up vcclang.lib, among other things, which isn't an import library.. >these these \nthese. Yes, it's to disambiguate between global Collections and Windows::Foundation::Collections.\n\nIn reply to: 112285489 . No, ToString is also used.\n\nIn reply to: 112285907 . Seems like a good idea.\n\nIn reply to: 112307470 . Maybe so. If we do that, then we should also, for consistency, put an NSNull into the launchOptions dictionary.\n\nIn reply to: 112307083 . >This target adds reference to the Microsoft.UniversalCRT.Debug Extension SDK \nI see that this will find ucrtbased.dll, but what about all the other CRT DLLs? Previously they were checked in to ContainerCRTDeps, and now where do they come from?. Make sure to try the tests on ARM. Devices typically don't have the debug CRT installed to system32.\n\nIn reply to: 112344528 . >LONG_MAX \nNSIntegerMax, etc.. >(char*)[_string UTF8String] + startLocation \nThis math won't work out well if there are non-ASCII characters in the string.. >NSASCIIStringEncoding \nIn some locales the decimal separator won't be representable as an ASCII character.. >%S/%hs \nIs there an objection to %S? That's standard.\nAnd no objection to %hs, which is a Microsoft extension?. >NSTraceVerbose(TAG, p.vertexShader); \nYikes. I'm surprised that this compiled.. >(long) \nIf we're being pedantic (and we are), then this is unsigned long, no?. Well, they really are RTObjects, after we convert them to RTObjects. But you're right that there isn't a lot of reason to do this. One thing that I'd like to do in the near future is eliminate any continued use of RTObject (primarily in the xamlElement property on UIViews) and instead dynamically load the appropriately-typed projection classes as they're needed.. >std::unique_ptr \nThis isn't exactly equivalent. unique_iw used IwFree to deallocate memory, while unique_ptr uses operator delete.\nWe should make sure the alloc and dealloc methods match.\n(Also, the right type would be unique_ptr.). >[((id)buf)retain]; \nI guess clang-format thinks we're casting a variable called retain here?. >_strdup \nUnrelated to change, but it's unclear why it's necessary to duplicate this string at all.. >sizeof(wchar_t) * \nDon't need this anymore.. >std::String \nIs there really a class called std::String?. >window _convertPoint \nThis code may look strange. Why are we calling a method on a window that we just declared is not relevant? Well, you see, the convertPoint method actually makes no sense. #Resolved. UIView's point conversion method doesn't really work here because there's no UIView that we're converting _from.\n\nIn reply to: 113980192 . I think so, yes.\n\nIn reply to: 113999848 . You can mark a lambda as mutable.\n[x] () mutable { x = 3; }\n\nIn reply to: 116584355 . ",
    "ms-jihua": ":shipit:\n. It seems likely? You can probably confirm it by breaking on the range function during the repro.\n. :shipit:\n. It does\n\nIn reply to: 233714467 \n. I'm guessing it's because of \"Sorry, we could not display the entire diff because too many files (8,133) changed.\"\n\nIn reply to: 233715196 \n. > TEST(NSDictionary, keysSortedByValueUsingComparator) {\nnit: uppercase for these? #Closed\n\nRefers to: tests/unittests/Foundation/NSDictionaryTests.mm:51 in c03e3a2. \n. > TEST(NSDictionary, keysSortedByValueUsingComparator) {\nelsewhere too\n\nIn reply to: 235348081 \n\nRefers to: tests/unittests/Foundation/NSDictionaryTests.mm:51 in c03e3a2. \n. :shipit:\n. > ```\n\n[NSTimeZone setAbbreviationDictionary:[NSDictionary dictionary]];\n```\n\nYyyup, this is what I was talking to you about earlier.\n\nIn reply to: 236052217 \n\nRefers to: tests/unittests/Foundation/NSTimeZoneTests.m:90 in d9f18be. \n. > ```\n\n[NSTimeZone setAbbreviationDictionary:[NSDictionary dictionary]];\n```\n\nBoth are true - separate test runs are influenced, but also 91-133 seem to specifically be written to depend on having no abbreviations?\n\nIn reply to: 236054045 \n\nRefers to: tests/unittests/Foundation/NSTimeZoneTests.m:90 in d9f18be. \n. It seems that the issue is related to our << specialization being in the testing::internal:: namespace.\n. :shipit:\n. Note that CTFontCollection has no bridged equivalent.\n. This, from the build warnings, seems to have something to do with it:\nFoundation/NSArrayTests.mm:287:37: warning: comparison of constant 9223372036854775807 with expression of type 'int' is always false [-Wtautological-constant-out-of-range-compare]\n    ASSERT_TRUE_MSG(notFoundInRange == NSNotFound, @\"NSArray return NSNotFound if object is not found.\");\nmight be a signed/unsigned thing?\n. I'm still of the opinion that you should take the StrongIds out, but besides that and the wchar thing, no.\n\nIn reply to: 238736424 \n. :shipit:\n. Was investigating the unknown C++ exception in case we had a more general problem; this seems to be the problematic section:\ndateCount = 0;\n[calendar enumerateDatesStartingAfterDate:[NSDate dateWithTimeIntervalSinceReferenceDate:0]\n                       matchingComponents:leapYearComponents\n                                  options:NSCalendarSearchBackwards\n                               usingBlock:^(NSDate* date, BOOL exactMatch, BOOL* stop) {\n                                   NSString* result = [dateFormatter stringFromDate:date];\n                                   ASSERT_OBJCEQ([result substringWithRange:NSMakeRange(0, 6)], @\"Feb 29\");\n                                   if (++dateCount == 50) {\n                                       *stop = YES;\n                                   }\n                               }];\n. https://github.com/Microsoft/WinObjC/issues/747 has a similar issue re: archiving/unarchiving\n. https://github.com/Microsoft/WinObjC/issues/746 has a similar issue re: archiving/unarchiving\n. WriteToURLOptions has the same root cause as https://github.com/Microsoft/WinObjC/issues/777 - it'll be fixed at the same time as that\n. Reassigning this to myself - this is a somewhat general issue involving our test data files (https://github.com/Microsoft/WinObjC/issues/777 is the same root cause), so the same person should be looking at both.\n. Reassigned to self - hit this while fixing https://github.com/Microsoft/WinObjC/issues/777, the same fix works.\n. https://github.com/Microsoft/WinObjC/pull/701 fixes this - this isn't something we should be testing anyway.\n. While the warning spam is fixed with https://github.com/Microsoft/WinObjC/pull/856, the NSTimer.Init failure does not get fixed with the appverifier fixes. Please continue to investigate.\n. Same root cause as https://github.com/Microsoft/WinObjC/issues/777; reassigning to self\n. :shipit:\n. :shipit:\n. :shipit:\n. Don't forget to add 'Fixes #759' to the actual commit message.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\n\nYOU HAVE 9 DISABLED TESTS\n```\n\n\nWe'll update this at the end of the week or something, but I just checked and we're currently down to 86 failed tests! Nice progress, everyone!\n\nRefers to: docs/Testing/OSXWinObjCTests.md:185 in 1e85f5a. \n. :shipit:\n. :shipit:\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. @MSFTFox is added to the review. #Closed\n. I seem to have gotten an unrelated test failure in CI build:\nFAILING TESTS:\n   Mach.MachTaskInfoThreadTimes  ( D:\\Build\\Agent3_work\\7\\s\\build\\Win32\\Debug\\WOCStdLib.UnitTests\\WOCStdLib.UnitTests.exe --gtest_filter=Mach.MachTaskInfoThreadTimes )\nRe-queueing, but is the above a known issue?\n. @rajsesh-msft is added to the review. #Closed\n. Title for this PR seems incorrect :) #Resolved\n. :shipit:\n. Unassigning myself temporarily since this needs triage.\n. :shipit:\n. :clock1:\n. This also appears to extend to Foundation.WindowsOnly.UnitTests, contrary to my expectations.\n. This does not fix the issue for me :( should I also be trying with #871 below?\n\nIn reply to: 239043624 \n. We looked at the issue offline - for some reason this didn't propagate to my Foundation.dll properties? (/INCREMENTAL was still set to yes) bbowman's investigating\n\nIn reply to: 239045051 \n. :shipit:\n. :shipit:\n. Just guessing here:\nOur platform happens to order the set in such a way that the test passes. The ref plat makes no such guarantee, so we hit the 6 early and stop.\n\nIn reply to: 237985558 \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. @msft-Jeyaram is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. Ping!\n. :shipit:\n. :shipit:\n. Since this is a comment-only change, would people be okay with me not doing a CI build before merge?\n. No, I thought it not worth the effort (it is a non-bug after all)\n\nIn reply to: 238969545 \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > //************\nAny reason these two files need to be in Frameworks/include? (Frameworks/include is generally for headers that need to be included across multiple frameworks) #Resolved\n\nRefers to: Frameworks/include/ABContactInternal.h:1 in 616d5ac. \n. > //************\nIs ABMutableMultiValue going to be in a separate PR? #Closed\n\nRefers to: Frameworks/AddressBook/ABMultiValue.mm:1 in 616d5ac. \n. :shipit:\n. :shipit:\n. Assuming no one has any objections, I'm going to forgo doing a CI build for this change, given that it has no chance of impacting it.\n. For the former, it seems that NSData shouldn't be able to write to directories that shouldn't exist. (Possibly consider changing the test to write to ~)\nFor the latter, it seems that NSFileHandle can't write to non-extant files.\n. :shipit:\n. The following APIs will probably be related and ought to be implemented:\n- [ ] CTFontGetBoundingRectsForGlyphs\n- [ ] CTFontGetGlyphWithName\n- [ ] CGContextDrawGlyphsAtPoint\n. Oops!\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. didn't you say it would fail though?\n\nIn reply to: 245745333 \n. :shipit:\n. > static IWLazyClassLookup _LazyUIFont(\"UIFont\");\nThat's more or less the plan - it's still a bit entrenched right now and it'd be extra work to leave a building state but remove just this.\n\nIn reply to: 245794924 \n\nRefers to: Frameworks/CoreText/CTFont.mm:49 in 4368641. \n. :shipit:\n. Hi Brent, we're actually in the middle of a more in-depth refactor of CoreText and UIFont right now, including a fix to the isEqual: function. Those changes are going to sit in the CT-DW branch for a while until they stabilize, so feel free to keep tabs on that.\nRegarding this PR, from my understanding, you don't actually need a fix for this issue urgently? If that's the case, could you wait for the more in-depth fix we've got going in the other branch?\n. :shipit:\n. :shipit:\n. > ```\n\nCGMutablePathRef path = CGPathCreateMutable();\n```\n\nleaking? #Resolved\n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCAlignmentTestViewController.m:43 in fd5e4de. \n. > ```\n\nCTParagraphStyleRef paragraphStyle = CTParagraphStyleCreate(&setting, 1);\n```\n\nleaking? #Resolved\n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCAlignmentTestViewController.m:51 in fd5e4de. \n. > ```\n\nCTFontRef myCFFont = CTFontCreateWithName((__bridge CFStringRef)[_font fontName], [_font pointSize], NULL);\n```\n\nleaking? #Resolved\n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCAlignmentTestViewController.m:53 in fd5e4de. \n. > ```\n\nCTParagraphStyleRef paragraphStyle = CTParagraphStyleCreate(&setting, 1);\n```\n\nmany things leaking here too... #Resolved\n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCFontTestViewController.mm:63 in fd5e4de. \n. :clock1:\n. Correction - I introduced this test while doing the DWrite implementation, while checking for edge cases, and confirmed that the reference platform does ignore case.\n. :shipit:\n. > extern \"C\" {\nwhat about this? #Resolved\n\nRefers to: Frameworks/CoreText/CTFont.mm:27 in ad4852d. \n. > extern \"C\" {\n(same in CTFontManager.mm)\n\nIn reply to: 248776359 \n\nRefers to: Frameworks/CoreText/CTFont.mm:27 in ad4852d. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\ni'm lazy and the better way to do it is for someone to ctrl+h over the whole project anyway...\n\nIn reply to: 249984304 \n\nRefers to: Frameworks/CoreText/CTFont.mm:3 in 7d78727. \n. :shipit:\n. :shipit:\n. :shipit:\n. Thanks for taking care of this for me! #Closed\n. :shipit:\n. Oh, actually, since this is the last failing test (!), can you update the doc?\n\nIn reply to: 250304213 \n. :shipit:\n. :shipit:\n. - Not every CF type has an Objective-C parallel (and as such cannot live in an Objective-C collection.)\nThank you for this this has been a thorn in my side for forever #Resolved\n. :shipit:\n. :shipit:\n. :shipit:\n. >  @Status Stub\nwhile you're here, can you fix this? #Closed\n\nRefers to: Frameworks/CoreText/CTLine.mm:62 in 1e34aa8. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. before: \nafter: \n\n. A known code path of concern is in NSString+UIKitAdditions.mm:\nCTFramesetterRef framesetter = CTFramesetterCreateWithAttributedString((__bridge CFAttributedStringRef)attributedSelf);\n    CFAutorelease(framesetter);\nreturn CTFramesetterSuggestFrameSizeWithConstraints(framesetter, CFRangeMake(0, self.length), nullptr, size, nullptr);\nwhich is called by [NSString sizeWith...], which currently doesn't take into account lineBreakMode even if specified.\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. > ```\n\n_needsLayout = TRUE;\n```\n\nout of scope, would rather not make potential merges with aballway harder\n\nIn reply to: 253677183 \n\nRefers to: Frameworks/UIKit/NSLayoutManager.mm:60 in 04ba630. \n. > ```\n\nTHROW_NS_IF_FALSE(E_UNEXPECTED, [frame->_lines count] == 1);\n```\n\nwe know it's messy/inconsistent, we're planning a cleanup period after the develop merge. for now this is a wontfix though.\n\nIn reply to: 254749881 \n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:89 in 04ba630. \n. > ```\n\nTHROW_NS_IF_FALSE(E_UNEXPECTED, [frame->_lines count] == 1);\n```\n\n1212\n\nIn reply to: 255800252 \n\nRefers to: Frameworks/CoreText/CTTypesetter.mm:89 in 43b6e0a. \n. :shipit:\n. Yes I think so.. :shipit:\n. :shipit:\n. More or less yes. At the baseline instead of the bottom/top left corner though.\n\nIn reply to: 254951164 \n. :shipit:\n. :shipit:\n. >  @Status Stub\nInteroperable? #Closed\n\nRefers to: Frameworks/CoreText/CTFrame.mm:78 in 3062895. \n. > }\nis addressed in aballway's other CR.\n\nIn reply to: 255221856 \n\nRefers to: Frameworks/CoreText/CTFrame.mm:42 in 3062895. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. No, #1386 gets us about halfway there.\n. out of scope\n\nIn reply to: 256795157 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. > ```\n\n    //     properties->style = DWRITE_FONT_STYLE_NORMAL;\n\n```\n\nno, just communicates that we didn't forget about \"normal\"\n\nIn reply to: 256795235 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:329 in a31c45e. \n. same as below - it'd be a no-op, so there's no reason to have the code actually execute, but it's a useful reminder that DWRITE_FONT_STYLE, STRETCH, WEIGHT, _NORMAL exists and we didn't forget about it\n\nIn reply to: 256795601 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. I'll do it as part of #1212\n\nIn reply to: 256795789 \n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:317 in a31c45e. \n. > #endif\nI wrote this one before the rest and I missed that the reference platform also has Courier New and not just Courier as default fonts. I'll fix this in #1212.\n\nIn reply to: 256796499 \n\nRefers to: tests/unittests/CoreText/CTFontTests.mm:227 in a31c45e. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. ping!\n. > // TODO #1108: NS/CT ParagraphStyle are not properly bridged, and ParagraphStyle is not currently read anywhere\n(Delete this TODO?)\n\nRefers to: Frameworks/UIKit/NSString+UIKitAdditions.mm:311 in 78e365b. \n. > // TODO #1108: NS/CT ParagraphStyle are not properly bridged, and ParagraphStyle is not currently read anywhere\nadditionally, for this to be read, should this be CTParagraphStyle now? if so, what if someone external passes in an NSParagraphStyle? if not, why make the change below?\n\nIn reply to: 259821003 \n\nRefers to: Frameworks/UIKit/NSString+UIKitAdditions.mm:311 in 78e365b. \n. :shipit:\n. :shipit:\n. Frameworks/include/CGIWICBitmap.h was called out as a conflict but I don't see it in the diff?\n. Hi @rupertdaniel , this is unfortunately part of the API contract of initFileURLWithPath: (https://developer.apple.com/reference/foundation/nsurl/1410828-fileurlwithpath?language=objc). While we could defer this process until a getter is used, as you recommend, doing so is fairly non-trivial, prone to error, and would place a burden of knowledge on developers who make future changes to the class's getters. As such, we'd like to avoid making such a change at this time.\nIf you're in a position where you can make certain assumptions about the URLs you're consuming, could you try initFileURLWithPath:isDirectory:NO, instead? Internal testing shows good performance improvements from this (cuts time nearly in half). Thanks!. :shipit:\n. Summary of current CoreText performance issues after #1558 and assorted recommendations:\nUIKit functions to watch:\n- NSString drawAtPoint:/NSString+UIKitAdditions.mm::drawString()\n- [NSString sizeWithAttributes:]\n- [NSLayoutManager __layoutAllText]\nBottlenecks:\n- CFRelease()\n    - About 20% of [NSString drawAtPoint:] is spent in CFRelease(). We discussed this offline before, but our CFRelease is very slow compared to our objective-C versions. We have some code cooking to address this, but the engineering hurdle to complete the effort seems high.\n\n\n_DWriteGetFrame()/CTFramesetterCreateFrame()/CTFramesetterSuggestFrameSizeWithConstraints()\n\n\nLatter two functions call _DWriteGetFrame()\n\n\nVery expensive. We spend 20% of [NSString drawAtPoint:], more than 60% of [NSString sizeWithAttributes:], and more than 70% of [NSLayoutManager __layoutAllText] (depending on number of line segments) here.\n\n\nAbout 50% of _DWriteGetFrame() time is spent in IDWriteTextLayout::Draw(), which creates a TextLayout by analyzing our input and laying our the text. We should follow up with DWrite team as to whether we can make gains by structuring our input differently.\n\n\nAbout 7~8% of the time in _DWriteGetFrame() is spent in CustomDWriteTextRenderer::DrawGlyphRun(), copying and translating DWRITE_GLYPH_RUN(_DESCRIPTION) structs into _DWriteGlyphRunDetails/Descriptions. About 5% of the time in _DWriteGetFrame() is spent in [NSObject new], translating these intermediatery structs into CTRun and CTLine objects. We can probably skip at least one of these copy/translations.\n\n\nPossibly related to CFRelease() issues previously mentioned, we spend about 10% of CTFramesetterCreateFrame() (though not the other two) in CGPathRetain()\n\n\n\n\nCGContextDrawGlyphRun()\n\nAbout 48% of the time in [NSString drawAtPoint:] is spent here\n\n// Below %s are percentages of time spent in CGContextGlyphRun()\n- When breaking down the stack, very little time is actually spent in ID2D1RenderTarget::DrawGlyphRun(). Heaviest hitters are ID2D1RenderTarget::EndDraw() (67%), ID2D1RenderTarget::GetRenderTarget() (16%), ID2D1RenderTarget::BeginDraw (14%).\n\n\nNote that CGImage is substantially different on the CGD2D branch, having a more direct relationship with its underlying WicBitmap.\n\n\nOur CGContextDrawGlyphRun() currently have BeginDraw() and EndDraw() within its body. These functions are meant to be called at the beginning and end of a batch of drawing operations, as they are faster if executed in a batch. However, we call CGContextDrawGlyphRun() within a tight loop/in the middle of a batch. Since we control the contract of CGContextDrawGlyphRun() completely, we can move the begin/end calls out to the true bounds of the batch.\n\nNote that again, this is also already changed on the CGD2D branch.\n\n\n\nA bit of a stretch, but currently our render-to bitmaps are fairly small. As recommended in https://msdn.microsoft.com/en-us/library/windows/desktop/dd372260(v=vs.85).aspx#atlasofbitmaps, we may be able to gain by using subsets of large bitmaps as small bitmaps, or by otherwise reusing bitmaps.\n\n\n\n\n[NSLayoutManager __layoutAllText]\n\n\nAbout 20% of the time in this function is also spent in CFRelease()\n\n\nCalls CTFramesetterCreateFrame() per line segment, leading to a relatively high number of calls of a very expensive function. It seems like it ought to be possible to 'batch' line segments together in one CreateFrame() operation, if they align vertically without line segments in between. This is complicated by our current algorithm not being strictly correct (see comments in #1558), and by line segments being influenced by metrics that can only be known after previous line segments were already drawn. Still, it seems possible to make gains here (ie: in a basic case where there are no exclusion paths, we can definitely use just one CreateFrame(). difficult to extend these gains into marginally more nuanced cases). can you check on the sign for CGFont descent as well? sorry for the trouble #Closed\n. :shipit:\n. switched to a custom test font. Thank you @DHowett-MSFT.\n\n\n\n\n\nIn reply to: 260755927 \n. :shipit:\n. say what? do we know why the others are failing?\nadditionally, which are the remaining failing tests?\n\nIn reply to: 261049996 \n. Interesting. Let's push this in for now and open bugs on the rest.\n\nIn reply to: 261067729 \n. :shipit:\n. >  @Status Stub\nhow come we're leaving this out? #Closed\n\nRefers to: Frameworks/CoreText/CTFontManager.mm:128 in f49940a. . possibly excessive but might be good to add tests that validate that the registered fonts are accessible from CG-side as well. >  @Status Stub\nI realize we didn't explicitly call it out in #1022, but it'd be good to take care of this now, just to finish up the feature set.\n\nIn reply to: 263724102 \n\nRefers to: Frameworks/CoreText/CTFontManager.mm:128 in f49940a. . >  @Status Stub\nfix annotation!\n\nIn reply to: 263735377 \n\nRefers to: Frameworks/CoreText/CTFontManager.mm:128 in f49940a. . :shipit:. >     // TODO: #1250: Need to be able to load fonts from the app's bundle\niirc iOS behavior is to return nil for an unfound font, but OSX returns a default font. as such i'd like to keep this?\n\nRefers to: Frameworks/CoreGraphics/DWriteWrapper.mm:411 in 04cd65c. . :shipit:. nit: CoreGraphics.Drawing > CoreGraphics.drawing, probably. :clock1:. Ping! #Closed. CI builds both completed for 4th commit, skipping for 5th commit as it is very minor.. :shipit:. :shipit:. >             RETURN_IF_FAILED(typography->AddFontFeature({ DWRITE_FONT_FEATURE_TAG_KERNING, ++incompatibleAttributeFlag }));\noh hmm was I overeager? @aballway did I mess this up actually? #ByDesign\n\nRefers to: Frameworks/CoreText/DWriteWrapper_CoreText.mm:296 in b491db6. . Looks like we're somehow handling line-wrapping incorrectly, as the blurriness only occurs on certain lines (seems to be independent of line breaks, as \"The original...\" and \"Eric...\" both take place after \\n\\n. The bottom section is entirely individual lines)\nInteresting that the blur is only vertical. Wonder if this means that we've got an incorrectly-calculated offset somewhere.... It looks like the issue is that we don't handle floating point offsets well. The line offsets are calculated in Canabalt itself, so they are not incorrect, but they are usually non-integral floats (14.0002, 42.50001).\nFlooring the x- and y-offsets to make them integral gets rid of the blur.\n\nHowever, setting x- and y-offsets to their floor() + 0.5 reproduces the blur in both vertical and horizontal directions!\n\nI'm suspecting that this has to do with us using a bitmap for our render target ( @DHowett-MSFT can you comment on this? ), causing this interpolation artifact when our offsets aren't integral. It's particularly noticeable in this case because of the pixelated style of font Canabalt uses.. > #endif\nunrelated, but can you see if we can ditch these? UIKIT_EXPORT already has 'extern \"C\"' when __cplusplus is defined #Closed\n\nRefers to: include/UIKit/UIGraphics.h:40 in c3bbc8f. . any idea of the savings? rough measurements are fine. :shipit:. \nHere's a sample trace from XamlCatalog's custom text view, on top of changes from #1603, and an experimental fix for #1620. When we get deep into the spiral, the view begins to lag. Tracing shows that the primary bottleneck seems to be in drawInRect:, with the time being spent in CFRelease and CGPathRetain sticking out.\n\nUncertain exactly how tractable things under _DWriteGetFrame() itself are. I pointed out a few potential improvements in closing comments for #1374, but for the most part there are no super-egregious bottlenecks.. :shipit:. I tried a few different rendering modes. The GDI modes were the only ones that actually fixed the problem while not introducing noticeable aliasing to other test apps like iLabyrinth. Between GDI_CLASSIC and GDI_NATURAL, there was not very much noticeable difference, but GDI_NATURAL seemed to look slightly better? (very scientific). We decided that this solution was not satisfactory - going to investigate another one.. Do we know what caused this to no longer be an issue? #Resolved. :shipit:. it probably could, but what do we gain from it? it would still count towards a 'startup load time' bucket, and we'd split the usage of [[NSBundle mainBundle] infoDictionary]\n\nIn reply to: 272035886 . we discussed offline that it doesn't make sense to move just this out at this time\n\nIn reply to: 272037465 . (Is this a CC proposal, or did you have an impl change in mind to enforce this?)\nI think you picked a bad example since CFStringCreate(...) implies its return type fairly well, but I think I do agree? Not all functions will clearly indicate their return type by name, and I think it's best to not surprise someone searching for instances of CFStringRef that their search won't hit this.\n\nIn reply to: 272517505 . My profiler has been acting up since I took a recent update, so I haven't been able to get a measurement yet. Will make one when I can.\nEDIT: Measuring XAMLCatalog custom text view - Begin+EndDraw currently occupy about 4% of [UIView drawLayer] time, compared to about 30% on develop.\nEDIT2: Due to changes that needed to be made to cairo functions, Begin+EndDraw currently occupy 15~20% of time in the same scenario.. >     provider = CGImageGetDataProvider(img);\neesh, how misleading #Closed\n\nRefers to: Frameworks/GLKit/GLKTexture.mm:421 in 8f54c08. . Then okay, let me just respond to the feedback on the table for now and get this actually performant later. #Resolved. @msft-Jeyaram I'm confused what issue #1751 is actually describing - if it's describing an issue in NSLayoutManager with:\nCTLineRef fitLine = static_cast(CFArrayGetValueAtIndex(CTFrameGetLines(frame.get()), 0));\nthen that issue still repros, and this was not the root cause (I may have also just opened a dupe at #1779). @msft-Jeyaram I am not able to repro the #1751 stack. I get #1758 on develop and #1779 after this change.. It was until he changed it. I think @msft-Jeyaram settled on using #1751 for the UIPageViewScrollView issue, and this one for the NSLayoutManager issue.. I am unable to repro this failure (10.11.6) but judging by the failure we might be assuming too much about the underlying machine anyway?. I am unable to repro this failure (10.11.6). I am unable to repro this failure (10.11.6). I checked it against some of our sample apps, but not this one. Looking into it now.. @msft-Jeyaram @DHowett-MSFT The root cause appears to be UIGraphicsGetCurrentContext() returning nullptr in NSString+UIKitAdditions.mm: [NSString drawInRect: withFont: lineBreakMode: alignment:]. I can harden Push/Pop et al against null contexts (which I've verified fixes the crash), but there being no current context on CGD2D here is concerning. Is there a larger issue here?. @ArnOmsft from your description \"slow, draw in a burst\", it's probably because of #1705, which batched draw calls to not execute until [CALayer display] exits. I'm not certain how gestures interact with the UI/CG draw stack, but I can take this over from @yiyang-msft if you think it'd be more appropriate for me to investigate.. Oops right I forgot that the 'Fixes' in the commit message doesn't actually close if I merge to a non-develop branch.. optional: For semi-vain reasons, can you post results from after #1878 as well? I'd like to see what the perf impact was more broadly.. Approximate perf impact, as measured in XAMLCatalog custom text view: CTLineDraw previously occupies about 45% of time in [NSString(UIKitAdditions) drawInRect:withFont:lineBreakMode:alignment:], now down to <5%.. > CodeFlow for GitHub does not download executable files. If you trust this file and would like to run it, please download it yourself through GitHub.\n?\n\nRefers to: Helloworld.txt:1 in 657034c. . +1 to what @bbowman said (it totally slipped my mind). Benchmarks: \n\n. Benchmarks after handling NSCFType properly:\n\n. Before/after: \n\n. Note that for these changes to propagate, it may be necessary to do a rebuild - our incremental build seems to be bad at picking up changes to CF_INLINE functions, though nothing seems to break.. Some of the test images don't appear to have changed despite being in the change?. looking at this chart, some of your post-change times are higher than mine after #1923. could just be debug/release and machine differences, but...\n\nIn reply to: 279803769 . Hi @venkatkongara, I'm unable to repro your issue on VS2017. Could you try to build your code in VS2017 and tell us whether you still encounter this problem?. as a starting point, the issue seems to be that we changed how we take args in EntryPoint.cpp when we moved to TAEF.. Scratch my comment, I missed that @aballway already fixed this in #2251.. nit: should we add a final check for the size when the download is finished? #ByDesign. When/how would a run's matrix ever become non-identity?. Hmm, could you try to dig a little bit more? I'm not super concerned but I am vaguely curious.. 1em is approximately 1 'character height', and varies depending on font size and designer preference, but is generally = ~the height in px of a capital H at the current font size.\nA design unit is a constant fraction, usually 1/1024, of an em. The actual fraction (designUnitsPerEm) is up to the designer, but it's usually something like that. Coordinates for fonts (ie: height of an 'r') are usually specified in whole design units (font coordinates usually don't look like 254.876 of an em).. > HRESULT _DWriteCreateFontFaceWithFontDescriptor(CTFontDescriptorRef fontDescriptor, IDWriteFontFace** fontFace) {\nshould probably rewrite this to make use of your new logic?\n\nRefers to: Frameworks/CoreText/DWriteWrapper_CTFont.mm:170 in 3610687. . Seeing an issue when building FunctionalTests after pulling this:\nLNK1104 cannot open file 'ObjCUWP_Windows_Media_Core_Protection_Playback_Capture_Devices.lib'\nThe lib checked in is named 'ObjCUWP_Windows_Media_Playback_Protection_Core_Capture_Devices.lib' instead of the above ordering of namespaces - was there a misnaming somewhere?. @DHowett-MSFT Yup, that fixed it. Sorry for the trouble!. Our compiler does not accept the implicit cast (tbf void* casts are pretty iffy). Here are perf numbers, comparing on Release with this change, develop, and #1676 which we backed out:\n\nThings to note:\n- The time it takes to add 1000 operations individually has doubled from develop. However, if we look under the hood we see that \n\n90% of this time is spent in KVO (!!), which we are looking at next.\n- The time it takes to add 1000 operations together, and wait for them to finish, has largely remained the same. However, unlike develop, not waiting for them to finish provides no significant time discount - it appears that unlike develop, we are bottlenecked by KVO rather than the process of executing the operations, so our perf should improve once we look at KVO.. @DHowett-MSFT I am defeated. I just realized I pushed the branch to the main repo instead of my own fork. I'll keep the PR open for now and delete the branch when I'm done.. Ping @rajsesh-msft - I want to make sure you have no additional issues with this before it merges. Whenever you get a chance is fine.. Oops, sorry I forgot to get back to you about this. It still repros for me. Do you have build-if-out-of-date-on-run enabled on your VS by any chance?. Tried a unit test with:\nNSURL url = [NSURL URLWithString:@\"https://www.wikipedia.org/portal/wikipedia.org/assets/img/Wikipedia-logo-v2.png\"];\nNSData data = [NSData dataWithContentsOfURL:url];\nASSERT_OBJCNE(nil, data);\nwhich completed successfully after a few seconds. Trying the associated sample app.... Perf numbers, with some numbers from before #2240 for comparison \nImprovements across the board, but we're still slower than the old NSOperationQueue on adding operations (though not executing them). (Sorry for misleading you on this @rajsesh-msft, I forgot I switched hardware recently and would get lower numbers). The cost of addOperation: is currently about 2/3 KVO addObserver: and 1/3 libdispatch.\nThe biggest cost in KVO as it currently stands is construction of objc objects - NSKVOObservationInfo et al seem like they could easily be lighter-weight structs, but this would be a fairly heavy change that I didn't want to get into while @DHowett-MSFT was out. If we want to further pursue KVO perf, I can discuss the issue with him once he returns.. Failure did not repro locally - i'll assume it's spurious and queue another CI build.. ?. Is there broader scoped context to this change? (Are we looking to remove enough dependencies that we can make some sort of build change, or are we just removing dependencies for code quality's sake?). DWriteWrapper_CTFont.mm::473, 477 : can probably just remove the TODO: portion of the comment and leave the comment - I don't think we can ever address these.\nDWriteWrapper_CoreText.mm::202 : this doesn't actually seem like a TODO, just a comment\nDWriteWrapper_CoreText::53 & CTFramesetter::92: this seems like the wrong issue number...?\nEDIT: Looks like these should be #1342 . Oh hmm, I didn't think about this angle, thanks for catching it.. \nUnfortunately regresses the perf to about 4x slower than develop :( On a minor bright side, still about 2x faster than before #2323. @DHowett-MSFT is looking at a larger-scale, longer-term fix, but we ought to fix the regression first.. ping!. I don't remember the exact details from a brief discussion we had on Friday, but it had to do with messing with how we static init constant strings, so we don't have to do the indirection with CFMakeConstantString. I don't believe an issue has been filed yet.. ping!. ping! last call @msft-Jeyaram @aballway @rajsesh-msft . @DHowett-MSFT I neglected to mention this to you after you came back, but I have a proposal.\nhttps://en.wikipedia.org/wiki/Color_difference I didn't read through all of it, but basically the 1976 primitive measurement of minimal perceptible color difference by the human eye is something like an RGBA difference of 2.3*256/100 = ~5.8. (This should probably actually be * 256^3 / 100^3 but whatever)\nRather than shifting everything to mask, I think we should add a comparator that treats pixels as the same if they fall within an RGBA distance of... let's say half that, so 3. Thoughts?. @pradipd see #2444 #Resolved. Oh, hm. There is a Starboard and a xplat/Starboard in there. Oops! #Resolved. Language package dir structure is now the same as before. #Resolved. @pradipd I discussed with @DHowett-MSFT and decided on a different, smaller change. Let me know if you're ok with it. #Resolved. This'll probably fix the problem, but... didn't we get AssetCatalogCompile Include=\"....\\CTCatalog\\Assets.xcassets\" from vsimporter? Should there be a vsimporter change?\nAdditionally, what is the context on the filters change?. Would you be willing to dig a little deeper? I believe that this is not the only app where I've seen this issue, and would like to know the root cause.. Could not repro CI build failure locally, queuing again.. The connection seems to be dealloc'd by the time we reach this code. Trying to figure out where the correct place is to add an extra retain/release.. Ping. Would repro ~1% of the time for me locally. Uninitialized and nonzeroed memory would lead to scanning past the end. Ensure a terminating null char so that the crt scan functions have a definite termination point.\nNo longer repros locally after this change.. This function was originally made async due to #561. At the time, [NSUserDefaults synchronize] had an erroneous requirement that it be called from the main thread. Since this is no longer the case, and users can call synchronize from a background thread to avoid blocking the main thread, switching the function back to synchronous to guarantee write completion.. Was unable to repro the NSURLSession test failures locally... going to queue a CI build and see if it was just caused by this test failure bringing down some incidental state.. Everything passed \u00af\\_(\u30c4)_/\u00af. lastObject was the troublemaker. After this change, repro rate of test failure ~0.6% -> 0%. oh right, you have a point there. uhh what the heck? i have no idea why this diff is showing as this big. one sec. ok it's fixed. Yup, we lack POST/UploadTask tests for NSURLSession - should I add some?. @DHowett-MSFT ...I somehow missed the existence of another NSURLProtocolInternal.h in Frameworks/include. I'll coalesce it with the one in Frameworks\\Foundation.. @DHowett-MSFT @rajsesh-msft wait a second, [NSURLSession uploadTaskWith...] functions are still stubs. How did we hit this bug?. Hi @jboich,\nRegarding just the nuget restore issue, @DHowett-MSFT seems to have actually run into a slightly different issue from yours, and I am having trouble reproing it myself. If you haven't already, could I ask you to try the following steps as a basic sanity check?\ngit clean -dfx\n.\\init.cmd\n.\\.tools\\nuget.exe update -self\n.\\.tools\\nuget.exe locals all -clear\n.\\.tools\\nuget.exe restore .\\build\\build.sln. Ignore what I just said, just found something interesting.. @jboich It appears this was caused by an infra failure on our end. While we are resolving this, you should be able to work around the nuget restore issue by building tools\\tools.sln before building build\\build.sln.. @jboich I'm still working through the infra issue on our end. For tools.sln, you ought to be able to work around the build errors by nuget restoring and building from the command line instead of inside VS. Let me know if this doesn't work.. Ah, @DHowett-MSFT also ran into this bug. This is unfortunately a VS2017 15.3 bug that we're following up with the VS team on. You can work around it by restoring and building from command line, ie:\n& 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe' .\\build\\build.sln /nologo /nr:false /p:PackageVersionOverride= /p:platform=\"Any CPU\" /p:configuration=\"Debug\" /p:VisualStudioVersion=\"15.0\"\nGiven the number of issues we're running into with update 3, though, we might unfortunately standardize on a recommendation to build with update 2 or earlier. :(\n. Change the '.\\build\\build.sln' in my example to whatever the actual path to your copy of build.sln is, ie: C:\\WinObjC\\build\\build.sln.. Added to #2783 . CC: private member vars usually have an underscore eg: _setContainer, _mapContainer\n. the + convenience constructors should call [self alloc] instead of [NSOrderedSet alloc], otherwise this code won't correctly alloc for NSMutableOrderedSet or other subclasses\n. can just call [orderedSet array]?\n. or, better yet, take bviglietta's suggestion below to delegate to a common NSEnumerator initializer, I'm not fond of making this intermediate array either\n\nIn reply to: 62376601 \n. __block?\n. never mind, it's actually not necessary here. see https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/Blocks/Articles/bxVariables.html#//apple_ref/doc/uid/TP40007502-CH6-SW6 if you're curious though\n\nIn reply to: 62386471 \n. We'd like to avoid making edits to this file, in order to stay mapped exactly to the original test at https://github.com/apple/swift-corelibs-foundation/blob/master/TestFoundation/TestNSArray.swift. Could you test these cases in a separate test case in tests/unittests/Foundation/NSArrayTests.mm, and revert this file to its original state?\n. It looks like he said the same? https://github.com/Microsoft/WinObjC/pull/557#discussion_r67045139\n\nIn reply to: 67917856 \n. how did you even find this I haven't even sent out the mail yet :(\n\nIn reply to: 70345994 \n. Your filters are apparently better than mine then D:\n\nIn reply to: 70346399 \n. I'll just cut out exactly this part?\n\nIn reply to: 70347028 \n. I've only ever seen this included in the lowercase?\n\nIn reply to: 70347255 \n. looks like clang formatting\n\nIn reply to: 70347357 \n. sure - I wasn't sure how people would feel\n\nIn reply to: 70348198 \n. oops, was testing something and forgot to remove this\n\nIn reply to: 70348879 \n. it depends on the internal function _reverseString\n\nIn reply to: 70350216 \n. same, though that might say more about our test design? other comments seem to indicate that a lot of these can go away by me using shims instead of ifdefs\n\nIn reply to: 70349454 \n. I'm just going to remove this file from the final commit\n\nIn reply to: 70347524 \n. I'm doing something separate with them (ReferenceFoundation output files have a ReferenceFoundation_ prefix to avoid name clashes)\n\nIn reply to: 70349591 \n. discussed offline - since this currently has no impact and affects readability, leaving as-is for the time being\n\nIn reply to: 70349129 \n. removing -std=c++14 generates some concerning warnings. LDFLAGS added\n\nIn reply to: 70349983 \n. I do too, I'll turn clang off just for this block\n\nIn reply to: 70348637 \n. oops\n\nIn reply to: 70349984 \n. CoreFoundation.dll 18.8mb -> 0.9mb\n\nIn reply to: 71389811 \n. icudt.dll 7 kb -> 25mb\n\nIn reply to: 71421042 \n. // WINOBJC: WinObjC seems to have stricter type-checking than the reference platform,\n        // so an explicit cast is required here\n\nIn reply to: 71390930 \n. Yeah, I think that'd be the case. Also reminder to everyone that eventually we'll consume this directly from windows, meaning we'll no longer take the hit.\n\nIn reply to: 71459710 \n. nit: mutableCopy instead? #Resolved\n. surprised we didn't have this check already. use NSLocationInRange instead, though?\n. Talked to DHowett offline, he's going to take a closer look at drive paths next iteration, and leave this slightly-wrong state for now.\nBe sure to add a comment about this status.\n. Thanks!\n\nIn reply to: 70349855 \n. I changed it where I could, but TARGET_OS_XXX and WIN32 don't really reach here.\n\nIn reply to: 70349688 \n. Moved this to the WindowsOnly dir - I did use at least one instance of WINOBJC somewhere though.\n\nIn reply to: 70348439 \n. The issue was actually that IwMalloc.h drags in WinObjCRTExport.h, which is not xplat - I should probably avoid obfuscating this issue though.\n\nIn reply to: 72162785 \n. I actually reverted quite a few already, the ones remaining are ones that I thought were good for clang to do. I can still revert them if you feel that that's the proper course.\n\nIn reply to: 72162462 \n. Seems out of scope for this change? I'd end up having to leave at least part of it ifdef'd anyway, and I'm not sure I fully understand all the implications of this TODO.\n\nIn reply to: 72163061 \n. > if (NSSortStable) { \n? shouldn't this be checking opts? #Closed\n. could possibly use a comment here - took me a minute to think through the safety of this #Closed\n. > NSSet* \nnit: should declare as NSMutableSet here and avoid the build warning #Closed\n. It would - this also came up in discussion at one point (was it with you or Raj?) that it's consistent with Windows like this, which is nice.\n\nIn reply to: 72315536 \n. Yes, but there's enough difference between the constants, as well as defaults on both OSs, that I think anyone writing something like this ought to take the time to look at the filesystem differences manually. (I don't feel comfortable hiding S_IRWXU behind a shim)\n\nIn reply to: 72315339 \n. _lockCount is our private function, so unfortunately not :(\n\nIn reply to: 72315210 \n. https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Functions/#//apple_ref/c/func/NSLog\nvoid NSLog ( NSString *format, ... );\nSimply calls NSLogv, passing it a variable number of arguments.\n\nIn reply to: 72312621 \n. This isn't reformatting, I changed it from VA_ARGS (ms-only) to ##VA_ARGS\n\nIn reply to: 72312790 \n. Probably yes on the former. No on the latter, but I think naming it DISABLE_foo is convenient enough as-is.\n\nIn reply to: 72314472 \n. Oops, probably put this away for a sec for whatever reason, then forgot to revert.\n\nIn reply to: 72314834 \n. _lockCount is our private function\n\nIn reply to: 72314890 \n. NSBooleanPredicate is our own concoction, and does not exist on OSX\n\nIn reply to: 72315140 \n. I just copied this from Foundation.UnitTests.vcxproj - do we have the same concern there?\n\nIn reply to: 72321249 \n. discussed offline, I'm wrong!\n\nIn reply to: 72320189 \n. I forgot to do that readme I promised you - that seems like probably a better spot.\n\nIn reply to: 72321412 \n. NSExpressionConstantValue is our own concoction.\n\nIn reply to: 72314636 \n. Not here - elsewhere yes.\n\nIn reply to: 72322094 \n. I did a somewhat too-broad replace for Starboard.h, seeing where I could keep it as only SmartTypes.h. I'll revert this file before CR close, but leaving this open for now since I don't want to wipe the history again.\n\nIn reply to: 72326111 \n. _CFGetSlashStr() returns @\"/\" on our platform too?\n\nIn reply to: 72325600 \n. There's a tryLock that returns immediately whether the acquisition was successful. The rewrite seems out of scope for this change though - I'll open a separate issue for this?\n\nIn reply to: 72325371 \n. was an accident, probably did this temporarily to look at other issues, then forgot about it. ICU has been keeping me distracted for a little while now.\n\nIn reply to: 72324764 \n. I don't know if I actually agree with this? There's some confusion currently because it's difficult to distinguish some of the WinObjC-only APIs, but\n1) That won't be true in future, more scoped code reviews\n2) Pretty much all of the comments are going to be 'foo is a WinObjC-only API'\n3) Especially in future scoped CRs, comments like those in 2) are already going to be self-evident\n\nIn reply to: 72325897 \n. it didn't\n\nIn reply to: 72313000 \n. I'll file a separate issue for this - I'm scared of going over the file limit.\nFor reference, we have 44 instances of lowercase, 27 instances of uppercase. However, in unit tests there are only 2 instances of uppercase (soon to be 1) (we may only care about instances in unit tests?)\n\nIn reply to: 72312429 \n. tab chars #Resolved\n. >    \ntab char #Closed\n. below, too\n\nIn reply to: 72351397 \n. shouldn't this be an &? otherwise this'll always be true, right? #Closed\n. we still need to be at least extern C, my bad\n\nIn reply to: 72322401 \n. https://github.com/Microsoft/WinObjC/issues/687\n\nIn reply to: 72351063 \n. https://github.com/Microsoft/WinObjC/issues/688\n\nIn reply to: 72337799 \n. https://github.com/Microsoft/WinObjC/issues/689\n\nIn reply to: 72323887 \n. Additionally, I believe in the lost previous iterations where this was ifdef'd, you wanted this to not be ifdef'd? What is the exact concern/scenario you have/are worried about?\n\nIn reply to: 72336763 \n. I asked the same question in the previous CR before we moved this CR to github - no one replied, so I assumed they agreed that the scope of changes was large enough that // WINOBJC comments were not the most useful.\n\nIn reply to: 72718150 \n. I must've forgotten that this was in the prototype, oops!\n\nIn reply to: 72719188 \n. I would like to leave this section as C if possible. I feel like the C++ stuff should only be touching the ICU bits, and this is patterned after the CF code that was already there.\n\nIn reply to: 72720016 \n. I'll poke him about it - the name being the same as the abbreviation seems concerning.\n\nIn reply to: 72732357 \n. Will file before CR close\n\nIn reply to: 72732439 \n. discussed offline - we decided we were okay with this.\n\nIn reply to: 72853566 \n. Thanks for taking care of this for me, it would've been the next thing to hit after looking at the current failures. #Resolved\n. There's no .PHONY for shims anymore? #ByDesign\n. doesn't seem to be in the TimeZone documentation\n\nIn reply to: 72721402 \n. On closer inspection this seems to just be my mistake - the actual divergence can be much smaller.\n\nIn reply to: 72826181 \n. Eh, it's a bit of a wash - I think I prefer not adding extraneous elements by bringing in Calendar here.\n\nIn reply to: 73243150 \n. > t \ntypo #Resolved\n. what's the context behind this change? #Resolved\n. Agreed on both fronts.\n\nIn reply to: 73249644 \n. ! Did not see this at the time of implementation, apologies for making you go through this. #Resolved\n. nit: this would be neater with a helper function that takes a list/array/va_list of NSRanges. #WontFix\n. Keep this as 'LimitDebugDescription'. #Resolved\n. Make this an OSX_DISABLED_TEST instead, with an explanation as to why. #Resolved\n. Keep both EdgeDebugDescription and EdgeNoCopyDescription - there's a difference in the initializers they use.\nTo get around the behavior you mentioned, change the number of bytes to 513 instead of 1025 - the behavior they're concerned with validating is the 'ff>' at the end, the remainder byte.\nKeep the 1025 code in a comment (probably not the expected value though, seems unnecessary), with an explanation as to why we changed it from \nhttps://github.com/apple/swift-corelibs-foundation/blob/master/TestFoundation/TestNSData.swift #Resolved\n. You might as well keep this behavior - iirc it matches iOS, and it doesn't hurt us to trim overly-long descriptions anyway. #ByDesign\n. > Base64EncodingWithoutOption \nThis name doesn't really describe this test. #Closed\n. They're not redundant - look closely: the initializers are different, and the latter has an extra assert.\n\nIn reply to: 73406834 \n. > int32_t \n! this is scary, does this mean it was interpreting 'int' as non-32bit?\n. > return [self intValue]; \nNSInteger isn't def'd to int??!\n. +1\n\nIn reply to: 73436715 \n. This feels more like a WindowsOnly test, going by the standards we laid out this morning. #Pending\n. Was the intention to add the removed lines from NSPointerArrayTests.mm::109 here? Because this is still identical to what you have there, including missing those lines. #Resolved\n. > NSAutoreleasePool* pool = [NSAutoreleasePool new]; \nWhat happens if you move this one line lower, so that array is not managed by this autorelease pool? (It should probably be one line lower anyway, because the memory management scopes are currently criss-crossing) #Resolved\n. Discussed offline - we can keep this as OSX_DISABLED\n\nIn reply to: 73561438 \n. Can we say that an error can be ignored? One or more of the tests have a tendency to hold a file lock after running, which scares me.\n\nIn reply to: 73583033 \n. Woops, this should be #ifdef'd #Resolved\n. Do things still build on Windows like this? (I feel like I wanted to do this earlier but didn't for some reason)\n. aballway confirmed that this doesn't repro on iOS - apparently this is a swift-only feature?\n\nIn reply to: 73544573 \n. Discussed offline, we're gonna keep one that ends in ffffffff> (LimitDebugDescription?) for completeness, and that should be good.\n\nIn reply to: 73435499 \n. > p \nnit: pref uppercase\n. nothing specific, just the idea of 'moving these to a shared location' in general\n\nIn reply to: 73608630 \n. Our implementation of enumerateAttribute was incorrect - it did not enumerate over ranges where there were no attributes. That was corrected in this CR.\n\nIn reply to: 73620275 \n. Can we add an extra test case with three numbers? #Resolved\n. alternatively, do an ifdef on BIG_ENDIAN, LITTLE_ENDIAN (double underscore both sides)\n\nIn reply to: 73653571 \n. > 7 * 24 * 60 * 60; \n! The default is a whole week? That's rather scary o.o #Closed\n. > tl \nnit: typo #Resolved\n. > // testHashFunction(functions, ptr1, ptr2, ptr3); \nWhat was the thinking behind commenting this out, instead of a) keeping it in an #ifdef WINOBJC, or b) deleting it? #WontFix\n. Hmm, I think there's value in knowing that our impl for this hash function doesn't collide. The scenario you describe where the first three bits get wiped out is possible but shouldn't really ever happen with the way allocation typically works.\nDoes it make sense for us to change our hash to a right shift instead and leave this commented out (as it'll be much more prone to failure)?\n\nIn reply to: 73764075 \n. > || \ntotal blunder on my part, thanks for fixing this! #Resolved\n. >    \ntab chars (please also fix the existing tab chars) #Resolved\n. The comment makes me think that this is an iOS/OSX platform difference\n\nIn reply to: 73765050 \n. Fair enough with regard to value of testing. I'm still wondering whether we should change to a right shift to match the reference platform.\n\nIn reply to: 73765315 \n. Discussed offline, we'll keep this as-is.\n\nIn reply to: 73766353 \n. > NSBackwardsSearch \n? shouldn't this be more efficient as backwards? #ByDesign\n. Got it.\n\nIn reply to: 73768171 \n. > _2 \nEr, keep these original names (this is ReferenceFoundation) #Resolved\n. (I know they're not very good names, but)\n\nIn reply to: 73769571 \n. Yeaahhh same D:\n\nIn reply to: 73769649 \n. Move to the non-referenceFoundation test file? #Resolved\n. Move these into non-ReferenceFoundation tests? #Resolved\n. Discussed offline, we don't think this is a fruitful line of investigation at this time.\n\nIn reply to: 73772452 \n. > SuggestedFilename_QueryParameter \nStill a few name changes remaining (3)\n. Looks like just formatting changes? #WontFix\n. Hm - should we unify on one solution for this on OSX (should we remove my #define from the shim windows.h)?\n. > StrongId nsTag; \nUse of StrongId seems excessive here, especially given that you cast it back to NSString* below. #ByDesign\n. > /tmp/TestFoundation_Playground_ \nupdate this comment also? #WontFix\n. > ./tmp_TestFoundation_Playground_ \nif the intent is for cleanup to be reliable, does it make sense for us to remove /tmp/ from our gitignore? #WontFix\n. > bacon \nnit: does not go on waffles #WontFix\n. justification? it would be half as long.\n\nIn reply to: 74170322 \n. LOL\n. This is the actual change, the rest are clang-format.\n. I wonder why my clang left this folded/folded this, when yours unfolds it.\n. okay, accepted\n\nIn reply to: 74333836 \n. nit: comment here about why this is Windows-only (I get that it's because of the drive char, but the comment still helps) #Resolved\n. > of \nnit: have #Resolved\n. > tokens[0] \nwouldn't this return the first path component, then? #Resolved\n. how is it based on the substring? the split is being called on self\n\nIn reply to: 74352126 \n. right, but if you ran this code on '/foo/bar/////', this would return 'foo' instead of 'bar'\n\nIn reply to: 74352571 \n. > leading \nI think you mean trailing? #Resolved\n. What case was this designed to handle? I'm imagining in my head that in the case that the first char isn't a slash, the result from CF is already good, so I'm wondering what edge case the extra split on '/' here handles #Resolved\n. remember to add a test case covering it!\n\nIn reply to: 74353599 \n. I realize these probably work already but I would like to add a few test cases with\nmultiple leading slashes: ///foo/bar/test\nuri schemes at the front: file://foo/bar/test\na dot name within a directory, before, only, and after: \n    /tmp/foo/.tiff \n    /tmp/foo/. \n    /tmp/foo/tiff. #Resolved\n. what was the result when it reached this point?\n\nIn reply to: 74354338 \n. Okay - please add a comment that this step removes the trailing slashes still in the substring, with the example you just gave me :D\n\nIn reply to: 74354542 \n. > reinterpret_cast \nUse static_cast here, reinterpret is quite a bit stronger than needed for this. #Closed\n. nit: more descriptive name please #Closed\n. > alignment = kCTLeftTextAlignment; \nit's easy enough to grok, but it might be useful to call out in a comment anyway that this is the default if no style is specified. #Closed\n. > 64.0f \nI realize it's everywhere in this file, but what's the significance of 64.0f? #Resolved\n. When I say 'stronger', I mean that reinterpret_cast is more permissive (thus more dangerous) than static_cast. We should use the most restrictive cast possible.\n\nIn reply to: 74634231 \n. > ABPropertyID property \nThis looks like it's typedef'd to int32_t, you ought to be able to do a switch statement here?\nAlso, you may want to change the name since it's a bit close to @property. #ByDesign\n. nit: having a default case in the switch instead, seems like better style? #Closed\n. This doesn't appear to be used anywhere? #Closed\n. nit: could oneline these as ternary statements #Closed\n. Bringing up a separate concern on the .mm, but if that's the case, can we leave this portion of the change until we also fill in ABPersonCopySource? As it is, it's currently a solution without a problem.\n\nIn reply to: 74813579 \n. > self.recordID = recordID; \nI'm assuming that the reason why we want this initializer, rather than just changing the field in ABPersonCopySource, is that we want recordID to be immutable. If this is the case, you ought to use self->_recordID here, as self.recordID is compiled to call the setter that you don't want to have. #Closed\n. Guh, that's frustrating... it's such a long else-if too :(\n\nIn reply to: 74812542 \n. I meant the files themselves as well, since they're both new files.\n\nIn reply to: 74823842 \n. Oh, I hadn't noticed. I'm probably fine with the current state then.\n\nIn reply to: 74829189 \n. > [[NSMutableAttributedString alloc] initWithString:@\"hello \\nworld goodbye\"]; \nShould autorelease here so that this isn't leaked. #Resolved\n. This file as a whole could use more comments. #Resolved\n. +1, that would also better enforce private access to the helper.\n\nIn reply to: 75166689 \n. This is leaking. #ByDesign\n. nit: you can just one-line this with the below call if you're not doing anything else with it. same with the rest of the file. #Closed\n. also, confused about this __bridge cast - it doesn't appear to actually be using a bridge? you're just casting to a subclass.\n\nIn reply to: 75171401 \n. > _ABMultiValue* emailMultiValue = [[_ABMultiValue alloc] initWithPropertyType:kABStringPropertyType]; \nThis is leaking. #ByDesign\n. Below as well.\n\nIn reply to: 75173807 \n. > CFStringRef label; \na) lack of default cases in switch statements make me nervous.\nb) especially here, because depending on the environment, label isn't guaranteed to be nil'd out on declaration. you could be feeding emailMultiValue a garbage value.\nc) assuming label DOES get nil'd out, is it out for emailMultiValue to take a nil value for label? #Closed\n. Nvm, ARC is enabled in this project, isn't it?\n\nIn reply to: 75170088 \n. Nvm, I forgot that ARC was on.\n\nIn reply to: 75173873 \n. Ignore b), I forgot that ARC was on.\n\nIn reply to: 75174937 \n. You don't know that they didn't pass you an NSMutableString* ;)\nThe label property should be declared copy.\n\nIn reply to: 75191702 \n. ? Why did this have to be in the dll vcxproj? Why isn't it in the lib vcxproj? #Resolved\n. > AddressBook,  \nnit: with this as the category name, in GTestRunner your tests currently look like:\nAddressBook.UnitTests.exe\n |-> AddressBook\n    |-> MutableMultiValueCreateTest\nWith the test class not really doing anything. If you change these to TEST(MutableMultiValue, CreateTest), etc, it'll provide much better filtering. #Resolved\n. I'm really confused about the role the 10 serves here, and why you're working in base10 at all. The carryover is much easier if you just do:\n_reinterpret_cast(result[i+1]) = static_cast(left[i]) + static_cast(right[i]) + static_cast(result[i])\nIf you do this I think you can skip the complicated steps below? The carryover bits will just naturally spill over.\n. You also need:\n- negative positive mixed test\n- test values with much larger mantissas (greater than 2^32, so it takes up more than 2 shorts' worth)\n. how do Good Practices feel about using the setter in the initializer here to implicitly ensure that this has the right retain level?\n\nIn reply to: 76707964 \n. nit: This should probably be above its call (does it generate a warning because this symbol hasn't been declared yet?). This ordering also, to me at least, feels more immediately intuitive #Closed\n. > [startingRedoGroup release]; \nnit: would autoreleasing above cause any issues? (do you depend on the -1 being done already by the time this function exits?) #WontFix\n. > _undoGrouping; \nnot sure how I feel about this variable name basically being a repeat of the class name - got me confused several times #Closed\n. Please break these into shorter lines - I know clang isn't enabled on this file, but it's good practice nonetheless. #Resolved\n. Can you comment here why these ifdefs are necessary between platforms? From what I can see the split might be justified, but I'm usually suspicious of platform divergences, especially in test. #Resolved\n. I'm personally fine with not using an error out-value here, but it bothers me that there aren't test cases here where you do get an error out (what would be an example of such a case?)\n\nIn reply to: 76670902 \n. this is not a good name for a class. what does a 'manager' do, in particular?\n(consider just changing it to _ABAddressBook? it seems to serve a similar purpose as your previous _ classes, and the 'manager' bit adds unnecessary ambiguity, unless there's some exception to the pattern that I'm not seeing)\n. I guess maybe _ABContactManager to match the windows name then? (I still am of the opinion that 'manager' is a terrible thing to name a class, but that's a bit out of our hands I guess)\n\nIn reply to: 77095804 \n. fyi, there is a convenience initializer, [NSAttributedString initWithString:attributes:] that iirc applies the attributes to the whole range.\n. nit: typo #Resolved\n. > _undoObjectsInGroup; \nnit: this is better, but this seems like it can probably be narrowed down to '_undoablesInGroup'? 'undoObjects' just adds ambiguity (is there an undo object that's NOT an NSUndoable, etc) #Resolved\n. > reinterpret_cast(dwriteFactory.GetAddressOf()) \ncan't you just do '&dwriteFactory' here? #Closed\n. bit silly here - you remade the CFRange into an NSRange just to look at its location #Closed\n. > Microsoft::WRL:: \nyou're already using this namespace #Closed\n. nit: I don't feel super strongly about this, but I tend to not like using std #WontFix\n. > cpatures \ntypo #Closed\n. > constrains \nconstraints? #Closed\n. > alloc] init \nwhy not array here? #Closed\n. > j \ninteresting that you end up using j first...\nI think it's probably actually worth giving them real names here (lineCount, runCount?) #WontFix\n. nit: this feels like something we should possibly unit test, maybe add a todo/issue for it #Pending\n. This looks like it's leaking? (I don't think CoreText is ARC-enabled, is it?) #WontFix\n. elsewhere in this file too\n\nIn reply to: 77269955 \n. typo #Closed\n. typo #Closed\n. Yeah my bad, I didn't notice that this was a create function\n\nIn reply to: 77455236 \n. > lease \ntypo #Closed\n. > NSMutableArray<CTRun>_ runs = [[NSMutableArray array] retain]; \nI see that this isn't leaking because you use an attach below, but to me it seems a lot more comfortable/less prone to error if you don't retain here, and use an = below #Closed\n. We both ended up writing this helper actually - I'll defer to mnithish's since I like the placement better, and because mine is messier due to trying to stick to CF functions at the time.\n\nIn reply to: 77756735 \n. > _dw \nNote that this currently doesn't match the capitalization in the header. #Resolved\n. > __ \nNote: Proposing a naming convention here for CT/DW stuff:\ntwo underscores for file-private\none underscore for framework-private\nCF I think used a similar pattern, and I think it makes things a little easier to read. #Resolved\n. seems to not be used? #Resolved\n. I think I'd rather do that in a separate CR? For example, for this function, it probably makes more sense to do the full stripping at the same time as bringing up CTFontManager. Doing it in the current state would probably generate a lot of unnecessary extra work just to keep things building.\n\nIn reply to: 78222243 \n. If that is the case, the family name would be something like 'Black' or 'Black Light', and the remaining tokens would be '', 'Light', or 'Light Light' (have not seen anything like the last one). The weight guesser would still handle those cases correctly (though it would handle 1x Light the same as 2x Light)\n\nIn reply to: 78221297 \n. I actually spent a bunch of effort converting this from CFArray to NSArray so that this file would be consistent T____T.\nI do have versions of the functions I added that are more CF-style. Is our long term goal to make this file more CF-y? (do we care about that?) If so, do I want to also change the existing functions in this file to be more CFy?\n\nIn reply to: 78221279 \n. These are in the same style as Create functions from CoreFoundation - I think there's probably merit in keeping it consistent with CF?\n\nIn reply to: 78206115 \n. These are in the same style as Create functions from CoreFoundation - I think there's probably merit in keeping it consistent with CF?\n\nIn reply to: 78220932 \n. These are in the same style as Create functions from CoreFoundation - I think there's probably merit in keeping it consistent with CF?\n\nIn reply to: 78206408 \n. - Is the same style as CF\n- For most purposes, since this is already def'd to CTFontRef, you can just use that\n- The only times when 'struct' is used is when directly modifying the struct members, and I don't dislike the emphasis there\n\nIn reply to: 78220566 \n. Thanks but this is mostly just a copy of CF structs... ^^;;\n\nIn reply to: 78219486 \n. Ohhh. I wasn't sure what the correct way was to access the 1,2,3 subclasses. Thanks!\n\nIn reply to: 78118540 \n. Oops, I was trying to stay away from %@ since TraceError has problems with it, and I accidentally hit this I guess.\n\nIn reply to: 78220394 \n. good point\n\nIn reply to: 78206516 \n. should I use a dictionary for this instead? #WontFix\n. yeah, I think so\n\nIn reply to: 78206815 \n. It's a file-private helper, we can assume that the pointers are good. I'll add a comment.\n\nIn reply to: 78207940 \n. > if ([upperPropertyToken isEqual:@\"THIN\"]) { \nDo I want to use a dictionary to do this instead? #WontFix\n. oops yes\n\nIn reply to: 78118009 \n. I think Segoe UI was the only font we supported, so we hardcoded it in to work at some lower level when interfacing with FreeType? In any case, DWrite tells us the names have spaces, so spaces it is.\n\nIn reply to: 78118727 \n. That's fine, I'll make the changes then.\n\nIn reply to: 78228222 \n. Is there an API for checking if a runtime font has been added to the system? I would really not like to rebuild this map every time we try to create a font...\n\nIn reply to: 78218544 \n. ? Why are we adding more freetype here? #ByDesign\n. > _attributes = [_attributes copy]; \nI don't think CoreText has ARC enabled does it? If not, this and the copy below would leak. Use .attach() instead of =, or call autorelease #Closed\n. Actually no I changed my mind. If the caller is using this very plain C-style function on a null pointer, I think they probably deserve the AV that they get?\n\nIn reply to: 78227303 \n. Are these just bounding the range? (If so, I find that it's more elegant to do so using std::max/min) #Closed\n. You're actually repeating this pattern a lot in this file - make a helper for it?\n\nIn reply to: 78249297 \n. didn't you already make this deletion in another commit? I could've sworn I saw this already... #Closed\n. This turns out to be a WinObjC-only function anyway - it's not something we have to support. It is used in UIApplicationMain and CGFont as what looks like a convenience method for their own purposes? I'll clean that connection up when CT-DW gets more stable.\n\nIn reply to: 78222890 \n. reminder to both of us that I moved this to a different dir, so one of us will have to update this import depending on which of our changes goes in first #WontFix\n. > 3 \nWhat happens if you feed a bad value here? (exceed range or negative length) I think it'd be caught in your __bound function? Should you add a test case for it? #Closed\n. DISABLED_TEST works just as well - it's not as if these tests are failing to build, after all. #Resolved\n. nit: this test is a bit long/repetitive/looks possibly difficult to maintain? consider writing a helper for your validation and/or making this a parameterized test or breaking this down into multiple test cases. #Resolved\n. nit: this function body could use a lot more comments - I can grasp the surface of what's happening, but I get the feeling that there's a lot of subtle stuff that someone else wouldn't pick up on first-time read? #Closed\n. or just make the same move yourself to make the merge easier on both of us :P\n\nIn reply to: 78466235 \n. This seems like the sort of thing that will have an STL solution already...\ndoes std::copy suit your needs? #ByDesign\n. nvm, should've read the function documentation first ^^;;;\n\nIn reply to: 78471645 \n. Calling this out explicitly - do we care about this? #Resolved\n. well I mean obv, but it'd also\na) be a memory hit for a feature the user may never use\nb) possibly be more difficult to read\ncurrently leaning towards 'no' actually, but I'd like to see what a few more people think\n\nIn reply to: 78610324 \n. If we're committed to that for the long term, I guess I'll bring back in the CF versions of the code I wrote.\n\nIn reply to: 78610729 \n. There's already one in the function comment :)\n\nIn reply to: 78616872 \n. It was more that I already have the CF versions of some of these functions in another branch, so I might as well move them over now. It won't be too much effort.\n\nIn reply to: 78617853 \n. It was less 'cannot' and more 'this seems annoying to implement for very little gain'. Keeping the note here, then.\n\nIn reply to: 78618340 \n. Doesn't match? The default font in this file seems to be Arial?\n\nIn reply to: 78639398 \n. Or wait you probably mean the Gabriola in DWriteWrapper?\n\nIn reply to: 78640310 \n. Bit concerned about that actually - the reason why I switched off of Helvetica was because I queried my list of installed fonts through DWrite, and Helvetica actually wasn't in it? So I thought we should probably pick a different default.\n\nIn reply to: 78640879 \n. Let me file an issue on myself so I don't forget, and I'll address consolidation in a separate CR.\n\nIn reply to: 78641706 \n. #1006\n\nIn reply to: 78648377 \n. oops, saw this earlier, thought I had fixed it\n\nIn reply to: 78851772 \n. I ended up reordering the functions in this file to match that of the documentation - the old ordering sort of made sense in the old impl, but is very disorganized in the new one. #Resolved\n. oops\n\nIn reply to: 78862671 \n. Most of this comment is in CFBridgeUtilities? Confused which part you're asking for\n\nIn reply to: 78862194 \n. seems like CF_INLINE still works just fine!\n\nIn reply to: 78862337 \n. got it\n\nIn reply to: 78864587 \n. Yes - __CFRuntimeObjCClassTable is usable from other frameworks. If it weren't, we wouldn't be able to get it from Foundation, and the bridging tests we have so far for UICTFont shouldn't have worked.\n\nIn reply to: 79022634 \n. I vaguely remember adding something like that but it doesn't seem to be there anymore, so I'm guessing the latter? Lemme dig into the git history a bit.\n\nIn reply to: 79028498 \n. Hmm, for some reason I only added Number to __CF_IsBridgedObject() and not here... how should I check if Number is currently doing the right thing? just static NSNumber* foo = @2413, break on it, see if it's okay?\n\nIn reply to: 79029288 \n. Yeah, #918 is supposed to be the full, fleshed out impl. This is the initial small chunk.\n\nIn reply to: 79029817 \n. No, but CF was peppering it in so many places that it seemed like a good thing to match? Do we wanna just get rid of it in our code and have smaller function bodies?\n\nIn reply to: 79029560 \n. woops, how did that happen.\n\nIn reply to: 79031872 \n. I remember there being some weird reason why we couldn't do this (ran into it in other files too) but I don't remember what it was...\n\nIn reply to: 79032599 \n. What Dustin said.\n\nIn reply to: 79033804 \n. I keep missing these somehow...\n\nIn reply to: 79033908 \n. I mean, if such a thing existed, what would be the point of functions like CFStringCreateCopy then...\nYes yolo\n\nIn reply to: 79035712 \n. just copied the ref plat, will comment\n\nIn reply to: 79036080 \n. Hm, seems to be fine.\n\nIn reply to: 79032846 \n. yup, currently wrong\n\nIn reply to: 79035359 \n. nvm, I wrote it wrong - it seems to be fine and the problem seems unique to string\n\nIn reply to: 79054184 \n. So it does... seems difficult to find though, so I'm not gonna invest the effort right now x___x (current state has been established to be good anyway)\n\nIn reply to: 79066713 \n. Discussed offline, decided that this optimization wasn't worth the effort/complexity.\n\nIn reply to: 79034493 \n. > curState->curTransform \nas discussed yesterday, should instead use a matrix with -b and -c in place of b and c #Resolved\n. > withd \nnit: typo #Closed\n. in general, rather than releasing at the end, I find it a lot harder to make mistakes about balancing the release if you do an autorelease right after the create #Resolved\n. > name \ncan we name this 'familyName' to avoid ambiguity? #Closed\n. > name \ncan we name this 'familyName' to avoid ambiguity? #Closed\n. > fontName \nactually wait... you just put the family name into the font name char buffer... what's going on? #Closed\n. > fontName \nsame question as above #Closed\n. consider moving this switch statement out into its own helper (something like, _CTTextAlignmentToDWriteAlignment()):\n- you won't have to break since you can just early return\n- makes it easy to reuse\n- breaks the code into smaller chunks #Closed\n. > Segoe UI \nAny particular context for changing this? #ByDesign\n. > CFRetain(framesetter); \n? #Closed\n. why do the refreshValuesFor... functions release this? that seems like a pretty weird memory management pattern?\n\nIn reply to: 79930597 \n. > CFRetain(frame) \nsame question #Closed\n. > CFRetain(run); \nsame question #Closed\n. > CFRetain(line); \nsame question #Closed\n. uhhh... just pass it something from the extended helper lol #Resolved\n. > CFRetain(textLabel.lineRef); \n? #Resolved\n. rather than doing this yourself, just declare the property as @property(nonatomic, retain) #Closed\n. I mean, this currently works just fine because the string is being held in a dictionary and thus is guaranteed to last for as long as we need it, and has balanced retain count. Is your concern just that if we didn't know about that implementation detail, we wouldn't be able to guarantee that this'd be the case, because autorelease wouldn't do the correct thing in the general case for out pointers? (is that the case?)\n\nIn reply to: 79964653 \n. ...?\npointSize / designUnitsPerEm\n= (pt / em) / (design unit/em)\n= pt / design unit\nthis float is not what you labeled it... #Resolved\n. > return metric * pointSizeUnitsPerEm; \nuhh, this just evaluates to\ndesign unit * pt/em\nwhich doesn't reduce to anything... what final unit were you hoping to get out here? #Resolved\n. these comments don't actually apply to the math here anymore also...\n\nIn reply to: 80326649 \n. > // Created with impossible values FLT_MIN which signify they need to be populated \nI'm not so sure about this... \n1) what's your reasoning here that FLT_MIN is an impossible, rather than merely improbable value?\n2) it's not super evident that this was the intended purpose of FLT_MIN in DWriteWrapper #Closed\n. If you end up having to do this pointSize / designUnitsPerEm here as well as everywhere else, it'll probably be better if you make _CoreTextScaleMetric a three-parameter function instead of two-and-the-caller-is-expected-to-know-to-divide-first. #Resolved\n. > REMINDER \ntypo #Closed\n. > unsigned short* _mantissa; \nshould probably declare the size of the array here rather than leaving it as a raw ptr #ByDesign\n. going to keep reading first but that sounds extremely scary...\n\nIn reply to: 80530163 \n. that sounds much better : )\n\nIn reply to: 80529650 \n. Raj's comment was made at a time when the division result was already outside the function, so you might as well have cached it. In general I have the following issues with _CoreTextScaleMetric:\n- The name is not very informative. For CTFont, __CTFontScaleMetric was more forgivable since the context was smaller, and the scope of what it could be was smaller. _CoreTextScaleMetric on the other hand is in DWriteWrapper, and could be any number of things. A better name might be something like _CoreTextDesignMetricToPoints()\n- Changing the name to that though, makes it pretty obvious that the function just hides a multiplication, in which case it feels a bit silly to have a dedicated helper for it?\n- It feels extra silly to have a dedicated helper for it and also assume that the caller will have the knowledge to do this division outside, rather than shifting the burden to the function.\n- In general, caching that result is a pretty small optimization, and we'd prefer easier-to-read/maintain code over the small gains that caching would get us. I'm fine with leaving this function the way it is if you think this is the most readable state, but I don't want optimization to be your foremost reason.\n\nIn reply to: 80529943 \n. > unsigned int commonLength = (left->_length < right->_length) ? left->_length : right->_length; \nnit: would prefer std::min here - clearer to read #Closed\n. > // \n? #ByDesign\n. More comments please... it wasn't clear to me until halfway through the function that you had the assumption that this helper already arranged the two NSDecimal*s in the correct order. #Closed\n. In general, assumptions about parameters going into each function, and abstract description of each major step in the function would be good. (I at this moment am still parsing why this function is broken into two steps, and a comment for each step would've helped greatly)\n\nIn reply to: 80536966 \n. oops, leftover from testing #Resolved\n. Need you to mention more about your assumptions here - you have a lot more than just this\n1) NSDecimalNormalize doesn't arrange the order of the two numbers\n2) You also do other preprocessing so that subtraction here is safe. I was expecting the following subtraction\n0001 FFFE\n0000 FFFF\nto fail, but it actually ended up succeeding because it ended up as\n0000 FFFF\n0000 0000\nby the time it got here? Please qualify everything more x_____x\n(also the above would probably be a good test case) #Resolved\n. Currently 'used' in CGFont - I'll rip it out when I fix that\n\nIn reply to: 80597741 \n. oops\n\nIn reply to: 80597857 \n. I'm still not sure how I feel about this, but you definitely need to at least comment that you're relying on the int -> short downcast here, and that you're expecting it to overflow and give you the correct value. There's a lot going on in just this one line that's scary and not immediately obvious and it needs to be more visible. #ByDesign\n. didn't we just talk about this last week and you said it was fine as O(n)? :P\n\nIn reply to: 80598528 \n. Then, I would say that we just get rid of the helper function except in CTFont where it makes sense still :P and manually do the math here, while caching the division result.\n\nIn reply to: 80596585 \n. Yup! NSRoundingMode and NSCalculationError are explicitly there for that case.\n\nIn reply to: 80589323 \n. So, here are my concerns:\nWeight: This one is a three-way map, and three different directions are used. I could make split these into multiple maps, but I like having the mapping be all in one place.\nStretch: This one is a good fit for converting into a dictionary (n = ~10), but it'd be weird if it had a different format from the other three.\nStyle: Kind of too small to be in its own dictionary (n = 3), and want the format to match at least one other. We could combine maps with stretch, but then we'd need to have a map, rather than map, which is a lot uglier...\n\nIn reply to: 80598873 \n. You should probably add some windows-only unit tests at the level of your internal helpers (eg: _subtraction) - they're fairly complex, and testing only at the API level is going to obscure a lot of errors/edge cases. #ByDesign\n. > ((IS_NEGATIVE(leftOperand) && IS_NEGATIVE(rightOperand)) || (IS_POSITIVE(leftOperand) && IS_POSITIVE(rightOperand))) \nIS_NEGATIVE(left) == IS_NEGATIVE(right) #Closed\n. > Microsoft::WRL:: \nnit: you're already using this namespace\nsame below #Resolved\n. ? you're already public right now #Resolved\n. derp, for some reason I completely missed that the below block was conditional\n\nIn reply to: 80733607 \n. we discussed this last time - since this is a C-style function, it probably makes more sense for it to throw than for it to handle null and return a default.\n\nIn reply to: 80733021 \n. same as above\n\nIn reply to: 80733082 \n. If it has 'Create' in the name, it'll generally indicate that it returns retained. ObjC-style convenience constructors are generally named something like \"frameWith...\", without a 'create'.\n\nIn reply to: 80719399 \n. Think from the point of code maintainability - As-is, if this code was passed off to someone else, and they were to use this function, there is a high probability that they will miss implied preconditions established in another function, and a high probability that most if not all of the code reviewers will also gloss over it. You want to reduce that risk as much as possible.\n\nIn reply to: 80621577 \n. I think I'm going to just leave it as-is for now. We can revisit this if it does turn out to be a bottleneck.\n\nIn reply to: 80601463 \n. Testing on the ref plat:\nCTFontGetSlantAngle(NULL) returns 0\nhowever\nCFDictionaryGetValue(NULL, CFSTR(\"FOO\")) raises an AV, indicating a general principle of this being okay\nI don't think this is a situation where we care super-much about adhering to the former rather than the latter - probably an arbitrary decision by a lone dev.\n\nIn reply to: 80783054 \n. discussed offline, holding off til CGFont\n\nIn reply to: 80785199 \n. > CFLocaleCopyCurrent() \nlocale leaks here and below #Resolved\n. nit: you could've also used CFLocaleGetSystem() but whatever\n\nIn reply to: 80806159 \n. >  \nnit: weird that clang left this space here #Closed\n. hmm, is it worth adding an else here just so we can document how %z_ and %t_ behave on the reference platform?\n. ? confused, what is 8 byte?\nthe mantissa in total is 8 shorts = 16 bytes = 128 bits??\ndid you mean the overflow?\n\nIn reply to: 81033969 \n. come to think of it, is there any reason why you shouldn't just memcpy the whole thing? #ByDesign\n. nit: would rather you break this down to:\nif (notANumber(left)) {\n    if (notANumber(right)) {\n    } else {\n    }\n} else if (notANumber(right)) {\n}\nand avoid some redundant checks #Closed\n. > // all same \nnit: i understand what you mean, but this is not a great comment #Resolved\n. this should just be a for statement - no reason to go through the trouble of setting up all three clauses separately... #ByDesign\n. ? how come?\n\nIn reply to: 81211884 \n. I'm not convinced that this is the case - it seems to me like you're going to end up overflowing smaller amounts, many more times, like this.\n\nIn reply to: 80793856 \n. I guess you wouldn't be able to stick 10^5 into _mantissaMultiplication anyway since it doesn't fit in a short\nLet me think about this for a bit. At the very least I think you should break this down into increments of 10^4 + remainder(exponent/4), but I feel like there ought to be a better way...\n\nIn reply to: 81215475 \n. Oh, that's a good point. Can you leave a TODO here, then?\n\nIn reply to: 81216691 \n. You will have some cases where you lose precision, but, currently you're losing precision in the wrong direction. You need to check whether the exponent difference is >=... 38, I think was the max?\nConsider the case where you're normalizing 1_10^40 and 1_10^1. With the current algorithm, you'll try to represent 1_10^40 in terms of 10^1, and you'll overflow the 1_10^40 over the upper limit of the 128-bit mantissa. Rather than this, the correct behavior would be to meet somewhere in the middle like 10^2 or 10^3, and have the precision loss be of 1*10^1 -> 0, which is much less disastrous.\n\nIn reply to: 80622059 \n. kk, be sure to leave a TODO here\n\nIn reply to: 81219214 \n. > _MAX_EXP) { \nwasn't there a minimum exponent also? #ByDesign\n. oh wait, never mind, I get it (exponent limits are implicitly enforced by sizeof(byte)), it just can temporarily exceed here\n\nIn reply to: 81225373 \n. > reminder. \nnit: typo #Resolved\n. Rather than doing extra operations to rewind a step, you could just cache the result of the previous step, and use that as the result going forward if there is a remainder. #Resolved\n. > number->_isCompact = 1; \n- this currently doesn't get read anywhere (does it make sense to check for this at the top of this function?)\n- this currently never gets set to false (are there any operations that could make this false? should we just set this to false at the end of all of them?) #ByDesign\n. if you'd rather avoid the copy, then keep two structs around, and swap between which one is 'current' and which one is 'previous'\n\nIn reply to: 81226716 \n. nit: it's a little weird that one case is handled in a helper and the other isn't -shrug- #WontFix\n. worth noting those assumptions in a comment, I think\n\nIn reply to: 81227636 \n. but you're more error-prone as-is. you're assuming that your multiplication and addition operations will return you to the correct previous state, whereas if you cached it, you'd guarantee it, and limit the scope of any errors in those functions. a buffer/cache that you swap between is also a fairly common design pattern and shouldn't be too complicated\n\nIn reply to: 81227942 \n. ;_; but \n- reinterpret_cast(&finalResult[index+1]) = static_cast(finalResult[index+1]) + static_cast(shorter->_mantissa[index]) + static_cast(longer->_mantissa[index]) was so elegant... #WontFix\n. (it's okay you don't actually have to change it to that I'm just sad)\n\nIn reply to: 81230357 \n. I know, I'm just emotionally attached to my original formulation :(\n\nIn reply to: 81230600 \n. This reminded me that NSDecimalNormalize should also compact, so that you don't overflow when you can avoid it.\nThis should probably be a separate TODO though. #ByDesign\n. wait you were okay with a for loop here but not for the same thing above?? #ByDesign\n. from here to the end of the section can just be _compareMantissa, then return the opposite if right._isNegative #Resolved\n. You could save some code duplication here if you do\nNSDecimal* greater = right;\nNSDecimal* lesser = left;\nif (res == NSOrderedDescending) {\n    std::swap(greater, lesser);\n}\nthen just take the code from your first case and replace 'right' with 'greater' and 'left' with 'lesser' #Closed\n. > 1 \nwait, why does this start at 1? #ByDesign\n. i'm actually really confused - this appears to make the math work out, but I'm not really sure why\n\nIn reply to: 81234205 \n. okay, I understand where this 1 comes from now, and it's incorrect\nThe correct amount to add at each place is actually (USHRT_MAX + 1), not USHRT_MAX. However, since in a lot of your test cases your first mantissa short tends to 'borrow' from your second short and so on (think doing subtraction by hand, you subtract 1 from the higher place and add 10 to the lower), you end up needing only USHRT_MAX in most of your test cases, making it correct by coincidence.\nHowever, if you do a test case like below where you don't need to borrow:\n1 FFFE FFFF\n  0001 0001\nthis algorithm results in\n1 FFFC FFFE\ninstead of\n1 FFFD FFFE\n\nIn reply to: 81235062 \n. the correct approach here would adjust based on whether or not a place needed to be 'borrowed' from the next short\nI believe you can determine this by whether anything remained in overflow, so:\noverflow = 0\n...\noverflow += (overflow ? 0 : 1) + USHRT_MAX + ...\n\nIn reply to: 81239234 \n. Incidentally, while checking _subtraction (before realizing that this NSDecimalSubtract doesn't necessarily go to _subtraction()), I found that the following case doesn't seem to work:\n11453246122 - 3166485692\nor\n2 AAAA AAAA - BCBC BC BC\ncould you take a look at it? #WontFix\n. or wait ignore me maybe I did the math wrong\n\nIn reply to: 81239648 \n. yeah I did the math wrong oops\nthe +1 in the case you don't need to borrow is implicit by overflow >> 0x10 leaving a 1 if nothing needed to be borrowed\nthis was a lot to wrap my head around actually so do you think you could add some of this explanation in a comment T___T\n\nIn reply to: 81240419 \n. confused - shouldn't this only be considered an overflow if we go past NSDecimalMaxSize (no more shorts to fill?) #ByDesign\n. confused - shouldn't this only be considered an overflow if we go past NSDecimalMaxSize (no more shorts to fill?) #ByDesign\n. > break; \ninstead of preallocating result, and incrementing it each step, and breaking here, just return i + 1 here. (and return 0 or 1 as a default, depending on how you classify 0) #Closed\n. > | \nshouldn't this be a + ? #ByDesign\n. I'm honestly fine if you put this as a constant in NSDecimal.h (like NSDecimalMaxExponent or something)\n\nIn reply to: 81210140 \n. wait what? I'm assuming that DBL_MIN is 1 * 10^-(big number). Is (big number) > 128? #ByDesign\n. reference says that it's usually 1E-37, that seems representable...\n\nIn reply to: 81245463 \n. this seems like an unnecessary step if the number is an integer though... #ByDesign\n. > res /= 10.0; \nin the same vein as NSDecimalCompact, cache your previous state instead of doing this.\nThis is even more crucial here because of floating point loss-of-precision, meaning that there are known cases where (res * 10)/10 is NOT = res. #WontFix\n. hm, guess you're right\n\nIn reply to: 81247234 \n. wait what? the concern AJ had was that -LLONG_MIN overflows because it's LLONG_MAX+1\n\nIn reply to: 80515582 \n. consider just exposing your _obtainLength helper #WontFix\n. except it works anyway? weird\n\nIn reply to: 81248057 \n. Would like test cases where exponents differ #WontFix\n. oh, oops I missed it\n\nIn reply to: 81250828 \n. this isn't an interesting exponent difference test by itself though? you need a test case where it gets the opposite of the result that you'd get if you just compared 10 and 9223372534876. Like this you don't know whether you actually hit your exponent check or not. #ByDesign\n. Please add a few more test cases with this number where it's not just subtracting into itself. It's interesting because it occupies a decent chunk of the mantissa and has an exponent factor. Smush something like... 1010.5, 14342e-40, and 120341581572e-100 into it. #Resolved\n. ? weren't NSDecimals supposed to be as compact as possible? why is it desirable to fill it up at this stage, if we know the double is an integer?\n\nIn reply to: 81251181 \n. that doesn't answer my question. why do this here at all, if we're just going to compact it later, and can skip this step? what benefit does it offer?\n\nIn reply to: 81252229 \n. exactly, it's a free test case :P and you may have seen it in the debugger but you don't know whether it'll remain with that implementation detail in the future. might as well add two extra lines now\n\nIn reply to: 81251655 \n. error? you mean from memory being uninitialized? you can just memset(0) everywhere though, or do you mean some other kind of error?\n\nIn reply to: 81253259 \n. ```\nfor (int i = length - 1; i >= 0; --i) {\n    if (mantissa[i] != 0) {\n        return i + 1;\n    }\n}\nreturn 1;\n```\nis two lines shorter though...\n\nIn reply to: 81254211 \n. right, but there's no meaning in doing so if the double is an integer, and the end result of the reference platform still has the length as 1\n\nIn reply to: 81256739 \n. > ((res != 0) \nnit: separate the res != 0 part of this while into an if statement, it doesn't need to be reevaluated each time #Closed\n. there's no reason to make that assumption though when you can check it for yourself, just skip this section if floor(res) == res\n\nIn reply to: 81257490 \n. Oh I see.\nGiven the two are equivalent though, I would prefer you use +\n- More consistent with your other functions\n- Probably faster to evaluate?? My instinct is that CPUs are gonna be faster at + than bitwise operations\n- For me at least, easier to read\n\nIn reply to: 81259516 \n. WINOBJC comment? #Closed\n. depending on how you feel about stl here, you could also use std::fill #ByDesign\n. sorry, I misspoke - instead of 'skip the section', I mean 'end the loop', since there's also cause to stop if res has reached 235 from 2.35, for instance.\n\nIn reply to: 81258092 \n. if floor(92.000000) = 92.000000 though, it's an integer and the rest of the precision isn't relevant\n\nIn reply to: 81394335 \n. Add a few test cases with overflow, loss of precision, etc (the 'bad' cases) #ByDesign\n. ? #Resolved\n. I mean, a test where an operation returns NSCalculationOverflow, not just a test where we overflow to the next short. I don't see anything like that here. I don't mind opening that as a separate bug though, do you want to do it like that?\n\nIn reply to: 81398501 \n. I read the places where the function was used and understand now\n\nIn reply to: 81392831 \n. ?\nNSDecimalNumber* num = [NSDecimalNumber numberWithDouble:12.5];\nNSLog(@\"%u\", num.decimalValue._length);\nNSLog(@\"%u\", num.decimalValue._mantissa[0]);\n12.5\n1\n125\nwhat behavior are you trying to match here?\n\nIn reply to: 81398073 \n. #1062\n\nIn reply to: 81399278 \n. I derped - I was checking at the hex level and I didn't notice that there was an exponent of 10^1.\n\nIn reply to: 81407456 \n. comment here plox\n\nIn reply to: 81240725 \n. er, the thing you did below wasn't what I meant. what I meant was, add the extra two lines here:\nleft._exponent = 40;\nEXPECT_EQ(NSOrderedDescending, NSDecimalCompare(&left, &right));\nThis way it guarantees that you've taken into account exponent, because the result has changed as a result of it.\n\nIn reply to: 81253119 \n. ? #ByDesign\n. nit: just peg this onto the line above - string = [[[alloc]init] autorelease]; #Resolved\n. nit: ternary operator instead? #Closed\n. > range.location + range.length < size \nshould this be <= ? #Closed\n. > CFRangeMake(1, 5) \nprobably worth making this and text constants so that they're easier to relate to each other? #Closed\n. ? #Closed\n. did these turn out to be 'bad cases' where we had the wrong return values before? if so, can we add some comments to label them as such?\n\nIn reply to: 81864283 \n. same question here #Closed\n. still here?\n. > Frameworks\\include\\ \nAny reason this is in Frameworks\\include? DWriteWrapper is in Frameworks\\include because we have some lower-level tests that exercise it - do you have similar plans for this file? #Resolved\n. unused? #Resolved\n. I guess you can leave it in if you plan to use it eventually :/ (but I'd prefer c_logTag in that case)\n\nIn reply to: 82025722 \n. shouldn't it be in Frameworks\\CoreGraphics if it's a private header, then?\n\nIn reply to: 82040170 \n. add a comment here explaining why this is necessary?\n. nit: this is kind of gross\nI guess you could change it to (!success_ && message_.get()) ? message_->c_str() : \"\";   ? does that even look better? #WontFix\n. nope! [[UIFont alloc] init] crashes on the reference platform\n\nIn reply to: 82468031 \n. I filed this as #1108, I'll add a comment to the task calling out these functions specifically.\n\nIn reply to: 82511650 \n. we weren't before, since UIFont doesn't support NSCoding, and I wanted to maintain the existing functionality. I'll wait for dave to comment.\n\nIn reply to: 82631100 \n. Seems... undesirable?\nhttps://developer.apple.com/reference/foundation/1587930-nsallocateobject\n\"This function is deprecated and unavailable for use with ARC.\"\n\nIn reply to: 82673565 \n. Hmm, if it's the case that the UIFont still has to support initWithCoder despite of its doc (was not previously aware of this, and thus current CT-DW UIFont doesn't), then I can just change up UIFont to support alloc and initWithCoder and we won't need the special case here.\n\nIn reply to: 82917523 \n. As commented below, I can remove the one-off, but I'm still concerned about leaving [classId alloc] here:\n- alloc without init is considered invalid\n- we have a code path here (if classId doesn't support initWithCoder) where we effectively call [[classId alloc] autorelease].\n- we appear to have been DEPENDING on this alloc autorelease code path, since if I change this to\n  if ([classId instancesRespondToSelector:@selector(initWithCoder:)])\n      pObj->cachedId = [[classId alloc] initWithCoder...]\n  then things start exploding all over the place with an infinite recursion\nwe can take care of this separately in #1105, but I wanted to call it out while we're here and make sure you're aware of it\n\nIn reply to: 82918436 \n. > invertedCoordinates \ndo the DPI scaling adjustments below belong under here?\n. just have this as a private helper in NSLayoutManager then :P #Closed\n. > ) STUB_METHOD; \nI'll fix this in iteration 2 (this'll probably be borderline a blocker and isn't super-hard to fix), there are a few other things I want to look at right now. #Resolved\n. #1132 deals with this, but I needed to get rid of this locally to unbreak some internal test apps. #ByDesign\n. #1132 deals with this, but I needed to get rid of this locally to unbreak some internal test apps. #ByDesign\n. should this comment stay there? #ByDesign\n. nit: can you fix the signatures here? #Resolved\n. > int \nnit: NSInteger #Resolved\n. > unsigned \nnit: NSStreamStatus (in nscfoutputstream also) #Resolved\n. signatures etc etc. not sure whether you'll fix in the NSCF files but I think they should be correct in the NS files at least. #Resolved\n. the rest of these ought to have CF equivalents also?\n. wait but the actual file still exists? #ByDesign\n. ugh!\n\nIn reply to: 82900184 \n. wait I know, do it like CF and put in some // comments explaining the nulls. that'll break up the lines and make it easier to read/look more like other CFRuntimeClasses\n\nIn reply to: 83312073 \n. ? why is this in a scope? #Resolved\n. gotcha\n\nIn reply to: 83311559 \n. ? #Resolved\n. how did clang format not butcher this? (it's beautiful) #Resolved\n. Yeah I think this repro'd on develop also. #Resolved\n. Arbitrary indices for arbitrary glyphs in the font. It doesn't really matter what they are for the purposes of this test as long as they're between 0 and (num glyphs in the font) #ByDesign\n. Do horizontal regardless :( #Closed\n. Didn't actually check but there's a 0% chance in my mind that it could look different at all. This API returns the total accumulated bounding box of every glyph in the font. As you can see below, we get correct bounding boxes for individual glyphs, so it's most likely that one version of the font has some extra glyphs. #ByDesign\n. I definitely broke on this the other day but can't repro it anymore. Weird.\n\nIn reply to: 82630600 \n. Oops, these are gone for good. I forgot to actually delete them. #Resolved\n. ? wouldn't I still have a need to dispatch the lambda once though, so I don't run the lambda every time I call this function?\n\nIn reply to: 83330369 \n. they're an optimization to avoid calling getters on _dwriteFontFace every time, they don't matter in terms of comparison.\n\nIn reply to: 83337659 \n. Tried them, they generally don't work reliably, I'd rather not depend on them.\n\nIn reply to: 83338650 \n. oops, it's been long enough that I forgot, sorry!\n\nIn reply to: 83337669 \n. nit: can you put this back on the previous line?\n. > incompatable \nnit: typo\n. nit: would it be possible to put this chunk together with the chunk where it's used?\n. any reason to have this helper anymore? just have this be the body of CTFrameDraw() #Closed\n. if I'm reading this correctly, don't you not need to calculate width anymore? #Closed\n. > & \n\n& \n\nscope this down to just what you need (global captures are dangerous, looks like you just need glyphRunDescription?) #Closed\n. > static_cast<_CTRun*>([runs objectAtIndex:0])->_dwriteGlyphRun.glyphCount != 0 \ndidn't you have a different fix for this in your other pull request? that one had this part of the if in a smaller block #Resolved\n. > [[NSAttributedString alloc] init \n\n[[NSAttributedString alloc] init \n\nleaking? #Closed\n. sounds good, just wanted to know what was up\n\nIn reply to: 84180915 \n. unfortunately not :( the math won't work out\n\nIn reply to: 83675851 \n. yes but this keeps it more in line with the functions that do have to do work\n\nIn reply to: 83672784 \n. > CGContextRestoreGState(ctx); \nfyi: this won't invert the text matrix back #Closed\n. sweet\n. ???\n\nIn reply to: 84372039 \n. or at least it shouldn't, according to the docs. idk about our current impl though lemme check\n\nIn reply to: 84372445 \n. I think our current impl does. Can you double-check that this is the case, and if so, open a low-pri issue to fix it, and leave a TODO here to do the right thing once text matrix isn't part of GState?\n\nIn reply to: 84373152 \n. > // Restoring GState should not return text matrix to original value \nas it's currently written it's not very clear what you're referring to D: right now this sounds like \"this is how it works, and I'm okay with that\" rather than \"this is what I want to do, this is how the docs say it should work, but our impl is flawed in this way so we do this instead\"\n. CFArray doesn't check for it in __CFArrayEqual, so I'll follow its lead. My assumption is that CFequal et al check for null before it gets here.\n\nIn reply to: 84333067 \n. ?\n\nIn reply to: 84347629 \n. CGFont values are integer-exact, this isn't a rounding error, and having an error margin of over 100 would be pretty silly.\n\nIn reply to: 84343783 \n. #1201\n\nIn reply to: 83327322 \n. wrote this before we re-evaluated the line, this is pretty non-blocking, I'm going to file a separate issue for this.\n\nIn reply to: 83305866 \n. #1202\n\nIn reply to: 84395416 \n. need it for CGFontGetTypeID, in line with CF patterns\n\nIn reply to: 83330701 \n. ?\n\nIn reply to: 83338764 \n. yeah, clang forced this :/\n\nIn reply to: 83338687 \n. Brian made this recommendation that we should leave such optimizations to DWrite itself - according to him it's likely that DWrite already caches its factories and by taking manual control over the factory we're messing with its memory management.\n\nIn reply to: 83500804 \n. not much to be gained, then - I'd much rather call Autorelease once than .get() every time I need to use something.\n\nIn reply to: 84348109 \n. I mean, if it's only used in the scope of the function...\n\nIn reply to: 83338922 \n. There's only two options, one of which is 'no options', the other is deprecated and was 'exclude synthetic data' https://developer.apple.com/reference/coretext/ctfonttableoptions?language=objc\nI think it's close enough that we should just consider it interoperable.\n\nIn reply to: 83499156 \n. oh I see what you mean now. I'm gonna autorelease it here and retain it during return instead.\n\nIn reply to: 83337852 \n. yeah idk why I did this\n\nIn reply to: 83338241 \n. too much of a stretch at this point, maybe when the need is more apparent.\n\nIn reply to: 83340634 \n. getting just length causes a throw\n\nIn reply to: 84335143 \n. sure\n\nIn reply to: 84339235 \n. forgot to change that when I changed this function to have an outptr, ty\n\nIn reply to: 83338560 \n. > don't see it being used after\n\nevery param after the first in this function is an outparam\nweird set of values to init with\nhow so?\nwhy are these pointers?\nthey need to be to be outparams?\n\nI don't really understand your issues, but to possibly clarify, I'm stuffing them into this struct because there's no such thing as for (obj in collection) in CF and ApplyFunction with some arbitrary context is the next closest thing.\n\nIn reply to: 83339511 \n. I'm going to break this rule in this case only because a name for both a struct and a pointer to that struct is needed, and I think this is the least confusing way to convey that.\n\nIn reply to: 83338838 \n. ?\n\nIn reply to: 83340871 \n. it reads cleaner to me with this else, I'd like to keep it\n\nIn reply to: 83339432 \n. ?\n\nIn reply to: 83340447 \n. ?\n\nIn reply to: 83340473 \n. some other time\n\nIn reply to: 83501278 \n. some other time\n\nIn reply to: 84333697 \n. I'll just do a postscript name comparison instead, those are pretty unique between fonts.\n\nIn reply to: 84346993 \n. I'll just do a postscript name comparison instead, those are pretty unique between fonts.\n\nIn reply to: 83340655 \n. ?\n. nit: unnecessary line break here, not sure if it works with our annotation tools\n. > lineHeight \nMy only concern is, I don't know if this is a good name. lineHeight to me implies the distance from the bottom of the line to the top of the line, which would be ascent + descent. (ascent - descent)/2 would be the distance between the baseline and the center, but there'd be a weird burden on the caller to know that. ascent - descent doesn't really have a good name for it.\nProbably the best way is just to pass both ascent and descent and leave the calculations in CGContextDrawGlyphRun?\n. Possibly name them lineAscent and lineDescent so it's clearer that they're metrics of the surrounding line.\n\nIn reply to: 84549518 \n. wait, is descent negative? I didn't think this was the case.\n\nIn reply to: 84551029 \n. this function returns a struct and not an hr though, we don't have a macro for that??\n\nIn reply to: 84556247 \n. ?\n\nIn reply to: 84556024 \n. why is it poor? this is the intended usage of CF____ApplyFunction()\nCFSet doesn't support a normal for loop as it has nothing like a \"get at index\". I can bridge to something more convenient, but since an eventual goal is to remove dependencies on Foundation, which would revert the code back to this state, I'd rather just leave it as is?\n\nIn reply to: 84555482 \n. filed #1207 to look into it at another time.\n\nIn reply to: 84554837 \n. There are two particularly short ones in this file:\n__GetUserDefaultLocaleName() \nI think it's probably reasonable to be too lazy to declare a buffer every time.\n_DWriteCreateFactoryInstance()\nfair enough, I think it's fine to discard this one. (This was a holdover from when we kept it as a static)\n\nIn reply to: 84554937 \n. we discussed offline - my mental model of the baseline was wrong, we should just use ascent.\n\nIn reply to: 84551992 \n. changed the names to Copy and return +1s\n\nIn reply to: 84745555 \n. this is code that has been moved over, but\n(fontName) times new roman italic = \"times\", \"new\", \"roman\", \"italic\"\n(familyName) times new roman = \"times\", \"new\", \"roman\"\npropertyTokens = \"italic\"\nno it wouldn't?\n\nIn reply to: 84761462 \n. additionally, even if a token like \"new\" made it into the property tokens, we'd just end up ignoring it anyway\n\nIn reply to: 84764514 \n. nit: in both files, if you instead wrapped the below code in 'if (filename)', you wouldn't need this extra return path here and could just rely on the default #WontFix\n. out of scope for this review - this change is both time-sensitive, and due to the nature of the bug, I'd like to minimize risk and keep this change as small as possible. we can address other things if tests pass in the lab tonight, so please file non-showstopper feedback as separate issues.\n\nIn reply to: 85243923 \n. uhhh don't check this in, our lab machines don't have this font (though our build machines do)\n. Let me try to clarify on correctness here. [UIFont familyName] for this on the reference platform would return \"Franklin Gothic Medium Cond\". This is the same with XAML and DWrite, as well as several websites such as http://fontsgeek.com/fonts/Franklin-Gothic-Medium-Cond-Regular which enumerate family names for fonts, suggesting that it's a property of the ttf file itself.\nHowever, XAML/DWrite only accept \"Franklin Gothic\" as the input family name, even though they give something else as output. This is fundamentally a mismatch on their end, so I don't know that there's anything \"more correct\" than this UIFont private function right now.\n. no.\n- we're reverting this soon anyway, no reason to make this change bigger and messier to revert.\n- this isn't intended to be our go-to default font functionality. we have other default font constants elsewhere. this just has to be any default font. (@rajsesh-msft and I were throwing around the idea of using something ugly so it'd stick out)\n\nIn reply to: 85445534 \n. not like this - look at what I did in UIKitTypes.h for NS, UI, CT LineBreakMode. Then you can change it back to a static_cast below. #ByDesign\n. eesh\n\nIn reply to: 85569934 \n. add a comment here about the non-agreeing order and why we need this\n\nIn reply to: 85579206 \n. - re: valuable for derived: this is a WinObjC-only extension, and we don't have any UIFont derived classes, nor should we ever.\n- re: designated initializers: UIFont has no initializers we could route to :(\n\nIn reply to: 85619643 \n. yeah, now that you mention it (this was copied forward from some really old code).  I'll change it to == 0.\n\nIn reply to: 85619699 \n. > nullptr, \nyou're not currently getting the descent though, so it doesn't look like this would've changed anything?\n. (i think ascent + leading would've been correct here in any case)\n\nIn reply to: 85786676 \n. nit: I would probably just make the comment be about what the SetTextPosition is actually doing? \"because CG origin is the opposite vertically from UIKit origin, flip the y line origin from upper left corner to lower left corner (baseline)\", except use better wording than i did\n\nIn reply to: 85789609 \n. > -transform.c \ni'd been wondering for a while why this was missing...\n. are we still respecting this? (do we rotate in the wrong orientation now?)\n. > CGAffineTransform transform = CGAffineTransformMake(1, 0, 0, -1, 0, -lineAscent / 2.0f); \nI'm sorry, I failed you :( #Resolved\n. > param \nplease give this a more meaningful name\n. got it. sorry about this :(\n\nIn reply to: 86254978 \n. Xaml is built on top of DWrite, so yes.\n\nIn reply to: 86258890 \n. Discussed offline - I pursued this route earlier, but exporting a struct through this many layers ended up being a much more ugly change. Leaving as is.\n\nIn reply to: 86256084 \n. > inRange:{ i + range.location, [subString length] }]; \nMm. This is kind of a big ask, but in retrospect, I would prefer if you relied on [NSAttributedString enumerateAttributesInRange:options:usingBlock:] to do the loop instead. You're a lot less likely to make a mistake that way. (Note that you'd have to declare incompatibleAttributeFlag and textLayout as __block if you do this) #WontFix\n. > a transformed version of expectedElements \ni wanted to use CGPathCreateCopyByTransformingPath, but we don't have that yet :( #Resolved\n. yeah, I copied the template from mnithish's code above\n\nIn reply to: 86887974 \n. huh, TIL\n\nIn reply to: 86888869 \n. oops #Resolved\n. Mm, tried it, it looks funky to me, and I called these out in the class comment anyway. Going to leave as-is.\n\nIn reply to: 86891299 \n. Hmmm...\n\nIn reply to: 86891501 \n. ? CGAffineTransforms are not ref-counted o.o\n\nIn reply to: 86892348 \n. ? what did you have in mind?\n\nIn reply to: 86892134 \n. isn't E_UNEXPECTED generally kind of scary? I was trying to go for something a bit lighter.\n\nIn reply to: 86893574 \n. yup!\n\nIn reply to: 86892725 \n. oops I might've added it twice apparently? let me check #Resolved\n. oops #Resolved\n. > 1048576 \nwould be good to comment how this number was derived\n. > CanvasSize() \nwould we ever care about being able to change this?\n. > size.width * 4 \n1) are we ever going to have tests that render to colorspaces with not 4 components?\n2) if not, call we call that out in a comment?\n. nit: you lopped off the 'not supported' part of this sentence\n. same here\n. > $(UT_FRAMEWORKS) \nthis doesn't seem to be declared anywhere, is the expectation that we'll have dirty flags when making this makefile?\n. > FLT_MAX; \nnit: std::numeric_limits::max(), for consistency with the rest of this file?\n. > string \nnit: could just use a literal\n. > EXPECT_NE(0, size.width); \nthis is a bit loose, I would probably check specifically that width and height are CGFloat max\n. Agreed, I think the extra nesting would only hurt readability, and this variable seems like we might reuse it for another function in the future anyway.\n\nIn reply to: 87678020 \n. this version is most likely (can't say for sure) more performant than our previous version, as it lacks the string parsing. we can make this a little more lazy, but not by much - we can't avoid iterating through all fonts and families. we can do it later, but it would probably hurt readability (see other comment) for now, leaving as-is. we can pursue optimizations at another point.\n\nIn reply to: 87664127 \n. locale can change through the life of an app.\n\nIn reply to: 87664268 \n. yeah probably.\n\nIn reply to: 87664812 \n. I think I talked about this before?\n- this is code that will eventually be removed.\n- this is only used here.\n- there are default font constants elsewhere, pulling this into a constant would probably add to confusion.\n\nIn reply to: 87664357 \n. I mentioned this on a previous PR - @bbowman stated that factory objects such as this, in the windows api world, often already implement their own reuse on the back end, and that by keeping one as a static, we would be interfering with their reusage patterns.\n\nIn reply to: 87900429 \n. this is win32 shouty BOOL, not c bool or objC BOOL. I can make this caps TRUE or FALSE if you want (maybe more correct?).\n\nIn reply to: 87900568 \n. \"In most cases it is recommended you use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state data, and thereby reduce memory usage. \"\nBy this it means, DWRITE_FACTORY_TYPE_SHARED, which we are already doing. The documentation supports his claim.\n\nIn reply to: 87902601 \n. > // Pass in a pointer to an arbitrary, unused key, to get around this. \nConsidered passing in the CGDataProviderRef as the key here, instead of at init-time, but decided to favor type-safety instead (passing in as key would require cast-to and back-from const void*) #Resolved\n. can get rid of this when #1376 goes in, so planning to merge this after that #Closed\n. I guess I sort of see your point\n\nIn reply to: 88108767 \n. ? Taking a best guess that you want me to [dataProvider bytes]:\nCGDataProvider is only a subclass of NSData on our platform.\nWe should not [CGDataProvider bytes] as it's taking advantage of an internal implementation detail that's subject to change.\nWe cannot use CGDataProviderCallbacks for access to underlying buffer, as we have not implemented those APIs.\nTherefore we use the public interface, CGDataProviderCopyData(), which copies to a CGDataRef, and ought to remain stable for API compliance purposes.\n\nIn reply to: 88108446 \n. returns null\n\nIn reply to: 88145504 \n. Changes? Not sure what you mean but taking a stab at it:\nChanges in the underlying data, a la NSMutableData:\n  This is specific to our platform; CGDataProvider does not have mutability functions, other than skipping bytes in the stream, a la input streams https://developer.apple.com/reference/coregraphics/1666341-cgdataprovider?language=objc\n(app compat persp) External apps that were not adapted for us should not be taking advantage of our odd implementation of CGDataProvider. \n(security persp) Even if an external app deliberately alters the input under us, the worst they can do is, get a pretty invalid font.\n\nIn reply to: 88146979 \n. I'll take a look at this for #1212. Won't fix for now.\n\nIn reply to: 88148206 \n. thanks!\n\nIn reply to: 88171103 \n. not sure if GetSystemTimeToFileTime has the same behavior. I realize that 0 will change to 0 in the below code anyway, but I find special-casing it explicitly to be a comparatively minor optimization that, for me, muddies up the code path.\n\nIn reply to: 88171264 \n. InspectableClass is only available to WinRT types\n\nIn reply to: 88170542 \n. Have concerns about losing Hash, Description, Equal functions from above. Need to talk to @DHowett-MSFT about those wrt CppBase. Noted for #1212\n\nIn reply to: 88146106 \n. Bit hesitant to move TestUtils out of Foundation. Going to have a chat with everyone first.\n\nIn reply to: 88152992 \n. done but it ended up requiring a much broader change than I think you intended :(\n\nIn reply to: 88291272 \n. I misread what you wrote originally, and added an extra comment at the top of the class instead. I think that's still fine.\n\nIn reply to: 88313379 \n. DWriteWrapper_CoreText is also over 900 lines, and has two classes like this.\nI don't want to move just this into a new file right now, and ignore the other two, because that fractures our codebase along conflicting principles.\nI also don't want to move all four classes into (a? two? four?) new files right now, because three people have already signed off on this PR, and it'd be easier to get them to look at/provide feedback on large-scale reorganizational changes in a new PR.\nThis pull request is also rapidly scope-creeping for a change that was supposed to implement one (!) function that was regressed during CoreText bringup.\nAs a general principle, I prefer more & smaller PRs, to fewer & larger ones. Large changes make it much more difficult to pinpoint what exactly went wrong, when something does. I understand that some things won't be done if they're not attached to larger pull requests. However, this is a case where I have an explicit issue for this. I feel extremely strongly that I would rather move the four classes to new classes (assuming that's what other people want!) in a new PR, rather than try to get them to look once more at a PR that they've already approved.\n\nIn reply to: 88313117 \n. This did not pass in OSX, did pass in Windows. This did not pass in OSX on develop, so it's not due to a regression on my end. However, the possibility that my change could complicate/build on top of the previous regression is why I'm cautious about 'minor' cleanup work like this, considering it required touching 10+ files just to get it to build everywhere.\n\nIn reply to: 88314221 \n. > (CTLineRef) \nwould keep this static_cast still\n #Closed. > Assumes writing direction is left to right \nWhat's the plan for eventually dealing with this? It's not clear to me atm whether this section will be removed/fixed once CGD2D comes in\n. >moving by delta each iteration \nis there a more efficient way to do this? this current implementation seems incredibly expensive.. nit: doesn't matter too much since these'll eventually be removed, but if the counts of these two vectors are expected to stay the same, it's good to put in an enforcement mechanism for that (ie: use one vector, or even an std::map)\nI would just add a comment noting that assumption in this case, since we'll eventually remove this #Closed. can you add some comments about your intentions with each of these test cases? #Closed. >proposed.origin.x < boundingRect.origin.x + boundingRect.size.width \nwhat if proposed.origin.x + proposed.size.width > boundingRect.origin.x? (just wondering why there are two lines for y and only one for x). I mean like, even if you're not wanting to do line intersections or whatever (would probably be a lot faster though), you can, off the top of my head:\n- not calculate rect.origin.x + delta three times\n- do a binary search instead of a linear search\nhow long do you expect this function to stick around? is it worth investing into a faster implementation at this/a later time?\n\nIn reply to: 90086723 . have we been following that? on develop, the CoreText standard seems to be null return...\n\nIn reply to: 89845644 . CGRectIntersectsRect?\n\nIn reply to: 90091646 . should you check   if (!name)   here? #ByDesign. doesn't seem to be needed? #Closed. should probably add a comment about this #Closed. standardize on #import? #Closed. nit: mm, don't really like this name - \"relative\" seems too vague and could mean any number of things #Closed. We have very little reason to believe that this is an interesting combination of features to test.\n- font files don't have any associated 'default' size\n- no reason to believe that default size of registered fonts is different from default size of non-registered fonts\nWe have tests for the 0 -> default font size feature in UIFontTests. We can add a slightly redundant test to CTFontTests if we want, but that's different from testing the combination of \"registered font\" and \"default font size\".. s_userFontPropertiesMap, then? #Closed. does registering a font actually influence [UIFont familyNames] on the reference platform? (if so, can we add a test for this?) #Closed. c_systemFontPropertiesMap is now the wrong name since you moved it to be function-local. (personally i'm against it being function-local, it feels like these two maps ought to exist at the same scopes?). Wait do we actually have access to UIKit functions in CoreText tests? That's kind of scary. Can we remove the UIKit import and move this test to UIKit tests instead? #Closed. >(CFDataRef) \nstatic_cast. this amount of nesting is pretty hard to read - consider making a helper that creates & appends an error, if !outErrors, and an overload for appending nullptr #Closed. Philosophical component isolation issue - UIKit is built on top of CT, so it's okay for UIKit tests to have CT, but not really vice-versa.\nAdditionally, for cross-compiling purposes, UIKit doesn't exist on OSX (only iOS), so we'd have to move this test out anyway if we were to make CoreText tests cross-compile. #Closed. nit: move this header to just be in Frameworks/CoreGraphics - it's not needed cross-module #ByDesign. nvm i dumb. hmm, wondering if it's worth it to cache the data provider instead here. our current data provider impl is just a data, but we could save some memory in the future once data provider is properly implemented and defers loading its binary data. makes sense, can you jot a comment down about the tradeoff then? i agree that this is preferable for the time being, but keeping a ttf file entirely in memory is still less than desirable.. +1, this is a good point that I missed in the previous PR\n\nIn reply to: 90536678 . >E_INVALIDARG \ndebating whether this should be E_POINTER instead... #Resolved. yeah, but since this is only used from the below class, it's sufficient that we validate below.\n\nIn reply to: 90736864 . oh yeah! i knew i forgot something...\n\nIn reply to: 90737886 . It seemed more preferable than not using SAL, and we're dealing with COM out pointers which typically uses SAL in function signatures. I don't have a strong opinion on this, I can remove them if you feel it's better that way.\n\nIn reply to: 90743039 . __ is file-private, _ is framework-\"private\" (not intended to be used by general consumers but exported nonetheless)\n\nIn reply to: 90742638 . does this actually matter? I would expect GetInformationalStrings() to always populate this.\n\nIn reply to: 90742971 . The IDWriteFontFileStream is that the stream is intended to be releasable little-by-little as it's consumed. ReadFileFragment() is expected to return information about the data that was read, through fragmentContext. ReleaseFileFragment() is supposed to then take this, to release part of the stream. Resetting m_data would do the wrong thing by releasing all the data here, instead of just some of it. (I've verified that callers actually do the bit-by-bit read/release)\nCFDataRef doesn't have a clean mapping to this. We could engineer one using CFMutableData but I don't think we care enough. It's much easier to just go through normal CF-lifetime patterns and release the data all at once.\n\nIn reply to: 90743300 . ? That function does annotate in its parameter..., or do you just mean that it doesn't annotate the CFStringRef?\n\nIn reply to: 90917892 . ah, I missed a word. I think I'll just get rid of the SAL then. it was a nice idea but I think the maintenance cost on it going forward won't be worth it for what little we gain in terms of readability.\n\nIn reply to: 90931524 . no, this is also intended to be an early return if the call failed above.\n\nIn reply to: 90911452 . was thinking about this over the weekend and probably yes\n\nIn reply to: 90909514 . Doesn't seem like it, it doesn't offer a little-by-little release either.\n\nIn reply to: 90916971 . https://msdn.microsoft.com/en-us/library/windows/desktop/dd371147(v=vs.85).aspx\nexists [out]\nType: BOOL*\nWhen this method returns, TRUE if the font contains the specified string ID; otherwise, FALSE.\nI think it's probably safe to interpret that as saying 'this will always be populated'?\n\nIn reply to: 90931716 . same as the other uninitialized comment (https://msdn.microsoft.com/en-us/library/windows/desktop/dd368217(v=vs.85).aspx)\n\nIn reply to: 90742919 . both, I think? we have unit tests that test _ functions\n\nIn reply to: 90918451 . read-write access to the whole font collection helper. if we locked in UpdateCollection(), we could still call ->CopyFontFamilyNames() from it, for instance. (we could alleviate that by overriding CopyFontFamilyNames() and the other read functions to also lock, but I don't find that to be preferable to the current pattern of a lock around the whole data structure)\n\nIn reply to: 90936157 . >o>\n\nIn reply to: 90937198 . do we do this naming convention for function-local statics?\n\nIn reply to: 90935689 . it's actually needed. do you want to grab the build error for you?\n\nIn reply to: 90742443 . That makes sense. I'll move the locks to inside the class.\n\nIn reply to: 90938541 . How do the unit tests build?\nnot sure what this question means, or what answer you're fishing for. probably something like \"CoreGraphics.UnitTests links agains CoreGraphics dll\"?\nAre these items in a .def file?\nyes\nWould a private dll export have any other potential pitfalls with regards to encapsulation and versioning?\ni mean, we deliberately broke encapsulation here. versioning risks... _ is intended to communicate the same level of privacy as the stuff in CFFoundationInternal.h, so I figured we'd just continue whatever risk we accepted already, but yeah because of this we'd have to make sure unit tests, coregraphics, coretext, and foundation, all get a version update if the contract of these functions changes.\n\nIn reply to: 90937900 . I'll look into making this a shared_ptr or something similar, I think...\n\nIn reply to: 90943527 . @bbowman I'm not sure what you mean by 'build releasable chunks'. Are you suggesting that we write an extension/subclass to CFReadStream that releases bytes as it goes? That seems like a bit heavy in terms of engineering cost for this.\n@DHowett-MSFT I'm not certain if CGDataProvider would fare better either, its release callback appears to want to free all the data at once as well https://developer.apple.com/reference/coregraphics/cgdataproviderreleasedatacallback?language=objc\n\nIn reply to: 90945909 . mm, I don't think you need to go that far. this is still one-lineable, I just picked this way of stating it since CFRetain returns CFTypeRef, and I find casting back rather ugly. If we wanted, we could add like a 'retain_and_reset' to unique_cf and it'd make this neater.\n\nIn reply to: 90743195 . settled on a pattern where the enumerator delegates to the loader, which owns the data.\n\nIn reply to: 90948737 . Mm, pushing back on this. I'm not convinced that a single iteration failing here should fail the whole function, and I don't think that RETURN_IF_FAILED should be tripped in such a case. S_FALSE has a connotation of 'partial success', and we have the errors out-array if we need more specific error information anyway.\n\nIn reply to: 90743736 . I guess I don't have a better answer for you than 'convenience'. The alternative would be to make the caller allocate a char buffer for us to dump into. Same below, it's more convenient to just pass a shared_ptr around than to define (iirc) a copy constructor for that struct. What are the downsides of cross module exporting c++?\n\nIn reply to: 90742313 . continuing discussion above\n\nIn reply to: 90742335 . 1>f:\\winobjc\\frameworks\\include\\stringhelpers.h(21): fatal error C1083: Cannot open type library file: 'f:\\winobjc\\include\\corefoundation\\cfstring.h': Error loading type library/DLL.\ni'm not actually sure what to make of this??\n\nIn reply to: 90942112 . haven't gotten to the rest of the review yet but right now i'm skeptical that you need this? #Closed. ah geez i need to think about this in the context of my CR, but, is this actually needed? shouldn't usercreatedfontcollection have been registered to the factory?. nit: parens. note to self to incorporate this for my CR if this gets in first. This reference\n\nIn reply to: 91159582 . Grrr\n\nIn reply to: 91159166 . er, any reason why we can't just standardize on the underscore version?. static const, c_\nsame for your other constants below #WontFix. This file has a lot of duplicated code. Can you refactor it into reusable functions or parameterized tests?. same with this file, to a lesser extent. can probably refactor 389-403 here to a separate function, possibly 403-416 as well (would exclude CTRun, BasicDrawingTest, WhiteBackgroundTest though). 85-101 here is repeated from above. let's investigate that in #1374 lol\n\nIn reply to: 91177602 . oops, I thought I did that...\n\nIn reply to: 91176623 . Mm, but then we have to keep the whole font collection in memory, which I think I hate more than getting it every time. I'll possibly revisit this in #1374 but I don't think it'll be big enough of an issue to come up.\n\nIn reply to: 91175727 . it can happen more than once, eg UserFontCollectionHelper clears this ptr\n\nIn reply to: 91175002 . Oh, thanks for noticing this (little bit glad that the changes made the O(N*M) more apparent). Thinking about how to change m_fontDatasSet to be something better for this purpose...\n\nIn reply to: 91176040 . Probably rather than the current setup (CFSet and vector), we should just use an std::unordered_map that uses CFData's hash/equal (unless there's some good way to use CFDictionary instead, but I don't know if I trust CFDictionary to take a ComPtr...)\n\nIn reply to: 91189304 . Discussed offline. It's a little sketch still but we're letting it pass in this case.\n\nIn reply to: 90993784 . grawwrrrr why does CTFont have this but CGFont doesn;t. >advances + count \nuhh, is this actually correct? sizeof(CGSize) shouldn't be 1 should it...?. >dwriteAdvances.data() \ncan you check if we can get away with leaving this as nullptr? would be great if that were possible... otherwise leave a comment about it. #ByDesign. >CGPoint curPos = curState->curTextPosition; \ndoesn't seem to be useful anymore. you can just directly use curTextPosition at the end. Ughhhh. You don't have to do this now, but when you get a chance during the text matrix review, can you remember to get rid of curTextPosition and have us actually use the tx/ty fields in curTextMatrix? (Note that this is relatively non-trivial and the straightforward approach broke a lot the last time I tried it). ty ty. yeah this seems unnecessary, I'm pretty sure there's a way you can write it as {'G', 'l', 'y', 'p', 'h', 's'}\n\nIn reply to: 91414988 . same here. 54-57 are common between the three tests (so are 42-43 but that seems hard to refactor), 46-53 are common between the first two. refactor please. assuming i'm not missing/misunderstanding something:\nadvances is a raw pointer and not an std::iterator or something else with the + operator overloaded.\nadvances + count is meant to point to the one-past-the-end 'entry' of the advances 'array'\nthis arithmetic only works out if the size of each entry is 1. if CGSize is size 2, for example, you need to advance 2 pointer addresses for each entry, and thus you'd need to stop at advances + 2 * count, not advances + count\n\nIn reply to: 91550535 . let's just update the file then.\n\nIn reply to: 91551180 . ignore me i dumb x___x;\n\nIn reply to: 91579986 . The following seem like possible improvements:\n\nreturn std::vector instead of through an out-array, removes burden of knowing size\nadd input parameter of std::initializer_list, instead of restricting to just this set of chars. er, is this a statement about what the ref plat does, what we do, or both?. Same, still. Why are we doing this sort of workaround (temporarily setting textMatrix to identity) to get CGContextDrawGlyphRun() to work, when it's an internal API and we can just alter how it handles text matrix and curTransform?\n\n\nIn reply to: 91782996 . Say what. Should we follow up with the DWrite team about this?. ugh i hate this a lot but i guess there's not really a better way for the time being. minor optimization thought since i'm in that headspace: check d before c, since d is less likely to evaluate to true than c is, as c is often 0.. nit: should probably fabs(textTransform.a) too? horizontal flips seem like they can also use the fast path #ByDesign. Read further, still not super pleased with this but thinking it might be more elegant than alternatives >:/\n\nIn reply to: 91807145 . i like this, but call it out in a comment\n\nIn reply to: 91789032 . >D2D1::Point2F(0, 0) \nsuper nit: don't create this every iteration. ? this was removed from one impl of SaveGState but not the other #Closed. (this or GetTextPosition) did we say in an earlier meeting that the actual position is affected by the current text transform, or am I remembering wrong?. >!transformByGlyph \nnit: check this first, since !transformByGlyph would be false by default. also nit: actually I find it a bit weird that the 'default' case is on the bottom, come to think of it...\n\nIn reply to: 92269919 . 1st part: oh yeah i'm dumb\n2nd part: in my head the 'default' is the one tripped by the default set of parameters, but i don't really care\n\nIn reply to: 92273841 . I'm throwing in the towel on trying to batch these for the time being. There's a general chicken-and-egg problem re:batching here where some information required for the next line isn't known until the current one is drawn. We can estimate these like lastIndex above, but the more we estimate before grounding ourselves, the more likely it is that our estimates will diverge. Not really sure how to tackle this for the time being.. >+ lineHeight \nnote that this is not always correct (also part of why i had trouble coming up with an implementation for batching), but I'm not sure how best to deal with it, and this is a good approximation for the time being.\na single character with a particularly large font+fontsize in the paragraph affects this lineHeight metric, which is computed from the height across the whole paragraph, even if the chars in the current line are a smaller font size. we can't just take the height of the line we actually drew, either, because if it's just a period or an underscore, that'll throw off the height measurement. what we actually need here is the height of an 'H' in the largest font+fontsize in this current line, but this is messy to determine :s. it was a private method. i unrolled it because it would be clunky without the std::wstring return (caller would need to declare buffer/know size required, private function would only end up being two lines anyway, not saving much).\n\nIn reply to: 92735069 . iirc it took up 1/3-1/2 the runtime of this function, and this function is used a lot, most notably in CTFontCopyName().\n\nIn reply to: 92736922 . it's stored as an NSString :(\n\nIn reply to: 92743322 . I can't imagine RTL languages would store either their glyphs, runs, or characters back-to-front in their respective arrays?\nAlso, note that this comment is meant to convey a future optimization that could be made, if it turns out that the assumption is safe. I think the current logic should handle RTL languages just fine,\n\nIn reply to: 92738146 . unit tests still pass, and we have a number of tests that would exercise this, through CT/CGFont\n\nIn reply to: 92845292 . it seems to be fine\n\nIn reply to: 92847146 . nit: this class and the class above are the same except for the type of callback. seems ripe for a template?. I'm guessing @msft-Jeyaram missed this part up here wrt the comment below? (thinking that probably at least one of these two deserves a callout in a comment) #Closed. >_DWriteGetSize \nnit: would prefer more descriptive name #Closed. nit: prefer enhanced for. uses default value as in, WinObjC currently uses a default value if a nil font is passed to DWrite, or the reference platform uses a default value? if the former, how?\nmy recommendation is to verify whether the reference platform uses a default font if nil is passed - if so, set font = [UIFont defaultFont] instead of putting nil in a dict\n\nIn reply to: 93509601 . create this lower, this isn't needed for a while #Closed. +1\n\nIn reply to: 93514919 . does it make sense to keep this line still?. looks like our clang-format got updated (10/31) since the last change to this file (early sep). sure. extra nit: const auto&\n\nIn reply to: 93963412 . I can't actually. I need to update _totalUnitCount in the middle to make the call to _updateCompletedUnits work.\n\nIn reply to: 95283538 . it's not, it returns the wrapper;\ncan cache though\n\nIn reply to: 95282701 . 'basically', but it's a member of the wrapper and not the object\n\nIn reply to: 95282860 . silly past-me\n\nIn reply to: 95452310 . i'd prefer to err on too-specific here if that's okay\n\nIn reply to: 95452816 . doesn't the TreeImplicit test already do this, but just for fractionCompleted and not completedUnitCount, unless I'm reading it wrong?\n\nIn reply to: 95452933 . mrr? did I get this incorrect?. also the other two _t's\n\nIn reply to: 96037442 . >used to have \nnit: not sure this comment makes sense considering it still does #Closed. Please do. I think that someone lacking the current context may fail to parse this correctly. #Closed. I had the same idea, but it ended up regressing XAMLCatalog (Custom text view would not update at all).\n\nIn reply to: 96086902 . Contexts that go onto the UIGraphics context stack cannot actually be safely assumed to only need their results after PopContext().\n\nIn reply to: 96087015 . Not used in this commit, but are needed for CGD2D. it seemed vaguely more appropriate to add them now than to add them when merging to CGD2D, but i don't feel strongly about this.\nAs an example, CGD2D has __CGContext::DrawToCommandList - it switches render targets in the middle and switches back at the end. Retargeting is illegal if in the middle of a Begin/EndDraw pair, so we need an alternate mechanism to force an EndDraw so we can retarget, then BeginDraw again. (I made a mistake by putting the second command in the body of this function though, oops) According to @DHowett-MSFT, shadows and transparency layers also require a retarget.\n\nIn reply to: 96086173 . i'll std::atomic it\n\nIn reply to: 96093839 . Er, that is, putting it into [CALayer display] broke things. I could go investigate why if you'd like, but I'm not sure how fruitful that'd be - we'd probably have to keep this out of CALayer display anyway.\n\nIn reply to: 96095561 . These are a fairly significant hit to performance for the non-text CGContextCairo drawing functions, eating up >50% of time in CGContextFillRect, for instance. This may be unavoidable until the CGD2D merge, and is a tradeoff - text-drawing is still a much bigger bottleneck (CGContextFillRect, while slower, still does not take up much time). Please comment if you have any objections.. tried it, but it obscures too much for my taste.\n\nIn reply to: 96971228 . @DHowett-MSFT I think this is more correct placed here, right? #Resolved. Because of the need to escape before changing targets, and because most functions in this file currently filter down to this function and thus change targets, #1705 has close-to-zero or probably negative impact on CGD2D as it currently is. Since we don't need a new command list each time this is called, I am going to add another iteration to this PR, tying the creation of new command lists to the stack. #WontFix. confused why you took this approach - why not just swap out the constants above for the ones in WinObjC.ttf, and reuse this parameterized test instead of adding a new one?. (if it's that WinObjC.ttf currently lacks these other metadata, is there a way we could add them to WinObjC.ttf?)\n\nIn reply to: 97684882 . I think I lied and it doesn't matter https://msdn.microsoft.com/en-us/library/windows/desktop/hh404533(v=vs.85).aspx leaving as-is for now, will look more deeply at this in the followup PR\n\nIn reply to: 97687941 . Going to do this in a separate PR instead\n\nIn reply to: 96997659 . @DHowett-MSFT is taking care of this\n\nIn reply to: 97468215 . @DHowett-MSFT is taking care of this\n\nIn reply to: 97467495 . #1810\n\nIn reply to: 97693686 . I'm not sure what you're actually advocating I do here, considering handling #1194 appears too large for the scope of this PR. As such, I'm going to take @msft-Jeyaram 's recommendation to follow the standard for now.\n\nIn reply to: 97468410 . but they don't force an enddraw or a begindraw, nor are they exclusively tied to layers. they are 'enddraw if needed' and 'begindraw if needed', where 'needed' is kind of vague (if currently in the stack) and difficult to describe without mentioning the stack.\ni agree that these names are bad, but the suggestions are less factually accurate, so i am won'tfixing this for now.\n\nIn reply to: 97468082 . i actually already made the change anyway\n\nIn reply to: 97697849 . I don't know why I didn't think of doing this earlier, sorry everyone!. Agreed, I'm not sure what you're envisioning for how we know if we control the data (will eventually call Create/GetImage). Leaving as-is for now.\n\nIn reply to: 98318678 . these three are disabled for the same reason as the other shadow tests - our platform has a minor divergence in the blurriness and darkness of the shadows compared to the reference platform. (this difference is small enough that it's difficult to distinguish by eye, so it's not a blocker) manually verified that these test results diverged only in that respect. #Pending. seems dangerous, what was the reasoning behind this?. What was the verdict on this?\n\nIn reply to: 98574225 . It wouldn't currently cause any issues considering we set it to a new matrix at the start of every draw anyway, but it probably doesn't hurt to make it safer.\n\nIn reply to: 98774621 . I know I deferred you previously, but I still think this is out of scope? Currently, CGBitmapContexts that do not opt into PushBeginDraw()/PopEndDraw() get immediate mode rendering, as per reference platform. What you're asking me to do is to enable buffering for a specific subset of CGBitmapContexts, with caveats to make it conform to the expected behavior. However, I don't believe we've seen evidence that this subset is a significant perf concern, nor that your suggested optimization, with its caveats, would significantly impact such a bottleneck. As such, I still suggest we defer this recommendation until such a bottleneck actually arises.. nit: probably out of scope, but I wonder if we would benefit from having a option to output in a csv format... probably overengineering if it looks like we'll eventually change the framework though. #Closed. oh god why did you take @rajsesh-msft seriously. DrawGroup tests:\n - should probably abstract out the PreRun PushBeginDraw/PostRun PopEndDraw to something common\n - I'm kind of uncomfortable with the n=1 runs for the group tests. I realize it's 100 frames, and that these tests take a while, but EndDraw only happens once, meaning that some small temporary hiccup on the machine we run this on could lead to us overinterpreting noise. n=5 maybe?. Done. nit: standardize on StarboardBasePath; below too. nit: formatting, also below. should probably still add the WINOBJC: tag to the comments? #Resolved. it happened again?. DrawGroup:\n - n = 2 is better than n = 1 but probably still too few? other people can object if they think i'm being silly\n - I would still like these Pre/PostRun functions to be abstracted out among the DrawGroup tests. nit: add a newline at the end. 5 seems fine to me. so wait the expectation of the constrainedToSize: contract is that the height passed in doesn't matter at all? that seems... wrong.... This is already a WINOBJC: function, so not necessary. why not CFSTR()? #Closed. worried about these getting out of sync, would possibly prefer defining here and letting CoreText = these #Closed. this fails drawing for every run if even a single run is too small to be drawn, that seems wrong?. nice. runs within a line don't necessarily have the same font size, right?\n\nIn reply to: 100872254 . let's not do an expensive copy here, especially for what we can expect to be the 'normal' case. >[&] \nCC: explicitly write out all your captures.. probably worth assigning names to some things in this area to lessen the number of calls to getters. ugh I guess no one else in this file did it either, so I don't blame you, but it'd be nice if you did.\n\nIn reply to: 100875768 . how did this work before when we were passing nullptr?. nit: think success case first makes more sense here. it's not the worst thing but i dislike having to construct this in the ordinary case where we don't transform by glyph.. why not just RETURN_IF_FAILED up here instead of saving the HR?. if you avoided the copy, you could also avoid the resize up top in the same cases :0\n\nIn reply to: 100875602 . yeesh\n\nIn reply to: 100879340 . I think we prefer CFSTR() when we're in the Core_____ frameworks\n\nIn reply to: 100870707 . if it's internal, let's put it in the private section with a _ name #Closed. redefinition of i here. not used #Closed. it sounds like we should still draw the ones that are big enough to be shown, then.\n\nIn reply to: 100880090 . for both here, and below, where i mentioned that i disliked the unnecessary operations for the most common case, i agree that code duplication is bad. the solution i would've rather you taken would've been something like, store pointers, pref smart ones, instead of actual vectors/structs. that way you can just have a pointer to the original vector/struct for the most common case.. thinking on it more it might actually be that you can't avoid constructing the glyph runs below, in which case you could construct them up here, and use their glyphOffsets field to store a ptr to either original glyphOffsets or transformed glyphOffsets (positionsVectors and glyphRuns sizes would become intentionally out of sync)\n\nIn reply to: 100935594 . probably use continue here, to get rid of the else below.. didn't you have more granularity in iteration 1 than this? (can you fast-path some stuff even if textDrawingMode isn't Fill?). ? just keep this in a vector> like you had?. std::make_shared this instead of new-ing it. if you don't want to change the contract of GlyphRunData to take a shared_ptr instead of a *, then you can just stuff this in some unrelated vector so that it can get properly scope-released. I commented above about how you can make this more RAII\n\nIn reply to: 101130382 . why would you be doing a bunch more copying?\n\nIn reply to: 101147313 . why wouldn't you use a vector of shared_ptr so you could avoid that?\n\nIn reply to: 101148834 . sorry, lost my train of thought for a second there.\nyou can put only the DWRITE_GLYPH_RUNs you would've new-ed in a vector for RAII, and leave the _CTRun-owned DWRITE_GLYPH_RUNs alone.\n\nIn reply to: 101151683 . discussed this offline, i'm bad at communicating\n\nIn reply to: 101155233 . is it worth it to .reserve() on these? if it's only worth it to do so in some cases, to what extent can we distinguish those?. nit:hyphenation. nit:bridged. nit: add some parens?. nit: this is probably an awful idea, but you could use a ternary for the last parameter instead of having the if/else. >actualLanuguage \nnit: typo. surprised this doesn't screw with the memory management on the CFArray... can you run your tests under appverifier and make sure there are no issues?. A dev can pass in a specific tag for CTFontCopyTable though. We'd at least need to keep the function around (though I guess we could reverse the internal constants)\nEDIT: Forget I said anything, for some reason I thought the tags were strings (plausible to pass in raw) rather than ints (pretty unlikely). nit: camelCase instead of PascalCase?. ?. can you also test the translations for ' ' and '_'?. oh, i didn't see that this wasn't going into develop. how come that's the case?. what's the plan for getting this into develop then? are we cherry-picking it, or will develop not have it until packaging merges?. mm, I understand that this >> 1 is probably safe, but the gains here don't seem worth overriding principle of least surprise.. vaguely interested in '-' and '|' also, but we probably won't find anything surprising, so i'll leave it up to you. it's common, but i also had to do a double-take and make sure that advanceWidth wasn't 1) a bit flag somehow 2) a signed int. imma double down and say you should just write what you mean here and let the compiler optimize.. I don't know about exposing it, but I agree that giving it a name/placing it next to the declaration of tries might be slightly more readable. #Resolved. fancy #Resolved. still here. RETURN_HR_IF_NULL. nit: more specific name, const. nit: more specific name, const. Caveat?. should probably comment here about defaulting to no-filtering if there's no match and forceMatch isn't true. nit: move these, and possibly the reserve() logic, into __FilterFontsByKeyAndValue. nit: I think CFStringFindWithOptions() is more efficient here since it can early return in the failure case?. same with the rest of the CFStringCompares here\n\nIn reply to: 104538394 . also should declare the TypeRef -> CFStringRef cast here. euuurgh. this is a pretty huge number of fonts and i'd like to not fetch all of them every time this is called.. ie: in the case where name or family name is specified, the 'right way' probably involves using FindFamilyName, GetFontFamily, rather than filtering ourselves. our abstraction should reflect that.\n\nIn reply to: 104540071 . seems like you should just use CFMutableArray instead of being fancy?. I think you could probably manage to make it both nice and performant. ie off the top of my head (you can probably improve on this) - you could change the pattern so that instead of getting all fonts, and checking them here, you instead provide the check as a lambda/enum to something like _DWriteGetAllFonts(). You do some rearranging here to make sure names are processed before the other filter conditions. Then, if the new _DWriteGet___Fonts() is being called for the first time (ie you passed it a null/empty array, instead of a previously filtered one), then you can do the aforementioned fast path.. ah, I misread the signature for __FilterFontsByKeyAndValue. confused - how is this class meant to be used? the putbytes callback is only used here, which is only used in a private function, which is only used in test. super super nit: consistent ordering with your (2*pi)s. nit: do we wanna just round the latter term to +/- pi here?. nit: should this equation be an inline function?. ? you could just make sure the ranges are correct/lengths match. nit: I'd just make a helper for the string equality check. You'd have to do more GetLengths but that shouldn't matter too much.. fwiw I read it as an autorelease value. if I write it like [NSString stringFromLocalizedString:...] that looks a lot like an autorelease even though it doesn't have 'get', right?\n\nIn reply to: 104537218 . should this be an else if?. ugh you were right, this if nesting is really ugly...\nI think I'd prefer the failure case second, since there's a case where it just no-ops, and it's more intuitive to see that if the eye doesn't have to read the else block afterward\nsame below obv. nit: possibly use a macro here. write this as a comment?\n\nIn reply to: 105239780 . nit: #import, add a newline after #Resolved. @DHowett-MSFT out of curiosity, what would be your proposed alternative to the override flag? #Resolved. nit: efficiently. nit: this else seems silly and probably doesn't actually help readability. nit: could just use a macro here. #2241. #2241. #2242. define 'everywhere else', we've also had non-zero g_logTags.... oops somehow completely missed this. i forgot thread_local existed derp. don't we generally prefer wil::ScopeExit for safer cleanups if the inbetween function is relatively unknown/risky?. subclasses could override though?. we do it all the time as 'if (self = [super init])' though. I thought i added a check to make sure the op was ready, but apparently I somehow lost it?. oh hm, i didn't think about this angle. i'll hold the lock on the operation then.. won't lastOp be set to a new value every loop?. ? it's there, it's just hidden under the github cutoff where it doesn't like to show you the whole file. derp derp. i really really really like this abstraction geez. how come? this more has to do with synchronizing these members' getters/setters. Not inherently indexed, but the ordering needs to be consistent. Ordered set would be good, I kind of neglected other possibilities just because the operations property is an array. However, we don't actually have NSMutableOrderedSet yet. I'll keep an eye on #2225, and change this to use it once it's in.. You have a good point. I moved this to be async, and to be triggered in observing isFinished instead.. it seems easier than doing the dictionary lookup, cast to nsnumber, and get boolvalue, though. yeah - i seem to have lost a commit somewhere. I don't think it really matters. KVO has an expectation that the timing might be a little off, right?. no wait i was thinking of another thing, i actually just missed this, sorry!. I think I'd prefer to disable the warning in this instance, since it's one that'll go away once we Do The Right Thing and update libdispatch.. i like having it as an atomic operation so that it's harder to break contract, i'll try to think of a better name.... going with _markInQueue for now.... no wait i didn't think this all the way through.\n\nisFinished is set at the end of [operation start]. if we schedule more operations when we observe isFinished, we end up doing so before we decrement _currentConcurrentOperationCount, causing _popAndStart to do the wrong thing.\nwe can move the decrement to the isFinished observation, but i dislike this because 1) the increment and decrement ideally should be in the same function 2) an operation can finish through means besides _startOperation (ie: if a user decides to start it manually for whatever reason)\nas it currently is, we're basically checking if new operations need to be started when an old operation has finished, using the same async context. i think that this makes intuitive sense, so i'm going to leave it as is for now. (it might look less scary once you see the thread_local version also). oh yeah i remember that.... oops oops\ni should version control a little more aggressively so i avoid these sorts of mistakes. er, not sure what you're getting excited about here, actually. if a block were observable it'd be on the block member changing, not the block finishing.. oops, i didn't realize priority queue had opposite sorting from objective-c ;;;;. it's an atomic\\<BOOL>. nit: can we add a comment about how NSIndexPaths are sorted in depth-first traversal order? was surprised by this, would like to save people future trips to the docs. re: super-nit: could potentially be PII, best not to, I think. i can pretty easily imagine a scenario where say, someone makes a font of their own handwriting and names it FirstNameLastName.ttf, for instance. in general i think we should avoid logging file names/paths.. This is a + function, so self is a Class.. Sorry! Dx. I think we have other instances of 'self' being what it would normally be, were this an objc function. Wontfixing this.. I forgot about that - I don't think I'm comfortable removing it while @DHowett-MSFT is out, but I'll take a look and see if anything can be copied from there to here.. It's more or less the same scenario as the ObserveChange benchmark, but also measures the amount of time spent in the actual notification part, which the benchmark framework doesn't really have a mechanism for.. (as opposed to ObserveChange, the app is also a scenario with just one observer - do we want to add that to benchmarks, or do we consider ObserveChange's many-observer scenario mostly representative of health?)\n\nIn any case, before/after:\n\n. Will back this out.. I think it would end up being harder to read because of the need to construct an NSIndexSet. Leaving as-is.. bit concerned that such a basic NSMutableString function performs so poorly.... what are your feelings on taking a bit of a perf-for-safety tradeoff and using std::wstring instead?. easier maintenance, mostly - we can be mostly confident that the current impl is correct, but it's a lot harder for someone to come by later and mess it up if it's a simple += to a wstring. Changed to this from an @ synchronized elsewhere. More of a consistency change (this had maybe ~3% perf impact) - there was another call to this function that didn't do the synchronized for whatever reason, and the synchronization should probably occur within the body of this function rather than around it. If you want, I can change this to @ synchronized instead of using the associated objects table's locking, but I don't think it makes much of a difference.. am confused - NSHSTRINGString isKindOfClass:[NSString class] would have returned YES here.... seems to be fine - my only test failures were the CGGradient tests, which are a known issue. i doublechecked the nil message behavior in an isolated test as well.. It's in the same file as, with the same type of comment as _CFStringIsMutable. ForFoundationOnly.h is a file from the swift open-source, we probably ought to mess with it as little as possible. CFFoundationInternal.h has been where we've been putting functions of this nature.. nit: might want to leave a TODO here as a reminder for when you get to CTLine #ByDesign. remove the annotation in the .h also #Resolved. o, tru #ByDesign. I considered doing parameterized tests, but since TAEF only parameterizes on Wex Strings, it felt like I was trying too hard to make it fit, so I opted for this instead.. sigh okkkk. didnt know that worked, til. it's fire-and-forget. can't, NSRunLoopMode is unfortunately typedef'd as NSString* and not NSString :(. i know, i knowww - i dont like filing these tasks until the PR is actually out because they often lack context without the PR,. #2469. pretty much; oops. good point.. did not know that. oh. i didn't actually try it i just figured it wouldn't work. ;;;;. i completely forgot that existed despite writing it ;;;;;;;;;;;. ? no, as is, it only allows something in if the vector is empty, which is what i want.. it works. i'm silly.. Only the first queue seems to take.\nDocumented to be bad, but seems to not throw or anything on the reference platform. I'll make our version log an error.. yuuuppp, lemme leave a TODO here to fix up later.. oops. they were properties, and one was working incorrectly and not taking a copy. seemed like a good idea to just pivot to autosynthesis. _foo = doesn't call the setter, so everything is +1 as it should be. NSURLProtocol_WinHTTP doesn't have access to the superclass member now that it's synthesized. this is an arc-enabled file. Nope. https://developer.apple.com/reference/foundation/nsurlconnection/1409722-unschedulefromrunloop?language=objc\n\"Use this method to unschedule the connection from an undesired run loop and mode before starting the connection.\nYou cannot reschedule a connection after it has started.\". oops, ty for catching. oops, I was testing something on the reference platform and apparently forgot to delete this?. ugh this is what i get for rushing on friday... . ? There's no property for this ivar.. if there's just the one usage of it, can it be a file-scope function instead? #Resolved. Seems kind of expensive for this purpose (unless CFStringGetBytes has a fastpath here?)\nI wonder if CFStringGetMaximumSizeForEncoding() would be faster/would still work? #ByDesign. I'm conflicted because that seems like the more correct thing, but also would involve touching like 80 different files. At that point, the \"add a SmartTypes.h that's just #include \\<..\\..\\..\\tools\\include\\Starboard\\SmartTypes.h> to where it used to be\" solution starts seeming preferable.. seconded: doesn't have to be right now, but moving some of this logic into a shared helper is starting to look very tempting. Isn't this comment no longer the case, now that the test no longer depends on ordering?. What's the remaining unexpected behavior?. ? context?. ?. Sure, but maybe edit the last part of the comment then.. Eesh. Probably call this out specifically in a comment?. nope, documented NSInvalidArgumentException: https://developer.apple.com/reference/foundation/nsproxy/1416417-forwardinvocation?language=objc. - this is just lifted from NSObject.mm\n- async nonsense wouldn't be able to cause that since __sync_sub_and_fetch is atomic. Hmm, originally i only proposed this convention for within CoreText/Graphics, given that we had a high incidence of both file-private and framework-private functions. Did we begin to use this more broadly?. it's the contract unfortunately :( [NSProxy class] does not return a forwarded class. it does not!. can't/shouldn't call super init on NSProxy - it's NS_UNAVAILABLE (this matches the reference platform). mm, i guess that's probably fine, yeah. is _condition really more clear than self->_condition?. what do you mean?. I generally default to using self-> in inits, to guard against [super init] doing a replacement. That's not really possible here since the superclass is NSObject, so I'll change it, but I disagree that there needs to be a specific reason to use self->, especially since inheritance interactions aren't always this clear...\n\nIn reply to: 111229643 . oops im just wrong\n\nIn reply to: 111231093 . i'll fix this one and leave the rest, if that's ok. This is also the same as NSObject.mm... going to propose we leave both for the moment and let sleeping beasts lie.. I changed my mind and got curious how the reference platform behaved and it appears superclass is polymorphic so I will make this change in both places,. This is already tested for in the unit test - I believe it forwards to the remote doesNotRecognizeSelector.. discussed offline, leaving as is. seems not. Mm, my thought is that if a change like that breaks something, we'll either be able to catch it in CI build, or it's so incredibly subtle despite being in such an exercised class that doing it in a separate change won't really gain us anything, so I'll elect to risk it. (I will probably regret saying this a week from now). isn't CTRunRef already const? is this redundant then? #Resolved. nit: URLWithString. was the memory management the only thing that changed in this test?. Concerned about this actually... currentDirectoryPath should be returning build/Tests/UnitTests/Foundation/OSX, as that's the directory the executable (Foundation.UnitTests.exe) is in. Why isn't it?. worth noting also that this is currently not failing on my machine... unless for some reason in a future release of Foundation they made currentDirectoryPath return the dir one up? that seems really unlikely though.... could you leave the original code here, commented out? that way it's easier to compare with the reference. same. nit: parenthesize the two sides of || rather than, or in addition to, both in one\nas is, my brain keeps wanting to read it as\n( (!line || CFArrayGetCount(line->runs)) == 0 ) #Resolved. we had it twice?! #ByDesign. I feel that this name does not effectively convey what it actually checks for. 'Perceptible', 'HumanPerceptible', 'NoticeableDifference', or even 'Limen'/'DifferenceLimen' (if you want to be extra nerdy) would be more descriptive.. should add a comment about that threshold. or 'EhCloseEnough' if you wanna be casual about it. fwiw it's because target and selector are the first two arguments in a NSMethodSignature. why do we call this in this path but not the other one?. ...;;;;. I had considered this, but I prefer being more specific here. Leaving as-is.. It wasn't ever. Shouldn't need to lock anything in dealloc, by which time no one should be referencing the object anymore.. whoops. oh darnit you actually went with it. I'm pretty sure that this isn't the actual value for just-noticeable-difference, just most likely under it. Could you change the comment to reflect that?. this ends up being a no-op if _dependencies is nil, so it's redundant to check for it. additionally, I would prefer to keep the check strongly tied to the self-observation, as it's the only thing that's actually causing problems. _how far beyond our threshold? related: do we want to be even more nice and change our difference images to reflect strength of difference between the two images? (possibly just change color coding to be abs(expected.r - actual.r) etc etc. you totally should've used \"EhCloseEnough\" instead. ? why is this gone?. it's more or less just lifted from NSObject.mm - I can consolidate it if you want, but I don't think it makes much of a difference either way. Since break inside a switch in a for loop breaks the switch and not the outer loop, this unfortunately seemed to be the best out of a group of bad options:\n- Add a done bool that is checked on every iteration: this causes ++i to occur once more than necessary unless it's the end of the string, making the set of _scanLocation = 1 at the end more complicated than necessary\n- Move the switch to a helper function: would need to manipulate both mantissa and exponent through out-pointers, seems unnecessarily messy\n- Add a continue to every 'good' case, then add a break outside the switch that the 'bad' cases can fall too: wwwwaayyy too messy. The default case (skip whitespace, string is space separated) has low n, so it might not be as bad as you think. That said, is there an improvement you'd like to suggest? (Fetching more of the string at once?). was not sure how we felt about swapping out large chunks of the previous code. there are also unichar -> char conversion implications I haven't thought about yet, but it should be fine I think.... sscanf doesn't return where it stopped scanning. you can sort of work around that by specifying \"%a%s\" as the format, but that scans the whole rest of the string unnecessarily... you could also do a bunch of preprocessing to give it a prepped state, but then it just ends up being the same, but with sscanf instead of ldexp. Would be longer code, and we don't need NSDecimal's greater precision, since we only need exactly as much precision as would fit in a double's mantissa.. ?. you mean besides the exponent getting too large and causing ldexp to return HUGE_VAL or 0?\nif the mantissa becomes too precise to represent correctly, the latter (least significant) bits get chopped off during the double operations in STATE_MANTISSA. ?. ???. just use CFAttributedStringReplaceAttributedString instead #ByDesign. LOL #ByDesign. Definitely just use CFAttributedStringReplaceAttributedString - I am 100% sure it is sufficient. The reason we don't use it for [NSMutableAttributedString appendAttributedString:] is to reduce the number of abstract functions. Before we made that class more properly abstract, the initial implementation of it DID use ReplaceAttributedString. #Resolved. @aballway didn't you name this #ByDesign. ah, that. we as well as the docs forgo the int, so I'm leaving as is.. NSScanner is in the list of thread-unsafe Foundation classes.. I don't think these would provide much perf improvement over your other non-OneAttribute helper, would they? I would like to just get rid of them. #ByDesign. it could in this instance, but there are other instances in the file where i needs to be available outside the for loop and I'd rather keep them in line. ? the top if case would fall through.... leaving the comparison since it better contextualizes the arithmetic and is more in line with the other checks. if checks would still be necessary even using that multiplier value, since the mantissa advances in different directions before/after the period ie:\n0x12, scan 3 = 0x12 * 16 + 0x3 = 0x123 (multiplier applies to previous number, is constant)\n0x1.2, scan 3 = 0x1.2 + 0x3 / 16^2 = 0x1.23 (multiplier applies to new digit, changes)\nI could combine scanned period and the multiplier into one var, but I think that would hurt readability.. there is no equivalent public init, seems like unnecessary frills to make one just for this. nit: can drop the 'else' here #Resolved. would like to +1 this: formatting-only changes like this clutter up git history and make it harder to figure out when a regression might've occurred #ByDesign. wait are there actual brownies at the office today?? am i missing out? #ByDesign. this doesn't seem to be used anywhere, and isn't a part of the docs. let's get rid of it (if we do need it for some reason, it seems like [[copyclr copy] autorelease] would be the more sensical return value?) #Resolved. would rather have it be strongly-typed - if it turns out we are bottlenecked by std::function overhead, we can make this change then. nit: std::string append tends to be faster than string format, would rather you use that.. should you check that this selector is supported as well?. +1. nit: just use the + operator instead. nit: same here. nit: it's strange that the filenames differ so much from the actual class names.... nit: make this consistent with the other selector names. not equivalent when lhs.queuePriority > rhs.queuePriority and lhs queueIndex > rhs _queueIndex. unnecessary since the nsarray already retains it. leaving this as is. oh derp. i completely failed to think this through oops. just the arm ones. er, i'm assuming by 'before we finish here' you mean the whole set of callbacks and not just this call. pretty sure it's possible, though not in our internal use-cases. with our current impl of performSelector:, this raises an exception. I think this is acceptable since letting the client thread die seems like programmer error.. 1) don't our NSBlocks not inherit from NSObject and thus not have that function?\n2) our NSBlock has a comment on it that we ought to be reducing internal usage of the function. I think that's silly, but.... +1. unnngghhhhh. keypath seems to not be used at all here?. unused. unused, redeclaration. any reason that this isn't created inside the lambda? (do we want to minimize time inside the lambda or something?). I could not repro the reported issue when exiting out of the app normally (through the x button), and could only repro through debugger-stopping the app. This would not help the latter case. Additionally, judging by https://medium.com/@hanru.yeh/nsuserdefaults-is-planned-to-deprecated-cc185e19e6f8, it seems that [NSUserDefaults synchronize] is blocking on the reference platform.. seems unnecessary since this is a WinObjC function. not sure how this happened given this file is // clang-format off ;;;;. That seems pretty unlikely? I would guess that the majority of time spent is in the actual file write. If a user finds that time to be too long, they can always offload to a background thread themselves, now that synchronize no longer has a requirement that it be called on the main thread.. Burned a few days trying to fix this as well, but the threading turns out to be super difficult to get right without C++/CX-y or C#-y language async support (Tried to implement own IASyncOperationWithProgress, tripped over threading requirements). Decided to cut losses and just go with this.. nah, it's valid for delegates to not care about all of the callbacks. We don't have access to concurrency runtime, so I'd eventually run into the same threading issues.. Nah, the downstream delegates want NSInteger https://developer.apple.com/reference/foundation/nsurlconnectiondatadelegate/1418264-connection?language=objc. i know.... good call. This won't actually send until the message is sent, since it's dispatching to the client thread. The other option would be to put this in _asyncHttpOperation:completedWithStatus:, but that seems too _late.... Nope, checked on ref plat, burden is on caller.. our test macros interact poorly, using ASSERT_TRUE isEqual: instead. Come to think of it, I think our ASSERT_OBJCEQ has problems with array and dictionary literals too.... 1>C:\\WinObjC\\tests\\functionaltests\\Tests\\NSURLConnection.mm(313,5): error : 'testing' is not a class, namespace, or enumeration. mm, tried it, doesn't do a good job conveying this being the 'error' case. leaving as-is. but this one is mutating it too. @rajsesh-msft there do not appear to be IHttpClient et al subclasses that can offer this to us. I was able to find the test page we talked about in the Foundation-Dev test app, but it only has Cancel/Resume and not suspend.. Method has nonnull declaration on ref plat, but acts the same as remove if forced, which is already handled by the NSMutableDictionary side of things.. It just works anyway on the reference platform, actually, but do we really care to emulate that?. I agree, but this is pretty out of my hands :(. Oh yeah, oops.. It gets copied. Implemented and added to test.. oh goshdarnit. oh yeah probably should. I could've sworn we already had this somewhere.... There's a private func in CFPlatform.c but that's pretty inaccessible so whatever. can you update the signature here to be typed?. do you need the same caveat here?. nit: could use some comments here just to label the steps. can move from the beginning of the function to here into a helper that's shared with attributesOfItemAtPath:. nit: this function could use some comments too. nit: travese. nit: I feel like this should be placed before the GetSet test?. can you add some equivalent tests for files/folders that don't exist and make sure everything's handled properly?. nit: why not a thread_local static?. +1ish - anything that collapses lines 78->92 would be fine (ie: fallthrough with ternary). nit: should the default case log an error or something?. ?. ?. guard against spurious wakeups by checking the thread actually started?. guard against spurious wakeups by checking a bool?. possibly just move my _NSBooleanCondition helper out of NSOperationTests (I still wish we had NSConditionLock...). would like a test enqueueing multiple notifications with different styles. I still don't see it? 0__0 (by default I meant switch default, not the run loop modes). unused. yup this is why i had the extremely bad __block std::shared_ptr\\s in my pr yesterday ;;;;. just have 2 outptrs!. ? why not just let this be synthesized?. nit: would rather the comment be on a separate line if it forces a line break like this. am confused... how does the loop manage to stay alive without an input source?. does NSRunLoop do the right thing in conjunction with a pthread and not NSThread?. nit: would rather no underscore since this isn't a member var. uugh~. discussed offline. might as well keep them in line. why not just oneline this?. ultra nit: receive. come again?. any particular reason to prefer signal over broadcast here?. This is literally declared in NSURLProtocolInternal.h.... What do you mean by other \"private\" invocations?. nit: --i. #2785 . $(Platform) and $(Configuration) don't work anymore?. marginally surprised that you can use a -> operator here. can we shorten these with StarboardBasePath or something?. ",
    "bbayraktutar": "I work for this application;\nhttps://github.com/Yogayu/EmotionNote\n. I'm having the same problem in all applications.\nIs this about the system?\n. ",
    "lbugnion": "That's probably what it is indeed. Thanks so much Rajesh, appreciate the prompt reply. I am talking about this stuff in a few days and need to make sure that everything is working. Take care!\n. ",
    "enyawg": "Hi Artem Simonov,\nToday I received your email suggesting as follows: \n\"@enyawg As a workaround, try turning off header modules as outlined here.\"\nI turned of header modules as outlined and it removed the AddressBook errors.... Now I have this 1 fatal error:\nfatal error: 'ContactsUI/ContactsUI.h' file not found (#503) although I am including theFramework in iOS library, called the ContactsUI.\nAny suggestions?\nThe full error log is:\nfatal error : 'ContactsUI/ContactsUI.h' file not found\n1>------ Build started: Project: Demo (Demo\\Demo), Configuration: Debug Win32 ------\n1>  ....\\Demo\\BrowserViewController.m\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\BrowserViewController.m(77,39): warning : 'networkActivityIndicatorVisible' is deprecated: property not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\BrowserViewController.m(83,39): warning : 'networkActivityIndicatorVisible' is deprecated: property not yet implemented [-Wdeprecated-declarations]\n1>  ....\\Demo\\main.m\n1>  ....\\Demo\\URLCommand.m\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\URLCommand.m(87,39): warning : 'applicationIconBadgeNumber' is deprecated: property not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\URLCommand.m(94,43): warning : 'applicationIconBadgeNumber' is deprecated: property not yet implemented [-Wdeprecated-declarations]\n1>  ....\\Demo\\ViewController.m\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\ViewController.m(14,9): fatal error : 'ContactsUI/ContactsUI.h' file not found\n1>  ....\\Demo\\AppDelegate.m\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(68,51): warning : 'alertControllerWithTitle:message:preferredStyle:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(71,45): warning : 'actionWithTitle:style:handler:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(78,21): warning : 'applicationIconBadgeNumber' is deprecated: property not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(81,47): warning : 'actionWithTitle:style:handler:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(86,16): warning : 'addAction:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(87,16): warning : 'addAction:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n1>C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\AppDelegate.m(91,16): warning : 'addAction:' is deprecated: method not yet implemented [-Wdeprecated-declarations]\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\n. Ok, Thanks Asimonov,\nThe other error I am getting is this:\n1>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets(1670,5): error APPX1101: Payload contains two or more files with the same destination path 'Info.plist'. Source files:\n1>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets(1670,5): error APPX1101: C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo\\Info.plist\n1>C:\\Program Files (x86)\\MSBuild\\Microsoft\\VisualStudio\\v14.0\\AppxPackage\\Microsoft.AppXPackage.Targets(1670,5): error APPX1101: C:\\Users\\wayneg\\Documents\\winobjc-builds\\0.1.160512\\winobjc\\samples\\Demo\\Demo.vsimporter\\Demo-WinStore10\\Debug\\Info.plist\nCould you enlighten me on this error APPX1101: Payload contains two or more files with the same destination path\nCheers,\nEnyawg\n. One more thing Asimonov,\nSo if I strip out the AddressBook & ContactsUI frameworks from the Xcode and run the vsimporter, can I add these these API's natively in Visual Studio... any good \"getting started\" tutorials you can recommend?\nCheers,\nEnyawg\n. ",
    "mnithish": "@ehren thanks for the details. The RPC_E_WRONG_THREAD is because you have used a lambda without specifying the continuation task context to use. You need to specify task_continuation_context::use_current for the lambda to execute on the thread it was called on.\nCan you try the below patch and let me know how it goes?\n--- a/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n+++ b/Frameworks/UIKit/StarboardXaml/CALayerXaml.cpp\n@@ -1694,13 +1694,22 @@ concurrency::task<CALayerXaml^> EventedStoryboard::SnapshotLayer(CALayerXaml^ la\n     }\n     else {\n         RenderTargetBitmap^ snapshot = ref new RenderTargetBitmap();\n-\n         return concurrency::create_task(snapshot->RenderAsync(layer, (int)(layer->CurrentWidth * CALayerXaml::s_screenScale), 0))\n             .then([snapshot, layer](concurrency::task<void> result) {\n+\n+            try\n+            {\n+                result.get();\n+            }\n+            catch (Platform::Exception ^ex)\n+            {\n+                return (CALayerXaml^)nullptr;\n+            }\n+\n             // Return a new 'copy' layer with the rendered content\n             CALayerXaml^ newLayer = CALayerXaml::CreateLayer();\n             newLayer->_CopyPropertiesFrom(layer);\n. Great, thanks for testing it out @ehren. We will make sure this goes into our next week's drop.\n. :shipit:\n. @bSr43 This is now merged. Thanks for your contribution!\n. :shipit:\n. CI build is successful\n. The change is now merged to develop\n. > }\nCan we implement these now that the class is complete? #Resolved\n\nRefers to: Frameworks/Foundation/NSURLResponse.mm:160 in 7e886a8. \n. :shipit:\n. :shipit:\n. > ```\n\nid userInfo;\n```\n\nThat is the right thing to do. userinfo should be copied and not retained according the the property decleration\n\nIn reply to: 229832711 \n\nRefers to: Frameworks/Foundation/NSNotification.mm:23 in 9291c4e. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. @jofre-ms is added to the review. #Closed\n. CI build successful\n. @bdrlamb-ms is added to the review. #Closed\n. :shipit:\n. @bdrlamb-ms is added to the review. #Closed\n. :shipit:\n. :clock1:\n. > ```\n\nFAIL_FAST_IF_MSG((s_extendedExecutionRequestCount == 0), \"There is no extended execution session active!\");\n```\n\nThis fail fast has to be removed - take the case when application is requesting for periodic heading/location update but does not have the required background permission, _removeExtendedExecutionSession will be called with s_extendedExecutionRequestCount = 0. I think the code was added before to catch miss-matched call to add/remove extended execution which is not valid any more with this change.\nThis function should do nothing if s_extendedExecutionRequestCount is already 0\n\nRefers to: Frameworks/CoreLocation/CLLocationManager.mm:107 in f593e8b. \n. @bviglietta is added to the review. #Closed\n. > ```\n\nTraceVerbose(TAG, L\"Received unhandled activation kind - %d\", args->Kind);\n\n```\n\nnit: TraceWarning #Resolved\n\nRefers to: Frameworks/UIKit/StarboardXaml/StarboardXaml.cpp:179 in 205d7ff. \n. :shipit:\n. :shipit:\n. In CI build\n. CI build successful\n. @triplef thanks!\n. I agree with Dustin, I am more than confident these will fail in our nightly runs\n\nIn reply to: 232463598 \n. :shipit:\n. :shipit:\n. :shipit:\n. CI build successful\n. @mnithish is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. :shipit:\n. @rajsesh-msft is added to the review. #Closed\n. @jaredhms is added to the review. #Closed\n. > }\nI have some tasks in 1608/1609 to deal with background URL and these seem useful helpers to have\n\nIn reply to: 235967078 \n\nRefers to: Frameworks/UIKit/UrlLauncher.mm:85 in 68d1d6f. \n. > }\nHave a prototype working so going to keep it in here to reduce my work\n\nIn reply to: 235970632 \n\nRefers to: Frameworks/UIKit/UrlLauncher.mm:85 in 68d1d6f. \n. In CI build\n. Merged\n. @jaredhms is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @aballway is added to the review. #Closed\n. CI build passed\n. Verified the behavior matches the reference platform i.e. unrecognized selector is thrown in this case.\nThis is not an issue. \n. https://github.com/Microsoft/WinObjC/pull/806 \n. :shipit:\n. @ms-jihua is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. CI builds passed\n. :shipit:\n. @DHowett-MSFT is added to the review. #Closed\n. Mobilecoreservices should only depend on CF and we should be able to do that now with the new CF we have. Foundation can then depend on mobilecoreservices\n. @DHowett-MSFT is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. Thanks github. I have no idea how it populated this\n\nIn reply to: 237972440 \n. :shipit:\n. @ms-jihua is added to the review. #Closed\n. Correct - reference platform seems to store the value in BST so when we enumerate they seem to be give the value in the level order of how they were stored, so we hit 5 before we hit 2\n\nIn reply to: 237985796 \n. @DHowett-MSFT is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @memontic-ms is added to the review. #Closed\n. @weswmsft is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. :shipit:\n. @memontic-ms is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. @DHowett-MSFT is added to the review. #Closed\n. :shipit:\n. :shipit:\n. Thanks for contributing @ehren \n. With our investment to move to D2D for CG, this task will boil down to calling IDWriteFontFace::GetGlyphRunOutline which will give us IDWriteGeometrySink objects that can be given to D2D to render or used to create CGPath objects that are backed by IDWriteGeometrySink\nUntil D2D is available, we need to map IDWriteGeometrySink to existing CGPath constructs. Will add more details here once I finish my investigation on this\n. @aballway is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @bbowman is added to the review. #Closed\n. Ping!\n #Resolved\n. In CI build\n. Yup some CT UTs will but the build is to make sure there are not any unknown regressions\n\nIn reply to: 245756330 \n. :shipit:\n. > static const wchar_t* c_defaultFontName = L\"Gabriola\";\nI have to be blamed for that. There is no API to get the default font name as that is unique for every application. Most Windows applications use Calibri or Segoe UI\n\nIn reply to: 245987714 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:37 in 4368641. \n. :shipit:\n. > ```\n\nCGFloat _width;\n```\n\nLooks like we need this field. Move it above this comment #Resolved\n\nRefers to: Frameworks/include/CoreTextInternal.h:68 in da34602. \n. :shipit:\n. > ```\n\nline->_runs = runs;\n\n```\n\nWith your new change, we are leaking here. You did an attach of a mutable array in the CTLine INIT #WontFix\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:454 in 8c41446. \n. > ```\n\nline->_runs = runs;\n\n```\n\nI missed the StrongID again - let us leave the code as is so if someone does a new will get an empty array\n\nIn reply to: 248397244 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:454 in 8c41446. \n. > static IWLazyClassLookup s_lazyUIFont(\"UIFont\");\nI don't think we require this any more #Resolved\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:40 in 8c41446. \n. @aballway is added to the review. #Closed\n. @ms-jihua is added to the review. #Closed\n. @rajsesh-msft is added to the review. #Closed\n. Assigning to @aballway as he is working on CTFrame\n. @pittmab Is there any warning/error in the Visual Studio output Window when this happens? Also can you share with the code snippet that fails for you?\n. @pittmab let me check with the emulator team if such a capability is supported.\nOn your second question I will defer it to @davelamb \n. :shipit:\n. @ad1Dima Can you please share with is the build log file?\n. @ad1Dima Thanks. It looks like our compiler defaults inline functions to static. To unblock yourself I would recommend adding an \"extern\" keyword to the inline functions in the source file for WINOBJC. I am following up with the compiler guys to see if we can find a permanent solution\nifdef WINOBJC\nextern\nendif\ninline void WDGLFillCircle(CGPoint center, float radius, int sides)\n. :shipit:\n. > ```\n\nCGContextSetTextPosition(context, 0.0, 10.0);\n\n```\n\nLet us not hard code these values as-well. Let us place text centered to the view #ByDesign\n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCLineTestViewController.mm:105 in b048cb0. \n. :shipit:\n. Confirmed this regression is because of CGFont* APIs being stubbed. This will automatically get fixed once our CGFont* work item gets completed.\nWill keep this bug open so we can verify and close this\n. > ```\n\n// Get font family name details so that can be used here. For now this is hardcoded to \"Gabriola\".\n```\n\nSorry I think I left this TODO out. Can you delete it for me please? #Closed\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:187 in cd93a98. \n. > ```\n\n// Get font family name details so that can be used here. For now this is hardcoded to \"Gabriola\".\n```\n\nNever mind I will handle it in my CR\n\nIn reply to: 248784512 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:187 in cd93a98. \n. :clock1:\n. > extern \"C\" {\nThanks for catching that\n\nIn reply to: 248776670 \n\nRefers to: Frameworks/CoreText/CTFont.mm:27 in ad4852d. \n. :shipit:\n. Yes, with D2D this should definitely go away but we know why it is bad today and how it can be improved - #1037\n. Verified this is indeed due to #1037. Closing this as a dupe\n. Identified the issue to be related to my changes to handle scaling. The math does not take deviceResolutionScale into factor so the text gets rendered away from the screen on Phone\n. :shipit:\n. @ms-jihua is added to the review. #Closed\n. @aballway is added to the review. #Closed\n. :shipit:\n. @aballway is added to the review. #Closed\n. :shipit:\n. :clock1:\n. > ```\n\n// float width = widthFunc(widthParam, 0, 0, fontSize);\n```\n\nThis can be deleted now\n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:266 in 796ad0a. \n. Also needs to be released before setting it to nil\n. It will be nice to override allocWithZone to prevent this class from being sub classed \n. This will run in O(n^2) time which may be not ideal if _count is large. This can be done in O(n) by keeping track of count of non-null elements seen so far -\nint index = 0;\nfor (NSUInteger i = 0; i < _count; i++) {\n        if (_container[i] != nullptr) {\n           if (index != i) {\n               _container[index] = _container[i];\n           }\n           index++;\n        }\n}\n. Why do we need this? Can't we just use a Platform::Object and cast it based on the activationType?\n. Use the macros from functionaltest-api.h\n\nIn reply to: 68808204 \n. Let us use FunctionalTest::Mock::\n\nIn reply to: 68809195 \n. I think I forgot to a add a trace here, can we add one so we know when the application gets activated it was due to an unhandled activation kind?\n. Let us merge this function with ApplicationMainStart\n. Remove tab spacing. We only use spaces\n. This needs to be defined in UIApplicationDelegate.h so apps can implement them. I seem to have missed this in my previous review\n. This needs to be defined in UIApplicationDelegate.h so apps can implement them.\n. Let us remove all references of this name\n. Can we explain how it is being verified today?\n. $(MSBuildThisFileDirectory)\n. Let us move these into ApplicationMain.h so other files that include this header do not have to bother guarding these explictly\n. +1 it will be good to capture all the header fields we care about and how we parse them\n\nIn reply to: 69051446 \n. Missing support for NSSsecureCoding and NSCopying? #Resolved\n. Got it. Can we at-least add stubs so we know we are missing these?\n\nIn reply to: 69179019 \n. tabs (in all your new comments) #Resolved\n. Recommend using StrongId<> so these can be removed #WontFix\n. Should be copy #Resolved\n. nit: do you want to perform this test synchronously? i.e. allocated and free NSNotificationCenter within the test and not catch it as part of the test clean-up #ByDesign\n. let us use std:: functions here and make the code a bit simpler to maintain with RAII #Closed\n. nit: not used #Closed\n. Curious: why should this be not release? #Closed\n. interesting this would be the behavior on the reference platform #ByDesign\n. This is not thread safe... theoretically  _completionBlock could get a new value and retain the new value while you are executing these statements #Resolved\n. nit: braces to follow coding convention  #Closed\n. Add some KVO tests around these? #Closed\n. Sorry... missed the fact this is a local block. Thanks for pointing it out John\n\nIn reply to: 69352631 \n. Can we STUB queuePriority, qualityOfService, concurrent and asynchronous properties in the header file or implement them if we plan to complete the implementation for this class?\nConcurrent and asynchronous atleast seems useful for this class #WontFix\n. Can we also have a test that does not override start but implements main? #Closed\n. try-catch? From iOS documentation - \"You should never allow exceptions to propagate out of your main method.\" Might be worth checking the reference platform as they jump around talking about OS X in the same line #Closed\n. From documentation -  \"you must generate KVO notifications for the isReady key path whenever the ready state of your operation object changes.\" #Closed\n. Ah looks like NSOperation can be called directly without being added to a NSOperationQueue. Interesting...\n\nIn reply to: 69352263 \n. Tests around dependencies? #Closed\n. According to the document this is an observable property #Resolved\n. What does it mean to add support to observe this property? According to the document this is an observable property #Closed\n. Implement isAsynchronous and return NO and isConcurrent and return NO #Closed\n. setQueuePriority should spew a warning saying only NSOperationQueuePriorityNormal is supported and have a CAVEAT keyword\n\nIn reply to: 69615276 \n. Question: Does this need to trigger KVO events or should it silently set it to nil? #Closed\n. nit: Need not be static, can be part of CortanaXXXForegroundTestDelegate test interface #Resolved\n. Though this is a cool way to test, all that was required was to set g_delegateClassName with the classname of your custom delegate in StarboardXaml.cpp for it to be picked up. This is how UIApplicationDelegate gets set and would avoid test restriction to be able to call it only once per class etc.\nYour call if you want to clean it up and make the test simpler. #Resolved\n. NSStringFromClass([CortanaProtocolForegroundTestDelegate class])); #Resolved\n. NSStringFromClass([CortanaVoiceCommandForegroundTestDelegate class])); #Resolved\n. nit: check if it not null and only set it when it is valid #Resolved\n. can we keep the interface similar to UIApplicationMain and use void* i.e. it takes a NSString* and because we cannot present that in C++/Cx file we use void* #Resolved\n. yes, see my other comment in StarboardXaml.cpp for UIApplicationActivationTest function\n\nIn reply to: 69814747 \n. Just noticed the changelist subject reads \"add support for concurrent NSOperation subclass\" #ByDesign\n. Null check is not required here as the path is always obtained from cairo which guarantees returning a valid pointer, but a check for flatPath->status would be nice to have if for some reason the cairo context used to retrieve the path was in an error state\n\nIn reply to: 70112840 \n. nit: can we ignore this file from clang formatting? #Resolved\n. > Boolean \nThese can be defined to the correct type in a header file #Resolved\n. nit: tabs #Resolved\n. > copyWithZone \nAlso override allocWithZone to prevent this class from being sub-classed\n. nit #WontFix\n. > location \nnit: heading update\n. > location update \nnit: heading update\n. > _headingFilter = 0 \niOS document says the default value for this should be 1? Is it not compliant with Windows?\n. nit: missing test filter #Resolved\n. not thread safe #Resolved\n. nit: we are not sending any suspend event (unlike other methods) we are handling it. #Resolved\n. Same for resume below\n\nIn reply to: 70830139 \n. nit #Resolved\n. That should not a problem because, _suspendSynchronize is called just before the application is being suspended, so the other thread will also get suspended and when the application resumes _resumeSynchronize will get called on the UI thread and that will resume the other thread from the wait.\n\nIn reply to: 70900447 \n. > Copyright (c) 2016 Microsoft Corporation. All rights reserved. \nNew copyright header? #Pending\n. +1\n\nIn reply to: 71259230 \n. Weren't these changes already part of #658 merge? #Resolved\n. nit: 0.0f #Pending\n. > _extendedExecutionSessionRequested = YES; \nThis can now be removed\n. > _extendedExecutionSessionRequested \nun-used variable\n. > EbrApplicationActivated \nThis should be EbrApplicationLaunched #Resolved\n. Have you tested suspend/resume with these changes?\n\nIn reply to: 72308770 \n. > args->PreviousExecutionState != ApplicationExecutionState::Running \nnit: enclose with braces for readability #Resolved\n. Can we have a trace to know OnLaunched was invoked #Resolved\n. > ->int{ \nnit: add spaces #Resolved\n. > / TODO: Save application state and stop any background activity \nThis also needs to be implemented similar to Launched/Activated #Closed\n. > TraceVerbose(TAG, L\"OnLaunched invoked\"); \nThese logs should be in their Ebr counterparts so we get these logs even with App.Xaml #Resolved\n. Are you sure? We can call AppEventListener() after we do ref new App() with the old activation\n\nIn reply to: 72352741 \n. yes this will be a breaking change as this went in this week's release and apps imported with this week's vsimporter will break\n\nIn reply to: 72348258 \n. This is not an exported function but is defined in the header here for the source file to use without having to extern it\n\nIn reply to: 72347990 \n. Activation can be called from a non-UI thread and the launcher's _openURL can block in that case. We have not evaluated all the URI activation scenarios for PLM yet and I did not want to change the launcher until we do that; hence this local change.\n\nIn reply to: 72368518 \n. nit: move this up into the \"Application entry points (StarboardXAML)\" section\nAnd let us use UI* naming convention to be consistent  #Resolved\n. Can we add test for iterating through these key-set? #Resolved\n. > toastArgs->UserInput \nCan't we just create a list of HSTRINGs directly here and pass it on to UIApplicationMainHandleToastActionEvent?\n. Not a problem\n\nIn reply to: 73383769 \n. VS automatically fixed this\n\nIn reply to: 73436698 \n. Fully disable as this test now fails even on our platform. The test was written wrong\n\nIn reply to: 73436821 \n. I was looking at WindowsOnly tests and they seem to be mostly testing internal/deprecated methods that can never be tested on the reference platform. I would like to keep tests that do not match the reference platform under OSX_DISABLED_TEST so we are are aware of the difference and theoritically they are not \"WindowsOnly\" tests. Let us talk today in our standup\n\nIn reply to: 73437159 \n. Argh... yes good catch\n\nIn reply to: 73437808 \n. VS did this to me. I will revert this change.\n\nIn reply to: 73447849 \n. I will revert the changes VS did\n\nIn reply to: 73439633 \n. I found moving the asserts to helper methods does not really help much when investigating test failure as the asserts always point to the helper function and not the actual point in the test that caused the failure.\nSaid that I do agree helper methods are useful but in this case I don't think it helps much\n\nIn reply to: 73384439 \n. > ASSERT_EQ(0, timesEnumerated); \nInteresting, how did this test pass until now? #Resolved\n. Ah started looking at the tests first\n\nIn reply to: 73620370 \n. Oh well looks like we store std::vector inside the object and that does not pass ASSERT_OBJCEQ check\n\nIn reply to: 73382204 \n. Will use this for few tests so we have coverage\n\nIn reply to: 73382312 \n. Good point. We have not overridden isEqual: method \n\nIn reply to: 73635392 \n. > addValue:(NSString_)value forHTTPHeaderField:(NSString_)headerName \nHold off on this review. I think I got the API behavior wrong (this is a old deprecated API for which documentation is not very clear) #Closed\n. Review updated\n\nIn reply to: 73719210 \n. This is kind of a test for which we need to know how it has been implemented for it to pass. Our implementation of hash for opaque types is by left shifting the value by 3, so this test will not pass for opaque types that differ only by the first three significant bits. Reference platform seems to be doing a right shift. It is commented so people know what check has specifically been disabled when they look.\nI can put it under WINOBJC but don't see a real value with this test. I am open to the idea\n\nIn reply to: 73762989 \n. > @\"JSON text did not start with array or object and option to allow fragments not set.\" \nReference platform does not document these strings and it seems like an over kill to compare error description in UT. Error codes should be sufficient\nNote: An error code can return different descriptive descriptions, so error code to description is not an 1:1 mapping always\n. Agreed and because that part is WIP this is a temp place to catch any build regressions. It will move out as part of Meredith's work\n\nIn reply to: 74129301 \n. We have taken hard dependency with Foundation and that is something I have talked with Meredith. For now these tests need to build from here unless we want to pull all WinObjC dependency into 3rd party folder (which I am not in favor of)\n\nIn reply to: 74129569 \n. Synced offline and decided to not include this project in build.sln\n\nIn reply to: 74129942 \n. > 25123.0 \nFixed #Resolved\n. Discussed offline. This has been resolved\n\nIn reply to: 74129614 \n. > [NSMutableDictionary new] \nautorelease? #Resolved\n. > [NSMutableDictionary new] \nautorelease? #Resolved\n. Good point. Done\n\nIn reply to: 74333399 \n. Good to know. Will change to that Brian\n\nIn reply to: 74335367 \n. Comments will be useful here #Resolved\n. This is throw away code as DWrite does this for us\n\nIn reply to: 74528837 \n. I was lazy and I tried to use this sample to verify the logic but I am not able to load this project. It keeps crashing VS #Closed\n. Thanks VS. It opened as soon as AJ showed up at my office\n\nIn reply to: 74621157 \n. It is called \"Fraction Pixel\" in FreeType world. 1 unit = 1/64 pixel\n\nIn reply to: 74653197 \n. > It is legal to run an NSOperation without an operation queue. \nIf iOS does not allow running NSOperation without an operation queue, do we have not be this nice?\n. > LP64 \nDo we need this code? #WontFix\n. Formatter seems to have done something weird here #Resolved\n. It cannot be  firstLine->_lineOrigin.y - lastLine->_lineOrigin.y as firstLine can be equal to lastLine if we only have one line.\n\nIn reply to: 77259329 \n. I could not find a documentation to understand this so implemented the code as it was behaving before. I can just use _glyphAdvances here to be safe\n\nIn reply to: 77259915 \n. Yes I understood the need for this member after our chat last week. I will update the comment appropriately. Problem is DWrite does not provide us with this information and manually calculating this does not seem to be accurate enough. Needs investigation\n\nIn reply to: 77261301 \n. Agreed. With this TODO it does not make sense anymore.\n\nIn reply to: 77261366 \n. I am going to leave it as is so I do not have to explicitly call std:: every place\n\nIn reply to: 77264108 \n. This code is trying to find glyph runs that make up a line. I do not think we can give these variables any useful name\n\nIn reply to: 77268929 \n. Yes, these are in plan to be tested in the next iteration of this code\n\nIn reply to: 77269567 \n. Welcome to the ref world - all reference (CTFrameRef/_CTFrame) are all +1. It is the responsibility of the caller to call CFRelease() on them.\nThe convention I have followed in the code is - if an API returns a NS* type it follows the regular NS memory management rules. If an API returns a *Ref type it is always +1, so the caller is responsible for freeing them\n\nIn reply to: 77270014 \n. I think this needed a TODO that I missed. I will revert this function back to the original implementation for now\n\nIn reply to: 77378972 \n. With DWrite we do not have access to _glyphOrigins for every glyph in the run. I tried calculating it myself with whatever DWrite provided back to me but it was way off.\n\nIn reply to: 77379732 \n. Sure will do\n\nIn reply to: 77680658 \n. Not any more. I have these changed to DWrite objects in the next CR. I will clean these up as part of that change\n\nIn reply to: 77732812 \n. Yes it needs to do. Good catch\n\nIn reply to: 77732196 \n. It would give it for every glyph run but it is easy to calculate it for a line and we need line origins in CoreText so instead of calculating it on every access I cached it in the CTLine object\n\nIn reply to: 77732628 \n. This code is going to be thrown away so kept with the existing coding style\n\nIn reply to: 77862776 \n. They need to be copied as the memory for glyphIndices and glyphAdvances are owned by DWrite and is not will be freed once this callback returns\n\nIn reply to: 77756323 \n. If I remember correctly NSLocale used to return locale string of the format \"en_US\" which does not match with what Windows expects. I will verify this again\n\nIn reply to: 77756000 \n. Yes this code is not used any more. Will remove\n\nIn reply to: 77756443 \n. It is not just for measuring, we also get glyph runs that we will use to render now. I will re-name is to something DWrite\n\nIn reply to: 77756507 \n. We might need the fragments for draw so I cached it in the object instead of sending a message to NS to calculate every time. Also it was very useful for debugging purposes. Will not over optimize now given we are still developing and this is not a huge memory over head\n\nIn reply to: 77757111 \n. <>\n\nIn reply to: 77757337 \n. Correct\n\nIn reply to: 77757935 \n. DWrite only supports providing the points for the first glyph in the glyph run and not for every glyph in the run. We need so find a way to calculate this but the few things I tried did not work so need to get DWrite team's recommendation on what to do here.\nI will add a TODO\n\nIn reply to: 77757825 \n. CoreText has not followed this convention so tried to keep up with the existing convention\n\nIn reply to: 77755487 \n. This is the entry point for NSLayout*\n\nIn reply to: 77757993 \n. It is not going to help with the static casts as  NSMutableArray only returns an id type but I agree from readability of this file given we now have support for generics\n\nIn reply to: 77757580 \n. I am converting from a void* to _DWriteGlyphRunDetails* here so static_cast seems appropriate here\n\nIn reply to: 77756151 \n. Dustin stopped by and looks like this is a bug with StongId\n\nIn reply to: 77873760 \n. Will consider it if we plan to use it a lot but I don't think that given it is called only at couple of places today\n\nIn reply to: 77755593 \n. Yup I was right. Cannot use NSLocale because of the above reason\n\nIn reply to: 77869413 \n. Yes as this is the same design pattern UWP uses\n\nIn reply to: 77901157 \n. Good point. Let me move this to NS*\n\nIn reply to: 77900982 \n. Going to keep it local to CT for now until I find a good place for it\n\nIn reply to: 77923909 \n. Synced offline - static_cast is appropriate here\n\nIn reply to: 78073085 \n. Synced offline - as this code is going away in the next iteration leaving it as is\n\nIn reply to: 78079893 \n. Weird I fixed all of these to be compliant with our coding style. Let me make sure that change got pushed\n\nIn reply to: 78095476 \n. Fonts can be installed at runtime so technical we should query for it every time. Also looks like this method is called from dispatch_once\n\nIn reply to: 78207690 \n. > UINT32 \nCoding convention mandates no shouty types  #Resolved\n. > dispatch_once(&initOnce, \nAre we not going to handle runtime fonts added to the system? May be a note here would be nice #Resolved\n. Interesting correlation - wish DWrite had some APIs to do this #Resolved\n. > ........ \nnit: $(StarboardBasePath) #Resolved\n. +1\n\nIn reply to: 78205733 \n. > (CTFontRef) \nstatic_cast<> #Resolved\n. > _CTFontManagerRegisterGraphicsFont \nCan we remove these private methods and update their callers instead so we know what public facing APIs have regressed with this? #WontFix\n. May be we should have a TODO for such things that we can revisit and have a work item or bug to fix\n\nIn reply to: 78118792 \n. makes sense to follow this convention. May be this should be added to our coding style guided after formal approval from the team\n\nIn reply to: 78114123 \n. > ret->_runs = [_runs copy]; \nWhy wouldn't copy work here? #Resolved\n. Np but we should remember that now some of the public methods are actual STUBs and you have kept track of these then we are good\n\nIn reply to: 78224805 \n. > _DWriteGetLine \nCan we avoid code duplication between _DWriteGetLine and _DWriteGetLines? We can create a _CTTypesetter object with the given CFAttributedStringRef and we should be able to call DWriteGetLines directly from here #Resolved\n. > (line->_strRange).length \nI just learnt that character count != glyph count for all languages. We should get the total glyph count from the glyph runs that actually make the line. May be it is worth caching this as a new member in _CTLine #Resolved\n. > NULL \nnit: nullptr #Resolved\n. > outPositions \nCheck for null #Resolved\n. I guess you are OK here. There is no return status we can provide so to blow up here is fine\n\nIn reply to: 78227492 \n. Sorry for being a pain here but we won't follow CF* style in our files\n\nIn reply to: 78225659 \n. > EXPECT_EQ(75, *helGlyphs); \nThis test will fail if we change our default font or the locale. Might be a good idea to set the font name and locale for this test for such hard coded values #Resolved\n. Should the first glyph origin be run->_xPos + ? #Resolved\n. I guess I got the wrong file version checked in. I should cover CoCreateInstance with THROW_IF_FAILED\n\nIn reply to: 78452483 \n. Renamed it _SafeRelease as it is shared across CT\n\nIn reply to: 78454639 \n. I did not find one while looking for it. Put a note here and I don't think this is a mad assumption to make\n\nIn reply to: 78232112 \n. I do not think moving to CF is a pressing requirement now. We have a lot more work to get CT standing before diverting our focus to this\n\nIn reply to: 78611079 \n. This is more readable and I don't think moving to dictionary will give any noticeable runtime performance \n\nIn reply to: 78610958 \n. Let us keep the note and we can take a call when we obsoletely know we cannot implement this interface\n\nIn reply to: 78609035 \n. stl::copy only supports iterator based copy if I am not wrong?\n\nIn reply to: 78468942 \n. Sure will add. I was hoping for the design document to help here\n\nIn reply to: 78468400 \n. I have fixed the default font to be Helvetica as it used to be.\n\nIn reply to: 78640513 \n. > UNIMPLEMENTED \nGiven we have CT/UIFont bridged we can implement parts of this API now? Are you tracking this with a different task? #ByDesign\n. > fd = fd  \nnit #Resolved\n. duh sorry what I meant was I need to allocate the array as-well so I wrote a helper to do both. Sure I can replade memcpy with std::copy but don't see a string reason to do that here\n\nIn reply to: 78623064 \n. You also need to implement viewDidLayoutSubviews() and calls [_leftView setNeedsDisplay] for screen rotations scenarios to work and re-draw #Resolved\n. You need it for the tests\n\nIn reply to: 79076875 \n. Done. I also handled the wrong scaling we discussed yesterday\n\nIn reply to: 79202522 \n. > CFStringRef \nnit: C++ style casts as per our coding style document\nAll through this CR #WontFix\n. ?? #Resolved\n. > return std::none_of(glyphs, glyphs + count,  { return glyph == 0; }); \nLet us leave these to DirectWrite to tell us if there was an error or not. #Resolved\n. > [frameSetter retain]; \nWhy have you removed the retain here? framesetter object is being handed over to CTFrame and it should hold a reference to it right? #ByDesign\n. > [framePtr->_lines objectEnumerator] \nnit: framePtr->_lines is sufficient here #Resolved\n. > inData \nWould be nice to check if inData is valid #Resolved\n. Let us move this code to _createFrame. Ideally when a CTFrame object is created it should have all its members setup properly. #Resolved\n. > _DWriteGetLine \nThe API says it we should return NULL on a failure but I see _DWriteGetLine is returning a new CTLine object #ByDesign\n. Ah I missed that\n\nIn reply to: 79685155 \n. > [_CTLine new]; \nOn a failure, it will be better to return a NULL #ByDesign\n. > line->_width \nIsn't the document saying it should be 0.0? #Resolved\n. > runPtr && runPtr->_dwriteGlyphRun.glyphCount \nnit: put braces around this for readability #Resolved\n. nit:\n_attributedString = str;\n_string = [str string];\n #Resolved\n. > 0.0f \nThis should be yPos right? Or does the reference platform has it all offset to 0.0? #Pending\n. > // TODO: #1001 attribs can be nil here? \nIs this TODO still valid? #Resolved\n. Who owns the familyName memory? #Closed\n. > _DWriteGetFamilyNameForFontName \nThe string that is being returned here is not retained, how will the memory management work here? #WontFix\n. It will be nice to have a test for this in CTCatalog #WontFix\n. Yes, we should not assume the underlying data structure and follow the CF memory model - a Get will return an autorelease object and it has be retained and freed appropriately \n\nIn reply to: 79965724 \n. > [ret retain] \nOK this is a bit confusing - ideally only *Ref objects returned by a function should be retained. All others should be auto released.\nThe reason why I say this gets confusing is, this function returns a  _CTFrame* object that is retained but _DWriteGetFrame also returns a _CTFrame* object that is not retained. Let keep the memory management consistent so it is easy to read #Resolved\n. Though I have used the UNIMPLEMETED macro this is not really a stub, we will never support this\n\nIn reply to: 80716651 \n. No the lock needs to be here so the renderTarget stays valid until its use has been completed. Ideally if we had used smart pointers all this would have come to us for free but I am going to keep CG code as is and rely on this single lock to keep the backing buffer alive\n\nIn reply to: 80771507 \n. It never gets called. Yes I will add the macro to all of these\n\nIn reply to: 80770326 \n. Yes, forgot to comment. This was a small change I found while testing the code. AJ has fixed this on his latest CR so this should go away once I rebase.\n\nIn reply to: 80768900 \n. Right, tried to optimize on an extra AddRef and ReleaseRef\n\nIn reply to: 80768737 \n. Guess my body lacked caffeine \n\nIn reply to: 80756548 \n. True, I will put a note here\n\nIn reply to: 80768510 \n. I guess the right way to implement this would be for CGGraphicBufferWICBitmapLock to have all of these members and to pass them along when I construct the lock object. I tried to optimize by sharing these members across them as are read only\n\nIn reply to: 80782774 \n. Removed my premature optimization and doing the right thing here\n\nIn reply to: 80798116 \n. COMIncludes.h cannot be imported\n\nIn reply to: 80762795 \n. Ah yes I remember you teaching me this long back\n\nIn reply to: 80783282 \n. > ASSERT_OBJCEQ_MSG \nWhy was MSG macro removed here? #ByDesign\n. OK now who owns the lock after the the GetRenderTarget() has returned? Someone needs to say the RenderTarget is being used so don't free it and that is what is done by this lock\n\nIn reply to: 80825385 \n. Discussed offline and we have an agreement. IWICBitmap interface will hold a lock to the underlying buffer when it is being accessed by D2D render target. Today Cairo owns the lock to this buffer and will only release it when the layer gets destroyed providing code guarentee to keep the underlying data buffer intact. With the plan to move to D2D this assumtion may not hold true\n\nIn reply to: 80825561 \n. Lock only gets called once here as we do not support locking parts of the render target. Until we support WICRect this is not a problem. The TODO already calls this out\n\nIn reply to: 80977409 \n. Yes I just realized it after reading through the WIC documentation one more time. I will fix it\n\nIn reply to: 80982967 \n. I was about to update the CR for that when my VS stopped working for me :-|\n\nIn reply to: 81259574 \n. Making it static instead as projections do not work in UT environment and causes CG UTs to throw\n\nIn reply to: 81263587 \n. appDidfinishLaunchingWithOptions gets called only the app is transition from a non-foreground state to a foreground state, but in UPW onActivated gets called irrespective of the apps state (it is upto the application to handle this) and if for some reason the application wants to always be notified of an activation the only way itcan do that is by implementing this delegate. The delegate is guarenteed to be called after every appDidfinishLaunchingWithOptions call and also when an activation occurs while the app was already in foreground \n\nIn reply to: 82305070 \n. You need to also edit  msvc\\vsimporter-templates\\WinStore10-App\\App.xaml.cpp and msvc\\vsimporter-templates\\WinStore10-App\\App.xaml.h file for this #Resolved\n. And to provide more context, we updated vsimporter to use App.Xaml.cpp few iterations back so StarboardXaml is not used any more if someone tries to vsimport their iOS project. We still have to maintain both these code paths so we do not have to force existing developer from having to re-import their project\n\nIn reply to: 82463737 \n. DPI scaling is part of the handling the inverted coordinate system, so yes it belongs in here\n\nIn reply to: 83092992 \n. > std::min \nGood catch\n. > frame \nFrame has to be released\n. I don't think we should go about deciding the yPosition for the next line of text. We should let DWrite own all of that\n. > __lineHasGlyphsAfterIndex \nA small function comment will be useful here\n. Noooooooooo.... we are going back to interpreting and laying out text implementation ourself sort of design again here. We should not be doing this. Though it might all seem to work when you bring in non en-us languages some of these assumptions is going to break.\n. ",
    "adein": "@rajsesh-msft These items are finished and the issue can be closed.\n. @rajsesh-msft Are you requesting that unit tests be added to the pull request, or for details on how we tested the changes?  We tested the changes using a sample project; we have not created unit tests in the bridge.\n. I believe I have found the fix for this issue, and will submit a pull request for it after some more testing.\n. @rajsesh-msft #576 added the transparency APIs; it did not fix the issue with CGContextSetShadow.  CGContextSetShadow doesn't seem to work at all with drawing shapes, with or without using the transparency APIs.\n. @rajsesh-msft Any update on this PR?  It's ready for review again.\n. Do you want me to delete this in another commit, or just leave it?\n. Issue #584 \n. I just tested again after the final implementation of the transparency APIs, and this issue no longer exists; it seems to use the Alpha like it should.  I'll remove this one, as it's not much different than using SetHue as a test.\n. ",
    "shahmeeresmail": "Implemented as part of PR #824 \n. I have created a pull request to fix other issues but it also partially resolves this one:\n- Full support for: CGImageGetBitmapInfo, CGBitmapContextGetBitmapInfo, CGImageGetAlphaInfo and CGBitmapContextGetAlphaInfo, CGColorspaceGetColorspaceModel, CGColorSpaceGetNumberOfComponents amongst others\n- CGBitmapContextCreate and CGImageCreate properly use colorSpace, bitmapInfo and bitsPerComponent. BytesPerRow still has issues with Cairo when the input data has padded pixels and those haven't been resolved yet but the infrastructure has been set up to at least pass the value down.\n- RGB and Gray colorspaces can be created and used\n- Provides some support for indexed and pattern colorspaces but more work is needed here\n- ColorFormat is decoupled from the colorSpace and instead the colorSpace is coupled with CGColorspaceModel (decoupling of ColorFormat necessary to properly support bitmapInfo at create time and implement bitmapInfo and alphaInfo accessor functions)\n. Note: Similar to PR#546 except that this PR targets the develop branch instead of the master branch.\n. I don't see why we can't delete the drawTopCap, drawLeftCap or drawLeftAndTopCap methods. They are unused but I originaly left them alone because I wasn't sure if it was envisioned to use them as part of a future change.\n. I will also remove makeRect and substitute existing references to it with CGRectMake and make a few small changes to drawInRect(pos) and drawAtPoint(point) functions.\n. Raj, the failures being reported were due to stale values of CGImageAlphaInfo and CGBitmapInfo being checked against. I updated the test with the correct values and made a few small changes in the test to make it easier to debug failures.\n. There are several issues here:\n1. This code is to fix UIImage::drawInRect and UIImage::drawAtPoint. I have verified that after my fix, these functions operate exactly as they are supposed to on iOS. I can share with you the code I used to verify this offline if you like.\n2. Some functions, specifically UISegment::drawRect, rely upon UIImage::drawInRect and UIImage::drawAtPoint to draw the border and background or other content of their component. The problem is that UIImage::drawInRect is not supposed to take the UIImage scale factor into account but UISegment expects it to since as you mentioned it is using a 2x texture. DrawInRect simply takes the entire source image and translates and stretches it to fit entirely within the destination rect while taking account insets which are not intended to be stretched. DrawAtPoint on the other hand, will draw the UIElement and apply whatever scale factor has been specified for the component when defining the output rect.  By fixing drawInRect and drawAtPoint to match the output produced on iOS, it has resulted in exposing issues due to UISegment and others relying on the previous incorrect behaviour of those functions. If I made the changes you suggested, it may create an effect similar to the one you desire for UISegment but it would break UIImage::drawInRect since it would no longer operate the same way as it should on iOS. To accomplish a render similar to what you require without breaking UIImage::drawInRect, would mean replacing the texture with a 1x texture to ensure that insets have a 1:1 pixel matching for the inset area since they won't be scaled.\n3. With or without the original implementation or my fix, UISegment is not rendering correctly. Right now, WinObjC uses selected and unselected textures to draw a gray border and white background when unselected and a blue background with a gray border when selected. On iOS, an app can a specify tintColor which defines the border color when unselected and the background color when selected. Since WinObjC selects between 2 static textures to draw the border and fill the background, it can't take into account the colors specified by the developer. Further, when insets are specified, up to 9 textured draws are being done for each segment which makes it quite inefficient. The correct way would be to do a single vector draw for the border and a single colorFill for the background. This way we could avoid 9 textured draws (27 if drawing a segment with 3 parts) and at the same time more closely match what the developer specified.\n. So I did some more testing and found that insets and their contents are not drawn correctly in BOTH the original code and in my code. Further, in the original code, if the source image has scaling applied, the output quality is significantly reduced.\nFor example in a override of UIView::drawRect, this sample app code draws incorrectly with the original code in WinObjC:\n```\n//Image dim: 2500x1800\nUIImage *uiImage = [UIImage imageNamed : @\"photo.jpg\"];\nCGImageRef cgImage = uiImage.CGImage;\nUIImage* scaledImage = [[UIImage imageWithCGImage : cgImage scale : 3.0f orientation : UIImageOrientationUp] resizableImageWithCapInsets:UIEdgeInsetsMake(150, 150, 150, 150) resizingMode : UIImageResizingModeStretch];\n//Rect Dim: 320x480\nCGRect imageRect = [[UIScreen mainScreen] bounds];\n[scaledImage drawInRect : imageRect];\n```\niOS: All corner caps very large, thin vertical and horizontal strips containing squashed center of majority of image.\nOriginal WinObjC: Insets not applied at all, and the image is of poor quality. Looks like a lower resolution version of the image was stretched over the target. This is probably due to the fact that it is rendered to a low resolution image one third the size of the original image(ie the pattern) then stretched again over the destination.\nWinObjC with fix1: Inset size is correct but contents do not match iOS\nWinObjC with fix2: Matches iOS\n. On a similar note, since we should probably do the right thing, I have developed a fix for the issues highlighted in part 3 of my original comment. Reviewing the change internally right now.\n. Absolutely! Ideally we should map as many UIKit items to xaml type controls. However, some are not mapped including UIDatePicker and UISegment which have custom draw calls to display their components. In those cases, we should at the very least attempt to match what the app developer is asking for.\n. I am not able to repro this failure. However, I am resyncing and rebuilding my local repo to see if I can repro it that way.\n. I resynced and rebuilt and still cannot repro the issue. Based on the first error, it looks as though vImage.h might be missing from the copy that is being built on your end. I checked all the commits in this branch though and vImage.cpp is always paired with vImage.h and it looks like you have the latest copy of vImage.cpp (line numbers match) and Accelerate.vcxproj (otherwise vImage.cpp wouldn't build). Therefore, it seems as though the most likely thing that has happened here is that vImage.h was not pulled prior to the build being generated. Can you ensure that when syncing to the branch that the latest copy of include/vImage.h was pulled?\n. Yes, I can take a look at the PR.\nOn another note, I have been unable to repro the issue with WOCCATALOG nor with any of the other samples. Will keep looking in the code and at other samples which involve transforming of image data or conversion between pixel formats.\n. How is this hit in the current code path? I searched through the code base and even with the new changes, I could not find an instance where we set both kCGBitmapByteOrder32Big and kCGImageAlphaNoneSkipLast simultaneously as the bitmapInfo for an object. Perhaps it is set somewhere as a magic number?\n. Done.\n. I apologize for this. I had re-installed VS on another machine before editing and hadn't set it to use spaces instead of tabs yet nor used the clang formatter. It is done now.\n. Creating a unit test and will commit it soon. On a similar note, the change on this line of code will be reverted since it is already operating correctly.\n. nit: use const here\n. Replaced assert with unimplemented_with_msg macro.\n. Replaced assert with unimplemented_with_msg macro.\n. This change got hit as part of the surface enum renaming. I did it elsewhere for similar code that was commented out or compiled out via ifdefs just for consistency. #Resolved\n. Done.\n. That's true and this is a pre-existing issue which isn't resolved here. We should create another pull request in the future to address this and maybe even a functional test to make sure the output produced in this scenario matches that of the reference platform.\n. With the original scaling this is what the datepicker output looks like:\n\nWith the scale factor not applied to the dest rect this is what is displayed:\n\nIn the first case it seems as though the image is overdrawn or scaled twice or something similar. In the second one it fits within the bounds.\nI will try to replicate the scenario you described sometime tomorrow but in this particular case, keeping the original scaling does not seem to be the way to go. I should add that on iOS the output is similar to the second image.\n. I kept them here because they are used internally by many different components and effectively allows other components to just import CoreGraphicsExport.h in order to make use of them. I can put them in a separate file if that works. Perhaps CoreGraphicsInternal.h?\n. BitmapInfo (including byteOrder flags) is intended to indicate what the underlying format is. The way it is processed is:\n- A byte order of 32big is assumed (ie RGB)\n- Use alphaInfo to determine: whether there is an alpha component or padding variable present and if so what its position is and place it in the pixel. In this case, kCGImageAlphaNoneSkipLast indicates that the least significant byte is a padding byte so at this point we would have: RGBX\n- Use the byteOrder to determine if it is different from the default value and whether or not the order needs to be flipped. In this case, kCGBitmapByteOrder32Little is different from the default, kCGBitmapByteOrder32Big so the byte order needs to be flipped. Thus, RGBX becomes XBGR.\n. BitmapInfo is something apps should already be specifying when creating contexts or images.\n. Good catch. I will put this function with the other helpers in CGSurfaceInfoInternal.h\n. In this scenario we got lucky because there were multiple bugs which resulted in the misuse of bitmapInfo working correctly but purely by accident:\n- CGBitmapContextCreate ignored byteOrdering so it didn't matter whether it was set correctly\n- RGB Colorspaces were incorrectly coupled with the format BGRA and interpreted as such. So by specifying any RGB colorspace in CGBitmapContextCreate and an arbitrary byteOrder value, BGRA was automatically implied no matter what. Since in the app is not using alpha and it really wants BGRX anyway, BGRA would operate almost identically to what it would expect it to.\n. I agree that the type should be consistent. Will make them all unsigned ints for now since the imageData backings use that type and it is highly unlikely we will have dimensions or individual pixel bit/byte sizes in the millions :)\n. I can also use CGFormatProperties here too\n. Absolutely :) The only reason I didn't do this earlier is because I didn't want to make this PR larger than it already was.\n. I looked into this a little more and although, I have implemented the default case (where no byte order is specified), I have implemented to default to 32big where it should default to 32 little. It is a small change and I will update it and remove the change in this file since it isn't needed.\n. I verified that indeed there is no reason why bitsPerComponent nor bytesPerPixel needs to be set here or in BytesPerRow where it is also overridden.\n. I know it was already here, but maybe for consistency replace shouty defines with non-shouty ones? #Pending\n. Since this is an internal struct prepend __CG ? #Pending\n. That is correct. I initially put it here to be more explicit but for consistency and thoroughness,, I reverted use of kCGBitmapByteOrder32Little here and elsewhere where it should be assumed anyway and retested the code once more.\n. I had considered removing this part of the code entirely unsure why it was put there initially.\nI had built and run woccatalog targetting ios7 and ios9 and it seemed to look visually identical as far as tintColors were concerned but I didn't feel comfortable removing it just in case there was a non-obvious reason that ios7 was singled out as having this behaviour.\n. nit: use static_cast(obj) instead of c-style cast #Resolved\n. nit: use c++ casts instead of c-style casts #Resolved\n. nit: add const since these values aren't changing once they have been set #Resolved\n. additional braces would be helpful here, especially around (curIndex - 1) #Resolved\n. wouldn't static cast be stronger than reinterpret cast? #Closed\n. Oh ok. I thought when you said stronger you meant less permissive :)\nOn a related note, I do agree static_cast should be used here. #Closed\n. If format was an enum or another dword sized value, then I figure a 'get' prefix would be appropriate.  However, in this case all values in a multi-element structure is being set so I feel that an 'init' prefix would be more appropriate here.\n. Doesn't apple define this to be 8?\nhttps://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Constants/#//apple_ref/doc/constant_group/NSDecimal_Constants\nNot sure if the document is completely up to date. You may have to check the iOS headers.\n. This is an API that does not appear in the official documentation but is certainly part of the Accelerate framework since many samples use it and it shows up on the iOS headers. It is also described in the Accelerate framework release notes:\nhttps://developer.apple.com/library/mac/releasenotes/Performance/RN-vecLib/\n. This is a quick check and only pads when necessary. The other APIs which use vImage_Buffer structures will know whether or not padding is present based on the rowBytes field.\n. It won't because the inputs will also be swapped (ie: the interface to the function is vImageConvert_RGBA8888toPlanar8(redPlaneBuffer, greenPlaneBuffer, bluePlaneBuffer, alphaPlaneBuffer) )\nThe function vImageConvert_ARGB8888toPlanar8 interleaves the planes in the same order as the parameters are passed in so if the inputs order is changed, the component order in the resulting pixel buffer will change with it.\n. Also, this isn't the only way a client can create a vImage_Buffer. There is nothing stopping a developer from allocating memory and filling out the data, height, width, and rowBytes fields themselves. Therefore, padding can't be assumed and needs to be checked where ever this structure is passed in.\nThis is just a helper function that can either allocate memory and init the vImage_Buffer structure or provide data alignment information to the client to use to create an allocation themselves that is optimally aligned and padded for use with vImage.\n. Allocating and freeing a vImage_Buffer structure is up to the client. They can use vImageBuffer_Init to allocate a structure or provide alignment information to allocate the buffer optimally themselves by using functions like alligned_malloc with the provided allocation information or they could choose to just use malloc and set the rowbytes equal to bpp*width with no padding nor alignment or with arbitrary padding or alignment values.\nSimilarly, the client must free the allocation. The framework does not track which allocations are allocated through vImageBuffer_Init and if it wasn't, it doesn't know whether aligned_malloc, mm_malloc, malloc or some other memory allocation function was used. Since the framework doesn't know how it was allocated, it can't free the allocation either and the client must use the appropriate function for freeing the alloc depending how it was allocated.\n. nit: aren't foxes technically canines making them dogs as well? #ByDesign\n. You're right, a macro would ensure that the line numbers matched up more so than before but it brings with it the potential for naming conflicts and this tends to become more of an issue as the function represented gets larger. \nAs an alternative to the original implementation and to using a macro, I modified the function to return a bool that says whether or not the buffers match and wrapped the function call in the ASSERT_TRUE macro in the main function so that the line number matched up. The function also prints out a log message indicating the first point at which the buffers don't match.\n. Could we append a type to the name of the function to indicate that this returns the float rect as opposed to the int/uint rects? #Resolved\n. The preceding function is called __CGContextInitializeWithRenderTarget whereas this one is _CGContextCreateWithD2DRenderTarget. Could we change one to make it more consistent with the other? #WontFix\n. Could we safely remove this line and replace StubReturn() below with true? #Resolved\n. ",
    "yaveymao": "using last winobjc build\uff0c CFStringCreateCopy seems ok. thanks.\n. hello, I can repro this with these steps:\n1) open WinObjc sample project \"WOCCatalog\"\n2) add some head files, and add \u2018Ws2_32.lib\u2019 for link\n```\ninclude \ninclude \ninclude \nif defined(WINOBJC)\npragma comment(lib, \"Ws2_32.lib\")\nendif\n```\n3) in \" application:didFinishLaunchingWithOptions:\" add testing code:\n// testing code\n    char addrBuf[INET_ADDRSTRLEN];\n    char testData[100];\n    inet_ntop(AF_INET, testData, addrBuf, (socklen_t)sizeof(addrBuf));\n    ////////////\nthen I can get a link error about '_inet_ntop'\nhere is my testing file\nAppDelegate.zip\n. MainWindow.zip\nSdAccountKeyM.zip\nlog file and xib file are here, thanks\n. our project also use 'ASIHTTPRequest' apis.\nThis issue is not very important now. I have used Apple API instead.\n. ",
    "kellymor": "Another developer has more information on this issue and opened a new issue to track it.\n861\n. :shipit:\n. Great looking project.  Thanks for sharing your success with the Windows Bridge for iOS.\n. Adding stack trace from the failure:\n\nEdgeManager.dll!Microsoft::WRL::Details::RuntimeClass > >,Microsoft::WRL::RuntimeClassFlags<1>,1,1,0>::Release() Line 2017 C++\n    threadpoolwinrt.dll!Windows::System::Threading::CThreadPoolTimer::TimerCallback(_TP_CALLBACK_INSTANCE * instance, void * context, _TP_TIMER * timer) Line 545   C++\n    ntdll.dll!TppTimerpExecuteCallback(_TP_CALLBACK_INSTANCE * Instance, _TP_TASK * Task) Line 2293 C\n    ntdll.dll!TppWorkerThread(void * Parameter) Line 1109   C\n    kernel32.dll!BaseThreadInitThunk(unsigned long RunProcessInit, long(__stdcall)(void ) StartAddress, void * Argument) Line 64  C\n    ntdll.dll!__RtlUserThreadStart(long(__stdcall)(void ) StartAddress, void * Argument) Line 997 C\n    ntdll.dll!_RtlUserThreadStart(long(__stdcall)(void ) StartAddress, void * Argument) Line 914  C\n. > sbAssertWithTelemetry(!values.empty(), \"Unable to query empty list of values\"); \n\nWould the query message be helpful here?  I'm not sure if the query would contain Personally Identifiable Information (PII) or not. #Resolved\n. > realPath \nCould this path contain PII, like a user name, e.g. /mymac/kellymor/projects/ ?  Or is this handled by the call to sbAssertWithTelemetry?  If the latter, then disregard this comment. #Resolved\n. Nothing specific about this version, other than revising it to something greater than 1.5.  One of the other workarounds for VSSDK1031 is rev'ing the version number.. This setting is used to deploy an extension into an experimental instance of VS for debugging.  Setting this to false for regular builds so that we don't hit this error:  VSSDK1031.. VS2017 did that.  I didn't specifically do this.  I did see a warning in the build output but it didn't block the build.. Is this change necessary?  I don't think it will negatively impact the legacy VSIX but, we might want to be sure this doesn't prevent install/uninstall and functionality of the VSIX.. ",
    "aballway": "The issue is happening because UIButton is using CGFontFitChars to determine the size of the text, but FreeType isn't recognizing the characters, so it just adds some generic width, which seems to be about half of one of these characters.  This will be resolved once we switch over to DWrite\n. CI build is successful\n. Build Succeeded  #Closed\n. didRecieveToastNotifications will replace didRecieveLocalNotification and didRecieveRemoteNotification because Windows does not differentiate between the two, so it was decided to create a new delegate rather than try and fit windows notifications into existing code\n\nIn reply to: 232207413 \n. Passed CI Build #Resolved\n. Build Suceeded\n. @rajsesh-msft is added to the review. #Closed\n. Builds passed\n. :shipit:\n. NSData.LongDebugDescription seems to fail because the reference platform uses a different class (NSObject) in the NSData class cluster when the size of the data is >= 2^16 - 9  bytes (a little under 64kb) on my test machine, possibly different sizes depending on the test platform.  To fix this test we can either A: create the OS_dispatch_data protocol for NSObject, which will probably require quite a lot of work or B: lower the size of the test data so we do not encounter this issue.  Because this seems to be more an implementation issue that should only come up during logging than a functionality one, I would recommend option B.\n. The other tests here fail because they expect the reference platform to shorten the logs past 1024 bytes, but that does not seem to be the case, so testing especially large NSData logs seems unnecessary.\n. :shipit:\n. Passed CI Build\n. NSData.LongDebugDescription seems to fail because the reference platform uses a different class (NSObject) in the NSData class cluster when the size of the data is >= 2^16 - 9 bytes (a little under 64kb) on my test machine, possibly different sizes depending on the test platform. To fix this test we can either A: create the OS_dispatch_data protocol for NSObject, which will probably require quite a lot of work or B: lower the size of the test data so we do not encounter this issue. Because this seems to be more an implementation difference that should only come up during logging than an actual functionality one, I went with option B. #Resolved\n. @rajsesh-msft is added to the review. #Closed\n. :shipit:\n. @msft-Jeyaram is added to the review. #Closed\n. ping\n. :shipit:\n. :shipit:\n. :shipit:\n. bump #Closed\n. :shipit:\n. :shipit:\n. :shipit:\n. :clock1:\n. :shipit:\n. @rajsesh-msft is added to the review. #Closed\n. @mnithish is added to the review. #Closed\n. somehow I am now able to create files with it on OSX where I was not before, but it certainly cannot create directories.  Will change to give error when trying to do so.  I have no idea why it wasn't working for me before, I tried it quite a bit\n\nIn reply to: 242566261 \n. Other than not creating the error on failure, our implementation functions the same as the reference platform.  The failure was due to the write expecting to create the file in a directory containing Library, whereas the file is created in the directory of the test file on OSX.  I'm still not sure why I wasn't able to create files earlier when testing. #Closed\n. Failing tests on the reference platform were fixed as of abe4cc244467efecfc618a03348b64af27ed2cfe so this is no longer blocked \ud83d\udee9 . > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nnit #Resolved\n\nRefers to: Frameworks/Foundation/NSCharacterSet.mm:3 in f6f0cba. \n. > // Copyright (c) 2015 Microsoft Corporation. All rights reserved.\nnit #Resolved\n\nRefers to: tests/unittests/Foundation/NSCharacterSetTests.m:3 in f6f0cba. \n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. :shipit:\n. Rebased on top of changes to font and drawing changes, and have more updates to tests and small fixups to memory leaks I found.  Also renamed FrameSetter to Framesetter to be consistent. #Resolved\n. > ```\n\nline->_runs = runs;\n\n```\n\nThe original array will be released on this assignment, but I can remove it since we are always creating it here\n\nIn reply to: 248395926 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:454 in 8c41446. \n. :shipit:\n. These are resolved in my PR so I'm assigning to myself\n. :shipit:\n. :shipit:\n. @mnithish is added to the review. #Closed\n. > ```\n\nCGContextSetTextPosition(context, 0.0, 10.0);\n\n```\n\nThis was just to ensure a little bit of spacing from the top.  I don't think we should make these centered vertically.\n\nIn reply to: 247476045 \n\nRefers to: tests/testapps/CTCatalog/CTCatalog/Tests/CTCLineTestViewController.mm:105 in b048cb0. \n. :shipit:\n. Due to some overlapping changes, I added CTFramesetterSuggestFrameSizeWithConstraints to this commit. \n\nIn reply to: 249305565 \n. :clock1:\n. :shipit: :shipit:\n. :shipit:\n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nnit: update copyrights #WontFix\n\nRefers to: Frameworks/CoreText/CTFont.mm:3 in 7d78727. \n. :shipit:\n. Seems to be caused by my reference machine not having a timezone... Closing.\n. Can you confirm that the CortanaSampleCommands.xml file has been added to the Visual Studio project?\n. The file is there but it need to be manually added to the project.\n\nA sample VCD XML file is included in the CortanaSample Xcode project directory. After running vsimporter, you'll need to add the VCD XML file reference to your Visual Studio project manually.\nIn the Visual Studio menu bar choose Project > Add Existing Item. Add the VCD XML file (CortanaSampleCommands.xml) located in the original Xcode project directory.\n\nI'm not sure why it would only cause an issue on phone though, possibly due to file copying or permissions.  If this isn't the cause I'll take a closer look.\n. :shipit:\n. :shipit:\n. :shipit:\n. Wouldn't you know it there's a better way of updating views than murdering and replacing them #Closed\n. > ```\n\n// TODO::\n```\n\nThey should be part of future work, but I'm not certain.  This one should've been part of future work, but has been worked around since there's no reference to UIFont or CTFontRef here...\n\nIn reply to: 251223866 \n\nRefers to: Frameworks/CoreText/CTRun.mm:251 in e1afcff. \n. This is actually an issue that's been resolved on another branch.  We're doing an overhaul of CoreText in the CT-DW branch, so this will be working properly once those changes get merged into master.\n. Assigning @ms-jihua since this will be resolved by your math fix\n. Is this the change required for  #1048? #Resolved\n. I prefer the current style without macros #wontfix\n. we want to share the text storage I would think, given we're responding to changes in it #bydesign\n. Possibly, but I consider that outside of the scope of this CR\n. Yes, _CGPathFitRect is removed in #1398 . > ```\n\n}\n```\n\nI think this is in the wrong place?\n\nIn reply to: 254926542 \n\nRefers to: Frameworks/CoreText/DWriteWrapper.mm:129 in ff1ac10. \n. Frameworks/Starboard/EbrStorageFile.cpp, line 279 at r1 (raw file):\n\nPreviously, bbowman wrote\u2026\n\nindeed.\n\nuint32_t then?\n\n\nComments from Reviewable\n Sent from Reviewable.io \n. :shipit:\n. > // Copyright (c) 2016 Microsoft Corporation. All rights reserved.\nthis file is going away\n\nIn reply to: 256725429 \n\nRefers to: Frameworks/UIKit/StarboardXaml/CompositorInterface.mm:4 in e193e65. \n. New iteration correctly addresses drawing problems on high dpi devices\n. :shipit:\n. Removed fix in CTFramesetter.mm to be made into its own CR with tests\n. :shipit:\n. Currently just through the text layout in WOCCatalog.  I'll add some unit tests :D\n\nIn reply to: 261048109 \n. Does this resolve all test failures in #1399?\n. >  @Status Stub\nIt wasn't one of the functions in issue #1022.  I only added the other unregistering ones because they were needed for testing.\n\nIn reply to: 263722645 \n\nRefers to: Frameworks/CoreText/CTFontManager.mm:128 in f49940a. . This isn't to fix the error in the build machine, rather the build machine error showed that my changes did not handle the error well and I lacked tests to check that, which is what this fixes.  . Updated tests with custom font, squashed into two commits, and rebased on top of develop. Updated to disable tests on build machines, which seem to have minor differences in text drawing.  Not sure if this is worth investigating.  Tests can be run by enabling disabled tests. Updated with changes to CTDrawingTests. I'm unable to repro on current develop.  This was likely fixed in #1504 when @ms-jihua refactored the font registration code.  . >             RETURN_IF_FAILED(typography->AddFontFeature({ DWRITE_FONT_FEATURE_TAG_KERNING, ++incompatibleAttributeFlag }));\nno, this is being used to break apart the different attribute ranges.  Since this would be done on the second range, it shouldn't cause a problem.  I believe there are unit tests to verify this works.\n\nIn reply to: 267478579 \n\nRefers to: Frameworks/CoreText/DWriteWrapper_CoreText.mm:296 in b491db6. . This is fixed as of 3de7a98 on develop. Sorry, I missed that comment.  This can be repro'd by running CTCatalog and opening the Font Functions page.  Scrolling down, the text in the right column will be drawn partially off screen.. It cuts down frame measurement time a little more than half, saving about 25% of CPU time drawing in the XAML custom text editor.\n\nIn reply to: 269371016 . Ping! Please update reviews. Update: rebased on top of develop with #1710 fixing crash due to memory leak.. Discussed offline, will be resolved with #1616 . This is fixed in #1711\nYes, on the reference platform setObject:nil will throw.  . Closing due to dependency on freetype coming from cairo, will remove freetype after CGD2D merges in and we no longer require cairo. >     provider = CGImageGetDataProvider(img);\nthis makes me so sad :(\n\nIn reply to: 273932290 \n\nRefers to: Frameworks/GLKit/GLKTexture.mm:421 in 8f54c08. . >     CGDataProviderRef provider = CGImageGetDataProvider(img);\nNo, this follows the \"Get Rule\" of not taking ownership of the returned pointer so it's sort of documented in the name by way of convention.  If it were violating that convention the comments would be helpful, but I don't think they're necessary here.\n\nIn reply to: 273931892 \n\nRefers to: Frameworks/GLKit/GLKTexture.mm:311 in 8f54c08. . Can you add a stack trace or more context?  I'm getting an unrelated failure before this one.. I'm getting a different error before I can get to that point.  I'm gonna file a bug for that n put this on hold until that's resolved.  I'm on head of develop too :/. And that access violation seems completely unrelated to the one this bug is originally about.  Can you make another issue for that one?. There doesn't seem to be.  I cleaned up a lot of memory leaks in CT a while back, I think this is the only one I missed/created since.. Seems to be caused by app code expecting the font family to be the font name, and trying to create a font with a nonexistent family fails.  Moving to @ms-jihua because she's more familiar with the codepath.. CTFontManager.DrawWithCustomFont, CTFont.DrawGlyphs, and TestDrawingTextInFonts/Fonts.TestFonts/3 are all failing due to slight drawing differences, and can be fixed by adding a small margin for error.  CTFrame.BasicUnicodeTest fails because arms seems to render Gurmukhi and Traditional Chinese Script slightly differently than on x86/before.  This causes a significant drawing difference because the lines are broken in a different place, so a margin for error could be to great for a reasonable test, so I think the best course of action would be to remove the glyphs causing the issue and keep testing Unicode support with glyphs that have remained stable. This is the same as the original issue @msft-Jeyaram reported in #1751. @DHowett-MSFT . I am unable to repro on develop running on Version 10.11.5. The only macros it uses are TEST_P and INSTANTIATE_TEST_CASE_P, but it still has the GTEST current_test_info()->name(), which is probably causing the crash.  I'm building it now so I'll see if there are any other things that would cause an issue. Thanks for fixing everything else up!. It passes :D\n\nIn reply to: 275760658 . Seems to be introduced in https://github.com/Microsoft/WinObjC/commit/88975cab8f6346ca3b318e2847b2ba6dae4aa767. Results from running on my machine\n. Rebased onto develop as this new project depended on freetype which no longer exists \ud83d\ude38 Also ping!. How do you mean conflated? This isn't testing anything in the sense of Unit Tests, so the only kind of failure that we should see would be a fatal failure, and that would just cause that particular test to fail without registering results.  Yes, by using the BENCHMARK_REGISTER_CASE_P macro.\n\nIn reply to: 277131527 . Ping!. @ms-jihua (before vs after drawing change) Yuge Savings HOly guacamole \n\n. Triple checked this to make sure the changes are consistent \ud83d\ude39 \n\n. we're not waiting for it to finish right now, and adding a wait for that might bring back some of the flakeyness\n\nIn reply to: 280432942 . I'm not certain.  The documentation doesn't specify and I wasn't able to make a run with non-identity text matrix\n\nIn reply to: 280432102 . The text matrix will be non-identity if the run's font has a non-identity matrix.  Changing CTRun to support this is in #1987. Rebased on top of recent develop changes, will merge when tests pass.. Leading, which is some added space above a line typesetters use for multiline text, is not part of the image bounds.\nThere was a bug in CTRunGetTypographicBounds for ranges with location > 0. Closed with #2121. Tests passed post #2027, please take another look \ud83c\udf4f . Rebased on top of develop to resolve merge conflict, tests passed again.. ping @rajsesh-msft @msft-Jeyaram. I mistyped, it should be \"design units\" but em is arbitrary I think? I still don't 100% grok the differences between the units,. > static const wchar_t* g_logTag = L\"CTFont\";\nglobal, presumably.  Not related to this PR though\n\nIn reply to: 282896087 \n\nRefers to: Frameworks/CoreText/CTFont.mm:41 in a2dac20. . Merging w/o CI build because this changes no run code. I tracked the issue back to commit [78259bd9686dc0e8a741ecec6a67f35505b3b7d9] from pull request #1768 and is likely related to #2158. I had to build from scratch after doing a clean -dfx.  Also happened after rebuilding CoreTextLib.. Rebased on top of packaging to resolve merge conflict\nping @ms-jihua @msft-Jeyaram @rajsesh-msft. ping!. Unable to repro, likely fixed in a7a61bc9adbfced72808153401c5a63a622f9e4f. I have it set to always build, though it was not actually building for me on run.\nUPDATE: Changing it to prompt will cause it to prompt every time . ping @msft-Jeyaram. ping @msft-Jeyaram . I'm unable to repro this locally, how are you running these tests?. Yes please, there should be the errors logged in the output. Mmmk so these seem to be related to #2107.  Your system probably has slightly different antialiasing settings that are just enough off to trip the threshold on the first test.  The rest don't yet have a threshold so we could just add a small threshold to those.. Are the NSLogging failures related to this, or should those be in a separate issue?. It's also quite possible that the hues of the colors are marginally off.  Possibly some rounding issue somewhere.. False alarm, the files were just dereferenced when CTCatalog got re-vsimported.  Fix for that will come with fix for #2273 as it's for testing purposes only.. I thought there were only single-line tests, but upon closer inspection it plays with a couple of lines :D\n\nIn reply to: 289160436 . > #import \"_CGLifetimeBridgingType.h\"\nShould this go as well?\n\nRefers to: Frameworks/CoreGraphics/CGColorSpace.mm:25 in 19da71a. . DWriteWrapper_CoreText::53 & CTFramesetter::92: yea it looks like I put the wrong issue number on those, my b.\nDWriteWrapper_CoreText::245: this is no longer needed and can be removed.\nDWriteWrapper_CoreText::487: this depends on DWrite support but should not be necessary and can safely be removed\nDWriteWrapper_CoreText::434, 555: This could be associated with a github issue if we wanted.  We could still look into finding a more precise value but 1 em is indistinguishably small, and has and will continue to suffice if we don't care to invest in perfecting it.\n. Running the tests on the reference platform, there are two differences:\n\ncontainsString:nil with throw an exceptions\nOn the reference platform [@\"TE\\u0301ST\" containsString:@\"T\u00c9ST\"] and vice versa, whereas our platform only has them containing with diacritic-insensitive. Ping!. Blocks #1725 as well. Updated because they were failing on dev box with blue failures.  I think a few were still failing w/ perceptual comparison but don't want out of date images ykwim. Unsure why filters changed beyond remove Assets.xcassets, Visual Studio did that on its own...\nXamlCatalog also has Assets.xcassets but doesn't face the same problem so I'm not sure from where the problem originates.\n\n\nIn reply to: 293412412 . Now XamlCatalog is having it every time I hit the play button, so idk why it wasn't happening before.\nI'm not sure if Assets.xcassets is something that we should have in the .vcxproj.  If not, vsimporter will need to be fixed.  If it is, then it may be a problem with Visual Studio either modifying files or not recognizing it as a folder properly.  Or some combination of both.  @bbowman @memontic-ms \n\nIn reply to: 293418223 . ping @msft-Jeyaram . Updated machine to Sierra, now fewer tests fail.  Still have currentDirectoryPath returning the incorrect path so I've disabled that test on OSX.  . > @class NSDictionary;\nNow that this is being included there's no need for this forward declaration #Resolved\n\nRefers to: include/Foundation/NSFileManager.h:26 in 350786f. . :shipit: . How far off is this?  It would drastically simplify #2453. How would this be a breaking change?  I can do that validation if that's the hold up.. ping @msft-Jeyaram. Nope, this happens during activation before the main screen loads. Seems to be an issue local to my machine, closing. The reference platform performs a little differently than we do wrt drawing modes and frames but the scale is the same.\n\nIn reply to: 299242879 . the reference platform will draw each run individually, so with clipping, etc. the regions do not overlap and causes nothing to show up.  \n\nIn reply to: 299271074 . Ran KVOPerf, difference is negligible (~5\u03bcs per notification, about 4% more). That fails during addObserver: because one can't KVO an NSSet*. Re-ran KVOPerf, difference is still negligible.  . ping @msft-Jeyaram . Test::Mock:: ?\n\nIn reply to: 68811817 \n. I don't think we would be able to do that without making ApplicationMainStart take a void*, which we were trying to avoid\n\nIn reply to: 68821029 \n. The test doesn't test anything yet, so I've disabled it for now.\n\nIn reply to: 68832198 \n. The linker gets especially upset if I try to add a projection header here #ByDesign\n. The pre-commit hook will not let me keep the space, looking into it\nEDIT: It looks like our clang-format.ps1 script is using an older version of clang-format, which seems to make this error newer versions do not.\n\nIn reply to: 70532438 \n. ToastNotificationsActivatedEventArgs has a String - argument and ValueSet - UserInput, so we can't just pass along the input value like we did with VoiceCommandActivatedEventArgs' SpeechRecognitionResult or ProtocolActivatedEventArgs' URI, and it made the most sense to pass along the projection through the delegate.  To keep consistency through the activation delegates, I changed them to also pass the entire args.  \nEdit: to be compatable with background activation we can't pass the entire eventargs object, so I reverted the changed for voicecommand and protocol activation\n\nIn reply to: 70538277 \n. Currently we can only use forward-declared classes, but it's non ideal as developers will need to include any projection headers in their code rather than just UIKit.h\n\nIn reply to: 70539688 \n. The way we add our events means we don't need to call them directly\n\nIn reply to: 72310498 \n. Suspend/Resume events are being called properly\n\nIn reply to: 72308899 \n. Yes.  It was just checking if we were already launched and main did the actual launching, but I changed it to be consistent with EbrApplicationActivated and launch from there, and main does the setup\n\nIn reply to: 72324753 \n. This one is for the willFinishLaunchingWithOptions: and didFinishLaunchingWithOptions: while the other is for didReceiveToastAction:\n\nIn reply to: 72317600 \n. No, this is the entry for functional tests\n\nIn reply to: 72336476 \n. The old activation path would be fine, and the new one will already need to reimport to launch\n\nIn reply to: 72338427 \n. No, this requires the app to be created already but with the old activation that wouldn't be guaranteed to happen before we call these\n\nIn reply to: 72338254 \n. We also need the Window to be activated to register event handlers, which we do in _ApplicationLaunch, though it could be moved there safely, but I'm not sure if we want to register event handlers during functional tests\n\nIn reply to: 72367773 \n. We could, but we would still need to modify UserInput here for _ApplicationLaunch\n\nIn reply to: 72745061 \n. The reference is read only, but we can still replace the values like this.  It's not good, but it's the only way to change the String^ to IPropertyValue^\n\nIn reply to: 73012825 \n. WRT these tests, wouldn't it make more sense to match the OSX method functionality and remove what would be redundant tests?\n\nIn reply to: 73397446 \n. With this we're keeping a test with dataWithBytes and one with dataWithBytesNoCopy and the extra assert, but the other two dataWithBytes tests only tested the description shortening functionality, which isn't how it works on OSX.  \n\nIn reply to: 73432695 \n. > [myThread threadPriority] - sExpectedHighThreadPriority \nShould this be absolute value or are we always going to be higher than these values?\n. When testing on OSX the tests were failing because it did not do this, it just printed out everything\n\nIn reply to: 73448519 \n. Yes, it will just try and grab the first two numbers it finds and make a range out of them.\n\nIn reply to: 73620628 \n. It is also kTLSProtocol1 on iOS\n\nIn reply to: 73745172 \n. We don't have any of this implemented so I don't know how we could test it beyond passing in nil.  Could be made a todo.\n\nIn reply to: 73749039 \n. > \"windows.h\" \nCan we also standardize <> vs \"\"?\n. > ASSERT_EQ(1, [filteredSet count]) \nShould also test to make sure it contains the correct elements #Resolved\n. It's just to align it with the OSX class which does not have a property but the two very propertylike methods.  Though it's a bit silly, it makes more sense to align it with the reference platform rather than have it be different and either modify our analysis tools or flag the code for a deprecated method, especially since this change doesn't affect functionality at all.\n\nIn reply to: 74354479 \n. We currently don't actually do anything with the offset, but I could at least add a test to verify they produce the same results with 0.0f\n\nIn reply to: 74523272 \n. isspace would also catch CR, which we wouldn't want to accept here, and good catch, we're not currently handling tabs\n\nIn reply to: 74523721 \n. Since I imagine we'll rewrite most of this when switching it over to DWrite, I'll leave it as is\nEDIT - Ended up changing anyways\n\nIn reply to: 74542897 \n. I'm not totally sure, which is why I didn't mess with it, but it seems like a scaling conversion.\n\nIn reply to: 74635158 \n. > _completionQueue = _completionQueue \nWould this default to __completionQueue?\n. Nit: unneeded  #Resolved\n. No because this will no longer be an issue once we switch away from freetype\n\nIn reply to: 74674436 \n. > convertDate \nWhy make this a class method for _ABContact? #Resolved\n. > and \nnit: don't need and #Resolved\n. > with \nnit: nor with #Resolved\n. > self = [super init] \nnit: can move into if() #Resolved\n. > self.label \nnit: _label = label. Also, should label be copied? #Resolved\n. > self-> \nDoes this need self-> ?\n. > else { \nnit: don't need else #Resolved\n. > index < 0 \ndoes this support negative indexing on the reference platform? #Closed\n. > int i = 0; i < [self->_list count]; i++ \nnit: foreach? #Resolved\n. > (__bridge NSString*) \nnit: looks like clang format messed these up #Resolved\n. > case WACContactEmailKindOther: \nshould we be using .*Other as a default for these? #Resolved\n. > convertDate \ndateWithWACContactDate?  #Resolved\n. > ASSERT \nnit: can be expect #Resolved\n. I think it would make more sense to be a helper function unattached to a class or a category method for NSDate\n\nIn reply to: 75164209 \n. > [self getCount] - 1) \ncan we be certain getCount will never return 0 here?\n. > self->_nextIdentifier++ \nnit: parenthesis here to make operator precedence clear #Resolved\n. nit: RETURN_FALSE_IF #Resolved\n. > ASSERT \nnit: these can be EXPECT #Resolved\n. > \"FAILED: Count of multivalue should be 1!\\n \nnit: don't need messages here, it will be clear from normal failure message #Resolved\n. > ASSERT \nnit: these can be EXPECT #Resolved\n. > #define \nwhy not constants? #ByDesign\n. > || \nshould this be && ? #Resolved\n. I think in general constants are better style than #defines, which I think even internally we should keep to the standard and avoid.  This file seems very macro heavy in general, many of which seem unnecessary and hurt readability.  \n\nIn reply to: 75560920 \n. > CHECK_DIVIDE_BY0 \nnit: CHECK_DIVIDE_BY_ZERO would be better #Resolved\n. > LENGTH(shortest) \nis this guaranteed to be > 0? #ByDesign\n. We should have tests confirming this behaviour\n\nIn reply to: 75561368 \n. oh, I misread the comparison, nvm\n\nIn reply to: 75562328 \n. > _undoStack = [NSMutableArray array]; \nnit: can this be  [NSMutableArray arrayAWithObject:startingGroup] ? #Pending\n. nit: since this is so short, it'd probably be better to just flip the if and put this inside rather than return  #Pending\n. > ((_NSUndoGroup*)[_undoStack lastObject])canUndo \nnit: c++ cast here? also a space before canUndo #Pending\n. > self. \nis there a reason these can't be _undoAction? #Pending\n. is this import needed? #Pending\n. should probably add tests for trying to undo/redo when there's nothing to undo/redo to guarantee the objects aren't modified #Pending\n. > switch (v) { \nwhy switch here rather than if/else? #ByDesign\n. > BOOL \nshould this be void? #Resolved\n. > _depth \nShould check to make sure !isClosed before doing this or _depth would go negative #Resolved\n. whoops, I think these were remnants from switching between branches a bunch.\n\nIn reply to: 76315512 \n. It looks like they're both in the same family Canidae but different species.\n\nIn reply to: 76319688 \n. > set = [NSMutableCharacterSet characterSetWithContentsOfFile:nil]; \ncan we test this as well? #WontFix\n. > andType \nnit: just type? #WontFix\n. > if (contactProperty == kABPersonFirstNameProperty) { \nnit: this might be better as a switch #ByDesign\n. nit: can just do this at the end of the method rather than in every if{} #Resolved\n. > ASSERT_OBJCEQ \nshould make these EXPECT #Resolved\n. > NULL \nshould have an error here to test against #Resolved\n. looks like I undid this partway, oops\n\nIn reply to: 76706890 \n. Double checked on reference platform.  Not falling for that again\n\nIn reply to: 76707059 \n. > originYLastLine + originYFirstLine \nWhy can't this be firstLine->_lineOrigin.y - lastLine->_lineOrigin.y? #WontFix\n. > numGlyphs \nThis won't be true for handling ligatures or other instances where there's not a 1-1 matching between a and a glyph #Resolved\n. > std::vector _glyphOrigins; \nWe'll definitely want vectors for the Get.*Ptr methods, so a _glyphs, _glyphPositions, and _stringIndices #Resolved\n. > sel_getType_np \nnit: why two lines? #Resolved\n. > if (!signature) { \nnit: would prefer this as if/else rather than early return #WontFix\n. > if (!types) { \nnit: you're already returning forwardThrow, so flip the if #Resolved\n. > if (!types) { \nnit: same as above #Resolved\n. > for \nnow this only works if they want all of the line origins, why change it? #Resolved\n. > CFRange range \ncan we just do ret = line->_strRange? #Resolved\n. > Only the starting position of the glyph run is handled. \nShould just be able to use _glyphOrigins #WontFix\n. > auto wcharString \nwhy not std::vector? #Resolved\n. > en-us \nnit: make this a constant, it's used other places as well #Resolved\n. > characters \nDoes this need to be freed? #Resolved\n. > _lineOrigin \nWill DWrite give origins for the line or for each glyphrun? If the latter we should keep this variable in the runs #WontFix\n. > _typeSetter \nDo CTLines need a typesetter? #Resolved\n. It would probably be better to just use std::vector characters(numGlyphs); than malloc and freeing manually style-wise \n\nIn reply to: 77747600 \n. >    \nnit: spaces, not tabs\n. nit: this would be better with the work in the if rather than preemptively returning, especially since it's void\n. > Throw \"Don't you have git? git --version failed.\" \nnit: no rick roll on failure\n. > struct __CTFont \nnit: typedef so we don't have struct everywhere #WontFix\n. > uint32_t \nnit: size_t #Resolved\n. > (struct __CTFont*) \nnit: can these be c++ casts? #Resolved\n. > font->_size \ncheck if nil before dereferencing #WontFix\n. > font->_dwriteFont->GetMetrics(&metrics) \ncan we cache these? #Resolved\n. > NSMutableArray* fontFamilyNames \nShould we cache this? #ByDesign\n. > weight \ncheck if null before dereferencing #Resolved\n. > ASSERT \nnit: these can be EXPECT #Resolved\n. I think the plan was to get it breathing first, then cut the cord\n\nIn reply to: 78220974 \n. copy by default doesn't copy the items, so each run would be sharing a reference to a string, which we would lose should the original run be dealloced\n\nIn reply to: 78260653 \n. the docs have these specified as NULL.  is there any case where a developer could be expecting NULL and nullptr would not work?\n\nIn reply to: 78227167 \n. This was just so I would be able to test my changes until the CTFont migration gets merged in.  I expect these to be overwritten by your changes\n\nIn reply to: 78260160 \n. it may have been another file? I'm not sure\n\nIn reply to: 78249523 \n. 0 would be the bottom of the frame, so any line with an origin >= 0 would be completely within the frame\n\nIn reply to: 78260477 \n. > THROW_NS_IF_NULL \nWill we not catch this in the THROW_IF_FAILED? #Resolved\n. > SafeRelease \nnit: should this be prefixed by __ ? #Resolved\n. For which method?  CTFont... doesn't use the __bound method, and I'd consider that outside of the scope of this test.  I am doing tests for the CTRun* methods in a different task\n\nIn reply to: 78467363 \n. I'd rather just change the line whenever it's merged than move all of them now.\n\nIn reply to: 78468576 \n. nit: this could be converted into a for in loop\n. > [NSMutableSet alloc] init \nnit: [NSMutableSet set]\n. same as above\n. I think it's better style to use for in loops unless the index is needed or the entire file is in counting style.  Given this file is mixed either one would work, but I believe using for/in is clearer.\n\nIn reply to: 78584341 \n. seconded\n\nIn reply to: 78223447 \n. probably.  I imagine lookup would be faster than all of the string comparisons it would take to be italic\n\nIn reply to: 78228119 \n. Long-term we should probably cut out all NS stuff and convert everything to CF, but for now I'm doing whatever works best, as converting should be reasonably painless\n\nIn reply to: 78225402 \n. probably, same reason\n\nIn reply to: 78227559 \n. raw pointers are valid iterators for stl\n\nIn reply to: 78621358 \n. > ```\n\n\n```\n\nnit: tabs #Resolved\n. Testing out new github review stuff #Closed\n. Another one #Closed\n. You should be able to just do CFRange{...} w/o cast parens #ByDesign\n. I have no clue how that got happened\n\nIn reply to: 79678864 \n. I changed _framesetter to a StrongId<>\n\nIn reply to: 79681629 \n. no, _lines is a StrongId and can't be used as a fast enumerable directly, and I prefer this to pretending it's just an NSArray*\n\nIn reply to: 79682448 \n. The reference platform will create an empty line if given \"\", and expects a non-null argument for CTLineCreateWithAttributedString\n\nIn reply to: 79685824 \n. The offset is always 0.0, but so is the yPos, despite it very much not always being 0...\n\nIn reply to: 79692524 \n. reference platform returns an empty object when given an empty string\n\nIn reply to: 79685344 \n. discussed offline, reference platform returns line width\n\nIn reply to: 79688032 \n. Right now it's just stubbed out #Closed\n. This is tested in the ParagraphStyle Tests #Closed\n. CreateTextFormat expects the font family name.  I'm gonna rename all of these variables to make it clearer what is what\n\nIn reply to: 79929428 \n. The test values were done using Segoe, so when we could actually use Times it threw off all of the numbers.  tl;dr it's a lazier fix than adjusting all of the values for a different font unrelated to the test\n\nIn reply to: 79930359 \n. UIFont seems to use Arial as default, so these are the values actually using that font.\n\nIn reply to: 79909850 \n. whoops, didn't catch that\n\nIn reply to: 79946189 \n. this one is on purpose.  The autoreleasepool will drain before this is drawn so it needs to be retained.\n\nIn reply to: 79946497 \n. This is being tested by CTLine_CreateTruncatedLineTruncationToken which makes sure the ranges are broken properly\n\nIn reply to: 79964738 \n. It's owned by the dictionary which has all of the family names\n\nIn reply to: 79964582 \n. Fixing that path is outside of the scope of what I want this PR to be\n\nIn reply to: 79976593 \n. According to their documentation on their typography stuff it should, and it has from what I've seen testing.   #Closed\n. They'll be used when determining the frame size when creating a frame as well, and we don't really have .   #ByDesign\n. @ms-jihua proposed a naming convention of double underscore for private to the file, single underscore for private to the framework #Closed\n. Before we just got the maximum ascent and descent values from the font, which we could do here, but to be interoperable with the reference platform we need to only get the ascent and descent of the glyphs used in the line\n\nIn reply to: 80317746 \n. > struct  \nleave NSDecimal here or developers will get convoluted error messages about anonymous structs #Resolved\n. what happened here? #Resolved\n. > reminde \nremainder? #Resolved\n. > (dividend->_mantissa)[index] \nshort is not guaranteed to be exactly 16 bits, so these should be & 0xFFFF #Resolved\n. > Interoperable \nthis should be handling the roundingMode if it's interoperable #Resolved\n. > REMINDER \nhere too #Resolved\n. > 127 \nnit: make this a constant #Resolved\n. > 1.8e146 \nnit: magic number #Resolved\n. > val *= -1; \nThis won't work for LLONG_MIN.   #WontFix\n. > isEqual \nis this tested for non-NSDecimalNumbers? #Resolved\n. > 9223372036854775 \nuse LLONG_MIN here to cover our bases #Resolved\n. > > E:\\island\\github\\henryfox \nthis should be a relative path #Resolved\n. nit: these should be the updated ms copyright  #Resolved\n. this is crashing for me #Resolved\n. I'll add a comment. I thought FLT_MIN was along the lines of INT_MIN and the most negative value, not the smallest absolute value. I'll change it to -FLT_MAX (which should be so far beyond a reasonable value that it can be considered impossible) #Closed\n. This was done to keep from having to do this division every time the helper was called by Raj's comment.\n\nIn reply to: 80528495 \n. > nullptr \nWhy not StubReturn? #ByDesign\n. But this is returning an object not a .*Ref, and creation methods return autoreleased objects no?\n\nIn reply to: 80596227 \n. Dwrite won't write all of the text in the frame if it is within some small margin of the width required, but I'm not sure what the precise value is nor have I found any documentation on what it should be.\n\nIn reply to: 80596031 \n. I don't think the redundant divisions we're doing here will cause a noticeable performance hit.  The number of glyphs in a line will be limited so we don't need to worry about extremely large N, and I think it makes sense to have this as a helper so when someone goes to change something in the future/an outside developer wants to peek in they won't be faced with more optimized but less understandable arithmetic  Discussed offline, will remove helper to be more optimal.\n\nIn reply to: 80598919 \n. > font \nshould check  that font != nil #Resolved\n. > font \nsame as above #ByDesign\n. > familyName \nif we do not initialize it here and we have no font we will try to get the address in the CreateTextFormat call, which I imagine should cause some issues. #Resolved\n. shouldn't these have the same mantissas but different _isNegative bits? #ByDesign\n. > EXPECT_ARRAY_EQUAL(mantissa, decimal._mantissa) \nstd::equal or memcmp? #WontFix\n. hrmm idk, reference platform seems to just return default values rather than crashing, and while I think given the interface it's better to crash than silently accept bad input, I could see this posing a problem\n\nIn reply to: 80757662 \n. You should also update CTCatalog with the methods that are working now that were stubbed out before #WontFix\n. It seems consistent throughout CoreText to just return a default value rather than crashing, though I'm not sure how other frameworks handle it, I'd like to conform in ours as closely as is reasonable\n\nIn reply to: 80785598 \n. The message was redundant because when this fails it already prints out the expected result and actual result making the message was redundant.\n\nIn reply to: 80821750 \n. It's determined by the order in which CFDictionary returns the keys for fastenumeration, which I a) really don't want to mess with and b) think is far outside of the scope of this issue.\n\nIn reply to: 80824620 \n. I don't think so, feels a bit silly to document what it isn't\n. what are these for? #ByDesign\n. > _MAX_EXP \nnit: should follow naming convention #Resolved\n. should probably just disable clang-format for this area and reenable it immediately after\n\nIn reply to: 80587874 \n. in that case should have comments about what area tests what\n\nIn reply to: 81209434 \n. > _MAX_EXP \nnit: share this between the files rather than redefining #ByDesign\n. wrt changing casts? I ended up just changing them all when I fixed mine\n\nIn reply to: 81208628 \n. discussed offline - will keep as is until a more thorough fix of archiving is done\n\nIn reply to: 81215648 \n. nit: would this work as a for loop? #WontFix\n. nope, just think it looks a bit cleaner. Shoulda been a nit, my b\n\nIn reply to: 81378408 \n. Changed this when I was trying to find out where the problem was coming from.  Works either way, and iirc Nithish wanted me to change the hardcoded 10 (though 0 isn't much better) #Closed\n. Yep! #Closed\n. We were being more lenient than the reference platform, I'll add comments to the tests\n\nIn reply to: 81864352 \n. Well that's interesting.  I did fix it before but maybe this time I won't accidentally delete the change\n. > D2D1_FACTORY_TYPE_MULTI_THREADED \nwill we ever need a single-threaded d2dfactory? If not, it would be better to just have the Get method rather than another create one #Resolved\n. nit: why not just &d2dFactory? #Resolved\n. Is this using anything from std::? #Resolved\n. nit: could be dispatch_once or lambda instead of having a helper method #Closed\n. is there a better way to split between functional/unit tests than these ifdefs? #WontFix\n. super nit: get rid of spaces here, just newlines #Closed\n. nit: are these includes needed here?  #ByDesign\n. <3 #ByDesign\n. nit: don't need return #WontFix\n. interesting that this still worked before, thanks #Resolved\n. nit: update copyright #Resolved\n. extra nit: put in if() #Resolved\n. IIRC not including them in a header was intentional, something funky happened with the linker because of how our modules take ownership of headers or something to that effect.  I'd prefer sticking to forward declarations until that's resolved so someone doesn't accidentally stumble into that wasp nest #ByDesign\n. Probably <3 #Resolved\n. Is this check necessary since you already return if it's empty? #Resolved\n. nit: clang format doesn't like c++/cx #Resolved\n. you need to call main here to go through UIApplicationMain #Resolved\n. nit: std::transform #WontFix\n. should handle count % 2 == 1\n. why #if 0 vs Stubreturns? #Resolved\n. In CoreText these methods would return {} when given a bad parameter, do they do the same in CoreGraphics or do they blow up? #WontFix\n. TIL #Resolved\n. EDIT::\nnit: add_pointer rather than using remove_pointer then adding one\nI'm not sure we want to keep it so flexible about pointer types, can we do a static_assert(is_same<T,remove_pointer_t>::value)? #ByDesign\n. need to remove this\n. I incorrectly implemented descent originally\n. This is being used to find the remaining rect on each line.\n. Do we want to just return here or should this FAIL_FAST? #Resolved\n. nit: static/const cast? #WontFix\n. nit: rename m #Resolved\n. nit: instead of having a flag variable recombine the ifs #ByDesign\n. nope! if the variable is static the lambda assigning it will only be called once, at least it better be or our activation scheme is terribly flawed... #Resolved\n. nit: can be ternary  #WontFix\n. extra nit: just use {} #Resolved\n. nit: ternary #Resolved\n. nit: this feels like a magic number, could this just be NaN? #ByDesign\n. do these paths need to be freed? #Resolved\n. nit: pt{x, y} #Resolved\n. nit: this seems to be a common pattern, maybe a convenience helper? #Resolved\n. nit: no need for -> CGFloat #Resolved\n. nit: std::min #Resolved\n. add a comment why #Resolved\n. nit: keep const and c++ cast #ByDesign\n. nit: make ternary statement #WontFix\n. same as above #WontFix\n. should this be made with a copy of the data? #ByDesign\n. why must decode == nullptr?  #ByDesign\n. nit: break these into two lines #Resolved\n. should be stub still #Resolved\n. Something seems wrong with your clang format, all of these should be 4 spaces #Closed\n. nit: make one line #WontFix\n. issue no. tracking these? #ByDesign\n. nit: even though you don't need it now add a break here #Resolved\n. why change the name? #Closed\n. nit: clang format really busted #ByDesign\n. nit: should follow naming conventions, and self isn't a good name for a function parameter #ByDesign\n. null check self here #Resolved\n. should we self = nil here? #Resolved\n. should add comments, and wrap the raw mallocs & ptrs #ByDesign\n. lots of comments #ByDesign\n. nit: c++ cast #WontFix\n. should check that img, cgImg != nil #Resolved\n. nit: make these full words #WontFix\n. nit: store this instead of calling twice #Resolved\n. can width == 0? #WontFix\n. should be caveat #Closed\n. can we just get height here? #ByDesign\n. this needs to be fixed #Resolved\n. nit: full words #WontFix\n. don't we already have these files? #ByDesign\n. HRESULT hr = ... #Resolved\n. Err should we release self before returning? #Resolved\n. instead of passing in &width pass in nullptr? #ByDesign\n. When you reformat with fixed clang format it may not return this to normal, so it may need to be done manually #Resolved\n. Should we share those instead of replicating util code? #Closed\n. If we're doing that we should just make it a private method #ByDesign\n. no, this is only called from one place where ctx will be non-null and scale will be either 1.0 or 2.0\n. is the lifetime of the CGImage supposed to be independent of the data it's created with or are the two tied on the reference platform? #ByDesign\n. Yes, it draws from the origin\n. looks like some I missed some other changes that got reverted when git blew up on me #Closed\n. Yea this was just a workaround from hitting this issue, this way will be stomped by the better fix during merge #Resolved\n. no, it's always being called by an NSString passing in self\n. there is no such macro?\n. Outside the scope of this CR\n. Outside the scope of this CR\n. nit: use std::optional #WontFix\n. should this blow up if given nil? #ByDesign\n. nit: c++ casts #WontFix\n. can we merge in @DHowett-MSFT's helper for this? #WontFix\n. nit: or a ternary since it's a one-liner  #WontFix\n. || !font #Resolved\n. nit: wcharString(length + 1, 0); #Resolved\n. should only get length wchars, we shouldn't assume length+1 will be valid #ByDesign\n. nit: use length #Resolved\n. nit: immutable  #Resolved\n. would it be better to just skip this name rather than terminating early? #Resolved\n. nit: move closer to use #Resolved\n. same as above #Resolved\n. nit: std::transform with a conversion function #Resolved\n. THROW_IF_FAILED #Resolved\n. nit: EXPECT_NEAR rather than #if/else #ByDesign\n. oh well that's no fun #Closed\n. yes\n. I'm not a big fan of macros, especially with outside side effects.  I'm gonna keep these as is, as I think it's much clearer what's going on.\n. these keep showing up for some reason,  I must've accidentally added it.  Will remove.\n. Maybe change the note, a user can pass in an array for decode, but it won't be touched, we won't throw if decode != nullptr as the comment seems to imply #WontFix\n. nit: RETURN_RESULT_IF_NULL #Resolved\n. nit: move RETURN* macros after UNIMPLEMENTED so callers will get message even if passing in bad data #WontFix\n. nit: just create in a lambda rather than having a static private method that's just called in here #ByDesign\n. nit: CGFloat #WontFix\n. lol #ByDesign\n. You marked this resolved but it isn't... #Resolved\n. nit: size_t #WontFix\n. is this leaking? #ByDesign\n. descent is negative if it extends below the baseline, positive above\n. Discussed offline, leaving as is\n. clangformat forces it, I'll keep it\n. I'll let @DHowett-MSFT clean these up once all of this is changed #WontFix\n. gives us the distance to the center of the glyph w/r/t baseline #ByDesign\n. super nit: storageFile.comObj #Closed\n. should this remove an item when we have exactly maxItems? #Closed\n. nit: use Strings::WideToNSString rather than directly using NSString internals #Closed\n. nit: flip this if so this only has one return at the end #Closed\n. do we want these to blow up when no file is found? #Closed\n. this always returns true? make a void/just return at the end if we can't change the signature for some reason #Closed\n. nit: braces #Closed\n. why braces here? #Closed\n. nit: ternary return #Closed\n. super nit: add int to type #Closed\n. RETURN_IF_FAILED?\n. nit: make one if #Closed\n. nit: no shouty #Closed\n. add TEST_METHOD_CLEANUP so state doesn't leak into tests after this one #Closed\n. needs to be released #Pending\n. why not std::vector here?  and will unique_ptr properly delete the malloced array when created only as a pointer? #ByDesign\n. I don't like the implied int, but it's super not necessary hence super nit\n. extra nit: just use empty braces. \n. any advantage to passing in raw values than ComPtrs here?\n. also should only need [&lineWidth] #ByDesign\n. nit: else instead of early return #WontFix\n. nit: c++ casts #WontFix\n. nit: return !context->HasPath() || CGPathIsEmpty() #Resolved\n. should we do this validation here or let CGPath do whatever it wants? #WontFix\n. nit: parens so it's clear what's being &'d #Resolved\n. nit: return HasPath && ... #Closed\n. do you mean familyName? That will return an incompatible name\n. The method returns the \"correct\" value, which is taken directly from the font file as I understand it. The issue is Xaml expects the family name to be a different value than the one on the file in some cases.  A developer may expect familyName to be the actual value from the file, in which case changing it in the CoreText/UIKit calls would be incorrect. \n. nit: bytesToSkip.data()\n. in that case :shipit:\n. This makes UI/NS unable to be coerced, which I don't believe is intended behavior\n. Will this be needed anywhere else / worth making into a helper? #WontFix\n. nit: bool #WontFix\n. release first path #Resolved\n. same as above #Resolved\n. nit: EXPECT_FALSE, that's a super sneaky not #Resolved\n. Double checked - the values between CT/UI are different, and we can't change the values of NS/UI because our internal test app (and presumably others) are depending on those values staying the same\n. I'd still prefer bool over SHOUTY/ObjC BOOL types (actually which one is it here?) #WontFix\n. Terribly and arbitrarily yes I do <3 #WontFix\n. I really dislike returning a reference here.  Traditional setters/getters would be more appropriate #Resolved\n. should we be closing the path here, and will doing so change how future operations on the path behave? #ByDesign\n. nit: do we need to be explicit about returning a bool here? #ByDesign\n. super nit: best described as \"symmetric equivalence\"  #Pending\n. You're right, added a comment and reverted change\n. I'm not quite sure how it worked before\n. nit: c++ style casts\n. add this to file with other RETURN_IF...'s?\n. For some reason reminded me of the intro to Law and Order.\n. add comments explaining why 0, 1\n. nit: EXPECT_SIZEEQ\n. nit: degrees?\n. thought I added a different comment here... try [lineWidth = this.lineWidth] or something to that effect.  and is -> float necessary? #WontFix\n. Already done and tested\n. nit: would make more sense to have a CloseFigure which closes it and sets isFigureClosed\n. nit: IsFigureClosed would suffice #Closed\n. nit: uint32_t and move after ClosePath\n. whoops this check isn't actually needed any longer\n. I hate to admit it but you're right in this case, too many layers\n. #1301 \n. Interestingly enough we rotate in the correct orientation without doing the conversion.\n. are these all 1-1 mappings? #ByDesign\n. I'll do this the next time I add an attribute we handle here or on any cleanup pass I make.\n. A good pattern for future tests, but I don't believe it's necessary here\n. should do something with the HRESULT here #Resolved\n. It actually is an objc\n. achtung? atchung sounds like an old heavy cash register #Closed\n. use createwith here? #Resolved\n. nit: shouldn't need to make ternary with messages here #ByDesign\n. do we have tests for these?\n. > -beziers[i].point1.y \nnit: maybe add parens around this so the unary - sticks out more, right now it's super sneaky #WontFix\n. > // Could have used CGPathAddLines instead, \nnit: feels more like a commit comment than in-code #Resolved\n. > CGPathGeometrySink \nnit: class name should follow framework naming convention #Resolved\n. > _transform \nleaking? #ByDesign\n. > comparePathContext \nnit: parens for clear operator precedence  #Resolved\n. > 0.002f \nnit: make this a constant #Resolved\n. assert that both vectors have the same size\n. nit: size_t\n. __CTPathGeometrySink if it's only going to be used here #Resolved\n. nit: maybe just an enum to hold the state rather than two bools #WontFix\n. This should be done all within ComPtr #WontFix\n. nit: move this closer to use #Resolved\n. nit: pull 96 out into a constant #Resolved\n. We should be keeping these all within ComPtr rather than mucking around with raw pointers #ByDesign\n. nit: no shouty types #WontFix\n. nit: change to CreateImageWithPixelFormat to make clear it returns a +1. #Closed\n. Are images immutable? #ByDesign\n. nit: use macro here #Resolved\n. wrap this in ComPtr/other static thing? #WontFix\n. Shouldn't be, these are all objc messages\n. I sure hope not, but I don't think double-checking is bad\n. documentation calls for zeroing out valuebuffer should we fail.  Hopefully people would depend on the returned bool rather than valueBuffer, but it's a low cost to be compliant here #Closed\n. These were already here, I just did a replace assert/expect so I could see everything that was failing.\n. I'll check on the reference platform\n. Mmm parens don't help much #WontFix\n. this is what the clang format gods have decided is appropriate here :/\n. Update: reference platform goes on its merry way and skips over incorrect values, returning an object with any valid values it was initialized with\n. Update: Reference platform returns immutable copies\n. what is this for?\n. nit: would prefer these be accessed similar to parameterized test variables than implicitly available (say getContext\n. should this be in a unique_cf?\n. I considered that but found it would make more sense to just have synthesized ivars for properties than have to make getters/setters to go through CT methods, and NS has settings that CT doesn't.\n. nit: .m here? --Scratch that, maybe a comment saying all are .mm in RF\n. I'd prefer not to litter this code with comments, since this & similar patterns are common in here.  Yea CGSizeZero := CGSize{0, 0} #WontFix\n. nit: if c_fontPropertiesMap is only used here, would prefer it scoped within the function #WontFix\n. is there a performance impact from iterating through and initializing with all fonts? Could this be done more lazily? #WontFix\n. nit: can this be static? #ByDesign\n. nit: should pull this into a constant while you're here #ByDesign\n. nit: should this be wrapped in #ifdef c++? #Resolved\n. we want the size to be as most FLT_MAX, it should be the size of the text at that font, but this is only testing that we don't say the width is as most 0. #ByDesign\n. nit: why not just (path & kCGPathEOFill) ? #WontFix\n. Does this match reference platform behavior when nothing is being clipped?\n. nit: rename something more informative\n. nit: magic number\n. better yet invert the if to get the easy branch out of the way and remove else\n. nit: move these into one call #WontFix\n. nit: no need for bit shifting, do a multiply and let the compiler optimize.  Also, add a comment why multiplying #WontFix\n. Is 0 the default bitmap info? Should this be a constant? And do all of these match reference platform? #Closed\n. nit: just divide here #WontFix\n. this seems very unsafe?  Is there some container which could take care of this? #WontFix\n. feels a bit sparse on tests given how much you've just implemented. I'd prefer a lot more test coverage hitting edge conditions and comparing against reference platform to verify correctness.   #Closed\n. should these be const refs? #Resolved\n. nit: remove commented code #Resolved\n. should we assume transform is nonnull? #ByDesign\n. if this is a common pattern, can it be broken out into a helper function? #Resolved\n. nit: is this needed? #ByDesign\n. nit: can use EXPECT_EQ including CppUtils.h #Resolved\n. What I mean is, is there any reason to override when it's just calling into super? #Resolved\n. nit: is this worth pulling out into a helper method of its own?\n. if [self text] returns nil here we'll run into the same issue on arm release until #1365 is resolved.\n. should check that it's > self.minimumFontSize + 1 or you'll possibly go 1 below minimum on the last iteration\n. nit: might want to prevent from assigning _minimumFontSize anything invalid here to simplify logic throughout\n. Had to add dependency on internal CGContext method to get around abhorrent performance in current implementation of CGPathContainsPoint.  Can be removed once merged in with CGD2D for #1394 \n. It's an existing function, and will be removed with the CGD2D changes\n\nIn reply to: 88314147 \n. It's in UIKit, and is a private (should be static whoops) helper\n. It's just two ifs... and I prefer this to early returns anyways\n. remainingRect is zeroed out in the beginning of the method, but looking at it again it makes more sense to do so here.  EDIT - scratch that, because of early returns it's better to have it at the beginning.  Man I hate early returns\n. I think that adding another return here would make it harder to parse, I prefer it in a sense that I find it easier to read and understand what the code is doing.\n. unfortunately clang format is really opinionated about there not being a newline here :/ Added a comment for readability\n. It is defined in this file\n. I was thinking for internal use, should this conversion ever need to be done elsewhere from UIFont to Xaml\n. I didn't think we supported tab stops before.\n. This would not be resolved with CGD2D changes, it would need to be a separate task.\n. nit: why not noisy here? #Resolved. nit: can construct on one line: refImage{image} #Pending. Is this a private function we should be keeping, or is there a public alternative for our uses? #Resolved. check that not dividing by 0 here? #Resolved. nit: release instead of get since you're dropping the reference anyways #WontFix. nit: it isn't obvious what delta is here, don't use auto. nit: same as above #Resolved. nit: don't use magic numbers here, strlen or some constexpr if there is one.   #Resolved. nit: throw that ternary in some parens #Resolved. I know that this function has given us some trouble in CT land, does this work consistently enough that it's worth trying? #ByDesign. nit: ternary #Resolved. nit: does this need the intermediate value? #Resolved. same as above #WontFix. These are tested by being in the list of available fonts in the font and alignment pages, and I'm unsure if these propogate to Xaml, will require investigation #Closed. I normally dislike them but find it makes this codepath cleaner #WontFix. would have to cast to CFDataRef to do so, which feels really silly #WontFix. This failure represents trying to create a font with an invalid font family name, and will fail the same whether or not the user registered any custom fonts #ByDesign. how would a lambda taking a DWriteFontCollectionLoader and calling the member function inside differ from using std::mem_fn here?. It's out of a ComPtr so that should magic the retain count no?. I expect this will all be replaced in #1450 #WontFix. Yep!. Update: I cannot find a way to let Xaml use our custom font collection, will need further investigation to figure out if it is possible to do so. I see your point, but it feels silly to create a lambda just to do this, and given it's internal and documented I don't think it will pose an issue #WontFix. it's supposed to start before the position of the first element, which would be 0 #ByDesign. They can't be joined because there are different errors if (data && !contains) vs (!data) #ByDesign. Out of scope of PR #WontFix. Out of scope of PR #WontFix. This seems to be the pattern we're following with CT, I'm not sure where CGFont falls wrt the patterns.  I know @ms-jihua has a task to normalize the pattern which may touch on this. This is only being used by internal methods, which themselves don't return an HRESULT, so I don't think it's worth changing #WontFix. It's also irrelevant to what this test is validating #WontFix. The font doesn't have properties beyond the name afaik, and having the name is enough to validate we've gotten the font #WontFix. This is also irrelevant to what this test is validating.  #WontFix. ?. should the copyright banner be updated?. I don't think doing an early return here will gain us any readability #WontFix. This is testing that we are able to register fonts from files, not what size we get when we pass in 0 to CTFontCreateWithName.  We should definitely be testing CTFontCreateWithName somewhere, but that is certainly neither this test nor part of this PR.  . whoops good catch. Yea this was from the old implementation. Not that I'm aware, and this gives similar performance to previous implementation and reference platform. CFStringGetLength will return 0 when given nullptr #ByDesign. Since it's not used anywhere else I'd like to keep it function local, and as @DHowett-MSFT and @rajsesh-msft learned me we run into fun DLL/Com loading stuff if it's file static. Why is it problematic to have UIKit stuff in the CTTests? I'd prefer to not have a third duplication of the fonts lying around if it's not a major issue. #Closed. It's used in CTFontManager to (un)register graphics fonts. That's the plan once CGDataProvider is fixed, did this to keep from having to copy the data each time this would be used.. This will all be changed for #1450 #WontFix. This is created with a list of font files, so should one fail we need to return that it failed but still un(register) whatever fonts were valid. It made more sense to use S_FALSE than E_* that might mean a more fatal failure than what we're experiencing . It should return false, this was an error. super duper nit: make test name a statement rather than a question #ByDesign. nit: no commented out code  #Pending. Make this _CGRectCenteredInBounds if this is just used for absolute center #WontFix. put a copy of the top on the stack?. nit: should return whatever error PopGState returns rather than always E_BOUNDS. why +1?. nit: same as above. move then pop makes me uncomfortable.  Maybe legal, but strange. super nit: return PopGState(); #WontFix. nit: why some defined in class and others outside?. nit: unneeded var. This is owned by the FontCollectionLoader which creates this FontFileEnumerator.  FileEnumerator will never exist without the CollectionLoader. #Resolved. should this be thread-safe? #Resolved. super nit: move this above and return if !traits #Resolved. nit: == S_OK? #ByDesign. Our FontCollectionLoader is a static singleton, so it will always exist #Resolved. nit: for in loop #Resolved. This seems unrelated to AutoLayout issues, and should be tested really thoroughly to make sure we don't accidentally regress anywhere with app launching #Pending. Documentation for the interface recommends they be singletons, and it seems silly to move it to a shared_ptr when it shouldn't be owning it at all.  Maybe a comment would be helpful but I think wrapping it in a shared_ptr would suggest the opposite of what we want.\n\nIn reply to: 90943752 . nit: don't need shouty type here #ByDesign. nit: can create with values, = {_D2DPoint...} #Resolved. nit: same as above #Resolved. nit: add comments on why these are empty #Resolved. It's registered but this only uses the given font collection, or system font collection if nullptr. The vcxproj or this reference? #ByDesign. nit: maybe a dispatch once here rather than flag and a mutex #ByDesign. nit: Would prefer to keep this static to only pull once rather than getting every time this is called #WontFix. remove the throw above #Resolved. IDWriteFontFace3 inherits from IDWriteFontFace2, so just use that one #Resolved. No commented out code #Resolved. is this making enough of an impact to convert to dictionary-lookup? #WontFix. nit: should make these inline too :) #Resolved. still not CopyTo? #ByDesign. same as above #ByDesign. Will leave the CG* tests for @DHowett-MSFT to clean up :D. I believe @DHowett-MSFT said underscoreless is standard?. Apparently required for SmartTypes #ByDesign\n\nIn reply to: 91159703 . I wish I knew how to quit you #ByDesign. Why does sizeof(CGSize) matter?. I'll do this in #1303. shouldn't have to right, since CopyTo will return an error. wrt this file this is normal usage. . see: PR comment. see: PR comment. it made sense at the time. #Closed. whoops these should all be disabled, good catch. can't have an array with non-const size? how do you mean?. Pointer arithmetic should be akin to array indexing, so (advances + 2) == &(advances[2]). It does not seem to like it when advances is nullptr, I'll add a comment #ByDesign. nit: ID2D1 #Resolved. nit: just create a CGPoint and give &cgPoint to element #Resolved. ++i, ++(individualGlyphRun.glyphIndices)\nSince the runs share everything but the glyph, I just increment the pointer in each loop iteration rather than recreate the struct. after further inspection, it seems I am a stupid and it should clobber tx/ty. Both, but mostly to explain why we apply the text transform to ctm and pretend text matrix is identity. I didn't see anything about it in the docs but it was commented rather matter-of-factly in the code so \u00af\\_(\u30c4)_/\u00af. super nit: make rect second param, bool third #Resolved. blow up when width, height = 0? #Resolved. move a comptr? I love it! #Resolved. nit: move these around so they're closer to where they're used. #WontFix. nit: unused? #Pending. nit: m_width and m_height are UINT, but WICRect expects INT :( #Closed. super nit: make operator== for WICRect #Closed. can width == 0? can sourceDataStride < fullRect.Width? #Closed. nit: why off_t vs ptrdiff_t, size_t? #Closed. nit: if you really wanted, you could make ClippingTypeAlpha := 4, Mask := 1 #WontFix. assigning to a const char? #ByDesign. why not give this one a default value? #Pending. nit: rather than binding affine transform via capture, make it an additional param, should save you from having to generate a std::function #WontFix. would it be worth to get a little funky with affine transforms here?  #WontFix. nope, DWrite will try to draw from right to left from the origin, rather than inverting each glyph as intended :( #ByDesign. Didn't mean to remove that, good catch #Closed. The position is not affected by the text transform. This is or'd so it being false wouldn't short out of it, and the default case is on top, since that's where we're drawing the entire run at once. super nit: add line after } #WontFix. super nit: just return this #WontFix. nit: print name of what type it actually is for easier debugging #WontFix. Isn't this in your other PR? #Closed. nit: using the one float like a cast and other like a function makes this mighty uncomfortable to parse, pick one pls  #Resolved. make these const? #Resolved. nit: give this a more immediately understandable name.   #WontFix. nit: flip order of expected and actual ;P #Resolved. Migrating comments from other PR-\nnit: m_width and m_height are UINT, but WICRect expects INT :(\n #ByDesign. super nit: make operator== for WICRect\n #Closed. can width == 0? can sourceDataStride < fullRect.Width? #Closed. nit: why off_t vs ptrdiff_t, size_t?\n #Closed. nit: give 'em a != operator #Resolved. super nit: no implicit int please #WontFix. super nit: same as above #WontFix. i += 4 would be clearer than multiplying below #WontFix. super magic number #WontFix. nit: keep consistent with macro pattern #Resolved. should fix this class up while you're doing this.  No DWORD, CppBase, etc. #WontFix. don't much like returning raw float here.  I think this entire class could use some updating #ByDesign. Need to be released #Resolved. That doesn't mean you need an arbitrary value hardcoded in.  FLT_MIN?  #ByDesign. If you're implementing CGGradient in this PR, why not just fix it now? #WontFix. I thought it made it easier to see what was going wrong with drawing.  Gonna leave in case someone (probably me) breaks affine transforms in the future. nit: throw some parens up in here for readability. nit: these can be one line #Resolved. nit: should this be noisy or a simple no-op? #ByDesign. check that width, height != 0 #Resolved. does this zero out the memory?  I faintly recall running into an issue because GetString wasn't copying over the null terminator. #ByDesign. If you're just using the WOCCatalog stuff to test this, may want to mix up the text by tossing in some newlines to make sure those are handled well.  Everything here looks like it will work better, but I'm not sure if there are any edge cases snuck in. #Closed. nit: 2 << (testInfo.bpp >> 3), since we're not avoiding bitwise here. nit: unused?. Nope, reference platform uses the data directly, no copy taken. also need to check rectToDrawInto.size.height #ByDesign. nit: 2.0f * m. I can't remember int/float coercion but better safe than sorry #Resolved. make a task for this? #Resolved. nit: comment above rather than next to #WontFix. comment says this returns void, why check if failed?  should add static test to make sure this is correct type #Resolved. pattern? #Resolved. leaking the image or adding extra retain #Resolved. nit: CGPointZero #Resolved. nit: just capture context and components #WontFix. same lambda as above, make a helper? #ByDesign. pattern #Resolved. nit: CGPointZero #Resolved. should this be infinite rather than zero? #ByDesign. nit: why FAIL_FAST here, return in other helpers? #ByDesign. need to release? #Resolved. need to release #Resolved. need to be released? #Resolved. I don't think there are significant gains in readability by splitting this into two lines.  If anything I find it more readable in one line.\n\nIn reply to: 93115225 . I think ternary statements are plenty reasonable, and shouldn't pose a challenge for any merges\n\nIn reply to: 93115443 . it's also super unrelated to this pr\n\nIn reply to: 93115537 . needs to be released? #Resolved. 71-77 is almost the same for all of these.  Break into helper function #WontFix. this seems pretty hefty for an inline #Resolved. const? move comment explaining this to here #Resolved. nit: just emplace_back{colorf..., location} #WontFix. 1.0 -  #Resolved. should be sc_ #WontFix. nit: update copyright #Resolved. nit: use unique_cf for tests\nc'mon I've gotten several of this exact nit from you :P #WontFix. nearly identical above, make into helper function #WontFix. nit: use std::extent to keep track of array length rather than hardcoding for all of these #WontFix. pass this in as an array rather than a pointer, and you can just use std::extent on it rather than passing in count #Resolved. that works too XD #ByDesign. use extent instead of _countof which is MS only and shouldn't work on reference platform. #Resolved. These are begging to be parameterized #WontFix. Should make these paremeterized too, combinations of locations/components, different points, changes in alpha, etc.   #WontFix. yup #Closed. Drawing with nil font just uses default value.  Actually didn't mean to get rid of that in this change, but I think it makes sense to do.  @ms-jihua any thoughts?   #Closed. It's in the documentation\nsee https://msdn.microsoft.com/en-us/library/windows/desktop/dd316763(v=vs.85).aspx\n\" If maxLineCount is not large enough E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER), is returned and *actualLineCount is set to the number of lines needed. \"\n\nIn reply to: 93508458 . wut? #Closed. Just visually using test apps, we don't have any unit/drawing tests for UI kit. nit: nil #ByDesign. Should make a task w/ list of all caveats on this. don't want to be locked to notify_all? #Resolved. these are implemented? #WontFix. this is amazing #Closed. nit: use std::extent #Resolved. not used? #Resolved. super nit: size is a message call, save size locally. nit: .empty(). worth making a operator(CGSize, CGFloat) for this?. nit: scale, -scale. keep context in a unique_cf? nothing should fail terribly in here but would keep consistent with usage. nit: same as above. nit: just return here. please flip this \ud83d\ude22 . Yea, I thought we would be fine skipping the first one but I forgot about kerning, my b. Feels a bit goofy since that's the expected behavior for just about everything, and throwing for some reason would illuminate the failure just the same #WontFix. nit: can use add_pointer_t here?. any reason for having this separate?. would not defining this for TOtherLifetime and instead just having TLifetimeTraits version accomplish this?. https://media.giphy.com/media/e03UozELSlS3m/giphy.gif. do these need to check (this != other)?. +1 #Closed. Should we have a mutex for updating this? #Resolved. The issue number is correct. Adding to the autorelease pool was causing the failures I made #1709 for.  . It's already been fixed on CGD2D, If it was a complex change I didn't want to have it done twice.. Why not just update UIApplicationActivationTest? #ByDesign. nit: use updated copyright for these new files #Resolved. nit: have these return bool for success/failure to pass to callee #Resolved. or the default font size value. nit: oneline these? (context->CurrentGState().textDrawingMode = mode). nit: GetBackingSink #Pending. are these necessary? In CoreText we just did void STDMETHODCALLTYPE fun()... type stuff #ByDesign. comments on why this is empty #Pending. same as above #Pending. does this need to be threadsafe?. nit: m_geometrySink type names for variables. #Pending. why do actual close in Close? #Closed. nit: as much as I hate them, this would make a nice macro #WontFix. It is necessary.  If we don't do it then extra-kerning won't be set for the first attribute range.  . As I understand it Canceling is \"Cancelled\". remove this file #Closed. (float) / (integral) => float #WontFix. nit: not needed #Resolved. It would be clearer to just autorelease this rather than returning a StrongId.  It seems I thought [new] already did autorelease, my bad.. nit: in that case ptrdiff_t? It's signed but is clearer about what it's used for #WontFix. nit: just do a switch #Resolved. nit: don't use the objc class naming convention, just use plain type, points. etc.  Or maybe c++ class style m_type, ... #Resolved. nit: just emplace the construction #Resolved. thepath leaks as well #Resolved. will the reference platform call the release callback if data == nullptr?. nit: I know this one has been around a bit longer and CG has been using it, but I like the m* naming convention for C++ structs/classes since it makes it more obvious what's C++ and what's objc.  . nit: make these private? nobody should be allowed to muck around with 'em. I'm not sure how difficult it would be to add the metadata, as that would make this much cleaner.  @DHowett-MSFT ?. nit: also default here #Resolved. limbo? #Closed. nit: can make this range-based for? #Resolved. I feel like I'm looking at node :(. Assuming we don't actually run the test if TEST_CLASS_SETUP fails, should we use the non-short circuiting &=?   #WontFix. takes me back \ud83d\ude3f  #Closed. \ud83d\udc4d . nit: pls the spaces. nit: same as above. No I don't think so, just oddly reminiscent of callbackapalooza. 10.11. nit: reanme to ptr and compare against nullptr #Resolved. nit: rename input to condition to be consistent with other macros #Resolved. nit: same here #Resolved. nit: rename to hr #Resolved. Unknown, didn't notice that changed when I added the project.  Good catch. Yes, thank you \ud83d\ude2a . The only sort of timing utility I see in the gtest code is elapsed_time in TestResult.  IIRC that won't work once @bbowman's changes are merged in with #1849.  If that did work, we would still run into the problem of trying to only time part of the code run.  Right now this only measures the time it takes to run the code in the Run method, but from what I can see gtest measures the entire construction of the test as well so we wouldn't be able to ignore setup/teardown time.  Is there some other timing utility in gtest that I'm just not seeing/misunderstanding?. nit: braces, or if you're so inclined, use one of our fancy macros. They can be double linked I thought, but given how we're using it might make more sense to just use a std::vector.  FWIU it's generally better to take a hit every once in a while for resizing if we need to than having to jump around when iterating.. nit: use std::accumulate. nit: why not return wstring rather than taking a mutable reference?. same as above. also don't like this expression it = something(--it), hard to figure out exactly what's going on. put ++it in here rather than in last else?. should add more variety of characters. test this is the value we expect it to be. nit: make this a for loop. nit: same as above. nit: still want this \ud83e\udd80 . Oh I misunderstood what you were getting at.  I'm not sure that they could be abstracted out w/o running into diamond problem.  I changed FrameDrawGroup to use 5, which is giving a pretty consistently low stddev.  I want to keep the default value low, but if others think it's worth bumping up I'll change it.. Visual studio needs to chill \ud83c\udf66 . duration doesn't have sqrt defined so I needed to convert out to do the calucations for stdDev, which had me saving double rather than Microseconds for my values which I didn't do because I didn't want to obscure that they represent microseconds. ?. what's the advantage of doing this?. IIRC you can't capture a static variable b/c of lifetime stuff. That is done in the constructor/destructor of test, this is for things that need to be done once before/after each test run. :O no it is not holy moley. nit: undo the formatting changes on this to not muddy history. @yiyang-msft and I reproduced this on the reference platform, but it's likely that this only applies to a case where we are only drawing one line but unable to fit it.  I'm going to be doing more testing to see where height is respected and where it is not, and if this also applies to CTFramesetterSuggestFrameSizeWithConstraints. #Resolved. nit: should have WINOBJC: here. With this change the introduction label in Islandwood house is being scaled properly\n\nIn reply to: 99943020 . these should 100% be parameterized. These two tests are the same?. It would be good to make these parameterized over different alpha values/interpolation qualities. Looks like reference platform just returns CGSizeZero, will update to reflect that. \ud83d\udc4d TestFullName is the value this needs, you're right. thank you. Just used what was in CTStringAttributes.mm, is one preferred over the other? #Closed. I'm not so sure.  This is only a problem on our platform, but idk if we'd just want to draw the rest of a line if part is so small that it would be causing a crash.. the macro breaks with all of this stuff in it. Right, they could be very different sizes.. the only time we were passing nullptr was the single glyph case, where the advance wasn't being used. Even if we don't transform by glyph if we have > 1 runs we will need to do this to clip/stroke at once to prevent the shadowing/alpha issues.  I suppose we could make a fast path for \"simple text transform w/ just fill\" as that's going to be the most common scenario but I think that'd lead to a good amount of code duplication.. ! good catch. It was before but I ended up capturing a lot so changed it to let the compiler figure it out.  I also don't like [&] but it seems clearer to me here than a whole line of variables being captured. This isn't the normal case, just the CGShowText methods.  How would we get away with not copying?. I don't know that it would make sense to define these in CG and export them for CT (especially since we're not sharing values w/ UIKit consts).  Not stubborn on this so if others think this is worth changing I'll fix it.\nUPDATE: Fixed it \ud83d\ude04  #Closed. Ideally, but I'm not sure there is one that could be created in a smaller scope than it's needed in, especially since the DWRITE_GLYPH_RUN doesn't have a RAII container for the glyphOffset. Our current implementation has it modifying the global state. I'm not sure there are major gains by using a unique_ptr rather than vector in this instance, just thought it would be clearer since we don't need to iterate over it or use any other vector functionality. If it's not just fill then we have to do the transformations for clip/stroke,. It can't be a shared_ptr because it points to the DWRITE_GLYPH_RUN in the CTRun, and I don't think moving it up in scope to a vector makes sense because then we'd be doing a whole bunch more copying in the fast case.. I would need to copy the input DWRITE_GLYPH_RUNS into the new vector. that'd have the same problem as using make_shared, we'd be deleting the _CTRun's DWRITE_GLYPH_RUN when it gets destroyed. But we wouldn't be able to take a ptr into the vector since we're adding glyph runs and it could be invalidated.  We'd need a set size vector, but to do that we'd need to loop through the GlyphRunDatas and copy all that aren't too small first, then have an extra vector for possible positions and DWRITE_GLYPH_RUNS, and I think that complicates the code more than having the raw pointers to glyphOffsets and runs. Possibly, but adds unneeded memory use on the fast path, & we're not certain of the size we'll need. It would probably be cleaner to just use a bool for these values and some sort of flag that gets set whenever one of these values is changed. I'm not sure that this should be a drawing test, seems more like a regular unit test.. nit: use an enum for these values. nit: make the out param the last one #WontFix. nit: update the comment w/ new params #Resolved. is it possible that we'll have other pattern variables to address in the future? Even if not, I think it would make more sense for the function to take (CGContextRef, CGPatternRef) rather than a bool flag, especially since the lambdas are almost identical already. #WontFix. nit: why all of the 16 / 2? make this a constant? #WontFix. nit: this is not one of those cases where multiple variables on the same line makes sense \ud83c\udf2e  #Resolved. super duper nit: should use CGFloat rather than int for CGSize width, height values #Pending. +1 #ByDesign. nit: convert these and all raw CG*Refs to Auto/StrongCF #WontFix. I think this is a case where the default name is better than a custom one.  Might start running into path length issues too... #ByDesign. why disabled? #Resolved. also, why snprintf when this is already using CFStringCreateWithFormat? #Resolved. On more thought, the lambda is really only saving us from having to check if it's stroke vs fill.  For this case I think it'd be better to pass in a flag (enum or just bool since this'll be the only difference) and inline the lambda stuff here. #ByDesign. I wrote it to mean \"We only support identity matrix,\" though it could also be interpreted as \"CTRun only supports identity matrix.\"  I suppose I should use complete sentences.. Shouldn't this remain Stub? . Tests passed on ARM. nit: Add a comment in the code w/ todo#. are there cases where we don't have alpha to add? Maybe add those at end. If this is supposed to be private put this in a private header. We don't currently support TtB scripts.  . I tried that some other place but it _really didn't like it, can't remember why though.  . nit: shouldn't use auto for this since type isn't specified on right/unrepresentable  #Resolved. This array isn't using any memory management callbacks so it shouldn't be leaking anything, but it's worth checking.\nUpdate: no leaks!. This is only being used with buffers of size LOCALE_NAME_MAX_LENGTH, so there will only be one instance, but I didn't think it made sense to do any calculation or pass in a parameter when the size is known at compile-time.  Would countof work w/ function arg?. I was going off of the decision w/ CTFontCopyTable where we're still marking it Interoperable despite not supporting kCTFontTableOptionExcludeSynthetic . I can see that case where someone would just use 'BASE' or something.  The values are public and the conversion is cheap so I think it's worth it to just do the conversion \"Just in case\". nit: std::max #Resolved. This would return a weird value for invalid rects. What does the reference platform return for these cases? #Resolved. nit: should we log a warning here? #Resolved. This branch changed the location of the scripts without updating the scripts, needed to fix this ro get my pre-commit to run. Testing the packaging branch basically. \u00af\\(\u30c4)_/\u00af. I think that using bitshifts as multiply/divide by powers of two is common enough, and should be a simple enough piece to parse in the future.. nit: should make a _CGImageCreateImageFromDataProvider rather than copying this around three times. Also saves from having to pull in CGDataProviderInternal here. #Resolved. Not super related to this, but _CGImageGetImageFromData returns a +1 rn which breaks the CF naming convention, so that needs to be changed at some point #WontFix. ! #Closed. is there any way that we can add a unit test so this won't regress?. UniChar is from CF?. nit, just pass into method directly rather than const void -> void -> unsigned char -> void #WontFix. nit: position is a very silly name for a rect \ud83d\ude1d . is saving/popping g-state relatively free?  we should be able to get away with just reverting the CTM if not.. nit: just _firstError, no need to put type in name. in PushBeginDraw we'll not increment _beginEndDrawDepth if FAILED, but here we always decrement, so we may wrap around into the middle of nowhere. Should we even attempt to draw here if the context failed at some previous point? #Resolved. nit: WinObjC? . Would this make more sense as a global setting vs. per context?  #WontFix. nit: just make the error here, rather than making StrongCF and detaching #Resolved. nit: squish this into one transformation like in the other places this is done. nit: this is a for loop with a fake nose and a handlebar mustache. also, no magic number. Maybe stuff it in the context (if we keep the enabled flag in there) or a global that can be set by user #Resolved. nit: I know you didn't modify this but please get rid of the if here. nit: use the constant here for this case, and have a default \"something went terribly wrong\" case. #ByDesign. Probably, but that's a task in and of itself.  Properly testing the whole of NSRunLoop will be nontrivial \ud83d\ude05 though I could add a couple other similar unit tests to this one in this PR if that's what we think would be best.. documentation suggests they are equivalent?\nEdit: documentation can lie. aye but it could also be \"something went terribly horribly wrong\" where we don't even have a name for it \ud83d\ude1c  #ByDesign. nit: nice case for a ternary. or s_kCA... or sc_CA... . or just inline the value since it's only used in one place \ud83d\ude09 . How does (copy) work w/ overriding default getter/setter?. We only need to test that the fill/stroke colors aren't changed when nullptr is passed in correct? Is there a way to get the color from the context to check?. nit: for (unsigned int tries = 0; tries < _kCA...; ++tries). nit: do we need a break if we're FAIL_FAST?. super nit: these can be \"auto provider = \". super nit: a c-style cast from const void -> char should suffice. On second look, we'd be better off here creating a CFURL from the filename and using CGDataProviderCreateWithURL, because that's what CGDataProviderCreateWithFilename goes through, and we get the added bonus of not creating an extra CFStringRef as well as cutting down on the length of this function quite a bit.. yes but I don't believe vector has a detach(), so I went for unique_ptr.  Does unique_iw give any advantage over unique_ptr? . This case should never happen because you're setting it to 0 above if < .00001. super nit: pull this out into some constant, c_zeroAngleThreshold or something. nit: this would be more clear as (originalAngle != 0) since you're taking the abs. nit: rawDifference is already abs() from above. nit: you're calculating radius * sin, cos twice. It's sort of a \"out param pointer\" with a little bit less room for error, and though it's not ideal I'm not sure there's a better way to pass around a dynamic list of IDWriteFonts. whoops, nice catch!. We can't because it could be a CFDictionaryRef for Traits. I was originally doing it that way but it ends up being a pretty big web of ifs and I thought the runtime tradeoff of having to check all fonts was better than a tangled mess of code to handle all cases for names more efficiently. that would make a whole lot more sense yup. I've seen other cases where people have used CG...* vs CG...Ref so I thought we should keep it equivalent to the reference platform, which interestingly breaks pattern for this https://developer.apple.com/reference/coregraphics/cgdataconsumerref?language=objc. It's freed in the callback. Documentation is light as to what exactly it should be doing other than \"When Core Graphics is ready to send data to the consumer, your function is called. It should copy the specified number of bytes from buffer into some resource under your control\u2014for example, a file.\" I took this to mean writing to the resource is the expected behavior for URL.  https://developer.apple.com/reference/coregraphics/cgdataconsumerputbytescallback?language=objc\nUpdate: talked offline, will use CFWriteStream to get appending behavior. I can strip them down until they're only loops w/ logic inside, but unfortunately the HRESULT returns aren't easily composable so I wouldn't be able to share any more without doing some crazy higher-order stuff that (though it would be pretty neat imo) almost certainly isn't worth it.. I think we'd be safe with attribute keys, but I'm not so sure about font names/families, as we might run into problems with \"Arial\" and \"ArialJK\" or some other user-defined font nonsense.  Maybe style and display names would be safe? I'm not sure, what do you think?. It's not able to be written to by end-users, only internally.  It seems to be a generic interface for a data sink, where CG wants to write some image data or something out to the user, where they can specify what URL or CFData or wherever the data will go.  I added this as the simplest \"Write to Consumer\" method, which AFAICT will only really be used by CGPDFContext and CGImageDestination if at all. \ud83d\ude2e well by golly they are. \ud83d\ude2e mm yea once again that makes a whole lot of sense, I'll do that.. nit: static_cast. nit: can just be a lambda since it's only used once. suuuuper nit: don't need to check that count != 0 since the for loop won't run.. super nit: move down to where is being used. nit: add some newlines \ud83d\ude04 . No, because font if we've gone into fontName and it failed but it's not required we still want to go into the family branch.. nit: use CGRectMake for consistency, or {{,},{,}} since CGRect isn't flat #Resolved. nit: use EXPECT_EQ so it will print rect values on failure #Resolved. use testing::Combine? #WontFix. import CppUtils.h #Resolved. nit: these as well #Resolved. nit: revert this file #Resolved. super nit: use ::testing::tuple #Resolved. I was looking for a shared internal place for the NS classes where KVO is illegal.  What's the reasonable place to stick this?. nit: no shouty #Resolved. Should add test with multiple _CGContextPushBeginDraw calls (should force through them all) and multiple Flush calls in a row (only first one should modify data) #Resolved. nit: COMPARE_RECTS_WITH_SLACK. nit: would prefer explicit _CRenderOpCommandListBase::Stage. nit: magic number. Why 16?. why fail fast here when this returns HRESULT?. \ud83d\udc4d . It's static, and used in a bunch of tests here.  Just change this to local in each test.. Whenever NSData is fixed yes this would work for free, but this still isn't interoperable, and marking it as so would be a lie \u2639\ufe0f . Though the contract of this is to return the HRESULT, not FAIL.  We should FAIL in here if we're not going to balance the states.  A consumer who handles a failed flush may not FAIL and be stuck with a broken Context #WontFix. for this should check that the data doesn't change after each of the redundant flushes #WontFix. nit: 0x00, 00 would be octal, and though they're equivalent it's nice to be consistent #Resolved. same here #WontFix. could get around the flag here by pulling out the innards into some private _PopEndDraw which actually calls the end draw, which would be called by this (if beginEndDrawDepth == 1) and directly from Flush (since it already does the _beginEndDrawDepth check). #WontFix. Reference platform throws an NSRangeException for invalid ranges, should I opt for consistency here?. should I make that part of these changes? I'm wary of changing too much in NSArray for possibly unnecessary optimization. Reference platform will blow up on invalid ranges, even if a valid element is found, and this gives us that.. .TMP \ud83d\ude06  #Resolved. I really don't think this is the way to fix this.  This change set should be included in the separation of CGColor from UIColor, rather than piling on additional short term fixes in UIColor which will add more things to remove. #ByDesign. Revert all of these weird formatting changes #Pending. Just set this directly rather than calling setter in the constructor #Resolved. nit: no need for empty destructor #Resolved. Is this copying the vector each time? Probably want a const reference for this. #Resolved. pleeeeease no \u2639\ufe0f just use an else here #ByDesign. I don't think this is what you want.  If there are already locations in _stopLocations this will just add more rather than replacing them.  Probably want to resize _stopLocations and then just memcpy locations into _stopLocations.data() #Resolved. this seems like it should be a vector of vectors of components, rather than a \"flattened\" one.  I suppose this is a minor optimization but it makes is less clear what's going on. #ByDesign. If count == 1 this will be dividing by 0, I don't think this is correct. #Resolved. nit: const, possibly even static const for the file #Resolved. nit: static_cast #WontFix. unused? #Resolved. nit: unnecessary casts? #ByDesign. these should be constructors #Resolved. just use __CGGradient::CreateInstance(nullptr, ...) w/ constructors #Resolved. StopLocations #Resolved. nit: use Auto/StrongCF for these #Resolved. Actually since this is only used in the (what should be constructor) should just put it in there directly, more enforcing the immutability #Resolved. Updated to reflect exception generated on reference platform. nit: this is not resolved #WontFix. It only validates the first 4 bytes, it doesn't validate that after every flush call the data doesn't change. #ByDesign. Which is why we shouldn't let it get out of balance and maintain a functional context. #ByDesign. nit: StrongCF #ByDesign. nit: these could return a constant instance rather than making a new one each time. #Resolved. Unneeded setters? #ByDesign. Do we need this file at all? _CGColorSpaceCreate doesn't seem to be implemented #ByDesign. Considered it but this was the path of least change, didn't think it made a substantial difference in readability or perf. https://developer.apple.com/reference/foundation/nsarray/1416257-descriptionwithlocale\nUPDATE: this is possibly the most misleading documentation I have read \ud83d\udc4e . This should be expected behavior, our test for NSArray description depth still passes w/ this change. just move the const static colorspace in here, so we can use \"magic static\" to initialize on first use w/o having to check every time #Resolved. return CGColorSpaceCreateDeviceRGB() here so we get shared const value rather than creating new #Resolved. They still compile \ud83d\ude01 . This would put the lowest priority on top of the pqueue. nit: prefer !(A || B) to (!A && !B). nit: revert this file . Just create result before this and return that if count == 0  #Resolved. nit: static_cast #ByDesign. IKR. Unfortunately, in the concurrent case we'd be doing two levels of dispatch_group_async which seems sillier than very similar but not identical code. yup :falkland_islands: . Probably a good idea. It should, interesting that it still works \ud83d\ude28 . nit: const #Resolved. nit: where is fabsf from? could just use std::abs #ByDesign. nit: not so sure this should be declaring them equal, maybe __CloseEnough or something like that but... more reasonable.  Also they're not references, why const?  And CGFloat? #Resolved. super duper super nit: no implied int \ud83d\ude1c  #Resolved. would rather just see this in the constructor rather than a separate method since it's only being used once #ByDesign. :%s/__super\\s::/__super::/g \ud83d\ude1c  #Pending. Can't call directly from UIKit since the _DWrite version needs the _dwriteFontFace, so rename it is \ud83d\udd39 . Nope, it seems like macOS never got around to implementing it... . Other encodeWithEncoder implementations had no serialization done for empty objects and then when calling initWithEncoder returning the empty object when there's no data to create from, and I'd made the (possibly unsound) assumption that NSIndexPath followed suit.  Will check on reference platform and update should it be incorrect.\nUPDATE: Reference platform does not treat empty data as an empty NSIndexPath. Expected type for GetFiles #ByDesign. GetFontPropertiesFromUppercaseFontName expects a unique_cf and changing that entire path is beyond the scope of this PR. I'm not sure since this is using AsyncHttpOperation and Microsoft::WRL::Callback directly.  Any outside consumer should be either using objc methods to spawn threads or autoreleasepooling directly, so the only place I think this should be an issue is our code when we're using non-objc async stuffs. This is for DWrite so no \ud83d\ude1b . Converted to one CreateWithFormat as per @rajsesh-msft's suggestion. This is consistent w/ the file, and is a case where a ternary is just as if not more clear than a macro IMO. Depends on where it's clearer, here I think it makes sense to use an if. why do you think that?. According to documentation initWithIndexes:length: is also the designated initializer \ud83e\udd23 (https://developer.apple.com/reference/foundation/nsindexpath/1416906-initwithindexes?language=objc) The previous implementation used initWithIndexes:length: as default so I'm going to leave it as is . Ended up testing indexPathWithIndex other places so leaving this. I was told this implementation was written this way because of observed values, but the reference platform seems to have updated the hash implementation.  I'll change this to something more suitable as well.  It won't be equivalent to reference platform, but I don't think it needs to be. \ud83d\ude2e good catch. should be s_, but can't be const because encode/decode expect non-const.  I'm sure there's some better way than this to check that $File is empty but they didn't seem to work, would appreciate input from powershell gurus. nit: rename self to something that's not a keyword.. \ud83d\ude06 . keyPathsForValuesAffectingValueForKey takes a Class but this is an NSObject?. super nit: UniChar #Pending. nit: do this in the constructor so it's only made once vs once per run.. super nit: save in a variable rather than calculating twice #WontFix. Though that has the added cost of making an NSIndexSet and is only a convenience wrapper. There's also no issue leaving it as alloc/init. I've seen differing archiveKeys, went with this one since I was borrowing from IndexSet. This is what I want, tested on the reference platform. The reference platform hasn't yet implemented this so I cannot say...\nSo long as row >= 0 && section >= 0 NSUInteger can hold it. Ah, spent too much time with CF, got used to Get = 0. We do not, it is just a pointer to an object owned by the pbxDoc.  Ideally it would be a shared_ptr but that's a lot more fixing than I want to do for this change set.. Is there a reason we _wouldn't want to make these easily available?  . The compiler should elide this copy #ByDesign. I don't think we should be testing containsString's ability to translate #ByDesign. should this be return self = ? I'm not terribly familiar with [self release] in an init method but this feels... wrong #Resolved. \u00b1 using StrongId for these, don't feel too strongly since we get free synthesize #ByDesign. should this be declared in the interface? #ByDesign. name is nil? #Resolved. nit: prefer StrongId and just cast for the loop #WontFix. objectsPassingTest seems to fit the bill better #ByDesign. nit: StrongId? #ByDesign. nit: this could be rolled into a factory method #ByDesign. should this be autoreleased? #Resolved. Idk these are pretty great imo.  gives the file some much needed texture #Pending. nit: would prefer an old fashioned macro to disable/enable warnings for this file #ByDesign. nit: StrongId? #WontFix. \ud83d\udc4d  #Closed. https://i.imgur.com/X4PnV.gif #Closed. super nit: short comment about what this number represents/why testing #Resolved. oh here it is. Copy this lil fella above #Resolved. Unfortunately this can't be implemented by wrapping NSArray's descriptionWithLocale:indent: in braces because levels will cause spaces to appear between the first brace \"{\" and the array's parenthesis \"(\" . Would it be reasonable then to leave this method untested?  . I'm unsure, logic was heavily borrowed from NSArray.  Given ordering & concurrency aren't determinable, I imagine it must be undefined. Is there any downside to it? I rather like it \ud83d\ude3a . leave this #ByDesign. I don't think it's necessary to churn these files to add early returns #ByDesign. this should remain const #Resolved. nit: THROW_NS_IF_NULL. \ud83d\udc4d . nit: nullptr, unless this should be a ptrdiff_t, in which case ptrdiff_t . nit: exceptionInfo. nit: no auto here. comment on what this does and why it needs so many casts \ud83d\udee9 . woc::MakeStrongCF it \ud83d\ude38  #ByDesign. No this is making the elements of the set, which are sets and arrays, perform enumerateObjectsUsingBlock with the block as the withObject object.  . It's not testing the undefined behavior since it's inserting everything into a set, just that it enumerates over the entire set.. The reference platform will stop enumerating with NSEnumerationConcurrent when stop is set to YES but because of the asynchronicity we can't be sure if it stops any others that are currently running (if there's even a way to do that).  Given that, I think we should go with the implementation that's consistent w/ NSArray. There's no real way to keep NSArray's description interoperable while supporting this, and I don't think the gains of cutting down code duplication would be worth tying these together.  I'm flexible on this if we think it's the right move.. nit: use AutoCF vs. CFAutorelease #ByDesign. nit: just use !data for the operator bool(). nit: use NSRunLoopMode. How does autorelease work within an async block?  If that block is executed within an autoreleasepool, will these be released then?. nit: add issue number here. should this just be > 1?. nit: emplace_back, might not need the std::make_pair then but I'm not certain. nit: same as above. nit: shouldn't modify a collection while iterating over it, even if it's breaking out of it at the end.  Would prefer std::find() with an erase if != end(). nit: update this to be for in loop. won't these overretain?. I disagree \ud83d\ude1b . \u2b55\ufe0f that they are. \ud83d\ude31 . nit: empty space after curly brace.. Since this is internal, should we fail if we get an invalid type?. super duper ultra nit: no implied int. how is this change being tested? #Resolved. NSSets nested within other containers will not return expected descriptions, it will contain escaped escape sequences (like literal \\n). It's still an explanation of _why we're not doing ordering-dependent tests. I've no clue when/why this changed.  Will revert these files w/ no changes. Apparently Visual Studio went wild \ud83d\ude06 . nit: should these just be NSInvalidAbstractInvocationReturn() ? I know it's not a class cluster per se, but it's still \"Ya gotta override this\". should this be <= ? Ideally we'd never go below -1 but in case we ever should due to async nonsense we wouldn't want to leak. I'm working on this w/ a few other changes in NSDictionary so I'll clean these all up in a separate PR once I've got them working as expected w/ tests n everything. May want to do the fix for NSObject in a separate PR.  Doubt it would cause any regressions but it's foundational enough that it might and should be thoroughly tested.. nit: unsigned long long int vs. shouty. Whoops looks like this got changed cross branches. I'll revert this to mitigate merge conflicts w/ NSFileManager PR. did clang-format do this? #ByDesign. This will over-retain #Resolved. same as above #Resolved. nit: just use CTRunRef for these #ByDesign. nit: is this necessary? #ByDesign. does this need to use TakeOwnershipT? #Resolved. same as above #Resolved. nit: no need to cast, can use CTRunRef directly #Resolved. nit: just use CreateInstance and CTRunRef #ByDesign. nit: this should be part of the CTLineRef fix. #ByDesign. It's also a pointer so no need to take as reference #Resolved. Possibly but we don't need to force concurrency if it's undefined, so it's not worth testing IMO. No there was a URLByDeletingPathExtension that changed on the reference platform.  I only fixed the memory because I noticed it while removing that one.. Apparently my machine needs an update.  This could be a bug in the version I'm running, in which case I'll revert this.. It's returning neither the directory from which the test is being run nor the directory the executable is in. I think this is an unnecessary abstraction, especially since we're calling CreateInstance directly for the other CppBase structs #ByDesign. you sure you wouldn't prefer a nice clean ternary here? \ud83d\ude09 \nreturn run ? run->_attributes : nil; #ByDesign. \ud83d\udc4d . nit: add a comment about why 3.  Threw me through a loop. nit: can just do == 3 here since > 3 has been removed as an option. nit: why is this necessary?. pls to revert. abstractions don't necessarily make life easier, they just abstract :P\nIt's not a huge deal, just seems to exist for the sake of existing #ByDesign. or if you're gonna stick with CTRunCreate make it return a __CTRun so you don't need to do this cast #ByDesign. this will overretain #Resolved. nit: could this just be moved down into where it's declared? #ByDesign. Mmhmm, there were between 1-75 pixels where the differences were beyond our threshold.. What would this look like? I can't find any documentation on this.... Could this be replaced with the NSString->HSTRING in StringHelpers.h?  . It was something like 4-5 off.  I don't think we need to get that granular with our difference images.. The file was being generated and then deleted by a few tests.  It probably was accidentally left at some point, but it doesn't seem to be needed.. It's not necessary for this PR but something to consider in the future. nit: implicit int. _ut supra. No, we have some issues with temp folders in unit tests, but I should definitely be deleting this file \ud83d\udc0b . nit: this should be unneeded since you already compare _pattern, #Resolved. nit: would it be worth adding a CFEqual for CGColorSpace? #WontFix. nit: add an operator== for __CGColorQuad? #Resolved. nit: could just inline these in CGColorGetConstantColor and share a static colorspace #Resolved. nit: extraneous return #Resolved. nit: this case is handled by CFEqual #ByDesign. where is this being used outside of CGColor? #ByDesign. Whoops didn't mean to leave this, was just in there for my testing.   #Closed. The compiler was complaining about not being able to convert bool^(id,BOOL) to BOOL^(id,BOOL) so I don't think it's superfluous. #Closed. nit: could make these all just return [NSNull null]. nit: unneeded, following test will catch this (unless [NSNull null] returns NULL in which case we should have a test that verifies NE([NSNull null], NULL). why is this helper needed if it's only being used in -[doesNotRecognizeSelector] ?. This is only disabled on ARM, this is the ARM flag for tests, or it least is documented as such. For this one we could simply get rid of the Segoe test completely since we already test other fonts.\nThis might be the only place CTFontDrawGlyphs is validated, so that one shouldn't be removed, \nmaybe just make that one a different font and hope x86 and ARM don't diverge on that one.\nAs for drawing with WinObjC-Regular I don't believe we have implemented setting different fall-back fonts so we're at the mercy of the platform.\nI'm not sure if we should expect the fonts to converge at any point or if this is just a difference we're going to have to live with.  Thoughts @DHowett-MSFT @rajsesh-msft?. Is there a need for this to be changed?. nit: can ToString be safely removed?. nit: return _ == _ &&  #Resolved. nit: return _ == other. && ... #Resolved. \ud83d\udc4d  #ByDesign. It looks like there are a couple other CGColor functions which aren't in here like CGColorCreateCopyByMatchingToColorSpace #Closed. nit: could just inline these in CGColorGetConstantColor and share a static colorspace  #Resolved. nit: move this above CFStringGetBytes call. These clean-ups, though nice, seem unrelated to this PR.  Just revert these files?. nit: I'm not sure if our coding standards _handle gotos, but I think if this is the best option then we should make it follow the macro-style naming convention of ALL_CAPS so it really stands out.. super nit: no implicit int. should this be lowest()?. nit: they're everywhere \ud83d\ude3f . nit: they're everywhere \ud83d\ude3f . Also fixes this, which was not building on reference platform. It was confused about which abs for some reason. I wanted to guarantee that the path's origin would be properly affected by the transforms, and I don't think a basic test would give us any more coverage.. Attributed #Resolved. nit: follow naming convention - __CTLineGet... #Resolved. should this be made a more public helper function? #WontFix. CFIndex can be negative, so you need to make sure that the lengths are >= 0L #WontFix. nit: rename first param to attrString #Resolved. nit: add some comments about what's going on in this #Resolved. nit: 0L. #Resolved. Attributed #Resolved. Add some comments about what these methods do / why we need them in here #Resolved. nit: RETURN_RESULT_IF... #Resolved. nit: RETURN_RESULT_IF... #Resolved. nit: collapse into one RETURN_IF to match other methods #Resolved. These should all be getter methods #WontFix. Just move this into a CTLine::GetTypographicBounds(...) so it doesn't need to be mutated like this.  Since the values are computed lazily just make them mutable so it can stay const. #ByDesign. I'm not sure why this one is Get since it returns a +1, but can you change this to Create #Resolved. These are nice but again unrelated to the rest of these changes.  Pull these into a separate commit? #ByDesign. nit: false #Resolved. unsigned and long are just modifiers, not actual types, so saying unsigned long long makes the compiler infer the type which by default is int.  It's common to elide the int, but I'm not a fan \ud83d\udc0b . I mean in the paradigm this was done in CTLineGetGlyphCount was the getter, but now since we're updating this to use CppBase and touching everything we should use better style \ud83d\udee9  #ByDesign. It wouldn't be a logic change, just moving it into __CTLine like we do with other CppBase classes #ByDesign. This wouldn't require the rest of __CTLine be moved into a private struct (which would be better but would be some more churn).  We're already adding extra abstraction with _CTLineCreate so we might as well do this right \ud83d\ude38  #Resolved. Yup, this one is 100% my fault.  No clue why I named it that \ud83e\udd37\u200d\u2642\ufe0f  #ByDesign. The values being modified are for all intents and purposes constant for this method, they're just being lazily calculated, which is why they should be marked mutable.  I did something similar w/ CGDataProvider to keep things const even though the values were being lazily modified #Resolved. so then if these are marked mutable you'll be able to keep GetTypographicBounds() const \ud83d\ude04  #Resolved. <3 #Resolved. Should add the issue number here then, or at least add declaration so it gets tracked as STUB api #Resolved. It is very teeny. Whoops left this from when I arrogantly thought I could fit all of these changes in one PR \ud83d\ude08 . I wasn't able to get it called by value setters, and documentation seems to suggest it's something that consumers use manually, so I don't believe so. this is still unresolved #Resolved. This doesn't test for a null color #Resolved. nit: consistent on import/include #Resolved. ! this feels super unsafe! just construct a __CGColorQuad if you need this #ByDesign. QuartzCore shouldn't use UIColor #Resolved. These should be CGFloats #Resolved. does this need to be NSIAIR? #ByDesign. nit: could these be stuck in a StrongId so they get unloaded w/ the module... or something like that #Resolved. nit: use CGConstantColor directly #Resolved. nit: revert this file #WontFix. no but I do need to check the type encoding rather than the key... . I'm not sure that would fit the contract of the method.  As for testing validation the NSObject_ValidateValueForKeyPath::Test validates the validation method being called. what is the color space of these on the reference platform? #ByDesign. how will the reference platform handle the same color in different color spaces? #ByDesign. nit: would still like a CFEqual implementation for CGColorSpace for this #WontFix. This is already assigning into a new struct, so it wouldn't be costly to take the extra safety of constructing a __CGColorQuad with the pointer and moving it #Resolved. also _backgroundColor is a CGColorRef, so I'm not sure what this is doing.  We should probably just purge QuartzCore of UIColor and __CGColorQuad since they're not the same #ByDesign. like if there is RBG(.5, .5, .5, 1) and Gray(.5, 1) will the reference platform consider them the same color? #ByDesign. nit: %s and sel_getName. why is this one (2, 0) ?. nit: make templated on lambda so we don't have to use std::function, and then just inline the lambdas into the __scanNumeric calls. I'm unsure why this changed, will revert in the next iteration. unfortunately these cannot be NSMutableOrderedSet because they're currently STUBs and the compiler thinks it wrong.. This is all nearly the same as ProxyArray, but I kept them separate because I didn't think they should be sharing an implementation directly, though if we like I can minimize the amount of duplicated code and move these into a big shared implementation. This is called on the object we get from get, and is supposed to fail if it does not exist. They'd be parameterized on the selectors, and the reference platform is not having it. #ByDesign. for some reason it's not playing well with toupper, so I'm gonna stick with append. nit: just return (lhs.queuePriority < rhs.queuePriority) || ([lhs _queueIndex] > [rhs _queueIndex];. should this use StrongId to retain the operations for the duration of this?. this and similar files in non-core projects seem to be using a different convention so I followed that one. nit: just inline [image CGImage] instead of... whatever the line above is doing. nit: buffer + 8. super nit: just use autorelease for these. nit: just bytes. nit: no egyptian deities . nit: magic numbers . nit: should make this method take *, return HRESULT. nit: can this just be bool _interpolate = true;?. Unfortunately we don't have that shimmed for TAEF, and it was not worth it for this \ud83d\ude05 . nit: these could be in an AutoCF<>. should we add some tests with a transformed CTM?. nit: could just be \"Miter\" etc.. nit: is the struct necessary?. nit: static constexpr CGLineCap sc_lineCaps.... Yea, like making sure it works properly w/ scaling, rotating, etc.. http://i.imgur.com/Xn4hKRC.gif. I thought the NSInvocation wasn't able to support this yet?  If it can I can just swap it out, but fixing NSInvocation is well out of the scope of this PR.. This is clangformat, probably thinks... well idk what it thinks but I don't want to disable it for this one line #WontFix. This was to be able to modify it, which is apparently not the correct thing so will fix. ^ good point. I don't want to imply it's a Type since it it's just a value #ByDesign. This is doing the same amount of formatting if they're not being used?. I could but I prefer this style. Mmhmm, just need an unmolested copy to know which values were just added. set whoops. Looks like I can reduce duplication a little more, will do!. I see.  Either way still outside the scope of this PR.. Lambda will be called in a loop, moved out to prevent recreation. compiler won't let me modify a capture value :(. I see, since that was used by regular willChangeValueForKey I thought it was just being used as a flag. nit: not a fan of using namespace std but it seems to be heavily used, so a stretch would be to get carpal tunnel and remove 'em all #ByDesign. nit: add a GH#. is there any substantive difference b/w assert and NS_ASSERT? Should we be using something with telemetry? #ByDesign. \ud83d\ude1d I told ya it was already there. nit: I'm not sure that auto is good here since the <HSTRING> suggests it's an HSTRING rather than an HString. nit: unnecessary elses. do we want to log any sort of warning if the delegate responds to neither?. Does cppwinrt have the support you'd need?. nit: should this be NSUInteger?. nit: ASSERT_OBJCEQ so you shouldn't have to cast it to NSNumber. this makes me sad. The only issue I've seen with it is with objects that need commas, what error are you getting when trying to use OBJCEQ?  ASSERT_TRUE isn't that nice here since we don't actually see the values should it fail.. nit: parens to make parsing easier pls. nit: would prefer a good old fashioned if/else rather than an early return here. do we need to _lazyInitProperties for this?. nit: can you use a call_once for this?. nit: rather than a switch, could just if/ else on NSPostNow and change order based on ASAP/WhenIdle. nope! this is the only initializer \ud83e\udd23 . I'm moving the file getting part to a helper, but don't want to for the attributes bit since I need the file too. UPDATE: looks to just be the old deprecated version of setAttributes. It would save a little duplication but would be _a lot ugly imo. nit: no need for all of them 0s. if we're coalescing on sender should we include that in the hash as well?. dear lord \ud83d\ude28 \nwhy not weak instead?. Should put that in a comment should anyone need to maintain this. yup this is just as awful as I imagined \ud83d\ude1d . does this leak?. why is this repeated so many times?. <ClangCompile Include=\"src/*.mm\" />. excuse me. is this needed?. Interlocked? AFAICT this just changed TEST->OSX_DISABLED_TEST. OIC. https://static1.squarespace.com/static/55aa9727e4b09b833beef19c/t/56d9e42562cd940b4bdd4413/1457120340701/\n. nit: you may want to rename these, since \"allows\" implies it's a bool. nit: might just want to RETURN_IF_FAILED the first one and return the second to keep w/ the pattern we used in CG. nit: if you cast to CGPathRef instead of id do you still need to double cast?. nit: how should this handle a nil pattern?. Oh I see now.  Should this be a copy or a shared CGPathRef?  Like if a consumer modified path.CGPath would the original path be changed?\nUpdate: talked w/ @DHowett-MSFT offline, perfect as is. nit: you can just return this. http://i.imgur.com/YkoCx.gif. nit: save count to a local so it won't be expanded twice. nit: no. nit: no. nit: no. nit: no. nit: no. nit: range is already validated, so this is unnecessary. removeObjectsInRange doesn't seem especially optimized. Would it be better to just remove them directly here rather than making an IndexSet, iterating and adding indexes to said index set, then iterating over the index set to remove the objects?. just for sanity sake, can you add a test with a range w/ 0 length?. same as above. nit: is the -> bool necessary?\n. nit: this is only used once right? maybe just use directly.. would still prefer these changed <3. ",
    "jeffMeador": "@rajsesh-msft This branch now contains the test project & unit tests for CGPathApply. \nThe unit tests are in tests/unittests/CoreGraphics/CGPathTests.mm\nThe sample code is in samples/CGCatalog\n. @rajsesh-msft This branch has been properly rebased and now only shows the 5 files that have been edited.\n. @rajsesh-msft everything we discussed should be addressed in 184e31f31f9ca6bd8918de7af31fc0d7b337093c . CGPathAddArcToPoint was left untouched with a note that it needs to be refactored along with the copies in the other spots.\n. @rajsesh-msft CGPath has been updated to use CGPathElementInternal and just have 1 allocation for an array of elements instead of an allocation for an array of elements & for each array of points. \n. The changes requested have been committed.\n. @rajsesh-msft, yes the plan is to use the empty files added here to write tests for the APIs in issue #523, #524, and #525.\n. @rajsesh-msft I committed the current state of the looping implementation with d28fbc781becf0d6e48c0292343a56e839de9158. This should be in a similar state as the recursive implementation we had earlier.\n. While the documentation doesn't explicitly state that CGPathApply discards changes, the original implementation does discard changes. I don't think it works exactly like this, but it has the same effect. I could add something to the CGCatalog sample project to show this functionality on both platforms.\n. Are you referring to the points NSMutableArray not being used? It's not used, I can remove it. cgPathModifyingApplierFunction just exists to show that paths cannot be manipulated in an applier function.\n. I agree that anyone trying to manipulate paths is using this API incorrectly. However, if I don't discard changes, then this does become a spot where users can intentionally or unintentionally manipulate paths. If that is the case, the applier function would be behaving differently from the documentation as a function that \"can examine (but not modify) the element\" because it would be able to modify the element.\n. I copied this function directly from CGContextImpl::CGContextAddArcToPoint, which appears to be copied to/from CGContextCairo::CGContextAddArcToPoint. Ideally this logic would live in CGPath and CGContext would call into CGPath so it could be removed from the other locations. I understand cairo can complicate that particular implementation. How much do you want me to handle in this pull request? If I increase readability here and fix any bugs, how would you like to handle this code in the other 2 spots? \n. If this is moved to a utility function for adding a new CGPathElement, could we also put the dynamic allocation for the points array (always of the same size) in this utility function and forgo the CGPathElementInternal derived struct? This logic occurs every time a new element is created. Let me know if you had something different in mind for CGPathElementInternal, but as I understand you just wanted it to allocate memory enough memory for the max number of CGPoints and assign it to the points pointer in CGPathElement in the constructor of CGPathElementInternal.\n. The reference platform will bail out when there is no current point, like I do here.\nThe documentation states that if the current point and the first tangent point are the same, then it doesn't add a line from the current point to the first tangent point. Despite providing the points that should satisfy this condition, I haven't seen this behavior on the reference platform. The other bailout further down, if (san == 0) ,doesn't seem to line up with documentation and might also be something that was observed in testing. That can be addressed when this is function is refactored/cleaned up.\n. Would you consider this implementation if returnElement was created once outside of the loop so just memcpy was in the loop and not the alloc/free? I'll remove if not.\n. Yes we could put a warning trace here. We know in this situation that there are no curves, but a warning could help someone in the future.\n. Any way I think about this it requires 2 loops because of the way I need to traverse the original path. Then I'd need to either redo or save any calculations needed in both loops. Is that a fair tradeoff?\n. Every point in the array needs to be translated to its stroked point on one side of the the stroke then once we're at the end of the array we have to go back through every point in the reverse order and create the stroked point for the other side of the stroke. Creating the stroked points on either side of each point in order would produce intermediate lines like in the line breakdown example image from one of my emails. \n. Actually it might not necessarily create intermediate lines, but the underlying order of elements will not match the reference platform and that would affect things like animations. There could be other side effects I'd have to dig up.\n. The number is arbitrary, m1 > 1000000 can be replaced with angle1 == M_PI / 2 || angle1 == M_PI * 3 / 2 (with float approximations).\n. Right, this should be equivalent to:\nCGFloat x = p.x + (cos(angle - M_PI_2) * distance);\nCGFloat y = p.y + (sin(angle - M_PI_2) * distance);\nWould you prefer this implementation so it appears more straightforward instead of comments?\n. Yes, this code is copied a couple different spots, but it also needs refactoring/commenting to make it clear what it's doing. The other spot it was copied to has a similar todo comment.\n. ",
    "bSr43": "@ms-jihua the tests have been moved.\n. Oups... sorry about that :)\n. You're right, just a stupid copy & paste... :/\n. Sure! I moved the tests regarding the NSBinarySearchingInsertionIndex option in the NSArrayTests.mm file.\n. The test on a subrange is done after these 3 tests. In fact, there was a bug in the current version of the algorithm where an exception was thrown only when one was searching in the whole array. The name of the variable was let me think that the developer who wrote the test wanted to search on the whole range for this case, and on a subrange for the other test (which has been kept). Unfortunately, the original test was not able to trigger the issue, because of a wrong index. Now the tests cover both cases.\n. Are you sure? Last week someone asked me to do the opposite?\n. Sure! Here it is\n. you're right, @ms-jihua, I'm feeling stupid (again)... it seems that my VS project is a little bit screwed, and I'm not editing the correct file... I'll commit the fix ASAP!\n. OK, done!\n. This bad habit of using ARC :)\nFixed!\n. Yes, indeed. I removed the \"else\" statement.\n. I replaced with an exception, but I'm not sure about what you mean by checking on the reference platform: this is just a test to make sure that my implementation is not in a bad state, and I don't know how to reproduce such a state on OS X for instance.\n. You're right. I changed the implementation.\n. I added as much comments as possible.\nAlso, I changed the behaviour of the \"isEqual:\" and \"hash\" method in order to match the behaviour of the reference platform.\n. ",
    "ad87mb": "I added the word \"WINOBJC\" in the first line and I do not recognize the code of the library. ",
    "diffent": "that is great, thanks.  is there a way you could tell us some example apps that are in the store built w/ winObjC so we can examine the results?\n. Hi again, is there a list of iOS classes that are supported at a high level?\nIn particular I am looking for CoreGraphics (CGContext and related \"Quartz 2D\" drawing functions).\u00a0\nI am not seeing it here: \u00a0https://github.com/Microsoft/WinObjC/wiki/Roadmap\nFrom: Raj Seshasankaran <notifications@github.com>\nTo: Microsoft/WinObjC WinObjC@noreply.github.com \nCc: brian k info@diffent.com; Author author@noreply.github.com\n Sent: Tuesday, July 5, 2016 4:19 PM\n Subject: Re: [Microsoft/WinObjC] When can Islandwood apps be submitted to the Win App store? (#607)\nhere is a blog post on an app that used the bridge.\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thanks, this is pretty interesting, looking fwd to checking out this app.\nFrom: cre8ivepark <notifications@github.com>\nTo: Microsoft/WinObjC WinObjC@noreply.github.com \nCc: brian k info@diffent.com; Author author@noreply.github.com\n Sent: Wednesday, July 6, 2016 3:36 PM\n Subject: Re: [Microsoft/WinObjC] When can Islandwood apps be submitted to the Win App store? (#607)\nHere is another my app used Windows Bridge for iOS:\nhttps://www.microsoft.com/en-us/store/apps/typography-insight/9nblggh4qrs5\nhttp://typeinsight.org\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "eDameXxX": "@cre8ivepark BTW, do you have any plans for bringing this app to Windows Mobile?\n. ",
    "tcunning": "Yes, this issue was resolved.\n. The last push was to address some of the feedback for the CGCatalog example.\n. I didn't find a RETURN_IF_NULL macro available in the project.  I only found the following matching NULL macros which aren't appropriate for these cases as we aren't returning HRESULT:\nC:\\WinObjC\\Frameworks\\include\\wil\\result.h(823):#define RETURN_IF_NULL_ALLOC(ptr)                  \\\n  C:\\WinObjC\\Frameworks\\include\\wil\\result.h(904):#define RETURN_IF_NULL_ALLOC_LOG(ptr)                  \\\n  C:\\WinObjC\\Frameworks\\include\\wil\\result.h(985):#define RETURN_IF_NULL_ALLOC_MSG(ptr, fmt, ...)                          \\\n  C:\\WinObjC\\Frameworks\\include\\wil\\result.h(1061):#define RETURN_IF_NULL_ALLOC_EXPECTED(ptr) \\\n  Matching lines: 4    Matching files: 1    Total files searched: 4039\n. This is an internal method.  It's called by CGContextReplacePathWithStrokedPath which uses cairo_copy_path_flat which always returns a valid pointer, but the result may have no data (data==NULL and num_data==0).  So I think we are good w/o a NULL check.\n. This todo and the commented out line should be removed as the stroking of the path now happens below this.\n. Yea, CGPathCreateCopyByStrokingPath isn't yet supported.   Added a NULL check and TODO to remove it once implemented.\n. The points do not show as CGContextAddArc is unimplemented.  I will change this to draw little squares\n. fixed!\n. ",
    "chadimoussi": "Both the Debug and Release CI Builds passed\n. Both the Debug and Release CI Builds passed\n. > //************\nYes, that is planned for the next task to be implemented.\n\nIn reply to: 240500576 \n\nRefers to: Frameworks/AddressBook/ABMultiValue.mm:1 in 616d5ac. \n. > //************\nI was told that is where to place internal/private headers -- is there a better place to have them in?\n\nIn reply to: 240499038 \n\nRefers to: Frameworks/include/ABContactInternal.h:1 in 616d5ac. \n. > //************\nSome of the unit tests make use of the private classes (to make fake contacts, for example), so it sounds like Frameworks/include/* would be the place?\n\nIn reply to: 240529742 \n\nRefers to: Frameworks/include/ABContactInternal.h:1 in 616d5ac. \n. :shipit:\n. Already kicked them off (thanks to a handy script!), but I can cancel if they are not necessary\n\nIn reply to: 244238545 \n. :shipit:\n. ARC prohibits explicit calls to dealloc -- it automatically does the [super dealloc].\n\nIn reply to: 70119973 \n. The empty String is an allowed first/last name, so length 0 is okay. If both if/else if conditions are not true, the firstName text box will have its default value for the specific operation -- a blank text field that is editable (creating a contact) or non-editable (viewing/removing/modifying a contact).\n\nIn reply to: 70120288 \n. _menuOptions can be re-assigned to an empty array if the user doesn't grant any permissions.\n\nIn reply to: 70128241 \n. The compiler doesn't like a default case here (I think because all cases of the enum are handled).\n\nIn reply to: 70128123 \n. Reaching this case means there was no value present. The modify case was designed to only operate on existing fields of the contact (the logic for adding a new field to the contact is handled in the create case). If there was no previous value, the text field is not editable (since that value wouldn't be modified, but rather created).\n\nIn reply to: 70909990 \n. It was set-up as a class with future operations in mind (like adding/updating/removing contacts) -- an _ABAddressBook will need to maintain extra state and have more functionality to interact with the contact store and/or individual contacts as future features are implemented, particularly the save operation.\n\nIn reply to: 73073364 \n. If the app doesn't have the capabilities added in their manifest, the privacy page won't show up in settings. We could deep-link in the case where an app had declared the contacts capability, but a user went out of their way to turn off the permissions in the settings app; however, the examples I've seen don't use this method to request permissions if a user has explicitly denied permission (they will only try to request permission if the status is not determined).\n\nIn reply to: 73075277 \n. I got the GUID from a device access list from someone on the contacts team -- not sure if a header exists.\n\nIn reply to: 73199986 \n. Yes, I think that is a good idea to save developers the trouble of having to manually update the manifest.\n\nIn reply to: 73201248 \n. I was under the impression that it followed the create rule (https://developer.apple.com/library/ios/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html)\n\nIn reply to: 73203025 \n. To follow the create rule (https://developer.apple.com/library/ios/documentation/CoreFoundation/Conceptual/CFMemoryMgmt/Concepts/Ownership.html) and give the caller ownership, since we are expecting them to call CFRelease when they are done\n\nIn reply to: 73208539 \n. That was what the clang formatter did\n\nIn reply to: 73208203 \n. I ran the sample app on a phone and it seems to run okay (the success callback is called, and init terminates)\n\nIn reply to: 73253069 \n. ARC is turned on, so __bridge_retained will allow us to return at +1\n\nIn reply to: 73252102 \n. I think it does in this case after talking to Brian/Dustin\n\nIn reply to: 73249545 \n. Since the method name has 'get', based on the Get Rule, the caller does not own the returned object\n\nIn reply to: 73965220 \n. _ABContact is essentially a wrapper for contact, so an _ABContact wants strong ownership over its contact\n\nIn reply to: 73965363 \n. Would indexOfObjectPassingTest: work, or is filteredArrayUsingPredicate better?\n\nIn reply to: 73965080 \n. Tried doing a switch, but since the kAB... constants are extern, the compiler complains about the case expressions not being constant.\n\nIn reply to: 74811019 \n. It is currently unused, but was designed to be used in ABPersonCopySource\n\nIn reply to: 74811477 \n. Sounds good -- I will remove this method and re-introduce it when ABPersonCopySource is implemented.\n\nIn reply to: 74822609 \n. ABRecordGetRecordID/ABRecordGetRecordType do make use of the types -- would it be best to have the Source cases return an invalid value and just remove the classes for now until ABPersonCopySource is implemented?\n\nIn reply to: 74827990 \n. The notes are stored in a String (in both iOS and Windows)\n\nIn reply to: 74828015 \n. All of the ones tested in this case are Strings -- the only current non-string value is a Date, which is tested in the birthday test. \n\nIn reply to: 74829896 \n. It is a utility method to allow _ABContact to swap between WACContactDate and NSDate, so I thought this would be a good place for it -- open to suggestions if it is better in a different place\n\nIn reply to: 75146840 \n. The reference platform does not allow for negative indexing (it just returns null)\n\nIn reply to: 75149342 \n. The WACContactEmailKind... is an enum, and all of the cases are covered/map here \n\nIn reply to: 75151561 \n. I believe strong is default under ARC, so I didn't explicitly specify\n\nIn reply to: 75149594 \n. I'm a bit confused -- should or shouldn't I mark it as __block? It's not being modified, so it shouldn't need __block, right?\n\nIn reply to: 75150710 \n. There is also ABMutableMultiValueRef (the idea being that the mutable version simply doesn't mark itself as immutable so that new pairs could be added/existing ones changed)\n\nIn reply to: 75180337 \n. No, just within a single multivalue -- it's mainly to differentiate pairs within a multivalue that might share a label.\n\nIn reply to: 75181025 \n. The __bridge cast is to allow the conversion from the C style pointer (ABMultiValueRef) into an objective-c pointer (without getting ARC involved -- there is also __bridge_transfer to allow ARC to take over, but the user is responsible for freeing the ABMultiValueRef)\n\nIn reply to: 75172038 \n. I don't think it is required, but I'm using it for consistency/clarity\n\nIn reply to: 75148511 \n. Not copying should be okay, NSString* is immutable (plus pretty much all of the labels are static constants)\n\nIn reply to: 75148198 \n. The reference platform accepts any arbitrary String\n\nIn reply to: 75181698 \n. I figured it would be easier and be less code to just have the flag for being mutable or not\n\nIn reply to: 75182693 \n. @DHowett-MSFT can explain it better but something about wholearchive\n\nIn reply to: 75209330 \n. \"Since it is a category, it will require either a category force-include or manual inclusion in the .dll and .UnitTests.exe\" he mentioned that in another comment\n\nIn reply to: 75209330 \n. Yes, because we only enter this case if appendPairWithLabel succeeded, which increments the count.\n\nIn reply to: 75513394 \n. The multi-value documentation itself doesn't talk about thread safety, but Apple does say this about working with an AddressBook in general: \"You must ensure that an instance of ABAddressBookRef is used by only one thread.\"\n\nIn reply to: 75726420 \n. The default case is to return false, which is at the end of the method\n\nIn reply to: 76670284 \n. I put it here since I only wanted _ABAddressBookManager to know of this class -- which header should I move it to? _ABAddressBookManager's header, or should I create its own separate header?\n\nIn reply to: 76672379 \n. It is a private method that was designed to only be used internally to this class (the rest of the methods are called from ABAddressBook.mm and such, but don't need to call this one)\n\nIn reply to: 76674447 \n. Updated to avoid multiple return true's\n\nIn reply to: 76670284 \n. I will document this in the code as well, but it's because we added a new method (ABAddressBookCopyArrayOfAllUserAppPeople) to get modifiable/delete-able contacts due to the Windows permissions issue (but this method doesn't exist on the iOS side, so the ifdef is so the code can still work on iOS)\n\nIn reply to: 77093056 \n. Will add cases for this, but errors would occur if a String property's length was longer than the allowed Windows length, or if an unknown property was attempted to be set\n\nIn reply to: 77093837 \n. The (roughly) equivalent Windows class is ContactManager (Also, one of the first code reviews for AddressBook mentioned that _ABAddressBook was a confusing name). Similarly, ABPerson's backing is called _ABContact (rather than _ABPerson) to match the Windows name of Contact\n\nIn reply to: 77094758 \n. I wasn't able to find any in their documentation, unfortunately\n\nIn reply to: 77100716 \n. No (at least not a documented one)\n\nIn reply to: 77101290 \n. The documentation doesn't list a length limit for the String of a URL.\n\nIn reply to: 77101644 \n. ",
    "yweijiang": "Discussed with Jared and Raj today, there doesn't seem to be any compelling reason you would ever want to serialize heading measurements, as the actual usage of heading measurements is to generate and read them on the spot. Because of this, I'm leaving the serialization APIs alone.\n. I went ahead and removed the FAIL_FAST and replaced it with a return if s_extendedExecutionRequestCount == 0. I believe this is what you wanted?\n. It looks like the conflict just required a minor tweak to the MainViewController. Made this change and it looks like WOCCatalog still has everything I expected in it.\n. @bbowman I just tried to clone a clean version of my branch and build everything. WOCCatalog builds fine there. I'm not sure I can repro the build issue, do you know why this might be happening? If I do need to add CoreLocation.lib to the default libs, could you point me to what file(s) the list of default libs is located in \\msvc is exactly?\n. Sorry, you're right. I had forgotten to update the .xcodeproj before. I pushed the updated file that adds the Geocoding files to the xcode project file. Thanks for catching this and pointing it out.\n. From the MSDN Documentation on the metadata query reader: \nIf an image format does not support container-level metadata, this will return WINCODEC_ERR_UNSUPPORTEDOPERATION. The only Windows provided image format that supports container-level metadata is GIF. Instead, use IWICBitmapFrameDecode::GetMetadataQueryReader.\nOnly GIF can have metadata for the whole entire image source, which is what this API looks for. Individual frame properties are handled by the CGImageSourceCopyPropertiesAtIndex API.\n. Added a comment about what the GIF header contains for the looping properties, and made constants for the static bytes in front.\n. I did but it didn't detect anything. I may have set it up incorrectly so it wasn't diffing against the correct master and thought there were no changes.\n. You are correct, this actually does free the blob field. I changed it so it does make a copy, also rewrote the way the Exif version was being parsed to match what Apple does (make an array with say, {2, 2, 1} to represent version 2.2.1 instead of the raw characters \"0221\" which is what the blob bytes would contain).\n. We weren't handling Chrominance and I'm not sure where the path should actually be. I went ahead and removed Chrominance from source and destination.\n. I didn't have to, fixed this everywhere.\n. I replaced all the NULLs with nullptr except for CGStringCompare, which doesn't compile with nullptr or nil. I'm not sure why, but I left a comment there saying that's why it's being left as NULL.\n. Separated the check for url and whether the url is valid so we log if the url is invalid.\n. If you mean using an HRESULT or something, CreateStreamOnHGlobal does not have an HRESULT and I don't believe it can actually fail. If not, could you elaborate on what I should check for?\n. Fixed.\n. Yes, there are places where I call this for a general image property without checking if properties are passed in to AddImage. This performs the role of both checking if there is a properties dictionary as well as checking if the specified key is in it.\n. Changed the name.\n. Fixed.\n. Added a constant for this in 2 places.\n. Yes, I changed the name to expectedCount. iOS does indeed return an error if you specified 3 frames on creating the destination and only added 2.\n. Added a comment about how this works exactly as per our discussion.\n. Fixed.\n. As per our discussion, I used that originally but C++ 11 didn't like it. It looks like (wchar_t)L\"ImageQuality\" works though, so I changed it to that.\n. Yes, this was a bug I actually missed because I was only testing quality = 0.0, which an unitialized bVal would produce anyways. Thanks for catching it.\n. I went ahead and removed this, which leads to JPEGs giving X/Y resolutions as 0. Any image I produce on iOS has 72, and I can't seem to actually modify that number, but as we discussed letting WIC write 0 automatically probably makes more sense than hardcoding values.\n. As far as I can tell, everyone online says that the way to get the bytes out of a CGImageRef object is to copy it to an array using CGDataProviderCopyData. I then have to call the imageFactory->CreateBitmapFromMemory to create a bitmap that WIC can use. I might be wrong but I'm not sure if this can be avoided since there doesn't seem to be a direct way to access the bytes in a CGImageRef.\n. Fixed.\n. Can you clarify what you think the way would be to go about fixing this? As we discussed, we can't enable ARC on these files without breaking them right now, and I see the problem but I'm not sure what the best fix is.\n. Went ahead and put this in a RETURN_NULL_IF_FAILED.\n. Done.\n. Everything in the CGImageSourceInternal/CGImageDestinationInternal data structures seem to get deallocated after init with ARC enabled. Right now I just changed it to manually release the dictionaries after adding them to the parents.\n. I'm not sure there's any reason to because there are other properties not being implemented and I don't think it's reasonable to have unimplemented tracing for every single property we don't use.\n. Fixed.\n. Apple seems to just drop the value, but I added a trace statement in an else here.\n. It's not necessary, and fixed.\n. It returns -1 distance, added checks for this.\n. Done.\n. Done.\n. Done.\n. This is treated as 0s when null, so I can't actually check if this is NULL/nullptr or anything.\n. Done.\n. Yes, I unstubbed all these properties together but the Windows APIs never actually give any kind of x, y, or z values so I never used them. Restubbed.\n. The geolocator functions also have the same note, where they say {WDGGeolocator} geolocator geolocator instance.\nIt looks pretty bad, but \"{WDSCompass*} compass\" is the type and name of the parameter, while \"compass instance\" is the description of what that parameter is. Would it make sense to add a dash between the name and description of all @param annotations? #WontFix\n. Fixed.\n. Fixed.\n. Fixed.\n. Yes, I verified these with a reference platform when I got the feedback to add the null reference check before. If either location is invalid, the reference platform returns a -1.\n. See other comment on invalid arguments.\n. Fixed.\n. Fixed.\n. Logging an error message, though we should never actually reach this.\n. Fixed.\n. Changed this the way we discussed in the meeting today.\n. Fixed.\n. Done.\n. Removed this.\n. ",
    "liquidboy": "is there a roadmap or do you have an idea of how long it will take you to do this UIKit->XAML mapping ?!  I've been looking through the checkins and can see the effort is well underway, just got thru the UISlider changes (quite a lot) ...\nI'm guessing this will take a good while..\n. ",
    "jparmentervf": "Why is components1 being compared to itself in the implementation?\nSent from my iPhone\nOn Jul 15, 2016, at 17:57, Raj Seshasankaran notifications@github.com<mailto:notifications@github.com> wrote:\n8c9d1b8https://github.com/Microsoft/WinObjC/commit/8c9d1b85e30a6c3a538464d730082c8e6bbab9ff\n/*\n@Status Interoperable\n/\nbool CGColorEqualToColor(CGColorRef color1, CGColorRef color2) {\nColorQuad components1{};\nColorQuad components2{};\n[(UIColor_)color1 getColors:&components1];\n[(UIColor_)color2 getColors:&components2];\nreturn ((components1.r == components1.r) && (components1.g == components1.g) && (components1.b == components1.b) &&\n        (components1.a == components1.a));\n}\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/657, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AJC9Asa7hhQwp-cYDua7kfU1QKOZ-t73ks5qWCyWgaJpZM4JN4sE.\n. Updated.\n. This raises an interesting question - it seems to me implementations should try to keep to the Obj-C(++) interface that comes from Apple\u2019s APIs as much as possible. If the Cairo implementation ever changed or was updated, this would mean those implementation changes would only have to happen in the original implementation. However - a case could also be said that this could be more efficient (though compiler optimizations may make that a moot point). What are you feelings about that?\nJosh\n. No problem! Sorry that wasn't already in there.\n. @jaredhms - I implemented the below in CGContextCairo (see code sample below), and both the CGCatalog sample app and my unit tests fail in the rounded corners. I noticed in the cairo documentation that clipping is not counted, and that may be the problem here. Do you prefer having the current PR implementation that mimics iOS more closely? Or do you prefer the behavior cairo's implementation? \n`\nbool CGContextCairo::CGContextIsPointInPath(bool eoFill, float x, float y) {\n    ObtainLock();\nLOCK_CAIRO();\nif(eoFill){\n    cairo_set_fill_rule(_drawContext, CAIRO_FILL_RULE_EVEN_ODD);\n    } else {\n    cairo_set_fill_rule(_drawContext, CAIRO_FILL_RULE_WINDING);\n    }\nbool returnValue = cairo_in_fill(_drawContext, x, y);\nUNLOCK_CAIRO();\nreturn returnValue;\n}\n`\n. @jaredhms - perhaps disregard the note above. A fresh set of eyes this morning sees some other problems that may be causing this behavior. I'm going to dig a little more and will post an update soon.\n. @bviglietta - No - transforms are handled earlier in the method before any bounds checking at all occurs. This allows for a quick return without having to check further if the point is obviously out of bounds for the path's bounding rect. \nWhat I found this morning when I looked again was that, for the original implementation that I sent the PR for (where I was checking pixel color), I was setting a context fill color. If we are able to use the cairo functions that shouldn't be needed any more. I removed that, and I think the cairo functions are now working as they should. Still testing some edge cases and reviewing my new implementation though.\n. @jaredhms - I have rebased to master and pushed updates to the PR. Please let me know if there is anything else you would like to see.\n. ",
    "memontic-ms": "I could not reproduce the \"Ignoring unsupported PBXShellScriptBuildPhase\" warning with any of the July releases or the current implementation of vsimporter. @VishalAgarW, if this is still an issue I can take a look at it if you can provide me with a project that can reproduce the warning.. Cannot reproduce, closing.. @ChangweiZhang Your most recent screenshot of errors is because \"small\" has already been defined as a macro. Changing it to \"smaller\" should fix those specific errors.\n. :shipit:\n. :shipit:\n. :shipit: \n. :shipit:\n. It is also missing for UIRefreshControl.\n. :shipit:\n. Cannot repro, closing. @edvv let us know if you run into this issue in the future.. Checked functionality of ControlsViewController in WOCCatalog. This change still passes the assert that uses presentedViewController.\n\nIn reply to: 256765411 \n. :shipit:\n. :shipit:\n. If you disable ObjC modules does the error go away? Do this in one of two ways:\n1. Set \"Enable C and Objective-C Modules\" to No under Clang->General in project properties\n2. Modify ObjectiveCModules to false in the .vcxproj\n. What about the remainder of the original contents of WinObjC/bin that did not make it into WinObjC.Build/bin?\n. So we won't have a version of acbuilder.exe, Xib2Nib.exe, etc, checked in anywhere? Or will we also be checking in the final package to WinObjC/WinObjC.Build/?\n\nIn reply to: 261125604 \n. @DHowett-MSFT I have included ObjCImportTest.m within the Clang unit tests that will catch a regression on this issue for future compiler drops.\nRelated, I have renamed the ClangModules unit tests project to just Clang since the added test file is not dependent on modules support.. (Option 1) Fix: Rename Groestlwallet's IntTypes.h file to something else. (Recommended)\ninttypes.h is a system header that is included from WinObjC's CoreFoundation.h header. In this case, CoreFoundation.h seems to be including Groestlwallet's IntTypes.h instead of the system header.\n(Option 2) Conversely, a potential SDK change would be to modify the sbclang.targets file to use -iquote instead of -I for project header maps. However, this produces breaking changes for other projects.\n\n**The change below for sbclang.targets is not needed if you have renamed IntTypes.h**\n<ItemGroup>\n  <ClangCompile>\n    <HeaderMapInclude Condition=\"'%(ClangCompile.HeaderMap)' == 'Project'\">-iquote\"$(ProjectHMapFilename).hmap\"</HeaderMapInclude>\n    <HeaderMapInclude Condition=\"'%(ClangCompile.HeaderMap)' == 'Combined'\">-I\"$(CombinedHMapFilename).hmap\"</HeaderMapInclude>\n  </ClangCompile>\n</ItemGroup>. @gruve-p I apologize for the long wait.\n\n\nI was not able to reproduce the exact error you are seeing, but I did hit something similar while it compiled BRAppDelegate.m. It said that \"cannot find protocol declaration for 'PKPushRegistryDelegate'\" followed by and error saying \"expected a type\".\nThere have been quite a few changes since Feb 17th. It looks like the project you are trying out still has some errors during build, you can re-import the project again to see where it's at.\nSince the initial question in this issue has been answered, I'm going to close this one out. You are welcome to open a new issue with further questions.. @spalda2 This was fixed in the vsimporter tool in commit 212dba2 and has been in the pre-release since version 0.2.161107.. Remove /build/Package.sln. . WinObjC.Language packages up WinObjC/tools/msvc/* into build/msvc/*\nWhereas WinObjC.Tools packages up WinObjC/tools/WinObjC.Tools/vsimporter-templates/* intobuild/msvc/vsimporter-templates/*\nIt seems like it would make more sense to either:\n1. Put the current contents of WinObjC/tools/msvc/* into WinObjC/tools/WinObjC.Language/msvc/*\n2. Relocate the vsimporter-templates directory back to WinObjC/tools/msvc/vsimporter-templates\nTo cut down on vsimporter changes I'd prefer number 2.\n(vsimporter currently uses a relative path of ../msvc/ to find the vsimporter-templates folder. That only works once it is packaged and won't work from its output path of WinObjC/tools/$(Configuration)/). WinRT projects are failing to find some headers that didn't make it into any of the packages.\nNot 100% positive why I wasn't hitting this error before but I think I had an old include path lying around.\n- RTHelpers.h (from WinObjC.Frameworks.UWP package) can't find Starboard.h.\n- Starboard.h (from where ever it should go) can't find Platform/EbrPlatform.h, Starboard/SmartTypes.h, and Starboard/TypeTraits.h (and something somewhere will probably need Starboard/String.h which is also missing)\n- result.h (from WinObjC.Logging package) can't find FoundationErrorHandling.h\n. libxml2.dll is being packaged twice:\nwinobjc.frameworks: build\\deps\\prebuilt\\Universal Windows\\x86\\\nwinobjc.frameworks.core: build\\deps\\prebuilt\\Universal Windows\\x86\\\nEverything still seems to work regardless but I get a \"DoubleWrites\" error after the build succeeds on a project that consumes both packages. . I plan to look into this in the next few days. @bbowman let me know if you've done anything toward this yet.. At some point I deleted the vsimporter templates for the WinStore10-Package props and targets that would be included in WinStore10-Package's package. I'm currently working on adding those back in and checking functionality so that the packages created are actually usable. Making a few upgrades as well.. Closing this PR and opening new one.. :shipit: . Fixed in #2544. Merged into packaging branch. Merged into packaging branch. Merged into packaging branch. fixed in #2418. > \n@bbowman Similar logic\n\nRefers to: tools/vsimporter/src/SBProject.cpp:340 in e4b2e39. . :shipit:. \"reference to 'OBJC_ASSOCIATION_RETAIN_NONATOMIC' is ambiguous\" was fixed in PR #1515. >     \nDid you actually open up this solution in VS and save it? I'm curious if vsimporter should have added the project.json to the filters file or if VS has been doing it automatically for me and I haven't noticed. +1 issue for me. #WontFix\n\nRefers to: samples/HelloGLKit/HelloGLKit.vsimporter/HelloGLKit-WinStore10/HelloGLKit.vcxproj.filters:72 in c66e169. . > <?xml version=\"1.0\" encoding=\"utf-8\"?>\nThis part is definitely in the templates. I don't know how it's always getting nixed. Is this a VS 2017 thing? #WontFix\n\nRefers to: tests/testapps/CGCatalog/CGCatalog.vsimporter/CGCatalog-WinStore10/CGCatalog.vcxproj:1 in c66e169. . :shipit:. Merged into packaging branch. \nBundle projects still need more thought and a redesign.. Taking the headers out of a .vcxproj removes the accessibility of marking the header as a \"Public Header\". . Duplicate of #2054. :shipit:. :shipit:. blocks_runtime.h is getting into the WinObjC.Language package correctly but it can't be found correctly with modules enabled. This needs a change in libobjc2: either an addition to libobjc2's modulemap or an additional include somewhere in libobjc2's headers.. ### Repro\nIn a file with options \n<CompileAs>CompileAsObjCpp</CompileAs>\n<ObjectiveCModules>true</ObjectiveCModules>\nAnd the import\n```\nimport \nThe following will not compile because a definition for Block_copy cannot be found\nvoid* info;\nBlock_copy(info);\n```. :shipit:. :shipit:. Microsoft.AppXPackage.Targets looks like (app) build-time targets, so probably not vsimporter.\nCould not reproduce this error.  Closing.. :shipit:. :shipit:. All of build.sln has been updated to PackageReference at memontic/PackageReference\nIt needs the fix in the updated NuGet build task so this PR will have to wait until #2200 in implemented.. Merged into packaging (and develop). Still looks good.. :shipit:. Okay, now all of build.sln should be using platform toolset v141.. This PR partially resolves #2206 . > CodeFlow for GitHub does not download executable files. If you trust this file and would like to run it, please download it yourself through GitHub.\nDon't think we need this file #WontFix\n\nRefers to: common/gitversiontask/4.0.0-beta0011/build/lib/linux/x86_64/libgit2-baa87df.so:1 in 680a7de. . >     TaskName=\"FixupVersionOfWinObjCProjectReferences\"\nI know these comments are basically inline, but could you add the summary of what version it'll assign at somewhere at the top here? Just what you had in another PR comment would be useful for when we look back at this in the future:\n1. Use Locally built packages if possible.\n2. Otherwise Use Latest pre-release package if building pre-release (determined by gitversion)\n3. Otherwise use \"*\" Version (latest stable package)\n\nRefers to: common/winobjc.packagereference.override.targets:9 in 680a7de. . :shipit:. Add check to not override package version if it has already been set to specific version.\nAs in, only override if version has a * in it. Cannot repro with latest version of vsimporter. Closing.. @bbowman Not sure if this is related to changes from packaging (haven't tested out pre-packaging tools.sln yet), but something seems to be wonky with how our tools projects are building.. WinObjC.Packaging no longer provides automatic package version string as of #2294/aec9381.\nClosing since the \"bug\" part of this issue no longer exists.  \nWe can open a task to get automatic versioning back into WinObjC.Packaging if there is need for it. First we need to get our own package versioning ironed out. . Right now we have this coming in with the default props:\n<ItemDefinitionGroup>\n    <ClangCompile>\n      <InternalSystemIncludePaths>$(MSBuildThisFileDirectory)\\include\\;%(InternalSystemIncludePaths);</InternalSystemIncludePaths>\n    </ClangCompile>\n  </ItemDefinitionGroup>\nLooking at our WinRTSample, we're specifying -MMD which will set \"Use System Headers For Dependencies\" as No. Our defaults props for the include paths (above) aren't doing anything.. I added the following target to a vcxproj in tools.sln, build.sln, and WOCCatalog-WinStore10.sln. The error text definitely was produced in each build. However, when the error tag was not present, sometimes the msbuild output did not say it was running the target (probably because the target did nothing).\n<Target Name=\"_ErrWhenExecuted\" BeforeTargets=\"Build\">\n    <Error Text=\"Target: _ErrWhenExecuted\" />\n  </Target>\nAlso, to execute before Build, I believe it's recommended to override the BeforeBuild target instead. \nhttps://msdn.microsoft.com/en-us/library/ms366724.aspx \nI can't find a fault in execution because of this issue. Closing.. As WinObjC.Packaging is set up now, any project with output that should to go into the package needs to include the WinObjC.Packaging package (just like how NuGet.Build.Packaging is set up).\nWinObjC.Packageable.props/targets will be applied to projects like Sample-WinStore10 and SampleWinRT.\nWinObjC.Packager.props/targets will be applied to the SampleWinStore10-Package project.. nuproj's, despite using project.json, do not automatically restore properly in VS 2017. Therefore, the nuproj will not build successfully without additional intervention (must command line nuget restore). \nAdditionally, the packaging nuproj was added when ANY non-app was importer. For example, the case of importing an app plus a lib it depends on would add the packaging project to the solution. \nTherefore, to not break regular app importers, default has been set to OFF.\n\nIn reply to: 290533234 . :clock1:. @pradipd @bbowman . @pradipd see WinObjC.Frameworks.targets and WinObjC.Frameworks.Core.targets\n<Link Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n    <AdditionalLibraryDirectories>$(MSBuildThisFileDirectory)\\lib\\$(TargetOsAndVersion)\\$(PlatformTarget)\\;$(MSBuildThisFileDirectory)\\lib\\$(TargetOsAndVersion)\\$(PlatformTarget)\\$(Configuration)\\;$(MSBuildThisFileDirectory)\\deps\\prebuilt\\$(TargetOsAndVersion)\\$(PlatformTarget)\\;$(MSBuildThisFileDirectory)\\deps\\prebuilt\\$(TargetOsAndVersion)\\$(PlatformTarget)\\$(Configuration)\\;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>\n</Link>\n<_ImportLibsFromPackage Include=\"$(MSBuildThisFileDirectory)\\lib\\$(TargetOsAndVersion)\\$(PlatformTarget)\\*.lib\"/>    \n<_ImportLibsFromPackage Include=\"$(MSBuildThisFileDirectory)\\lib\\$(TargetOsAndVersion)\\$(PlatformTarget)\\$(Configuration)\\*.lib\"/>\n...\n<Link Include=\"@(_ImportLibsFromPackage)\"/>\n@bbowman, input?. 1. Correct. \n2. If they are left in: If someone goes and removes the lib from AdditionalDependencies in their vcxproj expecting the lib to not be used anymore, it still gets used.\n\nIn reply to: 291970098 . @bbowman Leaving in the search paths for now.. > \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000V\u0000A\u0000L\u0000U\u0000E\u0000 \u0000\"\u0000P\u0000r\u0000o\u0000d\u0000u\u0000c\u0000t\u0000N\u0000a\u0000m\u0000e\u0000\"\u0000,\u0000 \u0000\"\u0000O\u0000b\u0000j\u0000e\u0000c\u0000t\u0000i\u0000v\u0000e\u0000-\u0000C\u0000 \u0000f\u0000o\u0000r\u0000 \u0000W\u0000i\u0000n\u0000d\u0000o\u0000w\u0000s\u0000 \u0000v\u0000\"\u0000 \u0000S\u0000T\u0000R\u0000I\u0000N\u0000G\u0000I\u0000Z\u0000E\u0000(\u0000P\u0000A\u0000C\u0000K\u0000A\u0000G\u0000E\u0000_\u0000V\u0000E\u0000R\u0000S\u0000I\u0000O\u0000N\u0000)\u0000\nIs the version usually appended to the product name considering there is also a ProductVersion field?  \nHere it doesn't say you should only have the name but it also doesn't say you should have the version: https://msdn.microsoft.com/en-us/library/windows/desktop/aa381058(v=vs.85).aspx\n\nRefers to: common/common.rc:171 in f4bbf31. . :shipit:. This sounds like a NuGet restore issue.\nAssuming you have already run .\\init.ps1 once already, try running\n.\\.tools\\nuget.exe restore .\\tools\\tools.sln\nthen rebuild.\nIf that doesn't work, can you respond with the contents of WinObjC\\tools\\WinObjC.Tools\\WinObjC.Tools.nuget.targets?. Does this change the behavior of how the app loads/installs? Does it overwrite a previous version of the app or add another version without deleting the old one? I currently have 4 WOCCatalogs sitting around that seem to differ by the PublisherDisplayName. I'm expecting that I'll now have 1 sitting around for each version I use.. Check #ifdef DELETE beforehand #Resolved\n. > UIApplicationTests \nNSURLStorageFileTests. Also below.\n. Some other task is deleting the InvokeObjc2Winmd.dummy on clean\n. Please help clang formatting\n. >withExtension:nil \nThis should specify extension(s) that we support for fonts.. Dustin's right. Didn't realize it pulled in the filename+extension. But what happens if it tries to register a non-supported font file? Should registering a non-supported font fail?\n\nIn reply to: 89406843 . It's not a Microsoft copyright banner. What would need updating?. To be decided. I was having some difficulties since these packages were all being built as prereleases. Need input from @bbowman.\n\nIn reply to: 98955335 . This file can be removed since it is a duplicate of vsimporter-templates/project.json. Yes, but project.json can be also for iOS middleware that does not wish to be packageable. Although I'd assume most middleware would like to be packaged, this gives them the option to opt out of packaging.\nCurrently, the default for importing any project is to not add the packaging project to the solution, ie. make it not packageable. \nHowever, projects imported with -genprojections will automatically add the packaging project to the solution.\nShould the default instead be to include the packaging project?\n\nIn reply to: 98952538 . > \nThis line and line 7 could go inside their .props files instead. I'm fine with it as it is unless this way is wrong/not a best practice. \n--On second thought, WinObjC.Packager.props and WinObjC.Packageable.props should be imported from ImportedByAnyDependent.props.. It'd be the .vcxproj created from the WinStore10-Bundle template, which is mimicking the xcode bundle type targets. They shouldn't be building anything. Instead they'll have SBResourceCopy items to include. I'm not clear what your concern is here.\n\nIn reply to: 100939382 . The nugetizer properties aren't set at this point... But let me double check that.\n\nIn reply to: 100937477 . My workflow was was running vsimporter.exe from the xcodeproj dir. So it was relative to that location. I think it makes a little more sense to have it relative to the binary but there's a few options here. Preferably it would be run with the full path to the templates, not a relative one.\n\nIn reply to: 100936693 . >Linker \nThis should be \"Consumption\" #Resolved. From what I discussed with Artem, there is no VS equivalent of a bundle project so he settled on this.\n\nIn reply to: 100940481 . It's just one more thing to go wrong, imo. I'm not totally against the idea though.\n\nIn reply to: 100940824 . Yes.\n\nIn reply to: 100940695 . Not such what you're pointing at here\n\nIn reply to: 100939995 . Bringing in the package's Consumption.targets file, which should be right next to it in the package. Nuget does something similar but they had some special syntax to get the package's installed path.\n\nIn reply to: 100941133 . There's an extra x floating around on the two lines. Don't see that in develop or packaging.. Might want to roll these all back to 14.0 for now?. Sounds good. I was concerned it was a merge error.. Updated in latest iteration (5). Please confirm.\n\nIn reply to: 100939635 . Give these the Label=\"Configuration\" and delete the  from above? Can't tell if VS did this automatically. #WontFix. Yeah, I meant to make this dependency outside of the project.json. Take it out for now and I'll file a bug and do it another way.\n\nIn reply to: 102289368 . What do you mean? At import we can only tell what kind of xcode targets they are trying to import.\n\nIn reply to: 102370117 . I thought build.sln was sticking to VS 2015 for now #WontFix. Add $(MSBuildThisFileDirectory) for consistency  #Resolved. Should probably stick a TODO on all these readmes #Resolved. Is there a reason this can't go up above with the other props imports? #WontFix. nit #Resolved. >true \nIt builds okay like this? Alright then. #WontFix. > \nI should really go look if this is EVER needed by vsimporter... #WontFix. Interesting #WontFix. Vsimporter should have grouped this in the item group with everything else. Don't know what went on here. #WontFix. > \nVsimporter why did you do this. +1 for me to investigate #WontFix. > \nProbably need this. Did you check out WOCCatalog's location features to see if they work... correctly? #Resolved. >%(AdditionalDependencies);Accelerate.lib;AudioToolbox.lib;CoreImage.lib;CoreMotion.lib;GLKit.lib;OpenGLES.lib \nInteresting that these are newly added. Know why? #WontFix. >$(SolutionPublicHeadersDir) \nMight want the newer vsimporter version where IncludePaths don't get stomped. #WontFix. > \nThis is probably necessary for an \"AddressBook\" #Resolved. We should really be better about automatically adding these capabilities. +1 to me.\n\nIn reply to: 102806885 . @asimonov-msft Why are PROJECT_DIR, PROJECT_FILE_PATH, SOURCE_ROOT, and SRCROOT even needed in this file? Can we get rid of them altogether?. Converts to absolute path (it was useful to have a * in the path)\n\nIn reply to: 103060152 . Why? Then we'd have to run the script twice and so we'd unzip tools twice. At that point we should just be running vsimporter directly and not using this script at all. \n\nIn reply to: 103060288 . ..why build? There's no xcodeprojs under build.\n\nIn reply to: 103062579 . I suppose get-item would be more correct\n\nIn reply to: 103062479 . >14 \nIntended 15?. Why is this change needed?. >t \nnit: Capital T. Is increment an optional config? Briefly looking at the docs it seems this should be \"increment: Inherit\". . Why did this change?. >GitInfo \nChange to GitVersionTask. >propert \nnit: property. >porperty \nnit: you really don't like this word. >$(SolutionDir)..\\common\\winobjc.nuproj.common.props \nThis path seems wrong #Closed. Why is this import even needed for CFNetwork, CoreFoundation, Foundation, MobileCoreServices, Starboard... Nevermind\n\nIn reply to: 105063164 . >false \nDuplicate of line 6. >(WINOBJC_SDK_ROOT \n:'( I'd rather not need to have this set #Resolved. >     \nnit: extra space here and at end of file before \nWe really need a pre-commit xml formatting step. . Need to be updated to reflect 2017 and the new installer. Should be tested out with a clean install. This should look more like:\nCode tools -> NuGet package manager\nCompilers, build tools, and runtimes -> ? Most of those?\nSDKs, libraries, and frameworks -> Windows 10 SDK (10.0.10586.0 and 10.0.14393.0 if only building build.sln. 10.0.10240 can be used for some projects under tools)\n #Resolved. Okay, this is the Download and Installation section. Seems like this should be more of a \"Add WinObjC.Framworks package reference to your project\" section.\nThe full list of VS install options for WinObjC development should be included under the fancy Advanced Installation for Contributors and Ninjas section.\n\nIn reply to: 105712228 . >powershell \nNeeds to be Administrator Powershell (at least for me it requires Admin) #Resolved. >develop \nThis develop's license, not master's. IMO probably want to have the license that our releases will be associated with. They are currently the same though.. We should note here somewhere that this package is for VS 2017. Maybe compatibility notes specifically go in the PackageReleaseNotes section? At the very least change occurrences of Visual Studio to Visual Studio 2017 in the summary & description.. >visual studio \nnit: Capitalize Visual Studio. @rajsesh-msft\n\nIn reply to: 106002170 . >#1001: Already installed \nWouldn't hurt to Write-Host the already installed case.\nAlso, is there any indication that an install was successful besides it not failing? Is there Chocolatey magic that does that?. Debug builds for BuildMonitor have already failed during restore. I'm not so sure this will fix this issue. . >FixupWinObjCProjectReferences \nShould this be FixupWinObjCPackageReferences instead? #Resolved. nit #Resolved. >GetPackageContents; \nI'm a bit confused why it cares about GetPackageContents. >opts \nnit: Update var names to reflect changes in NSIndexSet.mm. >Path \nMake Path as ProjectJsonSearchPath instead. nit: extra empty lines. >Write-Host \"Adjusting $ProjectJsonFile package $packageName to new version $newVersion\" \n$ProjectJsonFile is going to print out the whole path. I suggest only writing out $ProjectJsonFile once before the foreach then making this just \"Adjusting $packageName to new version $newVersion\". It's only write-host output so either implementation won't block my signoff.. >No Latest daily using git tags. \nnit: Can you clean up this sentence. \"Does not use latest Daily Build packages from git tags\" or something.. ># only bother to iterate over dependencies that start with WinObjC and are \"*\" \nI like this implementation :+1:  . Please keep 15.0\n\nIn reply to: 107542980 . > This is where the fun starts. Any custom generic msbuild project goop goes here.  \nIs this comment still relevant?. >False \nIs this for build machine reasons?. > \nSo this check is needed anytime a nuproj has a ProjectReference on another nuproj? As in, we will need to make sure to edit the .nuproj file and add this check whenever we add a reference to another nuproj?\nAdditionally, when does SkipGetPackageContentsForOtherPlatforms get set?. Just picked 15.0.26228.4 and 15.0.26206.0 based on what I've seen but VS doesn't really care about VisualStudioVersion and MinimumVisualStudioVersion anyway. It'll update these two numbers as it pleases.\nIt really only cares about \"# Visual Studio 15\". That's where it's deciding compatibility for 2015 vs 2017.. Use pugixml for this. See VSTemplateProject.cpp.. >$extensions$ \nUse  in combination with pugixml instead. SBResourcesBuildPhase.cpp does this simpler. See SBResourcesBuildPhase::writeVCProjectFiles:\nString plistPath = bs.second->getValue(\"INFOPLIST_FILE\");. You don't seem to be using this function anymore. Revert changes in VSTemplateParameters.cpp/h. >Plist::readPlist(entitlementsPath.c_str(), pAny); \nNeeds to be relative to xcodeproj or something, not relative to the current dir.. nit: a comment here would be nice. Remove unused include. Remove unused includes. Remove. This is never defined/used.. nit: make this comment multiple lines. I think a couple other places have overrun comments as well. \nalso add a word: \"[...] project references as it can have issues with MSBuild [...]\" #Resolved. >false \nProjects in tools.sln can importer common-build.props/targets, tools-build.props/targets, or neither. Does this needed to be added elsewhere as well?. I agree but I was a bit unsure which ones to take out. Would it just be UIKit.Xaml.lib and Starboard.lib?. >; \nnit: extra ; #Resolved. >IsPackable; \nWhy does WinObjC.Packager get IsPackable here but winobjc.nuproj.common doesn't? #WontFix. Yep. That's a fun regex string alright. \ud83d\udc4f. Will this overwrite whatever AssemblyInfo.cs file is already included in a csproj? Or just add on to it?. Should these two targets be more.. nested? Are we guaranteed that the first PropertyGroup would get run first? As in, could PackageResourceVersion get set with PackageResourceVersion_Build and PackageResourceVersion_Revision before the first group sets them?. Can we get a bit more explanation of the intended uses for PackageResourceVersion_Build, PackageResourceVersion_Revision, and PackageResourceVersion?. nit: standardize on spacing/indentation\nAlso, nothing in the catch?. >  \nnitty nit nit since already looking at this section: extra space here. Add $(FixAdditionalOptionsLinkDependsOn) to safeguard against squashing this property during future changes.. nit: spacing\nAlso, should this be number 3?. Shouldn't this InternalSystemIncludePaths be in sbclang.props with the others?. This comment implies that Link should have a condition on it, which I believe it did before. Is that condition no longer needed?. Is this TODO still needed?. Logging doesn't have a deps\\prebuilt\\ directory. If this is supposed to be a generic \"include the stuff from the package\" thing, can you pull this out into another targets files for Logging and Language to include? Else get rid of Logging trying to include things from a location that it doesn't have.. I'm a bit confused/concerned how IsWinObjC is being used. It looks like it can only ever be set under this (and Logging's) '$(ConfigurationType)' != 'StaticLibrary' conditional. A name that better identifies when or why it should be set would be helpful. . I agree. I'd prefer all the InternalSystemIncludePaths standardized for this PR. And/or create another task to standardize sbclang.props/targets.. Where is _GenerateCurrentprojectAppxManifest defined? Also it's weird that project is lowercase.. It's unclear exactly which xml element is being modified here. . Where is GitVersionPath used?. It has to be named the PackageId for the targets & props to automatically be imported when the package is included. See Including MSBuild props and targets in a package.. ",
    "rayalarajee": "Thank you ...I am asking about how to prevent copying text on iOS \n. ",
    "ChangweiZhang": "@rajsesh-msft \nHudDemo.txt\n. @s5msft  I have fix camth error after change the setting to ' Objective C++ Code (-x objective-c++)'. But other errors happen now.\n\nthe log file:\nHudDemo (2).txt\n. ",
    "ashvarma": "tgmath.h which is a clang header is including cmath which is using the c++ keyword \"using\" and because this is being done while compiling a .m file - clang is error-ing out. Is there something we can do while configuring clang that will help indicate to clang how to deal with this scenario or would we have to look into updating the cmath file itself? We need to investigate this. \n. @schallquant, did you get past the issue? Please let us know if you need us to look into anything. \n. Closing the issue for now. Please reopen it if you are still hitting this and need our assistance. \n. All this should stay with the UIKit::Button content... so the declarations for Label and Layer that you've added should move below these lines.  #Resolved\n\nRefers to: Frameworks/UIKit.Xaml/ObjCXamlControls.h:75 in ff95a9a. \n. > #define CACompositorRotation90CounterClockwise 270.0f\nAll these seem to be used only by UIApplication.mm - makes me wonder if they should just be defined in that file. Not sure if they need to be defined as part of \"CACompositor\" ? #Resolved\n\nRefers to: Frameworks/include/CACompositor.h:117 in ff95a9a. \n. @edvv, This is awesome. Thanks for sharing! Really appreciate the feedback as well - so please keep it coming.\n. Repurposing this issue to track only the crash. \nWe will use #924 to track the text missing on button. . This is a stale issue. Closing out.  . I tried this on several previous releases\u00a0and the behavior\u00a0is the same. The sound pauses as does the graphics and activating/maximizing the app doesn't resume the app - it basically stays frozen (the\u00a0graphics doesn't \"restart\"). \nHere are the builds I tried - \n20161213.2\n20161130.1\n20160908.1. I tried this with both\u00a0release and debug\u00a0versions of the app - with build 20161213.1 - and I'm unable to repro this. Will follow up with Nick offline . We're seeing this fail in our recent lab run. :shipit:. We're doing a bunch of app launch perf work to improve this. And are using this app to validate the work. Closing this issue out. . I tried this locally and the app launches successfully . I don't see a white background - I do\u00a0see\u00a0a missing/black background though. . On the most recent build - 20170407.8 - I'm seeing issues. \nSpecifically - \non ARM - the initial state has misaligned text and selection\non x86 - the time picker had numbers missing e.g. the list started at 4... but when I scrolled it the numbers 1-3 appeared... this was consistent \n. We should split these up per class/framework and distribute the work. Assigning to Foundation as a starting point. . Tried on 2 separate machine - unable to repro this issue . This is a duplicate of #1977 . sorry I meant #1975 . Per Kelly - indeed a regression from the release build of 20170127 (Jan 27th).. The previous master build had the same issue on both ARM and x86. This was supposed to be fixed with #2150. I haven't tried this with an ARM develop build that had the fix for 2150 . By the way Climbers on ARM the link seems to work. So this seems to be x86 related. > WXFrameworkElement \nNit: All other forward declarations are done in a single place in this file, except this one.  #Pending\n. unclear to me - why did you remove this? #Resolved\n. > so that it can be used to steal/kill the focus for this UITextField \nunrelated to this change - this comment seems pretty \"light\" on details... and its not intuitive why we need to create an invisible button here... will follow up offline \n. Do we have a compiler bug/task that's tracking this? +Wes\n\nIn reply to: 97645904 . ",
    "LenoreMarlow": "Here is my log file. The file contrents were too large for the comment.\nThank you\nlog.zip\n. log.zip\nThank you for your help.  I have made the following changes\n In Package.appxmanifest - Change the Item Type from \"Clang source\" to \"App Package Manifest\"\nreceived the following errors\nLNK1120 2 unresolved externals\nLNK2001 unresolved external symbol __OBJC_CLASS_UIMenuController\nLNK2019 unresolved external symbol __OBJC_CLASS_UIMenuItem referenced in function -[TMAAppDelegateBase setupContextMenu]\nLNK2019 unresolved external symbol __OBJC_CLASS_UIMenuController referenced in function -[TMADisabledTextFieldRespondingView initiateContextMenu:]\nI added msvcrt.lib and msvcmrt.lib to the linker's Additional Dependencies property\nand received the error LINK : fatal error LNK1104: cannot open file 'MSVCRTD.lib'\ncorrected by modifying the project properties, select Linker from left. Add this to \"Additional Library Directories\":  C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\lib\nMy current log file is attached\n. Hello, I apologize for not getting back to you sooner.  Deadlines for existing projects force me to put this project aside for a short while.  I added the msvcrt.lib and msvcmrt.lib to my project after researching a LINK 2001 error unresolved external symbol __OBJC_CLASS_UIMenuController.  I has several errors:\nError   LNK1120 2 unresolved externals\nError   LNK2001 unresolved external symbol __OBJC_CLASS_UIMenuController\nError   LNK2019 unresolved external symbol __OBJC_CLASS_UIMenuItem referenced in function -[TMAAppDelegateBase setupContextMenu]\nError   LNK2019 unresolved external symbol __OBJC_CLASS_UIMenuController referenced in function -[TMADisabledTextFieldRespondingView initiateContextMenu:]\nAfter researching the error I found this and chose to add the files.  Not sure if they are necessary.\nLinker Tools Error LNK2001\nVisual Studio 2015 \nunresolved external symbol \"symbol\"\nCode references something (such as a function, variable, or label) that the linker can't find in the libraries and object files.\nThis error message is followed by fatal error LNK1120.\nPossible Causes\n\u2022 When upgrading a managed library or web service project from Visual C++ 2003, the /Zl compiler option is added to the Command Line property page. This will cause LNK2001. \nTo resolve this error, either add msvcrt.lib and msvcmrt.lib to the linker's Additional Dependencies property. Or, remove /Zl from the Command Line property page. For more information, see /Zl (Omit Default Library Name) and How to: Open Project Property Pages. \nThis lead to the next error:\nI followed the recommendations on Microsoft website to omit the default libraries by do this:\nTo set this compiler option in the Visual Studio development environment\n1.  Open the project's Property Pages dialog box. For details, see How to: Open Project Property Pages. \n2.  Click the C/C++ folder.\n3.  Click the Advanced property page.\n4.  Modify the Omit Default Library Names property.\nAfter this I received the error:\nLINK : fatal error LNK1104: cannot open file 'MSVCRTD.lib'\nGo to your project properties, select Linker from left. Add this to \"Additional Library Directories\":\n\"(Your Visual Studio Path)\\VC\\lib\"\nThis is where I added the libraries to the Additional Library Directories.\nI now have other errors.  Maybe I should not leave the msvcrt.lib and msvcmrt.lib in my project.  I can removed them if this is recommended.  I'm really trying to launch this project to see if tI can use this to get to the windows platform.\nI made the changes to the UIMenuController and UIMenuItem header files as specified.  My log is attached as I still cannot get it to successfully compile.\nlog2.zip\n. I made the following changes after considering the response from asimonov-msft as to why I included the msvcrt files.\n- Remove msvcrt.lib and msvcmrt.lib from Project Property Page/Linker/Additional Dependencies\n- Remove msvcrt.lib and msvcmrt.lib from Project Property Page/Linker/ Ignore Specific Default Libraries\n- Ignore All Default Libraries changed back to No\nNow I have just 4 errors related to the UIMenuController and UIMeniItem.  Maybe I did not make the changes for UIKIT_EXPORT_CLASS correctly\n1>------ Build started: Project: mobileTMAGOWin (MobileTMAGOWin\\mobileTMAGOWin), Configuration: Debug Win32 ------\n1>     Creating library C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.lib and object C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.exp\n1>TMATextFieldGeneric_A33174D2.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_UIMenuController referenced in function -[TMADisabledTextFieldRespondingView initiateContextMenu:]\n1>TMAAppDelegateBase_D61A9355.obj : error LNK2001: unresolved external symbol __OBJC_CLASS_UIMenuController\n1>TMAAppDelegateBase_D61A9355.obj : error LNK2019: unresolved external symbol __OBJC_CLASS_UIMenuItem referenced in function -[TMAAppDelegateBase setupContextMenu]\n1>C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.exe : fatal error LNK1120: 2 unresolved externals\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\n. Yes, made no difference. Will I need to run vsimporter again?  I am not sure if these files have been compiled into the project after running the importer or if I can just change the files in the winobjc folder.\n. After a full rebuild, I no longer get the errors.  I now have a few things to clean up and will update this thread with the status of the conversion to Bridges.\n. Last build, only 1 error. I attached the log file. I tried to decipher the log file and it looks like it could be something in the settings.\nMSB3073 The command \"\"C:\\winobjc\\msvc..\\bin\\Xib2Nib.exe\" \"....\\GOTools\\LinkedPhotosView_iphone.xib\" \"Debug\\LinkedPhotosView_iphone.nib\"\" exited with code -1. C:\\winobjc\\msvc\\sbresources.targets\nlog3.zip\n. Yes. Here it is.  Thank you\nLinked Photos xib.zip\n. I was able to build the application without any errors. The result is that application loads extremely slow but when it opens, the screen is black.  No content, no errors.\nLog5.zip\n. After extracting the new build, I replaced my original winobjc folder with the new one.  I had to copy libiconv.dll, libiconv.lib, UIMenuController.h and UIMenuItem.h from the original.  Rebuild the app and it fails. libiconv.dll, libiconv.lib I rebuilt in the original and they worked, the one from the new build generated errors. The UIMenuController.h and UIMenuItem.h file from the new build were still missing the UIKIT_EXPORT_CLASS so I copied those as well.\nFrom the log file:\nCreating library C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.lib and object C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.exp (TaskId:78)\n16:14:26.522     1>App.xaml.obj : error LNK2019: unresolved external symbol _EbrApplicationActivated referenced in function \"protected: virtual void __cdecl mobileTMAGOWin::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@App@mobileTMAGOWin@@M$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@Z)\n16:14:26.523     1>App.xaml.obj : error LNK2019: unresolved external symbol _EbrApplicationLaunched referenced in function \"protected: virtual void __cdecl mobileTMAGOWin::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched(class Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^)\" (?OnLaunched@?QIApplicationOverrides@Xaml@UI@Windows@@App@mobileTMAGOWin@@M$AAAXP$AAVLaunchActivatedEventArgs@Activation@ApplicationModel@4@@Z)\n16:14:26.528     1>C:\\Bridge4iOS\\mobileTMAGOWin\\Debug\\mobileTMAGOWin\\mobileTMAGOWin.exe : fatal error LNK1120: 2 unresolved externals\n                     The command exited with code 1120. (TaskId:78)\n                     Output Property: LinkSkippedExecution=False (TaskId:78)\n                   Done executing task \"Link\" -- FAILED. (TaskId:78)\n16:14:26.619     1>Done building target \"Link\" in project \"mobileTMAGOWin.vcxproj\" -- FAILED.: (TargetId:135)\n16:14:26.619     1>Done Building Project \"C:\\Bridge4iOS\\mobileTMAGOWin\\MobileTMAGOWin.vsimporter\\mobileTMAGOWin-WinStore10\\mobileTMAGOWin.vcxproj\" (Rebuild target(s)) -- FAILED.\n. My application is now building with no errors and the launch opens to a blank screen.  When debugging I am getting Source file not found - nsthread.mm not found. Do I need to include the winobjc folder \nhere are the details.\nLocating source for 'd:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm'. (No checksum.)\nThe file 'd:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm' does not exist.\nLooking in script documents for 'd:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm'...\nLooking in the projects for 'd:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm'.\nThe file was not found in a project.\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\cvt\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\msclr\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\sys\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\thr\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\amd64\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\arm\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\concrt\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\i386\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\linkopts\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\stl\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\vccorlib\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src\\vcruntime\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include\\'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfc'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\mfcm'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\src\\atl'...\nLooking in directory ''...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\crt\\src'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10240.0\\ucrt'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include'...\nLooking in directory 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\atlmfc\\include'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10240.0\\ucrt'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\um'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\shared'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\winrt'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Source\\10.0.10586.0\\ucrt'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\ucrt'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\um'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\shared'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.10586.0\\winrt'...\nLooking in directory 'C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6\\Include\\um'...\nThe debug source files settings for the active solution indicate that the debugger will not ask the user to find the file: d:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm.\nThe debugger could not locate the source file 'd:\\build\\agent3_work\\14\\s\\frameworks\\foundation\\nsthread.mm'.\n. It looks like things are working somewhat.  The emulator is opening, code is running however, it cannot establish a persistentStoreCoordinator.  I am lost looking at the log file to determine the problem. I see many files showing as deprecated, managedObjectContext.  This is worrying me a bit,.  After all this work, it the sqlite database is not supported what are my options?\nLog6.zip\n. How extensive would it be to replace the use of core data and the MOC?  I have seen several posts refering to implementing core data but do not see any progress.  this is a show stopper without a viable replacement or a supported implementation.\n. Thank you so much for your response.  I appreciate you letting me know that core data is in your sites for sometime in the future.  I do understand that it would be a tremendous undertaking to tackle core data.  I will look into Cocotron as we are still looking for a faster implementation of our enterprise iPad product written in XCode to be available on windows platform.  Please keep me posted or let me know how to get updates on any future development for core data.  Thank you Rajsesh\nBe well and happy holidays!. UIKIT_EXPORT_CLASS added to 2 files UIMenuItem.h and UIMenuController.h.\nFile location ..\\winobjc\\include\\UIKit\nUIKIT_EXPORT_CLASS Fix for UIMenu classes.zip\n. ",
    "asimonov-im": "@LenoreMarlow Looking at the logs, it appears that your project's Package.appxmanifest is mislabeled as a ClangCompile item.\nPlease try the following:\n1. Open your project in VS and locate Package.appxmanifest in Solution Explorer.\n2. Right click on the item and select Properties.\n3. Change the Item Type from \"Clang source\" to \"App Package Manifest\"\n. ",
    "sriranjanr": "@LenoreMarlow  I am getting the same linker LNK2019 problem\nSeverity    Code    Description Project File    Line    Suppression State\nError   LNK2019 unresolved external symbol _UIApplicationActivated referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@Z)   aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1 \nError   LNK2019 unresolved external symbol _UIApplicationLaunched referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched(class Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^)\" (?OnLaunched@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAVLaunchActivatedEventArgs@Activation@ApplicationModel@4@@Z) aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1 \nError   LNK1120 2 unresolved externals  aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\Debug\\aurioTouch\\aurioTouch.exe  1   \nCould some one tell me how to solve this.I am a newbie to winobjc and just installed vs2017 and I am trying to get simple IOS apps to run.. Hey @Ron2 \nI am getting the same LNK2019 errors. How do I get past it. I installed VS2017 community yesterday and I was trying to get an app to run.\nError LNK1120 2 unresolved externals aurioTouch (aurioTouch\\aurioTouch) C:\\Users\\user\\Downloads\\aurioTouch\\Debug\\aurioTouch\\aurioTouch.exe 1\nError LNK2019 unresolved external symbol _UIApplicationActivated referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@app@aurioTouch@@m$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@z) aurioTouch (aurioTouch\\aurioTouch) C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1\nError LNK2019 unresolved external symbol _UIApplicationLaunched referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched(class Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^)\" (?OnLaunched@?QIApplicationOverrides@Xaml@UI@Windows@@app@aurioTouch@@m$AAAXP$AAVLaunchActivatedEventArgs@Activation@ApplicationModel@4@@z) aurioTouch (aurioTouch\\aurioTouch) C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1\nPlease let me know how you overcame these errors... I followed Ron's suggestions, made a separate branch and put the files in another folder and was able to get the samples running...cheers. @konisx  were you able to find a solution to this problem.I am getting the same problem as well.. @MSFTFox \nHi Henry, I did not touch the frameworks packages at all.I am totally new to all this.I just installed winobjc using chocolate.I also installed VS2017 (just yesterday, so everything should be latest) community as per the instructions in wiki and followed the same to use vsimporter. I did not do anything new or tricky but I get these LNK2019 errors as I mentioned above.. @MSFTFox \nHow do I update winObjC to your latest updated branch? I am sort of new to git and all this. I ran \"choco upgrade winobjc-tools\" but it did not install your update. How shall I update this? More specifically how do I get your updated vsimporter to work. I just downloaded the sources of your update. Should I compile the updates sources in VS to get a new vsimporter.exe file and then use that?. I also did a --pre develop install of winobjc but I am still getting those errors. How do I bring the latest VS2017 update fix into winobjc?\nAnd I downloaded the latest sources.I tried running tools.sln but there are many errors and warning. When I tried to build it there are more warning.I do not understand why this is happening, I downloade the latest VS2017 community just yesterday.. My error log\nSeverity    Code    Description Project File    Line    Suppression State\nError   LNK1120 2 unresolved externals  aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\Debug\\aurioTouch\\aurioTouch.exe  1 \nError   LNK2019 unresolved external symbol UIApplicationActivated referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@Z)   aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1 \nError   LNK2019 unresolved external symbol _UIApplicationLaunched referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched(class Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^)\" (?OnLaunched@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAVLaunchActivatedEventArgs@Activation@ApplicationModel@4@@Z) aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1 \n. Somebody posted this in another forum.\n\"That dialog doesn't do what you hope it does, you are not actually linking your static library project. It used to in old VS versions before VS2010, now it only sets the build order.\nInstead, use Project + Properties, Common Properties, References. Click the Add New Reference button and tick your library project.\"_\nNow I tried to add the .lib file as reference in VS2017 (I do not know if I am doing it right because there is no common properties in VS2017) but it says--- could not add a reference as it is not a type or version the current project can use.... I downloaded the latest source from git and tried to compile the tool.sln but I get the following errors.\nSeverity   Code    Description Project File    Line    Suppression State\nError   MSB4057 The target \"CreateManifestResourceNames\" does not exist in the project. WinObjC.Language    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets  2688    \nError   MSB4057 The target \"CreateManifestResourceNames\" does not exist in the project. WinObjC.Packaging   C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets  2688    \nError   MSB4057 The target \"CreateManifestResourceNames\" does not exist in the project. WinObjC.Logging C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets  2688    \nError   MSB4057 The target \"CreateManifestResourceNames\" does not exist in the project. WinObjC.Tools   C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets  2688. @MSFTFox  and @edvv \nThe visual studio I have is 15.4.0. Can I downgrade to older version 15.2.0? Is it possible to do that and how?\nI have been searching and I could not find a way or site to download VS2017 community 15.2 version.. @MSFTFox when probably can you merge and give us an updated package? Could you please tell us the approximate time..Thanks.. @MSFTFox any news about the update\n...we are waiting for your reply and update..please let us know... My current version is 15.4.0 . How do I update this version of visual studio community as you suggested. I cant see any update tab in visual studio.. I updated to 15.4.1 using the installer and I still get the same errors @MSFTFox \nSeverity   Code    Description Project File    Line    Suppression State\nError   LNK1120 2 unresolved externals  aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\Debug\\aurioTouch\\aurioTouch.exe  1   \nError   LNK2019 unresolved external symbol _UIApplicationActivated referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@Z)   aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1   \nError   LNK2019 unresolved external symbol _UIApplicationLaunched referenced in function \"protected: virtual void __cdecl aurioTouch::App::[Windows::UI::Xaml::IApplicationOverrides]::OnLaunched(class Windows::ApplicationModel::Activation::LaunchActivatedEventArgs ^)\" (?OnLaunched@?QIApplicationOverrides@Xaml@UI@Windows@@App@aurioTouch@@M$AAAXP$AAVLaunchActivatedEventArgs@Activation@ApplicationModel@4@@Z) aurioTouch (aurioTouch\\aurioTouch)  C:\\Users\\user\\Downloads\\aurioTouch\\aurioTouch.vsimporter\\aurioTouch-WinStore10\\App.xaml.obj 1. \nproject-bxproj.txt\nAlso I tried to run a project from samples WOCCatalog. It gave me the following errors..\nSeverity   Code    Description Project File    Line    Suppression State\nError   MSB4062 The \"GitVersionTask.GetVersion\" task could not be loaded from the assembly C:\\Users\\user\\Downloads\\WinObjC-0.2.170609\\common\\gitversiontask\\4.0.0-beta0011\\build\\GitVersionTask.dll. Could not load file or assembly 'file:///C:\\Users\\user\\Downloads\\WinObjC-0.2.170609\\common\\gitversiontask\\4.0.0-beta0011\\build\\GitVersionTask.dll' or one of its dependencies. The module was expected to contain an assembly manifest. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.  WOCCatalog (WOCCatalog\\WOCCatalog)  C:\\Users\\user\\Downloads\\WinObjC-0.2.170609\\common\\gitversiontask\\4.0.0-beta0011\\build\\GitVersionTask.targets    68\n. I put the UIKit.lib and UIKit.dll in the project folder. In project properties in visual studio I also added the path of UIKit.lib in the additional dependencies linker tab but still I get the same errors @bbowman . @MSFTFox @bbowman I also cloned the repo of the stable release and tried to run the samples but they wont compile.. After lot of debugging I was able to get the HelloOpengl app to run..I will see if I can run WOCCataloge. @konisx I am attaching a project that I am trying to compile. Could you please tell me how do I add these sources to the sample sources and make this work. This is the first time I am trying to develop an Iphone app.\naurioTouch.zip\n. @bbowman I am attaching the higher verbosity build output. Please have a look at it.\nhigher verbosity build output.txt\n. ",
    "cp2024": "I am so sorry I am new to this programming so I'm trying to get a better understanding of everything if you can find it in your heart please help me to learn and understand my telling me and explaining things thank you\n. ",
    "Alan-Python": "Date: Tue, 16 Aug 2016 10:44:26 -0700\nFrom: notifications@github.com\nTo: WinObjC@noreply.github.com\nCC: azaharia@live.com; comment@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] Handle core text right and center alignment (#873)\nping\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.jghghfjnfbffbfbssegtfevyefftfhbffvffv dvgdcfnf ff  f vvdd v vfv b bv v n bb cbbfbkdvfb dv dd b v vssbefebveve vfeb e cf bf vf  v bvn 32sssevge beveebv\nfhfgfhbbvff vfgnbfbvfvbfvb  vffhbfvnb\n#Closed\n. Date: Fri, 19 Aug 2016 09:49:44 -0700\nFrom: notifications@github.com\nTo: WinObjC@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] AddressBook Framework -- Mutable MultiValue Support (#893)\n\ud83d\udd50\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.ddtedgfgffgeeeeeevggfgdgddgdfddbvggsseeeeeeeegfcgfg    sssseegvfvf fbvfdvvdfbvfcbbbsssseeeeeeeffvfhfgffffffgfgfgfggfgf  eebfbbveeeerrrcvvvvdhhvhbvhhvchhc m,  v cb \nc nbv m mbm bm  m\n. Date: Tue, 26 Jul 2016 06:50:54 -0700\nFrom: notifications@github.com\nTo: WinObjC@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] Basic ReplacePathWithStrokedPath Implementation (#625)\nIn Frameworks/CoreGraphics/CGContextCairo.mm:\n\n\n// on intermediate curve lines\nif (delta < M_PI || delta > (1.98f * M_PI)) {\nlineJoin = CAIRO_LINE_JOIN_BEVEL;\n}\n  +\nif (lineJoin == CAIRO_LINE_JOIN_MITER) {\nCGFloat m1 = tan(angle1);\nCGFloat b1 = p1.y - (m1 * p1.x);\n  +\nCGFloat m2 = tan(angle2);\nCGFloat b2 = p2.y - (m2 * p2.x);\n  +\nCGFloat x = (b2 - b1) / (m1 - m2);\nCGFloat y = 0;\n// If m1 is very large it's probably a vertical line\nif (m1 > 1000000) {\n\n\nThe number is arbitrary, m1 > 1000000 can be replaced with angle1 == M_PI / 2 || angle1 == M_PI * 3 / 2 (with float approximations).\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.BV JNMVFEBJLFF,MFFCMFFEHEHNERHRNFHHFRTNN VFHNFNFBHGHNHGJLFGTUI;TGTKIVGJKGVFGFNHFBGFFHFHFVFB FBFHBFVFBFBFBHNVBVG ED,DHNEDBEBEHNN NMMMNVRRMNJRNNRR RNRRMM  GMFM F F VGNVGN BEEEEBENEBEHJNGVGV NVG     VNLGNFFJNFNNFVVFNNVGGFNVGFN VFG NVFG N\nVFG MM G G  B B B M\n. Date: Fri, 12 Aug 2016 10:54:46 -0700\nFrom: notifications@github.com\nTo: WinObjC@noreply.github.com\nSubject: Re: [Microsoft/WinObjC] Handle core text right and center alignment (#873)\nIn Frameworks/CoreText/CTFramesetter.mm:cvfffgsederrf  nn\n\n-        lineRange.length = pos - curIdx;\n-        CTLineRef line = CTTypesetterCreateLineWithOffset((CTTypesetterRef)(_CTTypesetter*)frameSetter->_typesetter, lineRange, 0.0f);\n\nfloat ascent = 0.0f, descent = 0.0f, leading = 0.0f;\nfloat width = CTLineGetTypographicBounds(line, &ascent, &descent, &leading);\n\n-        float lineHeight = ascent - descent + leading;\n\nif (ret) {\nCGPoint lineOrigin;\nlineOrigin.x = 0.0f;\nlineOrigin.y = y - ascent;\n[ret->_lines addObject:(id)line];\nret->_lineOrigins.push_back(lineOrigin);\n// Only fill in frame if there is text\nif (CFAttributedStringGetLength(reinterpret_cast(frameSetter->_typesetter->_attributedString))) {\n\n\nreinterpret_cast \nUse static_cast here, reinterpret is quite a bit stronger than needed for this.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n#Closed\n. ",
    "schallquant": "Hi,\nI downloaded this one: 0.2.160914 (September 14, 2016)\nthe version.txt file says:\n9/8/2016 4:24:51 PM \n\"2579bca094639f0b6fbb1791e0101c60730d65b8\"\nThanks\n. Thanks for replying, but I already use update 3.\nDo you have other ideas?\n. ",
    "v-brflem": "@rajsesh-msft excellent, thanks for the update.  If I build the latest repro, will it have the fix you mentioned or should I wait for the next update?\n. ",
    "MyCADDev": "Here is another instance of \"An internal error has occurred in the compiler\"\n\n. I want to give some context to what we are trying to do. We want to share non-UI code written in Java between Android, iOS and Windows using J2ObjC and WinObjC. \nJ2ObjC has become very stable and everything works in XCode.\nWe are trying to compile the generated Objective-C (generated using J2ObjC) in Windows using the WinObjC bridge.\nSeveral compiler errors got fixed in WinObjC 0.2.160927. These are the last two which are remaining in our code.\nThanks in advance. WinObjC is a very promising project!!\n. OK @antoine-haas I will make a small application with this error.\nIt will take me a few days. Thanks for your support.. ",
    "jcamachov": "@rajsesh-msft This is the log:\npch.cpp\n\u00a0 App.xaml.cpp\n\u00a0 XamlTypeInfo.Impl.g.cpp\n\u00a0 ConsumeRuntimeComponent.cpp\n\u00a0 objc_2stage_init.cpp\n\u00a0 Note: Setting MaxClangProcesses to 1 because Modules are enabled.\n\u00a0 ....\\Maristas\\Clases\\WebServices\\TouchXML\\CXMLDocument.m\nC:\\Users\\Javier\\Desktop\\Desarrollo\\Maristas_iOs_Source\\Maristas\\Clases\\WebServices\\Soap/SoapArray.h(63,100): error : expected ':'\n. I updated Visual Studio to \"Update 3\" and the same issue persists... \nAnybody knows what is the problem?... I tried to compile several of my iOs projects and I can't be able to run on visual studio anyone with Windows Bridge for iOs. I hope the bridge go forward in order to compile the first one project and offer all my projects to windows mobile platform too.\n. ",
    "spalda2": "Well, yes..I read all of that:)\nBut I don't use methods just so that they keep returning the same value and do nothing or close to nothing...\nIf i'm to write an issue for every single method it'll be a lots of issues:)\nAnd try i can start implementing these stubs but not sure if it's not gonna take me more time then simply convert the whole lot into css/js and run in on own webkit port on all platforms then...\nBecause if you want this to take off then it simply MUST have the basic functionality for a simple app to run and set UI and then people start contributing.\nAnd setting a tag on a view or handling products and payments or having attributed text is such a basic functionality.\nE.g. one can live without animation with spring attenuation but not without the above. \n. Ok, i'll supply a list ordered by importance as per my subjective needs....\n.    With all due respect the whole point of winobjc bridge is to BE compatible with the iOS app and NOT the other way around, as you suggesting. As i said earlier: there is is fine border, work effort-wise, at least for me, between using this bridge and resorting to have own webkit port for all platforms having my app running as CSS/JS/HTLM.\nAnyway I think it's sensible from me supply a priority list, however in the meantime i posted another issue whereby the app doesn't even start which is far more important then this. So once the app at least starts i can post the priority list\n. Ah, sorry, overlooked that. It\u2019s quite easy to work around it though\u2026\nP\n\nOn 20 Oct 2016, at 22:28, Raj Seshasankaran notifications@github.com wrote:\nThis is the same issue as #598 https://github.com/Microsoft/WinObjC/issues/598. Unfortunately, COM is not initialized when setting up statics.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/Microsoft/WinObjC/issues/1198#issuecomment-255218709, or mute the thread https://github.com/notifications/unsubscribe-auth/AA7lLC0M5NqWdg0woL5PzcfVxWMqEpvMks5q187ugaJpZM4KcjFa.\n. Hi,\n   Sorry I got delayed on my trip. I have replied by mail to the previous comment, but not sure if you got it. I was on a trip with no access to my other pc wehere i have it all set up. I was to return on the 11th but got delayed. Will return on the 14th and then i'll test it.\nThanks. I tested it now and it seems to be passing that point...getting another failure though shortly after as per new issue raised.. I know and i do it every time the file is re-generated..very annoying indeed and clearly a bug in the importing tool.. ok...i see that in that commit....I'll re-import the project then..... I'm very sorry but this suggestion would break most of the several years perfectly working code on iOS. This bridge is supposed to be compatible with object C runtime and NOT the other way around. You suggestion denies the purpose of the whole thing. \n\nMoreover there's many class clusters in objective C and almost all of them have categories even in the SDK itself.\nSo I don't see this even as a workaround let alone a \"fix\" that should be done in the source code/\nThe actual instance type is whatever the runtime instantiates when calling [[NSString alloc] intxxx] the fact that it's  _NSCFString and therefore it doesn't see category on NSString is clearly the objective C runtime problem and it clearly makes your this bridge not compatible in one of the most crucial and useful features of objective C.\nRegards\nP. You mean either one of these workarounds?:\n\nDefine the categories in the app project (per @rupertdaniel).\ndefine a dummy \"C\" function in the .m file that implements the extension. Call the dummy function from app initialization code (any file in the app project).\n\nWell the suggestion 1 is obviously useless because it prevents the projects from using statically linked lib (because then everything that references the category has to go to the main app).\nThe suggestion 2 is manual replacement of linker not working correctly on your side as you mentioning. Not working linker is a worrying sign. It's not like the category method is never called or called via reflection. The method call is clearly visible and it's called from the static lib code not from the main app code, so it doesn't require to be exported from the lib in this case and I'm not getting any linker warning as mentioned in #236 so this doesn't seem as a duplicate of it.\nAnd to be honest if i wanted to help here i wouldn't even know where to start from what i can see where i sit.\nRegards\nP\n. ",
    "davidchisnall": "This looks like it's specific to the MS version of clang: the initialisation is correct here (which hasn't been modified upstream for 2 years).  With upstream clang, this code:\n```objc\nstruct X { int x,y,z,a,b,c; };\n@interface X\n- (struct X)y;\n@end\nint ex(Xx)\n{\n    [x y];\n}\nGenerates this IR:llvm\ndefine i32 @ex(%0 %x) #0 {\nentry:\n  %retval = alloca i32, align 4\n  %x.addr = alloca %0, align 8\n  %tmp = alloca %struct.X, align 4\n  %null = alloca %struct.X, align 4\n  ; struct X value initialised to 0 here.\n  store %struct.X zeroinitializer, %struct.X %null, align 4 \n  store %0 %x, %0 %x.addr, align 8\n  %0 = load %0*, %0 %x.addr, align 8\n  %1 = icmp eq %0 %0, null\n  br i1 %1, label %continue, label %msgSend\nmsgSend:                                          ; preds = %entry\n  %2 = bitcast %0 %0 to i8\n  call void bitcast (i8 (i8, ...) @objc_msgSend_stret to void (%struct.X, i8, i8))(%struct.X sret %tmp, i8 %2, i8 bitcast ([2 x { i8, i8 }] @.objc_selector_list to i8)), !GNUObjCMessageSend !2\n  br label %continue\ncontinue:                                         ; preds = %msgSend, %entry\n  ; Using the zero-initialised version if we didn't do the message send.\n  %3 = phi %struct.X [ %tmp, %msgSend ], [ %null, %entry ] \n  %4 = load i32, i32 %retval, align 4\n  ret i32 %4\n}\n``\nNote, however, that the ObjC language ref makes this explicitly undefined behaviour, because NeXT considered this approach and decided it was too expensive (back in the days of 25MHz CPUs and 8MB of RAM).  I added this code path to clang 6-7 years ago because it makes portable code quite tricky to write, because whetherobjc_msgSendorobjc_msgSend_stret` is called depends on the ABI and, in particular, a lot of code broke on SPARC as a result of it treating things as stret that weren't on most other platforms (and people are far more likely to complain if code works on i386 OS X and not on SPARC OpenBSD with GNUstep than vice versa).\nApple adopted it a little bit later, but I think it wasn't until OS X 10.7 or 10.8 that this behaviour became reliable, and code that expects to run with older versions of Apple's toolchain shouldn't rely on it.. In the upstream x86-64 objc_msgSend implementation, we have support for tracing entry to and exit from methods invoked via the objc_msgSend family.  This comes with around a 10-20% performance hit on message sending benchmarks, so it's not enabled by default.. The getenv usage is only for debugging, so hiding it behind a #ifndef NDEBUG or similar would be fine.. Do you have any changes for block_to_imp.c?  This file uses unistd.h and mprotect, so presumably don't work on Windows out of the box.... It should be fine to use weak references as values in a std::map if the type of the value is __weak qualified.  This is explicitly supported by clang and I've used it in other projects.  The only issue occurs when you use __weak-qualified values as keys, because the weak object becoming null changes its ordering (and its hash, if you're using std::unordered_map or similar). \nFrom the C++ perspective, a __weak-qualified object pointer is a C++ type that has a non-trivial constructor, copy constructor, and destructor.  When you copy (as long as you don't just memcpy, which would also break any other C++ types with these characteristics) the compiler will insert calls to the relevant runtime functions.. I had a set of templates for another project that had to build with pre-ARC compilers, which did the same thing.  I prototyped an ObjC++ NSHashTable a few years ago, but decided not to bother trying to persuade GNUstep to accept ObjC++.  I used a class cluster (which is safe for NSHashTable, because subclassing is not allowed), where each subclass exported a set of primitive methods that invoked a specialisation of a C++ template, which you instantiated with the set of options provided to NSPointerFunctions to give the correct behaviour for copy, move, and so on.  I suspect that this is how Apple implements it, because the API seems to have been designed with this kind of implementation in mind.. ",
    "ali1997": "i have technical preview . and sdk is technical preview . hope to be compatible with other verisons\n. i didnt know why it is says when i try to convert it is says you should install sdk for create uwp apps but it is already installed ! . ",
    "bebauer-msft": "Found an additional issue that may result from this flickering. \nIf you tap pages fast enough and happen to tap during transition (in the flickery part), you will end up losing one of the pages and making the paging completely broken.. @rajsesh-msft Yes this is a regression. It used to all fit on screen upon initially opening the page.. After rebooting the device I am unable to get this to repro. Must have been an issue with the device. Closing for now.. ",
    "shenzyapp": "Hi @antoine-haas \nMany thanks to your info. Do you know if WinObjC will enable ads feature?\nThank you.. Hi\nNot at all.\n@iPhone\n\n\u5728 2017\u5e742\u670813\u65e5\uff0c\u4e0a\u53483:12\uff0cRomascu notifications@github.com \u5199\u9053\uff1a\nAny news on this? Thanks.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Romascu": "Any news on this? Thanks.. ",
    "GreatKeeper": "The toolset I provided\u00a0is a chk build, so that we can test this feature.\u00a0We normally use a signed ret build for\u00a0the develop branch. I should provide\u00a0a signed toolset when we are ready to merge, unless\u00a0I'm misunderstanding something?. ",
    "MikaelLeGrand": "@ArnOmsft , no problem for sharing the code you want to see :\nimport \nimport \n@protocol SlideNavigationControllerDelegate \n@optional\n- (BOOL)slideNavigationControllerShouldDisplayRightMenu;\n- (BOOL)slideNavigationControllerShouldDisplayLeftMenu;\n@end\ntypedef  enum{\n    MenuLeft,\n    MenuRight,\n}Menu;\n@protocol SlideNavigationContorllerAnimator;\n@interface SlideNavigationController : UINavigationController \n@property (nonatomic, assign) BOOL avoidSwitchingToSameClassViewController;\n@property (nonatomic, assign) BOOL enableSwipeGesture;\n@property (nonatomic, assign) BOOL enableShadow;\n@property (nonatomic, strong) UIViewController rightMenu;\n@property (nonatomic, strong) UIViewController leftMenu;\n@property (nonatomic, strong) UIBarButtonItem leftBarButtonItem;\n@property (nonatomic, strong) UIBarButtonItem rightBarButtonItem;\n@property (nonatomic, assign) CGFloat portraitSlideOffset;\n@property (nonatomic, assign) CGFloat landscapeSlideOffset;\n@property (nonatomic, assign) CGFloat panGestureSideOffset;\n@property (nonatomic, strong) id  menuRevealAnimator;\n\n(SlideNavigationController *)sharedInstance;\n(void)switchToViewController:(UIViewController *)viewController withCompletion:(void (^)())completion __deprecated;\n(void)popToRootAndSwitchToViewController:(UIViewController *)viewController withSlideOutAnimation:(BOOL)slideOutAnimation andCompletion:(void (^)())completion;\n(void)popToRootAndSwitchToViewController:(UIViewController *)viewController withCompletion:(void (^)())completion;\n(void)popAllAndSwitchToViewController:(UIViewController *)viewController withSlideOutAnimation:(BOOL)slideOutAnimation andCompletion:(void (^)())completion;\n(void)popAllAndSwitchToViewController:(UIViewController *)viewController withCompletion:(void (^)())completion;\n(void)bounceMenu:(Menu)menu withCompletion:(void (^)())completion;\n(void)openMenu:(Menu)menu withCompletion:(void (^)())completion;\n(void)closeMenuWithCompletion:(void (^)())completion;\n(void)toggleLeftMenu;\n(void)toggleRightMenu;\n(BOOL)isMenuOpen;\n\n@end\nI hope this could help...\n. \n@weswmsft Sorry to have forgotten lines numbers... I hope this screenshot could help this time ;o). ",
    "arjun-msft": "I'm seeing white background on the latest build as well. :shipit:. ",
    "venkatkongara": "@oliversa-msft \nLooks like the cause of the crash is when I try to insert sublayer above view's super layer. It fails on this assert statement in the below defined method in CALayer.mm. This works well in ios without crash.\n/\n @Status Interoperable\n/\n- (void)insertSublayer:(CALayer)layer above:(CALayer*)aboveLayer {\n    int curLayerPos = priv->indexOfChild(aboveLayer);\n    if (curLayerPos == 0x7fffffff) {\n        assert(0);\n    }\n[self insertSublayer:layer atIndex:curLayerPos + 1];\n\n}\n. @rajsesh-msft \nstatic const void * AFNetworkReachabilityRetainCallback(const void *info) {\n    return Block_copy(info);\n}\nstatic void AFNetworkReachabilityReleaseCallback(const void *info) {\n    if (info) {\n        Block_release(info);\n    }\n}\nThese are the defined functions in a .m file with #import  at the top of the file. The problem seems to be that the Block_releae/Block_copy Macros are appearing as unresolved symbols to the clang even with #import(THis is where macros are defined in the WINOBJC source code.)\n. @tadam-msft Yes, the other work around right now I could use is by creating and adding every individual constraint to its superview(instead of simply auto creating constraints array from VFL).. ",
    "kzu": "The legacy 2015 vsix generates projects that are not aligned with VS2017. \nGiven we're only a couple weeks from the official release of VS2017, I wouldn't set the wrong expectation from the get go.. ",
    "sachinakhaire": "@interface UIViewController ()\n    {\n        UIImageView productImage;\n        UILabel productNameLabel;\n        UILabel productDescLabel;\n        UILabel questionLabel;\n    }\n    @property (nonatomic, strong) UIScrollView *dataScrollView;\n    - (void)viewDidLoad\n    {\n        [super viewDidLoad];\n        dataScrollView  = [[UIScrollView alloc] init];\n        // Product Details View\n        productImage = [[UIImageView alloc] init];\n        productImage.translatesAutoresizingMaskIntoConstraints = false;\n        [productImage setContentMode:UIViewContentModeScaleAspectFit];\n    productNameLabel = [[UILabel alloc]init];\n    productNameLabel.text =q_ProductName;\n    productNameLabel.textAlignment = NSTextAlignmentCenter;\n    productNameLabel.numberOfLines = 0;\n    productNameLabel.lineBreakMode = NSLineBreakByWordWrapping;\n    productNameLabel.translatesAutoresizingMaskIntoConstraints = false;\n    //productNameLabel.backgroundColor = [UIColor whiteColor];\n    productNameLabel.font = [UIFont boldSystemFontOfSize:17];\n\n    productDescLabel = [[UILabel alloc]init];\n    productDescLabel.text =q_ProductDesc;\n    productDescLabel.textAlignment = NSTextAlignmentLeft;\n    productDescLabel.numberOfLines = 0;\n    productDescLabel.lineBreakMode = NSLineBreakByWordWrapping;\n    productDescLabel.translatesAutoresizingMaskIntoConstraints = false;\n    //productDescLabel.backgroundColor = [UIColor whiteColor];\n    productNameLabel.font = [UIFont boldSystemFontOfSize:14];\n    // Question View\n    questionLabel = [[UILabel alloc]init];\n    questionLabel.text =@\"* Question:\";\n    questionLabel.textAlignment = NSTextAlignmentLeft;\n    questionLabel.numberOfLines = 0;\n    questionLabel.lineBreakMode = NSLineBreakByWordWrapping;\n    questionLabel.translatesAutoresizingMaskIntoConstraints = false;\n\n    [self.view addSubview:dataScrollView];\n\n    [dataScrollView addSubview:productImage];\n    [dataScrollView addSubview:productNameLabel];\n    [dataScrollView addSubview:productDescLabel];\n    [dataScrollView addSubview:questionLabel];\n\n    dataScrollView.translatesAutoresizingMaskIntoConstraints  = NO;\n    [dataScrollView setScrollEnabled:YES];\n    [dataScrollView setAlwaysBounceVertical:YES];\n\n\n    NSDictionary* viewsDictionary = NSDictionaryOfVariableBindings(dataScrollView);\n    [self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"H:|[dataScrollView]|\" options:0 metrics: 0 views:viewsDictionary]];\n    [self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"V:|[dataScrollView]|\" options:0 metrics: 0 views:viewsDictionary]];\n\n    NSDictionary *productImageDict = NSDictionaryOfVariableBindings(productImage,dataScrollView);\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"H:|-3-[productImage(80)]\" options:0 metrics: 0 views:productImageDict]];\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"V:|-[productImage(65)]\" options:0 metrics: 0 views:productImageDict]];\n\n    NSDictionary *productNameDict = NSDictionaryOfVariableBindings(productNameLabel,productImage,dataScrollView);\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"H:[productImage(80)]-3-[productNameLabel]-|\" options:0 metrics: 0 views:productNameDict]];\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"V:|-[productNameLabel(>=25)]\" options:0 metrics: 0 views:productNameDict]];\n\n    NSDictionary *productDescDict = NSDictionaryOfVariableBindings(productDescLabel,productNameLabel,productImage,dataScrollView);\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"H:[productImage(80)]-3-[productDescLabel]-|\" options:0 metrics: 0 views:productDescDict]];\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"V:[productNameLabel(>=25)]-[productDescLabel(>=25)]\" options:0 metrics: 0 views:productDescDict]];\n\n    NSDictionary *productquestionLabel = NSDictionaryOfVariableBindings(productDescLabel,productNameLabel,productImage,dataScrollView,questionLabel);\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"H:|-[questionLabel]-|\" options:0 metrics: 0 views:productquestionLabel]];\n    [dataScrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@\"V:[productNameLabel(>=25)]-[questionLabel]\" options:0 metrics: 0 views:productquestionLabel]];\n}\n\n}. ",
    "onovotny": "I put this in a package on this MyGet feed: https://www.myget.org/F/msbuildsdkextras/api/v3/index.json. Package is Microsoft.NuGet.Build.Tasks.Workaround. ",
    "ditta95aR": "2248. d5e46c8.",
    "rainersigwald": "VS2017 moved some MSBuild evaluations to a separate process (a worker MSBuild.exe, instead of the main VS devenv.exe). I suspect that you're right and devenv.exe was squelching the windows but MSBuild itself isn't. I don't think anything in MSBuild itself would have changed this recently.. ",
    "mattmunich": "\nDid you happen to have already installed any winobjc VSIXs?\n\nNeither laptop (community or enterprise).  I am now installing the Xamarin Tooling on my community laptop and will report back later.. ",
    "esa-h": "I have not tried it with VS 2015 and I don't have a repro app to share. It is easy to just add the IBActions programmatically so this is not a critical issues for me.. Hello @yiyang-msft , thank you for your answer but I was not able to hide the thumbtooltip. An example project would be great.\nI think that hiding the thumbtooltip could be a good idea as iOS apps don't have thumbtooltips and apps already use some way to tell the user the value of the slider.\nIn my case some integer sliders can have min value of 1 and max value 100 and some min value 1 and max value 10,000. If I could hide the thumbtooltip that would be all I would need.. Yes, that would be great. Thank you!. ",
    "teras": "Indeed it looks possible to create C/C++ static libraries, I also found the walkthrough for it. \nFor my needs though, I haveto use Objective-C files (since the original files are in Objective C).\nI tried the obvious tricks to do so, but I was unable to succeed. No Objective C (.m) file was properly recognized ad compiled.\nAm I missing something?\nIn case building static libraries with ObjC content is impossible right now, as a last solution, is it at least possible to create dynamic libraries with ObjC, or is this likewise not supported yet?. Indeed, this worked. Thank you.. ",
    "nathpete-msft": "@jaredhms looked into this issue before, and I think he might have better understanding on what needs to be done to resolve this.. \nReview status: 0 of 16 files reviewed at latest revision, 5 unresolved discussions, some commit checks failed.\n\nFrameworks/UIKit.Xaml/TextField.xaml.cpp, line 428 at r1 (raw file):\n\n```cpp\n}\nvoid TextField::_SetBackgournd() {\n```\n\nTypo\n\nFrameworks/UIKit.Xaml/TextField.xaml.h, line 246 at r1 (raw file):\n\nobjc\n    void _SetEnabled();\n    void _SetForeground();\n    void _SetBackgournd();\n\nTypo\n\ntests/functionaltests/UXTestHelpers.mm, line 230 at r1 (raw file):\n\n```XML\nCGFloat r1, g1, b1, a1;\n[col1 getRed:&r1 green:&g1 blue:&b1 alpha:&a1];\n\n```\n\nI don't think this works if supplied a UIColor that isn't in the RBG color space (ie. [UIColor grayColor]).\nI handled this by extracting the CG color components and mapping them based on color space, here: https://github.com/Microsoft/WinObjC/pull/2608/files#diff-1ffe8a84e54a7ef5d70e87484bf501a7R163\n\ntests/functionaltests/Tests/UIKitTests/UILabelTests.mm, line 471 at r1 (raw file):\n\nXML\n            auto colorBrush = textBlock.Foreground().as<Media::SolidColorBrush>();\n            ASSERT_TRUE(colorBrush);\n            EXPECT_TRUE(UXTestAPI::compareRGBAValues(UXTestAPI::ConvertWUColorToUIColor(colorBrush.Color()), label.textColor));\n\nAny reason not to use the existing UXTestAPI::IsRGBAEqual for all of these checks? It already takes a SolidColorBrush and a UIColor as parameters to compare for you.\n\ntests/functionaltests/Tests/UIKitTests/UITextFieldTests.mm, line 145 at r1 (raw file):\n\n```XML\n            EXPECT_TRUE(textBox);\n        textField.placeholder = @\"placerholder\";\n\n```\n\nTypo\n\nComments from Reviewable\n Sent from Reviewable.io \n #Resolved. @DHowett-MSFT Yeah looks like you're right. I just tried it with grayColor and whiteColor and it does. I wasn't sure, since the docs say that it only handles conversion if it's in a compatible color space. I'm not sure what an incompatible color space would be as far as this method is concerned, or if this comment in the docs just happens to be outdated. #Resolved. :shipit: . \nReviewed 5 of 16 files at r1, 11 of 11 files at r2.\nReview status: all files reviewed at latest revision, 5 unresolved discussions.\n\nComments from Reviewable\n Sent from Reviewable.io \n. iOS allows it to be resized smaller than the indicator, but still displays the indicator and the frame. For example, if you were to set the background color to black, and set the indicator frame to be 5x5. You would see the spinning indicator (normal size is 20x20) with a small 5x5 black square inside of it. In XAML, if the dimensions of the containing frame are smaller than the ProgressRing inside, it will be partially obscured. #Resolved. So, the more likely case is that someone initializes a UIActivityIndicatorView with a CGRect and either sets the size to the default indicator size, 20x20, or omits the size by just putting 0x0 (since that Just Works\u2122 on iOS). Obviously if it's the second case, it would be immediately obvious. However, the first case would appear fine until they were to set it to the White Large style, which would then resize the indicator to 37x37, obscuring it in XAML but not in iOS.\n\nIn reply to: 113079902 . Okay, so kill the define and just inline that where it's used? Yi had commented on the original review I submitted suggesting I add a constant for the color components to make it more clear, so I was trying to think of a way to make the entire color definition more clear since this is a special case.\n\nIn reply to: 113078096 . Yes, because by default iOS hides the indicator when it is not animating.\n\nIn reply to: 113078951 . Ah, yeah. We could handle for that, but since this is also another edge case (user explicitly setting alpha on the entire view, not just the indicator itself) it may not be worth it. Since the ProgressRing already does not display anything when it is not active, this is technically handling for another edge case: the user explicitly setting a background on the indicator view. If a background is set, it would not be hidden when the animation is stopped since we don't hide the view in order to preserve space in the layout.\nNow the question is, do we try to handle for either case, or simply leave it as a caveat that if the user wants to use a background in the indicator then they are responsible for hiding it when animation stops as well?\n\nIn reply to: 113080688 . In iOS the background is set on the entire UIActivityIndicatorView, and the entire view hides when stopped (not just the indicator itself). So we actually don't want to show the background when the ProgressRing is hidden. Currently the background and frame size are both modifying the Grid that contains the ProgressRing, which is correct from an iOS standpoint. \n\nIn reply to: 113292895 . The frame and indicator have independent sizes. The user is able to resize the frame, but the indicator inside can only be set via the provided styles.\n\nIn reply to: 113538678 . Yeah, I also tried manually clearing the Clip property on Grid, but that didn't work either.\n\nIn reply to: 113579888 . So I tried to x:Bind again, and still couldn't manage to get it working for our own properties. It does seem to work fine when binding to an existing property on a control though, so I updated the bindings for Canvas height/width to bind to progressRing height/width with x:Bind.\n\nIn reply to: 113579961 . The height and width are bound to the size of the containing grid, so that the ProgressBar size will always be updated with the frame is resized on UIProgressView.\nRemoved IsIndeterminate, since that's the default value.\nMinimum and Maximum are supposed to default to 0 and 1 according to the docs, but I was actually seeing maximum default to 100. So this is needed to ensure the min/max matches iOS.\n\nIn reply to: 114915819 . ",
    "lafezhang": "ok. It seems that the repo can not be cloned using Mac (even with git-lfs installed), it must be cloned using Windows. ",
    "wlw": "Nope. Development environment is Visual Studio 2017 Community. Managed Dll C#  'class library'. Unmanaged  C++ 'console application'. Sorry for the inconvenience. In my travels through the net, I saw a similar question. Regards. ",
    "SourceF": "fixed in \u201c0.2.170511-dev-20170511235959\u201d. We were using \u201c0.2.170407\". ",
    "adammika": "@rajsesh-msft Thanks for the response. Just tried out your suggestion, and it works just fine for our needs. Thank you so much!. ",
    "Shagufta4786": "Thank you @rajsesh-msft for your response. When you say, \"use cordova to target the app to windows\", you mean developing/writing a new app and not adapting/porting right? I understand this from this Microsoft doc [https://docs.microsoft.com/en-us/windows/uwp/porting/selecting-an-approach-to-ios-and-uwp-app-development]. I am asking to confirm as our purpose is to port the app and not write a new app.. ",
    "Ron2": "No, I didn't build the Framework from source, so I didn't follow those instructions. I followed the instructions from README.md -- installing VS2017 Community Edition with all the required components, Chocolately, and winobjc-tools. Then I went on to the instructions for running the sample apps: https://github.com/Microsoft/WinObjC#building--running-the-samples. Thank you, that got me past that problem. I still can't compile the sample apps though.\nIn my opinion, the sample apps should be simple and shouldn't have a Git dependency at all. But if the sample apps stay the same, then the documentation in a couple places should be fixed.\nFor example, I'm pretty sure I started here several weeks ago:\nhttps://developer.microsoft.com/en-us/windows/bridges/ios\nAnd that tells me to go here, to the release page:\nhttps://github.com/Microsoft/WinObjC/releases\nBut those zip files on the release page are not complete and have the same problem as if I had used the \"Clone or Download\" button, right?\nAlso, the documentation should state that Git and Git-LFS need to be installed on Windows because the sample apps require Git as part of the build process. I use OS X and run Windows 10 on Parallels, and my Git tools are on OS X.\nFYI, I tried compiling on branch 'develop' but got compile errors:\nSeverity    Code    Description Project File    Line    Suppression State\nError   LNK2019 unresolved external symbol _UIApplicationActivated referenced in function \"protected: virtual void __cdecl HelloOpenGL::App::[Windows::UI::Xaml::IApplicationOverrides]::OnActivated(struct Windows::ApplicationModel::Activation::IActivatedEventArgs ^)\" (?OnActivated@?QIApplicationOverrides@Xaml@UI@Windows@@App@HelloOpenGL@@M$AAAXP$AAUIActivatedEventArgs@Activation@ApplicationModel@4@@Z) HelloOpenGL (HelloOpenGL\\HelloOpenGL)   Y:\\repositories\\WinObjC\\samples\\HelloOpenGL\\HelloOpenGL.vsimporter\\HelloOpenGL-WinStore10\\App.xaml.obj  1\nI figured that the develop branch is a work-in-progress and that the sample apps are currently broken there. So, I checked out the latest tagged release using git checkout 0.2.170609.\nThat leads to these compile errors:\n``\nSeverity    Code    Description Project File    Line    Suppression State\nWarning     WARN [07/10/17 12:37:15:54] Could not determine assembly version: System.ComponentModel.WarningException: It looks like the branch being examined is a detached Head pointing to commit 'c5fb684'. Without a proper branch name GitVersion cannot determine the build version.\n   at GitVersion.GitVersionFinder.EnsureHeadIsNotDetached(GitVersionContext context)\n   at GitVersion.GitVersionFinder.FindVersion(GitVersionContext context)\n   at GitVersion.ExecuteCore.<>c__DisplayClass6_0.<ExecuteInternal>b__0(IRepository repo)\n   at GitVersion.GitPreparer.WithRepository[TResult](Func2 action)\n   at GitVersion.ExecuteCore.ExecuteInternal(String targetBranch, String commitId, GitPreparer gitPreparer, IBuildServer buildServer, Config overrideConfig)\n   at GitVersion.ExecuteCore.ExecuteGitVersion(String targetUrl, String dynamicRepositoryLocation, Authentication authentication, String targetBranch, Boolean noFetch, String workingDirectory, String commitId, Config overrideConfig, Boolean noCache)\n   at GitVersion.ExecuteCore.TryGetVersion(String directory, VersionVariables& versionVariables, Boolean noFetch, Authentication authentication)    HelloOpenGL (HelloOpenGL\\HelloOpenGL)       1   \nSeverity    Code    Description Project File    Line    Suppression State\nError       Cannot calculate version. Please make sure either PackageVersionOverride is set or GitVersionTask is listed as a nuget dependency for this project and that git.exe is part of the PATH environment variable.   HelloOpenGL (HelloOpenGL\\HelloOpenGL)   Y:\\repositories\\WinObjC\\common\\winobjc.versioning.common.targets    34\n```\nMaking any branch name seems to get by that. git checkout -b ron\nBut I can't get by the next error:\nError       could not acquire lock file for module 'UIKit'  HelloOpenGL (HelloOpenGL\\HelloOpenGL)   Y:\\repositories\\WinObjC\\samples\\HelloOpenGL\\HelloOpenGL\\HelloOpenGL.m   1\nI tried various suggestions about changing the Output directory and setting the WINOBJC_SDK_ROOT environment variable. I described my attempts in this comment on a StackOverflow question:\nhttps://stackoverflow.com/questions/36985096/winobjc-could-not-acquire-lock-file-for-module-uikit#comment77016626_37010987\nI'd really like to test the Obj-C debugging features. Our product's workflow currently requires compiling a DLL using clang on OS X and then including that DLL into a Visual Studio project, but there's basically no debugging capability of the Objective-C code. We would love to be able to use WinObjC!\nSo, any help you could provide in getting the sample apps compiling would be greatly appreciated!. I moved my WinObjC git repo to a local-to-Windows drive, and I can compile and run HelloOpenGL now. I recommend that WinObjC users don't put the git repo on a networked drive (e.g., the shared drive created by Parallels).. I'm up and running now. Thank you.. ",
    "darkoverlordofdata": "Spent all day trying to get this to work - then I found this issue.  PLEASE FIX YOUR DOCUMENTATION. . I understand - I'm concerned because Microsoft has a history of releasing unfinished projects that go nowhere due to lack of interest due to the project being unfinished. IronPython come to mind.  . Actually, this solution is not working. When I copy one of the samples to it's own folder, and open it in VS, I get the one or more solutions did not open correctly error, and it is unable to compile.. You have an FAQ: Adding Objective C to an Existing Project, but it does not work. So I found an issue on that which is 1 year old - Cannot add Objective C to an Existing Project #2818, and still not fixed. This is starting to make GNUstep look good.. Ok, I finally got a project working by itself without being inside the WinObjC folder structure. I downloaded the code for this tutorial, and ran vsimporter, and it works! https://www.raywenderlich.com/3002-beginning-opengl-es-2-0-with-glkit-part-1. Thanks - that makes sense.. Apparently this is not related to WinObjC, it's a known issue with VisualStudio, where the .suo file becomes corrupted. Delete it and restart, and the errors go away:\nhttps://galasoft.ch/posts/2014/01/quick-tip-what-to-do-when-visual-studio-freaks-out-and-everything-is-red/\nstack overflow was feeling helpful for a change:\nhttps://stackoverflow.com/questions/17703004/visual-studio-displaying-errors-even-if-projects-build\n. ",
    "jeroenterheerdt": "using the latest version of CocoaPods. I am running vsimporter from the right folder (the folder containing MyProjectName/MyProjectName.xcodeproj/).\nMyProjectName.xcodeproj is not a file, it is a folder, though.. ",
    "Koalar": "Code snip is as below:\n            CCRenderTexture *texArrow = [CCRenderTexture renderTextureWithWidth:32 height:drawVectorLen];\n            [texTrackVector begin];\n            glLineWidth(2);\n            glColor4ub(0, 255, 255, 255);\n            ccDrawLine(ccp(8.5, 0), ccp(0, 8));\n            ccDrawLine(ccp(8.5, 0), ccp(17, 8));\n            ccDrawLine(ccp(8.5, 0), ccp(8.5, drawVectorLen));\n            glLineWidth(1);\n            glColor4ub(255, 255, 255, 255);\n            [texArrow end];\n\nI noticed that in file OpenGLES20Context.mm function glColor4ub is not implemented.  Function glColor4f seems to be implemented but doesn't work neither.  Same thing happens with glLineWidth.\n. Any suggestions?. @edvv That makes some sense.  The cocos2d I used in the original project was a pretty early version that uses OpenGL ES 1.1.  I'm not familiar with OpenGL.  I think there may be a big change from 1.1 to 2.0?  The way mentioned in the link you posted is the same way that WinObjC implemented in glColor4f.  So I think maybe WinObjC only supports OpenGL ES 2.0, not 1.1?  And there maybe a different way drawing lines in OpenGL ES 2.0 that I should use?  Anyway, I'm posting the ccDrawLine function below so you can give me some suggestions.  I also noticed that this ccDrawLine function is deprecated in later versions of cocos2d.  But it still works well with glColor4ub and glLineWidth in my project in XCode.\n```\nvoid ccDrawLine( CGPoint origin, CGPoint destination )\n{\n    ccVertex2F vertices[2] = {\n        {origin.x * CC_CONTENT_SCALE_FACTOR(), origin.y * CC_CONTENT_SCALE_FACTOR() },\n        {destination.x * CC_CONTENT_SCALE_FACTOR(), destination.y * CC_CONTENT_SCALE_FACTOR() }\n    };\n// Default GL states: GL_TEXTURE_2D, GL_VERTEX_ARRAY, GL_COLOR_ARRAY, GL_TEXTURE_COORD_ARRAY\n// Needed states: GL_VERTEX_ARRAY, \n// Unneeded states: GL_TEXTURE_2D, GL_TEXTURE_COORD_ARRAY, GL_COLOR_ARRAY   \nglDisable(GL_TEXTURE_2D);\nglDisableClientState(GL_TEXTURE_COORD_ARRAY);\nglDisableClientState(GL_COLOR_ARRAY);\n\nglVertexPointer(2, GL_FLOAT, 0, vertices);  \nglDrawArrays(GL_LINES, 0, 2);\n\n// restore default state\nglEnableClientState(GL_COLOR_ARRAY);\nglEnableClientState(GL_TEXTURE_COORD_ARRAY);\nglEnable(GL_TEXTURE_2D);\n\n}\n```. I'm still waiting for answers.  It seems that WinObjC does not fully support OpenGL ES 1.1.  But everything else is running pretty good.  I really wanna succeed this.  Any help?. Ok, unfortunately, glColor4f doesn't work neither.  I tried that before I posted this issue.  It seems  implemented but doesn't work.  Otherwise it will be pretty easy to make my own glCorlor4ub from glColor4f.  To make it work, I used glColorPointer as a work around.  But I found it too slow when there are plenty to draw which is not acceptable.  And still don't have a way to change the line width.  Everything else works pretty fine.  But this seems to be a dead end.  Pretty frustrated.. Thanks.  I know nothing about OpenGL.  Finally I got work arounds for the both.  I use glColorPointer instead of glColor4ub.  I was making a mistake that the program runs into a really wrong loop which take a lot of time.  After I corrected it, the time consuming of glColorPointer is acceptable.  For glLineWidth, I draw rectangles for straight lines which are wider than 1px and convert other holo shape drawings(circle, arc, dash line, etc.) into line drawings.  They are working fine now.. ",
    "xFAR": "Dustin,\nMy responses inline.\nOn Jul 21, 2017, at 1:08 AM, Dustin L. Howett (MSFT) notifications@github.com wrote:\n\n@DHowett-MSFT requested changes on this pull request.\nHi @xFAR! Thanks for the contribution.\nI'd like to accept this pull request, but I've got a couple minor issues:\nOur coding convention requires four spaces be used per indentation level than one tab\nI will update the style.  I use tabs equal to four spaces so I did not notice.\nWe have a macro (admittedly difficult to discover!) called NS_COLLECTION_THROW_IF_NULL_REASON; you can place it at the top of this function and keep the rest of the code the same.\nNS_COLLECTION_THROW_IF_NULL_REASON(indexes, @\"indexes must not be nil\u201d);\n\nOk.\n\nWould you mind writing tests (in NSArrayTests.mm) for this behaviour as well? You can use the other tests as a template.\nHopefully, I can get to this later in the week.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\nRegards,\nFelipe A. Rodriguez\nillumenos LLC\n\n. ",
    "konisx": "Trying to find a solution to this problem I tried running vsimporter.exe on the samples provided in the repository. I deleted the Visual Studio .sln and the .vsimporter folder from the WOCCatalog sample and run vsimporter.exe. The new .sln does not contain a NugetRestore project like the original and when I try to build the project with Visual Studio I get the same link errors.\nI also don't get a NugetRestore project when I try to import my Xcode projects.\n. Thanks for looking into this.\nI turned /ZW off and now I get:\nError   WMC1006 Cannot resolve Assembly or Windows Metadata file 'Windows.Foundation.UniversalApiContract.winmd'    WOCkuku (WOCkuku\\WOCkuku)   C:\\escdev\\WinObjC\\samples\\WOCkuku\\ WOCkuku.vsimporter\\WOCkuku-WinStore10\\WOCkuku.vcxproj\nError   WMC9999 Type universe cannot resolve assembly: Windows.Foundation.UniversalApiContract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime.  WOCkuku(WOCkuku\\WOCkuku)    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\Microsoft\\WindowsXaml\\v15.0\\8.2\\Microsoft.Windows.UI.Xaml.Common.targets\nI am just testing the waters with WinObjC using a template project from Xcode to learn how it works. We want to transfer our program model written in Obj-C++ from macOS to Windows using WinObjC but the process does not seem ready.  \nIs there any comprehensive documentation/guide on WinObjC I can use? Or any blueprint on how to setup a new project in VisualStudio 2017 containing Obj-C source files?. @sriranjanr unfortunately not. I gave up and added my iOS sources to one of the sample projects for now.. Thank you for answering this Brian,\nSo I cloned the repo and run the two setup commands\n.\\init.ps1\n.\\.tools\\nuget.exe restore .\\build\\build.sln\nI skipped the steps for building WinObjC Frameworks and Tools, since I was not sure if I had to follow them too. \nThen I added the two nugget packages and the starboard-sdk.targets depedency to a new C++ UWP application and the project build ok. Now, when I add a simple Obj-C source file to it,  I get the following error for my variable definitions:\nError (active) E0020   identifier \"NSString\" is undefined  CppApp\nso no luck here. \nThen  I tried building WinObjC. The command \n.\\.tools\\nuget.exe restore .\\build\\build.sln.\ngives me the following errors:\nMSBUILD : warning : WARN [02/05/18 17:20:31:36] Multiple branch configurations match the current branch branchName of 'master'. Using the first matching configuration, 'master'. Matching configurations include: 'master', '.*' [C:\\kodev\\WinObjC\\build\\Foundation\\dll\\Foundation.vcxproj]\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets(1601,5): error MSB4036: The \"GetReferenceNearestTargetFrameworkTask\" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is \"public\" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with <UsingTask> in the project file, or in the *.tasks files located in the \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\" directory. [C:\\kodev\\WinObjC\\build\\WinObjC.Frameworks.Core\\WinObjC.Frameworks.Core.nuproj]\nwith 7 more instances of the MSB4036 errors. After that, the Tools build ok for Win32, but the Frameworks give me a lot of errors like the one below:\nError MSB4036 The \"GetReferenceNearestTargetFrameworkTask\" task was not found. Check the following: 1.) The name of the task in the project file is the same as the name of the task class. 2.) The task class is \"public\" and implements the Microsoft.Build.Framework.ITask interface. 3.) The task is correctly declared with <UsingTask> in the project file, or in the *.tasks files located in the \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\" directory. [C:\\kodev\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj] NugetRestore C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets 1601\nI am using the latest Visual Studio 2017 Community 15.5.5.\nAny ideas on how to proceed?\n. Here it is:\nhttps://www.escape.gr/download/temp/CppApp.zip\nThanks.. @rajsesh \nYes I have seen #122, but that was 2 years ago and I was hoping that it got some attention.\nThank you anyway.\n. ",
    "compnerd": "CC: @DHowett-MSFT @DHowett . Yeah, it does result in Uobjc_object *.  I shall fix clang (upstream) to generate this name properly.  However, doing so means that\n  - previously compiled objects will need to be rebuilt\n  - the exception handling needs to be adjusted for the correct mangling of id for the root type CatchableType entry\nIncorrectly decorating this means that compatibility across C++/ObjC++ is lost, so it is something which would be beneficial to address.. SVN r3117617 will now mangle id, Class, and @interface appropriately in the C++ context.  I have more questions about the decorations, is this the best channel for them?. clang now generates the right thing.. ",
    "chiefgreek": "Hi, could you provide more information as all I get is an error message \nMSBUILD : error MSB1009: Project File Does Not exist\nSwitch: .\\build\\build.sln\nMy program no longer works with the latest update and there is no standalone 15.2 version to roll back to\nthanks. ",
    "copumpkin": "cc @DHowett-MSFT if you have ideas \ud83d\ude04 . ",
    "techlabz": "@CyangYu  were you able to solve this, I'm having trouble. ",
    "cmini": "Sorry, it is a View not a view controller..\nOn 20 Oct 2017, at 04:06, Raj Seshasankaran notifications@github.com<mailto:notifications@github.com> wrote:\nWhy would you add a view controller and not the view? Do you have a code snippet?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/2801#issuecomment-338086032, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGvjNMgkam49S-E5zuKp43wFLkd_ORv4ks5suAA-gaJpZM4P6P85.\n. Here a code snippet:\nself.launchedURL = [launchOptions objectForKey:UIApplicationLaunchOptionsURLKey];\n  // Create content and menu controllers\n  self.navigationController = [[Home2ViewController alloc] initWithNibName:@\"Home2ViewController\" bundle:nil];\nUINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:navigationController];\n   [self.window addSubview:navController.view]; //CRASH\nOn 20 Oct 2017, at 04:06, Raj Seshasankaran notifications@github.com<mailto:notifications@github.com> wrote:\nWhy would you add a view controller and not the view? Do you have a code snippet?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/2801#issuecomment-338086032, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGvjNMgkam49S-E5zuKp43wFLkd_ORv4ks5suAA-gaJpZM4P6P85.\n. Ok Thanks! There\u2019s a way to get this error with intellisync?\nOn 14 Nov 2017, at 12:37, Ed VanVliet notifications@github.com<mailto:notifications@github.com> wrote:\nJSON not Json\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/2815#issuecomment-344232127, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGvjNIDQxThi9tzR1-VlPLI0YCxp9CVwks5s2XtkgaJpZM4Qc9G3.\n. intellisync suggest me this:\n[cid:B0F157CD-7CA1-4699-A6FF-77F085B72889@consularea.local]\nOn 14 Nov 2017, at 14:37, christian mini cmini@axterisco.it<mailto:cmini@axterisco.it> wrote:\nOk Thanks! There\u2019s a way to get this error with intellisync?\nOn 14 Nov 2017, at 12:37, Ed VanVliet notifications@github.com<mailto:notifications@github.com> wrote:\nJSON not Json\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Microsoft/WinObjC/issues/2815#issuecomment-344232127, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGvjNIDQxThi9tzR1-VlPLI0YCxp9CVwks5s2XtkgaJpZM4Qc9G3.\n. ",
    "calbot": "It would be nice if the error message said exactly what was wrong with the format. It looks like you're right though.. Is support for these macros planned or is should we expect to have to always define them ourselves?. I ran the command directly and got the following output...\nUILabel: invalid textAligment value natural, using default (left)\nUnhandled node:/document:(null)\nUnhandled attribute:/document:(null):type:com.apple.InterfaceBuilder3.CocoaTouch.XIB\nUnhandled attribute:/document:(null):version:3.0\nUnhandled attribute:/document:(null):toolsVersion:11201\nUnhandled attribute:/document:(null):systemVersion:15G1004\nUnhandled attribute:/document:(null):targetRuntime:iOS.CocoaTouch\nUnhandled attribute:/document:(null):propertyAccessControl:none\nUnhandled attribute:/document:(null):useAutolayout:YES\nUnhandled attribute:/document:(null):useTraitCollections:YES\nUnhandled attribute:/document:(null):colorMatched:YES\nUnhandled node:/document/dependencies:(null)\nUnhandled node:/document/dependencies/plugIn:(null)\nUnhandled attribute:/document/dependencies/plugIn:(null):identifier:com.apple.InterfaceBuilder.IBCocoaTouchPlugin\nUnhandled attribute:/document/dependencies/plugIn:(null):version:11161\nUnhandled node:/document/dependencies/capability:(null)\nUnhandled attribute:/document/dependencies/capability:(null):name:documents saved in the Xcode 8 format\nUnhandled attribute:/document/dependencies/capability:(null):minToolsVersion:8.0\nUnhandled attribute:/document/objects/placeholder:(null):userLabel:File's Owner\nUnhandled attribute:/document/objects/placeholder:(null):customClass:MyCustomViewController\nUnhandled attribute:/document/objects/placeholder:(null):customClass:UIResponder\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:21\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:18\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:5\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:19\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:112\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:34\nUnhandled attribute:/document/objects/view/subviews/label/fontDescription:fontDescription:weight:semibold\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:4\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:47\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:113\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled attribute:/document/objects/view/subviews/label/fontDescription:fontDescription:weight:semibold\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/imageView:(null):fixedFrame:YES\nUnhandled node:/document/objects/view/subviews/imageView/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/imageView/frame:frameInset:minX:2\nUnhandled attribute:/document/objects/view/subviews/imageView/frame:frameInset:minY:2\nUnhandled attribute:/document/objects/view/subviews/imageView/frame:frameInset:width:16\nUnhandled attribute:/document/objects/view/subviews/imageView/frame:frameInset:height:16\nUnhandled attribute:/document/objects/view/subviews/view:(null):fixedFrame:YES\nUnhandled node:/document/objects/view/subviews/view/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/view/frame:frameInset:minX:122\nUnhandled attribute:/document/objects/view/subviews/view/frame:frameInset:minY:16\nUnhandled attribute:/document/objects/view/subviews/view/frame:frameInset:maxX:-1\nUnhandled attribute:/document/objects/view/subviews/view/frame:frameInset:maxY:-1\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:9\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:88\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:108\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:9\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:99\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:108\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:5\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:64\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:60\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:5\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:75\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:60\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:64\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:64\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:60\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled attribute:/document/objects/view/subviews/label:(null):fixedFrame:YES\nUnhandled attribute:/document/objects/view/subviews/label:(null):baselineAdjustment:alignBaselines\nUnhandled attribute:/document/objects/view/subviews/label:(null):adjustsFontSizeToFit:NO\nUnhandled node:/document/objects/view/subviews/label/frame:frameInset\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minX:64\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:minY:75\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:width:58\nUnhandled attribute:/document/objects/view/subviews/label/frame:frameInset:height:21\nUnhandled node:/document/objects/view/subviews/label/nil:highlightedColor\nUnhandled node:/document/objects/view/nil:simulatedStatusBarMetrics\nUnhandled node:/document/objects/view/nil:simulatedTopBarMetrics\nUnhandled node:/document/objects/view/nil:simulatedBottomBarMetrics\nUnhandled node:/document/objects/view/freeformSimulatedSizeMetrics:simulatedDestinationMetrics\nUnhandled node:/document/objects/view/point:canvasLocation\nUnhandled attribute:/document/objects/view/point:canvasLocation:x:-6\nUnhandled attribute:/document/objects/view/point:canvasLocation:y:-183\nUnable to find class mapping for required object <nil>. Hey @edvv thanks for the suggestion. I would like to investigate getting this working because my project has multiple xibs. Maybe it's an easy fix.\nI want to run xib2nib in Visual Studio to debug the issue. When I try build and run xib2nib VS 2017 community just seems to hang. I'm running in a VM but I haven't had any issues doing development in the VM so far.. I was able to debug the xib2nib and I found the offending element is a child of this label element...\n<label opaque=\"NO\" userInteractionEnabled=\"NO\" contentMode=\"left\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" fixedFrame=\"YES\" text=\"Company Name\" textAlignment=\"natural\" lineBreakMode=\"tailTruncation\" baselineAdjustment=\"alignBaselines\" adjustsFontSizeToFit=\"NO\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"9JN-NH-kP4\">\n                    <frame key=\"frameInset\" minX=\"21\" height=\"18\"/>\n                    <autoresizingMask key=\"autoresizingMask\" widthSizable=\"YES\" flexibleMaxY=\"YES\"/>\n                    <fontDescription key=\"fontDescription\" type=\"system\" pointSize=\"13\"/>\n                    <nil key=\"textColor\"/>\n                    <nil key=\"highlightedColor\"/>\n                </label>\nWhich looks like basically the very first view in the xib.\nDoes xib2nib support this xibs with this header info....\n<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.XIB\" version=\"3.0\" toolsVersion=\"11201\" systemVersion=\"15G1004\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" useTraitCollections=\"YES\" colorMatched=\"YES\">\n    <dependencies>\n        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"11161\"/>\n        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n    </dependencies>. That's a good point. I didn't even notice that \"nil\" element. Thank you. Actually nil looks like a valid element in a xib\nSee this (I know this isn't an apple source but seems reliable)...\nhttp://www.monobjc.net/xib-file-format.html. ",
    "RayJohnUa": "which file is in it?\n. ",
    "dkimitsa": "closing as https://github.com/Microsoft/WinObjC/pull/2852 was created as mentioned by @DHowett-MSFT . ",
    "nrbrook": "So what can I do?. Yes, that is installed. However, Objective-C code looks like this.\n\nIs that full syntax highlighting? Also I'm not getting any code completion.\n. Ok, thanks. I would use Xcode for most editing anyway, but I wasn\u2019t sure if I was missing something.. ",
    "arktouros": "@DHowett-MSFT thanks for the quick answer, I wanted to avoid selectors or  properties, \nbut if it's not supported I will have to go another way . ",
    "Liastre": "@edvv Not yet unfortunately, I'm using old winobjc for now, but I definitely will do that later, thanks for advice, I'll update topic as soon I get some results. I was sure there some api call changes between versions, such a weird issue.. I've tried to migrate project from scratch, same issue. Main view does not load at all in both cases, app crashes somewhere while initialization on ::Windows::UI::Xaml::Application::Start, here additional log errors that might be useful:\nonecoreuap\\base\\mrt\\runtime\\com\\winrt\\core\\lib\\winrtresourcemanager.cpp(893)\\MrmCoreR.dll!0C3D9E73: (caller: 0C3D9AA6) ReturnHr(1) tid(940) 80070015 The device is not ready.\nonecoreuap\\base\\mrt\\runtime\\com\\winrt\\core\\lib\\contextmanager.cpp(237)\\MrmCoreR.dll!0C3B319F: (caller: 0C3B1B3E) ReturnHr(2) tid(940) 80070490 Element not found.\nonecoreuap\\base\\mrt\\runtime\\com\\winrt\\core\\lib\\contextmanager.cpp(237)\\MrmCoreR.dll!0C3B319F: (caller: 0C3B1C1C) ReturnHr(3) tid(940) 80070490 Element not found.\nonecoreuap\\base\\mrt\\runtime\\com\\winrt\\core\\lib\\contextmanager.cpp(825)\\MrmCoreR.dll!0C3B1BF7: (caller: 0C3B1C04) ReturnHr(4) tid(940) 80070490 Element not found.\n...\nonecoreuap\\base\\appmodel\\statemanager\\winrt\\lib\\windows.storage.applicationdatafactory.server.cpp(202)\\Windows.Storage.ApplicationData.dll!0EE754DB: (caller: 0EE75010) ReturnHr(1) tid(940) 8000000B The operation attempted to access data outside the valid range\n...\nonecoreuap\\base\\mrt\\runtime\\com\\dllsrv\\resourcemap.cpp(357)\\MrmCoreR.dll!0C3B9281: (caller: 0A6D9DB9) ReturnHr(5) tid(940) 80073B17 NamedResource Not Found.\n...\nonecoreuap\\base\\mrt\\runtime\\src\\cresourceindexinternal.cpp(1479)\\MrmCoreR.dll!0C3D22AD: (caller: 0C3B9680) LogHr(1) tid(940) 80070515 Some mapping between account names and security IDs was not done.\n    Msg:[minkernel\\mrt\\mrm\\src\\mrmmin\\resourcemap.cpp] \nonecoreuap\\base\\mrt\\runtime\\src\\cresourceindexinternal.cpp(1479)\\MrmCoreR.dll!0C3D22E0: (caller: 0C3B9680) ReturnHr(6) tid(940) 80073B1F ResourceMap Not Found.\nonecoreuap\\base\\mrt\\runtime\\com\\dllsrv\\resourcemap.cpp(86)\\MrmCoreR.dll!0C3B9709: (caller: 0A703158) ReturnHr(7) tid(940) 80073B1F ResourceMap Not Found.\nonecoreuap\\base\\mrt\\runtime\\src\\cresourceindexinternal.cpp(1479)\\MrmCoreR.dll!0C3D22AD: (caller: 0C3B9680) LogHr(2) tid(940) 80070515 Some mapping between account names and security IDs was not done.\n    Msg:[minkernel\\mrt\\mrm\\src\\mrmmin\\resourcemap.cpp] \n... // then last 3 errors repeating\n. Hello, I've solved the issue here how looks the old main.mm file of our xcode project:\n```\nimport \nint main(int argc, char * argv[]) {\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, nil, nil);\n    }\n}\n```\nand here how it should be to fix it\n```\nimport \nimport \"AppDelegate.h\"\nint main(int argc, char * argv[]) {\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n    }\n}\n```\nnil must be specified for delegateClassName if we loading the delegate object from your application\u2019s main nib file (doc). New bridge seems doesn't handle that at all?. @Pepijn1908 I suggest you to start with https://github.com/Microsoft/WinObjC/tree/develop/samples use minimal working example and add your existing changes chunk by chunk to investigate the actual issue you had, I've made the same to resolve my issue. Here https://github.com/Microsoft/WinObjC-Samples few more advanced examples, working with latest winobjc.. Hello @edvv can you clarify what is \"R-51 era\" exactly? Thanks in advice.. @edvv oh, got it, actually that what we doing for now, stick with 15.4.5. However, VS2017 15.4.5 recently  was removed from https://docs.microsoft.com/en-us/visualstudio/productinfo/installing-an-earlier-release-of-vs2017  and no longer available, when you guys @DHowett-MSFT gonna adapt winobjc for later release? I've actually heard v140 toolset will allow to build with, but didn't try that yet.. Latest prerelease WinObjC packages v0.2.180221 fixes that issue, you will also need WinObjC.Compiler package. So far I've tested with Visual Studio 15.7.X works fine, I suppose latest 15.8.X should be fine too.. For now I've rebuilt Foundation framework with additional method navigation, here the code I'm using inside:\n```\n- (void)navigate:(NSURL)baseURL {\n    NSString urlStr = [baseURL absoluteString];\n    WF::Uri uri = winrt::hstring_view(objcwinrt::string(urlStr));\n_isLoading = true;\n\nRunSynchronouslyOnMainThread(^{\n    _xamlWebControl.Navigate(uri);\n});\n\n}\n```\nWorks for links like \"ms-appx-web://\" but not with \"ms-appdata://\"\nLink I'am using for navigation: ms-appdata:///local/MobileEngine/index.html. Got navigation to work, html file seems loaded but with the followed error: DOM7010: Unable to receive a ScriptNotify event from: 'ms-local-stream://3d4medical.comllc.completeanatomy_local_4d6f62696c653344344d456e67696e65/index.html'. The website attempted to send a ScriptNotify event to the app from a WebView URI that is not included in the ApplicationContentUriRules for this app. To permit this event, add the URI to the ApplicationContentUriRules section of the package manifest. (In Visual Studio, add this URI to the Content URIs tab of the Manifest Designer.)\nRelated topics:\nhttps://social.msdn.microsoft.com/Forums/en-US/ae350e1f-cca6-4f9a-ba2c-ab45e7e0ebcf/mslocalstream-asking-to-add-rule-in-app-content-uri-for-windowexternalnotify-windows-81?forum=winappswithhtml5\nhttps://social.msdn.microsoft.com/Forums/sqlserver/en-US/9507fc3b-479f-4998-9490-b305eec7e6b6/uwpdifficult-question-loading-dynamic-html-and-running-script?forum=wpdevelop\nOkaay got it, how can I avoid that?\n. Hey @edvv thanks for reply, yeah seems my issue lack of details, here we go:\n\nAre you certifying against a Release build?\n\nI'm building only Release for certification\n\nAre you using a local certification or online?\n\nIn current case I'm using local one\n\nIf local did you click the \"Update\" link to update your certification rules (that may cause new conditions)?\n\nI do update certification rules before the actual certification\n\nAre you able to add the suggested linker flags (apparently it is only a linker issue and you don't need to recompile a dll)?\n\nWe are using /DYNAMICBASE /SAFESEH /NXCOMPAT /APPCONTAINER in additional linker options all the way :)\n\nDid you see this?: https://social.msdn.microsoft.com/Forums/vstudio/en-US/e76a6db5-b2cf-46d0-866a-f934d1ec00c4/wack-pass-on-desktop-failure-on-security-for-online-submission?forum=wpsubmit\n\nI did not, well we have an issue during local cert, and linker flags are set\n\nDid you try to submit to the MS Store anyways, and does it pass certification there?\n\nNot yet, but we gonna do soon for sure\nWell just to be sure I'll update certification rules and redo, if there some changes did come during two weeks.\n. @edvv here some additional info that might be useful for you, I've asked one of winobjc developer about this issue, the answer is:\n\nit should not impact your ability to publish the update to the store\n\nSo It must be safe to publish an update. We failed to submit so was forced to use latest release version instead if prerelease. I've made ticket to support, but still no answer, will update as soon as get answer.. Well I've made another build using latest release packages v0.2.180220 and succeed approved submission. There a lot of misunderstood with microsoft dashboard and packages approval. For example, when I've made first test flight, I've got \"passed with notes\", and surely this is not a big deal to fail such a check.\n\nBut when I submitted same package to the store... submission was rejected, not sent to the store with a mark \"attention needed\", what kind of logic is it, since package flight available to customers within group anyway, that's confusing.\n\n@edvv sorry for disinformation I was to check it myself on the first place\nP.S. still no any answer from support. ",
    "Pepijn1908": "Have the same issue. \nI did find out that if the view is empty, it is loaded. When I put something in it, it is not loaded anymore.\nAny ideas?. Unfortunately this is not the solution for me. Fresh install of the bridge, etc. XCode 10, still blank screen on building in VS17. View will be loaded if it's empty, won't be loaded if there is something in it. (Just a label in my test project). ",
    "schriftgestalt": "I tired to checkout an older version an not I get a lot of this:\njC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.GitVersionFinder.EnsureHeadIsNotDetached(GitVersionContext context) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.GitVersionFinder.FindVersion(GitVersionContext context) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.<>c__DisplayClass6_0.<ExecuteInternal>b__0(IRepository repo) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.GitPreparer.WithRepository[TResult](Func`2 action) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.ExecuteInternal(String targetBranch, String commitId, GitPreparer gitPreparer, IBuildServer buildServer, Config overrideConfig) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.ExecuteGitVersion(String targetUrl, String dynamicRepositoryLocation, Authentication authentication, String targetBranch, Boolean noFetch, String workingDirectory, String commitId, Config overrideConfig, Boolean noCache) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.TryGetVersion(String directory, VersionVariables& versionVariables, Boolean noFetch, Authentication authentication) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nC:\\Users\\IEUser\\Documents\\WinObjC\\common\\winobjc.versioning.common.targets(34,5): error : Cannot calculate version. Please make sure either PackageVersionOverride is set or GitVersionTask is listed as a nuget dependency for this project and that git.exe is part of the PATH environment variable. [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks.UWP\\WinObjC.Frameworks.UWP.nuproj]\nMSBUILD : warning : WARN [05/21/18 12:53:39:41] Could not determine assembly version: System.ComponentModel.WarningException: It looks like the branch being examined is a detached Head pointing to commit 'aea5958'. Without a proper branch name GitVersion cannot determine the build version. [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.GitVersionFinder.EnsureHeadIsNotDetached(GitVersionContext context) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.GitVersionFinder.FindVersion(GitVersionContext context) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.<>c__DisplayClass6_0.<ExecuteInternal>b__0(IRepository repo) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.GitPreparer.WithRepository[TResult](Func`2 action) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.ExecuteInternal(String targetBranch, String commitId, GitPreparer gitPreparer, IBuildServer buildServer, Config overrideConfig) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.ExecuteGitVersion(String targetUrl, String dynamicRepositoryLocation, Authentication authentication, String targetBranch, Boolean noFetch, String workingDirectory, String commitId, Config overrideConfig, Boolean noCache) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nMSBUILD : warning :    at GitVersion.ExecuteCore.TryGetVersion(String directory, VersionVariables& versionVariables, Boolean noFetch, Authentication authentication) [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]\nC:\\Users\\IEUser\\Documents\\WinObjC\\common\\winobjc.versioning.common.targets(34,5): error : Cannot calculate version. Please make sure either PackageVersionOverride is set or GitVersionTask is listed as a nuget dependency for this project and that git.exe is part of the PATH environment variable. [C:\\Users\\IEUser\\Documents\\WinObjC\\build\\WinObjC.Frameworks\\WinObjC.Frameworks.nuproj]. Can anyone please help me with this. I would love to work on this. . This works. Thanks.\nNow I have another problem (a lot of those errors): \nError | C1083 | Cannot open include file: 'ErrorHandling.h': No such file or directory | StarboardLib | \\rawbuffer.cpp | 18 |\n. ",
    "VincentXII": "Will doing that install Language and Syntax support for VS Community 2017? After I install that, I should be able to run and compile Obj-C? @DHowett-MSFT . ",
    "armadsen": "Thanks Ed. Unfortunately, cloning the WinObjC repo is broken right now, so it's impossible for me to get a complete set of files to build from source, and I don't know enough about how the whole thing works to download and replace individual files.. ",
    "yistn": "Visual Studio 2017 15.9+ \n\"STL1000: Unexpected compiler version, expected Clang 7 or newer.\"\n\nI'd try building and installing from the latest source, but #2883 prevents that.\nplease down http://releases.llvm.org/7.0.0/LLVM-7.0.0-win64.exe \ninstall windows set llvm PATH with system PATH (my system windows 10 1809 64bit) and rebuild OK. \n",
    "marczellm": "I downloaded the LLVM release, set the LLVM Directory in project settings and I still get \"expected Clang 7 or newer\" error.. On the work PC with VS2017 15.7.6, I cannot compile anything and I get the error \n\nclang.exe : error : unknown or ill-formed Objective-C runtime 'microsoft'\n\non every source file, even on the sample code like WOCCatalog. On my home PC I can build the samples and I have no idea what\u2019s different between the two machines. I followed the VS install instructions as well as I could. Also Xib2Nib immediately crashes on the work PC. It works at home.\n. @DHowett-MSFT I would really appreciate some assistance with this.. I could comment out the code using this, so this is not at all urgent for me, but a stub would definitely help.. Okay I misinterpreted the build output. Turns out that during the Visual Studio build, xib2nib dumps all its output in the console but without ever specifying which xib file it errored out on. (The console listed all the xib files first, and then listed all the errors.)\nSo this becomes a feature request:\n- #2090 \n- Make Xib2Nib output the name of which file it errored out on\n- Make the error message one line instead of proportional to XML depth. ",
    "fsb4000": "same error for me :(. ",
    "SergeyNewcastle": "Hello @DHowett-MSFT.\nThank you for response.\nI expanded the same WXCWebView for methods what u want use from web and pass it ti this method.\nMay be i must create another special object for this?. ",
    "briangabriel": "Found the issue, there are nill tags.  Removed and it was able to compile.. ",
    "dainawilson": "Dumb\n. ",
    "amagams": "is there no [super dealloc] call?? #ByDesign\n. do we also want to check the length of firstName to be greater than 0 ?\n. other places as well. Also what if both the if and else if conditions are not true, what value will firstName have ?\n\nIn reply to: 70120288 \n. default case missing . Also are we using NSLog or some other logging method. #Resolved\n. Yup you are right. The sample just showcases that you can set the properties for Selected state explicitly and that the Selected state is implemented in the SDK.\nBut when the Button is Selected and Pressed, it has got no properties for this state. Hence we have a set of properties for Normal state also, which will be used in All other states that the button goes into, except the Selected state.\n. bug filed\n. bug filed.\n. ",
    "Samanthi-Jeyaraj": "Check when location is NULL. What is the expected behaviour when location is NULL?\n. Should use NO instead. (OBJC BOOL type)\n. NO\n. YES\n. NULL check?\n. #pragma once\n. ",
    "amit6257": "not sure but you might not need this if() condition if [WUXAAutomationProperties getAutomationId] returns nil for a  nil argument.\n. We do not encounter the Normal state. So pressing the Button would take you to Selected+Highlighted state(integer value of 5), releasing the Button takes you back to Selected state. To go back to normal state you have to do something like button.selected = false. \n. no op code #Resolved\n. at multiple places #Resolved\n. ",
    "mschofie": "Can you move this #include further up? Even though it's clang-specific it should be with the rest (somewhere near the 'except.h' include). #Resolved. Can you pull this extra blank line, just to minimize churn? #Resolved. Brian's copying the standard names, so I'd be fine with just a comment. std::index_sequence should be in 'utility' - should you use that? TBH, I'm torn as to whether you should #include utility or not. It's always been painful to remove #includes, since downstream consumers get grumpy if they were getting them for free; so absolutely minimizing the #includes is typically a priority. Anyone else have comments? #Resolved. You've pulled the space after the '#' - does clang not like it? If it doesn't then that's OK. Otherwise, leaving it to minimize churns seems like a good idea. #Resolved. Revert the 'oacr' --> 'oa cr' change, please. #Resolved. +1. It looks like macroizing the 'class name' piece to be MSVC or clang specific /should/ be sufficient. #Resolved. You shouldn't need both c_taefClassName and c_taefClassNameArray.\nc_taefClassNameArray should be the one to use - it's a C++ array, but can be used to initialize a const wchar_t* (which is what it looks like you were using c_taefClassName for).. Using std::index_sequence with the #include  wrapped in a clang #if def sounds good to me. #Resolved. "
}