{
    "0xced": "I've been able to get a few images, but only those actually used by the app. This requires some more investigation to extract everything.\n. Support for iOS 4\nClosed by e39de93201d0c76061286f7937d072fc990dd0d6\n. There is now a new Emoji tab for extracting emoji symbols.\n. I'm aware of this issue. Fixing it requires a big refactoring, stay tuned.\n. You have to download Xcode and run UIKit Artwork Extractor in the iOS Simulator.\n. Please upgrade to the latest version, this issue is already fixed.\n. They are inside iPodUI.framework. You can grab them on the device or by mounting the decrypted firmware dmg matching the simulator version.\n. What is your iOS version? And are you running on your device or on the simulator? I get 64 images with all the toolbar items when running on an iPhone 4 device on iOS 5.0.1.\n. This is fixed in 5324568bf1f10493865f61cddd2e0a477352ab0c.\n. It is possible to extract artwork from Apple apps by mounting a decrypted iOS firmware before running the extractor. I will soon add a wiki entry to explain how you mount a decrypted iOS firmware.\n. You can find instructions to mount a decrypted iOS firmware on the wiki.\n. The UIGlassButton class was simply removed in iOS 5.1. If you want the glossy button feature, you have to download the iOS 5.0 simulator.\nI will remove the glossy button tab when UIGlassButton is not available.\n. Full support for iOS 6 was finalized in 95f2376f1764cad35aa4b8845544ae3d3231615b.\n. Is this still the case on iOS 8?\n. I just tried with Xcode 4.4.1 (4F1003) / iPhone Simulator 5.1 on Mountain Lion 10.8.1 Build 12B19 and I experienced no problem at all. Is there a log in your console that could give us more information about the problem you are experiencing?\n. I just added a log if the directory creation fails in ad714db0e871af53749bb93b637eec02810c2481\n. I finally added iPhone 5 support in fc252cf.\n. If it\u2019s inside the Maps app, you should be able to extract it from a iOS firmware, see Extracting more artwork for instructions.\n. Your problem is impossible to diagnose without more information.\n. iOS Artwork Extractor is not intended to be run on a device but in the simulator only, I should probably make that clear in the README.\nIndeed, all images are kept in memory, there is no cell reuse and basically the whole code is crap. I\u2019ve thought about improving all this for years but I never did it. So there is a good chance that I will not improve it in the years to come since it's working fine in the simulator. ;-)\n. By default, iOS Artwork Extractor searches for IPAs in ~/Music/iTunes/Mobile Applications and ~/Music/iTunes/iTunes Media/Mobile Applications. If your iTunes library is not there, just set the MOBILE_APPLICATIONS_DIRECTORY environment variable to the full path of your Mobile Applications directory.\n. This is a duplicate of #18. iOS Artwork Extractor is not meant to be run on a device.\n. It should be fixed now. If it still doesn\u2019t work, you can set the ARTWORK_DIRECTORY environment variable to choose where you want to save the png files.\n. This is a duplicate of #18. iOS Artwork Extractor is not meant to be run on a device.\n. I've been able to get a few images, but only those actually used by the app. This requires some more investigation to extract everything.\n. Support for iOS 4\nClosed by e39de93201d0c76061286f7937d072fc990dd0d6\n. There is now a new Emoji tab for extracting emoji symbols.\n. I'm aware of this issue. Fixing it requires a big refactoring, stay tuned.\n. You have to download Xcode and run UIKit Artwork Extractor in the iOS Simulator.\n. Please upgrade to the latest version, this issue is already fixed.\n. They are inside iPodUI.framework. You can grab them on the device or by mounting the decrypted firmware dmg matching the simulator version.\n. What is your iOS version? And are you running on your device or on the simulator? I get 64 images with all the toolbar items when running on an iPhone 4 device on iOS 5.0.1.\n. This is fixed in 5324568bf1f10493865f61cddd2e0a477352ab0c.\n. It is possible to extract artwork from Apple apps by mounting a decrypted iOS firmware before running the extractor. I will soon add a wiki entry to explain how you mount a decrypted iOS firmware.\n. You can find instructions to mount a decrypted iOS firmware on the wiki.\n. The UIGlassButton class was simply removed in iOS 5.1. If you want the glossy button feature, you have to download the iOS 5.0 simulator.\nI will remove the glossy button tab when UIGlassButton is not available.\n. Full support for iOS 6 was finalized in 95f2376f1764cad35aa4b8845544ae3d3231615b.\n. Is this still the case on iOS 8?\n. I just tried with Xcode 4.4.1 (4F1003) / iPhone Simulator 5.1 on Mountain Lion 10.8.1 Build 12B19 and I experienced no problem at all. Is there a log in your console that could give us more information about the problem you are experiencing?\n. I just added a log if the directory creation fails in ad714db0e871af53749bb93b637eec02810c2481\n. I finally added iPhone 5 support in fc252cf.\n. If it\u2019s inside the Maps app, you should be able to extract it from a iOS firmware, see Extracting more artwork for instructions.\n. Your problem is impossible to diagnose without more information.\n. iOS Artwork Extractor is not intended to be run on a device but in the simulator only, I should probably make that clear in the README.\nIndeed, all images are kept in memory, there is no cell reuse and basically the whole code is crap. I\u2019ve thought about improving all this for years but I never did it. So there is a good chance that I will not improve it in the years to come since it's working fine in the simulator. ;-)\n. By default, iOS Artwork Extractor searches for IPAs in ~/Music/iTunes/Mobile Applications and ~/Music/iTunes/iTunes Media/Mobile Applications. If your iTunes library is not there, just set the MOBILE_APPLICATIONS_DIRECTORY environment variable to the full path of your Mobile Applications directory.\n. This is a duplicate of #18. iOS Artwork Extractor is not meant to be run on a device.\n. It should be fixed now. If it still doesn\u2019t work, you can set the ARTWORK_DIRECTORY environment variable to choose where you want to save the png files.\n. This is a duplicate of #18. iOS Artwork Extractor is not meant to be run on a device.\n. ",
    "mwaterfall": "Nice ;)\n. Nice ;)\n. ",
    "dylan": "Perfect!\n. Perfect!\n. ",
    "neilkachu": "Doh, Cheers!\n. Doh, Cheers!\n. ",
    "Instrumentry": "I'm getting \"Could not find mapped image...\" errors when I run it in iOS 5.0 Simulator. Xcode 4.2.1 and SDK 5.0.\nUsing the latest version of the extractor.\n. I'm getting \"Could not find mapped image...\" errors when I run it in iOS 5.0 Simulator. Xcode 4.2.1 and SDK 5.0.\nUsing the latest version of the extractor.\n. ",
    "dannybabiy": "To elaborate, I mean the images that are contained in the MPMediaPickerController from the MediaPlayer framework\n. I looked on iphone4 and there are only 8 images for iPodUI, none of which are tab bar icons.\n. Oh, thats strage, I was running on 5.0.1 device, but after deleting the app from device and compiling again I get the 64.  Thanks!\n. To elaborate, I mean the images that are contained in the MPMediaPickerController from the MediaPlayer framework\n. I looked on iphone4 and there are only 8 images for iPodUI, none of which are tab bar icons.\n. Oh, thats strage, I was running on 5.0.1 device, but after deleting the app from device and compiling again I get the 64.  Thanks!\n. ",
    "pnc": "Understood. Might pop that information in the README.\nThanks for a sweet tool!\n. Understood. Might pop that information in the README.\nThanks for a sweet tool!\n. ",
    "ekdevdes": "+1\n. +1\n. ",
    "ghost": "i found my way here looking for the answer to the same question. \n. i found my way here looking for the answer to the same question. \n. ",
    "odrobnik": "The answer is: Yes. The HIG only prohibits use of icons for a different purpose than the users expect. i.e. I once had an app rejected because I used the edit button icon for settings.\n. Even though I am not aware of any change now I see the folder being created. Probably my mistake. Closing Issue.\n. The answer is: Yes. The HIG only prohibits use of icons for a different purpose than the users expect. i.e. I once had an app rejected because I used the edit button icon for settings.\n. Even though I am not aware of any change now I see the folder being created. Probably my mistake. Closing Issue.\n. ",
    "robertotremonti": "Anyone here?\n. Anyone here?\n. ",
    "sdtaheri": "They are all cut down from bottom on iOS 8 and 9.\n. They are all cut down from bottom on iOS 8 and 9.\n. ",
    "ZevEisenberg": "Maybe it\u2019s vector?\n. Maybe it\u2019s vector?\n. ",
    "monjer": "0\uff0c\u3002\uff01\n. 0\uff0c\u3002\uff01\n. ",
    "leviathan": "Confirmed. Don't see the IPA tap in iOS 7\n2014-01-07 09:22:49.516 iOS Artwork Extractor[17276:60b] 'Mobile Applications' directory not found.\n. Confirmed. Don't see the IPA tap in iOS 7\n2014-01-07 09:22:49.516 iOS Artwork Extractor[17276:60b] 'Mobile Applications' directory not found.\n. ",
    "SamusAranX": "Out of curiosity, why aren't you running this in the simulator? I got everything I needed doing that.\n. Out of curiosity, why aren't you running this in the simulator? I got everything I needed doing that.\n. ",
    "adamek314": "App will open in iOS Simulator Version 8.0 (541), but it crashes as soon as you tap any save button.\n. App will open in iOS Simulator Version 8.0 (541), but it crashes as soon as you tap any save button.\n. ",
    "tomguthrie": "Quick fix because -[AppDelegate homeDirectory] isn't working properly and it looks like the simulator stops you trying to write outside of potential iOS sandbox. Just replace this in AppDelegate.m:\n``` objc\n- (NSString ) saveDirectory:(NSString )subDirectory\n{\n    NSString *saveDirectory = NSProcessInfo.processInfo.environment[@\"ARTWORK_DIRECTORY\"];\nif (!saveDirectory)\n{\n    saveDirectory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];\n}\nif (subDirectory)\n    saveDirectory = [saveDirectory stringByAppendingPathComponent:subDirectory];\n\nif (![[NSFileManager defaultManager] fileExistsAtPath:saveDirectory])\n{\n    NSError *error = nil;\n    BOOL created = [[NSFileManager defaultManager] createDirectoryAtPath:saveDirectory withIntermediateDirectories:YES attributes:nil error:&error];\n    if (!created)\n        NSLog(@\"%@\\n%@\", error, error.userInfo);\n}\n\nNSLog(@\"Saving to: %@\", saveDirectory);\n\nreturn saveDirectory;\n\n}\n```\nIt logs the directory where it saves to so you can find it.\n. Quick fix because -[AppDelegate homeDirectory] isn't working properly and it looks like the simulator stops you trying to write outside of potential iOS sandbox. Just replace this in AppDelegate.m:\n``` objc\n- (NSString ) saveDirectory:(NSString )subDirectory\n{\n    NSString *saveDirectory = NSProcessInfo.processInfo.environment[@\"ARTWORK_DIRECTORY\"];\nif (!saveDirectory)\n{\n    saveDirectory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];\n}\nif (subDirectory)\n    saveDirectory = [saveDirectory stringByAppendingPathComponent:subDirectory];\n\nif (![[NSFileManager defaultManager] fileExistsAtPath:saveDirectory])\n{\n    NSError *error = nil;\n    BOOL created = [[NSFileManager defaultManager] createDirectoryAtPath:saveDirectory withIntermediateDirectories:YES attributes:nil error:&error];\n    if (!created)\n        NSLog(@\"%@\\n%@\", error, error.userInfo);\n}\n\nNSLog(@\"Saving to: %@\", saveDirectory);\n\nreturn saveDirectory;\n\n}\n```\nIt logs the directory where it saves to so you can find it.\n. ",
    "aentan": "I need them too.\n. I need them too.\n. ",
    "ide": "@0xced: any interest in my PR?\n. @0xced: any interest in my PR?\n. ",
    "johnqh": "Would like 3X too.\n. Would like 3X too.\n. ",
    "nuthatch": "Ide's @3x branch works. Thank you!\n. Ide's @3x branch works. Thank you!\n. ",
    "Stunner": "Yes, Ide's 3x branch works: https://github.com/ide/iOS-Artwork-Extractor/tree/3x Thanks for the tip @nuthatch \n. Yes, Ide's 3x branch works: https://github.com/ide/iOS-Artwork-Extractor/tree/3x Thanks for the tip @nuthatch \n. ",
    "malhal": "Shouldn't this have been merged to the trunk?\n. Thanks so much @tomaskraina for fixing this, attempted it myself but then when it got time consuming I thought I'd see if anyone else done it and there you were to save the day!\n. Shouldn't this have been merged to the trunk?\n. Thanks so much @tomaskraina for fixing this, attempted it myself but then when it got time consuming I thought I'd see if anyone else done it and there you were to save the day!\n. ",
    "kolyuchiy": "Thanks!\n. Thanks!\n. ",
    "krin-san": "I'd like to know it too.\n. I'd like to know it too.\n. ",
    "colejohnson66": "No. Apple has a copyright on these images.. No. Apple has a copyright on these images.. ",
    "tomaskraina": "You can use my fork in the meanwhile - https://github.com/tomaskraina/iOS-Artwork-Extractor\n. You can use my fork in the meanwhile - https://github.com/tomaskraina/iOS-Artwork-Extractor\n. ",
    "philipamour": "@tomaskraina Thank you very much, fellow Czech Londoner. \ud83d\ude0a Works like a charm! \ud83d\udc4d \n. @tomaskraina Thank you very much, fellow Czech Londoner. \ud83d\ude0a Works like a charm! \ud83d\udc4d \n. ",
    "odemolliens": "Works. Thanks.\n. Works. Thanks.\n. ",
    "capnslipp": "+1 This is a minimal change that provides compatibility with the latest iOS (9.3).\u00a0\u00a0Can we get this merged?\n. +1 This is a minimal change that provides compatibility with the latest iOS (9.3).\u00a0\u00a0Can we get this merged?\n. ",
    "jonasschnelli": "Tested ACK\n. Tested ACK\n. "
}