{
    "cwRichardKim": "hey, I'll look into it! thanks for letting me know\n. done! let me know if there are any problems\n. damn nice catch! I just updated the cocoapod. let me know if there are any problems again\n. feel free to close this if everything works, I'll keep it open\n. yea, I think I just fixed this. I'll close this one and keep the other open. feel free to close #1 if it works!\n. interesting. i\u2019ll look into this! I\u2019ll let you know if I end up making something of it\nBest,\nRichard\n\nRichard Kim (Choong-Won)\nOn Monday, December 29, 2014 at 5:39 PM, Kevin Xu wrote:\n\nI would love an option where the badge is just a red circle no matter what number the count is (as long as it's > 0)\nIt's a trend in Chinese apps coined the \"Indeterminate Badge\" in this article http://dangrover.com/blog/2014/12/01/chinese-mobile-app-ui-trends.html#badges\nI just thought it was interesting and would greatly enhance the use cases of this plugin! Thanks again!\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/cwRichardKim/RKNotificationHub/issues/3).\n. I think I made the appropriate changes, and released a new pod version. do you mind testing it out to see if it works?  I tested a bunch just now but just checking that this is what you're looking for.\n\nuse: [hub hideCount] and [hub showCount]\n. ah unfortunately, I don't think so.  Unless you make your own custom view at the bottom, you're not allowed to mess with the views.  Apple wants to make sure everything follows the code or something when it comes to TBCs.  Sorry about that.  I haven't actually tried it though! What you could do is make a TBC class, make the hub a global variable and try to call [TBC.hub increment] from one of it's views.  I'd be interested to see if it worked, but I don't think it will\n. Hey! This option already exists actually (if you check the readme, you'll see one image of the icon being on the left). I'm looking at your code and I don't think I agree with your design decision as it takes control away from the user. I think I know why you went for that (it reads more like english), but the current method (setCircleAtFrame:) allows the user pixel-perfect precision\n. I really appreciate the effort, but I don't think I can take your code, especially because it changes the interface, which means that when I update the code, everyone who is using has to change their code (it's not a cool thing to do)\n. yea thanks so much man, I didn't mean to come off so abruptly hahaha. I really appreciate your input!\n. interesting solution, thanks!\n. sorry i turned off notifications for this by accident, I'm checking out the code now\n. looks good, thanks for the input!\n. Are you using the cocoapod? I recently updated with the PR, but haven't released a new version yet. Try cloning from master\n\u2014\n(Choong-Won Richard Kim)\nOn Sat, Apr 25, 2015 at 4:18 PM, Shukuyen notifications@github.com\nwrote:\n\nThis doesn't work with UIBarButtonItems created with -(instancetype)initWithImage:(UIImage *)image style:(UIBarButtonItemStyle)style target:(id)target action:(SEL)action and UIBarButtonItemStylePlain. Any idea?\nReply to this email directly or view it on GitHub:\nhttps://github.com/cwRichardKim/RKNotificationHub/pull/8#issuecomment-96273734\n. @steilerDev thoughts? \n. Thanks for the quick responses guys. Let me know if there is anything you need from me\n. sorry i'm just getting around to these, I accidentally turned off notifications\n. looks good, thanks for the input\n. hey i'm really sorry about not responding, I turned off notifications for this by accident. checking out the code now\n. removed nextRectWithDiameter, nice catch\n. I'm a little confused as to what this PR achieves.  Would you mind explaining a little?\n. Ok so I'm unfamiliar with this kind of thing, but from my experience, testing is only really needed when you're working on an expansive project that has many moving parts.  I've heard of specta, but why would one need a testing framework for a pretty basic UI-based repository? I'm unfamiliar with Travis, but again, I'm struggling to see why it would be necessary for something like this (also I don't think I understand what it does. The website isn't very clear).\n\nWhat benefit does this have for the end user? (the developer using the pod).  Or is it mostly just for me for when I further development of the pod?\n. Thanks for the clear response, one last question: for the snapshot technique, this would have to be changed if I ever change the default aesthetic, correct?\n. sounds good.  Last last question (sorry haha). So you said I have to run pod install, does this mean everyone is required to have more dependencies when using this repo or is it just for the test / demo project.  Also looks like I should set up travis and coverall accounts huh\n. thanks, this has been really informative. Merging!\n. I'm getting this error:\ndiff: /../Podfile.lock: No such file or directory\ndiff: /Manifest.lock: No such file or directory\nerror: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\n. I reverted this for now until the error is figured out.  That's my bad for not checking out the branch first.  I think it should definitely be a requirement that someone without cocoapods setup should be able to open and run the project.\n. I'm a huge fan of this, and I LOVE how you did all the podspec stuff already hahahahaha. give me a second to look over the code\n. for legacy reasons, the modification to remove negative values worries me a little, what are your thoughts?\n. agreed, but I think you're right in that intuitively it should be unsigned. if you can make the changes (and I agree with 2.0.0), I'll run a few tests and merge\n. looks great, thanks for the input\n. yup!\n. Hey! thanks for you input, sorry for my late response.  The PR looks simple enough.  Do you mind describing the first issue (the white label thing) a little bit more?  A screenshot would be super helpful too.  Thanks!\n. sweet.  Thanks!\n. done! thanks again\n. not at the moment.  It's an incredibly simple repository though, and I'll accept PRs\n. you'd have to get into the code unfortunately, but it wouldn't be hard at all.  It's literally just a UIView that comes down.  It has some interesting animations / sizing stuff but the view itself is static and rectangular\n. I like this idea (didn't realize it wasn't default), but the implementation is a little complicated.  I'm just going to let the user fully change the font on line 209.  Thanks!\n. my bad guys, it seems i turned github notifications off.  Taking a look now\n. i'll look into this @Oscargp1986 would you mind sharing your code? apologies for the late response, I just realized my github notifications were turned off\n. so I built a swift project and wasn't able to replicate the problem.  open to any suggestions.  It seems like the code in question is \nobj-c\n//%%% hides the notification if the value is 0\n- (void)checkZero\n{\n    if (self.count <= 0) {\n        redCircle.hidden = YES;\n        countLabel.hidden = YES;\n    } else {\n        redCircle.hidden = NO;\n        if (!isIndeterminateMode) {\n            countLabel.hidden = NO;\n        }\n    }\n}\nWhich seems to misbehave in asynchronous callbacks.  I'll keep this open for now, and I'm willing to take a look at any PRs\n. Hmmm. unfortunately, that wasn't an intended feature.  If you're absolutely set on doing this, I would download the repository (don't use it as a cocoapod) and edit the function \"setView\". You'll want to change the \"redCircle\" object to be a UIImageView, but it might take some wrestling and you won't be able to use some of the features (animations might be weird).  Hope that helps\n. looking into this now. sorry for the delay\n. fixed\n. That would usually be my job. I'll take a look at how this tests with all the animations though i think it should be ok\n. ready to merge once the typo is fixed \ud83d\udc4d \n. I don't think so, sorry.  You could try to have some kind of time-delayed loop but that's about it\n. what is the intended use case here? (apologies for late response)\n. not sure i understand, but can i close this issue?\n. So sorry for the late response.  I tried with these two and it seems to work fine:\n[hub setCountLabelFont:[UIFont fontWithName:@\"Helvetica\" size:10]];\nhub.countLabelFont = [UIFont fontWithName:@\"Times New Roman\" size:15];\nI can only assume that something is happening with the swift / objc communication.  Can you try calling the setter directly?\n. It was just a design choice.  Someone complained about the text reaching outside of the bubble on large numbers.  Setting the size based on the width ensured that regardless of the font and regardless of the number, the text will always be in the bubble\n. also, that code is only called when you use setCircleAtFrame.  If you're calling that somewhere, make sure the font-size changing part is called after that and you should be able to control it however you like\n. this is not an issue, thanks\n. sorry, we don't support this but it should be relatively easy to implement. happy to take a pull request!. Hey, happy to look into a pull request but unfortunately I'm not actively working on this anymore. i don't think i understand your question. can you please explain further?. can you show me all of the code related to this issue?. good to hear, i think it's likely to do with the sequence of events or some synchronicity issue!. this is likely to do with how UINavigationBar boxes the buttons. it's very difficult to work with custom views in UINavigationBar, so unfortunately it's out of scope of this project. i'm happy to accept a pull request if a solution is found. hey, unfortunately i didn't write the border code, it's just a standard CALayer property.  have you tried running it on a device? maybe it's just how your simulator screen renders it.  I'm going to close this because it's not an issue with this library. I believe the only thing that's outside of the current release is markdown changes on the readme. is there something in particular that you're looking for?. @zachlucas feel free to respond, but I'm going to close this issue for now since I don't see any reason to create a new release just for a small readme change. oh yea you're totally right, I was looking at the wrong year lol.  I'll fix this later today when I get off work, thanks for pointing this out. @zachlucas done, let me know if there are any issues \ud83d\udc4d . fixed with #38 . thanks!. shouldn't this be 31? \nedit: ah, nvm I think I understand the layout a little better now\n. wow you really turned this repo inside out didn't you hahaha\n. is there a reason for this?\n. good catch\n. hmm ok, shouldn't be any issues\n. missing a `\n. ",
    "imkevinxu": "Cool, please let me know in this thread if you decide to update it! :)\n. Tried it again, still doesn't work. I think you need to update the Podspec and push to Cocoapods again https://github.com/cwRichardKim/RKNotificationHub/blob/master/RKNotificationHub.podspec#L52\n. Totally works, thanks man!\n. Same issue as https://github.com/cwRichardKim/RKNotificationHub/issues/1?\n. Yep totally worked on my end, thanks so much for the quick addition Richard!\n. ",
    "wizard699": "Your library working properly with ios 7. But, when i use \"pod install\" or \"pod update\".... The cocoapods Platform says that your library goes only for ios 8.1. \nIf you have corrected also this, ok.\nThanks in advance \nInviato da iPhone\n\nIl giorno 29/dic/2014, alle ore 08:17, Richard Kim notifications@github.com ha scritto:\nClosed #2.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "ghost": "Sounds good! Thank you for the feed back!\n. ",
    "uncoverd": "I decided to implement this because I saw no easy way of placing the circle on a corner without having to fiddle with the exact pixel positions. I was just looking for a quick and cheap way to avoid the tedious corrections needed to make the circle look good on any corner (not just the default one) while prototyping my application's user interface. \nI also thought it would be good to offer an alternative to setting the exact pixel values, as the layout is displayed on all kinds of devices with different sizes and ratios on projects using AutoLayout. \nI can understand your point about backward compatibility. Thank you for your comments. \n. I removed all the changes that broke the interface in 59fda6d8baff0333217070f94b58719ed3bb082a. Maybe someone will find it useful :smiley:. Great job by the way, this repo made my life easier :+1: \n. ",
    "petaren": "So I've done some research and found the cause. This is caused due to UITableViewCell setting all its subviews .backgroundColor to [UIColor whiteColor] when it is selected. This makes the red circle disappear. \n. Created a pull request with a possible solution to this issue. \n. ",
    "marcelosalloum": "[LIKE]\n. ",
    "Shukuyen": "This doesn't work with UIBarButtonItems created with -(instancetype)initWithImage:(UIImage *)image style:(UIBarButtonItemStyle)style target:(id)target action:(SEL)action and UIBarButtonItemStylePlain. Any idea?\n. I do, but specified that the pod should be taken from :head, because there was no tag for the latest commits yet. I can call [[RKNotificationHub alloc] initWithBarButtonItem:menuButton]; but the badge doesn't show. The reason for that is that [barButtonItem valueForKey:@\"view\"] returns nil for my barButtonItem in - (id)initWithBarButtonItem:(UIBarButtonItem *)barButtonItem\n. Yes, the value for view is nil but there is a key \"image\" that contains the UIImage. \nI will try to work around that by initializing the UIBarButtonItem with custom view that contains the image.\n. It's working with a customView UIBarButtonItem, but now I run into the leftBarButtonItem positioning problem on iOS7+ ... can't use the negative spacer trick here, so I will need to find another way. Not a problem of RKNotificationHub or this pull request, though.\n. ",
    "steilerDev": "puh...since the api that I am using is not documented (using kvc to get the view of the bar button should work in general) I really can't say why this is not working when initiating with an image.\nI could try to give an educated guess: Since you are initialising the button using an image maybe there is no view accessible using the key \"view\" but rather something LIKE \"imageView\". I would need to investigate on all available values that are accessible when initiating the button with this initializer. Maybe I can find the time somewhere next week, or you can give it a try.\n. Exactly what I though, we could adjust the notification hub initializer to check if the 'view' is available and if not try to get the 'image'. \nYou should be able to attach the notification badge to the superview of the image. Let me know if that worked.\n. ",
    "filwag": "The PR doesn't change any existing behaviour of the library. But it does cover almost all the code with unit tests, thus facilitating possible further changes, refactoring efforts and in a certain way documenting current behaviour using specs. I was using Specta/Expecta for test cases and FBSnapshotTestCase for snapshot testing (here's a good source on testing techniques in iOS: http://www.objc.io/issue-15/). I've added tests to the test target of the demo project (RKNotificationHub.xcodeproj). Please note that you need to perform \"pod install\" and then open generated RKNotificationHub.xcworkspace to be able to run the tests (\u2318+u in Xcode).\nMoreover, the PR enables automated builds of the test target on Travis CI on every change pushed to the repository. In addition, generated test coverage stats are sent from Travis CI to the Coveralls service making it possible to track changes in code coverage stats.\nPlease let me know if you would need any further details on the PR.\n. > Ok so I'm unfamiliar with this kind of thing, but from my experience, testing is only really needed when you're working on an expansive project that has many moving parts. I've heard of specta, but why would one need a testing framework for a pretty basic UI-based repository?\nI would agree that unit tests are probably much more valuable when you are dealing with a big library with thousands and thousands lines of a code especially when the code was contributed by different people. But actually any library that have any kind of behaviour can benefit from being covered with tests. Even those libraries that are more UI-oriented; their views can be tested using snapshot testing techniques.\n\nI'm unfamiliar with Travis, but again, I'm struggling to see why it would be necessary for something like this (also I don't think I understand what it does. The website isn't very clear).\n\nIt's a great automated tool that performs builds and runs all tests for the repo thus checking the status of the build on every change that was pushed to the repo. If someone sends a PR, you will be able to see if those changes break the build or make any test fail (or even if it changes the test coverage stats in case you also have Coveralls integrated).\n\nWhat benefit does this have for the end user? (the developer using the pod). Or is it mostly just for me for when I further development of the pod?\n\nUnit testing facilitates further changes (improvements or refactoring of the existing features, new features) by providing a simple way to check if everything still behaves as expected. This is especially helpful for other contributors that might not know all the implicit intricacies of the library implementation and preventing them from changing behaviours that they haven't intended to change.\nAlso, BDD-styled specs serve as a kind of a documentation and library usage samples. It also provides a clear context of a failing scenario if any test fails.\nOne more benefit for the end user (developer) is that test coverage gives more confidence about the reliability of the code and thus making it safer to use it in production. Code coverage stats from the Coveralls banner in the Readme file even gives a numeric proof of that :)\n. This CocoaPods blog post includes a list of pull requests that were made during the Test Jam for other popular pods besides RKNotificationHub: http://blog.cocoapods.org/Jamming-2015/. Note that many of them are also UI-based.\n. Yes, in this case you need to update the snapshots to test against. This is really simple, just replace the calls to haveValidSnapshot() / haveValidSnapshotNamed(...) with recordSnapshot() / recordSnapshotNamed(...) in corresponding test cases, then run the tests to update snapshot files. Return back to haveValidSnapshot() / haveValidSnapshotNamed (...) once you're done. There's also a handy Xcode plugin available for quick browsing through all failed snapshot tests and override old snapshots with updated versions with a single tap: https://github.com/orta/snapshots.\n. Installing RKNotificationHub via using cocoa pods doesn't require more dependencies. But this was a good point anyway: simply checking out the repo and running the demo project required it. I've updated the PR and disabled test target when building for running, so this is no longer the case. The user would need to pod install for the demo project only for running tests while the main target doesn't have any extra dependencies.\nAs for Travis and Coveralls, the setup is pretty basic. Go to https://travis-ci.org and https://coveralls.io, login using your GitHub account (it's free for open source projects) on both and enable RKNotificationHub repo for both. After any change pushed to the repo (for example, merging PR would do), GitHub would automatically trigger a build script on Travis, which in turn will send code coverage info to Coveralls. The last thing would be to update Travis and Coveralls banner links in the Readme file once you are ready with the integration. Let me know if you have any trouble with those services :)\n. Sorry you had to revert this. Actually those errors are related to the test target only and I'm able to run the main target without any extra work (please try this on your side and confirm). But, I would agree that it's not clear for the developer that those errors can be ignored as long as they don't use test target.\nI would suggest 2 ways of resolving this:\n1. Remove Pods and *.xcworkspace from .gitignore and push pods sources to the repo, so there's no need to have an environment with cocoa pods installed; all dependencies would be packaged right within the repo (here's a helpful note on this approach vs. keeping it in .gitignore: https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control).\n2. Create a separate Xcode project inside the repo solely for testing. This project would require \"pod install\", but the original demo project would remain as it was.\nLet's decide what option to use and I will amend my PR.\n. Good question. This is actually a feature of BDD-style syntax: sibling blocks are independent of each other. The order of calls for the first two tests from \"changing the count\" is like this:\n1. before block -> describe \"increment\" block -> it \"should increase count\" block\n2. before block -> describe \"incrementBy:\" block -> it \"should increase count by given value\" block\nA new RKNotificationHub object is created with count 20 for each run in the \"before\" block.\n. Yes, I've spotted this behaviour when I was playing with the library and decided to make it explicit by adding it to the spec. This example illustrates how specs can be useful for the end user (the developer, as you've stated earlier). Besides being a unit testing facility, the spec works like a documentation and a set of usage samples of the library and one can simply look through the spec to better understand its behaviour and spot not-so-obvious cases. As for this particular case, it shows that decrement and decrementBy: behave slightly different when current count is 0 (although I'm not sure that you have actually intended to have this distinction from the very beginning :) ).\n. ",
    "vokal-isaac": "I hadn't put much thought into it\u2014my expectation was that the count would be unsigned (the count properties of NSArray, NSDictionary, and other collections are NSUIntegers), so I made that change first, then realized that necessitated removing the ability to have negative counts.  I wouldn't necessarily be opposed to replacing NSUInteger with NSInteger to allow negative values, but I don't really see the point in having a negative count (but I'm coming from a particular use case in which it wouldn't make sense).\nGiven that leaving it as NSUInteger is a potentially breaking change, the version number should probably be 1.1.0 or 2.0.0 rather than 1.0.6 if it's left that way, though.\n. As soon as I get free of midday meetings, I'll make those changes.\n. Changes to insert the missed return; and make the version 2.0.0 should be pushed now.\n. Thanks for this project & for the quick response to the pull request.\n. At the time, I'd thought I'd want a way to get the value of countLabelFont and this @property line is equivalent to declaring the setter that was already there plus the getter I wanted.\n. Oops\u2014there should be a return; inside this if block.\n. ",
    "powerqian": "Hi,\nIn iOS 6, the default backgroundColor of a UILabel is white color. In the code, the frame of the countLabel is the same as redCircle, and on top of it. As a result, the redCircle is covered by a white background countLabel. Screenshot is as follows\n\n. Please consider to publish an update to CocoaPods so that others can use this library for projects targeting iOS 6.\nThanks.\n. ",
    "ch4ot1c": "Sounds good - Thanks\n. ",
    "allaire": "Good idea. @cwRichardKim are you still actively maintaining the lib? Looks awesome.\n. Fixed the issue by switching to customView UIBarButtonItem:\nBefore:\nvar activityViewsBarButtonItem: UIBarButtonItem {\n        return UIBarButtonItem(image: UIImage(named: \"AlarmIcon\"), style: .plain, target: self, action: #selector(BaseTabBarController.activityViewsBarButtonItemPressed(_:)))\n    }\nAfter:\n```\n    var activityViewsBarButtonItem: UIBarButtonItem {\n        let button = UIButton(type: .system)\n        button.setImage(UIImage(named: \"AlarmIcon\"), for: .normal)\n        button.frame = CGRect(x: 0, y: 0, width: 35, height: 35)\n        button.addTarget(self, action: #selector(BaseTabBarController.activityViewsBarButtonItemPressed(_:)), for: .touchUpInside)\n    return UIBarButtonItem(customView: button)\n}\n\n```\nAnd then it worked. I think this was a regression in iOS 11 (unsure). @cwRichardKim hope it helps!. ",
    "goktugyil": "Seems not\n. ",
    "Oscargp1986": "I have the same problem (I use objective c). I have a bar button item to navigate to notifications history. After the user reads all notifications and goes back to previous view controller nothing works to hide the hub. Set count to 0, set the hub to nil, nothing works. My solution is to hide the view I use to init the hub. So I have to create a view with the same frame that the button item, and hide the view.\n. I can't share the code because I didn't commit it... Sorry\n. ",
    "ghysrc": "Same problem here. I found a way to solve this.\nfor v in msgBtn.subviews {\n                v.removeFromSuperview()\n            }\nIt's not elegant, but it works.\n. ",
    "saqibdb": "if(count == 0)\n        {\n            [hub hideCount];\n            [hub setCircleColor:[UIColor clearColor] labelColor:[UIColor clearColor]];\n        }\n        else\n        {\n            [hub showCount];\n        }\n            [hub setCount:[[collection1 getTotalObjects] intValue]];\n            [hub pop];\n}\nThe Workaround that I did to mitigate this\n. ",
    "hanishassim": "I happen to get this problem too.. does this got solved?. ",
    "demiculus": "I guess I'll write something from scratch by getting inspiration from your repo. Thanks\n. ",
    "Lasithih": "Found a solution. Use this\n```    \nlet imgView = UIImageView(image: UIImage(named: \"ico_cart\"))\nself.btncart.customView = imgView\nself.hub = RKNotificationHub(view: imgView)\n//additionally use these methods\nself.hub?.scaleCircleSize(by: 0.7)\nself.hub?.moveCircleBy(x: 5, y: 0)\n```. Have the same problem. ",
    "SohailKh": "also curious, is it smiled upon to bump the podspec version or would the proj maintainer usually do that?\n. ",
    "huangboju": "view -> _view \nhave a try\n. ",
    "marcuswu0814": "@cwRichardKim , when using UIBarButtonItem's init method initWithTitle:style:target:action: will cause this issue, if create a UIBarButtonItem with customView, it work well.\n. ",
    "jkpang": "iOS Custom Badge, Support UIView, UITabBarItem, UIBarButtonItem ,Support Objective-C/Swift : \nhttps://github.com/jkpang/PPBadgeView\nhave a try. ",
    "HanksHu": "You can use \ndispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.001 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n            self.rightBarButtonHub = [[RKNotificationHub alloc] initWithBarButtonItem: BarButtonItemm];\n        });. ",
    "rozum-dev": "Sorry, what do you mean by calling setter directly?\nIn my case (I'm using exact swift / objc) I can't set font size bigger then half circle size 'cause you cap it in line 209 for some reason with \n[countLabel setFont:[UIFont fontWithName:font.fontName size:redCircle.frame.size.width/2]];\nUnfortunately this size is too small for me. \nThis limitation seems a bit extra for me taking into account that you have default font size in setCircleAtFrame method.\nWhy wouldn't give users  chance to set any size font outside the lib?\nSomething like this, just:\n- (void)setCountLabelFont:(UIFont *)font\n{\n    [countLabel setFont:font];\n}\nPS. Great lib by the way thanks!\n. ",
    "songxing10000": "I mean if my barItem is  generate from code use you lib not work, I see in  your demo the barItem is generate by storyboard, how can I let it works when I use code  generate barItem\nobjc\n    _barButtonItem =  ...pure code,not from storyboard\nfrom Google translate\nI see that your barItem is generated from the storyboard, and if i want to generate barItem with pure code, how can it take effect. ```objc\nself.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@\"fff\" style:UIBarButtonItemStylePlain  target:self action:@selector(barButtonPressed)];\n    barHub = [[RKNotificationHub alloc] initWithBarButtonItem: self.navigationItem.leftBarButtonItem];\n    [barHub increment];\n\n(void)barButtonPressed {\n  [barHub increment];\n  [barHub pop];\n}\n```\nBefore has been no effect, today re-wrote a demo, actually have effect\u2026\u2026\u2026\u2026. \n",
    "zachlucas": "@cwRichardKim I'm using the setCircleBorderColor:borderWidth method, that's on master but not on latest version it seems: \nhttps://github.com/cwRichardKim/RKNotificationHub/compare/2.0.4...master. ",
    "redcapua": "For issue #37 . You are welcome!. ",
    "SuriyaaKudoIsc": ":white_check_mark: Done.\n. "
}