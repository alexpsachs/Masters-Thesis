{
    "edrex": "First, thanks for making this utility. I appreciate the general-purpose interface and simple implementation.\nThe -hotreload flag isn't working on the two Linux systems I tried (Ubuntu 14.04.1 and Arch). It works fine on OSX, so I think there is a problem with the inotify backend of fsnotify. It doesn't seem like there should be any external dependencies since it is a kernel interface.\nOutput on starting webhook and then modifying the hooks file:\n% webhook -hotreload -hooks ~/.webhooks.json -verbose\n[webhook] 2015/03/25 20:53:20 version 2.3.0 starting\n[webhook] 2015/03/25 20:53:20 attempting to load hooks from /home/eric/.webhooks.json\n[webhook] 2015/03/25 20:53:20 loaded 2 hook(s) from file\n. . .\n[webhook] 2015/03/25 20:53:20 setting up file watcher for /home/eric/.webhooks.json\n[webhook] 2015/03/25 20:53:20 starting insecure (http) webhook on :9000\n(hooks file modified never gets triggered)\n. I wrote a test program to experiment with this. Modifying the file with echo bar >> foo etc generates a WRITE event, but saving a watched file with vim (on Linux only) generates the following events:\n2015/03/25 23:00:40 event: \"foo.txt\": RENAME\n2015/03/25 23:00:40 event: \"foo.txt\": CHMOD\n2015/03/25 23:00:40 event: \"foo.txt\": REMOVE\nOn subsequent writes, no more events are triggered on the file. \nI'm going to follow up with this on the fs-events issue queue, it seems like it's upstream.\n. this looks like the upstream issue for what I'm complaining about: https://github.com/go-fsnotify/fsnotify/issues/22\n. Agreed that adding config reloading on USR signal would be nice. For me, on all the platforms I care about, I can use systemd.path to watch the config file and send the signal.\n. ",
    "adnanh": "Yeah, the fsnotify library is indeed buggy at the moment. They are working on getting a full support and then probably adding it to the core Go packages (os/fsnotify), once they do that, I'll make sure to move to the official package, until then, there isn't much I can do :-(\nHowever, using nano or pico editor on centos, hotreload worked fine for me, I didn't try ubuntu or arch though...\n. I agree with you on adding the USR signal, it can certainly come in handy!\nI'll reopen this issue until I get it done. :+1: \n. I've tested USR1 signal on raspbian and it worked fine, so it should work on any other Linux distribution.\nHave in mind that USR1 signal might not be available on all OS-es (for example on Windows).\n. implemented in 5a96a5721af1f2f05bcc26a83c549ad76b37123a\n. implemented in f83af9713834a3b49f03f130aa9ed892b10972fd\n. Thanks for the write up! I'll take a look into this as soon as possible and will post you with an update and a solution... :-)\nThe thing with the form-encoded payload in webhook at the moment is that you can only get values of the passed variables, in your case being payload variable with the JSON payload. So basically you can pass that JSON string to your script and then parse it inside and extract the values you are interested in.\nI will see what modifications can I incorporate into webhook to make it easier for this scenario...\n. I'm thinking about adding a property on the hook named json-parameters which would contain a list of parameters that the user expects to contain JSON strings. Upon receiving the request, webhook would then try to parse those values as JSON and the user could use them just like the parameters in JSON formatted payload. (parameter.key.anotherkey). Solving the issue you currently have... What do you think?\n. Exactly that. Maybe parse-parameters-value-as-json? :-)\n. I'll get this done tonight.\n. Awesome! :-)\n. What exactly do you mean by authentication? The HTTP Basic Auth, or do you just want to verify the source of the request?\nCurrently the webhook providers such as Github and Slack for example, use tokens and signatures to ensure you the payload and the requests are coming from the trusted source (only you and the webhook source know that secret).\nYou can use that information in combination with the trigger-rule to verify and authorize only them to trigger your script.\nIf you want to restrict the sources the requests are coming from, you can use firewall on the machine, and for the basic authentication you can put webhook behind the nginx instance and set up authentication on the nginx. Basically using NGINX Basic Auth and NGINX Proxy Module.\n. Thank you :+1: \n. Sounds good, could you do the refactoring and create a PR?\n. Great job! Thanks :-)\n. Good catch!\n. Good catch, thanks for your contribution :-)\n. Did you open an issue on the wrong repository by any chance? \n. There is no reason for the webhook not to be able to parse the incoming Gitlab webhook considering the Gitlab makes a valid POST request to webhook with the JSON payload and correctly specified Content-Type header...\nhttp\nContent-Type: application/json\nPlease refer to the wiki pages to see how to create a hook.\n. Thanks for your suggestion, however, adding this feature to webhook would just increase the application complexity without providing any significant improvement.\nIf you wish, you could make a converter tool that converts webhook configuration files in specified formats into the webhook json format. I'd be more than glad to link to it on the wiki and the README pages :-)\n. I like the idea and I'll review this as soon as I get some time. I have a lot of going on at the moment :-)\n. Yes,  I wanted to ask you to submit a new PR to development branch :) \n. I guess this is from newer Golang version, my local version couldn't compile using syscall.SIGUSR1\n. fixes issue #29 \n. Thank you for your writeup,\nfew days ago, my coworker came to me with the same request.\nAlthough I wasn't all up for it at that moment, I do agree now that they should be incorporated into webhook.\nI would, however, make those features optional, instead of default. Having said that, I would gladly accept your PR-s :-)\n. It's possible to do it with the current version, but it would be ugly. Your script would have to receive all possible arguments and would then have to enumerate through them and decide what to do.\nI will add a support to define hooks with the same id, and the webhook will execute the first one that satisfies all the trigger rules. I believe this would solve your problem, it would allow you to define specific rules and commands for your hooks.\nOther thing that I'm going to implement is to allow webhook to pass whole payload or a subset of it as a JSON string to the command. This would make the current working solution (workaround) to your problem at least a bit prettier.\n. I was thinking of having verbose output set to on by default, and have a separate switch for silent mode for those that do not want the output. \n. Decided to use your approach. The webhook 2.3.5 will now fail under those conditions, unless you provide a -nopanic flag to it.\n. Thank you! :+1:\n. Thanks! :+1: Good to see you back :-) \n. Thanks! :+1:\n. Accidentally merged it into master, #43 reverts it. I made a #44 for you.\n. @timhughes There, merged into development now :-) Thank you for the contribution!\n. Edit: Did not see the #45 :-) Awesome work!\n. Totally agree with you. I think the best solution would be to create a webhook-contrib repository where developers could contribute their webhook-oriented stuff that others might find useful, ranging from build spec files to hooks.json management tools. This repo should only contain the webhook source code...\nEdit: I have created http://github.com/adnanh/webhook-contrib, we should migrate and organize all this stuff inside it, and then create a PR to remove it from this repo.\n. :+1: \n. I've simply moved files to webhook-contrib in their separate folders. They probably need an adjustment now, since they are not in the same repo as the source code. @timhughes @moorereason @almir \n. It looks like your repository is somehow out of sync. \nBuilding webhook with go 1.3.3 (on linux/amd64 though, but it shouldn't matter) works for me without any problems.\n\u279c  webhook git:(master) \u2717 git rev-parse master\n8de1a519269b2171f925d085e744ddc7167effa8\n\u279c  webhook git:(master) \u2717 go version\ngo version go1.3.3 linux/amd64\n\u279c  webhook git:(master) \u2717 go build\n\u279c  webhook git:(master) \u2717 ./webhook -verbose\n[webhook] 2015/11/20 10:14:31 version 2.3.6 starting\nCould you please try deleting the webhook, clone the repository again and then try building the webhook again?\n. Awesome :-) \n. :+1: \n. What happens when you execute redeploy.sh script manually?\n. Also, who is the owner of the file? Under which user is webhook running? Can that user access the script?\n. Can you add #!/bin/sh on top\n. That should solve it, can you please confirm so we can close the issue :-)\n. Glad we could help :-) :+1: \n. Wiki page with common errors and possible fixes would be even better :-) Feel free to contribute!. :). We did not want to maintain the Dockerfile in this repository (see #50), so it got moved into webhook-contrib repository.\n. The Dockerfile in webhook-contrib repository should serve as a guide on how to make your own image.\n(fork this repository, add that Dockerfile, change repo name and use that).\nI am going to include a link to this discussion for the others interested in running webhook inside a container in the README.md in this repository.\nI will also remove docker image from docker hub, as it's not maintained anymore, and it's now misleading users.\n. Now there is a good dockerized version of webhook at https://github.com/almir/docker-webhook\n. This PR fixes #63 \n. :+1:\n. :+1:\n. It would be a nice feature, I agree.\nAs a current workaround, you could put webhook behind an nginx instance and have the nginx proxy_pass requests to webhook, whilst adding those headers back in the response.\n. Implemented on development branch, and will be released in 2.4.0 (next release)\n. Released this as 2.3.8.\n. Sure, you can set up webhook to serve the hooks on your build machine, and then use ngrok to expose the webhook outside :-)\n. What payload is bitbucket sending? What is the configuration of your hook in hooks.json file?\n. You should remove \"parse-parameters-as-json\": [ { \"source\": \"payload\", \"name\": \"payload\" } ] from the hooks.json and then restart webhook.\nparse-parameters-as-json property is used to parse strings that are valid JSON. The payload bitbucket sends is not a string, it is actually an object.\n. Can you copy the exact output of the command: curl -v -X POST http://192.168.1.229:9000 \n. Turns out the Bitbucket has updated the event payloads. Try replacing { \"source\": \"payload\", \"name\": \"payload.commits.0.author\" } with { \"source\": \"payload\", \"name\": \"actor.username\" }\n. Sorry, try hitting the actual hook: curl -v -X POST http://192.168.1.229:9000/hooks/redep-it-hook\n. Are you sure you restarted webhook?\n. Yes, I asked you to remove that from your hooks.json file. Did it work after that?\n. Awesome. :-)\n. I guess the original example is now outdated, so we should update it. Do you mind doing it?\n. Correct. The check deprecation function would only detect the Regex field if the trigger rule is a MatchRule. It wouldn't catch it if it was nested inside of other rules.\nYou are right regarding the recursion as one option. Other approach would be writing json unmarshaller that would check for the existence of the Regex field and warn the user about the deprecation.\n. Closing for now since the deprecation check does not cover all the cases.\n. :+1: will do.\n. :+1:\n. Could you extract the coverage script into the webhook-contrib repository, since it's platform dependent and not necessary for the core webhook build, and we want to keep this repo as clean as possible :-)\nAlso, could you branch off from development branch so we can merge it back in :-)\nOtherwise, great job :-)\n. Could you just create a PR into development branch, so we can merge it in, we use master as release branch :-)\n. Thank you very much for your contribution and making webhook a better tool. :-)\n. Correct, this is indeed an issue and not an expected behavior. Could you please create a PR into the development branch with proposed fixes? Would you mind updating tests to cover this case as well so we can make sure it doesn't happen again :-)\nThanks!\n. I've reviewed your code and here are some of the problems I've found when multiple hooks are matched:\n- we are writing to the response body multiple times, so the output gets interwoven and useless... especially when some of the hooks use capture-command flag...\n- we are writing and rewriting headers multiple times so they get overwritten depending on the execution order\nAfter the review, I noticed that this feature introduced many problems, and the use case and usefulness for multiple hooks with the same id setup is questionable, so I have decided to remove multiple hooks with the same id altogether in the next webhook version.\nThe same effect can still be achieved by having a script that will launch other scripts when necessary.\nThank you for your PR, I'm sad to see the code go to waste, but it has made me re-evaluate some of my previous decisions, and this decision is for the best.\n. I need to first think about this feature and all the benefits and problems it will introduce.\n. This can be achieved simply by invoking curl as the execute-command, we don't want to maintain anything that can be done that way :)\n. Allows for more control that way and allows user to suit the script to their needs, while this way we would have to maintain every request for new use case :-)\n. You are correct. It leaks out the calculated SHA1 of the payload that it's expecting, this is a bug, no idea how this slipped out unnoticed!\n. :+1: thanks for reporting:)\n. I knew I saw this earlier, #83\n. As a security hotfix, I'll merge this directly into master. Good job guys!\n. Wasn't this already fixed in master (#83)\n. What to do with stderr? Should it be merged with stdout, or just print out the stdout without stderr?\n. This will be added in 2.5.0.\ninclude-command-output-in-response flag will now make webhook return raw stdout and log stderr.\n. Hello :-)\nRegarding the point number 1:\nI propose adding a flag to include stdout & stderror in failed executions and leave the current behavior as default.\nRegarding the point number 2: \nYou could wrap your command in a script that echoes your string to stdout and then runs the original command, and you have restored the old functionality. :-)\nHaving said that, I personally believe that the described use-case should be modified to use headers as a transport of such details.\nYou can define custom response headers on hook execution using response-headers setting in hooks.json, or on all hooks by using -header flag when starting webhook (you can find more details about those fields & flags on the wiki pages). i.e. you could set 'X-Served-By' header to return 'webhook' and check for it's existence in your build script, rather than mixing custom response message & the command output.\nCheers!\n. Please note that this is only possible if you are using\"include-command-output-in-response\" flag in hook definition.\nWill be added in 2.5.0\n. Done, since the latest tag was broken, I deleted it and recreated it, instead of opting for 2.4.1.\n. @moorereason what is your opinion on whether we should include this Makefile into this repo, or move it to webhook-contrib?\n. I will merge it then. @denji Could you please recreate PR but on the development branch?\n. Thanks \ud83d\udc4d \n. At the moment we're not using vendoring, so we are not affected, but we probably should switch to it. I saw the release and the change, but thanks for the heads up! Appreciated!. Agreed, the EnvName property should specify the full environment variable name, and it should not be prefixed by HOOK_. It will be fixed in 2.5.0\n. Looks like you have a webhook instance already running on that port with some stale configuration (perhaps you experimented with hooks.json file earlier and used pass-environment-to-command field).\n[webhook] 2016/09/29 12:10:09 listen tcp 127.0.0.1:7788: bind: address already in use\nafter this message the latest instance of webhook died because it could not bind to the 7788 port.\nThe rest of the log is most likely from that old instance serving the stale jira-new hook.\nTry killing all webhook processes first and make sure none of them is running, and then start one and try out the hook, the configuration you supplied here is good, and it should work for you too :-)\n. Awesome! Glad I could help :-)\n. Added it to Hook examples wiki page :-) Thanks!\n. It does so in parallel, launching shell command for every successful trigger. It is intended to act as a bridge between HTTP and shell. Following the unix philosophy, the queuing and locking system should be done as a separate tool that does just that thing and does well. :-)\n. If you happen to develop such tool I would gladly link to it in the webhook README page :-)\n. At the moment I do not have much time available on my hands, so I won't be implementing this, at least not anytime soon :-(\nIf you would like to contribute and implement the proposed solution, I would be more than glad to review your code and merge it.\nCheers! :+1: \n. Awesome, thanks for the contribution :-)\n. \ud83d\udc4d \n. Hey there, what version of webhook are you using and what is your hooks.json definition for the given hook?\nHere is a sample hooks.json definition:\njson\n[\n  {\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"entire-headers\"\n      }\n    ],\n    \"execute-command\": \"/home/adnan/test.sh\",\n    \"id\": \"test\"\n  }\n]\ntest.sh script:\n``` sh\n!/bin/sh\necho $1 > /home/adnan/test.log\n```\nTrigger with curl:\nsh\ncurl localhost:9000/hooks/test\nWebhook log after triggering the hook:\n[webhook] 2016/10/31 13:31:51 version 2.5.0 starting\n[webhook] 2016/10/31 13:31:51 setting up os signal watcher\n[webhook] 2016/10/31 13:31:51 attempting to load hooks from hooks.json\n[webhook] 2016/10/31 13:31:51 found 1 hook(s) in file\n[webhook] 2016/10/31 13:31:51   loaded: test\n[webhook] 2016/10/31 13:31:51 serving hooks on http://0.0.0.0:9000/hooks/{id}\n[webhook] 2016/10/31 13:31:51 os signal watcher ready\n[webhook] 2016/10/31 13:32:24 Started GET /hooks/test\n[webhook] 2016/10/31 13:32:24 test got matched\n[webhook] 2016/10/31 13:32:24 test hook triggered successfully\n[webhook] 2016/10/31 13:32:24 Completed 200 OK in 44.258\u00b5s\n[webhook] 2016/10/31 13:32:24 executing /home/adnan/test.sh (/home/adnan/test.sh) with arguments [\"/home/adnan/test.sh\" \"{\\\"Accept\\\":\\\"*/*\\\",\\\"User-Agent\\\":\\\"curl/7.35.0\\\"}\"] and environment [] using  as cwd\n[webhook] 2016/10/31 13:32:24 command output: \n[webhook] 2016/10/31 13:32:24 finished handling test\nContents of test.log:\njson\n{\"Accept\":\"*/*\",\"User-Agent\":\"curl/7.35.0\"}\n. Looking at your script in the commit that referenced this issue, $7 will be JSON string that contains all headers that have been passed to the webhook, it will never be equal to \"ping\". If you wanted the value from the header that contains ping (\"X-Github-Event\"?), you should reference it using the syntax you wrote:\njson\n{\n  \"source\": \"header\",\n  \"name\": \"X-GitHub-Event\"\n}\n. Weird. Could you create the setup I used in the comment above and copy the webhook output?\n. Also, what version of webhook are you using?\n. And which OS is webhook running on?\n. Aha! Finally got it!\nFrom RFC 2616 - \"Hypertext Transfer Protocol -- HTTP/1.1\", Section 4.2, \"Message Headers\":\n\nEach header field consists of a name followed by a colon (\":\") and the field value. Field names are case-insensitive.\n\nWhat Golang http package does is normalizes the keys in the request headers map using the \"Title case\", making webhook unable to extract X-Git_Hub_-Event because in the hash map it's under X-Git_hub_-Event.\nAs a temporary workaround you can use the X-Github-Event as a header name.\nGood catch, thanks!\n2.6.0 coming right up!\n. Fixed in  2.6.0.\nThanks a lot for your feedback!\n. You could also redirect the command stdout and stderr to /dev/null to get the same behavior :-). Your fork is 16 commits behind my master, merge the changes or change the reference to the hook import to use your personal fork and not adnanh/webhook :-) I highly recommend merging.. Missed them somehow. Thanks! \ud83d\udc4d . What version of webhook are you using? The 2.6.0 version fixes described behavior (there was a bug in the code which stopped hook execution if it couldn't extract an argument). With 2.6.0+, in your example the environment variable B would not be set, so your script can determine that and set the default value.\nCheers.. First of all, thanks for using webhook and making a PR.\nI agree this would be great addition to webhook.\nHowever, since this PR would change the default behavior of webhook other users might rely on, I would love to see this feature implemented as a per-hook configurable and global setting similar to how response headers are currently implemented. Leaving the 200 Ok to be default global setting.\nIf you did that, I would be more than glad to merge your contribution!\nThanks :-). Awesome! Thanks for the heads up!. Thanks for your contribution :-). Hey, expect one up tonight :-). Done, you can update the wiki now :-). Thanks for the contribution :-). Logs indicate that your hook id is webhook. Try hitting http://localhost:50100/hooks/webhook and see what happens :). :+1:. That feature has been implemented in 2.6.2. Your logs indicate that you are using 2.6.0, please update to the latest version and try again :-). You need to use go get -u github.com/adnanh/webhook to update if you already had an older version.. Have fun :-). Match rule is a terminating rule. That means and, or, not rules can have any other rules as a children, but match rule cannot. So you will have to create a rule like this: and(match, or(match, match)). Hope that clears things out :). Cheers :-). Thought you saw my :+1: :-). Anyways, I'll be more than glad to accept a PR for this feature, as I currently do not have enough time nor resources to dedicate myself to implementing a rock-solid solution to this problem :-). It will be implemented in the next release, as soon as I grab some free time :-)\nDoes iOS send any special headers that you could use to detect the background loading of the bookmark as opposed to the regular load?. That would be an option, or you could temporarily shut down the webhook and listen on the same port with netcat :). Thank you for using webhook and your intention to contribute.\nWe already had this discussion and decided not to support docker directly in this repository. Please read the #63 discussion for more details.\nYou can use https://github.com/almir/docker-webhook or use your own fork with your Dockerfile.\nFeel free to create a PR with this file on the webhook-contrib repository.\nAll the best!. Use -hooks file1.json -hooks file2.json -hooks file3.json when starting webhook. Adding hooks dir feature adds unnecessary complexity.\nInstead try modelling your problem differently. Leverage multiple webhook instances, ability to define multiple hooks inside one file, and the ability to use multiple hooks files within one webhook instance.. Use just one file:\njson\n[\n    {\n        \"id\": \"ose-webhook-dn\",\n        \"execute-command\": \"/etc/webhook/osedn.sh\",\n        \"command-working-directory\": \"/etc/webhook\"\n    },\n    {\n        \"id\": \"ose-webhook-up\",\n        \"execute-command\": \"/etc/webhook/oseup.sh\",\n        \"command-working-directory\": \"/etc/webhook\"\n    }\n]. You're welcome :-) Enjoy!. Thanks for the contribution! This looks awesome, could you just close this PR and open a new one on the development branch :-). Done, would you be kind enough to update the wiki pages :-). Agreed, thanks for the contribution :-). Yes, but without the verification part.. Alternatively, you can provide a token in the url to limit the scope of blind hits.. :+1:. Could it be an issue with how systemd handles execution?\nMore precise, the way it unsets all environment variables and sets the specific defaults.. Awesome! :+1:. Command should be powershell and you should pass rest of the arguments via pass-arguments-to-command hook property. To pass string use { \"source\": \"string\", \"name\": \"whatever you want to pass\" } as specified in https://github.com/adnanh/webhook/wiki/Hook-Definition. Substitute args with name and it will work. Check out https://github.com/adnanh/webhook/wiki/Hook-Definition. Everything they said, or run it like python script.py, ruby script.rb. Hint: script.py or script.rb is an argument to the appropriate command, and it needs to be passed via pass-arguments-to-command hook property.. Any argument after python script.py would be passed to the script I believe, no? . Could something like this help? \n- https://www.howtogeek.com/50786/using-srvstart-to-run-any-application-as-a-windows-service/\n- http://stackoverflow.com/questions/3582108/create-windows-service-from-executable. I am afraid I can't help you there, I don't use Windows at all :(. Old versions of webhook used to support multiple hooks with the same id, but it only brought complications to the overall architecture and the expected behavior so they are out now.\nThe best approach is to have a wrapper script that receives the 3 inputs and then calls your other scripts with the appropriate arguments.. Hey, thanks for using webhook :-)\nI will add IP logging support in the next release. I agree that it's a valuable piece of information that you currently cannot see in the logs.\nCurrently, the only way to check for the incoming IP is to set up a proxy in front of webhook that would pass it down via the header. For debugging purposes you could shut down webhook and start up a netcat on the port webhook is listening on and see the ip when the request comes in :-). I'll try it out as soon as I get some free time :-). It appears to be working for me. Could you please post the full hooks json file?. Also, I've released 2.6.4 with the IP logging feature. Yes, depending on your ARCH, all you need is to download the appropriate webhook-linux-ARCH.tar.gz from the Releases tab. (Most likely it'll be this one: https://github.com/adnanh/webhook/releases/download/2.6.4/webhook-linux-amd64.tar.gz)\nAnd replace the current executable with the one in the archive. After extraction, you might need to apply +x flag on it using chmod +x /path/to/webhook to make it an executable.. Nope, I literally fixed tests that were failing due to bad fixture. Here are the 2.6.4 changes: https://github.com/adnanh/webhook/commit/a38875213a92171fd9779629f77375691ee2b9c9. Did you compile both versions from source? I might have upgraded Golang version in between them on my laptop.... I'll close this issue for now as it appears to be fixed in 2.6.4. Feel free to reopen if it resurfaces again.... If you set the proper headers for the hook, theoretically you could send HTML.. Could you paste your hook definition you tried?. Anyway, for further reference, yes, it's possible to return HTML, here's an example hook. One would obviously replace echo command with their own command that returns dynamically generated HTML:\njson\n[\n{\n    \"id\": \"example\",\n    \"include-command-output-in-response\": true,\n    \"response-headers\": [\n      {\n        \"name\": \"Content-Type\",\n        \"value\": \"text/html\"\n      }\n    ],\n    \"execute-command\": \"echo\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"string\",\n        \"name\": \"<html><title>Test</title><body><h1 style='font-weight: bold; color: red;'>Hello from the other side.</h1><p style='padding: 10px; background-color: #eee; border-radius: 10px;'>This is a paragraph</p></body></html>\"\n      }\n    ]\n  }\n]\n\nThe output looks something like this:\n\n. Yes, you can. However, you're missing a comma. If you run your second proposal through the JSON linter you will see it's not a valid JSON.\nInstead it should be:\njson\n[\n    {\n        \"id\": \"redeploy-webhook\",\n        \"execute-command\": \"/var/scripts/redeploy.sh\",\n        \"command-working-directory\": \"/var/webhook\",\n        \"response-message\": \"Webhook UP\"\n    },\n    {\n        \"id\": \"test1\",\n        \"execute-command\": \"/var/scripts/test1.sh\",\n        \"command-working-directory\": \"/var/webhook\",\n        \"response-message\": \"Webhook UP1\"\n    }\n]. Easy, two ways:\njson\n[\n  {\n    \"id\": \"example\",\n    \"response-message\": \"{\\\"color\\\":\\\"green\\\",\\\"message\\\":\\\"It's going to be sunny tomorrow! (yey)\\\",\\\"notify\\\":false,\\\"message_format\\\":\\\"text\\\"}\",\n    \"response-headers\": [\n      {\n        \"name\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }\n    ]\n  },\n  {\n    \"id\": \"example2\",\n    \"include-command-output-in-response\": true,\n    \"response-headers\": [\n      {\n        \"name\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }\n    ],\n    \"execute-command\": \"echo\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"string\",\n        \"name\": \"{\\\"color\\\":\\\"green\\\",\\\"message\\\":\\\"It's going to be sunny tomorrow! (yey)\\\",\\\"notify\\\":false,\\\"message_format\\\":\\\"text\\\"}\"\n      }\n    ]\n  }\n]\n\nhook example if the string will never change (i.e. it's just a static string, but I don't see why anyone would do that.)\nhook example2 uses output of the executed command (for demonstration purposes I used echo with your string as the given argument) - you probably want this, your command would be a script that outputs the JSON string you want to return to the, I presume, Slack slash command\n. Hehe, happy hacking!. First of all, thank you for your contribution! It is very much appreciated.\n\nBefore I can merge this PR I would need you to do a few more things:\n - [ ] add test case scenarios for loading YAML and JSON hooks definitions\n - [ ] fix mentions of hooks json to something along the lines of hooks definitions\n - [ ] create the updated pull request against the development branch\n - [ ] when all of the above is done, update the documentation on wiki pages to indicate that the YAML is also supported. I didn't forget about you, I will merge this PR this week, as soon as I find some free time. I'm on a busy schedule this month. :(. Expect a release with this merged this Thursday :-). Webhook 2.6.5 has been released!\nhttps://github.com/adnanh/webhook/releases/tag/2.6.5. Hey, thank you for your contribution! I agree with you that we should include stderr in our logs as well, especially because we usually check logs when something is misbehaving, and they should be as verbose as possible to help us identify the real cause!\nBefore I can merge the PR, could you please just create it against a development branch, not the master :-). This is good. Thank you!. That's a great task for a community contributed tool, however webhook should not deal with it. :-)\nIf you create a such tool, I'd be more than glad to merge it into webhook-contrib repository, and reference it in the main README file in this repository.\nThank you for suggestions!. Currently your best shot is to create the validation inside your script, and use webhook to pass the token from the request to the script.\nBest solution would be to implement the JWT verification as a trigger rule. If you want to implement the trigger rule that verifies the JWT, I'd be more than glad to accept a PR for it!. Hey, here's a sample usage to extract the message and pass it down the command:\njson\n[\n  {\n    \"id\": \"example\",\n    \"parse-parameters-as-json\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"alert\"\n      }\n    ],\n    \"execute-command\": \"echo\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"alert.message\"\n      }\n    ]\n  }\n]. I'd be more than glad to accept a good PR for this feature! :+1:. Future looks bright for this one :-) Just a little bit more polish and it'll be ready!. This is the issue of the *nix signals and editor implementations, instead of sending MODIFIED signal when overwriting the existing file, some editors actually delete the file, and create a new one with the new contents (i.e. direct result of working in a temporary file, and then copying it over the original one).\nTry using different editor, or if that is not an option, or does not help, you will unfortunately be unable to use the -hotreload flag. In that case, you can still use kill -USR1 webhookpid to reload the hooks without the webhook restart.. Not really a prompt one hahaha, I usually respond within few hours of the issue, but this time I wasn't around :-)\nFeel free to add the warning to the docs! :-). Fixed in v2.6.6 by #172 . I would gladly accept a good PR for this feature :-). Fixed in v2.6.6 by #164 . If the server is sending the IP via headers one could use match-regex rule to validate the IP range.\nI would accept a good PR for this feature, but I do not have time to implement it myself.. Could you also post your hooks.json file so I can try to reproduce the issue?. Also what webhook version are you running?. :+1:. The problem was that he was running webhook as root user which did not have appropriate ssh keys on the GitHub. He either: ran webhook as user whose keys were on GitHub or he added root ssh keys to the GitHub.. You probably wanted to pass these arguments via environment variables and not parameters.\nIt would look like this:\n\nhooks.json\njson\n[\n    {\n        \"id\": \"redeploy-webhook\",\n        \"execute-command\": \"/webhook/src/redeploy.sh\",\n        \"command-working-directory\": \"/webhook/src\",\n        \"pass-environment-to-command\": [\n            {\n                    \"envname\": \"SCALR_INTERNAL_IP\",\n                \"source\": \"payload\",\n                \"name\": \"data.SCALR_INTERNAL_IP\"\n            },\n            {\n                    \"envname\": \"SCALR_SERVER_HOSTNAME\",\n                \"source\": \"payload\",\n                \"name\": \"data.SCALR_SERVER_HOSTNAME\"\n            }\n        ]\n    }\n]\n\nredeploy.sh\n```bash\n!/bin/sh\necho $SCALR_SERVER_HOSTNAME\necho $SCALR_INTERNAL_IP\n``. :+1: Whichever works best for you :-). You can specify multiple-hooksswitches for multiple files.. :+1:. Do not use ls directly, instead pass the myargs variable to your shell script, decode the args inside of the script yourself and then invoke the ls with those parameters. :-). Read up what @fbartels wrote.. In the described case, you should evaluate the secret in the script and use the webhook to simply pass the supplied parameter via environment variable or the command argument. The actual secret should also be stored in the environment variable so that you don't have to check in the secret to the git.. That would be awesome.. Any updates on the state? :). This looks awesome! Could you please update the wiki parameters (and perhaps create a separate page showing a simple use case how to use this. also don't forget to link to https://golang.org/pkg/text/template/ for those who would like to try more esoteric stuff with templates). Maybe we should go with the different approach. The wiki approach is a little bit flawed, as in, it is strongly related to the the latest release. How about we adddocs/` folder with the markdown file(s?) containing the current wiki contents. That way we can also have versioned documentation.\nHow does that sound? Maybe you have a better approach to all of this?. Of course this should be a separate issue from this topic :-) Thanks for this contribution and making webhook even more awesome!. How about a different approach. Adding ability to pass/stream request value(s?) to the command's stdin? That way you can stream arbitrary length payload to the command/shell script.. As soon as I grab some free time. Life's been busy these days... :-(. Fixed in #174 . Yes, it is possible.\nA sample hook definition could look something like this:\njson\n{\n    \"id\": \"dropbox-echo\",\n    \"execute-command\": \"/bin/echo\",\n    \"pass-arguments-to-command\": [\n        {\n            \"source\": \"query\",\n            \"name\": \"challenge\"\n        }\n    ],\n    \"include-command-output-in-response\": true\n}. Looks great! If you could add some tests for this feature, I would be more than glad to merge it in! Thanks.. Looks great! If you could just add tests for this feature, I would be more than glad to merge this feature :-). Thank you very much for your contribution and making a webhook a much better tool for everyone!. Alright, I tried out some scenarios. This works perfect when the include-command-output-in-response is set to true.\nHowever, when that is not the case, max-concurrent-executions flag has no effect because the hookHandler function launches goroutine and exits, executing the defer func() { <-hookExecutions[id] }() before the actual goroutine is done, which in turn allows launching arbitrary number of concurrent executions.\nFor this to work properly, the handleHook method should actually send the signal to the channel that the hook handling is done, not the hookHandler.\nWith that in mind, few other things can bite us from the nature of concurrent executions:\n- We have to be careful about writing to the channel after the goroutine is finished because hook might have been deleted in the meantime (by hotreload, or the USR1 signal), thus it will try writing in the non existent channel (since the cleanup method deletes the channel for the hook)\n- Hook might write to the non existent channel if the hook's maximum concurrent executions setting have been modified (the reload method creates a new channel with the new cap). Hey, didn't forget about you, just busy with work and life. I will grab some time this week to review everything and hopefully merge it :-). Hey, I left you a comment on the #175. If you plan on developing features for the upstream, create a simple symlink $GOPATH/src/github.com/adnanh to point to your $GOPATH/src/github.com/col-panic\n. I completely agree with @moorereason. Yes, it's a duplicate of #150 . Fixed in v2.6.6 by #172 . Nice workaround :-). This looks great!\nI would just change one little thing - instead of keeping file on exit by default, I would delete it by default.\nSo we can rename that option to \"KeepFileOnExit\".. Ah, you are absolutely correct. \nI would then remove the flag and do this cleanup by default, after the hook command is done executing, if the file is there, delete it.\nSince it's a tempfile, if the user wants to keep it, they should copy it to the appropriate place in their script code, because if we don't delete it, it's gonna be deleted after machine restart anyway.\n. Ahh, the #173 forgot to include request ID in the webhook_test.go file, I've fixed it now, pull the latest master into your branch :-). Can you just choose adnanh:development as base branch so I can merge it in :-). And update the wiki with the new option. Done!. Awesome, thank you very much for your contribution and making webhook a better tool!. Unfortunately, this approach will hang the request while the command is executing (even though we're not interested in it's output). That is the reason I used a separate goroutine in this case, so I can fire off the command in the background and close the request.\n:-(. > 1. When forking command in background and not waiting for it, you always return 200, even if command has failed. Would it not make sense to add a special config parameter if you want for request return immediately? I.e. by default webhook waits for command to complete and looks at exit code, returns 200 if all ok, and 500 if command failed. If you specify something like spawn-and-return: true then it simply spawns the script and does not wait for its completion. If this makes sense to you (and I kinda like such functionality) I can get a PR ready on Saturday probably.\nWe actually have the opposite behavior, we have a special config parameter if you want for request to wait the script execution (include-command-output-in-response etc...), because it's used way less than the 'fire-and-forget' method.\n\n\nIf we spawn and return request immediately, there is no easy way for us to track number of concurrent processes. The only way we can implement this is by looking at the list of processes running in the system and counting the ones that match the command we are about to start. This is unreliable though, because command can change the process name string. I would suggest that we have rate limiting applied only to cases when webhook waits for the process to complete, and ignores this parameter for entries with spawn-and-return: true.\n\n\nEither case would be a step forward, but maybe we could store the list of currently running hook commands and count them instead, and clean them out periodically using a separate goproc?\n\nadd Executions field in the Hook object\nwhenever the hook command should be invoked (either sync or async), if the hook has concurrency control flag set, go through the Executions array, count how many unterminated objects are in there, see if we can spawn another one and add the reference to the new os.Cmd into the Executions field)\nhave a separate go proc that will periodically go through all hooks and clean up the finished executions\n\n@ivanpesin sorry for the late reply :joy:\n. Webhook will log to the stdout/stderr if you use the -verbose flag when starting it up. So make sure to redirect that output to a file of your choice.\nIf the webhook is running as a service, make sure that it is started in the verbose mode (with the -verbose flag) and check out the journal logs.. Glad to hear that :-) Cheers!. I haven't used the Docker version, perhaps @almir could help?. Could you try renaming the testScript to an all lowercase filename. Could it be an issue with the docker FS emulation? That is my best guess :(. And does the webhook have necessary permisions to read and execute the script? (chmod +x testScript.sh et al.)\n. Oh, glad you got it figured out!. Thanks for the contribution!. It's live on master & 2.6.6\nFigured you'd like to be notified :-). It appears that the JPEG contents is messing up the payload parsing. Is there any way you could base64 encode the JPEG image on the client and send that as a parameter?. Unfortunately, your only option would be rolling out your own solution to receive the Plex's payload and then either handle the execution yourself, or forward the request with proper payload to the webhook.\nSorry :-(. Not really, turns out that your post body contains invalid byte sequence that messes up golang's form parsing library. We can't do anything with that payload :-(. Hey, don't have an access to the computer right now, I'll check it out tomorrow and hopefully get back to you with a solution.. You should omit payload. from the \"name\": \"payload.project.default_branch\" and it should work.\n. Sorry for the late response :-). Glad you like the webhook, however it sounds to me that you would be much better off by using the proper Jenkins plugin for the described task, expose the Jenkins directly and avoid webhook altogether.\nThere is a way to pass the payload, query and headers, it's documented in the wiki under the Special cases.. As for the webhook based solution, solving #152 would be the proper way to handle this case, but I just don't have the time to do that :-(. Are you using the curl directly as a command for webhook? If so, you should try using a shell script to do the preprocessing, construction and invocation of the proper curl $ENDPOINT command based on the payload. If you could provide sample payload and resulting endpoints that should be invoked, maybe I can help you with the writing of the \"wrapper\" script.. In that case you would have only one hook.. Correct. Is there no way to tell bitbucket to hit another url?. Already fixed in #185 . Fixed in #194 . Awesome!. :+1:. :+1:\nMost definitely, just make logfile flag default to \"-\" which would mean stdout/stderr and anything other than that would be understood as a filename to write/append to.\nThat way we keep the default behavior compatible with old versions.. @hassanbabaie Sounds like you should try Logstash for centralizing your logs. If I recall correctly, by default stdout and stderr of a systemd unit are sent to syslog, which means if you're running one or two instances of webhook as a service, they would be logged properly in the syslog.. Sounds okay to me to bake in support for their signature verification :-)\n@dcj sorry for drifting off topic over here :-). That would indeed be a handy feature. Currently I use nginx in front of my webhook instances that are listening on unprivileged ports.. No need to investigate further, there's nothing wrong with you. :-)\nIt's AWS SNS's fault for not sending the proper Content-Type header. Webhook will parse payload as json, if and only if the Content-Type header contains json.\nSeeing that AWS will not change their behavior I would accept a PR for a new flag in the hook incoming-payload-content-type, which, if present, should override the contents of the incoming Content-Type header.\nThat way we can work around this issue.\nAs a temporary workaround (albeit without trigger rules), you could pass entire payload to the underlying script and do the heavy lifting with jq.. Fixed in #206 . Hey @hassanbabaie, I'll review it as soon as I get some free time :-). @moorereason I would replace the contents of the wiki pages with a link to the appropriate docs page, so if anyone bookmarked the wiki link will know where to go... What do you think?. :+1: will do this ASAP.. Please note the following in your log:\n[webhook] 2017/11/22 20:42:51 serving hooks on http://127.0.0.1:9065/hooks/{id}\nIt means you need to hit deployer.example.com/hooks/webhooktest\nOr get rid of the /hooks prefix by using the -urlprefix \"\" parameter when starting up webhook.\nOr account for this prefix in the nginx config.. Cheers :-). Could you please just change the base branch to the \"development\" so I can merge this in. Thank you for the contribution!. PEBKAC :-)\nHere's what's happening:\nYou are trying to execute curl http://ip-10-128-240-67:9000/hooks/createjob?usrname=kar002p&giturl=https://github.com/prasenforu/openshift-aws.git&cfnname=test.yml&stkname=awsec2&acckey=hdfhHFSFHS&seckey=PRASENJITkar&jobname=EC2-NEW&param=asd\nBut, & is a special character in shell which is interpreted by sending the command before the & to the background.\nSo this command is split into several commands:\n1 => curl http://ip-10-128-240-67:9000/hooks/createjob?usrname=kar002p\n2 => usrname=kar002p\n3 => ...\nThose numbers you see in the console output after you run the command are PIDs from those sub-commands. And the \"Done ...\" messages are the result of your shell finishing the execution of each command. \nSo what webhook is receiving is the ?usrname=kar002p, and that's everything it can parse, rest of the arguments are never sent to the webhook :-)\nIn order to fix this, wrap the URL with quotes like so curl \"http://ip-10-128-240-67:9000/hooks/createjob?usrname=kar002p&giturl=https://github.com/prasenforu/openshift-aws.git&cfnname=test.yml&stkname=awsec2&acckey=hdfhHFSFHS&seckey=PRASENJITkar&jobname=EC2-NEW&param=asd\"\nHope this clears up some things. :-). Good luck, if you have any other issues, don't hesitate to open up another issue :-). You will have to URL encode the parameters (stuff after each =) so that they are safe to be transmitted via HTTP.. You will have to rewrite your curl command like so curl -G \"http://ip-10-128-240-67:9000/hooks/createjob\" --data-urlencode \"usrname=kar002p\" --data-urlencode \"giturl=https://github.com/prasenforu/openshift-aws.git\" etc .... Thanks for the contribution! Please update docs & wiki with the new feature :-). Thank you, fixed in 2.6.8. ## Referencing values\nYou can read more about it here\nThe room name field is referenced like this:\njson\n{\n    \"source\": \"payload\",\n    \"name\": \"data.roomName\"\n}\nand the current playback state is referenced like this:\njson\n{\n    \"source\": \"payload\",\n    \"name\": \"data.state.playbackState\"\n}\nTrigger rule\nYou can read more about trigger rules here\nTrigger rule controls when your script will be executed. You basically want to execute your script when room name field is equal to Kitchen and the playback state is either PLAYING or STOPPED.\nTranslated to the logic you want to define trigger rule: roomName == 'Kitchen' && (playbackState == 'PLAYING' || playbackState == 'STOPPED')\nWhich in webhook looks like this:\njson\n{\n    \"and\": [\n        {\n            \"match\": {\n                \"type\": \"value\",\n                \"value\": \"Kitchen\",\n                \"parameter\": {\n                    \"source\": \"payload\",\n                    \"name\": \"data.roomName\"\n                }\n            }\n        },\n        {\n            \"or\": [\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"PLAYING\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.state.playbackState\"\n                        }\n                    }\n                },\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"STOPPED\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.state.playbackState\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}\nPassing request context values to your script\nThere are two ways you can do this, via arguments or environment variables. You can read more about that here\nLet's do it via environment variables: we want to pass the playbackState and roomName field values to the script as PLAYBACK_STATE and ROOM_NAME respectively. In order to do that, we define pass-environment-to-command property on the hook like so:\njson\n\"pass-environment-to-command\": [\n    {\n        \"source\": \"payload\",\n        \"envname\": \"ROOM_NAME\",\n        \"name\": \"data.roomName\"\n    },\n    {\n        \"source\": \"payload\",\n        \"envname\": \"PLAYBACK_STATE\",\n        \"name\": \"data.state.playbackState\"\n    }\n]\nHook definition\nFollowing all this, and starting with your example, the final hook definition looks like this:\njson\n[\n    {\n        \"id\": \"sonos\",\n        \"execute-command\": \"/etc/webhook/kitchen_music_on.sh\",\n        \"response-message\": \"Ok ...\",\n        \"pass-environment-to-command\": [\n            {\n                \"source\": \"payload\",\n                \"envname\": \"ROOM_NAME\",\n                \"name\": \"data.roomName\"\n            },\n            {\n                \"source\": \"payload\",\n                \"envname\": \"PLAYBACK_STATE\",\n                \"name\": \"data.state.playbackState\"\n            }\n        ],\n        \"trigger-rule\": {\n            \"and\": [\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"Kitchen\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.roomName\"\n                        }\n                    }\n                },\n                {\n                    \"or\": [\n                        {\n                            \"match\": {\n                                \"type\": \"value\",\n                                \"value\": \"PLAYING\",\n                                \"parameter\": {\n                                    \"source\": \"payload\",\n                                    \"name\": \"data.state.playbackState\"\n                                }\n                            }\n                        },\n                        {\n                            \"match\": {\n                                \"type\": \"value\",\n                                \"value\": \"STOPPED\",\n                                \"parameter\": {\n                                    \"source\": \"payload\",\n                                    \"name\": \"data.state.playbackState\"\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n]\nThis hook will execute your script only when the room name is equal to Kitchen and playback state is either PLAYING or STOPPED. When your script gets executed, you will have ROOM_NAME and PLAYBACK_STATE environment variables available. Based on values of the PLAYBACK_STATE environment variable you can execute curl command with different parameters.\nHope this clears up some things :-) . The multiple hooks with the same id has been deprecated and removed in latest versions of webhook. You are most likely running an older version of webhook, since it worked for you. I strongly suggest for you to upgrade to the latest version :-) (and rewrite the hook definitions to use one hook). Using the environment variables you can use Case statements to control the flow of your script, like so:\n```bash\n!/bin/bash\ncase \"$PLAYBACK_STATE\" in\n        PLAYING)\n            curl playingurl\n            ;;\n        STOPPED)\n            curl stoppedurl\n            ;;\n        *)\n            echo \"Invalid playback state $PLAYBACK_STATE\"\n            exit 1\nesac\n```. P.S. You might want to check almir/docker-webhook for the up-to-date dockerized webhook :-)\nHappy hacking!. Try changing RUN chmod +x /var/scripts\ninto RUN chmod +x /var/scripts/redeploy.sh. Awesome! Happy hacking :-). Ah yes, I was waiting for the first real world use case of top level arrays in JSON :-)\nSure, this needs to be fixed now.. The original issue refers to the payload being an array, not an object with arrays :-). Not in the context of trigger rules, but you can do that easily in your shell script :-). You can define a hook to execute a curl command with appropriate parameters. If you want me to help you with creating a hook definition, I would need to know exact payload your API will send to webhook, and the exact payload IFTTT wants to receive to send you an SMS.. @ptflp Are you editing the file outside of docker container?. Thank you @scottstensland . @macau23 Most definitely!. @moorereason I'll play around with it :-). As of webhook 2.6.9 this should be respected . @macau23 Thanks for bringing this issue up!\n@moorereason perhaps we could do path normalization along with a check if the specified command to execute exists for all defined hooks?\nThe check could spit out warnings, or terminate the process if the webhook is running in the silent mode (in the same way we do when we cannot load hooks file). \nThoughts?. Cool, I still think we should add a warning if the command cannot be found at the hooks loading time.. Sounds great, if you could create the configurations I can set up the accounts and the required integrations.. We can close this one now, right?. Should we update failing tests on this PR or do a separate one? . Alrighty, merged.. :+1:. Which version of webhook are you using and what is the payload you are sending the hook. Sounds like an old bug we fixed where parameter extraction would stop after first fail (which explains your examples).. Yeah, then you're running a 2.5.x which was affected with the issue #106.\nFrom the release notes of 2.6.0:\n\nBreaking changes\n\nParse parameters as JSON will no longer stop hook execution if it encounters errors while parsing the arguments (i.e. argument does not exist, or does not contain valid JSON string).\nArgument extraction will no longer stop after the first error is encountered, but instead will continue to try to extract other arguments. (partially related to #106)\n\n\nThe issue has been fixed in 2.6.0, I highly recommend downloading the latest version from the releases page.\nPrior to the 2.6.0 the only way to determine the version was to run the webhook with -verbose flag and to check stdout.. Let's make the / route return 200 OK.... Done, will be released next in the 2.6.10. @moorereason Sounds good to me!. Thank you very much!. Hey Daniel, thanks for writing up. The reason why only JSON (and formdata) seems to be supported is that I never needed to ingest other types of payload.\nAdding XML right now would require a bit of thought how to fit it in properly. (i.e. using xpath for referencing values, etc...)\nWould adding support to webhook to pass the raw request payload without attempting to parse it help you in any way? But then again, what benefits would webhook provide to you in that case :-(. Hey, thanks for the PR. \nWebhook does support application/x-www-form-urlencoded, it's just that the examples in the docs are based on the application/json payloads.\nCan we rephrase the edits to indicate that, instead of saying that anything other than application/json won't work :-). Most flexible way is what @hassanbabaie already suggested, by using a shell script that will format this for you. \nIf the command you are attempting to run is sane enough to recognize that --param something is same as --param=something, you could use pass-arguments-to-command like so:\njson\n    \"pass-arguments-to-command\": [\n        {\n            \"source\": \"string\",\n            \"name\": \"--param\"\n        },\n        {\n            \"source\": \"url\",\n            \"name\": \"param\"\n        }\n    ]. Thank you, I will get this in as soon as I get some free time, life has been busy for me right now.. I completely agree with you. I propose we add allowed-http-verbs in a way we did with response headers. (Global setting and per hook setting). Sounds to me like you could use pass-file-to-command hook property to serialize input field into a file, which you could then use as you described. See more about hook properties and what do they do here.\nPlease note that you would need to use webhook 2.6.8 for this property.. Nice, I'll have to take some time to review the refactor changes you made to the hookHandler.. Hey, thank you very much for your contribution. I've noticed there are other links that are broken in the same way, would you mind scanning through and fixing them in this PR?. Thank you very much :-). Thank you very much!. Hi, you can create a shell script with all the described commands and then use webhook to run that script.\nP.S. Don't forget to add shebang on top (i.e. #!/bin/sh) and mark the script as executable (chmod +x scriptname.sh). @aioobe thank you very much for your contribution and sorry for the late response.\nHere are a few things that we'll need to fix before I can merge this PR:\n\n\nRebase this PR on the development branch (or cherry pick the commits and create a new PR, whatever works best for you :-))\n\n\nLet's rename the http-response-code property (and the equivalent variables in the code) to the success-http-response-code for clairty since this code will be used only on successful hook invocations\n\n\nWe need to handle the case when the capture command output option is set to true, by adding the \n    go\n    // Check if a return code is configured for the hook\n    if matchedHook.HttpResponseCode != 0 {\n      writeHttpResponseCode(w, rid, matchedHook.ID, matchedHook.HttpResponseCode)\n    }\n     just before writing the output on the line 293\n\n\nWe need to write test cases for this new property covering the basics:\n\nwhen the success http response code is not defined => it should default to 200\nwhen the success http response code is set to an invalid value => it should default to 200\nwhen the success http response code is set to a valid value => it should return the given code\n\n\n\nEverything else looks awesome!\n. Are you running webhook with the -verbose flag?. @Adnn Sorry for the late response. \nYeah, I was about to ask which version of webhook were you using, since capturing of the stderr was added just recently.\nUnfortunately, the ubuntu package is outdated (like most of them in the ubuntu ecosystem :().\nGlad it works for you now!\nP.S. kutayzorlu doesn't look like a spambot to me, but a non-native english speaker :-). Thank you very much for the contribution! Glad you found webhook useful :-). Unfortunately webhook is not available through yum. You can download a precompiled binary for your architecture from the releases page. I'm not sure what's the problem here. What exactly is not working for you, passing file to command?. Hey, sorry for the wait, I'll get this in as soon as I can. Life is busy at the moment, but hopefully I'll find a few hours this week to get this done.. Could you please post an example hooks.yaml file that can be used to reproduce this. Thank you :-). Thank you for the contribution! :-). Hi, please take a look at https://github.com/adnanh/webhook/blob/master/docs/Templates.md\nP.S. don't forget to add the -template switch when starting webhook.\n:-). @eschizoid good luck :-). Nope, but you can expose a hook that will execute script with\n```bash\n!/bin/sh\ncat hooks.json | grep id\nand have it return the output in the response :-). Or if you have `jq` available on your system:bash\n!/bin/sh\ncat hooks.json | jq .[].id\n``. Awesome, glad it worked out for you... :-). Agreed!. Did you dogo get .in the webhook directory after cloning?. Also, try running withgo run webhook.go signals.go -verbose. Did you send any payload? By HTTP specificationGET` request doesn't officially support payload.\nTry using curl to issue POST request with payload . headers contains key-value pairs of request headers\nquery contains key-value pairs of request query parameters (i.e. if you used .../drawify-redeploy?a=b, it would contain element named a with the value b)\npayload contains parsed payload into key-value pairs\nbody should contain raw body. You can consult GitHub API documentation for the Releases API :-). Hey, yes, relative path can be used, which then obviously takes into consideration the cwd. If it's not defined, cwd is set to the current directory you are executing webhook from. Please note that it could be different from the location where the binary is actually located. i.e. let's say binary is located in /var/bin/webhook, if you cd into /tmp and then run /var/bin/webhook binary from the /tmp, the cwd would be set to /tmp (again, if it's not defined for the hook, otherwise it would be set to the specified value). Misclicked the close button... :-). trigger-rule-mismatch-http-response-code got introduced in the webhook version 2.6.1.\nYou are using 2.5.0 which didn't have that option :-)\nHead over to the releases page and get the latest version.. Thank you for the contribution! :-). Sounds like you should consider running webhook as a systemd service. :-). Awesome, thank you very much :-). Hi, there are no official apk packages, I presume you're asking because you woulid like to run webhook in Docker? If that is the case, please check out almir/docker-webhook. Hello, first of all the message field value should have escaped quotes like so \"message\": \"{\\\"id\\\": \\\"1\\\", \\\"data\\\":\\\"this is a test!\\\"}\"\nTo turn this string into usable JSON object, you should add parse parameters as json directive to the hook like so:\njson\n\"parse-parameters-as-json\": [\n  { \"source\": \"payload\", \"name\": \"message\" }\n]\nand it should work.. Mhm, looks like there's an unhandled case in the GetParameter method. I will investigate this further, and get back to you.. Hi, it's not possible to use one hook id to run two different scripts. However, you can implement the decision logic inside your script and pass the relevant fields to it.. Hey, try wrapping the IP address like so [::1] :-). Ugh, that's why I hate magic in applications :-(\nWe should definitely improve YAML support, documentation, and make it an explicit option instead of magically loading it and then falling back to JSON if it doesn't work...\nThanks.. I always forget GitHub doesn't send notifications for reactions...\nI completely agree with you. :+1:. @CarlosEvo The way this works is that the sender calculates shasum256 of the body using the defined secret key, and sends the hash to you (usually via custom header, if you're using http(s) for transport).\nOn the receiving side, you calculate the shasum256 of the body you just received using the same secret key and you compare the calculated hash to the one you got from the header.\nIf it matches, that means the sender really knows the secret key, and you can trust that the payload hasn't been tampered with.\nYou can read more about digital signatures in general over at wikipedia.. @CarlosEvo It's definitely an interesting topic, and can be applied in a lot of segments :-). For now: your best bet would be to use OR rule in combination with the ip-whitelist rule :(\nAs for the future improvement, there should definitely be a more compact way to specify multiple IP address ranges.. Definitely an idea worth exploring! I was thinking of having a scriptable rule, but having a rule that executes a shell script and maps to true/false based on the exit status might be even better!. Hi, the best practice in general for long running operation is exactly the way you've described it, instead of waiting for the result, you send the result when it's ready. Webhook's job is to accept the incoming webhook, parse the payload and invoke the proper script/command. It's script's/command's job to implement the handling logic, including sending the response back to the desired location.\nBest regards,\nAdnan. Hi, upcoming release 2.6.10 includes a / healthcheck route which will return 200 OK status (#233, #283) , you can compile it yourself by cloning the development branch :-)\nCurrent workaround to get an endpoint with described behavior is to create a hook which will invoke a script that returns desired HTML. Ugh, didn't see the reply, sorry for the late response.\nYes, you are correct, you can't trigger a hook with an empty name, so there is no way to override the root handler.\nYou could also modify the source and return the desired output for the /. Or put nginx infront with a rewrite rule.. Could you please try updating to the latest version? You can download binary from the Releases page or compile it yourself.. @johnpmitsch According to the Travis CI documentation\n\nWebhooks are delivered with a application/x-www-form-urlencoded content type using HTTP POST, with the body including a payload parameter that contains the JSON webhook payload in a URL-encoded format.\n\nWhich means they're sending something like this:\npayload=<json string>\nIn order to access such properties, you have to add parse-parameters-as-json declaration to your hook like so:\njson\n \"parse-parameters-as-json\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"payload\"\n      }\n    ]\nand then, in the trigger rule you'll have to change the parameter name to payload.branch, and it should work fine.. You need the \"source\": \"payload\" in the parameter declaration:\n...\n    \"match\":\n          {\n            \"type\": \"value\",\n            \"value\": \"passed\",\n            \"parameter\": {\n          \"name\": \"payload.state\",\n              \"source\": \"payload\"\n        }\n          }\n.... @johnpmitsch great :-) Thank you :-). Hey @igorljubuncic , thanks a lot for creating this, I will definitely start publishing to the Snap store!\nAs @moorereason noted, this file would be better suited for the webhook-contrib repository. Would you mind creating a PR over there?\nNext webhook release should hopefully be also available at the Snap store, thank you :-). Looks like someone already registered the webhook snap name. I contacted the snapcraft, and they're suggesting that I contact the owner directly, so I'll do that :-) Or we could leave the job of releasing webhook to snapcraft to the person who got there before us :-)\nIn the meantime, they also require some kind of a proof that I am the author of webhook, so I'll direct them to this comment. \n@Natalia Yes, I contacted you using my e-mail (adnanh@gmail.com) and snap user name adnan.h :-). It's done! The 2.6.9 is on the snap store, I've updated the README.md accordingly. :-). @igorljubuncic Cool! It's weird taking a screenshot of a CLI tool, but I'll go ahead and make a few, just for the sake of completeness... :-). @igorljubuncic The snapstore does not allow me to upload the banner.png with the specified dimensions (1218x240), I'm getting the following error message:\n\nThe screenshot \"banner.png\" has an aspect ratio of \"203:40\". It needs to be at least \"1:2\" and at most \"2:1\".\n\n:-(. Here's the banner that I quickly threw together :joy: \n\n. I was just following the steps outlined in the guide you've posted here, I can create 2:1 ratio banner, that's not a problem for me. Is the guide perhaps outdated?\n. :+1:. Awesome :+1:\n. If you want to serve assets using webhook, you're using the wrong tool :-) web server such as nginx or apache httpd would be a much better fit for the job at hand.. Hi, the nginx error indicates that the webhook is not running on the port 9001. Did you forget -port 9001 flag while starting webhook, or did you misconfigure nginx upstream to the wrong port?\nAlso, try running webhook with -verbose flag and check if there are any errors reported to stdout.. @freeekanayaka. @freeekanayaka <3. Not at the moment, it's something we should definitely look to implement.\nAs a temporary workaround, you can put nginx infront of webhook, and configure it to pass the source IP via header to the webhook.. Hi, since data.observations is an array, you have to access the array elements by index which is done like so: data.observations.0.clientMac for the clientMac property of the first item in the array.\nNow if you need all items in that array, your best option is to pass the entire payload to your script, and then use jq to manipulate the JSON.. Thank you very much!. Hi, you can use jq's fromjson directive, to parse the escaped json string\nbash\nUNESCAPED_JSON=`echo \"$1\" | jq '. | fromjson'`. In your shell script :-)\nAnd then you'll have proper JSON stored in the $UNESCAPED_JSON variable :-)\n. I mean inside of the /etc/webhook/test.sh\nYou can use jq to extract data from the json in the variables.\ni.e. to get the kind property from the json you would use\n```bash\n!/bin/sh\nUNESCAPED_JSON=echo \"$1\" | jq '. | fromjson'\nKIND=echo $UNESCAPED_JSON | jq '.kind'\nexport KIND\n```\nand then you would have defined environment variable named KIND available in subprocesses :-)\n. No problem, feel free to reopen this issue, or open a new one in case you stumble upon more problems. :-). Hook should always trigger if the rule isn't specified\n. Typo in omiempty -> missing letter t after i. I would change the error message to something along these lines: Hook reached maximum concurrent execution limit. Try again later.. I would rename the flag to maximum-concurrent-executions . You need to add this logic to the reloadHooks method as well.\nWhen the webhook reloads hooks following things can happen:\n- new hook has been added\n- existing hook was modified\n- existing hook was removed \nSo you should reflect those changes to the limits map. For the sake of verbosity, I would rename limits to hookExecutions. This code won't actually behave the way you think it will...\nImagine this scenario for a moment: \nWe have a malformed request incoming with form encoded data, but wrong header being sent from the server that the content is json. User, being smart, recognized the issue, and the vendor does not want to fix it, so the user turns to the webhook documentation, finds that we support way to override the incoming payload content type, and happily sets the override of IncomingPayloadContentType to the form type.\nWebhook gets to executing this line and checks for this condition, it asks itself, alright, does the override in the IncomingPayloadContentType contains json? - Nope. Then it proceeds further and ask itself, okay, I still have a chance to make this condition evaluate to true, does the content type header contain json? Yup! Got it, let me decode the payload as json, aaand... boom. Decoder explodes and user gets the very same cryptic error message you got that the payload could not be parsed. :-)\nWhat you want to do is actually the following:\nOn the line L232, before we set the contentType variable to the header value, we should test whether the matched hook has incoming payload content type override. If it does, we set the contentType to the override and happily ignore the header value, otherwise, we set the contentType to the r.Header.Get(\"Content-Type\"). Everything else remains the same.. ",
    "kevinlebrun": "The feature does not work on OS X Yosemite while editing with Vim. \nWhy not simply poll for file change then reload? It would be great if you can setup a USR signal to reload the configuration file.\n. Great! I'll be happy to test it.\n. I've just tested on OS X without success. With some tinkering, I find that signal codes are different and syscall.SIGUSR1 doesn't match syscall.Signal(0xa) on OS X. I've just pushed a quick fix.\n. ",
    "moorereason": "So as an example, I could define \"json-parameters\": [ \"mypayload\" ] in hooks.json, and webhook would decode the mypayload form variable as JSON.  Then I would reference the JSON items like this:\njson\n{\n  \"match\": {\n    \"type\": \"value\",\n    \"parameters\": {\n      \"source\": \"payload\",\n      \"name\": \"mypayload.commits.0.branch\"\n    },\n    \"value\": \"needle\"\n  }\n}\nI like the idea.\nHowever, json-parameters sounds a little ambiguous to me.  It might confuse people into thinking it has something to do with the match.parameter triggers from the hook package.  What about http-json-parameters?  But either way, you make the call.  It'll be great.  :smile:\n. Success!!\n. Closing PR.  I've got another one coming from a different branch.  Sorry for the noise.\n. Apparently, I need to go to lunch...  I forgot that I reported two issues in #7 (don't do that, kids).\nThis PR fixes the issue with trying to match \"commits.0.branch\".  This PR does not add the form-variable feature.\n. Have you tried to use GitLab with webhook?  I haven't tested it, but I don't see any reason why it wouldn't work.\nIt looks like you'd want to check that object_kind equals push in your trigger rules.  Let us know how your testing goes.\n. Curious about your thoughts.\nThis PR would resolve #26.\n. Good point, @sebest.  I'll take a look at doing that when I get some free time.  Thanks\n. Rebased my original commit and added a new commit that uses custom error types.  Let me know what you think.\n. Adnan,\nCare to comment on why you closed this PR?  Did you find any issues with it?\nI rebased this PR against the latest master branch on Friday, but I still need to do some more testing.  I pushed up my changes to my sidefx branch so that I could work on it from home over the weekend (but I never got around to it).\nIf you would prefer, I can delete this PR and submit a new one once I've finished testing against the latest master branch.  Or would you prefer that I submit PRs to the development branch?\n. Some changes were merged an hour before this issue was created that should fix Issue #53.  Is that the same issue you are describing?  If so, please update to the latest revision and see if that fixes your issue.\n. What OS are you running on?  Is redeploy.sh executable (do you have exec permissions)?\n. What are the contents of redeploy.sh?\n. That's the problem.  The first line must be something like this:\n``` sh\n!/bin/sh\n```\n. To be clear, this project consumes webhooks.\n. Can you provide more information?  It sounds like it was working and then just stopped working.  ?  Did you update webhook?  What version of webhook are you running?\n. Can we add this sample config to the wiki?\n. Wiki updated.\n. @adnanh,\nI'm having second thoughts about this PR.  It seems to be passing all of the tests, but I feel like it should be failing.\ncheckDeprecations should be failing when a Match rule is inside of an And, Or, or Not rule, right?  We would need recursion to fix all the things.\nBut it appears to be working.  Or am I going crazy?  Maintaining backward compatibility is hard.  :smile:\n. It looks like it's working as intended.  You're asking webhook to match a URL parameter that either doesn't exist or is invalid.  The command should not be triggered in either case.\n. @fbartels, webhook uses your secret to calculate a HMAC SHA1 of the payload.  It's not showing you the secret.  If this was unclear, maybe you can suggest an improvement to the documentation or help us to make it more clear to new users.\n. Unless I'm mistaken, it's not showing the sha1 to the remote agent.  It's only logging it on the server side.\n. @adnanh, you're probably right that this was fixed earlier.  I may have jumped the gun, but I still think we shouldn't disclose the expected MAC.\n@mullender, what version of webhook were you using?\n. I have a potential fix in my repo, but I can't create a PR against the development branch because dev is behind master (merge conflicts).  @adnanh, once you get the dev branch in sync, I can create a PR.\n. I think you log stderr and only return stdout.\n. @adnanh, I left this PR alone because I wanted to see what you thought.  :smile:\nBig picture:  I do think it would be helpful to release pre-compiled binaries for multiple archs+platforms.  I'm not a fan of making RPMs and DEBs, but binaries are simple and easy.\nI wouldn't put this in webhook-contrib.  It's really only useful for you making new releases.  No one else will likely use it, especially if you released pre-compiled binaries.\nI don't know what your release workflow is now, but you could use this Makefile as a starting point, and possibly incorporate gh-release to do the uploads.  But it's up to you.\n. Anyone can update the wiki docs.  No PR required.\n. @jzimmek,\nOut of curiousity, how would you propose webhook to handle this?  Do you mean for webhook to hold HTTP requests open/idle until your blocking script finishes?  Or are you expecting webhook to queue the hook request (internally) and immediately respond to the request with a HTTP 200 success code?\nI would suggest writing a simple shell command to add requests/jobs to Redis (persistent storage), and then have an app that empties the redis queue one job at a time.\n. I use webhook as a service, and it works fine.  I think this is likely a system problem, not a webhook problem.  Are you using selinux?. When I run powershell scripts in Windows Task Scheduler, I use the following:\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Command \"& C:\\path\\to\\script.ps1 ; exit $LASTEXITCODE\". Seems like you should validate IPs at the proxy server instead of within webhook.\nBut if anyone's interested in implementing this, see https://github.com/armon/go-proxyproto.. @adnanh,\nWhat if the hooks definition file could be evaluated as a Go template?\nwebhook -hooks hooks.json -template\nThen create a simple getenv function for the template FuncMap that uses os.Getenv.\nSample template usage:\nhandlebars\n\"match\":\n{\n  \"type\": \"payload-hash-sha1\",\n  \"secret\": \"{{ getenv \"GITHUB_SECRET\" }}\",\n  \"parameter\":\n  {\n    \"source\": \"header\",\n    \"name\": \"X-Hub-Signature\"\n  }\n}\nTo avoid the chicken and egg problem, I would not use hooks.EnvNamespace within getenv.. Fixed by #161. This can be closed now.. I think this is ready for review and merging.  It's fairly straight-forward.  Let me know if you have any questions.. I updated the Webhook Parameters page just now.\nInstead of creating a new wiki page, would it make more sense to add a short section about templates to the Readme?. Sounds good.  :+1:. @gdubicki,\nIf you rebase with the development branch, you will see that we've moving the wiki pages to the docs directory in the git repo.  So in addition to adding tests, you can also update the docs within this PR.. It sounds like you need to use git remotes if you intend to do development work in webhook.. I already saw your PR, and I understand your reasoning.  It's just not the right thing to do.  Some advice from Best practices for a new Go developer:\n\nTake the time to work with, and understand, the conventions in Go. ... Learn about how packages and import paths work. Go is not a \u201cTMTOWTDI\u200a\u2014\u200aThere\u2019s More Than One Way To Do It\u201d\u200a\u2014\u200alanguage. There is a Go way. Learn how Go does things and do it that way. You\u2019ll appreciate the benefits soon enough.\n\nI could be wrong, I guess, but I don't know anyone in the Go community that does what you're proposing.  I'd be curious to know if you've seen others doing this.\nAgain, the simplest way forward is git remotes.  See the Hugo Contributing Guide, which I helped write, for a short synopsis of the workflow.. All webhook is going to do is run su in the background.  This feels like feature creep to me.. @stephenreay, can you put your test configs into a gist?  Looks like I'm going to have to get more familiar with the PROXY protocol. \ud83d\ude03 . @stephenreay, I've confirmed the behavior you describe.  The armon package silently accepts non-PROXY protocol connections.  I've submitted a PR to give us the option to require PROXY.\nThe pires package looks half-baked.  I may give it a try over the holidays.  We'll see.\nIt looks like most users of the armon package setup IP whitelisting.  We likely need to add that feature to this PR to further secure webhook without needing outside help (from firewalls or whatnot).\nwebhook -proxyProtocol -proxyWhitelist 10.0.0.11/32,10.0.0.22/32. @stephenreay wrote:\n\nRe: whitelisting: this seems like something that would be best left as a documentation item, surely: in the docs where it covers -proxyProtocol, an entry specifying that the service should only be accessible by trusted addresses - either bind to loopback (e.g. if HAproxy is running locally), or use an OS provided ip firewall etc. Implementing an IP firewall in this tool seems like an unnecessary duplication that's going to have multiple orders of magnitude less eyeballs looking at it.\n\nGood point.  I'll hold off on that idea.  :+1:. @adnanh,\nWhat are we doing with the wiki going forward?  We moved the documentation into the docs folder.  Can the wiki be deleted?\n@hassanbabaie,\n1. Yes, add a section in Hook Examples.\n1. Also document the new scalr-signature Match type in Hook Rules.. @hassanbabaie,\nGood job on getting started with Go.  I like your initiative!  A few tips:\n\n\nIf you haven't figured it out already, use a git remote branch for Go development to avoid changing import paths.  This one trips up almost everyone the first time they use Go.  See some old docs a wrote for Hugo for some clues.\n\n\nSquash these commits (git rebase -i HEAD~4) and update the commit title to be something other than \"Add files via upload.\". There's really two new ideas here that webhook can't do (yet?):\n\n\nUsing gt, lt, ge, and le operators in a Match rule (value handles the eq case).\n\nGetting both operands in a Match rule from parameters.. The sample hooks.json file has a different hook id from the example in the README.  Hit /hooks/webhook.. @adnanh, we use goreleaser in Hugo.  Might make your life a little easier if you have time to play with it.. @macau23,\nYou definitely need to escape the backslashes due to the JSON/YAML string specs.  But as you mentioned, the problem remains even with the escaping.\n\n@adnanh,\nI should be able to test this on a Windows box today.. @macau23,\nI'm unable to reproduce this issue.  When I escape the backslashes, the hook works for me.  Can you provide us with your hooks configuration and the verbose logs of the error?. Do a separate PR.  It's okay that they're failing initial.  It just reflects the current reality.  I'm working on fixing the Windows test errors.. @adnanh,\nThis PR should be ready for review.  I'm skipping one test on Windows, which I plan to tackle in a separate PR.\nI also intend to add a big comment block to the top of the webhook_test.go file to give people hints on how to add more tests without reinventing the wheel.. And then Cloudron would alert this error-prone user not to delete that hook, right?. In general, an error should stop evaluation of the hook. Period.\nThe real question is whether or not the signature checks (SHA1, SHA256, Scalr) should return errors simply because the signature doesn't match.  That's really not an error, per say -- it's a validation failure.  I would think we could just log the cause of the failure and return false, nil.  That way @hassanbabaie could setup an OrRule to match multiple signatures.. You can use trigger-rule-mismatch-http-response-code to return a different HTTP response code.. After giving my earlier suggestion some more thought, I want to make another proposal.\nGiven:\n\nThe current implementation precludes testing for more than one signature validation in a given hook definition (using an OrRule).\nChanging the default error return value of all signature validation functions would be a major breaking change.  We should avoid that.\nThe Scalr signature validation should not be logically different from the existing signature validations.\n\nTherefore, my proposal is:\n\nAdd a new configuration option that allows failed signature validations to be treated as simple validation failures instead of errors.  Something like trigger-signature-validation-soft-failures.\nUpdate the validation logic to ignore SignatureError errors if the above config option is enabled.  Or have the signature validation funcs not return an error in that case.\n\nThis would keep from breaking backward compatibility while allowing OrRule logic with multiple signatures.\n@adnanh, I'd like to know what you think about this issue and proposal.. You should be able to accomplish the same thing with environment variables, which is a new feature in the development branch.  See Templates.md.  Would that solve your use case?. The Ubuntu package is maintained by the Ubuntu community.  Please open an issue with Ubuntu.. It looks like the only way to have webhook (or Go) spawn a background process and move on is to use exec.Start().. Webhook provides everything you need to ingest a given payload and hand it off to a separate program, but providing an example program is outside the scope of this support channel.. It's in the error message: use 'pass-arguments-to-command' to specify args to powershell.exe.. Do you have a hooks.json file?  If so, where is it located on the disk in relation to webhook?  How are you executing webhook?. @foosinn,\nIf you're asking about rate-limiting hook executions, this is a duplicate of #120.  It was closed because @adnanh didn't have time to implement it back then even though @antoineco seemed to suggest he might submit a PR.  ?\nThis probably is a useful feature for many, but we need to flesh this out into a proposal.  If we can agree on the proposal, we can label this issue as help wanted and hope someone has the time and inclination to implement it.  So...\nProposed Feature\n\nAdd a rate-limit Hook property.\nThe value is a time.Duration string (will be parsed by time.ParseDuration).  Example: 90s.\nUsed to rate limit the execution (not evaluation) of hook requests.  Check rate limiting after trigger rule evaluation was successful.\nHTTP response code during rate limiting will be 429 (http.StatusTooManyRequests).\n\nSample Configuration\njson\n[\n  {\n    \"id\": \"webhook\",\n    \"execute-command\": \"/home/adnan/redeploy-go-webhook.sh\",\n    \"command-working-directory\": \"/home/adnan/go\",\n    \"rate-limit\": \"90s\",\n    \"trigger-rule\":\n    {\n      \"match\":\n      {\n        \"type\": \"ip-whitelist\",\n        \"ip-range\": \"104.192.143.0/24\"\n      }\n    }\n  }\n]. Sorry, I wasn't sure exactly what you meant. \"Time based\" sounds like rate limiting so assumed that's what you meant.\nCan you please flesh out your request?  Can you offer an initial proposal of exactly how this feature would be used and how it would work?  How is it different from the general rate-limiting case?. You should be able to use the GitHub API to find the latest release.. Another approach with templates:\n\nChange ip-whitelist to add support for comma separated list of CIDRs.\nAdd a readFile template function.\nChange rule to \"ip-range\": \"{{ readFile \"bitbucket_ip_list.txt\" }}\".\nTell webhook to reload config as needed to re-read the file.. In what way?. It's working locally with curl for me.  What version of webhook are you using?. Can this live in https://github.com/adnanh/webhook-contrib?. The -template option is a boolean; it doesn't replace the -hooks option.\n\nSECRET_TOKEN=\"mysecret\" webhook -hooks hooks.json -template -verbose\nDoes that work?  It works fine for me.. You should ask the maintainers of the Debian package.. Fixed\n. ",
    "dAnjou": "That makes sense. Thanks.\n. ",
    "sebest": "Hello @moorereason ,\nI think it is a great idea to return errors, but to make them really useful (more than just testing != nil) you should either define all of them , so we can compare them.\nsee listing 1.10 here: http://www.goinggo.net/2014/10/error-handling-in-go-part-i.html\nOr use/implement the error interface if you want variable error message\nsee http://www.goinggo.net/2014/11/error-handling-in-go-part-ii.html\n. ",
    "rasputnik": "Thanks, that sounds like it'd do the trick. And +1 for passing json body to the script (via stdin i guess) - default to that and allow a jq type filter to bring in a subset, right?\n. ",
    "ciarand": ":+1:\n. ",
    "timhughes": "FYI. rpm build succeeds https://travis-ci.org/timhughes/webhook/builds/88250977\n. More than fine by me.\nOn 5 Nov 2015 8:11 a.m., \"Adnan Hajdarevi\u0107\" notifications@github.com\nwrote:\n\nTotally agree with you. I think the best solution would be to create a\nwebhook-contrib repository where developers could contribute their\nwebhook-oriented stuff that others might find useful, ranging from build\nspec files to hooks.json management tools. This repo should only contain\nthe webhook source code...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/adnanh/webhook/issues/50#issuecomment-153983469.\n. \n",
    "markhowells": "Errr, I seem to have misunderstood :-/  The deploy script can access environment variables passed into the container. I would still like to be able to map env vars. to passed in parameters though.\n. Lol.  That explain a lot :)  It has indeed fixed the problem I saw. Thanks\nI'll close the issue now.\n. ",
    "fbartels": "Hi, thanks for you fast reply, it took some time to test your answer, but now I have finally been able to build webhook again. Removing the actual git repo did not change anything, but removing the second checkout from my gopath, and reissuing \"go get github.com/adnanh/webhook\" did the trick.\n. Yes, that was not what I meant. The hook does not execute when the wrong token is sent, but webhook also does tell you how the token should be. A not so secret secret if you will. \nIn other words, you can't really use payload-hash-sha1 for authentication.\n. No, but its showing you the sha1. And when you call ?token=sha1-of-token, then your call will succeed. \n. Hi Adnan,\nthanks for the fix. I did a manual checkout and build of 2.4.0 and can confirm that I cannot reproduce the issue anymore.\n. are you maybe searching for:\ninclude-command-output-in-response - boolean whether webhook should wait for the command to finish and return the raw output as a response to the hook initiator. If the command fails to execute or encounters any errors while executing the response will result in 500 Internal Server Error HTTP status code, otherwise the 200 OK status code will be returned.. Yes, that could be a workaround for the moment. But this is prone to errors, since the end user could delete such a hook.. > And then Cloudron would alert this error-prone user not to delete that hook, right?\nNo, management of hooks would still be through the json file without a web gui around this. But what I could do is include a comment in the default hook file warning the user not to delete it.\nIf the user would delete the healthcheck hook, cloudron would mark the apps as \"not responding\" and send out an email alert to the admin of the system. Other hooks would continue to work. Its not optimal but could work.\nI'm not a go developer, but if there is general interest I could try to stitch together a patch for this following the example in https://github.com/Kopano-dev/konnect/commit/974d57447c5a410ef8ab917820db1b0426be2ef3.. ",
    "mumblez": "my bad, I should of set content-type in the post to application/json !!!\n. ",
    "joseluisq": "I have Fedora 22 x64.\nYes my .sh file has exec permisions. chmod +x redeploy.sh\nAlso, I created a symbolic link of  /home/joseluis/.go/bin/webhook to /usr/bin/webhook\n. > What happens when you execute redeploy.sh script manually?\nOutput my echo \"Hello\" normally.\nsh\n$ ./redeploy.sh\nHello\n\nAlso, who is the owner of the file? Under which user is webhook running? Can that user access the script?\n\nYes, my user is joseluisthis user was installed Go\nand installed webhook to /home/joseluis/.go/bin/webhook\nAnd with this user I created a symbolic link of /home/joseluis/.go/bin/webhook to /usr/bin/webhook\nand run webhook  webhook -hooks hooks.json -verbose\nOr Is it necessary to use root access?\n. echo \"Hello\"\n. Exists some complete example with .sh and hook.json for testing on my OS? \n. > Can you add #!/bin/sh on top\nOk, I will try this...\n. @adnanh yeah I will confirm soon.. :+1: \n. Voil\u00e0 now works fine! :smile: \n\nAlways Shebang on top :smile: \n\n!/bin/sh\n\nThanks a lot guys.\n. Done !\nhttps://github.com/adnanh/webhook/wiki/Home/_compare/aaa832b5ba58f0904fdcba183d1fc8184caafd00?diff=unified. And the history changes: https://github.com/adnanh/webhook/wiki/Home/_history. ",
    "c33s": "a better error message would be helpful. \n... error occurred: fork/exec ... (does your file start with \"#!/bin/sh\"?). wiki page <<< good error messages :)\nif it would be php i would contribute a better error message.... ",
    "sourcec0de": "@adnanh I \u2764\ufe0f  u. ",
    "pgrm": "@adnanh thx for the clarification. than the first question still stays, according to https://hub.docker.com/r/adnanh/webhook/builds/ there hasn't been a successful build since beginning of November. As far as I see it, this is also the docker image referenced from the https://github.com/adnanh/webhook-contrib/issues repository. Is there maybe another image which I didn't find?\nand secondly - maybe the link to the discussion could be mentioned in the readme, as it was suggested?\nthx\n. this clarifies everything, thx\n. ",
    "lookingcloudy": "Pretty cool utility.   I couldn't get this to run properly in a docker container.  Webhooks itself runs fine, but can't get the build script on the host computer to run properly due to paths, access to resources that aren't mapped to the container, etc.\n. ",
    "kachkaev": "Same problem as @lookingcloudy reports. Just asked @almir how to control docker containers on the host from a dockerised webhook instance: https://github.com/almir/docker-webhook/issues/2. If anyone else knows the answer, will be great if you share!\n. Thanks @adnanh, this change makes a real difference! I tested it just now and would like to ask you two things:\n1. What do you think of including the output of failed commands just as it's done for the succeeded ones? I added exit 42 to my run.sh and started getting 500 as expected. At the same time, I stopped seeing all the nice output I expected before the last (malformed) command. Webhooks are often used in CI scripts and it's useful to see why a particular build has failed without going to the production server and scrolling through the logs.\n2. I've noticed that response-message is not showing when include-command-output-in-response is set to true. The build script I have is checking the result of the webhook against the presence of a response message and considers itself successful only if it is found. I know that I can use HTTP 200/500 for the same check now when include-command-output-in-response is on, but the current behaviour is still not intuitively obvious. An extra check can be useful e.g. to protect yourself from the webhook endpoint being replaced with smth else that always returns 200. How about appending response-message on success in all cases and thus remove a not-very-intuitive side-effect of include-command-output-in-response?\nThanks again for your work on this project! It's one of those nice little things that make people's lives better :-)\n. I agree with @mullender. This and #87 seem like crucial features in webhook usage. Otherwise CI build tools have no way of knowing if a deploy went well.\n. Ah, sure! Done: https://github.com/adnanh/webhook/wiki/Hook-Examples\nCould you please have a look at #87 and #88?\n. It is 2.5.0, as it appears in docker-compose.yml. Glad to know that this is no longer the issue in 2.6.0. Can't check the new behaviour myself ATM, but I trust your words :\u2013). Does there exist something like \"default-value\" for undefined query params  by a chance? I know they can be set from a shell script within a hook, but doing it in json would be a bit more convenient. . ",
    "childoftv": "\ud83d\udc4d . ",
    "joeblew99": "I am not sure if this project allows publishing web hooks or just consuming them :)\n. Thanks. That clears it up for me.\nI will try out mating it with ngrok. Should work\nOn Sat, 12 Mar 2016, 14:29 Cameron Moore, notifications@github.com wrote:\n\nTo be clear, this project consumes webhooks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/adnanh/webhook/issues/68#issuecomment-195742550.\n. \n",
    "DarkDrim": "Thanks for your answers.\nhooks.json:\n[\n  {\n    \"id\": \"redep-it-hook\",\n    \"execute-command\": \"/home/it/ho/redeploy.sh\",\n    \"command-working-directory\": \"/home/it/ho\",\n    \"parse-parameters-as-json\":\n    [\n      {\n        \"source\": \"payload\",\n        \"name\": \"payload\"\n      }\n    ],\n    \"pass-arguments-to-command\":\n    [\n      {\n        \"source\": \"string\",\n        \"name\": \"123\"\n      },\n      {\n        \"source\": \"payload\",\n        \"name\": \"payload.commits.0.author\"\n      }\n    ]\n  }\n]\nBitBucket send request on push to repo.\nIt happened after the server is not working day. Then I re-launched webhook.\nStart webhook: nohup ./webhook -hooks hooks.json -verbose -port 9000\n. Today I downloaded the latest version of webhook again, all the same.\nI checked with the help of ngrok - he is also responsible 405\nWith what it can be connected?\n. I do the same, the exact same error.\nEven if I just send your inquiry to:\ncurl -X POST http://192.168.1.229:9000\n. `* Rebuilt URL to: http://192.168.1.229:9000/\n- Hostname was NOT found in DNS cache\n-   Trying 192.168.1.229...\n- Connected to 192.168.1.229 (192.168.1.229) port 9000 (#0)\n\nPOST / HTTP/1.1\nUser-Agent: curl/7.35.0\nHost: 192.168.1.229:9000\nAccept: /\n< HTTP/1.1 404 Not Found\n  < Content-Type: text/plain; charset=utf-8\n  < Date: Wed, 13 Apr 2016 09:53:53 GMT\n  < Content-Length: 19\n  <\n  404 page not found\n- Connection #0 to host 192.168.1.229 left intact\n  `\n\nReplaced payload, yet all the same\n. `\n- Hostname was NOT found in DNS cache\n-   Trying 192.168.1.229...\n- Connected to 192.168.1.229 (192.168.1.229) port 9000 (#0)\n\nPOST /hooks/redep-it-hook HTTP/1.1\nUser-Agent: curl/7.35.0\nHost: 192.168.1.229:9000\nAccept: /\n< HTTP/1.1 400 Bad Request\n  < Date: Wed, 13 Apr 2016 10:00:04 GMT\n  < Content-Length: 80\n  < Content-Type: text/plain; charset=utf-8\n  <\n- Connection #0 to host 192.168.1.229 left intact\n  error parsing JSON: couldn't retrieve argument for {Source:payload Name:payload}\n  . In hooks.json:\n[\n  {\n    \"id\": \"redep-it-hook\",\n    \"execute-command\": \"/home/it/ho/redeploy.sh\",\n    \"command-working-directory\": \"/home/it/ho\"\n  }\n]\n`\n. Problem with:\n \"parse-parameters-as-json\":\n    \n      {\n        \"source\": \"payload\",\n        \"name\": \"payload\"\n      }\n    \n. Yes, after remove and restart webhook\n. \n",
    "xlr-8": "Another enhancement could be to load from a directory -hooks_dir, and an other one could be to support both Json & Yaml\n. Sure, working on it.\n. Hi,\nIt seems like your POSTing on / (cf. logs), but your webhook is 'deploy-webhook'.\nYou might want to try to modify your URL to match your hook name and prefix.\nBy default the prefix is: 'hooks' in webhook.go file:\ngolang\nhooksURLPrefix = flag.String(\"urlprefix\", \"hooks\", \"url prefix to use for served hooks (protocol://yourserver:port/PREFIX/:hook-id)\")\nSo you might want to modify your hook (in github, slack or whatever), with something like:\nhttp://IPADDRESS:9000/hooks/deploy-webhook\ncheers\n. Again, I'm not that familiar with golang quite yet. So any feedback will be appreciated.\nIf you prefer me to remove the extra tests (the unnecessary hook and the 404), please let me know, I'll update my branch accordingly.\n. That PR would also potentially resolve: https://github.com/adnanh/webhook/issues/72\n. This can indeed be achieve by doing a curl/wget in a subprocess.\nI just found this idea not very practical, and also have some doubts on how well it can scale, so implementing API call seemed more natural.\nBut I do understand that you don't want to maintain such feature, too bad, I really think it would have been a great feature to have.\n. Would close: https://github.com/adnanh/webhook/issues/78 & https://github.com/adnanh/webhook/issues/76\n. ",
    "josegonzalez": "Note: gh-release may be useful for uploading packages automatically :)\n. ",
    "faide": "Hi, I added support for a new config variable that enables the user to name the environment variable its program will receive.\nIt is especially useful for source=string and for source=entire-payload schemes\njson\n[\n  {\n    \"id\": \"push\",\n    \"execute-command\": \"bb2mm\",\n    \"command-working-directory\": \"/tmp\",\n    \"pass-environment-to-command\":\n    [\n      {\n        \"source\": \"entire-payload\",\n        \"envname\": \"PAYLOAD\"\n      },\n      {\n        \"source\": \"string\",\n        \"name\": \"PUSH\"\n      },\n      {\n        \"source\": \"string\",\n        \"envname\": \"MMURL\",\n        \"name\": \"https://someurl/hooks/somehooktokengeneratedbymm\"\n      }\n    ]\n  }\n]\nwill give you nice env variables:\n- HOOK_PAYLOAD (using the introduced feature)\n- HOOK_MMURL (using the introduced feature)\n- HOOK_PUSH\nwithout this feature the obtained vars are:\n- HOOK_ (it has no name and thus is not named :/ )\n- HOOK_https://someurl/hooks/somehooktokengeneratedbymm (the name is also the content and thus you won't be able to find this variable without knowing its content first, which kind of defeats the purpose)\n. I fixed the tests but did not introduce new ones to cover my changes. If you are interested in this PR please let me know so I can update the test suite to add coverage for it. Cheers!\n. I take this for a yes ... Let's do this then :)\nI just added tests for the zone of code I modified. Added some tooling scripts to help visually understand which code is tested or not... coverage report\n. If you are OK with the current state I am ready for a merge. Nothing to add to this particular PR\n. done\n. also done\n. ",
    "vincentserpoul": "Thanks, I was sure it was something simple! Here it is.\nHopefully, it will be useful for other people in need.\n. ",
    "mullender": "@moorereason I was running version 2.3.7\n. Wow that was quick, I was still trying to find the line to change :)\n. ",
    "gdubicki": "Hey @adnanh,\nI would like to make sure: you proposal from point 1 was not implemented, right? As of now if you return exit code != 0 and use include-command-output-in-response then you lose the output?. This issue should be closed, now that #143 is merged, shouldn't it?. Thanks for a prompt answer! :)\nI would add a warning in the docs if this feature is not compatible with so popular editors as vim then.. Of course https://github.com/adnanh/webhook/wiki/Hook-Definition would need to be edited too to document the new feature.. Docs & tests added, @moorereason @adnanh . :)\nPlease let me know if I need to squash too - contribution guide doesn't say what is your policy regarding that.. Isn't this the same as #150 ?. We have approval, so can we have it merged, @adnanh @wrouesnel ?. This way of checking it will log a false alarm for binaries with spaces in their names.. Sorry, nvm, it will not.. ",
    "denji": "\n./... -> ./vendor/.... (https://tip.golang.org/doc/go1.9#vendor-dotdotdot). \n",
    "GabLeRoux": "Ah, while searching a bit more, I found that this happens on go 1.3, but works on go 1.4 or higher. Found this info here: https://github.com/derekparker/delve/issues/56\nFollowed following instructions (worked on debian too):\nhttps://www.digitalocean.com/community/tutorials/how-to-install-go-1-6-on-ubuntu-14-04\nLocal problem, nevermind ;)\n. ",
    "wjessop": "Perfect, thanks!\n. ",
    "perfecto25": "that was it! thanks brother! great tool.\n. btw I wrote up a short wiki on the whole process for JIRA, maybe useful\nhttps://sites.google.com/site/mrxpalmeiras/jira/jira-webhooks\n. ",
    "jzimmek": "I would propose to support at least some control over how concurrency in webhook is handled. Without knowing about the inner details of webhook I would add\n1) Add new webhook parameter \"concurrency_strategy\", which defines the global (default) behavior for all hooks\n2) Add new property \"concurrency_strategy\" in the hook definition, which allows to define the behavior per hook\nThe following concurrency strategies come to mind:\n1) \"parallel\", the default, which behaves as is now\n2) \"skip\", does not execute command if an existing hook command (same hook id) is already running. but respond with http 200\n3) \"fail\", does not execute command if an existing hook command (same hook id) is already running. but respond with http 500\n2) and 3) will already solve a lot of use cases and should be fairly easy to implement.\nThe idea of having some queueing system sounds somehow nice, but I see your point that this might be a better fit for a different tool and not be part of webhook itself.\nNevertheless, having a \"concurrency_strategy\" flag in place, I would think about an additional option:\n4) \"custom\", this strategy will communicate with some external script/command. Not sure how this should behave in detail or if it is really necessary, but it would at least fit into this \"concurrency_strategy\" thing.\n. ",
    "freeekanayaka": "Woot, thank you for the code and the quick feedback! See you.\n. Note that this makes it necessary to patch the upstream code for distributions like Debian, see here for example.. Good call, I haven't been updating the package in a while. I'll do that shortly.. Done!. ",
    "jonhoo": "I tried\njson\n{\n  \"source\": \"header\",\n  \"name\": \"X-GitHub-Event\"\n}\nfirst, and got an empty string. I then tried\njson\n{\n  \"source\": \"entire-headers\"\n}\njust to see if that would work. It also gives me an empty string.\n. [webhook] 2016/10/31 13:13:56 Started POST /hooks/email-pushbot\n[webhook] 2016/10/31 13:13:56 email-pushbot got matched\n[webhook] 2016/10/31 13:13:56 email-pushbot hook triggered successfully\n[webhook] 2016/10/31 13:13:56 error extracting command arguments: couldn't retrieve argument for {Source:header Name:X-GitHub-Event EnvName:}\n[webhook] 2016/10/31 13:13:56 executing /usr/bin/mailer (/usr/bin/mailer) with arguments [\"/usr/bin/mailer\" \"/srv/git/pushbot\" \"refs/heads/master\" \"6db40f5186486801785a24241ffaf1a6ba0d2e1a\" \"328d298f0a8a44e8653430857eebf5d139c756b7\" \"jonhoo\" \"jon@thesquareplanet.com\" \"\"] and environment [] using /home/default as cwd\n[webhook] 2016/10/31 13:13:56 command output: handling  to /srv/git/pushbot\n/srv/git/pushbot refs/heads/master 6db40f5186486801785a24241ffaf1a6ba0d2e1a 328d298f0a8a44e8653430857eebf5d139c756b7 jonhoo jon@thesquareplanet.com\npushed by: jonhoo <jon@thesquareplanet.com>\naliased to Jon Gjengset <jon@thesquareplanet.com>\nsyncing with upstream\n  Fetching origin\ninvoking post-receive-email with\n  6db40f5186486801785a24241ffaf1a6ba0d2e1a\n  328d298f0a8a44e8653430857eebf5d139c756b7\n  refs/heads/master\nall done\n[webhook] 2016/10/31 13:13:56 finished handling email-pushbot\n[webhook] 2016/10/31 13:13:56 Completed 200 OK in 392.731546ms\nconsole\n$ git -C go/src/github.com/adnanh/webhook/ rev-parse HEAD\n7d525cf317b7f0e45b9e7e1a1658b4633154ec01\nRunning Arch Linux.\n. Great, thank you!\n. ",
    "madddi": "Good point. I'll see if I can come up with a proper solution.. I rebased my changes on master. The HTTP code is now configurable per hook. If not set or set to an invalid HTTP code, the default is 200 OK.. I thought of this exact name as well but found it a little bit too long. But I agree that the longer name is more self-explanatory. Thanks :-). ",
    "niemeyer": "No need to change the configuration anymore. We've changed gopkg.in itself to support the new git quirks.. ",
    "handcraftedbits": "Hi Adnan, checking back in on this -- any idea when you're going to cut the next release of webhook?  I was looking to add Bitbucket support to my project soon.  Also, how do you want me to update the wiki?  There's no branches so I didn't want to update it before this feature was actually merged into master.  Thanks!. Finished updating the wiki, thanks again.. ",
    "MGIMATTY": "I am an idiot. I failed to realize that I should call the id instead of the actual json file.\nThanks for helping me out on this one. I'm now going to try figuring out how to run this webhook of yours as a service on startup ;)\nThanks!. For the people who are interested I have the service files here:\nFor Ubuntu 16.04 LTS\n/lib/systemd/system/webhook.service\n```bash\n[Unit]\nDescription=Webhook service\nWants=network.target\n[Service]\nWorkingDirectory=/your/go/path/bin\nUser=root\nExecStart=/home/your/username/startwebhook.sh\nExecStop=/home/your/username/stopwebhook.sh\nExecReload=/home/your/username/restartwebhook.sh\nRestart=always\nRestartSec=15\n[Install]\nWantedBy=multi-user.target\n```\nin /home/your/username create files.\nbash\ntouch startwebhook.sh\ntouch stopwebhook.sh\ntouch restartwebhook.sh\nNow edit files:\nstartwebhook.sh\n```bash\n!/bin/bash\n/path/to/webhook -hooks path/to/webhook/jsonfile -nopanic\n```\nstopwebhook.sh\n```bash\n!/bin/bash\npkill webhook\n```\nrestartwebhook.sh\n```bash\n!/bin/bash\npkill webhook && /path/to/webhook -hooks path/to/webhook/jsonfile -nopanic\n```\nNow permissions:\nbash\nchmod 755 startwebhook.sh && chmod 755 stopwebhook.sh && chmod 755 restartwebhook.sh\nIt might not be clean, but it gets the job done. If I run go get github.com/adnanh/webhook I get put back on version 2.6.0 instead of 2.6.2. Works. Thanks mate! Closing the issue.. ",
    "antonchen": "It's working, thanks. I added it to the wiki.. ",
    "antoineco": "Oh wow, that was a harsh close :). No problem @adnanh, I perfectly understand. I didn't see your thumb up as Github doesn't notify on reactions unfortunately.\nAnyway, I moved on since I posted my proposal but I still keep it in a corner of my head! Thanks for clarifying.. Indeed, I wanted to implement a rate-limiting hook which seems to match the description, but never got an answer and eventually stopped using webhook (for other reasons), so I never got the motivation to invest the time.. ",
    "subzero79": "It would be a nice feature, but i am closing this issue as this can be solved right now using a reverse proxy with nginx.\nBTW is iOS loading on bg the bookmark, for now i removed a single letter from the webhook id so every time i want to reset i just fill the letter to trigger.. This is the log from nginx on no interactive at all\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /hooks/rbk HTTP/1.1\" 200 383 \"-\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Version/10.0 Mobile/14D27 Safari/602.1\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-120x120-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-120x120.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /favicon.ico HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-120x120-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-120x120.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /apple-touch-icon.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.34 - - [21/Mar/2017:19:01:56 +1000] \"GET /favicon.ico HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /hooks/rbk HTTP/1.1\" 200 383 \"-\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Version/10.0 Mobile/14D27 Safari/602.1\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-120x120-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-120x120.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /favicon.ico HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-120x120-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-120x120.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /apple-touch-icon.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:45 +1000] \"GET /favicon.ico HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:51 +1000] \"GET /hooks/rb HTTP/1.1\" 404 15 \"-\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Version/10.0 Mobile/14D27 Safari/602.1\"\n10.10.10.25 - - [21/Mar/2017:19:53:51 +1000] \"GET /apple-touch-icon-120x120-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:51 +1000] \"GET /apple-touch-icon-120x120.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:51 +1000] \"GET /apple-touch-icon-precomposed.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\n10.10.10.25 - - [21/Mar/2017:19:53:51 +1000] \"GET /apple-touch-icon.png HTTP/1.1\" 404 19 \"-\" \"MobileSafari/602.1 CFNetwork/808.3 Darwin/16.3.0\"\nThe webhook id is rbk, you can see at the end when i changed it to rb only. If i enter the URL normally\n10.10.10.34 - - [21/Mar/2017:20:27:58 +1000] \"GET /hooks/rbk HTTP/1.1\" 200 383 \"-\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Version/10.0 Mobile/14D27 Safari/602.1\"\nFor getting seeing the headers i should run something like a MITM proxy is that correct?\n. I'll let you know what i get then. Thanks. ",
    "prasenforu": "Thanks.\n For two or three files its OK.\nBut more than 5 not ok\nLooks like -hook_dir features n\u00e8ed to add as a enhancement.. Thanks .  Can you please  suggest how?\nI have below two hooks files.\nfile1.json \n[\n  {\n    \"id\": \"ose-webhook-dn\",\n    \"execute-command\": \"/etc/webhook/osedn.sh\",\n    \"command-working-directory\": \"/etc/webhook\"\n  }\n]\n\nfile2.json\n[\n{\n    \"id\": \"ose-webhook-up\",\n    \"execute-command\": \"/etc/webhook/oseup.sh\",\n    \"command-working-directory\": \"/etc/webhook\"\n  }\n]\n. Hmmm ...\nI tried same \ud83d\ude00\nLooks like I was missing one coma (,) in between.\nAnyways thanks for prompt response .\nThanks once more time for this nice and cool project.\n\ud83d\udc4d. thanks... . Its continue with current issue ...\nWhen executing below command \ncurl \"http://ip-10-128-240-67:9000/hooks/createjob?usrname=kar002p&giturl=https://github.com/prasenforu/openshift-aws.git&cfnname=test.yml&stkname=awsec2&acckey=hdfhHFSFHS&seckey=/VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx&jobname=EC2-NEW&param=asd\"\nif can see very closely there is parameter (seckey=/VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx) I am passing where plus sign (+).\nIn webhook log its coming as blank or white space.\n[webhook] 2017/12/07 13:28:15 [71a6d5] createjob hook triggered successfully\n[webhook] 2017/12/07 13:28:15 [71a6d5] executing /etc/webhook/test.sh (/etc/webhook/test.sh) with arguments [\"/etc/webhook/test.sh\" \"kar002\" \"https://github.com/prasenforu/openshift-aws.git\" \"test.yml\" \"awsec2\" \"hdfhHFSFHS\" \"/VhBo3twtjPnfvVRzppm M1wkmWCp8UENTa6skkx\" \"EC2-NEW\" \"asd\"] and environment [] using /etc/webhook/ as cwd\nIf run normally using script, its taking exact value\n```\n[root@ip-10-128-240-67 webhook]# sh -x test.sh /VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx\n+ seckey=/VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx\n+ echo /VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx\n/VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx\n```. can u give some example PLEASE.. Perfect :) it works ... :+1: \nBTW in normal browser it should work with as follows .. right (no option to test in browser)\nhttp://ip-10-128-240-67:9000/hooks/createjob?usrname=kar002p&giturl=https://github.com/prasenforu/openshift-aws.git&cfnname=test.yml&stkname=awsec2&acckey=hdfhHFSFHS&seckey=/VhBo3twtjPnfvVRzppm+M1wkmWCp8UENTa6skkx&jobname=EC2-NEW&param=asd\nRight now I have no option to test in browser, that is why asking.\n. closing as same as 307. I am infra guy, can you please explain where to use ?. You mean to in hooks ?\n\"execute-command\": \"/etc/webhook/test.sh\"\n\nThen I can't use as environment variables in hooks :( . Ok. \nThanks for your help and time.. Looks like I am getting proper JSON data.\n{\n  \"kind\": \"EventList\",\n  \"apiVersion\": \"audit.k8s.io/v1beta1\",\n  \"metadata\": {},\n  \"items\": [\n    {\n      \"metadata\": {\n        \"creationTimestamp\": \"2019-03-09T12:19:51Z\"\n      },\n      \"level\": \"Metadata\",\n      \"timestamp\": \"2019-03-09T12:19:51Z\",\n      \"auditID\": \"05b1a315-54c2-4490-9d69-a739205e737b\",\n      \"stage\": \"ResponseComplete\",\n      \"requestURI\": \"/oauth/authorize?client_id=openshift-challenging-client&code_challenge=URNGQwRkuB7L47QqT9rlJp2jaO4FdxPa44wvHD4Xcy0&code_challenge_method=S256&redirect_uri=https%3A%2F%2FZZZZZZZZZZZZ%3A8443%2Foauth%2Ftoken%2Fimplicit&response_type=code\",\n      \"verb\": \"get\",\n      \"user\": {},\n      \"sourceIPs\": [\n        \"ZZZZZZZZZZZZ\"\n      ],\n      \"responseStatus\": {\n        \"metadata\": {},\n        \"message\": \"Authentication failed, no credentials provided\",\n        \"code\": 401\n      },\n      \"requestReceivedTimestamp\": \"2019-03-09T12:19:51.217483Z\",\n      \"stageTimestamp\": \"2019-03-09T12:19:51.397711Z\"\n    }\n  ]\n}\nNow using \"source\": \"entire-payload\" how can I get following data as a variable without using jQuery inside script.\ncode\nsourceIPs\n. ",
    "mcanevet": "Works fine with gogs. @adnanh done!. ",
    "raphink": "I changed the base but now I need to rebase the files.. I've rebased so it should be good now.. @adnanh this should be to go now.. ",
    "vladgh": "Thank you so much for your very fast response. This is the way I have it  currently set up. I was just wondering if there is a better way.. ",
    "sridhar-vadlamani-ck": "@moorereason I'm on CentOS on AWS. Any ideas for debugging/fixing this? Works perfectly if I just start webhook from the terminal. All issues are when I run it as a service. I used and modified the webhook.init script I found in webhook-contrib.. It was an issue with the company Proxy. Took me a while to figure it out. As @adnanh mentioned, systemd was unsetting all environment variables. I'd totally forgotten about the HTTP_PROXY env variable.. So the command would be python and the argument would be script.py ? How do I pass parameters to this script?. \ud83e\udd37\u200d\u2642\ufe0f I'll test it and let you know.. So arguments work just like bash. Given the shebang for python, using sys.argv to get the arguments gives you the file as the first parameter followed by everything specified in hooks.json.. I was hoping for something like an array like \njson\n    [\n    {\n    \"execute-command\": \"/home/checks.py\",\n    \"command-working-directory\": \"/home/webhooks/\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"pull_request.statuses_url\"\n      },\n      {\n        \"source\": \"payload\",\n        \"name\": \"pull_request.body\"\n      },\n      {\n        \"source\": \"payload\",\n        \"name\": \"pull_request.title\"\n      }\n    ]\n    },\n    {\n    \"execute-command\": \"/home/check2s.py\",\n    \"command-working-directory\": \"/home/webhooks/\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"pull_request.statuses_url\"\n      }\n      ]\n    }\n    ]\nI'm using the wrapper script now. Works perfectly. I just don't like that every sub-script has access to every variable.. ",
    "avluis": "You got two different behaviors here because of the script call itself (Windows sucks at running PowerShell scripts for some reason)...\nScenarios:\n1. You are missing the script handler here -- makes sense, powershell scripts are still scripts.\n2. The command runner can't resolve either powershell or \"powershell -Command \\\"$PSVersionTable.PSVersion\\\"\" using info from your PATH variable.\nI'll assume you can launch your powershell script from your command prompt as well as from the run command. So in order to work around this, you could:\n\nCall a cmd prompt to handle your powershell script and its arguments.\nVerify that Windows is resolving your commands by running them from Run or Cmd.\nPlay with quotes -- these will make or break your script call, specially when the path contains spaces.\n\nHere is a powershell snippet I keep handy when working with spaces:\npowershell -noexit \"& \"\"C:\\path\\to_my\\script.ps1\"\"\"\nI hope this info gets you closer to your answer~\n\nQuick edit:\nIf you want to avoid running a powershell script at all, then you need to invoke your command from somewhere else: https://msdn.microsoft.com/en-us/powershell/scripting/core-powershell/console/powershell.exe-command-line-help?f=255&MSPPError=-2147217396. ",
    "vsivsi": "You should be able to run a python script by doing two things:\n\nEnsure that the script has its execute bits set, e.g. chmod +x myscript.py\nAdd an appropriate \"shebang\" line at the top of the python file.  See here for more info:\nhttp://stackoverflow.com/questions/6908143/should-i-put-shebang-in-python-scripts-and-what-form-should-it-take#19305076  . \n",
    "jiangmitiao": "Whether it is a shell file or a python file, they all need to +x to execute. ",
    "sullyme": "Yes, but anything else? Like forever for linux.... ",
    "msenturk": "@sullyme try https://nssm.cc. ",
    "nlsrchtr": "@adnanh Thanks for your feedback and for adding IP logging in future releases. I'll dig into netcat. Thanks for the idea.. I looked into it with nc -l 9000 -v. BitBucket sent requests with 104.192.143.193 and 104.192.143.194. I'm using the exact sample piece from the example:\njson\n\"trigger-rule\":\n{\n  \"match\":\n  {\n    \"type\": \"ip-whitelist\",\n    \"ip-range\": \"104.192.143.0/24\"\n  }\n}\nThe response I see at BitBucket still is Hook rules were not satisfied. - since this is the only rule, I'm wondering why this doesn't match and work?\nMaybe you have a chance to try it on your side?. @adnanh Thanks for taking the timing! My configuration looks like:\njson\n[\n  {\n    \"id\": \"puppetmaster-webhook\",\n    \"execute-command\": \"PATH_TO_EXECUTABLE\",\n    \"command-working-directory\": \"PATH_TO_WORKING_DIRECTORY\",\n    \"include-command-output-in-response\": true,\n    \"trigger-rule\":\n    {\n      \"match\":\n      {\n        \"type\": \"ip-whitelist\",\n        \"ip-range\": \"104.192.143.0/24\"\n      }\n    }\n  }\n]\nSo it's just the example taken from the \"Hook examples\". The response at Bitbucket displays \"Hook rules were not satisfied.\" as body content.\nSince I use Ubuntu packaging to install and run webhook, could you give me short instruction howto update to the latest version? Since it's Go bases, I could just download the latest executable, right?. Thanks for taking the time investigating this in more. It works for me with the new release, but not with the old, with the same config:\nNew version, without IP whitelisting in config\n[webhook] 2017/06/08 14:59:46 incoming HTTP request from 104.192.143.193:61525\n[webhook] 2017/06/08 14:59:46 XYZ-webhook got matched\n[webhook] 2017/06/08 14:59:46 XYZ-webhook hook triggered successfully\n[webhook] 2017/06/08 14:59:46 executing /... (/...) with arguments [\"/..\"] and environment [] using /etc/.../code/ as cwd\n[webhook] 2017/06/08 14:59:48 command output:\n[webhook] 2017/06/08 14:59:48 finished handling XYZ-webhook\n[webhook] 2017/06/08 14:59:48 2017-06-08T14:59:46Z | 200 |   1.591855914s | SERVER:9000 | POST /hooks/XYZ-webhook\nHere I changed the config to enable IP whitelisting.\nNew version, with IP whitelisting in config\n[webhook] 2017/06/08 15:00:46 incoming HTTP request from 104.192.143.194:63008\n[webhook] 2017/06/08 15:00:46 XYZ-webhook got matched\n[webhook] 2017/06/08 15:00:46 XYZ-webhook hook triggered successfully\n[webhook] 2017/06/08 15:00:46 executing /... (/...) with arguments [\"...t\"] and environment [] using /etc/.../code/ as cwd\n[webhook] 2017/06/08 15:00:47 command output:\n[webhook] 2017/06/08 15:00:47 finished handling XYZ-webhook\n[webhook] 2017/06/08 15:00:47 2017-06-08T15:00:46Z | 200 |   1.739314364s | SERVER:9000 | POST /hooks/XYZ-webhook\nBack to old version, with IP whitelist enabled\n[webhook] 2017/06/08 15:01:51 Started POST /hooks/XYZ-webhook\n[webhook] 2017/06/08 15:01:51 XYZ-webhook got matched\n[webhook] 2017/06/08 15:01:51 XYZ-webhook got matched, but didn't get triggered because the trigger rules were not satisfied\n[webhook] 2017/06/08 15:01:51 Completed 200 OK in 387.294\u00b5s\nBack to new version, with IP whitelist enabled, with invalid IP\n[webhook] 2017/06/08 15:06:56 incoming HTTP request from 213.61.242.154:52148\n[webhook] 2017/06/08 15:06:56 XYZ-webhook got matched\n[webhook] 2017/06/08 15:06:56 XYZ-webhook got matched, but didn't get triggered because the trigger rules were not satisfied\n[webhook] 2017/06/08 15:06:56 2017-06-08T15:06:56Z | 200 |   127.205\u00b5s | SERVER:9000 | POST /hooks/XYZ-webhook\nThe problem seems to be solved for me, but I'm wondering if you changed more than just adding logging of the IP address?\nThanks again for your time!\nI anonymized paths and server name. ",
    "jonatasrenan": "I tried \"Content-Type: text/html; charset=utf-8\" but it didn't works.. ",
    "avtar": "Please ignore all of the above, I was using the wrong data format for the payload \ud83d\ude34 . ",
    "hernandesbsousa": "@avtar I have the exact same problem, could you share how you fixed it?. @avtar your comment about wrong data format gave me the hint, adding -H \"Content-type: application/json\" to my curl test requests did the trick, thanks!. ",
    "hichamuntitled": "Facing the same issue, while calling curl -X POST http://0.0.0.0:9000/hooks/redeploy-webhook -H \"Content-Type: application/json\" -d @data.json and data.json contains:\n{\n  \"host\": \"hostname\",\n  \"service\": {\n    \"name\": \"serviceName\"\n  }\n}\nhooks.json file looks like:\n[\n  {\n    \"id\": \"redeploy-webhook\",\n    \"execute-command\": \"/var/scripts/redeploy.sh\",\n    \"command-working-directory\": \"/var/webhook\",\n    \"pass-arguments-to-command\":[\n        {\"source\": \"payload\",\n         \"name\": \"service.name\"}\n]\n  }\n]\nand redeploy.sh looks like : \n```\n!/bin/bash\n...\necho $1\n....\n```\nNothing seems to be printed in the output.\nIs there something that I missed?. Never mind, I had to restart the service so the changes I made to hooks.json could take effect. Works like a charm now.. ",
    "wrouesnel": "Why yes. Resolved by #143.. * Added the test scenarios.\n* Updated to pull into development branch.\nNot sure what you meant about updating references to hooks json? Other then places in the README that the filename is explicitly mentioned (not sure if you want to update those - though for \"type this out\" examples the YAML is nicer).. Ping! I've been building some docker containers with this version lately and its a very pleasant experience manually. Any word or needed changes for this?. @gamefundas see #251 for the PR and support it there.. A long overdue rebase and merge!. ",
    "ilkelma": "Ok I think I've done that but it brought along a couple other changes. I'll leave this open as is for now but I can definitely close this one and open a new one (since it's such a small change) to avoid messing up the tree or in general bringing over stuff that shouldn't be in the development branch yet.. ",
    "ivanpesin": "It seems to me that this sort of access control should be implemented at the proxy server.\nThere are two options discussed:\n1. support PROXY protocol\n2. support X-Forwarded-For: header\nPROXY protocol essentially adds additional instruction when connection is established, just before GET/POST/... request line:\nPROXY TCP4 192.168.0.1 192.168.0.11 56324 443\\r\\n\nX-Forwarded-For header simply holds a series of IP addresses.\nIn both cases there is NO way to ensure authenticity of the information passed in and it can easily be used for spoofing. Thus adding support in webhook for these features will only give a false sense that user has access control, when in fact they don't.\nMoreover, if a user has access to a proxy server to configure either PROXY protocol support or X-Forwarded-For header, most likely they have access to configure access control there as well which is a more robust way to filter out undesirable requests.\n. I see your points and agree that they are convenient. However, security should not be compromised for convenience, especially in a way that gives you false sense of control. You generally don't want your default configuration to rely on other network components' configuration not to be easily compromised. Also, it's not complicated to configure haproxy to have different rules for different URLs.\nAs a benefit you get better security and much more sophisticated ACL rules available in HAProxy, compared to webhook.\nAnyway, that's just my point of view, maybe @adnanh has different opinion.\n. @adnanh I've added tests for this feature -- let me know if they look fine.\nThanks.. I've based it off master mistakingly, removed this PR and created a new against development -- #167 . Thanks for the feedback!\nHook object looked basically \"static\" to me: it's only updated when configuration is read, thus I didn't want to put counters in it. It would also involve mutexes to make the counter thread-safe. That's why I decided to go with channels.\nI think I've fixed all the issues you pointed out. I've also reduced nesting in reloadHooks and added map cleanup in removeHooks. To see clearly the change to reloadHooks check the diff ignoring whitespaces.\nLet me know if any other changes needed.. Oh, that' right, just yesterday I was looking at this bit of code where handleHook is called and thought there might be an issue. Let me simplify that part a bit as a separate PR and that would also fix the issues you mentioned.. Waiting on #175; if it works, I'll update this PR.. @adnanh -- just an update on this one: I have updated the code in my repository with the assumption #175 is good and tested all the cases you mentioned. Everything seems good and rate limiting works as expected.\nWhen you get few spare minutes, could you review #175 and if it looks good, I'll update this PR with code that accounts for it.\n. Ah ok, I haven't realized you intended this way. Then I have two questions:\n\n\nWhen forking command in background and not waiting for it, you always return 200, even if command has failed. Would it not make sense to add a special config parameter if you want for request return immediately? I.e. by default webhook waits for command to complete and looks at exit code, returns 200 if all ok, and 500 if command failed. If you specify something like spawn-and-return: true then it simply spawns the script and does not wait for its completion. If this makes sense to you (and I kinda like such functionality) I can get a PR ready on Saturday probably.\n\n\nIf we spawn and return request immediately, there is no easy way for us to track number of concurrent processes. The only way we can implement this is by looking at the list of processes running in the system and counting the ones that match the command we are about to start. This is unreliable though, because command can change the process name string. I would suggest that we have rate limiting applied only to cases when webhook waits for the process to complete, and ignores this parameter for entries with spawn-and-return: true.\n\n\nLet me know your thoughts, I think I can get this done this Saturday if you agree to this.\n. @adnanh Later is better than never! :) I'll take a stab at it over the weekend.. fixed. fixed. fixed\n. fixed. ",
    "stephenreay": "If you're using PROXY protocol, it's assumed that the downstream end (ie webhook in this instance) isn't also directly exposed to the network.\nForcing this to be handled upstream in the proxy also doesn't easily allow for multiple hooks with different rules. It means duplicating path inspection.. I'm not suggesting to compromise security for convenience.\nI'm suggesting there be an option to bind to an address/port with PROXY support, and it should probably default to off.\nAllowing fetching the true client IP from a header would be an acceptable alternative, but going forward I would expect PROXY to be the more common method.\nSent from my iPhone\n\nOn 16 Sep 2017, at 10:08, Ivan Pesin notifications@github.com wrote:\nI see your points and agree that they are convenient. However, security should not be compromised for convenience, especially in a way that gives you false sense of control. You generally don't want your default configuration to rely on other network components' configuration not to be easily compromised. Also, it's not complicated to configure haproxy to have different rules for different URLs.\nAs a benefit you get better security and much more sophisticated ACL rules available in HAProxy, compared to webhook.\nAnyway, that's just my point of view, maybe @adnanh has different opinion.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thanks @moorereason , I'll try to look at this sometime this weekend and let you know how it goes.\n\nI assume from the comments on the issue that the go proxy protocol lib only supports PROXYv1 (plain text), not PROXYv2 (binary) ?\nI'll setup a vagrantfile to test this with a couple of different \"upstreams\" sending PROXY requests. Once it works (to the point of sending the request to webhook) I'll share it to make maintenance/testing easier.. Ok, so.. I have updates.\nThe short version is, this mostly WORKS. \ud83c\udf89 Thanks @moorereason for your work on this so far!\nThe longer version is definitely somewhat driven by my inexperience (and resulting frustration) building a go package without detailed instructions.\nThis took me a while to get to even compile (e.g. it grabs the 'hook' package from GitHub not the local copy, and there is apparently a version mismatch in a method signature). I also had to comment out the svr.ServeTLS call, as it complains the method doesn't exist? I'm sure these are not technical faults, but lack of \"how to build\" when working from a local clone.\nAnyway - so it seems I was correct, this is PROXY v1 only, but there is a bigger problem, which is referenced in a comment on the proxy package's repo: https://github.com/armon/go-proxyproto/pull/6#discussion_r97190296\nThe underlying PROXY package explicitly allows non-PROXY connections to work transparently.\nAs was mentioned earlier, misuse of this protocol is dangerous, and allowing regular HTTP and PROXY+HTTP connections on the same port is so dangerous the protocol explicitly forbids it:\n\nThe receiver MUST be configured to only receive the protocol described in this\nspecification and MUST not try to guess whether the protocol header is present\nor not. This means that the protocol explicitly prevents port sharing between\npublic and private access. Otherwise it would open a major security breach by\nallowing untrusted parties to spoof their connection addresses. The receiver\nSHOULD ensure proper access filtering so that only trusted proxies are allowed\nto use this protocol.\n\nGiven my golang experience level (zero) I don't know if its realistic to do so, but a patched (presumably just removing the special-casing in https://github.com/pires/go-proxyproto-fork/blob/a284d5f458358c96eef5ce15cf36eaf7cc1ee8a4/protocol.go#L75) version might be usable, to retain protocol compatibility?\nI do have the aforementioned Vagrant config (plus a test hook & a HAProxy config file) I'm happy to share, if it helps with testing/dev on this feature.. Hey @moorereason, see https://gist.github.com/stephenreay/391a94c7f435c53959e67f63a9fde6b4 - it assumes you want to test in Vagrant, but it should run OK on any platform that will run HAProxy if you point to the haproxy.cfg in the gist.. I also found a reference to https://github.com/pires/go-proxyproto in that other comment thread - not sure on the stability/usability of that lib, but it specifically says it supports PROXY v1 and v2.. Hi @moorereason \nThanks for the update.\nRe: non-PROXY connections: it's worrying that the upstream PROXY lib is deliberately breaking the protocol like this. \nRe: whitelisting: this seems like something that would be best left as a documentation item, surely: in the docs where it covers -proxyProtocol, an entry specifying that the service should only be accessible by trusted addresses - either bind to loopback (e.g. if HAproxy is running locally), or use an OS provided ip firewall etc. Implementing an IP firewall in this tool seems like an unnecessary duplication that's going to have multiple orders of magnitude less eyeballs looking at it.\nThanks again!. ",
    "hobakill": "ubuntu@company:~/hooks$ ./webhook --version\nwebhook version 2.6.4\n[\n  {\n    \"id\": \"test-webhook\",\n    \"execute-command\": \"/home/ubuntu/hooks/echo.sh\",\n    \"command-working-directory\": \"/home/ubuntu/hooks\"\n  },\n  {\n    \"id\": \"test2\",\n    \"execute-command\": \"/home/ubuntu/hooks/echo.sh\",\n    \"command-working-directory\": \"/home/ubuntu/hooks\"\n  },\n  {\n    \"id\": \"git-test\",\n    \"execute-command\": \"/home/ubuntu/hooks/git.sh\",\n    \"command-working-directory\": \"/home/ubuntu/hooks\"\n  }\n]\nthanks for the quick response. i'm brand new to your repo. it's great. \nof note, things like git --version and git status seem to work fine.. FWIW I have a bit of a workaround but not sure how long this is sustainable:\n```\n!/usr/bin/env bash\nDBDIR=\"/some/dir/here\"\nfetchit() {\n  git -C $DBDIR fetch --all\n  git -C $DBDIR reset --hard origin/master\n}\nfetchit\n``\nthe reason this works is because this repo will never be updated on the server wherewebhookis running. still... my ghetto workaround can't be the right answer! \ud83e\udd23 . @scottstensland the server in question already has keys on GitHub. Why wouldgit pullwork in a standalone shell and a standalone shell script but not inwebhook? AFAIKwebhookruns as the login user. in this case it'subuntu. That said you might have given me an idea. I may be closing this ticket in the next 10 minutes. . @scottstensland thanks for the tip. I was runningwebhookas withsudoin front. while theubuntuuser has keys on GH,root` does not. took the appropriate actions and all is well again in the world\n@adnanh PEBKAC!!!\nthanks!. ",
    "scottstensland": "One way to to allow git pull  to work when the repo lives on github.com is to setup SSH keys then use those keys when running your script.   This question is probably better asked/answered as it has many times over on https://stackoverflow.com/. just setup like every other systemd service ... many doc examples out there ... after you push your envelope and have done battle then come back with questions ... no need to re-do yet another doc ... all systemd service setups are intentionally identical ... I can confirm this webhook works nicely launched as a systemd service. Lookup a tool called supervisor which will launch a process (webhook) as well as take care of rotating stdout/stderr log files and relaunching process ...  http://supervisord.org/\nadditionally you can in turn wrap supervisor to be a systemd started task so it gets launched on box reboot\nwebhook is a daemon so if launched by cron assure you avoid multiple instances of it attempting to run (they will fight over ports) ... if cron launch fails make sure you are sourcing the necessary environment variables needed by your webhook ( EG source /path/to/some/.bashrc  or osx equivalent ). The readme say its for ubuntu 17.04 or above ... an alternative is to directly install the ubuntu deb \nhttps://packages.debian.org/sid/webhook\nchoose your architecture then download the appropriate deb file ... once downloaded a typical install is\nsudo dpkg -i webhook_2.5.0-2_amd64.deb  # <-- deb filename will vary depending on arch\nonce installed you can verify the package is installed by issuing\ndpkg -l| grep webhook\nto view installed files issue\ndpkg -L webhook\nfinally to actually view the systemd started task which launches your new webhook on each reboot\n\n\n\n    cat /lib/systemd/system/webhook.service \n\n\n\n    [Unit]\n    Description=Small server for creating HTTP endpoints (hooks)\n    Documentation=https://github.com/adnanh/webhook/\n\n    [Service]\n    ExecStart=/usr/bin/webhook -nopanic -hooks /etc/webhook.conf\n\n    [Install]\n    WantedBy=multi-user.target\n\n\nso next step is to edit your custom config and put it into above mentioned file /etc/webhook.conf. issue this to identify what PID is using port 9000\n```\nsudo netstat -peanut \n```\nno doubt your webhook is already running when you attempt to launch it a second time. issue this\nsudo netstat -peanut\nhere is a typical output\n```\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode       PID/Program name\ntcp        0      0 127.0.0.1:3000          0.0.0.0:*               LISTEN      0          8575532     18008/docker-proxy\ntcp        0      0 127.0.0.1:3001          0.0.0.0:*               LISTEN      0          8575138     17758/docker-proxy\ntcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      0          19841       1950/docker-proxy\ntcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      0          16586       1088/nginx -g daemo\ntcp        0      0 127.0.0.1:4190          0.0.0.0:*               LISTEN      0          19553       1776/docker-proxy\ntcp        0      0 127.0.0.1:993           0.0.0.0:*               LISTEN      0          19610       1816/docker-proxy\ntcp        0      0 127.0.0.1:995           0.0.0.0:*               LISTEN      0          19583       1805/docker-proxy\ntcp        0      0 127.0.0.1:5000          0.0.0.0:*               LISTEN      0          8506067     31882/docker-proxy\ntcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      0          17347       1560/docker-proxy\ntcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      0          18496       1746/docker-proxy\ntcp        0      0 127.0.0.1:587           0.0.0.0:*               LISTEN      0          19635       1842/docker-proxy\ntcp        0      0 127.0.0.1:110           0.0.0.0:*               LISTEN      0          19790       1924/docker-proxy\ntcp        0      0 127.0.0.1:143           0.0.0.0:*               LISTEN      0          18684       1912/docker-proxy\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      0          16585       1088/nginx -g daemo\ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      0          16033       1000/sshd\ntcp        0      1 144.217.80.162:80       73.94.87.55:52156       LAST_ACK    0          0           -\ntcp        0      1 144.217.80.162:443      73.94.87.55:52157       LAST_ACK    0          0           -\ntcp        0    212 144.217.80.162:22       69.207.210.112:51920    ESTABLISHED 0          9407973     2582/sshd: ulfberht\ntcp6       0      0 :::22                   :::*                    LISTEN      0          16035       1000/sshd\nudp        0      0 0.0.0.0:68              0.0.0.0:*                           0          12813       824/dhclient\n\n```\nexamine your output ... identify offending pid listed on far right column PID/Program name\nso lets say pid is 12345 ... before we kill that pid first see what process has it by issuing\n```\nps -eafww | grep 12345\n```\nto execute the kill issue\nsudo kill 12345\npossibly it will fail to be killed with above gentle syntax ... a more forceful kill syntax is\nsudo kill  -9 12345\nnow issue again above netstat command to confirm port 9000 no longer appears. The machine where you are executing your webhook server can execute a script already on that machine ... are you asking how to upload a script onto your server before webhook executes it ? or how to have your webhook launch a script already on the server which in turn uploads another script which it then executes ?. For the webhook  to work it needs to execute on a server which is visable from the internet ... if you do not already have a server you can get yourself one from any cloud hosting provider ... a small one will set you back less than $4 per month over at https://www.ovh.com/world/vps/ . same json formatted\n```\n[\n  {\n    \"id\": \"hook_master\",\n    \"execute-command\": \"/var/scripts/redeploy_master.sh\",\n    \"command-working-directory\": \"/var/myfolder/\",\n    \"pass-arguments-to-command\": [\n      {\n        \"source\": \"entire-payload\",\n        \"envname\": \"WEBHOOK_PAYLOAD_FILE\"\n      }\n    ],\n    \"pass-environment-to-command\": [\n      {\n        \"source\": \"entire-payload\",\n        \"envname\": \"ENV_VARIABLE\",\n        \"base64decode\": false\n      }\n    ],\n    \"pass-file-to-command\": [\n      {\n        \"source\": \"entire-payload\",\n        \"name\": \"zippedBinary\",\n        \"envname\": \"ENV_VARIABLE\",\n        \"filename\": \"binaryFile.zip\",\n        \"base64decode\": true\n      }\n    ]\n  },\n  {\n    \"id\": \"healthcheck\",\n    \"response-message\": \"Im fine\"\n  }\n]\n```. what I do is prior to launching just copy config file to elsewhere then issue this in a bash launcher script\nsed -i -- \"s|ENV_SLACK_TOKEN|${ENV_SLACK_TOKEN}|g\"  $curr_file\n\nto translate the value of env var into that string ENV_SLACK_TOKEN found in config file. ",
    "tvld": "@hobakill  have same problems... but you describe \"took appropriate actions\" .. would be nice to know which ?. Not sure if this is related, but BitBucket webhook sends arrays. I found:\nStandard json with push.changes[0].new does not work, but this works:\njson\n{\n        \"source\": \"payload\",\n        \"name\": \"push.changes.0.new.target.message\"\n      },\n      {\n        \"source\": \"payload\",\n        \"name\": \"push.changes.0.new.target.author.raw\"\n      }. Thanks... the tool is excellent by the way. It' s in production ;-). Ok, got it. The parameters passed as $1, $2, should be listed as \"source\" string...\n```json\n[\n  {\n    \"id\": \"test-webhook\",\n    \"execute-command\": \"/etc/webhook/webhook-test.sh\",\n    \"command-working-directory\": \"/var/log/webhook\",\n    \"pass-arguments-to-command\":\n    [\n      { \"source\": \"string\",\n        \"name\": \"hello\"\n      },\n      {\n        \"source\": \"string\",\n        \"name\": \"there\"\n      } \n    ]\n  }\n]\n```. Sounds like the same bug... I am running the default webhook from the Ubuntu ppa, like a good citizen ;) \nHow to determine? webhook -version does not show me anything, and webhook -help shows no version output?. Thank you... wish the ppa was updated though... ;). ",
    "hassanbabaie": "Ok so I tested the one item I didn't think would work and it did... \nI'm assuming I have to use $1 downward depending on however items I'm calling out of the payload?\n#!/bin/sh\necho test $1\nCorrect?, and just to confirm, I think the app is great!\n. Yep, all tested this can be closed!\nThanks\nHass. Thanks @adnanh , you might be right however using the $1 etc.. is now working very well and doesn't risk clashing with existing EVN variables on the local server running the webhook app.. Thanks @scottstensland I'll have a go and will let you know how I get on.. @scottstensland for some reason I thought I was going to have an issue with the switches when setting the ExecStart but as you said no issue and really simple.\nQuick question how have you handled multiple webhooks? I'm running multiple related webhooks within a single JSON but wanted to use seperate JSON's for for different groups (to help manage change). \nDid you run each of these as a separate systemd services?\nE.g.\nwebhook-dns.service\nwebhook-mail.service\nAny thoughts would be good.\nFor anyone else searching the site that is completely new to Linux below is what I did (very very basic stuff and so might not be secure or good...), but it will help you get going as you read the documents to expand the settings.\n1) Created a file: MyAppInstanceName.service (for this example webhook.service) within /etc/systemd/system\n2) edit the new file with the following (NOTE: in ExecStart use the line you normally use to start the webhook)\n```\n[Unit]\nDescription=webhook\n[Service]\nExecStart=/usr/local/webhook-linux-amd64/webhook -hooks /webhook/site/dns_management.json -verbo$\nRestart=always\n[Install]\nWantedBy=multi-user.target\n```\nThe once saved run the following:\nTo start the service\nsystemctl start webhook\nTo start at book\nsystemctl enable webhook\nTo check if it's working:\njournalctl -u webhook\n. Yes I guess that might be the best way to balance not having everything in one JSON and to limit the risk of change impacting all Webhook.\nThanks I'm guessing we can close this now but hopefully some of the comments on the chain will be useful for other newbies!\nThanks. hi @rodislav I'm using CentOS 7.X and not having any issues with using the systemd and and the pass-environment-to-command?\nWell as far as I can tell.... These webhooks are running all the time and would fail if they didn't the their env variables. Hi @rodislav I just had a thought related to if what you mentioned is part of \"Unable to run curl commands in the shell scripts when started as a service #129\" then I think I should be ok as I'm only using Environment Variables that are being imported via the webhook app and so don;t need access to the base system ones.\nBut do let me know your thoughts\nThanks\nHass. This would be really nice to have!. Hi @CarlosEvo running in non-interactive mode I;ve been using \njournalctl -u webhook\nAnd while it is light on the logs it should give some info, have you tried hitting the webhook directly from a web browser to see what happens?. @dcj do you think we could use this to have two independent webhooks (HA) writing to a shared file?. Currently the way we're using Webhook is that it is running on a CentOS VM and just does it's thing to the point we forget about it. Were about to start using it more and need to ensure there is uptime and an easier way to troubleshoot if something goes wrong down the line. \nI plan on deploying these on two VM and using DNS to load balance and auto fail over if one goes down. The hard part is having the log to sense check. My idea is to try and gets these both on a single file that can be used by the others in the team; I'm not a pro at this stuff but working it out now and your PR request sounds good. Thanks @adnanh  we're in the process of spinning up an ELK stack so I will see how it goes.\nJust to confirm though this product really just works so well!!1\nFYI, we talked to a company we use that sends out a large amount of webhooks to see how we can get it to support with a signing key.\nhttps://github.com/scalr-tutorials/webhook\nThey forked it to get it working for us in our testing. Just out of interest would this be something you would support a PR for or is this too specific to one users req? If you do I'll ask them to do a PR\nHass\n. Great, I'll let them know,\n@dcj yes sorry for change subject (all in a good cause!). Thanks for creating this ticket, I've reached out to Aloys (who did the original fork for us) to see if he can do a PR against the Development branch. @moorereason & @adnanh Just to confirm, I've finished the tests with the code I copied over from @AloysAugustin fork and will start my pull request today. I might do it wrong, so don't hesitate to let me know. I plan to commit the code changes and then if all good I will propose some help document updates. PR kicked off:\nAdd support for Scalr webhook signature verification (new Match Rule) #200 #209\n. Hi @adnanh do you think my pull request (210) might make it into the next release? Also I would be interested in your thoughts on @dcj log file one\nThanks\nHass. That's great, thanks!. Hi @adnanh I was looking at the Wiki to determine which ones to update and my thoughts are that I would add a section in Hook Examples with example and extra information and also a section in Hook rules \nLet me know if this makes sense and I should have the PR done today. thanks!\n. PR 218 submitted for document updates. Hi @moorereason @adnanh did you get a chance to look at the help document PR I did? Also do we have an idea when 2.6.9 might be released (with maybe my Scalr bit...)?\nThank you for your help\nregards\nNagging Hass!. Thanks and yes I couldn't work out how to do that but will have a go now, I will also try and fix the commit names as described\nThanks for the quick feedback. Closing Pull Request - replace by new pull request 210. Hi @adnanh hope you're having a good festive break. When you get a chance please don't hesitate to let me know if you have any thoughts on this.\nThanks\nHass. Thanks @adnanh I'll work on proposed document updates over the next couple of days. hi @psmith3 you need to to use the \"pass-environment-to-command\" to use as environment variables or \"\"pass-arguments-to-command\". I'm sure you will get a more detialed response but below might help..\nBelow is an example of using as environment variables. you should see in the hook verbose logs that is grabs them. Then in your script use the normal environment variable e.g. $INTERNAL_IP to call it\n\"id\": \"email\",\n\"execute-command\": \"/webhook/src/email.sh\",\n\"command-working-directory\": \"/webhook/src\",\n\"pass-environment-to-command\":      [\n                            {\n                                    \"envname\": \"INTERNAL_IP\",\n                                    \"source\": \"payload\",\n                                    \"name\": \"data.INTERNAL_IP\"\n\n. Also in the Wiki you can see some examples but maybe not the one above. Just to expand on what I sent. Below is what my JSON payload looks like (what I'm sending over in the webhook call) hence how it looks within the webhook JSON (above) to extract the data.\n`\n\"data\":{\n             \"EXTERNAL_IP\":\"\",\n             \"INTERNAL_IP\":\"172.18.4.38\",\n`\n. So it's really just a scripting issue versus the webhook right? I think you can just use ${}\ncURL \"https://someurl/place/${ENV}/something\"\nHowever I'm a bit of a newbie but I'm sure after a few goes and using a print comment you can test how this translates. This was an error on my side from some reason I added to my string to lunch the webhook service instead of in the JSON!\nWhich now works great!\nI'll close\nHass. Hi @ptflp sorry I've not tested using hot reload in a container so hopefully someone else might comment. \nHowever just out of interest I would have expected you to treat the container as immutable and so only performed this task during container creation at which point I don;t think you need to use the hot reload do you? \n. @fbartels just a thought, could you do a dedicated health-check hook for this purpose?. We use DNS polling on port 9000 so don;t have this issue but I think by doing a custom health hook you can also drive a custom response to the health checker outside of just a HTTP200. Hi @moorereason, quick sense check, I think what you're saying is we would probably change this behavior for all three signature based match rules and not just the new scalr one as all three would cause an error especially on the OR check?\nSo report this more as a validation fail versus a error? I'll see have a go over the weekend to see how it looks byt my update will be more of a local hack.\n@AloysAugustin @adnanh This make sense to me, what's your thoughts?\nThanks\nHass. Just to confirm; Changing line 149:\nFROM:\nreturn false, &SignatureError{providedSignature}\nTO:\nreturn false, nil\nThis has resolved the issue using OR matching\nHowever I now have a situation that even if the match fails it's reporting back a HTTP 200 instead of HTTP 5xx. I guess this is expected given I have removed the error and I guess this is what @AloysAugustin was getting at.\nPlease let me know your thoughts\nThanks\nHass\n. Ah, I didn't even spot that in the options until you stated it;\nand it works perfectly;\nI'll do a pull request now to resolve it for the Scalr signature and then I guess other updates can be done in the future on others if desired. I just want to make sure I don;t miss the next official release 2.6.9;;. Pull request created #236. Sounds good @moorereason this would obviously be well beyond my copying and pasting skills but might be good.\nFYI, I built a hook with the \"nil\" setting  from my development branch so this has got us out of the woods for now\nThanks\nHass. Closing as I missed updating my fork first so have conflicts. @adnanh @moorereason hi Guys, I can see the Dev branch is getting updated. Is there any chance I can get this one in? I know there was talking about trying to fix this problem for all signature type events but that would be well beyond my skill and this fix will resolve the issue for signatures from the scalr tool we're using?\nJust checking on your thoughts?\nThanks\nhass. Hi @syabro This may or may not help but below I'll give you an example of what I do:\nBelow is an example of the payload that I send TO the Webhook server:\n\n\"eventName\": \"HostUp\",\n    \"eventId\": \"0535a30b-7fee-4856-a06e-1ac2b6a9f88b\",\n    \"timestamp\": \"Tue 06 Mar 2018 17:02:22 UTC\",\n    \"configurationId\": \"9f70ff68-a9a1-4a59-8ece-7b19a55837ad\",\n    \"data\": {\n        \"SCALR_EXTERNAL_IP\": \"\",\n        \"SCALR_INTERNAL_IP\": \"172.16.4.38\",\n        \"SCALR_INSTANCE_INDEX\": \"1\",\n        \"SCALR_INSTANCE_FARM_INDEX\": \"001\",\n        \"SCALR_SERVER_HOSTNAME\": \"hostnameofserver\",\n\nNow below is what he top of my hooks file looks like:\n\n[\n  {\n    \"id\": \"ping\",\n    \"execute-command\": \"/webhook/src/ping.sh\",\n    \"trigger-rule-mismatch-http-response-code\": 500,\n    \"include-command-output-in-response\": true,\n    \"include-command-output-in-response-on-error\": true,\n    \"command-working-directory\": \"/webhook/src\",\n    \"pass-environment-to-command\": [\n                {\n                        \"envname\": \"SCALR_INTERNAL_IP\",\n                        \"source\": \"payload\",\n                        \"name\": \"data.SCALR_INTERNAL_IP\"\n                },\n                {\n                        \"envname\": \"SCALR_SERVER_HOSTNAME\",\n                        \"source\": \"payload\",\n                        \"name\": \"data.SCALR_SERVER_HOSTNAME\"\n                }\n    ],\n\nAnd then below is what my shell script looks in this example\n\n!/bin/sh\necho \"$SCALR_SERVER_HOSTNAME\"\nping -c 4 $SCALR_SERVER_HOSTNAME.mydomain.com\n\n. Hi @Godlikehobbit I think while you're waiting for someone to confirm you can use the following to get the latest?\ngo get github.com/adnanh/webhook\nAt least I think that his how I was doing it when not using the compiled file\nHass\n. @ichauhan91 we're using it in production and it's working great but we're not hitting it with large concurrent loading. \nHowever that said from a \"concurrent\" processing perspective it could just be scaled horizontally if you design it right. ours don't care about any other one, we just grab the logs . ",
    "rodislav": "I would like to mention the fact that: in systemd service some environment variables will not be exposed, a solution would be this one: https://coreos.com/os/docs/latest/using-environment-variables-in-systemd-units.html\n. Hello @hassanbabaie , in my particular case I was using webhooks to run docker-compose commands, which is starting containers and those are using environment variables, so for the containers, the variables exposed in /etc/profile were not working. In order to solve this (for now) I've extracted the needed vars to a file and mentioned that in the systemd service\n```bash\n[Unit]\nDescription=webhook\n[Service]\nWorkingDirectory=/home/rodislav\nExecStart=webhook -hooks /home/rodislav/webhooks.json -verbose -hotreload\nEnvironmentFile=-/etc/webhook.environment\n[Install]\nWantedBy=multi-user.target\n```. ",
    "jamielennox": "I see that I can do that but by evaulating the secret in the script i miss out on being able to use the existing filters such as payload-hash-sha1 as described: https://github.com/adnanh/webhook/wiki/Hook-Examples#incoming-github-webhook or any other form of authenticated webhook.\nMy reasoning to use webhook rather than simply execute shell scripts out of apache or something is because it can generically handle this sort of validation for me.\n. That would absolutely work for me.. ",
    "col-panic": "I am proposing an extension like \n\"pass-file-to-command\":\n    [\n      {\n        \"source\": \"payload\",\n        \"name\": \"zippedBinary\",\n        \"filename\": \"binaryFile.zip\",\n        \"base64decode\": true\n      }\n    ]\nthe rules for selection are the same like pass-arguments-to-command or pass-environment-to-command but the corresponding data is stored in a file called filename in location relative to command-working-directory. The base64decode option, if set to true, will transparently base64decode the respective data before storing it into filename.. I am working on a patch to support this feature. Please see https://github.com/col-panic/webhook/wiki for a documentation. A pull request will be made in due time.. I think the streaming solution would be good for a separate implementation. On using webhook for my purpose I found that I like to transfer multiple files in one webhook call, which would not be feasible with a stream, but it is by encapsulating multiple of those as base64 data within a json object. Currently i test with files about 150mb and it works without problems. \nUsing streaming one could transfer just a single stream, as AFAIK it would \"eat up\" all of the body containments. But for a separate patch I think it would be great!. Could you please have a review on my pull request? Thanks. Why? hook is a subdirectory of the given repository, but instead of referencing the own co-located code, it refers to the one stored in the github page (via the import that i am trying to correct)! I don't see the reason to reference to the github version on build?!. Please see the pull request https://github.com/adnanh/webhook/pull/169. Thanks a lot for your explanation! I think I got it now - https://splice.com/blog/contributing-open-source-git-repositories-go/ is a good explanation of the problem! \nThe problem, however, is that in case I make a feature add and a PR, the code in my forked repository will not compile (to a third party not configuring the remote) until the PR was accepted by the importing project. Is this accepted as fact by the convention?\nConsider https://github.com/col-panic/webhook/commit/34c4b1c16686ec07beef6671684cc7f012a835a1 - if you would checkout my forked repository, and I would not have changed the import to \"./hook\" then the code would not compile until you would also manually set the resp. remote to \"override\" the import of \"github.com/adnanh/webhook/hook\". Is this accepted as-is by the go community? google says there is quite some discussion on this ... e.g. https://groups.google.com/forum/#!topic/golang-nuts/AL8UyjGl948\n. While we can be sure that the file will be here on starting our hook, we can't be sure about the file still existing after the hook was run ( the script could remove the file by itself). So naming the option KeepFileOnExit would suggest that even though the file was already deleted, we will still be able to keep it. I think that this is misleading - due to this I named it DeleteOnExit ( while a more descriptive option name would be DeleteOnExitIfExists). \nIf you insist on your naming I can certainly go for it, but I found it more intuitive this way.. Allright, I patched the code accordingly. I also updated the test file, yet I can't figure out why I still make messages like \n./webhook_test.go:44: not enough arguments in call to handleHook\n    have (*\"github.com/adnanh/webhook/hook\".Hook, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\n    want (*\"_/Users/marco/Development/goclipse-latest/git/webhook/hook\".Hook, string, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\n./webhook_test.go:74: not enough arguments in call to handleHook\n    have (*\"github.com/adnanh/webhook/hook\".Hook, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\n    want (*\"_/Users/marco/Development/goclipse-latest/git/webhook/hook\".Hook, string, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\n./webhook_test.go:98: not enough arguments in call to handleHook\n    have (*\"github.com/adnanh/webhook/hook\".Hook, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\n    want (*\"_/Users/marco/Development/goclipse-latest/git/webhook/hook\".Hook, string, *map[string]interface {}, *map[string]interface {}, *map[string]interface {}, *[]byte)\nFAIL    _/Users/marco/Development/goclipse-latest/git/webhook [build failed]\n--- FAIL: TestCheckPayloadSignature256 (0.00s)\n    hook_test.go:53: failed to check payload signature {\"{\\\"a\\\": \\\"z\\\"}\", \"secret\", \"sha256f417af3a21bd70379b5796d5f013915e7029f62c580fb0f500f59a35a6f04c89\"}:\n        expected {mac:\"f417af3a21bd70379b5796d5f013915e7029f62c580fb0f500f59a35a6f04c89\", ok:true},\n        got {mac:\"f417af3a21bd70379b5796d5f013915e7029f62c580fb0f500f59a35a6f04c89\", ok:false}\n    hook_test.go:57: error message should not disclose expected mac: invalid payload signature sha256f417af3a21bd70379b5796d5f013915e7029f62c580fb0f500f59a35a6f04c89\nFAIL\non make test. done!. Ok, I changed the base, after you accepted the PR I plan to integrate the documentation from my page into your wiki in an updated version!. Docu added :). Sweeet! :). ",
    "CarlosEvo": "@hassanbabaie I did used jornalctl -u webhook to debug. Unfortunately my hook requires POST data, so I can't really debug it with a browser (Zapier doesn't help either). It is more of a python script problem. Nonetheless @adnanh helped me a lot with the -verbose option.\nThank you both, really appreciate it.. I am having trouble setting up this as well. I am not that familiar with this concept (although I do know how to do shasum256 in terminal). What is the correct way of setting this up? Should I put the secret in the hooks.json and send the hash of the secrete through the header?\nI keep getting\nError occurred while evaluating hook rules.\nThanks \u2764\ufe0f. @adnanh Wow, appreciate for the information!. ",
    "eoekun": "I change hooks.json like this:\nconsole\n$ cat hooks.json \n[\n  {\n    \"id\": \"redeploy-webhook\",\n    \"execute-command\": \"./redeploy.sh\",\n    \"command-working-directory\": \"./\"\n  }\n]. ",
    "kruben95": "Thanks for your time, but sadly nothing helped. Sorry that I didn't ask @almir first, but I only used your documentation because yours is more extensive and didn't realise that this is not the docker repo \ud83d\ude05  . Will try my luck there. I will report back (for completeness) when I have a solution.. Ok. It seems like I have the solution know. I tried my luck by writing the script-file directly via the console and now it works. Before that, the file got included with the volume from my Windows 10 System. There might be differences in the Binaries? Will look further into that problem so that this will not happen again.\nAt the end of this article is a good explanation: http://www.uppmax.uu.se/support/faq/running-jobs-faq/strange-problems-with-text-files---scripts-copied-from-other-computers/. ",
    "stblassitude": "I did manage to work around the non-vendored dependencies by using a trick the Ports system in FreeBSD uses, but it's ugly, and likely to break easily. The FreeBSD change is here: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=222883. ",
    "FaisalDefry": "Hi , thank you for the reply. Yes, i think that's the solution i need for , totally forgot about supervisord because i usually only use that on docker container. Wrapping supervisord in systemd sounds like a good idea, because what i'm trying to do is trying to do with cron earlier is a \"at reboot\" trigger ensure the webhook still running on server reboot.\n\nFrom: Scott Stensland notifications@github.com\nSent: Wednesday, October 11, 2017 3:16 AM\nTo: adnanh/webhook\nCc: FaisalDefry; Author\nSubject: Re: [adnanh/webhook] Running webhook in the background (#181)\nLookup a tool called supervisor which will launch a process (webhook) as well as take care of rotating stdout/stderr log files and relaunching process on box reboot ... http://supervisord.org/\nadditionally you can in turn wrap supervisor to be a systemd started task\nwebhook is a daemon so if launched by cron assure you avoid multiple instances of it attempting to run (they will fight over ports) ... if cron launch fails make sure you are sourcing the necessary environment variables neede by your webhook\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/adnanh/webhook/issues/181#issuecomment-335670085, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AMeBpbN2E0SysLizJQDhqPHbaOA3f9Gaks5srDMTgaJpZM4P0zXj.\n. ",
    "fredguy": "Also tried an alternative : \n[\n  {\n    \"id\": \"play\",\n    \"execute-command\": \"/test.sh\",\n    \"command-working-directory\": \"/\",\n        \"parse-parameters-as-json\":\n[\n      {\n        \"source\": \"payload\",\n        \"name\": \"event\"\n      }\n],\n\"trigger-rule\":\n    {\n      \"match\":\n      {\n        \"type\": \"value\",\n        \"value\": \"media.play\",\n        \"parameter\":\n        {\n          \"source\": \"payload\",\n          \"name\": \"event\"\n        }\n      }\n    }\n}\n]\nbut htat gets me:\n\n[webhook] 2017/10/16 14:10:59 version 2.6.5 starting\n[webhook] 2017/10/16 14:10:59 setting up os signal watcher\n[webhook] 2017/10/16 14:10:59 attempting to load hooks from play.json\n[webhook] 2017/10/16 14:10:59 os signal watcher ready\n[webhook] 2017/10/16 14:10:59 found 1 hook(s) in file\n[webhook] 2017/10/16 14:10:59   loaded: play\n[webhook] 2017/10/16 14:10:59 serving hooks on http://192.168.0.150:9000/hooks/{id}\n[webhook] 2017/10/16 14:11:23 incoming HTTP request from 192.168.0.110:46880\n[webhook] 2017/10/16 14:11:23 play got matched\n[webhook] 2017/10/16 14:11:23 error parsing form payload invalid URL escape \"%)\\u007f\"\n[webhook] 2017/10/16 14:11:23 error parsing JSON parameters: couldn't retrieve argument for {Source:payload Name:event EnvName:}\n[webhook] 2017/10/16 14:11:23 play got matched, but didn't get triggered because the trigger rules were not satisfied\n[webhook] 2017/10/16 14:11:23 200 | 1.161037ms | 192.168.0.150:9000 | POST /hooks/play\n. Hi Again. \nthe post i'm dealing with seems to be a multipart with Json payload and then come a jpeg. \nWould that be a showstopper for adnanh/webhook ? Is there a way to process the Payload only part ? \n\nThis is actually a dump of the post received : \n```\nContent-Disposition: form-data; name=\"payload\"\nContent-Type: application/json\n{\"event\":\"media.play\",\"user\":true,\"owner\":true}\n------------------------------33d2ecba7af4\nContent-Disposition: form-data; name=\"thumb\"; filename=\"thumb.jpg\"\nContent-Type: image/jpeg\n\u00ff\u00d8\u00ff\u00e0\u0010JFIF\u0001\u0001\u0001HH\u00ff\u00dbC\b\u0006\u0006\u0007\u0006\u0005\b\u0007\u0007\u0007     \b\n\f\u0014\n\f\u000b\u000b\f\u0019\u0012\u0013\u000f\u0014\u001d\u001a\u001f\u001e\u001d\u001a\u001c\u001c $.' \",#\u001c\u001c(7),01444\u001f'9=82<.342\u00ff\u00dbC\u0001         \f\u000b\f\u0018\n\u00182!\u001c!22222222222222222222222222222222222222222222222222\u00ff\u00c0\u0011\bq\u00c8\u0001\u0011\u0011\u0001\u0011\u0001\u00ff\u00c4\u001c\u0001\u0001\u0001\u0001\u0001\u0004\u0006\u0005\u0007\b\u00ff\u00c47\u0010\u0001\u0001  \u0006\u0005\u0004\u0001\u0004\u0011\u0005!\u0012\u0006\u0013\u00151RS\u0091\u0092\u00a1\u0014\"3AQq\u00072BCa#$brs\u0081\u00d1\u00ff\u00c4\u0014\u0001\u0001\u00ff\u00c4\u0014\u0011\u0001\u00ff\u00da\f\u0001\u0011\u0011?\u00fc\u00fe\u000fUi0\u007f\u00b9/-\u00d1\u0014\u00fb\u00c9\u00e8\u008a}\u00e4\u00bdtE>\u00f2@C\u00d2a\u00deH\n=2\u000b\u00f7$\u0004\u00c7L\u00a4\u00fa\u00eaH\u000b=\u0097{?\u0004\u0001i4\u009f\u00eeO\u00d0\f\u0091\u00d1\u00a95\u00f1g\u00e8\u0001\u00e8\u00b4\u0092\u00f8\u00b3\u00f4\u009d\u0011K\u00bc\u009f \u0013\u00d0\u00f4\u00bb\u00d9\u00fa\u00e8z]\u00ec\u00fd\u0095\u00a3R\u007f\u00bb?\u0004\u0004\u00f4-\u001e\u00f6~\b\u0007B\u00d1\u00efg\u00e0\u0080\u0095\u00a2Q\u00ef\u00a7\u00e0\u0080\u00cfG\u0093\u00d6\u00f5\u0016\u00f5\u00ea'\u00f6@e\u0097&m\u00e2\u00b3\u00ed\u0015|\u0010\u001a\u00d3\u00d0\u00ad\u00e3\u00d5Z\u00a7 \u0018\u00e5\u00a3Q]Ug\u00e8\u009e\u008bJr\u00c3\u00ab?\u0004\u0007]c\u00f8mgsmJ\u00a5K\u00db\u0088\u00ceqM\u00a4\u00a3\u00b0\u0018\u00ae\u00ff\u000f\u00acm\u00e6\u00e3\u001b\u00db\u0087\u008f\u00aa\u0088\u001e\u00078\u0080\u0080YT@O\u001ar\u0098\u0014\u0094r\u0080\u00c3,\u00c4\u000b)e\u0001xK;\u0001\u0096/ZO1\u00e4    \u00c8\f\u00819\u00d9\u0001\u00c4\u008f2[\u00d6\u00c4\u00c0\u00da\u00afp\u0094q\u0090<\u00f7W\u00deRr\u00f9 =-\u0016\u00d5\u00dd\u00deA?\u00c9\u00c4\u00b2\u0007\u00d4mi%\u0018\u00a4\u00ba\u0090\u001e>\u00a7\u00f1\u00a5\u00f7\u00e5;\u0081e\u0090,\u0004\u0081e\u0090-\u00c4\u0005'\u00b8\u0018\u00e2\u00d2\u00d8\u000b&\u00d3/9\u00b0\u0013\u0019q %u\u0081 \u0013\u0090\u0019\u001b\u00d8\f\n------------------------------33d2ecba7af4--\n```. I wish i could. Sadly the payload is originating from Plex media server, and this is pretty much locked down. I request from their side that they enable a Json payload only option... but this may take forever. :(. I understand. \nI was wondering though. would there be a way to apply a regex filter on the whole post regardless of this being the payload or anything else. That way i could trigger the actin based on the presence of a specific string. ? . Hi Just checking if the latest version allowed support of multi-part payload - or if there is any hope to address this in any sort of future ? . ",
    "mattwwarren": "Sorry, I should have been more clear in point 2. entire-payload works for my case but the issue remains in how to pass that in a command. I think I can use curl https://jenkins/jenkins/ but then I have to add part of the URI as constructed by Bitbucket (e.g. job/my-tests/build)\nWhat are your thoughts on allowing regex matching in ids? I understand that all things take time but I am willing to learn/help to get up to speed on go, which is increasing in use at $WORK. I was thinking curl was the easiest way to do the passthrough. But that still doesn't solve the problem of bitbucket requesting https://webhook/jenkins/job/my-tests/build\nI cannot seem to create a rule with:\n\"id\": \"jenkins/job/my-tests/build\",\nAnd a rule like:\n\"id\": \"jenkins\",\nwould not match the request. Is this right?. ",
    "Mantwon": "include-command-output-in-response. ",
    "dcj": "My 2 cents would be to restrict this feature only the entire-payload.\nSmaller things could be passed in as args or env vars.\nIf not, then I would vote for your option 3, encode it as JSON. @hassanbabaie I am not sure I understand what you are asking... The output I am proposing to write to a file is the output of webhook itself, which provides info about what hooks are called and details of what happened then.  I currently feel individual/specific hooks should take care of their own logging, if any.  If you run two instances of webhook on the same server (e.g. on different ports), then no, I am not proposing to combine their outputs.  IMHO each of these instances should write to their own log file.\nA more comprehensive logging feature might be to log to some sort of (networked) logging framework, syslog, logstash, etc.  but I am not proposing to implement that sort of feature....\n. The problem is that I am not receiving the payload AT ALL to my script.  There is something about this payload from AWS SNS that is causing problems with webhook, OR, I am doing something wrong.\nGiven that I successfully wrote a trivially simple hook script that receives the entire payload from Jira, which works fine, I am thinking that the problem is not me, there is something about these payloads that is causing a problem for webhook..... OK, I looked into this further today.\nI see in webhooks.go where the body is parsed according to the Content-Type header, but I do not see how a hook can specify that the unparsed body should be passed to the underlying script.\nAFAICT, entire-payload only provides a parsed payload to the underlying script.\nI have established that if I override the Content-Type header and force a JSON decode of the body received from AWS SNS as JSON, everything works normally.  Your proposal to configure this override behavior via a incoming-payload-content-type hook flag seems viable, and I am attempting to do that, as a first-time golang task.... ",
    "KevSex": "Would be good to see this updated in the documentation as I spent ages wondering why AWS SNS alerts weren't working and happened to stumble upon this new hook flag.\nWorks a treat! Cheers! . ",
    "feketegy": "Crap, I totally overlooked that!. ",
    "simbo1905": "This just bit me.  Using webhook version 2.6.9 I misconfigured a payload-hash-sha1 match with \"value\" not \"secret\" such as: \n{\n        \"match\":\n        {\n          \"type\": \"payload-hash-sha1\",\n          \"value\": \"{{ getenv \"WEBHOOK_SECRET\" | js }}\", // <-- WRONG! \"secret\" not \"value\"\n          \"parameter\":\n          {\n            \"source\": \"header\",\n            \"name\": \"X-Hub-Signature\"\n          }\n        }\n}\nThe mistake isn't validated at load time. If you don't pass the X-Hub-Signature you get the correct \"rules not matched\" 200 response. If you do pass the header you get a 500 response code and response body \"Error occurred while evaluating hook rules.\" What is logged is:\n[webhook] 2019/01/02 21:00:25 [0748c1] error evaluating hook: invalid payload signature 0dcb8309afa36a67d6565a2ab972883a06a642ef\nIf the match rule was validated at load time then folks wouldn't run into the 500 error. . ",
    "falzm": "Thank you \ud83d\udc4d. ",
    "psmith3": "@adnanh , thank you much for the detailed reply! This is great info and clarifies many of the questions that I came to. I did make much progress after opening the ticket and I closed it after I got it working, mostly. Your examples fill in the gaps and I will apply them shortly. \nI did have a question about how I ended up handing multiple scenarios for the Playing vs Stopped. Rather than using pass-environment-to-command, I ended up creating 2 ids with the same name \"sonos\" and that seemed to work. However, I am wondering if that would cause an issue of some kind. I probably should rewrite to pass-environment-to-command like your last example. Here is the code that I had made up to the point that I closed the ticket. Again, thanks much for the detailed explanations. \n[{\n        \"id\": \"sonos\",\n        \"execute-command\": \"/etc/webhook/kitchen_music_on.sh\",\n        \"response-message\": \"Ok ...\",\n        \"trigger-rule\": {\n            \"and\": [{\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"Kitchen\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.roomName\"\n                        }\n                    }\n                },\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"PLAYING\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.state.playbackState\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    {\n        \"id\": \"sonos\",\n        \"execute-command\": \"/etc/webhook/kitchen_music_off.sh\",\n        \"response-message\": \"Ok ...\",\n        \"trigger-rule\": {\n            \"and\": [{\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"Kitchen\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.roomName\"\n                        }\n                    }\n                },\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"PAUSED_PLAYBACK\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.state.playbackState\"\n                        }\n                    }\n                }\n            ]\n        }\n    }\n]. Will do. Thank you!. Digging further into converting this to send  pass the environment to the CURL command, can you explain further how I pass the variables? Right now I have 2 different scripts on my server that get run and execute the CURL commands; kitchen_music_on.sh and kitchen_music_off.sh. I don't guess there is a way to run the CURL directly from Webhook server is there? Like I mentioned before, my scripts either issue a CURL with the ON name or another with the OFF. The script looks like this. \n```\n!/bin/sh\ncurl \"https://maker.ifttt.com/trigger/Music_On/with/key/secret\"\n```\nand\n```\n!/bin/sh\ncurl \"https://maker.ifttt.com/trigger/Music_Off/with/key/secret\"\n```\nBelow is the hooks.json that I have working at the moment using the forked image of palmer/webhook:docker-1.10-git and like you say, it is not the latest.\n[{\n        \"id\": \"sonos\",\n        \"execute-command\": \"/etc/webhook/kitchen_music_on.sh\",\n        \"response-message\": \"Kitchen Music On ...\",\n        \"trigger-rule\": {\n            \"and\": [{\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"Kitchen\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.roomName\"\n                        }\n                    }\n                },\n                {\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"PLAYING\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.state.playbackState\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    {\n        \"id\": \"sonos\",\n        \"execute-command\": \"/etc/webhook/kitchen_music_off.sh\",\n        \"response-message\": \"Kitchen Music Paused or Stopped ...\",\n        \"trigger-rule\": {\n            \"and\": [{\n                    \"match\": {\n                        \"type\": \"value\",\n                        \"value\": \"Kitchen\",\n                        \"parameter\": {\n                            \"source\": \"payload\",\n                            \"name\": \"data.roomName\"\n                        }\n                    }\n                },\n                {\n                    \"or\": [{\n                            \"match\": {\n                                \"type\": \"value\",\n                                \"value\": \"PAUSED_PLAYBACK\",\n                                \"parameter\": {\n                                    \"source\": \"payload\",\n                                    \"name\": \"data.state.playbackState\"\n                                }\n                            }\n                        },\n                        {\n                            \"match\": {\n                                \"type\": \"value\",\n                                \"value\": \"STOPPED\",\n                                \"parameter\": {\n                                    \"source\": \"payload\",\n                                    \"name\": \"data.state.playbackState\"\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n]. Thanks. Making more sense. I am hoping someone can show me an example of passing the payload into a CURL script and inserting into the variables into the URL that is sent by the script. . Thanks much for the reply and explanation. I will give this a try. . ",
    "MichelDiz": "Seems working but got this\nsh\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] incoming HTTP request from 192.168.99.1:50902\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] redeploy-webhook got matched\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] redeploy-webhook hook triggered successfully\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 200 | 154.473\u00b5s | 192.168.99.100:9000 | GET /hooks/redeploy-webhook\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] executing /var/scripts/redeploy.sh (/var/scripts/redeploy.sh) with arguments [\"/var/scripts/redeploy.sh\"] and environment [] using /var/scripts as cwd\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] command output:\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] error occurred: fork/exec /var/scripts/redeploy.sh: no such file or directory\n05/01/2018 10:45:58[webhook] 2018/01/05 13:45:58 [b98734] finished handling redeploy-webhook. I was using #!/bin/bash instead of #!/bin/sh in my script.. I thank you for the tool! I've never used Webhook. And now I can see how it makes life so much easier xD. ",
    "ChrisHardie": "FWIW I encountered a similar error and it ended up requiring removing the outdated version of Go that came with Ubuntu's package management and installing the latest stable release.. What do you think about a generic approach within the rule logic to have the comparison value obtained from the return result of an external script? \nThat would allow us to address this case - I could write a simple cron job that fetches the latest BitBucket IP ranges and puts them in a local text file, and then just cat that file in the rule flow - but could also be useful for folks who want to dynamically handle rules based on other external inputs.. ",
    "shining01": "Thanks for your answer. No i have installed go 1.9.2\nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# go install\nwebhook.go:16:2: cannot find package \"github.com/adnanh/webhook/hook\" in any of:\n        /usr/local/go/src/github.com/adnanh/webhook/hook (from $GOROOT)\n        /opt/go/src/github.com/adnanh/webhook/hook (from $GOPATH)\nwebhook.go:18:2: cannot find package \"github.com/codegangsta/negroni\" in any of:\n        /usr/local/go/src/github.com/codegangsta/negroni (from $GOROOT)\n        /opt/go/src/github.com/codegangsta/negroni (from $GOPATH)\nwebhook.go:19:2: cannot find package \"github.com/gorilla/mux\" in any of:\n        /usr/local/go/src/github.com/gorilla/mux (from $GOROOT)\n        /opt/go/src/github.com/gorilla/mux (from $GOPATH)\nwebhook.go:20:2: cannot find package \"github.com/satori/go.uuid\" in any of:\n        /usr/local/go/src/github.com/satori/go.uuid (from $GOROOT)\n        /opt/go/src/github.com/satori/go.uuid (from $GOPATH)\nwebhook.go:22:2: cannot find package \"gopkg.in/fsnotify.v1\" in any of:\n        /usr/local/go/src/gopkg.in/fsnotify.v1 (from $GOROOT)\n        /opt/go/src/gopkg.in/fsnotify.v1 (from $GOPATH)\nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# go env\nGOARCH=\"arm\"\nGOBIN=\"\"\nGOEXE=\"\"\nGOHOSTARCH=\"arm\"\nGOHOSTOS=\"linux\"\nGOOS=\"linux\"\nGOPATH=\"/opt/go\"\nGORACE=\"\"\nGOROOT=\"/usr/local/go\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_arm\"\nGCCGO=\"gccgo\"\nGOARM=\"6\"\nCC=\"gcc\"\nGOGCCFLAGS=\"-fPIC -marm -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build798987959=/tmp/go-build -gno-record-gcc-switches\"\nCXX=\"g++\"\nCGO_ENABLED=\"1\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\nPKG_CONFIG=\"pkg-config\". How can i run webhook with which command?\ni have tried: \nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# webhook.go -hooks /opt/webhook/hooks.json -verbose\nbash: webhook.go: Kommando nicht gefunden.\nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# go webhook.go -hooks /opt/webhook/hooks.json -verbose\ngo: unknown subcommand \"webhook.go\"\nRun 'go help' for usage.\nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# go webhook -hooks /opt/webhook/hooks.json -verbose\ngo: unknown subcommand \"webhook\"\nRun 'go help' for usage.\nroot@raspberrypi:/opt/go/packages/src/github.com/adnanh/webhook# go run webhook -hooks /opt/webhook/hooks.json -verbose\ngo run: no go files listed. GOPATH where wrong. Must be point to the folder where webhook packages are. ",
    "ptflp": "@adnanh, hooks.json updates from host machine when webhook is triggered. @sh33pz0r, Thank you! folder bind mount, instead file, solved it!. ",
    "sh33pz0r": "@ptflp - how do you mount your file into the guest container? make sure to mount folder and not a specific file,\nmy tests with the latest version of webhook work as expected,\nthat's from docker logs:\n[webhook] 2018/03/01 13:32:01 hooks file hooks.yaml overwritten\n[webhook] 2018/03/01 13:32:01 attempting to reload hooks from hooks.yaml\n[webhook] 2018/03/01 13:32:01 found 2 hook(s) in file\n[webhook] 2018/03/01 13:32:01   loaded: import\n[webhook] 2018/03/01 13:32:01   loaded: export\nmy compose file:\nvolumes:\n      - \"/root/blabla/hooks:/hooks\"\n    working_dir: /hooks\n    command: \"webhook -verbose -hooks=hooks.yaml -hotreload\". ",
    "tress777": "Still the same result, but it's likely that I'm making a boneheaded mistake. Here is my hooks.json, located in user home directory.\n[\n  {\n    \"id\": \"redeploy-webhook\",\n    \"execute-command\": \"var/scripts/redeploy.sh\",\n    \"command-working-directory\": \"/var/webhook\",\n    \"response-message\": \"Executing redeploy script\"\n  }\n]\nThe bash script is located at: /var/scripts/redeploy.sh\nThe command I run is:\n~/go/bin/webhook -hooks ~/hooks.json -verbose. My apologies. I just realized what you meant by the wrong id. I was just using uri:9000/webhook instead of uri:9000/redeploy-webhook. I told you it was probably something boneheaded. Thank you very much!. ",
    "macau23": "This hit me again today. Is there a goreleaser config file in git somewhere, so I can submit a patch to add\n-name webhook.exe. @moorereason the escaping is working for me now too. I must have made a mistake, apologies.. Close?.\n",
    "AloysAugustin": "Hi @hassanbabaie , good catch.\nI think the problem is in the implementation of the OrRule, and exists for all rules, not just the Scalr signature check.\nIn hook.go, line 703, during the evaluation of the OrRule, if an error is returned when evaluating a rule, then the next rules are not evaluated. Since most rules return a non-nil error when the rule doesn't match, the evaluation will stop at the first failed rule. This goes somewhat against the point of an Or rule... :-)\nI think we should just remove lines 703-705 from hook.go.\nThe AndRule evaluation function does the same thing, and it can also be a problem there (although less frequently). For instance a Not rule can return true with a non-nil error. The error will cause the evaluation of the And rule to fail, even though it should not. The root of the issue is arguably in the Not rule here though. \nFor this one I'm not sure what the best solution is, we could modify the NotRule to not return an error when its logical result is true, or we could also remove the err != nil check from the AndRule evaluation.\n@adnanh what are your thoughts on this?. ",
    "wranitzky": "Dear Adnan,\nThank you for your reply. Unfortunately we have already moved towards\nanother solution, but yes being able to pass the raw request paylout would\nhave been sufficient as far as I remember!\nBest wishes,\nDaniel\nOn Thu, Apr 12, 2018 at 11:41 AM, Adnan Hajdarevi\u0107 <notifications@github.com\n\nwrote:\nHey Daniel, thanks for writing up. The reason why only JSON (and formdata)\nseems to be supported is that I never needed to ingest such payload.\nAdding XML right now would require a bit of thought how to fit it in\nproperly. (i.e. using xpath for referencing values, etc...)\nWould adding support to webhook to pass the raw request payload without\nattempting to parse it help you in any way? But then again, what benefits\nwould webhook provide to you in that case :-(\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/adnanh/webhook/issues/238#issuecomment-380742425, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AcgmezXjBeDgnzzGaOsebHbeS3YIxqihks5tnyFSgaJpZM4SYuzh\n.\n. \n",
    "sull": "I would be interested in XML support but in mean time I can transform XML to JSON as needed.. ",
    "syabro": "@moorereason could you give a clue how to do it? I've tried to use \"name\": \"--param={{ somevar }}\" but I don't understand how to set somevar from url. ",
    "asdfkaba": "Got it:\n[\n  {\n    \"id\": \"build\",\n    \"execute-command\": \"echo\",\n    \"command-working-directory\": \"/\",\n    \"pass-parameters-as-json\":\n    [\n      {\n         \"source\": \"payload\",\n         \"name\": \"payload\"\n      }\n    ],\n    \"pass-arguments-to-command\":\n    [\n      {\n        \"source\": \"payload\",\n        \"name\": \"payload.id\"\n      }\n    ] \n  }\n]. ",
    "Godlikehobbit": "Yeah I already went ahead and fetched the latest version myself, just figured I'd open an issue specifically as the prepackaged version had the bug. Once I switched to 2.6.8 the same hooks.json file worked perfectly. ",
    "lewisst": "Patch\n```\ndiff --git a/webhook.go b/webhook.go\nindex 71fdc6b..71aa979 100644\n--- a/webhook.go\n+++ b/webhook.go\n@@ -20,6 +20,7 @@ import (\n    \"github.com/satori/go.uuid\"\nfsnotify \"gopkg.in/fsnotify.v1\"\n\n\n\"crypto/tls\"\n )\n\nconst (\n@@ -191,7 +192,24 @@ func main() {\nif *secure {\n    log.Printf(\"serving hooks on https://%s:%d%s\", *ip, *port, hooksURL)\n\n\nlog.Fatal(http.ListenAndServeTLS(fmt.Sprintf(\"%s:%d\", ip, port), cert, key, n))\ncfg := &tls.Config{\nMinVersion:               tls.VersionTLS12,\nCurvePreferences:         []tls.CurveID{tls.CurveP521, tls.CurveP384, tls.CurveP256},\nPreferServerCipherSuites: true,\nCipherSuites: []uint16{\ntls.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,\ntls.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,\ntls.TLS_RSA_WITH_AES_256_GCM_SHA384,\ntls.TLS_RSA_WITH_AES_256_CBC_SHA,\n},\n}\nsrv := &http.Server{\nAddr:         fmt.Sprintf(\"%s:%d\", ip, port),\nHandler:      n,\nTLSConfig:    cfg,\nTLSNextProto: make(map[string]func(http.Server, tls.Conn, http.Handler), 0),\n}\nlog.Fatal(srv.ListenAndServeTLS(cert, key))\n    } else {\n        log.Printf(\"serving hooks on http://%s:%d%s\", ip, port, hooksURL)\n        log.Fatal(http.ListenAndServe(fmt.Sprintf(\"%s:%d\", ip, port), n))\n```. \n",
    "byronhallett": "I am trying to do a similar thing - start a server as a backgrounded process, and found that control doesn't return to the webhook until i manually kill the process from another session.\nI thought it might be useful that in addition to the above method, i have tried nohup and disown, both of which detatch the process as expected when running the script standalone, but do not work when run via webhook's exec.\ni.e. if my server binary was titled myserver\nI have tried\nbash\nmyserver &\nbash\nnohup myserver &\nand\nbash\nmyserver &; disown. ",
    "arusland": "@byronhallett Possible solution is to use at\nbash\n echo \"myserver\" | at now\n. ",
    "coreyworrell": "@arusland that does not seem to work either. Thanks for the suggestion though.. ",
    "Gareth-3aaa": "@scottstensland  You are correct, how do I close this connection. Apologies I am not familiar with Linux. Thats great thank you so much. ",
    "chilimatic": "actually I need to fix some more ;D .... I will reopen this when I tested all cases. ",
    "matejzero": "Thanks, I'll have a look.. ",
    "gamefundas": "@wrouesnel any chance the streamed output changes can be merged to this project?. ",
    "m2acgi": "Yes, I want to upload a script from my PC to webhook sever then excute it on webhook server.. ",
    "kirecek": "links in Hook-Definition.md are fixed here: https://github.com/adnanh/webhook/pull/237/files\nMaybe scan other doc pages, however i've found no more broken links.. ",
    "ProPheT777": "ha, this is the worst way, they are already executable and in the path to be called and agnostic of where the script is located. All this logic is done when installing a python package, it's a hack to do that. \nWell I think i'll stay with this alternative venv/bin/python script.py by locating my venv bin folder, I hope there is no side effect. ",
    "aioobe": "Created a PR for this feature: https://github.com/adnanh/webhook/pull/259. There's a PR open here: https://github.com/adnanh/webhook/pull/266\nLast I heard from from Adnan (15 September) was:\n\nNo problem, I'll review the PR and address your comments as soon as I get some free time next week (hopefully Monday) :-). Any chance we could get closure on this? I'm recommend using this tool in https://github.com/aioobe/dead-simple-jekyll-comments but it's annoying to instruct people to patch it / use a fork.. \n",
    "co5dt": "What's the status code on status codes? . ",
    "marcinZglinicki": "Thanks for response! Issue is solved. I was starting the webhook server in wrong location.. ",
    "kutayzorlu": "webhook works\u00a0 \u00a0very nice.. perfekt.\u00a0 Mit freundliche Gr\u00fc\u00dfen. Fh Dipl.-Ing. Kutay Zorlu Software & System Eng. DE: +49 162 825 33 66 me@kutayzorlu.com ********* * Was ist ein Cloud ?Netzwerk? Software ? System ?\u00a0 * Erfahren Sie mehr unter\u2026 http://www.kutayzorlu.com * *********  Diese E-Mail ist allein f\u00fcr den bezeichneten Adressaten bestimmt. Sie kann rechtlich vertrauliche Informationen enthalten. Wenn Sie diese E-Mail irrt\u00fcmlich erhalten haben, informieren Sie bitte unverz\u00fcglich den Absender per E-Mail und l\u00f6schen Sie diese E-Mail von Ihrem Computer, ohne Kopien anzufertigen. Vielen Dank.   This email is for the exclusive use of the addressee. It may contain legally privileged information. If you have received this message in error, please notify the sender by email immediately and delete the message from your computer without making any copies. Thank you.   Bu e-posta, al\u0131c\u0131y\u0131 m\u00fcnhas\u0131ran kullanmak i\u00e7indir. Yasal olarak imtiyazl\u0131 bilgi i\u00e7erebilir. Bu mesaj\u0131 yanl\u0131\u015fl\u0131kla ald\u0131ysan\u0131z, l\u00fctfen g\u00f6ndereni e-postayla hemen bilgilendirin ve mesaj\u0131 kopyalar olmadan bilgisayar\u0131n\u0131zdan silin. Te\u015fekk\u00fcr ederim.   \u042d\u0442\u043e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0430\u0434\u0440\u0435\u0441\u0430\u0442\u043e\u0432. \u041e\u043d \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u044e\u0440\u0438\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0438\u0432\u0438\u043b\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u043e \u043e\u0448\u0438\u0431\u043a\u0435, \u043d\u0435\u043c\u0435\u0434\u043b\u0435\u043d\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044e \u043f\u043e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u0435 \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0431\u0435\u0437 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u043a\u043e\u043f\u0438\u0439. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044e \u0432\u0430\u0441.  ---- On Fr, 06 Jul 2018 11:55:39 +0200\u00a0Adnan Hajdarevi\u0107 notifications@github.com wrote ---- Are you running webhook with the -verbose flag? \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub, or mute the thread.. ",
    "Adnn": "@adnanh Yes, running with -verbose flag. I have some output from webhook (logs of requests it reveives), but even though the programs called by the requests are writing to stdout, nothing shows up in the terminal.\n(out of curiosity, why did you thumbs up the message above? To me, it suspiciously looks like spam). @adnanh My bad, the standard output is correctly shown on screen with -verbose flag. But the standard error is not.\nIs it expected behaviour?. ### SOLVED\nOkay, so I investigated further, and the problem of stderr not showing in the terminal is present with the package distributed through Ubuntu package manager (currently on bionic), but not when building webhook directly with:\ngo get github.com/adnanh/webhook\n(building webhook 2.6.8 at the time of this post)\nSo the workaround is simple, just took me a lot of time to realize that one should not rely on the pre-packaged version of webhook.\nThank you for the very useful project!. ",
    "soufiane8096": "My JSON run without any probleme when I run my webhook. ",
    "foosinn": "No this is not about rate limiting. \nI if did understand the docs correctly a person that manages to capture the webhook call can resend it anytime. Its possible to secure webhooks by using payload-hash-*, but this only verifies the content. If he sends the same content a potential attacker is able to rerun the webhook.\nOr did i miss something?. - The request has just a header field with the current unix time and is with a payload-hash-sha256 singed.\n- Webhook checks if the time is unix timestamp is not older than a user configurable timestamp and verifies the payload-hash.\n- If someone would resend that request the time is not matching anymore, even if the payload-hash is still correct.\nThis is not intended to do rate-limiting, its more like an additional access protection. Since we are using the payload hash the password itself is not submitted in the request.. ",
    "roylez": "Here is a minimal config file. Neither deploy.sh nor ./deploy.sh works. Webook version is 2.6.8, it worked when with earlier versions.\n``` yaml\n\nid: redeploy\n  execute-command: \"./deploy.sh\"\n  command-working-directory: /root/ss\n```. It is not permission issue. I am using absolute path now and it works.\n\nRafael Simon Maia notifications@github.com \u4e8e 2018\u5e7411\u670828\u65e5\u5468\u4e09 06:55\u5199\u9053\uff1a\n\nMost likely you have a permission issue with your file. Try something like\nchmod 517 deploy.sh and see if it works.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/adnanh/webhook/issues/268#issuecomment-442213561, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AADzUUO9hei_Plpme-haBqM3eomvSbmNks5uzabCgaJpZM4WtWon\n.\n. \n",
    "rafaelsimonmaia": "Most likely you have a permission issue with your file. Try something like chmod 517 deploy.sh and see if it works.\n. ",
    "eschizoid": "@adnanh Sorry, I should have researched it better \ud83d\ude1e \n@scottstensland Thanks for your answer, I think I am going to move with the OOTS seems like a cleaner approach; I think you should do the same \ud83d\ude09.... @adnanh I thought about that but could not figure out how to pass the stdout to the response-message in the config file? From my understanding, the template is loaded before the command it's executed. \nPerhaps something like this:\n```\n!/bin/sh\nexport HOOKS=\"$(cat /opt/webhook/hooks.json | grep id)\"\n```\n{\n    \"id\": \"admin\",\n    \"execute-command\": \"/opt/webhook-linux-amd64/admin.sh\",\n    \"command-working-directory\": \"/home/webhook/go/bin\",\n    \"response-message\": \"{{getenv \"HOOKS\"}}\"\n}. found it \ud83d\ude04 \n{\n    \"id\": \"admin\",\n    \"execute-command\": \"/opt/webhook-linux-amd64/admin.sh\",\n    \"include-command-output-in-response\": true\n}. That's what I thought, thanks for the suggestion :). ",
    "marataziat": "I want to make this. What need I to run the webhook from source? I'm trying to do this:\n```\nC:\\Users\\Marat\\Desktop\\webhook-1>go run webhook.go\ncommand-line-arguments\n.\\webhook.go:95:2: undefined: setupSignals\n.\\webhook.go:205:19: multiple-value uuid.NewV4() in single-value context\n```\nHelp me pls :3 Edit: I've understood how to fix the undefined: setupSignals, just run using that:\ngo run webhook.go signals_windows.go\nBut the uuid.NewV4() in single-value context I'm still can't understand. I think I installed the wrong version of the Go or something like that?. I've changed the 266 line to:\nrid := uuid.Must(uuid.NewV4()).String()[:6] and it works!\nI'm running the script using this go run webhook.go signals_windows -verbose\nmaybe we need to change the 205 line in the webhook.go from:\nrid := uuid.NewV4().String()[:6]\nto the:\nrid := uuid.Must(uuid.NewV4()).String()[:6]\n. Which variables can I use to do that? I'm trying to get the &payload but it's null :(\nfmt.Fprintf(w, \"Hook rules were not satisfied: [%s] [%s] [%s] [%s] [%s] [%s]\", &headers, &query, &payload, &body)\nMy response:\nHook rules were not satisfied: [&map[Connection:keep-alive Upgrade-Insecure-Requests:1 User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:63.0) Gecko/20100101 Firefox/63.0 Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language:en-US,en;q=0.5 Accept-Encoding:gzip, deflate Dnt:1]] [&map[]] [&map[]] [&] [%!s(MISSING)] [%!s(MISSING)]. curl localhost:9000/hooks/drawify-redeploy -H \"X-Hub-Signature: s\"\nfmt.Fprintf(w, \"Hook rules were not satisfied. %s\", query)\nHook rules were not satisfied. map[]\nIs it OK that map[] is empty? Which variables can I use to get the payload variables and expected?. I understood:\nmatchedHook.TriggerRule.Match.Value\nAnd then make for loop for checking TriggerRule array. ",
    "abitrolly": "This is the command that I use. How to call GitHub API there to get the 2.6.8 part?\ncurl -L https://github.com/adnanh/webhook/releases/download/2.6.8/webhook-linux-amd64.tar.gz | tar -xzO > /usr/local/bin/webhook. @adnanh took me half of an hour to get this magic spell. :D\nsudo sh -c \"curl -L $(curl -s https://api.github.com/repos/adnanh/webhook/releases/latest \\\n  | grep -o -E \"https://.+?-linux-amd64.tar.gz\") | tar -xzO > /usr/local/bin/webhook \\\n  && chmod +x /usr/local/bin/webhook\". It is also interesting to know what is the value of command-working-directory if it is not set.. Do you want to integrate the answer into docs? It will be useful.\nAlso what is the current directory when the webhook is started on system start?\nAnd what is the right way to make it start automatically under Linux?. ",
    "ruliezz": "I already found the solution:\nSeveral tools rely on standard GitHub webhooks, which include a X-Hub-Signature header to validate the \nwebhook. Gitea sends the secret in the payload JSON itself, which doesn't work for all services.\nIts fix by the follow hook tigger match:\n\"match\":\n          {\n            \"type\": \"value\",\n            \"value\": \"mysecret\",\n            \"parameter\":\n            {\n              \"source\": \"payload\",\n              \"name\": \"secret\"\n            }\nMaybe its good to update the examples with 1 for Gitea?\nRef: https://github.com/go-gitea/gitea/issues/3901. ",
    "nkv16786": "I have a alpine container, inside that i want to install webhook. I am not able to install it directly as there are no apk package. I tried with binary distribution also but no luck. ",
    "bradmccormack": "@nkv16786 look further at what @adnanh posted \nhttps://github.com/almir/docker-webhook/blob/master/Dockerfile#L7\nExtract the commands from the Docker RUN statement to install manually.\ncurl -L --silent -o webhook.tar.gz https://github.com/adnanh/webhook/archive/${WEBHOOK_VERSION}.tar.gz && \\\n            tar -xzf webhook.tar.gz --strip 1 &&  \\\n            go get -d && \\\n            go build -o /usr/local/bin/webhook && \\\n            apk del --purge build-deps && \\\n            rm -rf /var/cache/apk/* && \\\n            rm -rf /go\nDon't forget to set the WEBHOOK_VERSION variable first as per https://github.com/almir/docker-webhook/blob/master/Dockerfile#L5. ",
    "SloanChang": "\nHello, first of all the message field value should have escaped quotes like so \"message\": \"{\\\"id\\\": \\\"1\\\", \\\"data\\\":\\\"this is a test!\\\"}\"\nTo turn this string into usable JSON object, you should add parse parameters as json directive to the hook like so:\njson\n\"parse-parameters-as-json\": [\n  { \"source\": \"payload\", \"name\": \"message\" }\n]\nand it should work.\n\n@adnanh \nI have tried it, but the result is not very good.\nFirst of all, when I don't use the escape character, the data received by webhook is like this\uff1a\n\nWhen I use the escape character, the data received by webhook is like this\uff1a\n\nWebhook configuration is like this\uff1a\n\nBut in both ways, I finally got the same error as follows.\n\n. ",
    "sbrl": "Awesome, thanks! Sometimes you need the [], and sometimes you don't. It can get confusing :P. ",
    "MadDud": "OK. thank you.. ",
    "lukasmrtvy": "Thanks\nWorkaround can be done only if I am not using -urlprefix , right ? (If its even possible)\nOr can I overide -urlprefix in hooks.json ? \nEDIT: AFAIK only something like http://wh/hooks/healthcheck can be done, right? Nothing like http://wh/ <- return html from script and http://wh/hooks/other-hook togheter can not be done, right?. ",
    "msramos": "I'm using 2.5.0 that is provided by Ubuntu 18.04 LTS. ",
    "johnpmitsch": "I'm a similar issue with travis and can't figure it out. I am using webhook version 2.6.9\nMy webhook is this\njson\n[\n  {\n    \"id\": \"deploy\",\n    \"execute-command\": \"/root/foodcomputer-server/deployment.sh\",\n    \"command-working-directory\": \"/root/foodcomputer-server\",\n    \"trigger-rule\":\n    {\n      \"match\":\n      {\n        \"type\": \"value\",\n        \"value\": \"master\",\n        \"parameter\":\n        {\n          \"source\": \"payload\",\n          \"name\": \"branch\"\n        }\n      }\n    }\n  }\n]\nI can trigger it fine using something like this:\ncurl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d \"state=passed&branch=master\" https://myurl.io:9000/hooks/deploy\nI've even debugged travis's webhook using https://requestbin.fullcontact.com/, and it looks like this in the payload, sent as application/x-www-form-urlencoded:\n{\n  \"id\": 100376464,\n  \"number\": \"33\",\n  \"branch\": \"master\",\n  .... lot more info\n}\nI've tried running webhook as both a service and from the command itself. I am using https, I'm running the command like this:\nbash\n/usr/bin/webhook -secure -cert /path/to/cert.pem -key  /path/to/key.pem -verbose -nopanic -hooks /etc/webhook.conf\nevery time the request is from travis, I get\n[webhook] 2019/02/10 21:55:29 [c9a5bb] deploy got matched\n[webhook] 2019/02/10 21:55:29 [c9a5bb] deploy got matched, but didn't get triggered because the trigger rules were not satisfied\nI feel like I'm missing something really obvious or there is a bug. I can open a new issue if its warranted.\nThanks for making this tool!. @adnanh \nI tried this and still can't get a trigger, is it the correct syntax?:\njson\n[\n  {\n    \"id\": \"deploy\",\n    \"execute-command\": \"/root/foodcomputer-server/deployment.sh\",\n    \"command-working-directory\": \"/root/foodcomputer-server\",\n    \"parse-parameters-as-json\": [\n      {\n        \"source\": \"payload\",\n        \"name\": \"payload\"\n      }\n    ],\n    \"trigger-rule\":\n    {\n      \"and\":\n      [\n        {\n          \"match\":\n          {\n            \"type\": \"value\",\n            \"value\": \"passed\",\n            \"parameter\": {\n          \"name\": \"payload.state\"\n        }\n          }\n        },\n        {\n          \"match\":\n          {\n            \"type\": \"value\",\n            \"value\": \"master\",\n            \"parameter\": {\n          \"name\": \"payload.branch\"\n        }\n          }\n        }\n      ]\n    }\n  }\n]. @adnanh thank you so much, that worked! I submitted a PR in case you want to add an example to the docs https://github.com/adnanh/webhook/pull/304. ",
    "igorljubuncic": "Technically yes, it depends how you call snapcraft - it will expect to find the yaml in the current working directory or a snap sub-directory. Otherwise, you might get an error from snapcraft complaining about not finding the file. . Thank you, and sure thing, I'll create this in the contrib repo.\nIgor. Sweet work! Can I also suggest you add a couple of screenshots, too. People love apps with screenshots (and even videos). We've got this page that explains how to maximize exposure and draw users:\nhttps://snapcraft.io/blog/make-your-snap-store-page-pop\nWe'll also feature webhook in a couple of weeks in our social media.. There are some limitations to what you can upload. I would suggest adding a transparent or white channel for padding, but that could end up not looking pretty. Can you share the banner so I can give you maybe a suggestion on how to tweak it?. I'll check with the rest of the team for the best way to get the banners in place. Can you maybe also try narrower mockups, i.e. keep the left and right side motifs (logo and text/byline), and reduce the middle section spanning between them? And you could maybe pad a little more background black/terminal text vertically perhaps?\nAnd as I said, I'll see what we can do to feature full horizontal banners.. It is possible. So I'll talk to our design guys too.. ",
    "neurostream": "@moorereason Wow, it's even documented, as you clarified so lucidly with your example, as simply a command line switch/boolean  https://github.com/adnanh/webhook/blob/master/docs/Webhook-Parameters.md ( How did I go down that rabbit hole? )  Thank you!. ",
    "rcanetta": "solved by replacing /etc/webhook.conf with the content of hooks.json :-)\n. "
}