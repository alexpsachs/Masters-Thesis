{
    "sindresorhus": "That's really why I haven't created a grunt task for this yet. I've had the idea multiple times, but there are some hurdles to overcome I didn't want to deal with.\nThis is an easy task for static sites, but get's a lot harder when we talk about front-end web apps. You could merge all the CSS files, but you'd still not be entirely sure what rules are being used or not, since you can't programmatically detect all scenarios, even with PhantomJS. Eg. some jQuery plugin that injects classes, etc. And that is going to lead to a lot of confused people with a lot of edge case bugs. I might be thinking inside a box right now, but I can't see any good 100% solution right now.\nAnd if you concatenate the CSS you'll also have to deal with sourcemaps, since most css probably comes from a preprosessor. \nWould love a solution for this though as I'm lazy and want the computer to remove moot rules for me.\n. This is already supported in grunt by using dynamic expansion. Nothing needs doing in this plugin. http://stackoverflow.com/questions/15344584/grunt-0-4-less-task-how-to-not-concatenate-destination-files/15371443#15371443\nhttp://gruntjs.com/configuring-tasks#building-the-files-object-dynamically\n. I would stay with one type (array). Saving two characters isn't worth the overhead IMHO.\n. ",
    "addyosmani": "The latest version of the task works against multiple files. We're also exploring using PhantomJS to capture the SPA use-cases better over in https://github.com/giakki/uncss/tree/phantomjs.\n. We've since added support for Phantom. Here's a quick Angular example, although it is a few months old: https://github.com/JeremyCarlsten/grunt-uncss-angular-example. In most cases you will want to use the timeout option specified here https://github.com/addyosmani/grunt-uncss#options to allow your styles to fully load (if they are dynamically being pulled in).\nIf they require user-interaction in order to display (e.g click a button for a panel to slide out) I recommend isolating that CSS into a stylesheet you ignore UnCSS from processing.\n. Good idea!\n. Could you file a request for this upstream at https://github.com/giakki/uncss/? We've decided to just use this repo for issues related directly to the grunt task. Thanks!\n. Can you file this request upstream at the node module repo? It's https://github.com/giakki/uncss\n. Thanks for the bug report. It should indeed skip this. Could you file a complementary bug over on https://github.com/giakki/uncss?\n. It should be testable with the latest version on npm :)\n. Should be solved in master.\n. No worries at all! This is expected. The current parses being used by unCSS are very limited and ideally we want them to be getting run through PhantomJS. I plan on moving grunt-uncss over to using Helium once it has been ported to Node.\n. Can you try this out with the latest version of uncss and grunt-uncss and let me know how it goes?\n. Yep. For all dynamic JS use-cases, this will be solved once the PhantomJS branch of the associated project by @giakki becomes the default.\nOn that note, @giakki do you need help with testing out the branch? I'd be happy to see how well it works for the task's use-cases on a few projects if so.\n. Good catch! Thank you.\n. Thanks!\n. You should be able to. Specify your compiled templates as the source and run the task over them.\n. I think that this is something possible, but wouldn't be on the block until after a stable release of the project. Right now there are currently still a number of selectors (arguably more complex ones) where we break on and I'd love for us to optimize those first and then move on to these interesting other use-cases. Does that make sense? :)\n. Btw, I published an example of how I feel uncss should be used in a preprocessor workflow: https://github.com/addyosmani/grunt-uncss-sass-example tl;dr - execute it after you've compiled your Sass/Less near the end of your build process, pass in the relevant pages and rewire where your pages are pointing to to reference the newly tidied stylesheet.\n. Thanks @giakki! \n. Could you share your CSS file? We had an earlier issue with comment stripping that caused this but should have been fixed.\n. Thanks for trying to reach out to the module creator, @giakki! Appreciate you sharing the CSS file @fleshgordo. I think at present I should add a note to the README stating that there are particular selectors we currently don't work as well with. Perhaps we could document and track these being fixed. \n. This should now be fixed upstream. If you could report further selector issues upstream on https://github.com/giakki/uncss/issues that would be ace :)\n. Yay!\n. In theory, if once we have PhantomJS integration it should be possible to point this at dynamic pages and be able to get a build of your CSS that only contains classes used. I haven't tested it with this use-case however but we can look into it further once that feature has landed.\nIn the mean time, please use the DevTools Audits panel for profiling what classes are unused in your pages.\n. I'll take a look into this. It should be something we can show in the demo at least.\n. Thanks!\n. The Phantom solution should solve this too. I'll be closing up the issue until it's landed.\n. As per the readme, the project doesn't yet support detection of styles dynamically added via JavaScript. Is this the problem you're running into at the moment? If not, it may be that our parser is breaking due to something in your templates. Once you've clarified I'll be able to comment further :)\n. It should work fine with single page apps and apps using templating for the views. We're going to try putting together a sample to demonstrate this. Btw, where possible I recommend running uncss as a post-processing step once you've compiled templates and anything else your build needs to do. Attempting to run it against raw template files won't work as we need to be able to run the rendered markup straight-up in Phantom.\n. Just to clarify: so, point uncss at the URLs where your final views/templates are being consumed.\n. We've used processhtml in our demos in the past, but having reviewed it looks like the ignore and ignoreStylesheets fields are going to be the best way for us to expose this behaviour without deviating too much from the upstream UnCSS module. Thanks for your suggestion though!\n. We now support passing everything through PhantomJS with the version on master. It may well be possible to supply Jade views to them but you would probably want to first setup some middleware to serve your jade views then point to them in the files config so that the task knows what it should be crawling.\n. We're exploring an issue upstream with uncss where there are some quirks when working against multiple files. As soon as these have been resolved I'll let you know.\n. Could you test against the version on master? I believe this issue is now fixed.\n. Ah, okay! I'll leave this open until the fix has landed then. Thanks @giakki! \n. This should now be fixed. If you still experience issues please feel free to reopen.\n. I'll be pushing a new version out shortly. 0.6.x of uncss had some issues with multi-file support and Phantom which have now been patched. We'll land a new version on npm within the next few days :)\n. Done https://github.com/addyosmani/gulp-uncss-task\n. I'd be happy to remove the compress option from this task too. Right now I'm firefighting some multi-file handling issues with this task and uncss (since the move to Phantom) but if you'd like to file a PR I'd be happy to merge :)\n. Changes LGTM. The only change I would modify is not incrementing the version in package.json, but we'll be doing a new release soon anyway so that should be okay. Thanks for the PR!\n. @shmulim could you re-post this issue upstream to https://github.com/giakki/uncss/issues? If we can debug it directly with uncss and solve the issue, grunt-uncss should be able to process it correctly.\n. Thanks for flagging this issue, @eliperelman. We'll bump deps and push out a new release as soon as this has been resolved upstream. \n. Hoping we get an uncss patch release to use this without relying on master\n:)\nOn Friday, 17 January 2014 06:39:49, Ben Z\u00f6rb notifications@github.com\nwrote:\n\nsubmitted a quickfix for uncss https://github.com/giakki/uncss/pull/27\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/addyosmani/grunt-uncss/issues/33#issuecomment-32583445\n.\n. Just release version 0.1.7 (thanks @bezoerb for the help!) \n. @eliperelman could you verify this issue is resolved for you with the latest version?\n. Thanks for checking!\n. Weird. So, the old one was occasionally being called too early, even if the uncss process hadn't completely finished processing. I'll look into this again.\n. Closing as we landed #42 \n. Hi! This is the first time I've come across grunt-cssrazor but it does indeed appear we're trying to solve the same problems :) I'd love to play around with your project a little to see how you're handling some of the same problems.\n\nIn the case of grunt-uncss, we're a wrapper around uncss and work closely with the author to report issues, feature requests and so on. With the core logic being in a separate node module, other tools like Gulp can also reuse whats there and we've found this works well so far.\nHave you had a chance to play around with this task? Would love your feedback on it.\n. Let's chase this upstream on the uncss repo and keep this repo only for issues with the grunt task please.\n. I believe I've already mentioned there was an issue with this happening in a former release, but if you could share your Gruntfile with me I'd be happy to test against the latest fixes upstream and see if there's anything else we need to resolve. \n. Could you try out 0.1.9 and let me know if this is still an issue?\n. Will keep this open so we remember to test once the new release has been pushed out. Thanks for commenting, @giakki! \n. This issue has been fixed upstream and should now be fixed in the task too.\n. We'll fix this. @giakki is this something you would like to handle at the core level, or would it make more sense to add in some defaults using ignore and try to recommend users take care with print stylesheets?\n. Let's chase this upstream in the uncss module if there is further work to be done there.\n. I'll double check this again tomorrow and get to the bottom of why the build is breaking.\n. Closing as we landed #42.\n. Thanks for reporting this error. It's been fixed upstream in https://github.com/ariya/phantomjs/issues/11612 and I'm sure @giakki will be updating the uncss module this task depends on to use 1.9.3 as soon as @ariya has pushed out a new release. I'll be keeping an eye on the Phantom mailing list for any word on that happening. \nKeeping this issue open until we've been confirmed it has been resolved.\n. @kristoferjoseph could you try with version 0.1.7 (released yesterday) and let me know if that solves the issue you ran into earlier?\n. Currently tests are failing with this pulled in, but I'll land it and address test issues after. Need to check what changed in the API.\n. Thanks for the PR, btw! :horse: \n. Can we confirm this one can be closed now?\n. Thanks for the heads up! Really appreciate it. Will keep this issue open to track the API changes so we make sure to address them in this task.\n. Landed the change thanks to @bezoerb! \n. Thanks a ton for this fix. I was literally just about to start working on the same patch :)\n:star: lottsa stars! :star: \n. Please try the csspath option with 0.1.7 (released yesterday)\n. I agree that a report option would be useful here. I'll get that added. Thanks for the suggestion!\n. Thanks for the bug report. Would it be possible to share a minimal test case reproducing the issue? Alternatively a summary of whether there are complex selectors in your stylesheet would help us nail down the issue.\ncc @giakki in case this happens upstream too.\n. Could you try out 0.1.9 and let me know if this is still an issue?\n@giakki were you able to find out if this is an issue upstream?\n. I believe @giakki attempted to address some of the regressions introducing performance issues back in 35 (upstream). This shouldn't be as slow now.\n. Thanks for the PR @sedovsek! \n. Thanks for the update!\n. A recent change in the uncss API caused a few issues with how the task generates styles. Could you test against the version in master which should have a fix?\n. I've pushed the patch release to npm. If you update to latest it should fix the timeout issues.\n. ping - could you try out 0.1.9 and let me know if this is still an issue?\n. Closing due to age of the ticket.\n. That was quick. Thank you! :)\n. Changes LGTM. Thanks for the various improvements, @XhmikosR :)\n. Closing due to the age of the ticket.\n. Thanks for the review on this @XhmikosR! \n. Changing to return a raw string sounds good to me. Could you make the update and squash your commits please? :)\n. Let's go ahead and do this. Makes sense.\n. Thanks for following up with more helpful error messages, @giakki! Closing this one. \n. LGTM.\n. Thanks! I'll be cutting a new release once I've gone through the latest threads in the tracker.\n. I think the quickest option would be creating a fresh PR. Could you do that and we can close this one?\n. Reviewed all changes and they LGTM. Thanks @XhmikosR! \n. Thanks for the fresh PR. Merging!\n. Thanks for the docs update!\n. I think this is a legitimate feature request. I'll see if we have time to add it to the next release.\n. Sounds good to me. Thanks for letting us know, @giakki! \n. :+1: \n. Thanks for reporting this issue. For those who ran into it, could you let me know what version of grunt-uncss you're running into this problem with so I can track it down and fix?\n. Let's add a solution for this in time for the next release.\n. Does 0.8 address this pseudo selector issue?\n. Awesome. We just updated our dependencies. Should be able to verify if the issue works using the version in master now!\n. Can you re-check with the latest version? 0.3 is now on npm.\n. Let's chase this upstream in the uncss module if there is further work to be done there.\n. Would it be possible to squash your commits? :) Thanks Dean!\n. Added manually as this needed to be rebased. Thanks again!\n. Thanks for chasing up the versioning issues, @XhmikosR! I'll be doing some further local testing then pushing out a new release post haste. \n. 0.2.2 has been tagged and pushed out to npm.\n. I would be happy for us to officially mention outright that we're dropping 0.8 support in the next release. I think we should give the 0.2.2 a day or two to iron out any remaining issues and can then merge this in and rebase as needed.\n. 0.3 in a few days :)\n. Per other issue, added.\n. I'm going to wait until uncss 0.8 lands on npm so we can upgrade and then double-check this issue is still present.\n. Can you re-check with the latest version? 0.3 is now on npm.\n. @giakki are you seeing any similar reports upstream?\n. Without looking too closely at your generated code: I would suggest approaching grunt-uncss as a post-process optimization. Once your build process has completed compiling all assets into their final destination (or a temporary one), you can just point uncss at the index for your project and run the task against your 'dist' level stylesheets. You pointed out you're using rev. grunt-uncss should be able to extract out what stylesheets are in your HTML without you having to explicitly point to them (per the docs on the uncss repo). Let me know if that doesn't work.\n. I'm going to publish a sample that shows how to integrate grunt-uncss into a Yeoman project soon. I think we might need to figure out a better story around revving but I'll do my best. \n. @gustavjf sorry for taking forever to get back to you (GitHub notifications is failing me atm). I didn't get a chance to publish but the integration but I'm glad you figured it out!\n. I'm going to work on a generator based on -webapp that integrates properly with this task so folks at least have a reference point. Would that be useful?\n. Here you go: https://github.com/addyosmani/generator-webapp-uncss\n. Thanks @XhmikosR! I just checked back and looks like 0.8 has landed in master over on uncss but hasn't been published to npm just yet. cc @giakki \n. Fantastic. \n. Done! Thanks for staying on top of the changes in uncss once again.\n. Will publish tomorrow and some final testing :)\n. Run grunt-uncss (or just the uncss binary) against your source once you've completed any other build time tasks you currently have setup for it. You would probably want to pass all of your URLs or a good sampling of them through in order to ensure the majority of 'common' styles are adequately captured.\n. Thanks for reporting this error. We'll get out a new patch to address this shortly.\n. This was fixed, merged and pushed to npm yesterday. Should now be fixed. Closing!\n. :+1: \n. Great!\n. Let's chase this upstream in the uncss module if there is further work to be done there.\n. That sounds like a permissions error based on the warning/error you're getting. Can you try running sudo chmod -R a+rwx <directoryName> based on the directory you're working against and see if that works?\n. I think we should work towards getting in a clean solution for this for the next release. I agree that urls should work when files is empty and bailing is definitely not the right move.\n. Could you share some more information about your setup to help us determine what's going wrong?\n- Version of Node\n- OS\n- Version of grunt-uncss\n- Version of Grunt\nI'm also happy to take a look at a distilled/reproducible zip where this issue occurs. \n. Could you share a snippet (e.g JSBin) of what you're trying to do so we can test it with a local setup and provide further guidance? \n. Pardon the delay in getting back to you. What I would do here is keep in mind that you can have as many workflows using the task as you'd like, each just having a different profile (e.g uncss:global, uncss:graphs and so on). This would allow you to apply the removal process on the global.css file for your complete set of pages whilst running the graphs configuration on a smaller subset of files which actually use it. Does that make sense? \n. This is currently intended behaviour but might be worth filing a feature request for over on the main repo for the UnCSS module. Would you like to go ahead and suggest it there? https://github.com/giakki/uncss/\n. Cheers!\n. :+1: \n. I haven't been able to reproduce this on any OS unfortunately. If someone can ping us over concrete samples or setup information allowing us to repro we'll be happy to work on a fix, but until then I'm closing this issue due to age and inability to reproduce the issue ourselves.\n. Thanks @XhmikosR! \n. This is best tackled upstream in the uncss module vs. the task.\n. Please pass uncss a literal regex for issues like this. If you have further issues, let us know!\n. Hmm. https://www.npmjs.org/package/grunt-uncss currently has 0.3.4. Are you still seeing this error with the latest version?\n. We locked in to a version of uncss we consider stable in the last release. It should resolve the issues seen here.\n. Hmm. That's very odd. In our setup I'm using load-grunt-tasks and then simply referencing uncss and it works. It would help me debug if one of you could share your Gruntfile or enough of it for me to see how you currently have it setup. This does seem like a bug if more than one of you are running into it.\n. This seems like something that should be optional rather than the default. Most of our current users prefer to use arrays to specifically point out which files to include. I'll keep this open to gauge interest in adding sitemap support.\n. What version of Node are you using? (We're unlikely to move the Phantom dependency as it's a core component in how we manage to scape unused CSS from dynamic pages)\n. I fully agree :) I'll probably get to this sometime next week but if you'd like to take a stab at refining the readme before that a PR would most definitely be welcome. Thanks for bringing this up!\n. I'd be happy for us to provide more guidance around this in the README. Perhaps..\n(Optional: compile Sass/Less/Stylus to CSS) -> CSS -> UnCSS -> Minify ?\n. Sgtm!\n. To the best of my knowledge, inline CSS will not be handled by UnCSS. We generally operate against external stylesheets so for something like this you would want to host your CSS in an external file, run it through uncss and then inline it back into your file.\n. Running uncss on the generated files is the right call here :+1:\n. When you say lock the uncss dependency to 0.8.1, my interpretation is that you're suggesting we avoid any upgrade until everything after 0.8.1 becomes stable. If that's the case, I'm more than happy for us to do this :)\n. Let's do that then. I prefer stability right now, especially since quite a few folks are relying on the task. Let's check in with @giakki in a few more releases to see how stable things are :)\n. LGTM. Will get this published soon.\n. Done :) Thanks for all your continued support!\n. This appears to be an issue with UnCSS rather than the Grunt task. If so, could you file a bug upstream at https://github.com/giakki/uncss and close this one? Otherwise if you're sure this isn't a core UnCSS issue feel free to keep this bug open and we'll investigate.\n. This appears to be an issue with UnCSS rather than the Grunt task. If so, could you file a bug upstream at https://github.com/giakki/uncss and close this one? Otherwise if you're sure this isn't a core UnCSS issue feel free to keep this bug open and we'll investigate :)\nI'm so glad any of these projects have been useful!\n. Thank you! :+1: \n. LGTM. Thanks @XhmikosR! \n. Could you try installing grunt-uncss on a fresh Grunt project and let me know if you run into similar issues? When I try installing the current version on new projects scaffolded with Yeoman it appears to install fine without issues.\n. Could you discuss what is currently breaking in your Dust workflow with UnCSS?\n. Change LGTM. I'll need to test it. Thanks for putting this together!\n. Thanks for the fix @Sly777! Having reviewed the issues in #66 and #75, change LGTM.  \n@davidemoro @Michael0x2a if you have time, I'd greatly appreciate help with some further testing before we drop this into the next release.\n. Use the ignoreSheets option to specify sheets that we shouldn't explicitly be trying to optimize :)\n. The task supports explicitly ignoring what selectors you don't want to be cleaned. With respect to JS, we do have a timeout option for allowing scraping of CSS added by JS through initial pageload, but can't (yet) capture CSS injected on user interactions. Let's use #116 to track further feedback here, but this is an issue we'll want to further chase upstream: https://github.com/giakki/uncss\n. As always, thank you for your insights and the links to the upstream\nissues. It looks like we'll be sticking to an earlier version for a while.\nI'll see if I can find time to look at those issues and offer help.\nOn 29 Sep 2014 18:42, \"XhmikosR\" notifications@github.com wrote:\n\nIssues opened upstream giakki/uncss#98\nhttps://github.com/giakki/uncss/issues/98 and giakki/uncss#97\nhttps://github.com/giakki/uncss/issues/97\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/issues/122#issuecomment-57199021\n.\n. @XhmikosR I was thinking the same. Merging and then I'll get you added :)\n. At present the best option here is to manually get a list of selectors being applied or used via JS and adding them to the ignore field: https://github.com/addyosmani/grunt-uncss#options. This ensures that such selectors are skipped over while uncss is removing CSS not actually being used.\n. Originally we were going to do a stable and dev/bleeding-edge branch. It's stale now so have removed. Thanks for asking :)\n. It is a lot of bloat. If we can refactor our fixtures down to something simple (just the multiple HTML files + Bootstrap CSS) so that we can continue to test on a non-trivial CSS corpus, I'd be happy for the cruft to be removed :)\n. hahaha. Fair enough :)\n. LGTM. Thanks for working on this.\n. @falzhobel would love your help with testing this patch if you have time as it might fix the issue you experienced in 66.\n\n@moodyroto Thanks for digging into this. I'll need to re-review the source to figure out why I hadn't exposed nonull as a fallback similarly, but if we can verify it addresses the issue correctly we're happy to merge this in.\ncc @XhmikosR as an fyi.\n. I was quite surprised that the change was necessary. I'd definitely be up for us improving our failure handling mechanism.\n. Closing as it looks like we're not going to move ahead with this suggestion. Thanks for the contribution anyway!\n. This task will work fine with JS frameworks, but note it works best for styles injected shortly after page-load (you can set a custom timeout). It can't at present handle styles dynamically injected due to user interaction or view switching. Your best option there is to use the ignore field to specify what dynamic styles/selectors you would be using in such views so they don't get stripped out.\n. The upstream uncss module recommends using an array for this field (https://github.com/giakki/uncss/#within-nodejs) and we try to stay pretty close to what it suggests in its documentation. @XhmikosR any thoughts about us switching over to accepting both string and array based input?\n. I would be pretty okay with us using lodash (or borrowing what we need if the extra dep is a concern). Using strings for single items seems like a pretty sane choice here and who knows? Maybe the upstream module will support the same eventually. Let's do it!\n. I would be surprised if the / path worked. Is that a location you're serving from a local server during dist? Instead of pointing to / or /.../, try to pass in the absolute path to the file or at minimum the filename at the path dist/index.html as that should almost certainly work.\n. Your best option here is to use ignore to specify the dynamic CSS selectors you don't want uncss to strip from your stylesheets: https://github.com/addyosmani/grunt-uncss#what-do-the-options-do\n. :+1: \n. I know it's been quite some time since you posted this question - was the SO answer able to help at all?\n. :+1: \n. @kaze13 could you rebase this against master please?\n. Re-reviewing. Per the original solution, I think we should still be bailing early if we can determine there is no valid input. Moving the block feels like a workaround rather than the correct fix. \nShouldn't the correct solution to this be better handling of the input and f.orig.src vs. just moving the input check lower down? \n. Ping on the last question.\n. Closing due to the age of this PR and time since last reply. We appreciate the contribution regardless :)\n. https://ci.appveyor.com/project/addyosmani/grunt-uncss setup :) Do you know how I would add you as a collaborator?\n. I think I've added you. Think :)\n. I've updated your role to admin in case that changes anything - could you retry?\n. Badge:\n\n. \\o/\n. Agreed. Let's just remove them.\n. I've been keeping track of the tireless efforts you've been investing upstream, @XhmikosR. Thanks for doing your best to try making this happen. There's definitely a non-trivial set of fixes left to be made.\n. Is it worth us documenting answers to some of these questions in the docs or linking up to issues where this has been done?\n. @DavidCWebs I know its been a while but I'm curious if the issue you ran into was due to a similar one as the comment above.\n. > I just rechecked performance: uncss takes the stylesheet from 256 kB to 107 kB (79 kB after minification) in just under 3 minutes - which I reckon is excellent.\nGreat to hear :)\n. LGTM. I assume we're awaiting the new updates to be ready before merging this in?\n. Dynamic CSS is a complex problem to 100% get right. It's possible to use timers with Phantom and scrape a version of the DOM at some point after the page has loaded. \nThat is probably the best we can do as there's currently no way to capture CSS toggled by user behavior. Timers + an ignore sheet would probably get you what you're after.\n. ^ this is also true. Given that the dynamic side of this problem is not something we can tackle directly in grunt-uncss and as @XhmikosR  mentions is up to the upstream module, let's close this issue.\n. I still need to verify if this causes breakage, but this is something we could definitely be handling better. @XhmikosR once verified, shall we include an initial notice in the docs until we can support raw // better?\n. Change LGTM\n. This hasn't yet been solved over on https://github.com/giakki/uncss/issues/136. I'm quite sure we're waiting on it to be resolved.\n. Just confirming that this isn't yet addressed upstream unfortunately. Will take a look at #178. Thank you for working on a workaround.\n. @XhmikosR mentioned in #141 that it may be worth expanding our test suite to capture this as well. Would you be interested in making that change in this PR too?\n. lgtm\n. Atm, this is causing our AppVeyor build to fail though I'm not quite sure why. It's been flaky in the past. Taking another look.\n. @XhmikosR I'm personally fine with moving in the async.eachSeries direction until the issue this works around is tackled in uncss upstream. Do you have any opinions on it?\n. ",
    "cmegown": "I realize this issue has been closed for quite a while, but is there any update for those of us who are trying to fit grunt-uncss into our SPAs? I've got a Durandal app that could greatly benefit from adding this to the build process, but a quick test shows that it removes a lot of necessary styles.\n. ",
    "jrcryer": "Done! :+1: \n. Sure - issue raised!\n. ",
    "webjay": "@giakki have pushed a fix (giakki/uncss#1), let me know when I can test it.\n. It works. Thanks.\n. ",
    "mohammedzamakhan": "I just wonder how uncss works, since some of the css classes will not be found on page, and will be added through the javascript... ! \nI have such doubts that don't allow me use such great ideas :(\n. as @giakki says he will be integrating with PhantonJS, which means that it will solve most of the issues :)\n@Tobino it's not easy when you use plugins like Jquery UI or Bootstrap, since you cannot check all the css changes that the plugins make, and it would be hell for us to manually add them...\n. ",
    "Tobino": "You can use the ignore option.\noptions: {\n  ignore: ['#added_at_runtime', '.created_by_jQuery']\n}\nhttps://github.com/giakki/uncss/issues/5\n. ",
    "giakki": "Sure, it would be great!\n. Nice catch, I will fix it.\n. Thanks for the info! This is a problem we'had before, and it's caused by the CSS parser breaking on some selectors.\nIn this case: \n[data-section=''] > section > [data-section-title] a\nI'll try and contact the creator of the module to see if we can patch it!\n. I guess the problem is that yesterday I changed the way uncss is launched from the command line, should I revert it, or is it fixable from here?\nEdit: fixed\n. Good to hear! Anyway, I reverted the change, it should work for everyone now!\n. Currently the expected behavior is for the processed files to be concatenated, however, since we dropped the support for minification, I plan on deprecating this feature. I'll let you know when the change is made, since grunt-uncss' API would have to be changed as well :)\n. Sorry for the confusion, we didn't make the change yet. I'll hopefully ship the new version, along with some other fixes in a couple of days!\n. We actually had a similar problem before (see giakki/uncss#3). The \"SyntaxError: Unmatched selector\" pops up when cheerio-select can't parse a CSS selector.\nIf you could find the line that contains \"(http\", and try to replicate it, I can look into it!\n. Nice work on cssrazor!\nThere is actually something we could learn: I see you use querySelectorAll within PhantomJS to check if a selector is in use. Since we are having problems with our CSS parser breaking on some selectors, that might be the only way to solve it! \n. Yes, the only way of handling template files right now is preloading them into HTML files.\nWe are currently working on the possibility of loading pages via URL; that would probably not be a great improvement if you are using grunt, since your assets would change after you complete your build process, and the CSS produced would be out of date, unless you run the task after you upload your files to the server and then reupload the processed CSS.\nI feel like being able to process template files would be a great feature, but there are so many templating possibilities that the only way I see it possible is by using other preprocessors that do it for you.\nPerhaps some other grunt plugins are able to do that, something like grunt-php or chop-grunt-php-builder.\n. You might be running into this issue (giakki/uncss#22), I already pushed a fix for it, and we are going to release the new package soon! \n. There are so many different media options that I feel like a custom-tailored solution would not work. How about processing only those without a media attribute, and adding the possibility of specifying which others should be included?\n. I'm not sure why the build is failing, Travis reports that everything is ok, both for UnCSS v0.7.1 and v0.7.2.\nPerhaps the tests should be updated too?\n. Yes, I'm keeping an eye on that too!\nWe don't directly depend on PhantomJS, but on https://github.com/Obvious/phantomjs, we will probably need to wait a bit more for the second plugin to be updated too!\n. Hey again!\nI'm going to release 0.7.4, which includes a critical fix that should solve a lot of issues (HTTP paths starting with '../' were parsed incorrectly, and if Cheerio can't parse a selector, it simply includes it in the result, instead of throwing an error), and also includes the API change I described.\nIt is not labeled 0.8.0, because I wanted to include @rules and checking which selectors actually break on that release.\nAs an aside, the infamous [data-section=''] > section > [data-section-title] a and other complex selectors now work, looks like everything was patched upstream!\nCheers!\n. That error happens when UnCSS cannot find a stylesheet. Could you try to pass it the csspath option, and see if the error persists?\n. Sorry for the delay!\nThe problem is that your stylesheets have absolute locations, but they are not requested over HTTP, meaning that UnCSS will search for the stylesheets starting form the location of the HTML files.\nAnyhow, I managed to make it work setting the \"stylesheets\" option:\nuncss: {\n    dist: {\n        options: {\n            stylesheets: [\"../../../../../<%= concat_css.dist.dest %>\"]\n        },\n        dist: {\n            \"<%= dirs.dest %>/assets/css/tidy.css\": [\"<%= dirs.dest %>/**/*.html\"]\n        }\n    }\n}\nI couldn't check that the result was correct however, since as you said the Gruntfile isn't complete ;)\nAnother solution would be to run UnCSS against the pages served by Jekyll, but I feel like this option should be better supported, I'll add an option to specify the project root!\n. It is not happening upstream, actually. I added a specific tests for :hover, and it passes without problems, and so does the example page from grunt-uncss.\nIIRC, the method for parsing unused selectors hasn't changed between the two versions, could you share an example of it happening, so I can look into it?\nThanks!\n. Thanks, I'll try and check what's wrong ASAP!\n. Sorry for the delay, I'm happy you managed to get it working at least!\nI'll look into the two issues that you mentioned, especially the performance one looks strange.\nThanks again!\n. The patch is out @0.7.5!\nSorry to have you update the version again, I can't believe I didn't test for that!\n. Hi,\nthat is a known issue with version 0.1.7, could you try and check if it works with version 0.1.8?\nThanks!\n. :+1: I prefer the idea of letting grunt-uncss handle the colors, since the report option was created just for this plugin, and is not used internally by uncss.\n. That error should be caused by a syntax error in the CSS.\nIf you are sure that all the stylesheets are valid, could you please find which one causes that error, and look up which line/selector is reported, so I can look into it?\nThanks!\n. Line 1:28445 could mean that the input stylesheets are minified and thus contain only one line.\nThe best way to find which one it is would be to pass non-minified stylesheets to UnCSS one at a time, so they don't get concatenated, and you can directly inspect which line is reported, or, if you can, simply share your CSS, so I can take a look myself ;)\n. No problem, glad I could help!\nI might add a more informative error in the next release ;)\n. Looks like grunt-uncss's README is not up to date; we introduced the htmlroot option to deal with this issue. Take a look here\n. We are already planning to implement this feature right into uncss (see ben-eb/gulp-uncss#5), that way all the wrappers could benefit from this!\n. Hey, thanks!\nI found the same issue while rewriting the library. Until UnCSS 0.8 is out, I suggest you add the selector to the ignore list. Perhaps a regex like /\\:checked/ would suffice, otherwise the full selector #navbar-checkbox:checked + .menu might be needed.\nLet me know if it works!\n. Yes, it should!\n. Thanks everyone for your reports. I'm not sure where all the recursive calls come from, but I'm already investigating the issue (giakki/uncss#57).\n@JeremyCarlsten This might be the bug you're running into!\n. I pushed a patch in v0.8.1 that should fix the issue!\n. That is a known issue with version 0.3.3, could you try updating it to the latest version and see if the problem persists?\nThanks!\n. Hey!\nThe problem is that you need to specify a literal regex to pass to uncss (/open.*/).\nLet me know if it helps!\n. That is a known issue with version 0.3.3, could you try updating it to the latest version and see if the problem persists?\nThanks!\n. 0.3.4 is the latest one;)\n. Oh, you are right!\nping @addyosmani  ;)\n. That is a known issue with version 0.3.3, could you try updating it to the latest version and see if the problem persists?\nThanks!\n. Hey :)\nThe urls option is deprecated because you can pass URLs directly in the files options.\nHowever see #83 as there seems to be a problem with passing only urls, I don't know if that has been fixed yet!\n. You should probably link to the readme for the version you are using over here, for the time being ;)\nThis?\n. Sorry for the delay, been kinda busy.\n0.12 is out!\n. ",
    "zdroid": ":)\n. ",
    "nicdaCosta": "100%, thank you :) \nI didn't think at this stage it would be possible as I am sure there were still a few cases that would have needed to have been resolved, as you mentioned. It would make sense to get a stable release first before diverging into other use cases.\nI guess I was more curious to see if something like that would be possible in the future as I was chatting with some teams about implementing something like this and one of the main aspects that kept coming up was preprocessor support.\nAnyway, thanks for the feedback. Will keep a close eye on this :)\n. ",
    "koriolis": "Source maps are a possibility or take advantage of the debug mode of SASS (to give an example I'm more familiar with) that bind the compiled css line to the SCSS source files\nEither way implementing this with preprocessors will be huge for those who use frameworks like bootstrap and foundation on their pre-compiled versions.\n. ",
    "LostSenSS": "It's very important issue. Fix it, please.\n. ",
    "micron": "Ran into this issue too\n. ",
    "sedovsek": "Since this was fixed in uncss (5e92ffd), can you close this issue?\n. Hey,\nI made a pull request: https://github.com/addyosmani/grunt-uncss/pull/28\nPlease review.\nKeep up with good work!\n. @tomByrer: Ouch, you're right. I was being sloppy. Fixed it, thanks!\n. Great.\nAgreed, I wasn't sure about the versioning either.\n. Dear @shmulim,\nWould you mind sharing your index.html as well?\nBest,\nRobert.\n. @shmulim, well as far as I can tell, the source of the issue is somewhere in your index.html file, not in your setup.\nBut I might be wrong.\n. Have you looked at your CSS?\nLooks like one of your selectors is \"(http\", which isn't valid CSS selector.\n. I've tried both (remote background images and base64 encoded files) and it works.\nPlease try to replicate the minimum code that causes problem.\n. Please run uncss against generated CSS file and not sass/compass sources.\nIf you are already doing so, please include your Gruntfile and a CSS file that are causing an issue.\n. Good idea! It's always rewarding to see your improvements.\nI've added a PR to the uncss.\nAfter @giakki reviews it and decides if it fits, I can add changes to the grunt task as well.\nBest,\nRobert.\n. Thanks for pointing this out, @XhmikosR.\n. Added PR that outputs a report.\nIt would be nice if someone could review it.\nBest,\nRobert.\n. @XhmikosR: Hehe, yes, I'm quite fond of branching. It's an old habit, mostly due to because I rarely work with forked repositories.\nWell, I've only added byte sizes of original and uncss-ed 'files'.\nI have no prior experience with that, but I'll take a deeper look at how it is usually done and improve my solution.\nThanks for your feedback,\nRobert.\n. @XhmikosR, is this what you meant?\nBest,\nRobert.\n. I assume this was already fixed here as a part of this issue.\nHave you tried with the latest version?\nBest,\nRobert.\n. You're right.\nI made a PR (see commit).\n@giakki, please review it.\nBest,\nRobert.\n. Dear @CarlosLDN,\nOption compress was removed quite some time ago, so unless you are using an older version, compress is not going to work.\nRegarding ignores, I will take a look\u2026\nBest,\nRobert.\n. @CarlosLDN: Ignores seems to be working fine as well.\nCan you confirm your issue with the latest version?\nBest,\nRobert.\n. @XhmikosR, @addyosmani, are these changes ready to be merged?\n@XhmikosR you pointed about about using the minMaxInfo from grunt-contrib as an alternative. We could, but that would require some changes in uncss.\nIf you think this is worth changing, I can propose it there and get it changed.\nBest,\nRobert.\n. minMaxInfo doesn't use chalk either.\nIf you insist on using minMaxInfo, you may close PR and I'll propose changes to the uncss.\n. Agree.\nThen I'll change uncss to return raw string instead of byteLength, good?\n. Found what the issue about loading grunt-lib-contrib via load-grunt-task was here.\n. I'll reopen this PR once @giakki's latest changes to the uncss are available on npm.\n. I've updated dependencies to use uncss 0.7.9, which includes the necessary changes.\n. Was kind of hoping my commits would get squashes into single one after running git rebase -i upstream/master, but it only got appended.\nWas that expected?\nAlternatively I can make another PR and close this one.\n. @addyosmani Of course. Here it is.\n. @addyosmani Anytime.\nI've been thinking\u2026 shouldn't be there a simpler way to sync docs?\nIn this case we are duplicating options from uncss to grunt/gulp/\u2026 tasks.\nI assume this happens often.\nAny possible solutions on your mind?\n. Nice find.\n. ",
    "ArmorDarks": "I'm not sure, but seems that similar error appeared again in 0.4.0 and higher versions:\n``` coffee\n\nUncss\nhttps://github.com/addyosmani/grunt-uncss\nRemove unused CSS\n\nmodule.exports = ->\n  @config 'uncss',\n    build:\n      options:\n        htmlroot: 'build'\n      files: [\n        src: 'build/{,*/}.html'\n        dest: build/assets/styles/style.tidy.css'\n      ]\n```\nhtml\n    <!-- Fonts -->\n    <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,300,600,700&amp;subset=latin,cyrillic\">\nresults in:\n\nPlease note that there is nowhere can be found path build\\css in project or microtemplate's variables, while actuals project's css stored in build\\assets\\styles\nUsing of full protocol name http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,300,600,700&amp;subset=latin,cyrillic fixes that issue, but it should work with // too I guess\nIn 0.3.8 all is fine\n. You can also use prefixes for dynamic classes like is-, etc. and ignore them with ignore option in conjuration with regex\n. Sure.\nRef: https://github.com/giakki/uncss/issues/164\n. Hi\nSure, thanks.\nJust wanted to ensure that it isn't task error before reporting it there.\nJust in case, relevant issue in uncss repository: https://github.com/giakki/uncss/issues/163\n. ",
    "otravers": "I can replicate the issue as explained by @ArmorDarks with grunt 1.0.1 and grunt-uncss 0.6.1\n. I'm running into the same issue, in a CentOS Virtualbox / Vagrant environment if that affects anything. the uncss command line works for me like it does for falzhobel above, establishing among other things that my http://local.mydomain.com host is available within my guest environment (I can also curl it successfully).\nThis generates an uncss'ed customStep2.css file as expected:\nuncss -s vendor_sausage/css/customStep1.css http://local.mydomain.com > vendor_sausage/css/customStep2.css\nWhile the following - which I expect to be functionally equivalent to the above - returns  \"Fatal error: UnCSS: no stylesheets found\":\njs\nuncss: {\n    stylesheets: \"vendor_sausage/css/customStep1.css\",\n    files: {\n        \"vendor_sausage/css/customStep2.css\": \"http://local.mydomain.com\"\n    },\n    options: {\n        report: \"min\"\n    }\n}\nMaybe I'm doing it wrong, more detailed examples in the documentation would help understand better how some of the options work.\nI really hope this will work so that the whole chain of CSS actions in my Gruntfile can be complete:\n1. Bootstrap LESS + custom LESS > CSS\n2. CSS > UNCSS (the step that doesn't work)\n3. Minify for dist \n4. check CSS metrics between sources and final product for bragging rights!\n. grunt-uncss 0.2.2 with grunt 0.4.4.\n. ",
    "fleshgordo": "I have the same problem. Was suspecting that it's because i'm using a php file instead of html:\n```\nRunning \"uncss:dist\" (uncss) task\n[TypeError: Cannot convert null to object]\n\n\nUncssing source \"index.php\" failed.\nWarning: Uncss failed. Use --force to continue.\n```\n\n\nLooking into my CSS file now!\n. Actually, it happens if I include the CSS file which was compiled from the Vanilla Sass source of  the foundation framework: http://foundation.zurb.com/\n. Here's the link to the CSS: http://pastebin.com/j08edigS\n. ",
    "boye": "Thanks for elaborating on this, guys. it seems it's related to the issue that @giakki mentions, regarding the CSS parser.\n. Great to hear :) I recently used uncss again in Zepto Builder to remove unused Topcoat CSS rules...and it worked flawlessly!\nCheers and keep up the good work!\n. ",
    "erlinghoff": "Same issue here, hoping  for a fix.\n. ",
    "candidosales": "I am also having the same problem and I'm using ZURB foundation =/\n. ",
    "vertti": "Run into this also, with default yeoman angularjs setup the cssmin uses:\nhtml\n    <!-- build:css({.tmp,app}) styles/main.css -->\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n    <!-- endbuild -->\nand then uncss complains:\nRunning \"uncss:dist\" (uncss) task\nError: could not find: app/styles/main.css\nalthought it should be searching the .tmp directory instead.\n. ",
    "ain": "+1\n. :+1:\n. I've now tested the following task configuration to work:\njs\n    uncss: {\n      dist: {\n        files: {\n          '<%= yeoman.dist %>/styles/main.css': ['<%= yeoman.dist %>/{,**/}*.html']\n        }\n      }\n    }\nand will therefore close this ticket. \nThanks guys!\n. ",
    "kuus": "@vertti or if anybody have still trouble with this, you can use this setup in your Gruntfile.js to make uncss play nice with yeoman without even changing the index.html\njs\n    // Remove unused css\n    uncss: {\n      dist: {\n        files: [{\n      src: ['<%= yeoman.app %>/*.html', '<%= yeoman.app %>/views/{,*/}*.html'],\n      dest: '.tmp/concat/styles/main.css'\n        }]\n      },\n      options: {\n        csspath: '../.tmp/concat/'\n      }\n    }\nand then in the build task run uncss just before thee cssmin task:\njs\n    grunt.registerTask('build', [\n      'clean:dist',\n      'bower-install',\n      'useminPrepare',\n      'concurrent:dist',\n      'autoprefixer',\n      'concat',\n      'ngmin',\n      'copy:dist',\n      'cdnify',\n      'uncss', // here you are\n      'cssmin',\n      'uglify',\n      'rev',\n      'usemin',\n      'htmlmin'\n  ]);\nyou can leave the index.html as it is:\nhtml\n     <!-- build:css({.tmp,app}) styles/main.css -->\n. ",
    "seriema": "The problem I have with that approach is that usemin does slightly the same thing as uncss. It parses my index.html and generates a new CSS file. So running usemin after uncss overwrites the file uncss created.\nrev makes this complicated too, as you can't run uncss after it (because of unknown rev'ed filenames) but you need to run usemin after rev. And running uncss after usemin results in a non-minified CSS.\n. @rbreslav I haven't tried your solution explicitly, but I've tried the same approach before reading your post. The problem is that usemin will overwrite your CSS, so you won't get the optimized CSS. Can you confirm that your CSS is without unneeded styles?\nRunning uncss after usemin leads to unminified CSS and can have trouble with revision paths.\n@addyosmani I'm not sure this is solved... See my post in #16 .\n. ",
    "trask": "@kuus +1 thanks!\n. ",
    "davidgorges": "Supporting URLs in addition to local files would allow many server-side projects to use grunt-uncss.\n. ",
    "seifsallam": "I think parser is breaking because of something in templates. Because some styles get loaded knowing that it is only defined in .hbs files. I'm thinking this has something to do with bindings? {{bind-attr class=\"my-class\"}} or  {{view App.TextView classNameBindings=\"class\"}}\nIf thats the case would it be possible to have a variable to set in uncss to give it alternative names or aliases?\n. ",
    "wololodev": "@addyosmani does that also mean it does not work yet with single page apps with pushStates or \"#!\" ?\n. ",
    "ryrych": "bump :)\n. Thanks for clarifying this :+1: \n. ",
    "jonschlinkert": "I'm still having this problem, I cleared everything out and reinstalled and it's still not working. \n. ",
    "IbeVanmeenen": "+1\n. Works here again as well, thanks! :)\n. ",
    "rictorres": "Thanks, @giakki !\nI also had this problem but I thought it was related to the computer I was using (poorly configurated).\n. ",
    "samyerkes": "+1, thanks for the reply!\n. I just deleted my uncss node_modules and downloaded the newest version. I ran a test and it's still concatenating into the second.\n. ",
    "lonormaly": "+1 Please fix this - vendor.css / main.css...\n. ",
    "bezoerb": "Thanx\n. Isn't on npm yet\n. +1\n. submitted a quickfix for uncss\n. Yes, i'm doing so ;)\nThis problem can be reproduced when scaffolding an app using generator-frontend-php and selecting sass and foundation (it's the only combination this error exists)\nHere are the files: https://gist.github.com/bezoerb/119d882c5590f7562aa2\nThanks\n. Seems this bug is fixed in master.\nI'll check again when npm version is released\n. yepp, all fine.\nThanks!\n. PR dropped in #50 \n. @giakki: Thanx for the notification.\n. you're welcome\n. ",
    "tomByrer": "\nif you'd like to file a PR\n\nThanks!  I looked at the source before, but was confused with a few things:\n- test/uncss_test.js seemed empty??\n- What in /app needs changing?\ncheers\n. Remember the README :)\nWhen I did the Gulp task, I wound up opening every file to see where there was 'compress'.\n. Welcome.  I did the same thing; submitting after changing only 1 file.  Then I remembered there was more than one file in the repo :)\n. ",
    "shmulim": "Hi @sedovsek,\nUnfortunately I can't share that without modification because I'm contract bound. Is there one particular part you'd like to share?\nThanks!\n. @sedovsek,\nI get the same error even from the most minimalistic index.html, such as this:\n```\n<!DOCTYPE html>\n\n\n\n build:css docs/tidy.css \n\n\n\n\n\n\n /build \n\n\n\n\n\n\n\n\n\n \n```\n. The only thing that I can think of is that in one of my stylesheets I'm pulling in a background from cloudinary using a url, but I don't have any http selectors \"proper\". I also have base64 in my CSS. That could be throwing off the parser. I don't know...\n. ",
    "toranb": "Looks like an issue on OSX 10.9 w/ phantomjs\nhttps://github.com/ariya/phantomjs/issues/11612\n. ",
    "veeracs": "I got the same issue.\nRunning \"uncss:dist\" (uncss) task\n2014-01-08 13:36:32.788 phantomjs[22592:707] *** WARNING: Method userSpaceScaleFactor in class NSView is deprecated on 10.7 and later. It should not be used in new applications. Use convertRectToBacking: instead.\n. ",
    "eliperelman": "Will do.\n. Everything looks great! Thanks everyone.\n. ",
    "chriswrightdesign": "It looks like in the try catch block the done(); has been moved.\nThe new one\nuncss(src, options, function (output) {\n                    grunt.file.write(f.dest, output);\n                    done();\n                });\nthe previous (one that works with no error for me)\nuncss(src, options, function (output) {\n                    grunt.file.write(f.dest, output);\n                });\n                done();\nMoving it fixed the error. \n. ",
    "pawelmhm": "I get this error when I add \"stylesheets\" options, uncss.js (version 0.1.6). Runs fine if I remove stylsheet array.\nThis configuration returns error mentioned above:\nuncss: {\n        dist: {\n            files: {\n                'build/css/style.css':['src/search_box.html', 'src/results.html']\n            }\n        },\n         options: {\n            ignore:[\"#linkToTaburl\",\".searchResultsTemplate\",\".page-header\",\".results\",\".result-item\"],\n            stylesheets: [\"src/lib/css/bootstrap.min.css\",\"src/lib/css/customize_bootstrap.css\"]\n        } \n    },\nBut this with commented stylesheets works ok:\nuncss: {\n        dist: {\n            files: {\n                'build/css/style.css':['src/search_box.html', 'src/results.html']\n            }\n        },\n         options: {\n            ignore:[\"#linkToTaburl\",\".searchResultsTemplate\",\".page-header\",\".results\",\".result-item\"] \n           /* stylesheets: [\"src/lib/css/bootstrap.min.css\",\"src/lib/css/customize_bootstrap.css\"] */\n        } \n    },\nUPDATE:\nafter some bug hunting I've found that exception is generated by css.parse,  line 215, in my setup this has the following path:\n/home/pawel/js/searcher/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse\n. ",
    "rubenstolk": "cssrazor was just a simple trial that I wrote in an afternoon, I looked at\nuncss before but I thought it wasn't using phantom, that's why I started\nthis project. I'll have a more detailed look at both projects and see if\nthere is still anything brilliant in my project, otherwise I'll close it.\n\nBR, Ruben Stolk\n+919561050034     +31646118037\nOn Jan 12, 2014 3:44 PM, \"Addy Osmani\" notifications@github.com wrote:\n\nHi! This is the first time I've come across grunt-cssrazor but it does\nindeed appear we're trying to solve the same problems :) I'd love to play\naround with your project a little to see how you're handling some of the\nsame problems.\nIn the case of grunt-uncss, we're a wrapper around uncsshttps://github.com/giakki/uncssand work closely with the author to report issues, feature requests and so\non. With the core logic being in a separate node module, other tools like\nGulp can also reuse whats there and we've found this works well so far.\nHave you had a chance to play around with this task? Would love your\nfeedback on it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/addyosmani/grunt-uncss/issues/35#issuecomment-32119248\n.\n. \n",
    "noahgrant": "I was just about to mention the same thing; for use with dynamic loading templates, I assume we'll need to create SEO-like .html files with our templates pre-loaded?\n. ",
    "ghost": "Hey @addyosmani, here is the Gruntfile https://github.com/ossreleasefeed/dxr/blob/nobug-start-grunt-integration/Gruntfile.js Thanks!\n. Seems like the release has happened, any update on it being used here?\n. @ariya My bad, I thought this was the one this was depending on: https://github.com/ariya/phantomjs/releases/tag/1.9.3\n. It was on 0.1.7, but I'll try again once more just to make sure.\n. I'm getting this still as of version 0.1.7\n/Users/simovate/Documents/current/sn-globe/node_modules/grunt-contrib-compass/node_modules/tmp/lib/tmp.js:261\n  throw err;\n    ^\nmapReadFiles Error: could not find: /Users/simovate/Documents/current/sn-globe/app/netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css\n. Thanks for the quick turnaround!\n. ",
    "ukeboyska": "great thanks!\n. especially since i can't get the stylesheets option to work.. ? keep on getting this error: \nFatel error: missing '{' near line 1:26\nanyone know why? i only get that error if i include the stylesheets option, and i have no idea what line 1:26 might be or what file it's referring to?\n\n\n. i would say that works great except also automatically process media=\"screen\" because that is the most used media attribute, and the best practice for sites these days - since it's always good to at least separate screen from print. also the biggest stylesheet on a site is usually media=\"screen,\" so it benefits the most from uncss. \n. here's a stripped down version of my environment: https://www.dropbox.com/s/aq2utuvymc5dwxm/uncss-test.zip \nto reiterate, i tested it before the latest pull and it seemed to be working fine except for html files that were too big (that bug was fixed) and the stylesheets option (that seems to have also been fixed). however, now the uncss stylesheet is half the size of what it was previously, and it's missing important styles. \nnote: the changes i made to my stylesheet in between tests is negligible. simple style updates here and there - nothing that would affect overall style structure, etc.\n. @addyosmani updating to the newest version there are 3 main changes:\n1. the uncss task is noticably longer. on my project it clocked in at a whopping 2 minutes. i don't remember it ever taking more than 20 seconds before this last update...\n2. my screen.un.css is now at its expected size again -- 72kb again, which is good!\n3. pretty much all the CSS works perfectly except for hovers in my navigation unless i put in some special ignore options. for example, class=\"hoverable\" is in the HTML file, but none of the .hoverable declerations get included in the un.css file unless i put \"ignore: [/hoverable/,\" in the options. note: i did not have to \"hack\" it to fix it in earlier versions.\noverall: definitely happier, but something still seems a little fishy! also the whole 2 minute task thing dissuades me from integrating this into general workflow...\nthanks guys!\n. @giakki .. since i'm using compass/sass/grunt to compile, it's impossible for the stylesheet to be invalid. \ncan you help me figure out how to find line 1:28445? i'm not sure how to interpret that...\n. hey the problem was filter: ;  \ni was using a plugin's sass file (jquery textshadow), and it has an if statement that returns an empty filter value under certain conditions. i just added another if statement around it, and that helped!\nworks now! thanks again for your help\n. ",
    "Samstiles": "+1 to adding an option to ignore print (and other media queries potentially?)\n. ",
    "XhmikosR": "Can we get this in? I hit the same issue myself.\nThanks!\n. Actually #42 supersedes this one.\n. I am using 0.1.7. I tried all the options I could think of.\nIf I do\nuncss: {\n            dist: {\n                files: {\n                    \"_site/assets/css/tidy.css\": [\"_site/**/*.html\"]\n                }\n            },\n            options: {\n                csspath: \"_site/assets/css\"\n            }\n        },\nI end up with a zero byte tidy.css.\n. @giakki: With 0.7.5 and this\njs\n        uncss: {\n            options: {\n                stylesheets: \"<%= concat_css.dist.dest %>\"\n                //csspath: \"<%= dirs.dest %>/assets/css/\"\n            },\n            dist: {\n                src: \"<%= dirs.dest %>/**/*.html\",\n                dest: \"<%= dirs.dest %>/assets/css/tidy.css\"\n            }\n        },\nI get\n```\nRunning \"uncss:dist\" (uncss) task\nC:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-jekyll\\node_modules\\tmp\\lib\\tmp.js:261\n  throw err;\n        ^\nTypeError: Object _site/assets/css/pack.css has no method 'map'\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\lib\\uncss.js:47:24\n    at Array.map (native)\n    at uncss (C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modu\nles\\uncss\\lib\\uncss.js:46:35)\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\lib\\uncss.js:179:17\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\node_modules\\async\\lib\\async.js:232:13\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\node_modules\\async\\lib\\async.js:119:25\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\node_modules\\async\\lib\\async.js:24:16\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\node_modules\\async\\lib\\async.js:229:17\n    at C:\\Users\\xmr\\Desktop\\mpc-hc.org\\node_modules\\grunt-uncss\\node_modules\\unc\nss\\lib\\lib.js:43:16\n    at ChildProcess.exithandler (child_process.js:635:7)\n```\nRemember you can get my source from here to test for yourself if you need to.\n. @giakki: Thanks for your time looking into this.\nA root option should make things better I believe.\nMy Gruntfile is as good as it will get for the time being, but due to a bug in grunt-concat-css the remaining CSS has URLs paths wrong. (ref https://github.com/webdoc/grunt-concat-css/issues/2)\nI will check again later, but I really hope uncss becomes more usable :)\n@addyosmani: there is no info shown in CLI when the output file is created. Perhaps you could follow what other plugins do? And maybe add support for report option?\nExample:\nRunning \"uglify:minify\" (uglify) task\nFile _site/assets/js/pack-dbb420eb7577c34c00f9d3a3c21c985aa1b3c32b.js created.\nOriginal: 68357 bytes.\nMinified: 30387 bytes.\n. Awesome, thanks! Any chance you use the same color scheme the other plugins use? Example  https://travis-ci.org/mpc-hc/mpc-hc.org/builds/17590145\n. And I tried uncss from master and I didn't see any report... I was like why :P\nDoes your patch add support to show the filepath too? Like this one.\nThanks for the patches @sedovsek!\n. Untested but from looking at the patch it seems it's exactly what I meant. Thanks!\n. I will close the issue here; it was wrong from the beginning since it was an upstream issue :)\n. @giakki: using v0.1.7 with uncss v0.7.4 I confirm this issue.\nI get\nUnCSS:could not open C:\\Users\\xmr\\Desktop\\mpc-hc.org\\_site\\2012\\06\\21\\welcome-to-the-new-website\\_site\\assets\\css\\fonts.googleapis.com\\css?family=Open+Sans:400,400italic,700\nI load the fonts using the protocol relative URL.\n. @sedovsek: the PR is still not right... You need to rebase and squash the patches.\nAs for minMaxInfo I do believe we should use existent code if possible. We should also use chalk for coloring the CLI output.\n. I mentioned chalk for other stuff like the filename output.\nIt's not my call, I'm not a grunt-uncss maintainer :)\n. @sedovsek: git rebase -i upstream/master assuming you have added this repo as upstream.\n. Does this still happen with 0.5.2?\n. As you can see more and more modules drop support for node 0.8. Might be wise to publish one last release for 0.8 and then bump the minor version to update the dependencies and drop support for 0.8.\n. @addyosmani: Ping. This needs to be merged asap; the module is unusable.\n. No worries, just came upon this since I use the package myself :)\nI'll rebase and update the other PR and wait for your feedback about node.js 0.8.\n. So you agree with merging this and make a 0.3.0 release?\nI already rebased the branch :)\n. No hurry, just test the changes yourself too, to make sure everything works as expected :)\n. @addyosmani: I think after uncss 0.8 is out, you should bump the dep and make a new release with the minor version bumped :)\nSee here for some nice numbers :)\n. Yeah, I pinged him too but he said he'll do it today :)\nhttps://github.com/giakki/uncss/issues/35#issuecomment-38338653\n. @addyosmani: 0.8.0 is published on npm, can you merge this and publish 0.3.0?\n. No problem,\u00a0 glad I helped.\nPS.\u00a0 Don't forget to publish 0.3.0 to npm. \n. This is fixed @addyosmani \n. @karol-f: please provide a complete test case including the uncssrc file in order for us to test.\n. OK, confirmed.\n. @addyosmani: we basically don't calculate right the src bytes. I'll try to solve this unless you beat me to it :)\nhttps://github.com/addyosmani/grunt-uncss/blob/master/tasks/uncss.js#L48 report here is unused\nhttps://github.com/addyosmani/grunt-uncss/blob/master/tasks/uncss.js#L55 report.original is undefined; this is what we need to fix so that we use the original CSS files.\n. After, looking into this closely, it's not our fault per se. We use uncss' report.original to get the original CSS as a string, which we pass to maxmin.\nNow, it seems there's a conflict with the report option grunt-uncss has, because if I run\nnode bin\\uncss -u .uncssrc http://getbootstrap.com/examples/jumbotron/ > stylesheet.css\nwith the same .uncssrc file it works fine.\n/CC @giakki @addyosmani \n. Fixed upstream in https://github.com/giakki/uncss/commit/f1946df931bd56af9bd1d8f6951d30dc7516a91e.\nWe'll make a new release after we have a new uncss release with the fix (although it's not really needed if it's a minor version bump).\n. This isn't implemented in uncss itself. It's not related to grunt-uncss.\n. No idea, you should report such issues upstream and not here...\nhttps://github.com/giakki/uncss/issues\n. This should be an upstream request, we support whatever uncss does.. This is what I use myself and works fine.  https://github.com/mpc-hc/mpc-hc.org/blob/master/Gruntfile.js#L70\n. Well, it works fine and you can see that in action in http://mpc-hc.org/.\nuncss does not preserve CSS added via JS hence my workaround.\n. Something is wrong cause I use the same procedure myself and works fine. Have a look here, maybe it will help you figure out the issue.\n. Cool, then you can close the issue :)\n. Yeah it should be possible. Try experimenting with http://regex101.com/\n. The regex seems wrong. Either way that's not an issue with grunt-uncss per se...\n. Why are you even using index.js? It should be index.html.\n. Then you will need to provide the minimum files for others to reproduce the issue.\n. Weird, I'm don't have this issue in any of my machines. What OS are you people using?\n. IMO this should be implemented upstream. This project is just a wrapper for uncss.\n. @addyosmani: maybe we should make that grunt.fatal.warn?\n. IMO, uncss should always come before the final minifcation. Especially if you are using clean-css which does some fancy stuff.\nIn one of my projects I do this personally:\njs\n grunt.registerTask(\"build\", [\n  \"clean\",\n  \"jekyll\",\n  \"useminPrepare\",\n  \"copy\",\n  \"concat\",\n  \"uncss\",\n  \"cssmin\",\n  \"uglify\",\n  \"filerev\",\n  \"usemin\",\n  \"htmlmin\"\n]);\n. @addyosmani: sounds good, yeah. Maybe in a section named \"Suggested workflow\" or something?\n. Yeah, exactly that :)\n@giakki might be away but until then uncss and any module that's using it is broken...\n. I meant lock the uncss dependency to \"0.8.1\" in package.json until the issues are sorted upstream.\nA couple of references\nhttps://github.com/giakki/uncss/commit/b651c3aceb290667d424a2e444f48246397035b8#commitcomment-6872047\nhttps://github.com/giakki/uncss/commit/db7415a8a4c6ed5a831b3b6a09cfe15802f2333d#commitcomment-6879800\nhttps://github.com/giakki/uncss/issues/76\nAlso, Travis clearly fails too even for uncss' own tests.\n. @addyosmani: bump\n. Thanks! Don't forget to tag and publish the new version \u263a\nOn Jul 6, 2014 3:09 PM, \"Addy Osmani\" notifications@github.com wrote:\n\nLGTM\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/pull/111#issuecomment-48110282\n.\n. Thanks!\n. Closing as upstream issue. Feel free to ask there for more info.\n. I don't think you need sudo BTW. And if you do, something isn't right on your end.\n. Closing since it works fine for everyone else. Feel free to post more info if you still have this issue.\n. @addyosmani: I'll check the latest version, but I fear updating uncss to be honest... I mean, I don't see issues I have reported a lot of months ago even being touched yet.\n\n1) https://github.com/giakki/uncss/issues/31 which is relevant to an issue you recently closed about classes added with JS being removed\n2) a constant warning with Travis CI (which is there for like 6 months), an example is this  https://travis-ci.org/mpc-hc/mpc-hc.org#L289\n3) Most important issue @addyosmani that isn't fixed is  https://github.com/giakki/uncss/commit/db7415a8a4c6ed5a831b3b6a09cfe15802f2333d#commitcomment-6879800. It makes uncss unusable on Windows and it's present in 0.9.0 too...\n. Issues opened upstream  https://github.com/giakki/uncss/issues/97 and https://github.com/giakki/uncss/issues/98.\n. @addyosmani: bump\nBTW, I wouldn't mind having push rights if you agree :)\n. Thanks!\n. @addyosmani: feel free to cut a 0.3.7 release :)\n. Plus the navbar toggle doesn't work since those classes are added via JS :)\nI'll leave the tests redesign to you, I only offered to remove the test app :P\n. @addyosmani: I was still looking at the way we handle failures. I think this approach is the best  https://github.com/gruntjs/grunt-contrib-htmlmin/blob/master/tasks/htmlmin.js#L22\nAs for this change itself, it seems weird to me. I mean, I have never seen any other plugin use that...\n. The problem here is not new. I mean, I've seen discussions about this in other official grunt contrib plugins. The opinions varied. To me, it doesn't make any sense to allow failures at all. If the source is missing, the task should fail in all cases. I guess it's because to me, that's part of the continuous integration.\n. @addyosmani: I personally do like using strings for one item instead of an array. What I'm worried is using yet another dependency like lodash to do this. Unless you want to add a couple of functions ourselves to do the checks, but it's like reinventing the wheel I guess :)\n. @sigo: I guess you could ask upstream if they want to change the behavior then.\n. /CC @giakki\n. Closing for now. We stick to what upstream is using.\nIf you are interested in changing this, please make a pull request and CC me.\n. Please ask upstream for more help.\n. This is an upstream issue, it seems. You should report it there.\n. @khalwat: can you make a small complete test case which we can use to reproduce the issue?\n. We really need a test case for this.\n. This shouldn't happen with the latest release.\n. @addyosmani: I think here  https://ci.appveyor.com/team\n. It seems user isn't enough; I can't change any settings nor see the badge code :/\n. @addyosmani ping\n. Thanks! I updated the badge code, everything should be OK from now on.\n. Next build should be faster with caching being used.\n. @addyosmani: I'm think we should just remove the UnCSS options from this README; it doesn't make a lot of sense to duplicate it when we can just link to it.\n. Will be done when it's done, be patient.\n. Trust me, I want as much as everyone else to update UnCSS; I'm personally trying to get this done. Unfortunately, there are still many issues to be solved with newer UnCSS hence the wait.\n. Try setting up the htmlRoot option right.\n. I don't use templates so I have no idea about that, sorry.\n. @addyosmani: See https://github.com/addyosmani/grunt-uncss/issues/145#issuecomment-68162725 too. IMO we should remove the UnCSS' options from our README and link to the upstream README.\nOnly downside is with the current situation we use a much older UnCSS version thus the options in the upstream readme might differ.\n. You should share the project or a minimum test case we can use to reproduce this.\n. @DavidCWebs: is the slowdown with all versions or with 0.4.x? Because UnCSS got slower recently, so in that case try grunt-uncss v0.3.8.\n. I guess if you try with 0.4.x the needed time will be 2x :P\n. Closing this since if it's still an issue, it's an upstream one.\n. True, but I plan to merge this along with the new version anyway.\nBTW, @giakki the best would be https://github.com/giakki/uncss/blob/0.8.1/README.md#within-node but as you know those tags are missing :/\nAnyway, it's not a big deal since this will go along with the update.\n. Yeah, I'm waiting for the next stable to test and then update and finally merge this.\n/CC @giakki: any ETA?\n. Thanks @giakki. I did one last test and just updated to 0.12.\n. Have a look here.\n. Publish your source code somewhere or the minimum test case I can use to reproduce. It works fine for me and hundreds other so it seems like a user error to me.\n. I haven't got the time to try your repo yet. I'll try to do it later today.\nOn Jan 12, 2015 11:18 PM, \"Oleh Zasadnyy\" notifications@github.com wrote:\n\nHello @XhmikosR https://github.com/XhmikosR ! Sorry to bother you. Have\nyou looked to my code?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/issues/151#issuecomment-69647848\n.\n. @ozasadnyy: seems to work fine on my dev VM\n\n```\nC:\\Users\\xmr\\Desktop\\v-zasadnyy-com>grunt build\nRunning \"clean:server\" (clean) task\n\n\n2 paths cleaned.\n\n\nRunning \"clean:dist\" (clean) task\n\n\n0 paths cleaned.\n\n\nRunning \"jekyll:dist\" (jekyll) task\njekyll build --source app --destination dist/ --config _config.yml,_config.buil\nd.yml was initiated.\nJekyll output:\nConfiguration file: _config.yml\nConfiguration file: _config.build.yml\n            Source: app\n       Destination: dist/\n      Generating...\n                    done.\n Auto-regeneration: disabled. Use --watch to enable.\nRunning \"imagemin:posts\" (imagemin) task\nMinified 22 images (saved 48 B)\nRunning \"imagemin:slides\" (imagemin) task\nMinified 12 images (saved 212.81 kB)\nRunning \"svgmin:dist\" (svgmin) task\nTotal saved: 0 B\nRunning \"sass:dist\" (sass) task\nRunning \"uncss:dist\" (uncss) task\nFile .tmp//css/blog.css created: 40.74 kB \u2192 18.8 kB\nRunning \"autoprefixer:default\" (autoprefixer) task\nFile .tmp/css/blog.css created.\nRunning \"critical:dist\" (critical) task\nFile \"dist/2013/01/cyrillic-app-name-incorrectly-encoded.html\" created.\nFile \"dist/2012/10/action-bar-sherlok-maven-eclipse.html\" created.\nFile \"dist/2013/08/android-form-validation-right-way.html\" created.\nFile \"dist/index.html\" created.\nFile \"dist/404.html\" created.\nFile \"dist/projects/index.html\" created.\nFile \"dist/slides/index.html\" created.\nFile \"dist/page2/index.html\" created.\nFile \"dist/blog/how-to-make-unity-work-better-on-maverick/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-1-reserved-folders/index.html\" created.\nFile \"dist/blog/cyrillic-app-name-incorrectly-encoded/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-0-vcs/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-2-assets-organiza\ntion/index.html\" created.\nFile \"dist/blog/best-test-devices-for-game-development/index.html\" created.\nFile \"dist/blog/abs-maven-eclipse-integration/index.html\" created.\nFile \"dist/blog/android-form-validation-right-way/index.html\" created.\nRunning \"useminPrepare:html\" (useminPrepare) task\nConfiguration changed for concat, uglify, cssmin\nRunning \"usemin:html\" (usemin) task\nReplaced 16 references to assets\nRunning \"usemin:css\" (usemin) task\nReplaced 0 references to assets\nRunning \"cssmin:dist\" (cssmin) task\nRunning \"htmlmin:dist\" (htmlmin) task\nMinified dist/2012/10/action-bar-sherlok-maven-eclipse.html 440 B \u2192 375 B\nMinified dist/2013/01/cyrillic-app-name-incorrectly-encoded.html 472 B \u2192 407 B\nMinified dist/2013/08/android-form-validation-right-way.html 456 B \u2192 391 B\nMinified dist/404.html 12.41 kB \u2192 10.76 kB\nMinified dist/blog/abs-maven-eclipse-integration/index.html 41.44 kB \u2192 38.3 kB\nMinified dist/blog/android-form-validation-right-way/index.html 30.67 kB \u2192 27.68 kB\nMinified dist/blog/best-test-devices-for-game-development/index.html 19.88 kB \u2192 17.43 kB\nMinified dist/blog/cyrillic-app-name-incorrectly-encoded/index.html 20.46 kB \u2192 18.04 kB\nMinified dist/blog/how-to-make-unity-work-better-on-maverick/index.html 19.29 kB \u2192 16.86 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-0-vcs/index.html 26.86 kB \u2192 24.14 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-1-reserved-folders/index.html 23.88 kB \u2192 21.41 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-2-assets-organization/index.html 22.3 kB \u2192 19.86 kB\nMinified dist/index.html 21.05 kB \u2192 16.16 kB\nMinified dist/page2/index.html 18.89 kB \u2192 14.62 kB\nMinified dist/projects/index.html 14.17 kB \u2192 11.46 kB\nMinified dist/slides/index.html 21.32 kB \u2192 16.57 kB\nDone, without errors.\nExecution Time (2015-01-13 16:34:07 UTC)\nloading tasks     2.4s  \u2588\u2588\u2588 6%\njekyll:dist       5.6s  \u2588\u2588\u2588\u2588\u2588\u2588 13%\nimagemin:posts    3.3s  \u2588\u2588\u2588\u2588 8%\nimagemin:slides  829ms  \u2588 2%\nuncss:dist        2.4s  \u2588\u2588\u2588 5%\ncritical:dist    27.9s  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 64%\nhtmlmin:dist     515ms  \u2588 1%\nTotal 43.5s\n`\n. That I don't know. But since it works for me, and my dev VM is using Windows, I'd say you need to sort your environment somehow. Try removing all `node_modules`, do `npm cache clean, use the latest stable node.\n. I didn't touch anything; whatever you had in your repo.\n. @ozasadnyy: again, it works fine here with grunt-uncss 0.4.0.\n```\nC:\\Users\\xmr\\Desktop\\v-zasadnyy-com>grunt build\nRunning \"clean:server\" (clean) task\n\n\n0 paths cleaned.\n\n\nRunning \"clean:dist\" (clean) task\n\n\n6 paths cleaned.\n\n\nRunning \"jekyll:dist\" (jekyll) task\njekyll build --source app --destination dist/ --config _config.yml,_config.build.yml was initiated.\nJekyll output:\nConfiguration file: _config.yml\nConfiguration file: _config.build.yml\n            Source: app\n       Destination: dist/\n      Generating...\n                    done.\n Auto-regeneration: disabled. Use --watch to enable.\nRunning \"imagemin:posts\" (imagemin) task\nMinified 22 images (saved 48 B)\nRunning \"imagemin:slides\" (imagemin) task\nMinified 12 images (saved 212.81 kB)\nRunning \"svgmin:dist\" (svgmin) task\nTotal saved: 0 B\nRunning \"sass:dist\" (sass) task\nRunning \"uncss:dist\" (uncss) task\nFile .tmp//css/blog.css created: 40.78 kB \u2192 18.84 kB\nRunning \"autoprefixer:default\" (autoprefixer) task\nFile .tmp/css/blog.css created.\nRunning \"critical:dist\" (critical) task\nFile \"dist/2013/01/cyrillic-app-name-incorrectly-encoded.html\" created.\nFile \"dist/2012/10/action-bar-sherlok-maven-eclipse.html\" created.\nFile \"dist/2013/08/android-form-validation-right-way.html\" created.\nFile \"dist/blog/tag/blackberry/index.html\" created.\nFile \"dist/404.html\" created.\nFile \"dist/blog/tag/unity3d/index.html\" created.\nFile \"dist/blog/tag/best practices/index.html\" created.\nFile \"dist/blog/tag/eclipse/index.html\" created.\nFile \"dist/projects/index.html\" created.\nFile \"dist/blog/how-to-make-unity-work-better-on-maverick/index.html\" created.\nFile \"dist/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-1-reserved-folders/index.html\" created.\nFile \"dist/page2/index.html\" created.\nFile \"dist/blog/tag/android/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-2-assets-organization/index.html\" created.\nFile \"dist/blog/android-form-validation-right-way/index.html\" created.\nFile \"dist/blog/mastering-unity-project-folder-structure-level-0-vcs/index.html\" created.\nFile \"dist/blog/best-test-devices-for-game-development/index.html\" created.\nFile \"dist/blog/cyrillic-app-name-incorrectly-encoded/index.html\" created.\nFile \"dist/blog/abs-maven-eclipse-integration/index.html\" created.\nFile \"dist/blog/tag/maven/index.html\" created.\nFile \"dist/slides/index.html\" created.\nFile \"dist/blog/tag/productivity/index.html\" created.\nFile \"dist/blog/tag/bug/index.html\" created.\nRunning \"useminPrepare:html\" (useminPrepare) task\nConfiguration changed for concat, uglify, cssmin\nRunning \"usemin:html\" (usemin) task\nReplaced 24 references to assets\nRunning \"usemin:css\" (usemin) task\nReplaced 0 references to assets\nRunning \"cssmin:dist\" (cssmin) task\nRunning \"htmlmin:dist\" (htmlmin) task\nMinified dist/2012/10/action-bar-sherlok-maven-eclipse.html 440 B \u2192 375 B\nMinified dist/2013/01/cyrillic-app-name-incorrectly-encoded.html 472 B \u2192 407 B\nMinified dist/2013/08/android-form-validation-right-way.html 456 B \u2192 391 B\nMinified dist/404.html 12.44 kB \u2192 10.79 kB\nMinified dist/blog/abs-maven-eclipse-integration/index.html 41.5 kB \u2192 38.36 kB\nMinified dist/blog/android-form-validation-right-way/index.html 30.74 kB \u2192 27.75 kB\nMinified dist/blog/best-test-devices-for-game-development/index.html 19.91 kB \u2192 17.46 kB\nMinified dist/blog/cyrillic-app-name-incorrectly-encoded/index.html 20.53 kB \u2192 18.1 kB\nMinified dist/blog/how-to-make-unity-work-better-on-maverick/index.html 19.35 kB \u2192 16.92 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-0-vcs/index.html 26.89 kB \u2192 24.17 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-1-reserved-folders/index.html 24.61 kB \u2192 22.1 kB\nMinified dist/blog/mastering-unity-project-folder-structure-level-2-assets-organization/index.html 22.33 kB \u2192 19.89 kB\nMinified dist/blog/tag/android/index.html 14.69 kB \u2192 12.29 kB\nMinified dist/blog/tag/best practices/index.html 13.57 kB \u2192 11.53 kB\nMinified dist/blog/tag/blackberry/index.html 13.57 kB \u2192 11.53 kB\nMinified dist/blog/tag/bug/index.html 13.53 kB \u2192 11.48 kB\nMinified dist/blog/tag/eclipse/index.html 13.6 kB \u2192 11.51 kB\nMinified dist/blog/tag/maven/index.html 13.59 kB \u2192 11.5 kB\nMinified dist/blog/tag/productivity/index.html 13.57 kB \u2192 11.53 kB\nMinified dist/blog/tag/unity3d/index.html 17.73 kB \u2192 14.64 kB\nMinified dist/index.html 20.66 kB \u2192 16.44 kB\nMinified dist/page2/index.html 18.77 kB \u2192 14.95 kB\nMinified dist/projects/index.html 14.17 kB \u2192 11.46 kB\nMinified dist/slides/index.html 21.32 kB \u2192 16.57 kB\nDone, without errors.\nExecution Time (2015-01-26 19:51:10 UTC)\njekyll:dist                      5.6s  \u2588\u2588\u2588\u2588 13%\nloading grunt-contrib-imagemin   1.5s  \u2588\u2588 4%\nimagemin:posts                     3s  \u2588\u2588\u2588 7%\nimagemin:slides                 782ms  \u2588 2%\nuncss:dist                       2.3s  \u2588\u2588 6%\ncritical:dist                   26.5s  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 63%\nhtmlmin:dist                    688ms  \u2588 2%\nTotal 42.1s\n```\n. Sorry, you need to figure this out yourself. Yeoman and co are nice but nothing beats doing things manually when it comes to troubleshooting.\n. Just don't use a separate tmp dir... Override the output CSS and use it in the next step.\n. This is an upstream issue, if it can be called an issue.\n. This is an upstream limitation...\n. @luixxiul: this is a bug upstream and I have reported it since day 1 of 0.12 to @giakki but feel free to open an issue upstream.\n. This should be asked upstream.\n. That's an upstream issue.\nTry using absolute paths in script and link tags.\n. Try using absolute paths like /foo/bar.js.\nOn Feb 14, 2015 10:31 PM, \"jnchapman\" notifications@github.com wrote:\n\nI get the same error. Please can you unpack the cause of the error, this\nmight help us work around it.\nI have a single reference to the css bootstrap file in each of my 3 html\nfiles (validated html files)\nError\nrunning \"uncss:dist\" (uncss) task\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:32\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:119\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:137\nFatal error: UnCSS: could not open /css\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/issues/156#issuecomment-74390763\n.\n. CC @giakki\n. This is an upstream issue.\n. Protocol relative URLs work fine here.\n. https://github.com/addyosmani/grunt-uncss/issues/156#issuecomment-74390881\n. The ignore accepts regexes so make sure they are valid. Either way, this is an upstream issue.\n. Try with uncss itself; this sounds like an upstream issue.\n. That is why I told you to try with uncss itself. In v0.3.8 we updated uncss.\n. https://github.com/giakki/uncss#from-the-command-line\n\nAnd try to replicate your config. My guess is it will fail too. Also, make sure you use /foo/bar.js and not foo/bar.js since uncss has problems with that.\n. It's an upstream issue, @giakki is aware of it, not sure when he will be able to have a look.\n. This is an upstream issue; you should ask in the uncss repository.\n. Upstream issue; report it there.\n. Seems like an upstream issue then; report it there.\n. We don't make any source maps. Another plugin is to blame here.\n. @kluvi: please squash the patches.\n. /CC @addyosmani \n. This seems like an upstream issue. Please ask there.\n. Is this still an issue with the latest version?\n. @addyosmani: After reading through http://gruntjs.com/api/inside-tasks#this.files it seems this is the right approach to iterate over this.files.\nWe need to double test it works though.\n. LGTM since tests pass.\n@yconoclast: please rebase and remove the gitignore patch completely.\n. @yconoclast: that is not a rebase.\n. @addyosmani: I restarted the AppVeyor build and it's passing fine. I'll leave it to you for the final decision but as far as I can tell the patch makes sense.\nPersonally, I'd like to use tilde for the async dependency for consistency.\n. https://github.com/addyosmani/grunt-uncss/issues/179\n. If anyone makes this to work again, please make a PR with the doc changes to add in our README.md.\n. I don't see how this can be related to grunt-uncss. It's an upstream issue so try reporting it there.\n. You are not supposed to remove the trailing spaces from markdown; it means a line break.\n. Please ask for this upstream.\n. Does this still happen with 0.5.2+?\n. Closing due to lack of reply and a repo to reproduce the issue.\n. Just use the ignore option properly; it accepts regex.\nSo this should work\njs\nignore: [\n  /\\.active/\n]\n. Landed in master, thanks!\n. You can use the tag until @addyosmani publishes v0.5.2 on npm. I don't have the needed rights on npm to do it myself :/\n. https://github.com/addyosmani/grunt-uncss/issues/142\n. No need for a new issue. I have already pinged @addyosmani.\n. If this is an issue, it's an an upstream issue.\n. Upstream means uncss itself.\n. Nope, sorry. You should ask upstream for this feature.\n. This isn't an issue with grunt-uncss. Try uncss but judging from the crash it's phantomJS that's crashing so you should report the issue there.\n. Does this happen  with uncss itself? If not it would help if you could\nprovide a small test repository and even see when this started to break.\nOn Apr 25, 2017 20:12, \"romanlelek\" notifications@github.com wrote:\n\nHello, is there any update on this issue? I am having the same problem.\nThank you.\nBest regards,\nRoman\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/issues/195#issuecomment-297100870,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAVVtS2bzgPpFcRG7wMSJkBhVYyldL4Uks5rzimHgaJpZM4KaJAF\n.\n. Well if it happens with uncss itself you will need to report it there. If\nnot I can try looking into it bit 1 I don't have Mac and 2 I need a test\nrepo.\n\nOn Apr 25, 2017 23:18, \"romanlelek\" notifications@github.com wrote:\n\nWell, I use only grunt-uncss, but I assume that the same problem will be\nwit uncss itself.\nAs far as I remember, it started to break after updating from El Capitan\nto Sierra.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/addyosmani/grunt-uncss/issues/195#issuecomment-297152318,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAVVtYem315Ew-5IbJjMGErHDqv6o3MWks5rzlUOgaJpZM4KaJAF\n.\n. This should be reported upstream.. 1. this can't be an issue with grunt-uncss; we don't directly depend to phantomjs\n2. CI tests are passing: https://travis-ci.org/addyosmani/grunt-uncss and https://ci.appveyor.com/project/addyosmani/grunt-uncss/branch/master\n3. You are missing substantial info like your OS, node version and so on\n\nSo that being said you should take this upstream.. If this doesn't work with uncss itself, there are not a lot you can do apart from opening an issue there. So, try that first.. First of all wrap your code into code blocks so it's easier to read your post.\nSecondly, this is an upstream issue and not a grunt-uncss specific one. So please ask there.. Like I said in #200, this is an upstream issue. In order to confirm though, just try using uncss directly.\nOn a side note, I'm not even sure multiple urls are supported as input.. Upstream issue; please report there.. 1000% sure.. Just exclude those selectors. Again, ask upstream for more help, or even better search the upstream issues.. I gave no link... upstream means the UnCSS repo. It's an issue with uncss itself and has nothing to do with grunt-uncss.. Hmm, so it's not an upstream issue after all. I opened https://github.com/giakki/uncss/issues/315 the other day since I didn't have time to investigate more but it seems it's an issue in our tests.\n/CC @mikelambert. v0.4.3 is pretty old. Try using the latest stable node.js version of your choice and the latest grunt-uncss version.. It's not related to this plugin. Something blocks your connect task from connection on port 80. See if there's something else using that port.. As stated in README.md\n\nIssues with the output should be reported on the UnCSS issue tracker.. This has so many unrelated changes in it.. JSHint :)  https://github.com/addyosmani/grunt-uncss/pull/52/files#diff-4d5aa81bf4f18104bb6ea53a8b5d1f43R18\n. A space after if is missing.\n. A missing space here too.. Yup, and it's why I want to switch to ESLint but haven't had the time yet :/\n\nIf you are up to it, feel free to make a PR against master using https://github.com/mpc-hc/mpc-hc.org/blob/master/.eslintrc.json and adapting it.\nThanks!. ",
    "ariya": "@dariusriggins There is no new PhantomJS patch release yet. Please read our issue tracker carefully.\n. 1.9.3 is intended for a tagging only release, probably not relevant for grunt-uncss. Please monitor https://github.com/ariya/phantomjs/issues/11905 for 1.9.6 (with binaries) in the next few days.\n. ",
    "kristoferjoseph": "That fixed it! Thanks.\n. Works with 0.1.8!\nThank you kindly.\n. ",
    "pawansoobhri": "I am not able to fix my error of UnCSS no style sheet found \nuncss: {\n  dist: {\n    files: {\n      'dist/css/tidy.css': ['index.html']\n    }\n  }\n},\n. ",
    "shnigi": "Same error. UnCSS: no stylesheets found as for @pawansoobhri . ",
    "danvoyce": "Hey Addy.\nThanks for getting back to me so quickly. Sorry not had the time to check\nthis out. Had a tight release I had to push yesterday. Hoping I'll have\ntime on Monday to test this when I'm back in the office. Will keep you\nposted.\nCheers!\nOn 24 January 2014 18:40, Addy Osmani notifications@github.com wrote:\n\nping - could you try out 0.1.9 and let me know if this is still an issue?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/addyosmani/grunt-uncss/issues/49#issuecomment-33249014\n.\n. \n",
    "bbyler": "Possible need to reopen: grunt uncss with CDN CSS: \nFatal error: getaddrinfo ENOTFOUND {{cdn_domain}}\nVisiting the link to the CDN CSS works (i.e. CSS exists)\n. ",
    "lt7": "Agreed, this should be reopened see the issue on version 0.5.2\n. Any chance of identifying where upstream so it can be addressed ?\n. ",
    "C-E-Rios": "Thanks for checking. I guess there's something wrong at my end. Will keep trying.\n. ",
    "manjula91": "hey I am facing a problem in my css and i am using minified once.It just takes too long\n. ",
    "thedgbrt": "Awesome thank you, it fixed the issue.\n. ",
    "guillaumevincent": "@giakki you mean You plan to implement the feature into uncss :\nhttps://github.com/giakki/uncss/issues/51\nyou add a gulp-uncss issue already closed\nMaybe it's good to close all feature in all uncss wrappers and keep only one open in uncss repo.\n. I got the same problem with gulp-uncss \nMaybe a better solution would be to report the problem on uncss tracker ? \njsbin: http://jsbin.com/bunoy/1/edit\n. @XhmikosR your solution doesn't work for me.\n. ",
    "minmur": "Same for me.\n. Debugged a little bit and found that urls in the src are removed or something. Searched info in Grunt's documentation, but didn't find.\nSo made this workaround:\njs\nuncss: {\n    dist: {\n        files: {\n            'tiny.css': ['index.html']\n        },\n        options: {\n            urls: ['{someurl}']\n        }\n    }\n}\nWhere index.html is just an empty html file. Works as charm. Tried urls ending with .html, .php, .aspx\n. grunt-uncss 0.2.2 with grunt 0.4.4.\n. ",
    "guilambert": "grunt-uncss 0.2.0 with grunt 0.4.2 \n. @addyosmani Well I'm getting this now instead, so I'm guessing it works fine, I just have to fix the CSS error in there ;)\nFatal error: uncss/node_modules/css: missing '{' near line 2906:1\n. ",
    "dstrunk": "Throwing in for more updated version info (@minmur 's solution worked):\ngrunt-uncss 0.3.3 with grunt 0.4.2\n. ",
    "t1mmen": "I also ran into this issue. Thankfully @minmur's workaround did the trick.\ngrunt v0.4.2 & grunt-uncss v0.3.5.\n. Thanks Addy, I've filed a new bug at https://github.com/giakki/uncss/issues/77. I'll let you know if this appears to be a grunt-uncss specific issue.\n. I came across this issue in one of my projects too.\nTurned out, the page set in options.urls didn't correctly link to a CSS file (resulting in a 404), and as a result, uncss returned:\nFatal error: uncss/node_modules/css: missing '{' near line 8:1\nHope this helps!\n. ",
    "olivier-w": "I also ran into the same issue with our Angular app, @minmur solution worked for me as well, but I had to set a timeout option.\n. ",
    "kencaron": "Thanks both of you guys!   I now realize I probably should have posted the issue in the main uncss repo.  Anyway, will try to check this evening.\n. ",
    "deanhume": "No problem, Ill commit again. It might be best to close this request. Thanks!\n. I followed @mikelambert instructions and this fixed the issue for me too. For some reason, the PhantomJS install never fully completed on MacOS and needed this nudge to complete it...saved me hours of frustration!\n. ",
    "skezo": "@wadehammes \nDid you manage to resolve this? I am facing a similar issue and I am pretty sure its my own ignorance that is creating the problem.\n. @wadehammes \nI resolved this doing the below. It looks like it was caused by file path issue.\njavascript\nuncss: {\n      dist: {\n        options: {\n          htmlroot: 'tmp',\n          stylesheets: ['style.css'],\n          csspath: '../../css',\n          report: 'min'\n        },\n        files: [\n          {\n            src: ['tmp/**/*{.php,.html}'],\n            dest: 'build/css/style.css'\n          }\n        ]\n      }\n    }\n. ",
    "pagelab": "@wadehammes Thanks, this worked for me\n. ",
    "wadehammes": "I have this working now, sort of. It compiles, but it is stripping all the CSS out now. Separate issue, thanks for the help!\n. ",
    "sethburtonhall": "@wadehammes same for me, css compiles but most of it is not present. Did you open a separate issue?\n. ",
    "ArcaneMainFrame": "This still occurs within the newest version just the error message has changed to Fatal error: bad argument\nI am running it off of Windows 7 32bit if that helps in identifying why the module would fail in such a manner. \n. @bondz  I relatively new to the grunt scene but where exactly did you place this exe file for the plugin to run?  I have tried multiple places with no success. \n. This did not solve it, but I figured it out on my own and it was the most unlikely of things.  I had changed the default path of command line when it opens to C:\\  instead of C:\\Users\\Username in the regedit with an autorun command.  This caused PhantomJS to look into the work places for dependencies.  Changing it back to the default fixed the issue.\n. ",
    "bondz": "Yes, same error running the command in node. \nRunning \"uncss:dist\" (uncss) task\n    Fatal Error: Bad argument\nWindows 8.1 64 bit.\n. Running grunt with debug and stack trace on \ngrunt -d --stack\ngives\n[D] Task source: x\\node_modules\\grunt-uncss\\tasks\\uncss.js\n    Fatal error: Bad argument\nTypeError: Bad argument\n    at ChildProcess.spawn (child_process.js:923:24)\n    at exports.spawn (child_process.js:723:9)\n    at spawnPhantom (x\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\node-phantom-simple\\node-phantom-simple.js:70:23)\n    at Object.exports.create (x\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\node-phantom-simple\\node-phantom-simple.js:201:5)\n    at x\\node_modules\\grunt-uncss\\node_modules\\uncss\\lib\\phantom.js:37:21\n    at Object.async.whilst (x\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\async\\lib\\async.js:663:13)\n    at init (x\\node_modules\\grunt-uncss\\node_modules\\uncs\\li\\phantom.js:34:18)\n    at fn (x\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\async\\lib\\async.js:626:34)\n    at Object._onImmediate (x\\page\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\async\\lib\\async.js:542:34)\n    at processImmediate [as _immediateCallback] (timers.js:330:15)\nSo, I head over to PhantomJS Website downloaded the newest version, put the executable in a directory in path and the gruntfile runs, thanks for the awesome plugin.\n. @ArcaneMainFrame I took the following steps.\n- deleted grunt-uncss from node_modules folder in the same directory as gruntfile.js\n- Placed PhantomJS.exe in the same directory I installed node.exe\n- Reinstalled grunt-uncss\n. @juliencap yes. Then reinstall grunt-uncss. You should see something along the lines of phantomjs already installed. Rewriting path to x:\\nodejs\\phantomjs.exe\n. Copy phantomjs to node path.\nDelete uncss from C:\\wamp\\www\\test\\node_modules\\ directory.\nDelete grunt-uncss from C:\\wamp\\www\\test\\node_modules\\ directory\nRun npm install uncss\nRun npm install grunt-uncss --save-dev\nCheck that C:\\wamp\\www\\test\\node_modules\\grunt-uncss\\node_modules\\uncss\\node_modules\\phantomjs\\lib\\location.js contains \njs\nmodule.exports.location = \"P:\\\\ath\\\\to\\\\PhantomJS\\\\phantomjs.EXE\"\n. Actually, in my node_modules folder, I don't have uncss... The only folder there is grunt-uncss. So, I don't know exactly what might be happening on your machine. I do have uncss in grunt-uncss\\node_modules though.\nSo, maybe try removing the uncss folder from C:\\wamp\\www\\test\\node_modules.\nAlso, might be irrelevant but I don't have node installed in program files, its in a directory without spaces. X:\\node\\\nYou can try that after.\n. ",
    "juliencap": "Hello, I have the same error as above and the same result with grunt -d --stack.\nTried to follow your indications with PhantomJS.exe but not a big success.\nSo my question : phantomjs.exe have to be into the nodejs directory ?\nThanks, I am quit excited to test uncss !\n. Thanks for your help, but no progress.\n\"You should see something along the lines of phantomjs already installed\" not understanding \"along the lines\n\"Rewriting path to x:\\nodejs\\phantomjs.exe\" where I have to do that ?\nThanks for your time !\nEdit : latest report:\nC:\\wamp\\www\\test>grunt -d --stack\nRunning \"clean:tests\" (clean) task\n[D] Task source: C:\\wamp\\www\\test\\node_modules\\grunt-contrib-clean\\tasks\\clean.j\ns\nCleaning dist...OK\nRunning \"copy:dist\" (copy) task\n[D] Task source: C:\\wamp\\www\\test\\node_modules\\grunt-contrib-copy\\tasks\\copy.js\nCreated 3 directories, copied 14 files\nRunning \"uncss:dist\" (uncss) task\n[D] Task source: tasks\\uncss.js\nFatal error: Bad argument\nTypeError: Bad argument\n    at ChildProcess.spawn (child_process.js:923:24)\n    at exports.spawn (child_process.js:723:9)\n    at spawnPhantom (C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\node-phant\nom-simple\\node-phantom-simple.js:70:23)\n    at Object.exports.create (C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\n\node-phantom-simple\\node-phantom-simple.js:201:5)\n    at C:\\wamp\\www\\test\\node_modules\\uncss\\lib\\phantom.js:37:21\n    at Object.async.whilst (C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\asy\nnc\\lib\\async.js:663:13)\n    at init (C:\\wamp\\www\\test\\node_modules\\uncss\\lib\\phantom.js:34:18)\n    at fn (C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\async\\lib\\async.js:6\n26:34)\n    at Object._onImmediate (C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\asy\nnc\\lib\\async.js:542:34)\n    at processImmediate as _immediateCallback\nExecution Time (2014-04-16 19:33:11 UTC)\nloading tasks  1.2s  \u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0 84%\nclean:tests    46ms  \u25a0\u25a0 3%\ncopy:dist      98ms  \u25a0\u25a0\u25a0\u25a0 7%\nuncss:dist     73ms  \u25a0\u25a0\u25a0 5%\nTotal 1.4s\n. Stil me, I tried your last advices, so delete and run again the install seems ok. \nThe fact is on : C:\\wamp\\www\\test\\node_modules\\test\\ \nI dont have location.js file on \n\\node_modules\\uncss\\node_modules\\phantomjs\\libdirectory\n(And when I run grunt I still have the same error as above)\nActually on C:\\wamp\\www\\test\\node_modules\\grunt-uncss I don't have node_modules directory only : \n- tasks (directory)\n- changelog.md\n- License-MIT\n  -package.json\n- README.md\nand i Have phantomjs.exe on : C:\\Program Files\\nodejs\nSo I am probably on total confusion with differents installations !\n. Ok close to the perfection.\nI remove node from program files; installed it on c:\nRemoved unused node_modules on C:\\wamp\\www\\test\\node_modules\nPretty sure my phantomjs on node directory is not executed because my version is 1.9.7.0 (on node directory) and when I run npm install uncss I have at the end of the install that message : \n\nphantom.js@1.9.7-3 install C:\\wamp\\www\\test\\node_modules\\uncss\\node_modules\\phantomjs\nnode install install.js\n\nBut I still not find that location.js file's.\nI installed other grunt modules to test and it was ok. \nThanks again for your time.\n. ",
    "seminice": "I'm having the same issue on mountain lion\nnode 0.12 , 0.11.14 , 0.10.36\nI ran the grunt task in debugging mode , and here is the outcome\nTypeError: Bad argument\n    at TypeError (native)\n    at ChildProcess.spawn (child_process.js:1129:26)\n    at Object.exports.spawn (child_process.js:988:9)\n    at app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/lib/spawn.js:82:38\n    at init (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:39:5)\n    at new Promise (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:27:53)\n    at Function.promise (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/when.js:98:10)\n    at startPhantom (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/lib/spawn.js:58:25)\n    at tryCatchReject (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:845:30)\n    at runContinuation1 (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:804:4)\n    at Fulfilled.when (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:592:4)\n    at Pending.run (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/makePromise.js:483:13)\n    at Scheduler._drain (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/Scheduler.js:62:19)\n    at Scheduler.drain (app/node_modules/grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/when/lib/Scheduler.js:27:9)\n    at process._tickCallback (node.js:355:11)\nI tried placing the phantom binary in the same directory of the Gruntfile but it didn't work too.\nAny help will be really appreciated, and great work anyway.\n. Solved it by editing the location.js file in  /grunt-uncss/node_modules/uncss/node_modules/phridge/node_modules/phantomjs/lib/location.js\nI found out that the file is corrupted or something.\n. ",
    "jikuja": "@seminice :+1: Thanks your tip is nice. I just encountered same problem with global phantomjs installation. If you have idea how to reproduce that please tell or open new bug report in https://github.com/ariya/phantomjs/\n. ",
    "mikelambert": "This appears to be due to a half-completed installation of phantomjs-prebuilt, see this other issue for more info: https://github.com/Medium/phantomjs/issues/533\nIn my case, following these instructions fixed it for me:\n$ cd node_modules/phantomjs-prebuilt\n$ node install.js\n. You probably need to share the relevant bits of your grunt config. (And fixing the formatting above would be nice!)\n. I cannot see where grunt-uncss is actually used/called in the above two configs.\n. Oh awesome, thanks for digging in and finding the fix on this @vseventer !. ",
    "ichabodcole": "Hey Addy, the problem I am running into is that the file created by uncss ends up being called 'vendor.css' and not 'someRevString.vendor.css', which is the file my dest index.html file is looking for after running through usemin. I was able to get around this by excluding the vendor.css file from the rev task, but am just wondering if that is best way to go since now vendor.css may get cached.  Is there any way to produce a uncss file with the same name as the rev'ed vendor.css version? The other thing is that the css that comes out of uncss does not seem to be minified, so I'm guessing I need to run the outputted file back through cssmin. Is that correct?\nBelow is what my uncss config looks like.\njs\n    module.exports = {\n      dist: {\n        options: {\n          stylesheets: ['./bower_components/sass-bootstrap/dist/css/bootstrap.css']\n        },\n        files: {\n          '<%= yeoman.dist %>/styles/vendor.css': ['<%= yeoman.dist %>/index.html']\n        }\n      }\n    }\nWhich produces 'vendor.css'\nBut my index html is looking for the below unless I exclude vendor.css from the rev task. I basically want to know if this is the right path to go down, or if I'm missing something so that the vendor file can keep the rev'ed prefix.\nhtml\n    <link rel=\"stylesheet\" href=\"styles/29403685.vendor.css\">\nLastly there appears to be some missing text in the readme about the csspath option. I wasn't sure if this was a flag that might help with what I'm trying to accomplish.\ncsspath (String): path where the CSS files are related to the html files. By default, UnCSS uses the path specified in the\n. ",
    "rbreslav": "I got this working.  The part that took me a while to get was that I need to perform the uncss task on the compiled css in .tmp/styles, not after it was put into dist\n```\nuncss: {\n      dist: {\n        options: {\n          stylesheets: ['../.tmp/styles/main.css']\n        },\n        files: {\n          '.tmp/styles/main.css': ['app/*/.html']\n        }\n      }\n    }\n```\nwith a task order of\n```\ngrunt.registerTask('build', [\n    'clean:dist',\n    'bowerInstall',\n    'useminPrepare',\n    'concurrent:dist',\n    'autoprefixer',\n    'concat',\n    'uncss',\n    'cssmin',\n    'ngmin',\n    'cdnify',\n    'uglify',\n    'copy:dist',\n    'rev',\n    'usemin',\n    'htmlmin'\n  ]);\n```\n. @rossthedevigner - yes it is, technically a single css file compiled from multiple scss files, but I think that's the same as what you are asking\n. @gustavjf I don't see any cssmin options in your gruntfile\nmine looks like\n```\n    // The following *-min tasks produce minified files in the dist folder\n    cssmin: {\n      options: {\n        root: '<%= yeoman.app %>'\n      }\n    },\nimagemin: {\n  dist: {\n    files: [{\n      expand: true,\n      cwd: '<%= yeoman.app %>/images',\n      src: '**/*.{png,jpg,jpeg,gif}',\n      dest: '<%= yeoman.dist %>/images'\n    }]\n  }\n},\n\n```\nno idea if that's the problem but it's a difference I see.  You may have to swtich yeoman. to config.\n. ",
    "rossthedevigner": "This was the biggest stumbling block for me with my yeoman app - running uncss in .tmp first. I assumed I could run it in /dist. I kept getting the following error: Destination not written because src files were empty.\n@rbreslav is your main.css the concat version?\n. ",
    "gustavjf": "@addyosmani Has that sample been published yet by any chance?\n@rbreslav I gave your solution a try, but seems like something goes wrong despite using .tmp. Posted it here: http://stackoverflow.com/questions/24335167/configuring-grunt-uncss-with-yeomans-generator-webapp\n. WOO. I believe I figured it out. Updated with my own answer on stackoverflow.\nRunning grunt in verbose mode helped, for those that might be struggling with a similar issue.\n@rbreslav Thanks, it looks like useminPrepare and usemin replaces cssmin in this particular Gruntfile.\n. ",
    "Michael0x2a": "@seriema - you sure? I tried doing what rbreslav suggested for my website, and I was able to successfully use uncss and usemin together. \nMy uncss and usemin tasks look like this:\nuseminPrepare: {\n  html: '<%= yeoman.dist %>/index.html',\n  options: {\n    dest: '<%= yeoman.dist %>',\n    flow: {\n      html: {\n        steps: {\n          js: ['concat', 'uglifyjs'],\n          css: ['cssmin']\n        },\n        post: {}\n      }\n    }\n  }\n},\nusemin: {\n  options: {\n    assetsDirs: ['<%= yeoman.dist %>', '<%= yeoman.dist %>/_assets']\n  },\n  html: ['<%= yeoman.dist %>/**/*.html'],\n  css: ['<%= yeoman.dist %>/_assets/css/**/*.css']\n},\nuncss: {\n  dist: {\n    options: {\n      csspath: '../.tmp',\n      stylesheets: ['../.tmp/_assets/css/main.css']\n    },\n    files: {\n      '.tmp/_assets/css/main.css': ['<%= yeoman.dist %>/**/*.html']\n    }\n  }\n}\nAnd set up my build task like so:\njavascript\ngrunt.registerTask('build', [\n    'clean',\n    'jekyll:dist',\n    'wiredep',\n    'concurrent:dist',\n    'useminPrepare',\n    'concat',\n    'autoprefixer:dist',\n    'uncss',\n    'cssmin',\n    'uglify',\n    'imagemin',\n    'svgmin',\n    'filerev',\n    'usemin',\n    'replace:dist',\n    'htmlmin'\n    ]);\nThe resulting CSS is de-bloated, minified, revved, and correctly referenced in my HTML. So it's definitely possible -- it's just very finicky to get right.\n. At least for me, the solution involved tinkering with a combination of the csspath and stylesheets options. For example, my grunt file was set up so that when uncss was running, my HTML files were inside dist and my CSS file was located at .tmp/_assets/css/main.css.\nThen, I setup uncss like so:\nuncss: {\n  dist: {\n    options: {\n      csspath: '../.tmp',\n      stylesheets: ['../.tmp/_assets/css/main.css']\n    },\n    files: {\n      '.tmp/_assets/css/main.css': ['<%= yeoman.dist %>/**/*.html']\n    }\n  }\n}\nI'm still a little hazy on exactly what uncss is doing, but hopefully this is useful.\n. ",
    "davidemoro": "@Michael0x2a: confirmed, it works fine! I've applied uncss to a generator-webapp project and I had to adjust the assets path. \nIt helped me also running grunt with --verbose.\nNot bad, thank you guys :)\n```\nRunning \"uncss:dist\" (uncss) task\n...\nFile .tmp/concat/styles/vendor.css created: 122.85 kB \u2192 4.42 kB\nRunning \"cssmin:generated\" (cssmin) task\n...\nFile dist/styles/vendor.css created: 4.42 kB \u2192 3.3 kB\n```\n. @addyosmani I've just configured generator-webapp and generator-angular based projects with uncss without any problem but I didn't get involved into the \"Fix Url problem in Source List\" issue.\nLet me know how can I help you!\n. Hi @Sly777, I get this build error using urls instead of paths:\nFatal error: uncss/node_modules/css: missing '{' near line 10:1\n     ->\nI've changed my configuration like this:\nfiles: {\n-          '.tmp/concat/styles/main.css': ['<%= yeoman.dist %>/index.html', '<%= yeoman.dist %>/views/main.html', '<%= yeoman.dist %>/views/searchbycode.html']\n+          '.tmp/concat/styles/main.css': ['http://localhost:8000/index.html', 'http://localhost:8000/views/main.html', 'http://localhost:8000/views/searchbycode.html']\n         }\n. ",
    "Azeirah": "I have the exact same error.\nuncss: {\n    dist: {\n        files: {\n            'css/dist/tidy.css': ['index.html']\n        }\n    }\n}\n. ",
    "JeremyCarlsten": "That sounds a lot like the error you and I talked about addy, I haven't had the chance to verify though, I'll look into it and get back to you.\n. Are you seeing a lot of something similar to this? \n(node) warning: Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral.\n(node) warning: Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral.\nI'm honestly not sure what causes it, I just know I have seen the error a few times when I add new tasks to grunt. \n. ",
    "VidalQuevedo": "Had the same problem. Adding the option to output a report did fix it, as @LeBenLeBen suggested.\n. ",
    "karol-f": "@addyosmani Bug still exist if you use 'uncssrc' without 'report' flag. Regards.\n. @XhmikosR Sure, here you are:\nUnCSS tasks definition\njs\noptions: {\n        uncssrc: '.uncssrc'\n    },\n    dist: {\n        files: {\n            'output/style.min.css': ['web/cont/**/*.html']\n        }\n    }\nNot working with this .uncssrc\njson\n{\n    \"htmlroot\": \"web/cont\",\n    \"ignore\": [\n        \"/.somerule/\",\n    ]\n}\nWorking with this .uncssrc (added  \"report\": \"min\")\njson\n{\n    \"htmlroot\": \"web/cont\",\n    \"report\": \"min\",\n    \"ignore\": [\n        \"/.somerule/\",\n    ]\n}\nIf you need more info please let me know. Regards.\n. ",
    "andreavaghi": "i've tried the solution suggested in issue #66 and now it works.\n. ",
    "khusseini": "I have the same issue. From my understanding from several blogposts uncss is supposed to load files using phantomjs and execute javascript in the HTML files. For some reason this does not happen on my side\n. ",
    "srhise": "Well can we work to identify the dependency and input am issue there? Is it\nwith phantomJS?\nOn Saturday, April 19, 2014, XhmikosR notifications@github.com wrote:\n\nThis isn't implemented in uncss itself. It's not related to grunt-uncss.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/addyosmani/grunt-uncss/issues/81#issuecomment-40872690\n.\n\n\nSent from Mobile. Please excuse the brevity of my message.\n. ",
    "mbritton": "I'm having a similar problem with uncss not parsing inline templates in script tags. It's also not grabbing classes from a generated template at runtime.\n. ",
    "RosemanJ": "I, too, am receiving the same error. Same node version, slightly different directory structure. I tried chmod but to no avail.\nWhen you say \"based on the directory you're working against\" do you mean (as per zafar-saleem's example above) \"app\", \"dist\", \"dist/css\" or the root from which the grunt task is being called?\n. ",
    "zafar-saleem": "Got late to reply because of traveling. @addyosmani If you mean I should execute sudo chmod -R a+rwx  dist then my dist folder created using Grunfile.js. Below is my Gruntfile.js code\n```\nmodule.exports = function (grunt) {\n    grunt.initConfig({\njshint: {\n    options: {\n        jshintrc: '.jshintrc'\n    },\n    target: {\n        src: 'src/js/**/*.js'\n    }\n},\n\ncsslint: {\n    options: {\n        csslintrc: '.csslintrc'\n    },\n    target: {\n        src: 'src/css/**/*.css'\n    }\n},\n\ncopy: {\n    dist: {\n        cwd: 'src/', expand: true, src: '**', dest: 'dist/'\n    }\n},\n\nconcat: {\n    options: {\n        // separator: ';'\n    },\n    target: {\n        src: ['dist/js/jquery.js', 'dist/js/**/*.js'], // make sure jquery is loaded first\n        dest: 'dist/js/compiled.js'\n    }\n},\n\nuglify: {\n    options: {\n        mangle: true,\n        compress: true,\n        banner: '/* Test banner */\\n'\n    },\n    target: {\n        src: 'dist/js/compiled.js',\n        dest: 'dist/scripts/compiled.min.js'\n    }\n},\n\nuncss: {\n    dist: {\n        files: [\n            { src: 'src/*.html', dest: 'dist/css/compiled.min.css' }\n        ]\n    }\n},\n\ncssmin: {\n    options: {\n        // banner: '/* My minified css file */'\n    },\n    target: {\n        src: 'dist/css/*.css',\n        dest: 'dist/styles/compiled.min.css'\n    }\n},\n\n// Deletes all .js files, but skips min.js files\nclean: ['dist/js/', 'dist/css/'],\n\nprocesshtml: {\n    dist: {\n        files: {\n            'dist/index.html': ['src/index.html']\n        }\n    }\n}\n\n});\ngrunt.loadNpmTasks('grunt-contrib-jshint');\ngrunt.loadNpmTasks('grunt-contrib-csslint');\ngrunt.loadNpmTasks('grunt-contrib-copy');\ngrunt.loadNpmTasks('grunt-contrib-concat');\ngrunt.loadNpmTasks('grunt-contrib-uglify');\ngrunt.loadNpmTasks('grunt-contrib-cssmin');\ngrunt.loadNpmTasks('grunt-processhtml');\ngrunt.loadNpmTasks('grunt-contrib-clean');\ngrunt.loadNpmTasks('grunt-uncss');\ngrunt.registerTask('default', ['uncss', 'csslint', 'copy', 'concat', 'uglify', 'cssmin', 'clean', 'processhtml']);\n}\n```\nEven when created dist folder and using chmod command on it, it still gives same error.\n. I found a solution for this. I ran \"sudo grunt\" instead of \"grunt\" and it worked.\n. Does my solution work for you @RosemanJ  and @JoernT? If yes then I will close this issue.\n. ",
    "JoernT": "Same problem here - tried all variations of rights adaption but problem persists. Funny thing is that it works in a sibling directory from which i initially copied the project.\n. My problem vanished after deleting all node_modules and redoing a 'sudo npm install' - so yes, does not seem to be an issue in uncss\n. ",
    "icyflame": "@addyosmani \nI have this same problem. Currently, I am simply using uncss to target development/dist/*.html, and get the compressed CSS file.\nError:\nshell\nRunning \"uncss:dist\" (uncss) task\nexecvp(): Permission denied\nFatal error: spawn EACCES\n. ping @addyosmani \nThe above error still persists. I have tried the chmod command you suggested above. uncss alone does work. But, it does not work inside grunt.\n. ",
    "heygema": "this is funny @JoernT I did the exact same thing you did, and It works !\n. ",
    "ashkarrrahman": "@addyosmani , you saved my time.\nThanks . ",
    "danielppereira": "+1\nDoes grunt-uncss support other extensions, like .php ?\nDoes grunt-uncsssupport Globbing patterns, for search through multiple files, like @booleanbetrayal did ?\n. ",
    "derrickroccka": "Thanks @JeremyCarlsten but I've not seen that kind of warning :(\n@addyosmani Sure!\nNode version: 0.10.24\nOS: Mac OS 10.9.2\ngrunt-uncss: 0.3.2 (I've tried with lower versions but instead of an error my console got blocked)\ngrunt: 0.4.1\nFeel free to check the repository: https://github.com/derrickroccka/omg\nThank you for answering so fast :+1: \n. Thank you @giakki !!!\n. Thank you guys! Now it seems to be working! At least, there's no error :+1: \n. ",
    "cameronlowry": "I am experiencing the same problem. I am also running uncss on an AngularJS project with Foundation 5.\nNode v0.10.26\nWindows 8.1\ngrunt-uncss 0.3.2\ngrunt 0.4.4\nI have one css file and one html file (as you would expect with angular).\nWhen I remove 'a certain amount of css' from my css I don't get the error.\nThere seems to be a certain threshold that breaks it.\n'a certain amount of css' - for example removing glyphicons fixes the problem, removing half my overrides also fixed the problem.\nuncss: {\n            dist: {\n                files: {\n                    'build/css/tidy.css': ['build/index.html','build/views//.html','build/views/.html']\n                },\n                options: {\n                    report: 'gzip'\n                }\n            }\n        },\n. Brilliant, this is working.\n. ",
    "shawnhaigh": "Solved, by properly configuring my gruntfile , thanks :+1: \n. Heh!  SOLVED  by adding an ignoreSheets in the config ...  :\n...\nignoreSheets: [\n            'http://c1.tacdn.com/css2/widget/cdswidFRR-v1250510475a.css'\n          ]\n...\nhope this help anyone else stumbling upon this issue. Cheers!\n. ",
    "rarkins": "Hi Addy, it does make sense and I considered it. The challenge was that some of the CSS in graphs.css relies on CSS in global, so it's hard to create a charts page which skips the global.css include. Even creating a \"style guide\" page has the same challenge because even if it could be done without dependency problems, the \"style guide\" would actually look terrible due to the missing global.css. Perhaps I'll look for a CSS \"diff\" tool which lets me take the uncss ouputs of graphs.css and global.css and then export a graphs-diff.css which only contains CSS which isn't already in global.css.\n. ",
    "Sawtaytoes": "I am having trouble finding a place to request features. Could you direct\nme?\nOn Fri, Apr 11, 2014 at 8:08 PM, Addy Osmani notifications@github.comwrote:\n\nClosed #89 https://github.com/addyosmani/grunt-uncss/issues/89.\n\nReply to this email directly or view it on GitHubhttps://github.com/addyosmani/grunt-uncss/issues/89\n.\n. This was a mistake. What really happened is compass wasn't compiling out new CSS files because there were no changes made.\n. \n",
    "Designer023": "I have tried your suggestion, however I must be doing it wrong as it either ignores all my or none of it. If you could advise further that would be great. My rule is:\nuncss: {\n  dist: {\n    options: {\n      ignore: [/[\\.js-]{3,4}[a-z0-9\\-_]*/g]\n    },\n    files: {\n      '../dist/static/css/style.css': ['../dist/index.html']\n    }\n  }\n}\n. Very true. I'll figure this out. Might as well close this ticket! Thanks\n. Finally figured it out. For reference:\nignore: [/.js-?\\S*/]\n. I's like to see this as an options also.\n. ",
    "newjs": "We run html2js grunt task to generate one .js file.\nI also just tried to use index.html, encountered the same issue. \n. ",
    "ionox0": "I'm still having the above issue, using version 0.3.6\n. ",
    "shrpne": "node 0.10.28\ngrunt-uncss 0.3.6\nhaving this issue\n. I think it is grunt's problem: http://gruntjs.com/frequently-asked-questions#why-am-i-getting-a-maximum-call-stack-size-exceeded-error\nDon't register tasks with same name as regular tasks. \nIn my case it helped.\n. ",
    "santbob": "@giakki  i have a similar problem, can you help with a sample \n. I figured out the answers after some digging and trying.\n1. yes Dust is supported.\n2. yes can use csspath and stylesheets options.\nHere is my configuration.\njavascript\nuncss: {\n   dist: {\n        options: {\n            csspath: '../../../.build/css/',\n            stylesheets: ['app.css'],\n            report: 'min'\n        },\n        files: {\n            '.build/css/apptidy.css': ['.build/dustjs/templates/**/*.dust']\n        }\n    }\n }\nalthough it is processing dust files, the result is buggy. i will wait for a response to start using uncss in my project. \n. Thanks @addyosmani  for the reply.\nThe dust includes dynamic css and partials and the html is rendered by client side templating. The final CSS is missing most of the used classes although all of them (missing classes in the final uncss output) are not dynamic. I can understand the classes missing for dynamic ones, i can put them in the ignore list. \nOur applications are big and we are trying to reuse lots of the same code from other applications we have, reducing the CSS will give a huge benefit, but coz of missing class definitions i put the cleanup project on hold for now\nappreciate the help.\n. ",
    "sunpietro": "If there is any newer version I will update it. As far as I know there's only 0.3.3\n. ok, I see. But in npm repo there's still 0.3.3\n. I didn't change anything to me. Still the same error is appearing.\n. ",
    "jenbuzz": "Did you name your task \"uncss\". For some reason that won't work. Check out the issue I reported with the same error: https://github.com/addyosmani/grunt-uncss/issues/100\n. Installing grunt-uncss using \"npm install grunt-uncss --save-dev\" will install version 0.3.3. I tried setting the version number like this: \"npm install grunt-uncss@0.3.4 --save-dev\" but it fails because it can't find that version.\nI see the tag \"0.3.4\" here on Github. Could someone please update the package @ npm?\n. Thanks for updating the npm package to v0.3.4. I also updated grunt to v0.4.5. I'm however still getting the error above. Any ideas?\n. I changed the name of my grunt task and it works now. Very strange indeed. Thank you!\n. Hey @boushley - I'm still loading the task as usual. But in the registerTask I changed the name of the task. \nLike this: grunt.registerTask('removecss', ['uncss']);\nI got the error message when I called the task 'uncss'. For some reason changing that to 'removecss' fixed it.\n. Hey @addyosmani - here's the part of my Gruntfile that has to do with grunt-unss\ninitConfig:\nuncss: {\n  dist: {\n    files: {\n      'css/uncss.css': ['templates/index.tpl', 'templates/item.tpl', 'templates/login.tpl', 'templates/pagination.tpl']\n    }\n  }\n}\ngrunt.loadNpmTasks('grunt-uncss');\ngrunt.registerTask('removecss', ['uncss']);\n. ",
    "boushley": "I am seeing this error with 0.3.4\n. It appears to be a problem with a dependency of uncss. I've created an issue here: https://github.com/giakki/uncss/issues/76\n. Another workaround to this would be to lock to a specific version of uncss for the time being. If the grunt-uncss dependencies were updated to have \"uncss\": \"0.8.1\" instead of \"uncss\": \"~0.8.1\" the problem would be resolved from grunt-uncss's perspective, at least for the time being.\nIf you want a PR for that let me know, but I assume the overhead of a PR is too much for such a minor change.\n. Also for anyone else having this problem you can work around it by manually getting a good copy of node_modules and then using https://www.npmjs.org/doc/cli/npm-shrinkwrap.html to lock all versions.\n. @yumyo @dan-lyn What do you mean \"changed the name of your grunt task\"? Are you not using grunt.loadNpmTasks('grunt-uncss')? I'm seeing the same error, but I'm not sure what you mean by naming your task something different. Are you defining another task with registerTask called uncss?\n. ",
    "yumyo": "same here : (\n. ... quite strange but \"what's the name of your grunt task?\"\nI've previously named my task \"uncss\", changing it to a different name solved the \"Maximum call stack size exceeded\" error  ...\n. ",
    "gkeiser": "It appears registering the task  this way (with the key the same as the value) causes an infinite loop, telling the task to run itself.  This is specific to Grunt, not grunt-uncss. http://stackoverflow.com/questions/18510722/gruntjs-concat-dont-work-maximum-call-stack-size-exceeded\n. ",
    "deepaksisodiya": "I finally figured out a similar problem I was having with spell. I was using\ngrunt.registerTask('spell', [ 'spell']);\nThe trick was that Grunt doesn't seem to like the repetition in names. When I switch to\ngrunt.registerTask('spellCheck', [ 'spell']);\nEverything worked as it should.\nmay this help you\n. ",
    "kildareflare": "I had the same problem with a stackoverflow and dan-lyn fix worked for me.\n. ",
    "stefanjudis": "Ahh okay. Great!\nThanks for quick reply. :)\nWill close. ;)\n. ",
    "thomaswelton": "Yes my original wording was misleading. I'd have this as an option rather than the default.\n. ",
    "korthjp17": "Could be a nice option to have, especially if there are a lot of pages to go through\n. ",
    "timelf123": "I'd find this useful as an option too\n. ",
    "almeric": "+1\n. ",
    "khalwat": "+1\nIn the interim, here's how to do it manually:\nhttp://www.gladdy.uk/blog/2014/04/13/using-uncss-and-grunt-uncss-with-wordpress/\n. Here's a super-simplified variant I tried as well, which results in the same error:\njs\nuncss: {\n    dist: {\n        files: {\n            'public/css/site.tidy.min.css': ['build/html/index.html']\n        }\n    },\n},\n...spits out:\nWarning: Object build/html/index.html has no method 'forEach' Use --force to continue\n...same with this:\njs\nuncss: {\n    dist: {\n        files: {\n            'public/css/site.tidy.min.css': 'build/html/index.html',\n        },\n    },\n},\n???\n. Just to test my sanity, I installed phantom and unss globally via npm, and uncss works fine from the command line:\nuncss build/html/*.html -H /htdocs/public > build/css/site.stripped.css\nso I don't think it's an \"upstream\" problem or a problem with my source files\n. ",
    "vfhrr": "+1\n. ",
    "vanhoofmaarten": "+1\n. ",
    "dbig": "Node version is v0.10.28, running on Mac OS X 10.6.8\nThanks\n. I have updated to OS X 10.8.5 - problem solved.\n. ",
    "franz-josef-kaiser": "I tend to stay away from writing docs that aren't for my own projects as I'm no native speaker. But thanks for trusting me on that one - you would regret it ;)\n. ",
    "sparanoid": "I just create a fork of this repo doing the exact same thing, but does focus on processing the inline CSS only: https://github.com/sparanoid/grunt-uncss-inline\nThis plugin do the following things:\n1. Search all <style> tags and combine all the inline CSS into one in the searching order.\n2. Pass combined inline CSS to uncss for the cleanup.\n3. Save cleaned CSS to the first <style> found in the DOM.\n4. Remove all other deprecated <style> tags.\nAny comment and suggestion are welcome.\n. ",
    "ludder": "Hi, I'm using uncss with Assemble. I just build the HTML files first and then run uncss on those generated files. That works fine for me.\n. ",
    "matt-tyas": "Me too. Works well.\n. Will do. Thank you for your help. It seems obvious I should have posted there in the first place now you've mentioned it.\n. ",
    "cdowdy": "Deleted! I didn't fully read! I'll move along now haha I mentored usemin and well I CAN'T BRAIN TODAY\n. Add the .outdatedbrowser class to the ignore option in uncss\n. Ha yeah sorry for being so short I was on my phone and hit comment before I finished writing it all out! \n. ",
    "ismay": "@cdowdy \nYes I have. Actually, that's exactly why I'm suggesting this. I'm using grunt-filerev and grunt-usemin, but since I'm not able to predict what the revved css` filename will be, I have to include uncss in the usemin queue before the css is revved:\nyaml\n  - 'useminPrepare:html'\n  - 'concat'\n  - 'uncss:dist'\n  - 'cssmin'\n  - 'uglify'\n  - 'filerev'\n  - 'usemin:html'\nMy suggested config style would mean that that is no longer necessary. With such a config you could also run grunt-uncss after your css has been revved, since it could resolve the revved css filename from the html (and would output it to that same filename).\nAlso, the current style of configuration for uncss means that whenever I add another css file to my html, I have to add it to the uncss config manually. It would be better if uncss could resolve the css targets from the html by itself, since that requires less manual configuration and thus will be less prone to breaking.\n. @cdowdy Ok :), np! \nBtw, dont mean to be pedantic, but maybe do a strikethrough or a new comment instead of deleting your comment next time. Now people don't know what I responded to (cdowdy asked whether I was already using usemin and filerev).\n. ",
    "kevinhikaruevans": "+1!\nWould be really helpful.\n. ",
    "amboy00": "That said, ~30kB is pretty amazing.\nhttp://cl.ly/image/0c0R1v0I241n\n. This is part of the grunt build process, so I commented out all the other steps.  I still get the error.  So I went back to a previous version \u2013 0.3.5 \u2013 and ran it again.  This time it worked without error!  Then I went from the latest tag version and worked back until it worked and the latest version to work without error is 0.3.8.\nI'm not sure what the difference would be in this case.\n. Sure thing. I assumes you meant just with grunt since it a grunt package.  How do I run it by itself?\n. When I use the shell script to run this, I still get the error I got before, but with a bit more information.  I did run into that problem of making the initial CSS file relative and not absolute like you mentioned.\n``` bash\n$ ./node_modules/grunt-uncss/node_modules/uncss/bin/uncss app/index.html dest/styles/main.css\n/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/async.js:36\n        fn = function () { throw arg; };\n                                 ^\nError: uncss/node_modules/css: unable to parse http://use.typekit.net/c/8e186a/1w;aw-conqueror-carved-four,2,XzC:P:n4;aw-conqueror-carved-one,2,Xz8:P:n4;ff-tisa-web-pro,2,Vdl:P:i4,Vdk:P:n4,Vdp:P:n7/k?3bb2a6e53c9684ffdc9a9bf71f5b2a623df248a4a1ae63c3259906d27e337db8088990e037ff15fa5219533470fc94a4fb850d98f7454d4a1b61526f720ce022c5d27e978632b20c719ca4fbca254b2394a3a66362c622cb9920f77239a24b167d3e03eb454e0214e2e78d6486aa3de5f4b45b :\nmissing '{' near line 13:1\n    8:          \n    9:          \n    10:             403 - Forbidden\n    11:         \n    12:        \n    13:     -> \nat error (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:57:15)\nat declarations (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:214:25)\nat rule (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:481:21)\nat rules (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:103:56)\nat stylesheet (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:73:16)\nat Object.module.exports [as parse] (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/css/node_modules/css-parse/index.js:485:10)\nat process (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/src/uncss.js:158:22)\nat tryCatcher (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/util.js:24:31)\nat Promise._settlePromiseFromHandler (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/promise.js:452:31)\nat Promise._settlePromiseAt (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/promise.js:530:18)\nat Promise._settlePromises (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/promise.js:646:14)\nat Async._drainQueue (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/async.js:79:16)\nat Async._drainQueues (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/async.js:89:10)\nat Async.drainQueues (/Users/chriswilliams/sites/yo-site/node_modules/grunt-uncss/node_modules/uncss/node_modules/bluebird/js/main/async.js:14:14)\nat process._tickCallback (node.js:415:13)\n\n```\n. ",
    "mattsugihara": "@orest22 Not certain this will solve this issue, but try adding ':hover' to your ignore array.\nFrom the readme:\n\nstyles added by user interaction with the page (hover, click)...are not detectable by UnCSS yet\n. \n",
    "marfalkov": "@orest22 @mtsugi \nTake a look on the foundation dropdown source to see what classes you have to add to the ignore array.\nhttps://github.com/zurb/foundation/blob/master/js/foundation/foundation.dropdown.js\n. @Samirbekaert see: https://github.com/addyosmani/grunt-uncss/issues/116\n. ",
    "imolorhe": ":+1: \n. ",
    "Sly777": "hi @davidemoro! The problem had been getting when you write url only for sources. \nFor example; (before this fix, uncss was giving error)\nuncss: {\n      dist: {\n        src: [\n          'http://localhost/views/mainpage.cshtml',\n          'http://localhost/views/login.cshtml',\n          'http://localhost/views/test.cshtml'\n        ],\n        dest: '<%= staticWebFolder %>/styles/<%= filename %>.css',\n        options: {\n          report: 'min',\n          ignore: [\n            /(\\.bx-)+/,\n            /(\\.affix)+/,\n            /(\\.active)+/,\n            /(\\.sticky)+/\n          ]\n        }\n      }\n    }\n. ",
    "r1987": "Hey,\nHad a similiar problem. Try to comment out any CDN's you have in your header. (jquery, modernizr \u2026). Somehow if some cdn's are included between the script tags, it doesn't uncss the files.\n. ",
    "phunkb": "Ive tried your fix;\n<head>\n<meta name=\"google-site-verification\" content=\"w-V-BaUD37ZwZ7GlrmpIEsEnK13XYNJrjqvbpEqS5zI\" />\n<meta name=\"description\" content=\"kieron, kieronboz, web, web designer, louth, uk\" />\n<meta name=\"keywords\" content=\"kieron, kieronboz, web, web designer, louth, uk\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"css/styles.css\" />\n<link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700|Lobster|Hammersmith+One' rel='stylesheet' type='text/css' />\n<title>Kieronboz - Web designer.Louth</title>\n\nIt looks like that now- i did have a jquery link in there, but css still coming in at 2.54kb which is less than it ought to be! hmm. thanks :-)\n. Hi that would work- only im only trying to optimize one sheet haha. Doing that would leave me with no optimization :dancer: \n. ",
    "cybercussion": "Seems like ignoreSheets doesn't include the un-tampered CSS at all.  Is that correct?  So merge it using another tool or is it suppose to include it?\n. ",
    "moodyroto": "One other note, I seem to be running into issues when files is greater than one.\njavascript\nuncss: {\n    dist: {\n        files: [\n            {\n                dest: \"./client-scripts/styles/home.css\",\n                src: \"http://localhost:54404/Home/Index\",\n                nonull: true\n            },\n            {\n                dest: \"./client-scripts/styles/login.css\", \n                src: \"http://localhost:54404/Account/Login\",\n                nonull: true\n            }\n        ]\n    }\n}\nThis will occasionally work fine, but more often than not, yields:\n```\n\n\nSource file \"http://localhost:54404/Home/Index\" not found.\nSource file \"http://localhost:54404/Account/Login\" not found.\nFile ./client-scripts/styles/home.css created: 13.35 kB \u2192 13.35 kB\nRequest() error evaluating open() call: Error: read ECONNRESET\n```\n\n\nI suspect the issues lies here, but is obviously outside the scope of this.\nA simple fix was to change my grunt file to:\njavascript\nuncss: {\n    home: {\n        files: [\n            {\n                dest: \"./client-scripts/styles/home.css\",\n                src: \"http://localhost:54404/Home/Index\",\n                nonull: true\n            }\n        ]\n    },\n    login: {\n        files: [\n            {\n                dest: \"./client-scripts/styles/login.css\", \n                src: \"http://localhost:54404/Account/Login\",\n                nonull: true\n            }\n        ]\n    }\n}\nA minor annoyance, but wanted to make everyone aware.\n. ",
    "ottomen": "Yep, that helps. \nMy first grunt plugins order was \u2014 'sass', 'uncss', 'cssmin', 'watch'. Dynamic css selectors where removed in despite of existing regexps and ignore options of uncss. But when i changed the order of the plugins to 'sass', 'cssmin', 'uncss', 'watch' \u2014 all needed selectors where successfully ignored and stayed in stylesheet.\nHere is my Gruntfile.js:\nmodule.exports = function(grunt) {\n    grunt.initConfig({\n        sass: {\n            dist: { \n                options: {\n                    style: 'expanded'\n                },\n                files: {\n                    'project/css/style.css': 'project/vendor/stylesheets/bootstrap.scss' \n                }\n            }\n        },\n        cssmin: {\n            minify: {\n                expand: true,\n                cwd: 'project/css/',\n                src: ['*.css', '!*.min.css'],\n                dest: 'project/css/',\n                ext: '.min.css'\n            }\n        },\n        uncss: {\n            dist: {\n                options: {\n                    ignore: ['.bootstrap-select.btn-group .dropdown-menu.open', \n                    '.bootstrap-select.btn-group .dropdown-menu.inner', \n                    '.bootstrap-select.btn-group .dropdown-toggle.selectpicker', \n                    '.bootstrap-select.btn-group .dropdown-toggle.selectpicker .caret',\n                    '.selectpicker',\n                    '.bootstrap-select.btn-group .dropdown-menu.dropdown-menu>li>a',\n                    '.open',\n                    '.dropdown-menu.open',\n                    /open.*/,\n                    '.btn-group',\n                    '.inner',\n                    '.bootstrap-select.btn-group .dropdown-menu.inner']\n                },\n                files: {\n                    'project/css/style.min.css': ['project/index.html', 'project/main.html']\n                }\n            }\n        },\n        watch: {\n            files: ['project/vendor/stylesheets/bootstrap/*', 'project/vendor/stylesheets/*'],\n            tasks: ['sass', 'cssmin', 'uncss'],\n        }\n    });\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-sass');\n    grunt.loadNpmTasks('grunt-contrib-cssmin');\n    grunt.loadNpmTasks('grunt-uncss');\n    grunt.registerTask('default', ['sass', 'cssmin', 'uncss', 'watch']);\n};\nAll is working properly.\n. ",
    "igorauad": "@jesusrw did you find a way of doing this? I've just run into the same issue.\n. ",
    "mhenke": "i am curious also cc @meanjs\n. ",
    "joseluisq": "@cdowdy I solved this with ignore option:\njs\nignore: ['.outdatedbrowser']\nThanks for your quickly response!\n. Haha sure thanks anyway. Now I'm working my single app for grunt-uncss task, this is very cool task !\n. ",
    "bobdye": "--no-bin-link makes the errors go away.\n. ",
    "simplesthing": "Same here, I tried using both options.urls and passing in array of urls into files, but neither seem to actually be seeing a rendered version of the app because it is cutting out all nested/specific styles of directive templates that are added at runtime. I would love to see an example of this working on a large angular app that has alot of directives.\n. ",
    "AndyBean": "We use Uncss on our large Angular apps and it works fine, AFTER you add all of the Angular specific and dynamic styles to the ignore sheet. Once a week, though, we forget adn someoen has to add a new style or wildcard to the ignore.\n. ",
    "jtwalters": "Easy fix:\nPatch: Change f.orig.src to f.src.\n. You need to patch the source package with my change above. \n. ",
    "alexdmejias": "Is there a solution to this issue? I'm having the same issue with something as simple as:\njs\n  uncss: {\n      dist: {\n        files: {\n          'css/styles.min.cleaneds.css': ['.tmp/templates/home.html'],\n        }\n      }\n    },\n. ",
    "jgadbois": "+1 I have this same problem @kaze13 can you make your request a pull request then I can use your fork?\n. ",
    "kaze13": "@addyosmani Rebased.\n. ",
    "ben-eb": "@henrjk Might be worth keeping an eye on this issue instead: https://github.com/giakki/uncss/issues/111\n. ",
    "henrjk": "No problem, I'll be patient.\n@ben-eb Thank you for the link.\n. @XhmikosR: Adding to the previous comment:\nit is reassuring to me that you are being deliberate in choosing when to update dependencies.  And I am thankful also that you put so much of your time and energy into pushing this and the upstream forward. \n. ",
    "xxluke": "OK, thank you, that seems to work now with this configuration:\njavascript\nfiles: [{\n    expand: true,\n    cwd: 'dist/',\n    src: 'template/default/{*.php,pages/*/content.php}',\n    dest: 'dist/',\n    rename: function(dest, src) {\n        return dest + src.replace(/pages\\/(.*?)$|([^/]*?)$/, 'tidy.css');\n            // changes destination always to \"dist/template/*/tidy.css\"\n    }\n}],\noptions: {\n    stylesheets: ['/styles.css'],\n    htmlroot: 'dist/template/default'\n}\nBonus question: How to uncss any templates, not just the \"default\" template? (I don't know the names of all templates).\nEdit: I think it's not possible to uncss multiple files without multiple tasks.\n. ",
    "DavidCWebs": "@addyosmani Actually I had options.urls set null, as they're being set dynamically - it's a WordPress site, and I was using Liam Gladdy's method of building a sitemap.json file. Here's a gist of my Gruntfile if it helps:\nhttps://gist.github.com/DavidCWebs/979774ca5b28807744fa \nThe Uncss task runs, though it can take a few minutes!\nSorry I didn't reply to the original commenters...\n. Thanks @XhmikosR - I'm using 0.3.8 on that site. To be fair the site has a ridiculous amount of styles in ~180 pages, so the delay is understandable...\nI just rechecked performance: uncss takes the stylesheet from 256 kB to 107 kB (79 kB after minification) in just under 3 minutes - which I reckon is excellent.\n. ",
    "ozasadnyy": "@XhmikosR unfortunately it doesn't work.\nI have changed my grunt task for this one:\nuncss: {\n            options: {\n                htmlroot: '.jekyll'\n            },\n            dist: {\n                src: '.jekyll/**/*.html',\n                dest: '.tmp/css/main.css'\n            }\n        },\nIn most cases it does not work. Last one gives me next exception:\nRunning \"uncss:dist\" (uncss) task\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating createPage() call: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating createPage() call: Error: read ECONNRESET\nRequest() error evaluating createPage() call: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nError parsing JSON from phantom: SyntaxError: Unexpected end of input\nData from phantom was:\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating setProperty() call: Error: read ECONNRESET\nRequest() error evaluating setProperty() call: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating evaluate() call: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating evaluate() call: Error: read ECONNRESET\nRequest() error evaluating evaluate() call: Error: read ECONNRESET\nFatal error: UnCSS: could not open F:\\development\\web\\site.com\\.jekyll\\css\\main.css\n. @XhmikosR source code is here: https://github.com/zasadnyy-inc/v-zasadnyy-com\n. Hello @XhmikosR ! Sorry to bother you. Have you looked to my code?\n. No problem! Thanks a lot!\n. It's strange. You have no errors at all. Maybe you have any idea how can I deal with it (I'm talking about Error parsing JSON from phantom: SyntaxError: Unexpected end of input\nData from phantom was:\nPoll Request error: Error: read ECONNRESET\nRequest() error evaluating setProperty() call: Error: read ECONNRESET?\n. I guess that I know why it doesn't work. It is because of Windows 10, that is installed on my machine...\nSorry to have disturbed.\n. @XhmikosR after windows update, I don't get an error from Phantom, but I still can't use '.css' that is outside of dist folder (in my example it is .jekyll).\nSo again I want to use .tmp/css/main.css file for uncss task.\n--root\n   Gruntfile.js\n    -- .tmp\n        -- css\n           -- main.css\n    -- .jekyll\n        -- index.html\n        -- folder1\n            -- index2.html\n            -- index3.html\n            -- subfolder1\n                -- index4.html\n        -- folder2\n            -- index5.html\n        ...\nI have tried everything from available configurations: \n- csspath\n- stylesheets\n- htmlroot\nWhich options you have used, when you had run my project?\n. @XhmikosR  It's because I have changed task back to stylesheets: ['../../../.tmp/css/blog.css'], 3 days before you tried it. \nTry this commit or give it up, because it doesn't work.\n. Unfortunately no, just updated to v.0.4.0 and nothing happens.\nFatal error: UnCSS: could not open F:\\development\\web\\v-zasadnyy-com\\dist\\css\\blog.css\nTask config:\nuncss: {\n            options: {\n                htmlroot: '<%= yeoman.dist %>/<%= yeoman.baseurl %>'\n            },\n            dist: {\n                src: '<%= yeoman.dist %>/<%= yeoman.baseurl %>/**/*.html',\n                dest: '.tmp/<%= yeoman.baseurl %>/css/blog.css'\n            }\n        },\n. I just don't understand why this\noptions: {\n                htmlroot: '<%= yeoman.dist %>/<%= yeoman.baseurl %>'\n            },\nshould work? Because my css in a completely different folder:\n--root\n   Gruntfile.js\n    -- .tmp\n        -- css\n           -- main.css\n    -- dist\n        -- index.html\n        ...\n. Yeah, this is the only one solution at this time... Hope you will add support of external .css in next releases.\nThank you for your time!\n. ",
    "jnchapman": "I get the same error. Please can you unpack the cause of the error, this might help us work around it.\nI have a single reference to the css bootstrap file in each of my 3 html files (validated html files)\n\nError\nrunning \"uncss:dist\" (uncss) task\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:32\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:119\nReferenceError: Can't find variable: $\nfile:///home/chapmj/Documents/test6/tests/app/index.html:137\nFatal error: UnCSS: could not open /css\n. ",
    "brunowego": "+1\n. ",
    "kluvi": "Sorry.. first time contributing to other project. Commits squashed, space added.\n. ",
    "thomaswmanion": "Having this too.\n. ",
    "jbhaywood": "I'm getting this when running multiple tasks at once from the default task.  Actually, sometimes it works and sometimes it throws the error.  However, if I run the particular task that contains uncss with multiple files all by itself it works fine every time.  I'm assuming it's some kind of race condition.\n. ",
    "nuragic": "Hi! Same issue here...\n. ",
    "alephyud": "For the time being, I'm using a workaround for this: if there are several files, they are processed in order with async. Submitted it as a pull request https://github.com/addyosmani/grunt-uncss/pull/178 - up to you whether it is needed in the master branch as giakki/uncss#136 is hopefully going to be resolved sooner or later.\n. Thank you for noticing - changed that.\n. ",
    "thedigitalman": "I have the same issue\n. ",
    "Bobu77": "Same issue here for me. Even with html files.\n. ",
    "timbomckay": "Same\n. ",
    "wtchangdm": "I got the same problem, I am using Node.js 4.2.1, npm 2.14.7, grunt 0.4.5.\n. ",
    "gregbriandavis": "+1 for me.\nNo one has solved this yet? I am also on El Capitan.\n. ",
    "morteza-gho": "Hi.\nI solved the problem by change the file type. convert (.php) file to (.html) file.\nafter uncss, delete (.html) file.\n. ",
    "kchez": "Really looking forward to seeing this in action after reading some blogs about it.\nI'm getting the same error but on different file type, cshtml.  I haven't installed PhantomJS as it wasn't included in the README.md as being a required resource.\nAny help would be appreciated.\nCode:\nuncss: {\n  dist: {\n    files: [\n      {\n        src: './Views/**/*.cshtml',\n        dest: './Themes/Styles/css/tidy.css'\n      }\n    ]\n  }\n},\n. ",
    "stavarengo": "+1\n. ",
    "p-j": ":+1:\n. ",
    "jmtavares": "@XhmikosR done ;)\n. sorry @XhmikosR now it's ok?\n. ",
    "jonathanstegall": "Sigh. I was missing a */ in my CSS. I tried using stack and verbose and debug and everything else I could think of, but no messages, and I never realized it until I was reading through my CSS. Sigh.\n. ",
    "craig-joseph-lucas": "Is there a fix or workaround i can use for the meantime \n. ",
    "ereddate": "\u627e\u5230\u539f\u56e0\u4e86\uff0c\u662f\u56e0\u4e3a\u4f60\u7684\u4ee3\u7801\u91cc\u597d\u591aprocess.stdin\u6ca1\u6709\u505a\u662f\u5426\u5b58\u5728\u7684\u5224\u65ad\u3002\u56e0\u4e3aprocess=null\u6216process.stdin == null\u6240\u4ee5\u62a5\u9519\u3002\n. ",
    "RJRandell79": "I have used UnCSS in several Wordpress builds using version 0.4.3 without any issues, works great in fact. However, with 0.4.4 I get the error, 'Warning: Destination (wp-content/themes/rjrstudios/dist/css/rjr_theme.clean.css) not written because src files were empty. Use --force to continue.' The configuration which is the same as previous builds apart from the file dirs is below.\nI used this workflow as a base, https://gladdy.uk/blog/2014/04/13/using-uncss-and-grunt-uncss-with-wordpress/, developing within a local MAMP environment.\nThe UnCSS config in the Gruntfile.js is as follows:\njs\nuncss: {\n    dist: {\n        options: {\n            ignore : ['.hidden-xs'],\n            stylesheets : ['wp-content/themes/rjrstudios/src/css/bootstrap.css', 'wp-content/themes/rjrstudios/src/css/rjr_theme.css'],\n            ignoreSheets : [/fonts.googleapis/],\n            urls : [],\n        },\n        files: {\n            'wp-content/themes/rjrstudios/dist/css/rjr_theme.clean.css': ['http://localhost/RJRStudios/']\n        }\n    }\n},\nThe 'urls' value gets overwritten by load_sitemap_and_uncss task.\n. ",
    "JohnAlbin": "I've tested this and it works great. Took me a while to realize why nonull: true was required for this feature, but it absolutely is. (I'm rather new-ish to Grunt.)\nIn fact, my build fails without this fix, so I'm now using @kfiku's fork until this PR is merged.\n. lol. I guess I should have refreshed this browser tab that I opened yesterday. Thanks @XhmikosR and @kfiku!\n. ",
    "RyanZim": "@addyosmani Dupe of https://github.com/giakki/uncss/issues/260.\n. @valnub Uncss runs the html through PhantomJS, a headless web browser. Any classes added by the JS during the page load will be found by uncss; classes added by user interaction have to be manually ignored using the ignore option.\n. Sorry for the misunderstanding; when you ignore a class, uncss will not remove it, even if it does not find it in the html.\n. @valnub I know; you have to do some work in the developer console to figure it out. If you make an ignore list for a popular framework, please submit it to the uncss wiki so others can use it.\n. ",
    "valnub": "@RyanZim Hi, thanks for your reply. Why should classes added by user interaction be manually ignored? If they're ignored, the styles for those classes would be missing in the stylesheet that cssmin generates, or not?\n. @RyanZim Ah, thanks for clarifying this. But this means, that I have to know all classes which could be potentially triggered by uncss and then manually set them to ignore, right?\nI think this is difficult enough for own code, especially when there is a lot of it, but what about code from 3rd party libs like e.g. Foundation5 or SwiperJS? I don't know which classes could be added via user interaction since I didn't write those libs/frameworks.\n. Alright, thanks for your help, Ryan\n. ",
    "romanlelek": "Ok, no problem, I have added my grunt file too. Little background - in my dist folder I have already created HTML file (in my case e-mail), which is called \"all_transactional.html\" and from uncss I want to remove not used css (e.g. obsolete media queries etc.) and create a file in dist/css/nomediaq.css then I will inline the css and will continue to code my e-mails....\nIs there any chance to see whats really happing inside the running task? e.g. to turn on some logging to see where is the problem? The result is not saying anything - just that the task finished:\n\n(Running \"uncss:dist\" (uncss) task\n[Finished in 65.4s]\n\n. No info about why there is no file created in dist/css...no error message...nothing and I am asking why?\n. Well, it is called through this plugin load-grunt-config (e.g. this row require('load-grunt-config')) - it looks for aliases which I have defined in my file aliases.yaml. It allows me to run more tasks in sequence - for example alias \"process\" consists from assemble, sass, uncss - e.g. when I hit grunt process, it runs those 3 tasks in sequence. But it allows of course run single task too - e.g. grunt uncss or grunt assemble.\nI have just ran grunt uncss --debug --verbose\n(shorted version)\nCommand-line options: --verbose, --debug=1\nReading \"Gruntfile.js\" Gruntfile...OK\nRegistering Gruntfile tasks.\nInitializing config...OK\nRegistering \"grunt-uncss\" local Npm module tasks.\nReading .../node_modules/grunt-uncss/package.json...OK\nParsing .../node_modules/grunt-uncss/package.json...OK\nLoading \"uncss.js\" tasks...OK\n+ uncss\nLoading \"Gruntfile.js\" tasks...OK\nThe grunt-uncss is succesfully loaded (registered), but when I run it, there is no output file. What is the role of PhantomJS there? Is there any for my case? I cant see any system process running PhantomJS.\nFrom my beginner point of view it looks like that there is some uncaught error or exception somewhere around this lines of code (e.g. 48 - 53):\ngrunt.file.write( file.dest, output );\n                    grunt.log.writeln('File ' + chalk.cyan( file.dest ) + ' created: ' + maxmin( report.original, output, options.report === 'gzip' ) );\n                    if (typeof(options.reportFile) !== 'undefined' && options.reportFile.length > 0) {\n                        grunt.file.write(options.reportFile, JSON.stringify(report));\n                    }\n                    done();\nBecause when I run it, it doesn't throw any error to be thrown, but there is no row in log for this row:\ngrunt.log.writeln('File ' + chalk.cyan( file.dest ) + ' created: ' + maxmin( report.original, output, options.report === 'gzip' ) );\n. No idea anyone, so I have just solved it by myself. \nI have noticed that I was using older version than current. The problem was fixed by updating to current 0.6.1\n. Hello, is there any update on this issue? I am having the same problem.\nThank you.\nBest regards,\nRoman . Well, I use only grunt-uncss, but I assume that the same problem will be wit uncss itself. \nAs far as I remember, it started to break after updating from  El Capitan to Sierra. . ",
    "dr-martin": "I have the same problem:\nIn my case (maybe the same situation): PhantomJS PATH is the interruption, the real solution is not the update but with the update the PhahtomJS is re-configurated.. ",
    "therayess": "any help on this please? i'm sure it's been done before but i'm missing the how-to...any feedback is appreciated. thanks. I will try there then, thanks. ",
    "Romkond": "You know, I have no idea what \"upstream issue\" is))... I've tried to run just one URL... it worked. Then two... it worked. Then all of them again... and it also worked. So, IDK what it was.. Commenting this string in /etc/hosts helps:\n127.0.1.1 mysite.com mysite. Let me add the solution. Just need to place the htmlroot. See the slash before the \"assets\": \n<link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/templates/thesite/css/bootstrap.css\" media=\"screen\">. ",
    "Hulk11": "modal already loaded in the footer, just adding show,hide to class elements through angular. Are you sure it  is an upstream issue?. any idea how can it be removed?\nwould be very helpful of yours\n. ",
    "itsmerahul": "I have checked... uncss also removes some classes that are defined in jquery, I have to manually add some selectors in the gruntfile to ignore. Is this still an upstream problem? and also the link you gave to upstream is not working\n. ",
    "pipiscrew": "my fault. ",
    "HugoHeneault": "As you said, updating to latest grunt-uncss fixed the silent fail. \ud83c\udf89 \nThanks! . ",
    "TheThirdRace": "Sorry, I found the problem. I should have used ignoreSheets in the Options block, not the Files block.. ",
    "paulcalabro": "@fabianTMC \nI think I experienced this exact same error. If so, I had to create the tidy.css BEFOREHAND. Once it found what it was looking for... the issue went away.. ",
    "tobek": "Getting file.orig.src.forEach is not a function here, fix in my PR against your repo https://github.com/kfiku/grunt-uncss/pull/1\n. ",
    "vseventer": "My bad - grunt jshint unfortunately doesn't catch these :(. "
}