{
    "elrumordelaluz": "Eric, but for now the class name is just .freez.\nPlease let me know where it doesn't work for you.\n. I think there's a mistake in de docs because the right class is .freez. Where did you found it?\n. Hey Parker, really thanks for your suggests! \nI have to improve my english immediately.\n. Dennis, done!\n. you mean this: http://codepen.io/elrumordelaluz/full/pHKcC?harlem=shake ?\n. Thanks @hugochinchilla @nakosung \n. great!\n. thanks Grant, check it now.\n. cool! @kdimatteo! \n. right, nice catch!\n. merged\n. just bower install csshake, cool!\n. I'll try it.\n. @paparts here I paste all the css, create a span.shake and work well here. Are you using Prefixfree? For now, the package doesn't contains the prefixed animations/transforms. You have to use something like this on the main @\u200bmixin, or Prefixfree, or just visualize in a browser that don't need -prefixes. Unfortunately today we still needing -prefixes for some css stuff.\n. @paparts if you don't use prefixfree you've to edit the sass files to add all vendor prefixes, otherwise it'll only works in browsers that do not need prefixes like Firefox.\nI'll add the vendor prefixes in the main sass files soon, but personally I wish one day ALL browsers will support animations/transforms without it.\n. @vitoziv but http://elrumordelaluz.com/public/videos/screen.mp4\n. right @smyoon315.\n. right again @smyoon315 \n. @lehtu There is an advice (and now in strong) that the main code doesn't include -prefixes. However I'll add a vendor prefixes @mixin for these situations asap. Hoping one day we won't need -prefixes.\n. From now you can use it on every (modern) browser, though. Just added vendor-prefixes on main @\u200bmixins\n. Cool @cobaimelan! At the beginning I was going to release it with those @\u200bmixins.\nAnyway I'm thinking in adding something like this to help some situations/needs. \nIt'd be perfect a @\u200bmixin that render the -prefixed @keyframes only with the -prefixed transforms, though.\n. Vendor prefixes added (without redundancy), please let me know.\n. @AlphaGit but you've installed sassy-math or added the random() function on ruby sass sources? otherwise using last sass versions the random() function I think it is included.\n. @mlotfi2005 just downloaded the csshake.min.css and paste on this pen: http://codepen.io/elrumordelaluz/pen/wuzfC for me works well on chrome\n. I just tested here on an Apache server, and for me it's working in Chrome.\nDid you download the last version that include -webkit prefix? Because on the first release I didn't added vendor prefixes on the main sass mixins and for example, on FF works well without prefixes.\n. @blainesch I think it was an old issue related on prefixes that today Chrome doesn't need anymore.\n. Really! @millette I didn't realized that there still there without *vednorized. I just added with some other changes. Thanks man!\n. hi @atinder90, i'm sorry for the delay. what problem exactly you have?\n. the file that works for you is compiled. did you tried to compile the .scss files right? didn't generated a  new csshake.css file?\n. could you show me the generated file? didn't shows you any error when compiling? have you a last version of sass that include random() function?\n. Sure it's possible. I'll try to add as soon as possible, except you did before and make a pull request.\n. Added this feature in the last release\n. Thanks @mouse0270.\nI added this feature in the last release. Hope it works for you. Thanks for the proposal!\n. great! @Sinetheta \n. cool! @ajschumacher \n. @raphaelgoetter nice suggestion. As soon as I have a piece of time I'll add.\n. @raphaelgoetter since in the last release I reduce the code into only one mixin to generate the animations, now is easier to generate separated classes. Also added a Download center with the core animations to download separately. Thanks again!\n. @raphaelgoetter Absolutely agree. Asap I'll add.\n. @raphaelgoetter here and also here. Thanks for the suggestion.\n. \ud83d\udc4d\n. I'll review it asap @blixt thanks!\n. hey @blixt first of all, thanks for the idea. I added this feature in the last release\n. @sapher you are absolutely right. what do you think on include also scss/csshake.scss as main file for preprocessor?\n. in fact @sapher added here\n. Thanks @williamli. There is the comment here in the _tools.scss file. Maybe you downloaded/forked before a commit with this specific change.\nAnyway I found that the $opacity explanation is missed in README.md file, after the code example. Thanks again!\n. Hi @furier ,\nCould you make a pen or show code in some way?\n. ok @furier feel free to comment to reopen this Issue in case you need.\n. Hi @kramer65, in this case you need to create your own CSShake animation, and for its purpose you have the do-shake mixin. After you clone the repo git clone https://github.com/elrumordelaluz/csshake.git, install the basic packages npm install (you need npm installed on your system) and you could start trying what you want with the Sass stuff. \nTry something like \nscss\n.shake-horizontal-chunk { \n  @include do-shake('shake-horizontal-chunk', 30, 0, 0, 4s, $chunk: 40%); \n}\nin the csshake.scss file and then run npm run build:raw or npm run build:min.\nKeep in mind that the whole code generated in CSShake is based on random generated numbers between the values you use in the mixin. For a detailed exmplanation of the mixin, read more here\n. Cool @OpherV thanks!\n. thanks @AlphaGit, merged!\nHowever I'd appreciate if you have a screenshot or could explain what is the behaviour you had in Edge. Since I an working on OSX I did a simple pen to test via crossbrowsertesting and didn't see nothing strange, and didn't found any bug related.\n. lol, sooo funny! \nthank you for the video @AlphaGit, thanks again for the PR.\n. Hi @seb0zz don't understand why you need to have the shake-constant class as a new shake animation class when it exists yet as a helper class. \nHere you have an example to see how it works, just apply the shake-* animation constantly.\n. shake-constant should be defined importing the file csshake.scss since it imports _tools.scss where is defined a variable $prefix: 'shake' !default; used in some lines to define the class .#{$prefix}-constant === .shake-constant inside each animation created. \nshake-constant does not have an independent behaviour, need to be used as a modifier of a animation created through do-shake() mixin. \nDid you tried @extending shake or another shake-* animation?\n. Right. To have available this class you have to at least process an animation thorugh the mixin. Creating a class .shake-constant   { @include do-shake('shake-constant'); } will give you the same situation of using @extend .shake (but in this case .shake-constant) and you'll need to call .shake-constant.shake-constant to have it constantly (like we talked before).\nDid you tried importing the desired animation from dist? Do you have a repo or something with this working?\n. @seb0zz you could do one of this two things:\nscss\n@import \"../../../node_modules/csshake/scss/csshake\";\n.yourClass {\n  @extend .shake.shake-constant;\n  ...\n}\nor \n``` scss\n@import \"../../../node_modules/csshake/scss/csshake\";\n%myAnim { @include do-shake(); }\n.yourClass {\n  @extend %myAnim.shake-constant;\n  ...\n}\n```\n. cool! let me know if there's another behavior with css-modules.\n. @paya-cz thanks for the idea, included here\n. Good catch, thanks!\n. Should be solved with last changes, thanks!\n. @greaterweb thanks for the catch, this should be correct now!\nLet me know and thanks again.\n. @ariunbayar Thanks for the idea. Solved here.\n. For any reason everything is working for me, but you are absolutely right. Thank you @aboutaaron for the PR!\n. Hello @madruga88 and thanks for the interest.\nCSShake is based on random numbers for its presets. You could play around with some numbers in the reshake playground here but I think you could use the awesome Bounce.js library to create this kind of controlled animations.. @antivitla I understand what you mean.\n\nProbably your initial target audience was bower-users \nNot sure if bower users but probably most without bundler process -like projects. \n\nCould you please provide an example on what webpack  do or miss about this package? \nBootstrap has the js files as main. \nI think a good solution could be \"main\": \"dist/csshake.css\", in case this work for you (and hopefully for all the npm users) absolutely appreciate a PR!\nThanks for the catch!. Thanks @antivitla !. @punshonjm thanks for reporting the issue.\nAt the beginning the shaked element needs a display property to allow transformations. \nYou are absolutely right that removing/commenting this property prevents this strange behaviour. \nA simple fix (PR welcome!) could be to switch display: inline-block that assume a specific relation with the layout/context into display: inherits or test again use cases without display property at all. \nIn case you want to contribute with a PR (could be awesome!), should be necessary to test with different kind of html elements because browsers assign a default display prop in some elems.\nIn case I found a document with this assumptions will share here.\nOtherwise, when as soon as I have a peace of time I'll fix this.\nThanks again,. Eric, but for now the class name is just .freez.\nPlease let me know where it doesn't work for you.\n. I think there's a mistake in de docs because the right class is .freez. Where did you found it?\n. Hey Parker, really thanks for your suggests! \nI have to improve my english immediately.\n. Dennis, done!\n. you mean this: http://codepen.io/elrumordelaluz/full/pHKcC?harlem=shake ?\n. Thanks @hugochinchilla @nakosung \n. great!\n. thanks Grant, check it now.\n. cool! @kdimatteo! \n. right, nice catch!\n. merged\n. just bower install csshake, cool!\n. I'll try it.\n. @paparts here I paste all the css, create a span.shake and work well here. Are you using Prefixfree? For now, the package doesn't contains the prefixed animations/transforms. You have to use something like this on the main @\u200bmixin, or Prefixfree, or just visualize in a browser that don't need -prefixes. Unfortunately today we still needing -prefixes for some css stuff.\n. @paparts if you don't use prefixfree you've to edit the sass files to add all vendor prefixes, otherwise it'll only works in browsers that do not need prefixes like Firefox.\nI'll add the vendor prefixes in the main sass files soon, but personally I wish one day ALL browsers will support animations/transforms without it.\n. @vitoziv but http://elrumordelaluz.com/public/videos/screen.mp4\n. right @smyoon315.\n. right again @smyoon315 \n. @lehtu There is an advice (and now in strong) that the main code doesn't include -prefixes. However I'll add a vendor prefixes @mixin for these situations asap. Hoping one day we won't need -prefixes.\n. From now you can use it on every (modern) browser, though. Just added vendor-prefixes on main @\u200bmixins\n. Cool @cobaimelan! At the beginning I was going to release it with those @\u200bmixins.\nAnyway I'm thinking in adding something like this to help some situations/needs. \nIt'd be perfect a @\u200bmixin that render the -prefixed @keyframes only with the -prefixed transforms, though.\n. Vendor prefixes added (without redundancy), please let me know.\n. @AlphaGit but you've installed sassy-math or added the random() function on ruby sass sources? otherwise using last sass versions the random() function I think it is included.\n. @mlotfi2005 just downloaded the csshake.min.css and paste on this pen: http://codepen.io/elrumordelaluz/pen/wuzfC for me works well on chrome\n. I just tested here on an Apache server, and for me it's working in Chrome.\nDid you download the last version that include -webkit prefix? Because on the first release I didn't added vendor prefixes on the main sass mixins and for example, on FF works well without prefixes.\n. @blainesch I think it was an old issue related on prefixes that today Chrome doesn't need anymore.\n. Really! @millette I didn't realized that there still there without *vednorized. I just added with some other changes. Thanks man!\n. hi @atinder90, i'm sorry for the delay. what problem exactly you have?\n. the file that works for you is compiled. did you tried to compile the .scss files right? didn't generated a  new csshake.css file?\n. could you show me the generated file? didn't shows you any error when compiling? have you a last version of sass that include random() function?\n. Sure it's possible. I'll try to add as soon as possible, except you did before and make a pull request.\n. Added this feature in the last release\n. Thanks @mouse0270.\nI added this feature in the last release. Hope it works for you. Thanks for the proposal!\n. great! @Sinetheta \n. cool! @ajschumacher \n. @raphaelgoetter nice suggestion. As soon as I have a piece of time I'll add.\n. @raphaelgoetter since in the last release I reduce the code into only one mixin to generate the animations, now is easier to generate separated classes. Also added a Download center with the core animations to download separately. Thanks again!\n. @raphaelgoetter Absolutely agree. Asap I'll add.\n. @raphaelgoetter here and also here. Thanks for the suggestion.\n. \ud83d\udc4d\n. I'll review it asap @blixt thanks!\n. hey @blixt first of all, thanks for the idea. I added this feature in the last release\n. @sapher you are absolutely right. what do you think on include also scss/csshake.scss as main file for preprocessor?\n. in fact @sapher added here\n. Thanks @williamli. There is the comment here in the _tools.scss file. Maybe you downloaded/forked before a commit with this specific change.\nAnyway I found that the $opacity explanation is missed in README.md file, after the code example. Thanks again!\n. Hi @furier ,\nCould you make a pen or show code in some way?\n. ok @furier feel free to comment to reopen this Issue in case you need.\n. Hi @kramer65, in this case you need to create your own CSShake animation, and for its purpose you have the do-shake mixin. After you clone the repo git clone https://github.com/elrumordelaluz/csshake.git, install the basic packages npm install (you need npm installed on your system) and you could start trying what you want with the Sass stuff. \nTry something like \nscss\n.shake-horizontal-chunk { \n  @include do-shake('shake-horizontal-chunk', 30, 0, 0, 4s, $chunk: 40%); \n}\nin the csshake.scss file and then run npm run build:raw or npm run build:min.\nKeep in mind that the whole code generated in CSShake is based on random generated numbers between the values you use in the mixin. For a detailed exmplanation of the mixin, read more here\n. Cool @OpherV thanks!\n. thanks @AlphaGit, merged!\nHowever I'd appreciate if you have a screenshot or could explain what is the behaviour you had in Edge. Since I an working on OSX I did a simple pen to test via crossbrowsertesting and didn't see nothing strange, and didn't found any bug related.\n. lol, sooo funny! \nthank you for the video @AlphaGit, thanks again for the PR.\n. Hi @seb0zz don't understand why you need to have the shake-constant class as a new shake animation class when it exists yet as a helper class. \nHere you have an example to see how it works, just apply the shake-* animation constantly.\n. shake-constant should be defined importing the file csshake.scss since it imports _tools.scss where is defined a variable $prefix: 'shake' !default; used in some lines to define the class .#{$prefix}-constant === .shake-constant inside each animation created. \nshake-constant does not have an independent behaviour, need to be used as a modifier of a animation created through do-shake() mixin. \nDid you tried @extending shake or another shake-* animation?\n. Right. To have available this class you have to at least process an animation thorugh the mixin. Creating a class .shake-constant   { @include do-shake('shake-constant'); } will give you the same situation of using @extend .shake (but in this case .shake-constant) and you'll need to call .shake-constant.shake-constant to have it constantly (like we talked before).\nDid you tried importing the desired animation from dist? Do you have a repo or something with this working?\n. @seb0zz you could do one of this two things:\nscss\n@import \"../../../node_modules/csshake/scss/csshake\";\n.yourClass {\n  @extend .shake.shake-constant;\n  ...\n}\nor \n``` scss\n@import \"../../../node_modules/csshake/scss/csshake\";\n%myAnim { @include do-shake(); }\n.yourClass {\n  @extend %myAnim.shake-constant;\n  ...\n}\n```\n. cool! let me know if there's another behavior with css-modules.\n. @paya-cz thanks for the idea, included here\n. Good catch, thanks!\n. Should be solved with last changes, thanks!\n. @greaterweb thanks for the catch, this should be correct now!\nLet me know and thanks again.\n. @ariunbayar Thanks for the idea. Solved here.\n. For any reason everything is working for me, but you are absolutely right. Thank you @aboutaaron for the PR!\n. Hello @madruga88 and thanks for the interest.\nCSShake is based on random numbers for its presets. You could play around with some numbers in the reshake playground here but I think you could use the awesome Bounce.js library to create this kind of controlled animations.. @antivitla I understand what you mean.\n\nProbably your initial target audience was bower-users \nNot sure if bower users but probably most without bundler process -like projects. \n\nCould you please provide an example on what webpack  do or miss about this package? \nBootstrap has the js files as main. \nI think a good solution could be \"main\": \"dist/csshake.css\", in case this work for you (and hopefully for all the npm users) absolutely appreciate a PR!\nThanks for the catch!. Thanks @antivitla !. @punshonjm thanks for reporting the issue.\nAt the beginning the shaked element needs a display property to allow transformations. \nYou are absolutely right that removing/commenting this property prevents this strange behaviour. \nA simple fix (PR welcome!) could be to switch display: inline-block that assume a specific relation with the layout/context into display: inherits or test again use cases without display property at all. \nIn case you want to contribute with a PR (could be awesome!), should be necessary to test with different kind of html elements because browsers assign a default display prop in some elems.\nIn case I found a document with this assumptions will share here.\nOtherwise, when as soon as I have a peace of time I'll fix this.\nThanks again,. ",
    "moneytree-doug": "The documentation says freeze is this a mistake in the documentation or the library?\n. The documentation says freeze is this a mistake in the documentation or the library?\n. ",
    "parkr": "Happy to help! Your English is great! Just small corrections :)\n. Happy to help! Your English is great! Just small corrections :)\n. ",
    "grayghostvisuals": "Well I'll be slapped silly. :beers: \n. Well I'll be slapped silly. :beers: \n. ",
    "hugochinchilla": ":+1:\n. it's perfect, love it\n. :+1:\n. it's perfect, love it\n. ",
    "nakosung": "N-I-C-E!\n. wow!\n. N-I-C-E!\n. wow!\n. ",
    "grant": "merge? :heart: \n. merge? :heart: \n. ",
    "kdimatteo": "I just registered this: \n```\n$ bower search csshake\nSearch results:\ncsshake git://github.com/elrumordelaluz/csshake.git\n\n```\n. I just registered this: \n```\n$ bower search csshake\nSearch results:\ncsshake git://github.com/elrumordelaluz/csshake.git\n\n```\n. ",
    "EHLOVader": "It doesn't have a bower.json which still breaks the systems like wiredep or anything watching for a main file. Forking and sending a PR with a bower.json. LIkely I am doing it wrong but it is a start. \n. Perfect! I didn't know how to test prior but just did and it works as I expected. Thanks.\n. I was having issues specifically with https://github.com/yeoman/generator-gulp-webapp and when I would gulp wiredep it wouldn't add the link like it should have. It simply didn't know what files to include.\nNow it actually adds the stylesheet and works perfectly. You can test by installing the gulp-webapp generator and starting a new project.\n. It doesn't have a bower.json which still breaks the systems like wiredep or anything watching for a main file. Forking and sending a PR with a bower.json. LIkely I am doing it wrong but it is a start. \n. Perfect! I didn't know how to test prior but just did and it works as I expected. Thanks.\n. I was having issues specifically with https://github.com/yeoman/generator-gulp-webapp and when I would gulp wiredep it wouldn't add the link like it should have. It simply didn't know what files to include.\nNow it actually adds the stylesheet and works perfectly. You can test by installing the gulp-webapp generator and starting a new project.\n. ",
    "allaniftrue": "This is a bit weird, I downloaded the css and added it on a page and it doesn't work.  But when I used the remote css from http://elrumordelaluz.github.io/csshake/css/csshake.min.css .  Everything went well. \n. no im not using prefixfree, I am using it on a simple form.  Actually at this site http://backticksolutions.com\n. thanks @elrumordelaluz.  I was using gulp autoprefixer but forgot to run it on the file that needs to be processed. Thanks!\n. This is a bit weird, I downloaded the css and added it on a page and it doesn't work.  But when I used the remote css from http://elrumordelaluz.github.io/csshake/css/csshake.min.css .  Everything went well. \n. no im not using prefixfree, I am using it on a simple form.  Actually at this site http://backticksolutions.com\n. thanks @elrumordelaluz.  I was using gulp autoprefixer but forgot to run it on the file that needs to be processed. Thanks!\n. ",
    "vitoziv": "Don't know why, not work by link cssshake.css to html <link type=\"text/css\" href=\"csshake.css\">. but worked by copy css code to the head of html file's <head>\n. @elrumordelaluz see my test \n. change to csshake.min.css don't work either.  Just me have this problem? \n\n. Don't know why, not work by link cssshake.css to html <link type=\"text/css\" href=\"csshake.css\">. but worked by copy css code to the head of html file's <head>\n. @elrumordelaluz see my test \n. change to csshake.min.css don't work either.  Just me have this problem? \n\n. ",
    "smy315": "Typo on line 7. it should be \"csshake.min.css\" not \"csshake.m.css\".\n. Use Firefox for local testing. It's a prefexfree.min.js issue: http://leaverou.github.io/prefixfree/#faq. Look under \"How do I enable local testing?\". If you want to use chrome, enable local XHR.\n. Typo on line 7. it should be \"csshake.min.css\" not \"csshake.m.css\".\n. Use Firefox for local testing. It's a prefexfree.min.js issue: http://leaverou.github.io/prefixfree/#faq. Look under \"How do I enable local testing?\". If you want to use chrome, enable local XHR.\n. ",
    "lehtu": "@elrumordelaluz You really should add in your readme.md that it's not working without prefixfree. \n. @elrumordelaluz You really should add in your readme.md that it's not working without prefixfree. \n. ",
    "c0b41": "awesome dude :)\n. awesome dude :)\n. ",
    "AlphaGit": "@elrumordelaluz Hi! Sorry for the delay. I'm using the latest sass version. The function random is included, but that's not what's actually failing. It somehow fails while performing the multiplication on its result. However, a division goes perfectly fine.\n. Hi! Sure, here's a quick comparison:\nhttps://youtu.be/4cJTRG_nLIE\nYou will see some slight differences but this is the actual test case:\nI have an application which on a particular form, on validation error, will add the shake-horizontal class and remove it 300ms later. In Chrome, Safari, and even IE, the form will shake side to side, and later stop.\nOn Edge the form went NUTS (it was actually pretty funny). It would shake in several directions, increasing the intensity noticeably and then repeating cycles, but certainly not side to side. It would also not stop on its own.\nI was working on an old version of the library so I updated and I created my own animation with do-shake, but after a while of fighting with the parameters I realized that the problem was with Edge itself. The rest is this PR. :)\n. @elrumordelaluz Hi! Sorry for the delay. I'm using the latest sass version. The function random is included, but that's not what's actually failing. It somehow fails while performing the multiplication on its result. However, a division goes perfectly fine.\n. Hi! Sure, here's a quick comparison:\nhttps://youtu.be/4cJTRG_nLIE\nYou will see some slight differences but this is the actual test case:\nI have an application which on a particular form, on validation error, will add the shake-horizontal class and remove it 300ms later. In Chrome, Safari, and even IE, the form will shake side to side, and later stop.\nOn Edge the form went NUTS (it was actually pretty funny). It would shake in several directions, increasing the intensity noticeably and then repeating cycles, but certainly not side to side. It would also not stop on its own.\nI was working on an old version of the library so I updated and I created my own animation with do-shake, but after a while of fighting with the parameters I realized that the problem was with Edge itself. The rest is this PR. :)\n. ",
    "mlotfi2005": "Thank you for your response,\nIn Chrome it's working locally when I run my project from Netbeans with tomcat local server, but when the web app is hosted in Apache server, there is no shaking effect using Chrome, it's working with IE and Firefox.\nThanks\n. using localhost it's working in Chrome, but when the web app is hosted in Apache server, it's not working for Chrome, but working for IE and Firefox.\nThanks\n. Thank you for your response,\nIn Chrome it's working locally when I run my project from Netbeans with tomcat local server, but when the web app is hosted in Apache server, there is no shaking effect using Chrome, it's working with IE and Firefox.\nThanks\n. using localhost it's working in Chrome, but when the web app is hosted in Apache server, it's not working for Chrome, but working for IE and Firefox.\nThanks\n. ",
    "blainesch": "Working for me in Chrome 45.0.2454.99 (64-bit)\n. Working for me in Chrome 45.0.2454.99 (64-bit)\n. ",
    "millette": "I was confused for a second, since http://elrumordelaluz.github.io/csshake/ works as expected on Chrome, but that's because it's still pulling in http://leaverou.github.io/prefixfree/\n. I was confused for a second, since http://elrumordelaluz.github.io/csshake/ works as expected on Chrome, but that's because it's still pulling in http://leaverou.github.io/prefixfree/\n. ",
    "atinder": "used this\n@import \"mixins\";\n@import \"shake\";\n. when i use these files\nhttps://github.com/elrumordelaluz/csshake/tree/master/sass\nit doesn't work\nhowever this works\nhttps://github.com/elrumordelaluz/csshake/blob/master/csshake.css\n. it did generated the compiled file but it didn't worked.\nif i replace it with your compiled file it works\n. used this\n@import \"mixins\";\n@import \"shake\";\n. when i use these files\nhttps://github.com/elrumordelaluz/csshake/tree/master/sass\nit doesn't work\nhowever this works\nhttps://github.com/elrumordelaluz/csshake/blob/master/csshake.css\n. it did generated the compiled file but it didn't worked.\nif i replace it with your compiled file it works\n. ",
    "raphaelgoetter": "Great, thank you !\n. Great, thank you !\n. ",
    "sapher": "@elrumordelaluz Yeah absolutely, It would be good for some people that the .scss version is listed.\n. @elrumordelaluz Yeah absolutely, It would be good for some people that the .scss version is listed.\n. ",
    "williamli": "ok. it was in the docs, just not in the _tools.scss comments\n. I think I got it from the latest release branch instead of master.\n\nOn 11 Oct 2015, at 03:11, Lionel notifications@github.com wrote:\nThanks @williamli https://github.com/williamli. There is the comment here https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L25 in the _tools.scss file. Maybe you downloaded/forked before a commit with this specific change.\nAnyway I found that the $opacity explanation is missed in README.md file, after the code example. Thanks again!\n\u2014\nReply to this email directly or view it on GitHub https://github.com/elrumordelaluz/csshake/issues/27#issuecomment-147117989.\n. ok. it was in the docs, just not in the _tools.scss comments\n. I think I got it from the latest release branch instead of master.\nOn 11 Oct 2015, at 03:11, Lionel notifications@github.com wrote:\nThanks @williamli https://github.com/williamli. There is the comment here https://github.com/elrumordelaluz/csshake/blob/master/scss/_tools.scss#L25 in the _tools.scss file. Maybe you downloaded/forked before a commit with this specific change.\nAnyway I found that the $opacity explanation is missed in README.md file, after the code example. Thanks again!\n\u2014\nReply to this email directly or view it on GitHub https://github.com/elrumordelaluz/csshake/issues/27#issuecomment-147117989.\n. \n",
    "furier": "I have only had this problem on my setup with asp.net mvc5 on windows server 2008 R2 virtual machine with remote desktop. I changed to using anijs instead, and using the rubberband animation instead, so now im unable to make a video to show you.\n. I have only had this problem on my setup with asp.net mvc5 on windows server 2008 R2 virtual machine with remote desktop. I changed to using anijs instead, and using the rubberband animation instead, so now im unable to make a video to show you.\n. ",
    "kramer65": "great, thanks!\n. great, thanks!\n. ",
    "seb0zz": "Hi @elrumordelaluz thing is that I am using css-modules. So I am not able to simply write something like class=\"shake-constant\" in my markup. Also all my class names will be hashed on deployment and I do not load any plain CSS files from my server. So what I basically do (in the project using my fork) is:\n``` scss\n@import \"../../../node_modules/csshake/scss/csshake\";\n.callToActionShaking {\n  @extend .callToAction;\n  @extend .shake-constant;\ndisplay: block;\n}\n```\nThat's why I need shake-constant to be defined ;-)\n. Yes I tried that but then I am only able to get the shake effect on hover.\n. The first one works, thanks!\n. Hi @elrumordelaluz thing is that I am using css-modules. So I am not able to simply write something like class=\"shake-constant\" in my markup. Also all my class names will be hashed on deployment and I do not load any plain CSS files from my server. So what I basically do (in the project using my fork) is:\n``` scss\n@import \"../../../node_modules/csshake/scss/csshake\";\n.callToActionShaking {\n  @extend .callToAction;\n  @extend .shake-constant;\ndisplay: block;\n}\n```\nThat's why I need shake-constant to be defined ;-)\n. Yes I tried that but then I am only able to get the shake effect on hover.\n. The first one works, thanks!\n. ",
    "paya-cz": "Suggested \"csshake-default.css\" file content:\n```\n/ *  *  *  *  *  *  *  *  *  * \\\n  CSShake :: shake\n  v1.5.0\n  CSS classes to move your DOM\n  (c) 2015 @elrumordelaluz\n  http://elrumordelaluz.github.io/csshake/\n  Licensed under MIT\n* *  *  *  *  *  *  *  *  *  * */\n.shake {\n  display: inline-block;\n  transform-origin: center center; }\n.shake-freeze,\n.shake-constant.shake-constant--hover:hover,\n.shake-trigger:hover .shake-constant.shake-constant--hover {\n  animation-play-state: paused; }\n.shake-freeze:hover,\n.shake-trigger:hover .shake-freeze, .shake:hover,\n.shake-trigger:hover .shake {\n  animation-play-state: running; }\n@keyframes shake {\n  2% {\n    transform: translate(1.5px, 2.5px) rotate(-0.5deg); }\n  4% {\n    transform: translate(1.5px, -1.5px) rotate(0.5deg); }\n  6% {\n    transform: translate(1.5px, -1.5px) rotate(-0.5deg); }\n  8% {\n    transform: translate(0.5px, 2.5px) rotate(0.5deg); }\n  10% {\n    transform: translate(-0.5px, -0.5px) rotate(1.5deg); }\n  12% {\n    transform: translate(-0.5px, -0.5px) rotate(-0.5deg); }\n  14% {\n    transform: translate(2.5px, 0.5px) rotate(-0.5deg); }\n  16% {\n    transform: translate(-1.5px, 1.5px) rotate(0.5deg); }\n  18% {\n    transform: translate(2.5px, 0.5px) rotate(-0.5deg); }\n  20% {\n    transform: translate(-1.5px, 0.5px) rotate(-0.5deg); }\n  22% {\n    transform: translate(2.5px, -1.5px) rotate(-0.5deg); }\n  24% {\n    transform: translate(1.5px, 2.5px) rotate(1.5deg); }\n  26% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  28% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  30% {\n    transform: translate(2.5px, -1.5px) rotate(-0.5deg); }\n  32% {\n    transform: translate(0.5px, 2.5px) rotate(-0.5deg); }\n  34% {\n    transform: translate(-0.5px, 1.5px) rotate(1.5deg); }\n  36% {\n    transform: translate(0.5px, 1.5px) rotate(1.5deg); }\n  38% {\n    transform: translate(1.5px, 1.5px) rotate(0.5deg); }\n  40% {\n    transform: translate(-0.5px, 1.5px) rotate(0.5deg); }\n  42% {\n    transform: translate(-0.5px, 0.5px) rotate(1.5deg); }\n  44% {\n    transform: translate(-1.5px, -1.5px) rotate(1.5deg); }\n  46% {\n    transform: translate(0.5px, -0.5px) rotate(0.5deg); }\n  48% {\n    transform: translate(-0.5px, 1.5px) rotate(-0.5deg); }\n  50% {\n    transform: translate(2.5px, -0.5px) rotate(-0.5deg); }\n  52% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  54% {\n    transform: translate(2.5px, -1.5px) rotate(0.5deg); }\n  56% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  58% {\n    transform: translate(-1.5px, 2.5px) rotate(1.5deg); }\n  60% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  62% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  64% {\n    transform: translate(0.5px, 0.5px) rotate(-0.5deg); }\n  66% {\n    transform: translate(1.5px, -0.5px) rotate(1.5deg); }\n  68% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  70% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  72% {\n    transform: translate(1.5px, 0.5px) rotate(0.5deg); }\n  74% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  76% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  78% {\n    transform: translate(2.5px, -1.5px) rotate(0.5deg); }\n  80% {\n    transform: translate(-1.5px, 1.5px) rotate(0.5deg); }\n  82% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  84% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  86% {\n    transform: translate(2.5px, 0.5px) rotate(1.5deg); }\n  88% {\n    transform: translate(-0.5px, -1.5px) rotate(-0.5deg); }\n  90% {\n    transform: translate(1.5px, -0.5px) rotate(-0.5deg); }\n  92% {\n    transform: translate(0.5px, -1.5px) rotate(1.5deg); }\n  94% {\n    transform: translate(-0.5px, -0.5px) rotate(0.5deg); }\n  96% {\n    transform: translate(-0.5px, -1.5px) rotate(-0.5deg); }\n  98% {\n    transform: translate(-0.5px, -1.5px) rotate(1.5deg); }\n  0%, 100% {\n    transform: translate(0, 0) rotate(0); } }\n.shake:hover,\n.shake-trigger:hover .shake,\n.shake.shake-freeze,\n.shake.shake-constant {\n  animation: shake 100ms ease-in-out infinite; }\n```\n. Suggested \"csshake-default.css\" file content:\n```\n/ *  *  *  *  *  *  *  *  *  * \\\n  CSShake :: shake\n  v1.5.0\n  CSS classes to move your DOM\n  (c) 2015 @elrumordelaluz\n  http://elrumordelaluz.github.io/csshake/\n  Licensed under MIT\n* *  *  *  *  *  *  *  *  *  * */\n.shake {\n  display: inline-block;\n  transform-origin: center center; }\n.shake-freeze,\n.shake-constant.shake-constant--hover:hover,\n.shake-trigger:hover .shake-constant.shake-constant--hover {\n  animation-play-state: paused; }\n.shake-freeze:hover,\n.shake-trigger:hover .shake-freeze, .shake:hover,\n.shake-trigger:hover .shake {\n  animation-play-state: running; }\n@keyframes shake {\n  2% {\n    transform: translate(1.5px, 2.5px) rotate(-0.5deg); }\n  4% {\n    transform: translate(1.5px, -1.5px) rotate(0.5deg); }\n  6% {\n    transform: translate(1.5px, -1.5px) rotate(-0.5deg); }\n  8% {\n    transform: translate(0.5px, 2.5px) rotate(0.5deg); }\n  10% {\n    transform: translate(-0.5px, -0.5px) rotate(1.5deg); }\n  12% {\n    transform: translate(-0.5px, -0.5px) rotate(-0.5deg); }\n  14% {\n    transform: translate(2.5px, 0.5px) rotate(-0.5deg); }\n  16% {\n    transform: translate(-1.5px, 1.5px) rotate(0.5deg); }\n  18% {\n    transform: translate(2.5px, 0.5px) rotate(-0.5deg); }\n  20% {\n    transform: translate(-1.5px, 0.5px) rotate(-0.5deg); }\n  22% {\n    transform: translate(2.5px, -1.5px) rotate(-0.5deg); }\n  24% {\n    transform: translate(1.5px, 2.5px) rotate(1.5deg); }\n  26% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  28% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  30% {\n    transform: translate(2.5px, -1.5px) rotate(-0.5deg); }\n  32% {\n    transform: translate(0.5px, 2.5px) rotate(-0.5deg); }\n  34% {\n    transform: translate(-0.5px, 1.5px) rotate(1.5deg); }\n  36% {\n    transform: translate(0.5px, 1.5px) rotate(1.5deg); }\n  38% {\n    transform: translate(1.5px, 1.5px) rotate(0.5deg); }\n  40% {\n    transform: translate(-0.5px, 1.5px) rotate(0.5deg); }\n  42% {\n    transform: translate(-0.5px, 0.5px) rotate(1.5deg); }\n  44% {\n    transform: translate(-1.5px, -1.5px) rotate(1.5deg); }\n  46% {\n    transform: translate(0.5px, -0.5px) rotate(0.5deg); }\n  48% {\n    transform: translate(-0.5px, 1.5px) rotate(-0.5deg); }\n  50% {\n    transform: translate(2.5px, -0.5px) rotate(-0.5deg); }\n  52% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  54% {\n    transform: translate(2.5px, -1.5px) rotate(0.5deg); }\n  56% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  58% {\n    transform: translate(-1.5px, 2.5px) rotate(1.5deg); }\n  60% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  62% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  64% {\n    transform: translate(0.5px, 0.5px) rotate(-0.5deg); }\n  66% {\n    transform: translate(1.5px, -0.5px) rotate(1.5deg); }\n  68% {\n    transform: translate(-1.5px, -0.5px) rotate(0.5deg); }\n  70% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  72% {\n    transform: translate(1.5px, 0.5px) rotate(0.5deg); }\n  74% {\n    transform: translate(0.5px, -1.5px) rotate(0.5deg); }\n  76% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  78% {\n    transform: translate(2.5px, -1.5px) rotate(0.5deg); }\n  80% {\n    transform: translate(-1.5px, 1.5px) rotate(0.5deg); }\n  82% {\n    transform: translate(-0.5px, 2.5px) rotate(1.5deg); }\n  84% {\n    transform: translate(1.5px, 1.5px) rotate(-0.5deg); }\n  86% {\n    transform: translate(2.5px, 0.5px) rotate(1.5deg); }\n  88% {\n    transform: translate(-0.5px, -1.5px) rotate(-0.5deg); }\n  90% {\n    transform: translate(1.5px, -0.5px) rotate(-0.5deg); }\n  92% {\n    transform: translate(0.5px, -1.5px) rotate(1.5deg); }\n  94% {\n    transform: translate(-0.5px, -0.5px) rotate(0.5deg); }\n  96% {\n    transform: translate(-0.5px, -1.5px) rotate(-0.5deg); }\n  98% {\n    transform: translate(-0.5px, -1.5px) rotate(1.5deg); }\n  0%, 100% {\n    transform: translate(0, 0) rotate(0); } }\n.shake:hover,\n.shake-trigger:hover .shake,\n.shake.shake-freeze,\n.shake.shake-constant {\n  animation: shake 100ms ease-in-out infinite; }\n```\n. ",
    "greaterweb": "Confirmed working. Thanks for the prompt attention, @elrumordelaluz!\n. Confirmed working. Thanks for the prompt attention, @elrumordelaluz!\n. ",
    "aboutaaron": "Alternatively, just use a relative protocol and support both HTTP and HTTPS (though I believe HTTP can load HTTPS resources. Just not the other way around.)\n. Alternatively, just use a relative protocol and support both HTTP and HTTPS (though I believe HTTP can load HTTPS resources. Just not the other way around.)\n. ",
    "antivitla": "Yes, it turns out that \"main\": \"dist/csshake.css\" makes webpack satisfied. And we can use same syntax for importing it in css|stylus|sass. I've tested, seems all good. Made a PR :). Yes, it turns out that \"main\": \"dist/csshake.css\" makes webpack satisfied. And we can use same syntax for importing it in css|stylus|sass. I've tested, seems all good. Made a PR :). "
}