{
    "clelland": "Automatic merge FTW\n. This is mostly fixed now; we are reading the manifest and inserting the correct version into the generated config.xml file as of commit 46daea1c\nThere is a separate issue with cordova-cli not correctly merging this value into the final config.xml file, but that is outside of the scope of this project.\n. The polyfill-blob-constructor plugin (included by default with all mobile chrome apps now) should fix this.\nCommit f4f884f, for reference\n. Hi gapipro -- This looks like an issue that I introduced yesterday, and fixed this morning. I've just pushed the fix up to the dev branch of mobile-chrome-apps -- can you try checking that out, running mca.js init, and then recreate your project?\n. Are you referring to the app name in the manifest.json file? A space in that value shouldn't cause a problem: it's actually part of the Chrome Spec test application, which gets built all the time.\nThe app name should be passed into the cordova-android/bin/create script, which sanitizes it with:\nvar safe_activity_name = project_name.replace(/\\W/, '');\nOn my machine, building Chrome Spec (App name: \"Chrome Spec\") results in a ChromeSpec.java file, and a ChromeSpec activity class within it.\nDo you have a sample project (or even just a manifest) that can reproduce this?\n. That's really strange -- It may be possible that you have a cached version of cordova-android that is not correctly handling this. Right now, mca.js internally invokes cordova-cli, which will look in your home directory for a hidden folder called  .cordova, and will prefer the version of cordova-android which is linked there over the version in your mobile-chrome-apps checkout.\nYou can check the version there -- on my machine, I see the create script in ~/.cordova/lib/android/cordova-mca/mca/bin/create, and its library in ~/.cordova/lib/android/cordova-mca/mca/bin/lib/create.js. If it's wrong, I would try removing ~/.cordova and recreating the project.\n(I delete that directory all the time; its purpose is to cache packages that might otherwise be downloaded from the internet every time you run cordova, but sometimes it seems to cache a bit too aggressively).\n. Just looked at that code again -- the RegExp.replace call is only going to handle the first space in the app name. I think that Andrew may be fixing that in Cordova-android, but it's definitely a bug there.\nThanks\n. LGTM\n. This happens now, as of 3520fa2d -- changes to your manifest should be propagated on prepare\n. It looks like a couple of people have been hit with this now.\nIt sounds like a bug in the recursive copy step; I could see this happening if you tried to run cca from inside the sample app's folder, but I'll run a couple of tests to be sure it can happen that way.\nWhat argument are you passing to --copy-from ? Is it a relative or absolute path? And where is the directory you are running cca from, relative to the sample app you're copying?\n. We should be handling that case better; at least printing an error, if we can't do something sensible. \n. I created https://issues.apache.org/jira/browse/CB-5947 to track the underlying Cordova issue; I'll put similar logic into cca to detect the condition and warn/error when trying to create a project from inside the sample directory.\n. There is an issue handling the URLs that KitKat returns (I think that KitKat can't even use them internally, but I haven't finished investigating that)\nThis looks like an error in the File plugin, though -- I'll take a look into that.\n. The warning about resolveLocalFileSystemURI is a red herring: that method just immediately calls through to resolveLocalFileSystemURL. It looks like the error reporting is broken -- that's the reason for Cannot read property 'error' of undefined. The underlying error from the File plugin is being masked by all of that.\n. @kzahel  -- can you try again with the lastest commit? This is working for me now -- I don't actually see any errors coming back from the file system. There have been significant changes to the File plugin in the last two months, so the underlying issue may have been fixed in the meantime.\n. This is the iOS side of the issue; the (completely different) Android issue is now #77\n. Fixed in v0.0.4\n. For clarity, the issue is that 'cordova@'agrieve/cordova-cli' is a github dependency, which will fail on a machine which has only npm, and not git, installed.\n. What sort of markup are you referring to? Do you have an example of this?\nI expect it would depend on the tags involved, and whether the </head> and/or <body> are present or not.\nI think we're looking for an explicit <body> tag, while Chrome (and any conformant rendering engine) will assume an implied <body> tag as soon as one is required to make a valid document.\nIt would be great if we could leverage the parser in the WebView here rather than coding the logic in window.js\n. Is this supported at all in the system webview? I'm not sure whether this is functionality is built in to Android chromium or not.\n. Okay -- that's helpful; it would point to there being a hook that we haven't implemented yet.\n. This may also be https://crosswalk-project.org/jira/browse/XWALK-2124; I'm still investigating what the correct code flow should be here.\n. Also relates to https://crosswalk-project.org/jira/browse/XWALK-1079. There may be things that we can do to work around it, but I'd like to give the Crosswalk team a chance to fix it properly on their side.\n@tanx, what is your use case here? Are you trying to save files into the user's Downloads location on an Android phone? Does it work if you try to copy the file using the File API to cdvfile://localhost/sdcard/Downloads/ ?\n. I would love the \"download\" attribute to work -- I've commented on a couple of XWALK bugs that I believe are blocking it, and we'll definitely keep working on it.\nIf it's the only thing that's stopping you from hitting beta, though, I wouldn't wait around for an official fix; I unfortunately can't say how long that will take.\n. That may be the root cause, but unfortunately the XWalkView uses its own, custom DownloadListener class, with its own, custom, AndroidProtocolHandler class, both of which are private, and (last time I checked) can't be overridden in application code. We could rewrite parts of Crosswalk to support this, but for the moment I'm trying to get https://crosswalk-project.org/jira/browse/XWALK-1079 addressed instead, since that should fix it for all Crosswalk users.\n. \"fullscreen\" isn't in that list anymore (it used to be, on https://web.archive.org/web/20130715001915/http://developer.chrome.com/apps/declare_permissions.html, but it's not there now).\n. This behaviour seems to be new -- or at least it wasn't specified before. The new docs page is the only place I've seen that spelled out. The old docs never mentioned anything about all paths being reduced to /*.\nThere is already code in cca.js to normalize the host permissions; it takes care of the formatting differences, and handles the <all_urls> case. I suspect we can easily replace any paths with * at that point.\n. There haven't been any changes to the plugin dependency chain since c1634fe3 in January. (syncFileSystem depends on identity, which depends in turn on Play Services)\nThere are some new instructions in the google-play-services README.md file. It looks like those were updated about three weeks ago (MobileChromeApps/google-play-services@bcb2c024), so if you've updated your project since then, you might need to move the Play Services JAR file around.\n. Also see https://github.com/MobileChromeApps/google-play-services/issues/2 -- not sure if it's relevant (I haven't had to do it) but there seem to be ways to specify the version number of your play services JAR inside your Android Manifest, which you can do from config.xml.\n. Thanks for spotting that :)\n. Hey @BlueHayes, I don't think that com.google.payments has ever been published to the Cordova plugin registry. I haven't tested it outside of CCA, and we don't have any instructions on using it without a manifest, so it's never been made generally available.\nThere's probably no reason not to do that; I just need to do some basic work to make sure that it is functional. I've added an issue (#207) to make sure I don't forget that.\n. That makes me sad :( Thanks for finding it, though.\nRight now, you can install it with the cca tools: cca plugin add com.google.payments, because cca sets your searchpath. You could also manually use \ncordova plugin add com.google.payments \\\n    --searchpath=<path-to-cca/chrome-cordova/plugins> \\\n    --searchpath=<path-to-cca/cordova>\nand that would find it (and its dependencies)\n. The com.google.payments plugin is now published to the Cordova plugin registry! The dependent plugin is published there as well, so it should install seamlessly\n. @curtastic, does your device appear in the list when you run adb devices from the command line? I have seen some finicky devices refuse to show up in that list until I have disconnected and reconnected them several times.\n. That's correct -- there is no equivalent of Crosswalk for iOS. This is mostly due to Apple's App Store review guidelines, which say\n\n2.17 Apps that browse the web must use the iOS WebKit framework and WebKit Javascript\n\nBecause of that, there's very little incentive for the browser vendors to produce an alternate WebView for iOS, even for apps which don't technically browse the web.\nWe're waiting to see what capabilities the new WKWebView component brings to iOS 8, and hoping that it will provide a lot of the benefits that Crosswalk does to Android.\n. It's possible that it's the same issue -- you need to use a version of Chrome on your desktop that is at least as new as the Crosswalk WebView that's bundled with cca. RIght now, that means Chrome 36, so you'll have to run Chrome Beta, or Chrome Canary.\n. If this is repeatable, the this is definitely a bug. I've opened #215 to track it. Thanks.\n. Done!\n. I think that this might be caused by this Crosswalk bug: https://crosswalk-project.org/jira/browse/XWALK-2157 -- I'm keeping an eye on it, and hopefully it is resolved soon.\n. It doesn't look like the new Crosswalk canary (37.0.2062.20, from 8.37.188.0) fixes this, but it doesn't look like it is causing it either, since the issue does not arise when launching Cordova apps.\nThe chromeapp.html background color is set to black in a ",
    "agrieve": "Shoot, somehow didn't see your pull request until now. It looks the code has churned enough that the problem got fixed anyways.\n. Pretty bad that I didn't see this until now. :(. This would have been quite useful 4 months ago!\nWe've got Play Services installing through a dedicated play services plugin now. \n. Yes. I fixed it by removing the weird hashbang.\n. Hey Adam,\nThanks for pointing this out!\nI had a look at your app and was able to reproduce your findings.\nThe fact that the page runs fine when you set location=dartdemo.html, but\nnot when location=chromeapp.html indicates to me that there is something\ngoing on between dartpolymer and our chromeapp runtime that causes\ndartpolymer to not finish initializing.\nI'm not yet sure what it is though :(.\nOn Mon, Dec 9, 2013 at 12:11 AM, adam notifications@github.com wrote:\n\nThe dart polymer application loads on iOS without any issues. When loading\non Android only a blank page shows up. If remote devtools console is opened\nand location.reload() is called on chrome-extension://undefined/index.html.\nLoading takes a little bit of time on Android. Created an example\napplication\nhttps://github.com/financeCoding/PolymerDartDemo\n[image: screen shot 2013-12-08 at 8 20 24 pm]https://f.cloud.github.com/assets/654526/1702376/3d6d6a60-6090-11e3-969f-1ceb09139f35.png\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/37\n.\n. Alright, I think I've figure out what the bugs here were and have fixed\nthem up. If you try to import your chrome app again using the dev branch of\nmobile-chrome-apps, (don't forget to run mca init after switching\nbranches), then your demo app should work. (tested only on kitkat webview\nmind you)\n\nOn Mon, Dec 9, 2013 at 4:41 PM, adam notifications@github.com wrote:\n\nThe behavior with android was consistent on emulator and hardware\nphone/tablet.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/37#issuecomment-30176474\n.\n. Thanks again! This certainly revealed another bug in our start-up flow,\nwhich I believe to have fixed. Try re-creating from the latest on the dev\nbranch again and let us know if it's not working.\n\nOn Tue, Dec 10, 2013 at 11:01 PM, adam notifications@github.com wrote:\n\niOS console display:\n2013-12-10 19:57:00.528 PolymerDartDemo2[72608:c07] Multi-tasking -> Device: YES, App: YES\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromebootstrap] 0.041008ms\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromeextensionurls] 0.226021ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][chromenavigation] 0.029027ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][TotalPluginStartup] 1.443028ms\n2013-12-10 19:57:00.569 PolymerDartDemo2[72608:c07] Resetting plugins due to page load.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/38#issuecomment-30292304\n.\n. Ah, I wondered if that was the issue. (1. create project 2. add indentity\nto permission 3. it doesn't work).\n\nCurrently the answer is that you need to recreate the project again, but\nwe're hoping that soon we'll have \"mca prepare\" take notice of the\npermissions change and sync the correct plugins.\nOn Thu, Dec 12, 2013 at 12:46 AM, adam notifications@github.com wrote:\n\nActually this issue should be renamed on documenting how additional\nplugins are added when importing projects with existing manifest files.\nWhat should you do if your project is already created? within a cordova\ncontainer?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/39#issuecomment-30390917\n.\n. I confirmed this works on iOS a while ago as well. I think the remaining bug with it though is that on iOS we're not setting enabling Chrome's back button to return to our app.\n. Thanks for pointing this out!\n\nSeems reasonable to put this on the roadmap.\nOn Thu, Dec 19, 2013 at 6:24 PM, chameleon95 notifications@github.comwrote:\n\nAs we already have okhtttp for Android...\nAny plans to integrate https://github.com/twitter/CocoaSPDY for iOS...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/43\n.\n. Thanks for the feedback. We'll be working on an npm-based release soon!\nStay tuned :)\n\nOn Mon, Jan 6, 2014 at 9:08 AM, cesine notifications@github.com wrote:\n\nah thanks for pointing those commits out! i should have grepped the log\ninstead of using github. i've heard those reasons before, i guess you tried\nusing the package.json to fix your deps to a version/commit/tag? if you\npublish a npm module then it would be far easier for users... i really\ndon't enjoy having the full path of mca in my config files. i guess you\nknow that but youre waiting until mca is more stable?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/44#issuecomment-31665731\n.\n. Thanks Pete!\n\nThe chrome-navigation plugin contains the code from Open in Chrome already. Might be that it's broken though, do you have a project that this is happening with?\n. This is awesome! \n. This is fixed now that bootstrap was refactored to not have side-effects.\n. Glad to hear you requesting this API! We've done a lot of the ground work for it already, so it should be available in the coming weeks.\n. its closer than ever, but not yet.\nOn Thu, Mar 6, 2014 at 10:07 PM, Michal Mocny notifications@github.comwrote:\n\n@agrieve https://github.com/agrieve Can we implement this with the new\nfile plugin?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/52#issuecomment-36963962\n.\n. The fix is now included with cca@0.0.4\n. Thanks for pointing that out!\n. Try using \"cca run android --target=HASH\"\nWhere hash is found by running: \"adb devices\"\n. Are you using the full hash? on my machine, the hash is 16 characters long.\n. Sure. \n. Can you confirm if running with --target=HASH works now that you've run android update adb?\n. Thanks for figuring this out :) I'm sure it'll help the next person to hit it.\n. Ah, you did catch a bug here, but the bug is actually in our blog post. The payments API actually is supported on iOS :)\n. Thanks for reporting! We did already know that doesn't work, but letting us know what features you wish worked helps us a lot to know what to build next :)\n. Thanks for bringing this up! Certainly sounds like a bug. What platform (Android or iOS) did you try this on?\n@mmocny - Seems a good unit test to add.\n. Thanks for pointing this out! We actually do some trickery to make that work, so probably a bug on our side.\n@clelland \n. Yeah, I think it makes sense to add what user-agent CSS differences that we can. This certainly seems like a big one.\n. Those messages should show up in logcat (\"adb logcat\")\n\nIf using a debugger would help, it's fairly straight-forward to open your project in Eclipse and set breakpoints.\n. Bug is about ChromeSocket.java, so this is Android. It probably is worth looking at using select(). I think doing so usually makes the code simpler as well. There's an example here: \nhttp://stackoverflow.com/questions/11509909/java-tcp-server-nio-with-selector-in-android\n. It's certainly a great idea! The way cca works though, is that it builds\nyour page after-the-fact, and so the  tag will actually be injected\nafter initial page load. We'll have to do some playing to see if the tag\nwill even tag effect because of this.\nOn Mon, Feb 3, 2014 at 1:56 PM, Tankred Hase notifications@github.comwrote:\n\nThanks for the quick response. @mikewest https://github.com/mikewestwas kind enough to point the existence of the CSP meta tag out to me a few\nmonths ago. Just thinking out loud here...\nFrom what I understand the reasoning behind the default CSP settings in\nChrome Apps on desktop seem to be: \"because we give you powerful new Apis\nlike Access to the Filesystems and raw TCP sockets, you'll need to play by\nthese stricter new rules\"\nhttps://developer.chrome.com/apps/contentSecurityPolicy.html. Which makes\ntotal sense.\nSince Chrome App developers are used to these constraints on the desktop\nand your cca tool generates iOS and Android apps from that source code, how\nabout setting the same default CSP setting in the resulting cordova apps as\nwell (for supported platforms iOS 7 and Android 4.4+). This would take the\nburden of having to do this (and potentially doing it wrong) off developers\nand make it a part of the tool chain.\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-33986906\n.\n. Confirmed that the meta tag is taking effect and that's what's breaking it\nwithin cca. I think the root cause is that 'self' is referring the\nfile:///... instead of chrome-extension://... within the tag. It also\nbreaks cordova's bridge, which creates an iframe to gap://ready for its\nnative bridge.\n\nOn Tue, Feb 4, 2014 at 8:43 AM, Mike West notifications@github.com wrote:\n\nThe tag will certainly have effect when it's injected, but only for\nactions that take place after the injection. That is:\n\n\nWill result in script.js executing, then a CSP being deployed that would\nprevent future script execution. It's potentially worth doing, though I'm\nnot entirely sure I understand your use case.\nIf you've got questions, though, I'm happy to answer them. :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-34059912\n.\n. No, thank YOU! This will give us a great start on improving the CSP support in CCA.\n. Still working on updating the docs, but CSP is now supported and enabled by default in the latest version of cca! \n. Also note that I've updated the docs at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md to point out that the CSP is configurable:\n- csp: When set, overrides the default Content-Security-Policy for apps\n- cspUnsafeEval: Allow eval within Content-Security-Policy (default: false)\n- cspUnsafeInline: Allow inline scripts within Content-Security-Policy (default: false)\n. Thanks Meggin! \n\nFixed the payments link.\niOS instructions hopefully this week.\n. Actually, just added a link to Apple's instructions, so probably this is good enough.\n. Should be fixed in just pushed v0.0.5\n. Updated the docs use cordova/build (until the issue is fixed).\n. I believe this is fixed in cca@0.0.8. \n. This is actually working as expected. It's to match the desktop Chrome App behaviour. The thinking is that for \"apps\" (as opposed to web pages), most do not want top-level scrolling.\n. I'd add that in addition to porting from desktop->mobile, it is a way to\nshare code on both desktop apps and mobile apps.\nOn Mon, Feb 10, 2014 at 9:45 PM, Braden Shepherdson \nnotifications@github.com wrote:\n\nThis is definitely porting a desktop-style Chrome app so it will run on\nAndroid or iOS. There are two main parts of this: first, some hackery to\nsimulate the Chrome apps lifecycle: installation, launching, background\npage, chrome.runtime.app.createWindow, etc.; second, implementations of\nsome of the chrome.* APIs (sockets, identity, fileSystem, syncFileSystem,\nstorage, and others).\nAs part of the first goal, simulating the environment of Chrome Apps on\ndesktop means that we don't scroll by default. If you want to override it\nwith overflow: scroll, iScroll, or one of the other options, then you\ncertainly can.\nIf you're not using any of the Chrome APIs, you'll want either a mobile web\napp, or a normal Cordova app.\nBraden\nOn Mon Feb 10 2014 at 9:30:19 PM, Grady notifications@github.com wrote:\n\nI follow now, I was thinking more along the lines of Android apps which\nwould want scrolling. Am I thinking about the implantation of this\nproject\nwrong?\nI am thinking that instead of messing around with java you could easily\ncreate the apps using this project and it would be able to do some of the\nfunctionality. For example, a music/video site could easily create an app\nusing this project with their current APIs and source instead of having\nto\ndo the work to properly populate and link using Java. In this case you\nwould want to scroll.\nIf I understand what you are saying is this is more for taking a desktop\nchrome app and porting it to Android/IOS using the same backend and just\na\nnew UI to display the content that is mobile focused?\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721099\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721714\n.\n. Fixed by https://github.com/MobileChromeApps/chrome-cordova/commit/6babf3fc0bfc285194ddfc347e64c217ee64f974\n. Great question! A few answers here: \n- cordova.js lives at android_asset/www/cordova.js\n- chrome-extension:// URLs map to android_asset/www, so you could get at cordova.js via src=\"/cordova.js\"\n- cordova.js is loaded, and deviceready is fired before your background JS is run. You can detect if you're in the mobile context by checking for the existence of window.cordova\n. This is to be expected I think. CCA supports ICS devices and up (4.0+). Earlier devices are missing some key WebView APIs.\n. Short answer is that it indeed doesn't work at the moment. The problem is with the underlying Android WebView not being able to play audio or video that lives within an apk's assets. There's a related Cordova bug about it here:\n\nhttps://issues.apache.org/jira/browse/CB-6079\nAs a work-around, I believe that using Cordova's Media plugin should do the trick:\ncca plugin add org.apache.cordova.media\nvar m = new Media('notify.ogg');\nm.play()\n. document.write doesn't work on desktop packaged apps either:\nhttp://developer.chrome.com/apps/app_deprecated\n. FYI - disabled the wiki in project settings\n. .gitignore is well understood by by git users I think. We could put some\ndocumentation within .gitignore to say why we think those directories\nshould be excluded.\nOn Thu, May 8, 2014 at 12:06 AM, Michal Mocny notifications@github.comwrote:\n\nThinking out loud: if we add a default .gitignore to the default app\ntemplate, would that be awesome, or surprising?\nI just checked, and git init inside a repo thats already got a .gitignore\nworks as expected.\nBut it also means that git add -A followed by git status does not list\nplatforms/ and plugins/ and that may be confusing the first time. On the\nother hand, explicit git add platforms gives a nice error about being in\ngitignore, and .gitignore itself is listed in git status after initial\ninit/add which should be clear to devs what's going on.\nSO, I think just placing a .gitignore inside the default app will be quite\nvaluable to devs, though we should document as well.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/120#issuecomment-42511500\n.\n. Thanks for your question! \n\nMSE is an API that is too close to the bare-metal for us to add through Cordova's layer. KitKat's webview is based on Chrome 30, and it looks like MSE was unprefixed in Chrome 31, so it's very likely that it will show up in the next release of Android.\nSorry for not having better news :(\n. Be curious to know what your use-case is. This API is an extensions API, and so not available to apps. We could look at enabling it for apps though if there is a compelling reason to do so.\n. Thanks for the bug report. Very likely a problem with CCA. Just wanted to clarify which angular API you're using for navigation, and what version of Angular you are using?\n. Sorry, could you confirm as well that your project was created using v0.0.8?\n. Managed to track it down. Thanks again for reporting! Will try to do a release late next week with the fix.\n. Ah, I think the problem is that you'll need to recreate your project for the update to take effect (e.g. cca create dir2 --copy-from old-project/www)\nJust filed https://github.com/MobileChromeApps/mobile-chrome-apps/issues/140 to track this.\n. I think this means the version of Play Services on your phone is too old for the client library that ships with syncFileSystem.\nI think we are supposed to be catching this error in native code and redirecting to the Play Store when it comes up.\n. Everything at prepare time makes sense to me. Provides a better upgrade\npath.\nOn Wed, Apr 2, 2014 at 6:12 AM, Michal Mocny notifications@github.comwrote:\n\nSpecifically, we create a manifest.mobile.json with a default packageIdfield, and merge the two manifests at prepare time.\nIn some places, we guard against an empty packageId: (manifest.packageId)\n|| \"com.your.company.HelloWorld\" but in others we just blindly apply it\nwidget.attrib.id = manifest.packageId;.\nI think we should (a) guard against empty packageId, perhaps by adjusting\ngetManifest to set defaults for \"required\" values, or by auditing all the\nuses of manifest throughout the codebase.\nAdditionally, I think we should consider and moving when we create\nmanifest.mobile from create to prepare time.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/138#issuecomment-39327883\n.\n. believe this is fixed.\n. new Blob([string]) serializes string as utf-8. If you need it to be in another charset, then you'll need to manually convert from string->arraybuffer by looping over the string characters.\n. I think the problem is that you need to update the version of org.apache.cordova.file.\n\nThis is a known pain-point, and we're working towards making updating a dependent plugin easier, as well as being better about identifying when a dependent plugin's version is too old. \nFor now though, the easiest way to update it is to re-create your project using cca create --copy-from (or --link-to), and manually re-add your extra plugins.\n. At the very least, we could:\n- Make replaceState calls optional and make sure things still work.\nOne-step better, is to have chromeapp.html do:\nif (!history.replaceState) {\n location=\"file://$EXTENSION_ID/chromeapp.html\"\n}\nand have remapUri() map that to the right spot. This will at least make location.hostname and /absolute/paths work correctly despite the non-chrome-extension: URL\n. There might be a place in plugin.xml to list it instead of the readme.\n. The root cause here is that on desktop, requests are allowed if the proper CORS headers exists, whereas on mobile we enforce the whitelist regardless.\n. Updated: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/APIStatus.md\n. Just confirmed that cordova-android is in the package.tgz on npmjs.org. To be a bit more thorough with the re-install:\nnpm uninstall -g cca\nnpm cache clear cca\nnpm install -g cca\n. This will probably be the case for quite a while. Believe that the Android L previous has a fix for file://android_asset URLs though.\n. You don't need anything special in your manifest.json for WebSockets to work. Could you confirm with me what version of CCA or Chrome App Developer Tool you are using, and maybe share your code snippet?\n. To be clear - you updated to cca@0.1.1? We just added support for the Crosswalk webview in 0.1.1, so you'd need to re-create your project using that for it to work. (should be able to delete your platforms/ and plugins/ directories and type \"cca run android\")\nYou'll know if you're using the new webview because compiling now takes much longer :(\n. The -D is set from the version of android found in your PATH. (e.g. type which android).\nJust filed a bug that we should give preference to ANDROID_HOME: https://issues.apache.org/jira/browse/CB-7044\nLikely you can fix things up by making sure your PATH includes the version of android from your ANDROID_HOME.\nWould also encourage you to try out cca 0.1.1, as there are some nice improvements in there, most noticably the ability to push to Chrome App Developer Tool\n. Woohoo!\n. Thanks for bringing this up! I believe the change was made inadvertently and relates to https://issues.apache.org/jira/browse/CB-4404. I've fixed it upstream and the change will make its way into the next release of cca.\n. https://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this devices,\nand i actually need this for my app [image: :pray:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945\n.\n. Could you provide the code snippet that doesn't work?\n\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it works\non\nchrome desktop. Didn't try compiling with CCA but i don't think that makes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473>\n.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61081330\n.\n. Shouldn't need to wait for anything to write release notes for 0.1.1.\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/RELEASENOTES.md\nEspecially since a lot changed in this release.\n. Repro steps:\ncca.js create foo --link-to spec\ncd foo\n./cca pre-prepare\n./cca platform add android\n. Yeah, it's not implemented, mostly because we're not actually too sure what it should do on iOS since there is no shared filesystem there. Certainly we should add this to the README though.\n. Only reason we have it is for \"KeyboardShrinksView\" on iOS 6.\n. Same issue as #194. There is now a release out that includes the fix, so if you update your version of cca (npm install -g cca), then it should be fixed! :)\n. Thanks Tankred! Certainly we'll need to fix this :)\n. First guess is that Cordova's whitelist is blocking the requests. To see if this is the problem, try adding <all_urls> to your manifest permissions.\n. Looks great so far!\n. @emanb29 - would be curious to know your usecase for it. E.g. what APIs of the  do you use? \n. Would a sandboxed or seamless iframe work for you then?\nOn Wed, Aug 6, 2014 at 11:24 AM, emanb29 notifications@github.com wrote:\n\n@agrieve https://github.com/agrieve I'm wrapping a mybb forum which has\nno api\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/234#issuecomment-51350342\n.\n. These packages compile native code, and so will cause cca to fail to install on Windows or Mac if msbuild or xcodebuild are not installed.\n. Re-opening so that we fix our warning, or fix our check to allow >=\n. Note that the value should be \"#ff000000\" for black.\nConfirmed though that the flicker exists when using crosswalk, but is fine when using system webview.\nConfirmed that it flashes white even when all you do is load a blank black page. \nSo... Seems like it's a bug in Crosswalk. :( \n@huningxin - Know of any such bug?\n. It does seem different since the original issue occurs when toggling the task switch as opposed to on start-up. Newer Crosswalk brings a newer version of Chrome. \n. The problem is that the plugin includes the jar, but not the resources. We have the same problem with play services right now as well.\n\nThanks to the recent work to have plugman support android library projects within plugins though, the fix should be pretty straight-forward.\n. You beat me to it, but I didn't see your PR until just after pushing the same change:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/19821eee9c7b30016fb6759741816f86a23de529\n. @kamrik Can you look into this?\n. Nice work! I'll merge it in with the one comment fixed up.\n. Just stared at the code for >5 minutes before finally seeing what the bug was! Thanks for the help @tommyJS!\n. Just did a quick test on Android, and I think an iframe will do the trick for you. Because of modified security policy we use on mobile, your app can actually access iframes from other domains as if they were from your own, but the iframe's contents can't access in the other direction. E.g. iframeEl.contentDocument.body.style=\"background:blue\"\nTo inject a script:\nvar s = iframeEl.contentDocument.createElement('script');\ns.textContent = 'alert(1)'\niframeEl.contentDocument.body.appendChild(s)\n. To have native calls originate from an iframe, I think your best bet is to write a postMessage() bridge.\n. Thanks for the poke.\nSeems its disappearance was in fact a mistake done by an unhelpful bot. I've created a new (public) issue to continue tracking the status of it:\nhttps://code.google.com/p/chromium/issues/detail?id=467677\nWe'll hopefully get an update about the status soon.\nGoing to mark this issue as closed since secure was actually implemented on iOS and Android, but feel free to open a new issue for things.\n. Yeah, I think it should be 14 for either case. Certainly not 10 though.\nOn Wed, Aug 13, 2014 at 11:46 AM, Michal Mocny notifications@github.com\nwrote:\n\n@agrieve https://github.com/agrieve for thoughts.\nThe minSdkVersion is hard coded in the cordova-android application\ntemplate, and 10 corresponds to gingerbread (the min for cordova-android).\n14 is ICS, and as Francois says, should be the default for cca apps.\nI'm not sure I agree that it should be 19 for \"webview\": \"system\". We've\nsupported the old stock android webview until recently, and though some\nthings may start to break soon, I don't think we should prevent devs from\ntrying.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/271#issuecomment-52067261\n.\n. LGTM! Thanks\n. Haven't come across this yet. Best I could find:\nhttp://stackoverflow.com/questions/17938163/designing-android-apps-for-tablets\nSuggests that Play scans your uploaded screenshots for whitespace.\n. Dupe of #462.\n. This was fixed by https://github.com/MobileChromeApps/mobile-chrome-apps/commit/311b7a418a892fed4f8d311b147a65f17b342905\n\nBut only updated on plugins registry Aug 20th.\n. I believe that @kamrik added logic to cordova-lib that should update these values based on the version set in config.xml. So... we should just make sure we're setting the version in config.xml.\n. Fixed by 0749521\n. I tweaked the error message a bit. It now spits out a copy-n-pastable command that will download target-19 via command-line, so hopefully this will be less of a roadblock. \n. Just tested and it seems like the issues are related, but not the same.\n. Seems this is an issue with Crosswalk that we can't easily overcome.\nCreated a x-walk issue for it: https://crosswalk-project.org/jira/browse/XWALK-2518\nAs a work-around, you can use Cordova's accelerometer plugin: http://plugins.cordova.io/#/package/org.apache.cordova.device-motion\n. Added some extra logic to look for the android SDK within the default install path for Android Studio on Windows.\nYour issue will likely disappear with the next release :)\n. Release is out (0.4.2). Could you try updating (npm install -g cca) and see if your SDK is now detected?\n. I think this is related to what @kamrik is currently looking at.\n. That's awesome! The plugin is just in code review now on our side, so the\nrace is on!\nOn Wed, Oct 8, 2014 at 6:03 AM, Tankred Hase notifications@github.com\nwrote:\n\nFYI @felixhammerl https://github.com/felixhammerl is adding support for\nchrome.sockets.tcp and chrome.sockets.tcp.secure to our tcp-socket shim\nthis sprint. So we'll soon have a full blown test case to test your new iOS\nsocket implementation with our full IMAP/SMTP stack on top in the coming\ndays.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/316#issuecomment-58335915\n.\n. https://github.com/MobileChromeApps/mobile-chrome-apps/commit/115632dc5b5276a0dbff4d52523173466503c130\n. I don't think we need to sacrifice synchronous access, but will need to include an android service as @MehSha describes. I'd guess we'll get to this within a month's time, since it's important for chrome.alarms and chrome.gcm as well (will allow them to not jump to the top of the activity stack).\n\nbtw - SIP client sounds awesome! Is it available on the Chrome Web Store yet?\n. :) Making good progress on this. Still though - would love to hear what your use cases are to make sure that what we come up with actually works.\n. This is now launched with cca@0.7.0\n. LGTM!\n. Not sure off the top of my head what might be causing this. Are you attempting to navigate at all from JS?\nCan you verify for me what version of cca you are using (cca --version), and whether you are using Crosswalk webview vs. system webview?\n. I think I have seen this from time to time as well, but very rarely. If anyone can come up with a project / configuration that repro's the problem at least 25% of the time, that would be fantastic!\n. Added some much needed docs about manifest.mobile.json values in the last release:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\nShort answer is that you can disable CSP via:\n\"csp\": \"default-src: *\"\nin your manifest.mobile.json.\nI also suspect this problem has gotten worse with the latest crosswalk versions :S. Next version of CCA will allow setting the crosswalk version via manifest.\n. Hey, thanks for the report! Looks like the actual error message might be even further up the page though. Can you see if there are any other error messages that come before what you've pasted?\n. Might be related to our changes to Play Services to compile it as an android library? How do you repro this?\n. Was just playing with this and it works fine. Likely issues were due to building with ANT instead of Gradle.\n. All done! Only other tidbit is that usually (I think) you check that *error != nil to see if the command failed rather than checking return value. In all of these cases, it's fine how it is though.\n. Nope, sounds like your now the authority on the subject :) (thanks for pointing that out)\n. Nope, sounds like your now the authority on the subject :) (thanks for pointing that out)\n. Couple more nits, but LGTM! Feel free to merge into master once you're happy with it.\n. In what context does this come up?\nOn Mon, Oct 13, 2014 at 9:11 AM, Michal Mocny notifications@github.com\nwrote:\n\nBased on my quick reading, these are temporary files used to generate the\nfinal aligned apk. Can we delete these as a final process?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/366.\n. @sloisel - We'd like build tools 19.1 \"or later\" to be true. Do you remember what version of the build tools you had?\n1. JDK 7 should work as well. We're still a bit uncertain as to how to set this up correctly (could maybe even make JDK 6 work, is that what you had?)\n. We new support JDK 6,7, or 8. Closing\n. Note: Seems like this and #375 show differences between x-walk webview and system webview when it comes to SSL errors. I don't believe the system webview shows dialogs.\n. A prepare hook would work, but I'd recommend adding an explicit grunt / gulp / whatever to compile the files and dump them into the www/.\n. Looks great!\n. cca apps do some URL mangling to serve from chrome-extension:// URLs. That\nsaid, I'd expect relative URLs to work in both environments.\n\nOn Fri, Oct 17, 2014 at 7:38 PM, Jesse notifications@github.com wrote:\n\nI've been testing a project in mobile Chrome apps and with standalone\nCordova. One thing I've noticed is that relative paths are served correctly\nin CCA, but I get a 404's from the standalone Cordova build. What is the\ndifference between the two approaches? Are mobile chrome apps hosted on a\ndevice local server?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/373.\n. FYI - @clelland \n\nLooks like the issue is that it can't extract the versionCode from your AndroidManifest.xml. This should be getting set by cca... Could you check:\n1. That you have a version set in your manifest.json\n2. That after a prepare, it is being set in your platforms/android/AndroidManifest.xml\n. Awesome! Thanks! Was able to make a fix.\n. Noticed this in CADT - open crosswalk webview in devtools, then just refresh via ctrl-R. Happens ~5% of the time.\n. Saw this on x86 emulator.\nAside: App crashes after about 15 reloads. with:\nI/ChromeNavigation(16493): location.reload() detected. Reloading via file:///android_asset/www/plugins/org.chromium.bootstrap/chromeapp.html\nD/XWalkCordovaWebView(16493): >>> loadUrl(file:///android_asset/www/plugins/org.chromium.bootstrap/chromeapp.html)\nD/XWalkCordovaWebViewClient(16493): onPageFinished(chrome-extension://dblbaeajaadidmnjifaakkhgnepcaoko/index.html)\nD/CordovaActivity(16493): onMessage(onPageFinished,chrome-extension://dblbaeajaadidmnjifaakkhgnepcaoko/index.html)\nF/libc    (16493): Fatal signal 11 (SIGSEGV) at 0x3f68e5e0 (code=1), thread 16641 (BrowserBlocking)\nF/libc    (16493): heap corruption detected by dlmalloc\nF/libc    (16493): Fatal signal 6 (SIGABRT) at 0x0000406d (code=-6), thread 16635 (Chrome_InProcRe)\nI/DEBUG   (  933): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (  933): Build fingerprint: 'generic_x86/sdk_x86/generic_x86:4.4.2/KK/999428:eng/test-keys'\nI/DEBUG   (  933): Revision: '0'\nI/DEBUG   (  933): pid: 16493, tid: 16641, name: BrowserBlocking  >>> org.chromium.appdevtool <<<\nI/DEBUG   (  933): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 3f68e5e0\nI/DEBUG   (  933):     eax 9fa13a50  ebx a48c1ab0  ecx 00000010  edx b9aa7308\nI/DEBUG   (  933):     esi 9fa13a94  edi 9fa13a08\nI/DEBUG   (  933):     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\nI/DEBUG   (  933):     eip b9a83aa2  ebp 9fa13a18  esp 9fa139e4  flags 00210a06\nI/DEBUG   (  933):\nI/DEBUG   (  933): backtrace:\nI/DEBUG   (  933):     #00  pc 00732aa2  [heap]\nI/DEBUG   (  933):     #01  pc 001d29ed  /data/app-lib/org.chromium.appdevtool-1/libxwalkcore.so\nI/DEBUG   (  933):     #02  pc 000fca8f  [stack:16641]\nI/DEBUG   (  933):     #03  pc 001d3b2e  /data/app-lib/org.chromium.appdevtool-1/libxwalkcore.so\nI/DEBUG   (  933):     #04  pc 000fcafb  [stack:16641]\n. Ah, this looks like it was a regression in CADT. Should work fine with CCA directly, and I'll push out a new CADT today with the fix! :) Thanks for reporting!\n. Wow, so when I said \"today\", I was clearly lying. :P. A new version is now up though with the fix (v0.11.0)\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/releases\n. LGTM!\n. To repro:\ngit clone https://git-wip-us.apache.org/repos/asf/cordova-app-harness.git\ncd cordova-app-harness\n./createproject.sh AH\ncd AH\ncordova run android\nelsewhere\ncordova create foo\ncd foo\ncordova platform add android\ndd if=/dev/random of=www/bigfile bs=1024 count=50000\ncordova prepare\nadb forward tcp:2424 tcp:2424\n/path/to/cordova-app-harness/harness-push/harness-push.js push .\n. LGTM!\n. LGTM\n. No one working on it, I don't think. \n. Looks like the prepare step is having trouble finding the <key>CFBundleIcons</key> within your iOS Info.plist file.\nWe should add some error handling around this, but I'd be curious to know if you see <key>CFBundleIcons</key> within your platforms/ios/APP_NAME/APP_NAME-Info.plist`\n. I'll look at fixing this error a bit later (code is looking for ,\nbut you have  for some reason. Maybe Xcode has changed?)\nBut to answer your questions (sorry this is poorly documented\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n)\n1) Should work to specific per-platform via manifest.mobile.json {\n\"android\": { \"icons\": {} }, \"ios\": { \"icons\": {}}\n2) We will, but haven't yet.\nOn Thu, Oct 30, 2014 at 11:58 AM, Felix Hammerl notifications@github.com\nwrote:\n\nok, that's something i can make sense of. there's an empty NSDictionary in\nthere ... that was probably caused by me playing around with the icons...\nCFBundleIconFile\nicon.png\nCFBundleIcons\n\nCFBundleIcons~ipad\n\nsome more questions about the icons... there was the issue #266\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/266 and this\nsnippet\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/post-prepare.js#L68-L204,\nbut i can't really piece it together. you try to detect the icons from the\nfile names? what about the different platforms?\n1) is there a way to specify which icon set should be used on the specific\nplatforms? we use different icon sets on ios/chrome/android\n2) are you adding the iphone 6 plus\nhttps://developer.apple.com/library/ios/documentation/userexperience/conceptual/mobilehig/IconMatrix.html\nicon size as well?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/399#issuecomment-61117116\n.\n. Looks like the API was added in Chrome 37, so it should be there (\nhttps://code.google.com/p/chromium/issues/detail?id=379976)\n\nMight be related to\nhttps://code.google.com/p/chromium/issues/detail?id=373032 - but we serve\nfrom file://, so would think it to be considered secure.\nCrosswalk bug?\nOn Thu, Oct 30, 2014 at 8:15 AM, Tankred Hase notifications@github.com\nwrote:\n\nI'm trying to get native RSA key generation working on Android using the\nWebCrypto Api:\nhttps://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#SubtleCrypto-method-generateKey\nThe key generation works fine in Chrome 38 on the desktop and Chrome 38\nfor Android, but in the crosswalk WebView it fails with the error message\n\"The requested operation is unsupported\". Here is my code:\nhttps://github.com/openpgpjs/openpgpjs/blob/master/src/crypto/public_key/rsa.js#L147\nI googled for this error message and it seems it appears in the chromium\ncodebase for webcrypto:\nhttps://github.com/scheib/chromium/blob/master/content/child/webcrypto/status.cc#L154\nI hope this will help you to reproduce and fix the issue. Please let me\nknow if I can be of further assistance. I also created this issue in the\ncrosswalk jira here:\nhttps://crosswalk-project.org/jira/browse/XWALK-2857\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/400.\n. I think there was a recent fix for this in Cordova proper that we've yet to\npull into cca. No good work-around I can think of (we'll get this fixed up\nsoon), but you could try adding a post-prepare hook to copy in a new\nversion of cordova.js from here:\nhttps://github.com/apache/cordova-ios/blob/master/CordovaLib/cordova.js\n\nOn Thu, Oct 30, 2014 at 9:18 PM, Ed notifications@github.com wrote:\n\nI've got my app more-or-less working on android, but I've run into\nproblems getting the iOS version working. I'm running from OSX Yosemite\n(10.10) and the latest Xcode (6.1). I can add the ios platform and build\nsuccessfully, when I try to run/emulate I get a blank screen. I can use the\nweb inspector from the latest webkit nightly, from which I've tried\nchrome.runtime.reload() and see:\n[Error] Deprecated attempt to access property 'geolocation' on a non-Navigator object.\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to set property 'geolocation' on a non-Navigator object.\n    assignOrWrapInDeprecateGetter (cordova.js, line 484)\n    mapModules (cordova.js, line 1436)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'geolocation' on a non-Navigator object.\n    assignOrWrapInDeprecateGetter (cordova.js, line 484)\n    mapModules (cordova.js, line 1436)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    (anonymous function) (statusbar.js, line 99)\n    build (cordova.js, line 53)\n    require (cordova.js, line 68)\n    localRequire (cordova.js, line 49)\n    mapModules (cordova.js, line 1416)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1156)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1149)\nI've tried blowing away the platform/plugin dirs and cca update etc to no\neffect.\nDo I need to add things to manifests somewhere (and is there any good\ndocumentation for exactly how all that stuff works)? Is there a\ncommand-line argument to run against older iOS versions?\nI can get a fresh demo app running on iOS with cca create testios\ncom.company.testios 'Test iOS' BTW, so I assume this is something related\nto setting up the plugins I'm using correctly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/402.\n. Related to #404 \n. Thanks for bumping the priority of this, and also for the great write-up!.\nDefinitely need to add these missing icon sizes.\nDid you see the docs here: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. LGTM!\n. lgtm!\n. Ah, glad you figured it out! This is definitely a bad bug, and one we'll be looking to address in the near future. It's filed also at:\nMobileChromeApps/chrome-app-developer-tool#31\n. Another thing we could do is to prefix our copy of GCDAsyncSocket (search &\nreplace-style)\n\nOn Wed, Nov 12, 2014 at 4:00 PM, Michal Mocny notifications@github.com\nwrote:\n\nAlright, theres little we can do about this.\nHowever, Rui, maybe we should create a plugin that simply holds the\nGCDAsyncSocket library, so that at least in the future all plugin authors\ncan depend on a single shared source. We've done this in the past for other\nlibraries.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/419#issuecomment-62730829\n.\n. Wondering if this recent commit addresses your issue?\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/fd7980b1c1877fb19f08db977de007b2927424fe\n\nWe've not yet updating the plugin to include this change, but can certainly expedite if it's what you need.\n. Hmm, yes, I would expect that to work as you've described. \nStrange that ant.properties affects anything. That would seem to indicate that ant is being used to build instead of gradle. What do you build logs look like? \n. Thanks guys! Looks like this was indeed a bug with apk signing not happening when the passwords were not within the .properties file. I've committed a fix, and it'll be in the next release. As a work-around (and as you've already found), temporarily put the passwords in the android-release-keys.properties file.\n. :) Thanks for bringing up the issue!\n. Agree this is worth looking into. My guess is that it's the\nnetwork-information plugin that requires it. Most apps probably don't care\nabout navigator.connection.type. We'd still need something to hook up to\nnavigator.onLine. I think I've seen that some apps do this by querying your\nIP addresses and checking that there's a non-localhost one.\nOn Fri, Nov 14, 2014 at 6:13 PM, Michal Mocny notifications@github.com\nwrote:\n\nGreat point. Thanks for bringing it up.\nYou're right that these are coming from the cordova platform template\n(though the list of permissions has fallen drastically since the plugin\nbreakout happened).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/433#issuecomment-63097178\n.\n. lgtm\n. Issue here is likely the move from ant -> gradle for building. Another workaround would be to add a build-extras.gradle file beside the build.gradle file within platform/android, and have it add the .so files. \n\nStill, we should likely fix the build.gradle template to look for .so files.\n. I've merged this and updated CADT to use it.\nOnly gotcha I saw was that it's super spammy about sending updates about pipe progress. We'll probably have to throttle them to not degrade performance.\n. I'm curious to hear more about what you're trying to do. InAppBrowser is mean more for showing either static local content, or http:// content (but not local content that XHRs).\n. Looks like there's no plugins involved here (hence the [native code] bit). So maybe the solution would be in using Cordova plugins for it? Some investigation required.\n. Definitely a webview bug. Might try to drop down to the system webview for now by adding:\n\"webview\": \"system\"\nto your manifest.mobile.json file.\n. Going to close as not fixable by our middleware. Feel free to file a bug on crbug.com or on crosswalk's JIRA.\n. Thanks for bringing this to our attention! I've just released the fix as an update to the bootstrap plugin, so you should be able to re-generate your app and have it pick up the new version:\norg.chromium.bootstrap@1.1.1\n. Hmm, I did see that as well, but didn't clue in that it meant failure. Looks like the problem is that the polyfill is trying to assign the baseURI property of a document, but safari doesn't like that:\nfunction makeDocument(resource, url) {\n        var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\n        doc._URL = url;\n        var base = doc.createElement(\"base\");\n        base.setAttribute(\"href\", url);\n        if (!doc.baseURI) {\n            doc.baseURI = url;\n        }\ndoc.baseURI is null because Cordova loads from file:// URLs. I'll have to see if there's a way we can fix this up either within or outside of the polyfill.\n. Created a PR for the polyfill (which I believe is at fault here). One-liner to apply yourself if you'd like to be unstuck :)\nhttps://github.com/webcomponents/webcomponentsjs/pull/77\n. Don't believe there've been any changes since 6 days ago.\n. Hmm, few things going on here it seems. \nFor mobile chrome app, you don't need to listen for deviceready. Instead, you should listen for load or DOMContentLoaded. I see you've tried that in your commented out code though. Did the event never fire, or was something else going on with it?\n. LGTM! But I think once per second is maybe too conservative. How about 10 times per second?\n. Think you're right! I've filed a bug on cordova-android about this and have checked in a fix. This will be included in the next cca release (likely next week).\nhttps://issues.apache.org/jira/browse/CB-8112\n. Long overdue, I know!\nJust published a release candidate that includes newer crosswalk. Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. @clelland Is this what you fixed upstream?\n. Just released 0.5.1 proper. \n. Inversely - It's quite strange that a first run of \"cca run android\" will install platform ios. The behaviour should more likely be:\n- If platform specified for run or build, then add that specific platform if it's supported.\n- If platform not specified, and no platforms are installed, fail with a useful message\n- If platform not specified, and at least one platform is already installed, then use that/those\n. There is now more code that obeys the parameter, but it's still a problem when there are multiple accounts. We could use GET_ACCOUNTS permission to see if there are more than one, and fail if there are more.\n. The latest iOS Google Identity supports a silent login, but on Android I think we're still stuck for ideas\n. Looks like an error caused by a change to notifications on Android that wasn't reflected on iOS. The notifications plugin doesn't work on iOS currently anyways, so I'll put together a fix to more properly stub it out. Regardless, this message should be innocuous \n. To use cca@master, refer to https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/dev-docs/cloning-this-repo.md\nPlanning on releasing this week :)\n. Remembered the reason for it! It's because on start-up, getUrl() is used to figure out what the URL should be when switching from file:// -> chrome-extension:// on start-up. Certainly this is fixable by changing how start-up figures out the URL, but that's why the function uses the manifest instead of the current URL to do its work\n. Erg, github is hiding the contents of that first string. It does say \"<all_urls>\"\n. @wesleycho - what version of cca are you using?\nCould you verify that your platforms/android/res/xml/config.xml has an <access origin=\"*\"/> entry in it?\n. Awesome! I see now that the problem is that the INTERNET permission was being removed. Pushed a work-around for it, and filed a Cordova bug for it: https://issues.apache.org/jira/browse/CB-8236\n. Might try setting the orientation preference in the config.xml file. Some info here:\nhttp://docs.phonegap.com/en/edge/config_ref_index.md.html#The%20config.xml%20File_global_preferences\n. Looks like this is an upstream bug and was just fixed in cordova-android via apache/cordova-android@8e5c93a31. Fix will make it into the next cca release\n. Awe, what a cliff-hanger! Was it something to do with svg in the end? Is there some gotcha to avoid here?\n. Interesting :P.\nIt uses UIWebView. We'll be onboard with wkwebview though once Cordova\nsupports it.\nOn Thu, Jan 8, 2015 at 10:29 AM, Felix Hammerl notifications@github.com\nwrote:\n\nwhen we concatenated the svg, we used was a) the individual sources and b)\nthe concatenated source, so basically we duplicated the svg. that seems to\nhave broken the parser or something along the way. on a semi-related note:\ndoes cca use the WKWebView or the (legacy) UIWebView?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/497#issuecomment-69194857\n.\n. Relates to #484 \n. Likely enough that we should close this and assume so :)\n. Thanks for pointing out the compilation issue! I've filed that as #506 (and fixed it - will hopefully be released soon).\n\nI tried creating an app that listens, then connected via telnet and all seemed to work okay. Could you provide the code your using?\n. Okay, found the bug! It was actually a combination of two things:\n73b85bf005d574ee484a and 680e07e0b24.\nBasically, the broken case is when you call listen() from within deviceready. If you wrap it in a setTimeout(0), it'll probably work. \nWill post a new version of the plugin as soon as Cordova plugin registry is unbroken (won't currently take plugin updates :()\n. Also - if you're looking for some sample code, here's a simple HTTP Server:\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/blob/master/www/cdvah/js/HttpServer.js\n. Was going to wait until we're able to publish the fix to answer.\n. Seems the plugin registry is having issues :( \nhttps://issues.apache.org/jira/browse/CB-8284\nI've reverted the broken release, so should be good again.\n. Closing since we can't really fix this on our end.\nWe do have a plugin for push messaging on iOS though: \nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.pushMessaging\nLikely the best setup for cca is to use chrome.gcm for Android, and chrome.pushMessaging for iOS.\n. I've got a fix in progress\n. (it's exactly what you said)\n. What does 'ulimit -n' output for you? \n. Yes! Really sorry about this guys :(.\nI released the fixed version shortly after discovering the mess-up, but looks like caching is getting the better of my fix. Please try clearing the cache via:\nrm -r ~/.npm/registry.cordova.io/\nrm -r ~/.plugman/cache\nAnd trying again (it should pick up 1.1.3 now)\n. Looks like the maps plugin isn't compatible with the tip-of-tree version of cordova-android that we're using in CCA. Good news is that cordova-android@4.0.0 is nearing launch readiness.\n. Yikes! Hope your soul managed to recover from this one!\nInteresting that vanilla cordova works fine, because the errors you report are actually due to code in Cordova. \nWould be awesome if you could try and debug this for us with your configuration. Here's where the JAVA_HOME logic is:\nhttps://github.com/apache/cordova-android/blob/master/bin/lib/check_reqs.js#L105\nFor adb, maybe what we can do is just to a test execute of the command in checkenv to see if it runs okay.\n. Also - they copy of cordova-android that cca uses is bundled with the tool, so assuming you npm installed cca, you'll find it here:\n$(dirname $(which cca))/../lib/node_modules/cca/cordova/cordova-android/\n. Likely the case is that the version of cordova-android that you're using is too old.\n. Absolutely! Just \"cordova plugin add\" it :)\nOn Thu, Feb 12, 2015 at 1:34 PM, Brian Geppert notifications@github.com\nwrote:\n\nIs it possible to use the google.payments polyfill without the Mobile\nChrome Apps wrapper? I'd like to do that until I'm able to work out exactly\nwhere the incompatibility is between Mobile Chrome Apps and the WkWebView\nplugin.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/516#issuecomment-74125380\n.\n. Given that it happens in both contexts, I'd guess the issue is with Crosswalk. We're working on updating the version of crosswalk for the next CCA release, but if you'd like to try it now: \n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/dev-docs/cloning-this-repo.md\n. I think the windowSoftInputMode settings are only settable by making the change right in AndroidManifest.xml. That said, adjustResize is the default, and I think is the one that makes sense.\nYou should get window.onresize events when the keyboard comes up, so worse case you can scroll the page yourself.\n. Also - curious if system webview vs. crosswalk makes any difference here.\nE.g. try adding:\n\"webview\": \"system\"\nto your manifest.mobile.json and see if it works any differently.\n. Yeah, it's in an annoying state right now in that it depends on an\nunreleased version of cordova-lib. Should work out if you npm link the\nmaster version of cordova-lib and cordova-cli. Also don't forget to npm\nlink the cca-manifest-logic module that exists within the repo.\nOn Mon, Feb 23, 2015 at 10:19 PM, Shane Gadsby notifications@github.com\nwrote:\n\nI've tried installing from the master branch (id'd as 0.5.2-dev at the\ntime of writing this) and from the normal stable (0.5.1), and while it will\ninstall just fine and even creates projects OK, when I do a first run (not\nhaving changed the new projects files at all) it fails with: Error: 404\nNot Found: org.apache.cordova.engine.crosswalk.\nAfter some digging, it seems this is because the repo for crosswalk has\nbeen renamed (to org.crosswalk.engine), with the cordova registry entry\nremoved(?); and due to the org.apache.cordova.engine.crosswalk plugin\ngetting marked as deprecated (in: cca-manifest-logic/src/plugin-map.js\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/cca-manifest-logic/src/plugin-maps.js#L51),\nit has removed all the current versions of my crosswalk files and cannot\nfind the new ones to add.\nIt's been like this nearly the whole month, any ETA on when this will get\nsorted out? (for now I can manually fix things, but its a pain)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/524.\n. Great! Yes. It will.\n. FYI - this is now resolved, and there's a release-candidate for the next version of cca:\n\nnpm install -g cca@0.6.0-rc1\n. Long overdue, I know!\nJust published a release candidate that includes newer crosswalk. Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. Or uninstall the app from the device before running.\nOn Tue, Mar 17, 2015 at 9:03 PM, Shane Gadsby notifications@github.com\nwrote:\n\nFailed version downgrade is due to the way the internal build number seem\nto work with Chrome Mobile Apps when you switch into and out of using\ncrosswalk (or in this case when you upgrade your crosswalk); just bump the\nversion number up and you should be good to go\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/528#issuecomment-82662421\n.\n. Thanks for trying it out! I don't think --link-to:path has ever worked. Try --link-to=path or --link-to path.\n\nWhat did you have to change in manifest.json? More than the version?\n. We've switched to using Crosswalk's maven repository rather than bundling a copy of their .jar / .so. This works fine with Gradle, but I don't think it works on Eclipse (at least not by default). Android Studio works fine if you can stomach an IDE switch.\n. Great to hear! Just released cca@0.6.0, so closing :)\n. Thanks for bringing this to our attention! I've made the fix that you suggested. \nhttps://github.com/MobileChromeApps/cordova-plugin-chrome-apps-bootstrap/commit/0638d3370c29d47ac5396c36067b2307a97dd9d2\n. A change was made to the i18n plugin that breaks on older versions of CCA. \nThe good news is that if you upgrade again, (to version 0.6.0), this should be fixed. \nThe even better news is that the new version of CCA pins against the major version of relevant plugins, so breakages like this should not happen again.\n. Looks like that came from our updating of cordova-android to a newer version. The keyboard events were removed from the core android library since they were not cross-platform, and can be added using a plugin. I'd suggest adding https://github.com/driftyco/ionic-plugins-keyboard to get hide/show events\n. Tough one. You can always choose the webview at build time, but that's about it. I'd suggest filing a bug at https://crosswalk-project.org/contribute/report_bugs.html and include the stack from your adb logcat\n. There's a somewhat confusing discussion here:\nhttps://issues.apache.org/jira/browse/CB-4404\nI don't think there's a <preference> for it in cordova, but perhaps there should be.\n. Pull request to fix this upstream:\nhttps://github.com/crosswalk-project/cordova-plugin-crosswalk-webview/pull/37\n. JNI is the answer afaik.\n. Sorry for the rough update on 0.6.0 :(. We've made changes so that it shouldn't happen again.\nFor this error, try installing an older version of the i18n plugin, or maybe just try deleting the reference to that gradle file from the platforms/android/project.properties file.\nThat said, updating to 0.6.0 would obviously be preferred. It does set the targetSdk to 21, but I believe still has the minSdk set to 14. We've also update the instructions here to show that you can now set the minSdk via a command-line flag.\n. So you know - The CSP values options are documented here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\nso, you'd use \"cspUnsafeEval\":\"true\" in your manifest.mobile.json\n. What version of cca are you using?\n. We had a bug in the bootstrap plugin, but it's been fixed now (https://github.com/MobileChromeApps/cordova-plugin-chrome-apps-bootstrap/issues/1)\nTry running caa upgrade and try again.\n. Highly recommend uploading two. Should be able to build just one with cca build --release -- --gradleArg=-PcdvBuildMultipleApks=false\n. Yikes! Could you paste the contents of your config.xml file? It should now have corresponding <icon> entries in it.\n. Thanks guys! I've identified and fixed the bug upstream:\nhttps://issues.apache.org/jira/browse/CB-8832\nExpect this to reach CCA in a couple of week.\n@felixhammerl - thanks for sharing your awk & sed skillz!\n. Sounds like your upgrade didn't pull in the newer version of cordova-android for some reason. I'd double check that the logs at the start of your output print out \"cca v0.6.0\"\n. Try using:\ncordova.InAppBrowser.open('URL')\nThis was recently changed from window.open() I think (to match desktop behaviour)\n. Yeah, not sure what's going on. Could you try updating to the latest cca (0.7.0) via npm install -g cca and see if it still happens?\n. Certainly an unfortunate bug. Also reported in #548. Fix is on Cordova's side (cca did it's own icon copying in 0.5.1, but now uses Cordova's icon support... which had this bug). \n. Ouch! That does suck! :(\n@huningxin - do you know if this is a known issue with Crosswalk?\n. @fujunwei - can you help with this?\n. For reference - v0.5.1 used Crosswalk v8 (Chrome 37), and v0.6.0 uses Crosswalk  v11 (Chrome 40).\nNeither used cordova-plugin-indexedDB, but instead just used the built-in IndexedDB.\n. This has been fixed.\n. Merged in PR with the fix.\n. Best way to exclude it is to not put it within the www/ directory.\n. Thanks for bringing this up! Should be all fixed now. please re-open if anything is still failing for you\n. Best thing to try is attach remote web inspector via safari, then hit command-R to refresh the page and see what errors spit out on the console.\n. Sounds like probably there's a script within hooks/ that doesn't have the executable bit set on it. Could also be that one of the plugins has a hook with the bit missing...\n. If you want it to work on desktop as well, then have a look at: https://github.com/GoogleChrome/apps-resource-loader\nIf you just want to loosen the CSP, you can completely override it via \"csp:\" \"foo\" within manifest.mobile.json\n. Sorry it's not in a more obvious spot, but they are here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. Here's line 97:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/cca-manifest-logic/src/analyse-manifest.js#L97\nCould you double check that line 97 looks the same on your machine?\n(/usr/local/lib/node_modules/cca/node_modules/cca-manifest-logic/src/analyse-manifest.js)\nPerhaps you have a number as your manifest.mobile.json's \"webview\": setting?\n. The chromeappstyles.css error is a bug/quirk with devtools I think. The styles do seem to apply fine, so their stylesheet is being loaded.\nProbably this is a bug in webcomponents.js\n. Thanks @Imskull! You are exactly right. I've updated the .css path and published a new version of the bootstrap plugin.\n. (Note: new version is cordova-plugin-chrome-apps-bootstrap@2.0.8)\n. Published a new version of the plugin with this fix. Thanks for reporting and sorry for the breakage!\n. Shouldn't need to wait. Try running \"cca upgrade\" to force all plugins to be updated.\n. Try deleting your ~/.npmrc file\n. hmm, I think switching to legacy would break android's navigation whitelist handling. Maybe we could instead pin the whitelist plugin to an older version that is still compatible with cordova-ios?\n. Merged and published! Thanks!\n. Dupe of #580. I'll see if i can get it fixed today.\n. Weird - not sure how you got into this state, but I'd guess that running:\nchmod a+x /usr/lib/node_modules/cca/cordova/cordova-android/bin\nwould fix it.\n. Looks like the bug was upstream in cordova's tools. I've filed & fixed the issue here: \nhttps://issues.apache.org/jira/browse/CB-9362\nWe'll need to wait for a new cordova release for cca to be fixed, but in the mean time installing with \"-g\" is a good work-around, as is using nvm to install node.\n. I would consider this a bug in the plugin (worth opening an issue there).\nWithout fixing the plugin, you can work around it by lowering your app's CSP to allow unsafe-eval. See cspUnsafeEval in manifest.mobile.json:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. This is a sad known issue with android webviews :(.\nA good work-around exists though - to use the webaudio api:\nhttp://middleearmedia.com/web-audio-api-audio-buffer/\n. Sounds like a great addition! I'd be happy to accept a PR for it if you'd like to work on it?\n. Looks like the problem was unrelated to the 0.7.3 changes, but rather from the latest Android WebView update changing Content-Security-Policy to block blob: urls (CSPv1 didn't have them blocked, but CSPv2 adds them to the block list).\nI've published an update to add them to the CSP whitelist (v0.7.4)\n. We have no plans for this to be honest, but would happily accept patches to our plugins that add win10 support.\n. That's really cool!\nOn Thu, Aug 6, 2015 at 10:25 PM, Imskull notifications@github.com wrote:\n\nGreat news, just found node-webkit had supported Chrome App a month ago.\nhttps://groups.google.com/forum/#!msg/nwjs-general/zeC6SedUSFY/BlumrYJeVHYJ\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/590#issuecomment-128564790\n.\n. For CCA apps, you can set the crosswalk version in the manifest.mobile.json file, so this behaviour is intended. I've updated the docs to mention how you do this.\n. Sorry for a lack of update, but this appears to be a bug in Cordova and a fix has not yet been released. Expecting a new release some time next week.\n. This is now (finally) fixed with cca v0.8.0!\n. Looks like you're running cca v0.6.0. Can you try updating to the latest (v0.7.4) and try again?\n. chrome.storage.sync doesn't work. chrome.storage.local should work, and for syncing with drive you should use drive's JS API directly.\n. Sounds like a bug, but one that won't be getting fixed :(.\n\nsyncFileSystem is a super-powerful API, but turns out not one that can be efficiently implemented in Cordova. \n. It doesn't look like there's a way to get it back, but I don't believe there were any commits to it after it was split out.\n. Good luck!\n. Certainly sounds like a webview bug. Probably the best way to get the bug filed with the team would be to provide a small test page that reproduces the issue. If you're able to do that, I can file a bug on crbug.com\n. I think moving to Cordova directly is the right way forward here. You can\nstill use most mobile-chrome-apps plugins from a regular cordova project.\nOn Fri, Sep 23, 2016 at 5:42 AM, Helidium notifications@github.com wrote:\n\nYes I'm having the same problem, I ended up migrating to cordova instead...\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/610#issuecomment-249148407,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABTljPyG8WjhUbvIlg1RQN_vGFKlWiMZks5qs58igaJpZM4KDGVk\n.\n. Shoot, somehow didn't see your pull request until now. It looks the code has churned enough that the problem got fixed anyways.\n. Pretty bad that I didn't see this until now. :(. This would have been quite useful 4 months ago!\n\nWe've got Play Services installing through a dedicated play services plugin now. \n. Yes. I fixed it by removing the weird hashbang.\n. Hey Adam,\nThanks for pointing this out!\nI had a look at your app and was able to reproduce your findings.\nThe fact that the page runs fine when you set location=dartdemo.html, but\nnot when location=chromeapp.html indicates to me that there is something\ngoing on between dartpolymer and our chromeapp runtime that causes\ndartpolymer to not finish initializing.\nI'm not yet sure what it is though :(.\nOn Mon, Dec 9, 2013 at 12:11 AM, adam notifications@github.com wrote:\n\nThe dart polymer application loads on iOS without any issues. When loading\non Android only a blank page shows up. If remote devtools console is opened\nand location.reload() is called on chrome-extension://undefined/index.html.\nLoading takes a little bit of time on Android. Created an example\napplication\nhttps://github.com/financeCoding/PolymerDartDemo\n[image: screen shot 2013-12-08 at 8 20 24 pm]https://f.cloud.github.com/assets/654526/1702376/3d6d6a60-6090-11e3-969f-1ceb09139f35.png\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/37\n.\n. Alright, I think I've figure out what the bugs here were and have fixed\nthem up. If you try to import your chrome app again using the dev branch of\nmobile-chrome-apps, (don't forget to run mca init after switching\nbranches), then your demo app should work. (tested only on kitkat webview\nmind you)\n\nOn Mon, Dec 9, 2013 at 4:41 PM, adam notifications@github.com wrote:\n\nThe behavior with android was consistent on emulator and hardware\nphone/tablet.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/37#issuecomment-30176474\n.\n. Thanks again! This certainly revealed another bug in our start-up flow,\nwhich I believe to have fixed. Try re-creating from the latest on the dev\nbranch again and let us know if it's not working.\n\nOn Tue, Dec 10, 2013 at 11:01 PM, adam notifications@github.com wrote:\n\niOS console display:\n2013-12-10 19:57:00.528 PolymerDartDemo2[72608:c07] Multi-tasking -> Device: YES, App: YES\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromebootstrap] 0.041008ms\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromeextensionurls] 0.226021ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][chromenavigation] 0.029027ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][TotalPluginStartup] 1.443028ms\n2013-12-10 19:57:00.569 PolymerDartDemo2[72608:c07] Resetting plugins due to page load.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/38#issuecomment-30292304\n.\n. Ah, I wondered if that was the issue. (1. create project 2. add indentity\nto permission 3. it doesn't work).\n\nCurrently the answer is that you need to recreate the project again, but\nwe're hoping that soon we'll have \"mca prepare\" take notice of the\npermissions change and sync the correct plugins.\nOn Thu, Dec 12, 2013 at 12:46 AM, adam notifications@github.com wrote:\n\nActually this issue should be renamed on documenting how additional\nplugins are added when importing projects with existing manifest files.\nWhat should you do if your project is already created? within a cordova\ncontainer?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/39#issuecomment-30390917\n.\n. I confirmed this works on iOS a while ago as well. I think the remaining bug with it though is that on iOS we're not setting enabling Chrome's back button to return to our app.\n. Thanks for pointing this out!\n\nSeems reasonable to put this on the roadmap.\nOn Thu, Dec 19, 2013 at 6:24 PM, chameleon95 notifications@github.comwrote:\n\nAs we already have okhtttp for Android...\nAny plans to integrate https://github.com/twitter/CocoaSPDY for iOS...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/43\n.\n. Thanks for the feedback. We'll be working on an npm-based release soon!\nStay tuned :)\n\nOn Mon, Jan 6, 2014 at 9:08 AM, cesine notifications@github.com wrote:\n\nah thanks for pointing those commits out! i should have grepped the log\ninstead of using github. i've heard those reasons before, i guess you tried\nusing the package.json to fix your deps to a version/commit/tag? if you\npublish a npm module then it would be far easier for users... i really\ndon't enjoy having the full path of mca in my config files. i guess you\nknow that but youre waiting until mca is more stable?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/44#issuecomment-31665731\n.\n. Thanks Pete!\n\nThe chrome-navigation plugin contains the code from Open in Chrome already. Might be that it's broken though, do you have a project that this is happening with?\n. This is awesome! \n. This is fixed now that bootstrap was refactored to not have side-effects.\n. Glad to hear you requesting this API! We've done a lot of the ground work for it already, so it should be available in the coming weeks.\n. its closer than ever, but not yet.\nOn Thu, Mar 6, 2014 at 10:07 PM, Michal Mocny notifications@github.comwrote:\n\n@agrieve https://github.com/agrieve Can we implement this with the new\nfile plugin?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/52#issuecomment-36963962\n.\n. The fix is now included with cca@0.0.4\n. Thanks for pointing that out!\n. Try using \"cca run android --target=HASH\"\nWhere hash is found by running: \"adb devices\"\n. Are you using the full hash? on my machine, the hash is 16 characters long.\n. Sure. \n. Can you confirm if running with --target=HASH works now that you've run android update adb?\n. Thanks for figuring this out :) I'm sure it'll help the next person to hit it.\n. Ah, you did catch a bug here, but the bug is actually in our blog post. The payments API actually is supported on iOS :)\n. Thanks for reporting! We did already know that doesn't work, but letting us know what features you wish worked helps us a lot to know what to build next :)\n. Thanks for bringing this up! Certainly sounds like a bug. What platform (Android or iOS) did you try this on?\n@mmocny - Seems a good unit test to add.\n. Thanks for pointing this out! We actually do some trickery to make that work, so probably a bug on our side.\n@clelland \n. Yeah, I think it makes sense to add what user-agent CSS differences that we can. This certainly seems like a big one.\n. Those messages should show up in logcat (\"adb logcat\")\n\nIf using a debugger would help, it's fairly straight-forward to open your project in Eclipse and set breakpoints.\n. Bug is about ChromeSocket.java, so this is Android. It probably is worth looking at using select(). I think doing so usually makes the code simpler as well. There's an example here: \nhttp://stackoverflow.com/questions/11509909/java-tcp-server-nio-with-selector-in-android\n. It's certainly a great idea! The way cca works though, is that it builds\nyour page after-the-fact, and so the  tag will actually be injected\nafter initial page load. We'll have to do some playing to see if the tag\nwill even tag effect because of this.\nOn Mon, Feb 3, 2014 at 1:56 PM, Tankred Hase notifications@github.comwrote:\n\nThanks for the quick response. @mikewest https://github.com/mikewestwas kind enough to point the existence of the CSP meta tag out to me a few\nmonths ago. Just thinking out loud here...\nFrom what I understand the reasoning behind the default CSP settings in\nChrome Apps on desktop seem to be: \"because we give you powerful new Apis\nlike Access to the Filesystems and raw TCP sockets, you'll need to play by\nthese stricter new rules\"\nhttps://developer.chrome.com/apps/contentSecurityPolicy.html. Which makes\ntotal sense.\nSince Chrome App developers are used to these constraints on the desktop\nand your cca tool generates iOS and Android apps from that source code, how\nabout setting the same default CSP setting in the resulting cordova apps as\nwell (for supported platforms iOS 7 and Android 4.4+). This would take the\nburden of having to do this (and potentially doing it wrong) off developers\nand make it a part of the tool chain.\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-33986906\n.\n. Confirmed that the meta tag is taking effect and that's what's breaking it\nwithin cca. I think the root cause is that 'self' is referring the\nfile:///... instead of chrome-extension://... within the tag. It also\nbreaks cordova's bridge, which creates an iframe to gap://ready for its\nnative bridge.\n\nOn Tue, Feb 4, 2014 at 8:43 AM, Mike West notifications@github.com wrote:\n\nThe tag will certainly have effect when it's injected, but only for\nactions that take place after the injection. That is:\n\n\nWill result in script.js executing, then a CSP being deployed that would\nprevent future script execution. It's potentially worth doing, though I'm\nnot entirely sure I understand your use case.\nIf you've got questions, though, I'm happy to answer them. :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-34059912\n.\n. No, thank YOU! This will give us a great start on improving the CSP support in CCA.\n. Still working on updating the docs, but CSP is now supported and enabled by default in the latest version of cca! \n. Also note that I've updated the docs at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md to point out that the CSP is configurable:\n- csp: When set, overrides the default Content-Security-Policy for apps\n- cspUnsafeEval: Allow eval within Content-Security-Policy (default: false)\n- cspUnsafeInline: Allow inline scripts within Content-Security-Policy (default: false)\n. Thanks Meggin! \n\nFixed the payments link.\niOS instructions hopefully this week.\n. Actually, just added a link to Apple's instructions, so probably this is good enough.\n. Should be fixed in just pushed v0.0.5\n. Updated the docs use cordova/build (until the issue is fixed).\n. I believe this is fixed in cca@0.0.8. \n. This is actually working as expected. It's to match the desktop Chrome App behaviour. The thinking is that for \"apps\" (as opposed to web pages), most do not want top-level scrolling.\n. I'd add that in addition to porting from desktop->mobile, it is a way to\nshare code on both desktop apps and mobile apps.\nOn Mon, Feb 10, 2014 at 9:45 PM, Braden Shepherdson \nnotifications@github.com wrote:\n\nThis is definitely porting a desktop-style Chrome app so it will run on\nAndroid or iOS. There are two main parts of this: first, some hackery to\nsimulate the Chrome apps lifecycle: installation, launching, background\npage, chrome.runtime.app.createWindow, etc.; second, implementations of\nsome of the chrome.* APIs (sockets, identity, fileSystem, syncFileSystem,\nstorage, and others).\nAs part of the first goal, simulating the environment of Chrome Apps on\ndesktop means that we don't scroll by default. If you want to override it\nwith overflow: scroll, iScroll, or one of the other options, then you\ncertainly can.\nIf you're not using any of the Chrome APIs, you'll want either a mobile web\napp, or a normal Cordova app.\nBraden\nOn Mon Feb 10 2014 at 9:30:19 PM, Grady notifications@github.com wrote:\n\nI follow now, I was thinking more along the lines of Android apps which\nwould want scrolling. Am I thinking about the implantation of this\nproject\nwrong?\nI am thinking that instead of messing around with java you could easily\ncreate the apps using this project and it would be able to do some of the\nfunctionality. For example, a music/video site could easily create an app\nusing this project with their current APIs and source instead of having\nto\ndo the work to properly populate and link using Java. In this case you\nwould want to scroll.\nIf I understand what you are saying is this is more for taking a desktop\nchrome app and porting it to Android/IOS using the same backend and just\na\nnew UI to display the content that is mobile focused?\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721099\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721714\n.\n. Fixed by https://github.com/MobileChromeApps/chrome-cordova/commit/6babf3fc0bfc285194ddfc347e64c217ee64f974\n. Great question! A few answers here: \n- cordova.js lives at android_asset/www/cordova.js\n- chrome-extension:// URLs map to android_asset/www, so you could get at cordova.js via src=\"/cordova.js\"\n- cordova.js is loaded, and deviceready is fired before your background JS is run. You can detect if you're in the mobile context by checking for the existence of window.cordova\n. This is to be expected I think. CCA supports ICS devices and up (4.0+). Earlier devices are missing some key WebView APIs.\n. Short answer is that it indeed doesn't work at the moment. The problem is with the underlying Android WebView not being able to play audio or video that lives within an apk's assets. There's a related Cordova bug about it here:\n\nhttps://issues.apache.org/jira/browse/CB-6079\nAs a work-around, I believe that using Cordova's Media plugin should do the trick:\ncca plugin add org.apache.cordova.media\nvar m = new Media('notify.ogg');\nm.play()\n. document.write doesn't work on desktop packaged apps either:\nhttp://developer.chrome.com/apps/app_deprecated\n. FYI - disabled the wiki in project settings\n. .gitignore is well understood by by git users I think. We could put some\ndocumentation within .gitignore to say why we think those directories\nshould be excluded.\nOn Thu, May 8, 2014 at 12:06 AM, Michal Mocny notifications@github.comwrote:\n\nThinking out loud: if we add a default .gitignore to the default app\ntemplate, would that be awesome, or surprising?\nI just checked, and git init inside a repo thats already got a .gitignore\nworks as expected.\nBut it also means that git add -A followed by git status does not list\nplatforms/ and plugins/ and that may be confusing the first time. On the\nother hand, explicit git add platforms gives a nice error about being in\ngitignore, and .gitignore itself is listed in git status after initial\ninit/add which should be clear to devs what's going on.\nSO, I think just placing a .gitignore inside the default app will be quite\nvaluable to devs, though we should document as well.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/120#issuecomment-42511500\n.\n. Thanks for your question! \n\nMSE is an API that is too close to the bare-metal for us to add through Cordova's layer. KitKat's webview is based on Chrome 30, and it looks like MSE was unprefixed in Chrome 31, so it's very likely that it will show up in the next release of Android.\nSorry for not having better news :(\n. Be curious to know what your use-case is. This API is an extensions API, and so not available to apps. We could look at enabling it for apps though if there is a compelling reason to do so.\n. Thanks for the bug report. Very likely a problem with CCA. Just wanted to clarify which angular API you're using for navigation, and what version of Angular you are using?\n. Sorry, could you confirm as well that your project was created using v0.0.8?\n. Managed to track it down. Thanks again for reporting! Will try to do a release late next week with the fix.\n. Ah, I think the problem is that you'll need to recreate your project for the update to take effect (e.g. cca create dir2 --copy-from old-project/www)\nJust filed https://github.com/MobileChromeApps/mobile-chrome-apps/issues/140 to track this.\n. I think this means the version of Play Services on your phone is too old for the client library that ships with syncFileSystem.\nI think we are supposed to be catching this error in native code and redirecting to the Play Store when it comes up.\n. Everything at prepare time makes sense to me. Provides a better upgrade\npath.\nOn Wed, Apr 2, 2014 at 6:12 AM, Michal Mocny notifications@github.comwrote:\n\nSpecifically, we create a manifest.mobile.json with a default packageIdfield, and merge the two manifests at prepare time.\nIn some places, we guard against an empty packageId: (manifest.packageId)\n|| \"com.your.company.HelloWorld\" but in others we just blindly apply it\nwidget.attrib.id = manifest.packageId;.\nI think we should (a) guard against empty packageId, perhaps by adjusting\ngetManifest to set defaults for \"required\" values, or by auditing all the\nuses of manifest throughout the codebase.\nAdditionally, I think we should consider and moving when we create\nmanifest.mobile from create to prepare time.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/138#issuecomment-39327883\n.\n. believe this is fixed.\n. new Blob([string]) serializes string as utf-8. If you need it to be in another charset, then you'll need to manually convert from string->arraybuffer by looping over the string characters.\n. I think the problem is that you need to update the version of org.apache.cordova.file.\n\nThis is a known pain-point, and we're working towards making updating a dependent plugin easier, as well as being better about identifying when a dependent plugin's version is too old. \nFor now though, the easiest way to update it is to re-create your project using cca create --copy-from (or --link-to), and manually re-add your extra plugins.\n. At the very least, we could:\n- Make replaceState calls optional and make sure things still work.\nOne-step better, is to have chromeapp.html do:\nif (!history.replaceState) {\n location=\"file://$EXTENSION_ID/chromeapp.html\"\n}\nand have remapUri() map that to the right spot. This will at least make location.hostname and /absolute/paths work correctly despite the non-chrome-extension: URL\n. There might be a place in plugin.xml to list it instead of the readme.\n. The root cause here is that on desktop, requests are allowed if the proper CORS headers exists, whereas on mobile we enforce the whitelist regardless.\n. Updated: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/APIStatus.md\n. Just confirmed that cordova-android is in the package.tgz on npmjs.org. To be a bit more thorough with the re-install:\nnpm uninstall -g cca\nnpm cache clear cca\nnpm install -g cca\n. This will probably be the case for quite a while. Believe that the Android L previous has a fix for file://android_asset URLs though.\n. You don't need anything special in your manifest.json for WebSockets to work. Could you confirm with me what version of CCA or Chrome App Developer Tool you are using, and maybe share your code snippet?\n. To be clear - you updated to cca@0.1.1? We just added support for the Crosswalk webview in 0.1.1, so you'd need to re-create your project using that for it to work. (should be able to delete your platforms/ and plugins/ directories and type \"cca run android\")\nYou'll know if you're using the new webview because compiling now takes much longer :(\n. The -D is set from the version of android found in your PATH. (e.g. type which android).\nJust filed a bug that we should give preference to ANDROID_HOME: https://issues.apache.org/jira/browse/CB-7044\nLikely you can fix things up by making sure your PATH includes the version of android from your ANDROID_HOME.\nWould also encourage you to try out cca 0.1.1, as there are some nice improvements in there, most noticably the ability to push to Chrome App Developer Tool\n. Woohoo!\n. Thanks for bringing this up! I believe the change was made inadvertently and relates to https://issues.apache.org/jira/browse/CB-4404. I've fixed it upstream and the change will make its way into the next release of cca.\n. https://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this devices,\nand i actually need this for my app [image: :pray:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945\n.\n. Could you provide the code snippet that doesn't work?\n\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it works\non\nchrome desktop. Didn't try compiling with CCA but i don't think that makes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473>\n.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61081330\n.\n. Shouldn't need to wait for anything to write release notes for 0.1.1.\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/RELEASENOTES.md\nEspecially since a lot changed in this release.\n. Repro steps:\ncca.js create foo --link-to spec\ncd foo\n./cca pre-prepare\n./cca platform add android\n. Yeah, it's not implemented, mostly because we're not actually too sure what it should do on iOS since there is no shared filesystem there. Certainly we should add this to the README though.\n. Only reason we have it is for \"KeyboardShrinksView\" on iOS 6.\n. Same issue as #194. There is now a release out that includes the fix, so if you update your version of cca (npm install -g cca), then it should be fixed! :)\n. Thanks Tankred! Certainly we'll need to fix this :)\n. First guess is that Cordova's whitelist is blocking the requests. To see if this is the problem, try adding <all_urls> to your manifest permissions.\n. Looks great so far!\n. @emanb29 - would be curious to know your usecase for it. E.g. what APIs of the  do you use? \n. Would a sandboxed or seamless iframe work for you then?\nOn Wed, Aug 6, 2014 at 11:24 AM, emanb29 notifications@github.com wrote:\n\n@agrieve https://github.com/agrieve I'm wrapping a mybb forum which has\nno api\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/234#issuecomment-51350342\n.\n. These packages compile native code, and so will cause cca to fail to install on Windows or Mac if msbuild or xcodebuild are not installed.\n. Re-opening so that we fix our warning, or fix our check to allow >=\n. Note that the value should be \"#ff000000\" for black.\nConfirmed though that the flicker exists when using crosswalk, but is fine when using system webview.\nConfirmed that it flashes white even when all you do is load a blank black page. \nSo... Seems like it's a bug in Crosswalk. :( \n@huningxin - Know of any such bug?\n. It does seem different since the original issue occurs when toggling the task switch as opposed to on start-up. Newer Crosswalk brings a newer version of Chrome. \n. The problem is that the plugin includes the jar, but not the resources. We have the same problem with play services right now as well.\n\nThanks to the recent work to have plugman support android library projects within plugins though, the fix should be pretty straight-forward.\n. You beat me to it, but I didn't see your PR until just after pushing the same change:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/19821eee9c7b30016fb6759741816f86a23de529\n. @kamrik Can you look into this?\n. Nice work! I'll merge it in with the one comment fixed up.\n. Just stared at the code for >5 minutes before finally seeing what the bug was! Thanks for the help @tommyJS!\n. Just did a quick test on Android, and I think an iframe will do the trick for you. Because of modified security policy we use on mobile, your app can actually access iframes from other domains as if they were from your own, but the iframe's contents can't access in the other direction. E.g. iframeEl.contentDocument.body.style=\"background:blue\"\nTo inject a script:\nvar s = iframeEl.contentDocument.createElement('script');\ns.textContent = 'alert(1)'\niframeEl.contentDocument.body.appendChild(s)\n. To have native calls originate from an iframe, I think your best bet is to write a postMessage() bridge.\n. Thanks for the poke.\nSeems its disappearance was in fact a mistake done by an unhelpful bot. I've created a new (public) issue to continue tracking the status of it:\nhttps://code.google.com/p/chromium/issues/detail?id=467677\nWe'll hopefully get an update about the status soon.\nGoing to mark this issue as closed since secure was actually implemented on iOS and Android, but feel free to open a new issue for things.\n. Yeah, I think it should be 14 for either case. Certainly not 10 though.\nOn Wed, Aug 13, 2014 at 11:46 AM, Michal Mocny notifications@github.com\nwrote:\n\n@agrieve https://github.com/agrieve for thoughts.\nThe minSdkVersion is hard coded in the cordova-android application\ntemplate, and 10 corresponds to gingerbread (the min for cordova-android).\n14 is ICS, and as Francois says, should be the default for cca apps.\nI'm not sure I agree that it should be 19 for \"webview\": \"system\". We've\nsupported the old stock android webview until recently, and though some\nthings may start to break soon, I don't think we should prevent devs from\ntrying.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/271#issuecomment-52067261\n.\n. LGTM! Thanks\n. Haven't come across this yet. Best I could find:\nhttp://stackoverflow.com/questions/17938163/designing-android-apps-for-tablets\nSuggests that Play scans your uploaded screenshots for whitespace.\n. Dupe of #462.\n. This was fixed by https://github.com/MobileChromeApps/mobile-chrome-apps/commit/311b7a418a892fed4f8d311b147a65f17b342905\n\nBut only updated on plugins registry Aug 20th.\n. I believe that @kamrik added logic to cordova-lib that should update these values based on the version set in config.xml. So... we should just make sure we're setting the version in config.xml.\n. Fixed by 0749521\n. I tweaked the error message a bit. It now spits out a copy-n-pastable command that will download target-19 via command-line, so hopefully this will be less of a roadblock. \n. Just tested and it seems like the issues are related, but not the same.\n. Seems this is an issue with Crosswalk that we can't easily overcome.\nCreated a x-walk issue for it: https://crosswalk-project.org/jira/browse/XWALK-2518\nAs a work-around, you can use Cordova's accelerometer plugin: http://plugins.cordova.io/#/package/org.apache.cordova.device-motion\n. Added some extra logic to look for the android SDK within the default install path for Android Studio on Windows.\nYour issue will likely disappear with the next release :)\n. Release is out (0.4.2). Could you try updating (npm install -g cca) and see if your SDK is now detected?\n. I think this is related to what @kamrik is currently looking at.\n. That's awesome! The plugin is just in code review now on our side, so the\nrace is on!\nOn Wed, Oct 8, 2014 at 6:03 AM, Tankred Hase notifications@github.com\nwrote:\n\nFYI @felixhammerl https://github.com/felixhammerl is adding support for\nchrome.sockets.tcp and chrome.sockets.tcp.secure to our tcp-socket shim\nthis sprint. So we'll soon have a full blown test case to test your new iOS\nsocket implementation with our full IMAP/SMTP stack on top in the coming\ndays.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/316#issuecomment-58335915\n.\n. https://github.com/MobileChromeApps/mobile-chrome-apps/commit/115632dc5b5276a0dbff4d52523173466503c130\n. I don't think we need to sacrifice synchronous access, but will need to include an android service as @MehSha describes. I'd guess we'll get to this within a month's time, since it's important for chrome.alarms and chrome.gcm as well (will allow them to not jump to the top of the activity stack).\n\nbtw - SIP client sounds awesome! Is it available on the Chrome Web Store yet?\n. :) Making good progress on this. Still though - would love to hear what your use cases are to make sure that what we come up with actually works.\n. This is now launched with cca@0.7.0\n. LGTM!\n. Not sure off the top of my head what might be causing this. Are you attempting to navigate at all from JS?\nCan you verify for me what version of cca you are using (cca --version), and whether you are using Crosswalk webview vs. system webview?\n. I think I have seen this from time to time as well, but very rarely. If anyone can come up with a project / configuration that repro's the problem at least 25% of the time, that would be fantastic!\n. Added some much needed docs about manifest.mobile.json values in the last release:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\nShort answer is that you can disable CSP via:\n\"csp\": \"default-src: *\"\nin your manifest.mobile.json.\nI also suspect this problem has gotten worse with the latest crosswalk versions :S. Next version of CCA will allow setting the crosswalk version via manifest.\n. Hey, thanks for the report! Looks like the actual error message might be even further up the page though. Can you see if there are any other error messages that come before what you've pasted?\n. Might be related to our changes to Play Services to compile it as an android library? How do you repro this?\n. Was just playing with this and it works fine. Likely issues were due to building with ANT instead of Gradle.\n. All done! Only other tidbit is that usually (I think) you check that *error != nil to see if the command failed rather than checking return value. In all of these cases, it's fine how it is though.\n. Nope, sounds like your now the authority on the subject :) (thanks for pointing that out)\n. Nope, sounds like your now the authority on the subject :) (thanks for pointing that out)\n. Couple more nits, but LGTM! Feel free to merge into master once you're happy with it.\n. In what context does this come up?\nOn Mon, Oct 13, 2014 at 9:11 AM, Michal Mocny notifications@github.com\nwrote:\n\nBased on my quick reading, these are temporary files used to generate the\nfinal aligned apk. Can we delete these as a final process?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/366.\n. @sloisel - We'd like build tools 19.1 \"or later\" to be true. Do you remember what version of the build tools you had?\n1. JDK 7 should work as well. We're still a bit uncertain as to how to set this up correctly (could maybe even make JDK 6 work, is that what you had?)\n. We new support JDK 6,7, or 8. Closing\n. Note: Seems like this and #375 show differences between x-walk webview and system webview when it comes to SSL errors. I don't believe the system webview shows dialogs.\n. A prepare hook would work, but I'd recommend adding an explicit grunt / gulp / whatever to compile the files and dump them into the www/.\n. Looks great!\n. cca apps do some URL mangling to serve from chrome-extension:// URLs. That\nsaid, I'd expect relative URLs to work in both environments.\n\nOn Fri, Oct 17, 2014 at 7:38 PM, Jesse notifications@github.com wrote:\n\nI've been testing a project in mobile Chrome apps and with standalone\nCordova. One thing I've noticed is that relative paths are served correctly\nin CCA, but I get a 404's from the standalone Cordova build. What is the\ndifference between the two approaches? Are mobile chrome apps hosted on a\ndevice local server?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/373.\n. FYI - @clelland \n\nLooks like the issue is that it can't extract the versionCode from your AndroidManifest.xml. This should be getting set by cca... Could you check:\n1. That you have a version set in your manifest.json\n2. That after a prepare, it is being set in your platforms/android/AndroidManifest.xml\n. Awesome! Thanks! Was able to make a fix.\n. Noticed this in CADT - open crosswalk webview in devtools, then just refresh via ctrl-R. Happens ~5% of the time.\n. Saw this on x86 emulator.\nAside: App crashes after about 15 reloads. with:\nI/ChromeNavigation(16493): location.reload() detected. Reloading via file:///android_asset/www/plugins/org.chromium.bootstrap/chromeapp.html\nD/XWalkCordovaWebView(16493): >>> loadUrl(file:///android_asset/www/plugins/org.chromium.bootstrap/chromeapp.html)\nD/XWalkCordovaWebViewClient(16493): onPageFinished(chrome-extension://dblbaeajaadidmnjifaakkhgnepcaoko/index.html)\nD/CordovaActivity(16493): onMessage(onPageFinished,chrome-extension://dblbaeajaadidmnjifaakkhgnepcaoko/index.html)\nF/libc    (16493): Fatal signal 11 (SIGSEGV) at 0x3f68e5e0 (code=1), thread 16641 (BrowserBlocking)\nF/libc    (16493): heap corruption detected by dlmalloc\nF/libc    (16493): Fatal signal 6 (SIGABRT) at 0x0000406d (code=-6), thread 16635 (Chrome_InProcRe)\nI/DEBUG   (  933): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (  933): Build fingerprint: 'generic_x86/sdk_x86/generic_x86:4.4.2/KK/999428:eng/test-keys'\nI/DEBUG   (  933): Revision: '0'\nI/DEBUG   (  933): pid: 16493, tid: 16641, name: BrowserBlocking  >>> org.chromium.appdevtool <<<\nI/DEBUG   (  933): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 3f68e5e0\nI/DEBUG   (  933):     eax 9fa13a50  ebx a48c1ab0  ecx 00000010  edx b9aa7308\nI/DEBUG   (  933):     esi 9fa13a94  edi 9fa13a08\nI/DEBUG   (  933):     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\nI/DEBUG   (  933):     eip b9a83aa2  ebp 9fa13a18  esp 9fa139e4  flags 00210a06\nI/DEBUG   (  933):\nI/DEBUG   (  933): backtrace:\nI/DEBUG   (  933):     #00  pc 00732aa2  [heap]\nI/DEBUG   (  933):     #01  pc 001d29ed  /data/app-lib/org.chromium.appdevtool-1/libxwalkcore.so\nI/DEBUG   (  933):     #02  pc 000fca8f  [stack:16641]\nI/DEBUG   (  933):     #03  pc 001d3b2e  /data/app-lib/org.chromium.appdevtool-1/libxwalkcore.so\nI/DEBUG   (  933):     #04  pc 000fcafb  [stack:16641]\n. Ah, this looks like it was a regression in CADT. Should work fine with CCA directly, and I'll push out a new CADT today with the fix! :) Thanks for reporting!\n. Wow, so when I said \"today\", I was clearly lying. :P. A new version is now up though with the fix (v0.11.0)\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/releases\n. LGTM!\n. To repro:\ngit clone https://git-wip-us.apache.org/repos/asf/cordova-app-harness.git\ncd cordova-app-harness\n./createproject.sh AH\ncd AH\ncordova run android\nelsewhere\ncordova create foo\ncd foo\ncordova platform add android\ndd if=/dev/random of=www/bigfile bs=1024 count=50000\ncordova prepare\nadb forward tcp:2424 tcp:2424\n/path/to/cordova-app-harness/harness-push/harness-push.js push .\n. LGTM!\n. LGTM\n. No one working on it, I don't think. \n. Looks like the prepare step is having trouble finding the <key>CFBundleIcons</key> within your iOS Info.plist file.\nWe should add some error handling around this, but I'd be curious to know if you see <key>CFBundleIcons</key> within your platforms/ios/APP_NAME/APP_NAME-Info.plist`\n. I'll look at fixing this error a bit later (code is looking for ,\nbut you have  for some reason. Maybe Xcode has changed?)\nBut to answer your questions (sorry this is poorly documented\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n)\n1) Should work to specific per-platform via manifest.mobile.json {\n\"android\": { \"icons\": {} }, \"ios\": { \"icons\": {}}\n2) We will, but haven't yet.\nOn Thu, Oct 30, 2014 at 11:58 AM, Felix Hammerl notifications@github.com\nwrote:\n\nok, that's something i can make sense of. there's an empty NSDictionary in\nthere ... that was probably caused by me playing around with the icons...\nCFBundleIconFile\nicon.png\nCFBundleIcons\n\nCFBundleIcons~ipad\n\nsome more questions about the icons... there was the issue #266\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/266 and this\nsnippet\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/post-prepare.js#L68-L204,\nbut i can't really piece it together. you try to detect the icons from the\nfile names? what about the different platforms?\n1) is there a way to specify which icon set should be used on the specific\nplatforms? we use different icon sets on ios/chrome/android\n2) are you adding the iphone 6 plus\nhttps://developer.apple.com/library/ios/documentation/userexperience/conceptual/mobilehig/IconMatrix.html\nicon size as well?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/399#issuecomment-61117116\n.\n. Looks like the API was added in Chrome 37, so it should be there (\nhttps://code.google.com/p/chromium/issues/detail?id=379976)\n\nMight be related to\nhttps://code.google.com/p/chromium/issues/detail?id=373032 - but we serve\nfrom file://, so would think it to be considered secure.\nCrosswalk bug?\nOn Thu, Oct 30, 2014 at 8:15 AM, Tankred Hase notifications@github.com\nwrote:\n\nI'm trying to get native RSA key generation working on Android using the\nWebCrypto Api:\nhttps://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#SubtleCrypto-method-generateKey\nThe key generation works fine in Chrome 38 on the desktop and Chrome 38\nfor Android, but in the crosswalk WebView it fails with the error message\n\"The requested operation is unsupported\". Here is my code:\nhttps://github.com/openpgpjs/openpgpjs/blob/master/src/crypto/public_key/rsa.js#L147\nI googled for this error message and it seems it appears in the chromium\ncodebase for webcrypto:\nhttps://github.com/scheib/chromium/blob/master/content/child/webcrypto/status.cc#L154\nI hope this will help you to reproduce and fix the issue. Please let me\nknow if I can be of further assistance. I also created this issue in the\ncrosswalk jira here:\nhttps://crosswalk-project.org/jira/browse/XWALK-2857\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/400.\n. I think there was a recent fix for this in Cordova proper that we've yet to\npull into cca. No good work-around I can think of (we'll get this fixed up\nsoon), but you could try adding a post-prepare hook to copy in a new\nversion of cordova.js from here:\nhttps://github.com/apache/cordova-ios/blob/master/CordovaLib/cordova.js\n\nOn Thu, Oct 30, 2014 at 9:18 PM, Ed notifications@github.com wrote:\n\nI've got my app more-or-less working on android, but I've run into\nproblems getting the iOS version working. I'm running from OSX Yosemite\n(10.10) and the latest Xcode (6.1). I can add the ios platform and build\nsuccessfully, when I try to run/emulate I get a blank screen. I can use the\nweb inspector from the latest webkit nightly, from which I've tried\nchrome.runtime.reload() and see:\n[Error] Deprecated attempt to access property 'geolocation' on a non-Navigator object.\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to set property 'geolocation' on a non-Navigator object.\n    assignOrWrapInDeprecateGetter (cordova.js, line 484)\n    mapModules (cordova.js, line 1436)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'geolocation' on a non-Navigator object.\n    assignOrWrapInDeprecateGetter (cordova.js, line 484)\n    mapModules (cordova.js, line 1436)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    (anonymous function) (statusbar.js, line 99)\n    build (cordova.js, line 53)\n    require (cordova.js, line 68)\n    localRequire (cordova.js, line 49)\n    mapModules (cordova.js, line 1416)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1156)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1149)\nI've tried blowing away the platform/plugin dirs and cca update etc to no\neffect.\nDo I need to add things to manifests somewhere (and is there any good\ndocumentation for exactly how all that stuff works)? Is there a\ncommand-line argument to run against older iOS versions?\nI can get a fresh demo app running on iOS with cca create testios\ncom.company.testios 'Test iOS' BTW, so I assume this is something related\nto setting up the plugins I'm using correctly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/402.\n. Related to #404 \n. Thanks for bumping the priority of this, and also for the great write-up!.\nDefinitely need to add these missing icon sizes.\nDid you see the docs here: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. LGTM!\n. lgtm!\n. Ah, glad you figured it out! This is definitely a bad bug, and one we'll be looking to address in the near future. It's filed also at:\nMobileChromeApps/chrome-app-developer-tool#31\n. Another thing we could do is to prefix our copy of GCDAsyncSocket (search &\nreplace-style)\n\nOn Wed, Nov 12, 2014 at 4:00 PM, Michal Mocny notifications@github.com\nwrote:\n\nAlright, theres little we can do about this.\nHowever, Rui, maybe we should create a plugin that simply holds the\nGCDAsyncSocket library, so that at least in the future all plugin authors\ncan depend on a single shared source. We've done this in the past for other\nlibraries.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/419#issuecomment-62730829\n.\n. Wondering if this recent commit addresses your issue?\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/fd7980b1c1877fb19f08db977de007b2927424fe\n\nWe've not yet updating the plugin to include this change, but can certainly expedite if it's what you need.\n. Hmm, yes, I would expect that to work as you've described. \nStrange that ant.properties affects anything. That would seem to indicate that ant is being used to build instead of gradle. What do you build logs look like? \n. Thanks guys! Looks like this was indeed a bug with apk signing not happening when the passwords were not within the .properties file. I've committed a fix, and it'll be in the next release. As a work-around (and as you've already found), temporarily put the passwords in the android-release-keys.properties file.\n. :) Thanks for bringing up the issue!\n. Agree this is worth looking into. My guess is that it's the\nnetwork-information plugin that requires it. Most apps probably don't care\nabout navigator.connection.type. We'd still need something to hook up to\nnavigator.onLine. I think I've seen that some apps do this by querying your\nIP addresses and checking that there's a non-localhost one.\nOn Fri, Nov 14, 2014 at 6:13 PM, Michal Mocny notifications@github.com\nwrote:\n\nGreat point. Thanks for bringing it up.\nYou're right that these are coming from the cordova platform template\n(though the list of permissions has fallen drastically since the plugin\nbreakout happened).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/433#issuecomment-63097178\n.\n. lgtm\n. Issue here is likely the move from ant -> gradle for building. Another workaround would be to add a build-extras.gradle file beside the build.gradle file within platform/android, and have it add the .so files. \n\nStill, we should likely fix the build.gradle template to look for .so files.\n. I've merged this and updated CADT to use it.\nOnly gotcha I saw was that it's super spammy about sending updates about pipe progress. We'll probably have to throttle them to not degrade performance.\n. I'm curious to hear more about what you're trying to do. InAppBrowser is mean more for showing either static local content, or http:// content (but not local content that XHRs).\n. Looks like there's no plugins involved here (hence the [native code] bit). So maybe the solution would be in using Cordova plugins for it? Some investigation required.\n. Definitely a webview bug. Might try to drop down to the system webview for now by adding:\n\"webview\": \"system\"\nto your manifest.mobile.json file.\n. Going to close as not fixable by our middleware. Feel free to file a bug on crbug.com or on crosswalk's JIRA.\n. Thanks for bringing this to our attention! I've just released the fix as an update to the bootstrap plugin, so you should be able to re-generate your app and have it pick up the new version:\norg.chromium.bootstrap@1.1.1\n. Hmm, I did see that as well, but didn't clue in that it meant failure. Looks like the problem is that the polyfill is trying to assign the baseURI property of a document, but safari doesn't like that:\nfunction makeDocument(resource, url) {\n        var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\n        doc._URL = url;\n        var base = doc.createElement(\"base\");\n        base.setAttribute(\"href\", url);\n        if (!doc.baseURI) {\n            doc.baseURI = url;\n        }\ndoc.baseURI is null because Cordova loads from file:// URLs. I'll have to see if there's a way we can fix this up either within or outside of the polyfill.\n. Created a PR for the polyfill (which I believe is at fault here). One-liner to apply yourself if you'd like to be unstuck :)\nhttps://github.com/webcomponents/webcomponentsjs/pull/77\n. Don't believe there've been any changes since 6 days ago.\n. Hmm, few things going on here it seems. \nFor mobile chrome app, you don't need to listen for deviceready. Instead, you should listen for load or DOMContentLoaded. I see you've tried that in your commented out code though. Did the event never fire, or was something else going on with it?\n. LGTM! But I think once per second is maybe too conservative. How about 10 times per second?\n. Think you're right! I've filed a bug on cordova-android about this and have checked in a fix. This will be included in the next cca release (likely next week).\nhttps://issues.apache.org/jira/browse/CB-8112\n. Long overdue, I know!\nJust published a release candidate that includes newer crosswalk. Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. @clelland Is this what you fixed upstream?\n. Just released 0.5.1 proper. \n. Inversely - It's quite strange that a first run of \"cca run android\" will install platform ios. The behaviour should more likely be:\n- If platform specified for run or build, then add that specific platform if it's supported.\n- If platform not specified, and no platforms are installed, fail with a useful message\n- If platform not specified, and at least one platform is already installed, then use that/those\n. There is now more code that obeys the parameter, but it's still a problem when there are multiple accounts. We could use GET_ACCOUNTS permission to see if there are more than one, and fail if there are more.\n. The latest iOS Google Identity supports a silent login, but on Android I think we're still stuck for ideas\n. Looks like an error caused by a change to notifications on Android that wasn't reflected on iOS. The notifications plugin doesn't work on iOS currently anyways, so I'll put together a fix to more properly stub it out. Regardless, this message should be innocuous \n. To use cca@master, refer to https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/dev-docs/cloning-this-repo.md\nPlanning on releasing this week :)\n. Remembered the reason for it! It's because on start-up, getUrl() is used to figure out what the URL should be when switching from file:// -> chrome-extension:// on start-up. Certainly this is fixable by changing how start-up figures out the URL, but that's why the function uses the manifest instead of the current URL to do its work\n. Erg, github is hiding the contents of that first string. It does say \"<all_urls>\"\n. @wesleycho - what version of cca are you using?\nCould you verify that your platforms/android/res/xml/config.xml has an <access origin=\"*\"/> entry in it?\n. Awesome! I see now that the problem is that the INTERNET permission was being removed. Pushed a work-around for it, and filed a Cordova bug for it: https://issues.apache.org/jira/browse/CB-8236\n. Might try setting the orientation preference in the config.xml file. Some info here:\nhttp://docs.phonegap.com/en/edge/config_ref_index.md.html#The%20config.xml%20File_global_preferences\n. Looks like this is an upstream bug and was just fixed in cordova-android via apache/cordova-android@8e5c93a31. Fix will make it into the next cca release\n. Awe, what a cliff-hanger! Was it something to do with svg in the end? Is there some gotcha to avoid here?\n. Interesting :P.\nIt uses UIWebView. We'll be onboard with wkwebview though once Cordova\nsupports it.\nOn Thu, Jan 8, 2015 at 10:29 AM, Felix Hammerl notifications@github.com\nwrote:\n\nwhen we concatenated the svg, we used was a) the individual sources and b)\nthe concatenated source, so basically we duplicated the svg. that seems to\nhave broken the parser or something along the way. on a semi-related note:\ndoes cca use the WKWebView or the (legacy) UIWebView?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/497#issuecomment-69194857\n.\n. Relates to #484 \n. Likely enough that we should close this and assume so :)\n. Thanks for pointing out the compilation issue! I've filed that as #506 (and fixed it - will hopefully be released soon).\n\nI tried creating an app that listens, then connected via telnet and all seemed to work okay. Could you provide the code your using?\n. Okay, found the bug! It was actually a combination of two things:\n73b85bf005d574ee484a and 680e07e0b24.\nBasically, the broken case is when you call listen() from within deviceready. If you wrap it in a setTimeout(0), it'll probably work. \nWill post a new version of the plugin as soon as Cordova plugin registry is unbroken (won't currently take plugin updates :()\n. Also - if you're looking for some sample code, here's a simple HTTP Server:\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/blob/master/www/cdvah/js/HttpServer.js\n. Was going to wait until we're able to publish the fix to answer.\n. Seems the plugin registry is having issues :( \nhttps://issues.apache.org/jira/browse/CB-8284\nI've reverted the broken release, so should be good again.\n. Closing since we can't really fix this on our end.\nWe do have a plugin for push messaging on iOS though: \nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.pushMessaging\nLikely the best setup for cca is to use chrome.gcm for Android, and chrome.pushMessaging for iOS.\n. I've got a fix in progress\n. (it's exactly what you said)\n. What does 'ulimit -n' output for you? \n. Yes! Really sorry about this guys :(.\nI released the fixed version shortly after discovering the mess-up, but looks like caching is getting the better of my fix. Please try clearing the cache via:\nrm -r ~/.npm/registry.cordova.io/\nrm -r ~/.plugman/cache\nAnd trying again (it should pick up 1.1.3 now)\n. Looks like the maps plugin isn't compatible with the tip-of-tree version of cordova-android that we're using in CCA. Good news is that cordova-android@4.0.0 is nearing launch readiness.\n. Yikes! Hope your soul managed to recover from this one!\nInteresting that vanilla cordova works fine, because the errors you report are actually due to code in Cordova. \nWould be awesome if you could try and debug this for us with your configuration. Here's where the JAVA_HOME logic is:\nhttps://github.com/apache/cordova-android/blob/master/bin/lib/check_reqs.js#L105\nFor adb, maybe what we can do is just to a test execute of the command in checkenv to see if it runs okay.\n. Also - they copy of cordova-android that cca uses is bundled with the tool, so assuming you npm installed cca, you'll find it here:\n$(dirname $(which cca))/../lib/node_modules/cca/cordova/cordova-android/\n. Likely the case is that the version of cordova-android that you're using is too old.\n. Absolutely! Just \"cordova plugin add\" it :)\nOn Thu, Feb 12, 2015 at 1:34 PM, Brian Geppert notifications@github.com\nwrote:\n\nIs it possible to use the google.payments polyfill without the Mobile\nChrome Apps wrapper? I'd like to do that until I'm able to work out exactly\nwhere the incompatibility is between Mobile Chrome Apps and the WkWebView\nplugin.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/516#issuecomment-74125380\n.\n. Given that it happens in both contexts, I'd guess the issue is with Crosswalk. We're working on updating the version of crosswalk for the next CCA release, but if you'd like to try it now: \n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/dev-docs/cloning-this-repo.md\n. I think the windowSoftInputMode settings are only settable by making the change right in AndroidManifest.xml. That said, adjustResize is the default, and I think is the one that makes sense.\nYou should get window.onresize events when the keyboard comes up, so worse case you can scroll the page yourself.\n. Also - curious if system webview vs. crosswalk makes any difference here.\nE.g. try adding:\n\"webview\": \"system\"\nto your manifest.mobile.json and see if it works any differently.\n. Yeah, it's in an annoying state right now in that it depends on an\nunreleased version of cordova-lib. Should work out if you npm link the\nmaster version of cordova-lib and cordova-cli. Also don't forget to npm\nlink the cca-manifest-logic module that exists within the repo.\nOn Mon, Feb 23, 2015 at 10:19 PM, Shane Gadsby notifications@github.com\nwrote:\n\nI've tried installing from the master branch (id'd as 0.5.2-dev at the\ntime of writing this) and from the normal stable (0.5.1), and while it will\ninstall just fine and even creates projects OK, when I do a first run (not\nhaving changed the new projects files at all) it fails with: Error: 404\nNot Found: org.apache.cordova.engine.crosswalk.\nAfter some digging, it seems this is because the repo for crosswalk has\nbeen renamed (to org.crosswalk.engine), with the cordova registry entry\nremoved(?); and due to the org.apache.cordova.engine.crosswalk plugin\ngetting marked as deprecated (in: cca-manifest-logic/src/plugin-map.js\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/cca-manifest-logic/src/plugin-maps.js#L51),\nit has removed all the current versions of my crosswalk files and cannot\nfind the new ones to add.\nIt's been like this nearly the whole month, any ETA on when this will get\nsorted out? (for now I can manually fix things, but its a pain)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/524.\n. Great! Yes. It will.\n. FYI - this is now resolved, and there's a release-candidate for the next version of cca:\n\nnpm install -g cca@0.6.0-rc1\n. Long overdue, I know!\nJust published a release candidate that includes newer crosswalk. Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. Or uninstall the app from the device before running.\nOn Tue, Mar 17, 2015 at 9:03 PM, Shane Gadsby notifications@github.com\nwrote:\n\nFailed version downgrade is due to the way the internal build number seem\nto work with Chrome Mobile Apps when you switch into and out of using\ncrosswalk (or in this case when you upgrade your crosswalk); just bump the\nversion number up and you should be good to go\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/528#issuecomment-82662421\n.\n. Thanks for trying it out! I don't think --link-to:path has ever worked. Try --link-to=path or --link-to path.\n\nWhat did you have to change in manifest.json? More than the version?\n. We've switched to using Crosswalk's maven repository rather than bundling a copy of their .jar / .so. This works fine with Gradle, but I don't think it works on Eclipse (at least not by default). Android Studio works fine if you can stomach an IDE switch.\n. Great to hear! Just released cca@0.6.0, so closing :)\n. Thanks for bringing this to our attention! I've made the fix that you suggested. \nhttps://github.com/MobileChromeApps/cordova-plugin-chrome-apps-bootstrap/commit/0638d3370c29d47ac5396c36067b2307a97dd9d2\n. A change was made to the i18n plugin that breaks on older versions of CCA. \nThe good news is that if you upgrade again, (to version 0.6.0), this should be fixed. \nThe even better news is that the new version of CCA pins against the major version of relevant plugins, so breakages like this should not happen again.\n. Looks like that came from our updating of cordova-android to a newer version. The keyboard events were removed from the core android library since they were not cross-platform, and can be added using a plugin. I'd suggest adding https://github.com/driftyco/ionic-plugins-keyboard to get hide/show events\n. Tough one. You can always choose the webview at build time, but that's about it. I'd suggest filing a bug at https://crosswalk-project.org/contribute/report_bugs.html and include the stack from your adb logcat\n. There's a somewhat confusing discussion here:\nhttps://issues.apache.org/jira/browse/CB-4404\nI don't think there's a <preference> for it in cordova, but perhaps there should be.\n. Pull request to fix this upstream:\nhttps://github.com/crosswalk-project/cordova-plugin-crosswalk-webview/pull/37\n. JNI is the answer afaik.\n. Sorry for the rough update on 0.6.0 :(. We've made changes so that it shouldn't happen again.\nFor this error, try installing an older version of the i18n plugin, or maybe just try deleting the reference to that gradle file from the platforms/android/project.properties file.\nThat said, updating to 0.6.0 would obviously be preferred. It does set the targetSdk to 21, but I believe still has the minSdk set to 14. We've also update the instructions here to show that you can now set the minSdk via a command-line flag.\n. So you know - The CSP values options are documented here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\nso, you'd use \"cspUnsafeEval\":\"true\" in your manifest.mobile.json\n. What version of cca are you using?\n. We had a bug in the bootstrap plugin, but it's been fixed now (https://github.com/MobileChromeApps/cordova-plugin-chrome-apps-bootstrap/issues/1)\nTry running caa upgrade and try again.\n. Highly recommend uploading two. Should be able to build just one with cca build --release -- --gradleArg=-PcdvBuildMultipleApks=false\n. Yikes! Could you paste the contents of your config.xml file? It should now have corresponding <icon> entries in it.\n. Thanks guys! I've identified and fixed the bug upstream:\nhttps://issues.apache.org/jira/browse/CB-8832\nExpect this to reach CCA in a couple of week.\n@felixhammerl - thanks for sharing your awk & sed skillz!\n. Sounds like your upgrade didn't pull in the newer version of cordova-android for some reason. I'd double check that the logs at the start of your output print out \"cca v0.6.0\"\n. Try using:\ncordova.InAppBrowser.open('URL')\nThis was recently changed from window.open() I think (to match desktop behaviour)\n. Yeah, not sure what's going on. Could you try updating to the latest cca (0.7.0) via npm install -g cca and see if it still happens?\n. Certainly an unfortunate bug. Also reported in #548. Fix is on Cordova's side (cca did it's own icon copying in 0.5.1, but now uses Cordova's icon support... which had this bug). \n. Ouch! That does suck! :(\n@huningxin - do you know if this is a known issue with Crosswalk?\n. @fujunwei - can you help with this?\n. For reference - v0.5.1 used Crosswalk v8 (Chrome 37), and v0.6.0 uses Crosswalk  v11 (Chrome 40).\nNeither used cordova-plugin-indexedDB, but instead just used the built-in IndexedDB.\n. This has been fixed.\n. Merged in PR with the fix.\n. Best way to exclude it is to not put it within the www/ directory.\n. Thanks for bringing this up! Should be all fixed now. please re-open if anything is still failing for you\n. Best thing to try is attach remote web inspector via safari, then hit command-R to refresh the page and see what errors spit out on the console.\n. Sounds like probably there's a script within hooks/ that doesn't have the executable bit set on it. Could also be that one of the plugins has a hook with the bit missing...\n. If you want it to work on desktop as well, then have a look at: https://github.com/GoogleChrome/apps-resource-loader\nIf you just want to loosen the CSP, you can completely override it via \"csp:\" \"foo\" within manifest.mobile.json\n. Sorry it's not in a more obvious spot, but they are here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. Here's line 97:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/cca-manifest-logic/src/analyse-manifest.js#L97\nCould you double check that line 97 looks the same on your machine?\n(/usr/local/lib/node_modules/cca/node_modules/cca-manifest-logic/src/analyse-manifest.js)\nPerhaps you have a number as your manifest.mobile.json's \"webview\": setting?\n. The chromeappstyles.css error is a bug/quirk with devtools I think. The styles do seem to apply fine, so their stylesheet is being loaded.\nProbably this is a bug in webcomponents.js\n. Thanks @Imskull! You are exactly right. I've updated the .css path and published a new version of the bootstrap plugin.\n. (Note: new version is cordova-plugin-chrome-apps-bootstrap@2.0.8)\n. Published a new version of the plugin with this fix. Thanks for reporting and sorry for the breakage!\n. Shouldn't need to wait. Try running \"cca upgrade\" to force all plugins to be updated.\n. Try deleting your ~/.npmrc file\n. hmm, I think switching to legacy would break android's navigation whitelist handling. Maybe we could instead pin the whitelist plugin to an older version that is still compatible with cordova-ios?\n. Merged and published! Thanks!\n. Dupe of #580. I'll see if i can get it fixed today.\n. Weird - not sure how you got into this state, but I'd guess that running:\nchmod a+x /usr/lib/node_modules/cca/cordova/cordova-android/bin\nwould fix it.\n. Looks like the bug was upstream in cordova's tools. I've filed & fixed the issue here: \nhttps://issues.apache.org/jira/browse/CB-9362\nWe'll need to wait for a new cordova release for cca to be fixed, but in the mean time installing with \"-g\" is a good work-around, as is using nvm to install node.\n. I would consider this a bug in the plugin (worth opening an issue there).\nWithout fixing the plugin, you can work around it by lowering your app's CSP to allow unsafe-eval. See cspUnsafeEval in manifest.mobile.json:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md\n. This is a sad known issue with android webviews :(.\nA good work-around exists though - to use the webaudio api:\nhttp://middleearmedia.com/web-audio-api-audio-buffer/\n. Sounds like a great addition! I'd be happy to accept a PR for it if you'd like to work on it?\n. Looks like the problem was unrelated to the 0.7.3 changes, but rather from the latest Android WebView update changing Content-Security-Policy to block blob: urls (CSPv1 didn't have them blocked, but CSPv2 adds them to the block list).\nI've published an update to add them to the CSP whitelist (v0.7.4)\n. We have no plans for this to be honest, but would happily accept patches to our plugins that add win10 support.\n. That's really cool!\nOn Thu, Aug 6, 2015 at 10:25 PM, Imskull notifications@github.com wrote:\n\nGreat news, just found node-webkit had supported Chrome App a month ago.\nhttps://groups.google.com/forum/#!msg/nwjs-general/zeC6SedUSFY/BlumrYJeVHYJ\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/590#issuecomment-128564790\n.\n. For CCA apps, you can set the crosswalk version in the manifest.mobile.json file, so this behaviour is intended. I've updated the docs to mention how you do this.\n. Sorry for a lack of update, but this appears to be a bug in Cordova and a fix has not yet been released. Expecting a new release some time next week.\n. This is now (finally) fixed with cca v0.8.0!\n. Looks like you're running cca v0.6.0. Can you try updating to the latest (v0.7.4) and try again?\n. chrome.storage.sync doesn't work. chrome.storage.local should work, and for syncing with drive you should use drive's JS API directly.\n. Sounds like a bug, but one that won't be getting fixed :(.\n\nsyncFileSystem is a super-powerful API, but turns out not one that can be efficiently implemented in Cordova. \n. It doesn't look like there's a way to get it back, but I don't believe there were any commits to it after it was split out.\n. Good luck!\n. Certainly sounds like a webview bug. Probably the best way to get the bug filed with the team would be to provide a small test page that reproduces the issue. If you're able to do that, I can file a bug on crbug.com\n. I think moving to Cordova directly is the right way forward here. You can\nstill use most mobile-chrome-apps plugins from a regular cordova project.\nOn Fri, Sep 23, 2016 at 5:42 AM, Helidium notifications@github.com wrote:\n\nYes I'm having the same problem, I ended up migrating to cordova instead...\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/610#issuecomment-249148407,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABTljPyG8WjhUbvIlg1RQN_vGFKlWiMZks5qs58igaJpZM4KDGVk\n.\n. \n",
    "mmocny": "Yeah, Braden from our team discovered this as well.  He said that the old tmpDir method is still defined but not documented in new versions, so we could use it exclusively.\nThe reason it didn't seem to matter to change in mca-create is because the underlying cordova tools use the new method only.  You are right, we should update the version requirements, but you may find the same problem again arises when we call into cordova scripts.\n. Fixed.\n. No longer valid.\n. We don't currently prompt for these values during cca create, but we do now automatically update your cordova config.xml based on your corresponding app manifest.json values whenever you run cca prepare.\nFor those cordova config.xml settings that don't have corresponding app manifest.json entries, we now have a manifest.mobile.json to contain them (one quick example: packageId is mobile-specific and so goes in to manifest.mobile.json).\nI'll leave this issue open so that we remember to confirm that you can add all fields necessary to publish an app to our manifest.mobile.js -- and so we remember to review the ways which we help users to fill these out correctly.\nMaybe prompts during cca create are the way to go, but I feel that may be a bit disruptive to \"just getting started\".\n. Thanks for the input. I agree that we should mention the mobile manifest in the intro message since it's not in the official chrome docs yet. Eventually it may go away or become more common and we can remove the reference.\n. We document manifest.mobile.json briefly in the Next Steps document.\nmanifest.json is mandated by Chrome Apps, and manifest.mobile.json has just a couple mobile-specific settings (very few like packageId and version code overrides specific to mobile platforms).\nUsing those, we help create a config.xml for you -- but are still free to edit the config.xml to add your own preferences.  Doing so takes you out of the world of Chrome App development and into cordova project management (because chrome apps don't have a config.xml).\nConfig.xml is not included in the default .gitignore we create, and so should very much so be added to your version control if you are actually managing the whole cordova project directory structure and not just the contents of www.\nThat said, we've had some requests to support changing cordova  from manifest.mobile.json (See #393).\nWe should not comment further on this bug, since it is not related to your current question, please continue on #393.\n. We do bundle a default css stylesheet to emulate the chrome packaged app styles.  Likely we are not getting those completely right, though.\nLeaving this open to remember to investigate.\n. Done! (Thanks @mwoghiren!)\n. @kamrik is working on adding better support for version numbers to cordova core.  After thats done, he will make cca prepare automatically adjust all the platform version codes accordingly.\nWe will likely need to add addition version fields to your app manifest.mobile.json, since not all platforms agree on format; Though maybe that can be avoided with a convention, its still in development.\nOnce thats done, we can evaluate wether we still want a top level cca command to bump version numbers, or if it is enough to manually edit the manifest and run cca prepare.\n. Right now we have parity with desktop chrome apps and android apps, which both manage manually (though I'm sure there are niche editors that roll version numbers).  This isn't a priority so closing for now.\n. Absolutely agree.  We are not sure how best to implement this.\nOne option could be to write yeoman recipes for setting up a cca project in our opinionated workflow.\nAnother option could be to support an easy flow with the App Harness.\nYet another option could be to support LiveReload.js inside the mobile packaged app.\nThe only certainty is that we would like to make it a lot easier to do rapid development\n. @kamrik is working on a default gulpfile -- but its a replacement for the cca command line, so its a long term experiment.\n. I 100% agree with disliking the name here, but changing this would be more risk than reward, and has implications to the compatibility with cordova core, which we think is important to uphold.\nClosing as wontfix for now, but we will keep it in mind when discussing changes to cordova core project structure in the future.\n. Resolved, see: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md#icons\n. No longer valid.\n. I just confirmed this is now fixed (thanks @clelland).\nThere are a bunch of sizing caveats, though, which you can read here: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md#icons\n. The identity plugin has changed since then, and the way it handles simulator is now special cased.  Closing this.\n. @mwoghiren: Fixed I assume?\n. This bites people all the time, especially when there are syntax issues on startup.\nThe downside is that if we wrap console output / catch all exceptions then we end up harming remote inspector line number tracking.  This is worth investigating, though.\n. Max, syncFS has changed a lot.  I'm closing this issue at this point.  I don't think we have the docs of functionality quite perfect, but we should open specific issues which are applicable to the current state.\n. Closing old bug that seems resolved.\n. Just tried this, and it seems resolved.\nPlease re-open if thats not true.\n. Can we close this?\n. Pete, I just tried this and it works for me.  <a href='http://www.google.com' target='_blank'>Google</a> pops out to my android system browser (chrome).  Is this specific to iOS?\n. Is this a dup of #45?\n. Fixed this a few weeks ago.  There is now the iOS statusbar plugin installed by default, and now new projects created with the cca tool will add a default cordova  (StatusBarOverlaysWebView) to config.xml to push your app UI under the statusbar (just as in iOS6).\nYou can change this setting by editing the config.xml file and adjusting you app UI accordingly (and its advised to do so according to iOS7 style guide).\n. For completeness I should also add that if editing the config.xml file does not appeal to you, you can modify the settings from JavaScript:\nStatusBar.overlaysWebView(false);\n  StatusBar.backgroundColorByHexString('#ffffff');\nIn order to not see a flash of UI, I added these to my chrome.app.runtime.onLaunched handler in my background page, before issuing a chrome.app.window.create, so my background page looked like:\nchrome.app.runtime.onLaunched.addListener(function() {\n    chrome.runtime.getPlatformInfo(function(info) {\n      if (info.os === 'cordova-ios') {\n        StatusBar.overlaysWebView(false);\n        StatusBar.backgroundColorByHexString('#ffffff');\n      }\n      chrome.app.window.create('index.html', {\n        id: 'MyApp'\n      });\n    }\n  });\n. Amazingly, looks like its supported in webview for iOS8, both UIWebView and WKWebView.  Not sure if we need native side support for plugins as well?\n. @agrieve Can we implement this with the new file plugin?\n. Crosswalk fixes a lot of these issues on Android.\niOS WebView is improving in iOS8 but there will likely always be some gap.  Not much we can do about it -- but there are polyfil plugins for many of these apis that exist as cordova plugins.  Quality varies, so we don't install them by default.\n. Hi,\nThanks for your report.  You are not the only one to run into this issue -- but as far as we can gather is not a direct problem with our tool.  This delayed-stream module is an node dependency of a dependency of a.. of ours and should have been installed automatically when you did npm install -g cca.  Perhaps there was a problem with npm that day?\nWould you mind trying to npm uninstall -g cca and re-installing npm install -g cca to see if you have to add that module manually again?\nAlso, which platform are you on?\nThanks a bunch!\n. @petrivoges We recently updated cca to version 0.0.8 (check with cca --version).  Did it stop working for you after an upgrade?\nIf running cca checkenv shows no output at all, then that is a problem.\nEven if it does nothing, you should see something like:\n```\ncca v0.0.8\nChecking that tools are installed\nAndroid SDK detected.\nXcode detected.\n``\n. Wow, so your localnodewas this [apt package namednode` for \"Amateur Packet Radio Node\"](http://packages.ubuntu.com/saucy/node)?\nWell thats a new error to keep in mind :)  Thanks!\n. The mobile supported chrome app samples are listed in a table at the bottom of the README.md: https://github.com/GoogleChrome/chrome-app-samples#mobile-support\nIf any of those apps are not working for you, that is not expected and we would be pleased for you to report the specific samples.  Please also let us know more about your environment.\nMore generally -- whenever you see a blank white screen when running a chrome app on mobile via the cca tool, it is a sign of startup issues (and typically javascript syntax errors).  It may be a bug in our environment startup code, since we do a bit of magic to simulate the chrome app runtime.  More often it is because the application itself is relying on desktop chrome specific features that do not exist inside the mobile WebView.\nThe best way to find & resolve these issues is by attaching a remote web inspector, then restarting the app (while still having the inspector attached), to catch these startup issues in the console.\nHere is a quick guide to do that:\n1. Launch the cordova based mobile port of your Chrome App on Android / iOS using the cca tool\n2. Attach a remote web inspector to the Android / iOS WebView by following one of these guides:\n   1. Android: https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=de\n   2. iOS: http://phonegap-tips.com/articles/debugging-ios-phonegap-apps-with-safaris-web-inspector.html\n3. If your app was stuck at a blank white screen at startup, and the remote inspector console shows no useful error messages, restart the app by manually typing chrome.runtime.reload() into the console.\n4. Hopefully you will now see insightful error messages in the logs to help track down the startup issue.\n5. Please, report back to us if the error was our fault!\nBest of Luck.\n. @MrYogi I think that @drkemp has identified the root problem here -- you are trying the wrong samples!  This is our fault, we should have made that repository less discoverable and offered warnings in the README.  Sorry about that!\nThe correct place to look for samples is: https://github.com/GoogleChrome/chrome-app-samples.git\nAnd again, you can find the list of valid working mobile samples at the bottom: https://github.com/GoogleChrome/chrome-app-samples#mobile-support\n. @MrYogi still interested to learn why you were seeing a white screen, but closing this as a not being an issue as currently described.\n. Thanks for reporting this.  Will take a look (Mind also peaking, @mwoghiren and @clelland?)\n. @kzahel Seems you are roaming our issue tracker today -- did you get a chance to try this?\n. @kzahel Ah thats too bad.  I was hoping to try JsTorrent on Android.\nThanks for all the feedback, though.\n. Thanks for the report, I'll take a look at this in the morning.\n. @kzahel cca build, cca run, and cca emulate will all first run cca prepare, so let me explain more or less what that does..\n1. First, parses your app manifest.json to see if your app name, permissions etc have changed, and then automatically add/remove plugins and update cordova's config.xml accordingly.\n2. \"assemble\" your web assets.  Takes the contents of your app's www/ together with the web assets only of your installed plugins, and merged them into the platforms.  Note: We do not update the native components of the plugins during this step (this may change, there is a feature request for this).\n3. Finally, we replace your app's various i18n text, application icons, version codes, etc.\nSo yes, we do \"clobber\" the web assets in platform/ on each prepare, which is why we do not advise making edits directly inside that folder.\nHowever, for native plugin code, we should not be clobbering files on prepare.  For this reason, I am quite surprised to hear that the changes were reset to a java file during a cca build step.  This is either a bug, or perhaps confusion about which files are used when.  There are actually multiple copies of any plugin native file:\n1. mobile-chrome-apps/chrome-cordova/plugins/... (cca installs plugins from here during project creation time, or if you add permissions to your manifest)\n2. YourProject/plugins/... (This is a local cache, mostly useless at the moment)\n3. YourProject/platforms/android/src/... (Android plugins loaded at runtime)\n4. YourProject/platforms/ios/YourAppName/Plugins/... (iOS plugins loaded at runtime)\nMaking edits directly inside platforms/ (points 3 or 4 above) is actually currently the best way to iterate on changes to native code.  This is not usually something a chrome app for mobile developer should have to do -- thats a cordova developer workflow and our team tried to take that pain away best we could.  Any changes you make to these files are local your your project, and you will need to migrate back to the chrome-cordova/plugins repo if you would like to supply pull requests (please do!).\nSo, my hypothesis about what happened to your file is:\n(a) We have a bug, or \n(b) Your edits are still around in one of the other copies, or\n(c) You edited the plugin inside mobile-chrome-apps/chrome-cordova/plugins, then ran cca init (which cca build will prompt you to do if there are upstream changes), which switched away from a local git branch you had.\n. @kzahel I just tried to make edits to native files inside the plugins folder and ran cca prepare.  I did not see the file changes I made get overwritten/reset as happened to you.  I also tried web assets and plugin.xml and none of them changed.\nMay you try to reproduce and let me know the steps, please? I'd like to fix the issue.\n. Confirmed the issue.\nInterestingly it does not happen with all the plugins, which is what caught me (I tried with org.chromium.bootstrap).  This points to a fault in how we do our pre-prepare hook to scan your manifest.json permissions and install new API's.\n. Fixed after landing your PR.\n. Fixed with crosswalk (I think..)\n. Hello Fran\u00e7ois!  Preparing to write up a G+ post? ;) We look forward to it.\nCCA provides a default stylesheet to try and emulate the desktop chrome app styles:\nhttps://github.com/MobileChromeApps/chrome-cordova/blob/master/plugins/chrome-bootstrap/www/chromeappstyles.css\nIt is based on: https://code.google.com/p/chromium/codesearch#chromium/src/chrome/renderer/resources/extensions/platform_app.css\nOurs has fallen out of date, so I will update it to the latest version.  Still, it appears that the platform_app.css will not supply a default body height of 100%.  I'll investigate to see where that style is actually coming from on the desktop platform.\nNote: we do not attempt to override the default user agent styles to make the webview more like chrome.  There is another issue (#8) already open to provide a default css reset, so clearly this is something users want.\n. @beaufortfrancois has just discovered that the root cause was a missing  <!DOCTYPE html> from his application, which was causing the height 100% in desktop chrome.  This is either a bug with apps  on desktop, or at least a quirk we don't need to emulate.\nMost app developers must add the style themselves.  Closing this as wontfix.\n. Fixed after landing your PR.\n. Sorry but that is not likely any time soon.\nBoth are a possibility since they are supported by Cordova, but we do not have resources to allocate effort here at the moment.\n. @braden, @agrieve Before moving to being event driven, cannot we just move this work to a background thread?\n. @oahziur is working on chrome.sockets (#135 and #313), which will replace chrome.socket.  We will make sure to make those non blocking.\n. Agree with both your points, will fix.\nBut to be 100% clear, both forms of path are supported: path to dir containing manifest.json or path to manifest.json.\nWe try to document the latter specifically because it is less ambiguous -- as you already point out.\n. I think we do \"technically\" document this by saying we only support packaged apps and not mentioning support for hosted apps .. but I agree that the various \"types\" of chrome apps are confusing to users.\nThis one should be quite easy to just add support for, but I'm not 100% sure of all the other differences in the hosted app lifecycle and api support etc.\nWe should update our docs to be more clear, and do better to make the hosted app on cca experience better if we can.\n. Okay, so then I think what must have happened is that packaged apps very early on borrowed the hosted app manifest structure, and then migrated to the new form.\nI assumed yours was hosted because of the manifest syntax, but I guess that syntax is also supported for packaged apps (just not documented).  I'll raise the issue with chrome apps team to see if its a docs bug -- but I suspect that chrome is just still supporting the old syntax and the team wants new devs to use the new syntax.\nWe can look into adding support for it too, thanks!\n. This is quite interesting!\nSomewhat embarrassingly, we've not tested apps using the CSP meta tag yet.  We quite curious to try this out, so we'll report back just as soon as we can.  I suspect we won't get to it this week, though.\nThanks so much for pointing it out.\n. @tanx Any update on how your experiments are going?  I don't think anyone on our team has taken another looks since Andrew investigated, but we may want to return to this.\n. This is at the top of our wishlist as well.\nI investigated this for a few weeks last year, but the chromium sync module is a little too tightly coupled to your chrome-for-desktop user profile at the moment since the component was never really designed for embedding outside chrome.  This is a non-trivial effort to get right, but all parties involved do have a desire to see it happen.  Will likely allocate some time on this effort in a few months, but its unlikely to land in the near term -- sorry!\nAs one alternative: syncFileSystem is supported on all platforms.\n. Yes.. but its not good news.  We investigated building the chrome sync component for android and bundling it as a cordova plugin, but came to a few technical limitations that made this impractical.\nThat said, while chrome.storage.sync is a quick and simple way to sync simple storage across accounts and platforms, there are many viable alternatives these days (including Firebase, Parse, Meteor... or this list) which you can roll for your app that will work across Desktop, iOS, and Android.\nHope you can find a solution without too much hassle..\n. Covered by #272 now.\n. As per that thread, you can run this as a workaround:\ncd platforms/android\n./cordova/build --release\n. Hi Carlos!  No one is looking into this at the moment.\nFor one thing, even though it uses the chrome.cast.* namespace, its not actually a chrome apps api.\nFor another, based on my reading the cast sdk has to run specifically inside the chrome browser, which as you know is not what cordova runs on.  Its possible a subset of the sdk requires no browser features at all (and works already by just including the js in your app), or can be polyfilled, but this is not something we hope to investigate at the moment.\nHaving said that, almost everyone on our team is using chromecast on a daily basis and we are huge fans!  I would not be surprised if one of us just hacks something together out of curiosity some day.  Let us know if you do before we do!\n. @grahamkennery sweet progress.  You can automate the library loading.  See chrome.identity plugin.xml on how it depends on a play services cordova plugin.  That plugin in turn uses <source-file/> tag to add the google-play-services.jar and sets up your AndroidManifest.xml automatically. \nAlso, chrome.notifications depend on android.support.v4, etc, etc.\nSo, my direct suggestion:\n1. depend on the plugin for play services we already published to plugins.cordova.io using the <dependancy> line from chrome.identity.\n2. Create a new plugin for chromecast sdk jar (or, perhaps we should host that here?)\n3. add a dependency for (2)\n4. Repeat for any other libs you require\nThe specific reason for creating a plugin for each external lib instead of just bundling it with your plugin directly is that if multiple plugins depend on e.g. play services there would be conflicts if they all bundled directly.\n. I should add one more step, the way <dependancy> works is: you can depend on an absolute path, e.g. a git repo, local path, etc, or a plugin id.\nIf you use a plugin id, it will first search your local searchpath's which you can specify in cordova config, or better yet via CLI: cca plugin add foo.bar.baz --searchpath=root_folder_containing_plugins.\nSo, what I suggest is that even before you publish your library plugins, <depend> on them by ID and add them from local path by using --searchpath.\nAm I making sense?  Typing in haste before a meeting!\n. If you don't make any edits to native platforms, it suffices to check in www. And cca create --link-to=... as often as you like.  The exact artefacts created during create and prepare steps change as the project evolves, and so not adding platform files to version control actually helps with upgrading to the latest goods.\nHowever, if you do make edits to platform, including preparing to release to app store, you may not want to have to repeat yourself.\nEither way, we have on our objectives already to provide guidance on this (and improve caveats over time) so it's like you read our mind here!\n. http://stackoverflow.com/questions/22126126/which-files-to-keep-under-source-control-for-google-chrome-app\n. Relevant: #105\n. http://stackoverflow.com/questions/22364827/mobile-chrome-app-gitignore/22366370\n. You have to manually make the theme transparent in AndroidManifest.xml by changing \"Theme.Black.NoTitleBar\" to \"Theme.Translucent\" in the activity.\nSadly, we cannot yet automate this process with our existing tools, but are working on a better solution.  I'll update our docs to be clear about this.\nMay you please report back to confirm this fixes your problem?  Appreciate it, good luck!\n. After changing the Theme, not seeing the app pop up is the expected behavior, so I think we fixed that one issue (thanks for confirming).\nHowever, your notification not showing up is a problem.  Could you confirm that launching the notification while the app is in the foreground does work (call the code outside of an alarm handler)?  I want to see if the use of alarms is just a coincidence here, maybe this just a bug with notifications.\nIf you give us your sample notification code, then I would be happy to test this case out.\nAlso: does it work on desktop?\n. Are you setting that alarm handler in the background page outside of the onlaunched event?\nStartup alarms fire right after the background page is loaded, and your alarm handler has to be registered at that point, or else the event is lost.\nGiven that you say this isn't working on desktop, and it should be, my hypothesis is that you are registering the alarm handler inside the app launched handler or from your app window which wouldn't yet be open at this point.\n. Fantastic, do let us know if you don't get it working, notifications + alarms is something we would love to work well but has not been used in practice for very long yet.\nAlso, I should add mention that alarms on iOS do not work while your app is in the background, and notifications don't work at all, yet.\n. Fantastic! Thanks for confirming.\n. Andrew raised this issue with the chrome apps for desktop team, and seems theres a bit of magic going on here.  Comes out there are lots of places icons of lots of sizes are used ;)\nTLDR; Chrome uses closest icon size to hit all the odd sizes, but providing {16, 32, 48, 96, 128, 256, 512} sized icons should cover all your basis.\nSeems you found one of many places where 96x96 was a preferred size, yet was not explicitly documented.\n. @kamrik Did a bunch a research on icons.  I think he updated our documentation.  Not sure if there is more to document on this issue..\nMark just close this if you think its all been addressed.\n. Hey!  We think this is really cool, and have actually advised others to give it a shot before.  Since cca is just a wrapper for cordova, devs are free to add plugins like FastCanvas themselves.\nHowever, we are unlikely to add this plugin by default, since we do not think a significant portion of apps built with cca will be HTML5 games using the canvas, and also because we are hesitant to directly support 3rdparty plugins, especially ones as complex as this one.\nHowever, glad to know you are actively working on this cordova 3+ version, and at least we know which of the variants to send people to!  Thanks.\n. We are wary of adding any non-standard api's by default.\nAlso, the cordova camera plugin is going to go through some change in the near future, so we are especially hesitant to recommend that one by default.\nOf course, if it solves your problem you are welcome to use it!\nI think the takeaway here is perhaps to document more generally about what cordova plugins are, and to provide guidance on how, when, and where to do look for new ones.  Thanks for bringing this up.\n. In the 3 months since this comment, I can't recall any changes to camera plugin.  Maybe there was some talk at a meetup / on the lists / or I was just confused, but there is nothing to point to, sorry!\n. I just tried this:\n```\n\ncca plugin add org.apache.cordova.camera\ncca run android\n(success)\n```\n\nThen, on device, inside app:\nnavigator.camera.getPicture( console.log.bind(console), console.error.bind(console), {} );\nWhich resulted in an image being stored in: file:///storage/emulated/0/Android/data/MY_APP_ID/cache/1415719889576.jpg\nThe image is stored in a file url, so you may have to xhr it and set the image src to a data uri, but you should be able to get at least that far without hiccups.  Please file a new issue if you cannot follow these above steps in a cca project.\n. All cca apps automatically inject cordova.js.  I don't think you need to run your sed command using our toolkit at all (this is one difference between cca and cordova-cli).  The plugin org.chromium.bootstrap does this.\nYou should be able to just add the cordova Media plugin and start using it (is that not true?).\nIf you want, you can find the actual cordova.js file after running cca prepare in ./platforms/android/assets/www/cordova.js and ./platforms/ios/www/cordova.js.\nIf you would like to modify the contents of cordova.js, I suggest using a post-prepare hook, but I suspect thats not what you are asking.\n. One more comment:  you can test for window.cordova as Andrew suggests, or use:\nchrome.runtime.getPlatformInfo(function(info) {\n  var is_android = (info.os === 'cordova-android');\n  var is_ios = (info.os === 'cordova-ios');\n});\n. Current known fix: edit your platform/android/AndroidManifest.xml file and add android:launchMode=\"singleTop\" to the <activity> tag.\nI am investigating to see if there is a downside to setting this by default for all applications in a future version of cca, but it will need to be updated manually for existing projects.\n. @tvanier We will be setting it as the default very soon.\nGenerally, we would like the number of decisions made during cca create command to be minimal.  You should be able to change most settings after the fact at any time.\nThis may mean supporting flags in manifest.mobile.json, or documenting the cordova config.xml preference values, and making sure we automatical import old settings when you use cca create with --link-to or --copy-from.\nGiven that, I hope we don't need to add CLI flags (which are hard to discover).\n. Fixed!\n. The answer is a little complicated.\nFirst, instead of looking to chrome.idle, I would take a look at the chrome app lifecycle, and specifically the chrome.runtime.on* events (onStartup, onSuspend, and onSuspendCancelled), and chrome.app.runtime.on* events (onLaunched, and onRestarted).\nAndroid and iOS don't map 100% to chrome desktop lifecycle in each case, so you should read about the differences.  I'll make sure we take a deep look at that document tomorrow to make sure its still accurate, but I think you can get a general idea.\nFinally, on Android what happens when you click the app icon from the desktop depends on the android:launchMode set in the platforms/android/AndroidManifest.xml file -- as described here: #97.\n. Thanks!\n. Short Answer: We use the system WebView on both iOS and Android, neither of which support WebRTC, yet.\nFor a longer answer, see my answer to this Stack Overflow question: Do 'Chrome Apps for Mobile' use native web-view on each platform?\n. See my answer here\n. From discussions today: We should consider how this interacts with version control.  For a chrome app developer who has a git repo with manifest.json at the root, adding these assets at the root will be quite cumbersome.\nAdditionally, even if we do support importing all these assets, we should make sure that all of them are links.\nPerhaps a better way to solve this problem is (a) to continue to make everything outside of www/ a build artifact, so you only need to version your chrome app (aka www/), or (b) make it feasible to version control your entire project platforms and all, perhaps by providing a default .gitignore that helps you avoid checking in the bits that aren't useful to share.\n. This issue is fixed in upstream cordova-cli, and should be availabe in our next release.\nRegarding the second .gitignore questions, there is already reference to #85, and see also #120.\n. May you please provide more details?\nHow are you attempting to access the file system?  Sample code will help us figure out the specific issue.\n. Ahh, the download attribute is a new html5 feature that is not supported on the mobile webviews (though according to caniuse it may work on KitKat, I haven't tried).  \nYou can use the HTML5 FileSystem in combination with XHR to save those files locally.  However, I suspect what you are trying to do is prompt to user for where they would like to save the file?  If so, I think you may actually want to use the chrome.fileSystem.chooseEntry -- but sadly our implementation on mobile is not up to par just yet.  I've filed #108 to track this.\nSecond question: you do not need to add cordova.js yourself, we do that for you if you use cca.\n. Reference: HTML5 Filesystem API.\nFor usage, refer to HTML5 Rocks' FileSystem article on the subject.\nFor quirks with the plugin, refer to Cordova file plugin docs.\n. Hi @wernight.  This is a known issue.  Specifically, you are using --link-to= with a source path that is a parent of the the target path.  This causes a symbolic link loop!\nIn your example, you would have, MyProject/www/.cca/www/ -> MyProject/www/ so MyProject/www/.cca/www/.cca/www/ and MyProject/www/.cca/www/.cca/www/.cca/www/ (and so on) would all be valid paths!  This causes issues with the way we do cca prepare since we cannot know when to stop copying files.\nWe have a fix in the pipeline to give you a more useful error message during cca create when you try to do this (hopefully that will make it less confusing), but you should not expect to see this work any time soon.\nIts possible we will resolve the issue some day, (by not relying on a filesystem symlink), since I think your use case of trying to turn an chrome app into a cca project \"in place\", especially in a hidden folder, is a very valid use case.\nFor now, I would resolve the issue by just creating your cca project as a sibling of your chrome app:\ncd MyProject\ncca create MyProjectCCA --link-to=./www/\nOr alternatively, by create a default cca project, then manually overwriting the www/ \"in place\", not using --link-to at all:\ncca create MyProject\ncd MyProject\nrm -rf www/\ngit clone REPO.git www/\ncca prepare\nSound Good?\n. It shouldn't, because it will create ./MyProjectCCA/www that links to ./www, which is fine.\nAnyway, I completely agree with your points and I see how annoying creating a cca project as a sibling is.  We are brainstorming how to make this easier.  Thanks for giving us input about your workflow!\nBy the way, what are you building, if I may ask?\n. Are you able to create any projects at all with --link-to?  May you do an ls inside your www/ source directory and confirm there is a manifest.json in there?\nI just tried doing the exact steps you are and it works fine locally.  I suspect the issue is not specific to  the folder being named www/ or being a sibling, but something to do with the project being imported (or its a bug in our tool we haven't seen yet).\nSadly that stack trace isn't helping very much.\n. Related: #60 \n. Relevant: #62\n. Still need to add chrome.identity.getAccount ;)  Hold your horses.\n. No repro step, and deviceready event is supposed to be sticky.\n. Also, KitKat supports geolocation natively, but you have to add permissions:\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\nIt just silently fails (!) with no error, no message, no callbacks whatsoever, unless you do that.  Not sure if this is documented anywhere.\n. I think step 1 is to install org.apache.cordova.geolocation plugin when geolocation  permission is requested, and step 2 is to check that plugin to see if we cannot just disable it on KitKat (not sure if the cordova plugin extends functionality).\n. This is working now.\n. Thanks for this detailed report.  I will take a look tomorrow morning at addressing ti.\n. The answer is to change src/cca.js parseManifest implementation.  However, there's a comment in there that claims to be doing the exact opposite of what I think we want:\n// Check for wildcard path scenario: <scheme>://<host>/ should translate to <scheme>://<host>/*\nEither thats just a glaring bug, or there was a reason that isn't obvious to me right now.  Since I'm not confident trying to update this without writing manual tests for each of the cases, I'm going to add this to our task list, likely to be addressed next week.\n@bergie you can work around this issue for now by adding the cordova <access> tags yourself to the final config.xml's inside the respective platforms/ folders.  This is a pain as those will be overwritten on cca prepare, but at least gives you an option to play.  Alternatively, just work with the <all_urls> permission until we resolve the bug.\n. during cca prepare we:\n1. parse your manifest.json and manifest.mobile.json and use values from there to modify your cordova application config (config.xml) which is in the root of your project (not inside www/ but as a sibling of it).  If you add a config.xml inside the www/ it will not be used[1].\n2. then we run cordova prepare which takes the application config.xml, and platform defaults.xml, and generates the final platform config.xml inside platforms/, overwriting what was there before (super confusing we know: platform and application config.xml have same name, look similar, but are actually different).\nSo, if you make edits to the config.xml's inside platforms/ those edits will be overwritten with each prepare, and commands like build automatically run prepare[2] so thats why you saw that happening.\nI think the answer is simply: edit the manifest.json for whatever you can (aka, whitelist, name, description, version, icons, etc), and edit the top level application config.xml for whatever cordova specific settings you want.\nLet me know if that works.\n[1]: cordova-cli supports both config inside and outside www/, and while cca only supports outside, its possible we have a bug..\n[2]: There are ways to edit those files if you really need, such as in post-prepare hooks, or by circumventing the CLI entirely and using the native build/run scripts, ask how if you really need this.\n. I think that's expected. The \"defaults\" from CLI output refers to the defaults XML file not to some default config. What setting are you hoping to set? Orientation?\n. Hmm, thats interesting.\ncordova CLI asks for 3 arguments: Directory, packageID, and App Name.\nWhen we made cca we decided to specify the last 2 using your manifest.json and manifest.mobile.json.  If you use copy-from and link-to, I think thats what you expect.  cca create MyCalendarVersion5 --copy-from=... should probably not rename your app to \"MyCalendaVersion5\".\nHowever, cca create Foo, I can totally see just naming the app \"Foo\".\nWhat does the team think?\n. If cca prepare did the right thing (aka we fix #124), would this still be an issue?\nI think these docs deserve to live in the Publishing your app section, not the getting started guides.  Potentially they also need to exist in the docs for a few plugins, since you need to use packageId for chrome.identity for example.\n. Well thats what --link-to and --copy-from are for, and if you edited those files once, the import will respect that.\nRight now, when using link-to I think we don't do the right thing because our behaviour is (a) start with a default, (b) import app, (c) run prepare, and that last step just isn't doing the right thing (#124).  We could fix the import, but I think fixing prepare should be enough.\nAnyway, I'll come chat with you in person when I get back.  You will have to specify these settings at some point, and I just am not seeing why forcing you to do it up front is better.\n. Alright.  I think you've convinced me :)\nWe are seeing more and more that the ability to port desktop apps (our original target) is less important than the desire to just start from scratch on a mobile hybrid app.  For that reason, I do think we need to have a different, special workflow, to get you up and running from scratch without learning a bunch of details.\nI should also add, though, that a lot of our \"out of the box\" workflow effort recently has been focused on Spark IDE with Chrome App Developer Tool for Mobile (aka App Harness).  The Spark IDE is quite nascent, but it does provide the ability to start with a project boilerplate and specify app name upfront etc as you suggest.\n. We have thought of doing this.  Actually @gauntface has done it for vanilla cordova (See this article) and there are many other examples of generators.\nNo one has created a generator for cca specifically, though, and no one on our team is a big user of yeoman so it hasn't come up.  This would be an awesome way to help us out and get started!\n. Theres been a lot of work to change this, and there is yet more work in the cordova-cli project.  Closing since I think there is no actionable item left for us.\n. cca run android will run cca prepare automatically (as do most cca commands).\nThis is a good point, we don't document this.  Thanks.\nThe reason we say what we do in the docs is because we were targeting the use case of editing files in an IDE and hitting \"play\" from there, which won't run prepare.. our new workflows (CLI and Spark) don't have that problem, so we should consider re-wording.  Thanks.\n. I've just linked to our docs entry point from the wiki right now.\nI'm hesitant to duplicate content, but don't want the wiki to be the primary source since I think its nice to have the docs as part of git clone.  I also think we will move more and more docs into the chrome apps official docs and want to just link out to those from here.\nIs there a reason the wiki is beneficial?  Perhaps so that our contributors can fix mistakes without needing a PR?  I've never used the github wiki's before, so I'm a novice here.\n. Submodule docs wiki: Thats a crazy suggestion, Dan.  I think I love it.  Will investigate when get back to Canada.\n. This may be a good idea (not sure), but just isn't on the radar right now, and I'm trying to clear the backlog.  Closing for now.\n. #85 Seems this is a popular request.  I'm not sure we have 100% clarification on whats best to advise, but we think starting with a sample .gitignore is a good idea.\n. Thinking out loud: if we add a default .gitignore to the default app template, would that be awesome, or surprising?\nI just checked, and git init inside a repo thats already got a .gitignore works as expected.\nBut it also means that git add -A followed by git status does not list platforms/ and plugins/ and that may be confusing the first time.  On the other hand, explicit git add platforms gives a nice error about being in gitignore, and .gitignore itself is listed in git status after initial init/add which should be clear to devs what's going on.\nSO, I think just placing a .gitignore inside the default app will be quite valuable to devs, though we should document as well.\n. There is now a default .gitignore file.\nIf I do:\ncca create Foo --link-to=...\ncd Foo\ngit init .\ngit add -A :/\ngit status\nI will see:\nnew file:   .cordova/config.json\n    new file:   .gitignore\n    new file:   config.xml\n    new file:   hooks/README.md\n    new file:   hooks/after_prepare/cca-post-prepare.js\n    new file:   hooks/before_prepare/cca-pre-prepare.js\n    new file:   www\nI think that the hooks/ directory should be removed by default (We have an open issue for this #232).\nThe www in this case was a symlink, which will make for an odd git repo, but this is still what I would expect as a user.  (Likely the contents of www/ are a repo themselves).\n. Should fix cordova-cli src/util.js:165 to use $0 instead of \"cordova\".\nHowever, we probably want a better overall revamp for what I'm sure is a bunch of these types of error messages.\nCLI is using an exception to trickle our error messages, and I think there is a default fails handler on the top level Q promise.  We are using the cordova.raw api's, but not adding our own fails handler in cca.js:365 runCmd() implementation.  Maybe we can override the default and affect all messages? (s/cordova/cca/) ??\n. We now just re-add those platforms for you automatically.\n. Closing since there #85 #120 are supersets, really.\n. With the most recent version of cca (v0.0.11), you should not need to pre-create the platforms folder any more.\nI'll close, but please comment and re-open if it is not actually resolved.\n. @etoileweb You should have android/ios added by default so long as your machine is set up with the respective sdk's.  This bug just tracked what happens if you delete platforms/ or clone a git repo that doesnt have one.\n. If you change the name in manifest.json and run cca prepare, this should change your app name.\nIf you also change the packageId in manifest.mobile.json, we also move files arround accordingly.  (There is a bug where the old ones are left behind, but it shouldn't cause an issue and is resolved by re-creating your project with import).\nI think we do not document this, and should, so I'll leave this bug open.\nAlso, Dan if you try this and find that we missed renames in some spots let us know please.\n. Hello @hexahedron!  If you would like to take a stab at this, Dan gives a great outline of the places we fail to rename your application.  It looks like its almost exclusively inside android platform, and likely the fix is entirely inside the cordova-android project.\nPerhaps its not the best (nor most important) bug to get started with, but by all means.\nThanks for the kind words about the project.  Please do let us know what you are building, and/or point to what you've built if its published.\n. Related: https://issues.apache.org/jira/browse/CB-7231\n. @kzar good point, we should do a release.  Thanks for the cough gentle cough prod.\n. I just tried this with a list notification and image notification, and it works fine (start collapsed and can expand with two finger swipe, or single finger if list is short enough) on my Nexus 5 w/ KitKat installed.\nAre you suggesting this fails to work on pre-kitkat devices when using API level 19?\n. Alright, confirmed that Basic notification type never expands when the message is too long.\nThis is not specific to KitKat or non-KitKat, that happens on any version.  At the moment list/image expand by default.  Going to work on patching basic for this as well.\n. For now, changing basic notification to use BigTextStyle by default.  Testing to see if that sucks when the text is actually short.\n. This change seems to work great, actually.  Landed, and should be fixed as of dd0fcf0\n. Before anyone dumps many hours into this, I think its safe to say these features are coming to the web platform (on Android, at least).  WebRTC has been in chrome for mobile for a few releases now, and chrome webview finally backs android apps.  Since the webview is stuck at chrome version 30, we will need to wait for a new android platform update, but in the mean time the cordova team is already looking at just bundling a newer chrome \"webview\" along with cordova-android applications.\nFor these reasons, I would probably advise: it would be super useful to work on polyfills for iOS (since its unclear if the next rev of webview will support it), but for Android lets just work on bundling in the latest version of chrome.\n. Should be fixed with #133 merged in (thanks again), but I'll let you confirm.\n. So, the good news is, this patch is awesome.\nThe bad news is, we've got two new test failures for chrome.socket (for UDP using socket.connect).  You can try to run these tests yourself if you like, by running a normal cca app created with cca create CrSpec --link-to=spec.\nI'm already investigating the issue, but for next time.  (mental note: add testing instructions to contributing doc).\nIn the mean time, may you please sign/confirm that you have signed the Google ICLA, please?\n. .. That was testing on 4.4 KitKat.  On 4.1.1 failing tests go from 11 -> 6.\nConfirmed that you've signed the ICLA, thanks!\n. Heh, I missed that bug ;)  Was scratching my head since everything looks o.k.\nTheres also an exception with multicast receive, yet the tests are passing.. so that had me distracted.\nAny patches will be appreciated, but you should know that this was one of our.. earliest.. experiments with chrome api polyfills.  Since then, there is a new&better rev of the socket api called chrome.sockets (note the plural).  We will likely be doing a re-write with evented I/O etc.\n. Huzzah.  Now come drink beer.\n. I don't think you can update play services manually.  This is odd.\nAre you running on an older device?  @mwoghiren @clelland did we make changes to syncfs to use some non-stable dependency?\n. Just wanted to chime in: the benefits of the new API make a lot more sense on desktop, where the lifetime of the chrome runtime outlives the lifetime of your applications.\nThe v2 structure of chrome.sockets was supposed to address two problems (at least):\n1. Support killing an idle app while still persisting its running server socket waiting for incoming network connections.\n2. Support iterating the list of existing sockets.\nBasically, the v1 structure was a pain to manage resource/app lifetime.  For mobile chrome apps on cordova, where the runtime lifetime is your app lifetime, and your app is the only app, the v2 structure I think buys us little benefit aside from desktop parity and perhaps preference for api structure.\nIts absolutely on our radar to implement these new apis (and we would be happy to accept submissions), but it isn't on our task list for the coming weeks because of other more pressing issues (like APIs that don't exist at all, and workflow bugs).  Sorry for the unsatisfying answer.\n. Looking over old design docs (sorry, they seem internal only, but I'll ask if they can be shared publicly, there is no reason to not be) another motivation was to more prominently split the tcp/udp interfaces, since both behaved subtly different and had a different api surface area, and the only way to differentiate was with the options which they were created.  Looks like tcpServer was thrown into that in the end as well, which is great in my opinion.\nI do think they did not need to change the API so radically, but they needed to change it at least a little and I guess they decided to fix other API lessons-learned while they were at it.\n. Well thanks for taking this on.\nI'd say a polyfill over the existing js api is a great start.  The bigger project is redoing the native bits, but that has less to do with API structure and more to do with code cleanup (chrome.socket was a quick early attempt to get an API ported and has some tech debt).\n@ahmadnassri FYI The team working on Chrome Apps for Mobile is entirely in Waterloo.  I also see you're also connected to @pearlchen who works with us.  Maybe thats how you heard about the project?\nWhat was the motivation for chrome.socket.tcp.xhr?\n. @ahmadnassri There are other chrome.socket implementations out there?\n. Ah thanks.\n. @oahziur Is working on this!\n. Witam!\nThis is a fetch error, seemingly because we haven't actually published this plugin to plugins.cordova.io.\nPerhaps it was published at some point in the past and was taken down (hence the documentation bug).\n@mwoghiren is doing a cca project release today.  Max, perhaps he can also tackle a plugins publish to the plugin registry?\n. You cannot just include events.js as a normal script, since its part of a plugin and is meant to be included as a cordova <js-module> (which would define the missing module you've encountered).\nI would install the plugin chrome-common to fix this particular issue.\nAs for your question about payments will work outside of cca overall.. well payments is a work in progress even within cca, buts not a plugin that depends on the app lifecycle and so should work outside.  Max has mentioned earlier that he will discuss and experiment together with Ian, but he was working on a cca release today.\nHopefully after just installing chrome-common plugin you will be able to tell us how it went!\n. Charging your wife's account is a feature not a bug :)\nOne note about (b) is that we support adding plugins by path, and also support a --searchpath argument to cordova plugin add.  You shouldn't need to create a new repo, just clone ours and add the plugin from the subdirectory.\nAnd (c) I would add the \"common\" plugin that matches up with the payments plugin version.  SO: if you add payents directly from git repo, you should add common from there as well.\nLet us know if you figure out the wrong-account-being-charged issue, since that sounds important to get right :)  I hope its just a configuration issue on your end.\n. @mwoghiren Max, any chance you could take a look?\n. Specifically, we create a manifest.mobile.json during project create, with a default packageId field, and merge the two manifests at prepare time.  If you manually override www after that fact, you won't get a manifest.mobile.json, and won't have a packageId.\nIn some places, we guard against an empty packageId: (manifest.packageId) || \"com.your.company.HelloWorld\" but in others we just blindly apply it widget.attrib.id = manifest.packageId;.\nI think we should guard against empty packageId, perhaps by adjusting getManifest to set defaults for \"required\" values, or by auditing all the uses of manifest throughout the codebase.\nAdditionally, I think we should consider and moving when we create manifest.mobile from create to prepare time.\n. Related: #312\n. Interesting.  I thought this was only true inside CADT.\n@agrieve (who was looking into it.  I thought there was an issue open for it, but cannot find it now.)\n. If we do warn, then what?\nOne previous cordova proposal was to install the CLI that was used to create the project alongside it.  Then, the global CLI forks to run the local one when inside a project (a la grunt?).\nAlternatively, we could prompt to upgrade (via in-place re-import from scratch), backing up the old files just in case.\nLast option is to cross fingers and hope for the best (hence the warning).  Maybe start there for now..\n. Done.\n. Great suggestion, I'll add this to our test suite and report back.  Thanks!\n. @mwoghiren Max this looks good to me, but would you take a look plase?\n@moust, have you signed our ICLA as described in our contributing doc?\n. Yes, this is possible.  You can add any cordova plugin using our cca tool using: cca plugin add ..., exactly as you would have used cordova plugin add ... or phonegap local plugin add ....\nRegarding send sms: you can use an sms: url (see this SO question) but reading/managing sms will require building a plugin to do this in native code.  Not sure if one exists.\nFor Media and vibration there exist cordova core plugins for: org.apache.cordova.vibration, and org.apache.cordova.media.\n. Np. More long winded answer available on stack overflow.\nI'll take a look to see if this is properly documented in our repo.\n. That plugin bundles play services, which causes the conflict.\n. This isn't our fault, and we can't do much about it.  Cordova just needs better support/vocal solutions for shared library deps problem\n. @agrieve Thoughts?\n. Related: #166\nCrosswalk history.replaceState exists, and seems to work as I expect.\n. So the webview should be re-created (in the background) when a gcm message is received.  Its possible there is a bug (looking into it), but just to confirm: are you registering the event listener in the background js?  If you app was not active, then your onLaunched would not be fired, and thus you chrome app window would not be opened..\n. Yes, onLaunched only gets called when user clicks the app icon.  In response to gcm.onMessage you will likely want to fire a notification or update the app in some way, but you will may not have access to any open windows, depending on if the app was running.\n. Did you load jQuery from your app window or from a background script?\nWe should not fire the gcm event until all background scripts have loaded -- though the specific order of various async events after that point gets tricky.. so if you read from chrome.storage in one of your background scripts, the gcm even may get fired before/after that result.\nLet us know how it goes!\n. Can you verify that your application actually received a gcm message?\nThen, Can you verify that the background scripts are running at all?\nThen, Can you verify that the event is fired?\nThen, Can you verify that the $.ajax call is working?\nRight now its hard to know where this falls apart.  A few quick tests to see if this is working:\n1. Close the chrome app, then see if it automatically re-opens and moves into the list of activities after you send a gcm message (i.e is the app in the app switcher list)?  If not, either the gcm message did not arrive at all or our plugin is misbehaving.\n2. If the app is in the switcher, then open remote web inspector to see if console messages are being printed to know if the webview background scripts are loading.\n3. If they are, add a console.log() to chrome.gcm.onMessage outside of the ajax call to see if that fires.\nI would absolutely start by confirming you are actually receiving the gcm message.\n. Ah, thanks a bunch.  Looks like thats a bug in our plugin then!  @drkemp\n. I've also updated the docs to mention that your application theme should be set to translucent or else you will see a black flash:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.gcm\n. Well thats not right.\nWhere is the <access origin=\"https://www.google-analytics.com/*\" /> coming from?  We don't add that as far as I am aware.\nAnd to be clear, are these being duplicated in the config.xml that is inside platform/ or in the one at the root of your project?\n. @jpchase Another issue thats easy to knock down to add to your list.\n. @mwoghiren \n. We cannot delete, can just marked closed.  Glad you resolved the issue, though!  (What are you building?)\n. We only support packaged apps at the moment.\nIf you are interested in mobile hosted chrome apps -- thats not on our roadmap at the moment, but possible.  If you are interested in us auto-packaging your hosted app assets -- thats just not going to happen.\n. Thanks.  I saw this issue earlier when I tried to publish a cca release candidate with npm 1.4.10.  It seemed to go away with a publish from npm 1.4.5, but other users have reported this is still an issue.\nWhat version of npm are you using? (npm -v)\n. Would you mind trying a test: npm install -g cca@rc to see if you get 0.0.11-rc1 installed fine?\n. Just pushed v0.0.11 which hopefully resolved the issue.\nYou are using Travis with cca?  Mind doing a writeup about that for us?\n. Yeah sorry about that, pushed rc->release and unpublished the rc.  npm install -g cca should pull v0.0.11, hopefully without errors now.\n. Thanks for the confirmation.\nLooks like you guys are building something interesting!  Looking forward to your writeup.\n. We should create a github label for \"annoying issues we really should figure out how to address\".\n. Thanks\n. Not sure what you mean by \"similar to crosswalk\".  We are working to integrate crosswalk into cordova-android, and thus into cca.  There are no plans beyond that to get chromium into chrome apps for mobile.\n. I don't think there is :)  Lets leave this open so we can have a place to celebrate when this lands.\n. Crosswalk is now bundled by default!\n. Sorry for the late reply.\nI've not played with this, so theres probably some investigation to be done.  However, I wanted to quickly point out that there is a cordova event for 'backbutton' which you can use as such:\ndocument.addEventListener(\"backbutton\", yourCallbackFunction, false);\nHopefully that can at least get you started.  I do agree it would be better to leverage history.state and have back button to the right thing (tm) automatically.\n. so navigator.app.exitApp() works fine for me for cca apps.  Would you mind trying to create a default cca application and see if it works for you to isolate environment from application.  Then we can try to dig in to see where the problem is.\n. Similar message if there is already an app with the same packageId installed and adb won't let you overwrite it.\n@kamrik I know you have a list of CLI improvements in your head.  Perhaps you can add this one?\n. @kamrik ping?  We have decent messages, but they print stack trace anyway.  Perhaps this is a case of handling CordovaError exception type from within cca?\n. @SlimSim Thanks for bringing that up.  The link moved, but we updated the old link to let you know about it.\n. Nothing concrete.  Cordova team is working on the next major update to the android platform (aka \"cordova-android 4.0\"), and one of the motivations is 3rdparty webviews.  We are hitting some roadblocks with the current ant build system and Ian from our team is experimenting with gradle support.\nIts looking more and more likely that that will happen for the cordova-android 4.0 launch, but isn't guaranteed yet.\n. @clelland \n. Thanks!\n. Thanks for the report.\nThis seems to be a bug in cordova, but taking a look at the config.xml structure, there is a special attribute for email on the author tag.  e.g. the default config.xml template has this:\n<author email=\"dev@cordova.apache.org\" href=\"http://cordova.io\">\n      Apache Cordova Team\n    </author>\nUndoubtedly we should fix the issue with special characters in config.xml tags, but a larger question is how to best map author email from your chrome app manifest.json / manifest.mobile.json to cordova config.xml?\n. I think this is fixed but I can't verify at the moment.\n. Related to #294\n. Thanks for the report.  Max, our resident identity expert is out of town this week, but will take a look asap.\nRegarding using 0.1.0 -- just want to make sure that you did a full project re-create after the cca upgrade?  i.e. platforms and plugins don't currently get re-created when you upgrade the cca tool (theres an new auto-upgrade in tip-of-tree so this will change in the future).\n. Awesome thanks, just wanted to get that out of the way.\n. Is this only happening on windows?  That file exists for me (\\npm\\node_modules\\cca\\cordova\\cordova-android\\VERSION).. would you mind seeing if cca/cordova/cordova-android exists / at what point the path becomes invalid?\n. so.. npm install -g cca, and you end up with an empty/non-existing global node_modules/cca/cordova?\nMay you give the ls -l of the cca module contents?\n. ..note that we don't use global cordova installs, so testing vanilla cordova is only useful insofar as making sure that the same version we bundle (3.5 in this case) can work on windows.\n. ls cordova ?\n. Well thats not right at all.\nAs a quick test, may you please npm uninstall -g cca npm install -g cca and check for changes?\n. Damn.  I'll try to replicate environment to see whats going on.  Which version of windows are you using, and are you using cmd.exe or cygwin, etc?\n. Great!  Good luck figuring out the issue with notifications.\nThere are some examples of proper usage here which are tested to work on mobile.\nIf you find that these examples do not work on your device/environment, please do report to us!\n. (and thanks for trying out cca!  Mind if I ask what you are planning to build?)\n. I'll take a look now, but I notice that you have checked in platforms/ and plugins/.  There should have been a default .gitignore created for your application that ignored these directories by default.\nDid that not work, did you override the default, or are you using perhaps an older cca version?\n. I just tried this on my Nexus 5 with the latest cca and it ran fine.  I saw a basic notification appear.\n. If you upgrade cca, you have to recreate your project.  The latest tip-of-tree has a new auto-upgrade implemented, but its not released yet (and frankly, needs some testing).\nSo, if your platforms/ and plugins/ were created with 0.3.0, please try to re-create your project.\n(Btw, you can use: cca create AppName --copy-from=path/to/chrome-app/manifest.json and it will import assets, so it should be easy to migrate what you have now.)\n. Woot!  Have fun.\n. No problem, our pleasure!\n. First, the Thread warning is not the problem here (though it is something we should address).\nSecond, chrome.storage calls are async, both on desktop and mobile, and you cannot officially expect a read to be successful until the write completes.  In other words, instead of issuing all the writes and reads in two subsequent loops, try chaining the completion handlers.\nIn practice, however, I'm surprised that this does not work, since the calls should end up being processed in order, and the storage calls are not asynchronously implemented (thats what the thread warning is about).\nI'll take a look, this is concerning!  (But for now, and for best practice, try chaining your storage access).\n. ..and just to be clear, don't do this:\nchrome.storage.local.set(...);\nchrome.storage.local.get(...);\nDo this:\nchrome.storage.local.set(..., function() {\n  chrome.storage.local.get(...);\n});\n. I haven't seen this over last months..\n. @agrieve @clelland Has this changed?\n. The crosswalk webview has landed as of 0.1.1 (see our Release Notes)!\nWe've tested it previously, and its exciting to see this (and other new platform features) working.  Please upgrade cca and upgrade your application, then let us know how it went!\n(Btw, latest cca supports cca upgrade in-place so you don't need to re-create your project any more.)\n. I've gotten getUserMedia working using a regular html5 workflow.. is this due to differences in chrome apps vs web apps?\n. Ah got it.  I was testing with an app that had a bunch of plugins that coincidentally added those permissions.\nThanks David.\n. Reopening until we actually add the permissions to native.  @beaufortfrancois has volunteered to submit a PR!\n. cca prepare should suffice to prompt for auto-upgrade, as would cca run android\n. cca prepare should suffice to prompt for auto-upgrade, as would cca run android\n. After updating cca, you still have to upgrade your project.  cca should have prompted you to do so upon first build/prepare (did it?).\nAdditionally, you will need to add \"audioCapture\" and/or \"videoCapture\" to your list of permissions in manifest.json.  Finally, to confirm it all worked, please make sure cca plugin ls lists org.chromium.audioCapture and org.chromium.videoCapture in installed plugins.\nThanks.\n. May you cca --version and also ls within your workspace to make sure there is no local symlink?\n. So odd.  That all looks correct.\nMay you paste node --version, your platform, and the content of manifest.json, manifest.mobile.json, and output of cca prepare?\nThen, if you want to dig deeper for us, you could also instrument your (global) node_modules/cca/src/parse-manifest.js function mapPermissionsToPlugins.\nMuch appreciated!\n. Thanks for following up!\n. For what its worth, normal notifications show up on Android Wear from what I have seen (e.g. the Eh app workshop).  I don't have a watch so cannot test if there are rich-er notifications specific to wear devices that we do not support.\n. I just tried this from cca and from CADT and notifications show fine.  (Didn't try the \"break\" type to work since I don't have the i18n strings).\nWhich device are you using and which version of CADT?\n. Acually @DaniGuardiola can you file a new issue -- this issue is specific to Android Wear (aka Watch) notifications.\n. Yes, I realize your notifications issue is not specific to Wear, but this issue report is, thats why we should move to a new one ;)\n. Its still android/platform/bin for me?\n. Ah, thats the point ;)\n. Yes, this was a bit of a rushed release that bundled un-officially released cordova packages.  This is because there were a few breaking changes to cordova should not affect cca apps (i.e. breaking changes to the windows phone platform).\nBecause of this, the release was done from a fork by @kamrik and the notes were never updated here.  We are about to officially release the cordova bits, after which we will make sure to remedy the error here.  ETA ~days.\n. This is because of the new bundled crosswalk webview.  Basically it means all cca android apps will use a single custom webview, currently based on Chrome 36!\nWe expect the file size to be cut down at least 2x once we split arm from x86 builds, and possibly more once we optimize the builds a bit.  However, there will continue to be an overhead, since we consider the tradeoff worthwhile considering the features this webview brings (WebGL, WebRTC, Web Audio, the latest web platform features to run Polymer without polyfills, etc), as well as giving you a single stable target to develop against even as far back as Android 4.0!\nIf you really do not want to use the crosswalk webview, you can add this line to your manifest.mobile.json:\n'webview': 'system'\nGood luck (I'll address the RELEASE NOTES question in #197)\n. Step 2 should not be necessary.  Plugin should be automatically uninstalled during the next cca prepare (and thus during the next cca run etc).\nDid it not get removed automatically for you?  Were you using an IDE and not running prepare explicitly?\n. @Imskull I can't replicate.  May you please add comments to #215 to help us diagnose?\n. I believe the command is --copy-from not --copy_from.  Was that just a typo in description?  Is your app actually imported at all?\n. I'll think about it.  We forward unrecognized commands to cordova, which it may understand, so we can't just do the naive thing of whitelisting.  Cordova itself forwards commands on to library functions, some of which are filtered out.  Anyway, it should be fixed upstream, so I've filed CB-7084.\nThanks!\n. Fantastic, thanks Francois!\n. Thanks a bunch, but sadly I just discovered this independently and made the change a second ago.  Wish I checked this inbox first!\n. I can't repro any more.  May be the issue just isn't visible since plugins are now installed from registry.\n. There isn't an official chrome api for nfc.  There is a library written on top of chrome.usb for externally connected nfc readers: https://github.com/GoogleChrome/chrome-nfc\nProbably for Android we can implement that nfc api before we implement the full usb api.\n. We also do not support multiple windows, so a redesign for mobile sounds likely.\n. If we ever implement multi window support, we will implement messaging.  Its not on the radar at the moment.\n. What was the error?  Did you not have a curl command?\nUnless the script changed to try and execute itself, that should have worked if chmod +x worked..\n. You are right! curl -O https://raw.github.com/creationix/nvm/master/install.sh gives curl: Remote file name has no length!.  Seems that url redirects to https://raw.githubusercontent.com/creationix/nvm/master/install.sh and curl doesn't follow redicts by default.  I'll change the docs to add -L flag to curl.  Thanks!\n. May you provide the contents of that folder? (aka ls platforms/android)?\n. No problem, thanks for reporting back!\n. Closing as a duplicate of #241\n. https://developer.apple.com/support/appstore/   iOS6 is still 7%.  We'll see what happens in the coming months.\n. All set, thanks to @beaufortfrancois !\n. So 9bffc3e805d7c503ba4fe84622bae29bc1d38576 made a change to how xwalk is added/removed.  The implementation was actually left in pre-prepare but isn't called from anywhere.  Perhaps this is meant to be automatically handled with plugin auto-uninstall?\n. So I cant replicate.  I added the line \"system\": \"webview\" to manifest.mobile.json and ran cca prepare:\n```\ncca v0.3.0-dev\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin rm org.apache.cordova.engine.crosswalk\nPre-processing _locales for android\nPre-processing _locales for ios\n```\nAfter which cca plugin ls | grep crosswalk finds nada.\nI can also remove the setting and see the plugin get re-added.\nIn case anyone does run into this issue, you can manually remove the plugin by running:\ncca plugin rm org.apache.cordova.engine.crosswalk and cca should not try to re-add it (if you've updated your manifest correctly).\n. I've just also confirmed that cca build actually does remove crosswalk fully after the plugin is removed.  \n(there are some leftover references to crosswalk inside platforms/android/bin/classes.dex.d but I assume thats just build artefacts?)\n. Ah, thanks for reporting back on this!  Glad you figured it out.\nWe've been asked on guidance on which files should be added to git, and we added a default .gitignore file for new projects now.  (Not sure which version of cca that was added).\nhooks folder is technically a part of your application and should be managed by git.  However, the hooks you refer to were created by the cca tool, and so we would prefer if you didn't have to manage those (nor accidentally remove them).  I'll file an issue to move those hooks over to plugin hooks as soon as we add support for it in cordova-cli.  That way, cca apps won't create a hooks folder at all by default.\n. This happens because we create the default manifest.mobile.json after writing out config.xml during the cca create process.  As a result, when importing a chrome app without a manifest.mobile.json, you have an undefined manifest.packageId, and jsescape helper we use return the string 'undefined' instead of the value, so we do not fallback to default.\nFix incoming.\n. Closing assuming this is stale.  If it is still an issue please re-open.\n. I was just closing stale issues.  @mwoghiren can hopefully answer if anything has changed.\n. Thanks for reporting back.  We'll have to investigate the permissions issue (I've not run into it before, but I haven't been on the lookout).\nCan you also report which device/OS version you were using, in case its Android OS specific?\n. @g105b I can't replicate, so I won't file an issue for this.\nDid a bit of reading, and there may be all sorts of issues with permissions granting when using adb install which is a developer tool (and used by cca run under the hood).  Possibly we could to adb uninstall automatically first, but it seems like the issue isn't widespread.\nAdditionally, I should note that it won't be a problem if you ship to the play store and users upgrade using that path.\n. Thanks Francois.  Would you mind making it progress to 100 and then clear itself (to also serve as an example)?\nI'd be happy to do that if you would not.\n. No rush at all.  Appreciated!\n. This PR is out of date, and I think the correct way to support WSK would be to have better support for build tools in cordova.  Theres some work on this ongoing, and we can re-evaluate once that lands.\n. I had heard @mwoghiren talk about this before.  Not sure if we have something for it already?\n. Thanks!\n. Woot!\n. @jpchase This looks like a relatively simple task that can give you an opportunity to take a look at plugins.\n. Thanks for this patch, looks great!\n. Thanks for this patch, looks great!\n. Thanks for this patch, looks great!\n. Thanks for this PR, however, we typically solve these problems using:\ncordova.getThreadPool().execute(new Runnable() {\n  public void run() {\n    ...\n  }\n});\nIt seems cleaner and is easier to write in-line where the code is called.  Would you mind making the switch so that we can land your PR?\nThanks!\n. Do you think you would like to make this update to the PR, or would you like me to apply the fix?\n. Also, may you please sign a CLA following our Contributing guide please.  It only takes 30 seconds.\n. @dfay really appreciate your contribution, but since We're now landing chrome.sockets api and this api is already deprecated on desktop, not sure its worth patching any more.\n. @kamrik, may you help here?  Just need to know how to register hooks programmatically at runtime.\n. Thanks Mark, I'll experiment with this.\n. Let's chat about it tomorrow. I've got a patch for this, almost ready to go.\nOn Thu, 18 Sep 2014 11:22 Mark Koudritsky notifications@github.com wrote:\n\nI was thinking about it. If we register the hooks from within cca.js we\nloose the possibility to use cordova executable, i.e. \"cordova prepare\"\nwill not work for cca projects. But if we are ok with that, then\npre-prepare doesn't need to be a hook at all, we will have to just run it\nbefore calling into any of the commands that do prepare, this will leave\nonly post-prepare as an event handler.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/232#issuecomment-56054528\n.\n. This is an issue in the underlying Apache Cordova project, and has been a subject of decent activity recently.\n\nThere are a few relevant bugs to follow:\nhttps://issues.apache.org/jira/browse/CB-6992\nhttps://issues.apache.org/jira/browse/CB-7231\nWe'll try to get some fix into cca as soon as possible, and if we cannot do that in a timely manner, we will at least provide a workaround or better document the issue.  Thanks!\n. Related: #294 \n. --link-to=spec will link to the new test application (it finds it relative to the cca location).  It only works if you are using a git clone, since we do not bundle tests with the npm release.\n. Thanks for another awesome patch @beaufortfrancois !\nOne note for future: dpiY / dpiX don't change after device rotation.  The other values change in a way that I would expect when swapping x/y axis.  I'm not sure whats correct here.  I know we are just forwarding what android presents us.  On osx, chrome just reports 0, so I don't think we should address this (except perhaps to report issue with android DisplayMetrics?).\n. I wouldn't worry about it!\n. When you import into eclipse, select the platforms/android folder, not the root of the project.  Eclipse searches the whole directory tree and is picking up extra projects.\nI'll leave this open as a documentation issue, thanks!\n. Are you able to install all other npm packages fine?\n. @mwoghiren\n. Sorry this went unanswered, but closing assuming it is stale.\nPlease re-open if still interested.\n. So the caret in cordova-lib@'^0.21.6' means \"greater than or equal to 0.21.6\".  The \"valid install targets\" that npm is reporting for cordova-lib includes \"0.21.6\", which last I checked is accurately >= 0.21.6 :P\nI'm going to go ahead and assume this is a problem with npm, possibly you need to update your npm version or clear your npm cache.\nTry:\nnpm cache clean\nnpm install -g npm\nnpm install -g cca\nLooking forward to seeing if that works!\n. Fantastic!\n. Ditto for ios-sim\n. Thanks for checking back after resolving.  We should improve the error, but theres an ongoing general chat about how to make this sdk setup process easier.\n. I updated to support >= 19.  Possibly we need a better error message.\nOne caveat is that with API 20 build tools installed the target reported is Android-L not Android-20.  I added a special case, but wonder if thats an oversight or just a symptom of pre-release.\n. I'm assuming this is due to the crosswalk issue that @clelland is working to resolve.\nFor completeness, it could also be:\n- App background color, which is set in config.xml with <preference name=\"BackgroundColor\" value=\"0x000000ff\"/>\n- initial chromeapp.html background color, which is set in the chrome-bootstrap plugin\n- WebView background color itself -- this is rarely the problem, but there were some reports on the cordova ML recently of people finding cryptic ways to make this appear.\nOne quick test to try is to disable crosswalk webview with \"webview\": \"system\" in manifest.mobile.json and see if the flash goes away.\n. Lol thats literally exactly what we used to do that caused the Hello World app to load with a black background.  Is that not the case again?\n. Probably there is just no simple solution.  Probably we just want to load the webview hidden until the chrome app window is opened by the background script?\nAlternatively we can just provide a default splash screen?\n. Awesome!\n. That may be related to the default Translucent theme that we use.  Thats unrelated to this issue.\nTry to change android:theme (in <activity> in AndroidManifest.xml) to something like @android:style/Theme.Light and see if you notice a difference.\n(Please file a new issue, if you don't mind.)\n. I imagine that this is working as expected.  Chrome apps get lifecycle events and good apps should pause the video stream in the background.\nLikely the problem with this example includes that audio and video are being captured by the actual device.  Curious what the battery implications are for just leaving an  tag with local audio file in the background?\n. Awesome, Thanks!  (but I'm away today and can't test just now).\nGood job getting MiniLock up, I was attempting this yesterday, but stopped when I noticed it depended on NaCl anyway.\n. Thanks!\n. Absolutely Welcome!\nAnything more than a few lines of simple fixes we ask that you follow the steps to sign Google's open source Contributor License Agreement -- but that takes like 30 seconds.\n. Just checking in to say thanks.  We noticed this issue report and its on our minds.  Forgot to respond earlier, sorry!\n. It is not in 0.3.1.  We create tags for onpm releases, so a good way to know the commits that went into a release is to look at e.g. the v0.3.1 tag changelog.\nAnother simpler option is to look up the release date of the current version of cca on npmjs.org, which for 0.3.1 is 22 days ago.\n. Just 3 lines lower (just outside the nextTick call), these flags are set to false exactly as your patch adds.\nThat probably means values are reset to true right after being set to false for some reason.  I'll have to take a better look to see whats going on.  To be clear, you say the problem you are solving is that watch stopped working after you mv some files?\nPerhaps @agrieve will know.\n. Sounds like a great answer to add to our new FAQ.  Though I'm not sure we have a well formed answer quite yet.\n. Will need to keep this workaround in mind as we add CSP to cca apps by default.\n. Related #302.  Closing since not sure there is an action item here.\n. manifest.mobile.json support platform specific overrides.  Basically you can add anything that would go into manifest.json as a subobject of the \"android\" or \"ios\" key, and it will get merged in only for that platform.. in theory!\nIn practice I don't recall at what point we read in icons and if we do the work once per platform etc.  About to try it here and I'll report back.\n. Yeah there were some minor errors with the platform merge, but I've just verified that I can have different icon sets for ios/android.\nIf you would like more details about which icons go where, read this, and do please suggest any improvements!\n. @clelland is working on it!  The holdup is that its dependant on adding gradle support to cordova-android.  I'm not sure of the full details.\n. The latest version of cca from this repo does this by default!\nThere are still some kinks to iron out, like a 1/10 chance of random build failure that just goes away with retry..\n. @twilly86 you mention in that SO question that you have to use Android Studio to build an Android Wear app.  Is that really the case?\n. arm & x86 builds are done (but not released yet).  Probably in next npm release (probably 0.4.0).\n. Fixed in 83d6d06\n. Interesting, considering that chrome.socket is deprecated as of 33.  My guess is that we will just put effort into the new chrome.sockets api starting September.\n. If you are looking for a wildly inaccurate estimate, I'd say end of Sept we'll have something for chrome.sockets.\n. @oahziur FYI.  chrome.sockets.tcp equivalent: https://developer.chrome.com/apps/sockets_tcp#method-secure\n. I think it was a mistake. I've posted a question about it.  Not sure what's\nup.\nOn Fri, 27 Feb 2015 15:42 Felix Hammerl notifications@github.com wrote:\n\ni already asked this on twitter\nhttps://twitter.com/felixhammerl/status/571325009693507584, apparently\nthe issue has been silently purged? can you confirm this? is google\nabandoning tcp sockets in chrome apps?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/269#issuecomment-76468044\n.\n. @agrieve for thoughts.\n\nThe minSdkVersion is hard coded in the cordova-android application template, and 10 corresponds to gingerbread (the min for cordova-android).  14 is ICS, and as Francois says, should be the default for cca apps.\nI'm not sure I agree that it should be 19 for \"webview\": \"system\".  We've supported the old stock android webview until recently, and though some things may start to break soon, I don't think we should prevent devs from trying.\n. Awesome.  Probably a task for post-prepare hook, kinda like we do versionCode updates to AndroidManifest?\n. Very sorry about that.  @kamrik would you be interested perhaps?\nThis is how I think we should solve the problem:\n1. cca plugin rm ... for every cca plugin (basically, the same that would happen if you removed all permissions from manifest)\n2. remove plugins/android.json and plugins/ios.json\n3. rm -rf platforms\n4. cca platform add android and ios again\n5. cca plugin add all cca plugins again\nI did a test locally, and this worked for me.  Platforms and cca plugins were upgraded, and 3rdparty plugins re-installed themselves automatically.\n. @beaufortfrancois actually just landed a fix to explicitly state that we require API level 14 (ICS) for #273.  This is actually not at all related to chrome being available since ICS since we don't use the chrome browser.  (But Indirectly, our requirements for using crosswalk are based on chrome support, since crosswalk is based on chromium).\nAlso, we do mention that we target iOS 6+ and Android 4+ in many places, including right at the top of the very first step of the setup guide.\nNot sure if we should promote the info to the main README, but I don't think its necessary.\n. Clarifying in case my last explanation was too confusing :p\nOur requirements for 4.0+ come mostly from the Android apis we use, and (until recently) the features of the Android system webview.  As of recently we have switched to using a bundled crosswalk webview by default, and that happens to also require 4.0+ which is great overlap.\nBoth above requirements are only indirectly related to the Chrome Browser App for Android requirements.  I want to be super clear that Chrome Apps for Android do not use the Chrome Browser at all (unlike on Desktop).\n. We are trying to simulate the chrome apps environment, and to do so require some webview apis that were not available until ICS.  And now we are fairly boldly betting on crosswalk which is also ICS+.\nAlso, cordova android does support 2.3, but that doesn't mean everything that works on 4.x works there, and it is greatly underemphasized.\nChrome Apps for Mobile provides a few things that cordova does not, but mostly we aren't trying to be radically different or better (most of our contributions are directly to cordova).  We just want to make hybrid awesome, and using chrome apps as a motivating target implementation.\nSome of the differences with cordova are listed in our faq.\n. Right now, plugins versions are \"pinned\" to cca release.  However, we are moving towards a model of publishing all plugins to cordova plugin registry and installing from there.\nWe don't use a package.json inside cca projects.  We could add all cca plugins as deps to cca package itself in order to continue to pin plugins to tools releases, but a better solution is to just wait for the result of recent work on cordova to add plugin save/restore.\n. When you say that \"it wouldn't install on the device\" do you mean that it failed to deploy to device (tooling error from command line), that it failed to launch (runtime exception), or that it launched but was blank white/black screen (error during load)?\nIf you could give us any log messages from either cca, adb logcat, and/or chrome remote inspector, that can help us diagnose.\nThanks!\n. Seems to apply after second prepare every time you make a change to packageId.\n. I'm still seeing this consistently.  Probably a quick fix, but can't debug atm.\n. Can no longer reproduce.\n. Looks good thanks.  Looking forward to getAvailableCapacity ;)\nonAttached may be useful for microsd phones, but until users request it I'm not sure its high priority.\n. This looks like a sweet improvement for devs importing existing chrome apps -- but a large portion of devs start from the default and iterate.  I wonder if we shouldn't set the default app name & packageID to the name of the directory?  (and allow explicit overrides with flags or optional parameters)\n. We are already \"cheating\" by setting packageId with \"com.your.company.\" prefix when importing a desktop chrome app.  I think thats a fine shortcut to fix the common issue of deploy failures when you are just doing a quick experiment.\nI'm suggesting we do the same for cca create Foo which imports the default app.\n. Topeka was uploaded to play store without doing anything special.  On tablets (N7, N10) it is available to install from the play store just fine.  Closing for now.\n. Didn't post which line?\nAnyway, I've messed with the gcm server so I probably broke the backend.  Spec should certainly not crash when then happens, though!\n. I tested this patch locally, builds fine and CrSpec passes all tests I expect it to, on Android vis osx.  Didn't test iOS platform or windows builds, but I trust this is ready to land.\n. Exactly!  This is awesome.\nI won't have time to test all the combinations until tomorrow afternoon, but super excited about this change.  Thanks Francois!\n. Thanks for the ping.  OOO today, will do this tomorrow morning.\n. This looks great!\n. This still sucks, but closing as unimportant since @kamrik updated the way we manage versions.\n. @kamrik I know there was some work in cordova-cli to support special characters.  May you verify this is still an issue, and see about resolving it?  (Possibly it should just go away if we are updating config.xml values and we use newer cli)\n. I believe @agrieve has (landed?) a fix for this already, but the latest cca with it has not yet been released.  Stay tuned.\n. Chrome storage tests are failing on my machine with this patch:\n\"Expected 16 to equal 30\" and \"Expected 29 to equal 30\".  Will take a look later to see if I think this is a problem with the new tests or with the new implementation.\n. Confirmed that my plugin was out of date.  The latest cca doesn't install plugins from your checked out version of the mobile-chrome-apps repo :(  Filed #307\n. ..with the latest plugin version, tests still fail :(\nI think you will need to wrap the \"get\" call with the lock, or else you still risk executing the read in the middle of a write.\n. I've got a patch for this, since I'm already testing here\n. Crosswalk is intended to only work on Android.  This is because iOS applications displaying web content must use the system UIWebView.  This is a limitation set by the application guidelines.  This limitation also applies to the Chrome Browser app for iOS, and so there does not exist the equivalent of crosswalk for iOS.\nRe-reading our FAQ, I think that isn't 100% clear, so I'll make sure to update the docs.\n. For clarification .. Before you prompt to wipe platforms/plugins, make sure www/manifest.json exists.  If not, prompt that this isn't a cca project (probably user wants to use cordova (or phonegap etc) not cca command).\n. Thanks Mark!\n. First, when you say bridge, you mean a bridge from the iframe to the host, right?  The cordova exec bridge should not work from within the iframe directly, so native api calls are not likely to be possible.\nSecond, regarding app guidelines, thats a great question, but we do not have the answer.  You are not the first to attempt this, however, and others have succeeded before you.\nFinally, what do you mean to prevent remate changes after deployment?  Are you not in control of the remote code?\n. Sadly, we do not maintain a list of cca-powered apps.\nRegarding your question about limiting remote updates: I believe I'm hearing that you hope to just download the remote asset once on first launch (or perhaps first login), but then cache locally & permanently.  I'm not sure that such a scheme is any less a breach of the rule you cite than a solution which loads remote resources each time (Though of course local caching has many other benefits).  I think Apple would like all assets to be bundled and available at app review time.\nThat said, very many cordova/cca apps have implemented remote updates and successfully passed app review.  Perhaps its just hit & miss, but Apple is more open than the wording of the guidelines suggests.  I think the spirit of the rule was meant to prevent applications from significantly changing their own behaviour, to the extent of surprising the user, or leading to poor experience.  In other words, you cannot ship a \"web browser\" which loads arbitrary apps within a shell.  You probably also want to have a solution to the offline/slow internet use case, even on first launch.  But many app developers do update web assets to fix bugs or add small features.\nOne specific example of a team that did this, and wrote up a great report on it, is exfm.  That team used phonegap, not cca, but the same issues apply.  Their specific conclusions and recommendations may not be the best solution for you, but it should hopefully give you some insight!\n. Dup of #297.\nThis is a major regression I also discovered early last week.  Not sure yet if it is a change to our bootstrap, or an issue to do with Crosswalk WebView.  Will certainly be working on this this week.  If you happen to do more debugging on your own, it would be absolutely fantastic if you reported your progress.\nHope to have an answer soon!\n(Also, just as an fyi, the temporary black flash is due to your application theme not being translucent).\n. I haven't tried the PushPlugin (this one?) but the double notifications is likely to be a different issue, perhaps to do with a conflict of app lifecycle events.  Lets re-investigate that issue after we solve the issue with gcm/alarms.\n. @oahziur Rui, you may want to take a look at this eventually as a way to improve array buffer conversion in the cordova exec binary bridge.  Low priority.\n. I think this is \"working as intended\" now?\nIs there anything left to do in documentation?\n. Thanks for bringing this up.\nThe short of it is:\ngit clone --recursive https://github.com/MobileChromeApps/mobile-chrome-apps\ncd mobile-chrome-apps\nnpm install\nnpm link    # optional step: do you want it installed globally?\nThen, just use it as you would when installed from npm.\n. ..and you can update to latest changes with\ncd mobile-chrome-apps\ngit pull\ngit submodule update --init --recursive\nnpm install\n. This seems to be related to #297, and @agrieve is working on a fix.\n. (closing because its a dup, not because its fixed)\n. 1. If the CADT does not have the plugins, possibly you need to install the latest version from our releases.  Can you confirm you are at the latest?  Any plugins you add using cca to a project don't actually get sent to the CADT, it had to have been build with those plugins pre-installed.\n2. Yes, there have been some issues with the cordova plugin registry and plugin capitalization. @kamrik knows more, and can give you suggestions for a solution.\nThanks for bringing this up!\n. @clelland has volunteered to receive payment it seems :p\n@roycoder payment is accepted in beers.\n. We need autotests!\n. Unfortunately, you cannot remove the plugins dir without also removing the platforms dir.  Actually, there is a handy cca upgrade command that will do all the right things in a situation like this.  Hopefully you haven't modified the platform/ code directly.\n@kamrik is this going to bite everyone?\n. If you update cca, it should prompt for upgrade which will re-install all plugins.  But when we published plugins with new package ids, is it possible an existing cca installed the new plugins in an existing project?\n. the cca upgrade was just thinking out loud / suggestion for you for next time.\nI'm going to close those this since its not clear we have the answer, and enough has changed that hopefully it won't repeat.\n. FYI @oahziur (who is implementing).\nRui, lets just continue with implementation and we will use this as a test case later.  I don't think its worth too much time to debug the old chrome.socket implementation, since it is deprecated.\n@tanx Do you have a version which uses chrome.sockets.tcp already?\n. Oh man, I love whiskey!  I'll pour myself one on your behalf tonight!\nOn Fri Oct 24 2014 at 11:27:15 AM Tankred Hase notifications@github.com\nwrote:\n\nWe got it working! The full stack chrome.socket.tcp + JS TLS (forge) +\nIMAP/SMTP on top. Great job guys and thanks again for all your help\n@clelland https://github.com/clelland @mmocny\nhttps://github.com/mmocny @agrieve https://github.com/agrieve @oahziur\nhttps://github.com/oahziur. Here's a screenshot:\nhttps://twitter.com/whiteoutio/status/525666776810790912\n@felixhammerl https://github.com/felixhammerl and me have opened the\nwhisky to celebrate :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/316#issuecomment-60403072\n.\n. Thanks!\n\n@kamrik Wonder if we should scan the other plugins for capitalization changes?\n. chrome.runtime.sendMessage() is indeed undefined on mobile, since we do not support multiple windows.\nChrome Apps for Mobile do not use the same runtime as Chrome Apps for Desktop, and so the set of available features differs.  You can read more in our FAQ or read out API Status.\nIf your application background scripts have syntax errors at startup, it may fail to open your foreground window, which would show a black screen.  You can diagnose this problem by debugging using Chrome Dev Tools to see the console output, as I think you are doing.\n. .. Regarding the problem with dialog, do you mean you are using a <dialog> tag?  @clelland for more insight into the xwalk error (though I suspect its not the cause the problem here, its good to know).\n. Related to #322 since thats a prereq for runtime.sendMessage to be worthwhile.\nFor now, we should implement the api with a no-op & warning, and update our docs.\n. It is not a bug; It is a limitation of the current implementation.\nThe reason is: chrome app background scripts must have synchronous access to foreground app windows, and we cannot fulfill that feature unless we run the background script inside the same activity & inside the same webview as the foreground window.\nHowever, this comes up often enough that I wonder if we cannot leave the choice of synchronous access to dom vs persistent background scripts to the user?  Additionally, it would make it possible to support multiple chrome app windows..\n. This seems like it would be possible to implement.  We already do this using intents when alarms / gcm message fire.\nThat said, it sounds like a terrible user experience -- what possible good reason could there be for this?\n. Okay that's a pretty good reason, thank you.\n. I will add this to our task list, and it should be done in 1-2 weeks, unless a complication comes up.\nAfter it lands, we will need to push a new release of cca, but I'll report back with details.\n. Well, we appreciate that very much!\n. With the current api proposal on this issue, the app would pop up even if the device is locked -- but would not be visible until the device is unlocked manually by the user.\nThere is certainly no way to unlock the device automatically (that would be silly).\nHowever, there are ways to display content even while the device is locked (e.g. dialer, camera, maps navigation).  I'm not sure if that would require writing a lock screen widget, nor if we could add support for it to the chrome.app.window api's.. this something to investigate.\n. @jpchase is starting to work on it now.  He can probably give an ETA soon.\n. Hi @MehSha, this landed a few weeks ago but we forgot to update this issue.  Would you mind giving it a look and let us know if it meets your needs?\n. Should we still land this?\n. Can you check if the platform manifest.json is changing: platforms/android/assets/www/manifest.json.  This file should have your updated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your project, or android build step iteself.\n. SO I'M NOT CRAZY: #279\nSeems we may have a race, of sorts.\n. ..actually, we changed the way we do versionCode, its possible this is unrelated to my crazy from #279\nCan you check if this is specific to versionCode, or if it happens also with i.e. packageId or your oauth settings for android?\n@karmik in case its specific to explicit versionCode.\n. ..happens with values that update config.xml.  They change in pre-prepare step, but apparently cordova-cli actually takes the contents of config.xml before pre-prepare.\nCurrent hunch: config.xml is copied into platform files before running pre-prepare hooks.\n. This was a bug in cordova-lib, and has been fixed upstream in CB-7615.\nWill need to wait for cordova-lib submodule update, and cca release, for this to actually make its way into cca.\n. So.. this won't be quite as trivial as I expected.  At the moment our prepare step has no knowledge of target build type or platform.  We've gotten away with this by just preparing for both iOS/Android always, even if your build is only for one platform, and this hasn't harmed us so far.  We cannot do the same for release/debug builds since these are mutually exclusive.\nIn order to know the targets, we will have to parse the command line arguments, which is currently done by the cordova-cli tool, not us.  The right solution is to have hooks get this as input, which may be possible once we move to programmatic hooks implementation which @kamrik is working on.\nIn the mean time, I suggest using a shell script to toggle manifests, and just keep two manifest copies around.  Sorry :(\n. That chromium issue is not likely to be related, since Chrome Apps for Mobile are not implemented inside the real Chrome Apps/Extensions Runtime.\nFrom the looks of it, I guess the embedded iframe is from another domain, yet requests coming from within it are made relative to the host?  Perhaps this is related to our XHR polyfil?\n@agrieve @clelland \n. Thanks!\n. Thanks!\n. Thanks for the prompt @bobbyworld.  When we first implemented notifications, there was no such thing as a rich local notification for iOS.\nHowever, iOS8's has brought a bunch of changes to notifications finally, so it would be worth re-investigating.\n. Thanks a bunch!  Looks good at first glance, but @mwoghiren @clelland for review.\n. Sorry, should have been filed in CADT repo.  https://github.com/MobileChromeApps/chrome-app-developer-tool/issues/40\n. First step would be to do some experimentation, but if it works, we will need to create a plugin to set the environment variables, add tooling support to read the key values from manifest files, and update documentation to describe how to enable the service.\n. ..also worth verifying system WebView on KitKat/L-Release.\n. Indeed.  Thank you for bringing this up.\n. Sorry, only Android and iOS.  We haven't implemented the bootstrap and lifecycle events for windows phone, nor any of our apis.\n. @agrieve\n. These will fail on Android until the UDP patches land.  They all pass on iOS.\n. Rui, may you rebase these tests on top of master, and remove from the sockets-secure branch dependency?\nThey should all fail until the underlying patches land, but right now I cannot test iOS tcp sockets without also landing android sockets, since the sockets-secure branch patches both platforms at once.\n. Actually looks like I can just cherry-pick d92a74df161dd9d4de20f94773b7e3ed4b848f83\n. cca only supports android 4.0+, so I'm assuming you are using this plugin in a vanilla cordova project on android 2.3?\nIf so, we have not tested that environment at all.  We should document that in the plugin docs, thanks for bringing it up.\nWe will consider testing our plugins on android 2.3 (filed #409 so you can track), but I cannot promise that this will happen soon.\n. woo hoo!\n. ```\n\ncca build android --release\nls platforms/android/build/outputs/apk/\n``\n. ..and more specifically, when you go to publish your app to the play store and have to select apks, its not immediately clear from the file picker dialog which is the right one to pick.\n. @mwoghiren \n. This was added right?  Can we close this or are their some limitations?\n. You cannot currently ship your app to the store using chrome Dev editor.\nYou will need to build an apk using thecca` tool and follow this guide.\n. Thanks for bringing this to our attention. Sorry for the yuck.\n\nOn Wed, Oct 15, 2014, 6:39 AM S\u00e9bastien Loisel notifications@github.com\nwrote:\n\nClosed #369\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/369.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/369#event-178751472\n.\n. +@clelland who has played in this area before.\n\nFor what its worth, I think this is common to all cordova-android apps and was discussed in depth on the cordova mailing lists not too long ago.\n. This sounds like a bridge bug, maybe?  Or perhaps the main thread is blocked for some reason?\nIf you could provide some sample code that reproduces the issue, that would be much appreciated.\n@agrieve as an fyi.\n. I just tried this snipped (based on yours):\nnavigator.notification.confirm('Are you sure?', function(results) {\n  if (results != 1) return;\n  navigator.notification.prompt('Give a comment.', function(results) {\n    if (results.buttonIndex == 1) {\n      navigator.notification.alert('Action done', function() {}, 'Done');\n    } else {\n      navigator.notification.alert('Action cancelled', function() {}, 'Cancelled');\n    }\n  }, 'Comment', ['Ok','Cancel'], '');\n}, 'Confirm', ['Ok','Cancel']);\nWorks fine both inside a cca app (dialogs show and callbacks called as would be expected).\nPerhaps its specific to the ngCordova wrapper, or more likely your application (perhaps some blocking js is executing?).  When you ran inside the vanilla cordova app, did you include your entire app or just a simple case?\n. @clelland fyi.\n. Thanks for the patch!\n. @oahziur any insights here?\n. You have to add the videoCapture permission to your manifest permissions.  By not being there, cca is assuming you do not want the plugin.\nI do agree, that if you are explicitly adding the plugin, we should tell you that you need to add the permission, and maybe do it for you (not sure we need to go there).\n. I've filed #412 to track that request.\n. @mwoghiren interested in taking a look at this one?  Was feedback from the Eh workshop.  Not sure how they ran into it unless they wrote the manifest file by hand.\n. We use the iOS WebView, and are limited to the web features that it provides.  It is not impossible to write a cordova plugin to implement some set of getUserMedia functionality, but it would be difficult and does not currently exist.\nApple has been improving the WebView with each iOS release, so fingers crossed for iOS9 maybe.\n. @oahziur is this something we can mitigate, or should we move the call to a background thread?\n. Glad you could resolve this, sorry for the late reply.\n. Sweet suggestion.  @mwoghiren who implemented chrome.idle which has a similar but different implementation.  Perhaps this suggestion can just go there.\n. @kamrik Would you like to take a stab at this?\n. I just tried using XCode 6.1 to deploy to iOS 8.1, using cca v0.4.3 (which installs cordova-ios 3.6.1 as reported by cca platform ls).\nI've tried various combinations of tools and cannot repro :(\n. Awesome, thanks for the steps. I'll take a look first thing tomorrow morning.\n. Okay, after loading your project I can duplicate your issue.\nAfter running the app, I loaded remote inspector (via Safari), and then ran chrome.runtime.reload() from the console to see the startup messages:\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    (anonymous function) (statusbar.js, line 99)\n    build (cordova.js, line 53)\n    require (cordova.js, line 68)\n    localRequire (cordova.js, line 49)\n    mapModules (cordova.js, line 1416)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 11)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 11)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 12)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 12)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 13)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 13)\n[Warning] platform.js is deprecated. Please upgrade to webcomponents.js (https://github.com/Polymer/webcomponentsjs). (platform.js, line 16)\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1156)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1149)\nRemoving statusbar plugin or the use of polymer doesn't resolve the underlying issue.\nInvestigating..\n. Relevant: https://issues.apache.org/jira/browse/CB-6911\n. Alright, I've updated to the latest cordova-ios in cca@master to 3.7.0, and after upgrading your project (using cca upgrade), it will resolve the \"errors\" seen above.  However, those errors are not the root cause of the deviceready not firing.  More investigation needed..\n(We will release cca before the end of the week to push the new ios version out either way.)\n. Well.  It seems this is an honest to goodness case of the DOMContentLoaded event actually not firing.\nWhen I remove the use of html imports, and remove the custom elements from the body, the app loads fine and the device ready event fires.\nI've left both the platform.js and main.js scripts running, so they are not the cause.  Perhaps try using the new custom components polyfills supplied by https://github.com/Polymer/webcomponentsjs (as recommended by the warning when including platform.js).\nHopefully you can report back with further findings after using the attach-remote-inspector-and-run-chrome.runtime.reload() trick to see startup errors.\n. Very glad you were able to resolve this, and thanks very much for checking back.\nI'm going to close this since I'm not sure what specific action items there are for our team.  If we can narrow down a test case, please do re-open this.\n. @FreakTheMighty thats great debugging.  Lots of clues.  But I'll create a new issue to track this.\n. I'm surprised we get to \"close\" in the first place.  I would have expected send to fail.  Will take a look.\n. @oahziur -- I'm not sure about this being related to no network available, but based on my reading, we assume that close is always in response to a close() call, and this assert would fail if close happens in response to the other end closing (including network failure?).\n. Okay, this is more clear now.  I overlooked that these are UDP sockets and don't have a connection so there is no other end to close. \nI'd like to pull in the PR, but I think its large enough to warrant confirming that you have signed a CLA, as per these docs.  It takes 30 seconds to do online.\nPlease provide me with your real name so I can verify that you have done this.\n. Thanks!\n. Ah, looks like this is a dup of #399.  Please re-open if not.\n. I answered this in #94.  Copying here:\nI just tried this:\n```\n\ncca plugin add org.apache.cordova.camera\ncca run android\n(success)\n```\n\nThen, on device, inside app:\nnavigator.camera.getPicture( console.log.bind(console), console.error.bind(console), {} );\nWhich resulted in an image being stored in: file:///storage/emulated/0/Android/data/MY_APP_ID/cache/1415719889576.jpg\nThe image is stored in a file url, so you may have to xhr it and set the image src to a data uri, but you should be able to get at least that far without hiccups.  Please file a new issue if you cannot follow these above steps in a cca project.\n. I haven't tried, but perhaps the problem is that you are using cordova plugin add instead of cca plugin add.\n. Sorry, not likely.  I know the pdfium project is not a core part of chromium, and window.print() appears to do nothing at all in crosswalk at the moment.\nIt wouldn't hurt to file a request with the crosswalk team asking that they consider bundling pdfium (as Chrome app does), and adding support for printing, but I'm not sure how likely that is to happen.\nIf you are just trying to capture the window contents, another potential option to investigate is to attempt to enable webrtc screen/tab capture, which is currently hidden behind a flag on desktop (and may not work on mobile).\n. I'm having trouble understanding the question.  Using cca + permission works for iOS and Android, but there is a problem in your cloud build environment?\nAre you using the plugin outside of a chrome app, via cordova-cli or phonegap-cli?\nThe errors from your pastebin output shows a bunch of errors of the form duplicate symbol [...] GCDAsyncSocket [...] which signals to me that perhaps you are using both the old chrome.socket and the new chrome.sockets.  These should work together but you'll have to use the latest versions.  Or possibly another plugin you are building is manually including the GCDAsyncSocket library?\n. @oahziur to take a look at the fork for differences.\nThanks for reporting back, glad you resolved your issue and hopefully we can help make this easier.\n. Alright, theres little we can do about this.\nHowever, Rui, maybe we should create a plugin that simply holds the GCDAsyncSocket library, so that at least in the future all plugin authors can depend on a single shared source.  We've done this in the past for other libraries.\n. Comes out iossocketscommon is now just the GCDAsyncSocker library.  We can consider renaming this to share with other plugins, but we have no good suggestions for packageId at the moment (should we use com.github.robbiehanson.CocoaAsyncSocket?  org.apache.cordova.labs.robbiehanson.CocoaAsyncSocket?).\nRui also considered prefixing, but that seems so bad.  Perhaps we just resurrect the thread of plugin support for cocoapods?  Shaz mentioned supporting \"workspaces and xcconfig files\" in ios-4.0.0 in the last cocoapods thread on dev list, which sounds relevant.\nI suspect we just leave this with no action for now.\n. This was already fixed.\n. This was already fixed.\n. Great point.  Thanks for bringing it up.\nYou're right that these are coming from the cordova platform template (though the list of permissions has fallen drastically since the plugin breakout happened).\n. Thanks for the tips.\nI agree that we should auto-generate config.xml at prepare time, but I don't think we should exclude it by default.  There are times when you want to customize it explicitly (we do support you changing cordova app preferences there).\n.cordova/ was I think a regression -- it used to not be created by default.  I'll add it to the .gitignore.\n. I've re-read the doc and it wasn't as clear as I would like.\nSpecifically, the entire doc applies only to Crosswalk WebView.  You can opt-out of Crosswalk and use the default system webview, which would auto-update on Android L, and be \"shareable\" on any Android & iOS version.\n. Thanks!\n. How did you set PATH, and on which platform?\nIts possible you just need to export PATH.\n. I haven't reviewed this yet, but general comment that we will want to be careful how we roll this out to not break CADT.  Probably want to have PR to update CADT at the same time.\n. Perhaps Andrew didn't add the plugin at all.  Similar to WebRTC, the javascript endpoints are available in crosswalk, but you have to actually add the correct android permissions to your AndroidManifest in order for them to do anything.  Otherwise they just silently fail (sucks, not sure if we can do anything about that).\nIf you add the geolocation plugin cca plugin add org.apache.cordova.geolocation it will automatically add the correct permissions, and then geolocation should work.\nHowever!  For chrome apps, the correct way to solve this problem is to add the \"geolocation\" permission to your chrome app manifest (as per this doc).  Otherwise, cca prepare will auto-uninstall the geolocation plugin.\nFor chrome apps on desktop, if you don't include the \"geolocation\" permission, you get a warning when you go to use it:\nIs the 'geolocation' permission appropriate? See http://developer.chrome.com/apps/declare_permissions.html.\nWe could investigate doing something similar.\n. Thanks for poking this issue.  Resolved it using the solution proposed in #412.  Let me know if this suffices.\n. Actually, I realized that the geolocation issue specifically is not resolved.\nWe could add it to our list of default plugins just to have the permission..\n. @GustavoCostaW Because, for compatibility with desktop, we require that you have the geolocation permission in your manifest in order to use the geolocation apis.  cca is for chrome app development, and we try to help you maintain compatibility with desktop as much as possible.\nSo, if you don't add the permission to the manifest, the plugin will be uninstalled by our tool.\nWe could implement a feature to just modify your manifest automatically when you add the plugin, but I personally think an informational message is better.  The manifest file is not something our tools currently help you manage by making automatic edits, and this would be a rather insignificant reason to start doing that now.\n. Ouch, not good.  Can you send us the application www/ please, so I can test locally?\n. ..embedded scripts, I assume (for anyone else reading)\n@thomasmarkiewicz we should have thought to ask about that earlier, however, the CSP restriction should apply to Chrome Apps for Mobile (not yet, anyway), since the webview does not impose this by default (unlike the Chrome Apps Runtime).\nGlad this resolved your issue, though.  I assume you found vulcanize --csp ?\n. Thanks for getting back to us and filing a separate issue about it!\n. @kristianmandrup you can read answers to those most of those questions on our faq.  The top few answers hopefully explain how we run on iOS.  We haven't added FAQ entries about polymer, but perhaps its common enough now that we should.\n. @kristianmandrup Indeed those answers are conflicting and confusing.\nFirst, The faq for \"chrome on iOS\" has answers that are mostly applicable to Chrome Apps for Mobile, but not always.  Specifically, Chrome for iOS is as constrained as any other hybrid app on iOS: it has to use UIWebView (or the new WKWebView) for rendering, has to use the regular iOS sdk, has to go through regular app store review...  However, Chrome for iOS does add a bunch of neat chrome stuff, like a custom networking stack & proxy, various identity and sync features, and a bunch of UI/product features (omnibox, voice search, ) etc.  Chrome Apps for Mobile don't leverage those features at all.\nSo yes, Chrome Apps for Mobile are bound to use UIWebView (perhaps soon WkWebView) but that is just because of iOS restrictions not because we leverage Chrome for iOS in any way (we do not).\nRegarding polymer perf on iOS: Polymer is certainly focusing on working well on iOS.  I've created lightweight applications that run fine on iOS devices.  The 20 second startup times may have applied to older versions of polymer that were striving for maximum compatibility and not maximum performance, and then using many heavyweight components that use all the features.\nPolymer team has changed strategies recently in order to address these concerns.  I invite you to watch this video that goes over those details.  It appears as though this upcoming higher-performance version (0.8) is not officially shipped, but you can take a look at whats cooking in the git repos, or just wait a bit and trust that perf will improve soon.\nNone of this explains why vulcanize isn't working ;)\n. To the original reporter: Please also post your cca version, CADT version, and please let us know if you tried to use cca run (compiling natively) or just cca push.\nAlso, you provided the contents of your application (awesome!), but we don't do dart packaged application development often.  Please let us know how you actually build and run this application (are you using CDE or some command line tools?).\nThanks!\n. The queue for cca upgrade should be the content of the platforms/created-with-cca-version file.  Perhaps it is not being created for some reason?\n. Alright, we should make the auto-upgrade check more robust against trailing whitespace, but still unclear how your local editor settings affected this (were you editing the file manually?).\nGenerally we do not advise adding platforms/ to your repo at all (we consider this a local build artefact, which changes over time and from machine to machine).  Any changes to native code will scale best if they are done by creating a plugin.\nWhenever edits to platforms/ cannot be avoided and cannot be implemented with a plugin, another option is to use a hook and modify the contents on every prepare.\nIf you don't want to bother with plugins and hooks and rather make edits to platforms directly, thats fine, but will make upgrades harder for you to manage.  The CCA upgrades just delete and reinstall platforms.\n. That error is not a real error, its just the way we exit via a promise rejection.  We should improve our error messages ;)\nThat said, if you don't want to upgrade, and don't want to exit, for next time you can use --skip-upgrade (as documented under the upgrade section of cca --help).  You will need to pass that flag every time, which is a bit annoying, but doesn't come up as an issue often.\n. @marcellodesales please file a separate issue.  Can you try -y to see if it also does not work?  That will let us know if its a docs or functionality issue.\n. ..and now I notice you just did. woops!\n. First, we should move the theme clobbering to plugin hooks now that they are available.\nSecond, we should only change this once after plugin installation.  It may still be annoying (clobber after re-install, upgrade), but at least you can resolve that with your own prepare hook or something.\nFinally, we should not need the translucent theme default after some changes to how our background service runs.\nI'll see about making the change for 1 & 2.\n. Great suggestion.  Moving things around was hairier than I expected, and the manifest.mobile setting is a better interim option for many reasons.  Set \"androidTheme\" to change the default.\nGood luck!\n. Very odd.  Will take a look.\nI've had issues with vulcanize before, and it stemmed from tags appearing inside xml comment blocks which were being parsed by our bootstrap scripts.  Perhaps this is the case here, and --strip removes these?\n. Following instructions to load blank page, then using location.reload() from safari web inspector, to see startup issues, I get this:\n[Error] Element name could not be inferred.\n    element (polymer.js, line 10244)\n    (anonymous function) (btmzup.js, line 1738)\n    global code (btmzup.js, line 1740)\nFollowing the line numbers doesn't prove to be insightful, but seems related to paper-ripple.  Can't really remove that component without removing most paper elements.\nUsing --strip does not change anything for me, though.  I get same errors (with different line numbers):\n[Error] Element name could not be inferred.\n    element (polymer.js, line 10244)\n    (anonymous function) (btmzup.js, line 1)\n    global code (btmzup.js, line 1)\n. Seems relevant: https://github.com/webcomponents/webcomponentsjs/issues/76\nMore context: http://trackjs.com/blog/tracked-attempted-assign-readonly-property-ios-8-typeerror/\n. Filed issue to ask them for a release: https://github.com/Polymer/polymer-gestures/issues/83\n. Thanks for tracking this down!\n. @AleksMeshkov Looks like that is the only change the that plugin.\n@clelland Any suggestions for how to solve this for pluggable webviews?  Perhaps need android 4.0 CordovaWebView to have a cookie manager factory, or something?\n. @clelland have you tested the latest?  Unless there are blockers, probably we should do a release this week?\n. The version of crosswalk we bundle is based on the cordova-crosswalk-engine submodule here.\nThe latest version on master of cca is actually version 11 (beta), but we haven't released cca in a while.\nIf you would like to try it right now, you can follow our instructions for cloning-this-repo.\nEither way, we should probably see about updating crosswalk again and doing a cca release.  Thanks for the reminder.\n. That isn't necessarily true. CADT isn't built with cca. However it's using\nthe same crosswalk engine plugin, so it may just need a submodule update if\nanything. I'll check soon.\nOn Mon, 2 Mar 2015 10:44 Francesco Balestrieri notifications@github.com\nwrote:\n\nThanks for the reply. I assume the same applies to CADT, i.e. if I follow\nthe instructions below will I get a CADT based on Crosswalk 11?\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/#building-from-source-ios-or-android---instructions-for-ios--linux\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/465#issuecomment-76734886\n.\n. ..okay you are right, CADT build script uses the version of cordova-crosswalk-engine which is bundled with cca.  So long as you npm link the master version of cca into your CADT directory before building, you will get the latest.\n\nWe have scheduled a cca release for later this week, which I think @jpchase and @agrieve are going to do.\n. Normally I would suggest writing a cordova plugin, and using the NDK on Android if it has to be in C.  See the Cordova Plugin Development Guide to get you started.\nI'm not sure that anyone on our team has looked into crosswalk extensions as a viable way to implement plugins.  Its an interesting idea, but probably not low hanging fruit.\n. Cordova has orientation preferences, and the default for phone's is to not rotate at all (I think, at least on iOS), and to rotate to three sides on tablets.\nThese defaults can be changed in config.xml, though I'm having a hard time finding documentation for it :(\nI'll go dig in the code to see if I can find the answers.\n. @dskhatri Thanks for checking back in with results!\nYes, we should improve our documentation of config.xml.  We try to do as much as makes sense in the manifest.json file because we want settings that apply across mobile and desktop.  manifest.mobile.json is meant to override desktop defaults for mobile (like oauth, etc).  We've had suggestions to add support for cordova preferences in manifest.mobile.json, but I think its best if we just add documentation about config.xml, since I rather not invent yet-another-syntax for settings.\n. Thanks for confirming!\n. You would have to write a cordova plugin for this feature.  We are working on improving the way our background.js file runs in the background, but it still won't be a background service.\nCordova Plugin Development Guide\n. cca create Foo\ncd Foo\ncca platform add android\ncca run android\nThat will prompt for auto-upgrade :(\n. I'm going to attempt to add this to cordova-cli, so that cca will just work by forwarding the arguments.\n. (filed by @mmocny)\n. Last time I played with notifications (recently) it worked just fine, though @jpchase made a few changes recently.  @jpchase perhaps you could take a look next week (I know this week is full).\nThanks for providing us with sample code @blukis !  Which environment is this on?  (Its known to only work on Android).\n. @clelland fyi.\n. @felixhammerl Did you resolve this manually / file an issue with them?\n@clelland fyi.\n. Error message implies the problem lays in superspawn (in cordova-lib).  Oddly, looks like superspawn was written specifically to work in this case, but there must be a bug.\n. I don't have a windows machine/vm at the moment, so I won't take a stab at this right now.  If no one else picks it up I'll take a stab next week hopefully.\n. Thanks for the patch!  I'll take a look at this asap and comment/land, but would you mind signing our ICLA first?  It takes 30 seconds online, and you can find instructions in the Legal section of our Contributing Doc.\n. Indeed, you have, thank you.\n. Thank you!\nGlad to see you experimenting with bluetooth.  We're hoping to add it to our cca install flow (i.e. chrome apps using the bluetooth permissions will automatically install these plugins), so any feedback is much appreciated.\n. I believe this issue was fixed in cordova-ios 4.0, and we're still pinned to 3.7.0.\nIf you are using cca master, you can update the cordova/cordova-ios submodule to 4.0.0.  I'm doing that now to confirm.\n. My bad, 4.0 was the versions of cordova-cli that included cordova-ios 3.7.0.\nThe iOS8 tracking issue is CB-7043.\nI found a forum thread about this issue which may have some insights: http://forum.ionicframework.com/t/ios8-iphone-6-app-is-being-scaled-up-instead-of-native/10957/8\n. (More context in #399.)\n. Thanks for checking back in!\n. Thanks again for contributions, but I'm a bit confused, have you seen our bluetoothLowEnergy plugin?\nIf that plugin is missing functionality, I think any additions you add belong there.  Let me know if I misunderstand, then I will take a look.\n. So you've got the old source because we have not updated the latest plugin versions to the cordova plugin registry.  Andrew tried to do that last week, but there is a problem with the registry at the moment.\nFor iOS, I think the reason Rui (an intern from last term) took that approach was because the implementation was far more tightly coupled, and it was just impractical to split out.\n. Are you going to answer the SO question, or would you like me to?\n. Looks good.  Agreed that the api design is inherently open to races, and that while this change would take a while to test for complete correctness it is no worse than currently written.\nFor the future, you can take a look at our Chrome Apps Api Test Suide (see the Readme for instructions) test suite to run through bluetooth tests.  Bluetooth is a pain to test, though, since you need various peripherals.  Bluetooth has both an automated portion and a set of manual tests.  They could use some love too, in case you are interested in improving them ;)\nThanks again!\n. I just ran into this as well.\nBy installing the plugin manually from here resolved the issue for me.  Andrew tried to publish this plugin (and others?) to the plugin registry a few days ago and it failed.  Seems it actually half-updated and may be in a broken state.  We will look into republishing asap.\n. Looks like they include the android-support-v13 library right inline in their push plugin.  They also use the gcm helper libraries which are apparently deprecated.\nWe use android-support-v4 which is referenced from several of our plugins, and I believe includes the accessibility service.\nI wouldn't expect their to be a conflict between the android-support v4 and v13 libraries, but its worth checking, I suspect its something included in the older gcm helper library.  I cannot verify right now, but hopefully that gives you something to investigate.\nA few comments:\n- Its sorta bad practice to bundle a popular android lib directly with a plugin (like PushPlugin is doing), since in the long run it's going to cause duplication conflicts.  Instead, android libs should live in their own plugin which can be used as a shared dependency.\n- Did you know we have a chrome.gcm plugin?  It only supports android, but works quite well.\n. @uriva which tutorial?  The one which starts at our README?\nFor a list of available plugins, you can see our list of supported apis.\nchrome.PushMessaging is deprecated for desktop, you are correct, where Chrome Apps run in the Chrome Browser Runtime, because there is better support for chrome.gcm.  For Mobile, we have a created a cordova plugin that implements the same chrome apps api, but using a very different implementation (it uses iOS's didReceiveRemoteNotification).  So this plugin is not really affected by the desktop deprecation, except perhaps that we may not be quite as motivated to work on it in the future.\n. @FreakTheMighty If you don't mind digging just a bit further, I would debug and step through that rewritePage function and see where it chokes.  If you can't get to it, I'll take a look soon.\n. Huzzah!\n. The script itself tries to adjust ulimit since this is a common problem.  Perhaps there is a bug and we are overriding your manually set limits (assuming you set the limits yourself from shell before launching cca push --watch?)\n. @agrieve was in the process of resolving this today.  Sorry about it!\nBasically, he will move our the gradle changes into its own plugin (cca-gradle?), and publish a new cca version which installs that.\nFor existing cca cli's versions (as you are using) he re-published chrome.bootstrap to remove the gradle changes.\nThe fact that you couldn't revert manually I assume means that the old version was unpublished from the registry?  Andrew, is this part of our release process right now?\n. Confirmed -y and --skip-prompt do not work.\n. Seems this only ever worked for the cca upgrade command.  Seems silly and inverted actually.. if you explicitly call cca upgrade you should never get the prompt, and the --skip should apply only to other commands.  I'll see about making the change.\n. During the next cca release.  I don't think this is major enough to push for a quick release, but I'll ask around to see if there are other reasons..\n. ..We'll be doing releases quite a bit over the coming weeks (with cordova-android 4.0 moving to official release, with various cordova-lib tooling changes, and several cca plugin updates coming).\nSo, I recommend waiting 1-2 weeks.\n. Or follow our cloning docs if you are impatient!\n. Thanks!\n. As per the top of the README:\n\nThe Chrome Apps for Mobile Toolchain is no longer being actively developed. We intend to keep it functional, but do not intend on adding any new features.\n. Yeah, Braden from our team discovered this as well.  He said that the old tmpDir method is still defined but not documented in new versions, so we could use it exclusively.\n\nThe reason it didn't seem to matter to change in mca-create is because the underlying cordova tools use the new method only.  You are right, we should update the version requirements, but you may find the same problem again arises when we call into cordova scripts.\n. Fixed.\n. No longer valid.\n. We don't currently prompt for these values during cca create, but we do now automatically update your cordova config.xml based on your corresponding app manifest.json values whenever you run cca prepare.\nFor those cordova config.xml settings that don't have corresponding app manifest.json entries, we now have a manifest.mobile.json to contain them (one quick example: packageId is mobile-specific and so goes in to manifest.mobile.json).\nI'll leave this issue open so that we remember to confirm that you can add all fields necessary to publish an app to our manifest.mobile.js -- and so we remember to review the ways which we help users to fill these out correctly.\nMaybe prompts during cca create are the way to go, but I feel that may be a bit disruptive to \"just getting started\".\n. Thanks for the input. I agree that we should mention the mobile manifest in the intro message since it's not in the official chrome docs yet. Eventually it may go away or become more common and we can remove the reference.\n. We document manifest.mobile.json briefly in the Next Steps document.\nmanifest.json is mandated by Chrome Apps, and manifest.mobile.json has just a couple mobile-specific settings (very few like packageId and version code overrides specific to mobile platforms).\nUsing those, we help create a config.xml for you -- but are still free to edit the config.xml to add your own preferences.  Doing so takes you out of the world of Chrome App development and into cordova project management (because chrome apps don't have a config.xml).\nConfig.xml is not included in the default .gitignore we create, and so should very much so be added to your version control if you are actually managing the whole cordova project directory structure and not just the contents of www.\nThat said, we've had some requests to support changing cordova  from manifest.mobile.json (See #393).\nWe should not comment further on this bug, since it is not related to your current question, please continue on #393.\n. We do bundle a default css stylesheet to emulate the chrome packaged app styles.  Likely we are not getting those completely right, though.\nLeaving this open to remember to investigate.\n. Done! (Thanks @mwoghiren!)\n. @kamrik is working on adding better support for version numbers to cordova core.  After thats done, he will make cca prepare automatically adjust all the platform version codes accordingly.\nWe will likely need to add addition version fields to your app manifest.mobile.json, since not all platforms agree on format; Though maybe that can be avoided with a convention, its still in development.\nOnce thats done, we can evaluate wether we still want a top level cca command to bump version numbers, or if it is enough to manually edit the manifest and run cca prepare.\n. Right now we have parity with desktop chrome apps and android apps, which both manage manually (though I'm sure there are niche editors that roll version numbers).  This isn't a priority so closing for now.\n. Absolutely agree.  We are not sure how best to implement this.\nOne option could be to write yeoman recipes for setting up a cca project in our opinionated workflow.\nAnother option could be to support an easy flow with the App Harness.\nYet another option could be to support LiveReload.js inside the mobile packaged app.\nThe only certainty is that we would like to make it a lot easier to do rapid development\n. @kamrik is working on a default gulpfile -- but its a replacement for the cca command line, so its a long term experiment.\n. I 100% agree with disliking the name here, but changing this would be more risk than reward, and has implications to the compatibility with cordova core, which we think is important to uphold.\nClosing as wontfix for now, but we will keep it in mind when discussing changes to cordova core project structure in the future.\n. Resolved, see: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md#icons\n. No longer valid.\n. I just confirmed this is now fixed (thanks @clelland).\nThere are a bunch of sizing caveats, though, which you can read here: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/NextSteps.md#icons\n. The identity plugin has changed since then, and the way it handles simulator is now special cased.  Closing this.\n. @mwoghiren: Fixed I assume?\n. This bites people all the time, especially when there are syntax issues on startup.\nThe downside is that if we wrap console output / catch all exceptions then we end up harming remote inspector line number tracking.  This is worth investigating, though.\n. Max, syncFS has changed a lot.  I'm closing this issue at this point.  I don't think we have the docs of functionality quite perfect, but we should open specific issues which are applicable to the current state.\n. Closing old bug that seems resolved.\n. Just tried this, and it seems resolved.\nPlease re-open if thats not true.\n. Can we close this?\n. Pete, I just tried this and it works for me.  <a href='http://www.google.com' target='_blank'>Google</a> pops out to my android system browser (chrome).  Is this specific to iOS?\n. Is this a dup of #45?\n. Fixed this a few weeks ago.  There is now the iOS statusbar plugin installed by default, and now new projects created with the cca tool will add a default cordova  (StatusBarOverlaysWebView) to config.xml to push your app UI under the statusbar (just as in iOS6).\nYou can change this setting by editing the config.xml file and adjusting you app UI accordingly (and its advised to do so according to iOS7 style guide).\n. For completeness I should also add that if editing the config.xml file does not appeal to you, you can modify the settings from JavaScript:\nStatusBar.overlaysWebView(false);\n  StatusBar.backgroundColorByHexString('#ffffff');\nIn order to not see a flash of UI, I added these to my chrome.app.runtime.onLaunched handler in my background page, before issuing a chrome.app.window.create, so my background page looked like:\nchrome.app.runtime.onLaunched.addListener(function() {\n    chrome.runtime.getPlatformInfo(function(info) {\n      if (info.os === 'cordova-ios') {\n        StatusBar.overlaysWebView(false);\n        StatusBar.backgroundColorByHexString('#ffffff');\n      }\n      chrome.app.window.create('index.html', {\n        id: 'MyApp'\n      });\n    }\n  });\n. Amazingly, looks like its supported in webview for iOS8, both UIWebView and WKWebView.  Not sure if we need native side support for plugins as well?\n. @agrieve Can we implement this with the new file plugin?\n. Crosswalk fixes a lot of these issues on Android.\niOS WebView is improving in iOS8 but there will likely always be some gap.  Not much we can do about it -- but there are polyfil plugins for many of these apis that exist as cordova plugins.  Quality varies, so we don't install them by default.\n. Hi,\nThanks for your report.  You are not the only one to run into this issue -- but as far as we can gather is not a direct problem with our tool.  This delayed-stream module is an node dependency of a dependency of a.. of ours and should have been installed automatically when you did npm install -g cca.  Perhaps there was a problem with npm that day?\nWould you mind trying to npm uninstall -g cca and re-installing npm install -g cca to see if you have to add that module manually again?\nAlso, which platform are you on?\nThanks a bunch!\n. @petrivoges We recently updated cca to version 0.0.8 (check with cca --version).  Did it stop working for you after an upgrade?\nIf running cca checkenv shows no output at all, then that is a problem.\nEven if it does nothing, you should see something like:\n```\ncca v0.0.8\nChecking that tools are installed\nAndroid SDK detected.\nXcode detected.\n``\n. Wow, so your localnodewas this [apt package namednode` for \"Amateur Packet Radio Node\"](http://packages.ubuntu.com/saucy/node)?\nWell thats a new error to keep in mind :)  Thanks!\n. The mobile supported chrome app samples are listed in a table at the bottom of the README.md: https://github.com/GoogleChrome/chrome-app-samples#mobile-support\nIf any of those apps are not working for you, that is not expected and we would be pleased for you to report the specific samples.  Please also let us know more about your environment.\nMore generally -- whenever you see a blank white screen when running a chrome app on mobile via the cca tool, it is a sign of startup issues (and typically javascript syntax errors).  It may be a bug in our environment startup code, since we do a bit of magic to simulate the chrome app runtime.  More often it is because the application itself is relying on desktop chrome specific features that do not exist inside the mobile WebView.\nThe best way to find & resolve these issues is by attaching a remote web inspector, then restarting the app (while still having the inspector attached), to catch these startup issues in the console.\nHere is a quick guide to do that:\n1. Launch the cordova based mobile port of your Chrome App on Android / iOS using the cca tool\n2. Attach a remote web inspector to the Android / iOS WebView by following one of these guides:\n   1. Android: https://developers.google.com/chrome-developer-tools/docs/remote-debugging?hl=de\n   2. iOS: http://phonegap-tips.com/articles/debugging-ios-phonegap-apps-with-safaris-web-inspector.html\n3. If your app was stuck at a blank white screen at startup, and the remote inspector console shows no useful error messages, restart the app by manually typing chrome.runtime.reload() into the console.\n4. Hopefully you will now see insightful error messages in the logs to help track down the startup issue.\n5. Please, report back to us if the error was our fault!\nBest of Luck.\n. @MrYogi I think that @drkemp has identified the root problem here -- you are trying the wrong samples!  This is our fault, we should have made that repository less discoverable and offered warnings in the README.  Sorry about that!\nThe correct place to look for samples is: https://github.com/GoogleChrome/chrome-app-samples.git\nAnd again, you can find the list of valid working mobile samples at the bottom: https://github.com/GoogleChrome/chrome-app-samples#mobile-support\n. @MrYogi still interested to learn why you were seeing a white screen, but closing this as a not being an issue as currently described.\n. Thanks for reporting this.  Will take a look (Mind also peaking, @mwoghiren and @clelland?)\n. @kzahel Seems you are roaming our issue tracker today -- did you get a chance to try this?\n. @kzahel Ah thats too bad.  I was hoping to try JsTorrent on Android.\nThanks for all the feedback, though.\n. Thanks for the report, I'll take a look at this in the morning.\n. @kzahel cca build, cca run, and cca emulate will all first run cca prepare, so let me explain more or less what that does..\n1. First, parses your app manifest.json to see if your app name, permissions etc have changed, and then automatically add/remove plugins and update cordova's config.xml accordingly.\n2. \"assemble\" your web assets.  Takes the contents of your app's www/ together with the web assets only of your installed plugins, and merged them into the platforms.  Note: We do not update the native components of the plugins during this step (this may change, there is a feature request for this).\n3. Finally, we replace your app's various i18n text, application icons, version codes, etc.\nSo yes, we do \"clobber\" the web assets in platform/ on each prepare, which is why we do not advise making edits directly inside that folder.\nHowever, for native plugin code, we should not be clobbering files on prepare.  For this reason, I am quite surprised to hear that the changes were reset to a java file during a cca build step.  This is either a bug, or perhaps confusion about which files are used when.  There are actually multiple copies of any plugin native file:\n1. mobile-chrome-apps/chrome-cordova/plugins/... (cca installs plugins from here during project creation time, or if you add permissions to your manifest)\n2. YourProject/plugins/... (This is a local cache, mostly useless at the moment)\n3. YourProject/platforms/android/src/... (Android plugins loaded at runtime)\n4. YourProject/platforms/ios/YourAppName/Plugins/... (iOS plugins loaded at runtime)\nMaking edits directly inside platforms/ (points 3 or 4 above) is actually currently the best way to iterate on changes to native code.  This is not usually something a chrome app for mobile developer should have to do -- thats a cordova developer workflow and our team tried to take that pain away best we could.  Any changes you make to these files are local your your project, and you will need to migrate back to the chrome-cordova/plugins repo if you would like to supply pull requests (please do!).\nSo, my hypothesis about what happened to your file is:\n(a) We have a bug, or \n(b) Your edits are still around in one of the other copies, or\n(c) You edited the plugin inside mobile-chrome-apps/chrome-cordova/plugins, then ran cca init (which cca build will prompt you to do if there are upstream changes), which switched away from a local git branch you had.\n. @kzahel I just tried to make edits to native files inside the plugins folder and ran cca prepare.  I did not see the file changes I made get overwritten/reset as happened to you.  I also tried web assets and plugin.xml and none of them changed.\nMay you try to reproduce and let me know the steps, please? I'd like to fix the issue.\n. Confirmed the issue.\nInterestingly it does not happen with all the plugins, which is what caught me (I tried with org.chromium.bootstrap).  This points to a fault in how we do our pre-prepare hook to scan your manifest.json permissions and install new API's.\n. Fixed after landing your PR.\n. Fixed with crosswalk (I think..)\n. Hello Fran\u00e7ois!  Preparing to write up a G+ post? ;) We look forward to it.\nCCA provides a default stylesheet to try and emulate the desktop chrome app styles:\nhttps://github.com/MobileChromeApps/chrome-cordova/blob/master/plugins/chrome-bootstrap/www/chromeappstyles.css\nIt is based on: https://code.google.com/p/chromium/codesearch#chromium/src/chrome/renderer/resources/extensions/platform_app.css\nOurs has fallen out of date, so I will update it to the latest version.  Still, it appears that the platform_app.css will not supply a default body height of 100%.  I'll investigate to see where that style is actually coming from on the desktop platform.\nNote: we do not attempt to override the default user agent styles to make the webview more like chrome.  There is another issue (#8) already open to provide a default css reset, so clearly this is something users want.\n. @beaufortfrancois has just discovered that the root cause was a missing  <!DOCTYPE html> from his application, which was causing the height 100% in desktop chrome.  This is either a bug with apps  on desktop, or at least a quirk we don't need to emulate.\nMost app developers must add the style themselves.  Closing this as wontfix.\n. Fixed after landing your PR.\n. Sorry but that is not likely any time soon.\nBoth are a possibility since they are supported by Cordova, but we do not have resources to allocate effort here at the moment.\n. @braden, @agrieve Before moving to being event driven, cannot we just move this work to a background thread?\n. @oahziur is working on chrome.sockets (#135 and #313), which will replace chrome.socket.  We will make sure to make those non blocking.\n. Agree with both your points, will fix.\nBut to be 100% clear, both forms of path are supported: path to dir containing manifest.json or path to manifest.json.\nWe try to document the latter specifically because it is less ambiguous -- as you already point out.\n. I think we do \"technically\" document this by saying we only support packaged apps and not mentioning support for hosted apps .. but I agree that the various \"types\" of chrome apps are confusing to users.\nThis one should be quite easy to just add support for, but I'm not 100% sure of all the other differences in the hosted app lifecycle and api support etc.\nWe should update our docs to be more clear, and do better to make the hosted app on cca experience better if we can.\n. Okay, so then I think what must have happened is that packaged apps very early on borrowed the hosted app manifest structure, and then migrated to the new form.\nI assumed yours was hosted because of the manifest syntax, but I guess that syntax is also supported for packaged apps (just not documented).  I'll raise the issue with chrome apps team to see if its a docs bug -- but I suspect that chrome is just still supporting the old syntax and the team wants new devs to use the new syntax.\nWe can look into adding support for it too, thanks!\n. This is quite interesting!\nSomewhat embarrassingly, we've not tested apps using the CSP meta tag yet.  We quite curious to try this out, so we'll report back just as soon as we can.  I suspect we won't get to it this week, though.\nThanks so much for pointing it out.\n. @tanx Any update on how your experiments are going?  I don't think anyone on our team has taken another looks since Andrew investigated, but we may want to return to this.\n. This is at the top of our wishlist as well.\nI investigated this for a few weeks last year, but the chromium sync module is a little too tightly coupled to your chrome-for-desktop user profile at the moment since the component was never really designed for embedding outside chrome.  This is a non-trivial effort to get right, but all parties involved do have a desire to see it happen.  Will likely allocate some time on this effort in a few months, but its unlikely to land in the near term -- sorry!\nAs one alternative: syncFileSystem is supported on all platforms.\n. Yes.. but its not good news.  We investigated building the chrome sync component for android and bundling it as a cordova plugin, but came to a few technical limitations that made this impractical.\nThat said, while chrome.storage.sync is a quick and simple way to sync simple storage across accounts and platforms, there are many viable alternatives these days (including Firebase, Parse, Meteor... or this list) which you can roll for your app that will work across Desktop, iOS, and Android.\nHope you can find a solution without too much hassle..\n. Covered by #272 now.\n. As per that thread, you can run this as a workaround:\ncd platforms/android\n./cordova/build --release\n. Hi Carlos!  No one is looking into this at the moment.\nFor one thing, even though it uses the chrome.cast.* namespace, its not actually a chrome apps api.\nFor another, based on my reading the cast sdk has to run specifically inside the chrome browser, which as you know is not what cordova runs on.  Its possible a subset of the sdk requires no browser features at all (and works already by just including the js in your app), or can be polyfilled, but this is not something we hope to investigate at the moment.\nHaving said that, almost everyone on our team is using chromecast on a daily basis and we are huge fans!  I would not be surprised if one of us just hacks something together out of curiosity some day.  Let us know if you do before we do!\n. @grahamkennery sweet progress.  You can automate the library loading.  See chrome.identity plugin.xml on how it depends on a play services cordova plugin.  That plugin in turn uses <source-file/> tag to add the google-play-services.jar and sets up your AndroidManifest.xml automatically. \nAlso, chrome.notifications depend on android.support.v4, etc, etc.\nSo, my direct suggestion:\n1. depend on the plugin for play services we already published to plugins.cordova.io using the <dependancy> line from chrome.identity.\n2. Create a new plugin for chromecast sdk jar (or, perhaps we should host that here?)\n3. add a dependency for (2)\n4. Repeat for any other libs you require\nThe specific reason for creating a plugin for each external lib instead of just bundling it with your plugin directly is that if multiple plugins depend on e.g. play services there would be conflicts if they all bundled directly.\n. I should add one more step, the way <dependancy> works is: you can depend on an absolute path, e.g. a git repo, local path, etc, or a plugin id.\nIf you use a plugin id, it will first search your local searchpath's which you can specify in cordova config, or better yet via CLI: cca plugin add foo.bar.baz --searchpath=root_folder_containing_plugins.\nSo, what I suggest is that even before you publish your library plugins, <depend> on them by ID and add them from local path by using --searchpath.\nAm I making sense?  Typing in haste before a meeting!\n. If you don't make any edits to native platforms, it suffices to check in www. And cca create --link-to=... as often as you like.  The exact artefacts created during create and prepare steps change as the project evolves, and so not adding platform files to version control actually helps with upgrading to the latest goods.\nHowever, if you do make edits to platform, including preparing to release to app store, you may not want to have to repeat yourself.\nEither way, we have on our objectives already to provide guidance on this (and improve caveats over time) so it's like you read our mind here!\n. http://stackoverflow.com/questions/22126126/which-files-to-keep-under-source-control-for-google-chrome-app\n. Relevant: #105\n. http://stackoverflow.com/questions/22364827/mobile-chrome-app-gitignore/22366370\n. You have to manually make the theme transparent in AndroidManifest.xml by changing \"Theme.Black.NoTitleBar\" to \"Theme.Translucent\" in the activity.\nSadly, we cannot yet automate this process with our existing tools, but are working on a better solution.  I'll update our docs to be clear about this.\nMay you please report back to confirm this fixes your problem?  Appreciate it, good luck!\n. After changing the Theme, not seeing the app pop up is the expected behavior, so I think we fixed that one issue (thanks for confirming).\nHowever, your notification not showing up is a problem.  Could you confirm that launching the notification while the app is in the foreground does work (call the code outside of an alarm handler)?  I want to see if the use of alarms is just a coincidence here, maybe this just a bug with notifications.\nIf you give us your sample notification code, then I would be happy to test this case out.\nAlso: does it work on desktop?\n. Are you setting that alarm handler in the background page outside of the onlaunched event?\nStartup alarms fire right after the background page is loaded, and your alarm handler has to be registered at that point, or else the event is lost.\nGiven that you say this isn't working on desktop, and it should be, my hypothesis is that you are registering the alarm handler inside the app launched handler or from your app window which wouldn't yet be open at this point.\n. Fantastic, do let us know if you don't get it working, notifications + alarms is something we would love to work well but has not been used in practice for very long yet.\nAlso, I should add mention that alarms on iOS do not work while your app is in the background, and notifications don't work at all, yet.\n. Fantastic! Thanks for confirming.\n. Andrew raised this issue with the chrome apps for desktop team, and seems theres a bit of magic going on here.  Comes out there are lots of places icons of lots of sizes are used ;)\nTLDR; Chrome uses closest icon size to hit all the odd sizes, but providing {16, 32, 48, 96, 128, 256, 512} sized icons should cover all your basis.\nSeems you found one of many places where 96x96 was a preferred size, yet was not explicitly documented.\n. @kamrik Did a bunch a research on icons.  I think he updated our documentation.  Not sure if there is more to document on this issue..\nMark just close this if you think its all been addressed.\n. Hey!  We think this is really cool, and have actually advised others to give it a shot before.  Since cca is just a wrapper for cordova, devs are free to add plugins like FastCanvas themselves.\nHowever, we are unlikely to add this plugin by default, since we do not think a significant portion of apps built with cca will be HTML5 games using the canvas, and also because we are hesitant to directly support 3rdparty plugins, especially ones as complex as this one.\nHowever, glad to know you are actively working on this cordova 3+ version, and at least we know which of the variants to send people to!  Thanks.\n. We are wary of adding any non-standard api's by default.\nAlso, the cordova camera plugin is going to go through some change in the near future, so we are especially hesitant to recommend that one by default.\nOf course, if it solves your problem you are welcome to use it!\nI think the takeaway here is perhaps to document more generally about what cordova plugins are, and to provide guidance on how, when, and where to do look for new ones.  Thanks for bringing this up.\n. In the 3 months since this comment, I can't recall any changes to camera plugin.  Maybe there was some talk at a meetup / on the lists / or I was just confused, but there is nothing to point to, sorry!\n. I just tried this:\n```\n\ncca plugin add org.apache.cordova.camera\ncca run android\n(success)\n```\n\nThen, on device, inside app:\nnavigator.camera.getPicture( console.log.bind(console), console.error.bind(console), {} );\nWhich resulted in an image being stored in: file:///storage/emulated/0/Android/data/MY_APP_ID/cache/1415719889576.jpg\nThe image is stored in a file url, so you may have to xhr it and set the image src to a data uri, but you should be able to get at least that far without hiccups.  Please file a new issue if you cannot follow these above steps in a cca project.\n. All cca apps automatically inject cordova.js.  I don't think you need to run your sed command using our toolkit at all (this is one difference between cca and cordova-cli).  The plugin org.chromium.bootstrap does this.\nYou should be able to just add the cordova Media plugin and start using it (is that not true?).\nIf you want, you can find the actual cordova.js file after running cca prepare in ./platforms/android/assets/www/cordova.js and ./platforms/ios/www/cordova.js.\nIf you would like to modify the contents of cordova.js, I suggest using a post-prepare hook, but I suspect thats not what you are asking.\n. One more comment:  you can test for window.cordova as Andrew suggests, or use:\nchrome.runtime.getPlatformInfo(function(info) {\n  var is_android = (info.os === 'cordova-android');\n  var is_ios = (info.os === 'cordova-ios');\n});\n. Current known fix: edit your platform/android/AndroidManifest.xml file and add android:launchMode=\"singleTop\" to the <activity> tag.\nI am investigating to see if there is a downside to setting this by default for all applications in a future version of cca, but it will need to be updated manually for existing projects.\n. @tvanier We will be setting it as the default very soon.\nGenerally, we would like the number of decisions made during cca create command to be minimal.  You should be able to change most settings after the fact at any time.\nThis may mean supporting flags in manifest.mobile.json, or documenting the cordova config.xml preference values, and making sure we automatical import old settings when you use cca create with --link-to or --copy-from.\nGiven that, I hope we don't need to add CLI flags (which are hard to discover).\n. Fixed!\n. The answer is a little complicated.\nFirst, instead of looking to chrome.idle, I would take a look at the chrome app lifecycle, and specifically the chrome.runtime.on* events (onStartup, onSuspend, and onSuspendCancelled), and chrome.app.runtime.on* events (onLaunched, and onRestarted).\nAndroid and iOS don't map 100% to chrome desktop lifecycle in each case, so you should read about the differences.  I'll make sure we take a deep look at that document tomorrow to make sure its still accurate, but I think you can get a general idea.\nFinally, on Android what happens when you click the app icon from the desktop depends on the android:launchMode set in the platforms/android/AndroidManifest.xml file -- as described here: #97.\n. Thanks!\n. Short Answer: We use the system WebView on both iOS and Android, neither of which support WebRTC, yet.\nFor a longer answer, see my answer to this Stack Overflow question: Do 'Chrome Apps for Mobile' use native web-view on each platform?\n. See my answer here\n. From discussions today: We should consider how this interacts with version control.  For a chrome app developer who has a git repo with manifest.json at the root, adding these assets at the root will be quite cumbersome.\nAdditionally, even if we do support importing all these assets, we should make sure that all of them are links.\nPerhaps a better way to solve this problem is (a) to continue to make everything outside of www/ a build artifact, so you only need to version your chrome app (aka www/), or (b) make it feasible to version control your entire project platforms and all, perhaps by providing a default .gitignore that helps you avoid checking in the bits that aren't useful to share.\n. This issue is fixed in upstream cordova-cli, and should be availabe in our next release.\nRegarding the second .gitignore questions, there is already reference to #85, and see also #120.\n. May you please provide more details?\nHow are you attempting to access the file system?  Sample code will help us figure out the specific issue.\n. Ahh, the download attribute is a new html5 feature that is not supported on the mobile webviews (though according to caniuse it may work on KitKat, I haven't tried).  \nYou can use the HTML5 FileSystem in combination with XHR to save those files locally.  However, I suspect what you are trying to do is prompt to user for where they would like to save the file?  If so, I think you may actually want to use the chrome.fileSystem.chooseEntry -- but sadly our implementation on mobile is not up to par just yet.  I've filed #108 to track this.\nSecond question: you do not need to add cordova.js yourself, we do that for you if you use cca.\n. Reference: HTML5 Filesystem API.\nFor usage, refer to HTML5 Rocks' FileSystem article on the subject.\nFor quirks with the plugin, refer to Cordova file plugin docs.\n. Hi @wernight.  This is a known issue.  Specifically, you are using --link-to= with a source path that is a parent of the the target path.  This causes a symbolic link loop!\nIn your example, you would have, MyProject/www/.cca/www/ -> MyProject/www/ so MyProject/www/.cca/www/.cca/www/ and MyProject/www/.cca/www/.cca/www/.cca/www/ (and so on) would all be valid paths!  This causes issues with the way we do cca prepare since we cannot know when to stop copying files.\nWe have a fix in the pipeline to give you a more useful error message during cca create when you try to do this (hopefully that will make it less confusing), but you should not expect to see this work any time soon.\nIts possible we will resolve the issue some day, (by not relying on a filesystem symlink), since I think your use case of trying to turn an chrome app into a cca project \"in place\", especially in a hidden folder, is a very valid use case.\nFor now, I would resolve the issue by just creating your cca project as a sibling of your chrome app:\ncd MyProject\ncca create MyProjectCCA --link-to=./www/\nOr alternatively, by create a default cca project, then manually overwriting the www/ \"in place\", not using --link-to at all:\ncca create MyProject\ncd MyProject\nrm -rf www/\ngit clone REPO.git www/\ncca prepare\nSound Good?\n. It shouldn't, because it will create ./MyProjectCCA/www that links to ./www, which is fine.\nAnyway, I completely agree with your points and I see how annoying creating a cca project as a sibling is.  We are brainstorming how to make this easier.  Thanks for giving us input about your workflow!\nBy the way, what are you building, if I may ask?\n. Are you able to create any projects at all with --link-to?  May you do an ls inside your www/ source directory and confirm there is a manifest.json in there?\nI just tried doing the exact steps you are and it works fine locally.  I suspect the issue is not specific to  the folder being named www/ or being a sibling, but something to do with the project being imported (or its a bug in our tool we haven't seen yet).\nSadly that stack trace isn't helping very much.\n. Related: #60 \n. Relevant: #62\n. Still need to add chrome.identity.getAccount ;)  Hold your horses.\n. No repro step, and deviceready event is supposed to be sticky.\n. Also, KitKat supports geolocation natively, but you have to add permissions:\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\nIt just silently fails (!) with no error, no message, no callbacks whatsoever, unless you do that.  Not sure if this is documented anywhere.\n. I think step 1 is to install org.apache.cordova.geolocation plugin when geolocation  permission is requested, and step 2 is to check that plugin to see if we cannot just disable it on KitKat (not sure if the cordova plugin extends functionality).\n. This is working now.\n. Thanks for this detailed report.  I will take a look tomorrow morning at addressing ti.\n. The answer is to change src/cca.js parseManifest implementation.  However, there's a comment in there that claims to be doing the exact opposite of what I think we want:\n// Check for wildcard path scenario: <scheme>://<host>/ should translate to <scheme>://<host>/*\nEither thats just a glaring bug, or there was a reason that isn't obvious to me right now.  Since I'm not confident trying to update this without writing manual tests for each of the cases, I'm going to add this to our task list, likely to be addressed next week.\n@bergie you can work around this issue for now by adding the cordova <access> tags yourself to the final config.xml's inside the respective platforms/ folders.  This is a pain as those will be overwritten on cca prepare, but at least gives you an option to play.  Alternatively, just work with the <all_urls> permission until we resolve the bug.\n. during cca prepare we:\n1. parse your manifest.json and manifest.mobile.json and use values from there to modify your cordova application config (config.xml) which is in the root of your project (not inside www/ but as a sibling of it).  If you add a config.xml inside the www/ it will not be used[1].\n2. then we run cordova prepare which takes the application config.xml, and platform defaults.xml, and generates the final platform config.xml inside platforms/, overwriting what was there before (super confusing we know: platform and application config.xml have same name, look similar, but are actually different).\nSo, if you make edits to the config.xml's inside platforms/ those edits will be overwritten with each prepare, and commands like build automatically run prepare[2] so thats why you saw that happening.\nI think the answer is simply: edit the manifest.json for whatever you can (aka, whitelist, name, description, version, icons, etc), and edit the top level application config.xml for whatever cordova specific settings you want.\nLet me know if that works.\n[1]: cordova-cli supports both config inside and outside www/, and while cca only supports outside, its possible we have a bug..\n[2]: There are ways to edit those files if you really need, such as in post-prepare hooks, or by circumventing the CLI entirely and using the native build/run scripts, ask how if you really need this.\n. I think that's expected. The \"defaults\" from CLI output refers to the defaults XML file not to some default config. What setting are you hoping to set? Orientation?\n. Hmm, thats interesting.\ncordova CLI asks for 3 arguments: Directory, packageID, and App Name.\nWhen we made cca we decided to specify the last 2 using your manifest.json and manifest.mobile.json.  If you use copy-from and link-to, I think thats what you expect.  cca create MyCalendarVersion5 --copy-from=... should probably not rename your app to \"MyCalendaVersion5\".\nHowever, cca create Foo, I can totally see just naming the app \"Foo\".\nWhat does the team think?\n. If cca prepare did the right thing (aka we fix #124), would this still be an issue?\nI think these docs deserve to live in the Publishing your app section, not the getting started guides.  Potentially they also need to exist in the docs for a few plugins, since you need to use packageId for chrome.identity for example.\n. Well thats what --link-to and --copy-from are for, and if you edited those files once, the import will respect that.\nRight now, when using link-to I think we don't do the right thing because our behaviour is (a) start with a default, (b) import app, (c) run prepare, and that last step just isn't doing the right thing (#124).  We could fix the import, but I think fixing prepare should be enough.\nAnyway, I'll come chat with you in person when I get back.  You will have to specify these settings at some point, and I just am not seeing why forcing you to do it up front is better.\n. Alright.  I think you've convinced me :)\nWe are seeing more and more that the ability to port desktop apps (our original target) is less important than the desire to just start from scratch on a mobile hybrid app.  For that reason, I do think we need to have a different, special workflow, to get you up and running from scratch without learning a bunch of details.\nI should also add, though, that a lot of our \"out of the box\" workflow effort recently has been focused on Spark IDE with Chrome App Developer Tool for Mobile (aka App Harness).  The Spark IDE is quite nascent, but it does provide the ability to start with a project boilerplate and specify app name upfront etc as you suggest.\n. We have thought of doing this.  Actually @gauntface has done it for vanilla cordova (See this article) and there are many other examples of generators.\nNo one has created a generator for cca specifically, though, and no one on our team is a big user of yeoman so it hasn't come up.  This would be an awesome way to help us out and get started!\n. Theres been a lot of work to change this, and there is yet more work in the cordova-cli project.  Closing since I think there is no actionable item left for us.\n. cca run android will run cca prepare automatically (as do most cca commands).\nThis is a good point, we don't document this.  Thanks.\nThe reason we say what we do in the docs is because we were targeting the use case of editing files in an IDE and hitting \"play\" from there, which won't run prepare.. our new workflows (CLI and Spark) don't have that problem, so we should consider re-wording.  Thanks.\n. I've just linked to our docs entry point from the wiki right now.\nI'm hesitant to duplicate content, but don't want the wiki to be the primary source since I think its nice to have the docs as part of git clone.  I also think we will move more and more docs into the chrome apps official docs and want to just link out to those from here.\nIs there a reason the wiki is beneficial?  Perhaps so that our contributors can fix mistakes without needing a PR?  I've never used the github wiki's before, so I'm a novice here.\n. Submodule docs wiki: Thats a crazy suggestion, Dan.  I think I love it.  Will investigate when get back to Canada.\n. This may be a good idea (not sure), but just isn't on the radar right now, and I'm trying to clear the backlog.  Closing for now.\n. #85 Seems this is a popular request.  I'm not sure we have 100% clarification on whats best to advise, but we think starting with a sample .gitignore is a good idea.\n. Thinking out loud: if we add a default .gitignore to the default app template, would that be awesome, or surprising?\nI just checked, and git init inside a repo thats already got a .gitignore works as expected.\nBut it also means that git add -A followed by git status does not list platforms/ and plugins/ and that may be confusing the first time.  On the other hand, explicit git add platforms gives a nice error about being in gitignore, and .gitignore itself is listed in git status after initial init/add which should be clear to devs what's going on.\nSO, I think just placing a .gitignore inside the default app will be quite valuable to devs, though we should document as well.\n. There is now a default .gitignore file.\nIf I do:\ncca create Foo --link-to=...\ncd Foo\ngit init .\ngit add -A :/\ngit status\nI will see:\nnew file:   .cordova/config.json\n    new file:   .gitignore\n    new file:   config.xml\n    new file:   hooks/README.md\n    new file:   hooks/after_prepare/cca-post-prepare.js\n    new file:   hooks/before_prepare/cca-pre-prepare.js\n    new file:   www\nI think that the hooks/ directory should be removed by default (We have an open issue for this #232).\nThe www in this case was a symlink, which will make for an odd git repo, but this is still what I would expect as a user.  (Likely the contents of www/ are a repo themselves).\n. Should fix cordova-cli src/util.js:165 to use $0 instead of \"cordova\".\nHowever, we probably want a better overall revamp for what I'm sure is a bunch of these types of error messages.\nCLI is using an exception to trickle our error messages, and I think there is a default fails handler on the top level Q promise.  We are using the cordova.raw api's, but not adding our own fails handler in cca.js:365 runCmd() implementation.  Maybe we can override the default and affect all messages? (s/cordova/cca/) ??\n. We now just re-add those platforms for you automatically.\n. Closing since there #85 #120 are supersets, really.\n. With the most recent version of cca (v0.0.11), you should not need to pre-create the platforms folder any more.\nI'll close, but please comment and re-open if it is not actually resolved.\n. @etoileweb You should have android/ios added by default so long as your machine is set up with the respective sdk's.  This bug just tracked what happens if you delete platforms/ or clone a git repo that doesnt have one.\n. If you change the name in manifest.json and run cca prepare, this should change your app name.\nIf you also change the packageId in manifest.mobile.json, we also move files arround accordingly.  (There is a bug where the old ones are left behind, but it shouldn't cause an issue and is resolved by re-creating your project with import).\nI think we do not document this, and should, so I'll leave this bug open.\nAlso, Dan if you try this and find that we missed renames in some spots let us know please.\n. Hello @hexahedron!  If you would like to take a stab at this, Dan gives a great outline of the places we fail to rename your application.  It looks like its almost exclusively inside android platform, and likely the fix is entirely inside the cordova-android project.\nPerhaps its not the best (nor most important) bug to get started with, but by all means.\nThanks for the kind words about the project.  Please do let us know what you are building, and/or point to what you've built if its published.\n. Related: https://issues.apache.org/jira/browse/CB-7231\n. @kzar good point, we should do a release.  Thanks for the cough gentle cough prod.\n. I just tried this with a list notification and image notification, and it works fine (start collapsed and can expand with two finger swipe, or single finger if list is short enough) on my Nexus 5 w/ KitKat installed.\nAre you suggesting this fails to work on pre-kitkat devices when using API level 19?\n. Alright, confirmed that Basic notification type never expands when the message is too long.\nThis is not specific to KitKat or non-KitKat, that happens on any version.  At the moment list/image expand by default.  Going to work on patching basic for this as well.\n. For now, changing basic notification to use BigTextStyle by default.  Testing to see if that sucks when the text is actually short.\n. This change seems to work great, actually.  Landed, and should be fixed as of dd0fcf0\n. Before anyone dumps many hours into this, I think its safe to say these features are coming to the web platform (on Android, at least).  WebRTC has been in chrome for mobile for a few releases now, and chrome webview finally backs android apps.  Since the webview is stuck at chrome version 30, we will need to wait for a new android platform update, but in the mean time the cordova team is already looking at just bundling a newer chrome \"webview\" along with cordova-android applications.\nFor these reasons, I would probably advise: it would be super useful to work on polyfills for iOS (since its unclear if the next rev of webview will support it), but for Android lets just work on bundling in the latest version of chrome.\n. Should be fixed with #133 merged in (thanks again), but I'll let you confirm.\n. So, the good news is, this patch is awesome.\nThe bad news is, we've got two new test failures for chrome.socket (for UDP using socket.connect).  You can try to run these tests yourself if you like, by running a normal cca app created with cca create CrSpec --link-to=spec.\nI'm already investigating the issue, but for next time.  (mental note: add testing instructions to contributing doc).\nIn the mean time, may you please sign/confirm that you have signed the Google ICLA, please?\n. .. That was testing on 4.4 KitKat.  On 4.1.1 failing tests go from 11 -> 6.\nConfirmed that you've signed the ICLA, thanks!\n. Heh, I missed that bug ;)  Was scratching my head since everything looks o.k.\nTheres also an exception with multicast receive, yet the tests are passing.. so that had me distracted.\nAny patches will be appreciated, but you should know that this was one of our.. earliest.. experiments with chrome api polyfills.  Since then, there is a new&better rev of the socket api called chrome.sockets (note the plural).  We will likely be doing a re-write with evented I/O etc.\n. Huzzah.  Now come drink beer.\n. I don't think you can update play services manually.  This is odd.\nAre you running on an older device?  @mwoghiren @clelland did we make changes to syncfs to use some non-stable dependency?\n. Just wanted to chime in: the benefits of the new API make a lot more sense on desktop, where the lifetime of the chrome runtime outlives the lifetime of your applications.\nThe v2 structure of chrome.sockets was supposed to address two problems (at least):\n1. Support killing an idle app while still persisting its running server socket waiting for incoming network connections.\n2. Support iterating the list of existing sockets.\nBasically, the v1 structure was a pain to manage resource/app lifetime.  For mobile chrome apps on cordova, where the runtime lifetime is your app lifetime, and your app is the only app, the v2 structure I think buys us little benefit aside from desktop parity and perhaps preference for api structure.\nIts absolutely on our radar to implement these new apis (and we would be happy to accept submissions), but it isn't on our task list for the coming weeks because of other more pressing issues (like APIs that don't exist at all, and workflow bugs).  Sorry for the unsatisfying answer.\n. Looking over old design docs (sorry, they seem internal only, but I'll ask if they can be shared publicly, there is no reason to not be) another motivation was to more prominently split the tcp/udp interfaces, since both behaved subtly different and had a different api surface area, and the only way to differentiate was with the options which they were created.  Looks like tcpServer was thrown into that in the end as well, which is great in my opinion.\nI do think they did not need to change the API so radically, but they needed to change it at least a little and I guess they decided to fix other API lessons-learned while they were at it.\n. Well thanks for taking this on.\nI'd say a polyfill over the existing js api is a great start.  The bigger project is redoing the native bits, but that has less to do with API structure and more to do with code cleanup (chrome.socket was a quick early attempt to get an API ported and has some tech debt).\n@ahmadnassri FYI The team working on Chrome Apps for Mobile is entirely in Waterloo.  I also see you're also connected to @pearlchen who works with us.  Maybe thats how you heard about the project?\nWhat was the motivation for chrome.socket.tcp.xhr?\n. @ahmadnassri There are other chrome.socket implementations out there?\n. Ah thanks.\n. @oahziur Is working on this!\n. Witam!\nThis is a fetch error, seemingly because we haven't actually published this plugin to plugins.cordova.io.\nPerhaps it was published at some point in the past and was taken down (hence the documentation bug).\n@mwoghiren is doing a cca project release today.  Max, perhaps he can also tackle a plugins publish to the plugin registry?\n. You cannot just include events.js as a normal script, since its part of a plugin and is meant to be included as a cordova <js-module> (which would define the missing module you've encountered).\nI would install the plugin chrome-common to fix this particular issue.\nAs for your question about payments will work outside of cca overall.. well payments is a work in progress even within cca, buts not a plugin that depends on the app lifecycle and so should work outside.  Max has mentioned earlier that he will discuss and experiment together with Ian, but he was working on a cca release today.\nHopefully after just installing chrome-common plugin you will be able to tell us how it went!\n. Charging your wife's account is a feature not a bug :)\nOne note about (b) is that we support adding plugins by path, and also support a --searchpath argument to cordova plugin add.  You shouldn't need to create a new repo, just clone ours and add the plugin from the subdirectory.\nAnd (c) I would add the \"common\" plugin that matches up with the payments plugin version.  SO: if you add payents directly from git repo, you should add common from there as well.\nLet us know if you figure out the wrong-account-being-charged issue, since that sounds important to get right :)  I hope its just a configuration issue on your end.\n. @mwoghiren Max, any chance you could take a look?\n. Specifically, we create a manifest.mobile.json during project create, with a default packageId field, and merge the two manifests at prepare time.  If you manually override www after that fact, you won't get a manifest.mobile.json, and won't have a packageId.\nIn some places, we guard against an empty packageId: (manifest.packageId) || \"com.your.company.HelloWorld\" but in others we just blindly apply it widget.attrib.id = manifest.packageId;.\nI think we should guard against empty packageId, perhaps by adjusting getManifest to set defaults for \"required\" values, or by auditing all the uses of manifest throughout the codebase.\nAdditionally, I think we should consider and moving when we create manifest.mobile from create to prepare time.\n. Related: #312\n. Interesting.  I thought this was only true inside CADT.\n@agrieve (who was looking into it.  I thought there was an issue open for it, but cannot find it now.)\n. If we do warn, then what?\nOne previous cordova proposal was to install the CLI that was used to create the project alongside it.  Then, the global CLI forks to run the local one when inside a project (a la grunt?).\nAlternatively, we could prompt to upgrade (via in-place re-import from scratch), backing up the old files just in case.\nLast option is to cross fingers and hope for the best (hence the warning).  Maybe start there for now..\n. Done.\n. Great suggestion, I'll add this to our test suite and report back.  Thanks!\n. @mwoghiren Max this looks good to me, but would you take a look plase?\n@moust, have you signed our ICLA as described in our contributing doc?\n. Yes, this is possible.  You can add any cordova plugin using our cca tool using: cca plugin add ..., exactly as you would have used cordova plugin add ... or phonegap local plugin add ....\nRegarding send sms: you can use an sms: url (see this SO question) but reading/managing sms will require building a plugin to do this in native code.  Not sure if one exists.\nFor Media and vibration there exist cordova core plugins for: org.apache.cordova.vibration, and org.apache.cordova.media.\n. Np. More long winded answer available on stack overflow.\nI'll take a look to see if this is properly documented in our repo.\n. That plugin bundles play services, which causes the conflict.\n. This isn't our fault, and we can't do much about it.  Cordova just needs better support/vocal solutions for shared library deps problem\n. @agrieve Thoughts?\n. Related: #166\nCrosswalk history.replaceState exists, and seems to work as I expect.\n. So the webview should be re-created (in the background) when a gcm message is received.  Its possible there is a bug (looking into it), but just to confirm: are you registering the event listener in the background js?  If you app was not active, then your onLaunched would not be fired, and thus you chrome app window would not be opened..\n. Yes, onLaunched only gets called when user clicks the app icon.  In response to gcm.onMessage you will likely want to fire a notification or update the app in some way, but you will may not have access to any open windows, depending on if the app was running.\n. Did you load jQuery from your app window or from a background script?\nWe should not fire the gcm event until all background scripts have loaded -- though the specific order of various async events after that point gets tricky.. so if you read from chrome.storage in one of your background scripts, the gcm even may get fired before/after that result.\nLet us know how it goes!\n. Can you verify that your application actually received a gcm message?\nThen, Can you verify that the background scripts are running at all?\nThen, Can you verify that the event is fired?\nThen, Can you verify that the $.ajax call is working?\nRight now its hard to know where this falls apart.  A few quick tests to see if this is working:\n1. Close the chrome app, then see if it automatically re-opens and moves into the list of activities after you send a gcm message (i.e is the app in the app switcher list)?  If not, either the gcm message did not arrive at all or our plugin is misbehaving.\n2. If the app is in the switcher, then open remote web inspector to see if console messages are being printed to know if the webview background scripts are loading.\n3. If they are, add a console.log() to chrome.gcm.onMessage outside of the ajax call to see if that fires.\nI would absolutely start by confirming you are actually receiving the gcm message.\n. Ah, thanks a bunch.  Looks like thats a bug in our plugin then!  @drkemp\n. I've also updated the docs to mention that your application theme should be set to translucent or else you will see a black flash:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.gcm\n. Well thats not right.\nWhere is the <access origin=\"https://www.google-analytics.com/*\" /> coming from?  We don't add that as far as I am aware.\nAnd to be clear, are these being duplicated in the config.xml that is inside platform/ or in the one at the root of your project?\n. @jpchase Another issue thats easy to knock down to add to your list.\n. @mwoghiren \n. We cannot delete, can just marked closed.  Glad you resolved the issue, though!  (What are you building?)\n. We only support packaged apps at the moment.\nIf you are interested in mobile hosted chrome apps -- thats not on our roadmap at the moment, but possible.  If you are interested in us auto-packaging your hosted app assets -- thats just not going to happen.\n. Thanks.  I saw this issue earlier when I tried to publish a cca release candidate with npm 1.4.10.  It seemed to go away with a publish from npm 1.4.5, but other users have reported this is still an issue.\nWhat version of npm are you using? (npm -v)\n. Would you mind trying a test: npm install -g cca@rc to see if you get 0.0.11-rc1 installed fine?\n. Just pushed v0.0.11 which hopefully resolved the issue.\nYou are using Travis with cca?  Mind doing a writeup about that for us?\n. Yeah sorry about that, pushed rc->release and unpublished the rc.  npm install -g cca should pull v0.0.11, hopefully without errors now.\n. Thanks for the confirmation.\nLooks like you guys are building something interesting!  Looking forward to your writeup.\n. We should create a github label for \"annoying issues we really should figure out how to address\".\n. Thanks\n. Not sure what you mean by \"similar to crosswalk\".  We are working to integrate crosswalk into cordova-android, and thus into cca.  There are no plans beyond that to get chromium into chrome apps for mobile.\n. I don't think there is :)  Lets leave this open so we can have a place to celebrate when this lands.\n. Crosswalk is now bundled by default!\n. Sorry for the late reply.\nI've not played with this, so theres probably some investigation to be done.  However, I wanted to quickly point out that there is a cordova event for 'backbutton' which you can use as such:\ndocument.addEventListener(\"backbutton\", yourCallbackFunction, false);\nHopefully that can at least get you started.  I do agree it would be better to leverage history.state and have back button to the right thing (tm) automatically.\n. so navigator.app.exitApp() works fine for me for cca apps.  Would you mind trying to create a default cca application and see if it works for you to isolate environment from application.  Then we can try to dig in to see where the problem is.\n. Similar message if there is already an app with the same packageId installed and adb won't let you overwrite it.\n@kamrik I know you have a list of CLI improvements in your head.  Perhaps you can add this one?\n. @kamrik ping?  We have decent messages, but they print stack trace anyway.  Perhaps this is a case of handling CordovaError exception type from within cca?\n. @SlimSim Thanks for bringing that up.  The link moved, but we updated the old link to let you know about it.\n. Nothing concrete.  Cordova team is working on the next major update to the android platform (aka \"cordova-android 4.0\"), and one of the motivations is 3rdparty webviews.  We are hitting some roadblocks with the current ant build system and Ian from our team is experimenting with gradle support.\nIts looking more and more likely that that will happen for the cordova-android 4.0 launch, but isn't guaranteed yet.\n. @clelland \n. Thanks!\n. Thanks for the report.\nThis seems to be a bug in cordova, but taking a look at the config.xml structure, there is a special attribute for email on the author tag.  e.g. the default config.xml template has this:\n<author email=\"dev@cordova.apache.org\" href=\"http://cordova.io\">\n      Apache Cordova Team\n    </author>\nUndoubtedly we should fix the issue with special characters in config.xml tags, but a larger question is how to best map author email from your chrome app manifest.json / manifest.mobile.json to cordova config.xml?\n. I think this is fixed but I can't verify at the moment.\n. Related to #294\n. Thanks for the report.  Max, our resident identity expert is out of town this week, but will take a look asap.\nRegarding using 0.1.0 -- just want to make sure that you did a full project re-create after the cca upgrade?  i.e. platforms and plugins don't currently get re-created when you upgrade the cca tool (theres an new auto-upgrade in tip-of-tree so this will change in the future).\n. Awesome thanks, just wanted to get that out of the way.\n. Is this only happening on windows?  That file exists for me (\\npm\\node_modules\\cca\\cordova\\cordova-android\\VERSION).. would you mind seeing if cca/cordova/cordova-android exists / at what point the path becomes invalid?\n. so.. npm install -g cca, and you end up with an empty/non-existing global node_modules/cca/cordova?\nMay you give the ls -l of the cca module contents?\n. ..note that we don't use global cordova installs, so testing vanilla cordova is only useful insofar as making sure that the same version we bundle (3.5 in this case) can work on windows.\n. ls cordova ?\n. Well thats not right at all.\nAs a quick test, may you please npm uninstall -g cca npm install -g cca and check for changes?\n. Damn.  I'll try to replicate environment to see whats going on.  Which version of windows are you using, and are you using cmd.exe or cygwin, etc?\n. Great!  Good luck figuring out the issue with notifications.\nThere are some examples of proper usage here which are tested to work on mobile.\nIf you find that these examples do not work on your device/environment, please do report to us!\n. (and thanks for trying out cca!  Mind if I ask what you are planning to build?)\n. I'll take a look now, but I notice that you have checked in platforms/ and plugins/.  There should have been a default .gitignore created for your application that ignored these directories by default.\nDid that not work, did you override the default, or are you using perhaps an older cca version?\n. I just tried this on my Nexus 5 with the latest cca and it ran fine.  I saw a basic notification appear.\n. If you upgrade cca, you have to recreate your project.  The latest tip-of-tree has a new auto-upgrade implemented, but its not released yet (and frankly, needs some testing).\nSo, if your platforms/ and plugins/ were created with 0.3.0, please try to re-create your project.\n(Btw, you can use: cca create AppName --copy-from=path/to/chrome-app/manifest.json and it will import assets, so it should be easy to migrate what you have now.)\n. Woot!  Have fun.\n. No problem, our pleasure!\n. First, the Thread warning is not the problem here (though it is something we should address).\nSecond, chrome.storage calls are async, both on desktop and mobile, and you cannot officially expect a read to be successful until the write completes.  In other words, instead of issuing all the writes and reads in two subsequent loops, try chaining the completion handlers.\nIn practice, however, I'm surprised that this does not work, since the calls should end up being processed in order, and the storage calls are not asynchronously implemented (thats what the thread warning is about).\nI'll take a look, this is concerning!  (But for now, and for best practice, try chaining your storage access).\n. ..and just to be clear, don't do this:\nchrome.storage.local.set(...);\nchrome.storage.local.get(...);\nDo this:\nchrome.storage.local.set(..., function() {\n  chrome.storage.local.get(...);\n});\n. I haven't seen this over last months..\n. @agrieve @clelland Has this changed?\n. The crosswalk webview has landed as of 0.1.1 (see our Release Notes)!\nWe've tested it previously, and its exciting to see this (and other new platform features) working.  Please upgrade cca and upgrade your application, then let us know how it went!\n(Btw, latest cca supports cca upgrade in-place so you don't need to re-create your project any more.)\n. I've gotten getUserMedia working using a regular html5 workflow.. is this due to differences in chrome apps vs web apps?\n. Ah got it.  I was testing with an app that had a bunch of plugins that coincidentally added those permissions.\nThanks David.\n. Reopening until we actually add the permissions to native.  @beaufortfrancois has volunteered to submit a PR!\n. cca prepare should suffice to prompt for auto-upgrade, as would cca run android\n. cca prepare should suffice to prompt for auto-upgrade, as would cca run android\n. After updating cca, you still have to upgrade your project.  cca should have prompted you to do so upon first build/prepare (did it?).\nAdditionally, you will need to add \"audioCapture\" and/or \"videoCapture\" to your list of permissions in manifest.json.  Finally, to confirm it all worked, please make sure cca plugin ls lists org.chromium.audioCapture and org.chromium.videoCapture in installed plugins.\nThanks.\n. May you cca --version and also ls within your workspace to make sure there is no local symlink?\n. So odd.  That all looks correct.\nMay you paste node --version, your platform, and the content of manifest.json, manifest.mobile.json, and output of cca prepare?\nThen, if you want to dig deeper for us, you could also instrument your (global) node_modules/cca/src/parse-manifest.js function mapPermissionsToPlugins.\nMuch appreciated!\n. Thanks for following up!\n. For what its worth, normal notifications show up on Android Wear from what I have seen (e.g. the Eh app workshop).  I don't have a watch so cannot test if there are rich-er notifications specific to wear devices that we do not support.\n. I just tried this from cca and from CADT and notifications show fine.  (Didn't try the \"break\" type to work since I don't have the i18n strings).\nWhich device are you using and which version of CADT?\n. Acually @DaniGuardiola can you file a new issue -- this issue is specific to Android Wear (aka Watch) notifications.\n. Yes, I realize your notifications issue is not specific to Wear, but this issue report is, thats why we should move to a new one ;)\n. Its still android/platform/bin for me?\n. Ah, thats the point ;)\n. Yes, this was a bit of a rushed release that bundled un-officially released cordova packages.  This is because there were a few breaking changes to cordova should not affect cca apps (i.e. breaking changes to the windows phone platform).\nBecause of this, the release was done from a fork by @kamrik and the notes were never updated here.  We are about to officially release the cordova bits, after which we will make sure to remedy the error here.  ETA ~days.\n. This is because of the new bundled crosswalk webview.  Basically it means all cca android apps will use a single custom webview, currently based on Chrome 36!\nWe expect the file size to be cut down at least 2x once we split arm from x86 builds, and possibly more once we optimize the builds a bit.  However, there will continue to be an overhead, since we consider the tradeoff worthwhile considering the features this webview brings (WebGL, WebRTC, Web Audio, the latest web platform features to run Polymer without polyfills, etc), as well as giving you a single stable target to develop against even as far back as Android 4.0!\nIf you really do not want to use the crosswalk webview, you can add this line to your manifest.mobile.json:\n'webview': 'system'\nGood luck (I'll address the RELEASE NOTES question in #197)\n. Step 2 should not be necessary.  Plugin should be automatically uninstalled during the next cca prepare (and thus during the next cca run etc).\nDid it not get removed automatically for you?  Were you using an IDE and not running prepare explicitly?\n. @Imskull I can't replicate.  May you please add comments to #215 to help us diagnose?\n. I believe the command is --copy-from not --copy_from.  Was that just a typo in description?  Is your app actually imported at all?\n. I'll think about it.  We forward unrecognized commands to cordova, which it may understand, so we can't just do the naive thing of whitelisting.  Cordova itself forwards commands on to library functions, some of which are filtered out.  Anyway, it should be fixed upstream, so I've filed CB-7084.\nThanks!\n. Fantastic, thanks Francois!\n. Thanks a bunch, but sadly I just discovered this independently and made the change a second ago.  Wish I checked this inbox first!\n. I can't repro any more.  May be the issue just isn't visible since plugins are now installed from registry.\n. There isn't an official chrome api for nfc.  There is a library written on top of chrome.usb for externally connected nfc readers: https://github.com/GoogleChrome/chrome-nfc\nProbably for Android we can implement that nfc api before we implement the full usb api.\n. We also do not support multiple windows, so a redesign for mobile sounds likely.\n. If we ever implement multi window support, we will implement messaging.  Its not on the radar at the moment.\n. What was the error?  Did you not have a curl command?\nUnless the script changed to try and execute itself, that should have worked if chmod +x worked..\n. You are right! curl -O https://raw.github.com/creationix/nvm/master/install.sh gives curl: Remote file name has no length!.  Seems that url redirects to https://raw.githubusercontent.com/creationix/nvm/master/install.sh and curl doesn't follow redicts by default.  I'll change the docs to add -L flag to curl.  Thanks!\n. May you provide the contents of that folder? (aka ls platforms/android)?\n. No problem, thanks for reporting back!\n. Closing as a duplicate of #241\n. https://developer.apple.com/support/appstore/   iOS6 is still 7%.  We'll see what happens in the coming months.\n. All set, thanks to @beaufortfrancois !\n. So 9bffc3e805d7c503ba4fe84622bae29bc1d38576 made a change to how xwalk is added/removed.  The implementation was actually left in pre-prepare but isn't called from anywhere.  Perhaps this is meant to be automatically handled with plugin auto-uninstall?\n. So I cant replicate.  I added the line \"system\": \"webview\" to manifest.mobile.json and ran cca prepare:\n```\ncca v0.3.0-dev\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin rm org.apache.cordova.engine.crosswalk\nPre-processing _locales for android\nPre-processing _locales for ios\n```\nAfter which cca plugin ls | grep crosswalk finds nada.\nI can also remove the setting and see the plugin get re-added.\nIn case anyone does run into this issue, you can manually remove the plugin by running:\ncca plugin rm org.apache.cordova.engine.crosswalk and cca should not try to re-add it (if you've updated your manifest correctly).\n. I've just also confirmed that cca build actually does remove crosswalk fully after the plugin is removed.  \n(there are some leftover references to crosswalk inside platforms/android/bin/classes.dex.d but I assume thats just build artefacts?)\n. Ah, thanks for reporting back on this!  Glad you figured it out.\nWe've been asked on guidance on which files should be added to git, and we added a default .gitignore file for new projects now.  (Not sure which version of cca that was added).\nhooks folder is technically a part of your application and should be managed by git.  However, the hooks you refer to were created by the cca tool, and so we would prefer if you didn't have to manage those (nor accidentally remove them).  I'll file an issue to move those hooks over to plugin hooks as soon as we add support for it in cordova-cli.  That way, cca apps won't create a hooks folder at all by default.\n. This happens because we create the default manifest.mobile.json after writing out config.xml during the cca create process.  As a result, when importing a chrome app without a manifest.mobile.json, you have an undefined manifest.packageId, and jsescape helper we use return the string 'undefined' instead of the value, so we do not fallback to default.\nFix incoming.\n. Closing assuming this is stale.  If it is still an issue please re-open.\n. I was just closing stale issues.  @mwoghiren can hopefully answer if anything has changed.\n. Thanks for reporting back.  We'll have to investigate the permissions issue (I've not run into it before, but I haven't been on the lookout).\nCan you also report which device/OS version you were using, in case its Android OS specific?\n. @g105b I can't replicate, so I won't file an issue for this.\nDid a bit of reading, and there may be all sorts of issues with permissions granting when using adb install which is a developer tool (and used by cca run under the hood).  Possibly we could to adb uninstall automatically first, but it seems like the issue isn't widespread.\nAdditionally, I should note that it won't be a problem if you ship to the play store and users upgrade using that path.\n. Thanks Francois.  Would you mind making it progress to 100 and then clear itself (to also serve as an example)?\nI'd be happy to do that if you would not.\n. No rush at all.  Appreciated!\n. This PR is out of date, and I think the correct way to support WSK would be to have better support for build tools in cordova.  Theres some work on this ongoing, and we can re-evaluate once that lands.\n. I had heard @mwoghiren talk about this before.  Not sure if we have something for it already?\n. Thanks!\n. Woot!\n. @jpchase This looks like a relatively simple task that can give you an opportunity to take a look at plugins.\n. Thanks for this patch, looks great!\n. Thanks for this patch, looks great!\n. Thanks for this patch, looks great!\n. Thanks for this PR, however, we typically solve these problems using:\ncordova.getThreadPool().execute(new Runnable() {\n  public void run() {\n    ...\n  }\n});\nIt seems cleaner and is easier to write in-line where the code is called.  Would you mind making the switch so that we can land your PR?\nThanks!\n. Do you think you would like to make this update to the PR, or would you like me to apply the fix?\n. Also, may you please sign a CLA following our Contributing guide please.  It only takes 30 seconds.\n. @dfay really appreciate your contribution, but since We're now landing chrome.sockets api and this api is already deprecated on desktop, not sure its worth patching any more.\n. @kamrik, may you help here?  Just need to know how to register hooks programmatically at runtime.\n. Thanks Mark, I'll experiment with this.\n. Let's chat about it tomorrow. I've got a patch for this, almost ready to go.\nOn Thu, 18 Sep 2014 11:22 Mark Koudritsky notifications@github.com wrote:\n\nI was thinking about it. If we register the hooks from within cca.js we\nloose the possibility to use cordova executable, i.e. \"cordova prepare\"\nwill not work for cca projects. But if we are ok with that, then\npre-prepare doesn't need to be a hook at all, we will have to just run it\nbefore calling into any of the commands that do prepare, this will leave\nonly post-prepare as an event handler.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/232#issuecomment-56054528\n.\n. This is an issue in the underlying Apache Cordova project, and has been a subject of decent activity recently.\n\nThere are a few relevant bugs to follow:\nhttps://issues.apache.org/jira/browse/CB-6992\nhttps://issues.apache.org/jira/browse/CB-7231\nWe'll try to get some fix into cca as soon as possible, and if we cannot do that in a timely manner, we will at least provide a workaround or better document the issue.  Thanks!\n. Related: #294 \n. --link-to=spec will link to the new test application (it finds it relative to the cca location).  It only works if you are using a git clone, since we do not bundle tests with the npm release.\n. Thanks for another awesome patch @beaufortfrancois !\nOne note for future: dpiY / dpiX don't change after device rotation.  The other values change in a way that I would expect when swapping x/y axis.  I'm not sure whats correct here.  I know we are just forwarding what android presents us.  On osx, chrome just reports 0, so I don't think we should address this (except perhaps to report issue with android DisplayMetrics?).\n. I wouldn't worry about it!\n. When you import into eclipse, select the platforms/android folder, not the root of the project.  Eclipse searches the whole directory tree and is picking up extra projects.\nI'll leave this open as a documentation issue, thanks!\n. Are you able to install all other npm packages fine?\n. @mwoghiren\n. Sorry this went unanswered, but closing assuming it is stale.\nPlease re-open if still interested.\n. So the caret in cordova-lib@'^0.21.6' means \"greater than or equal to 0.21.6\".  The \"valid install targets\" that npm is reporting for cordova-lib includes \"0.21.6\", which last I checked is accurately >= 0.21.6 :P\nI'm going to go ahead and assume this is a problem with npm, possibly you need to update your npm version or clear your npm cache.\nTry:\nnpm cache clean\nnpm install -g npm\nnpm install -g cca\nLooking forward to seeing if that works!\n. Fantastic!\n. Ditto for ios-sim\n. Thanks for checking back after resolving.  We should improve the error, but theres an ongoing general chat about how to make this sdk setup process easier.\n. I updated to support >= 19.  Possibly we need a better error message.\nOne caveat is that with API 20 build tools installed the target reported is Android-L not Android-20.  I added a special case, but wonder if thats an oversight or just a symptom of pre-release.\n. I'm assuming this is due to the crosswalk issue that @clelland is working to resolve.\nFor completeness, it could also be:\n- App background color, which is set in config.xml with <preference name=\"BackgroundColor\" value=\"0x000000ff\"/>\n- initial chromeapp.html background color, which is set in the chrome-bootstrap plugin\n- WebView background color itself -- this is rarely the problem, but there were some reports on the cordova ML recently of people finding cryptic ways to make this appear.\nOne quick test to try is to disable crosswalk webview with \"webview\": \"system\" in manifest.mobile.json and see if the flash goes away.\n. Lol thats literally exactly what we used to do that caused the Hello World app to load with a black background.  Is that not the case again?\n. Probably there is just no simple solution.  Probably we just want to load the webview hidden until the chrome app window is opened by the background script?\nAlternatively we can just provide a default splash screen?\n. Awesome!\n. That may be related to the default Translucent theme that we use.  Thats unrelated to this issue.\nTry to change android:theme (in <activity> in AndroidManifest.xml) to something like @android:style/Theme.Light and see if you notice a difference.\n(Please file a new issue, if you don't mind.)\n. I imagine that this is working as expected.  Chrome apps get lifecycle events and good apps should pause the video stream in the background.\nLikely the problem with this example includes that audio and video are being captured by the actual device.  Curious what the battery implications are for just leaving an  tag with local audio file in the background?\n. Awesome, Thanks!  (but I'm away today and can't test just now).\nGood job getting MiniLock up, I was attempting this yesterday, but stopped when I noticed it depended on NaCl anyway.\n. Thanks!\n. Absolutely Welcome!\nAnything more than a few lines of simple fixes we ask that you follow the steps to sign Google's open source Contributor License Agreement -- but that takes like 30 seconds.\n. Just checking in to say thanks.  We noticed this issue report and its on our minds.  Forgot to respond earlier, sorry!\n. It is not in 0.3.1.  We create tags for onpm releases, so a good way to know the commits that went into a release is to look at e.g. the v0.3.1 tag changelog.\nAnother simpler option is to look up the release date of the current version of cca on npmjs.org, which for 0.3.1 is 22 days ago.\n. Just 3 lines lower (just outside the nextTick call), these flags are set to false exactly as your patch adds.\nThat probably means values are reset to true right after being set to false for some reason.  I'll have to take a better look to see whats going on.  To be clear, you say the problem you are solving is that watch stopped working after you mv some files?\nPerhaps @agrieve will know.\n. Sounds like a great answer to add to our new FAQ.  Though I'm not sure we have a well formed answer quite yet.\n. Will need to keep this workaround in mind as we add CSP to cca apps by default.\n. Related #302.  Closing since not sure there is an action item here.\n. manifest.mobile.json support platform specific overrides.  Basically you can add anything that would go into manifest.json as a subobject of the \"android\" or \"ios\" key, and it will get merged in only for that platform.. in theory!\nIn practice I don't recall at what point we read in icons and if we do the work once per platform etc.  About to try it here and I'll report back.\n. Yeah there were some minor errors with the platform merge, but I've just verified that I can have different icon sets for ios/android.\nIf you would like more details about which icons go where, read this, and do please suggest any improvements!\n. @clelland is working on it!  The holdup is that its dependant on adding gradle support to cordova-android.  I'm not sure of the full details.\n. The latest version of cca from this repo does this by default!\nThere are still some kinks to iron out, like a 1/10 chance of random build failure that just goes away with retry..\n. @twilly86 you mention in that SO question that you have to use Android Studio to build an Android Wear app.  Is that really the case?\n. arm & x86 builds are done (but not released yet).  Probably in next npm release (probably 0.4.0).\n. Fixed in 83d6d06\n. Interesting, considering that chrome.socket is deprecated as of 33.  My guess is that we will just put effort into the new chrome.sockets api starting September.\n. If you are looking for a wildly inaccurate estimate, I'd say end of Sept we'll have something for chrome.sockets.\n. @oahziur FYI.  chrome.sockets.tcp equivalent: https://developer.chrome.com/apps/sockets_tcp#method-secure\n. I think it was a mistake. I've posted a question about it.  Not sure what's\nup.\nOn Fri, 27 Feb 2015 15:42 Felix Hammerl notifications@github.com wrote:\n\ni already asked this on twitter\nhttps://twitter.com/felixhammerl/status/571325009693507584, apparently\nthe issue has been silently purged? can you confirm this? is google\nabandoning tcp sockets in chrome apps?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/269#issuecomment-76468044\n.\n. @agrieve for thoughts.\n\nThe minSdkVersion is hard coded in the cordova-android application template, and 10 corresponds to gingerbread (the min for cordova-android).  14 is ICS, and as Francois says, should be the default for cca apps.\nI'm not sure I agree that it should be 19 for \"webview\": \"system\".  We've supported the old stock android webview until recently, and though some things may start to break soon, I don't think we should prevent devs from trying.\n. Awesome.  Probably a task for post-prepare hook, kinda like we do versionCode updates to AndroidManifest?\n. Very sorry about that.  @kamrik would you be interested perhaps?\nThis is how I think we should solve the problem:\n1. cca plugin rm ... for every cca plugin (basically, the same that would happen if you removed all permissions from manifest)\n2. remove plugins/android.json and plugins/ios.json\n3. rm -rf platforms\n4. cca platform add android and ios again\n5. cca plugin add all cca plugins again\nI did a test locally, and this worked for me.  Platforms and cca plugins were upgraded, and 3rdparty plugins re-installed themselves automatically.\n. @beaufortfrancois actually just landed a fix to explicitly state that we require API level 14 (ICS) for #273.  This is actually not at all related to chrome being available since ICS since we don't use the chrome browser.  (But Indirectly, our requirements for using crosswalk are based on chrome support, since crosswalk is based on chromium).\nAlso, we do mention that we target iOS 6+ and Android 4+ in many places, including right at the top of the very first step of the setup guide.\nNot sure if we should promote the info to the main README, but I don't think its necessary.\n. Clarifying in case my last explanation was too confusing :p\nOur requirements for 4.0+ come mostly from the Android apis we use, and (until recently) the features of the Android system webview.  As of recently we have switched to using a bundled crosswalk webview by default, and that happens to also require 4.0+ which is great overlap.\nBoth above requirements are only indirectly related to the Chrome Browser App for Android requirements.  I want to be super clear that Chrome Apps for Android do not use the Chrome Browser at all (unlike on Desktop).\n. We are trying to simulate the chrome apps environment, and to do so require some webview apis that were not available until ICS.  And now we are fairly boldly betting on crosswalk which is also ICS+.\nAlso, cordova android does support 2.3, but that doesn't mean everything that works on 4.x works there, and it is greatly underemphasized.\nChrome Apps for Mobile provides a few things that cordova does not, but mostly we aren't trying to be radically different or better (most of our contributions are directly to cordova).  We just want to make hybrid awesome, and using chrome apps as a motivating target implementation.\nSome of the differences with cordova are listed in our faq.\n. Right now, plugins versions are \"pinned\" to cca release.  However, we are moving towards a model of publishing all plugins to cordova plugin registry and installing from there.\nWe don't use a package.json inside cca projects.  We could add all cca plugins as deps to cca package itself in order to continue to pin plugins to tools releases, but a better solution is to just wait for the result of recent work on cordova to add plugin save/restore.\n. When you say that \"it wouldn't install on the device\" do you mean that it failed to deploy to device (tooling error from command line), that it failed to launch (runtime exception), or that it launched but was blank white/black screen (error during load)?\nIf you could give us any log messages from either cca, adb logcat, and/or chrome remote inspector, that can help us diagnose.\nThanks!\n. Seems to apply after second prepare every time you make a change to packageId.\n. I'm still seeing this consistently.  Probably a quick fix, but can't debug atm.\n. Can no longer reproduce.\n. Looks good thanks.  Looking forward to getAvailableCapacity ;)\nonAttached may be useful for microsd phones, but until users request it I'm not sure its high priority.\n. This looks like a sweet improvement for devs importing existing chrome apps -- but a large portion of devs start from the default and iterate.  I wonder if we shouldn't set the default app name & packageID to the name of the directory?  (and allow explicit overrides with flags or optional parameters)\n. We are already \"cheating\" by setting packageId with \"com.your.company.\" prefix when importing a desktop chrome app.  I think thats a fine shortcut to fix the common issue of deploy failures when you are just doing a quick experiment.\nI'm suggesting we do the same for cca create Foo which imports the default app.\n. Topeka was uploaded to play store without doing anything special.  On tablets (N7, N10) it is available to install from the play store just fine.  Closing for now.\n. Didn't post which line?\nAnyway, I've messed with the gcm server so I probably broke the backend.  Spec should certainly not crash when then happens, though!\n. I tested this patch locally, builds fine and CrSpec passes all tests I expect it to, on Android vis osx.  Didn't test iOS platform or windows builds, but I trust this is ready to land.\n. Exactly!  This is awesome.\nI won't have time to test all the combinations until tomorrow afternoon, but super excited about this change.  Thanks Francois!\n. Thanks for the ping.  OOO today, will do this tomorrow morning.\n. This looks great!\n. This still sucks, but closing as unimportant since @kamrik updated the way we manage versions.\n. @kamrik I know there was some work in cordova-cli to support special characters.  May you verify this is still an issue, and see about resolving it?  (Possibly it should just go away if we are updating config.xml values and we use newer cli)\n. I believe @agrieve has (landed?) a fix for this already, but the latest cca with it has not yet been released.  Stay tuned.\n. Chrome storage tests are failing on my machine with this patch:\n\"Expected 16 to equal 30\" and \"Expected 29 to equal 30\".  Will take a look later to see if I think this is a problem with the new tests or with the new implementation.\n. Confirmed that my plugin was out of date.  The latest cca doesn't install plugins from your checked out version of the mobile-chrome-apps repo :(  Filed #307\n. ..with the latest plugin version, tests still fail :(\nI think you will need to wrap the \"get\" call with the lock, or else you still risk executing the read in the middle of a write.\n. I've got a patch for this, since I'm already testing here\n. Crosswalk is intended to only work on Android.  This is because iOS applications displaying web content must use the system UIWebView.  This is a limitation set by the application guidelines.  This limitation also applies to the Chrome Browser app for iOS, and so there does not exist the equivalent of crosswalk for iOS.\nRe-reading our FAQ, I think that isn't 100% clear, so I'll make sure to update the docs.\n. For clarification .. Before you prompt to wipe platforms/plugins, make sure www/manifest.json exists.  If not, prompt that this isn't a cca project (probably user wants to use cordova (or phonegap etc) not cca command).\n. Thanks Mark!\n. First, when you say bridge, you mean a bridge from the iframe to the host, right?  The cordova exec bridge should not work from within the iframe directly, so native api calls are not likely to be possible.\nSecond, regarding app guidelines, thats a great question, but we do not have the answer.  You are not the first to attempt this, however, and others have succeeded before you.\nFinally, what do you mean to prevent remate changes after deployment?  Are you not in control of the remote code?\n. Sadly, we do not maintain a list of cca-powered apps.\nRegarding your question about limiting remote updates: I believe I'm hearing that you hope to just download the remote asset once on first launch (or perhaps first login), but then cache locally & permanently.  I'm not sure that such a scheme is any less a breach of the rule you cite than a solution which loads remote resources each time (Though of course local caching has many other benefits).  I think Apple would like all assets to be bundled and available at app review time.\nThat said, very many cordova/cca apps have implemented remote updates and successfully passed app review.  Perhaps its just hit & miss, but Apple is more open than the wording of the guidelines suggests.  I think the spirit of the rule was meant to prevent applications from significantly changing their own behaviour, to the extent of surprising the user, or leading to poor experience.  In other words, you cannot ship a \"web browser\" which loads arbitrary apps within a shell.  You probably also want to have a solution to the offline/slow internet use case, even on first launch.  But many app developers do update web assets to fix bugs or add small features.\nOne specific example of a team that did this, and wrote up a great report on it, is exfm.  That team used phonegap, not cca, but the same issues apply.  Their specific conclusions and recommendations may not be the best solution for you, but it should hopefully give you some insight!\n. Dup of #297.\nThis is a major regression I also discovered early last week.  Not sure yet if it is a change to our bootstrap, or an issue to do with Crosswalk WebView.  Will certainly be working on this this week.  If you happen to do more debugging on your own, it would be absolutely fantastic if you reported your progress.\nHope to have an answer soon!\n(Also, just as an fyi, the temporary black flash is due to your application theme not being translucent).\n. I haven't tried the PushPlugin (this one?) but the double notifications is likely to be a different issue, perhaps to do with a conflict of app lifecycle events.  Lets re-investigate that issue after we solve the issue with gcm/alarms.\n. @oahziur Rui, you may want to take a look at this eventually as a way to improve array buffer conversion in the cordova exec binary bridge.  Low priority.\n. I think this is \"working as intended\" now?\nIs there anything left to do in documentation?\n. Thanks for bringing this up.\nThe short of it is:\ngit clone --recursive https://github.com/MobileChromeApps/mobile-chrome-apps\ncd mobile-chrome-apps\nnpm install\nnpm link    # optional step: do you want it installed globally?\nThen, just use it as you would when installed from npm.\n. ..and you can update to latest changes with\ncd mobile-chrome-apps\ngit pull\ngit submodule update --init --recursive\nnpm install\n. This seems to be related to #297, and @agrieve is working on a fix.\n. (closing because its a dup, not because its fixed)\n. 1. If the CADT does not have the plugins, possibly you need to install the latest version from our releases.  Can you confirm you are at the latest?  Any plugins you add using cca to a project don't actually get sent to the CADT, it had to have been build with those plugins pre-installed.\n2. Yes, there have been some issues with the cordova plugin registry and plugin capitalization. @kamrik knows more, and can give you suggestions for a solution.\nThanks for bringing this up!\n. @clelland has volunteered to receive payment it seems :p\n@roycoder payment is accepted in beers.\n. We need autotests!\n. Unfortunately, you cannot remove the plugins dir without also removing the platforms dir.  Actually, there is a handy cca upgrade command that will do all the right things in a situation like this.  Hopefully you haven't modified the platform/ code directly.\n@kamrik is this going to bite everyone?\n. If you update cca, it should prompt for upgrade which will re-install all plugins.  But when we published plugins with new package ids, is it possible an existing cca installed the new plugins in an existing project?\n. the cca upgrade was just thinking out loud / suggestion for you for next time.\nI'm going to close those this since its not clear we have the answer, and enough has changed that hopefully it won't repeat.\n. FYI @oahziur (who is implementing).\nRui, lets just continue with implementation and we will use this as a test case later.  I don't think its worth too much time to debug the old chrome.socket implementation, since it is deprecated.\n@tanx Do you have a version which uses chrome.sockets.tcp already?\n. Oh man, I love whiskey!  I'll pour myself one on your behalf tonight!\nOn Fri Oct 24 2014 at 11:27:15 AM Tankred Hase notifications@github.com\nwrote:\n\nWe got it working! The full stack chrome.socket.tcp + JS TLS (forge) +\nIMAP/SMTP on top. Great job guys and thanks again for all your help\n@clelland https://github.com/clelland @mmocny\nhttps://github.com/mmocny @agrieve https://github.com/agrieve @oahziur\nhttps://github.com/oahziur. Here's a screenshot:\nhttps://twitter.com/whiteoutio/status/525666776810790912\n@felixhammerl https://github.com/felixhammerl and me have opened the\nwhisky to celebrate :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/316#issuecomment-60403072\n.\n. Thanks!\n\n@kamrik Wonder if we should scan the other plugins for capitalization changes?\n. chrome.runtime.sendMessage() is indeed undefined on mobile, since we do not support multiple windows.\nChrome Apps for Mobile do not use the same runtime as Chrome Apps for Desktop, and so the set of available features differs.  You can read more in our FAQ or read out API Status.\nIf your application background scripts have syntax errors at startup, it may fail to open your foreground window, which would show a black screen.  You can diagnose this problem by debugging using Chrome Dev Tools to see the console output, as I think you are doing.\n. .. Regarding the problem with dialog, do you mean you are using a <dialog> tag?  @clelland for more insight into the xwalk error (though I suspect its not the cause the problem here, its good to know).\n. Related to #322 since thats a prereq for runtime.sendMessage to be worthwhile.\nFor now, we should implement the api with a no-op & warning, and update our docs.\n. It is not a bug; It is a limitation of the current implementation.\nThe reason is: chrome app background scripts must have synchronous access to foreground app windows, and we cannot fulfill that feature unless we run the background script inside the same activity & inside the same webview as the foreground window.\nHowever, this comes up often enough that I wonder if we cannot leave the choice of synchronous access to dom vs persistent background scripts to the user?  Additionally, it would make it possible to support multiple chrome app windows..\n. This seems like it would be possible to implement.  We already do this using intents when alarms / gcm message fire.\nThat said, it sounds like a terrible user experience -- what possible good reason could there be for this?\n. Okay that's a pretty good reason, thank you.\n. I will add this to our task list, and it should be done in 1-2 weeks, unless a complication comes up.\nAfter it lands, we will need to push a new release of cca, but I'll report back with details.\n. Well, we appreciate that very much!\n. With the current api proposal on this issue, the app would pop up even if the device is locked -- but would not be visible until the device is unlocked manually by the user.\nThere is certainly no way to unlock the device automatically (that would be silly).\nHowever, there are ways to display content even while the device is locked (e.g. dialer, camera, maps navigation).  I'm not sure if that would require writing a lock screen widget, nor if we could add support for it to the chrome.app.window api's.. this something to investigate.\n. @jpchase is starting to work on it now.  He can probably give an ETA soon.\n. Hi @MehSha, this landed a few weeks ago but we forgot to update this issue.  Would you mind giving it a look and let us know if it meets your needs?\n. Should we still land this?\n. Can you check if the platform manifest.json is changing: platforms/android/assets/www/manifest.json.  This file should have your updated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your project, or android build step iteself.\n. SO I'M NOT CRAZY: #279\nSeems we may have a race, of sorts.\n. ..actually, we changed the way we do versionCode, its possible this is unrelated to my crazy from #279\nCan you check if this is specific to versionCode, or if it happens also with i.e. packageId or your oauth settings for android?\n@karmik in case its specific to explicit versionCode.\n. ..happens with values that update config.xml.  They change in pre-prepare step, but apparently cordova-cli actually takes the contents of config.xml before pre-prepare.\nCurrent hunch: config.xml is copied into platform files before running pre-prepare hooks.\n. This was a bug in cordova-lib, and has been fixed upstream in CB-7615.\nWill need to wait for cordova-lib submodule update, and cca release, for this to actually make its way into cca.\n. So.. this won't be quite as trivial as I expected.  At the moment our prepare step has no knowledge of target build type or platform.  We've gotten away with this by just preparing for both iOS/Android always, even if your build is only for one platform, and this hasn't harmed us so far.  We cannot do the same for release/debug builds since these are mutually exclusive.\nIn order to know the targets, we will have to parse the command line arguments, which is currently done by the cordova-cli tool, not us.  The right solution is to have hooks get this as input, which may be possible once we move to programmatic hooks implementation which @kamrik is working on.\nIn the mean time, I suggest using a shell script to toggle manifests, and just keep two manifest copies around.  Sorry :(\n. That chromium issue is not likely to be related, since Chrome Apps for Mobile are not implemented inside the real Chrome Apps/Extensions Runtime.\nFrom the looks of it, I guess the embedded iframe is from another domain, yet requests coming from within it are made relative to the host?  Perhaps this is related to our XHR polyfil?\n@agrieve @clelland \n. Thanks!\n. Thanks!\n. Thanks for the prompt @bobbyworld.  When we first implemented notifications, there was no such thing as a rich local notification for iOS.\nHowever, iOS8's has brought a bunch of changes to notifications finally, so it would be worth re-investigating.\n. Thanks a bunch!  Looks good at first glance, but @mwoghiren @clelland for review.\n. Sorry, should have been filed in CADT repo.  https://github.com/MobileChromeApps/chrome-app-developer-tool/issues/40\n. First step would be to do some experimentation, but if it works, we will need to create a plugin to set the environment variables, add tooling support to read the key values from manifest files, and update documentation to describe how to enable the service.\n. ..also worth verifying system WebView on KitKat/L-Release.\n. Indeed.  Thank you for bringing this up.\n. Sorry, only Android and iOS.  We haven't implemented the bootstrap and lifecycle events for windows phone, nor any of our apis.\n. @agrieve\n. These will fail on Android until the UDP patches land.  They all pass on iOS.\n. Rui, may you rebase these tests on top of master, and remove from the sockets-secure branch dependency?\nThey should all fail until the underlying patches land, but right now I cannot test iOS tcp sockets without also landing android sockets, since the sockets-secure branch patches both platforms at once.\n. Actually looks like I can just cherry-pick d92a74df161dd9d4de20f94773b7e3ed4b848f83\n. cca only supports android 4.0+, so I'm assuming you are using this plugin in a vanilla cordova project on android 2.3?\nIf so, we have not tested that environment at all.  We should document that in the plugin docs, thanks for bringing it up.\nWe will consider testing our plugins on android 2.3 (filed #409 so you can track), but I cannot promise that this will happen soon.\n. woo hoo!\n. ```\n\ncca build android --release\nls platforms/android/build/outputs/apk/\n``\n. ..and more specifically, when you go to publish your app to the play store and have to select apks, its not immediately clear from the file picker dialog which is the right one to pick.\n. @mwoghiren \n. This was added right?  Can we close this or are their some limitations?\n. You cannot currently ship your app to the store using chrome Dev editor.\nYou will need to build an apk using thecca` tool and follow this guide.\n. Thanks for bringing this to our attention. Sorry for the yuck.\n\nOn Wed, Oct 15, 2014, 6:39 AM S\u00e9bastien Loisel notifications@github.com\nwrote:\n\nClosed #369\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/369.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/369#event-178751472\n.\n. +@clelland who has played in this area before.\n\nFor what its worth, I think this is common to all cordova-android apps and was discussed in depth on the cordova mailing lists not too long ago.\n. This sounds like a bridge bug, maybe?  Or perhaps the main thread is blocked for some reason?\nIf you could provide some sample code that reproduces the issue, that would be much appreciated.\n@agrieve as an fyi.\n. I just tried this snipped (based on yours):\nnavigator.notification.confirm('Are you sure?', function(results) {\n  if (results != 1) return;\n  navigator.notification.prompt('Give a comment.', function(results) {\n    if (results.buttonIndex == 1) {\n      navigator.notification.alert('Action done', function() {}, 'Done');\n    } else {\n      navigator.notification.alert('Action cancelled', function() {}, 'Cancelled');\n    }\n  }, 'Comment', ['Ok','Cancel'], '');\n}, 'Confirm', ['Ok','Cancel']);\nWorks fine both inside a cca app (dialogs show and callbacks called as would be expected).\nPerhaps its specific to the ngCordova wrapper, or more likely your application (perhaps some blocking js is executing?).  When you ran inside the vanilla cordova app, did you include your entire app or just a simple case?\n. @clelland fyi.\n. Thanks for the patch!\n. @oahziur any insights here?\n. You have to add the videoCapture permission to your manifest permissions.  By not being there, cca is assuming you do not want the plugin.\nI do agree, that if you are explicitly adding the plugin, we should tell you that you need to add the permission, and maybe do it for you (not sure we need to go there).\n. I've filed #412 to track that request.\n. @mwoghiren interested in taking a look at this one?  Was feedback from the Eh workshop.  Not sure how they ran into it unless they wrote the manifest file by hand.\n. We use the iOS WebView, and are limited to the web features that it provides.  It is not impossible to write a cordova plugin to implement some set of getUserMedia functionality, but it would be difficult and does not currently exist.\nApple has been improving the WebView with each iOS release, so fingers crossed for iOS9 maybe.\n. @oahziur is this something we can mitigate, or should we move the call to a background thread?\n. Glad you could resolve this, sorry for the late reply.\n. Sweet suggestion.  @mwoghiren who implemented chrome.idle which has a similar but different implementation.  Perhaps this suggestion can just go there.\n. @kamrik Would you like to take a stab at this?\n. I just tried using XCode 6.1 to deploy to iOS 8.1, using cca v0.4.3 (which installs cordova-ios 3.6.1 as reported by cca platform ls).\nI've tried various combinations of tools and cannot repro :(\n. Awesome, thanks for the steps. I'll take a look first thing tomorrow morning.\n. Okay, after loading your project I can duplicate your issue.\nAfter running the app, I loaded remote inspector (via Safari), and then ran chrome.runtime.reload() from the console to see the startup messages:\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    (anonymous function) (statusbar.js, line 99)\n    build (cordova.js, line 53)\n    require (cordova.js, line 68)\n    localRequire (cordova.js, line 49)\n    mapModules (cordova.js, line 1416)\n    (anonymous function) (cordova.js, line 1234)\n    f (cordova.js, line 632)\n    fire (cordova.js, line 760)\n    (anonymous function) (cordova.js, line 1226)\n    onScriptLoadingComplete (cordova.js, line 1526)\n    scriptLoadedCallback (cordova.js, line 1543)\n    (anonymous function) (cordova.js, line 1497)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 11)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 11)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 12)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 12)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 13)\n[Error] Deprecated attempt to access property 'userAgent' on a non-Navigator object.\n    global code (platform.js, line 13)\n[Warning] platform.js is deprecated. Please upgrade to webcomponents.js (https://github.com/Polymer/webcomponentsjs). (platform.js, line 16)\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1156)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1149)\nRemoving statusbar plugin or the use of polymer doesn't resolve the underlying issue.\nInvestigating..\n. Relevant: https://issues.apache.org/jira/browse/CB-6911\n. Alright, I've updated to the latest cordova-ios in cca@master to 3.7.0, and after upgrading your project (using cca upgrade), it will resolve the \"errors\" seen above.  However, those errors are not the root cause of the deviceready not firing.  More investigation needed..\n(We will release cca before the end of the week to push the new ios version out either way.)\n. Well.  It seems this is an honest to goodness case of the DOMContentLoaded event actually not firing.\nWhen I remove the use of html imports, and remove the custom elements from the body, the app loads fine and the device ready event fires.\nI've left both the platform.js and main.js scripts running, so they are not the cause.  Perhaps try using the new custom components polyfills supplied by https://github.com/Polymer/webcomponentsjs (as recommended by the warning when including platform.js).\nHopefully you can report back with further findings after using the attach-remote-inspector-and-run-chrome.runtime.reload() trick to see startup errors.\n. Very glad you were able to resolve this, and thanks very much for checking back.\nI'm going to close this since I'm not sure what specific action items there are for our team.  If we can narrow down a test case, please do re-open this.\n. @FreakTheMighty thats great debugging.  Lots of clues.  But I'll create a new issue to track this.\n. I'm surprised we get to \"close\" in the first place.  I would have expected send to fail.  Will take a look.\n. @oahziur -- I'm not sure about this being related to no network available, but based on my reading, we assume that close is always in response to a close() call, and this assert would fail if close happens in response to the other end closing (including network failure?).\n. Okay, this is more clear now.  I overlooked that these are UDP sockets and don't have a connection so there is no other end to close. \nI'd like to pull in the PR, but I think its large enough to warrant confirming that you have signed a CLA, as per these docs.  It takes 30 seconds to do online.\nPlease provide me with your real name so I can verify that you have done this.\n. Thanks!\n. Ah, looks like this is a dup of #399.  Please re-open if not.\n. I answered this in #94.  Copying here:\nI just tried this:\n```\n\ncca plugin add org.apache.cordova.camera\ncca run android\n(success)\n```\n\nThen, on device, inside app:\nnavigator.camera.getPicture( console.log.bind(console), console.error.bind(console), {} );\nWhich resulted in an image being stored in: file:///storage/emulated/0/Android/data/MY_APP_ID/cache/1415719889576.jpg\nThe image is stored in a file url, so you may have to xhr it and set the image src to a data uri, but you should be able to get at least that far without hiccups.  Please file a new issue if you cannot follow these above steps in a cca project.\n. I haven't tried, but perhaps the problem is that you are using cordova plugin add instead of cca plugin add.\n. Sorry, not likely.  I know the pdfium project is not a core part of chromium, and window.print() appears to do nothing at all in crosswalk at the moment.\nIt wouldn't hurt to file a request with the crosswalk team asking that they consider bundling pdfium (as Chrome app does), and adding support for printing, but I'm not sure how likely that is to happen.\nIf you are just trying to capture the window contents, another potential option to investigate is to attempt to enable webrtc screen/tab capture, which is currently hidden behind a flag on desktop (and may not work on mobile).\n. I'm having trouble understanding the question.  Using cca + permission works for iOS and Android, but there is a problem in your cloud build environment?\nAre you using the plugin outside of a chrome app, via cordova-cli or phonegap-cli?\nThe errors from your pastebin output shows a bunch of errors of the form duplicate symbol [...] GCDAsyncSocket [...] which signals to me that perhaps you are using both the old chrome.socket and the new chrome.sockets.  These should work together but you'll have to use the latest versions.  Or possibly another plugin you are building is manually including the GCDAsyncSocket library?\n. @oahziur to take a look at the fork for differences.\nThanks for reporting back, glad you resolved your issue and hopefully we can help make this easier.\n. Alright, theres little we can do about this.\nHowever, Rui, maybe we should create a plugin that simply holds the GCDAsyncSocket library, so that at least in the future all plugin authors can depend on a single shared source.  We've done this in the past for other libraries.\n. Comes out iossocketscommon is now just the GCDAsyncSocker library.  We can consider renaming this to share with other plugins, but we have no good suggestions for packageId at the moment (should we use com.github.robbiehanson.CocoaAsyncSocket?  org.apache.cordova.labs.robbiehanson.CocoaAsyncSocket?).\nRui also considered prefixing, but that seems so bad.  Perhaps we just resurrect the thread of plugin support for cocoapods?  Shaz mentioned supporting \"workspaces and xcconfig files\" in ios-4.0.0 in the last cocoapods thread on dev list, which sounds relevant.\nI suspect we just leave this with no action for now.\n. This was already fixed.\n. This was already fixed.\n. Great point.  Thanks for bringing it up.\nYou're right that these are coming from the cordova platform template (though the list of permissions has fallen drastically since the plugin breakout happened).\n. Thanks for the tips.\nI agree that we should auto-generate config.xml at prepare time, but I don't think we should exclude it by default.  There are times when you want to customize it explicitly (we do support you changing cordova app preferences there).\n.cordova/ was I think a regression -- it used to not be created by default.  I'll add it to the .gitignore.\n. I've re-read the doc and it wasn't as clear as I would like.\nSpecifically, the entire doc applies only to Crosswalk WebView.  You can opt-out of Crosswalk and use the default system webview, which would auto-update on Android L, and be \"shareable\" on any Android & iOS version.\n. Thanks!\n. How did you set PATH, and on which platform?\nIts possible you just need to export PATH.\n. I haven't reviewed this yet, but general comment that we will want to be careful how we roll this out to not break CADT.  Probably want to have PR to update CADT at the same time.\n. Perhaps Andrew didn't add the plugin at all.  Similar to WebRTC, the javascript endpoints are available in crosswalk, but you have to actually add the correct android permissions to your AndroidManifest in order for them to do anything.  Otherwise they just silently fail (sucks, not sure if we can do anything about that).\nIf you add the geolocation plugin cca plugin add org.apache.cordova.geolocation it will automatically add the correct permissions, and then geolocation should work.\nHowever!  For chrome apps, the correct way to solve this problem is to add the \"geolocation\" permission to your chrome app manifest (as per this doc).  Otherwise, cca prepare will auto-uninstall the geolocation plugin.\nFor chrome apps on desktop, if you don't include the \"geolocation\" permission, you get a warning when you go to use it:\nIs the 'geolocation' permission appropriate? See http://developer.chrome.com/apps/declare_permissions.html.\nWe could investigate doing something similar.\n. Thanks for poking this issue.  Resolved it using the solution proposed in #412.  Let me know if this suffices.\n. Actually, I realized that the geolocation issue specifically is not resolved.\nWe could add it to our list of default plugins just to have the permission..\n. @GustavoCostaW Because, for compatibility with desktop, we require that you have the geolocation permission in your manifest in order to use the geolocation apis.  cca is for chrome app development, and we try to help you maintain compatibility with desktop as much as possible.\nSo, if you don't add the permission to the manifest, the plugin will be uninstalled by our tool.\nWe could implement a feature to just modify your manifest automatically when you add the plugin, but I personally think an informational message is better.  The manifest file is not something our tools currently help you manage by making automatic edits, and this would be a rather insignificant reason to start doing that now.\n. Ouch, not good.  Can you send us the application www/ please, so I can test locally?\n. ..embedded scripts, I assume (for anyone else reading)\n@thomasmarkiewicz we should have thought to ask about that earlier, however, the CSP restriction should apply to Chrome Apps for Mobile (not yet, anyway), since the webview does not impose this by default (unlike the Chrome Apps Runtime).\nGlad this resolved your issue, though.  I assume you found vulcanize --csp ?\n. Thanks for getting back to us and filing a separate issue about it!\n. @kristianmandrup you can read answers to those most of those questions on our faq.  The top few answers hopefully explain how we run on iOS.  We haven't added FAQ entries about polymer, but perhaps its common enough now that we should.\n. @kristianmandrup Indeed those answers are conflicting and confusing.\nFirst, The faq for \"chrome on iOS\" has answers that are mostly applicable to Chrome Apps for Mobile, but not always.  Specifically, Chrome for iOS is as constrained as any other hybrid app on iOS: it has to use UIWebView (or the new WKWebView) for rendering, has to use the regular iOS sdk, has to go through regular app store review...  However, Chrome for iOS does add a bunch of neat chrome stuff, like a custom networking stack & proxy, various identity and sync features, and a bunch of UI/product features (omnibox, voice search, ) etc.  Chrome Apps for Mobile don't leverage those features at all.\nSo yes, Chrome Apps for Mobile are bound to use UIWebView (perhaps soon WkWebView) but that is just because of iOS restrictions not because we leverage Chrome for iOS in any way (we do not).\nRegarding polymer perf on iOS: Polymer is certainly focusing on working well on iOS.  I've created lightweight applications that run fine on iOS devices.  The 20 second startup times may have applied to older versions of polymer that were striving for maximum compatibility and not maximum performance, and then using many heavyweight components that use all the features.\nPolymer team has changed strategies recently in order to address these concerns.  I invite you to watch this video that goes over those details.  It appears as though this upcoming higher-performance version (0.8) is not officially shipped, but you can take a look at whats cooking in the git repos, or just wait a bit and trust that perf will improve soon.\nNone of this explains why vulcanize isn't working ;)\n. To the original reporter: Please also post your cca version, CADT version, and please let us know if you tried to use cca run (compiling natively) or just cca push.\nAlso, you provided the contents of your application (awesome!), but we don't do dart packaged application development often.  Please let us know how you actually build and run this application (are you using CDE or some command line tools?).\nThanks!\n. The queue for cca upgrade should be the content of the platforms/created-with-cca-version file.  Perhaps it is not being created for some reason?\n. Alright, we should make the auto-upgrade check more robust against trailing whitespace, but still unclear how your local editor settings affected this (were you editing the file manually?).\nGenerally we do not advise adding platforms/ to your repo at all (we consider this a local build artefact, which changes over time and from machine to machine).  Any changes to native code will scale best if they are done by creating a plugin.\nWhenever edits to platforms/ cannot be avoided and cannot be implemented with a plugin, another option is to use a hook and modify the contents on every prepare.\nIf you don't want to bother with plugins and hooks and rather make edits to platforms directly, thats fine, but will make upgrades harder for you to manage.  The CCA upgrades just delete and reinstall platforms.\n. That error is not a real error, its just the way we exit via a promise rejection.  We should improve our error messages ;)\nThat said, if you don't want to upgrade, and don't want to exit, for next time you can use --skip-upgrade (as documented under the upgrade section of cca --help).  You will need to pass that flag every time, which is a bit annoying, but doesn't come up as an issue often.\n. @marcellodesales please file a separate issue.  Can you try -y to see if it also does not work?  That will let us know if its a docs or functionality issue.\n. ..and now I notice you just did. woops!\n. First, we should move the theme clobbering to plugin hooks now that they are available.\nSecond, we should only change this once after plugin installation.  It may still be annoying (clobber after re-install, upgrade), but at least you can resolve that with your own prepare hook or something.\nFinally, we should not need the translucent theme default after some changes to how our background service runs.\nI'll see about making the change for 1 & 2.\n. Great suggestion.  Moving things around was hairier than I expected, and the manifest.mobile setting is a better interim option for many reasons.  Set \"androidTheme\" to change the default.\nGood luck!\n. Very odd.  Will take a look.\nI've had issues with vulcanize before, and it stemmed from tags appearing inside xml comment blocks which were being parsed by our bootstrap scripts.  Perhaps this is the case here, and --strip removes these?\n. Following instructions to load blank page, then using location.reload() from safari web inspector, to see startup issues, I get this:\n[Error] Element name could not be inferred.\n    element (polymer.js, line 10244)\n    (anonymous function) (btmzup.js, line 1738)\n    global code (btmzup.js, line 1740)\nFollowing the line numbers doesn't prove to be insightful, but seems related to paper-ripple.  Can't really remove that component without removing most paper elements.\nUsing --strip does not change anything for me, though.  I get same errors (with different line numbers):\n[Error] Element name could not be inferred.\n    element (polymer.js, line 10244)\n    (anonymous function) (btmzup.js, line 1)\n    global code (btmzup.js, line 1)\n. Seems relevant: https://github.com/webcomponents/webcomponentsjs/issues/76\nMore context: http://trackjs.com/blog/tracked-attempted-assign-readonly-property-ios-8-typeerror/\n. Filed issue to ask them for a release: https://github.com/Polymer/polymer-gestures/issues/83\n. Thanks for tracking this down!\n. @AleksMeshkov Looks like that is the only change the that plugin.\n@clelland Any suggestions for how to solve this for pluggable webviews?  Perhaps need android 4.0 CordovaWebView to have a cookie manager factory, or something?\n. @clelland have you tested the latest?  Unless there are blockers, probably we should do a release this week?\n. The version of crosswalk we bundle is based on the cordova-crosswalk-engine submodule here.\nThe latest version on master of cca is actually version 11 (beta), but we haven't released cca in a while.\nIf you would like to try it right now, you can follow our instructions for cloning-this-repo.\nEither way, we should probably see about updating crosswalk again and doing a cca release.  Thanks for the reminder.\n. That isn't necessarily true. CADT isn't built with cca. However it's using\nthe same crosswalk engine plugin, so it may just need a submodule update if\nanything. I'll check soon.\nOn Mon, 2 Mar 2015 10:44 Francesco Balestrieri notifications@github.com\nwrote:\n\nThanks for the reply. I assume the same applies to CADT, i.e. if I follow\nthe instructions below will I get a CADT based on Crosswalk 11?\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/#building-from-source-ios-or-android---instructions-for-ios--linux\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/465#issuecomment-76734886\n.\n. ..okay you are right, CADT build script uses the version of cordova-crosswalk-engine which is bundled with cca.  So long as you npm link the master version of cca into your CADT directory before building, you will get the latest.\n\nWe have scheduled a cca release for later this week, which I think @jpchase and @agrieve are going to do.\n. Normally I would suggest writing a cordova plugin, and using the NDK on Android if it has to be in C.  See the Cordova Plugin Development Guide to get you started.\nI'm not sure that anyone on our team has looked into crosswalk extensions as a viable way to implement plugins.  Its an interesting idea, but probably not low hanging fruit.\n. Cordova has orientation preferences, and the default for phone's is to not rotate at all (I think, at least on iOS), and to rotate to three sides on tablets.\nThese defaults can be changed in config.xml, though I'm having a hard time finding documentation for it :(\nI'll go dig in the code to see if I can find the answers.\n. @dskhatri Thanks for checking back in with results!\nYes, we should improve our documentation of config.xml.  We try to do as much as makes sense in the manifest.json file because we want settings that apply across mobile and desktop.  manifest.mobile.json is meant to override desktop defaults for mobile (like oauth, etc).  We've had suggestions to add support for cordova preferences in manifest.mobile.json, but I think its best if we just add documentation about config.xml, since I rather not invent yet-another-syntax for settings.\n. Thanks for confirming!\n. You would have to write a cordova plugin for this feature.  We are working on improving the way our background.js file runs in the background, but it still won't be a background service.\nCordova Plugin Development Guide\n. cca create Foo\ncd Foo\ncca platform add android\ncca run android\nThat will prompt for auto-upgrade :(\n. I'm going to attempt to add this to cordova-cli, so that cca will just work by forwarding the arguments.\n. (filed by @mmocny)\n. Last time I played with notifications (recently) it worked just fine, though @jpchase made a few changes recently.  @jpchase perhaps you could take a look next week (I know this week is full).\nThanks for providing us with sample code @blukis !  Which environment is this on?  (Its known to only work on Android).\n. @clelland fyi.\n. @felixhammerl Did you resolve this manually / file an issue with them?\n@clelland fyi.\n. Error message implies the problem lays in superspawn (in cordova-lib).  Oddly, looks like superspawn was written specifically to work in this case, but there must be a bug.\n. I don't have a windows machine/vm at the moment, so I won't take a stab at this right now.  If no one else picks it up I'll take a stab next week hopefully.\n. Thanks for the patch!  I'll take a look at this asap and comment/land, but would you mind signing our ICLA first?  It takes 30 seconds online, and you can find instructions in the Legal section of our Contributing Doc.\n. Indeed, you have, thank you.\n. Thank you!\nGlad to see you experimenting with bluetooth.  We're hoping to add it to our cca install flow (i.e. chrome apps using the bluetooth permissions will automatically install these plugins), so any feedback is much appreciated.\n. I believe this issue was fixed in cordova-ios 4.0, and we're still pinned to 3.7.0.\nIf you are using cca master, you can update the cordova/cordova-ios submodule to 4.0.0.  I'm doing that now to confirm.\n. My bad, 4.0 was the versions of cordova-cli that included cordova-ios 3.7.0.\nThe iOS8 tracking issue is CB-7043.\nI found a forum thread about this issue which may have some insights: http://forum.ionicframework.com/t/ios8-iphone-6-app-is-being-scaled-up-instead-of-native/10957/8\n. (More context in #399.)\n. Thanks for checking back in!\n. Thanks again for contributions, but I'm a bit confused, have you seen our bluetoothLowEnergy plugin?\nIf that plugin is missing functionality, I think any additions you add belong there.  Let me know if I misunderstand, then I will take a look.\n. So you've got the old source because we have not updated the latest plugin versions to the cordova plugin registry.  Andrew tried to do that last week, but there is a problem with the registry at the moment.\nFor iOS, I think the reason Rui (an intern from last term) took that approach was because the implementation was far more tightly coupled, and it was just impractical to split out.\n. Are you going to answer the SO question, or would you like me to?\n. Looks good.  Agreed that the api design is inherently open to races, and that while this change would take a while to test for complete correctness it is no worse than currently written.\nFor the future, you can take a look at our Chrome Apps Api Test Suide (see the Readme for instructions) test suite to run through bluetooth tests.  Bluetooth is a pain to test, though, since you need various peripherals.  Bluetooth has both an automated portion and a set of manual tests.  They could use some love too, in case you are interested in improving them ;)\nThanks again!\n. I just ran into this as well.\nBy installing the plugin manually from here resolved the issue for me.  Andrew tried to publish this plugin (and others?) to the plugin registry a few days ago and it failed.  Seems it actually half-updated and may be in a broken state.  We will look into republishing asap.\n. Looks like they include the android-support-v13 library right inline in their push plugin.  They also use the gcm helper libraries which are apparently deprecated.\nWe use android-support-v4 which is referenced from several of our plugins, and I believe includes the accessibility service.\nI wouldn't expect their to be a conflict between the android-support v4 and v13 libraries, but its worth checking, I suspect its something included in the older gcm helper library.  I cannot verify right now, but hopefully that gives you something to investigate.\nA few comments:\n- Its sorta bad practice to bundle a popular android lib directly with a plugin (like PushPlugin is doing), since in the long run it's going to cause duplication conflicts.  Instead, android libs should live in their own plugin which can be used as a shared dependency.\n- Did you know we have a chrome.gcm plugin?  It only supports android, but works quite well.\n. @uriva which tutorial?  The one which starts at our README?\nFor a list of available plugins, you can see our list of supported apis.\nchrome.PushMessaging is deprecated for desktop, you are correct, where Chrome Apps run in the Chrome Browser Runtime, because there is better support for chrome.gcm.  For Mobile, we have a created a cordova plugin that implements the same chrome apps api, but using a very different implementation (it uses iOS's didReceiveRemoteNotification).  So this plugin is not really affected by the desktop deprecation, except perhaps that we may not be quite as motivated to work on it in the future.\n. @FreakTheMighty If you don't mind digging just a bit further, I would debug and step through that rewritePage function and see where it chokes.  If you can't get to it, I'll take a look soon.\n. Huzzah!\n. The script itself tries to adjust ulimit since this is a common problem.  Perhaps there is a bug and we are overriding your manually set limits (assuming you set the limits yourself from shell before launching cca push --watch?)\n. @agrieve was in the process of resolving this today.  Sorry about it!\nBasically, he will move our the gradle changes into its own plugin (cca-gradle?), and publish a new cca version which installs that.\nFor existing cca cli's versions (as you are using) he re-published chrome.bootstrap to remove the gradle changes.\nThe fact that you couldn't revert manually I assume means that the old version was unpublished from the registry?  Andrew, is this part of our release process right now?\n. Confirmed -y and --skip-prompt do not work.\n. Seems this only ever worked for the cca upgrade command.  Seems silly and inverted actually.. if you explicitly call cca upgrade you should never get the prompt, and the --skip should apply only to other commands.  I'll see about making the change.\n. During the next cca release.  I don't think this is major enough to push for a quick release, but I'll ask around to see if there are other reasons..\n. ..We'll be doing releases quite a bit over the coming weeks (with cordova-android 4.0 moving to official release, with various cordova-lib tooling changes, and several cca plugin updates coming).\nSo, I recommend waiting 1-2 weeks.\n. Or follow our cloning docs if you are impatient!\n. Thanks!\n. As per the top of the README:\n\nThe Chrome Apps for Mobile Toolchain is no longer being actively developed. We intend to keep it functional, but do not intend on adding any new features.\n. \n",
    "dj2": "If Cordova requires os.tmpDir, do we know what node version that was committed into? We can at least put a note in the docs saying you need node >= x version.\n. Looks like author href could also be asked for.\n. For anyone looking later, it's WebKitBlobBuilder() on Android.\n. I'd also be happy entering cca create com.everburning.Foo if that solves the packageId issue.  I would have been surprised starting from an existing chrome app because I didn't realize you would need to create a manifest.mobile.json before doing the cca work. I would have assumed that would be created when running cca.\nMaybe worth mentioning in the getting started docs that the manifest.mobile.json should be created and what information should be in it to make the copy work correctly.\n. Yea, I think it's still an issue. I shouldn't have to do the extra steps of editing two files and running cca prepare for something that could be done automatically at creation time. Feels like it's putting a small barrier into getting started for every app I want to create.\nI don't think I'd ever want to actually create a HelloWorld app after the very first time playing around with cca. I'd much rather have it start me off with the app I want to develop.\n. Essentially, I want it to be as easy as possible to get started. If I can run one command to get everything setup and a second to push the app to device that, to me, is the best solution. You have this now, it just sets things up with an app name that doesn't make sense for me.\nIf I have to go edit files and run extra commands to get things named differently it's a slight barrier to entry and, after a few of them, I'm going to give up as 'not polished'.\nI haven't used the link-to or copy-from as I don't have existing chrome apps. I'm using mobile chrome as a simple way to get started doing mobile development. So, it's possible that I don't fit as your target developer audience, but hopefully moving forward you'll start getting more people who want to use mobile chrome as the starting point and making that as simple as possible would be beneficial.\n. If Spark or App Harness are the preferred way to do this, calling them out at the beginning of the docs would be nice. I'd never heard of them until this point.\n. The main reason is that was the first place I went to look for docs before reading to the bottom and noticing the continue step. Just seems like it's a closer fit to the docs where you may want to jump around between different pieces of them.\nYou can git clone the wiki, it's just a separate repo. I wonder if you could setup a sub-module that pulled it in?\n. Just ran a test. I did:\ncca create foo\nthen went into www/manifest.json and changed the name to Bar, then edited www/manifest.mobile.json and changed the packageId to com.everburning.Bar. Then did the cca prepare after which doing grep -Ri HelloWorld * gives:\nplatforms/android/AndroidManifest.xml:        <activity android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|locale\" android:label=\"@string/app_name\" android:name=\"HelloWorld\" android:theme=\"@android:style/Theme.Black.NoTitleBar\">\nplatforms/android/build.xml:<project name=\"HelloWorld\" default=\"help\">\nplatforms/android/CordovaLib/.project:<?xml version=\"1.0\" encoding=\"UTF-8\"?><projectDescription><name>HelloWorld-CordovaLib</name></projectDescription>\nplatforms/android/src/com/everburning/Bar/HelloWorld.java:public class HelloWorld extends CordovaActivity \nplatforms/android/src/com/your/company/HelloWorld/HelloWorld.java:package com.your.company.HelloWorld;\nplatforms/android/src/com/your/company/HelloWorld/HelloWorld.java:public class HelloWorld extends CordovaActivity \nplugins/android.json:{\"prepare_queue\":{\"installed\":[],\"uninstalled\":[]},\"config_munge\":{\"res/xml/config.xml\":{\"/*\":{\"<feature name=\\\"File\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.file.FileUtils\\\" /></feature>\":1,\"<feature name=\\\"InAppBrowser\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.inappbrowser.InAppBrowser\\\" /></feature>\":1,\"<feature name=\\\"NetworkStatus\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.networkinformation.NetworkManager\\\" /></feature>\":1},\"/widget\":{\"<feature name=\\\"ChromeNavigation\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeNavigation\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeStorage\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeStorage\\\" /></feature>\":1,\"<feature name=\\\"ChromeBootstrap\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeBootstrap\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeExtensionURLs\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeExtensionURLs\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<access origin=\\\"chrome-extension://*\\\" />\":1,\"<preference name=\\\"DisallowOverscroll\\\" value=\\\"true\\\" />\":1,\"<feature name=\\\"ChromeI18n\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeI18n\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1}},\"AndroidManifest.xml\":{\"/*\":{\"<uses-permission android:name=\\\"android.permission.WRITE_EXTERNAL_STORAGE\\\" />\":1,\"<uses-permission android:name=\\\"android.permission.ACCESS_NETWORK_STATE\\\" />\":1}}},\"installed_plugins\":{\"org.apache.cordova.file\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.inappbrowser\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.network-information\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.keyboard\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.statusbar\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.navigation\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.bootstrap\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.i18n\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.CustomEvent\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.xhr_features\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.blob_constructor\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}},\"dependent_plugins\":{\"org.chromium.common\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.storage\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.runtime\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}}}\nplugins/ios.json:{\"prepare_queue\":{\"installed\":[],\"uninstalled\":[]},\"config_munge\":{\"framework\":{\"AssetsLibrary.framework\":{\"false\":1},\"MobileCoreServices.framework\":{\"false\":1},\"CoreGraphics.framework\":{\"false\":1},\"SystemConfiguration.framework\":{\"true\":1}},\"config.xml\":{\"/*\":{\"<feature name=\\\"File\\\"><param name=\\\"ios-package\\\" value=\\\"CDVFile\\\" /></feature>\":1,\"<feature name=\\\"InAppBrowser\\\"><param name=\\\"ios-package\\\" value=\\\"CDVInAppBrowser\\\" /></feature>\":1,\"<feature name=\\\"NetworkStatus\\\"><param name=\\\"ios-package\\\" value=\\\"CDVConnection\\\" /></feature>\":1,\"<feature name=\\\"Keyboard\\\"><param name=\\\"ios-package\\\" onload=\\\"true\\\" value=\\\"CDVKeyboard\\\" /></feature>\":1,\"<feature name=\\\"StatusBar\\\"><param name=\\\"ios-package\\\" onload=\\\"true\\\" value=\\\"CDVStatusBar\\\" /></feature>\":1,\"<preference name=\\\"StatusBarOverlaysWebView\\\" value=\\\"true\\\" />\":1,\"<preference name=\\\"StatusBarBackgroundColor\\\" value=\\\"#000000\\\" />\":1},\"/widget\":{\"<feature name=\\\"ChromeNavigation\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeNavigation\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeStorage\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeStorage\\\" /></feature>\":1,\"<feature name=\\\"ChromeBootstrap\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeBootstrap\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeExtensionURLs\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeExtensionURLs\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<access origin=\\\"chrome-extension://*\\\" />\":1,\"<preference name=\\\"KeyboardDisplayRequiresUserAction\\\" value=\\\"false\\\" />\":1,\"<preference name=\\\"DisallowOverscroll\\\" value=\\\"true\\\" />\":1,\"<feature name=\\\"ChromeI18n\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeI18n\\\" /></feature>\":1}}},\"installed_plugins\":{\"org.apache.cordova.file\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.inappbrowser\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.network-information\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.keyboard\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.statusbar\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.navigation\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.bootstrap\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.i18n\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.CustomEvent\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.xhr_features\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.blob_constructor\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}},\"dependent_plugins\":{\"org.chromium.common\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.storage\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.runtime\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}}}\nSo, it looks like there are a few configuration files left with the old name, the main Java file is still called HellWorld and it leaves the existing java files.\n. It's a Galaxy Nexus running Android 4.3.\n. Oh, I didn't actually do anything with JAR files when I tried this. I just added the syncFileSystem to the mainfest and tried to access drive. So, with the default install which comes with the syncFileSystem plugin are there extra steps to be followed? Would be nice to get those documented in the wiki or the readme somewhere (I didn't even know there was a separate site for the play services I should be looking at)\n. If Cordova requires os.tmpDir, do we know what node version that was committed into? We can at least put a note in the docs saying you need node >= x version.\n. Looks like author href could also be asked for.\n. For anyone looking later, it's WebKitBlobBuilder() on Android.\n. I'd also be happy entering cca create com.everburning.Foo if that solves the packageId issue.  I would have been surprised starting from an existing chrome app because I didn't realize you would need to create a manifest.mobile.json before doing the cca work. I would have assumed that would be created when running cca.\nMaybe worth mentioning in the getting started docs that the manifest.mobile.json should be created and what information should be in it to make the copy work correctly.\n. Yea, I think it's still an issue. I shouldn't have to do the extra steps of editing two files and running cca prepare for something that could be done automatically at creation time. Feels like it's putting a small barrier into getting started for every app I want to create.\nI don't think I'd ever want to actually create a HelloWorld app after the very first time playing around with cca. I'd much rather have it start me off with the app I want to develop.\n. Essentially, I want it to be as easy as possible to get started. If I can run one command to get everything setup and a second to push the app to device that, to me, is the best solution. You have this now, it just sets things up with an app name that doesn't make sense for me.\nIf I have to go edit files and run extra commands to get things named differently it's a slight barrier to entry and, after a few of them, I'm going to give up as 'not polished'.\nI haven't used the link-to or copy-from as I don't have existing chrome apps. I'm using mobile chrome as a simple way to get started doing mobile development. So, it's possible that I don't fit as your target developer audience, but hopefully moving forward you'll start getting more people who want to use mobile chrome as the starting point and making that as simple as possible would be beneficial.\n. If Spark or App Harness are the preferred way to do this, calling them out at the beginning of the docs would be nice. I'd never heard of them until this point.\n. The main reason is that was the first place I went to look for docs before reading to the bottom and noticing the continue step. Just seems like it's a closer fit to the docs where you may want to jump around between different pieces of them.\nYou can git clone the wiki, it's just a separate repo. I wonder if you could setup a sub-module that pulled it in?\n. Just ran a test. I did:\ncca create foo\nthen went into www/manifest.json and changed the name to Bar, then edited www/manifest.mobile.json and changed the packageId to com.everburning.Bar. Then did the cca prepare after which doing grep -Ri HelloWorld * gives:\nplatforms/android/AndroidManifest.xml:        <activity android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|locale\" android:label=\"@string/app_name\" android:name=\"HelloWorld\" android:theme=\"@android:style/Theme.Black.NoTitleBar\">\nplatforms/android/build.xml:<project name=\"HelloWorld\" default=\"help\">\nplatforms/android/CordovaLib/.project:<?xml version=\"1.0\" encoding=\"UTF-8\"?><projectDescription><name>HelloWorld-CordovaLib</name></projectDescription>\nplatforms/android/src/com/everburning/Bar/HelloWorld.java:public class HelloWorld extends CordovaActivity \nplatforms/android/src/com/your/company/HelloWorld/HelloWorld.java:package com.your.company.HelloWorld;\nplatforms/android/src/com/your/company/HelloWorld/HelloWorld.java:public class HelloWorld extends CordovaActivity \nplugins/android.json:{\"prepare_queue\":{\"installed\":[],\"uninstalled\":[]},\"config_munge\":{\"res/xml/config.xml\":{\"/*\":{\"<feature name=\\\"File\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.file.FileUtils\\\" /></feature>\":1,\"<feature name=\\\"InAppBrowser\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.inappbrowser.InAppBrowser\\\" /></feature>\":1,\"<feature name=\\\"NetworkStatus\\\"><param name=\\\"android-package\\\" value=\\\"org.apache.cordova.networkinformation.NetworkManager\\\" /></feature>\":1},\"/widget\":{\"<feature name=\\\"ChromeNavigation\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeNavigation\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeStorage\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeStorage\\\" /></feature>\":1,\"<feature name=\\\"ChromeBootstrap\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeBootstrap\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeExtensionURLs\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeExtensionURLs\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<access origin=\\\"chrome-extension://*\\\" />\":1,\"<preference name=\\\"DisallowOverscroll\\\" value=\\\"true\\\" />\":1,\"<feature name=\\\"ChromeI18n\\\"><param name=\\\"android-package\\\" value=\\\"org.chromium.ChromeI18n\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1}},\"AndroidManifest.xml\":{\"/*\":{\"<uses-permission android:name=\\\"android.permission.WRITE_EXTERNAL_STORAGE\\\" />\":1,\"<uses-permission android:name=\\\"android.permission.ACCESS_NETWORK_STATE\\\" />\":1}}},\"installed_plugins\":{\"org.apache.cordova.file\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.inappbrowser\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.network-information\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.keyboard\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.statusbar\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.navigation\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.bootstrap\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.i18n\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.CustomEvent\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.xhr_features\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.blob_constructor\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}},\"dependent_plugins\":{\"org.chromium.common\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.storage\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.runtime\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}}}\nplugins/ios.json:{\"prepare_queue\":{\"installed\":[],\"uninstalled\":[]},\"config_munge\":{\"framework\":{\"AssetsLibrary.framework\":{\"false\":1},\"MobileCoreServices.framework\":{\"false\":1},\"CoreGraphics.framework\":{\"false\":1},\"SystemConfiguration.framework\":{\"true\":1}},\"config.xml\":{\"/*\":{\"<feature name=\\\"File\\\"><param name=\\\"ios-package\\\" value=\\\"CDVFile\\\" /></feature>\":1,\"<feature name=\\\"InAppBrowser\\\"><param name=\\\"ios-package\\\" value=\\\"CDVInAppBrowser\\\" /></feature>\":1,\"<feature name=\\\"NetworkStatus\\\"><param name=\\\"ios-package\\\" value=\\\"CDVConnection\\\" /></feature>\":1,\"<feature name=\\\"Keyboard\\\"><param name=\\\"ios-package\\\" onload=\\\"true\\\" value=\\\"CDVKeyboard\\\" /></feature>\":1,\"<feature name=\\\"StatusBar\\\"><param name=\\\"ios-package\\\" onload=\\\"true\\\" value=\\\"CDVStatusBar\\\" /></feature>\":1,\"<preference name=\\\"StatusBarOverlaysWebView\\\" value=\\\"true\\\" />\":1,\"<preference name=\\\"StatusBarBackgroundColor\\\" value=\\\"#000000\\\" />\":1},\"/widget\":{\"<feature name=\\\"ChromeNavigation\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeNavigation\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeStorage\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeStorage\\\" /></feature>\":1,\"<feature name=\\\"ChromeBootstrap\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeBootstrap\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<feature name=\\\"ChromeExtensionURLs\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeExtensionURLs\\\" /><param name=\\\"onload\\\" value=\\\"true\\\" /></feature>\":1,\"<access origin=\\\"chrome-extension://*\\\" />\":1,\"<preference name=\\\"KeyboardDisplayRequiresUserAction\\\" value=\\\"false\\\" />\":1,\"<preference name=\\\"DisallowOverscroll\\\" value=\\\"true\\\" />\":1,\"<feature name=\\\"ChromeI18n\\\"><param name=\\\"ios-package\\\" value=\\\"ChromeI18n\\\" /></feature>\":1}}},\"installed_plugins\":{\"org.apache.cordova.file\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.inappbrowser\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.network-information\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.keyboard\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.apache.cordova.statusbar\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.navigation\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.bootstrap\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.i18n\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.CustomEvent\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.xhr_features\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.polyfill.blob_constructor\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}},\"dependent_plugins\":{\"org.chromium.common\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.storage\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"},\"org.chromium.runtime\":{\"PACKAGE_NAME\":\"com.your.company.HelloWorld\"}}}\nSo, it looks like there are a few configuration files left with the old name, the main Java file is still called HellWorld and it leaves the existing java files.\n. It's a Galaxy Nexus running Android 4.3.\n. Oh, I didn't actually do anything with JAR files when I tried this. I just added the syncFileSystem to the mainfest and tried to access drive. So, with the default install which comes with the syncFileSystem plugin are there extra steps to be followed? Would be nice to get those documented in the wiki or the readme somewhere (I didn't even know there was a separate site for the play services I should be looking at)\n. ",
    "brettcannon": "I think it would help if manifest.mobile.json was documented as well as mentioned in the output of cca prepare that the file exists and should be updated.\n. So it's actually not clear for old-hats like me as my app is considered \"hosted\" now, but back when it was started it was called a packaged app since all files are local instead of just a glorified bookmark with pre-approved permissions as \"hosted\" apps used to be. It's rather unfortunate the terms \"hosted\" and \"packaged\" have been redefined as it makes it all as clear as mud in everyone's documentation.\n. That's basically what shepheb told me. At the moment I don't have anything special beyond a plug-in I need to install to make up for the lack of clipboardWrite support. Eventually, though, I may have splash screens for iOS which would be platform-specific. I guess that can be part of a symlinking/copying files step post cca create to go with the plugin installation that is done through one of my ninja build files.\n. Closing as a dupe of #6 \n. Figures. =) I know it's directly not your fault that the Chrome docs for apps and the Web Store only mention 128x128 as required and 16x16 and 48x48 as optional, but could you consider documenting the other sizes in your Next Steps if Chrome could conceivably use them (e.g. where does it use 512x512?)? That way you know one's app covers all icon possibilities for Chrome, Android, and iOS when they follow your guidance.\n. That was it. Thanks! Unfortunately there's no error message that the option isn't available. Any way to change that behaviour?\n. I think it would help if manifest.mobile.json was documented as well as mentioned in the output of cca prepare that the file exists and should be updated.\n. So it's actually not clear for old-hats like me as my app is considered \"hosted\" now, but back when it was started it was called a packaged app since all files are local instead of just a glorified bookmark with pre-approved permissions as \"hosted\" apps used to be. It's rather unfortunate the terms \"hosted\" and \"packaged\" have been redefined as it makes it all as clear as mud in everyone's documentation.\n. That's basically what shepheb told me. At the moment I don't have anything special beyond a plug-in I need to install to make up for the lack of clipboardWrite support. Eventually, though, I may have splash screens for iOS which would be platform-specific. I guess that can be part of a symlinking/copying files step post cca create to go with the plugin installation that is done through one of my ninja build files.\n. Closing as a dupe of #6 \n. Figures. =) I know it's directly not your fault that the Chrome docs for apps and the Web Store only mention 128x128 as required and 16x16 and 48x48 as optional, but could you consider documenting the other sizes in your Next Steps if Chrome could conceivably use them (e.g. where does it use 512x512?)? That way you know one's app covers all icon possibilities for Chrome, Android, and iOS when they follow your guidance.\n. That was it. Thanks! Unfortunately there's no error message that the option isn't available. Any way to change that behaviour?\n. ",
    "kzahel": "I was personally extremely happy when cca create set reasonable default values and didn't prompt me for a company name. And a phone number, etc etc.\n. Some more information\nin fileSystem.js, getFileAndroid, in onFileReceived, nativeUri is \"content://com.android.providers.media.documents/document/image%3A446\"\nIt seems like a reasonable/good thing. I'm thinking perhaps fixing this warning may be helpful?\nresolveLocalFileSystemURI is deprecated. Please call resolveLocalFileSystemURL instead. resolveLocalFileSystemURI.js:67\nHmm, looking at https://stackoverflow.com/questions/19834842/android-gallery-on-kitkat-returns-different-uri-for-intent-action-get-content, it looks like perhaps this is related to the fact that the file chooser can select entries that don't actually resolve to local files (content://), since they may be e.g. multi gigabyte files stored in google drive.\n. Nope, sorry. I haven't. But I trust @clelland if he says it works. I'm not working on any apps with MobileChromeApps at the moment and don't have a development environment setup. Perhaps just close and let it be re-opened if it persists.\n. Well, alright, I'll try and get it running again tomorrow. Hold off then...\nOn Tue, Apr 1, 2014 at 7:08 PM, Michal Mocny notifications@github.comwrote:\n\n@kzahel https://github.com/kzahel Ah thats too bad. I was hoping to try\nJsTorrent on Android.\nThanks for all the feedback, though.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/62#issuecomment-39282166\n.\n. Sorry, forgot to mention that. Android Moto g 4.4.2. Also, it's a TCP socket\n. https://github.com/MobileChromeApps/chrome-cordova/blob/master/plugins/chrome.socket/src/android/ChromeSocket.java#L810\n\nAh, I see what it's doing, allocating a buffer of requested size but not re-adjusting based on actual bytes read\n. I thought I'd try fixing it myself doing a simple System.arraycopy, but running \"cca build\" must do some kind of \"git reset\" on me because I lost my changes in the file. What's the workflow for making changes to e.g. ChromeSocket.java and testing them on my device?\n. Thanks. I was editing files in the plugins folder, which was being reset. Editing in the platforms folder worked.\nA small change makes it work nicely, I signed the contributor agreement and created a pull request:\nhttps://github.com/MobileChromeApps/chrome-cordova/pull/41\n. (precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ echo \"//TEST123\"  >> plugins/org.chromium.socket/src/android/ChromeSocket.java \n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ tail -n 2 plugins/org.chromium.socket/src/android/ChromeSocket.java \n}\n//TEST123\n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ cca prepare\ncca v0.0.3\nGenerating config.xml from defaults for platform \"android\"\nPreparing android project\n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ tail -n 2 plugins/org.chromium.socket/src/android/ChromeSocket.java \n    } // SocketData\n}\n. 'arraybuffer' responseType does work, so you could use that, save to temporary fileSystem, and use that URL :-)\n. Thanks for the debugger tip. Stepping through eclipse I found out what was wrong.\nhttps://github.com/kzahel/chrome-cordova/commit/4bf2aef492c44204905b86ea645b0c6513bff5b3\nI have a pull request open that addresses this: https://github.com/MobileChromeApps/chrome-cordova/pull/41\n. Connect is definitely blocking for about 10 seconds (e.g. with hosts that are offline), it must be hitting some java default connection timeout?\nHaving evented i/o is a requirement for my use case. I am porting a BitTorrent client.\nSurely there must be a nice terse java select event loop lying around somewhere on somebody's computer at google :-)\n. Yeah this sounds about right. I saw the same behavior with chrome.socket.read, I have been using \"null\" frequently to get a default value. CCA tries to parse that argument as an int, and throws a JSONException. ChromeSocket.java could be patched up to support a null argument.\n. I wish I knew why the changed the API, so soon after it went stable. It hardly seems to be a large enough improvement to warrant the change. I wonder when they will actually start doing a console.warn on e.g. chrome.socket.create\n. Thanks for the clarification. That's actually exactly the explanation I was looking for.\n. I was personally extremely happy when cca create set reasonable default values and didn't prompt me for a company name. And a phone number, etc etc.\n. Some more information\nin fileSystem.js, getFileAndroid, in onFileReceived, nativeUri is \"content://com.android.providers.media.documents/document/image%3A446\"\nIt seems like a reasonable/good thing. I'm thinking perhaps fixing this warning may be helpful?\nresolveLocalFileSystemURI is deprecated. Please call resolveLocalFileSystemURL instead. resolveLocalFileSystemURI.js:67\nHmm, looking at https://stackoverflow.com/questions/19834842/android-gallery-on-kitkat-returns-different-uri-for-intent-action-get-content, it looks like perhaps this is related to the fact that the file chooser can select entries that don't actually resolve to local files (content://), since they may be e.g. multi gigabyte files stored in google drive.\n. Nope, sorry. I haven't. But I trust @clelland if he says it works. I'm not working on any apps with MobileChromeApps at the moment and don't have a development environment setup. Perhaps just close and let it be re-opened if it persists.\n. Well, alright, I'll try and get it running again tomorrow. Hold off then...\nOn Tue, Apr 1, 2014 at 7:08 PM, Michal Mocny notifications@github.comwrote:\n\n@kzahel https://github.com/kzahel Ah thats too bad. I was hoping to try\nJsTorrent on Android.\nThanks for all the feedback, though.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/62#issuecomment-39282166\n.\n. Sorry, forgot to mention that. Android Moto g 4.4.2. Also, it's a TCP socket\n. https://github.com/MobileChromeApps/chrome-cordova/blob/master/plugins/chrome.socket/src/android/ChromeSocket.java#L810\n\nAh, I see what it's doing, allocating a buffer of requested size but not re-adjusting based on actual bytes read\n. I thought I'd try fixing it myself doing a simple System.arraycopy, but running \"cca build\" must do some kind of \"git reset\" on me because I lost my changes in the file. What's the workflow for making changes to e.g. ChromeSocket.java and testing them on my device?\n. Thanks. I was editing files in the plugins folder, which was being reset. Editing in the platforms folder worked.\nA small change makes it work nicely, I signed the contributor agreement and created a pull request:\nhttps://github.com/MobileChromeApps/chrome-cordova/pull/41\n. (precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ echo \"//TEST123\"  >> plugins/org.chromium.socket/src/android/ChromeSocket.java \n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ tail -n 2 plugins/org.chromium.socket/src/android/ChromeSocket.java \n}\n//TEST123\n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ cca prepare\ncca v0.0.3\nGenerating config.xml from defaults for platform \"android\"\nPreparing android project\n(precise)kgraehl@localhost:~/Downloads/kzahel/kzahel-projects/mobilechromeapps/JSTorrent$ tail -n 2 plugins/org.chromium.socket/src/android/ChromeSocket.java \n    } // SocketData\n}\n. 'arraybuffer' responseType does work, so you could use that, save to temporary fileSystem, and use that URL :-)\n. Thanks for the debugger tip. Stepping through eclipse I found out what was wrong.\nhttps://github.com/kzahel/chrome-cordova/commit/4bf2aef492c44204905b86ea645b0c6513bff5b3\nI have a pull request open that addresses this: https://github.com/MobileChromeApps/chrome-cordova/pull/41\n. Connect is definitely blocking for about 10 seconds (e.g. with hosts that are offline), it must be hitting some java default connection timeout?\nHaving evented i/o is a requirement for my use case. I am porting a BitTorrent client.\nSurely there must be a nice terse java select event loop lying around somewhere on somebody's computer at google :-)\n. Yeah this sounds about right. I saw the same behavior with chrome.socket.read, I have been using \"null\" frequently to get a default value. CCA tries to parse that argument as an int, and throws a JSONException. ChromeSocket.java could be patched up to support a null argument.\n. I wish I knew why the changed the API, so soon after it went stable. It hardly seems to be a large enough improvement to warrant the change. I wonder when they will actually start doing a console.warn on e.g. chrome.socket.create\n. Thanks for the clarification. That's actually exactly the explanation I was looking for.\n. ",
    "felquis": "@mmocny There's docs about manifest.json and manifest.mobile.json? I'm not sure about what these files can do in my app, for example, cordova preferences tags, I can directly set on config.xml or it may be set in manifest.json and it will be reflected in my config.xml during the build? (because if my config.xml is auto-generated i should ignore it on GIT) This extensions/manifest is not about this cordova thing, and Crosswalk docs seems to be not exactly what a doc means to be.\nMy cordova plugins, I can set it in the manifest.mobile.json? Or I need to install individually? Because when I run cca platform add android, it install all CCA plugins, but not the plugins I'm using, and if I first install my plugins and then I run cca platform add android, it will remove my current plugins and install the cca plugins... I'm looking for some docs to read, to feel okay with how cca works and to understand what I'm doing exactly.\nSorry for this question in the wrong place, and thank you for the hard work you are doing here.\n. Guys, I'm sure if it's related to this issue but, when the keyboard come up or when the camera is selected, seems like my app close (but not actually close), then it show the menu, show my android home screen, then the keyboard appears or the camera opens. It is fast, but annoying, I don't know how to describe it, but it's like the webview has a transparent background.. \nSorry if it is not related.\n. +1 \n. I had some problems with it today, before send my app to app store.\n\nI'd like to suggest to add all icons listed in cordova docs here for iOS(also 8) and Android http://cordova.apache.org/docs/en/4.0.0/config_ref_images.md.html\n\nMy config.xml looks like this:\n``` xml\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<icon height=\"60\" src=\"res/icon/ios/icon-60.png\" width=\"60\"/>\n<icon height=\"120\" src=\"res/icon/ios/icon-60@2x.png\" width=\"120\"/>\n<icon height=\"76\" src=\"res/icon/ios/icon-76.png\" width=\"76\"/>\n<icon height=\"152\" src=\"res/icon/ios/icon-76@2x.png\" width=\"152\"/>\n<icon height=\"40\" src=\"res/icon/ios/icon-40.png\" width=\"40\"/>\n<icon height=\"80\" src=\"res/icon/ios/icon-40@2x.png\" width=\"80\"/>\n<icon height=\"57\" src=\"res/icon/ios/icon.png\" width=\"57\"/>\n<icon height=\"114\" src=\"res/icon/ios/icon@2x.png\" width=\"114\"/>\n<icon height=\"72\" src=\"res/icon/ios/icon-72.png\" width=\"72\"/>\n<icon height=\"144\" src=\"res/icon/ios/icon-72@2x.png\" width=\"144\"/>\n<icon height=\"29\" src=\"res/icon/ios/icon-small.png\" width=\"29\"/>\n<icon height=\"58\" src=\"res/icon/ios/icon-small@2x.png\" width=\"58\"/>\n<icon height=\"50\" src=\"res/icon/ios/icon-50.png\" width=\"50\"/>\n<icon height=\"100\" src=\"res/icon/ios/icon-50@2x.png\" width=\"100\"/>\n<icon height=\"180\" src=\"res/icon/ios/icon-60@3x.png\" width=\"180\"/>\n\n\n```\n\nAs defined in docs\n\niOS and Android splash screens, are added right, but icons are not.\nMy icons in manifest.json is only\njson\n \"144\": \"res/icon/ios/icon-72@2x.png\"\nWhen I build on xcode, I click in submit and it fails because a 120x120 icon is missing.\nSo, I read here (https://github.com/MobileChromeApps/mobile-chrome-apps/issues/399#issuecomment-61206138), that I have to add icons in manifest.mobile.json, so, now my file looks like this:\njson\n{\n  \"packageId\": \"com.company.app\",\n  \"android\": {\n    \"icons\": {\n      \"ldpi\": \"res/icon/android/drawable-ldpi.png\",\n      \"mdpi\": \"res/icon/android/drawable-mdpi.png\",\n      \"hdpi\": \"res/icon/android/drawable-hdpi.png\",\n      \"xhdpi\": \"res/icon/android/drawable-xhdpi.png\"\n    }\n  },\n  \"ios\": {\n    \"icons\": {\n      \"60\": \"res/icon/ios/icon-60.png\",\n      \"120\": \"res/icon/ios/icon-60@2x.png\",\n      \"76\": \"res/icon/ios/icon-76.png\",\n      \"152\": \"res/icon/ios/icon-76@2x.png\",\n      \"40\": \"res/icon/ios/icon-40.png\",\n      \"80\": \"res/icon/ios/icon-40@2x.png\",\n      \"57\": \"res/icon/ios/icon.png\",\n      \"114\": \"res/icon/ios/icon@2x.png\",\n      \"72\": \"res/icon/ios/icon-72.png\",\n      \"144\": \"res/icon/ios/icon-72@2x.png\",\n      \"29\": \"res/icon/ios/icon-small.png\",\n      \"58\": \"res/icon/ios/icon-small@2x.png\",\n      \"50\": \"res/icon/ios/icon-50.png\",\n      \"100\": \"res/icon/ios/icon-50@2x.png\",\n      \"180\": \"res/icon/ios/icon-60@3x.png\"\n    }\n  },\n}\nInside my platforms/ios/projectName/projectName-info.plist is missing a call to some files added to manifest.mobile.json like 180x180, 120x120, \nxml\n    <dict>\n        <key>CFBundlePrimaryIcon</key>\n        <dict>\n            <key>CFBundleIconFiles</key>\n            <array>\n                <string>icon-40</string>\n                <string>icon-small</string>\n                <string>icon.png</string>\n                <string>icon@2x</string>\n                <string>icon-72</string>\n                <string>icon-72@2x</string>\n            </array>\n            <key>UIPrerenderedIcon</key>\n            <false/>\n        </dict>\n    </dict>\nThere's no call for  icon-60@2x, so a added it manually\nxml\n        <string>icon-60</string>\n        <string>icon-60@2x</string>\nAnd now finally, I could send my app to App Store. BTW, I'm using shell script to auto-generate splash screens and icons https://github.com/felquis/generate-splash-screen-and-icons\n. Yes I saw it @agrieve \nAlso, I'm not sure if it can be added here, but, when I only put platform-specific icons in manifest.mobile.json, these icons aren't added in in platforms/ios/appName/config.xml and platforms/android/res/xml/config.xml, I'm not sure if it is the right behaviour \nI'm planning to specify my icons only in manifest.mobile.json and remove icons declaration from config.xml, is it right or no? I need to specify my icon in config.xml and in manifest.mobile.json? Can you point me where in the code these icons are handled?\nThanks.\n. > And verify that it does actually work :P.\nThis was working so so in 0.5.0 but in 0.5.1 this isn't working.\n- For android, the icons in manifest.mobile.json are ignored and the icon used for Android is the one in manifest.json, for iOS seems to be working fine!\n- Splash Screens was working on 0.5.0 but isn't working on 0.5.1, I'm debugging trying to figure out what's wrong but with no success, any tips?\n. Wow thank you so much \ud83d\ude03\nEm ter\u00e7a-feira, 18 de novembro de 2014, agrieve notifications@github.com\nescreveu:\n\nClosed #432\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/432 via\n1ce6f0d\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/1ce6f0d78b61edbe4f264c7b56355702b1f00101\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/432#event-194673829\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Hi @kamrik \nI use to keep the file platforms/created-with* in the GIT, should I ignore it?\n. When CCA shows This project was not upgraded to cca v0.5.0 yet. :) \nIf I answer N, the output always is an error\n\n. When I run cca -d plugin add, CCA only ask to upgrade if there's no empty end-line. \nCCA Will ask to upgrade\n``` text\n0.5.0\n```\nCCA Wont ask to upgrade \n0.5.0\nAs my .editorconfig add an empty end-line, sometimes for some reason this file has a empty end-line, just need a COMMAND+S to add a end-line.\n. Thank you guys :)\nNow I'm ignoring all the files inside platforms/, everything is working\nfine.\nJust that error, when I type N to upgrade.\n2014-12-02 16:55 GMT-02:00 Michal Mocny notifications@github.com:\n\nClosed #453\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/453 via\n3a0b477\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/3a0b477596fd486244dfa566232fd128c44fbef5\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/453#event-201426101\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. I was thinking about to add a property in mobile.manifest.json to allow\ndevelopers define any android theme. Also specify translucent or light as\ndefault theme.\nEm ter\u00e7a-feira, 2 de dezembro de 2014, Michal Mocny \nnotifications@github.com escreveu:\n\nFirst, we should move the theme clobbering to plugin hooks now that they\nare available.\nSecond, we should only change this once after plugin installation. It may\nstill be annoying (clobber after re-install, upgrade), but at least you can\nresolve that with your own prepare hook or something.\nFinally, we should not need the translucent theme default after some\nchanges to how our background service runs.\nI'll see about making the change for 1 & 2.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/455#issuecomment-65297502\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Worked fine! :D \nThank you @mmocny \n. @AleksMeshkov CCA doesn't touch on Splash Screens both for Android and iOS, you can use splash screen in the Cordova way and it will work fine, I have a repo that can help you with splashscreen, you can ignore the part about icons.\nHope it help you.\n. With CCA@0.5.1 it doesn't work anymore, I'll check out the issues worked in this version to see what was changed.\n. @sunbiz it works :) Thank you!\n. Hi @kctang how did you change the version? It's something manual or it can\nbe automated?\n2015-04-04 21:47 GMT-03:00 kctang notifications@github.com:\n\nI got the same issue. Tried to downgrade org.chromium.i18n\nhttp://plugins.cordova.io/#/package/org.chromium.i18n from 2.0.0 to\n1.1.1.\nBuild is successful but I have not tried running (not expecting any\nproblem). Thanks guys!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/543#issuecomment-89695026\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Nice, thanks :)\nEm 05/04/2015 12:29, \"kctang\" notifications@github.com escreveu:\n\n@felquis https://github.com/felquis, I posted the comment after a quick\ntest on a clean/blank cca 0.5.1 project, so it was done manually using\n./cca from the cca project directory instead of via grunt cordovacli.\nthe remove command gave some warning about the i18n plugin is required but works anyway\n./cca plugin remove org.chromium.i18n\nadd the previous version (i guessed the version from http://plugins.cordova.io/#/package/org.chromium.i18n)\n./cca plugin add org.chromium.i18n@1.1.1\nWill try this on my cordovacli based project in the next few days.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/543#issuecomment-89792496\n.\n. @mmocny There's docs about manifest.json and manifest.mobile.json? I'm not sure about what these files can do in my app, for example, cordova preferences tags, I can directly set on config.xml or it may be set in manifest.json and it will be reflected in my config.xml during the build? (because if my config.xml is auto-generated i should ignore it on GIT) This extensions/manifest is not about this cordova thing, and Crosswalk docs seems to be not exactly what a doc means to be.\n\nMy cordova plugins, I can set it in the manifest.mobile.json? Or I need to install individually? Because when I run cca platform add android, it install all CCA plugins, but not the plugins I'm using, and if I first install my plugins and then I run cca platform add android, it will remove my current plugins and install the cca plugins... I'm looking for some docs to read, to feel okay with how cca works and to understand what I'm doing exactly.\nSorry for this question in the wrong place, and thank you for the hard work you are doing here.\n. Guys, I'm sure if it's related to this issue but, when the keyboard come up or when the camera is selected, seems like my app close (but not actually close), then it show the menu, show my android home screen, then the keyboard appears or the camera opens. It is fast, but annoying, I don't know how to describe it, but it's like the webview has a transparent background.. \nSorry if it is not related.\n. +1 \n. I had some problems with it today, before send my app to app store.\n\nI'd like to suggest to add all icons listed in cordova docs here for iOS(also 8) and Android http://cordova.apache.org/docs/en/4.0.0/config_ref_images.md.html\n\nMy config.xml looks like this:\n``` xml\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<icon height=\"60\" src=\"res/icon/ios/icon-60.png\" width=\"60\"/>\n<icon height=\"120\" src=\"res/icon/ios/icon-60@2x.png\" width=\"120\"/>\n<icon height=\"76\" src=\"res/icon/ios/icon-76.png\" width=\"76\"/>\n<icon height=\"152\" src=\"res/icon/ios/icon-76@2x.png\" width=\"152\"/>\n<icon height=\"40\" src=\"res/icon/ios/icon-40.png\" width=\"40\"/>\n<icon height=\"80\" src=\"res/icon/ios/icon-40@2x.png\" width=\"80\"/>\n<icon height=\"57\" src=\"res/icon/ios/icon.png\" width=\"57\"/>\n<icon height=\"114\" src=\"res/icon/ios/icon@2x.png\" width=\"114\"/>\n<icon height=\"72\" src=\"res/icon/ios/icon-72.png\" width=\"72\"/>\n<icon height=\"144\" src=\"res/icon/ios/icon-72@2x.png\" width=\"144\"/>\n<icon height=\"29\" src=\"res/icon/ios/icon-small.png\" width=\"29\"/>\n<icon height=\"58\" src=\"res/icon/ios/icon-small@2x.png\" width=\"58\"/>\n<icon height=\"50\" src=\"res/icon/ios/icon-50.png\" width=\"50\"/>\n<icon height=\"100\" src=\"res/icon/ios/icon-50@2x.png\" width=\"100\"/>\n<icon height=\"180\" src=\"res/icon/ios/icon-60@3x.png\" width=\"180\"/>\n\n\n```\n\nAs defined in docs\n\niOS and Android splash screens, are added right, but icons are not.\nMy icons in manifest.json is only\njson\n \"144\": \"res/icon/ios/icon-72@2x.png\"\nWhen I build on xcode, I click in submit and it fails because a 120x120 icon is missing.\nSo, I read here (https://github.com/MobileChromeApps/mobile-chrome-apps/issues/399#issuecomment-61206138), that I have to add icons in manifest.mobile.json, so, now my file looks like this:\njson\n{\n  \"packageId\": \"com.company.app\",\n  \"android\": {\n    \"icons\": {\n      \"ldpi\": \"res/icon/android/drawable-ldpi.png\",\n      \"mdpi\": \"res/icon/android/drawable-mdpi.png\",\n      \"hdpi\": \"res/icon/android/drawable-hdpi.png\",\n      \"xhdpi\": \"res/icon/android/drawable-xhdpi.png\"\n    }\n  },\n  \"ios\": {\n    \"icons\": {\n      \"60\": \"res/icon/ios/icon-60.png\",\n      \"120\": \"res/icon/ios/icon-60@2x.png\",\n      \"76\": \"res/icon/ios/icon-76.png\",\n      \"152\": \"res/icon/ios/icon-76@2x.png\",\n      \"40\": \"res/icon/ios/icon-40.png\",\n      \"80\": \"res/icon/ios/icon-40@2x.png\",\n      \"57\": \"res/icon/ios/icon.png\",\n      \"114\": \"res/icon/ios/icon@2x.png\",\n      \"72\": \"res/icon/ios/icon-72.png\",\n      \"144\": \"res/icon/ios/icon-72@2x.png\",\n      \"29\": \"res/icon/ios/icon-small.png\",\n      \"58\": \"res/icon/ios/icon-small@2x.png\",\n      \"50\": \"res/icon/ios/icon-50.png\",\n      \"100\": \"res/icon/ios/icon-50@2x.png\",\n      \"180\": \"res/icon/ios/icon-60@3x.png\"\n    }\n  },\n}\nInside my platforms/ios/projectName/projectName-info.plist is missing a call to some files added to manifest.mobile.json like 180x180, 120x120, \nxml\n    <dict>\n        <key>CFBundlePrimaryIcon</key>\n        <dict>\n            <key>CFBundleIconFiles</key>\n            <array>\n                <string>icon-40</string>\n                <string>icon-small</string>\n                <string>icon.png</string>\n                <string>icon@2x</string>\n                <string>icon-72</string>\n                <string>icon-72@2x</string>\n            </array>\n            <key>UIPrerenderedIcon</key>\n            <false/>\n        </dict>\n    </dict>\nThere's no call for  icon-60@2x, so a added it manually\nxml\n        <string>icon-60</string>\n        <string>icon-60@2x</string>\nAnd now finally, I could send my app to App Store. BTW, I'm using shell script to auto-generate splash screens and icons https://github.com/felquis/generate-splash-screen-and-icons\n. Yes I saw it @agrieve \nAlso, I'm not sure if it can be added here, but, when I only put platform-specific icons in manifest.mobile.json, these icons aren't added in in platforms/ios/appName/config.xml and platforms/android/res/xml/config.xml, I'm not sure if it is the right behaviour \nI'm planning to specify my icons only in manifest.mobile.json and remove icons declaration from config.xml, is it right or no? I need to specify my icon in config.xml and in manifest.mobile.json? Can you point me where in the code these icons are handled?\nThanks.\n. > And verify that it does actually work :P.\nThis was working so so in 0.5.0 but in 0.5.1 this isn't working.\n- For android, the icons in manifest.mobile.json are ignored and the icon used for Android is the one in manifest.json, for iOS seems to be working fine!\n- Splash Screens was working on 0.5.0 but isn't working on 0.5.1, I'm debugging trying to figure out what's wrong but with no success, any tips?\n. Wow thank you so much \ud83d\ude03\nEm ter\u00e7a-feira, 18 de novembro de 2014, agrieve notifications@github.com\nescreveu:\n\nClosed #432\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/432 via\n1ce6f0d\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/1ce6f0d78b61edbe4f264c7b56355702b1f00101\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/432#event-194673829\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Hi @kamrik \nI use to keep the file platforms/created-with* in the GIT, should I ignore it?\n. When CCA shows This project was not upgraded to cca v0.5.0 yet. :) \nIf I answer N, the output always is an error\n\n. When I run cca -d plugin add, CCA only ask to upgrade if there's no empty end-line. \nCCA Will ask to upgrade\n``` text\n0.5.0\n```\nCCA Wont ask to upgrade \n0.5.0\nAs my .editorconfig add an empty end-line, sometimes for some reason this file has a empty end-line, just need a COMMAND+S to add a end-line.\n. Thank you guys :)\nNow I'm ignoring all the files inside platforms/, everything is working\nfine.\nJust that error, when I type N to upgrade.\n2014-12-02 16:55 GMT-02:00 Michal Mocny notifications@github.com:\n\nClosed #453\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/453 via\n3a0b477\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/3a0b477596fd486244dfa566232fd128c44fbef5\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/453#event-201426101\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. I was thinking about to add a property in mobile.manifest.json to allow\ndevelopers define any android theme. Also specify translucent or light as\ndefault theme.\nEm ter\u00e7a-feira, 2 de dezembro de 2014, Michal Mocny \nnotifications@github.com escreveu:\n\nFirst, we should move the theme clobbering to plugin hooks now that they\nare available.\nSecond, we should only change this once after plugin installation. It may\nstill be annoying (clobber after re-install, upgrade), but at least you can\nresolve that with your own prepare hook or something.\nFinally, we should not need the translucent theme default after some\nchanges to how our background service runs.\nI'll see about making the change for 1 & 2.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/455#issuecomment-65297502\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Worked fine! :D \nThank you @mmocny \n. @AleksMeshkov CCA doesn't touch on Splash Screens both for Android and iOS, you can use splash screen in the Cordova way and it will work fine, I have a repo that can help you with splashscreen, you can ignore the part about icons.\nHope it help you.\n. With CCA@0.5.1 it doesn't work anymore, I'll check out the issues worked in this version to see what was changed.\n. @sunbiz it works :) Thank you!\n. Hi @kctang how did you change the version? It's something manual or it can\nbe automated?\n2015-04-04 21:47 GMT-03:00 kctang notifications@github.com:\n\nI got the same issue. Tried to downgrade org.chromium.i18n\nhttp://plugins.cordova.io/#/package/org.chromium.i18n from 2.0.0 to\n1.1.1.\nBuild is successful but I have not tried running (not expecting any\nproblem). Thanks guys!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/543#issuecomment-89695026\n.\n\n\nFelquis Gimenes - Front-end\nfelquis.com +55 011 95980 2233\n. Nice, thanks :)\nEm 05/04/2015 12:29, \"kctang\" notifications@github.com escreveu:\n\n@felquis https://github.com/felquis, I posted the comment after a quick\ntest on a clean/blank cca 0.5.1 project, so it was done manually using\n./cca from the cca project directory instead of via grunt cordovacli.\nthe remove command gave some warning about the i18n plugin is required but works anyway\n./cca plugin remove org.chromium.i18n\nadd the previous version (i guessed the version from http://plugins.cordova.io/#/package/org.chromium.i18n)\n./cca plugin add org.chromium.i18n@1.1.1\nWill try this on my cordovacli based project in the next few days.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/543#issuecomment-89792496\n.\n. \n",
    "mwoghiren": "The www folder is what's used in Cordova, so it's unlikely that this will be changed.  Though I see your point, it's justifiable since, technically, files here are used/displayed in a webview using web technologies.  By contrast, src (on Android, for instance) is used for native (Java) files.\n. Good catch.\noptions.create is checked in order to determine whether to sync to Drive (ie. sync if we're creating a file; don't sync if we're mere retrieving one).  If options is null, though...yeah, my bad.  I'll check the intended behaviour and fix accordingly.\n. You're right.  The Blob constructor is not supported on Android.  You'll need to use (the deprecated) BlobBuilder\u2014even that is only supported on Android 3.0+.\n. Thanks for the feedback.\nThe plan is indeed to allow the developer to specify the Drive sync directory name; this would be done in the app manifest.\nFor an app intended to sync between desktop and mobile versions, the developer will use the desktop Chrome app id (the long string of characters), since I don't believe the directory name can be specified on desktop.  Eventually we hope to be able to determine the app id of an existing desktop Chrome app and use it automatically in the mobile version, but I'm not certain of the feasibility of this.\nFor mobile-to-mobile syncing only, any directory name could be used.\nDocumentation for this will be added when this is available.\n. Hi there,\nThanks for your contribution!\nnode_modules is intentionally checked in.  It eliminates the need for MCA users to worry about npm and gives us control over our dependencies.  Using packaged node_modules also speeds up our mca script, since it doesn't need to ever run npm install (which is fairly slow).\nThe relevant commits are here and here.\nThanks again!  Please let us know if you have any more questions, concerns, or contribution ideas. :)\n. Thanks for posting the issue!  I'll take a look.\n. Sorry, I could have sworn I replied to this a long time ago.\nCaching accounts between multiple runs of an app is sort of a tricky thing with the current identity API.  There is no support for \"logging out\"\u2014this is coming with the proposed chrome.accounts API.\nBecause of this, we currently intentionally do not cache the account; there would be no way to log out otherwise.  (removeCachedAuthToken is intended to invalidate cached tokens that are found to be invalid (eg. manually revoked some other way).  It's not really intended for mimicking logout functionality.)\nAre you seeing this in multiple calls to getAuthToken in the same run of the app?  That would be a different issue worth investigating, since it shouldn't show the account picker again.  I'm not seeing that behavior, though.\n. I agree that it's not the best experience.\nI am a little bit wary of amending the API as in solutions (1) and (2), since documentation and misalignment between desktop and mobile Chrome apps become issues.\nHowever, it might not be so bad, especially since the identity API will be changing once the accounts API comes along.  (1) could work fine.  I don't fully understand (2).  Can you explain?\n. Yes, thanks for elaborating.\nI have implemented option (1); the details object in getAuthToken can now take an accountHint, which is the email address of the account you'd like to use.\nThe next step is to add something like chrome.identity.getAccount that returns the currently logged-in account, so that developers can actually retrieve the account for caching and later using as an account hint.\n. I'm actually adding this to the getAuthToken callback.  Done in a few minutes...\n. Okay\u2014the getAuthToken callback now has token and account.  You can cache this account however you like (chrome.storage, likely) and pass it as accountHint in the details parameter of future calls to getAuthToken.\nPlease follow up if you try it\u2014we'd love to have further verification that this flow works. :)\nThanks again for proposing this!\n. You're passing a callback function that takes a token and an account, and the account is null?\nWhat version of the chrome.identity plugin are you using?  (You can check this with cca plugin ls.)\n. Hi Sam,\nThis feature is currently only available on mobile Chrome apps (on Android and iOS).  If you're seeing these failures on desktop, that's unfortunately expected behavior at the moment.\nLet me know if I'm mistaken and you're seeing this on Android or iOS.  Thanks!\n. cca v0.0.9 is now released and should fix this problem.  Please let us know if you're still having problems.\n. I have added this to my to-do list.  Thanks Dan!\n. Indeed, this plugin is not in the registry.  I will talk with Ian about publishing it tomorrow.\nThanks for the issue, Mateusz!\n. @clelland C concerns Android.  Are those functions intended to be operational?\nA heads-up: on iOS, getPurchases is not supported.  In iOS 6, receipts were introduced, which makes this implementable, but it hasn't been done yet.\n. Thank you for your contribution!\n. Thanks for the report, Yoav.  I'll look into this and report back.\n. Okay, sorry\u2014re-reading your post, I caught that you are using the emulator.  It is indeed the case that this reverts to the web flow, which yields a string.  I'll submit a fix.  Thanks again!\n. Regarding the mobile manifest, the relevant instructions for chrome.identity are here (I assume you saw that in order to know what to do), but I'm not sure if we have general documentation for manifest.mobile.json.  Documentation for that file is provided in the specific plugins that require it.\nIf a general manifest.mobile.json documentation page would be useful, we will take that as feedback and add it to our list. :)\n. I have pushed a fix.  It will be available in the published plugin during the next cca release.\nI am thrilled to hear that you were able to get identity working (aside from this hiccup).\nThanks again, Yoav, for reporting this.  Please keep the feedback coming. :)\n. Hi!  Thanks a lot for reporting this.\nI've fixed the amended getAuthToken callback parameters in this commit.\nAs for the redirect URI mismatch, the bundle identifier should be org.chromium.apps.ChromeAppsApiTests.dev.  Can you ensure that this is correct in your app?\nThanks again!\n. Ah, you beat me to it.\nAs for managing multiple client IDs, please look here.\nAs a side note: On iOS devices that have the G+ app installed, the API should use that.  If the device does not have G+ installed, it falls back to using a browser flow.\n. Thanks for the issue!  I'll look into this.\nThis likely isn't the problem, but it's worth noting: the https://www.googleapis.com/auth/userinfo.email scope is deprecated in favor of email, and will no longer be supported as of September 1st.\n. Which endpoint are you using?\nUsing the email scope and the endpoint https://www.googleapis.com/oauth2/v3/userinfo, I'm able to access the email address.  (It also works for me for v1 and v2.)\n. Oh, interesting.  I think the tokeninfo endpoint is intended just to check the status and details of a given token.  I notice it does yield an email address, but I don't think that's the best approach.\nDoes using the userinfo endpoint I suggested work for you?\nIt is odd that you are seeing one scope in the permission request dialog but not the other.  Using the email scope, I get asked permission to \"know who you are on Google\".  Are you seeing one scope but not the other every time?  Does the app show the native account chooser?\nYou shouldn't need to add anything to the mobile manifest for Android.  In the oauth2 section of my manifest, I literally have just:\n\"oauth2\": {\n    \"scopes\": [\n        \"email\"\n    ]\n}\n. What response text do you get when trying to access the user's email using https://www.googleapis.com/oauth2/v3/userinfo?\n. The first time I ran it after adding the https://mail.google.com/ scope, I was asked permission for only that scope, because I had already granted access to the email scope.  I still got my email from the userinfo endpoint.\nI then tried the tokeninfo endpoint, and that worked as well.  I'll see what else I can come up with.  Please let me know what response you get when you try tomorrow.  Thanks!\n. On Android, you can specify accountHint in the details argument of calls to getAuthToken.  For example:\nvar details = { interactive: true, accountHint: 'email@address.com' };\nvar callback = function(token, account) { ... };\nchrome.identity.getAuthToken(details, callback);\nThis will bypass the account chooser dialog.  Note that the callback has an account that can be stored for this purpose.\nThanks for the issue!  Let us know if this solution is unsatisfactory.\n. The accountHint and account callback argument are both Android-only.\nOn Desktop, account management is handled by Chrome.  Users can log in and out in Chrome, and so apps typically don't have to worry about account management.\nOn Android, there is no such thing, and the identity API doesn't provide functions that allow us to log users out (since it's not needed on Desktop).  So we added accountHint to allow developers to cache emails themselves as a form of basic account management.\nUnfortunately, yes, getAuthToken doesn't like other things being passed in its details.  This function will allow you to determine your platform; on Android apps created using CCA, it will return cordova-android.\n. Thanks for the heads up on getAccounts.  This appears to be a new addition to the API.  I can have it added this afternoon.\n. We certainly agree that it would be nice to obtain a user's email address\u2014we would love for the account argument on the getAuthToken callback to exist on desktop as well. :)\nThank you for your feedback!\n. Hi!  Just letting you know I'm back and looking into this.\n. Hi there,\nThe following error is crashing identity:\njava.lang.IllegalStateException: The meta-data tag in your app's AndroidManifest.xml does not have the right value.  Expected 4323000 but found 4323030.  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\nThe declaration it suggests is present in the AndroidManifest; it's just injecting the wrong value for some reason.  Still looking into that.\nIn the meantime, this is not a long-term fix, but if it's blocking your development, you can hardcode the expected value into AndroidManifest.xml as follows:\n<meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\ninto\n<meta-data android:name=\"com.google.android.gms.version\" android:value=\"4323000\" />\nI'll continue looking into fixing this for good.\n. Hi again,\nThis is a problem with v16.0.0 of the Google Play Services plugin.  It is fixed for the next version of cca.\nIn the meantime, you can stick with your current workaround, or you can manually install the new version of the Google Play Services plugin as follows:\ncca plugin rm org.chromium.identity\ncca plugin add https://github.com/MobileChromeApps/google-play-services.git\ncca plugin add org.chromium.identity\nYou cannot simply remove the existing Google Play Services plugin and add the updated one, since that's forbidden due to dependencies.  So we remove identity first.\nThanks for reporting this!  Please re-open if you have any further problems (eg. if this persists with cca 0.1.1).\n. No, it wouldn't be the same problem.  Can you open another issue with the symptoms?  I'll check it out in the meantime.\n. Hi there,\nThis means you need to update your version of Google Play Services on the device.  It should show a pop-up prompting you to update it\u2014I will investigate why it crashes instead.  In the meantime, try updating Google Play Services from the Play Store.\n. Sorry for the response delay!\nI assume you've created a manifest.json to get auth working.  If you specify \"name\" or \"key\" in there, that gets encoded into an app id.  If you have neither, it still works (by encoding the empty string).\nIf you don't have an app name in your manifest, we advise adding one for this purpose. :)\nThanks for your question!\n. Thank you for the issue!  I'll take care of this this week.\n. I do think an automatic token refresh after one hour needs to be implemented.  I'll add it to my list.\n. I've added token expiration refreshment here.  Please let me know if you're still seeing undesired behavior.\nThanks for reporting this, Sam!\n. Good catch.  Until I fix this (today), you can run cca analytics disable to keep using cca.\n. Fixed here.  Thanks for finding this.\n. Thank you!\n. Resolved here.\n. I haven't been able to reproduce this.  manifest.json changes are being pushed (triggering continuous live deploy) and are active, so I don't believe the title of this issue is the source of the encountered bug.\n@jpchase, do you remember any more specifics about the symptoms of the bug you were seeing?  @clelland mentioned it might be related to chrome.storage, so it might be a bug there.\n. An update prompt was added to chrome.identity a while back; this crash is a problem with showing the dialog:\nE/AndroidRuntime(10453): java.lang.NoClassDefFoundError: com.google.android.gms.R$string\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.d(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.a(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(Unknown Source)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity.launchAccountChooserAndCallback(ChromeIdentity.java:107)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity.access$900(ChromeIdentity.java:31)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity$2.run(ChromeIdentity.java:201)\nE/AndroidRuntime(10453): at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\nE/AndroidRuntime(10453): at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\nE/AndroidRuntime(10453): at java.lang.Thread.run(Thread.java:856)\n. That is probably it, yeah.  I think we can reproduce it just by having an old version of Play Services on the device.  When attempting to prompt the user to update, it should crash.\n. My mistake, sorry Rui.  Please do.\n. This is added.  I updated the README with a caveat.\n. This is implemented on Android in the new release of the chrome.idle plugin, using the \"locked\" state.  Thanks for the issue!\n. Hi there,\nIf you create an app using cca create MyApp, you'll end up with a HelloWorld app that works on iOS.  You can run it with cca run ios.\nYou can create an app with existing assets using cca create MyApp --copy-from=[path-to-www].  Some sample apps can be found here.\nHope this helps!\n. It's true that apps created using CCA use Crosswalk by default.\nLollipop does introduce an updatable webview, but adoption takes a while.  Many devices will continue to use older versions of Android (and consequently, older webviews) for the foreseeable future.  So, for consistency, we use Crosswalk.\nCrosswalk.md does, however, describe a manifest option to use the system webview (at the end of the Overview section).\n. Hi Andrew,\nThanks for the issue.\nThe geolocation plugin is supported by Cordova, so JIRA might be a better place for this issue.\nThat said, it looks like the geolocation plugin isn't supported on Android anymore.\niOS is still supported, however, so I would recommend firing up Web Inspector in Safari and debugging from there to see why the callbacks aren't being fired.\n. Thank you very much!\n. Hi there,\nThe quickest way would be to update (or create) the config file at ~/.cca/config, adding the following:\n{\n    \"analytics\": {\n        \"isAllowed\": false,\n    }\n}\nThat should do it.\nAlternatively, you could update the file you linked to return Q(false); on line 59 in the file you linked, analytics-loader.js.\nI think either should work.  Let us know if you're still running into problems.  Thanks!\n. Hah, good call. Forgot about that.\nOn Mar 30, 2015 6:18 PM, \"Mark Koudritsky\" notifications@github.com wrote:\n\nYou can also run cca analytics disable as the first command after\ninstalling cca. This will create the ~/.cca/config file Max mentioned.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/537#issuecomment-87856259\n.\n. The www folder is what's used in Cordova, so it's unlikely that this will be changed.  Though I see your point, it's justifiable since, technically, files here are used/displayed in a webview using web technologies.  By contrast, src (on Android, for instance) is used for native (Java) files.\n. Good catch.\n\noptions.create is checked in order to determine whether to sync to Drive (ie. sync if we're creating a file; don't sync if we're mere retrieving one).  If options is null, though...yeah, my bad.  I'll check the intended behaviour and fix accordingly.\n. You're right.  The Blob constructor is not supported on Android.  You'll need to use (the deprecated) BlobBuilder\u2014even that is only supported on Android 3.0+.\n. Thanks for the feedback.\nThe plan is indeed to allow the developer to specify the Drive sync directory name; this would be done in the app manifest.\nFor an app intended to sync between desktop and mobile versions, the developer will use the desktop Chrome app id (the long string of characters), since I don't believe the directory name can be specified on desktop.  Eventually we hope to be able to determine the app id of an existing desktop Chrome app and use it automatically in the mobile version, but I'm not certain of the feasibility of this.\nFor mobile-to-mobile syncing only, any directory name could be used.\nDocumentation for this will be added when this is available.\n. Hi there,\nThanks for your contribution!\nnode_modules is intentionally checked in.  It eliminates the need for MCA users to worry about npm and gives us control over our dependencies.  Using packaged node_modules also speeds up our mca script, since it doesn't need to ever run npm install (which is fairly slow).\nThe relevant commits are here and here.\nThanks again!  Please let us know if you have any more questions, concerns, or contribution ideas. :)\n. Thanks for posting the issue!  I'll take a look.\n. Sorry, I could have sworn I replied to this a long time ago.\nCaching accounts between multiple runs of an app is sort of a tricky thing with the current identity API.  There is no support for \"logging out\"\u2014this is coming with the proposed chrome.accounts API.\nBecause of this, we currently intentionally do not cache the account; there would be no way to log out otherwise.  (removeCachedAuthToken is intended to invalidate cached tokens that are found to be invalid (eg. manually revoked some other way).  It's not really intended for mimicking logout functionality.)\nAre you seeing this in multiple calls to getAuthToken in the same run of the app?  That would be a different issue worth investigating, since it shouldn't show the account picker again.  I'm not seeing that behavior, though.\n. I agree that it's not the best experience.\nI am a little bit wary of amending the API as in solutions (1) and (2), since documentation and misalignment between desktop and mobile Chrome apps become issues.\nHowever, it might not be so bad, especially since the identity API will be changing once the accounts API comes along.  (1) could work fine.  I don't fully understand (2).  Can you explain?\n. Yes, thanks for elaborating.\nI have implemented option (1); the details object in getAuthToken can now take an accountHint, which is the email address of the account you'd like to use.\nThe next step is to add something like chrome.identity.getAccount that returns the currently logged-in account, so that developers can actually retrieve the account for caching and later using as an account hint.\n. I'm actually adding this to the getAuthToken callback.  Done in a few minutes...\n. Okay\u2014the getAuthToken callback now has token and account.  You can cache this account however you like (chrome.storage, likely) and pass it as accountHint in the details parameter of future calls to getAuthToken.\nPlease follow up if you try it\u2014we'd love to have further verification that this flow works. :)\nThanks again for proposing this!\n. You're passing a callback function that takes a token and an account, and the account is null?\nWhat version of the chrome.identity plugin are you using?  (You can check this with cca plugin ls.)\n. Hi Sam,\nThis feature is currently only available on mobile Chrome apps (on Android and iOS).  If you're seeing these failures on desktop, that's unfortunately expected behavior at the moment.\nLet me know if I'm mistaken and you're seeing this on Android or iOS.  Thanks!\n. cca v0.0.9 is now released and should fix this problem.  Please let us know if you're still having problems.\n. I have added this to my to-do list.  Thanks Dan!\n. Indeed, this plugin is not in the registry.  I will talk with Ian about publishing it tomorrow.\nThanks for the issue, Mateusz!\n. @clelland C concerns Android.  Are those functions intended to be operational?\nA heads-up: on iOS, getPurchases is not supported.  In iOS 6, receipts were introduced, which makes this implementable, but it hasn't been done yet.\n. Thank you for your contribution!\n. Thanks for the report, Yoav.  I'll look into this and report back.\n. Okay, sorry\u2014re-reading your post, I caught that you are using the emulator.  It is indeed the case that this reverts to the web flow, which yields a string.  I'll submit a fix.  Thanks again!\n. Regarding the mobile manifest, the relevant instructions for chrome.identity are here (I assume you saw that in order to know what to do), but I'm not sure if we have general documentation for manifest.mobile.json.  Documentation for that file is provided in the specific plugins that require it.\nIf a general manifest.mobile.json documentation page would be useful, we will take that as feedback and add it to our list. :)\n. I have pushed a fix.  It will be available in the published plugin during the next cca release.\nI am thrilled to hear that you were able to get identity working (aside from this hiccup).\nThanks again, Yoav, for reporting this.  Please keep the feedback coming. :)\n. Hi!  Thanks a lot for reporting this.\nI've fixed the amended getAuthToken callback parameters in this commit.\nAs for the redirect URI mismatch, the bundle identifier should be org.chromium.apps.ChromeAppsApiTests.dev.  Can you ensure that this is correct in your app?\nThanks again!\n. Ah, you beat me to it.\nAs for managing multiple client IDs, please look here.\nAs a side note: On iOS devices that have the G+ app installed, the API should use that.  If the device does not have G+ installed, it falls back to using a browser flow.\n. Thanks for the issue!  I'll look into this.\nThis likely isn't the problem, but it's worth noting: the https://www.googleapis.com/auth/userinfo.email scope is deprecated in favor of email, and will no longer be supported as of September 1st.\n. Which endpoint are you using?\nUsing the email scope and the endpoint https://www.googleapis.com/oauth2/v3/userinfo, I'm able to access the email address.  (It also works for me for v1 and v2.)\n. Oh, interesting.  I think the tokeninfo endpoint is intended just to check the status and details of a given token.  I notice it does yield an email address, but I don't think that's the best approach.\nDoes using the userinfo endpoint I suggested work for you?\nIt is odd that you are seeing one scope in the permission request dialog but not the other.  Using the email scope, I get asked permission to \"know who you are on Google\".  Are you seeing one scope but not the other every time?  Does the app show the native account chooser?\nYou shouldn't need to add anything to the mobile manifest for Android.  In the oauth2 section of my manifest, I literally have just:\n\"oauth2\": {\n    \"scopes\": [\n        \"email\"\n    ]\n}\n. What response text do you get when trying to access the user's email using https://www.googleapis.com/oauth2/v3/userinfo?\n. The first time I ran it after adding the https://mail.google.com/ scope, I was asked permission for only that scope, because I had already granted access to the email scope.  I still got my email from the userinfo endpoint.\nI then tried the tokeninfo endpoint, and that worked as well.  I'll see what else I can come up with.  Please let me know what response you get when you try tomorrow.  Thanks!\n. On Android, you can specify accountHint in the details argument of calls to getAuthToken.  For example:\nvar details = { interactive: true, accountHint: 'email@address.com' };\nvar callback = function(token, account) { ... };\nchrome.identity.getAuthToken(details, callback);\nThis will bypass the account chooser dialog.  Note that the callback has an account that can be stored for this purpose.\nThanks for the issue!  Let us know if this solution is unsatisfactory.\n. The accountHint and account callback argument are both Android-only.\nOn Desktop, account management is handled by Chrome.  Users can log in and out in Chrome, and so apps typically don't have to worry about account management.\nOn Android, there is no such thing, and the identity API doesn't provide functions that allow us to log users out (since it's not needed on Desktop).  So we added accountHint to allow developers to cache emails themselves as a form of basic account management.\nUnfortunately, yes, getAuthToken doesn't like other things being passed in its details.  This function will allow you to determine your platform; on Android apps created using CCA, it will return cordova-android.\n. Thanks for the heads up on getAccounts.  This appears to be a new addition to the API.  I can have it added this afternoon.\n. We certainly agree that it would be nice to obtain a user's email address\u2014we would love for the account argument on the getAuthToken callback to exist on desktop as well. :)\nThank you for your feedback!\n. Hi!  Just letting you know I'm back and looking into this.\n. Hi there,\nThe following error is crashing identity:\njava.lang.IllegalStateException: The meta-data tag in your app's AndroidManifest.xml does not have the right value.  Expected 4323000 but found 4323030.  You must have the following declaration within the <application> element:     <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\nThe declaration it suggests is present in the AndroidManifest; it's just injecting the wrong value for some reason.  Still looking into that.\nIn the meantime, this is not a long-term fix, but if it's blocking your development, you can hardcode the expected value into AndroidManifest.xml as follows:\n<meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\ninto\n<meta-data android:name=\"com.google.android.gms.version\" android:value=\"4323000\" />\nI'll continue looking into fixing this for good.\n. Hi again,\nThis is a problem with v16.0.0 of the Google Play Services plugin.  It is fixed for the next version of cca.\nIn the meantime, you can stick with your current workaround, or you can manually install the new version of the Google Play Services plugin as follows:\ncca plugin rm org.chromium.identity\ncca plugin add https://github.com/MobileChromeApps/google-play-services.git\ncca plugin add org.chromium.identity\nYou cannot simply remove the existing Google Play Services plugin and add the updated one, since that's forbidden due to dependencies.  So we remove identity first.\nThanks for reporting this!  Please re-open if you have any further problems (eg. if this persists with cca 0.1.1).\n. No, it wouldn't be the same problem.  Can you open another issue with the symptoms?  I'll check it out in the meantime.\n. Hi there,\nThis means you need to update your version of Google Play Services on the device.  It should show a pop-up prompting you to update it\u2014I will investigate why it crashes instead.  In the meantime, try updating Google Play Services from the Play Store.\n. Sorry for the response delay!\nI assume you've created a manifest.json to get auth working.  If you specify \"name\" or \"key\" in there, that gets encoded into an app id.  If you have neither, it still works (by encoding the empty string).\nIf you don't have an app name in your manifest, we advise adding one for this purpose. :)\nThanks for your question!\n. Thank you for the issue!  I'll take care of this this week.\n. I do think an automatic token refresh after one hour needs to be implemented.  I'll add it to my list.\n. I've added token expiration refreshment here.  Please let me know if you're still seeing undesired behavior.\nThanks for reporting this, Sam!\n. Good catch.  Until I fix this (today), you can run cca analytics disable to keep using cca.\n. Fixed here.  Thanks for finding this.\n. Thank you!\n. Resolved here.\n. I haven't been able to reproduce this.  manifest.json changes are being pushed (triggering continuous live deploy) and are active, so I don't believe the title of this issue is the source of the encountered bug.\n@jpchase, do you remember any more specifics about the symptoms of the bug you were seeing?  @clelland mentioned it might be related to chrome.storage, so it might be a bug there.\n. An update prompt was added to chrome.identity a while back; this crash is a problem with showing the dialog:\nE/AndroidRuntime(10453): java.lang.NoClassDefFoundError: com.google.android.gms.R$string\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.d(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.a(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(Unknown Source)\nE/AndroidRuntime(10453): at com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(Unknown Source)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity.launchAccountChooserAndCallback(ChromeIdentity.java:107)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity.access$900(ChromeIdentity.java:31)\nE/AndroidRuntime(10453): at org.chromium.ChromeIdentity$2.run(ChromeIdentity.java:201)\nE/AndroidRuntime(10453): at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\nE/AndroidRuntime(10453): at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\nE/AndroidRuntime(10453): at java.lang.Thread.run(Thread.java:856)\n. That is probably it, yeah.  I think we can reproduce it just by having an old version of Play Services on the device.  When attempting to prompt the user to update, it should crash.\n. My mistake, sorry Rui.  Please do.\n. This is added.  I updated the README with a caveat.\n. This is implemented on Android in the new release of the chrome.idle plugin, using the \"locked\" state.  Thanks for the issue!\n. Hi there,\nIf you create an app using cca create MyApp, you'll end up with a HelloWorld app that works on iOS.  You can run it with cca run ios.\nYou can create an app with existing assets using cca create MyApp --copy-from=[path-to-www].  Some sample apps can be found here.\nHope this helps!\n. It's true that apps created using CCA use Crosswalk by default.\nLollipop does introduce an updatable webview, but adoption takes a while.  Many devices will continue to use older versions of Android (and consequently, older webviews) for the foreseeable future.  So, for consistency, we use Crosswalk.\nCrosswalk.md does, however, describe a manifest option to use the system webview (at the end of the Overview section).\n. Hi Andrew,\nThanks for the issue.\nThe geolocation plugin is supported by Cordova, so JIRA might be a better place for this issue.\nThat said, it looks like the geolocation plugin isn't supported on Android anymore.\niOS is still supported, however, so I would recommend firing up Web Inspector in Safari and debugging from there to see why the callbacks aren't being fired.\n. Thank you very much!\n. Hi there,\nThe quickest way would be to update (or create) the config file at ~/.cca/config, adding the following:\n{\n    \"analytics\": {\n        \"isAllowed\": false,\n    }\n}\nThat should do it.\nAlternatively, you could update the file you linked to return Q(false); on line 59 in the file you linked, analytics-loader.js.\nI think either should work.  Let us know if you're still running into problems.  Thanks!\n. Hah, good call. Forgot about that.\nOn Mar 30, 2015 6:18 PM, \"Mark Koudritsky\" notifications@github.com wrote:\n\nYou can also run cca analytics disable as the first command after\ninstalling cca. This will create the ~/.cca/config file Max mentioned.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/537#issuecomment-87856259\n.\n. \n",
    "gapipro": "Yes I am referring to app name in manifest.json. \nIt doesn't remove whitespace even on latest dev branch. \n{\n   \"app\": {\n      \"background\": {\n         \"scripts\": [\"background.js\"]\n      }\n   },\n\"icons\": {\n      \"128\": \"img/icon128.png\",\n      \"16\": \"img/icon16.png\",\n      \"24\": \"img/icon24.png\",\n      \"32\": \"img/icon32.png\",\n      \"48\": \"img/icon48.png\"\n   },\n   \"description\": \"Best way to manage your YouTube subscriptions perfectly!\",\n   \"name\": \"YouTube Video Deck Dev\",\n   \"minimum_chrome_version\": \"29\",\n   \"permissions\": [ \"storage\", \"webview\", \"identity\", \"notifications\",\"unlimitedStorage\",  \"https://.ytimg.com/\" ,\"https://.videodeck.net/\" , \"http://gdata.youtube.com/\",\"https://apis.google.com/\"],\n   \"version\": \"0.8.7.3\",\n   \"sandbox\": {\n    \"pages\": [\"ga/embedded_ga_host.html\"]\n   },\n   \"manifest_version\":2\n}\n. Yes I am referring to app name in manifest.json. \nIt doesn't remove whitespace even on latest dev branch. \n{\n   \"app\": {\n      \"background\": {\n         \"scripts\": [\"background.js\"]\n      }\n   },\n\"icons\": {\n      \"128\": \"img/icon128.png\",\n      \"16\": \"img/icon16.png\",\n      \"24\": \"img/icon24.png\",\n      \"32\": \"img/icon32.png\",\n      \"48\": \"img/icon48.png\"\n   },\n   \"description\": \"Best way to manage your YouTube subscriptions perfectly!\",\n   \"name\": \"YouTube Video Deck Dev\",\n   \"minimum_chrome_version\": \"29\",\n   \"permissions\": [ \"storage\", \"webview\", \"identity\", \"notifications\",\"unlimitedStorage\",  \"https://.ytimg.com/\" ,\"https://.videodeck.net/\" , \"http://gdata.youtube.com/\",\"https://apis.google.com/\"],\n   \"version\": \"0.8.7.3\",\n   \"sandbox\": {\n    \"pages\": [\"ga/embedded_ga_host.html\"]\n   },\n   \"manifest_version\":2\n}\n. ",
    "shepheb": "LGTM. Once the CLI change is submitted, I can merge this.\n. There's several layers of startup lag here. The Mobile Chrome Apps wrapper needs time to do its own bootstrap dance, fetching and loading many JS files, loading the app's background page, running it, opening the window, then fetching and loading the <script>s from your app. Only then does Angular's bootstrap begin: Angular parses the DOM, then it inserts the binding, and finally you see everything loaded properly.\nThere's not really a way around any of that startup lag, unfortunately. A few things I can suggest:\n- Don't fetch Angular from the CDN; use a local copy. Bundling it into the app and fetching from file:///... is much faster than hitting the CDN. That will hopefully remove ~100ms from your startup.\n- Use the minifed angular.min.js. That goes for all apps all the time, unless you're hacking on Angular itself.\n- Use ng-cloak to avoid a visible \"Hello, {{ name }}\" before the page has loaded.\nGlad it's working for you! Also, be aware of the fastclick problem on mobile, and use either angular-touch.min.js from Angular core or fastclick.js. Currently the latter is more reliable.\n. Hm, if the binding itself is slow that's very strange.\nI've used Angular in these mobile Chrome apps extensively and haven't had any problems. It's possible that the soft keyboard is causing some of the trouble. Try some other kinds of bindings, like clicking a button to increment a counter, that sort of thing. I'm curious what's so slow.\n. Hm, interesting results. I would definitely stick with the latest version of Angular, there were quite a few bugs that needed hammering out after 1.2.0. Is the Note 2's processor underpowered, or were you perhaps running in a low-battery, power-saving mode that would cut the CPU speed?\nI've tested in the past mostly on Galaxy Nexus, Nexus 7 (2013), Nexus 10 and HTC One. The Galaxy Nexus is easily the weakest of those, and it performs well with Angular 1.1.3ish.\n. Glad to help.\nI'm going to close this issue, since there's nothing specific wrong here. If you have acute performance problems, or bugs/confusion, feel free to file another issue.\n. I have considerable Angular experience on desktop, and some experience on mobile and in Cordova and MCA apps.\nSee for example this project which is a Cordova app using Angular. It's fast and working well.\n. No worries, not offended. I meant with my previous comment to address the speed: I have used Angular a bunch on mobile and have found it definitely slower than desktop, but also much faster than what you're seeing, therefore something is weird about your code/device/browser/environment.\nOne very important point, before we go any further, is about the WebView on Android. On all versions of Android prior to 4.4 (KitKat), the WebView is based on the old Android browser, not Chrome for Android. The old WebView is slow, buggy, and doesn't support any of the nice features of Chrome.\nThat said, it still runs Angular apps fine, and without the slowness you've been seeing. If I'm reading your comment correctly, you said that you've got similar slowness in Chrome as well as in the mobile Chrome app? If that's true, it suggests that something about the device is the trouble here, since Chrome and the WebView are using different Javascript backends, different renderers, and so on.\nWe haven't tested Angular or mobile Chrome apps on all that many different devices. Both are built by Googlers, which means we tend to have Nexus devices (see my list a while ago of devices I've tested Angular with on mobile).\n. Mobile chrome apps are based on Apache Cordova, and both are forced to use\nthe system webview. (This is true even when you have Chrome for Android\ninstalled.) Believe us, we would much rather be using Chrome than the old\nAndroid webview. From KitKat 4.4, the webview is based on Chrome, and these\nproblems go away.\nWe mentioned indexed db because that's been the most-missed feature; you're\nquite right that there's lots more missing from the old webview. It\nwouldn't hurt to be more explicit about that in the documentation.\nOn Wednesday, January 29, 2014 5:15:25 AM, Shachar Zohar \nnotifications@github.com wrote:\n\nI agree, Are there intentions to implement using Chrome?\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/53#issuecomment-33571499\n.\n. iOS Webview is nowhere near as buggy, slow, and lacking in support as the old Android Webview, but yeah, it's not going to be Chrome any time soon. Definitely take a look at http://caniuse.com and the iOS Safari and Android Browser columns for any features you're hoping to use. As I said, IndexedDB is easily the most high-profile gap.\n. Premature optimization and all that. It's unlikely anyone will be trying to\nturn their phone into a high-throughput server. If someone has a use case\nfor it (or a patch!) then we can look into it; otherwise the current\nimplementation is sufficient, modulo bugs.\n\nWhat you described sounds like a bug. It shouldn't be blocking the\nJavascript for longer than a couple hundreds milliseconds while setting up.\nWhich platform is this on?\nBraden\nOn Sat Feb 01 2014 at 2:18:39 AM, Kyle Graehl notifications@github.com\nwrote:\n\nSo calling .connect on a TCP socket ends up blocking the javascript event\nloop until it eventually returns with -1000 (strange return code)\nThen looking at the code some more, I am seeing that there are really just\na few threads; a reading thread and a writing thread, and they just block\non the head of the queue. It doesn't do any fancier select/poll mechanism.\nHas anybody thought about transitioning ChromeSocket.java to use evented\ni/o? The current implementation just won't perform anywhere near what\ndesktop chrome will...\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/69\n.\n. The new generation of Chrome packaged apps are called \"packaged apps v2\", because there were old \"hosted\" apps (glorified bookmarks) and \"packaged\" apps (local file bundles, as now), but the APIs and life cycle have been redone for the new v2 packaged apps.\n\nWe should make it clear that we only support the latter.\n. This is definitely porting a desktop-style Chrome app so it will run on\nAndroid or iOS. There are two main parts of this: first, some hackery to\nsimulate the Chrome apps lifecycle: installation, launching, background\npage, chrome.runtime.app.createWindow, etc.; second, implementations of\nsome of the chrome.* APIs (sockets, identity, fileSystem, syncFileSystem,\nstorage, and others).\nAs part of the first goal, simulating the environment of Chrome Apps on\ndesktop means that we don't scroll by default. If you want to override it\nwith overflow: scroll, iScroll, or one of the other options, then you\ncertainly can.\nIf you're not using any of the Chrome APIs, you'll want either a mobile web\napp, or a normal Cordova app.\nBraden\nOn Mon Feb 10 2014 at 9:30:19 PM, Grady notifications@github.com wrote:\n\nI follow now, I was thinking more along the lines of Android apps which\nwould want scrolling. Am I thinking about the implantation of this project\nwrong?\nI am thinking that instead of messing around with java you could easily\ncreate the apps using this project and it would be able to do some of the\nfunctionality. For example, a music/video site could easily create an app\nusing this project with their current APIs and source instead of having to\ndo the work to properly populate and link using Java. In this case you\nwould want to scroll.\nIf I understand what you are saying is this is more for taking a desktop\nchrome app and porting it to Android/IOS using the same backend and just a\nnew UI to display the content that is mobile focused?\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721099\n.\n. LGTM. Once the CLI change is submitted, I can merge this.\n. There's several layers of startup lag here. The Mobile Chrome Apps wrapper needs time to do its own bootstrap dance, fetching and loading many JS files, loading the app's background page, running it, opening the window, then fetching and loading the <script>s from your app. Only then does Angular's bootstrap begin: Angular parses the DOM, then it inserts the binding, and finally you see everything loaded properly.\n\nThere's not really a way around any of that startup lag, unfortunately. A few things I can suggest:\n- Don't fetch Angular from the CDN; use a local copy. Bundling it into the app and fetching from file:///... is much faster than hitting the CDN. That will hopefully remove ~100ms from your startup.\n- Use the minifed angular.min.js. That goes for all apps all the time, unless you're hacking on Angular itself.\n- Use ng-cloak to avoid a visible \"Hello, {{ name }}\" before the page has loaded.\nGlad it's working for you! Also, be aware of the fastclick problem on mobile, and use either angular-touch.min.js from Angular core or fastclick.js. Currently the latter is more reliable.\n. Hm, if the binding itself is slow that's very strange.\nI've used Angular in these mobile Chrome apps extensively and haven't had any problems. It's possible that the soft keyboard is causing some of the trouble. Try some other kinds of bindings, like clicking a button to increment a counter, that sort of thing. I'm curious what's so slow.\n. Hm, interesting results. I would definitely stick with the latest version of Angular, there were quite a few bugs that needed hammering out after 1.2.0. Is the Note 2's processor underpowered, or were you perhaps running in a low-battery, power-saving mode that would cut the CPU speed?\nI've tested in the past mostly on Galaxy Nexus, Nexus 7 (2013), Nexus 10 and HTC One. The Galaxy Nexus is easily the weakest of those, and it performs well with Angular 1.1.3ish.\n. Glad to help.\nI'm going to close this issue, since there's nothing specific wrong here. If you have acute performance problems, or bugs/confusion, feel free to file another issue.\n. I have considerable Angular experience on desktop, and some experience on mobile and in Cordova and MCA apps.\nSee for example this project which is a Cordova app using Angular. It's fast and working well.\n. No worries, not offended. I meant with my previous comment to address the speed: I have used Angular a bunch on mobile and have found it definitely slower than desktop, but also much faster than what you're seeing, therefore something is weird about your code/device/browser/environment.\nOne very important point, before we go any further, is about the WebView on Android. On all versions of Android prior to 4.4 (KitKat), the WebView is based on the old Android browser, not Chrome for Android. The old WebView is slow, buggy, and doesn't support any of the nice features of Chrome.\nThat said, it still runs Angular apps fine, and without the slowness you've been seeing. If I'm reading your comment correctly, you said that you've got similar slowness in Chrome as well as in the mobile Chrome app? If that's true, it suggests that something about the device is the trouble here, since Chrome and the WebView are using different Javascript backends, different renderers, and so on.\nWe haven't tested Angular or mobile Chrome apps on all that many different devices. Both are built by Googlers, which means we tend to have Nexus devices (see my list a while ago of devices I've tested Angular with on mobile).\n. Mobile chrome apps are based on Apache Cordova, and both are forced to use\nthe system webview. (This is true even when you have Chrome for Android\ninstalled.) Believe us, we would much rather be using Chrome than the old\nAndroid webview. From KitKat 4.4, the webview is based on Chrome, and these\nproblems go away.\nWe mentioned indexed db because that's been the most-missed feature; you're\nquite right that there's lots more missing from the old webview. It\nwouldn't hurt to be more explicit about that in the documentation.\nOn Wednesday, January 29, 2014 5:15:25 AM, Shachar Zohar \nnotifications@github.com wrote:\n\nI agree, Are there intentions to implement using Chrome?\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/53#issuecomment-33571499\n.\n. iOS Webview is nowhere near as buggy, slow, and lacking in support as the old Android Webview, but yeah, it's not going to be Chrome any time soon. Definitely take a look at http://caniuse.com and the iOS Safari and Android Browser columns for any features you're hoping to use. As I said, IndexedDB is easily the most high-profile gap.\n. Premature optimization and all that. It's unlikely anyone will be trying to\nturn their phone into a high-throughput server. If someone has a use case\nfor it (or a patch!) then we can look into it; otherwise the current\nimplementation is sufficient, modulo bugs.\n\nWhat you described sounds like a bug. It shouldn't be blocking the\nJavascript for longer than a couple hundreds milliseconds while setting up.\nWhich platform is this on?\nBraden\nOn Sat Feb 01 2014 at 2:18:39 AM, Kyle Graehl notifications@github.com\nwrote:\n\nSo calling .connect on a TCP socket ends up blocking the javascript event\nloop until it eventually returns with -1000 (strange return code)\nThen looking at the code some more, I am seeing that there are really just\na few threads; a reading thread and a writing thread, and they just block\non the head of the queue. It doesn't do any fancier select/poll mechanism.\nHas anybody thought about transitioning ChromeSocket.java to use evented\ni/o? The current implementation just won't perform anywhere near what\ndesktop chrome will...\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/69\n.\n. The new generation of Chrome packaged apps are called \"packaged apps v2\", because there were old \"hosted\" apps (glorified bookmarks) and \"packaged\" apps (local file bundles, as now), but the APIs and life cycle have been redone for the new v2 packaged apps.\n\nWe should make it clear that we only support the latter.\n. This is definitely porting a desktop-style Chrome app so it will run on\nAndroid or iOS. There are two main parts of this: first, some hackery to\nsimulate the Chrome apps lifecycle: installation, launching, background\npage, chrome.runtime.app.createWindow, etc.; second, implementations of\nsome of the chrome.* APIs (sockets, identity, fileSystem, syncFileSystem,\nstorage, and others).\nAs part of the first goal, simulating the environment of Chrome Apps on\ndesktop means that we don't scroll by default. If you want to override it\nwith overflow: scroll, iScroll, or one of the other options, then you\ncertainly can.\nIf you're not using any of the Chrome APIs, you'll want either a mobile web\napp, or a normal Cordova app.\nBraden\nOn Mon Feb 10 2014 at 9:30:19 PM, Grady notifications@github.com wrote:\n\nI follow now, I was thinking more along the lines of Android apps which\nwould want scrolling. Am I thinking about the implantation of this project\nwrong?\nI am thinking that instead of messing around with java you could easily\ncreate the apps using this project and it would be able to do some of the\nfunctionality. For example, a music/video site could easily create an app\nusing this project with their current APIs and source instead of having to\ndo the work to properly populate and link using Java. In this case you\nwould want to scroll.\nIf I understand what you are saying is this is more for taking a desktop\nchrome app and porting it to Android/IOS using the same backend and just a\nnew UI to display the content that is mobile focused?\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/90#issuecomment-34721099\n.\n. \n",
    "drkemp": "Cannot re-create this issue. Closing\n. Officially we don't support APIs below 14 (android 4), so its possible that\n10 has issues that we don't see in testing.\nCould you try it out with something 14+?\nOn Wed, Dec 4, 2013 at 10:42 AM, Paolo Montrasio\nnotifications@github.comwrote:\n\nI build the hello world application in Eclipse, started up an emulator\n(Nexus S, Google API 10) and Run As Android Application. The app icon\nappears in the emulator's app list, it starts and immediately displays a\ndialog with the error \"The protocol is not supported.\nchrome-extension://undefined/chromeapp.html\".\nWhat am I missing?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/35\n.\n. The current API support is tracked in the document at:\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/APIStatus.md\nSome of the samples may not work on all platforms.\nIf you are having trouble with a specific one, please let us know which\nsample app it is.\nOn Thu, Jan 30, 2014 at 7:05 AM, MrYogi notifications@github.com wrote:\n\ni tried to run samples from\nhttps://github.com/MobileChromeApps/mobile-chrome-app-samples\nsamples are running on my android device but i am getting white blank\nscreen.\ni am able to load page successfully only in hello world sample.\nwhat are api supported?\nany sample from the link i may able to run successfully and not just white\npage on device?\nthanks!\nmy device:\nnexus4 running on 4.4.2. stock.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/61\n.\n. I just verified that the todomvc at\n\nhttps://github.com/GoogleChrome/chrome-app-samples.git\nworks on Android 4.4.2 on a Nexus 7.\nI am using the latest cca installed via npm\nCan you verify that you have the latest tools, and where you obtained the\nsample app from?\nOn Thu, Jan 30, 2014 at 8:24 AM, MrYogi notifications@github.com wrote:\n\ni tried many,\nfor instance todomvc sample gives me blank white screen\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/61#issuecomment-33686941\n.\n. I have the original html - but can't share that publicly. The tags involved were  br, button,input,textarea,h3 .\nHowever, I believe that the core problem is that the parser simply sweeps everything not in the body tag into the head.\n. I agree that it might make sense in the case where there is no copy-from or\nlink-to.\n-- but --\nit still leaves you with a silly packageId unless we make that up too.\nAnd currently the packageId source is not very discoverable.\n\nOn Tue, Mar 11, 2014 at 5:14 PM, Michal Mocny notifications@github.comwrote:\n\nHmm, thats interesting.\ncordova CLI asks for 3 arguments: Directory, packageID, and App Name.\nWhen we made cca we decided to specify the last 2 using your manifest.jsonand\nmanifest.mobile.json. If you use copy-from and link-to, I think thats\nwhat you expect. cca create MyCalendarVersion5 --copy-from=... should\nprobably not rename your app to \"MyCalendaVersion5\".\nHowever, cca create Foo, I can totally see just naming the app \"Foo\".\nWhat does the team think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/116#issuecomment-37350844\n.\n. We have not yet developed a shim for WebRTC and it is not yet supported directly in the mobile browsers we are targeting. (http://caniuse.com/#feat=rtcpeerconnection)\nHowever - we welcome pull requests :)\n. The support is added, but cca has not been released since it was added. You would need to check out the latest cca source and build it to get a version with support for gcm (or wait for the next release).\n. Looking at this issue now.\nIts actually not so much that, as the fact that in the case where the app\nisn't running, that code hasn't run at all.\nThe static method that handles the event is the first to run and has no\ncontext.\nI should have an update out soon (barring meetings etc.).\n\nOn Thu, May 1, 2014 at 8:37 AM, Guillaume Wuip notifications@github.comwrote:\n\nI've done some debug.\nThe error is fired from ChromeGcm.java line 75 :\nString activityClass = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_ACTIVITIES).activities[0].name;\ncontext is null.\nI'm not good at writing java but I understand that contextshould be\ncreated in initialize() so there probably is a problem with :\n//ChromeGcm.js line 53 :context = cordova.getActivity().getApplicationContext();\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/150#issuecomment-41906380\n.\n. A fix has been pushed. Let me know if that works for you.\n. Should have com.google.androidsupport as a dependency\n. added com.google.androidsupport as a dependency & pushed to master\n. Thanks for letting us know. WebRTC is on on the roadmap using the newest webview. We should have full support in an upcoming version. \n. Unfortunately the changes to support those permissions has not yet landed\nin 0.2.1.\nIt is on the short list though...\n\nOn Mon, Jul 21, 2014 at 11:12 AM, Fran\u00e7ois Beaufort \nnotifications@github.com wrote:\n\nI can't get the camera with cca 0.2.1-rc1.\nEven though I've defined 'videoCapture' and 'audioCapture' permission in\nmy manifest, I'm still a stream that contains only one AudioTrack and no\nVideoTrack.\nAm I missing something obvious there?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49618361\n.\n. The problem is simply permissions. cca needs to handle the manifest\npermissions and add Android permissions in the config.xml. You can manually\nfix it and move on, but it may be overwritten\n\nOn Mon, Jul 21, 2014 at 11:35 AM, Michal Mocny notifications@github.com\nwrote:\n\nI've gotten getUserMedia working using a regular html5 workflow.. is this\ndue to differences in chrome apps vs web apps?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49621739\n.\n. Awesome! I was just going to look at this - but I will wait.\n\nOn Tue, Jul 22, 2014 at 9:03 AM, Michal Mocny notifications@github.com\nwrote:\n\nReopening until we actually add the permissions to native.\n@beaufortfrancois https://github.com/beaufortfrancois has volunteered\nto submit a PR!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49735349\n.\n. onConnect and onMessage are not implemented currently. The mapping to a general mobile environment is not clear.\n\nCan you share the use case you have for these? \n. Thanks for the PR!\nIt has been merged\nOn Wed, Jul 23, 2014 at 9:52 AM, Fran\u00e7ois Beaufort <notifications@github.com\n\nwrote:\nFixed!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/218#issuecomment-49876069\n.\n. sample application:\n\u2014- index.html \u2014\u2014\ninclude the  script src=\"index.js\"\n\n\u2014\u2014 index.js \u2014-\nnavigator.getUserMedia = ( navigator.getUserMedia ||\n                       navigator.webkitGetUserMedia ||\n                       navigator.mozGetUserMedia ||\n                       navigator.msGetUserMedia);\nif (navigator.getUserMedia) {\n   navigator.getUserMedia (\n      {\n         video: true,\n         audio: true\n      },\n```\n  // successCallback\n  function(localMediaStream) {\n     var video = document.querySelector('video');\n     try {\n         video.src = window.URL.createObjectURL(localMediaStream);\n     } catch (error) {\n         video.src = localMediaStream;\n     }\n setTimeout(function() {\n    video.play();\n }, 1000);\n\n},\n// errorCallback\n  function(err) {\n     console.log(\"The following error occurred: \" + err);\n  }\n```\n);\n} else {\n   console.log(\"getUserMedia not supported\");\n}\n\u2014 bckground.js \u2014\nchrome.app.runtime.onLaunched.addListener(function() {\n  chrome.app.window.create('index.html', {\n    width: 244,\n    height: 380,\n  });\n});\n\u2014 manifest.json \u2014\n{\n  \"name\": \"YOUR APP HERE\",\n  \"description\": \"DESCRIPTION HERE\",\n  \"manifest_version\": 2,\n  \"minimum_chrome_version\": \"23\",\n  \"version\": \"0.1.1\",\n  \"offline_enabled\": true,\n  \"icons\": {\n    \"16\": \"assets/icons/icon16.png\",\n    \"48\": \"assets/icons/icon48.png\",\n    \"128\": \"assets/icons/icon128.png\"\n  },\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"background.js\"]\n    }\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\",\n    \"audioCapture\"\n  ]\n}\n. Cannot re-create this issue. Closing\n. Officially we don't support APIs below 14 (android 4), so its possible that\n10 has issues that we don't see in testing.\nCould you try it out with something 14+?\nOn Wed, Dec 4, 2013 at 10:42 AM, Paolo Montrasio\nnotifications@github.comwrote:\n\nI build the hello world application in Eclipse, started up an emulator\n(Nexus S, Google API 10) and Run As Android Application. The app icon\nappears in the emulator's app list, it starts and immediately displays a\ndialog with the error \"The protocol is not supported.\nchrome-extension://undefined/chromeapp.html\".\nWhat am I missing?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/35\n.\n. The current API support is tracked in the document at:\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/APIStatus.md\nSome of the samples may not work on all platforms.\nIf you are having trouble with a specific one, please let us know which\nsample app it is.\nOn Thu, Jan 30, 2014 at 7:05 AM, MrYogi notifications@github.com wrote:\n\ni tried to run samples from\nhttps://github.com/MobileChromeApps/mobile-chrome-app-samples\nsamples are running on my android device but i am getting white blank\nscreen.\ni am able to load page successfully only in hello world sample.\nwhat are api supported?\nany sample from the link i may able to run successfully and not just white\npage on device?\nthanks!\nmy device:\nnexus4 running on 4.4.2. stock.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/61\n.\n. I just verified that the todomvc at\n\nhttps://github.com/GoogleChrome/chrome-app-samples.git\nworks on Android 4.4.2 on a Nexus 7.\nI am using the latest cca installed via npm\nCan you verify that you have the latest tools, and where you obtained the\nsample app from?\nOn Thu, Jan 30, 2014 at 8:24 AM, MrYogi notifications@github.com wrote:\n\ni tried many,\nfor instance todomvc sample gives me blank white screen\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/61#issuecomment-33686941\n.\n. I have the original html - but can't share that publicly. The tags involved were  br, button,input,textarea,h3 .\nHowever, I believe that the core problem is that the parser simply sweeps everything not in the body tag into the head.\n. I agree that it might make sense in the case where there is no copy-from or\nlink-to.\n-- but --\nit still leaves you with a silly packageId unless we make that up too.\nAnd currently the packageId source is not very discoverable.\n\nOn Tue, Mar 11, 2014 at 5:14 PM, Michal Mocny notifications@github.comwrote:\n\nHmm, thats interesting.\ncordova CLI asks for 3 arguments: Directory, packageID, and App Name.\nWhen we made cca we decided to specify the last 2 using your manifest.jsonand\nmanifest.mobile.json. If you use copy-from and link-to, I think thats\nwhat you expect. cca create MyCalendarVersion5 --copy-from=... should\nprobably not rename your app to \"MyCalendaVersion5\".\nHowever, cca create Foo, I can totally see just naming the app \"Foo\".\nWhat does the team think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/116#issuecomment-37350844\n.\n. We have not yet developed a shim for WebRTC and it is not yet supported directly in the mobile browsers we are targeting. (http://caniuse.com/#feat=rtcpeerconnection)\nHowever - we welcome pull requests :)\n. The support is added, but cca has not been released since it was added. You would need to check out the latest cca source and build it to get a version with support for gcm (or wait for the next release).\n. Looking at this issue now.\nIts actually not so much that, as the fact that in the case where the app\nisn't running, that code hasn't run at all.\nThe static method that handles the event is the first to run and has no\ncontext.\nI should have an update out soon (barring meetings etc.).\n\nOn Thu, May 1, 2014 at 8:37 AM, Guillaume Wuip notifications@github.comwrote:\n\nI've done some debug.\nThe error is fired from ChromeGcm.java line 75 :\nString activityClass = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_ACTIVITIES).activities[0].name;\ncontext is null.\nI'm not good at writing java but I understand that contextshould be\ncreated in initialize() so there probably is a problem with :\n//ChromeGcm.js line 53 :context = cordova.getActivity().getApplicationContext();\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/150#issuecomment-41906380\n.\n. A fix has been pushed. Let me know if that works for you.\n. Should have com.google.androidsupport as a dependency\n. added com.google.androidsupport as a dependency & pushed to master\n. Thanks for letting us know. WebRTC is on on the roadmap using the newest webview. We should have full support in an upcoming version. \n. Unfortunately the changes to support those permissions has not yet landed\nin 0.2.1.\nIt is on the short list though...\n\nOn Mon, Jul 21, 2014 at 11:12 AM, Fran\u00e7ois Beaufort \nnotifications@github.com wrote:\n\nI can't get the camera with cca 0.2.1-rc1.\nEven though I've defined 'videoCapture' and 'audioCapture' permission in\nmy manifest, I'm still a stream that contains only one AudioTrack and no\nVideoTrack.\nAm I missing something obvious there?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49618361\n.\n. The problem is simply permissions. cca needs to handle the manifest\npermissions and add Android permissions in the config.xml. You can manually\nfix it and move on, but it may be overwritten\n\nOn Mon, Jul 21, 2014 at 11:35 AM, Michal Mocny notifications@github.com\nwrote:\n\nI've gotten getUserMedia working using a regular html5 workflow.. is this\ndue to differences in chrome apps vs web apps?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49621739\n.\n. Awesome! I was just going to look at this - but I will wait.\n\nOn Tue, Jul 22, 2014 at 9:03 AM, Michal Mocny notifications@github.com\nwrote:\n\nReopening until we actually add the permissions to native.\n@beaufortfrancois https://github.com/beaufortfrancois has volunteered\nto submit a PR!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49735349\n.\n. onConnect and onMessage are not implemented currently. The mapping to a general mobile environment is not clear.\n\nCan you share the use case you have for these? \n. Thanks for the PR!\nIt has been merged\nOn Wed, Jul 23, 2014 at 9:52 AM, Fran\u00e7ois Beaufort <notifications@github.com\n\nwrote:\nFixed!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/218#issuecomment-49876069\n.\n. sample application:\n\u2014- index.html \u2014\u2014\ninclude the  script src=\"index.js\"\n\n\u2014\u2014 index.js \u2014-\nnavigator.getUserMedia = ( navigator.getUserMedia ||\n                       navigator.webkitGetUserMedia ||\n                       navigator.mozGetUserMedia ||\n                       navigator.msGetUserMedia);\nif (navigator.getUserMedia) {\n   navigator.getUserMedia (\n      {\n         video: true,\n         audio: true\n      },\n```\n  // successCallback\n  function(localMediaStream) {\n     var video = document.querySelector('video');\n     try {\n         video.src = window.URL.createObjectURL(localMediaStream);\n     } catch (error) {\n         video.src = localMediaStream;\n     }\n setTimeout(function() {\n    video.play();\n }, 1000);\n\n},\n// errorCallback\n  function(err) {\n     console.log(\"The following error occurred: \" + err);\n  }\n```\n);\n} else {\n   console.log(\"getUserMedia not supported\");\n}\n\u2014 bckground.js \u2014\nchrome.app.runtime.onLaunched.addListener(function() {\n  chrome.app.window.create('index.html', {\n    width: 244,\n    height: 380,\n  });\n});\n\u2014 manifest.json \u2014\n{\n  \"name\": \"YOUR APP HERE\",\n  \"description\": \"DESCRIPTION HERE\",\n  \"manifest_version\": 2,\n  \"minimum_chrome_version\": \"23\",\n  \"version\": \"0.1.1\",\n  \"offline_enabled\": true,\n  \"icons\": {\n    \"16\": \"assets/icons/icon16.png\",\n    \"48\": \"assets/icons/icon48.png\",\n    \"128\": \"assets/icons/icon128.png\"\n  },\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"background.js\"]\n    }\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\",\n    \"audioCapture\"\n  ]\n}\n. ",
    "kamrik": "Oops, conflinct with a commit from this morning. Closing this pull request, will rebase and create it afresh.\n. This is the squashed version of\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/29\n. I did changed the docs in this commit https://github.com/MobileChromeApps/mobile-chrome-apps/commit/a82dab7f0962c4d839345eb064fd2ced4b327aa2\nPlease tell me if I missed something.\n. I thought about it for a while when committing that change, but decided that just \"mca\" is less confusing than either  \"path/to/mca/mca\" or just \"path/to/mca\".\nThanks.\n. It's a bug in cordova-lib, was fixed here a couple of days ago:\nhttps://git-wip-us.apache.org/repos/asf?p=cordova-lib.git;a=commit;h=86f097f2bc\n. I'm not sure what's the status of the new unified hooks, a pull request with them by @sgrebnov is open for quite some time now: https://github.com/apache/cordova-lib/pull/55\nBut right now, if you just register a handler with the hook name as an event handler, it should work:\ncordovaLib.events.on('before_prepare', something_callable);\n. I was thinking about it. If we register the hooks from within cca.js we loose the possibility to use cordova executable, i.e. \"cordova prepare\" will not work for cca projects. But if we are ok with that, then pre-prepare doesn't need to be a hook at all, we will have to just run it before calling into any of the commands that do prepare, this will leave only post-prepare as an event handler.\n. Looking into how to fix this.\nThis is a problem with how we check whether the intended project dir is not contained inside the www template (to prevent infinite recursive copy). For Windows it breaks if the dirs are on different disks. The same command would probably work ok if run from a dir on drive C:.\n. Upgrading also installs both android and ios even if the original app only had one platform installed. This is probably not the desired behavior - changing.\n. Some prep work here https://github.com/MobileChromeApps/mobile-chrome-apps/commit/97ab08ee9679e22f5de293bff356a00a873ff9d7\n. Looks like GitHub just doesn't display the line cause it's an HTML script tag :)\nAnyway, it's the line importing the gcm test with src=\"tests/auto/test.chrome.gcm.js\"\n. I vaguely remember that logic for this was first added to CCA and then to cordova-lib. Looks like those are two separate code paths now. As Andrew said, we should change CCA to set those values in config.xml rather than directly in AndroidManifest.xml and ProjectName-Info.plist.\nLooking at this.\nCCA \nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/post-prepare.js#L236\ncordova-lib\nhttps://github.com/apache/cordova-lib/blob/master/cordova-lib/src/cordova/metadata/android_parser.js#L230\n. I haven't seen any issues with the installed APKs. But during build process there were issues with plugins that have capital letters in their ID, but you already worked around those problems. Most of the chrome plugins were installed from a local directory until recently. But then we moved them to the registry. The registry doesn't take upper case for IDs so all references inside CCA were changed to lower case, but the plugins themselves can sometimes still have upper case IDs in their plugin.xml (which works ok except when it was a dependency ID). I think it was solved recently but not yet published. Anyway, the repeated re-installation of those plugins didn't affect execution as far as I know.\nOne thing I would suggest to try, is use the cca version from git. In that case the plugins will be installed from the local copy as they did before. Please tell us if this helps.\n. Try removing the plugins dir and running cca prepare again. It's related to upper/lower case bug in plugin IDs we are trying to fix. See #310\n. Not sure, it might, I don't really see how plugins with both capitalizations ended up in a a project. cca prepare should try to install the new lower case version when the older capitalized is in there.\n. It's already in. Probably forgot to close the pull request.\n. If you already use grunt or gulp, another alternative to hooks is to run\ncca from within the grunt/gulp file.\nHere is an example with gulp\nhttps://github.com/kamrik/GulpCCA\nA short presentation about it is here http://kamrik.org/GulpCordova\n. This seems to be related to CFBundleIcons not found in *-Info.plist file.\n. It was overwritten in the post-prepare hook. The following commit recently changed it and added the option to set minSdkVersion and targetSdkVersion in manifetst.mobile.json\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/0fba4f6becd9f4153fc8a91eb5dc6738bdaf0e80\ncca 0.4.4 that includes it was published today under rc tag (not yet well tested) use npm install cca@rc to get it.\n. Usually this means that the previous attempt to upgrade didn't finish successfully. Try running cca upgrade and see if it shows any errors. \n. You can also run cca analytics disable as the first command after installing cca. This will create the ~/.cca/config file Max mentioned.\n. One option I would try is to go without building your own box, use the stock Android box they provide and have you app list cca as one of its' npm deps.\nI experimented with Gulp based workflow for cca apps where cca is an npm dependency of the app here: https://github.com/kamrik/GulpCCA\nThis is somewhat half baked, though.\n. Oops, conflinct with a commit from this morning. Closing this pull request, will rebase and create it afresh.\n. This is the squashed version of\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/29\n. I did changed the docs in this commit https://github.com/MobileChromeApps/mobile-chrome-apps/commit/a82dab7f0962c4d839345eb064fd2ced4b327aa2\nPlease tell me if I missed something.\n. I thought about it for a while when committing that change, but decided that just \"mca\" is less confusing than either  \"path/to/mca/mca\" or just \"path/to/mca\".\nThanks.\n. It's a bug in cordova-lib, was fixed here a couple of days ago:\nhttps://git-wip-us.apache.org/repos/asf?p=cordova-lib.git;a=commit;h=86f097f2bc\n. I'm not sure what's the status of the new unified hooks, a pull request with them by @sgrebnov is open for quite some time now: https://github.com/apache/cordova-lib/pull/55\nBut right now, if you just register a handler with the hook name as an event handler, it should work:\ncordovaLib.events.on('before_prepare', something_callable);\n. I was thinking about it. If we register the hooks from within cca.js we loose the possibility to use cordova executable, i.e. \"cordova prepare\" will not work for cca projects. But if we are ok with that, then pre-prepare doesn't need to be a hook at all, we will have to just run it before calling into any of the commands that do prepare, this will leave only post-prepare as an event handler.\n. Looking into how to fix this.\nThis is a problem with how we check whether the intended project dir is not contained inside the www template (to prevent infinite recursive copy). For Windows it breaks if the dirs are on different disks. The same command would probably work ok if run from a dir on drive C:.\n. Upgrading also installs both android and ios even if the original app only had one platform installed. This is probably not the desired behavior - changing.\n. Some prep work here https://github.com/MobileChromeApps/mobile-chrome-apps/commit/97ab08ee9679e22f5de293bff356a00a873ff9d7\n. Looks like GitHub just doesn't display the line cause it's an HTML script tag :)\nAnyway, it's the line importing the gcm test with src=\"tests/auto/test.chrome.gcm.js\"\n. I vaguely remember that logic for this was first added to CCA and then to cordova-lib. Looks like those are two separate code paths now. As Andrew said, we should change CCA to set those values in config.xml rather than directly in AndroidManifest.xml and ProjectName-Info.plist.\nLooking at this.\nCCA \nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/post-prepare.js#L236\ncordova-lib\nhttps://github.com/apache/cordova-lib/blob/master/cordova-lib/src/cordova/metadata/android_parser.js#L230\n. I haven't seen any issues with the installed APKs. But during build process there were issues with plugins that have capital letters in their ID, but you already worked around those problems. Most of the chrome plugins were installed from a local directory until recently. But then we moved them to the registry. The registry doesn't take upper case for IDs so all references inside CCA were changed to lower case, but the plugins themselves can sometimes still have upper case IDs in their plugin.xml (which works ok except when it was a dependency ID). I think it was solved recently but not yet published. Anyway, the repeated re-installation of those plugins didn't affect execution as far as I know.\nOne thing I would suggest to try, is use the cca version from git. In that case the plugins will be installed from the local copy as they did before. Please tell us if this helps.\n. Try removing the plugins dir and running cca prepare again. It's related to upper/lower case bug in plugin IDs we are trying to fix. See #310\n. Not sure, it might, I don't really see how plugins with both capitalizations ended up in a a project. cca prepare should try to install the new lower case version when the older capitalized is in there.\n. It's already in. Probably forgot to close the pull request.\n. If you already use grunt or gulp, another alternative to hooks is to run\ncca from within the grunt/gulp file.\nHere is an example with gulp\nhttps://github.com/kamrik/GulpCCA\nA short presentation about it is here http://kamrik.org/GulpCordova\n. This seems to be related to CFBundleIcons not found in *-Info.plist file.\n. It was overwritten in the post-prepare hook. The following commit recently changed it and added the option to set minSdkVersion and targetSdkVersion in manifetst.mobile.json\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/commit/0fba4f6becd9f4153fc8a91eb5dc6738bdaf0e80\ncca 0.4.4 that includes it was published today under rc tag (not yet well tested) use npm install cca@rc to get it.\n. Usually this means that the previous attempt to upgrade didn't finish successfully. Try running cca upgrade and see if it shows any errors. \n. You can also run cca analytics disable as the first command after installing cca. This will create the ~/.cca/config file Max mentioned.\n. One option I would try is to go without building your own box, use the stock Android box they provide and have you app list cca as one of its' npm deps.\nI experimented with Gulp based workflow for cca apps where cca is an npm dependency of the app here: https://github.com/kamrik/GulpCCA\nThis is somewhat half baked, though.\n. ",
    "twcmediakit": "Looks fine - except you may want to leave the /path/to/mca (though I think it's fairly obvious).\n. Looks fine - except you may want to leave the /path/to/mca (though I think it's fairly obvious).\n. ",
    "pmontrasio": "I tried with API 15 and it works. Thank you!\nEvery few seconds I see a dialog \"Unfortunately,  has stopped. OK\" now. It stops if I quit the app but it might be due to something else.\n. I tried with API 15 and it works. Thank you!\nEvery few seconds I see a dialog \"Unfortunately,  has stopped. OK\" now. It stops if I quit the app but it might be due to something else.\n. ",
    "learningjs": "@shepheb thank you for the reply .\nYes , generally speaking works very well for me .\nTo be fair , I found the startup sequence very fast , also when fetching the dev version of the script from CDN ( I have put a gist of the code I was playing with and without caring about minified or local version because I had not problem at all ) . Maybe I am just lucky or pleasant , but I can not absolutely complain about that .\nThe lag is noticeable when the app is running and I simply type something to check the binding . Sincerely I do not know if fastclick can solve the typing lag . Can ? There is interaction between clicks and keyboard ... ?\n. Interesting ...\nI have switched from angularjs 1.2.1 to 1.2.3 : \n- the typing recognition was highly improved \n- I tried a button ( adding to the counter ) and a link ( subtracting ) and I got some lag on both . \nSwitched back to 1.2.1 : \n- button with almost unnoticeable lag \n- link slower than with 1.2.3 \n- typing sensibly slower .\nThis is my impression with the Note 2 .\nSadly , I also have to say that with a Galaxy Tab 2 7.0 P3100 ( and angularjs 1.2.1 ) all the bindings were pretty fast ... \nOverall impression : the bootstrap on Note 2 is faster , bindings are slower ; the opposite on Galaxy . Both with Android 4.1.2 , the Note 2 with a newer kernel version . \nWhat angularjs version and what type of bindings did you used ? And , who knows , what MobileChromeApps version ? And , well ... did you tested also with these devices ?\n. With or without power saving the link looks like the slower binding , the \"most misbehaving\" one : it is never clear if it has been clicked or not and leads to multiple clicks .\nThat's said , it is pretty impressive the overall performance ( bootstrap , app responsiveness ) that I experienced in these quick tests . And if you say that you haven't had any problems , it bodes well ...\nThanks for your support .\n. I have to ask .\nDo you have experience with Angular ( or plain zepto / jquery / etc ) in these mobile Chrome apps and also in mobile / desktop sites loaded on devices ? A doubt is rising ...\n. Pretty impressive, some day I'll get there too : )\nnonetheless , I was talking about this slowness . Long story short , in my case ( devices / things tried ) , this happens to be related with angularjs and Chrome for Android ( the rising doubt :  both in browser - beta and stable - and Chrome Apps ) while with other browsers angularjs is fast lightning . Slowness seems not affecting other libs like zepto / jquery . \nMy experience is too limited and also based on what you are saying this issue does not apply for a wider array of ( different ) tested devices , so I have to find out which combinations are the most likely involved ...\nP.S. : the \"A doubt is rising\" in my previous comment was about the fact that this slowness seems to affect Chrome for Android ( and so Chrome Apps ? ) in specific devices , but not absolutely sure .\nEdit : that comment was badly phrased , I apologize for such inconvenience .\n. Ok , thank you .\nImportant : yes , the issue does affects the Mobile Chrome Apps and Chrome as browser . Issue apply to latest version of Chrome - beta and stable - on various Android 4.1.2 flavors . Tested on a couple Samsung Note 2 and Galaxy Tab 2 7.0 . The only common thing between the devices is the Android version - with different kernels - ( and the carrier , if it applies ) .\nMy code is very basic .\n- For the Mobile Chrome App I used the code that I found in the www folder of the installation and edited the index adding the code that I previously linked .\nFor web pages , I also tested very basic code . Between others :\n- the code using angularjs 1.2.3 for the first egghead.io video is the worst case : the binding acts only if the text input loses focus or typing a space ( if typing a simple string of characters without spaces nothing happens )\nSame code is really fast on Firefox and Dolphin .\n- Interesting enough , codes like this todo app ( angularjs 1.2.1 ) and joly-sushi ( angularjs 1.0.3 ) are not affected .\njoly-sushi does not binds directly from an input text to an output tag , but the filtering for the images is immensely faster than what I see when experiencing the lag .\nWrapping things up , maybe is not the case for further investigation , maybe it is : you did not experienced issues with devices of a specific type , I experience issues with devices of another type . The point is : what other people will experience ? Do you have any statistics on the devices used by people who test Mobile Chrome Apps ? They use all the same type of devices ? Etc .\n. I found out that the root cause is something affecting the angularjs versions 1.2.2 , 1.2.3 , 1.2.4 , affecting only Chrome versions for Android - beta and stable - ( also Mobile Chrome Apps ) . With 1.2.1 I can not replicate the issues .\n. @shepheb thank you for the reply .\nYes , generally speaking works very well for me .\nTo be fair , I found the startup sequence very fast , also when fetching the dev version of the script from CDN ( I have put a gist of the code I was playing with and without caring about minified or local version because I had not problem at all ) . Maybe I am just lucky or pleasant , but I can not absolutely complain about that .\nThe lag is noticeable when the app is running and I simply type something to check the binding . Sincerely I do not know if fastclick can solve the typing lag . Can ? There is interaction between clicks and keyboard ... ?\n. Interesting ...\nI have switched from angularjs 1.2.1 to 1.2.3 : \n- the typing recognition was highly improved \n- I tried a button ( adding to the counter ) and a link ( subtracting ) and I got some lag on both . \nSwitched back to 1.2.1 : \n- button with almost unnoticeable lag \n- link slower than with 1.2.3 \n- typing sensibly slower .\nThis is my impression with the Note 2 .\nSadly , I also have to say that with a Galaxy Tab 2 7.0 P3100 ( and angularjs 1.2.1 ) all the bindings were pretty fast ... \nOverall impression : the bootstrap on Note 2 is faster , bindings are slower ; the opposite on Galaxy . Both with Android 4.1.2 , the Note 2 with a newer kernel version . \nWhat angularjs version and what type of bindings did you used ? And , who knows , what MobileChromeApps version ? And , well ... did you tested also with these devices ?\n. With or without power saving the link looks like the slower binding , the \"most misbehaving\" one : it is never clear if it has been clicked or not and leads to multiple clicks .\nThat's said , it is pretty impressive the overall performance ( bootstrap , app responsiveness ) that I experienced in these quick tests . And if you say that you haven't had any problems , it bodes well ...\nThanks for your support .\n. I have to ask .\nDo you have experience with Angular ( or plain zepto / jquery / etc ) in these mobile Chrome apps and also in mobile / desktop sites loaded on devices ? A doubt is rising ...\n. Pretty impressive, some day I'll get there too : )\nnonetheless , I was talking about this slowness . Long story short , in my case ( devices / things tried ) , this happens to be related with angularjs and Chrome for Android ( the rising doubt :  both in browser - beta and stable - and Chrome Apps ) while with other browsers angularjs is fast lightning . Slowness seems not affecting other libs like zepto / jquery . \nMy experience is too limited and also based on what you are saying this issue does not apply for a wider array of ( different ) tested devices , so I have to find out which combinations are the most likely involved ...\nP.S. : the \"A doubt is rising\" in my previous comment was about the fact that this slowness seems to affect Chrome for Android ( and so Chrome Apps ? ) in specific devices , but not absolutely sure .\nEdit : that comment was badly phrased , I apologize for such inconvenience .\n. Ok , thank you .\nImportant : yes , the issue does affects the Mobile Chrome Apps and Chrome as browser . Issue apply to latest version of Chrome - beta and stable - on various Android 4.1.2 flavors . Tested on a couple Samsung Note 2 and Galaxy Tab 2 7.0 . The only common thing between the devices is the Android version - with different kernels - ( and the carrier , if it applies ) .\nMy code is very basic .\n- For the Mobile Chrome App I used the code that I found in the www folder of the installation and edited the index adding the code that I previously linked .\nFor web pages , I also tested very basic code . Between others :\n- the code using angularjs 1.2.3 for the first egghead.io video is the worst case : the binding acts only if the text input loses focus or typing a space ( if typing a simple string of characters without spaces nothing happens )\nSame code is really fast on Firefox and Dolphin .\n- Interesting enough , codes like this todo app ( angularjs 1.2.1 ) and joly-sushi ( angularjs 1.0.3 ) are not affected .\njoly-sushi does not binds directly from an input text to an output tag , but the filtering for the images is immensely faster than what I see when experiencing the lag .\nWrapping things up , maybe is not the case for further investigation , maybe it is : you did not experienced issues with devices of a specific type , I experience issues with devices of another type . The point is : what other people will experience ? Do you have any statistics on the devices used by people who test Mobile Chrome Apps ? They use all the same type of devices ? Etc .\n. I found out that the root cause is something affecting the angularjs versions 1.2.2 , 1.2.3 , 1.2.4 , affecting only Chrome versions for Android - beta and stable - ( also Mobile Chrome Apps ) . With 1.2.1 I can not replicate the issues .\n. ",
    "adam-singer": "The behavior with android was consistent on emulator and hardware phone/tablet. \n. Nice, I'll give it a shot and then close out this issue. I'm only testing on kitkat :+1: \n. Works for me, thanks!\n. \nWorking app should display two numbers at the bottom\n. iOS console display:\n2013-12-10 19:57:00.528 PolymerDartDemo2[72608:c07] Multi-tasking -> Device: YES, App: YES\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromebootstrap] 0.041008ms\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromeextensionurls] 0.226021ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][chromenavigation] 0.029027ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][TotalPluginStartup] 1.443028ms\n2013-12-10 19:57:00.569 PolymerDartDemo2[72608:c07] Resetting plugins due to page load.\n. Verified it works! @agrieve you rock!\n. The manifest I'm using looks like:\n{\n  \"name\": \"YOUR APP HERE\",\n  \"description\": \"DESCRIPTION HERE\",\n  \"manifest_version\": 2,\n  \"minimum_chrome_version\": \"23\",\n  \"version\": \"0.1.1\",\n  \"offline_enabled\": true,\n  \"key\": \"SUPERLONGKEY\",\n  \"permissions\": [\"webview\", \"identity\", \"http://*\", \"http://*/\", \"https://*\", \"https://*/\"],\n  \"icons\": {\n    \"16\": \"assets/icons/icon16.png\",\n    \"48\": \"assets/icons/icon48.png\",\n    \"128\": \"assets/icons/icon128.png\"\n  },\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"background.js\"]\n    }\n  },\n  \"oauth2\": {\n    // client_id below is specifc to the application key. Follow the\n    // documentation to obtain one for your app.\n    \"client_id\": \"SOMECLIENTID.apps.googleusercontent.com\",\n    \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]\n  }\n}\n. Actually this issue should be renamed on documenting how additional plugins are added when importing projects with existing manifest files. What should you do if your project is already created? within a cordova container?\n. @agrieve yep the problem is identity plugin does not get added unless it sees it in the manifest.json when you do mca com.somespace.Demo --source=~/location/to/existing/project. Agree it would be ideal for mca prepare to pick up the changes. I tried to change some xml config files, which I thought would end up adding the plugin. I dont know what happened, but those files did get overwritten on the platform android configurations. \n. Will close out this bug and open a new one. It really sounds like mca prepare should support manifest permissions/plugin changes. \n. Thanks!\n. The behavior with android was consistent on emulator and hardware phone/tablet. \n. Nice, I'll give it a shot and then close out this issue. I'm only testing on kitkat :+1: \n. Works for me, thanks!\n. \nWorking app should display two numbers at the bottom\n. iOS console display:\n2013-12-10 19:57:00.528 PolymerDartDemo2[72608:c07] Multi-tasking -> Device: YES, App: YES\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromebootstrap] 0.041008ms\n2013-12-10 19:57:00.543 PolymerDartDemo2[72608:c07] [CDVTimer][chromeextensionurls] 0.226021ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][chromenavigation] 0.029027ms\n2013-12-10 19:57:00.544 PolymerDartDemo2[72608:c07] [CDVTimer][TotalPluginStartup] 1.443028ms\n2013-12-10 19:57:00.569 PolymerDartDemo2[72608:c07] Resetting plugins due to page load.\n. Verified it works! @agrieve you rock!\n. The manifest I'm using looks like:\n{\n  \"name\": \"YOUR APP HERE\",\n  \"description\": \"DESCRIPTION HERE\",\n  \"manifest_version\": 2,\n  \"minimum_chrome_version\": \"23\",\n  \"version\": \"0.1.1\",\n  \"offline_enabled\": true,\n  \"key\": \"SUPERLONGKEY\",\n  \"permissions\": [\"webview\", \"identity\", \"http://*\", \"http://*/\", \"https://*\", \"https://*/\"],\n  \"icons\": {\n    \"16\": \"assets/icons/icon16.png\",\n    \"48\": \"assets/icons/icon48.png\",\n    \"128\": \"assets/icons/icon128.png\"\n  },\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"background.js\"]\n    }\n  },\n  \"oauth2\": {\n    // client_id below is specifc to the application key. Follow the\n    // documentation to obtain one for your app.\n    \"client_id\": \"SOMECLIENTID.apps.googleusercontent.com\",\n    \"scopes\": [\"https://www.googleapis.com/auth/plus.login\"]\n  }\n}\n. Actually this issue should be renamed on documenting how additional plugins are added when importing projects with existing manifest files. What should you do if your project is already created? within a cordova container?\n. @agrieve yep the problem is identity plugin does not get added unless it sees it in the manifest.json when you do mca com.somespace.Demo --source=~/location/to/existing/project. Agree it would be ideal for mca prepare to pick up the changes. I tried to change some xml config files, which I thought would end up adding the plugin. I dont know what happened, but those files did get overwritten on the platform android configurations. \n. Will close out this bug and open a new one. It really sounds like mca prepare should support manifest permissions/plugin changes. \n. Thanks!\n. ",
    "geppy": "Did this fix make it into 0.5.1?  I'm still seeing a blank screen with a Polymer.Dart app.\n. Ah, no, my mistake.  It works.\n. You should be able to solve the CSP problem without modifying Polymer by configuring your pubspec.yaml as follows:\ntransformers:\n- polymer:\n    entry_points:\n    - web/index.html\n    csp: true\n. Is it possible to use the google.payments polyfill without the Mobile Chrome Apps wrapper?  I'd like to do that until I'm able to work out exactly where the incompatibility is between Mobile Chrome Apps and the WkWebView plugin.\n. Thanks!\n. Did this fix make it into 0.5.1?  I'm still seeing a blank screen with a Polymer.Dart app.\n. Ah, no, my mistake.  It works.\n. You should be able to solve the CSP problem without modifying Polymer by configuring your pubspec.yaml as follows:\ntransformers:\n- polymer:\n    entry_points:\n    - web/index.html\n    csp: true\n. Is it possible to use the google.payments polyfill without the Mobile Chrome Apps wrapper?  I'd like to do that until I'm able to work out exactly where the incompatibility is between Mobile Chrome Apps and the WkWebView plugin.\n. Thanks!\n. ",
    "chameleon95": "Maybe another option... https://github.com/Voxer/iSPDY\nSupports Server Push....\n. Maybe another option... https://github.com/Voxer/iSPDY\nSupports Server Push....\n. ",
    "cesine": "ah thanks for pointing those commits out! i should have grepped the log instead of using github. i've heard those reasons before, i guess you tried using the package.json to fix your deps to a version/commit/tag? if you publish a npm module then it would be far easier for users... i really don't enjoy having the full path of mca in my config files. i guess you know that but youre waiting until mca is more stable?\n. it looks like the npm release is out, thanks guys! \nbash\n npm install -g cca\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Installation.md#install-the-cca-command-line-tool\nhttps://npmjs.org/package/cca\n. hi guys, it sounds like my question was rather silly. \nshort answer: cca works like cordova (with the caveat about the protocol) i guess i could have been clear that I expected the cordova.js to be in the place it is with normal cordova apps, I did look for assets/www/cordova.js but it wasnt there. i will re-run cca create again, most likely something in my chrome app was eating cordova.js or something in the process of debugging why the audio wasn't working lead has to the cca wrapper becoming abnormal. thanks again! this helps me get rid of the sed..\n. ah thanks for pointing those commits out! i should have grepped the log instead of using github. i've heard those reasons before, i guess you tried using the package.json to fix your deps to a version/commit/tag? if you publish a npm module then it would be far easier for users... i really don't enjoy having the full path of mca in my config files. i guess you know that but youre waiting until mca is more stable?\n. it looks like the npm release is out, thanks guys! \nbash\n npm install -g cca\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Installation.md#install-the-cca-command-line-tool\nhttps://npmjs.org/package/cca\n. hi guys, it sounds like my question was rather silly. \nshort answer: cca works like cordova (with the caveat about the protocol) i guess i could have been clear that I expected the cordova.js to be in the place it is with normal cordova apps, I did look for assets/www/cordova.js but it wasnt there. i will re-run cca create again, most likely something in my chrome app was eating cordova.js or something in the process of debugging why the audio wasn't working lead has to the cca wrapper becoming abnormal. thanks again! this helps me get rid of the sed..\n. ",
    "petele": "It looks like it does open in Chrome, but I don't get the full Open in Chrome functionality where the back button links me back to the app I'm using.  You can try it in Good Drinker\n. It looks like it does open in Chrome, but I don't get the full Open in Chrome functionality where the back button links me back to the app I'm using.  You can try it in Good Drinker\n. ",
    "pearlchen-old": "Link was updated.\n. @agrieve Please give this a quick once over. Thanks.\n. Link was updated.\n. @agrieve Please give this a quick once over. Thanks.\n. ",
    "shacharz": "I agree, Are there intentions to implement using Chrome?\n. So there's no hope in IOS, right?\n. I agree, Are there intentions to implement using Chrome?\n. So there's no hope in IOS, right?\n. ",
    "ghchinoy": "Windows 7 x64. I did the uninstall and install cmds, and cca create *MyApp* --copy-from *orig_location*\\manifest.json worked.\nI then did npm uninstall -g cca and npm uninstall -g delayed-stream and a npm install -g cca and received the following when doing the cca create ... command (same as original error);\n```\ncca v0.0.3\nChecking that tools are installed\nAndroid SDK detected.\nSearching for Chrome app source in c:*orig_location*\nCreating Your Application\ncreate MyApp App_Desc App_Desc\nWriting config.xml\nChanging directory to: c:*orig_location*MyApp\nplatform add android\nplugin add org.apache.cordova.file\nError: Fetching plugin failed: Error: Cannot find module 'delayed-stream'\n```\nSubsequent reinstallation of delayed-stream resulted in successful cca execution.\n. Were only it that easy! I'd tried that and received the following error:\n```\nc:\\dev\\app>cca run android --target=199c6fd\ncca v0.0.3\nGenerating config.xml from defaults for platform \"android\"\nPreparing android project\nRunning app on platform \"android\" via command \"cmd\" /c c:\\dev\\app\\platforms\\android\\cordova\\run --tar\nget=199c6fd\nError: An error occurred while running the android project.\nc:\\dev\\app\\platforms\\android\\cordova\\node_modules\\q\\q.js:126\n                    throw e;\n                          ^\nTarget '199c6fd' not found, unable to run project\nat ChildProcess.<anonymous> (C:\\Users\\Me\\AppData\\Roaming\\npm\\node_modules\\cca\\node_modules\\cordova\\sr\n\nc\\run.js:66:22)\n    at ChildProcess.EventEmitter.emit (events.js:98:17)\n    at maybeClose (child_process.js:735:16)\n    at Process.ChildProcess._handle.onexit (child_process.js:802:5)\n``\n. Yep. The Android device serial number is that, specifically. That device is a Samsung S4 GPe. I have other android devices which have different length serial numbers fromadb devices` - the Nexus Q is 12 characters and Glass is 16.\nFWIW, adb -s [serial] [cmd] works during other adb commands, during my android dev workflow, so connectivity to the device isn't an issue.\n. I tried android update adb which is (according to the help) \"Updates adb to support the USB devices declared in the SDK add-ons.\" and killed & restarted the adb server and the S4 appeared at the top of adb devices - now cca run android works (probably because the S4's now at the top of the list). Although this works, I can't verify that this is a solution.\nI'd opened ddms to see if it really was pushing to the first in the adb list (which I believe it is per cordova docs), but I can't fully verify without detaching some devices, which I will shortly (after I play with my app on the connected S4 ;) )\nEdit: confirmed, pushes to the first device at the top of the adb devices list. Always fun to watch logcat on the Nexus Q, especially when it's headless, display an app (watching via androidscreencast).\n. I don't think android update adb is a solution to this issue - can this be reopened, please?\n. Good call - checking.\n. Ok, that does now work! Target device not listed as first in adb devices - using android update adb, killing, restarting the adb server, and then using the --target=SERIAL flag for cca run android to target a specific android device when multiple are present, appears to be the solution.\nPlease close, thank you!\n. Thank you. Knowing me, that next person'll be me, too :)\n. FWIW, my upgrade had no issues.\n. You may need to open the cmd prompt as an administrator; right-click and run as administrator.\n. Windows 7 x64. I did the uninstall and install cmds, and cca create *MyApp* --copy-from *orig_location*\\manifest.json worked.\nI then did npm uninstall -g cca and npm uninstall -g delayed-stream and a npm install -g cca and received the following when doing the cca create ... command (same as original error);\n```\ncca v0.0.3\nChecking that tools are installed\nAndroid SDK detected.\nSearching for Chrome app source in c:*orig_location*\nCreating Your Application\ncreate MyApp App_Desc App_Desc\nWriting config.xml\nChanging directory to: c:*orig_location*MyApp\nplatform add android\nplugin add org.apache.cordova.file\nError: Fetching plugin failed: Error: Cannot find module 'delayed-stream'\n```\nSubsequent reinstallation of delayed-stream resulted in successful cca execution.\n. Were only it that easy! I'd tried that and received the following error:\n```\nc:\\dev\\app>cca run android --target=199c6fd\ncca v0.0.3\nGenerating config.xml from defaults for platform \"android\"\nPreparing android project\nRunning app on platform \"android\" via command \"cmd\" /c c:\\dev\\app\\platforms\\android\\cordova\\run --tar\nget=199c6fd\nError: An error occurred while running the android project.\nc:\\dev\\app\\platforms\\android\\cordova\\node_modules\\q\\q.js:126\n                    throw e;\n                          ^\nTarget '199c6fd' not found, unable to run project\nat ChildProcess.<anonymous> (C:\\Users\\Me\\AppData\\Roaming\\npm\\node_modules\\cca\\node_modules\\cordova\\sr\n\nc\\run.js:66:22)\n    at ChildProcess.EventEmitter.emit (events.js:98:17)\n    at maybeClose (child_process.js:735:16)\n    at Process.ChildProcess._handle.onexit (child_process.js:802:5)\n``\n. Yep. The Android device serial number is that, specifically. That device is a Samsung S4 GPe. I have other android devices which have different length serial numbers fromadb devices` - the Nexus Q is 12 characters and Glass is 16.\nFWIW, adb -s [serial] [cmd] works during other adb commands, during my android dev workflow, so connectivity to the device isn't an issue.\n. I tried android update adb which is (according to the help) \"Updates adb to support the USB devices declared in the SDK add-ons.\" and killed & restarted the adb server and the S4 appeared at the top of adb devices - now cca run android works (probably because the S4's now at the top of the list). Although this works, I can't verify that this is a solution.\nI'd opened ddms to see if it really was pushing to the first in the adb list (which I believe it is per cordova docs), but I can't fully verify without detaching some devices, which I will shortly (after I play with my app on the connected S4 ;) )\nEdit: confirmed, pushes to the first device at the top of the adb devices list. Always fun to watch logcat on the Nexus Q, especially when it's headless, display an app (watching via androidscreencast).\n. I don't think android update adb is a solution to this issue - can this be reopened, please?\n. Good call - checking.\n. Ok, that does now work! Target device not listed as first in adb devices - using android update adb, killing, restarting the adb server, and then using the --target=SERIAL flag for cca run android to target a specific android device when multiple are present, appears to be the solution.\nPlease close, thank you!\n. Thank you. Knowing me, that next person'll be me, too :)\n. FWIW, my upgrade had no issues.\n. You may need to open the cmd prompt as an administrator; right-click and run as administrator.\n. ",
    "alireza-ahmadi": "Have you tried to update your node+npm? Please update them and retry.\n. Can you paste your node -v and npm -v here?\n. Have you tried to update your node+npm? Please update them and retry.\n. Can you paste your node -v and npm -v here?\n. ",
    "MrYogi": "i just installed both newest version\n. thanks . after updation it works\n. i tried many, \nfor instance todomvc sample gives me blank white screen\n. as from my question you can see the link of sample apps,\nmine device is 4.4.2 nexus 4\n@ mmocny : i will inspect and update\nthanks for your help!\n. i just installed both newest version\n. thanks . after updation it works\n. i tried many, \nfor instance todomvc sample gives me blank white screen\n. as from my question you can see the link of sample apps,\nmine device is 4.4.2 nexus 4\n@ mmocny : i will inspect and update\nthanks for your help!\n. ",
    "petrivoges": "I don't know what changed on my distribution but my environment was working great. Ran apps on my S3, however it doesn't anymore. Node, ant, android SDK and java is install, but running cca checkenv displays no output. Any ideas as to why\n. cca --version nor cca checkenv displays any output.\ntail -f syslog: Apr  8 09:15:33 e1mlocal node[14427]: No AX.25 port data\nconfigured\nAny ideas?\n. Update\nI implemented this\nhttps://github.com/bower/bower/issues/677#issuecomment-21777615\nLife is back to normal\nOn Mon, Apr 7, 2014 at 10:30 PM, Michal Mocny notifications@github.comwrote:\n\n@petrivoges https://github.com/petrivoges We recently updated cca to\nversion 0.0.8 (check with cca --version). Did it stop working for you\nafter an upgrade?\nIf running cca checkenv shows no output at all, then that is a problem.\nEven if it does nothing, you should see something like:\ncca v0.0.8\nChecking that tools are installed\nAndroid SDK detected.\nXcode detected.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/56#issuecomment-39779525\n.\n\n\nGroente\nPetri\nIn need of good news, Ezekiel 18:32 will suffice!\n. I don't know what changed on my distribution but my environment was working great. Ran apps on my S3, however it doesn't anymore. Node, ant, android SDK and java is install, but running cca checkenv displays no output. Any ideas as to why\n. cca --version nor cca checkenv displays any output.\ntail -f syslog: Apr  8 09:15:33 e1mlocal node[14427]: No AX.25 port data\nconfigured\nAny ideas?\n. Update\nI implemented this\nhttps://github.com/bower/bower/issues/677#issuecomment-21777615\nLife is back to normal\nOn Mon, Apr 7, 2014 at 10:30 PM, Michal Mocny notifications@github.comwrote:\n\n@petrivoges https://github.com/petrivoges We recently updated cca to\nversion 0.0.8 (check with cca --version). Did it stop working for you\nafter an upgrade?\nIf running cca checkenv shows no output at all, then that is a problem.\nEven if it does nothing, you should see something like:\ncca v0.0.8\nChecking that tools are installed\nAndroid SDK detected.\nXcode detected.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/56#issuecomment-39779525\n.\n\n\nGroente\nPetri\nIn need of good news, Ezekiel 18:32 will suffice!\n. ",
    "evinugur": "Oh, ok then :)\n. Oh, ok then :)\n. ",
    "alexpaluzzi": "That sounds like it could definitely be it. If I recall, I was running it from inside, and so I was using a relative path to the manifest file. I would have been in the same directory. I should have thought about running it from the parent.\nWhen I'm able, I will rerun those tests and confirm, but I can say with near certainty that's how I was doing it.\n. That sounds like it could definitely be it. If I recall, I was running it from inside, and so I was using a relative path to the manifest file. I would have been in the same directory. I should have thought about running it from the parent.\nWhen I'm able, I will rerun those tests and confirm, but I can say with near certainty that's how I was doing it.\n. ",
    "yingkailiang": "I also facing the same problem. Any solution now?\n. I also facing the same problem. Any solution now?\n. ",
    "beaufortfrancois": "PR #202 fixed this.\nOne less reason to not have JSTorrent on Mobile ;)\n. Hey Michal,\nYes, I was about and wanted to convert a simple Chrome App to Android but stumbled upon #62 sadly ;) I guess I'll have to wait a little bit more for this one.\nRegarding this issue, it's not just about the <body> but also the <html>:\nhtml,  body {\n  height: 100%;\n}\nI actually thought user agent styles would be the same for desktop and mobile chrome apps. Doesn't it make sense?\nHaving the same rendering logic in Chrome wherever it runs on mobile or desktop?\n. I can't get the camera with cca 0.2.1-rc1.\nEven though I've defined 'videoCapture' and 'audioCapture' permission in my manifest, I'm still a stream that contains only one AudioTrack and no VideoTrack.\nAm I missing something obvious there?\n. Thanks. Will wait then ;)\n. I'm not sure but web-apps getUserMedia prompts user first whereas in the chrome-apps world, there is no prompt, only permissions granted in the manifest.\n. For info, the WIP can be found at https://github.com/MobileChromeApps/mobile-chrome-apps/pull/218\n. I've just submitted a PR to fix that: https://github.com/MobileChromeApps/mobile-chrome-apps/pull/218\n. PR=#202\n. For info, jsescape will always return a string (which is always true in this javascript code) even with jsescape(undefined, {json: true}). See https://github.com/mathiasbynens/jsesc/blob/master/src/jsesc.js\n. Fixed!\n. Wooo! That was fast ;)\n. Not until they push it ;(\nIn the mean time, you can just do:\ngit clone --recursive https://github.com/MobileChromeApps/mobile-chrome-apps\ncd mobile-chrome-apps\nnpm link\ncca create yourApp --link-to=/path/to/your/chrome/app/\ncca run android\n. Can you share your manifest?\n. When you ran cca run android, did you see at the very beginning something like\nPermission not recognized by cca: audioCapture (ignoring)\nPermission not recognized by cca: videoCapture (ignoring)\nIf so, it means you're not using the right cca.\n. Looks like you use the emulator.\nCan you try with a real device?\n. I'll do that tomorrow if that's ok with you.\nOn Wed, Jul 23, 2014 at 7:48 PM, Michal Mocny notifications@github.com\nwrote:\n\nThanks Francois. Would you mind making it progress to 100 and then clear\nitself (to also serve as an example)?\nI'd be happy to do that if you would not.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/219#issuecomment-49909501\n.\n. PR submitted at https://github.com/MobileChromeApps/mobile-chrome-apps/pull/225\n. According to https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/CordovaConsiderations.md#supported-chrome-apis, it looks like the  tag is not supported at all on Mobile for now.\n. I will update it in a future CL.\n. Thank you Michal ;)\nI feel stupid. It is written black on white at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/752b9bb73f19fad3f4e552628fd40d95ed39b653/src/create-app.js#L36-L42\n. In that case, we may want to add some caching then. Will follow up then.\n. What an awesome answer! Thank you!\nWill give a try to all of them and let you know later this week for sure.\n. TLDR; eac1d3f didn't fix my issue ;(\n\nI've changed the <preference name=\"BackgroundColor\"> to Blue and as expected I see a Blue Splash at the very beginning but still see a White flash when pausing/resuming the app.\nI've also changed the chrome-bootstrap background color to Red and I now have a nice sequence of Blue + Red when I start the app but I still see this White flash when pausing/resuming the app.\nI only have a 4.3 Android Device at the moment so I can't say if it's due to Crosswalk or not. Will keep you updated.\n. Thank you @clelland.\nIt works great!\n. Woohoo!\n. @agrieve Fixed.\n. It looks like an error in cordova-lib not cca. See https://github.com/apache/cordova-lib/blob/190eb20db2cb1c9d233bd50c80627cd4734910c1/cordova-lib/src/cordova/create.js#L113-L117\n. Thanks!\n. Let me tackle this one if that's OK for you.\n. I can't reproduce the issue with cca 0.3.1-dev.\ncca create helloWorld\ncd helloWorld\nsed -i 's/com\\.your\\.company\\.HelloWorld/com\\.example/' www/manifest.mobile.json\ncca build android\ngrep com.example platforms/android/AndroidManifest.xml\n. Since the android documentation says To avoid conflicts with other developers, you should use Internet domain ownership as the basis for your package names (in reverse)., it would be hard to generate a packageId that fits this format.\nSource: http://developer.android.com/guide/topics/manifest/manifest-element.html\n. Submitted another PR #289 to address this.\n. For info, I successfully ran gcm tests with cca 0.3.1-dev on a Nexus 7 with Android 4.4.4.\n\n. (gentle ping)\n. PR #202 fixed this.\nOne less reason to not have JSTorrent on Mobile ;)\n. Hey Michal,\nYes, I was about and wanted to convert a simple Chrome App to Android but stumbled upon #62 sadly ;) I guess I'll have to wait a little bit more for this one.\nRegarding this issue, it's not just about the <body> but also the <html>:\nhtml,  body {\n  height: 100%;\n}\nI actually thought user agent styles would be the same for desktop and mobile chrome apps. Doesn't it make sense?\nHaving the same rendering logic in Chrome wherever it runs on mobile or desktop?\n. I can't get the camera with cca 0.2.1-rc1.\nEven though I've defined 'videoCapture' and 'audioCapture' permission in my manifest, I'm still a stream that contains only one AudioTrack and no VideoTrack.\nAm I missing something obvious there?\n. Thanks. Will wait then ;)\n. I'm not sure but web-apps getUserMedia prompts user first whereas in the chrome-apps world, there is no prompt, only permissions granted in the manifest.\n. For info, the WIP can be found at https://github.com/MobileChromeApps/mobile-chrome-apps/pull/218\n. I've just submitted a PR to fix that: https://github.com/MobileChromeApps/mobile-chrome-apps/pull/218\n. PR=#202\n. For info, jsescape will always return a string (which is always true in this javascript code) even with jsescape(undefined, {json: true}). See https://github.com/mathiasbynens/jsesc/blob/master/src/jsesc.js\n. Fixed!\n. Wooo! That was fast ;)\n. Not until they push it ;(\nIn the mean time, you can just do:\ngit clone --recursive https://github.com/MobileChromeApps/mobile-chrome-apps\ncd mobile-chrome-apps\nnpm link\ncca create yourApp --link-to=/path/to/your/chrome/app/\ncca run android\n. Can you share your manifest?\n. When you ran cca run android, did you see at the very beginning something like\nPermission not recognized by cca: audioCapture (ignoring)\nPermission not recognized by cca: videoCapture (ignoring)\nIf so, it means you're not using the right cca.\n. Looks like you use the emulator.\nCan you try with a real device?\n. I'll do that tomorrow if that's ok with you.\nOn Wed, Jul 23, 2014 at 7:48 PM, Michal Mocny notifications@github.com\nwrote:\n\nThanks Francois. Would you mind making it progress to 100 and then clear\nitself (to also serve as an example)?\nI'd be happy to do that if you would not.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/pull/219#issuecomment-49909501\n.\n. PR submitted at https://github.com/MobileChromeApps/mobile-chrome-apps/pull/225\n. According to https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/CordovaConsiderations.md#supported-chrome-apis, it looks like the  tag is not supported at all on Mobile for now.\n. I will update it in a future CL.\n. Thank you Michal ;)\nI feel stupid. It is written black on white at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/752b9bb73f19fad3f4e552628fd40d95ed39b653/src/create-app.js#L36-L42\n. In that case, we may want to add some caching then. Will follow up then.\n. What an awesome answer! Thank you!\nWill give a try to all of them and let you know later this week for sure.\n. TLDR; eac1d3f didn't fix my issue ;(\n\nI've changed the <preference name=\"BackgroundColor\"> to Blue and as expected I see a Blue Splash at the very beginning but still see a White flash when pausing/resuming the app.\nI've also changed the chrome-bootstrap background color to Red and I now have a nice sequence of Blue + Red when I start the app but I still see this White flash when pausing/resuming the app.\nI only have a 4.3 Android Device at the moment so I can't say if it's due to Crosswalk or not. Will keep you updated.\n. Thank you @clelland.\nIt works great!\n. Woohoo!\n. @agrieve Fixed.\n. It looks like an error in cordova-lib not cca. See https://github.com/apache/cordova-lib/blob/190eb20db2cb1c9d233bd50c80627cd4734910c1/cordova-lib/src/cordova/create.js#L113-L117\n. Thanks!\n. Let me tackle this one if that's OK for you.\n. I can't reproduce the issue with cca 0.3.1-dev.\ncca create helloWorld\ncd helloWorld\nsed -i 's/com\\.your\\.company\\.HelloWorld/com\\.example/' www/manifest.mobile.json\ncca build android\ngrep com.example platforms/android/AndroidManifest.xml\n. Since the android documentation says To avoid conflicts with other developers, you should use Internet domain ownership as the basis for your package names (in reverse)., it would be hard to generate a packageId that fits this format.\nSource: http://developer.android.com/guide/topics/manifest/manifest-element.html\n. Submitted another PR #289 to address this.\n. For info, I successfully ran gcm tests with cca 0.3.1-dev on a Nexus 7 with Android 4.4.4.\n\n. (gentle ping)\n. ",
    "mschaaf": "@kzahel Thanks for your suggestion. I use now arraybuffer and did not store in fileSystem but convert to a blob with the following code.\nvar blob = new Blob([xhr.response]);\nvar blobURL = window.webkitURL.createObjectURL(blob);\n. @kzahel Thanks for your suggestion. I use now arraybuffer and did not store in fileSystem but convert to a blob with the following code.\nvar blob = new Blob([xhr.response]);\nvar blobURL = window.webkitURL.createObjectURL(blob);\n. ",
    "jirkadanek": "@kzahel Converting null to 0 is somewhat sensible, at least in the JavaScript world. I am not sure who is wrong here, whether cca or the chrome wrapper package, that is why I posted the issue to both projects.\n. @kzahel Converting null to 0 is somewhat sensible, at least in the JavaScript world. I am not sure who is wrong here, whether cca or the chrome wrapper package, that is why I posted the issue to both projects.\n. ",
    "tanx": "Thanks for the quick response. @mikewest was kind enough to point the existence of the CSP meta tag out to me a few months ago. Just thinking out loud here...\nFrom what I understand the reasoning behind the default CSP settings in Chrome Apps on desktop seem to be: \"because we give you powerful new Apis like Access to the Filesystems and raw TCP sockets, you'll need to play by these stricter new rules\" https://developer.chrome.com/apps/contentSecurityPolicy.html. Which makes total sense.\nSince Chrome App developers are used to these constraints on the desktop and your cca tool generates iOS and Android apps from that source code, how about setting the same default CSP setting in the resulting cordova apps as well (for supported platforms iOS 7 and Android 4.4+). This would take the burden of having to do this (and potentially doing it wrong) off developers and make it a part of the tool chain.\nThanks\n. Ok got it. Let me know if I can help with testing any potential approach on our use-case.\n. Ok. I'll try to add script-src 'self' chrome-extension: gap: to the directives and see if that works.\n. Sorry no. It's in the backlog, but I didn't get around to it yet.\nIt would be great if CSP was possible on mobile chrome apps. Our usecase\ncan't risk compromising the user's data due to XSS. We're writing a PGP\nmail client in html5, so CSP is kind of a must have :)\nAm 07.03.2014 um 04:04 schrieb Michal Mocny notifications@github.com:\n@tanx https://github.com/tanx Any update on how your experiments are\ngoing? I don't think anyone on our team has taken another looks since\nAndrew investigated, but we may want to return to this.\n\nReply to this email directly or view it on\nGitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-36963845\n.\n\nWhiteout Networks GmbH c/o Werk1\nGrafinger Str. 6\nD-81671 M\u00fcnchen\nGesch\u00e4ftsf\u00fchrer: Oliver Gajek\nRG M\u00fcnchen HRB 204479\n. Sorry. It's been a while...\nI've tried default-src 'self' chrome-extension: gap: file: on Android 4.4. and it does not work. The screen is just blank. So currently I can only leave CSP off on mobile, which is not really desirable :/\nAny progress in your experiments so far?\n. So, I've finally gotten CSP to work with the following meta tag in the html document's head:\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self' chrome-extension:; object-src 'none'; connect-src 'self' chrome-extension: https://*.whiteout.io; style-src 'self' chrome-extension: 'unsafe-inline'; img-src 'self' chrome-extension: data:\">\nThis is loose enough to allow loading of all the corcova/chrome assets that are injected at runtime, but still it's strict enough to prevent XSS via inline scripts. Thanks again for your help!\n. Happy to help increase security on Chrome Apps :)\nOne addition: I tested the above meta tag successfully on Android 4.4. It did not work on iOS 7, and I wasn't able to debug why, since the console in Safari Remote Debugging only shows logs from the time the debugger started, not before.\nBut I'm sure there is a way to relax CSP so it works on iOS too. I suspect that the assets have a different origin on iOS than chrome-extension:// but I haven't figured out the magic formula yet.\n. Another thing I found while debugging on Android ... It seems that cordova.js uses eval and my CSP blocks that code from executing. Specifically it's this line:\nhttps://github.com/apache/cordova-js/blob/70cdca3055a6631ab368ce6ef1770695e2eb5130/src/android/exec.js#L188\nI could just allow 'unsafe-eval' but that is not such a good idea, since using eval is such a big attack surface. Perhaps you could patch cordova.js to use something other than eval?\n. So i got iOS to work as well now. The following directive was tested on iOS 7, Android 4.4 and Desktop:\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self' chrome-extension: file: gap:; object-src 'none'; script-src 'self' 'unsafe-eval' chrome-extension: file: gap:; connect-src *; style-src 'self' 'unsafe-inline' chrome-extension: file: gap:; img-src 'self' chrome-extension: file: gap: data:\">\nIt's quite loose since it allows 'unsafe-eval' but at least it block XSS via inline scripts, which is useful.\nIf there is some way for the CCA toolchain to inject the meta tag at build/runtime it would be great, since developers would get similar protection to desktop chrome apps without needing to do anything themselves.\n. Ok great!\n. Hi,\nI'm having problems with this as well on Android 4.4 with cca 0.4 using the crosswalk WebView. It doesn't work with chrome.fileSystem:\nchrome.fileSystem.chooseEntry({\n    type: 'saveFile',\n    suggestedName: filename\n}, function(file) {\n    file.createWriter(function(writer) {\n        writer.onerror = callback;\n        writer.onwriteend = function() {\n            callback();\n        };\n        writer.write(new Blob([content], {\n            type: contentType\n        }));\n    }, callback);\n});\nIt doesn't work with a.download either:\ndocument.body.appendChild(a);\na.style = \"display: none\";\na.href = window.URL.createObjectURL(new Blob([content], {\n    type: contentType\n}));\na.download = filename;\na.click();\nBoth solutions work fine for Chrome Apps on the desktop. This is the only showstopper for moving Whiteout from Alpha to Beta. Other than that cca has gotten much better :+1: \nThanks\n. When testing our App in the Chrome Browser on Android the a.download approach worked fine. In the crosswalk webview a.download seems to be supported (in terms of the attribute being there during debugging). But it did not trigger a download.\n. The usecase is downloading an email attachment from a PGP encrypted message to the download folder via a Blob Url.\nIt would be great if the standard api to worked, since the same code will also be deployed as a webmail solution and we do not have chrome/cordova apis in that environment.\n. > If it's the only thing that's stopping you from hitting beta, though, I wouldn't wait around for an official fix; I unfortunately can't say how long that will take.\nYeah. We put the Android App into beta already: https://whiteout.io/#product\nAs soon as chrome.sockets.tcp works on iOS, we can activate that one too.\n. I'm getting redirect_uri_mismatch with a 400 on iOS as well.\nThe cordova iOS app opens the chrome browser and then after I login the gmail user via the web interface, the chrome redirect to the app doesn't work. Is there something I need to set in the Google Api Console for this to work on iOS? thanks\n. Ok. It seems I had to create a new Client ID specifically for iOS in the Google Apis Console for this to work: https://console.developers.google.com\nDo I need to switch the client Id in the chrome app's manifest.json for iOS now or can I use the same?\n. Awesome thanks! It works now :)\n. > Thanks for the issue! I'll look into this.\nGreat thanks.\n\nThis likely isn't the problem, but it's worth noting: the https://www.googleapis.com/auth/userinfo.email scope is deprecated in favor of email, and will no longer be supported as of September 1st.\n\nChanging to the scope to \"email\" didn't fix the problem, but thanks for the heads up.\n. I'm using:\nhttps://www.googleapis.com/oauth2/v1/tokeninfo?access_token=token\nDo I have to add something to the mobile chrome manifest? What does your manifest.json look like?\n. > Does using the userinfo endpoint I suggested work for you?\nI'll test it tomorrow and get back to you. Thanks for the support.\n\nIt is odd that you are seeing one scope in the permission request dialog but not the other. Using the email scope, I get asked permission to \"know who you are on Google\".\n\nChrome Show me this on the desktop as well. Unfortunately not on Android. Perhaps try to add the scope https://mail.google.com/to your manifest to reconstruct the problem. Then you would be using the same config as me.\n\nAre you seeing one scope but not the other every time?\n\nSo far when I tested it, it only showed one scope.\n\nDoes the app show the native account chooser?\n\nYes. That all worked fine. I was able to add my google account to Android and log in.\n. So I did some debugging and the problem was not the chrome.identity api but the CORS request to https://www.googleapis.com/. Apparently I forgot to add the resource to the permissions in my manifest.json and the CORS request returned a 404 since the XHR headers were not correct.\nThe request worked in the Desktop app without the permission, that's why I thought it was an Android specific problem. Here's how I fixed it:\n\"permissions\": [\n    \"https://www.googleapis.com/\",\n    \"identity\", {\n      \"socket\": [\n        \"tcp-connect:imap.gmail.com:993\",\n        \"tcp-connect:smtp.gmail.com:465\"\n      ]\n    }\n  ]\nThanks for your help.\n. Thanks! I just tried this for the Desktop version of Chrome and it crashes with the accountHint attribute set. Is there anyway to ask the chrome apis which runtime I'm currently running on?\n. Also. The account attribute is not returned on the desktop.\nI tried calling the getAccounts methods, but that isn't implmented yet either???\nhttps://developer.chrome.com/apps/identity#method-getAccounts\n. > Unfortunately, yes, getAuthToken doesn't like other things being passed in its details. This function will allow you to determine your platform; on Android apps created using CCA, it will return cordova-android.\nOk great thanks. I'll try getPlatformInfo. It looks like it will solve the issue.\n\nThanks for the heads up on getAccounts. This appears to be a new addition to the API. I can have it added this afternoon.\n\nIts seems the api hasn't landed in Chrome stable yet either so I can't use it yet anyway. If I understand correctly the api will return an account unique id and not the user's email address?\nhttps://developer.chrome.com/apps/identity#type-AccountInfo\nIf I may give some feedback on the current api. It would be nice to get the user's email address in a consistent api across platforms. The current workaround for us is to call googleapis.com/oauth2/v3/userinfo via an HTTP request to get the email address, which seems a bit redundant. I also have to add the email oauth2 scope in the manifest.json, which requests access to the users Google+ Account and other personal information I don't really need. This could alarms users and prevent them from continuing in the authentication process in our app, since it's requesting a lot of information :/\nThanks again for the quick support!\n. File input works again in chromium webview since Android 4.4.3\n. Yeah I deleted the generated directory and did a fresh cca create\n. Awesome thanks!\n. Some more info on the bug. I've got cca 0.0.11 installed on my mac at home and 0.1.0 installed at work. Both have the same version of the Android SDK installed. When I build the app with 0.0.11 the call to chrome.identity.getAuthToken works fine. When I build with 0.1.0 it crashed.\n. Thanks so much. The workaround will allow me to continue testing builds internally until it's fixed upstream.\n. Great thanks!\nOne question... I had trouble calling the identity api on iOS today as well. Could it be that a similar issue is also present on iOS?\n. Ok. I'll dig into the problem with remote debugging via safari to understand this better and open a bug if it's really a cca issue. \n. I'm testing a new android release of whiteout mail build w/ cca 0.3.1 and crosswalk. Clicking on links now works as intended -> opening an intent to display in chrome/firefox.\nThanks for your quick help!\n. Is the fix already in cca 0.3.1? I tried to verify by doing a re-create of the Android App, but unfortunately selecting a file does not work.\n. Ok. I'll try again with 0.3.2\n. Confirmed working with 0.4.0.\nThanks guys... At this rate, we can go from alpha to beta soon :+1: \n. Ok good to know. We'll migrate to the new api too then.\n. Great thanks!\n. Any update on the chrome.sockets.tcp.secure bug?\nThe chromium issue url (https://code.google.com/p/chromium/issues/detail?id=403076) seems to be broken. But it's still visible in the chromium-bugs google group:\nhttps://groups.google.com/a/chromium.org/forum/#!topic/chromium-bugs/i9qykTWzj6g\nThis has been a problem for us a while now, since we can't switch to the native TLS stack on iOS and android because of it. We already bugged Matt Gaunt from the Chrome Team when he was in Munich (https://twitter.com/tankredhase/status/573243929333776384). It would be great if someone from the CCA team could also drive this issue from your side :/\nthanks\n. Ok thanks. I have opened a new issue to track the progress: https://github.com/MobileChromeApps/mobile-chrome-apps/issues/532\n. Not yet. The current plan is to replace chrome.socket with the use the new api in our tcp-socket shim once it's available on Chrome, Android and iOS.\n. FYI @felixhammerl is adding support for chrome.sockets.tcp and chrome.sockets.tcp.secure to our tcp-socket shim this sprint. So we'll soon have a full blown test case to test your new iOS socket implementation with our full IMAP/SMTP stack on top in the coming days.\n. We got it working! The full stack chrome.sockets.tcp + JS TLS (forge) + IMAP/SMTP on top. Great job guys and thanks again for all your help @clelland @mmocny @agrieve @oahziur. Here's a screenshot:\nhttps://twitter.com/whiteoutio/status/525666776810790912\n@felixhammerl and me have opened the whisky to celebrate :)\n. I'm getting too with cca v0.6.0 on Android 5.1.0\n\nMy use case is that I'm trying to load an HTML file into a sandboxed iframe. This worked fine pre cca-0.6.0. The code is here:\nhttps://github.com/whiteout-io/mail-html5/blob/master/src/tpl/read.html#L127 \n. Oh and it happens every time for me. Not just some of the time.\n. So I tried the iOS ... same problem. The iframe is not shown. Perhaps this is an issue caused by the injected CSP. Is there any way to deactivate CSP?\n. This seems to be an issue with the org.chromium.iosSocketsCommon plugin. Is there any workaround to just build an android app and ignore iOS?\nthanks\n. Thanks for your quick help.\nDoes this mean that chrome.sockets.tcpis now available for iOS?\n. Does the api have chrome.sockets.tcp.secure as well? I saw that you still have a PR open for that.\n. Also. I'm currently testing our old code that still uses the depricated chrome.socket api. Was support for this removed? Because our shim does not work anymore. thanks\n. Still can't build iOS:\n```\nRunning Cordova Command: plugin rm org.chromium.system.network\nThe plugin 'org.chromium.system.network' is required by (org.chromium.socket), skipping uninstallation.\nError: Hook failed with error code 1: /Users/tanx/Projects/whiteout.io/mail-html5/release/cca/Whiteout/hooks/before_prepare/cca-pre-prepare.js\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/src/hooks/HooksRunner.js:194:23\n    at _rejected (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:808:24)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:834:30\n    at Promise.when (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:1079:31)\n    at Promise.promise.promiseDispatch (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:752:41)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:574:44\n    at flush (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:419:13)\n```\n. Thanks so much for your quick support guys.\n@felixhammerl and me will start integrating the chrome.sockets.tcp branch for our TCPSocket shim and test all the goodness tomorrow.\nWe'll let you know if we have any issues.\n. Now I get this. This is my manifest.json: https://github.com/whiteout-io/mail-html5/blob/master/src/manifest.json\n```\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin rm org.chromium.system.network\nThe plugin 'org.chromium.system.network' is required by (org.chromium.socket), skipping uninstallation.\nError: Hook failed with error code 1: /Users/tanx/Projects/whiteout.io/mail-html5/release/cca/Whiteout/hooks/before_prepare/cca-pre-prepare.js\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/src/hooks/HooksRunner.js:194:23\n    at _rejected (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:808:24)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:834:30\n    at Promise.when (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:1079:31)\n    at Promise.promise.promiseDispatch (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:752:41)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:574:44\n    at flush (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:419:13)\n``\n. Yes. It seems the cordova plugin forchrome.socket` was not downloaded if permission for the deprecated api is not set. My mistake.\n. > Crosswalk bug?\nLooks like it. I created a ticket here in the crosswalk Jira:\nhttps://crosswalk-project.org/jira/browse/XWALK-2857\n. I have the same problem. I followed the instructions:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Publish.md\nAnd get *-release-unsigned.apk files as well. Please help, can't release :(\nUsing cca version 0.5.1\n. So I've been trying out different things and it seems I've found a work around. At first I did not set the storePassword and keyPassword attributes directly in the android-release-keys.properties file, but rather entered them on demand. Setting the two directly in the file solves the issue.\n. Is there any way to run the current master of cca locally? We need to release on iOS for an internal demo.\nThanks.\n. kk thx!\n. The error was on our side. Sorry for the noise. As you were :+1: \n. This is especially bad because we store the user's private PGP key in IDB. This bugs basically leads to complete data loss if users don't have the key on another device :(\n. Well we shiped the previous version of our using cca v0.5.1 which had an older version of the crosswalk webview if I understand correctly. Then we shiped the current version of our app using cca v0.6.0 which updated crosswalk. The IDB was empty for users that upgraded.\nIs that enough info? Thanks\n. Great thx for looking into this\n. Ok. Thanks for the info. I wonder why Apple isn't working more closely with the community on this. WKWebView has basically been unusable since the release of iOS 8.0. If I remember correctly even Chrome for iOS still uses UIWebView because of the limitations :(\n. > I fixed this one a couple hours ago: goto android SDK Manager and install:\nThanks that fixed the issue for me. Perhaps cca could warn the developer by checking the SDK dependencies in the preflight checks?\n. Thanks for the quick response. @mikewest was kind enough to point the existence of the CSP meta tag out to me a few months ago. Just thinking out loud here...\nFrom what I understand the reasoning behind the default CSP settings in Chrome Apps on desktop seem to be: \"because we give you powerful new Apis like Access to the Filesystems and raw TCP sockets, you'll need to play by these stricter new rules\" https://developer.chrome.com/apps/contentSecurityPolicy.html. Which makes total sense.\nSince Chrome App developers are used to these constraints on the desktop and your cca tool generates iOS and Android apps from that source code, how about setting the same default CSP setting in the resulting cordova apps as well (for supported platforms iOS 7 and Android 4.4+). This would take the burden of having to do this (and potentially doing it wrong) off developers and make it a part of the tool chain.\nThanks\n. Ok got it. Let me know if I can help with testing any potential approach on our use-case.\n. Ok. I'll try to add script-src 'self' chrome-extension: gap: to the directives and see if that works.\n. Sorry no. It's in the backlog, but I didn't get around to it yet.\nIt would be great if CSP was possible on mobile chrome apps. Our usecase\ncan't risk compromising the user's data due to XSS. We're writing a PGP\nmail client in html5, so CSP is kind of a must have :)\nAm 07.03.2014 um 04:04 schrieb Michal Mocny notifications@github.com:\n@tanx https://github.com/tanx Any update on how your experiments are\ngoing? I don't think anyone on our team has taken another looks since\nAndrew investigated, but we may want to return to this.\n\nReply to this email directly or view it on\nGitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/73#issuecomment-36963845\n.\n\nWhiteout Networks GmbH c/o Werk1\nGrafinger Str. 6\nD-81671 M\u00fcnchen\nGesch\u00e4ftsf\u00fchrer: Oliver Gajek\nRG M\u00fcnchen HRB 204479\n. Sorry. It's been a while...\nI've tried default-src 'self' chrome-extension: gap: file: on Android 4.4. and it does not work. The screen is just blank. So currently I can only leave CSP off on mobile, which is not really desirable :/\nAny progress in your experiments so far?\n. So, I've finally gotten CSP to work with the following meta tag in the html document's head:\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self' chrome-extension:; object-src 'none'; connect-src 'self' chrome-extension: https://*.whiteout.io; style-src 'self' chrome-extension: 'unsafe-inline'; img-src 'self' chrome-extension: data:\">\nThis is loose enough to allow loading of all the corcova/chrome assets that are injected at runtime, but still it's strict enough to prevent XSS via inline scripts. Thanks again for your help!\n. Happy to help increase security on Chrome Apps :)\nOne addition: I tested the above meta tag successfully on Android 4.4. It did not work on iOS 7, and I wasn't able to debug why, since the console in Safari Remote Debugging only shows logs from the time the debugger started, not before.\nBut I'm sure there is a way to relax CSP so it works on iOS too. I suspect that the assets have a different origin on iOS than chrome-extension:// but I haven't figured out the magic formula yet.\n. Another thing I found while debugging on Android ... It seems that cordova.js uses eval and my CSP blocks that code from executing. Specifically it's this line:\nhttps://github.com/apache/cordova-js/blob/70cdca3055a6631ab368ce6ef1770695e2eb5130/src/android/exec.js#L188\nI could just allow 'unsafe-eval' but that is not such a good idea, since using eval is such a big attack surface. Perhaps you could patch cordova.js to use something other than eval?\n. So i got iOS to work as well now. The following directive was tested on iOS 7, Android 4.4 and Desktop:\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self' chrome-extension: file: gap:; object-src 'none'; script-src 'self' 'unsafe-eval' chrome-extension: file: gap:; connect-src *; style-src 'self' 'unsafe-inline' chrome-extension: file: gap:; img-src 'self' chrome-extension: file: gap: data:\">\nIt's quite loose since it allows 'unsafe-eval' but at least it block XSS via inline scripts, which is useful.\nIf there is some way for the CCA toolchain to inject the meta tag at build/runtime it would be great, since developers would get similar protection to desktop chrome apps without needing to do anything themselves.\n. Ok great!\n. Hi,\nI'm having problems with this as well on Android 4.4 with cca 0.4 using the crosswalk WebView. It doesn't work with chrome.fileSystem:\nchrome.fileSystem.chooseEntry({\n    type: 'saveFile',\n    suggestedName: filename\n}, function(file) {\n    file.createWriter(function(writer) {\n        writer.onerror = callback;\n        writer.onwriteend = function() {\n            callback();\n        };\n        writer.write(new Blob([content], {\n            type: contentType\n        }));\n    }, callback);\n});\nIt doesn't work with a.download either:\ndocument.body.appendChild(a);\na.style = \"display: none\";\na.href = window.URL.createObjectURL(new Blob([content], {\n    type: contentType\n}));\na.download = filename;\na.click();\nBoth solutions work fine for Chrome Apps on the desktop. This is the only showstopper for moving Whiteout from Alpha to Beta. Other than that cca has gotten much better :+1: \nThanks\n. When testing our App in the Chrome Browser on Android the a.download approach worked fine. In the crosswalk webview a.download seems to be supported (in terms of the attribute being there during debugging). But it did not trigger a download.\n. The usecase is downloading an email attachment from a PGP encrypted message to the download folder via a Blob Url.\nIt would be great if the standard api to worked, since the same code will also be deployed as a webmail solution and we do not have chrome/cordova apis in that environment.\n. > If it's the only thing that's stopping you from hitting beta, though, I wouldn't wait around for an official fix; I unfortunately can't say how long that will take.\nYeah. We put the Android App into beta already: https://whiteout.io/#product\nAs soon as chrome.sockets.tcp works on iOS, we can activate that one too.\n. I'm getting redirect_uri_mismatch with a 400 on iOS as well.\nThe cordova iOS app opens the chrome browser and then after I login the gmail user via the web interface, the chrome redirect to the app doesn't work. Is there something I need to set in the Google Api Console for this to work on iOS? thanks\n. Ok. It seems I had to create a new Client ID specifically for iOS in the Google Apis Console for this to work: https://console.developers.google.com\nDo I need to switch the client Id in the chrome app's manifest.json for iOS now or can I use the same?\n. Awesome thanks! It works now :)\n. > Thanks for the issue! I'll look into this.\nGreat thanks.\n\nThis likely isn't the problem, but it's worth noting: the https://www.googleapis.com/auth/userinfo.email scope is deprecated in favor of email, and will no longer be supported as of September 1st.\n\nChanging to the scope to \"email\" didn't fix the problem, but thanks for the heads up.\n. I'm using:\nhttps://www.googleapis.com/oauth2/v1/tokeninfo?access_token=token\nDo I have to add something to the mobile chrome manifest? What does your manifest.json look like?\n. > Does using the userinfo endpoint I suggested work for you?\nI'll test it tomorrow and get back to you. Thanks for the support.\n\nIt is odd that you are seeing one scope in the permission request dialog but not the other. Using the email scope, I get asked permission to \"know who you are on Google\".\n\nChrome Show me this on the desktop as well. Unfortunately not on Android. Perhaps try to add the scope https://mail.google.com/to your manifest to reconstruct the problem. Then you would be using the same config as me.\n\nAre you seeing one scope but not the other every time?\n\nSo far when I tested it, it only showed one scope.\n\nDoes the app show the native account chooser?\n\nYes. That all worked fine. I was able to add my google account to Android and log in.\n. So I did some debugging and the problem was not the chrome.identity api but the CORS request to https://www.googleapis.com/. Apparently I forgot to add the resource to the permissions in my manifest.json and the CORS request returned a 404 since the XHR headers were not correct.\nThe request worked in the Desktop app without the permission, that's why I thought it was an Android specific problem. Here's how I fixed it:\n\"permissions\": [\n    \"https://www.googleapis.com/\",\n    \"identity\", {\n      \"socket\": [\n        \"tcp-connect:imap.gmail.com:993\",\n        \"tcp-connect:smtp.gmail.com:465\"\n      ]\n    }\n  ]\nThanks for your help.\n. Thanks! I just tried this for the Desktop version of Chrome and it crashes with the accountHint attribute set. Is there anyway to ask the chrome apis which runtime I'm currently running on?\n. Also. The account attribute is not returned on the desktop.\nI tried calling the getAccounts methods, but that isn't implmented yet either???\nhttps://developer.chrome.com/apps/identity#method-getAccounts\n. > Unfortunately, yes, getAuthToken doesn't like other things being passed in its details. This function will allow you to determine your platform; on Android apps created using CCA, it will return cordova-android.\nOk great thanks. I'll try getPlatformInfo. It looks like it will solve the issue.\n\nThanks for the heads up on getAccounts. This appears to be a new addition to the API. I can have it added this afternoon.\n\nIts seems the api hasn't landed in Chrome stable yet either so I can't use it yet anyway. If I understand correctly the api will return an account unique id and not the user's email address?\nhttps://developer.chrome.com/apps/identity#type-AccountInfo\nIf I may give some feedback on the current api. It would be nice to get the user's email address in a consistent api across platforms. The current workaround for us is to call googleapis.com/oauth2/v3/userinfo via an HTTP request to get the email address, which seems a bit redundant. I also have to add the email oauth2 scope in the manifest.json, which requests access to the users Google+ Account and other personal information I don't really need. This could alarms users and prevent them from continuing in the authentication process in our app, since it's requesting a lot of information :/\nThanks again for the quick support!\n. File input works again in chromium webview since Android 4.4.3\n. Yeah I deleted the generated directory and did a fresh cca create\n. Awesome thanks!\n. Some more info on the bug. I've got cca 0.0.11 installed on my mac at home and 0.1.0 installed at work. Both have the same version of the Android SDK installed. When I build the app with 0.0.11 the call to chrome.identity.getAuthToken works fine. When I build with 0.1.0 it crashed.\n. Thanks so much. The workaround will allow me to continue testing builds internally until it's fixed upstream.\n. Great thanks!\nOne question... I had trouble calling the identity api on iOS today as well. Could it be that a similar issue is also present on iOS?\n. Ok. I'll dig into the problem with remote debugging via safari to understand this better and open a bug if it's really a cca issue. \n. I'm testing a new android release of whiteout mail build w/ cca 0.3.1 and crosswalk. Clicking on links now works as intended -> opening an intent to display in chrome/firefox.\nThanks for your quick help!\n. Is the fix already in cca 0.3.1? I tried to verify by doing a re-create of the Android App, but unfortunately selecting a file does not work.\n. Ok. I'll try again with 0.3.2\n. Confirmed working with 0.4.0.\nThanks guys... At this rate, we can go from alpha to beta soon :+1: \n. Ok good to know. We'll migrate to the new api too then.\n. Great thanks!\n. Any update on the chrome.sockets.tcp.secure bug?\nThe chromium issue url (https://code.google.com/p/chromium/issues/detail?id=403076) seems to be broken. But it's still visible in the chromium-bugs google group:\nhttps://groups.google.com/a/chromium.org/forum/#!topic/chromium-bugs/i9qykTWzj6g\nThis has been a problem for us a while now, since we can't switch to the native TLS stack on iOS and android because of it. We already bugged Matt Gaunt from the Chrome Team when he was in Munich (https://twitter.com/tankredhase/status/573243929333776384). It would be great if someone from the CCA team could also drive this issue from your side :/\nthanks\n. Ok thanks. I have opened a new issue to track the progress: https://github.com/MobileChromeApps/mobile-chrome-apps/issues/532\n. Not yet. The current plan is to replace chrome.socket with the use the new api in our tcp-socket shim once it's available on Chrome, Android and iOS.\n. FYI @felixhammerl is adding support for chrome.sockets.tcp and chrome.sockets.tcp.secure to our tcp-socket shim this sprint. So we'll soon have a full blown test case to test your new iOS socket implementation with our full IMAP/SMTP stack on top in the coming days.\n. We got it working! The full stack chrome.sockets.tcp + JS TLS (forge) + IMAP/SMTP on top. Great job guys and thanks again for all your help @clelland @mmocny @agrieve @oahziur. Here's a screenshot:\nhttps://twitter.com/whiteoutio/status/525666776810790912\n@felixhammerl and me have opened the whisky to celebrate :)\n. I'm getting too with cca v0.6.0 on Android 5.1.0\n\nMy use case is that I'm trying to load an HTML file into a sandboxed iframe. This worked fine pre cca-0.6.0. The code is here:\nhttps://github.com/whiteout-io/mail-html5/blob/master/src/tpl/read.html#L127 \n. Oh and it happens every time for me. Not just some of the time.\n. So I tried the iOS ... same problem. The iframe is not shown. Perhaps this is an issue caused by the injected CSP. Is there any way to deactivate CSP?\n. This seems to be an issue with the org.chromium.iosSocketsCommon plugin. Is there any workaround to just build an android app and ignore iOS?\nthanks\n. Thanks for your quick help.\nDoes this mean that chrome.sockets.tcpis now available for iOS?\n. Does the api have chrome.sockets.tcp.secure as well? I saw that you still have a PR open for that.\n. Also. I'm currently testing our old code that still uses the depricated chrome.socket api. Was support for this removed? Because our shim does not work anymore. thanks\n. Still can't build iOS:\n```\nRunning Cordova Command: plugin rm org.chromium.system.network\nThe plugin 'org.chromium.system.network' is required by (org.chromium.socket), skipping uninstallation.\nError: Hook failed with error code 1: /Users/tanx/Projects/whiteout.io/mail-html5/release/cca/Whiteout/hooks/before_prepare/cca-pre-prepare.js\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/src/hooks/HooksRunner.js:194:23\n    at _rejected (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:808:24)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:834:30\n    at Promise.when (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:1079:31)\n    at Promise.promise.promiseDispatch (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:752:41)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:574:44\n    at flush (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:419:13)\n```\n. Thanks so much for your quick support guys.\n@felixhammerl and me will start integrating the chrome.sockets.tcp branch for our TCPSocket shim and test all the goodness tomorrow.\nWe'll let you know if we have any issues.\n. Now I get this. This is my manifest.json: https://github.com/whiteout-io/mail-html5/blob/master/src/manifest.json\n```\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin rm org.chromium.system.network\nThe plugin 'org.chromium.system.network' is required by (org.chromium.socket), skipping uninstallation.\nError: Hook failed with error code 1: /Users/tanx/Projects/whiteout.io/mail-html5/release/cca/Whiteout/hooks/before_prepare/cca-pre-prepare.js\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/src/hooks/HooksRunner.js:194:23\n    at _rejected (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:808:24)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:834:30\n    at Promise.when (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:1079:31)\n    at Promise.promise.promiseDispatch (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:752:41)\n    at /opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:574:44\n    at flush (/opt/local/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\n    at process._tickCallback (node.js:419:13)\n``\n. Yes. It seems the cordova plugin forchrome.socket` was not downloaded if permission for the deprecated api is not set. My mistake.\n. > Crosswalk bug?\nLooks like it. I created a ticket here in the crosswalk Jira:\nhttps://crosswalk-project.org/jira/browse/XWALK-2857\n. I have the same problem. I followed the instructions:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Publish.md\nAnd get *-release-unsigned.apk files as well. Please help, can't release :(\nUsing cca version 0.5.1\n. So I've been trying out different things and it seems I've found a work around. At first I did not set the storePassword and keyPassword attributes directly in the android-release-keys.properties file, but rather entered them on demand. Setting the two directly in the file solves the issue.\n. Is there any way to run the current master of cca locally? We need to release on iOS for an internal demo.\nThanks.\n. kk thx!\n. The error was on our side. Sorry for the noise. As you were :+1: \n. This is especially bad because we store the user's private PGP key in IDB. This bugs basically leads to complete data loss if users don't have the key on another device :(\n. Well we shiped the previous version of our using cca v0.5.1 which had an older version of the crosswalk webview if I understand correctly. Then we shiped the current version of our app using cca v0.6.0 which updated crosswalk. The IDB was empty for users that upgraded.\nIs that enough info? Thanks\n. Great thx for looking into this\n. Ok. Thanks for the info. I wonder why Apple isn't working more closely with the community on this. WKWebView has basically been unusable since the release of iOS 8.0. If I remember correctly even Chrome for iOS still uses UIWebView because of the limitations :(\n. > I fixed this one a couple hours ago: goto android SDK Manager and install:\nThanks that fixed the issue for me. Perhaps cca could warn the developer by checking the SDK dependencies in the preflight checks?\n. ",
    "mikewest": "The  tag will certainly have effect when it's injected, but only for actions that take place after the injection. That is:\n<script src=\"http://example.com/script.js\"></script>\n<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'none'\">\nWill result in script.js executing, then a CSP being deployed that would prevent future script execution. It's potentially worth doing, though I'm not entirely sure I understand your use case.\nIf you've got questions, though, I'm happy to answer them. :)\n. The  tag will certainly have effect when it's injected, but only for actions that take place after the injection. That is:\n<script src=\"http://example.com/script.js\"></script>\n<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'none'\">\nWill result in script.js executing, then a CSP being deployed that would prevent future script execution. It's potentially worth doing, though I'm not entirely sure I understand your use case.\nIf you've got questions, though, I'm happy to answer them. :)\n. ",
    "meeDamian": "@mmocny Any updates on that?\n. @mmocny Any updates on that?\n. ",
    "csantanapr": "hehe !\nWell I'm an iOS guy\nI was thinking that creating a Cordova Plugin to call the Native iOS ChromCast API 1\nThen is matter of using the cordova bridge to call the native library already available by the awesome guys from Chrome Cast :-)\nLet me know If Im on the wrong track.\n. hehe !\nWell I'm an iOS guy\nI was thinking that creating a Cordova Plugin to call the Native iOS ChromCast API 1\nThen is matter of using the cordova bridge to call the native library already available by the awesome guys from Chrome Cast :-)\nLet me know If Im on the wrong track.\n. ",
    "acidhax": "You need to make a Plugin to use the Native API..\n. Any progress?\n. I've been working on it today, it's not pluginnable yet, https://github.com/acidhax/cordova-chromecast/.\nEdit:\nIt's not pretty to look at, but, any help would be appreciated.\n. I'm sure it's possible, it's just like trying to add a library to any Java project..\n. Fixed!\n. Fixed!\n. Yeah, only on Windows...\nthe cordova-android folder most definitely does not exist-- The rest of the path does though..\nI can create a vanilla cordova android project just fine...\n. C:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca>ls\nREADME.md  RELEASENOTES.md  chrome-cordova  cordova  docs  node_modules  package.json  src  templates\nC:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca\\cordova>ls\nPhoneGap-InAppPurchase-iOS\n. C:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca\\cordova>ls\nPhoneGap-InAppPurchase-iOS\n. Exactly the same :-/\n. Windows 8.1, cmd.exe... I can try cygwin to see what happens, too.\n. Cygwin dies in a fiery death...\n. The cache clear totally fixed it-- I have no idea what happened.\n. You need to make a Plugin to use the Native API..\n. Any progress?\n. I've been working on it today, it's not pluginnable yet, https://github.com/acidhax/cordova-chromecast/.\nEdit:\nIt's not pretty to look at, but, any help would be appreciated.\n. I'm sure it's possible, it's just like trying to add a library to any Java project..\n. Fixed!\n. Fixed!\n. Yeah, only on Windows...\nthe cordova-android folder most definitely does not exist-- The rest of the path does though..\nI can create a vanilla cordova android project just fine...\n. C:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca>ls\nREADME.md  RELEASENOTES.md  chrome-cordova  cordova  docs  node_modules  package.json  src  templates\nC:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca\\cordova>ls\nPhoneGap-InAppPurchase-iOS\n. C:\\Users\\Mathieu\\AppData\\Roaming\\npm\\node_modules\\cca\\cordova>ls\nPhoneGap-InAppPurchase-iOS\n. Exactly the same :-/\n. Windows 8.1, cmd.exe... I can try cygwin to see what happens, too.\n. Cygwin dies in a fiery death...\n. The cache clear totally fixed it-- I have no idea what happened.\n. ",
    "AVGP": "I am currently working on a native Android plugin for Cordova - maybe @csantanapr and me can join forces to provide a cordova-chromecast plugin for iOS an Android?\n. Sloooowwwwllly progressing.\nI don't have as much time for it as I'd like to, but whenever I can squeeze a few minutes out of my day, I'm working on it.\nRight now I'm trying to get towards discovering available devices and I get an exception complaining about discovery only being allowed from the main thread though.\nCode is updated on http://github.com/AVGP/cordova-chromecast.git\n. That looks like a great starting point!\nI have a question regarding\nYou will need to import the following projects as Library Projects in order for this plugin to work\nHow does that work without Eclipse or Android Studio? Is there a scriptable way to this?\n. I am currently working on a native Android plugin for Cordova - maybe @csantanapr and me can join forces to provide a cordova-chromecast plugin for iOS an Android?\n. Sloooowwwwllly progressing.\nI don't have as much time for it as I'd like to, but whenever I can squeeze a few minutes out of my day, I'm working on it.\nRight now I'm trying to get towards discovering available devices and I get an exception complaining about discovery only being allowed from the main thread though.\nCode is updated on http://github.com/AVGP/cordova-chromecast.git\n. That looks like a great starting point!\nI have a question regarding\nYou will need to import the following projects as Library Projects in order for this plugin to work\nHow does that work without Eclipse or Android Studio? Is there a scriptable way to this?\n. ",
    "grahamkennery": "@acidhax and I have made much progress with cordova-chromecast:  https://github.com/acidhax/cordova-chromecast/\nWe scrapped what we started with, and began implementing the spec as found in the official Google Cast SDK. The goal is to make cordova-chromecast 1:1 with the official Javascript SDK and we're off to a good start.\nAlso, so far, only Android support.\n. You are making sense! Next on my list was going to be figuring out how to fix that. I'll try tackling it sometime soon.\n. Pesky UDP! I'll be sure to test next time!\nAlso, ICLA has been signed as of this morning!\n. Yeah - I completely forgot about UDP, made the SocketData.connect() callback properly now for UDP. It should probably be moved into a separate thread as well.\nIf you want, I can reorganize the ConnectThread to set up both the TCP and the UDP sockets.\n. @acidhax and I have made much progress with cordova-chromecast:  https://github.com/acidhax/cordova-chromecast/\nWe scrapped what we started with, and began implementing the spec as found in the official Google Cast SDK. The goal is to make cordova-chromecast 1:1 with the official Javascript SDK and we're off to a good start.\nAlso, so far, only Android support.\n. You are making sense! Next on my list was going to be figuring out how to fix that. I'll try tackling it sometime soon.\n. Pesky UDP! I'll be sure to test next time!\nAlso, ICLA has been signed as of this morning!\n. Yeah - I completely forgot about UDP, made the SocketData.connect() callback properly now for UDP. It should probably be moved into a separate thread as well.\nIf you want, I can reorganize the ConnectThread to set up both the TCP and the UDP sockets.\n. ",
    "JudeOsborn": "@csantanapr, have you made any progress on an iOS plugin for Cordova? There has been HUGE progress on the Android version (https://github.com/GetVideostream/cordova-chromecast). It's basically functional now. An iOS version of this same plug-in (which mimics the Chrome API) would be amazing.\n. @csantanapr, have you made any progress on an iOS plugin for Cordova? There has been HUGE progress on the Android version (https://github.com/GetVideostream/cordova-chromecast). It's basically functional now. An iOS version of this same plug-in (which mimics the Chrome API) would be amazing.\n. ",
    "Haemp": "Ill take a look at it tonight and report back.\n. To sum up the issue: \n   1) Set an alarm \n   2) Set the alarm handler to trigger a notification\n   3) Close the app before the alarm triggers\nResult: when the alarm triggers the app briefly flashes and then gets minimised - the notification issnt triggered.\nChanged:  I replace \"Theme.Black.NoTitleBar\" with  \"Theme.Translucent\" in AndroidManifest.xml\nResult: Nothing happens, no flash, no notification. \nLet me know if there is any other information I can give you that'll make this clearer (not an android dev). \n. The notification works when the app is in the foreground - both inside and outside of an alarm. It also works fine whilst the app is in the background (minimized - visible in the multitasking page). It is only when the app is closed that the notification (or the alarm) is not triggered.  \nFor the desktop It works when the app is running but not if it has been closed. I honestly wasn't expecting it to work for desktop since I closed the app - should it?\nLet's just make sure we understand each other - it is only when the app is closed - aka swiped away from the multitask pane that this issue occurs. If it is running in the background it's fine and dandy.\nHere is the gist of what I'm trying to do:\n``` javascript\nchrome.alarms.onAlarm.addListener(function( alarm ){\n    chrome.notifications.create('randomId', {\n      type: \"basic\",\n      title: \"Guest Due\",\n      message: \"Hey, looks like guest is due back.\",\n      iconUrl: \"/img/image-128.png\"\n    }, function(){ console.log('Notification created!'); });\n});\n// trigger alarm in 5s\nchrome.alarms.create('randomId', {when: 5*1000 + Date.now()});\n```\nHope this helps\n. Ah yes that sounds like what is going on here. I'll do some re-architecting and try it out again.\n. Once I refactored it to handle the alarm listener in the background.js file it now works beautifully. Thanks for your help.\n. I see, I was getting confused by chrome.app.runtime and chrome.runtime - chrome.app.runtime only has onLaunch and onRestart. What is the difference between the two?\nThe effect I was looking for was the onSuspendCancelled and it works perfectly.\nThanks for helping out!\n. Thanks for clearing that up, I've been wondering that myself. \n. @BlueHayes Alright so this is possible then, I did some preliminary testing but didn't get it to work. I'll try again once I get the time. Thanks\n. Thanks for getting to this Michal.\nI should have said - both the code snippets are executed from the console in two separate executions. The get being executed well after the set had been confirmed. \nThe modelling abstraction I'm using to fetch from and set data to chrome.storage.local (handles localStorage as well for use in regular webapp) encapsulates the calls with promises. But many models in the app uses it to store their data separately causing a cascade of read and writes especially in the start of the app. \nI'll have to figure out a good way to queue up all those calls and execute them in a chain for now.\n. Yes this is the same issue, upgraded to Canary and it now works. \nBtw, are there any perf increases with Crosswalk or is it just for the missing APIs?\n. +1 this would be great\n. Ill take a look at it tonight and report back.\n. To sum up the issue: \n   1) Set an alarm \n   2) Set the alarm handler to trigger a notification\n   3) Close the app before the alarm triggers\nResult: when the alarm triggers the app briefly flashes and then gets minimised - the notification issnt triggered.\nChanged:  I replace \"Theme.Black.NoTitleBar\" with  \"Theme.Translucent\" in AndroidManifest.xml\nResult: Nothing happens, no flash, no notification. \nLet me know if there is any other information I can give you that'll make this clearer (not an android dev). \n. The notification works when the app is in the foreground - both inside and outside of an alarm. It also works fine whilst the app is in the background (minimized - visible in the multitasking page). It is only when the app is closed that the notification (or the alarm) is not triggered.  \nFor the desktop It works when the app is running but not if it has been closed. I honestly wasn't expecting it to work for desktop since I closed the app - should it?\nLet's just make sure we understand each other - it is only when the app is closed - aka swiped away from the multitask pane that this issue occurs. If it is running in the background it's fine and dandy.\nHere is the gist of what I'm trying to do:\n``` javascript\nchrome.alarms.onAlarm.addListener(function( alarm ){\n    chrome.notifications.create('randomId', {\n      type: \"basic\",\n      title: \"Guest Due\",\n      message: \"Hey, looks like guest is due back.\",\n      iconUrl: \"/img/image-128.png\"\n    }, function(){ console.log('Notification created!'); });\n});\n// trigger alarm in 5s\nchrome.alarms.create('randomId', {when: 5*1000 + Date.now()});\n```\nHope this helps\n. Ah yes that sounds like what is going on here. I'll do some re-architecting and try it out again.\n. Once I refactored it to handle the alarm listener in the background.js file it now works beautifully. Thanks for your help.\n. I see, I was getting confused by chrome.app.runtime and chrome.runtime - chrome.app.runtime only has onLaunch and onRestart. What is the difference between the two?\nThe effect I was looking for was the onSuspendCancelled and it works perfectly.\nThanks for helping out!\n. Thanks for clearing that up, I've been wondering that myself. \n. @BlueHayes Alright so this is possible then, I did some preliminary testing but didn't get it to work. I'll try again once I get the time. Thanks\n. Thanks for getting to this Michal.\nI should have said - both the code snippets are executed from the console in two separate executions. The get being executed well after the set had been confirmed. \nThe modelling abstraction I'm using to fetch from and set data to chrome.storage.local (handles localStorage as well for use in regular webapp) encapsulates the calls with promises. But many models in the app uses it to store their data separately causing a cascade of read and writes especially in the start of the app. \nI'll have to figure out a good way to queue up all those calls and execute them in a chain for now.\n. Yes this is the same issue, upgraded to Canary and it now works. \nBtw, are there any perf increases with Crosswalk or is it just for the missing APIs?\n. +1 this would be great\n. ",
    "bergie": "@brettcannon thanks! This explains why our icons were rendered incorrectly in Chrome OS dock\n\n. @mmocny the workaround was easy by just removing the path from manifest.json for now. I just wanted to file the bug since finding out why my requests were failing was sort of non-obvious and others may stumble on the same issue\n. @brettcannon thanks! This explains why our icons were rendered incorrectly in Chrome OS dock\n\n. @mmocny the workaround was easy by just removing the path from manifest.json for now. I just wanted to file the bug since finding out why my requests were failing was sort of non-obvious and others may stumble on the same issue\n. ",
    "GradyD": "I follow now, I was thinking more along the lines of Android apps which would want scrolling. Am I thinking about the implantation of this project wrong? \nI am thinking that instead of messing around with java you could easily create the apps using this project and it would be able to do some of the functionality. For example, a music/video site could easily create an app using this project with their current APIs and source instead of having to do the work to properly populate and link using Java. In this case you would want to scroll.\nIf I understand what you are saying is this is more for taking a desktop chrome app and porting it to Android/IOS using the same backend and just a new UI to display the content that is mobile focused?\n. I follow now, I was thinking more along the lines of Android apps which would want scrolling. Am I thinking about the implantation of this project wrong? \nI am thinking that instead of messing around with java you could easily create the apps using this project and it would be able to do some of the functionality. For example, a music/video site could easily create an app using this project with their current APIs and source instead of having to do the work to properly populate and link using Java. In this case you would want to scroll.\nIf I understand what you are saying is this is more for taking a desktop chrome app and porting it to Android/IOS using the same backend and just a new UI to display the content that is mobile focused?\n. ",
    "edmulraney": "This would be helpful :)\n. This would be helpful :)\n. ",
    "shakiba": "Being able to add it as dev is also great! Thanks!\n. Being able to add it as dev is also great! Thanks!\n. ",
    "FreakTheMighty": "@mmocny can you point me to discussions regarding changes to the cordova camera plugin? I'm very interested in the camera API and would like to follow developing plans and progress.\n. No problem. I dug around through the cordova mailing lists and found rumblings about the need for cleanup of the camera plugin. I was hoping for discussion on how to provide an iOS shim for getUserMedia.\n. @drkemp sounds great. I just wanted to provide a small, and probably obvious update. I was able to get the debugger working and can confirm that the media stream returns with an audio track but no video tracks. Also, it is my understanding that the project is now using crosswalk. I have tested getUserMedia on a crosswalk project and everything worked well..\nI'm very much looking forward to this feature! Thanks.\n. Seems to be the same as this ticket.\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/issues/15#issuecomment-47352535\n. I'm seeing this issue in 0.6.0. I set the body of my application to black and have added <preference name=\"BackgroundColor\" value=\"0x000000ff\"/> to the config.xml.\nThe result during launch, is flickering like so, white -> black -> white -> black.\ncca v0.6.0\ncordova-plugin-whitelist 1.0.0-dev \"Whitelist\"\norg.apache.cordova.file 1.3.3 \"File\"\norg.apache.cordova.geolocation 0.3.12 \"Geolocation\"\norg.apache.cordova.inappbrowser 0.6.0 \"InAppBrowser\"\norg.apache.cordova.network-information 0.2.15 \"Network Information\"\norg.apache.cordova.statusbar 0.1.10 \"StatusBar\"\norg.chromium.bootstrap 2.0.3 \"Chrome Apps Core\"\norg.chromium.cca-hooks 0.0.0 \"undefined\"\norg.chromium.common 1.0.6 \"Chrome Apps Common Utils\"\norg.chromium.i18n 2.0.0 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.1.0 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\norg.crosswalk.engine 0.0.1-dev \"Crosswalk Engine\"\n. @agrieve does this seem like a different issue from what was being discussed above, and what was supposed to be fixed with Crosswalk M37?\n. Using version 0.4.3 I see two builds the x86 and the arm build, but each is 39M. I was expecting close to the 18M mark mentioned at the top of the post. I'm including my plugin list:\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.1 \"File\"\norg.apache.cordova.inappbrowser 0.5.3 \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.13 \"Network Information\"\norg.apache.cordova.statusbar 0.1.8 \"StatusBar\"\norg.chromium.bootstrap 1.0.5 \"Chrome Apps Core\"\norg.chromium.common 1.0.3 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.2 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.3 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\n. Sorry, disregard my last comment. I unzipped the apk and found some expected files in there. I think cca is behaving as expected.\n. Hey @mmocny thanks for the quick response. I'll try to post an example reproducing the problem. It should be as simple as embedding the youtube iframe example.\n. I've uploaded an example CCA project demonstrating the issue. Basically, it's a copy and paste of the youtube iframe example into a CCA project.\nhttps://github.com/FreakTheMighty/YouTubeCCA\n. @mmocny where does the XHR polyfill live?\n. The XHR pollyfill says that its for pre-kitkat android. I'm running 4.4.4, so that would seem to imply the polyfill wouldn't be used.\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/8a40af74c4424c4f8e67652caf6ebe0f825feaeb/chrome-cordova/plugins/polyfill-xhr-features#xhr-blob\n. @agrieve thanks for your answer, now I'm not sure where I saw the difference.\n. I think I've hit the same issue that others are reporting. Like @eahutchins I'm building an Angular app. Its a relatively complex example, its built from the angular-fullstack yeoman template. I've uploaded the cca project  to github.\nThe same application works fine on Android. On iOS I see these messages and a blank screen:\ndeviceready has not fired after 5 seconds.\ncordova.js:1162\nChannel not fired: onDOMContentLoaded\n. When I reload the app in the Safari debugger I see these iOS logs. The NetworkStatus log seems interesting to me.\n2015-01-20 15:40:56.482 whoop[274:22810] Failed to load webpage with error: The operation couldn\u2019t be completed. (NSURLErrorDomain error -999.)\n2015-01-20 15:40:56.483 whoop[274:22810] Resetting plugins due to page load.\n2015-01-20 15:40:56.581 whoop[274:22810] Got token \n2015-01-20 15:40:56.582 whoop[274:22810] location.reload() detected. Reloading via chromeapp.html\n2015-01-20 15:40:56.719 whoop[274:22810] Failed to load webpage with error: The operation couldn\u2019t be completed. (NSURLErrorDomain error -999.)\n2015-01-20 15:40:56.745 whoop[274:22810] Resetting plugins due to page load.\n2015-01-20 15:40:57.419 whoop[274:22810] THREAD WARNING: ['NetworkStatus'] took '16.018066' ms. Plugin should use a background thread.\n. I started hacking out chunks of the index.html searching for what might be causing this. To my surprise I found that removing the comments solved my problem!\nThat doesn't seem right, but here's the diff between working and not. https://github.com/FreakTheMighty/cca-ios-issue/commit/7f7140e212a93b17872f6d06bfe839f008301b78\n. @agrieve to be clear, the ant.properties don't affect the cca build. They are used if I do a cordova build directly. The cordova build generates a signed build. I think this just shows that the key store is valid.\n. I've also seen this issue. It seems unique to crosswalk. Crosswalk appear to have a number of issues related to presenting a clean layout. Between this issue and flickering on start up and backgrounding its very challenging to get a polished looking application.\n. @longsleep adjustPan worked for me as well, thanks for the tip. Were you able to add this to the config.xml or are you modifying the AndroidManifest.xml directly?\nAlso, is anyone able to comment on why the default is adjustResize?\n. @agrieve I tried android:windowSoftInputMode=\"adjustPan\", but I'm pretty sure that didn't work. I'll need read over the ticket more.\nOn the subject of adjustResize, the flicker we're seeing seems like a bug in crosswalk, its not present when using the system webview.\nI've done a screen capture of the flickering:\nhttps://drive.google.com/file/d/0B0EqPYsVdSGFZ1JwcWdmOURsamM/view?usp=sharing\n. The problem disappeared after doing a cca upgrade. Just to test, I deleted the ios platform, and re-added it. This caused the problem to reappear. Once again, I reran cca upgrade, and the problem is resolved. Hmm.\nI'm going to leave this open for a minute incase anyone thinks this is something more than my development environment being screwed.\n. @mmocny can you point me to discussions regarding changes to the cordova camera plugin? I'm very interested in the camera API and would like to follow developing plans and progress.\n. No problem. I dug around through the cordova mailing lists and found rumblings about the need for cleanup of the camera plugin. I was hoping for discussion on how to provide an iOS shim for getUserMedia.\n. @drkemp sounds great. I just wanted to provide a small, and probably obvious update. I was able to get the debugger working and can confirm that the media stream returns with an audio track but no video tracks. Also, it is my understanding that the project is now using crosswalk. I have tested getUserMedia on a crosswalk project and everything worked well..\nI'm very much looking forward to this feature! Thanks.\n. Seems to be the same as this ticket.\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/issues/15#issuecomment-47352535\n. I'm seeing this issue in 0.6.0. I set the body of my application to black and have added <preference name=\"BackgroundColor\" value=\"0x000000ff\"/> to the config.xml.\nThe result during launch, is flickering like so, white -> black -> white -> black.\ncca v0.6.0\ncordova-plugin-whitelist 1.0.0-dev \"Whitelist\"\norg.apache.cordova.file 1.3.3 \"File\"\norg.apache.cordova.geolocation 0.3.12 \"Geolocation\"\norg.apache.cordova.inappbrowser 0.6.0 \"InAppBrowser\"\norg.apache.cordova.network-information 0.2.15 \"Network Information\"\norg.apache.cordova.statusbar 0.1.10 \"StatusBar\"\norg.chromium.bootstrap 2.0.3 \"Chrome Apps Core\"\norg.chromium.cca-hooks 0.0.0 \"undefined\"\norg.chromium.common 1.0.6 \"Chrome Apps Common Utils\"\norg.chromium.i18n 2.0.0 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.1.0 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\norg.crosswalk.engine 0.0.1-dev \"Crosswalk Engine\"\n. @agrieve does this seem like a different issue from what was being discussed above, and what was supposed to be fixed with Crosswalk M37?\n. Using version 0.4.3 I see two builds the x86 and the arm build, but each is 39M. I was expecting close to the 18M mark mentioned at the top of the post. I'm including my plugin list:\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.1 \"File\"\norg.apache.cordova.inappbrowser 0.5.3 \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.13 \"Network Information\"\norg.apache.cordova.statusbar 0.1.8 \"StatusBar\"\norg.chromium.bootstrap 1.0.5 \"Chrome Apps Core\"\norg.chromium.common 1.0.3 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.2 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.3 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\n. Sorry, disregard my last comment. I unzipped the apk and found some expected files in there. I think cca is behaving as expected.\n. Hey @mmocny thanks for the quick response. I'll try to post an example reproducing the problem. It should be as simple as embedding the youtube iframe example.\n. I've uploaded an example CCA project demonstrating the issue. Basically, it's a copy and paste of the youtube iframe example into a CCA project.\nhttps://github.com/FreakTheMighty/YouTubeCCA\n. @mmocny where does the XHR polyfill live?\n. The XHR pollyfill says that its for pre-kitkat android. I'm running 4.4.4, so that would seem to imply the polyfill wouldn't be used.\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/tree/8a40af74c4424c4f8e67652caf6ebe0f825feaeb/chrome-cordova/plugins/polyfill-xhr-features#xhr-blob\n. @agrieve thanks for your answer, now I'm not sure where I saw the difference.\n. I think I've hit the same issue that others are reporting. Like @eahutchins I'm building an Angular app. Its a relatively complex example, its built from the angular-fullstack yeoman template. I've uploaded the cca project  to github.\nThe same application works fine on Android. On iOS I see these messages and a blank screen:\ndeviceready has not fired after 5 seconds.\ncordova.js:1162\nChannel not fired: onDOMContentLoaded\n. When I reload the app in the Safari debugger I see these iOS logs. The NetworkStatus log seems interesting to me.\n2015-01-20 15:40:56.482 whoop[274:22810] Failed to load webpage with error: The operation couldn\u2019t be completed. (NSURLErrorDomain error -999.)\n2015-01-20 15:40:56.483 whoop[274:22810] Resetting plugins due to page load.\n2015-01-20 15:40:56.581 whoop[274:22810] Got token \n2015-01-20 15:40:56.582 whoop[274:22810] location.reload() detected. Reloading via chromeapp.html\n2015-01-20 15:40:56.719 whoop[274:22810] Failed to load webpage with error: The operation couldn\u2019t be completed. (NSURLErrorDomain error -999.)\n2015-01-20 15:40:56.745 whoop[274:22810] Resetting plugins due to page load.\n2015-01-20 15:40:57.419 whoop[274:22810] THREAD WARNING: ['NetworkStatus'] took '16.018066' ms. Plugin should use a background thread.\n. I started hacking out chunks of the index.html searching for what might be causing this. To my surprise I found that removing the comments solved my problem!\nThat doesn't seem right, but here's the diff between working and not. https://github.com/FreakTheMighty/cca-ios-issue/commit/7f7140e212a93b17872f6d06bfe839f008301b78\n. @agrieve to be clear, the ant.properties don't affect the cca build. They are used if I do a cordova build directly. The cordova build generates a signed build. I think this just shows that the key store is valid.\n. I've also seen this issue. It seems unique to crosswalk. Crosswalk appear to have a number of issues related to presenting a clean layout. Between this issue and flickering on start up and backgrounding its very challenging to get a polished looking application.\n. @longsleep adjustPan worked for me as well, thanks for the tip. Were you able to add this to the config.xml or are you modifying the AndroidManifest.xml directly?\nAlso, is anyone able to comment on why the default is adjustResize?\n. @agrieve I tried android:windowSoftInputMode=\"adjustPan\", but I'm pretty sure that didn't work. I'll need read over the ticket more.\nOn the subject of adjustResize, the flicker we're seeing seems like a bug in crosswalk, its not present when using the system webview.\nI've done a screen capture of the flickering:\nhttps://drive.google.com/file/d/0B0EqPYsVdSGFZ1JwcWdmOURsamM/view?usp=sharing\n. The problem disappeared after doing a cca upgrade. Just to test, I deleted the ios platform, and re-added it. This caused the problem to reappear. Once again, I reran cca upgrade, and the problem is resolved. Hmm.\nI'm going to leave this open for a minute incase anyone thinks this is something more than my development environment being screwed.\n. ",
    "Ledda": "I cant even get cca to build the camera plugin into my app after installing it through CLI. Anyone got any links or direction on installing Cordova Camera API for Mobile Chrome Apps (Android)? Getting desperate...\n. ive tried both cordova plugin add and cca plugin\nthey both seem to reference the same plugin. Maybe would have been correct if it means it compiles into my project a different way? But doesnt appear to make a difference.\ncca run android was looking good. I think maybe I havent installed something? I had to install JDK 1.7 and now im getting another error which i have searched for but i can't seem to solve this one.\n```\n:processArmv7DebugResources\n/Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug/xml/config.xml:55: error: Error parsing XML: unbound prefix\n:processArmv7DebugResources FAILED\nFAILURE: Build failed with an exception.\n\nWhat went wrong:\nExecution failed for task ':processArmv7DebugResources'.\ncom.android.ide.common.internal.LoggedErrorException: Failed to run command:\n    /Applications/sdk/build-tools/19.1.0/aapt package -f --no-crunch -I /Applications/sdk/platforms/android-19/android.jar -M /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/manifests/armv7/debug/AndroidManifest.xml -S /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug -A /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/assets/armv7/debug -m -J /Users/Ledda/Android/DetectorApp/platforms/android/build/generated/source/r/armv7/debug -F /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/libs/android-armv7-debug.ap_ --debug-mode --custom-package com.your.company.DetectorInspectorTechnicianApplication -0 apk --output-text-symbols /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/symbols/armv7/debug\n  Error Code:\n    1\n  Output:\n    /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug/xml/config.xml:55: error: Error parsing XML: unbound prefix\n```\n\n\n\nI assumed it was because my AndroidManifest.xml was referencing the wrong SDK so i downloaded Android SDK 14-18 and still doesnt work. I also have the latest ( I think its 22)\nI feel like I am so close, but so far! :+1: \n. Got it.\nuse cca run android on a connected device and it should install provided you have everything installed on your machine. It will display the errors if there are any. \nIt almost deploys as quickly as deploying to CADT\nMy problem was I was trying to run it through CADT. \nAdding cordova plugins and then deploying to CADT environment does not work. \nThe plugins do not get included unless they are Mobile Chrome App plugin specific.\nI still think it should include the cordova plugins even if they are install separately. \ncca prepare android only installs the Mobile Chrome Apps supported plugins not cordova plugins from you manifest\n. I cant even get cca to build the camera plugin into my app after installing it through CLI. Anyone got any links or direction on installing Cordova Camera API for Mobile Chrome Apps (Android)? Getting desperate...\n. ive tried both cordova plugin add and cca plugin\nthey both seem to reference the same plugin. Maybe would have been correct if it means it compiles into my project a different way? But doesnt appear to make a difference.\ncca run android was looking good. I think maybe I havent installed something? I had to install JDK 1.7 and now im getting another error which i have searched for but i can't seem to solve this one.\n```\n:processArmv7DebugResources\n/Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug/xml/config.xml:55: error: Error parsing XML: unbound prefix\n:processArmv7DebugResources FAILED\nFAILURE: Build failed with an exception.\n\nWhat went wrong:\nExecution failed for task ':processArmv7DebugResources'.\ncom.android.ide.common.internal.LoggedErrorException: Failed to run command:\n    /Applications/sdk/build-tools/19.1.0/aapt package -f --no-crunch -I /Applications/sdk/platforms/android-19/android.jar -M /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/manifests/armv7/debug/AndroidManifest.xml -S /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug -A /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/assets/armv7/debug -m -J /Users/Ledda/Android/DetectorApp/platforms/android/build/generated/source/r/armv7/debug -F /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/libs/android-armv7-debug.ap_ --debug-mode --custom-package com.your.company.DetectorInspectorTechnicianApplication -0 apk --output-text-symbols /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/symbols/armv7/debug\n  Error Code:\n    1\n  Output:\n    /Users/Ledda/Android/DetectorApp/platforms/android/build/intermediates/res/armv7/debug/xml/config.xml:55: error: Error parsing XML: unbound prefix\n```\n\n\n\nI assumed it was because my AndroidManifest.xml was referencing the wrong SDK so i downloaded Android SDK 14-18 and still doesnt work. I also have the latest ( I think its 22)\nI feel like I am so close, but so far! :+1: \n. Got it.\nuse cca run android on a connected device and it should install provided you have everything installed on your machine. It will display the errors if there are any. \nIt almost deploys as quickly as deploying to CADT\nMy problem was I was trying to run it through CADT. \nAdding cordova plugins and then deploying to CADT environment does not work. \nThe plugins do not get included unless they are Mobile Chrome App plugin specific.\nI still think it should include the cordova plugins even if they are install separately. \ncca prepare android only installs the Mobile Chrome Apps supported plugins not cordova plugins from you manifest\n. ",
    "tvanier": "Thanks @mmocny the suggested fix works like a charm! If not by default in the future, this could be part of a --single-page option of cca create (would also apply some iOS settings if required)?\n. Thanks @mmocny the suggested fix works like a charm! If not by default in the future, this could be part of a --single-page option of cca create (would also apply some iOS settings if required)?\n. ",
    "my-password-is-password": "Thank you agrieve.  I got it working with the Media plugin when I use a path to an audio file\nvar m = new Media('/mnt/sdcard/download/notify.ogg', onSuccess, onError);\nm.play();\nWhen I tried to use audio file notify.ogg that I included in my app with this code:\nvar m = new Media('notify.ogg', onSuccess, onError);\nm.play()\nI would get an error, code: 1 message: undefined\n. Thank you agrieve.  I got it working with the Media plugin when I use a path to an audio file\nvar m = new Media('/mnt/sdcard/download/notify.ogg', onSuccess, onError);\nm.play();\nWhen I tried to use audio file notify.ogg that I included in my app with this code:\nvar m = new Media('notify.ogg', onSuccess, onError);\nm.play()\nI would get an error, code: 1 message: undefined\n. ",
    "plaxdan": "With regard to version control, do you have any guidelines or recommendations on which files should be included/ignored?\n. A default .gitignore or a command that spits out the gitignore would be awesome:\ncca --gitignore >> .gitignore\nFYI I'm working on a very basic proof of concept here: https://github.com/plaxdan/react-topcoat-demo\n. :+1: \n. With regard to version control, do you have any guidelines or recommendations on which files should be included/ignored?\n. A default .gitignore or a command that spits out the gitignore would be awesome:\ncca --gitignore >> .gitignore\nFYI I'm working on a very basic proof of concept here: https://github.com/plaxdan/react-topcoat-demo\n. :+1: \n. ",
    "Qvatra": "This is function I used to save imgs but it does nothing in cca android app but it works in desktop chrome browser.\nsaveImg = function (img, fileName) {\n        var a = document.createElement('a');\n        a.setAttribute('href', img.src);\n        a.setAttribute(\"download\", fileName);\n        document.body.appendChild(a);\n        a.click();\n    }\nQuick side-question: should I or should I not to include cordova.js to my html file?\n. \"You can use the HTML5 FileSystem in combination with XHR to save those files locally.\"\nA link to read more about it would be great.\n. This is function I used to save imgs but it does nothing in cca android app but it works in desktop chrome browser.\nsaveImg = function (img, fileName) {\n        var a = document.createElement('a');\n        a.setAttribute('href', img.src);\n        a.setAttribute(\"download\", fileName);\n        document.body.appendChild(a);\n        a.click();\n    }\nQuick side-question: should I or should I not to include cordova.js to my html file?\n. \"You can use the HTML5 FileSystem in combination with XHR to save those files locally.\"\nA link to read more about it would be great.\n. ",
    "jokeyrhyme": "It may be that a default DownloadListener has not been defined:\nhttp://stackoverflow.com/questions/22935214/file-download-not-working-in-android-using-cordova-2-9-0\nhttp://developer.android.com/reference/android/webkit/DownloadListener.html\nhttp://developer.android.com/reference/android/webkit/WebView.html#setDownloadListener(android.webkit.DownloadListener)\n. It may be that a default DownloadListener has not been defined:\nhttp://stackoverflow.com/questions/22935214/file-download-not-working-in-android-using-cordova-2-9-0\nhttp://developer.android.com/reference/android/webkit/DownloadListener.html\nhttp://developer.android.com/reference/android/webkit/WebView.html#setDownloadListener(android.webkit.DownloadListener)\n. ",
    "wernight": "I had this recursive issue on one machine and today on another it works. I mean the command I wrote above did work and everything compiles. This is probably a hack because when the folder is not hidden it fails. Actually I wanted it hidden so it a double wammy (win)!\nSibling isn't a good solution to me. Actually I started the project directly via cca create but not I want to keep it under source control and all the other files are not really useful to me (see also issue on StackOverflow).\nBtw. isn't cca create MyProjectCCA --link-to=./www/ going to fail since the folder is called www?\n. The main bug is that this fails: cca create MyProject --{link-to|copy-from}=www (both commands fails). It says:\nError: An error occured during creation of android sub-project. Creating Cordova project for the Android platform:\n  Path: platforms/android\n  Package: com.example\n  Name: Example\n  Android target: android-19\nCopying template files...\nshell.js: internal error\nError: ENOENT, no such file or directory 'platforms/android/assets'\n    at Object.fs.mkdirSync (fs.js:642:18)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/cp.js:173:14\n    at Array.forEach (native)\n    at Object._cp (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/cp.js:156:11)\n    at Object.cp (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/common.js:172:23)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:166:19\n    at setShellFatal (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:45:5)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:164:9\n    at _fulfilled (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/q/q.js:798:54)\n    at self.promiseDispatch.done (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/q/q.js:827:30)\nI'm building a small meaninful game for young kids.\n. Pointing to the manifest dies same thing, and the copy from flag also\nfails. As soon as I rename it to something else it works. But even in\nanother parent folder when this folder is called www it fails like that.\nOn Monday, March 3, 2014 7:49:55 PM, Michal Mocny notifications@github.com\nwrote:\n\nAre you able to create any projects at all with --link-to? May you do an\nls inside your www/ source directory and confirm there is a manifest.json\nin there?\nI just tried doing the exact steps you are and it works fine locally. I\nsuspect the issue is not specific to the folder being named www/ or being a\nsibling, but something to do with the project being imported (or its a bug\nin our tool we haven't seen yet).\nSadly that stack trace isn't helping very much.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/107#issuecomment-36544473\n.\n. Actually I noticed that while some operations work (like cca build) others fail (like cca emulate) in that scenario. It works with www folder name on another machine so I'm using that.\n. Thanks for the clarification.\n\nIt's written you're right. I wasn't looking in \"Install your development tools\" for deployment requirements. I'd suggest to move it to the home README.\nI'm not sure what makes 4+ necessary. Like what provides Chrome Apps for Android that isn't in Cordova, for Android? I thought it was more to support Chrome Apps along with Cordova, so extend the range, but Chrome Apps specific functions aren't on Android normally.\n. I see.\n. Agree the package.json gets installed by npm which is probably not what you'd want.\n. Small note also in .gitignore:\nplatforms/ should be /platforms/ (same for a few other elements).\n. Could you also make cca prepare work more like cca create? Currently on a repo without those directories I've to use cca create but I cannot create in the current directory, and cca prepare gives:\nCordovaError: Current working directory is not a Cordova-based project.\nI agree that if users can customize the config.xml there should be a way to either regenerate it or keep the manually tweaks. Supposing you have a custom made one, the current process looks weird:\n$ git clone my-project\n$ cd my-project\n$ cca create build --link-to=www\n$ cp config.xml build\n$ cd build\n$ cca run ...\nPS: I may close the issue so that it's not always going between open/close if you don't mind.\n. Ah seems that if I keep config.xml then cca prepare works.\nGood :)\n. I've saying that because of the updatable WebView but it seems this project is using CrossWalk on Android.\n. Thanks I think it cleaner now.\n. I had this recursive issue on one machine and today on another it works. I mean the command I wrote above did work and everything compiles. This is probably a hack because when the folder is not hidden it fails. Actually I wanted it hidden so it a double wammy (win)!\nSibling isn't a good solution to me. Actually I started the project directly via cca create but not I want to keep it under source control and all the other files are not really useful to me (see also issue on StackOverflow).\nBtw. isn't cca create MyProjectCCA --link-to=./www/ going to fail since the folder is called www?\n. The main bug is that this fails: cca create MyProject --{link-to|copy-from}=www (both commands fails). It says:\nError: An error occured during creation of android sub-project. Creating Cordova project for the Android platform:\n  Path: platforms/android\n  Package: com.example\n  Name: Example\n  Android target: android-19\nCopying template files...\nshell.js: internal error\nError: ENOENT, no such file or directory 'platforms/android/assets'\n    at Object.fs.mkdirSync (fs.js:642:18)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/cp.js:173:14\n    at Array.forEach (native)\n    at Object._cp (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/cp.js:156:11)\n    at Object.cp (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/shelljs/src/common.js:172:23)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:166:19\n    at setShellFatal (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:45:5)\n    at /home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/lib/create.js:164:9\n    at _fulfilled (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/q/q.js:798:54)\n    at self.promiseDispatch.done (/home/user/.nvm/v0.10.26/lib/node_modules/cca/cordova/cordova-android/bin/node_modules/q/q.js:827:30)\nI'm building a small meaninful game for young kids.\n. Pointing to the manifest dies same thing, and the copy from flag also\nfails. As soon as I rename it to something else it works. But even in\nanother parent folder when this folder is called www it fails like that.\nOn Monday, March 3, 2014 7:49:55 PM, Michal Mocny notifications@github.com\nwrote:\n\nAre you able to create any projects at all with --link-to? May you do an\nls inside your www/ source directory and confirm there is a manifest.json\nin there?\nI just tried doing the exact steps you are and it works fine locally. I\nsuspect the issue is not specific to the folder being named www/ or being a\nsibling, but something to do with the project being imported (or its a bug\nin our tool we haven't seen yet).\nSadly that stack trace isn't helping very much.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/107#issuecomment-36544473\n.\n. Actually I noticed that while some operations work (like cca build) others fail (like cca emulate) in that scenario. It works with www folder name on another machine so I'm using that.\n. Thanks for the clarification.\n\nIt's written you're right. I wasn't looking in \"Install your development tools\" for deployment requirements. I'd suggest to move it to the home README.\nI'm not sure what makes 4+ necessary. Like what provides Chrome Apps for Android that isn't in Cordova, for Android? I thought it was more to support Chrome Apps along with Cordova, so extend the range, but Chrome Apps specific functions aren't on Android normally.\n. I see.\n. Agree the package.json gets installed by npm which is probably not what you'd want.\n. Small note also in .gitignore:\nplatforms/ should be /platforms/ (same for a few other elements).\n. Could you also make cca prepare work more like cca create? Currently on a repo without those directories I've to use cca create but I cannot create in the current directory, and cca prepare gives:\nCordovaError: Current working directory is not a Cordova-based project.\nI agree that if users can customize the config.xml there should be a way to either regenerate it or keep the manually tweaks. Supposing you have a custom made one, the current process looks weird:\n$ git clone my-project\n$ cd my-project\n$ cca create build --link-to=www\n$ cp config.xml build\n$ cd build\n$ cca run ...\nPS: I may close the issue so that it's not always going between open/close if you don't mind.\n. Ah seems that if I keep config.xml then cca prepare works.\nGood :)\n. I've saying that because of the updatable WebView but it seems this project is using CrossWalk on Android.\n. Thanks I think it cleaner now.\n. ",
    "8enmann": "Any updates? I can contribute a fix if you decide on strategy you want to take.\n. No, I'm seeing it when I kill the app and open it again. It's a bad experience that every time I open the app I have to choose an account, especially since I usually just want to use the one I last used. Every other native app remembers its setting and lets users swap when they choose to, not on app start.\nYou addressed 3. What about 1 & 2?\n. 2) Something like this, where the account picker callback takes a list of accounts that are on the phone and returns either the index of the one to authenticate with or the string itself. It's passed as a parameter to either the dictionary (currently the 1st param), or else it could be another parameter to the function. To make it backwards compatible, if you want to add it outside the dictionary, you'd want to make it the 3rd param.\n/* param {Array.} @return {string|number} /\nfunction myPicker(accounts);\n/* param {string} /\nfunction authResultCallback(result);\nchrome.identity.getAuthToken({interactive: false, pickerCallback: myPicker}, authResultCallback);\nIs that clearer?\n. Awesome, thanks!\n. Oops sorry :) I'll let you close it when you're ready.\n. Any updates? I can contribute a fix if you decide on strategy you want to take.\n. No, I'm seeing it when I kill the app and open it again. It's a bad experience that every time I open the app I have to choose an account, especially since I usually just want to use the one I last used. Every other native app remembers its setting and lets users swap when they choose to, not on app start.\nYou addressed 3. What about 1 & 2?\n. 2) Something like this, where the account picker callback takes a list of accounts that are on the phone and returns either the index of the one to authenticate with or the string itself. It's passed as a parameter to either the dictionary (currently the 1st param), or else it could be another parameter to the function. To make it backwards compatible, if you want to add it outside the dictionary, you'd want to make it the 3rd param.\n/* param {Array.} @return {string|number} /\nfunction myPicker(accounts);\n/* param {string} /\nfunction authResultCallback(result);\nchrome.identity.getAuthToken({interactive: false, pickerCallback: myPicker}, authResultCallback);\nIs that clearer?\n. Awesome, thanks!\n. Oops sorry :) I'll let you close it when you're ready.\n. ",
    "hatboysam": "Not seeing anything but token returned when I call getAuthToken ... on Chrome 35 and cca 0.2.2, is there something different I need to do when calling it to get account?\n. I am running org.chromium.identity 1.2.1\nWhen I use the Web Inspector on the Chrome app and run the following:\nchrome.identity.getAuthToken(function(a, b) { console.log(a); console.log(b) })\nI get:\nya29.SgAmZmeIl7vS[...token redacted...]\nundefined\nSo if account is supposed to be the next argument to my callback, I'm not getting it.\nI even tried upgrading to Chrome 36 and enabling the enable-new-profile-management flag in Chrome (which is mentioned here https://developer.chrome.com/apps/identity#method-getAuthToken)\n. Ah ok I was trying it on Chrome only.  Thanks for the help!\n. Seems that it is.  The other issue was closed without resolution.  Is there any way to prevent this behavior?\n. You're right, I had cca 0.9, 0.10 fixed the issue.  Didn't realize I missed an update.  Sorry for the un-needed issue and thanks for the prompt response.\n. Was there an official fix?  I am still using the workaround I described in the original issue description.\n. Not seeing anything but token returned when I call getAuthToken ... on Chrome 35 and cca 0.2.2, is there something different I need to do when calling it to get account?\n. I am running org.chromium.identity 1.2.1\nWhen I use the Web Inspector on the Chrome app and run the following:\nchrome.identity.getAuthToken(function(a, b) { console.log(a); console.log(b) })\nI get:\nya29.SgAmZmeIl7vS[...token redacted...]\nundefined\nSo if account is supposed to be the next argument to my callback, I'm not getting it.\nI even tried upgrading to Chrome 36 and enabling the enable-new-profile-management flag in Chrome (which is mentioned here https://developer.chrome.com/apps/identity#method-getAuthToken)\n. Ah ok I was trying it on Chrome only.  Thanks for the help!\n. Seems that it is.  The other issue was closed without resolution.  Is there any way to prevent this behavior?\n. You're right, I had cca 0.9, 0.10 fixed the issue.  Didn't realize I missed an update.  Sorry for the un-needed issue and thanks for the prompt response.\n. Was there an official fix?  I am still using the workaround I described in the original issue description.\n. ",
    "jonnor": "@mmocny: Thanks for quick response. I have config.xml in the top-level directory (as created by cca create). However, I'm seeing\n[jon@jon-thinkpad mobile]$ cca prepare\n cca v0.0.5\n Generating config.xml from defaults for platform \"android\"\n Preparing android project\nconfig.xml and AndroidManifest,xml: https://gist.github.com/jonnor/9d11ec32b0fc8ff02ff9\n. Yes, orientation and minimum Android API version.\n. Using npm 1.4.9 locally. Also having this issue on Travis CI which is using npm 1.4.3\n. npm install -g cca@rc\nDoes not error out, but pulls down version 0.0.0 and only installs a package.json\n. Yes, we're using Travis with cca to build both iOS and Android apps for http://flowhub.io. A writeup on the infrastructure is planned after we roll out, but we are currently blocked by polymer/PointerEvents#131\n. npm install cca now works locally, probably also on Travis. Thank for very quick resolution!\n. @mmocny: Thanks for quick response. I have config.xml in the top-level directory (as created by cca create). However, I'm seeing\n[jon@jon-thinkpad mobile]$ cca prepare\n cca v0.0.5\n Generating config.xml from defaults for platform \"android\"\n Preparing android project\nconfig.xml and AndroidManifest,xml: https://gist.github.com/jonnor/9d11ec32b0fc8ff02ff9\n. Yes, orientation and minimum Android API version.\n. Using npm 1.4.9 locally. Also having this issue on Travis CI which is using npm 1.4.3\n. npm install -g cca@rc\nDoes not error out, but pulls down version 0.0.0 and only installs a package.json\n. Yes, we're using Travis with cca to build both iOS and Android apps for http://flowhub.io. A writeup on the infrastructure is planned after we roll out, but we are currently blocked by polymer/PointerEvents#131\n. npm install cca now works locally, probably also on Travis. Thank for very quick resolution!\n. ",
    "dance-cmdr": "Have you though the solution of writing something like a yeoman generator to handle scaffolding and porting? for example you could solve the problem of the package name by asking the user to enter new names while porting an existing app.\n. Fine. I'll start looking into it then.\n. An update. I faced a lot of issues Setting up my workflow in ubuntu and that kept me back. Right now I  have a windows workflow / almost an ubuntu one and I killed my piggy for a macbook so I'll have a mac workflow as well and I would be able to work away from home. \nI tried gauntface's tutorial, it was one of the smoothest one I ever had. it took me less than 15' and the shellscript is playing really smart, the workflow look's pretty smooth. Thumbs up, really loved that. \n@gauntface would you think that is a good idea to handle app names with grunt? as part of the build? \nWhat I had in mind before that tut is to kickstart everything from a yo generator instead, having as first class citizen the html5 app and not the cordova app but your approach looks more flexy regarding the yeoman app generator preference. What do you say?\n. @gauntface  It looks awesome. I'll give it a go tonight.\nChaining geerators will be awesome and challenging...\n. I'll try to help with this, any advice? Which file has the task manager for grooming the files? Don't expect much it's the first time I'm mingling actively in open source project. I just love this project :)\n. https://play.google.com/store/apps/details?id=com.hexahedron.faterpgdice this one is my guinea pig. I made it first in pure android SDK and then from a web app to see how it's done, another first :) unfortunately it doesn't yet play on my poor gingerbread gs2 but in nexus7 was just fine :)\nI noticed the same problems while moving my app from chrome app to cca. It looked more natural to me to first make a chrome app , then port it to cca.  the HelloWorld appeared in about 5 or 6 places in config files don't remember now which exactly. most of them resolved by reforging in eclipse. \n. Have you though the solution of writing something like a yeoman generator to handle scaffolding and porting? for example you could solve the problem of the package name by asking the user to enter new names while porting an existing app.\n. Fine. I'll start looking into it then.\n. An update. I faced a lot of issues Setting up my workflow in ubuntu and that kept me back. Right now I  have a windows workflow / almost an ubuntu one and I killed my piggy for a macbook so I'll have a mac workflow as well and I would be able to work away from home. \nI tried gauntface's tutorial, it was one of the smoothest one I ever had. it took me less than 15' and the shellscript is playing really smart, the workflow look's pretty smooth. Thumbs up, really loved that. \n@gauntface would you think that is a good idea to handle app names with grunt? as part of the build? \nWhat I had in mind before that tut is to kickstart everything from a yo generator instead, having as first class citizen the html5 app and not the cordova app but your approach looks more flexy regarding the yeoman app generator preference. What do you say?\n. @gauntface  It looks awesome. I'll give it a go tonight.\nChaining geerators will be awesome and challenging...\n. I'll try to help with this, any advice? Which file has the task manager for grooming the files? Don't expect much it's the first time I'm mingling actively in open source project. I just love this project :)\n. https://play.google.com/store/apps/details?id=com.hexahedron.faterpgdice this one is my guinea pig. I made it first in pure android SDK and then from a web app to see how it's done, another first :) unfortunately it doesn't yet play on my poor gingerbread gs2 but in nexus7 was just fine :)\nI noticed the same problems while moving my app from chrome app to cca. It looked more natural to me to first make a chrome app , then port it to cca.  the HelloWorld appeared in about 5 or 6 places in config files don't remember now which exactly. most of them resolved by reforging in eclipse. \n. ",
    "gauntface": "If there is value in a Yeoman generator I'm happy to take a look at it, it should be fairly trivial to make a stock project with cca and a stock yeoman project (generator-webapp), with all the hooks in place.\n. I pushed a version of a yeoman generator + Cordova here under an experimental option: https://github.com/dangeross/generator-cordova\nEssentially what this did was run the Cordova CLI as a node module inside of a yo generator so that the user had the following flow:\n1.) User ran yo cordova\n2.) Generator loads Cordova CLI\n3.) Generator asks user for app name, pkg name etc.\n4.) Generator uses Cordova CLI as a module and creates new project\n5.) Generator asks user about platforms and plugins required, then installs them (Using Plugman module if I recall correctly)\n6.) Run yo webapp and output is handled by the user and pass in a parameter into generator-webapp to make it feel like the same generator\nFor the cca generator, we could add the shell script into hooks directory as part of the template and everything should be good to go.\n. I just mentioned this to @addyosmani and he thinks this might be a good scenario for using a new way of chaining generators together (or at least that's how I understood it).\nOver to Addy.\n. If there is value in a Yeoman generator I'm happy to take a look at it, it should be fairly trivial to make a stock project with cca and a stock yeoman project (generator-webapp), with all the hooks in place.\n. I pushed a version of a yeoman generator + Cordova here under an experimental option: https://github.com/dangeross/generator-cordova\nEssentially what this did was run the Cordova CLI as a node module inside of a yo generator so that the user had the following flow:\n1.) User ran yo cordova\n2.) Generator loads Cordova CLI\n3.) Generator asks user for app name, pkg name etc.\n4.) Generator uses Cordova CLI as a module and creates new project\n5.) Generator asks user about platforms and plugins required, then installs them (Using Plugman module if I recall correctly)\n6.) Run yo webapp and output is handled by the user and pass in a parameter into generator-webapp to make it feel like the same generator\nFor the cca generator, we could add the shell script into hooks directory as part of the template and everything should be good to go.\n. I just mentioned this to @addyosmani and he thinks this might be a good scenario for using a new way of chaining generators together (or at least that's how I understood it).\nOver to Addy.\n. ",
    "StephenFluin": "Adding .gitignore inside the default app would save a few of headaches and versioning issues from my perspective. Do it! :)\n. Here's the code I'm using. I would imagine basic notifications should be expandable when they don't fit.\njavascript\nvar opt = {\n        type: \"basic\",\n        title: \"Thanks for using the app!\",\n        message: \"You are my hero! You are just the best person I have ever met. You are going to save a lot of money!\",\n        iconUrl: \"assets/icons/icon256.png\"\n      };\n    chrome.notifications.create(\"original\",opt,function() {});\n. I'm developing a shim to leverage Cordova's camera capabilities on mobile, and Chrome's on Chrome. I'd love to contribute, any tips on how you would like this packaged?\n. It's in the root config.xml and appears to be caused by requesting\npermission below in manifest.json. Another one gets added to the config.xml\nwith each cca prepare.\n\"https://www.google-analytics.com/\",\nOn May 4, 2014 8:48 PM, \"Michal Mocny\" notifications@github.com wrote:\n\nWell thats not right.\nWhere is the coming from? We don't add that as far as I am aware.\nAnd to be clear, are these being duplicated in the config.xml that is\ninside platform/ or in the one at the root of your project?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/151#issuecomment-42154004\n.\n. I do this in my CCA application and it works well, because I don't trust\nthe client to give me the user's email for authentication etc.\n\nOn Sun, Jun 22, 2014 at 3:10 PM, Hampus Ahlgren notifications@github.com\nwrote:\n\n@BlueHayes https://github.com/BlueHayes Alright so this is possible\nthen, I did some preliminary testing but didn't get it to work. I'll try\nagain once I get the time. Thanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/163#issuecomment-46791373\n.\n. I am currently overriding the back button, but there doesn't seem to be a way to force the app to exit. Am I missing a chrome-style method for achieving this?\n. Duplicate / regression of #151 ?\n. It was closed as fixed for me. cca prepare no longer generates dupes since\nit was closed for me.\n\nOn Thu, Jun 12, 2014 at 5:26 PM, Sam Stern notifications@github.com wrote:\n\nSeems that it is. The other issue was closed without resolution. Is there\nany way to prevent this behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/180#issuecomment-45955936\n.\n. I started working on a plugin update. This is super basic but lets you add a second page to a notification. I'll probably implement the android wear standard features, and then focus on making it pretty.\n\nHere's the code:\nhttps://github.com/PeEllAvaj/mobile-chrome-apps/commit/aea7b2d68b2388d6f137986f9473fe11ce1d10b7\n. Is there anything else we can do to help? Are we just waiting for Chrome's version and support to catch up?\nTo get around this I've implemented a local token caching/recall layer which is just a bunch of extra work and might lead to expired tokens I believe.\n. Tried making all of /usr/lib/node_modules/cca/ and my project folder 777 and it didn't help. I don't know what permission is failing. I can use the cordova-android/bin/create by hand.\nAs a debugging step I went back to 0.7.0 and created a fresh project, that failed, but my old cca projects worked... Weird...\n. Adding .gitignore inside the default app would save a few of headaches and versioning issues from my perspective. Do it! :)\n. Here's the code I'm using. I would imagine basic notifications should be expandable when they don't fit.\njavascript\nvar opt = {\n        type: \"basic\",\n        title: \"Thanks for using the app!\",\n        message: \"You are my hero! You are just the best person I have ever met. You are going to save a lot of money!\",\n        iconUrl: \"assets/icons/icon256.png\"\n      };\n    chrome.notifications.create(\"original\",opt,function() {});\n. I'm developing a shim to leverage Cordova's camera capabilities on mobile, and Chrome's on Chrome. I'd love to contribute, any tips on how you would like this packaged?\n. It's in the root config.xml and appears to be caused by requesting\npermission below in manifest.json. Another one gets added to the config.xml\nwith each cca prepare.\n\"https://www.google-analytics.com/\",\nOn May 4, 2014 8:48 PM, \"Michal Mocny\" notifications@github.com wrote:\n\nWell thats not right.\nWhere is the coming from? We don't add that as far as I am aware.\nAnd to be clear, are these being duplicated in the config.xml that is\ninside platform/ or in the one at the root of your project?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/151#issuecomment-42154004\n.\n. I do this in my CCA application and it works well, because I don't trust\nthe client to give me the user's email for authentication etc.\n\nOn Sun, Jun 22, 2014 at 3:10 PM, Hampus Ahlgren notifications@github.com\nwrote:\n\n@BlueHayes https://github.com/BlueHayes Alright so this is possible\nthen, I did some preliminary testing but didn't get it to work. I'll try\nagain once I get the time. Thanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/163#issuecomment-46791373\n.\n. I am currently overriding the back button, but there doesn't seem to be a way to force the app to exit. Am I missing a chrome-style method for achieving this?\n. Duplicate / regression of #151 ?\n. It was closed as fixed for me. cca prepare no longer generates dupes since\nit was closed for me.\n\nOn Thu, Jun 12, 2014 at 5:26 PM, Sam Stern notifications@github.com wrote:\n\nSeems that it is. The other issue was closed without resolution. Is there\nany way to prevent this behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/180#issuecomment-45955936\n.\n. I started working on a plugin update. This is super basic but lets you add a second page to a notification. I'll probably implement the android wear standard features, and then focus on making it pretty.\n\nHere's the code:\nhttps://github.com/PeEllAvaj/mobile-chrome-apps/commit/aea7b2d68b2388d6f137986f9473fe11ce1d10b7\n. Is there anything else we can do to help? Are we just waiting for Chrome's version and support to catch up?\nTo get around this I've implemented a local token caching/recall layer which is just a bunch of extra work and might lead to expired tokens I believe.\n. Tried making all of /usr/lib/node_modules/cca/ and my project folder 777 and it didn't help. I don't know what permission is failing. I can use the cordova-android/bin/create by hand.\nAs a debugging step I went back to 0.7.0 and created a fresh project, that failed, but my old cca projects worked... Weird...\n. ",
    "freakypie": "I have this problem too, but i think it is in the cordova core.\n. I have this problem too, but i think it is in the cordova core.\n. ",
    "MattDavies": "Note to anyone looking at this: if you create an empty platforms folder in your app folder (same level as www, hooks etc), cordova will happily add the platform.\n. Note to anyone looking at this: if you create an empty platforms folder in your app folder (same level as www, hooks etc), cordova will happily add the platform.\n. ",
    "sunviwo": "Very weird issue. I got it first and after reading answers here, I went back to check in my app's folder and noticed that the platforms folder was there. Then, when I run the command again, it then output\nPlatform android already added\n. Very weird issue. I got it first and after reading answers here, I went back to check in my app's folder and noticed that the platforms folder was there. Then, when I run the command again, it then output\nPlatform android already added\n. ",
    "White3650": "I had the same problem and i found the solution. You have a problem with derectories tree. Probably, in the upper level, you have a folder \"platforms\". \nThe solution that i used its thats i made another directory in the root, and i tried to create the project again.\n. I had the same problem and i found the solution. You have a problem with derectories tree. Probably, in the upper level, you have a folder \"platforms\". \nThe solution that i used its thats i made another directory in the root, and i tried to create the project again.\n. ",
    "netbitsolutions": "Check your anti-virus. If your anti-virus has ransomware protection ON it will prevent the creation of files and directories by programs \n. Check your anti-virus. If your anti-virus has ransomware protection ON it will prevent the creation of files and directories by programs \n. ",
    "lukemiddlewick-lw": "We are using ngRoute\n. Angular version is 1.2.0\n. Hi yes project was created with 0.0.8 of cca\n. We are using ngRoute\n. Angular version is 1.2.0\n. Hi yes project was created with 0.0.8 of cca\n. ",
    "kzar": "Oh man I just spent my entire evening figuring out what was happening with this bug. Could you do a release soon, I could really do with it being fixed.\nEdit: OK scratch that I've got a work around, if anyone else is having problems using AngularJS' ngRoute due to this check out my post on StackOverflow.\n. @mwoghiren Still having problems since I upgraded, I did this:\n```\nUpgraded CCA\nsudo npm install -g cca\nChecked I'm running 0.0.9\ncca --version\nBuilt a new version of my app and installed it on my device\ncca build\ncca run\n```\nand it doesn't work. I've logged the location in AngularJS' $routeChangeStart event and this is what I'm getting:\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/opgccfdagmcaobbgnkcmfocffhomjepb/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/new-invoice app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/manage-transactions app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/view-reports app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/\n(I've got an \"Otherwise\" route that forwards you to / if the path doesn't look right. Each time the AngularJS path has been prepended with the app ID and therefore the user is forwarded straight back there.)\nCheers, Dave.\n. That worked thanks @agrieve :). I did as you said and then installed the relevant plugins in the new project and all seems OK! (It would be cool if cca could just upgrade a project to use the latest version as well I guess.)\n. Oh man I just spent my entire evening figuring out what was happening with this bug. Could you do a release soon, I could really do with it being fixed.\nEdit: OK scratch that I've got a work around, if anyone else is having problems using AngularJS' ngRoute due to this check out my post on StackOverflow.\n. @mwoghiren Still having problems since I upgraded, I did this:\n```\nUpgraded CCA\nsudo npm install -g cca\nChecked I'm running 0.0.9\ncca --version\nBuilt a new version of my app and installed it on my device\ncca build\ncca run\n```\nand it doesn't work. I've logged the location in AngularJS' $routeChangeStart event and this is what I'm getting:\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/opgccfdagmcaobbgnkcmfocffhomjepb/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/new-invoice app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/manage-transactions app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/ app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#//opgccfdagmcaobbgnkcmfocffhomjepb/view-reports app.js:30\nChange chrome-extension://opgccfdagmcaobbgnkcmfocffhomjepb/index.html#/\n(I've got an \"Otherwise\" route that forwards you to / if the path doesn't look right. Each time the AngularJS path has been prepended with the app ID and therefore the user is forwarded straight back there.)\nCheers, Dave.\n. That worked thanks @agrieve :). I did as you said and then installed the relevant plugins in the new project and all seems OK! (It would be cool if cca could just upgrade a project to use the latest version as well I guess.)\n. ",
    "Naethyn": "My primary goal is to find a way to get the redirect url for a cross domain xhr request in mobile-chrome-apps. \nhttps://github.com/codeinchaos/chrome.sockets.tcp.xhr \nProvides a solutIon that I have tested as working in a Chrome App, but it is for the newer chrome.sockets.tcp library that is not supported by mobile-chrome-apps.\n. Thanks!\n. My primary goal is to find a way to get the redirect url for a cross domain xhr request in mobile-chrome-apps. \nhttps://github.com/codeinchaos/chrome.sockets.tcp.xhr \nProvides a solutIon that I have tested as working in a Chrome App, but it is for the newer chrome.sockets.tcp library that is not supported by mobile-chrome-apps.\n. Thanks!\n. ",
    "ahmadnassri": "@Naethyn pointed me to this thread.\nI've already started working on a Polyfill, will publish and post back here. would love some support/assistance.\n. @mmocny agreed. code clean up is the answer. JS Polyfill might be useful for some beyond this scope as well (seen lots of ~~chrome.socket implementations~~ apps/extensions using the old chrome.socket API out there) will help with the transition...\nchrome.sockets.tcp.xhr started as part of REST Console updates to add more flexibility beyond the standard XMLHttpRequest\nunrelated: @pearlchen and I are setting up the first Yeoman Toronto workshop!\n. @mmocny corrected. (was typing on mobile)\n. @mmocny @Naethyn I started looking into building the polyfill, but quickly changed my mind after coming to a couple of important conclusions:\n- deprecated chrome.socket (Chrome 24) in favour of chrome.sockets (Chrome 33) \n  - given that Chrome is an evergreen browser, this is already too far back to support (at least for desktop) \n- this still leaves Chrome Mobile (Android + iOS) and Mobile Chrome Apps.\n  - Chrome Mobile does not support apps on its own.\n  - this leaves Mobile Chrome Apps, which the team here is willing to support, and per @mmocny note, the best approach is to simply update the code base here and add proper support.\n. @mmocny awesome. glad to hear there's progress.\n. @Naethyn pointed me to this thread.\nI've already started working on a Polyfill, will publish and post back here. would love some support/assistance.\n. @mmocny agreed. code clean up is the answer. JS Polyfill might be useful for some beyond this scope as well (seen lots of ~~chrome.socket implementations~~ apps/extensions using the old chrome.socket API out there) will help with the transition...\nchrome.sockets.tcp.xhr started as part of REST Console updates to add more flexibility beyond the standard XMLHttpRequest\nunrelated: @pearlchen and I are setting up the first Yeoman Toronto workshop!\n. @mmocny corrected. (was typing on mobile)\n. @mmocny @Naethyn I started looking into building the polyfill, but quickly changed my mind after coming to a couple of important conclusions:\n- deprecated chrome.socket (Chrome 24) in favour of chrome.sockets (Chrome 33) \n  - given that Chrome is an evergreen browser, this is already too far back to support (at least for desktop) \n- this still leaves Chrome Mobile (Android + iOS) and Mobile Chrome Apps.\n  - Chrome Mobile does not support apps on its own.\n  - this leaves Mobile Chrome Apps, which the team here is willing to support, and per @mmocny note, the best approach is to simply update the code base here and add proper support.\n. @mmocny awesome. glad to hear there's progress.\n. ",
    "felixhammerl": "awesome! we just integrated chrome.sockets.tcp in our TCPSocket polyfill https://github.com/whiteout-io/tcp-socket/\nhere's the code: https://github.com/whiteout-io/tcp-socket/blob/dev/WO-593/src/tcp-socket.js#L182\nfor now, we're running TLS via forge in a worker, but we're looking forward to when https://github.com/MobileChromeApps/mobile-chrome-apps/issues/269 is integrated :)\n. @mmocny as promised, some data to work with ...\ni created a rudimentary test project that connects to the smtp.wmail.io on 587 (TCP) and 465 (TLS) to check out some of the socket's corner cases, feel free to mess around with it: https://github.com/felixhammerl/foo\nairplane mode on android\nSteps:\n- fire up the app on a nexus 7\n- connect with tcp (works nicely)\n- send EHLO (works nicely)\n- enter airplane mode\n- socket explodes\nError in Error callbackId: ChromeSocketsTcp370329377 : TypeError: Cannot read property 'length' of undefined cordova.js:299\nprocessMessage failed: Error: TypeError: Cannot read property 'length' of undefined cordova.js:1073\nprocessMessage failed: Stack: TypeError: Cannot read property 'length' of undefined\n    at Event.fire (file:///android_asset/www/plugins/org.chromium.common/events.js:42:37)\n    at callbackWithError (file:///android_asset/www/plugins/org.chromium.common/errors.js:23:14)\n    at fail (file:///android_asset/www/plugins/org.chromium.sockets.tcp/sockets.tcp.js:150:9)\n    at Object.cordova.callbackFromNative (file:///android_asset/www/cordova.js:288:52)\n    at processMessage (file:///android_asset/www/cordova.js:1068:21)\n    at Function.androidExec.processMessages (file:///android_asset/www/cordova.js:1105:13)\n    at pollOnce (file:///android_asset/www/cordova.js:956:17)\n    at pollOnceFromOnlineEvent (file:///android_asset/www/cordova.js:946:5) cordova.js:1074\nprocessMessage failed: Message: F19 ChromeSocketsTcp370329377 {\"resultCode\":-2,\"message\":\"recvfrom failed: ETIMEDOUT (Connection timed out)\",\"socketId\":1}\nWould be nice to actually receive a callback that the socket just errored/closed. When the network is back up, it does tell me that the socket is (obviously) closed, so the sockets seems to know that it is broken, but fails to inform me about it.\nairplane mode on ios\nsame steps as android, same error...\n[Error] The operation couldn\u2019t be completed. Socket is not connected\n    callbackWithError (errors.js, line 14)\n    fail (sockets.tcp.js, line 150)\n    callbackFromNative (cordova.js, line 294)\n    (anonymous function) (cordova.js, line 1086)\n    nativeEvalAndFetch (cordova.js, line 1094)\n    nativeCallback (cordova.js, line 1083)\n    global code (index.html, line 1)\n[Error] TypeError: undefined is not an object (evaluating 'this.listeners.length')\n    nativeEvalAndFetch (cordova.js, line 1097)\n    nativeCallback (cordova.js, line 1083)\n    global code (index.html, line 1)\nAlso no notification that my stuff is closed...\nIs this how the chrome.sockets.tcp was designed?\n. i don't know if this is related to the way that chrome.sockets.tcp works on chromium. hence this post on net-dev: https://groups.google.com/a/chromium.org/forum/#!topic/net-dev/i7izmk0_l7U\n. @mmocny do you know about this? https://code.google.com/p/chromium/issues/detail?id=132896\nthe sockets.tcp.secure api does not seem to be functional in chrome ... \nEDIT:\nsee this tweet and the replies: https://twitter.com/felixhammerl/status/522802068189622273\nso now we're kind of stuck in between two apis of which none work on all of the devices... do you have any thoughts how to address this situation? any ideas are highly welcome :)\n. i added chrome.sockets.tcp support to our tcp-socket abstraction: https://github.com/whiteout-io/tcp-socket/pull/13\nsince this thing is broken in chrome, it would be nice to have a testbed in ios ;) :)\n. ok, that might work for TLS. \nbut in the STARTTLS use case, the socket does not pause/abort a pending read :(\n. @oahziur any ideas on how to handle the pending read in the STARTTLS use case?\n. ok, interesting...\nis there any timeline when this PR is merged, or are you waiting to merge this pull request until the bug is fixed?\n. that sounds awesome! i'm looking forward to when we have native tls on all platforms :+1: \nsince we depend on STARTTLS for IMAP/SMTP, we'll stick with forge for handling TLS for the time being.\n. are there any updates on this?\n. i already asked this on twitter, apparently the issue has been silently purged? can you confirm this? is google abandoning tcp sockets in chrome apps?\n. this is a monthly ping to @agrieve and @oahziur about this issue, given that it is now 7 months old ...\n. ok, that's something i can make sense of. there's an empty NSDictionary in there ... that was probably caused by me playing around with the icons...\n<key>CFBundleIconFile</key>\n<string>icon.png</string>\n<key>CFBundleIcons</key>\n<dict/>\n<key>CFBundleIcons~ipad</key>\n<dict/>\nsome more questions about the icons... there was the issue https://github.com/MobileChromeApps/mobile-chrome-apps/issues/266 and this snippet, but i can't really piece it together. you try to detect the icons from the file names? what about the different platforms?\n1) is there a way to specify which icon set should be used on the specific platforms? we use different icon sets on ios/chrome/android\n2) are you adding the iphone 6 plus icon size as well?\n. I have an issue where the wrong icon files are being included.\n```\n\ncca -version\n0.4.3\n```\n\nHere's the icons i use:\nhttps://github.com/whiteout-io/mail-html5/blob/dev/WO-591/src/manifest.json#L7-L10\nhttps://github.com/whiteout-io/mail-html5/blob/dev/WO-591/src/manifest.mobile.json#L6-L41\nhttps://github.com/whiteout-io/mail-html5/tree/dev/WO-591/src/img\niOS and Android have different icons, so it's easy to spot where something went sideways.\nHere' what i get when i build the project: \ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\nSo for Android, the res/drawable* folders contain nothing that makes sense, except res/drawable.\nFor iOS, icon-60.png is not only the wrong file, it is also 196*196. Also, there are no files for the iPhone 6plus, but that has already been documented elsewhere.\nEDIT:\nYou can try it yourself (node, grunt and sass required):\ngit clone git@github.com:whiteout-io/mail-html5.git && cd mail-html5\ngit checkout -t origin/dev/WO-591\nnpm install && grunt\n./cca_build.sh\n. NSDictionary issue seems fixed, the Android icons was personal stupidity on my part (wrong path in the manifest). Everything except for choosing the correct 60px iOS icon works, so i've closed this ticket. \n. :+1: \n. thanks! when are you guys planning to release this fix?\n. we've also experienced this. it's an issue with the crosswalk webview using outdated openssl version :+1: \n. we just tracked the issue down to the use of inline svg for icons (all of those concatenated into one) that are inserted here\n<div style=\"width: 0; height: 0; visibility: hidden;\">\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n<symbol viewBox=\"155.9 279.2 283.5 283.5\" id=\"icon-about\"><title>about</title><path ... />\n</symbol><symbol viewBox=\"155.9 279.2 283.5 283.5\" id=\"icon-account\"><title>account</title><path ... /></symbol></svg>\n</div>\nif this is in the markup, the dom loading times out after a couple of seconds. \nis there any known problem with this practice? it doesn't seem to be a csp problem, since it still occurs if we remove this line, or is there a default CSP setting by now? it works when we access the very same code as a normal website here\nEDIT:\nif i'm quick enough to spin up a remote debugger, i see this error log: channel not fired: ondomcontentloaded\nEDIT 2: \nit is not related to xmlns=\"http://www.w3.org/2000/svg\", removing it doesn't change anything\n. when we concatenated the svg, we used was a) the individual sources and b) the concatenated source, so basically we duplicated the svg. that seems to have broken the parser or something along the way. on a semi-related note: does cca use the WKWebView or the (legacy) UIWebView?\n. can confirm:\nnpm http GET http://registry.cordova.io/com.google.playservices\nnpm http 200 http://registry.cordova.io/com.google.playservices\nthanks!\n. I use this to do some post-build tweaks:\n```\n!/bin/sh\nreads values from JSON\njsonValue() {\n  KEY=$1\n  num=$2\n  awk -F\"[,:}]\" '{for(i=1;i<=NF;i++){if($i~/'$KEY'\\042/){print $(i+1)}}}' | tr -d '\"' | sed -n ${num}p\n}\ngo to root\ncd dirname $0\ncd ..\nDIR=...\nPROJNAME=less dist/manifest.json | jsonValue name 1 | sed -e 's/^ *//' -e 's/ *$//'\ncreate\nrm -rf $DIR\nmkdir -p $DIR\ncca create ...\nprepare\ncd ...\ncca prepare\n\npost-build tweaks\n\necho \"\"\necho \"## Running post-build tweaks\"\nstatus bar should not overlay the web view\necho \"Tweaking iOS status bar to not overlay the web view\"\nsed -i \"\" 's/StatusBarOverlaysWebView\" value=\"true\"/StatusBarOverlaysWebView\" value=\"false\"/' \"platforms/ios/$PROJNAME/config.xml\"\nstatus bar should use dark font on light background\necho \"Tweaking iOS status bar to use dark font on light background\"\nsed -i \"\" 's/StatusBarStyle\" value=\"lightcontent\"/StatusBarStyle\" value=\"darkcontent\"/' \"platforms/ios/$PROJNAME/config.xml\"\ncopy splash screens\necho \"Copying splash screens\"\ncp ../../../src/img/Default* \"platforms/ios/$PROJNAME/Resources/splash\"\nfixing missing/wrong icons\necho \"Fixing wrong/missing iOS icons\"\ncp ../../../src/img/icon-40-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40.png\"\ncp ../../../src/img/icon-80-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40@2x.png\"\ncp ../../../src/img/icon-120-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40@3x.png\"\ncp ../../../src/img/icon-50-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-50.png\"\ncp ../../../src/img/icon-100-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-50@2x.png\"\ncp ../../../src/img/icon-60-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60.png\"\ncp ../../../src/img/icon-120-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60@2x.png\"\ncp ../../../src/img/icon-180-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60@3x.png\"\ncp ../../../src/img/icon-72-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-72.png\"\ncp ../../../src/img/icon-144-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-72@2x.png\"\ncp ../../../src/img/icon-76-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-76.png\"\ncp ../../../src/img/icon-152-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-76@2x.png\"\ncp ../../../src/img/icon-29-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small.png\"\ncp ../../../src/img/icon-58-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small@2x.png\"\ncp ../../../src/img/icon-87-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small@3x.png\"\ncp ../../../src/img/icon-57-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon.png\"\ncp ../../../src/img/icon-114-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon@2x.png\"\n```\n. yes, exactly. we had a binary built with v0.5.1 in the appstore which allowed people to use idb. i assume the crosswalk update coming with v0.6.0 overwrote the pre-existing idb.\n. awesome! we just integrated chrome.sockets.tcp in our TCPSocket polyfill https://github.com/whiteout-io/tcp-socket/\nhere's the code: https://github.com/whiteout-io/tcp-socket/blob/dev/WO-593/src/tcp-socket.js#L182\nfor now, we're running TLS via forge in a worker, but we're looking forward to when https://github.com/MobileChromeApps/mobile-chrome-apps/issues/269 is integrated :)\n. @mmocny as promised, some data to work with ...\ni created a rudimentary test project that connects to the smtp.wmail.io on 587 (TCP) and 465 (TLS) to check out some of the socket's corner cases, feel free to mess around with it: https://github.com/felixhammerl/foo\nairplane mode on android\nSteps:\n- fire up the app on a nexus 7\n- connect with tcp (works nicely)\n- send EHLO (works nicely)\n- enter airplane mode\n- socket explodes\nError in Error callbackId: ChromeSocketsTcp370329377 : TypeError: Cannot read property 'length' of undefined cordova.js:299\nprocessMessage failed: Error: TypeError: Cannot read property 'length' of undefined cordova.js:1073\nprocessMessage failed: Stack: TypeError: Cannot read property 'length' of undefined\n    at Event.fire (file:///android_asset/www/plugins/org.chromium.common/events.js:42:37)\n    at callbackWithError (file:///android_asset/www/plugins/org.chromium.common/errors.js:23:14)\n    at fail (file:///android_asset/www/plugins/org.chromium.sockets.tcp/sockets.tcp.js:150:9)\n    at Object.cordova.callbackFromNative (file:///android_asset/www/cordova.js:288:52)\n    at processMessage (file:///android_asset/www/cordova.js:1068:21)\n    at Function.androidExec.processMessages (file:///android_asset/www/cordova.js:1105:13)\n    at pollOnce (file:///android_asset/www/cordova.js:956:17)\n    at pollOnceFromOnlineEvent (file:///android_asset/www/cordova.js:946:5) cordova.js:1074\nprocessMessage failed: Message: F19 ChromeSocketsTcp370329377 {\"resultCode\":-2,\"message\":\"recvfrom failed: ETIMEDOUT (Connection timed out)\",\"socketId\":1}\nWould be nice to actually receive a callback that the socket just errored/closed. When the network is back up, it does tell me that the socket is (obviously) closed, so the sockets seems to know that it is broken, but fails to inform me about it.\nairplane mode on ios\nsame steps as android, same error...\n[Error] The operation couldn\u2019t be completed. Socket is not connected\n    callbackWithError (errors.js, line 14)\n    fail (sockets.tcp.js, line 150)\n    callbackFromNative (cordova.js, line 294)\n    (anonymous function) (cordova.js, line 1086)\n    nativeEvalAndFetch (cordova.js, line 1094)\n    nativeCallback (cordova.js, line 1083)\n    global code (index.html, line 1)\n[Error] TypeError: undefined is not an object (evaluating 'this.listeners.length')\n    nativeEvalAndFetch (cordova.js, line 1097)\n    nativeCallback (cordova.js, line 1083)\n    global code (index.html, line 1)\nAlso no notification that my stuff is closed...\nIs this how the chrome.sockets.tcp was designed?\n. i don't know if this is related to the way that chrome.sockets.tcp works on chromium. hence this post on net-dev: https://groups.google.com/a/chromium.org/forum/#!topic/net-dev/i7izmk0_l7U\n. @mmocny do you know about this? https://code.google.com/p/chromium/issues/detail?id=132896\nthe sockets.tcp.secure api does not seem to be functional in chrome ... \nEDIT:\nsee this tweet and the replies: https://twitter.com/felixhammerl/status/522802068189622273\nso now we're kind of stuck in between two apis of which none work on all of the devices... do you have any thoughts how to address this situation? any ideas are highly welcome :)\n. i added chrome.sockets.tcp support to our tcp-socket abstraction: https://github.com/whiteout-io/tcp-socket/pull/13\nsince this thing is broken in chrome, it would be nice to have a testbed in ios ;) :)\n. ok, that might work for TLS. \nbut in the STARTTLS use case, the socket does not pause/abort a pending read :(\n. @oahziur any ideas on how to handle the pending read in the STARTTLS use case?\n. ok, interesting...\nis there any timeline when this PR is merged, or are you waiting to merge this pull request until the bug is fixed?\n. that sounds awesome! i'm looking forward to when we have native tls on all platforms :+1: \nsince we depend on STARTTLS for IMAP/SMTP, we'll stick with forge for handling TLS for the time being.\n. are there any updates on this?\n. i already asked this on twitter, apparently the issue has been silently purged? can you confirm this? is google abandoning tcp sockets in chrome apps?\n. this is a monthly ping to @agrieve and @oahziur about this issue, given that it is now 7 months old ...\n. ok, that's something i can make sense of. there's an empty NSDictionary in there ... that was probably caused by me playing around with the icons...\n<key>CFBundleIconFile</key>\n<string>icon.png</string>\n<key>CFBundleIcons</key>\n<dict/>\n<key>CFBundleIcons~ipad</key>\n<dict/>\nsome more questions about the icons... there was the issue https://github.com/MobileChromeApps/mobile-chrome-apps/issues/266 and this snippet, but i can't really piece it together. you try to detect the icons from the file names? what about the different platforms?\n1) is there a way to specify which icon set should be used on the specific platforms? we use different icon sets on ios/chrome/android\n2) are you adding the iphone 6 plus icon size as well?\n. I have an issue where the wrong icon files are being included.\n```\n\ncca -version\n0.4.3\n```\n\nHere's the icons i use:\nhttps://github.com/whiteout-io/mail-html5/blob/dev/WO-591/src/manifest.json#L7-L10\nhttps://github.com/whiteout-io/mail-html5/blob/dev/WO-591/src/manifest.mobile.json#L6-L41\nhttps://github.com/whiteout-io/mail-html5/tree/dev/WO-591/src/img\niOS and Android have different icons, so it's easy to spot where something went sideways.\nHere' what i get when i build the project: \ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\ncp: no such file or directory: www/icon-36-android.png\nError copying 36px icon file: cp: no such file or directory: www/icon-36-android.png\ncp: no such file or directory: www/icon-48-android.png\nError copying 48px icon file: cp: no such file or directory: www/icon-48-android.png\ncp: no such file or directory: www/icon-72-android.png\nError copying 72px icon file: cp: no such file or directory: www/icon-72-android.png\ncp: no such file or directory: www/icon-96-android.png\nError copying 96px icon file: cp: no such file or directory: www/icon-96-android.png\ncp: no such file or directory: www/icon-144-android.png\nError copying 144px icon file: cp: no such file or directory: www/icon-144-android.png\ncp: no such file or directory: www/icon-192-android.png\nError copying 192px icon file: cp: no such file or directory: www/icon-192-android.png\nSo for Android, the res/drawable* folders contain nothing that makes sense, except res/drawable.\nFor iOS, icon-60.png is not only the wrong file, it is also 196*196. Also, there are no files for the iPhone 6plus, but that has already been documented elsewhere.\nEDIT:\nYou can try it yourself (node, grunt and sass required):\ngit clone git@github.com:whiteout-io/mail-html5.git && cd mail-html5\ngit checkout -t origin/dev/WO-591\nnpm install && grunt\n./cca_build.sh\n. NSDictionary issue seems fixed, the Android icons was personal stupidity on my part (wrong path in the manifest). Everything except for choosing the correct 60px iOS icon works, so i've closed this ticket. \n. :+1: \n. thanks! when are you guys planning to release this fix?\n. we've also experienced this. it's an issue with the crosswalk webview using outdated openssl version :+1: \n. we just tracked the issue down to the use of inline svg for icons (all of those concatenated into one) that are inserted here\n<div style=\"width: 0; height: 0; visibility: hidden;\">\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n<symbol viewBox=\"155.9 279.2 283.5 283.5\" id=\"icon-about\"><title>about</title><path ... />\n</symbol><symbol viewBox=\"155.9 279.2 283.5 283.5\" id=\"icon-account\"><title>account</title><path ... /></symbol></svg>\n</div>\nif this is in the markup, the dom loading times out after a couple of seconds. \nis there any known problem with this practice? it doesn't seem to be a csp problem, since it still occurs if we remove this line, or is there a default CSP setting by now? it works when we access the very same code as a normal website here\nEDIT:\nif i'm quick enough to spin up a remote debugger, i see this error log: channel not fired: ondomcontentloaded\nEDIT 2: \nit is not related to xmlns=\"http://www.w3.org/2000/svg\", removing it doesn't change anything\n. when we concatenated the svg, we used was a) the individual sources and b) the concatenated source, so basically we duplicated the svg. that seems to have broken the parser or something along the way. on a semi-related note: does cca use the WKWebView or the (legacy) UIWebView?\n. can confirm:\nnpm http GET http://registry.cordova.io/com.google.playservices\nnpm http 200 http://registry.cordova.io/com.google.playservices\nthanks!\n. I use this to do some post-build tweaks:\n```\n!/bin/sh\nreads values from JSON\njsonValue() {\n  KEY=$1\n  num=$2\n  awk -F\"[,:}]\" '{for(i=1;i<=NF;i++){if($i~/'$KEY'\\042/){print $(i+1)}}}' | tr -d '\"' | sed -n ${num}p\n}\ngo to root\ncd dirname $0\ncd ..\nDIR=...\nPROJNAME=less dist/manifest.json | jsonValue name 1 | sed -e 's/^ *//' -e 's/ *$//'\ncreate\nrm -rf $DIR\nmkdir -p $DIR\ncca create ...\nprepare\ncd ...\ncca prepare\n\npost-build tweaks\n\necho \"\"\necho \"## Running post-build tweaks\"\nstatus bar should not overlay the web view\necho \"Tweaking iOS status bar to not overlay the web view\"\nsed -i \"\" 's/StatusBarOverlaysWebView\" value=\"true\"/StatusBarOverlaysWebView\" value=\"false\"/' \"platforms/ios/$PROJNAME/config.xml\"\nstatus bar should use dark font on light background\necho \"Tweaking iOS status bar to use dark font on light background\"\nsed -i \"\" 's/StatusBarStyle\" value=\"lightcontent\"/StatusBarStyle\" value=\"darkcontent\"/' \"platforms/ios/$PROJNAME/config.xml\"\ncopy splash screens\necho \"Copying splash screens\"\ncp ../../../src/img/Default* \"platforms/ios/$PROJNAME/Resources/splash\"\nfixing missing/wrong icons\necho \"Fixing wrong/missing iOS icons\"\ncp ../../../src/img/icon-40-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40.png\"\ncp ../../../src/img/icon-80-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40@2x.png\"\ncp ../../../src/img/icon-120-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-40@3x.png\"\ncp ../../../src/img/icon-50-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-50.png\"\ncp ../../../src/img/icon-100-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-50@2x.png\"\ncp ../../../src/img/icon-60-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60.png\"\ncp ../../../src/img/icon-120-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60@2x.png\"\ncp ../../../src/img/icon-180-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-60@3x.png\"\ncp ../../../src/img/icon-72-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-72.png\"\ncp ../../../src/img/icon-144-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-72@2x.png\"\ncp ../../../src/img/icon-76-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-76.png\"\ncp ../../../src/img/icon-152-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-76@2x.png\"\ncp ../../../src/img/icon-29-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small.png\"\ncp ../../../src/img/icon-58-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small@2x.png\"\ncp ../../../src/img/icon-87-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon-small@3x.png\"\ncp ../../../src/img/icon-57-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon.png\"\ncp ../../../src/img/icon-114-ios.png \"platforms/ios/$PROJNAME/Resources/icons/icon@2x.png\"\n```\n. yes, exactly. we had a binary built with v0.5.1 in the appstore which allowed people to use idb. i assume the crosswalk update coming with v0.6.0 overwrote the pre-existing idb.\n. ",
    "muszek": "@mwoghiren: this plugin depends on cc.fovea.plugins.inapppurchase and it also appears to be missing from the registry.  I added git://github.com/j3k0/PhoneGap-InAppPurchase-iOS.git manually before installing your plugin and it did the trick, but you might want to take a look into it as well.\n. I'm starting to wonder - is this plugin meant to be used in a plain Cordova (not mobile chrome apps) project?  If so, can someone please post a paragraph or two on how to install it?  Installing cc.fovea.plugins.inapppurchase and the google.payments plugin itself is not enough.  I get a js error about a missing \"events\" module.  I find and include chrome-common/events.js, but it needs some js code that defines a 'module' global variable... I clearly need to have some base js included first.\n. Micha\u0142: thank you, it worked.  Now I have to figure out why the in-app payment testing doesn't work as expected and my wife's account gets charged :-)\nIn case someone else faces the same problems, here's a step-by-step instruction:\nA. Install the cc.fovea.plugins.inapppurchase plugin (currently it's not in Cordova's registry, and google.payments` plugin.xml references it as if it was in fact registered).\ncordova plugin add git://github.com/j3k0/PhoneGap-InAppPurchase-iOS.git\nB. Install google.payments plugin.  Currently it's not registered and it resides in a subdirectory of a https://github.com/MobileChromeApps/mobile-chrome-apps repo.  I didn't know any better solution than to simply clone the whole repo, copy this plugin's directory elsewhere and make it a separate repo.  I pushed it to https://github.com/muszek/google.payments .  It's 100% the same code as the original, but please do yourself a favor and make sure that's the case.  It's payments after all and you shouldn't rely on some random guy's word.  Hopefully it will be registered soon and you won't have to do it.\nThis is how you install it:\ncordova plugin add https://github.com/muszek/google.payments.git\nC. Install org.chromium.common plugin\ncordova plugin add org.chromium.common\n. A. It looks like the searchpath feature hasn't been released yet.  I see it in the \"man page\" (cordova help) in their github repo, but it's not when I run 'cordova help' locally.  I'm running the latest version from npm:\nmuszek@dziobak:~/pgpc2$ cordova --version\n3.4.0-0.1.3\nmuszek@dziobak:~/pgpc2$ plugman --version\n0.20.2\nB. There's no issue with a wrong account being charged (I had to use her account because for some reason Google Play doesn't allow to make a purchase with app's owner account).  There's an issue with the actual charges being made, because I've made everything I was asked to in order to set up a test account and the account shouldn't have been charged at all.  But it probably doesn't have anything to do with your code, so I'm not bugging you with it... I just mentioned it.\nC.  Here's something I'd like to bug you with: I played around with the code (Android for now, haven't tested this plugin on iOS at all yet) for a while and I can't get anything but the .buy() method to work.\n.getPurchases() fails with an \"Invalid action\" message:\ngoogle.payments.inapp.getPurchases(\n    function(resp) {\n        console.log('it worked!');\n        console.log(resp);\n    },\n    function(resp) {\n        console.log('it failed!');\n        console.log(resp);\n    }\n);\nit failed!\nInvalid action\n.getSKU():\ngoogle.payments.inapp.getSkuDetails(\n    ['ad_removal_2', 'testowy.za.dwa'],\n    function(resp) {\n        console.log('it worked!');\n        console.log(resp);\n    },\n    function(resp) {\n        console.log('it failed!');\n        console.log(resp);\n    }\n);\nundefined\nit failed!\nError retrieving SKU details\nIs there a reference implementation of this plugin?  Or perhaps someone would like to test-drive it on my app?  I don't know if it's buggy (you've said it's experimental) or there's a problem with my code or the way things are set up in Google Play.\n. I have installed AndroidInAppBilling plugin from https://github.com/poiuytrez/AndroidInAppBilling/tree/master/v3 and it seems to work fine.  I ran a few methods (copy & paste from Google Chrome's console, the formatting could've suffered).  The point is \"the other plugin works, so there probably are issues in your plugin\".\ninappbilling.init(\n    function(resp) {\n        console.log('init successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('init failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: setup ok inappbilling.js:6\nundefined\ninit successful\nOK\ninappbilling.getPurchases(\n    function(resp) {\n        console.log('getPurchases() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getPurchases() failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: getPurchases called! inappbilling.js:6\ngetPurchases() successful\n[Object, Object]\n0: Object\n1: Object\nlength: 2\n__proto__: Array[0]\nundefined\ninappbilling.getProductDetails(\n    function(resp) {\n        console.log('getProductDetails() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getProductDetails() failed');\n        console.log(resp)\n    },\n    ['ad_removal_2','testowy_produkt_za_grosik','testowy.za.dwa','testowy_produkt_3']\n)\nInAppBilling[js]: getProductDetails called! inappbilling.js:6\nInAppBilling[js]: load [\"ad_removal_2\",\"testowy_produkt_za_grosik\",\"testowy.za.dwa\",\"testowy_produkt_3\"] inappbilling.js:6\nundefined\ngetProductDetails() successful\n[Object, Object, Object, Object]\n0: Object\ndescription: \"Ads will be removed from the application.\"\nprice: \"5,99 z\u0142\"\nprice_amount_micros: 5990000\nprice_currency_code: \"PLN\"\nproductId: \"ad_removal_2\"\ntitle: \"Ad removal (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n1: Object\ndescription: \"asdf\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_za_grosik\"\ntitle: \"Testowy Produkt Za Grosik (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n2: Object\ndescription: \"opis...\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy.za.dwa\"\ntitle: \"testowy za 2 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n3: Object\ndescription: \"opis trzeciego testowego\"\nprice: \"4,50 z\u0142\"\nprice_amount_micros: 4500000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_3\"\ntitle: \"testowy 3 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\nlength: 4\n__proto__: Array[0]\ninappbilling.getAvailableProducts(\n    function(resp) {\n        console.log('getAvailableProducts() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getAvailableProducts() failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: getAvailableProducts called! inappbilling.js:6\ngetAvailableProducts() successful\n[Object, Object, Object, Object]\n0: Object\ndescription: \"Ads will be removed from the application.\"\nprice: \"5,99 z\u0142\"\nprice_amount_micros: 5990000\nprice_currency_code: \"PLN\"\nproductId: \"ad_removal_2\"\ntitle: \"Ad removal (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n1: Object\ndescription: \"asdf\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_za_grosik\"\ntitle: \"Testowy Produkt Za Grosik (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n2: Object\ndescription: \"opis...\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy.za.dwa\"\ntitle: \"testowy za 2 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n3: Object\ndescription: \"opis trzeciego testowego\"\nprice: \"4,50 z\u0142\"\nprice_amount_micros: 4500000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_3\"\ntitle: \"testowy 3 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\nlength: 4\n__proto__: Array[0]\nundefined\n. Just made a test purchase with the other plugin and it was in fact a test purchase (my wife's account was not charged).  Perhaps the case with your plugin was that I waited too little time between setting everything up in Google Play Developer Console and making the purchase.  Or perhaps there's an issue with the plugin.\nIf you'd like, I can surrender another dollar and test it again with your plugin :-)\n. @mwoghiren: this plugin depends on cc.fovea.plugins.inapppurchase and it also appears to be missing from the registry.  I added git://github.com/j3k0/PhoneGap-InAppPurchase-iOS.git manually before installing your plugin and it did the trick, but you might want to take a look into it as well.\n. I'm starting to wonder - is this plugin meant to be used in a plain Cordova (not mobile chrome apps) project?  If so, can someone please post a paragraph or two on how to install it?  Installing cc.fovea.plugins.inapppurchase and the google.payments plugin itself is not enough.  I get a js error about a missing \"events\" module.  I find and include chrome-common/events.js, but it needs some js code that defines a 'module' global variable... I clearly need to have some base js included first.\n. Micha\u0142: thank you, it worked.  Now I have to figure out why the in-app payment testing doesn't work as expected and my wife's account gets charged :-)\nIn case someone else faces the same problems, here's a step-by-step instruction:\nA. Install the cc.fovea.plugins.inapppurchase plugin (currently it's not in Cordova's registry, and google.payments` plugin.xml references it as if it was in fact registered).\ncordova plugin add git://github.com/j3k0/PhoneGap-InAppPurchase-iOS.git\nB. Install google.payments plugin.  Currently it's not registered and it resides in a subdirectory of a https://github.com/MobileChromeApps/mobile-chrome-apps repo.  I didn't know any better solution than to simply clone the whole repo, copy this plugin's directory elsewhere and make it a separate repo.  I pushed it to https://github.com/muszek/google.payments .  It's 100% the same code as the original, but please do yourself a favor and make sure that's the case.  It's payments after all and you shouldn't rely on some random guy's word.  Hopefully it will be registered soon and you won't have to do it.\nThis is how you install it:\ncordova plugin add https://github.com/muszek/google.payments.git\nC. Install org.chromium.common plugin\ncordova plugin add org.chromium.common\n. A. It looks like the searchpath feature hasn't been released yet.  I see it in the \"man page\" (cordova help) in their github repo, but it's not when I run 'cordova help' locally.  I'm running the latest version from npm:\nmuszek@dziobak:~/pgpc2$ cordova --version\n3.4.0-0.1.3\nmuszek@dziobak:~/pgpc2$ plugman --version\n0.20.2\nB. There's no issue with a wrong account being charged (I had to use her account because for some reason Google Play doesn't allow to make a purchase with app's owner account).  There's an issue with the actual charges being made, because I've made everything I was asked to in order to set up a test account and the account shouldn't have been charged at all.  But it probably doesn't have anything to do with your code, so I'm not bugging you with it... I just mentioned it.\nC.  Here's something I'd like to bug you with: I played around with the code (Android for now, haven't tested this plugin on iOS at all yet) for a while and I can't get anything but the .buy() method to work.\n.getPurchases() fails with an \"Invalid action\" message:\ngoogle.payments.inapp.getPurchases(\n    function(resp) {\n        console.log('it worked!');\n        console.log(resp);\n    },\n    function(resp) {\n        console.log('it failed!');\n        console.log(resp);\n    }\n);\nit failed!\nInvalid action\n.getSKU():\ngoogle.payments.inapp.getSkuDetails(\n    ['ad_removal_2', 'testowy.za.dwa'],\n    function(resp) {\n        console.log('it worked!');\n        console.log(resp);\n    },\n    function(resp) {\n        console.log('it failed!');\n        console.log(resp);\n    }\n);\nundefined\nit failed!\nError retrieving SKU details\nIs there a reference implementation of this plugin?  Or perhaps someone would like to test-drive it on my app?  I don't know if it's buggy (you've said it's experimental) or there's a problem with my code or the way things are set up in Google Play.\n. I have installed AndroidInAppBilling plugin from https://github.com/poiuytrez/AndroidInAppBilling/tree/master/v3 and it seems to work fine.  I ran a few methods (copy & paste from Google Chrome's console, the formatting could've suffered).  The point is \"the other plugin works, so there probably are issues in your plugin\".\ninappbilling.init(\n    function(resp) {\n        console.log('init successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('init failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: setup ok inappbilling.js:6\nundefined\ninit successful\nOK\ninappbilling.getPurchases(\n    function(resp) {\n        console.log('getPurchases() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getPurchases() failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: getPurchases called! inappbilling.js:6\ngetPurchases() successful\n[Object, Object]\n0: Object\n1: Object\nlength: 2\n__proto__: Array[0]\nundefined\ninappbilling.getProductDetails(\n    function(resp) {\n        console.log('getProductDetails() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getProductDetails() failed');\n        console.log(resp)\n    },\n    ['ad_removal_2','testowy_produkt_za_grosik','testowy.za.dwa','testowy_produkt_3']\n)\nInAppBilling[js]: getProductDetails called! inappbilling.js:6\nInAppBilling[js]: load [\"ad_removal_2\",\"testowy_produkt_za_grosik\",\"testowy.za.dwa\",\"testowy_produkt_3\"] inappbilling.js:6\nundefined\ngetProductDetails() successful\n[Object, Object, Object, Object]\n0: Object\ndescription: \"Ads will be removed from the application.\"\nprice: \"5,99 z\u0142\"\nprice_amount_micros: 5990000\nprice_currency_code: \"PLN\"\nproductId: \"ad_removal_2\"\ntitle: \"Ad removal (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n1: Object\ndescription: \"asdf\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_za_grosik\"\ntitle: \"Testowy Produkt Za Grosik (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n2: Object\ndescription: \"opis...\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy.za.dwa\"\ntitle: \"testowy za 2 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n3: Object\ndescription: \"opis trzeciego testowego\"\nprice: \"4,50 z\u0142\"\nprice_amount_micros: 4500000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_3\"\ntitle: \"testowy 3 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\nlength: 4\n__proto__: Array[0]\ninappbilling.getAvailableProducts(\n    function(resp) {\n        console.log('getAvailableProducts() successful');\n        console.log(resp)\n    },\n    function(resp) {\n        console.log('getAvailableProducts() failed');\n        console.log(resp)\n    }\n)\nInAppBilling[js]: getAvailableProducts called! inappbilling.js:6\ngetAvailableProducts() successful\n[Object, Object, Object, Object]\n0: Object\ndescription: \"Ads will be removed from the application.\"\nprice: \"5,99 z\u0142\"\nprice_amount_micros: 5990000\nprice_currency_code: \"PLN\"\nproductId: \"ad_removal_2\"\ntitle: \"Ad removal (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n1: Object\ndescription: \"asdf\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_za_grosik\"\ntitle: \"Testowy Produkt Za Grosik (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n2: Object\ndescription: \"opis...\"\nprice: \"2,99 z\u0142\"\nprice_amount_micros: 2990000\nprice_currency_code: \"PLN\"\nproductId: \"testowy.za.dwa\"\ntitle: \"testowy za 2 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\n3: Object\ndescription: \"opis trzeciego testowego\"\nprice: \"4,50 z\u0142\"\nprice_amount_micros: 4500000\nprice_currency_code: \"PLN\"\nproductId: \"testowy_produkt_3\"\ntitle: \"testowy 3 (Percentage Calculator)\"\ntype: \"inapp\"\n__proto__: Object\nlength: 4\n__proto__: Array[0]\nundefined\n. Just made a test purchase with the other plugin and it was in fact a test purchase (my wife's account was not charged).  Perhaps the case with your plugin was that I waited too little time between setting everything up in Google Play Developer Console and making the purchase.  Or perhaps there's an issue with the plugin.\nIf you'd like, I can surrender another dollar and test it again with your plugin :-)\n. ",
    "mhayes14": "Has this plugin disappeared from the registry again (I can't work out how to check)?\nI am having the same installation issue today.\n```\ncordova plugin add com.google.payments\nFetching plugin \"com.google.payments\" via plugin registry\nError: Failed to fetch package information for com.google.payments\n    at /usr/local/Cellar/node/0.10.5/lib/node_modules/cordova/node_modules/cordova-lib/src/plugman/registry/registry.js:32:20\n    at Request.cb [as _callback] \n[...]\n```\nIs it recommended to use this plugin outside of CCA apps (I'm vanilla Cordova here, considering switching to using the Chrome setup/framework if necessary)?\n. Even cloning this repo and installing locally, there are other plugins still missing from the registry (same issue as @muszek had previously).\ncordova plugin add ~/mca/chrome-cordova/plugins/google.payments/\nInstalling \"com.google.payments\" for android\nFetching plugin \"cc.fovea.plugins.inapppurchase\" via plugin registry\nFailed to install 'com.google.payments':Error: Failed to fetch package information for cc.fovea.plugins.inapppurchase\nI'm going to give poiuytrez/AndroidInAppBilling a go instead for now.\nThanks\n. Thanks.\nThe documentation at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/chrome-cordova/plugins/google.payments/README.md seems to suggest that it's in the plugin registry.\n\nFor Cordova apps, install with the cordova command-line tool:\ncordova plugin add com.google.payments\n. Although not the best solution, you can send the client-side access token to your server over HTTPS. It can then be used directly server-side, just as you would on the client side. Just remember that the token is short lived. https://developers.google.com/+/web/signin/client-to-server-flow\n\nI think chrome.identity should enable us to get a one-time code (if this is possible), which can then be exchanged for an access token on the server side. Similar to this: https://developers.google.com/+/web/signin/server-side-flow\n. Has this plugin disappeared from the registry again (I can't work out how to check)?\nI am having the same installation issue today.\n```\ncordova plugin add com.google.payments\nFetching plugin \"com.google.payments\" via plugin registry\nError: Failed to fetch package information for com.google.payments\n    at /usr/local/Cellar/node/0.10.5/lib/node_modules/cordova/node_modules/cordova-lib/src/plugman/registry/registry.js:32:20\n    at Request.cb [as _callback] \n[...]\n```\nIs it recommended to use this plugin outside of CCA apps (I'm vanilla Cordova here, considering switching to using the Chrome setup/framework if necessary)?\n. Even cloning this repo and installing locally, there are other plugins still missing from the registry (same issue as @muszek had previously).\ncordova plugin add ~/mca/chrome-cordova/plugins/google.payments/\nInstalling \"com.google.payments\" for android\nFetching plugin \"cc.fovea.plugins.inapppurchase\" via plugin registry\nFailed to install 'com.google.payments':Error: Failed to fetch package information for cc.fovea.plugins.inapppurchase\nI'm going to give poiuytrez/AndroidInAppBilling a go instead for now.\nThanks\n. Thanks.\nThe documentation at https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/chrome-cordova/plugins/google.payments/README.md seems to suggest that it's in the plugin registry.\n\nFor Cordova apps, install with the cordova command-line tool:\ncordova plugin add com.google.payments\n. Although not the best solution, you can send the client-side access token to your server over HTTPS. It can then be used directly server-side, just as you would on the client side. Just remember that the token is short lived. https://developers.google.com/+/web/signin/client-to-server-flow\n\nI think chrome.identity should enable us to get a one-time code (if this is possible), which can then be exchanged for an access token on the server side. Similar to this: https://developers.google.com/+/web/signin/server-side-flow\n. ",
    "wyzwhp": "Thanks!\n. I try to send a file in socket.write,Chinesa chartset display error code. I think may be error in socket write .\n. Thanks!\n. I try to send a file in socket.write,Chinesa chartset display error code. I think may be error in socket write .\n. ",
    "moust": "No, I hadn't seen it, but I just do.\n. No, I hadn't seen it, but I just do.\n. ",
    "jofomah": "thanks a lot, you saved me a lot of headache.\nOn Thu, Apr 10, 2014 at 2:36 PM, Michal Mocny notifications@github.comwrote:\n\nYes, this is possible. You can add any cordova plugin using our cca tool\nusing: cca plugin add ..., exactly as you would have used cordova plugin\nadd ... or phonegap local plugin add ....\nRegarding send sms: you can use an sms: url (see this SO questionhttp://stackoverflow.com/questions/4787905/sms-url-on-android)\nbut reading/managing sms will require building a plugin to do this in\nnative code. Not sure if one exists.\nFor Media and vibration there exist cordova core plugins for:\norg.apache.cordova.vibrationhttp://plugins.cordova.io/#/package/org.apache.cordova.vibration,\nand org.apache.cordova.mediahttp://plugins.cordova.io/#/package/org.apache.cordova.media\n.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/143#issuecomment-40081971\n.\n. cool\n\nOn Thu, Apr 10, 2014 at 3:42 PM, Michal Mocny notifications@github.comwrote:\n\nNp. [More long winded answer available on stack overflow].(\nhttp://stackoverflow.com/questions/21684414/reasons-for-porting-a-cordova-app-to-a-mobile-chrome-app/21709971#21709971\n)\nI'll take a look to see if this is properly documented in our repo.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/143#issuecomment-40089805\n.\n. thanks a lot, you saved me a lot of headache.\n\nOn Thu, Apr 10, 2014 at 2:36 PM, Michal Mocny notifications@github.comwrote:\n\nYes, this is possible. You can add any cordova plugin using our cca tool\nusing: cca plugin add ..., exactly as you would have used cordova plugin\nadd ... or phonegap local plugin add ....\nRegarding send sms: you can use an sms: url (see this SO questionhttp://stackoverflow.com/questions/4787905/sms-url-on-android)\nbut reading/managing sms will require building a plugin to do this in\nnative code. Not sure if one exists.\nFor Media and vibration there exist cordova core plugins for:\norg.apache.cordova.vibrationhttp://plugins.cordova.io/#/package/org.apache.cordova.vibration,\nand org.apache.cordova.mediahttp://plugins.cordova.io/#/package/org.apache.cordova.media\n.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/143#issuecomment-40081971\n.\n. cool\n\nOn Thu, Apr 10, 2014 at 3:42 PM, Michal Mocny notifications@github.comwrote:\n\nNp. [More long winded answer available on stack overflow].(\nhttp://stackoverflow.com/questions/21684414/reasons-for-porting-a-cordova-app-to-a-mobile-chrome-app/21709971#21709971\n)\nI'll take a look to see if this is properly documented in our repo.\n\nReply to this email directly or view it on GitHubhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/143#issuecomment-40089805\n.\n. \n",
    "dmckinley820": "cca version is 0.0.9\nPlugins:\n[ 'android.support.v4',\n  'com.google.playservices',\n  'org.apache.cordova.console',\n  'org.apache.cordova.file',\n  'org.apache.cordova.inappbrowser',\n  'org.apache.cordova.keyboard',\n  'org.apache.cordova.media',\n  'org.apache.cordova.network-information',\n  'org.apache.cordova.statusbar',\n  'org.chromium.FileChooser',\n  'org.chromium.alarms',\n  'org.chromium.bootstrap',\n  'org.chromium.common',\n  'org.chromium.fileSystem',\n  'org.chromium.frameworks.googleopensource',\n  'org.chromium.frameworks.googleplus',\n  'org.chromium.i18n',\n  'org.chromium.identity',\n  'org.chromium.navigation',\n  'org.chromium.notifications',\n  'org.chromium.polyfill.CustomEvent',\n  'org.chromium.polyfill.blob_constructor',\n  'org.chromium.polyfill.xhr_features',\n  'org.chromium.pushMessaging',\n  'org.chromium.runtime',\n  'org.chromium.socket',\n  'org.chromium.storage' ]\n. cca version is 0.0.9\nPlugins:\n[ 'android.support.v4',\n  'com.google.playservices',\n  'org.apache.cordova.console',\n  'org.apache.cordova.file',\n  'org.apache.cordova.inappbrowser',\n  'org.apache.cordova.keyboard',\n  'org.apache.cordova.media',\n  'org.apache.cordova.network-information',\n  'org.apache.cordova.statusbar',\n  'org.chromium.FileChooser',\n  'org.chromium.alarms',\n  'org.chromium.bootstrap',\n  'org.chromium.common',\n  'org.chromium.fileSystem',\n  'org.chromium.frameworks.googleopensource',\n  'org.chromium.frameworks.googleplus',\n  'org.chromium.i18n',\n  'org.chromium.identity',\n  'org.chromium.navigation',\n  'org.chromium.notifications',\n  'org.chromium.polyfill.CustomEvent',\n  'org.chromium.polyfill.blob_constructor',\n  'org.chromium.polyfill.xhr_features',\n  'org.chromium.pushMessaging',\n  'org.chromium.runtime',\n  'org.chromium.socket',\n  'org.chromium.storage' ]\n. ",
    "yoavniran": "awesome Max, thanks for the (very quick) useful feedback\n. great stuff, thanks.\nim working on a demo app and trying to build a nice framework (backbone based) for these kind of apps so im sure ill be finding myself searching in the dark more often than not. great to see theres quick feedback and help!\nI was kinda disappointed that apparently its not yet possible to share the same Google API token between the chrome app and my server side (node). for now it looks like i need the user to authorize both client and server separately :(\nthanks!\nYoav\n. awesome Max, thanks for the (very quick) useful feedback\n. great stuff, thanks.\nim working on a demo app and trying to build a nice framework (backbone based) for these kind of apps so im sure ill be finding myself searching in the dark more often than not. great to see theres quick feedback and help!\nI was kinda disappointed that apparently its not yet possible to share the same Google API token between the chrome app and my server side (node). for now it looks like i need the user to authorize both client and server separately :(\nthanks!\nYoav\n. ",
    "guillaumewuip": "Ok I'm going to try to built the cca source. Thanks !\n. Oh yes. Actually I've several background script. And one that listen to chrome.app.runtime.onLaunched before starting to register with gcm and add a listener at chrome.gcm.onMessage.\nSo I need to move the chrome.gcm.onMessage listener out from onLaunched ?\n. Ok. Will I have access to all background scripts (I want to make an AJAX with jQuery) ?\n. jQuery is loaded in background, before my \"register\" script. \nI've just make that code. I've a nodeJs server that log something every time the url \"/testMobile\" is called. \njavascript\nchrome.gcm.onMessage.addListener(function (msg) {\n        $.ajax({\n            url  : \"http://myip/testMobile\",\n            type : \"GET\",\n            success : function (result) {\n                console.log('testMobile', result);\n            }\n        });\n});\nThe server received callback when app is active, but not when it's not. :confused: \nThanks for your help up to now !\n. Ok, it looks like the app didn't wake up. No re-opens. No presence in app switcher.\nAnd I've look at logcat : E/ChromeGcm(28357): Failed to make startActivity intent: java.lang.NullPointerException.\n. I've done some debug.\nThe error is fired from ChromeGcm.java line 75 : \njava\nString activityClass = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_ACTIVITIES).activities[0].name;\ncontext is null.\nI'm not good at writing java but I understand that contextshould be created in initialize() so there probably is a problem with :\njava\n//ChromeGcm.js line 53 :\ncontext = cordova.getActivity().getApplicationContext();\n. Ok, get it. Thanks !\n. Thank you guys it works for me !\nI needed to add android-support-v4 plugin yesterday (https://github.com/MobileChromeApps/cordova-plugin-android-support-v4). Shouldn't it be in the gcm plugin dependencies ?\n. I have this behaviour too. Alarm not always firing. Notification after gcm message not always created.\ncca -v \n0.3.1\n. Ok I'm going to try to built the cca source. Thanks !\n. Oh yes. Actually I've several background script. And one that listen to chrome.app.runtime.onLaunched before starting to register with gcm and add a listener at chrome.gcm.onMessage.\nSo I need to move the chrome.gcm.onMessage listener out from onLaunched ?\n. Ok. Will I have access to all background scripts (I want to make an AJAX with jQuery) ?\n. jQuery is loaded in background, before my \"register\" script. \nI've just make that code. I've a nodeJs server that log something every time the url \"/testMobile\" is called. \njavascript\nchrome.gcm.onMessage.addListener(function (msg) {\n        $.ajax({\n            url  : \"http://myip/testMobile\",\n            type : \"GET\",\n            success : function (result) {\n                console.log('testMobile', result);\n            }\n        });\n});\nThe server received callback when app is active, but not when it's not. :confused: \nThanks for your help up to now !\n. Ok, it looks like the app didn't wake up. No re-opens. No presence in app switcher.\nAnd I've look at logcat : E/ChromeGcm(28357): Failed to make startActivity intent: java.lang.NullPointerException.\n. I've done some debug.\nThe error is fired from ChromeGcm.java line 75 : \njava\nString activityClass = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_ACTIVITIES).activities[0].name;\ncontext is null.\nI'm not good at writing java but I understand that contextshould be created in initialize() so there probably is a problem with :\njava\n//ChromeGcm.js line 53 :\ncontext = cordova.getActivity().getApplicationContext();\n. Ok, get it. Thanks !\n. Thank you guys it works for me !\nI needed to add android-support-v4 plugin yesterday (https://github.com/MobileChromeApps/cordova-plugin-android-support-v4). Shouldn't it be in the gcm plugin dependencies ?\n. I have this behaviour too. Alarm not always firing. Notification after gcm message not always created.\ncca -v \n0.3.1\n. ",
    "olalonde": "Ok thanks.\n. Oh, cca run android --target=tablet7 worked.\n. Ok thanks.\n. Oh, cca run android --target=tablet7 worked.\n. ",
    "sallespromanager": "AFAIK, it is not possible to use the same token, which in this case, is attached to an Android app only.\ni am not sure i understand what you mean by \"to fetch data from the server, for which I need to make sure the user is authenticated\"\nif you got the token, you can make requests to Google server to fetch the data ( from your mobile app ).\nif you would like to have your server to login on the user's behalf to fetch the data, definitely this is not the way to do it.\n. AFAIK, it is not possible to use the same token, which in this case, is attached to an Android app only.\ni am not sure i understand what you mean by \"to fetch data from the server, for which I need to make sure the user is authenticated\"\nif you got the token, you can make requests to Google server to fetch the data ( from your mobile app ).\nif you would like to have your server to login on the user's behalf to fetch the data, definitely this is not the way to do it.\n. ",
    "pranavgupta21": "I believe once the access token is obtained, api requests can be made with just the token, that is, independently, without requiring client id or anything else. So is it not possible that a user on the client side might intercept the request (the request from your app to your server in which you send the access token obtained on client side) and pass in a different access token. So your server would end up retrieving the information for a different user actually. Please correct me if I am missing something.\n. I believe once the access token is obtained, api requests can be made with just the token, that is, independently, without requiring client id or anything else. So is it not possible that a user on the client side might intercept the request (the request from your app to your server in which you send the access token obtained on client side) and pass in a different access token. So your server would end up retrieving the information for a different user actually. Please correct me if I am missing something.\n. ",
    "twilly86": "Ok, that answers my question.  Is there a ticket for integrating crosswalk into cca or should I close this out?\n. I was able to get crosswalk builds to work with gradle. Here is a stackoverflow post for reference..\nhttp://stackoverflow.com/questions/25451623/is-it-possible-to-use-crosswalk-cordova-inside-of-android-studio\n. Ok, that answers my question.  Is there a ticket for integrating crosswalk into cca or should I close this out?\n. I was able to get crosswalk builds to work with gradle. Here is a stackoverflow post for reference..\nhttp://stackoverflow.com/questions/25451623/is-it-possible-to-use-crosswalk-cordova-inside-of-android-studio\n. ",
    "curtastic": "I have the same error and my device is attached and in developer mode and I can't find a solution\n. adb devices showed nothing even though the device shows up in My Computer. I had to install the driver for the device and now it works.\n. I have the same error and my device is attached and in developer mode and I can't find a solution\n. adb devices showed nothing even though the device shows up in My Computer. I had to install the driver for the device and now it works.\n. ",
    "SlimSim": "Thank you so much, I'll be on the lookout for this api!\n. Nice!\n. The github-link is no longer valid, it leads to a 404-page... Any updates on the API?\nThanks!\n. Thank you so much, I'll be on the lookout for this api!\n. Nice!\n. The github-link is no longer valid, it leads to a 404-page... Any updates on the API?\nThanks!\n. ",
    "AmaanC": "I'd be interested to know as well.\nAlso, if the app needs to do its own persistence, how would it do that? A native plugin?\n. Oh, also:\n$ cca checkenv\ncca v0.7.0\nAndroid Development: SDK configured properly.\n. Okay, I'm an idiot. The problem was me using sudo before cca build. I was doing that because I was getting EACCESS errors earlier, but I'm not sure what fixed them. Works now. Sorry about the confusion!\n. I'd be interested to know as well.\nAlso, if the app needs to do its own persistence, how would it do that? A native plugin?\n. Oh, also:\n$ cca checkenv\ncca v0.7.0\nAndroid Development: SDK configured properly.\n. Okay, I'm an idiot. The problem was me using sudo before cca build. I was doing that because I was getting EACCESS errors earlier, but I'm not sure what fixed them. Works now. Sorry about the confusion!\n. ",
    "imskull": "I got similar problem, cca 0.5 on android 4.4.2, chrome.identity.getAuthToken crashes app. rm & add identity plugins did not fix it.\n11-24 23:39:51.820: W/GooglePlayServicesUtil(31707): Google Play services out of date.  Requires 6171000 but found 6111032\nbut it works right on android 4.1.1.\nHow can I fix it?\n. Thank you. that should to be fixed instead of crashing.\n. more notes for someone wants to use default webview like me:\n1. \"manifest.mobile.json\" should be created at \"www/\" directory\n2. remember call \"cca plugin remove org.apache.cordova.engine.crosswalk\" if you have installed crosswalk plugin, otherwise it will still use crosswalk regardless \"webview\" is set or not.\n. @mmocny I called \"cca prepare\" from command line then used Eclipse to start app, if I don't uninstall crosswalk plugin, the \"webView\"(note: uppercase 'V') field is always \"...crosswalk...\" in AndroidManifiest.xml .\nMy OS: OSX 10.9.\n. Okey, I found the reason, by default, cca adds a \"android:windowSoftInputMode=\"adjustPan\"\" in AndroidManifest.xml, with \"adjustPan\" keyboard show/hide events will not fire.\nit's NO SOLUTION:\nhttps://github.com/phonegap/phonegap-plugins/issues/981\n. I double tested, crosswalk does not get removed automatically in my case. is it because I'm running cca v0.1.1?\nIt seems cca ignore my \"'webview': 'system'\" setting in www/manifiest.mobile.json since I checked \"res/config.xml\" there was a line:\n<preference name=\"webView\" value=\"org.apache.cordova.engine.crosswalk.XWalkCordovaWebView\" />\nHere is my manifiest.mobile.json file:\n{\n  \"packageId\": \"...\",\n  'webview': 'system',\n  \"oauth2\": {\n    ...\n  }\n}\nand my www folder is a soft link to my project somewhere.\n. I found the problem, compared with a brand new cca project, I found my two hook files cca-post-prepare.js,cca-pre-prepare.js were lost somehow, after I added it back, everything works right.\nit may caused by I was exploring which files should be added to git and which should keep local only from ton of files in cca project directory. Sorry for troubling your guys :)\n. After lots of work, eventually I have a workaround, while still do not know why. It works right on older vulcanize(0.4.3), the loading speed for unminified index.html is amazing fast. still very slow on the newest vulcanize(0.6.2). Looks like a crosswalk problem instead of cca.\n. problem disappears after updating to cca 0.5.0.\n. @kamrik thank you, I'm waiting new release.\n. I tested, putting\n\"minSdkVersion\": 16\nin my manifest.mobile.json works right, but it's kinda strange w/o an \"android\" prefix and why not in config.xml. anyhow it works.\n. I have a workaround now, copying my so files into crosswalk, add a few lines to before_script :\nrsync -r platforms/android/libs/armeabi-v7a/ platforms/android/org.apache.cordova.engine.crosswalk/xwalk_core_library/libs/armeabi-v7a/\nrsync -r platforms/android/libs/x86/ platforms/android/org.apache.cordova.engine.crosswalk/xwalk_core_library/libs/x86/\n. Got, thank you.\n. ok, half a year past, googled my own post :(\nupdate for cca 0.6.0:\nrsync -r platforms/android/libs/armeabi-v7a/ platforms/android/build/intermediates/exploded-aar/org.xwalk/xwalk_core_library_beta/11.40.277.7/jni/armeabi-v7a/\nrsync -r platforms/android/libs/x86/ platforms/android/build/intermediates/exploded-aar/org.xwalk/xwalk_core_library_beta/11.40.277.7/jni/x86\n. Well done! after I upgraded my project to 0.7.0, cca takes care of so files in android/libs/[platform]/, the post script is no need anymore. thank you guys.\n. In my case, even I set\n<preference name=\"Orientation\" value=\"default\"/>\nin config.xml, on my phone(android 4.1) it aways portrait. but on my pad(android 4.?) the rotation works. it happened after upgrading to cca 0.5.0. not a very problem for me though, just do not know why.\nenv: cca 0.5.0 with crosswalk.\n. FYI, I can rotate in my 7-Inch pad but cant rotate in my MI2 phone. cca 0.5.0. it used to work w/o any problem in cca 0.4.3.\n. Beware! Using adjustPan will cause app freeze on android 4.1 when soft keyboard appears, here is relative issue: https://crosswalk-project.org/jira/si/jira.issueviews:issue-html/XWALK-3652/XWALK-3652.html . I confirmed it on my MI2 Android 4.1, but on my Nexus9 5.1, it works fine.\n. @GustavoCostaW That works AMAZING~~~~! I just wanted to publish my app with this big/annoying/stupid issue today, you save me! thank you.\n. my used plugins:\n```\n\ncca plugin list                                                                       \ncca v0.7.0                                                                              \nandroid.support.v4 21.0.1 \"Android Support v4\"                                          \ncc.fovea.plugins.inapppurchase 3.4.1 \"InAppPurchase\"                                    \ncom.google.playservices 21.0.0 \"Google Play Services for Android\"                       \ncom.ionic.keyboard 1.0.4 \"Keyboard\"                                                     \nMY OWN PLUGIN HERE                                                                      \ncordova-plugin-background-app 2.0.0 \"Background App\"                                    \ncordova-plugin-blob-constructor-polyfill 1.0.2 \"Blob constructor shim\"                  \ncordova-plugin-chrome-apps-audiocapture 1.0.5 \"Chrome AudioCapture API\"                 \ncordova-plugin-chrome-apps-bootstrap 2.0.5 \"Chrome Apps Core\"                           \ncordova-plugin-chrome-apps-common 1.0.7 \"Chrome Apps Common Utils\"                      \ncordova-plugin-chrome-apps-filesystem 1.0.5 \"Chrome Apps FileSystem API\"                \ncordova-plugin-chrome-apps-i18n 2.0.1 \"Chrome Apps I18n API\"                            \ncordova-plugin-chrome-apps-identity 1.4.2 \"Chrome Apps Identity API\"                    \ncordova-plugin-chrome-apps-navigation 1.0.3 \"Chrome Apps Navigation\"                    \ncordova-plugin-chrome-apps-notifications 1.2.0 \"Chrome Apps Notifications API\"          \ncordova-plugin-chrome-apps-power 1.0.4 \"Chrome Apps Power API\"                          \ncordova-plugin-chrome-apps-runtime 1.1.1 \"Chrome App Runtime\"                           \ncordova-plugin-chrome-apps-storage 1.0.4 \"Chrome Apps Storage API\"                      \ncordova-plugin-crosswalk-webview 1.2.0 \"Crosswalk WebView Engine\"                       \ncordova-plugin-customevent-polyfill 1.0.5-dev \"CustomEvent constuctor shim\"             \ncordova-plugin-google-open-source-ios 1.7.1 \"Google Open Source iOS Framework Plugin\"   \ncordova-plugin-google-payments 2.1.1 \"Chrome Payments API\"                              \ncordova-plugin-google-plus-ios 1.7.2 \"Google Plus iOS Framework Plugin\"                 \ncordova-plugin-whitelist 1.0.0 \"Whitelist\"                                              \ncordova-plugin-xhr-blob-polyfill 1.0.3 \"XHR Blob Response Type Polyfill\"                \nde.appplant.cordova.plugin.local-notification 0.8.0dev \"LocalNotification\"              \nes.keensoft.fullscreenimage 1.0.0 \"Full Screen Image\"                                   \nio.gvox.plugin.phonecalltrap 0.1.0 \"PhoneCallTrap\"                                      \nnl.x-services.plugins.insomnia 4.0.1 \"Insomnia (prevent screen sleep)\"                  \nnl.x-services.plugins.socialsharing 4.3.2 \"SocialSharing\"                               \nnl.x-services.plugins.toast 2.0 \"Toast\"                                                 \norg.apache.cordova.camera 0.3.6 \"Camera\"                                                \norg.apache.cordova.device 0.2.12 \"Device\"                                               \norg.apache.cordova.file 1.3.3 \"File\"                                                    \norg.apache.cordova.file-transfer 0.5.0 \"File Transfer\"                                  \norg.apache.cordova.inappbrowser 0.6.0 \"InAppBrowser\"                                    \norg.apache.cordova.network-information 0.2.15 \"Network Information\"                     \norg.apache.cordova.splashscreen 1.0.0 \"Splashscreen\"                                    \norg.apache.cordova.statusbar 0.1.10 \"StatusBar\"                                         \norg.chromium.cca-hooks 0.0.0 \"undefined\"                                                \norg.chromium.filechooser 1.0.2 \"File Chooser\"                                           \n```\n. Okey, I fixed it:\n\ncca plugin remove com.google.playservices\ncca plugin remove android.support.v4\n. I fixed this one a couple hours ago: goto android SDK Manager and install:\nAndroid Support Repository\nAndroid Support Library\nGoogle Play Services\nGoogle Repository\nI dont remember which one fix the error exactly, it looks like \"xxx Repository\". \n. FYI, after that, eventually I got another error :(\n. I found this problem too, it seems caused by the plugin name changed to cordova-plugin-chrome-apps-bootstrap  but the style URL in the code still points org.chromium.bootstrap .\n. My android app has same problem, it only happens on crosswalk+android5.0, it is ok on system webview+android5.0 and crosswalk+android4.0, it seems crosswalk dev team don't want us use crosswalk on android5.0, there are instructions how to build APKs for different platforms: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Publish.md .\n. It's ok, I will look into how feasible porting my chrome app to windows 10, hope it's less pain with cordova instead of node-webkit.\n. Great news, just found node-webkit had supported Chrome App a month ago.\nhttps://groups.google.com/forum/#!msg/nwjs-general/zeC6SedUSFY/BlumrYJeVHYJ\n. I got similar problem, cca 0.5 on android 4.4.2, chrome.identity.getAuthToken crashes app. rm & add identity plugins did not fix it.\n11-24 23:39:51.820: W/GooglePlayServicesUtil(31707): Google Play services out of date.  Requires 6171000 but found 6111032\nbut it works right on android 4.1.1.\nHow can I fix it?\n. Thank you. that should to be fixed instead of crashing.\n. more notes for someone wants to use default webview like me:\n1. \"manifest.mobile.json\" should be created at \"www/\" directory\n2. remember call \"cca plugin remove org.apache.cordova.engine.crosswalk\" if you have installed crosswalk plugin, otherwise it will still use crosswalk regardless \"webview\" is set or not.\n. @mmocny I called \"cca prepare\" from command line then used Eclipse to start app, if I don't uninstall crosswalk plugin, the \"webView\"(note: uppercase 'V') field is always \"...crosswalk...\" in AndroidManifiest.xml .\nMy OS: OSX 10.9.\n. Okey, I found the reason, by default, cca adds a \"android:windowSoftInputMode=\"adjustPan\"\" in AndroidManifest.xml, with \"adjustPan\" keyboard show/hide events will not fire.\nit's NO SOLUTION:\nhttps://github.com/phonegap/phonegap-plugins/issues/981\n. I double tested, crosswalk does not get removed automatically in my case. is it because I'm running cca v0.1.1?\nIt seems cca ignore my \"'webview': 'system'\" setting in www/manifiest.mobile.json since I checked \"res/config.xml\" there was a line:\n<preference name=\"webView\" value=\"org.apache.cordova.engine.crosswalk.XWalkCordovaWebView\" />\nHere is my manifiest.mobile.json file:\n{\n  \"packageId\": \"...\",\n  'webview': 'system',\n  \"oauth2\": {\n    ...\n  }\n}\nand my www folder is a soft link to my project somewhere.\n. I found the problem, compared with a brand new cca project, I found my two hook files cca-post-prepare.js,cca-pre-prepare.js were lost somehow, after I added it back, everything works right.\nit may caused by I was exploring which files should be added to git and which should keep local only from ton of files in cca project directory. Sorry for troubling your guys :)\n. After lots of work, eventually I have a workaround, while still do not know why. It works right on older vulcanize(0.4.3), the loading speed for unminified index.html is amazing fast. still very slow on the newest vulcanize(0.6.2). Looks like a crosswalk problem instead of cca.\n. problem disappears after updating to cca 0.5.0.\n. @kamrik thank you, I'm waiting new release.\n. I tested, putting\n\"minSdkVersion\": 16\nin my manifest.mobile.json works right, but it's kinda strange w/o an \"android\" prefix and why not in config.xml. anyhow it works.\n. I have a workaround now, copying my so files into crosswalk, add a few lines to before_script :\nrsync -r platforms/android/libs/armeabi-v7a/ platforms/android/org.apache.cordova.engine.crosswalk/xwalk_core_library/libs/armeabi-v7a/\nrsync -r platforms/android/libs/x86/ platforms/android/org.apache.cordova.engine.crosswalk/xwalk_core_library/libs/x86/\n. Got, thank you.\n. ok, half a year past, googled my own post :(\nupdate for cca 0.6.0:\nrsync -r platforms/android/libs/armeabi-v7a/ platforms/android/build/intermediates/exploded-aar/org.xwalk/xwalk_core_library_beta/11.40.277.7/jni/armeabi-v7a/\nrsync -r platforms/android/libs/x86/ platforms/android/build/intermediates/exploded-aar/org.xwalk/xwalk_core_library_beta/11.40.277.7/jni/x86\n. Well done! after I upgraded my project to 0.7.0, cca takes care of so files in android/libs/[platform]/, the post script is no need anymore. thank you guys.\n. In my case, even I set\n<preference name=\"Orientation\" value=\"default\"/>\nin config.xml, on my phone(android 4.1) it aways portrait. but on my pad(android 4.?) the rotation works. it happened after upgrading to cca 0.5.0. not a very problem for me though, just do not know why.\nenv: cca 0.5.0 with crosswalk.\n. FYI, I can rotate in my 7-Inch pad but cant rotate in my MI2 phone. cca 0.5.0. it used to work w/o any problem in cca 0.4.3.\n. Beware! Using adjustPan will cause app freeze on android 4.1 when soft keyboard appears, here is relative issue: https://crosswalk-project.org/jira/si/jira.issueviews:issue-html/XWALK-3652/XWALK-3652.html . I confirmed it on my MI2 Android 4.1, but on my Nexus9 5.1, it works fine.\n. @GustavoCostaW That works AMAZING~~~~! I just wanted to publish my app with this big/annoying/stupid issue today, you save me! thank you.\n. my used plugins:\n```\n\ncca plugin list                                                                       \ncca v0.7.0                                                                              \nandroid.support.v4 21.0.1 \"Android Support v4\"                                          \ncc.fovea.plugins.inapppurchase 3.4.1 \"InAppPurchase\"                                    \ncom.google.playservices 21.0.0 \"Google Play Services for Android\"                       \ncom.ionic.keyboard 1.0.4 \"Keyboard\"                                                     \nMY OWN PLUGIN HERE                                                                      \ncordova-plugin-background-app 2.0.0 \"Background App\"                                    \ncordova-plugin-blob-constructor-polyfill 1.0.2 \"Blob constructor shim\"                  \ncordova-plugin-chrome-apps-audiocapture 1.0.5 \"Chrome AudioCapture API\"                 \ncordova-plugin-chrome-apps-bootstrap 2.0.5 \"Chrome Apps Core\"                           \ncordova-plugin-chrome-apps-common 1.0.7 \"Chrome Apps Common Utils\"                      \ncordova-plugin-chrome-apps-filesystem 1.0.5 \"Chrome Apps FileSystem API\"                \ncordova-plugin-chrome-apps-i18n 2.0.1 \"Chrome Apps I18n API\"                            \ncordova-plugin-chrome-apps-identity 1.4.2 \"Chrome Apps Identity API\"                    \ncordova-plugin-chrome-apps-navigation 1.0.3 \"Chrome Apps Navigation\"                    \ncordova-plugin-chrome-apps-notifications 1.2.0 \"Chrome Apps Notifications API\"          \ncordova-plugin-chrome-apps-power 1.0.4 \"Chrome Apps Power API\"                          \ncordova-plugin-chrome-apps-runtime 1.1.1 \"Chrome App Runtime\"                           \ncordova-plugin-chrome-apps-storage 1.0.4 \"Chrome Apps Storage API\"                      \ncordova-plugin-crosswalk-webview 1.2.0 \"Crosswalk WebView Engine\"                       \ncordova-plugin-customevent-polyfill 1.0.5-dev \"CustomEvent constuctor shim\"             \ncordova-plugin-google-open-source-ios 1.7.1 \"Google Open Source iOS Framework Plugin\"   \ncordova-plugin-google-payments 2.1.1 \"Chrome Payments API\"                              \ncordova-plugin-google-plus-ios 1.7.2 \"Google Plus iOS Framework Plugin\"                 \ncordova-plugin-whitelist 1.0.0 \"Whitelist\"                                              \ncordova-plugin-xhr-blob-polyfill 1.0.3 \"XHR Blob Response Type Polyfill\"                \nde.appplant.cordova.plugin.local-notification 0.8.0dev \"LocalNotification\"              \nes.keensoft.fullscreenimage 1.0.0 \"Full Screen Image\"                                   \nio.gvox.plugin.phonecalltrap 0.1.0 \"PhoneCallTrap\"                                      \nnl.x-services.plugins.insomnia 4.0.1 \"Insomnia (prevent screen sleep)\"                  \nnl.x-services.plugins.socialsharing 4.3.2 \"SocialSharing\"                               \nnl.x-services.plugins.toast 2.0 \"Toast\"                                                 \norg.apache.cordova.camera 0.3.6 \"Camera\"                                                \norg.apache.cordova.device 0.2.12 \"Device\"                                               \norg.apache.cordova.file 1.3.3 \"File\"                                                    \norg.apache.cordova.file-transfer 0.5.0 \"File Transfer\"                                  \norg.apache.cordova.inappbrowser 0.6.0 \"InAppBrowser\"                                    \norg.apache.cordova.network-information 0.2.15 \"Network Information\"                     \norg.apache.cordova.splashscreen 1.0.0 \"Splashscreen\"                                    \norg.apache.cordova.statusbar 0.1.10 \"StatusBar\"                                         \norg.chromium.cca-hooks 0.0.0 \"undefined\"                                                \norg.chromium.filechooser 1.0.2 \"File Chooser\"                                           \n```\n. Okey, I fixed it:\n\ncca plugin remove com.google.playservices\ncca plugin remove android.support.v4\n. I fixed this one a couple hours ago: goto android SDK Manager and install:\nAndroid Support Repository\nAndroid Support Library\nGoogle Play Services\nGoogle Repository\nI dont remember which one fix the error exactly, it looks like \"xxx Repository\". \n. FYI, after that, eventually I got another error :(\n. I found this problem too, it seems caused by the plugin name changed to cordova-plugin-chrome-apps-bootstrap  but the style URL in the code still points org.chromium.bootstrap .\n. My android app has same problem, it only happens on crosswalk+android5.0, it is ok on system webview+android5.0 and crosswalk+android4.0, it seems crosswalk dev team don't want us use crosswalk on android5.0, there are instructions how to build APKs for different platforms: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Publish.md .\n. It's ok, I will look into how feasible porting my chrome app to windows 10, hope it's less pain with cordova instead of node-webkit.\n. Great news, just found node-webkit had supported Chrome App a month ago.\nhttps://groups.google.com/forum/#!msg/nwjs-general/zeC6SedUSFY/BlumrYJeVHYJ\n. ",
    "stopsatgreen": "Apologies, I was using an out-of-date version of CCA. Have updated and don\u2019t get this problem any longer. Still can\u2019t get notifications to work, but that\u2019s a separate issue.\n. @mmocny Thanks. Just testing it out at the moment, no firm intention to build anything yet. Will dig into the notifications, see if I can get that working - they are fine on my Chrome App, but not on cca.\n. Hmm\u2026 I\u2019m running cca 0.1.0. I upgraded from 0.0.3 after I\u2019d initiated the project.\n. Apologies, I was using an out-of-date version of CCA. Have updated and don\u2019t get this problem any longer. Still can\u2019t get notifications to work, but that\u2019s a separate issue.\n. @mmocny Thanks. Just testing it out at the moment, no firm intention to build anything yet. Will dig into the notifications, see if I can get that working - they are fine on my Chrome App, but not on cca.\n. Hmm\u2026 I\u2019m running cca 0.1.0. I upgraded from 0.0.3 after I\u2019d initiated the project.\n. ",
    "jpchase": "We've identified the likely cause of this behaviour is that concurrent writes to storage are not handled robustly.  That is, if multiple writes are issued closed together, they can conflict such that changes are overwritten (i.e. last write wins).  For writes, the chrome.storage implementation reads in the existing storage first, so the problem is really stale reads, as opposed to write calls being processed out of order.\nA fix is currently under review (see pull request #298).\n. Fix in pull request #298 has been merged into master.\n. Turns out this isn't that simple.\nThere is the surface problem, that the mobile implementation of chrome.notifications.update is too strict in the validation of the options.  I've got a working version that relaxes the validation to match the desktop behaviour (including all the callbacks/errors for invalid options).\nThe more complicated problem is that the native Android implementation assumes that updates will provide all of the required options.  Investigation suggests that is feasible to implement the expected update semantics (where only the changed values are required).\n. Fixed.  The validation is now consistent with the behaviour for desktop apps, including the original problem in this issue (i.e. making 'type' optional on updates).\n. Those test failures sound like the expected behaviour without the patch applied. The patch only includes the source fix in the .java file.  If there are changes required to package it up, I can address them.\n. We have a prototype implementation for supporting show/restore/hide on android.  The show() isn't quite working correctly.  I expect we should be able to complete within a week (i.e by Oct 24).\n. The Apple error handling guide https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ErrorHandlingCocoa/CreateCustomizeNSError/CreateCustomizeNSError.html#//apple_ref/doc/uid/TP40001806-CH204-BAJIIGCC states that success/failure of a command should be determined by checking the return value (see \"Listing 2-1\", and following note).  Only when failure is indicated should the error object be used (i.e. no guarantees that the error object is always populated).\nThe above approach makes sense to me.  Are there other guideline/best practice documents that carry more weight than the Apple docs?  The Google style guide of Objective-C doesn't mention much, other than avoid throwing exceptions.\n. Commits were rebased into one commit, and applied directly to master.  Hence, the unmerged commits on this branch.\n. Update prompt has been implemented.\n. Upon investigation, it seems intentional that the app is brought to the foreground when a notification is clicked, or a button in the notification is clicked.  That is, there is explicit logic to put/keep the app in the background when a notification is closed, but that does not apply when a notification is clicked.\nIn testing with a desktop Chrome app, the app is not shown/given focus when clicking on a notification (or a button within).  If the app window is minimized or hidden, it will receive the event for the notification/button click, but the window state is not changed.\nThus, it would seem that the current behaviour on mobile should be changed, as originally described.  The question is what to do about existing apps that might be relying on the \"incorrect\" behaviour.  Do we just handle this via education/documentation?  For example, release notes indicate that issues 323 and 352 have been implemented, change your notification callbacks to use AppWindow.show()/restore() as needed.\n. We don't have any concrete changes planned to address this, so closing for now.\n. Closing this issue based on the previous answer.  Feel free to open if there still questions about the sample apps.\n. Closing this issue, based on lack of further information.  Feel free to re-open if there are further details.\n. We'll close/backlog this issue for now, on the assumption you've found a solution/workaround. Feel free to re-open if assistance is still needed.\n. Based on the error reported, it seems that the server receiving the request needs to be configured to allow Cross Origin requests.  If you're not familiar with CORS, see http://www.w3.org/wiki/CORS_Enabled.\nIf you've verified the appropriate server configuration, I would suggest using a simple XHR to test connectivity.  I created a basic example that will send a JSON request to the jsfiddle echo service.\nI created a new app, using the latest version of cca (0.6.0-rc1).  I included the code below, and was able to successfully execute an XHR.  Maybe copy this example into your app and see if it works?  If it works, that suggests the problem is specific to the XHR call and/or receiving server.  If it doesn't work, it might provide hints to the problem with the app configuration.\n```\nfunction execAPI(requestContents, callback) {\n  var xhr = new XMLHttpRequest();\n  var url = 'http://jsfiddle.net/echo/json/';\n  xhr.open(\"POST\", url, true);\n  xhr.responseType = 'json';\n// completion handler\n  xhr.onload = function() {\n    console.log('Post to ' + url + ' worked: ' + xhr.status + ', ' + xhr.statusText);\n    console.log('Post results: ', (typeof xhr.response) + ' ', xhr.response);\n    callback(xhr.response);\n  };\n// Post the request contents in json format\n  //  - The json= format is specific to getting jsfiddle echo to work\n  xhr.send('json=' + encodeURIComponent(JSON.stringify(requestContents)));\n}\nexecAPI(\n  {myTextProperty: 'some text'},\n  function(results) {\n    console.log('Results: ' + (results ? JSON.stringify(results) : '<null>'));\n});\n\n```\n. We've just published a release candidate that includes cordova-android 4.0 (and CB-5059 referenced earlier in this issue). Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. It seems that using the latest version of the cordova splashscreen plugin will address everyone's needs.  There was a cordova plugin release in February, so the updated plugin should be widely available.\n. In the long term, the recommendation is to use the system web view, instead of Crosswalk, on Android L+.  See our docs for details: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Crosswalk.md.\nAs result, we're not investigating or supporting Crosswalk extensions at this time.\n. If interested in our efforts on improving background functionality, see #322.  Otherwise, we'll leave it to you to pursue writing a custom Cordova plugin.\n. I am unable to reproduce this with the latest cca (0.6.0-rc1).  I created a new app, add the \"notifications\" permission only, then ran upgrade.  All the required/dependent plugins were installed without issue.\n. I'm not able to reproduce this with the latest version of cca (0.6.0 rc).\n. This is not a bug chrome.notifications plugin, per se.  Currently, the plugin does have an undocumented dependency on the existence of the manifest.json (see #487).  In turn, this dependency uncovered a bug in loading the manifest.json (see #486).\nThe short-term workaround is to provide a manifest.json file in the app, or explicitly set the manifest at runtime, using the chrome.runtime plugin and calling setManifest().\nDepending on the resolution of the above issues, the README may need to be updated for the chrome.notifications to record the dependency, and any setup required.\n. @blukis \nWe've identified the cause of the error.  The error is not directly caused by the notifications plugin.  Rather it's a problem in the underlying runtime plugin (which could potentially be observed in other plugins).\nI've logged issue(s) for a long-term solution to the underlying problem.\nIn the short-term, the solution is provide the manifest.json contents in your Cordova/Phonegap app.  I'd recommend using the chrome.runtime.setManifest() function at runtime.\n. Issues #486 and #487 have now been fixed.  As a result, the workaround of calling chrome.runtime.setManifest() is no longer required.\nNotifications should be created successfully even without the above call, and without a manifest.json file.\n. In the chrome runtime plugin, there is a getManifest function, which attempts to handle the case where the manifest.json is not found.  The function attempts to load the file using an XHR, but for some reason is falling into the success/found path, even though the file does not exist.\n. cca is now using Crosswalk 11 (Chromium 40), and the crash problem (XWALK-3344) has been resolved.\n@clelland anything left to do on this issue?\n. The replaceState method is working for chrome-extension urls in a cca app.\n. We've updated to Crosswalk 11, which addresses the problem.  This will be included in the next release of cca (coming soon!).\nUntil that release, see XWALK-3217 for possible workarounds.\n. Related question on stack overflow:\nhttp://stackoverflow.com/questions/28551516/auto-rotate-in-chrome-mobile-apps/28555036#28555036\n. I've verified the problem on Android, with the latest cca.  When the app is started (and not previously running), the screen will not rotate.  This applies if the app is started from the home screen, recents, as well as cca run.  If the app is running (i.e. paused), and then resumed, the screen will rotate as expected.\nAs in the stack overflow question (see earlier comment), the problem is related to the use of the \"Translucent\" theme.  Explicitly setting a non-translucent them (e.g. \"Black-NoTitleBar\") will correct the problem, and the screen will rotate as expected.  We don't have a clear explanation or reason for this behaviour.  For example, we haven't identified if this expected vs a bug in Android.\nThere is another work-around that allows the translucent theme to be used.  In the AndroidManifest.xml, the activity can be configured to force screen rotation to be detected/respected.  This is done by adding the attribute android:screenOrientation=\"sensor\" to the affected <activity> element(s).  Unfortunately, if this change is made directly to platforms/android/AndroidManifest.xml, it will be over-written when the app is prepared.  In the short-term, a post-prepare hook is required to update the AndroidManifest.xml.  See below for a sample script for the post-prepare hook.\nPlease try one of two workarounds to see if that addresses the problem.  We are investigating a fix, so that a workaround is not needed.\nSample post-prepare script (put in an executable file under .../hooks/after_prepare):\n```\n!/usr/bin/env node\nvar fs = require('fs');\nvar path = require('path');\n// no need to configure below\nvar rootdir = process.argv[2];\nvar srcfile = path.join(rootdir, 'myAndroidManifest.xml');\nvar destfile = path.join(rootdir, 'platforms/android/AndroidManifest.xml');\nconsole.log(\"copying \"+srcfile+\" to \"+destfile);\nvar destdir = path.dirname(destfile);\nif (fs.existsSync(srcfile) && fs.existsSync(destdir)) {\n    fs.createReadStream(srcfile).pipe(\n       fs.createWriteStream(destfile));\n}\n```\n. We just published a release candidate that includes cordova-ios 3.8.0.  According to the forum thread, it seems that an upgrade could address the scaling issue.  Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\nWe'll assume that fixes the scaling, but feel free to re-open this issue if there's still a problem.\n. @agrieve is this issue also addressed by commit 81c555e73fc5f96bb1486149c4e8ab5f0745a75d?\n. Given that we're not seeing this problem, the assumption is the solution is updating your version of cordova-android, as agrieve suggested.  As result, this issue will be closed.\nIf that doesn't resolve your error, please re-open the issue with additional details (including your cordova-android version).\n. I'm assuming you're referring to adding support to the google.payments plugin.\nThe generic answer is we're always happy to receive pull requests to fix/enhance the functionality of Chrome Apps for Mobile :-).\nMore specifically, we haven't done much investigation into recurring/subscription purchases.  So, this issue could be straight-forward to implement, and thus a good place to start.  On the other hand, it could be infeasible or difficult to implement.  It would also depend on your familiarity with mobile payments in general.\nIf you're still looking to get your feet wet with Chrome Apps for Mobile, I'd guess there are easier places to start.  You could review other issues in this repository, or look at our API Status for gaps in functionality.\n. As in #451, we really haven't done much with Polymer.Dart.  For Polymer in general, we have been able to get it to work on iOS.  However, we haven't tested on iOS recently, and it's very dependent on the frequent changes in Polymer.\nI'd suggest we'd need a lot more details before we'd be able to help, including the code, build instructions, test results on Android, .etc.\nWe'll close/backlog this issue for now, on the assumption you've found a solution/workaround.  Feel free to re-open if assistance is still needed.\n. The Chrome Apps for Mobile framework has been changed to check for the InAppBrowser plugin, and undo the clobber for window.open.  This change does not copy/preserve the InAppBrowser implementation anywhere.  Instead, CB-8444 has been addressed to provide a uniquely-named API for InAppBrowser as cordova.InAppBrowser.open.  See the plugin docs for more details:\nhttps://github.com/apache/cordova-plugin-inappbrowser\nThe fix for CB-8444 is not yet released.  Until then, the workaround is to explicitly require the InAppBrowser.  See the chrome.identity plugin as an example.\n. This is a bug in Cordova.  See CB-8278.\nIf/when that bug is fixed, the platform add should work in cca as well.\n. We've been working on improving the background functionality (see #322).  That work includes addressing the behaviour of background events when the app is not running.\nThe effort was delayed for a while, but we're back in active development.  The goal is to complete the work in the next few weeks.\n. This problem has been fixed, and is available in the latest cca release candidate (just out today).\n. I did a quick test, and I'm guessing your app needs to request the Android \"vibrate\" permission.\nThere are a few options:\n- Manually request the permission, by editing the AndroidManifest.xml, under the platforms/android directory.\n- Write a plugin, whose only job is to provide the configuration to add the permission to the manifest\n- Use the existing cordova plugin that already implements vibration.  Just plugin add org.apache.cordova.vibration.  For details, see https://github.com/apache/cordova-plugin-vibration\nI would recommend the last option, as it's supported and lets you use the same navigator.vibrate API.\n. Currently, it isn't possible to define custom icons for notification buttons.  There are a couple reasons:\n- The Android API for notification buttons requires icons to be a resource in the apk (i.e. provided under res/drawable)\n- Other than app icons, Cordova doesn't provide any way to package assets as Android resources\nWe would need to extend Cordova to support Android resources, and the chrome.notifications plugin to map asset urls to Android resources.\n. We've identified the likely cause of this behaviour is that concurrent writes to storage are not handled robustly.  That is, if multiple writes are issued closed together, they can conflict such that changes are overwritten (i.e. last write wins).  For writes, the chrome.storage implementation reads in the existing storage first, so the problem is really stale reads, as opposed to write calls being processed out of order.\nA fix is currently under review (see pull request #298).\n. Fix in pull request #298 has been merged into master.\n. Turns out this isn't that simple.\nThere is the surface problem, that the mobile implementation of chrome.notifications.update is too strict in the validation of the options.  I've got a working version that relaxes the validation to match the desktop behaviour (including all the callbacks/errors for invalid options).\nThe more complicated problem is that the native Android implementation assumes that updates will provide all of the required options.  Investigation suggests that is feasible to implement the expected update semantics (where only the changed values are required).\n. Fixed.  The validation is now consistent with the behaviour for desktop apps, including the original problem in this issue (i.e. making 'type' optional on updates).\n. Those test failures sound like the expected behaviour without the patch applied. The patch only includes the source fix in the .java file.  If there are changes required to package it up, I can address them.\n. We have a prototype implementation for supporting show/restore/hide on android.  The show() isn't quite working correctly.  I expect we should be able to complete within a week (i.e by Oct 24).\n. The Apple error handling guide https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ErrorHandlingCocoa/CreateCustomizeNSError/CreateCustomizeNSError.html#//apple_ref/doc/uid/TP40001806-CH204-BAJIIGCC states that success/failure of a command should be determined by checking the return value (see \"Listing 2-1\", and following note).  Only when failure is indicated should the error object be used (i.e. no guarantees that the error object is always populated).\nThe above approach makes sense to me.  Are there other guideline/best practice documents that carry more weight than the Apple docs?  The Google style guide of Objective-C doesn't mention much, other than avoid throwing exceptions.\n. Commits were rebased into one commit, and applied directly to master.  Hence, the unmerged commits on this branch.\n. Update prompt has been implemented.\n. Upon investigation, it seems intentional that the app is brought to the foreground when a notification is clicked, or a button in the notification is clicked.  That is, there is explicit logic to put/keep the app in the background when a notification is closed, but that does not apply when a notification is clicked.\nIn testing with a desktop Chrome app, the app is not shown/given focus when clicking on a notification (or a button within).  If the app window is minimized or hidden, it will receive the event for the notification/button click, but the window state is not changed.\nThus, it would seem that the current behaviour on mobile should be changed, as originally described.  The question is what to do about existing apps that might be relying on the \"incorrect\" behaviour.  Do we just handle this via education/documentation?  For example, release notes indicate that issues 323 and 352 have been implemented, change your notification callbacks to use AppWindow.show()/restore() as needed.\n. We don't have any concrete changes planned to address this, so closing for now.\n. Closing this issue based on the previous answer.  Feel free to open if there still questions about the sample apps.\n. Closing this issue, based on lack of further information.  Feel free to re-open if there are further details.\n. We'll close/backlog this issue for now, on the assumption you've found a solution/workaround. Feel free to re-open if assistance is still needed.\n. Based on the error reported, it seems that the server receiving the request needs to be configured to allow Cross Origin requests.  If you're not familiar with CORS, see http://www.w3.org/wiki/CORS_Enabled.\nIf you've verified the appropriate server configuration, I would suggest using a simple XHR to test connectivity.  I created a basic example that will send a JSON request to the jsfiddle echo service.\nI created a new app, using the latest version of cca (0.6.0-rc1).  I included the code below, and was able to successfully execute an XHR.  Maybe copy this example into your app and see if it works?  If it works, that suggests the problem is specific to the XHR call and/or receiving server.  If it doesn't work, it might provide hints to the problem with the app configuration.\n```\nfunction execAPI(requestContents, callback) {\n  var xhr = new XMLHttpRequest();\n  var url = 'http://jsfiddle.net/echo/json/';\n  xhr.open(\"POST\", url, true);\n  xhr.responseType = 'json';\n// completion handler\n  xhr.onload = function() {\n    console.log('Post to ' + url + ' worked: ' + xhr.status + ', ' + xhr.statusText);\n    console.log('Post results: ', (typeof xhr.response) + ' ', xhr.response);\n    callback(xhr.response);\n  };\n// Post the request contents in json format\n  //  - The json= format is specific to getting jsfiddle echo to work\n  xhr.send('json=' + encodeURIComponent(JSON.stringify(requestContents)));\n}\nexecAPI(\n  {myTextProperty: 'some text'},\n  function(results) {\n    console.log('Results: ' + (results ? JSON.stringify(results) : '<null>'));\n});\n\n```\n. We've just published a release candidate that includes cordova-android 4.0 (and CB-5059 referenced earlier in this issue). Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\n. It seems that using the latest version of the cordova splashscreen plugin will address everyone's needs.  There was a cordova plugin release in February, so the updated plugin should be widely available.\n. In the long term, the recommendation is to use the system web view, instead of Crosswalk, on Android L+.  See our docs for details: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Crosswalk.md.\nAs result, we're not investigating or supporting Crosswalk extensions at this time.\n. If interested in our efforts on improving background functionality, see #322.  Otherwise, we'll leave it to you to pursue writing a custom Cordova plugin.\n. I am unable to reproduce this with the latest cca (0.6.0-rc1).  I created a new app, add the \"notifications\" permission only, then ran upgrade.  All the required/dependent plugins were installed without issue.\n. I'm not able to reproduce this with the latest version of cca (0.6.0 rc).\n. This is not a bug chrome.notifications plugin, per se.  Currently, the plugin does have an undocumented dependency on the existence of the manifest.json (see #487).  In turn, this dependency uncovered a bug in loading the manifest.json (see #486).\nThe short-term workaround is to provide a manifest.json file in the app, or explicitly set the manifest at runtime, using the chrome.runtime plugin and calling setManifest().\nDepending on the resolution of the above issues, the README may need to be updated for the chrome.notifications to record the dependency, and any setup required.\n. @blukis \nWe've identified the cause of the error.  The error is not directly caused by the notifications plugin.  Rather it's a problem in the underlying runtime plugin (which could potentially be observed in other plugins).\nI've logged issue(s) for a long-term solution to the underlying problem.\nIn the short-term, the solution is provide the manifest.json contents in your Cordova/Phonegap app.  I'd recommend using the chrome.runtime.setManifest() function at runtime.\n. Issues #486 and #487 have now been fixed.  As a result, the workaround of calling chrome.runtime.setManifest() is no longer required.\nNotifications should be created successfully even without the above call, and without a manifest.json file.\n. In the chrome runtime plugin, there is a getManifest function, which attempts to handle the case where the manifest.json is not found.  The function attempts to load the file using an XHR, but for some reason is falling into the success/found path, even though the file does not exist.\n. cca is now using Crosswalk 11 (Chromium 40), and the crash problem (XWALK-3344) has been resolved.\n@clelland anything left to do on this issue?\n. The replaceState method is working for chrome-extension urls in a cca app.\n. We've updated to Crosswalk 11, which addresses the problem.  This will be included in the next release of cca (coming soon!).\nUntil that release, see XWALK-3217 for possible workarounds.\n. Related question on stack overflow:\nhttp://stackoverflow.com/questions/28551516/auto-rotate-in-chrome-mobile-apps/28555036#28555036\n. I've verified the problem on Android, with the latest cca.  When the app is started (and not previously running), the screen will not rotate.  This applies if the app is started from the home screen, recents, as well as cca run.  If the app is running (i.e. paused), and then resumed, the screen will rotate as expected.\nAs in the stack overflow question (see earlier comment), the problem is related to the use of the \"Translucent\" theme.  Explicitly setting a non-translucent them (e.g. \"Black-NoTitleBar\") will correct the problem, and the screen will rotate as expected.  We don't have a clear explanation or reason for this behaviour.  For example, we haven't identified if this expected vs a bug in Android.\nThere is another work-around that allows the translucent theme to be used.  In the AndroidManifest.xml, the activity can be configured to force screen rotation to be detected/respected.  This is done by adding the attribute android:screenOrientation=\"sensor\" to the affected <activity> element(s).  Unfortunately, if this change is made directly to platforms/android/AndroidManifest.xml, it will be over-written when the app is prepared.  In the short-term, a post-prepare hook is required to update the AndroidManifest.xml.  See below for a sample script for the post-prepare hook.\nPlease try one of two workarounds to see if that addresses the problem.  We are investigating a fix, so that a workaround is not needed.\nSample post-prepare script (put in an executable file under .../hooks/after_prepare):\n```\n!/usr/bin/env node\nvar fs = require('fs');\nvar path = require('path');\n// no need to configure below\nvar rootdir = process.argv[2];\nvar srcfile = path.join(rootdir, 'myAndroidManifest.xml');\nvar destfile = path.join(rootdir, 'platforms/android/AndroidManifest.xml');\nconsole.log(\"copying \"+srcfile+\" to \"+destfile);\nvar destdir = path.dirname(destfile);\nif (fs.existsSync(srcfile) && fs.existsSync(destdir)) {\n    fs.createReadStream(srcfile).pipe(\n       fs.createWriteStream(destfile));\n}\n```\n. We just published a release candidate that includes cordova-ios 3.8.0.  According to the forum thread, it seems that an upgrade could address the scaling issue.  Would be great if you wanted to try it out!\nnpm install -g cca@0.6.0-rc1\nWe'll assume that fixes the scaling, but feel free to re-open this issue if there's still a problem.\n. @agrieve is this issue also addressed by commit 81c555e73fc5f96bb1486149c4e8ab5f0745a75d?\n. Given that we're not seeing this problem, the assumption is the solution is updating your version of cordova-android, as agrieve suggested.  As result, this issue will be closed.\nIf that doesn't resolve your error, please re-open the issue with additional details (including your cordova-android version).\n. I'm assuming you're referring to adding support to the google.payments plugin.\nThe generic answer is we're always happy to receive pull requests to fix/enhance the functionality of Chrome Apps for Mobile :-).\nMore specifically, we haven't done much investigation into recurring/subscription purchases.  So, this issue could be straight-forward to implement, and thus a good place to start.  On the other hand, it could be infeasible or difficult to implement.  It would also depend on your familiarity with mobile payments in general.\nIf you're still looking to get your feet wet with Chrome Apps for Mobile, I'd guess there are easier places to start.  You could review other issues in this repository, or look at our API Status for gaps in functionality.\n. As in #451, we really haven't done much with Polymer.Dart.  For Polymer in general, we have been able to get it to work on iOS.  However, we haven't tested on iOS recently, and it's very dependent on the frequent changes in Polymer.\nI'd suggest we'd need a lot more details before we'd be able to help, including the code, build instructions, test results on Android, .etc.\nWe'll close/backlog this issue for now, on the assumption you've found a solution/workaround.  Feel free to re-open if assistance is still needed.\n. The Chrome Apps for Mobile framework has been changed to check for the InAppBrowser plugin, and undo the clobber for window.open.  This change does not copy/preserve the InAppBrowser implementation anywhere.  Instead, CB-8444 has been addressed to provide a uniquely-named API for InAppBrowser as cordova.InAppBrowser.open.  See the plugin docs for more details:\nhttps://github.com/apache/cordova-plugin-inappbrowser\nThe fix for CB-8444 is not yet released.  Until then, the workaround is to explicitly require the InAppBrowser.  See the chrome.identity plugin as an example.\n. This is a bug in Cordova.  See CB-8278.\nIf/when that bug is fixed, the platform add should work in cca as well.\n. We've been working on improving the background functionality (see #322).  That work includes addressing the behaviour of background events when the app is not running.\nThe effort was delayed for a while, but we're back in active development.  The goal is to complete the work in the next few weeks.\n. This problem has been fixed, and is available in the latest cca release candidate (just out today).\n. I did a quick test, and I'm guessing your app needs to request the Android \"vibrate\" permission.\nThere are a few options:\n- Manually request the permission, by editing the AndroidManifest.xml, under the platforms/android directory.\n- Write a plugin, whose only job is to provide the configuration to add the permission to the manifest\n- Use the existing cordova plugin that already implements vibration.  Just plugin add org.apache.cordova.vibration.  For details, see https://github.com/apache/cordova-plugin-vibration\nI would recommend the last option, as it's supported and lets you use the same navigator.vibrate API.\n. Currently, it isn't possible to define custom icons for notification buttons.  There are a couple reasons:\n- The Android API for notification buttons requires icons to be a resource in the apk (i.e. provided under res/drawable)\n- Other than app icons, Cordova doesn't provide any way to package assets as Android resources\nWe would need to extend Cordova to support Android resources, and the chrome.notifications plugin to map asset urls to Android resources.\n. ",
    "schickling": "Same here\n. Same here\n. ",
    "g105b": "Sounds very interesting indeed. Any idea of release date for the new webview?\n. This is amazing progress, but am I right in saying that you can't use any\nof the crosswalk niceties in ios?\nOn 19 Jul 2014 13:43, \"Michal Mocny\" notifications@github.com wrote:\n\nThe crosswalk webview has landed as of 0.1.1 (see our Release Notes\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/RELEASENOTES.md\n)!\nWe've tested it previously, and its exciting to see this (and other new\nplatform features) working. Please upgrade cca and upgrade your\napplication, then let us know how it went!\n(Btw, latest cca supports cca upgrade in-place so you don't need to\nre-create your project any more.)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49508540\n.\n. I'm also running into this issue.\n\nmanifest.json:\njson\n{\n  \"manifest_version\": 2,\n  \"name\": \"AppName\",\n  \"version\": \"0.1\",\n  \"icons\": {\n    \"128\": \"icon-128.png\"\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\"\n  ],\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"app-runtime.js\"]\n    }\n  },\n  \"minimum_chrome_version\": \"28\"\n}\n\nHow do I resolve this?\n(edit: Added output to comment to help Google index this issue)\n```\ncca prepare\ncca v0.3.0\nUpdating plugins based on manifest.json\nPermission not recognized by cca: captureVideo (ignoring)\nPermission not recognized by cca: captureAudio (ignoring)\n``\n. Thanks @beaufortfrancois , will test locally with your patch in the mean time. Looks like this repo's development is quite speedy so hopefully won't be long to make it into the live branch\n. Just performednpm update -g cca, this issue still exists. Any idea when it will be live without needing the patch?\n. After performingnpm update -g cca, I didn't see any prompt to upgrade the project.audioCaptureis present in themanifest.json, but noaudioCapturelisted in thecca plugin ls` output. \nIn cca --help there is no mention of upgrading, but I just tried cca upgrade ... that seems to have done an upgrade, but the original issue of \"Permission not recognized by cca: videoCapture (ignoring)\" still prevails.\n. $ cca --version\n0.3.0\n```\n$ cca plugins ls\ncca v0.3.0\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.1.1-dev \"File\"\norg.apache.cordova.inappbrowser 0.4.1-dev \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.9-dev \"Network Information\"\norg.apache.cordova.statusbar 0.1.6-dev \"StatusBar\"\norg.chromium.bootstrap 1.0.2 \"Chrome Apps Core\"\norg.chromium.common 1.0.1 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.1 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.1 \"Chrome Apps Navigation\"\norg.chromium.polyfill.CustomEvent 1.0.0 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.blob_constructor 1.0.0 \"XHR blob returnType shim\"\norg.chromium.polyfill.xhr_features 1.0.0 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.1 \"Chrome App Runtime\"\norg.chromium.storage 1.0.1 \"Chrome Apps Storage API\"\n```\n$ ls -la\ntotal 32\ndrwxrwxr-x  6 g105b g105b 4096 Aug 14 15:46 .\ndrwxrwxr-x  9 g105b g105b 4096 Aug 14 08:44 ..\n-rw-rw-r--  1 g105b g105b  475 Aug 14 08:44 config.xml\ndrwxrwxr-x  2 g105b g105b 4096 Aug 14 08:44 .cordova\n-rw-r--r--  1 g105b g105b  367 Aug 14 08:44 .gitignore\ndrwxrwxr-x  4 g105b g105b 4096 Aug 14 08:44 hooks\ndrwxrwxr-x  3 g105b g105b 4096 Aug 14 15:46 platforms\ndrwxrwxr-x 18 g105b g105b 4096 Aug 14 15:49 plugins\nlrwxrwxrwx  1 g105b g105b   34 Aug 14 08:44 www -> /home/g105b/Webroot/brisky/cca\nThe www directory is a symlink, as I used --link-to when creating the project.\n. I'll gladly do these steps for you tomorrow, have to sign off now. Thanks for all your help today.\n. It's a couple of weeks since this issue was re-opened, and I can't reproduce it. I'm happy for it to be closed.\n. Very fast work guys. Can I ask, do I simply update cca with npm to get this fix now?\n. Thanks for the advice, I see the new videoCapture permission is included now, but unfortunately I still can't seem to access the video stream on the CCA Android app... I believe it may be the way I'm setting the <video> src. \n``` javascript\nvar video = document.querySelector(\"video\");\nfunction streamVideo(stream) {\n    video.src = window.URL.createObjectURL(stream);\n    video.play();\n}\nnavigator.getUserMedia = ( navigator.getUserMedia ||\n                            navigator.webkitGetUserMedia ||\n                            navigator.mozGetUserMedia ||\n                            navigator.msGetUserMedia);\nnavigator.getUserMedia({\n    video: true,\n    audio: false,\n}, streamVideo, function() {\n    console.log(\"ERROR!\")\n});\n```\nInspecting this code as it is run, the video does get it's blob src set, but all I see is a black screen. Could you offer any advice on this?\n. My manifest: \njson\n{\n  \"manifest_version\": 2,\n  \"name\": \"Brisky\",\n  \"version\": \"0.1\",\n  \"icons\": {\n    \"128\": \"brisky-icon-128.png\"\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\"\n  ],\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"app-runtime.js\"]\n    }\n  },\n  \"minimum_chrome_version\": \"28\"\n}\n. Inspecting the successCallback function, the stream MediaStream object has a function called getVideoTracks(), which when called returns an empty array.\n. I did see that error before I used npm link on the master branch, but now I don't see it in the output.\nHere's the whole output: https://gist.github.com/g105b/4a615d189ff5f95db9d0\n. I am using a real device, I had just unplugged and re-plugged the USB cable, and the system had not yet re-mounted when I copied that output.\n. It seems that I had to uninstall the app from the device, and run cca run andoid again to get the permissions to update. This might be something to consider flagging with the core developers, as there was no feedback whatsoever indicating that the cca app could not get access to the video stream -- in fact, the success callback was called, with a valid MediaStream... but it was blank.\nPermissions before:\n\nPermissions after:\n\ngetUserMedia works now, albeit very laggy.\n. @mmocny \nAndroid 4.1.2\nSamsung Galaxy SIII mini\n. Great news, here's my situation:\n- iframe with remote content\n- Existing JavaScript on iframe wants to access native APIs of phone\nIs it possible for the cca runtime JavaScript to pass the iframe an object with reference to the APIs exposed by the phone? If so, could you give me some pointers to get this working?\nThanks.\n. Simply put, I have a web-app that works nicely in Chrome on Android and iOS, but I want to wrap it up into a native app with cca, progressively adding 'native' features if they are available (i.e. enhancing the camera with getUserMedia if available). I'm looking for the lowest barrier-to-entry method for getting this existing app wrapped up with cca, changing the remote code as little as possible.\nI'd be happy in writing up the docs or a tutorial for this when I've succeeded in getting it working on both platforms.\n. Interesting, I'll see how I get on and report back.\n. :+1:  this affects me too, just built and deployed our app to find that a required cordova plugin was removed.\n. By bridge, I mean making use of window.postMessage to trigger local phone-based, cca-wrapped JavaScript.\nRegarding app guidelines, I was just a bit concerned about the \"in any way or form\" part. Please could you point me in the right direction of a list of cca-powered apps that are in the wild?\nMy final question was meaning, if my utilisation of cca was in breach of the guidelines, would it be possible to introduce a cca platform specific limitation of not being able to update remote code after deployment? Some kind of hash check, for example.\n. :+1 I'm interested in seeing this too.\n. I'm having this same issue, but I can't seem to upgrade to version 0.6.0 - how should this be done?\n. I moved to Apple Macintosh to deploy to iOS instead, assuming my PC targeting Android was set up incorrectly... same issue on Apple.\nHere's the output of cca prepare:\n```\nGregs-MacBook-Air:cca-deploy g105b$ cca prepare\ncca v0.6.0\nFirst-time build. Detecting available SDKs:\nAndroid Development: JDK not found. Failed to run: /usr/libexec/java_home\niOS Development: SDK configured properly.\nRunning Cordova Command: platform add ios\niOS project created with cordova-ios@3.8.0\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin add cordova-plugin-background-app cordova-plugin-blob-constructor-polyfill cordova-plugin-chrome-apps-bootstrap cordova-plugin-chrome-apps-common cordova-plugin-chrome-apps-i18n cordova-plugin-chrome-apps-navigation cordova-plugin-chrome-apps-runtime cordova-plugin-chrome-apps-storage cordova-plugin-crosswalk-webview cordova-plugin-customevent-polyfill cordova-plugin-file cordova-plugin-inappbrowser cordova-plugin-network-information cordova-plugin-statusbar cordova-plugin-whitelist@1.0.0 cordova-plugin-xhr-blob-polyfill org.chromium.cca-hooks\nnpm http GET http://registry.cordova.io/cordova-plugin-background-app\nnpm http 404 http://registry.cordova.io/cordova-plugin-background-app\n/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/lockfile/lockfile.js:46\n      throw er\n            ^\nError: 404 Not Found: cordova-plugin-background-app\n    at RegClient. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:268:14)\n    at Request.self.callback (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:148:22)\n    at Request.emit (events.js:110:17)\n    at Request. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:876:14)\n    at Request.emit (events.js:129:20)\n    at IncomingMessage. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:827:12)\n    at IncomingMessage.emit (events.js:129:20)\n    at _stream_readable.js:908:16\n    at process._tickCallback (node.js:355:11)\nGregs-MacBook-Air:cca-deploy g105b$ \n``\n. FYI, I have this same issue when trying to docca prepareon thehelloworld` example found in https://github.com/MobileChromeApps/mobile-chrome-app-samples.\nHere is what I did to break things:\n```\ngit clone git@github.com:MobileChromeApps/mobile-chrome-app-samples.git\ncd mobile-chrome-app-samples/\ncca create cca-deploy --link-to=helloworld/manifest.json\ncd cca-deploy\ncca prepare\n```\n. Sounds very interesting indeed. Any idea of release date for the new webview?\n. This is amazing progress, but am I right in saying that you can't use any\nof the crosswalk niceties in ios?\nOn 19 Jul 2014 13:43, \"Michal Mocny\" notifications@github.com wrote:\n\nThe crosswalk webview has landed as of 0.1.1 (see our Release Notes\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/RELEASENOTES.md\n)!\nWe've tested it previously, and its exciting to see this (and other new\nplatform features) working. Please upgrade cca and upgrade your\napplication, then let us know how it went!\n(Btw, latest cca supports cca upgrade in-place so you don't need to\nre-create your project any more.)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/188#issuecomment-49508540\n.\n. I'm also running into this issue.\n\nmanifest.json:\njson\n{\n  \"manifest_version\": 2,\n  \"name\": \"AppName\",\n  \"version\": \"0.1\",\n  \"icons\": {\n    \"128\": \"icon-128.png\"\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\"\n  ],\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"app-runtime.js\"]\n    }\n  },\n  \"minimum_chrome_version\": \"28\"\n}\n\nHow do I resolve this?\n(edit: Added output to comment to help Google index this issue)\n```\ncca prepare\ncca v0.3.0\nUpdating plugins based on manifest.json\nPermission not recognized by cca: captureVideo (ignoring)\nPermission not recognized by cca: captureAudio (ignoring)\n``\n. Thanks @beaufortfrancois , will test locally with your patch in the mean time. Looks like this repo's development is quite speedy so hopefully won't be long to make it into the live branch\n. Just performednpm update -g cca, this issue still exists. Any idea when it will be live without needing the patch?\n. After performingnpm update -g cca, I didn't see any prompt to upgrade the project.audioCaptureis present in themanifest.json, but noaudioCapturelisted in thecca plugin ls` output. \nIn cca --help there is no mention of upgrading, but I just tried cca upgrade ... that seems to have done an upgrade, but the original issue of \"Permission not recognized by cca: videoCapture (ignoring)\" still prevails.\n. $ cca --version\n0.3.0\n```\n$ cca plugins ls\ncca v0.3.0\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.1.1-dev \"File\"\norg.apache.cordova.inappbrowser 0.4.1-dev \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.9-dev \"Network Information\"\norg.apache.cordova.statusbar 0.1.6-dev \"StatusBar\"\norg.chromium.bootstrap 1.0.2 \"Chrome Apps Core\"\norg.chromium.common 1.0.1 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.1 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.1 \"Chrome Apps Navigation\"\norg.chromium.polyfill.CustomEvent 1.0.0 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.blob_constructor 1.0.0 \"XHR blob returnType shim\"\norg.chromium.polyfill.xhr_features 1.0.0 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.1 \"Chrome App Runtime\"\norg.chromium.storage 1.0.1 \"Chrome Apps Storage API\"\n```\n$ ls -la\ntotal 32\ndrwxrwxr-x  6 g105b g105b 4096 Aug 14 15:46 .\ndrwxrwxr-x  9 g105b g105b 4096 Aug 14 08:44 ..\n-rw-rw-r--  1 g105b g105b  475 Aug 14 08:44 config.xml\ndrwxrwxr-x  2 g105b g105b 4096 Aug 14 08:44 .cordova\n-rw-r--r--  1 g105b g105b  367 Aug 14 08:44 .gitignore\ndrwxrwxr-x  4 g105b g105b 4096 Aug 14 08:44 hooks\ndrwxrwxr-x  3 g105b g105b 4096 Aug 14 15:46 platforms\ndrwxrwxr-x 18 g105b g105b 4096 Aug 14 15:49 plugins\nlrwxrwxrwx  1 g105b g105b   34 Aug 14 08:44 www -> /home/g105b/Webroot/brisky/cca\nThe www directory is a symlink, as I used --link-to when creating the project.\n. I'll gladly do these steps for you tomorrow, have to sign off now. Thanks for all your help today.\n. It's a couple of weeks since this issue was re-opened, and I can't reproduce it. I'm happy for it to be closed.\n. Very fast work guys. Can I ask, do I simply update cca with npm to get this fix now?\n. Thanks for the advice, I see the new videoCapture permission is included now, but unfortunately I still can't seem to access the video stream on the CCA Android app... I believe it may be the way I'm setting the <video> src. \n``` javascript\nvar video = document.querySelector(\"video\");\nfunction streamVideo(stream) {\n    video.src = window.URL.createObjectURL(stream);\n    video.play();\n}\nnavigator.getUserMedia = ( navigator.getUserMedia ||\n                            navigator.webkitGetUserMedia ||\n                            navigator.mozGetUserMedia ||\n                            navigator.msGetUserMedia);\nnavigator.getUserMedia({\n    video: true,\n    audio: false,\n}, streamVideo, function() {\n    console.log(\"ERROR!\")\n});\n```\nInspecting this code as it is run, the video does get it's blob src set, but all I see is a black screen. Could you offer any advice on this?\n. My manifest: \njson\n{\n  \"manifest_version\": 2,\n  \"name\": \"Brisky\",\n  \"version\": \"0.1\",\n  \"icons\": {\n    \"128\": \"brisky-icon-128.png\"\n  },\n  \"permissions\": [\n    \"storage\",\n    \"videoCapture\"\n  ],\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"app-runtime.js\"]\n    }\n  },\n  \"minimum_chrome_version\": \"28\"\n}\n. Inspecting the successCallback function, the stream MediaStream object has a function called getVideoTracks(), which when called returns an empty array.\n. I did see that error before I used npm link on the master branch, but now I don't see it in the output.\nHere's the whole output: https://gist.github.com/g105b/4a615d189ff5f95db9d0\n. I am using a real device, I had just unplugged and re-plugged the USB cable, and the system had not yet re-mounted when I copied that output.\n. It seems that I had to uninstall the app from the device, and run cca run andoid again to get the permissions to update. This might be something to consider flagging with the core developers, as there was no feedback whatsoever indicating that the cca app could not get access to the video stream -- in fact, the success callback was called, with a valid MediaStream... but it was blank.\nPermissions before:\n\nPermissions after:\n\ngetUserMedia works now, albeit very laggy.\n. @mmocny \nAndroid 4.1.2\nSamsung Galaxy SIII mini\n. Great news, here's my situation:\n- iframe with remote content\n- Existing JavaScript on iframe wants to access native APIs of phone\nIs it possible for the cca runtime JavaScript to pass the iframe an object with reference to the APIs exposed by the phone? If so, could you give me some pointers to get this working?\nThanks.\n. Simply put, I have a web-app that works nicely in Chrome on Android and iOS, but I want to wrap it up into a native app with cca, progressively adding 'native' features if they are available (i.e. enhancing the camera with getUserMedia if available). I'm looking for the lowest barrier-to-entry method for getting this existing app wrapped up with cca, changing the remote code as little as possible.\nI'd be happy in writing up the docs or a tutorial for this when I've succeeded in getting it working on both platforms.\n. Interesting, I'll see how I get on and report back.\n. :+1:  this affects me too, just built and deployed our app to find that a required cordova plugin was removed.\n. By bridge, I mean making use of window.postMessage to trigger local phone-based, cca-wrapped JavaScript.\nRegarding app guidelines, I was just a bit concerned about the \"in any way or form\" part. Please could you point me in the right direction of a list of cca-powered apps that are in the wild?\nMy final question was meaning, if my utilisation of cca was in breach of the guidelines, would it be possible to introduce a cca platform specific limitation of not being able to update remote code after deployment? Some kind of hash check, for example.\n. :+1 I'm interested in seeing this too.\n. I'm having this same issue, but I can't seem to upgrade to version 0.6.0 - how should this be done?\n. I moved to Apple Macintosh to deploy to iOS instead, assuming my PC targeting Android was set up incorrectly... same issue on Apple.\nHere's the output of cca prepare:\n```\nGregs-MacBook-Air:cca-deploy g105b$ cca prepare\ncca v0.6.0\nFirst-time build. Detecting available SDKs:\nAndroid Development: JDK not found. Failed to run: /usr/libexec/java_home\niOS Development: SDK configured properly.\nRunning Cordova Command: platform add ios\niOS project created with cordova-ios@3.8.0\nUpdating plugins based on manifest.json\nRunning Cordova Command: plugin add cordova-plugin-background-app cordova-plugin-blob-constructor-polyfill cordova-plugin-chrome-apps-bootstrap cordova-plugin-chrome-apps-common cordova-plugin-chrome-apps-i18n cordova-plugin-chrome-apps-navigation cordova-plugin-chrome-apps-runtime cordova-plugin-chrome-apps-storage cordova-plugin-crosswalk-webview cordova-plugin-customevent-polyfill cordova-plugin-file cordova-plugin-inappbrowser cordova-plugin-network-information cordova-plugin-statusbar cordova-plugin-whitelist@1.0.0 cordova-plugin-xhr-blob-polyfill org.chromium.cca-hooks\nnpm http GET http://registry.cordova.io/cordova-plugin-background-app\nnpm http 404 http://registry.cordova.io/cordova-plugin-background-app\n/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/lockfile/lockfile.js:46\n      throw er\n            ^\nError: 404 Not Found: cordova-plugin-background-app\n    at RegClient. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:268:14)\n    at Request.self.callback (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:148:22)\n    at Request.emit (events.js:110:17)\n    at Request. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:876:14)\n    at Request.emit (events.js:129:20)\n    at IncomingMessage. (/Users/g105b/.nvm/versions/node/v0.12.7/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/node_modules/npm/node_modules/request/index.js:827:12)\n    at IncomingMessage.emit (events.js:129:20)\n    at _stream_readable.js:908:16\n    at process._tickCallback (node.js:355:11)\nGregs-MacBook-Air:cca-deploy g105b$ \n``\n. FYI, I have this same issue when trying to docca prepareon thehelloworld` example found in https://github.com/MobileChromeApps/mobile-chrome-app-samples.\nHere is what I did to break things:\n```\ngit clone git@github.com:MobileChromeApps/mobile-chrome-app-samples.git\ncd mobile-chrome-app-samples/\ncca create cca-deploy --link-to=helloworld/manifest.json\ncd cca-deploy\ncca prepare\n```\n. ",
    "darrenprice": "cca --version\n0.1.0\nscripts/web.js contains\n```\nvar wsUri = \"ws://echo.websocket.org/\"; \n var output;\n function init() \n { \n output = document.getElementById(\"output\"); \n testWebSocket(); \n }\n function testWebSocket() { \n websocket = new WebSocket(wsUri); \n websocket.onopen = function(evt) { onOpen(evt) }; \n websocket.onclose = function(evt) { onClose(evt) }; \n websocket.onmessage = function(evt) { onMessage(evt) }; \n websocket.onerror = function(evt) { onError(evt) }; }\n function onOpen(evt) { writeToScreen(\"CONNECTED\"); doSend(\"WebSocket rocks\"); }\n function onClose(evt) { writeToScreen(\"DISCONNECTED\"); }\n function onMessage(evt) { writeToScreen('RESPONSE: ' + evt.data+''); websocket.close(); }\n function onError(evt) { writeToScreen('ERROR: ' + evt.data); }\n function doSend(message) { writeToScreen(\"SENT: \" + message);  websocket.send(message); }\n function writeToScreen(message) \n { \n var pre = document.createElement(\"p\"); \n pre.style.wordWrap = \"break-word\"; \n pre.innerHTML = message; \n output.appendChild(pre); \n }\n window.addEventListener(\"load\", init, false);\n```\nindex.html contains\n<!doctype html>\n<html>\n<head>\n<meta http-equiv=\"CACHE-CONTROL\" content=\"NO-CACHE\">\n<script src=\"scripts/web.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<h2>WebSocket Test</h2>  \n<div id=\"output\"></div>\n</body>\n</html>\nThis is run with android development tools and via cca running for android.\nI may of found a plugin that does what i want by running this.\ncca plugin add https://github.com/mkuklis/phonegap-websocket\nBut I thought web socket should run out of the box, hence the issue.\n. I did just update cca and recreated the project and it is still not working without the additional plugin.\n. I must not of completely removed my previous project properly, I did it all again and it did indeed work fine thanks, I downloaded cca Tuesday/Wednesday I think. Thanks for the help.\n. cca --version\n0.1.0\nscripts/web.js contains\n```\nvar wsUri = \"ws://echo.websocket.org/\"; \n var output;\n function init() \n { \n output = document.getElementById(\"output\"); \n testWebSocket(); \n }\n function testWebSocket() { \n websocket = new WebSocket(wsUri); \n websocket.onopen = function(evt) { onOpen(evt) }; \n websocket.onclose = function(evt) { onClose(evt) }; \n websocket.onmessage = function(evt) { onMessage(evt) }; \n websocket.onerror = function(evt) { onError(evt) }; }\n function onOpen(evt) { writeToScreen(\"CONNECTED\"); doSend(\"WebSocket rocks\"); }\n function onClose(evt) { writeToScreen(\"DISCONNECTED\"); }\n function onMessage(evt) { writeToScreen('RESPONSE: ' + evt.data+''); websocket.close(); }\n function onError(evt) { writeToScreen('ERROR: ' + evt.data); }\n function doSend(message) { writeToScreen(\"SENT: \" + message);  websocket.send(message); }\n function writeToScreen(message) \n { \n var pre = document.createElement(\"p\"); \n pre.style.wordWrap = \"break-word\"; \n pre.innerHTML = message; \n output.appendChild(pre); \n }\n window.addEventListener(\"load\", init, false);\n```\nindex.html contains\n<!doctype html>\n<html>\n<head>\n<meta http-equiv=\"CACHE-CONTROL\" content=\"NO-CACHE\">\n<script src=\"scripts/web.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<h2>WebSocket Test</h2>  \n<div id=\"output\"></div>\n</body>\n</html>\nThis is run with android development tools and via cca running for android.\nI may of found a plugin that does what i want by running this.\ncca plugin add https://github.com/mkuklis/phonegap-websocket\nBut I thought web socket should run out of the box, hence the issue.\n. I did just update cca and recreated the project and it is still not working without the additional plugin.\n. I must not of completely removed my previous project properly, I did it all again and it did indeed work fine thanks, I downloaded cca Tuesday/Wednesday I think. Thanks for the help.\n. ",
    "infomofo": "thanks- fixing my path so the ANDROID_HOME/bin was before my other path directories with android binaries fixed it.\ni also have upgraded to 0.1.1 and am looking forward to trying out that developer tool!\n. In addition- if there was some documentation on exactly which elements of config.xml can be set by manifest.mobile.json and the syntax for it- i understand that author can be set but i'm not clear on how to set author email and other parameters that seem related.\n. @mmocny or @agrieve Is there any update on this- or any more details on the scope of the bug? I'm currently affected by this and it has prevented us from being able to fix crucial bugs in our IOS application.  If I could even tell which frameworks or functionalities to avoid that would help me out a lot.  If you have any beta branches or fixes to test I'm also willing to test them out.\n. Have you tried the repo I provided at https://github.com/infomofo/CcaIosAppDemonstrationBug - if you clone that repo you'll find the generated cca code that I created with the steps I outlined on the forum thread here: https://groups.google.com/a/chromium.org/forum/#!topic/chromium-apps/TC5Mpz4xNPU\nIf you clone the app and run cca platform ls you'll see that it's also using cordova-ios 3.6.1 but it reproduces the issue described here by @eahutchins . \nLet me know if that allows you to reproduce the issue.\n. Hm- I actually initially found this issue with an angular application.  The only reason I produced this demo in Polymer is because the Chrome Dev Editor doesn't provide an angular example.\nI'll try and produce a more lightweight example attempting to reproduce the error with angular.  If there's some common functionality to angular and polymer that might shed light on this issue, maybe that would be where to look next.  \n@eahutchins since your project also exhibits the issue can you shed some light on what frameworks you're using?\n. @mmocny I went through and completely rescaffolded my angular application from scratch. Somewhere in the process it fixed the angular application on ios, so I guess whatever I changed fixed it.  Among other things I did note that I had some inconsistent angular dependency resolutions- I had a mix of 1.2.x and 1.3.x angular dependencies and maybe they weren't playing together well in a way that manifested itself differently on ios than on android...\n. thank you for this, @agrieve .  Can you clarify how to pick up this fix, or do I need to wait until 0.7.1 is released?\n. @agrieve Do you have a recommendation on best practices for such a migration?\nAlso, you said most plugins are usable- the ones I'm using are cordova-plugin-chrome-apps-identity and cordova-plugin-chrome-apps-system-storage - should i expect those to work outside the context of a chrome mobile app using just a normal cordova application?\nAny guidance you could provide here would be helpful.  \nCan you provide an example of a repo where a vanilla cordova app is leveraging a mobile chrome app plugin like .identity or .storage just so I have a reference to work off of?  Thanks!\n. thanks- fixing my path so the ANDROID_HOME/bin was before my other path directories with android binaries fixed it.\ni also have upgraded to 0.1.1 and am looking forward to trying out that developer tool!\n. In addition- if there was some documentation on exactly which elements of config.xml can be set by manifest.mobile.json and the syntax for it- i understand that author can be set but i'm not clear on how to set author email and other parameters that seem related.\n. @mmocny or @agrieve Is there any update on this- or any more details on the scope of the bug? I'm currently affected by this and it has prevented us from being able to fix crucial bugs in our IOS application.  If I could even tell which frameworks or functionalities to avoid that would help me out a lot.  If you have any beta branches or fixes to test I'm also willing to test them out.\n. Have you tried the repo I provided at https://github.com/infomofo/CcaIosAppDemonstrationBug - if you clone that repo you'll find the generated cca code that I created with the steps I outlined on the forum thread here: https://groups.google.com/a/chromium.org/forum/#!topic/chromium-apps/TC5Mpz4xNPU\nIf you clone the app and run cca platform ls you'll see that it's also using cordova-ios 3.6.1 but it reproduces the issue described here by @eahutchins . \nLet me know if that allows you to reproduce the issue.\n. Hm- I actually initially found this issue with an angular application.  The only reason I produced this demo in Polymer is because the Chrome Dev Editor doesn't provide an angular example.\nI'll try and produce a more lightweight example attempting to reproduce the error with angular.  If there's some common functionality to angular and polymer that might shed light on this issue, maybe that would be where to look next.  \n@eahutchins since your project also exhibits the issue can you shed some light on what frameworks you're using?\n. @mmocny I went through and completely rescaffolded my angular application from scratch. Somewhere in the process it fixed the angular application on ios, so I guess whatever I changed fixed it.  Among other things I did note that I had some inconsistent angular dependency resolutions- I had a mix of 1.2.x and 1.3.x angular dependencies and maybe they weren't playing together well in a way that manifested itself differently on ios than on android...\n. thank you for this, @agrieve .  Can you clarify how to pick up this fix, or do I need to wait until 0.7.1 is released?\n. @agrieve Do you have a recommendation on best practices for such a migration?\nAlso, you said most plugins are usable- the ones I'm using are cordova-plugin-chrome-apps-identity and cordova-plugin-chrome-apps-system-storage - should i expect those to work outside the context of a chrome mobile app using just a normal cordova application?\nAny guidance you could provide here would be helpful.  \nCan you provide an example of a repo where a vanilla cordova app is leveraging a mobile chrome app plugin like .identity or .storage just so I have a reference to work off of?  Thanks!\n. ",
    "trenkwaldermartin": "+1\n. +1\n. ",
    "DaniGuardiola": "Please add this! I really need this, i bought a moto 360 to develop wear apps :)\n. I have a smartwatch, yes there are richer notifications for this devices, and i actually need this for my app :pray: \n. That's it, any plans for adding this to the notification API? BTW, for some\nreason i can't get notifications to work on mobile (CADT) while it works on\nchrome desktop. Didn't try compiling with CCA but i don't think that makes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473\n.\n. yup\n\nlibs.notifications = {\n    createFromTemplate: function(what) {\n      if (what) {\n        if (what === \"work\") {\n            var opt = {\n                type: \"basic\",\n                title: \"probandto putasss\",\n                message: \"probando putasss\",\n                iconUrl: \"work.svg\"\n            };\n        } else if (what === \"break\") {\n            var opt = {\n                type: \"basic\",\n                title: chrome.i18n.getMessage(\"breakNotifyTITLE\"),\n                message: chrome.i18n.getMessage(\"breakNotifyMSG\"),\n                iconUrl: \"img/shared/break.svg\"\n            };\n        } else {\n            var opt = {\n                type: \"basic\",\n                title: \"[notifications] ERROR: [create]\",\n                message: \"If you are not Dani Guardiola, tell him you are\nreading this text\",\n                iconUrl: libs.vars.root + \"img/shared/work.svg\"\n            };\n        }\n        chrome.notifications.clear(what, function() {});\n        chrome.notifications.create(what, opt, function(id) {});\n        console.log(\"[notifications]: [create] Creating notification: \" +\nwhat);\n        alert('NOTIFICACION');\n      }\n    }\n};\nCalling libs.notifications.createFromTemplate('work') works fine on\ncomputer, but does not show in devices. The alert does.\nEl Thu Oct 30 2014 at 15:25:44, agrieve (notifications@github.com)\nescribi\u00f3:\n\nCould you provide the code snippet that doesn't work?\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it works\non\nchrome desktop. Didn't try compiling with CCA but i don't think that\nmakes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\nhttps://developer.android.com/training/wearables/notifications/pages.html\n\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61081330>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61099669\n.\n. Any hint? What am i doing wrong?\n\nEl Mon Nov 03 2014 at 11:06:59, Dani Guardiola (contacto@daniguardiola.me)\nescribi\u00f3:\n\nyup\nlibs.notifications = {\n    createFromTemplate: function(what) {\n      if (what) {\n        if (what === \"work\") {\n            var opt = {\n                type: \"basic\",\n                title: \"probandto putasss\",\n                message: \"probando putasss\",\n                iconUrl: \"work.svg\"\n            };\n        } else if (what === \"break\") {\n            var opt = {\n                type: \"basic\",\n                title: chrome.i18n.getMessage(\"breakNotifyTITLE\"),\n                message: chrome.i18n.getMessage(\"breakNotifyMSG\"),\n                iconUrl: \"img/shared/break.svg\"\n            };\n        } else {\n            var opt = {\n                type: \"basic\",\n                title: \"[notifications] ERROR: [create]\",\n                message: \"If you are not Dani Guardiola, tell him you are\nreading this text\",\n                iconUrl: libs.vars.root + \"img/shared/work.svg\"\n            };\n        }\n        chrome.notifications.clear(what, function() {});\n        chrome.notifications.create(what, opt, function(id) {});\n        console.log(\"[notifications]: [create] Creating notification: \" +\nwhat);\n        alert('NOTIFICACION');\n      }\n    }\n};\nCalling libs.notifications.createFromTemplate('work') works fine on\ncomputer, but does not show in devices. The alert does.\nEl Thu Oct 30 2014 at 15:25:44, agrieve (notifications@github.com)\nescribi\u00f3:\nCould you provide the code snippet that doesn't work?\n\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it\nworks\non\nchrome desktop. Didn't try compiling with CCA but i don't think that\nmakes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/\nnotifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-60833945>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-60977473>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-61081330\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61099669\n.\n. But this is not a wear issue, it is about mobile notifications. I will try\nagain, maybe i was doing something wrong. Anyway though mobile\nnotifications work on wear, i still need support for rich notifications\nfor wear (custom actions, voice input, etc).\nPD: Device: Moto e / CADT: last version published when i sent that message\n(i did reset my phone some days ago so i don't know now).\n\n\nWill reply back with more info when i try again.\nThanks\nEl Tue Nov 11 2014 at 19:52:11, Michal Mocny (notifications@github.com)\nescribi\u00f3:\n\nAcually @DaniGuardiola https://github.com/DaniGuardiola can you file a\nnew issue -- this issue is specific to Android Wear (aka Watch)\nnotifications.\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-62596557\n.\n. I really need this too :+1: \n. @agrieve That's awesome! Thanks!\n. This would be cool too to avoid blank load pages and nicely load the DOM.\n. Please add this! I really need this, i bought a moto 360 to develop wear apps :)\n. I have a smartwatch, yes there are richer notifications for this devices, and i actually need this for my app :pray: \n. That's it, any plans for adding this to the notification API? BTW, for some\nreason i can't get notifications to work on mobile (CADT) while it works on\nchrome desktop. Didn't try compiling with CCA but i don't think that makes\nany difference. Am i missing something?\n\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/notifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473\n.\n. yup\n\nlibs.notifications = {\n    createFromTemplate: function(what) {\n      if (what) {\n        if (what === \"work\") {\n            var opt = {\n                type: \"basic\",\n                title: \"probandto putasss\",\n                message: \"probando putasss\",\n                iconUrl: \"work.svg\"\n            };\n        } else if (what === \"break\") {\n            var opt = {\n                type: \"basic\",\n                title: chrome.i18n.getMessage(\"breakNotifyTITLE\"),\n                message: chrome.i18n.getMessage(\"breakNotifyMSG\"),\n                iconUrl: \"img/shared/break.svg\"\n            };\n        } else {\n            var opt = {\n                type: \"basic\",\n                title: \"[notifications] ERROR: [create]\",\n                message: \"If you are not Dani Guardiola, tell him you are\nreading this text\",\n                iconUrl: libs.vars.root + \"img/shared/work.svg\"\n            };\n        }\n        chrome.notifications.clear(what, function() {});\n        chrome.notifications.create(what, opt, function(id) {});\n        console.log(\"[notifications]: [create] Creating notification: \" +\nwhat);\n        alert('NOTIFICACION');\n      }\n    }\n};\nCalling libs.notifications.createFromTemplate('work') works fine on\ncomputer, but does not show in devices. The alert does.\nEl Thu Oct 30 2014 at 15:25:44, agrieve (notifications@github.com)\nescribi\u00f3:\n\nCould you provide the code snippet that doesn't work?\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it works\non\nchrome desktop. Didn't try compiling with CCA but i don't think that\nmakes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\nhttps://developer.android.com/training/wearables/notifications/pages.html\n\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60833945>\n\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-60977473>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61081330>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61099669\n.\n. Any hint? What am i doing wrong?\n\nEl Mon Nov 03 2014 at 11:06:59, Dani Guardiola (contacto@daniguardiola.me)\nescribi\u00f3:\n\nyup\nlibs.notifications = {\n    createFromTemplate: function(what) {\n      if (what) {\n        if (what === \"work\") {\n            var opt = {\n                type: \"basic\",\n                title: \"probandto putasss\",\n                message: \"probando putasss\",\n                iconUrl: \"work.svg\"\n            };\n        } else if (what === \"break\") {\n            var opt = {\n                type: \"basic\",\n                title: chrome.i18n.getMessage(\"breakNotifyTITLE\"),\n                message: chrome.i18n.getMessage(\"breakNotifyMSG\"),\n                iconUrl: \"img/shared/break.svg\"\n            };\n        } else {\n            var opt = {\n                type: \"basic\",\n                title: \"[notifications] ERROR: [create]\",\n                message: \"If you are not Dani Guardiola, tell him you are\nreading this text\",\n                iconUrl: libs.vars.root + \"img/shared/work.svg\"\n            };\n        }\n        chrome.notifications.clear(what, function() {});\n        chrome.notifications.create(what, opt, function(id) {});\n        console.log(\"[notifications]: [create] Creating notification: \" +\nwhat);\n        alert('NOTIFICACION');\n      }\n    }\n};\nCalling libs.notifications.createFromTemplate('work') works fine on\ncomputer, but does not show in devices. The alert does.\nEl Thu Oct 30 2014 at 15:25:44, agrieve (notifications@github.com)\nescribi\u00f3:\nCould you provide the code snippet that doesn't work?\n\nOn Thu, Oct 30, 2014 at 8:04 AM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nThat's it, any plans for adding this to the notification API? BTW, for\nsome\nreason i can't get notifications to work on mobile (CADT) while it\nworks\non\nchrome desktop. Didn't try compiling with CCA but i don't think that\nmakes\nany difference. Am i missing something?\nEl Wed Oct 29 2014 at 19:21:49, agrieve (notifications@github.com)\nescribi\u00f3:\n\nhttps://developer.android.com/training/wearables/\nnotifications/pages.html\nOn Tue, Oct 28, 2014 at 5:22 PM, Dani Mu\u00f1oz Guardiola \nnotifications@github.com wrote:\n\nI have a smartwatch, yes there are richer notifications for this\ndevices,\nand i actually need this for my app [image: :pray:]\n\nReply to this email directly or view it on GitHub\n<\n\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-60833945>\n\n.\n\n\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-60977473>\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#\nissuecomment-61081330\n.\n\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-61099669\n.\n. But this is not a wear issue, it is about mobile notifications. I will try\nagain, maybe i was doing something wrong. Anyway though mobile\nnotifications work on wear, i still need support for rich notifications\nfor wear (custom actions, voice input, etc).\nPD: Device: Moto e / CADT: last version published when i sent that message\n(i did reset my phone some days ago so i don't know now).\n\n\nWill reply back with more info when i try again.\nThanks\nEl Tue Nov 11 2014 at 19:52:11, Michal Mocny (notifications@github.com)\nescribi\u00f3:\n\nAcually @DaniGuardiola https://github.com/DaniGuardiola can you file a\nnew issue -- this issue is specific to Android Wear (aka Watch)\nnotifications.\n\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/195#issuecomment-62596557\n.\n. I really need this too :+1: \n. @agrieve That's awesome! Thanks!\n. This would be cool too to avoid blank load pages and nicely load the DOM.\n. \n",
    "tlvince": "No worries :thumbsup: \n. No worries :thumbsup: \n. ",
    "holt": "In my app, the background holds the stack of all windows currently active, and communication between these windows is brokered via a persistent messaging queue.\nNow that I look at the actions that are actually being passed, I see that many of them don't fit within the mobile paradigm anyway (e.g., closing multiple windows, automatic tiling, and so forth) which does mitigate the need somewhat...\nI think redesigning the app is probably what is required - I just wanted clarity on messaging availability first. Thanks!\n. A redesign for mobile sounds inevitable in fact. Thanks for the prompt response guys!\n. In my app, the background holds the stack of all windows currently active, and communication between these windows is brokered via a persistent messaging queue.\nNow that I look at the actions that are actually being passed, I see that many of them don't fit within the mobile paradigm anyway (e.g., closing multiple windows, automatic tiling, and so forth) which does mitigate the need somewhat...\nI think redesigning the app is probably what is required - I just wanted clarity on messaging availability first. Thanks!\n. A redesign for mobile sounds inevitable in fact. Thanks for the prompt response guys!\n. ",
    "bjarthur": "i have curl installed.  the problem seems to be that curl is not retrieving any content\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n. it doesn't exist.  but, ...  hmm.  deleting the entire mobile app directory and running cca create again fixes the problem.  perhaps i didn't have my env set up correctly.  yet cca checkenv reported both android and iOS were configured correctly, both earlier and now.  anyway, works now so i'll close this.  sorry for the noise\n. i have curl installed.  the problem seems to be that curl is not retrieving any content\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n. it doesn't exist.  but, ...  hmm.  deleting the entire mobile app directory and running cca create again fixes the problem.  perhaps i didn't have my env set up correctly.  yet cca checkenv reported both android and iOS were configured correctly, both earlier and now.  anyway, works now so i'll close this.  sorry for the noise\n. ",
    "nghia1986": "Please support this feature.!\n. csp can be changed by adding to manifest.mobile.json\nexample:\n\"csp\": \"default-src 'self' blob: file:'\"\n. Please support this feature.!\n. csp can be changed by adding to manifest.mobile.json\nexample:\n\"csp\": \"default-src 'self' blob: file:'\"\n. ",
    "dfay": "Sorry for being slow with this. The CLA would be a problem for me because I did this work for a company friendly to contributing to open source but I would have to involve the corporation's legal team with the CLA. I think the better approach would be to reject the PR and treat it as a \"bug report\". Then you are free to make the change in the way you prefer. Note that there might also be other functions that could perhaps cause NetworkOnMainThreadExceptions, these were just the ones I ran into.\n. Sorry for being slow with this. The CLA would be a problem for me because I did this work for a company friendly to contributing to open source but I would have to involve the corporation's legal team with the CLA. I think the better approach would be to reject the PR and treat it as a \"bug report\". Then you are free to make the change in the way you prefer. Note that there might also be other functions that could perhaps cause NetworkOnMainThreadExceptions, these were just the ones I ran into.\n. ",
    "emanb29": "@agrieve I'm wrapping a mybb forum which has no api\n. I thought iframes were disallowed by some CSP (don't trust me on that, it's been a while since I checked), and regardless I need the script injection features. I'm writing (essentially) an entirely client-side PM notifier.\nGet PM -> page is checked for new PMS -> notification is pushed on device\n. @agrieve I'm wrapping a mybb forum which has no api\n. I thought iframes were disallowed by some CSP (don't trust me on that, it's been a while since I checked), and regardless I need the script injection features. I'm writing (essentially) an entirely client-side PM notifier.\nGet PM -> page is checked for new PMS -> notification is pushed on device\n. ",
    "devoncarew": "Looks like a dup of #211. I'm more interested in an android implementation.\n. Looks like a dup of #211. I'm more interested in an android implementation.\n. ",
    "darkoverlordofdata": "After uninstalling my other npm modules and clearing nmp cache, the error changes:\nnpm http 304 https://registry.npmjs.org/base64-js/0.0.7\nnpm http 304 https://registry.npmjs.org/ieee754/1.1.3\nnpm ERR! Error: invalid version: 3001.0001.0000-dev-harmony-fb\nnpm ERR!     at validVersion (/usr/lib/nodejs/read-package-json/read-json.js:573:40)\nnpm ERR!     at final (/usr/lib/nodejs/read-package-json/read-json.js:323:23)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:139:33\nnpm ERR!     at cb (/usr/lib/nodejs/slide/lib/async-map.js:48:11)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:251:40\nnpm ERR!     at fs.js:268:14\nnpm ERR!     at /usr/lib/nodejs/graceful-fs/graceful-fs.js:103:5\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     http://bugs.debian.org/npm\nnpm ERR! or use\nnpm ERR!     reportbug --attach /home/bruce/npm-debug.log npm\nnpm ERR! System Linux 3.11.0-12-generic\nnpm ERR! command \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"-g\" \"cca\"\nnpm ERR! cwd /home/bruce\nnpm ERR! node -v v0.10.23\nnpm ERR! npm -v 1.2.18\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/bruce/npm-debug.log\nnpm ERR! not ok code 0\n. Yes, I've been running several node modules daily on this box. I tried upgrading node, and still the same issue. In any case, I'd been meaning to upgrade to Mint 17, so I did that today, and now now this module installs ok. I know that at one time I tried installing harmony, so maybe there were still some incompatible bits somewhere - I've discovered that windows doesn't have a monopoly on dll hell...\n. I tried using cordova directly and have the same issue. Looks like this is a cordova issue, not a cca issue.\n. No, it still removes my <access origin=\"*\" /> tag. Close this - I'll wait and see if it actually denies access. Maybe it doesn't need it. I found this on https://github.com/apache/cordova-plugin-whitelist:\nWithout any  tags, only requests to file:// URLs are allowed. However, the default Cordova application includes  by default.\nRegarding the clobbering scheme - I see, that explains why the manifest.mobile.json author value overwrites the config.xml author tag text element, but doesn't touch the other attributes of the same tag. \nI'm just not real clear yet on which entries are custom and which are standard, but I'll know when they break ;)\n. Good call! That is exactly the case. I have the doc open in webstorm, so when I run build, I can watch the tag get removed. It's a long doc, and the tag is getting reinserted below the fold. When I scroll down, there it is. \nThanks for your advice.\nI appreciate now that cca is a smart tool ;)\n. After uninstalling my other npm modules and clearing nmp cache, the error changes:\nnpm http 304 https://registry.npmjs.org/base64-js/0.0.7\nnpm http 304 https://registry.npmjs.org/ieee754/1.1.3\nnpm ERR! Error: invalid version: 3001.0001.0000-dev-harmony-fb\nnpm ERR!     at validVersion (/usr/lib/nodejs/read-package-json/read-json.js:573:40)\nnpm ERR!     at final (/usr/lib/nodejs/read-package-json/read-json.js:323:23)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:139:33\nnpm ERR!     at cb (/usr/lib/nodejs/slide/lib/async-map.js:48:11)\nnpm ERR!     at /usr/lib/nodejs/read-package-json/read-json.js:251:40\nnpm ERR!     at fs.js:268:14\nnpm ERR!     at /usr/lib/nodejs/graceful-fs/graceful-fs.js:103:5\nnpm ERR!     at Object.oncomplete (fs.js:107:15)\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     http://bugs.debian.org/npm\nnpm ERR! or use\nnpm ERR!     reportbug --attach /home/bruce/npm-debug.log npm\nnpm ERR! System Linux 3.11.0-12-generic\nnpm ERR! command \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"install\" \"-g\" \"cca\"\nnpm ERR! cwd /home/bruce\nnpm ERR! node -v v0.10.23\nnpm ERR! npm -v 1.2.18\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /home/bruce/npm-debug.log\nnpm ERR! not ok code 0\n. Yes, I've been running several node modules daily on this box. I tried upgrading node, and still the same issue. In any case, I'd been meaning to upgrade to Mint 17, so I did that today, and now now this module installs ok. I know that at one time I tried installing harmony, so maybe there were still some incompatible bits somewhere - I've discovered that windows doesn't have a monopoly on dll hell...\n. I tried using cordova directly and have the same issue. Looks like this is a cordova issue, not a cca issue.\n. No, it still removes my <access origin=\"*\" /> tag. Close this - I'll wait and see if it actually denies access. Maybe it doesn't need it. I found this on https://github.com/apache/cordova-plugin-whitelist:\nWithout any  tags, only requests to file:// URLs are allowed. However, the default Cordova application includes  by default.\nRegarding the clobbering scheme - I see, that explains why the manifest.mobile.json author value overwrites the config.xml author tag text element, but doesn't touch the other attributes of the same tag. \nI'm just not real clear yet on which entries are custom and which are standard, but I'll know when they break ;)\n. Good call! That is exactly the case. I have the doc open in webstorm, so when I run build, I can watch the tag get removed. It's a long doc, and the tag is getting reinserted below the fold. When I scroll down, there it is. \nThanks for your advice.\nI appreciate now that cca is a smart tool ;)\n. ",
    "goje87": "Hey Michal,\nThanks for the solution... It works like charm :)\nOn Sat, Aug 2, 2014 at 12:20 AM, Michal Mocny notifications@github.com\nwrote:\n\nSo the caret in cordova-lib@'^0.21.6' means \"greater than or equal to\n0.21.6\". The \"valid install targets\" that npm is reporting for cordova-lib\nincludes \"0.21.6\", which last I checked is accurately >= 0.21.6 :P\nI'm going to go ahead and assume this is a problem with npm, possibly you\nneed to update your npm version or clear your npm cache.\nTry:\nnpm cache clean\nnpm install -g npm\nnpm install -g cca\nLooking forward to seeing if that works!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/248#issuecomment-50921105\n.\n\n\n. Hey Michal,\nThanks for the solution... It works like charm :)\nOn Sat, Aug 2, 2014 at 12:20 AM, Michal Mocny notifications@github.com\nwrote:\n\nSo the caret in cordova-lib@'^0.21.6' means \"greater than or equal to\n0.21.6\". The \"valid install targets\" that npm is reporting for cordova-lib\nincludes \"0.21.6\", which last I checked is accurately >= 0.21.6 :P\nI'm going to go ahead and assume this is a problem with npm, possibly you\nneed to update your npm version or clear your npm cache.\nTry:\nnpm cache clean\nnpm install -g npm\nnpm install -g cca\nLooking forward to seeing if that works!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/248#issuecomment-50921105\n.\n\n\n. ",
    "remoe": "I need to install API-19\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/tools-check.js#L26\n. I need to install API-19\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/src/tools-check.js#L26\n. ",
    "maikeldaloo": "I'm still getting this on Windows - I have API 19 and Android L fully installed.\n. Hmm.. never mind.\nI was getting the same error while running these commands through Git Bash. I just tried it in cmd and it seems to be working.\nMight be good to highlight this just to avoid confusion :smile: \n. Thanks @kamrik for the explanation :)\n. I'm still getting this on Windows - I have API 19 and Android L fully installed.\n. Hmm.. never mind.\nI was getting the same error while running these commands through Git Bash. I just tried it in cmd and it seems to be working.\nMight be good to highlight this just to avoid confusion :smile: \n. Thanks @kamrik for the explanation :)\n. ",
    "MicronXD": "Certainly :)\nI did some work on org.chromium.indentity, implementing getAccounts and getAccountsByType. Are PRs that go beyond minor enhancements and bugfixes welcome? Or is it preferred that someone closer to the project write the code for the features on the roadmap?\n. Certainly :)\nI did some work on org.chromium.indentity, implementing getAccounts and getAccountsByType. Are PRs that go beyond minor enhancements and bugfixes welcome? Or is it preferred that someone closer to the project write the code for the features on the roadmap?\n. ",
    "zjhiphop": "Still got the same problem: @mmocny \n \"cordova-plugin-crosswalk-webview\": {\n            \"XWALK_VERSION\": \"23+\",\n            \"XWALK_LITEVERSION\": \"xwalk_core_library_canary:17+\",\n            \"XWALK_COMMANDLINE\": \"--disable-pull-to-refresh-effect\",\n            \"XWALK_MODE\": \"embedded\",\n            \"XWALK_MULTIPLEAPK\": \"true\"\n        },. Still got the same problem: @mmocny \n \"cordova-plugin-crosswalk-webview\": {\n            \"XWALK_VERSION\": \"23+\",\n            \"XWALK_LITEVERSION\": \"xwalk_core_library_canary:17+\",\n            \"XWALK_COMMANDLINE\": \"--disable-pull-to-refresh-effect\",\n            \"XWALK_MODE\": \"embedded\",\n            \"XWALK_MULTIPLEAPK\": \"true\"\n        },. ",
    "schme16": "@clelland any progress on this one? I'm super excited at the prospect of reducing the current file size!\n. Further to this, replacing: \norg.chromium.boostrap/api/mobile.js:80 with:\nbgWnd.history.replaceState(null, null, ('file:///android_asset/www/index.html'));\nLet my app start up correctly, including all plugins and Google Play service api calls, such as identity and in app purchases (payments), which rocks because now I can use the BeaconAPI that's only available in Chome beta builds >39!\n. Another temp. solution is to create a file named xwalk-command-line in your platforms/android/assets folder and set the content of the file to: xwalk --disable-web-security.\nAs the flag suggests, it does turn off all the CORS features, so be sure to use it with caution...\n. Thanks for the heads up @agrieve, I npm link'ed to the latest head of each of the libs you mentioned and, sure enough, it worked.\nI assume this will all be sorted out in eventually; is cordova-lib the blocker for 0.5.2 at this point?\n. [INSTALL_FAILED_VERSION_DOWNGRADE] is due to the way the internal build number seems to work with Chrome Mobile Apps when you switch into and out of using crosswalk (or in this case when you upgrade your crosswalk); just bump the version number up and you should be good to go\n. @GustavoCostaW: Just to remove any confusion, you only need to update the manifest.json file, when you run cca prepare the cca tool will make all necissary adjustments to the config.xml file for you.\nAs for the reason there are two, that's because all web apps are moving to using a manifest.json file (see: https://developer.chrome.com/extensions/manifest and https://w3c.github.io/manifest/); this helps keep your app consistent across multiple platforms; while cordova uses the config.xml format, so must be added for you; but as mentioned above, you do not need to manually change the config.xml file, it will get updated when you run the cca prepare command.\n. @darkoverlordofdata: Try adding this to your manifest.json file: \n\"permissions\": [\n    \"<all_urls>\"\n]\nThe only settings that get clobbered are ones that the manifest file can change, so fully custom entries should be fine, but entries like the access control, icons, etc, will get clobbered with values from your manifest files.\nReference: https://developer.chrome.com/extensions/match_patterns\n. @darkoverlordofdata: Are you sure it's not being removed because it's already added:\n\nAbove is a screenshot from one of my config.xml files, with the great whopping line of hard to read attributes that are added by cca for us, but as you can see from the highlighting, the access origin attribute is present (just hard to spot).\n. @clelland any progress on this one? I'm super excited at the prospect of reducing the current file size!\n. Further to this, replacing: \norg.chromium.boostrap/api/mobile.js:80 with:\nbgWnd.history.replaceState(null, null, ('file:///android_asset/www/index.html'));\nLet my app start up correctly, including all plugins and Google Play service api calls, such as identity and in app purchases (payments), which rocks because now I can use the BeaconAPI that's only available in Chome beta builds >39!\n. Another temp. solution is to create a file named xwalk-command-line in your platforms/android/assets folder and set the content of the file to: xwalk --disable-web-security.\nAs the flag suggests, it does turn off all the CORS features, so be sure to use it with caution...\n. Thanks for the heads up @agrieve, I npm link'ed to the latest head of each of the libs you mentioned and, sure enough, it worked.\nI assume this will all be sorted out in eventually; is cordova-lib the blocker for 0.5.2 at this point?\n. [INSTALL_FAILED_VERSION_DOWNGRADE] is due to the way the internal build number seems to work with Chrome Mobile Apps when you switch into and out of using crosswalk (or in this case when you upgrade your crosswalk); just bump the version number up and you should be good to go\n. @GustavoCostaW: Just to remove any confusion, you only need to update the manifest.json file, when you run cca prepare the cca tool will make all necissary adjustments to the config.xml file for you.\nAs for the reason there are two, that's because all web apps are moving to using a manifest.json file (see: https://developer.chrome.com/extensions/manifest and https://w3c.github.io/manifest/); this helps keep your app consistent across multiple platforms; while cordova uses the config.xml format, so must be added for you; but as mentioned above, you do not need to manually change the config.xml file, it will get updated when you run the cca prepare command.\n. @darkoverlordofdata: Try adding this to your manifest.json file: \n\"permissions\": [\n    \"<all_urls>\"\n]\nThe only settings that get clobbered are ones that the manifest file can change, so fully custom entries should be fine, but entries like the access control, icons, etc, will get clobbered with values from your manifest files.\nReference: https://developer.chrome.com/extensions/match_patterns\n. @darkoverlordofdata: Are you sure it's not being removed because it's already added:\n\nAbove is a screenshot from one of my config.xml files, with the great whopping line of hard to read attributes that are added by cca for us, but as you can see from the highlighting, the access origin attribute is present (just hard to spot).\n. ",
    "oahziur": "@felixhammerl A workaround for https://code.google.com/p/chromium/issues/detail?id=403076 is calling setPaused(sockId, true)  before making a tcp connection, upgrading to ssl, and then setPaused(sockId, false)\nHere is a sample test on chrome https://github.com/MobileChromeApps/mobile-chrome-apps/blob/8292575782d06d242907a8848aee05896c2298bf/chrome-cordova/chrome-apps-api-tests/tests/auto/test.chrome.sockets.tcp.js#L259\n. @felixhammerl  I didn't know any good solution for STARTTLS now (both for Chrome Desktop and iOS).\nHowever, I found that the pending read can be consumed by receiving some data after paused, and the receive event will also be called. If you setPaused before sending STARTTLS, the pending read will be handled. For example, \n```\nfunction trySTARTTLS() {\n  var receiveCounter = 0;\n  var startTLSReceiver = function(info) {\n    receiveCounter++;\nif (receiveCounter == 2) {\n  chrome.sockets.tcp.setPaused(info.socketId, true);\n  chrome.sockets.tcp.send(info.socketId, stringToArrayBuffer('STARTTLS\\r\\n'), function(result) {\n  });\n} else if (receiveCounter == 3) { // Ready To Start STL Response\n  chrome.sockets.tcp.secure(info.socketId, {tlsVersion: {min: 'ssl3', max: 'tls1.2'}}, function(result) {\n    logger('secure result: ' + result);\n  });\n}\n\n}\n  var addr = 'smtp.gmail.com';\n  var port = 25;\n  chrome.sockets.tcp.onReceive.addListener(startTLSReceiver);\n  chrome.sockets.tcp.create(function(createInfo) {\n    chrome.sockets.tcp.connect(createInfo.socketId, addr, port, function(result) {\n      chrome.sockets.tcp.send(createInfo.socketId, stringToArrayBuffer('HELO me.com\\r\\n'), function(result) {\n      });\n    });\n  });\n}\n```\nI have tested this on Google Chrome    39.0.2171.27 (Official Build) beta. This won't work on iOS for now, since the plugin won't send received data after paused.\n. The secure PR has been merged into master. TLS should work for both iOS and Android with setPaused(sockId, true) before making a connection. STARTTLS works for Android only (no pause needed). I will see how chrome desktop fix the bug and try to fix the iOS.\n. @felixhammerl I am waiting on the fix of Chrome desktop,  #18 of (https://code.google.com/p/chromium/issues/detail?id=403076)\n.  I think this branch didn't merge into master, but closed due to android-sockets-tcp deleted. Should I rebase this one on master and send another PR?\n. This will fail on android and \"secure\" for iOS until #348 landed.\n. @agrieve  Fixed all issues and rebased on master. PTAL\n. Closed by 7ca4a4f3714f4f776c8d32c97e0257a864d0bf71\n. @mmocny This was fixed in 21ad0f8700f7829573dfb2dbb82ec3d1648843ea\n. @agrieve I also tried to use a while loop to read (non-blocking mode) into received buffer, but still get some 4096 size received data.\n. The problem was the very first Selector.open() takes about 100ms.\n. @mmocny I moved Selector.open() to init method for now (pending PR #406 ), and I don't think we should move this to a background thread since we want to ensure the selector thread is always ready before user making any API calls.\nIf we have this kind of issue with other APIs (not register events), we can move them to the selector thread.\n. PTAL\n. PTAL\n. @gurkerl83 chrome.iosSocketsCommon compiles with ARC, so I don't think ARC is the problem.\nDo you have other plugin that uses GCDAsyncSocket or GCDAsyncUdpSocket? Are you using any other sockets library?\n. @gurkerl83 I think the problem is here LAppGyver/Libraries/CocoaHTTPServer/Core in your error messages. The CocoaHTTPServer library uses GCDAsyncSocket (https://github.com/robbiehanson/CocoaHTTPServer/tree/master/Vendor)\n. @gurkerl83 I realized that the CocoaHTTPServer only uses GCDAsyncSocket. chrome.sockets.udp only requires GCDAsyncUdpSocket. Simply removing GCDAsyncSocket.* from the original iossocketcommon plugin may solve your problem.\n.  For TypeError: SVGGElement is not a function at polymer.js:1274, I think it is related to https://github.com/Polymer/polymer-gestures/commit/f13f475544e3f16b0cb0f3eda94aded3ee64fd3d\nThis fix is not released yet, so the easiest way should be adding this at polymer.js:1276\n. @thomasmarkiewicz There is a new version of polymer-gestures released today 0.5.2, which fixed the issue about SVGGElement.\n. @felixhammerl A workaround for https://code.google.com/p/chromium/issues/detail?id=403076 is calling setPaused(sockId, true)  before making a tcp connection, upgrading to ssl, and then setPaused(sockId, false)\nHere is a sample test on chrome https://github.com/MobileChromeApps/mobile-chrome-apps/blob/8292575782d06d242907a8848aee05896c2298bf/chrome-cordova/chrome-apps-api-tests/tests/auto/test.chrome.sockets.tcp.js#L259\n. @felixhammerl  I didn't know any good solution for STARTTLS now (both for Chrome Desktop and iOS).\nHowever, I found that the pending read can be consumed by receiving some data after paused, and the receive event will also be called. If you setPaused before sending STARTTLS, the pending read will be handled. For example, \n```\nfunction trySTARTTLS() {\n  var receiveCounter = 0;\n  var startTLSReceiver = function(info) {\n    receiveCounter++;\nif (receiveCounter == 2) {\n  chrome.sockets.tcp.setPaused(info.socketId, true);\n  chrome.sockets.tcp.send(info.socketId, stringToArrayBuffer('STARTTLS\\r\\n'), function(result) {\n  });\n} else if (receiveCounter == 3) { // Ready To Start STL Response\n  chrome.sockets.tcp.secure(info.socketId, {tlsVersion: {min: 'ssl3', max: 'tls1.2'}}, function(result) {\n    logger('secure result: ' + result);\n  });\n}\n\n}\n  var addr = 'smtp.gmail.com';\n  var port = 25;\n  chrome.sockets.tcp.onReceive.addListener(startTLSReceiver);\n  chrome.sockets.tcp.create(function(createInfo) {\n    chrome.sockets.tcp.connect(createInfo.socketId, addr, port, function(result) {\n      chrome.sockets.tcp.send(createInfo.socketId, stringToArrayBuffer('HELO me.com\\r\\n'), function(result) {\n      });\n    });\n  });\n}\n```\nI have tested this on Google Chrome    39.0.2171.27 (Official Build) beta. This won't work on iOS for now, since the plugin won't send received data after paused.\n. The secure PR has been merged into master. TLS should work for both iOS and Android with setPaused(sockId, true) before making a connection. STARTTLS works for Android only (no pause needed). I will see how chrome desktop fix the bug and try to fix the iOS.\n. @felixhammerl I am waiting on the fix of Chrome desktop,  #18 of (https://code.google.com/p/chromium/issues/detail?id=403076)\n.  I think this branch didn't merge into master, but closed due to android-sockets-tcp deleted. Should I rebase this one on master and send another PR?\n. This will fail on android and \"secure\" for iOS until #348 landed.\n. @agrieve  Fixed all issues and rebased on master. PTAL\n. Closed by 7ca4a4f3714f4f776c8d32c97e0257a864d0bf71\n. @mmocny This was fixed in 21ad0f8700f7829573dfb2dbb82ec3d1648843ea\n. @agrieve I also tried to use a while loop to read (non-blocking mode) into received buffer, but still get some 4096 size received data.\n. The problem was the very first Selector.open() takes about 100ms.\n. @mmocny I moved Selector.open() to init method for now (pending PR #406 ), and I don't think we should move this to a background thread since we want to ensure the selector thread is always ready before user making any API calls.\nIf we have this kind of issue with other APIs (not register events), we can move them to the selector thread.\n. PTAL\n. PTAL\n. @gurkerl83 chrome.iosSocketsCommon compiles with ARC, so I don't think ARC is the problem.\nDo you have other plugin that uses GCDAsyncSocket or GCDAsyncUdpSocket? Are you using any other sockets library?\n. @gurkerl83 I think the problem is here LAppGyver/Libraries/CocoaHTTPServer/Core in your error messages. The CocoaHTTPServer library uses GCDAsyncSocket (https://github.com/robbiehanson/CocoaHTTPServer/tree/master/Vendor)\n. @gurkerl83 I realized that the CocoaHTTPServer only uses GCDAsyncSocket. chrome.sockets.udp only requires GCDAsyncUdpSocket. Simply removing GCDAsyncSocket.* from the original iossocketcommon plugin may solve your problem.\n.  For TypeError: SVGGElement is not a function at polymer.js:1274, I think it is related to https://github.com/Polymer/polymer-gestures/commit/f13f475544e3f16b0cb0f3eda94aded3ee64fd3d\nThis fix is not released yet, so the easiest way should be adding this at polymer.js:1276\n. @thomasmarkiewicz There is a new version of polymer-gestures released today 0.5.2, which fixed the issue about SVGGElement.\n. ",
    "garrows": "Wow, so Chrome on iOS is actually safari. That was unexpected. \nThanks anyway. \n. Wow, so Chrome on iOS is actually safari. That was unexpected. \nThanks anyway. \n. ",
    "mrkvngrkn": "Ah, thanks! Totally forgot to set the application theme to translucent.\nThere is one more thing. I've also tried to implement and sort of combine the cordova PushPlugin which led to a notification for a split second right before the black screen appeared and then disappeared. When I opened the app all the notifications were doubled (as expected). Not sure if this helps :)\n. Ah, thanks! Totally forgot to set the application theme to translucent.\nThere is one more thing. I've also tried to implement and sort of combine the cordova PushPlugin which led to a notification for a split second right before the black screen appeared and then disappeared. When I opened the app all the notifications were doubled (as expected). Not sure if this helps :)\n. ",
    "MehSha": "i am at CADT 0.8.2 (got it today) i did not got your last sentence of  answer 1.   \"it had to have been build with those plugins pre-installed\", CADT has those missing plugins that's why it runs perfectly inside the CADT, it says my app does not have them!\nbecause i am newbie in android, I do not know how to debug the app that i install  by instling debug.apk to find out if it's really a problem with those pluins.\nany way i have change the plugin-map.js file of cca in global node_modules to map those permissions to the plugin names with uppercase (correct letters) it solves the cca prepare problem (tying to reinstall) but still all other ssues are in place.\nthanks\n. sorry closed it by clicking wrong button \n. thans for your help, but Nope. i have installed git version (which includes lat commit about local plugins) but no change!.\ni think the problem should be something silly. here i go through what I do you may point out the sily action: (i have win8.1 64 bit with jdk 8 and adt+eclipse installed, ant is installed)\n1- cca create myApp --copy-from=chromeapp\n2- cca prepare\n3- cca build\n4- cca push --target=192.168.1.x\n the last step is taken while chrome app developer tool is running. inside CADT it reports update of my app and shows \"plugins: 17 total, 3 missing) but when i press launch the app works.\nnow i copy the myap-debug.apk from myApp/platforms/android.out and put it in my tablet and install it but hen runnning, it load but does not work (get images from camera). \nthen i run cca build --release and install the output but it does not even install....\nreally confused what to do...\nhere is link to chromeapp project (unfortunatelly you cant test it as it tries to connect to a local server) you can examine if something is wrong with it:\nhttps://dl.dropboxusercontent.com/u/17307669/chromeApp.7z\nalso here is buildlog file:\nhttps://dl.dropboxusercontent.com/u/17307669/buildLog.txt\nthanks is advance\n. clelland: everything is in place as you described, but still not working....\nthe same pp works on chrome app launcher, but it does not build correctly on cca...\n. and i have noticed another error which may be the cause of black screen, that is  a javascript error that says \"chrome.runtime.sendMessage()\" is undefined.\nbut that is correct in my chrome app launcher...\nis there any specific plugin which i should load? my plugins ls shows:\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.0 \"File\"\norg.apache.cordova.inappbrowser 0.5.1 \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.11 \"Network Information\"\norg.apache.cordova.statusbar 0.1.7 \"StatusBar\"\norg.chromium.audiocapture 1.0.1 \"Chrome AudioCapture API\"\norg.chromium.bootstrap 1.0.2 \"Chrome Apps Core\"\norg.chromium.common 1.0.2 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.1 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.1 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.0 \"XHR blob returnType shim\"\norg.chromium.polyfill.customevent 1.0.2 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.1 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.2 \"Chrome App Runtime\"\norg.chromium.storage 1.0.2 \"Chrome Apps Storage API\"\norg.chromium.videocapture 1.0.1 \"Chrome VideoCapture API\"\n. i found the black screen has nothing to do with that mentioned problem. it was caused by a javascript error. that error always shows.\nregarding the dialogue no it's a angular-bootstrap modal.\nchrome.runtime.sendMessage is not implemented and is not documented in APIstatus.\n. @agrieve actually this is not a generic sip client, we have a project of designing a video door bell ring and we chose SIP (freeswitch as server) and webRTC as the software stack (the second one was very bold decision as it feels not ready yet). after many challenges (with freeswitch and chrome) it is working now. maybe in future we release a free SIP Client to chrome store, it should be easy now (and with your help we can create android client by few cca commands!)\nanyway, although i am not familiar with your code base, it sounds like a necessity, much of chrome app power comes from that persistent background page, a whole category of apps need it.\n. Reason: a phone app.\nit should ring and come to front no matter what use is engaged in.\nactually what we are doing is designing a video door bell ring using SIP and webRTC technologies. it should ring and user should notice ....\nanyway it seems to be very useful in such a circumstances and I highly appreciate if you put it in TODO list.\n. may i have an estimate of the time it will get implemented?\n. I thank you and the wonderful team at this project, one of most positive and responsive teams i have seen.\n. hi, this maybe my ignorance of your API support, but does implementing this feature means the app will pop up even when the device is locked? \nshould i use notification API (and is that supported?) for that purpose?\n. may i know the status of the implementation... it has exceeded the previous estimation ...\n. i am at CADT 0.8.2 (got it today) i did not got your last sentence of  answer 1.   \"it had to have been build with those plugins pre-installed\", CADT has those missing plugins that's why it runs perfectly inside the CADT, it says my app does not have them!\nbecause i am newbie in android, I do not know how to debug the app that i install  by instling debug.apk to find out if it's really a problem with those pluins.\nany way i have change the plugin-map.js file of cca in global node_modules to map those permissions to the plugin names with uppercase (correct letters) it solves the cca prepare problem (tying to reinstall) but still all other ssues are in place.\nthanks\n. sorry closed it by clicking wrong button \n. thans for your help, but Nope. i have installed git version (which includes lat commit about local plugins) but no change!.\ni think the problem should be something silly. here i go through what I do you may point out the sily action: (i have win8.1 64 bit with jdk 8 and adt+eclipse installed, ant is installed)\n1- cca create myApp --copy-from=chromeapp\n2- cca prepare\n3- cca build\n4- cca push --target=192.168.1.x\n the last step is taken while chrome app developer tool is running. inside CADT it reports update of my app and shows \"plugins: 17 total, 3 missing) but when i press launch the app works.\nnow i copy the myap-debug.apk from myApp/platforms/android.out and put it in my tablet and install it but hen runnning, it load but does not work (get images from camera). \nthen i run cca build --release and install the output but it does not even install....\nreally confused what to do...\nhere is link to chromeapp project (unfortunatelly you cant test it as it tries to connect to a local server) you can examine if something is wrong with it:\nhttps://dl.dropboxusercontent.com/u/17307669/chromeApp.7z\nalso here is buildlog file:\nhttps://dl.dropboxusercontent.com/u/17307669/buildLog.txt\nthanks is advance\n. clelland: everything is in place as you described, but still not working....\nthe same pp works on chrome app launcher, but it does not build correctly on cca...\n. and i have noticed another error which may be the cause of black screen, that is  a javascript error that says \"chrome.runtime.sendMessage()\" is undefined.\nbut that is correct in my chrome app launcher...\nis there any specific plugin which i should load? my plugins ls shows:\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.0 \"File\"\norg.apache.cordova.inappbrowser 0.5.1 \"InAppBrowser\"\norg.apache.cordova.labs.keyboard 0.1.2 \"Keyboard\"\norg.apache.cordova.network-information 0.2.11 \"Network Information\"\norg.apache.cordova.statusbar 0.1.7 \"StatusBar\"\norg.chromium.audiocapture 1.0.1 \"Chrome AudioCapture API\"\norg.chromium.bootstrap 1.0.2 \"Chrome Apps Core\"\norg.chromium.common 1.0.2 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.1 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.1 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.0 \"XHR blob returnType shim\"\norg.chromium.polyfill.customevent 1.0.2 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.1 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.2 \"Chrome App Runtime\"\norg.chromium.storage 1.0.2 \"Chrome Apps Storage API\"\norg.chromium.videocapture 1.0.1 \"Chrome VideoCapture API\"\n. i found the black screen has nothing to do with that mentioned problem. it was caused by a javascript error. that error always shows.\nregarding the dialogue no it's a angular-bootstrap modal.\nchrome.runtime.sendMessage is not implemented and is not documented in APIstatus.\n. @agrieve actually this is not a generic sip client, we have a project of designing a video door bell ring and we chose SIP (freeswitch as server) and webRTC as the software stack (the second one was very bold decision as it feels not ready yet). after many challenges (with freeswitch and chrome) it is working now. maybe in future we release a free SIP Client to chrome store, it should be easy now (and with your help we can create android client by few cca commands!)\nanyway, although i am not familiar with your code base, it sounds like a necessity, much of chrome app power comes from that persistent background page, a whole category of apps need it.\n. Reason: a phone app.\nit should ring and come to front no matter what use is engaged in.\nactually what we are doing is designing a video door bell ring using SIP and webRTC technologies. it should ring and user should notice ....\nanyway it seems to be very useful in such a circumstances and I highly appreciate if you put it in TODO list.\n. may i have an estimate of the time it will get implemented?\n. I thank you and the wonderful team at this project, one of most positive and responsive teams i have seen.\n. hi, this maybe my ignorance of your API support, but does implementing this feature means the app will pop up even when the device is locked? \nshould i use notification API (and is that supported?) for that purpose?\n. may i know the status of the implementation... it has exceeded the previous estimation ...\n. ",
    "rohanshar": "I am getting the same error.\nrunning androidon command prompt says its not recognized.\npath doesn't have any pointers to android. \n. I am getting the same error.\nrunning androidon command prompt says its not recognized.\npath doesn't have any pointers to android. \n. ",
    "adamvy-google": "ls -l output to see the creation times.  The lowercase version is newer.\ndrwxr-x---  2 adamvy eng 4096 Sep 10 11:12 org.chromium.polyfill.CustomEvent\n  drwxr-x---  2 adamvy eng 4096 Sep 10 14:57 org.chromium.polyfill.customevent\n. Removing the plugins dir gave me this error\nError: Uh oh!\n\"/home/adamvy/foam-framework/android/MBug/platforms/android/src/org/chromium/ChromeStorage.java\"\nalready exists!\n    at Object.module.exports.common.copyNewFile\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/platforms/common.js:58:19)\n    at module.exports.source-file.install\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/platforms/android.js:51:20)\n    at Object.ActionStack.process\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/util/action-stack.js:70:25)\n    at handleInstall\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/install.js:560:20)\n    at\n/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/install.js:320:20\n    at _fulfilled\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:798:54)\n    at self.promiseDispatch.done\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:827:30)\n    at Promise.promise.promiseDispatch\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:760:13)\n    at\n/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:526:49\n    at flush\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\nHook failed with error code 1:\n/home/adamvy/foam-framework/android/MBug/hooks/before_prepare/cca-pre-prepare.js\nwhile trying to run cca prepare.\nEventually I just nuked the entire platforms/android and plugins directory\nwhich worked.\nOn Wed, Sep 10, 2014 at 3:55 PM, Mark Koudritsky notifications@github.com\nwrote:\n\nTry removing the plugins dir and running cca prepare again. It's related\nto upper/lower case bug in plugin IDs we are trying to fix. See #310\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/310\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/314#issuecomment-55173221\n.\n. I hadn't updated cca when this happened for me (as far as I know).  I had\njust been doing cca prepare/cca run repeatedly\n\nOn Thu, Sep 11, 2014 at 11:03 AM, Michal Mocny notifications@github.com\nwrote:\n\nIf you update cca, it should prompt for upgrade which will re-install all\nplugins. But when we published plugins with new package ids, is it possible\nan existing cca installed the new plugins in an existing project?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/314#issuecomment-55276970\n.\n. Yes that appears to be updating correctly.\n\nI'm not convinced this is still happening.  Let me repro, maybe I was just\nconfused :)\nOn Fri, Sep 19, 2014 at 3:09 PM, Michal Mocny notifications@github.com\nwrote:\n\nCan you check if the platform manifest.json is changing:\nplatforms/android/assets/www/manifest.json. This file should have your\nupdated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your\nproject, or android build step iteself.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56221163\n.\n. Okay it's a little more subtle than what I thought.\n\nIf I bump the versonCode, the first build still has the wrong version, but\nif I immediately build again, the versonCode in the APK is now correct.\nIs it possible that cca is not updating the android build process where it\nneeds to?\nOn Fri, Sep 19, 2014 at 3:17 PM, Adam Van Ymeren adamvy@google.com wrote:\n\nYes that appears to be updating correctly.\nI'm not convinced this is still happening.  Let me repro, maybe I was just\nconfused :)\nOn Fri, Sep 19, 2014 at 3:09 PM, Michal Mocny notifications@github.com\nwrote:\n\nCan you check if the platform manifest.json is changing:\nplatforms/android/assets/www/manifest.json. This file should have your\nupdated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your\nproject, or android build step iteself.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56221163\n.\n. Cool thanks!\n\n\nOn Mon, Sep 22, 2014 at 4:04 PM, Michal Mocny notifications@github.com\nwrote:\n\nThis was a bug in cordova-lib, and has been fixed upstream in CB-7615\nhttps://issues.apache.org/jira/browse/CB-7615.\nWill need to wait for cordova-lib submodule update, and cca release, for\nthis to actually make its way into cca.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56433000\n.\n. No worries, I'll script around it.  Thanks anyways!\n\nOn Mon, Sep 22, 2014 at 5:01 PM, Michal Mocny notifications@github.com\nwrote:\n\nSo.. this won't be quite as trivial as I expected. At the moment our\nprepare step has no knowledge of target build type or platform. We've\ngotten away with this by just preparing for both iOS/Android always, even\nif your build is only for one platform, and this hasn't harmed us so far.\nWe cannot do the same for release/debug builds since these are mutually\nexclusive.\nIn order to know the targets, we will have to parse the CLI. The right\nsolution is to have hooks get this as input, which may be possible once we\nmove to programmatic hooks implementation which @kamrik\nhttps://github.com/kamrik is working on.\nIn the mean time, I suggest using a shell script to toggle manifests, and\njust keep two manifest copies around. Sorry :(\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/331#issuecomment-56442395\n.\n. ls -l output to see the creation times.  The lowercase version is newer.\n\ndrwxr-x---  2 adamvy eng 4096 Sep 10 11:12 org.chromium.polyfill.CustomEvent\n  drwxr-x---  2 adamvy eng 4096 Sep 10 14:57 org.chromium.polyfill.customevent\n. Removing the plugins dir gave me this error\nError: Uh oh!\n\"/home/adamvy/foam-framework/android/MBug/platforms/android/src/org/chromium/ChromeStorage.java\"\nalready exists!\n    at Object.module.exports.common.copyNewFile\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/platforms/common.js:58:19)\n    at module.exports.source-file.install\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/platforms/android.js:51:20)\n    at Object.ActionStack.process\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/util/action-stack.js:70:25)\n    at handleInstall\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/install.js:560:20)\n    at\n/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/src/plugman/install.js:320:20\n    at _fulfilled\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:798:54)\n    at self.promiseDispatch.done\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:827:30)\n    at Promise.promise.promiseDispatch\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:760:13)\n    at\n/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:526:49\n    at flush\n(/home/adamvy/node/lib/node_modules/cca/node_modules/cordova-lib/node_modules/q/q.js:108:17)\nHook failed with error code 1:\n/home/adamvy/foam-framework/android/MBug/hooks/before_prepare/cca-pre-prepare.js\nwhile trying to run cca prepare.\nEventually I just nuked the entire platforms/android and plugins directory\nwhich worked.\nOn Wed, Sep 10, 2014 at 3:55 PM, Mark Koudritsky notifications@github.com\nwrote:\n\nTry removing the plugins dir and running cca prepare again. It's related\nto upper/lower case bug in plugin IDs we are trying to fix. See #310\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/310\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/314#issuecomment-55173221\n.\n. I hadn't updated cca when this happened for me (as far as I know).  I had\njust been doing cca prepare/cca run repeatedly\n\nOn Thu, Sep 11, 2014 at 11:03 AM, Michal Mocny notifications@github.com\nwrote:\n\nIf you update cca, it should prompt for upgrade which will re-install all\nplugins. But when we published plugins with new package ids, is it possible\nan existing cca installed the new plugins in an existing project?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/314#issuecomment-55276970\n.\n. Yes that appears to be updating correctly.\n\nI'm not convinced this is still happening.  Let me repro, maybe I was just\nconfused :)\nOn Fri, Sep 19, 2014 at 3:09 PM, Michal Mocny notifications@github.com\nwrote:\n\nCan you check if the platform manifest.json is changing:\nplatforms/android/assets/www/manifest.json. This file should have your\nupdated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your\nproject, or android build step iteself.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56221163\n.\n. Okay it's a little more subtle than what I thought.\n\nIf I bump the versonCode, the first build still has the wrong version, but\nif I immediately build again, the versonCode in the APK is now correct.\nIs it possible that cca is not updating the android build process where it\nneeds to?\nOn Fri, Sep 19, 2014 at 3:17 PM, Adam Van Ymeren adamvy@google.com wrote:\n\nYes that appears to be updating correctly.\nI'm not convinced this is still happening.  Let me repro, maybe I was just\nconfused :)\nOn Fri, Sep 19, 2014 at 3:09 PM, Michal Mocny notifications@github.com\nwrote:\n\nCan you check if the platform manifest.json is changing:\nplatforms/android/assets/www/manifest.json. This file should have your\nupdated version code and oauth info.\nThis will help tell us if the problem is in cca preparation of your\nproject, or android build step iteself.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56221163\n.\n. Cool thanks!\n\n\nOn Mon, Sep 22, 2014 at 4:04 PM, Michal Mocny notifications@github.com\nwrote:\n\nThis was a bug in cordova-lib, and has been fixed upstream in CB-7615\nhttps://issues.apache.org/jira/browse/CB-7615.\nWill need to wait for cordova-lib submodule update, and cca release, for\nthis to actually make its way into cca.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/328#issuecomment-56433000\n.\n. No worries, I'll script around it.  Thanks anyways!\n\nOn Mon, Sep 22, 2014 at 5:01 PM, Michal Mocny notifications@github.com\nwrote:\n\nSo.. this won't be quite as trivial as I expected. At the moment our\nprepare step has no knowledge of target build type or platform. We've\ngotten away with this by just preparing for both iOS/Android always, even\nif your build is only for one platform, and this hasn't harmed us so far.\nWe cannot do the same for release/debug builds since these are mutually\nexclusive.\nIn order to know the targets, we will have to parse the CLI. The right\nsolution is to have hooks get this as input, which may be possible once we\nmove to programmatic hooks implementation which @kamrik\nhttps://github.com/kamrik is working on.\nIn the mean time, I suggest using a shell script to toggle manifests, and\njust keep two manifest copies around. Sorry :(\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/331#issuecomment-56442395\n.\n. \n",
    "longsleep": "I am facing a similar issue here. I have an app which does have a Websocket connection which needs to be kept open to receive incoming messages when in the background (or at least it needs to restart the connection as soon as possibl when in the background).\nMy use case is that the app can keep a continuous Websocket connection to a remote server and be able to respond (like with a notification) if some data comes in.\n. I can confirm that ploymer paper-input require two taps to make the soft-keyboard show with the currently released cordova-crosswalk-engine getting installed with cca. Also the steps provided above do seem to fix support to install the latest head of cordova-crosswalk-engine. Though the change to mobile.js does have side effects - though without it the app crashes. \nSo - what are the plans to upgrade to latest crosswalk engine with Chromium 39 and later so the cca apps can use the very latest of the features. Manually upgrading this seems scary and the resulting app does have various issues.\n. I also have an example app, which does show this behavior: https://github.com/longsleep/polymer-mobile-cca-example\nRun this app with cca run android --device and it flickers as soon as the keyboard is shown (click the + icon to show a input field).\n. I did some digging and found that changing windowSoftInputMode from adjustResize to adjustPan in platforms/android/AndroidManifest.xml resolves the flickering. Not sure why and if the adjustResize is the default. \nAs this setting has issues with some web apps i think the default should either be changed to adjustResize or the value should be added to manifest.mobile.json\n. I am facing a similar issue here. I have an app which does have a Websocket connection which needs to be kept open to receive incoming messages when in the background (or at least it needs to restart the connection as soon as possibl when in the background).\nMy use case is that the app can keep a continuous Websocket connection to a remote server and be able to respond (like with a notification) if some data comes in.\n. I can confirm that ploymer paper-input require two taps to make the soft-keyboard show with the currently released cordova-crosswalk-engine getting installed with cca. Also the steps provided above do seem to fix support to install the latest head of cordova-crosswalk-engine. Though the change to mobile.js does have side effects - though without it the app crashes. \nSo - what are the plans to upgrade to latest crosswalk engine with Chromium 39 and later so the cca apps can use the very latest of the features. Manually upgrading this seems scary and the resulting app does have various issues.\n. I also have an example app, which does show this behavior: https://github.com/longsleep/polymer-mobile-cca-example\nRun this app with cca run android --device and it flickers as soon as the keyboard is shown (click the + icon to show a input field).\n. I did some digging and found that changing windowSoftInputMode from adjustResize to adjustPan in platforms/android/AndroidManifest.xml resolves the flickering. Not sure why and if the adjustResize is the default. \nAs this setting has issues with some web apps i think the default should either be changed to adjustResize or the value should be added to manifest.mobile.json\n. ",
    "luisreyes": "I need to setup chrome alarms when the device turns on without having to open the app. My application would be kind of pointless without this. I started rewriting the app in native since this doesn't seem to be ready. Any updates?\n. Fixed on 0.6.0-rc1\n. I need to setup chrome alarms when the device turns on without having to open the app. My application would be kind of pointless without this. I started rewriting the app in native since this doesn't seem to be ready. Any updates?\n. Fixed on 0.6.0-rc1\n. ",
    "AleksMeshkov": "I face the same thing\n. Just a little update. In my case this happens only when I use the GenyMotion simulator.\n. Not sure I have fixed it. Still need help.\n. Can you guys also have a look to the referenced issue I'v attached?\n. I'v found the solution:\nhttps://github.com/gaochun/cordova-plugin-file-transfer/commit/0063249e279b99a0feb4601650fc3a4c9e8a8ed2\n. BTW using pure Crosswalk with Cordova doesn't have any issues with the splash screen. So I think the problem related mostly to CCA than to Crosswalk. Can I contribute? Where shall I start the investigation? Thanks.\n. @agrieve , @mmocny, @clelland, guys can you please help? Is there any workaround for this? I can't publish the app to Play Market without a splash screen. Thanks in advance!\n. @felquis thank you very much!!!\n. Seems like changing \ndependencies {\n        classpath 'com.android.tools.build:gradle:0.10.+'\n    }\nto\nclasspath 'com.android.tools.build:gradle:0.14+'\nin my build.gradle had fixed that. \n. I face the same thing\n. Just a little update. In my case this happens only when I use the GenyMotion simulator.\n. Not sure I have fixed it. Still need help.\n. Can you guys also have a look to the referenced issue I'v attached?\n. I'v found the solution:\nhttps://github.com/gaochun/cordova-plugin-file-transfer/commit/0063249e279b99a0feb4601650fc3a4c9e8a8ed2\n. BTW using pure Crosswalk with Cordova doesn't have any issues with the splash screen. So I think the problem related mostly to CCA than to Crosswalk. Can I contribute? Where shall I start the investigation? Thanks.\n. @agrieve , @mmocny, @clelland, guys can you please help? Is there any workaround for this? I can't publish the app to Play Market without a splash screen. Thanks in advance!\n. @felquis thank you very much!!!\n. Seems like changing \ndependencies {\n        classpath 'com.android.tools.build:gradle:0.10.+'\n    }\nto\nclasspath 'com.android.tools.build:gradle:0.14+'\nin my build.gradle had fixed that. \n. ",
    "zhsngq": "not have https\n. not have https\n. ",
    "ghost": "If I open the project in XCode itself, everything seems to work.\n. Deleting the contents of SharedPrecompiledHeaders resolved the issue.\n. Thanks for the info. Sounds like a bit of work then.\n. If I open the project in XCode itself, everything seems to work.\n. Deleting the contents of SharedPrecompiledHeaders resolved the issue.\n. Thanks for the info. Sounds like a bit of work then.\n. ",
    "shelleyp": "No, this is it. I'm right in the middle of a tight deadline, but I'll revisit next week and see if I can get better error documentation, and then update this issue.\n. No, this is it. I'm right in the middle of a tight deadline, but I'll revisit next week and see if I can get better error documentation, and then update this issue.\n. ",
    "sloisel": "OK I've fixed my problem.\n1. You need build tools version 19.1. I know it says \"or later\", but it's lying.\n2. You need to install JDK 8 (yuck).\n. OK I've fixed my problem.\n1. You need build tools version 19.1. I know it says \"or later\", but it's lying.\n2. You need to install JDK 8 (yuck).\n. ",
    "vladipus": "I have the same thing going. My cert is verfified in desktop browser wiith a note of deprecation. The logcat doesn't seem to show anything related to certs.\n. I have the same thing going. My cert is verfified in desktop browser wiith a note of deprecation. The logcat doesn't seem to show anything related to certs.\n. ",
    "eahutchins": "In case anyone else runs into problems setting up an express server & chrome app build in the same tree, I'm documenting what worked for me. My tree is laid out like:\nserver/\n    client/ <- static content\n    views/ <- .jade templates\n    server.js\napp/\n    www/ <- symlink to ../server/client\nadd a app/hooks/before_prepare/compile_jade.js something like:\n``` javascript\n!/usr/bin/env node\nvar fs = require('fs');\nvar path = require('path');\nfunction compile_jade(src, dst) {\n    var jade = require('jade');\n    var options = {\n        filename: src,\n        pretty: true\n    };\ntry {\n    var stat = fs.lstatSync(src);\n    if (stat.isFile()) {\n        var str = fs.readFileSync(src, 'utf8');\n        var fn = jade.compile(str, options);\n        fs.writeFileSync(dst, fn(options));\n    }\n} catch (e) {\n    throw e;\n}\n\n}\nvar www = './www';\nvar server_views = '../server/views';\n// If ./www/main.jade exists, compile it to index.html (note we change the name to prevent\n// the server from serving the like-named .html instead of processing the .jade file)\nvar jade_index = path.join(server_views, 'main.jade');\nif (fs.existsSync(jade_index)) {\n    compile_jade(jade_index, path.join(www, 'index.html'));\n}\n```\nthen to avoid having express serve the generated index.html for default routes, change the jade template to something other than index.jade (I used main.jade):\njavascript\n// serve static content, defaulting to 'main.html' to ignore cca-generated index.html\napp.use(express.static(path.join(__dirname, 'client'), { index: ['main.html'] }));\nrouter.get('*', function(req, res) {\n    return res.render('main');\n});\nNow I can run the server and debug with my browser on localhost, and cca push to my device and connect to that same local server.\n. I've noticed that relative paths are broken too. I set up an app with:\nbash\ncca create app com.company.name 'Name' --link-to server/client\nwhere the server/client/lib/<dir> paths are relative symlinks to ../../../browser_modules/<dir>, these are broken under app/platforms/android/assets/www/lib/... the process which copies the files should munge nested symlinks too I guess. I worked around it by adding a hooks/before_prepare/link_browser_modules.js:\n``` javascript\n!/usr/bin/env node\nvar fs = require('fs');\nvar dir = './platforms/android/browser_modules';\ntry {\n    var st = fs.lstatSync(dir);\n} catch(err) {\n    if (err.code === 'ENOENT') {\n        fs.symlinkSync('../../../browser_modules', dir);\n    } else {\n        console.error('err', err);\n        process.exit(1);\n    }\n}\n``\n. @agrieve when you say \"should work fine with CCA directly\", you mean if I had usedcca run...vs.push? Would this regression also explain not seeing thebackbutton` events?\nThanks for fixing it so fast BTW!\nedit: backbutton is working now too...\n. My 2\u00a2 is that adding the plugin should take care of all of the needed manifest munging.\n. Thanks for getting back to me so fast... which of the 4 cordova.js's do I want to copy the fixed version over?\n$ find platforms/ios -name cordova.js\nplatforms/ios/build/emulator/Application.app/www/cordova.js\nplatforms/ios/CordovaLib/cordova.js\nplatforms/ios/platform_www/cordova.js\nplatforms/ios/www/cordova.js\nI'm guessing the platforms/ios/CordovaLib/cordova.js one?\n. I had to replace all of the last three copies of cordova.js from the after_prepare hook, which did clean up the errors but not the failed deviceready:\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1169)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1162)\n. @infomofo it's a pretty basic angular app, I'm using sockjs and geolocation/google-mapping. The app works both when served via a node/express backend and as an android mobile chrome app.\n. In case anyone else runs into problems setting up an express server & chrome app build in the same tree, I'm documenting what worked for me. My tree is laid out like:\nserver/\n    client/ <- static content\n    views/ <- .jade templates\n    server.js\napp/\n    www/ <- symlink to ../server/client\nadd a app/hooks/before_prepare/compile_jade.js something like:\n``` javascript\n!/usr/bin/env node\nvar fs = require('fs');\nvar path = require('path');\nfunction compile_jade(src, dst) {\n    var jade = require('jade');\n    var options = {\n        filename: src,\n        pretty: true\n    };\ntry {\n    var stat = fs.lstatSync(src);\n    if (stat.isFile()) {\n        var str = fs.readFileSync(src, 'utf8');\n        var fn = jade.compile(str, options);\n        fs.writeFileSync(dst, fn(options));\n    }\n} catch (e) {\n    throw e;\n}\n\n}\nvar www = './www';\nvar server_views = '../server/views';\n// If ./www/main.jade exists, compile it to index.html (note we change the name to prevent\n// the server from serving the like-named .html instead of processing the .jade file)\nvar jade_index = path.join(server_views, 'main.jade');\nif (fs.existsSync(jade_index)) {\n    compile_jade(jade_index, path.join(www, 'index.html'));\n}\n```\nthen to avoid having express serve the generated index.html for default routes, change the jade template to something other than index.jade (I used main.jade):\njavascript\n// serve static content, defaulting to 'main.html' to ignore cca-generated index.html\napp.use(express.static(path.join(__dirname, 'client'), { index: ['main.html'] }));\nrouter.get('*', function(req, res) {\n    return res.render('main');\n});\nNow I can run the server and debug with my browser on localhost, and cca push to my device and connect to that same local server.\n. I've noticed that relative paths are broken too. I set up an app with:\nbash\ncca create app com.company.name 'Name' --link-to server/client\nwhere the server/client/lib/<dir> paths are relative symlinks to ../../../browser_modules/<dir>, these are broken under app/platforms/android/assets/www/lib/... the process which copies the files should munge nested symlinks too I guess. I worked around it by adding a hooks/before_prepare/link_browser_modules.js:\n``` javascript\n!/usr/bin/env node\nvar fs = require('fs');\nvar dir = './platforms/android/browser_modules';\ntry {\n    var st = fs.lstatSync(dir);\n} catch(err) {\n    if (err.code === 'ENOENT') {\n        fs.symlinkSync('../../../browser_modules', dir);\n    } else {\n        console.error('err', err);\n        process.exit(1);\n    }\n}\n``\n. @agrieve when you say \"should work fine with CCA directly\", you mean if I had usedcca run...vs.push? Would this regression also explain not seeing thebackbutton` events?\nThanks for fixing it so fast BTW!\nedit: backbutton is working now too...\n. My 2\u00a2 is that adding the plugin should take care of all of the needed manifest munging.\n. Thanks for getting back to me so fast... which of the 4 cordova.js's do I want to copy the fixed version over?\n$ find platforms/ios -name cordova.js\nplatforms/ios/build/emulator/Application.app/www/cordova.js\nplatforms/ios/CordovaLib/cordova.js\nplatforms/ios/platform_www/cordova.js\nplatforms/ios/www/cordova.js\nI'm guessing the platforms/ios/CordovaLib/cordova.js one?\n. I had to replace all of the last three copies of cordova.js from the after_prepare hook, which did clean up the errors but not the failed deviceready:\n[Log] deviceready has not fired after 5 seconds. (cordova.js, line 1169)\n[Log] Channel not fired: onDOMContentLoaded (cordova.js, line 1162)\n. @infomofo it's a pretty basic angular app, I'm using sockjs and geolocation/google-mapping. The app works both when served via a node/express backend and as an android mobile chrome app.\n. ",
    "jay3dec": "@agrieve \nHere is my manifest.json\n{\n  \"manifest_version\": 2,\n  \"name\": \"My first app\",\n  \"version\": \"1\",\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"main.js\"]\n    }\n  }\n}\nAnd here is the AndroidManifest.xml\n<?xml version='1.0' encoding='utf-8'?>\n<manifest android:hardwareAccelerated=\"true\" android:versionCode=\"NaN\" android:versionName=\"1\" package=\"com.your.company.Myfirstapp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <supports-screens android:anyDensity=\"true\" android:largeScreens=\"true\" android:normalScreens=\"true\" android:resizeable=\"true\" android:smallScreens=\"true\" android:xlargeScreens=\"true\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n    <application android:hardwareAccelerated=\"true\" android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:supportsRtl=\"true\">\n        <activity android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|locale\" android:label=\"@string/activity_name\" android:launchMode=\"singleTop\" android:name=\"Myfirstapp\" android:theme=\"@android:style/Theme.Translucent\" android:windowSoftInputMode=\"adjustResize\">\n            <intent-filter android:label=\"@string/launcher_name\">\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n    <uses-sdk android:minSdkVersion=\"14\" android:targetSdkVersion=\"19\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n</manifest>\n. @agrieve \nHere is my manifest.json\n{\n  \"manifest_version\": 2,\n  \"name\": \"My first app\",\n  \"version\": \"1\",\n  \"app\": {\n    \"background\": {\n      \"scripts\": [\"main.js\"]\n    }\n  }\n}\nAnd here is the AndroidManifest.xml\n<?xml version='1.0' encoding='utf-8'?>\n<manifest android:hardwareAccelerated=\"true\" android:versionCode=\"NaN\" android:versionName=\"1\" package=\"com.your.company.Myfirstapp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <supports-screens android:anyDensity=\"true\" android:largeScreens=\"true\" android:normalScreens=\"true\" android:resizeable=\"true\" android:smallScreens=\"true\" android:xlargeScreens=\"true\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n    <application android:hardwareAccelerated=\"true\" android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:supportsRtl=\"true\">\n        <activity android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|locale\" android:label=\"@string/activity_name\" android:launchMode=\"singleTop\" android:name=\"Myfirstapp\" android:theme=\"@android:style/Theme.Translucent\" android:windowSoftInputMode=\"adjustResize\">\n            <intent-filter android:label=\"@string/launcher_name\">\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n    <uses-sdk android:minSdkVersion=\"14\" android:targetSdkVersion=\"19\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n</manifest>\n. ",
    "developer0017": "Error: /Volumes/Working/Development/Cordova/plugin/opcv/platforms/android/gradlew: Command failed with exit code 1 Error output:\nFAILURE: Build failed with an exception.\n- Where:\n  Build file '/Volumes/Working/Development/Cordova/plugin/opcv/platforms/android/build.gradle' line: 253\n- What went wrong:\n  A problem occurred evaluating root project 'android'.\n\nProject with path ':androidOpenCVExample' could not be found in root project 'android'.\n- Try:\n  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nI got this error. would you please resolve this issue for me?\n. Error: /Volumes/Working/Development/Cordova/plugin/opcv/platforms/android/gradlew: Command failed with exit code 1 Error output:\nFAILURE: Build failed with an exception.\n- Where:\n  Build file '/Volumes/Working/Development/Cordova/plugin/opcv/platforms/android/build.gradle' line: 253\n- What went wrong:\n  A problem occurred evaluating root project 'android'.\n\nProject with path ':androidOpenCVExample' could not be found in root project 'android'.\n- Try:\n  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nI got this error. would you please resolve this issue for me?\n. ",
    "SadiqUltra": "sudo chmod 777  ~/.android\nworked for me!\n. sudo chmod 777  ~/.android\nworked for me!\n. ",
    "mxlqgg": "HGHG\n. HGHG\n. ",
    "siner01": "Error:(1, 1) A problem occurred evaluating root project 'app'.\n\nPlugin with id 'com.android.application' not found.. Error:(1, 1) A problem occurred evaluating root project 'app'.\nPlugin with id 'com.android.application' not found.. \n",
    "doyouheat": "Error:(14, 1) A problem occurred evaluating project ':app'.\n\nCannot invoke method signingConfigs() on null object. Error:(14, 1) A problem occurred evaluating project ':app'.\nCannot invoke method signingConfigs() on null object. \n",
    "kirthanshetty": "Hi i am getting below error please help me \nEvaluating project ':app' using build file '/home/ubuntu/clarks-select-android/app/build.gradle'.\nFAILURE: Build failed with an exception.\n\n\nWhere:\nBuild file '/home/ubuntu/clarks-select-android/app/build.gradle' line: 10\n\n\nWhat went wrong:\nA problem occurred evaluating project ':app'.\n\norg/gradle/initialization/BuildCompletionListener\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --debug option to get more log output.\n\n\nBUILD FAILED\n. Hi i am getting below error please help me \nEvaluating project ':app' using build file '/home/ubuntu/clarks-select-android/app/build.gradle'.\nFAILURE: Build failed with an exception.\n\n\nWhere:\nBuild file '/home/ubuntu/clarks-select-android/app/build.gradle' line: 10\n\n\nWhat went wrong:\nA problem occurred evaluating project ':app'.\n\norg/gradle/initialization/BuildCompletionListener\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --debug option to get more log output.\n\n\nBUILD FAILED\n. ",
    "MGMsystems": "``` javascript\n  $cordovaDialogs.confirm('Are you sure?', 'Confirm',['Ok','Cancel']).then(function(results) {\n        if(results==1) {\n            $cordovaDialogs.prompt('Give a comment.', 'Comment',['Ok','Cancel'],'').then(function(results) {\n                if(results.buttonIndex ==1) {\n                    console.log(results);\n                    $cordovaDialogs.alert('Action done','Done');\n                } else {\n                    $cordovaDialogs.alert('Action cancelled','Cancelled');\n                }\n            });\n        }\n    });\n\n```\nI'm using ngCordova here, but it also happens when I use Cordova dialogs without ngCordova.\n. ``` javascript\n  $cordovaDialogs.confirm('Are you sure?', 'Confirm',['Ok','Cancel']).then(function(results) {\n        if(results==1) {\n            $cordovaDialogs.prompt('Give a comment.', 'Comment',['Ok','Cancel'],'').then(function(results) {\n                if(results.buttonIndex ==1) {\n                    console.log(results);\n                    $cordovaDialogs.alert('Action done','Done');\n                } else {\n                    $cordovaDialogs.alert('Action cancelled','Cancelled');\n                }\n            });\n        }\n    });\n\n```\nI'm using ngCordova here, but it also happens when I use Cordova dialogs without ngCordova.\n. ",
    "hackerunet": "fixed!! I just need to npm install cordova-android regards.!!\n. fixed!! I just need to npm install cordova-android regards.!!\n. ",
    "appedemic": "What works is first manually installing iossocketscommon:\n[derk@Rex][test]$ cordova plugin add org.chromium.iossocketscommon\nInstalling \"org.chromium.iosSocketsCommon\" for android\nInstalling \"org.chromium.iosSocketsCommon\" for ios\n[derk@Rex][test]$ cordova plugin add org.chromium.socket.tcp\nInstalling \"org.chromium.sockets.tcp\" for android\nInstalling \"org.chromium.sockets.tcp\" for ios\nInstalling \"org.chromium.common\" for ios\nIt might be a case-sensitive thing with plugins.cordova.io\n. What works is first manually installing iossocketscommon:\n[derk@Rex][test]$ cordova plugin add org.chromium.iossocketscommon\nInstalling \"org.chromium.iosSocketsCommon\" for android\nInstalling \"org.chromium.iosSocketsCommon\" for ios\n[derk@Rex][test]$ cordova plugin add org.chromium.socket.tcp\nInstalling \"org.chromium.sockets.tcp\" for android\nInstalling \"org.chromium.sockets.tcp\" for ios\nInstalling \"org.chromium.common\" for ios\nIt might be a case-sensitive thing with plugins.cordova.io\n. ",
    "christomitov": "Any idea on a timeline for this? My objective-c is a bit rusty and I'm in dire need of this implementation.\n. @agrieve thanks for responding so quickly! Below is the code I replaced in index.html, it's the only change I made. The minute I connect it crashes like I mentioned before, perhaps I've coded it wrong. Can you show me what you did?\n```\n<!DOCTYPE html>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n\n\n\n WARNING: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 \n\n\n\nHello World\n\n\n\nApache Cordova\n\nConnecting to Device\nDevice is Ready\n\n\n\n\n\n    app.initialize();</p>\n<pre><code>document.addEventListener(\"deviceready\", setupSockets, false);\n\n\nfunction setupSockets() {\n  chrome.sockets.tcpServer.create(function(object) {\n    chrome.sockets.tcpServer.listen(object.socketId, \"0.0.0.0\", 1337, function() {\n      console.log(object);\n    });\n  })\n\n  chrome.sockets.tcpServer.onAccept.addListener(function(info) {\n    console.log(\"accepted connection\", info);\n    chrome.sockets.tcp.onReceive.addListener(function(info) {\n      console.log(\"received\", info);\n      console.log(\"string is:\", ab2str(info.data));\n\n    });\n\n    chrome.sockets.tcp.setPaused(info.clientSocketId, false);\n  });\n\n  function ab2str(buf) {\n    if (buf) {\n      return String.fromCharCode.apply(null, new Uint16Array(buf));\n    }\n  }\n\n  function str2ab(str) {\n    var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char\n    var bufView = new Uint16Array(buf);\n    for (var i=0, strLen=str.length; i&lt;strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  }\n\n\n}\n</code></pre>\n<p>\n\n\n```\n. Okay just a little more insight. I started profiling my app when I was receiving Memory Errors in Xcode console. Below are some screenshots:\nhttp://i.imgur.com/xN9lzAV.png  - Note JS Garbage Collector is increasing in size after every tcp event\nhttp://i.imgur.com/lI3mtGZ.png - Here's where it maxes out, note the JS Garbage collection size, though I don't see this behaviour on the android side of things so I think it's something with the native implementation.\nhttp://i.imgur.com/Ya1aMj1.png - And yet another screen grab showing where it caps out at around 140mb , here tcp is unusable.\nI've profiled the application with DDMS and the android version seems to have no leaks at all. I think I can deduce that the iOS version of the plugin is the culprit? I will run some more profiling tests to see what leaks I can find in my code but so far there's nothing.\n. Nevermind, was related to this bug: https://issues.apache.org/jira/browse/CB-8002\n. Any idea on a timeline for this? My objective-c is a bit rusty and I'm in dire need of this implementation.\n. @agrieve thanks for responding so quickly! Below is the code I replaced in index.html, it's the only change I made. The minute I connect it crashes like I mentioned before, perhaps I've coded it wrong. Can you show me what you did?\n```\n<!DOCTYPE html>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n\n\n\n WARNING: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 \n\n\n\nHello World\n\n\n\nApache Cordova\n\nConnecting to Device\nDevice is Ready\n\n\n\n\n\n    app.initialize();</p>\n<pre><code>document.addEventListener(\"deviceready\", setupSockets, false);\n\n\nfunction setupSockets() {\n  chrome.sockets.tcpServer.create(function(object) {\n    chrome.sockets.tcpServer.listen(object.socketId, \"0.0.0.0\", 1337, function() {\n      console.log(object);\n    });\n  })\n\n  chrome.sockets.tcpServer.onAccept.addListener(function(info) {\n    console.log(\"accepted connection\", info);\n    chrome.sockets.tcp.onReceive.addListener(function(info) {\n      console.log(\"received\", info);\n      console.log(\"string is:\", ab2str(info.data));\n\n    });\n\n    chrome.sockets.tcp.setPaused(info.clientSocketId, false);\n  });\n\n  function ab2str(buf) {\n    if (buf) {\n      return String.fromCharCode.apply(null, new Uint16Array(buf));\n    }\n  }\n\n  function str2ab(str) {\n    var buf = new ArrayBuffer(str.length*2); // 2 bytes for each char\n    var bufView = new Uint16Array(buf);\n    for (var i=0, strLen=str.length; i&lt;strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  }\n\n\n}\n</code></pre>\n<p>\n\n\n```\n. Okay just a little more insight. I started profiling my app when I was receiving Memory Errors in Xcode console. Below are some screenshots:\nhttp://i.imgur.com/xN9lzAV.png  - Note JS Garbage Collector is increasing in size after every tcp event\nhttp://i.imgur.com/lI3mtGZ.png - Here's where it maxes out, note the JS Garbage collection size, though I don't see this behaviour on the android side of things so I think it's something with the native implementation.\nhttp://i.imgur.com/Ya1aMj1.png - And yet another screen grab showing where it caps out at around 140mb , here tcp is unusable.\nI've profiled the application with DDMS and the android version seems to have no leaks at all. I think I can deduce that the iOS version of the plugin is the culprit? I will run some more profiling tests to see what leaks I can find in my code but so far there's nothing.\n. Nevermind, was related to this bug: https://issues.apache.org/jira/browse/CB-8002\n. ",
    "gtramontina": "Any updates on this issue?\n. Any updates on this issue?\n. ",
    "uliporeggia": "Sorry, it was a problem in my environment, the ANDROID_PATH was pointing to path/to/android/sdk/tools instead of path/to/android/sdk\n. It's ok, thanks for the answer\n. Sorry, it was a problem in my environment, the ANDROID_PATH was pointing to path/to/android/sdk/tools instead of path/to/android/sdk\n. It's ok, thanks for the answer\n. ",
    "churromorales20": "I have the same proble, and with this post i SOLVED... THANKS!!!\n. I have the same proble, and with this post i SOLVED... THANKS!!!\n. ",
    "medeb": "you saved my day man! awesome \\o/\n. you saved my day man! awesome \\o/\n. ",
    "mikaelkindborg": "Fix for this issue is available in pull request: https://github.com/MobileChromeApps/mobile-chrome-apps/pull/408\n. Thanks, I signed the agreement now. My real name is Mikael Kindborg.\n. Fix for this issue is available in pull request: https://github.com/MobileChromeApps/mobile-chrome-apps/pull/408\n. Thanks, I signed the agreement now. My real name is Mikael Kindborg.\n. ",
    "gurkerl83": "The build service works now. I have forked chrome.iosSocketsCommon into https://github.com/gurkerl83/chrome.iosSocketsCommon.git where some modifications in both .h and .m was required. I also modified chrome.sockets.udp to pick up the correct header file. It seems there was a problem with internals of the build service - black box. My experience in C is limited. Those symboling errors are known by https://github.com/couchbase/couchbase-lite-ios/issues/506 as well as in the socket library monkeytalk uses.\nThanks!\n. Hi again,\nJust discovered a statement in Appgyver`s custom plugin development tutorial, which mentions the following: \nOn iOS, our plugins currently require ARC - Automatic Reference Counting - support, so make sure the code compiles using ARC.\nhttps://academy.appgyver.com/categories/7-extending-with-plugins/contents/10-configuring-custom-phonegap-plugins \nhttps://developer.apple.com/library/ios/releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html\nGuess this could be the reason the current chrome.iosSocketsCommon was not working\nThanks!\n. Hi,\n@oahziur Appgyvers build service grabs the following plugins. I guess those plugins without an url are downloaded via plugman. Im not using other custom plugins. Of course Appgyvers (Cordova) standard plugins are added to the build without explicit declaration.\nAll plugins which are bundled\nhttp://pastebin.com/AcX3w5Ny\nexplicit declared plugins - custom plugins\n[\n  {\"source\":\"org.chromium.common\"},\n  {\"source\":\"org.chromium.storage\"},\n  {\"source\":\"org.chromium.runtime\"},\n  {\"source\":\"org.chromium.bootstrap\"},\n  {\"source\":\"https://github.com/gurkerl83/chrome.iosSocketsCommon.git\"},\n  {\"source\":\"https://github.com/gurkerl83/chrome.sockets.udp\"}\n]\n--> working\nThe duplicated symbol error occurs when \n{\"source\":\"org.chromium.iossocketscommon\"} \nor \n{\"source\":\"org.chromium.sockets.udp\"}\ngets added instead of those from my git repository\n[\n{\"source\":\"org.chromium.common\"},\n{\"source\":\"org.chromium.storage\"},\n{\"source\":\"org.chromium.runtime\"},\n{\"source\":\"org.chromium.bootstrap\"},\n{\"source\":\"org.chromium.iossocketscommon\"}\n]\n--> not working\n[\n{\"source\":\"org.chromium.common\"},\n{\"source\":\"org.chromium.storage\"},\n{\"source\":\"org.chromium.runtime\"},\n{\"source\":\"org.chromium.bootstrap\"},\n{\"source\":\"org.chromium.sockets.udp\"}\n]\n--> not working\nThanks!\n. Hi,\nI don`t get. I tried another plugin https://github.com/floatinghotpot/cordova-httpd in which GCDAsyncSocket is used. Among many other duplicated symbol warnings, the same as for org.chromium.iossocketscommon appear.\nThe bottom line in the error log mentions those errors occur on armv7, so I thought it could be the linker flag. Found different resources mentioning something similar when the linker flag -all_load is activated. \"Build Settings - Linking - Other Linker Flags\" in Xcode.\nhttp://stackoverflow.com/questions/12200238/ios-2-duplicate-symbols-for-architecture-armv7\nI have not tested it on my local machine. But I will ask Appgyver if they have activated this flag.\nThanks!\n. Hi, understand now. Here is a nice article about the problem. http://blog.sigmapoint.pl/avoiding-dependency-collisions-in-ios-static-library-managed-by-cocoapods/ I thing there is very little we can do about it. A comment in this article mention a library with automatic prefix capabilities. I think such a thing could help, but it has to be implemented by the build service we have no control at. \nThanks!\n. For now I have no problem because custom prefixing solved this problem, but only for GCDAsyncSocket and GCDAsyncUdpSocket. The chrome.sockets.upd is working!\nThis is a general linker problem. As I tested a different plugin https://github.com/floatinghotpot/cordova-httpd even more duplicated errors occur.\nhttp://pastebin.com/S77SrNAZ\nThanks!\n. The build service works now. I have forked chrome.iosSocketsCommon into https://github.com/gurkerl83/chrome.iosSocketsCommon.git where some modifications in both .h and .m was required. I also modified chrome.sockets.udp to pick up the correct header file. It seems there was a problem with internals of the build service - black box. My experience in C is limited. Those symboling errors are known by https://github.com/couchbase/couchbase-lite-ios/issues/506 as well as in the socket library monkeytalk uses.\nThanks!\n. Hi again,\nJust discovered a statement in Appgyver`s custom plugin development tutorial, which mentions the following: \nOn iOS, our plugins currently require ARC - Automatic Reference Counting - support, so make sure the code compiles using ARC.\nhttps://academy.appgyver.com/categories/7-extending-with-plugins/contents/10-configuring-custom-phonegap-plugins \nhttps://developer.apple.com/library/ios/releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html\nGuess this could be the reason the current chrome.iosSocketsCommon was not working\nThanks!\n. Hi,\n@oahziur Appgyvers build service grabs the following plugins. I guess those plugins without an url are downloaded via plugman. Im not using other custom plugins. Of course Appgyvers (Cordova) standard plugins are added to the build without explicit declaration.\nAll plugins which are bundled\nhttp://pastebin.com/AcX3w5Ny\nexplicit declared plugins - custom plugins\n[\n  {\"source\":\"org.chromium.common\"},\n  {\"source\":\"org.chromium.storage\"},\n  {\"source\":\"org.chromium.runtime\"},\n  {\"source\":\"org.chromium.bootstrap\"},\n  {\"source\":\"https://github.com/gurkerl83/chrome.iosSocketsCommon.git\"},\n  {\"source\":\"https://github.com/gurkerl83/chrome.sockets.udp\"}\n]\n--> working\nThe duplicated symbol error occurs when \n{\"source\":\"org.chromium.iossocketscommon\"} \nor \n{\"source\":\"org.chromium.sockets.udp\"}\ngets added instead of those from my git repository\n[\n{\"source\":\"org.chromium.common\"},\n{\"source\":\"org.chromium.storage\"},\n{\"source\":\"org.chromium.runtime\"},\n{\"source\":\"org.chromium.bootstrap\"},\n{\"source\":\"org.chromium.iossocketscommon\"}\n]\n--> not working\n[\n{\"source\":\"org.chromium.common\"},\n{\"source\":\"org.chromium.storage\"},\n{\"source\":\"org.chromium.runtime\"},\n{\"source\":\"org.chromium.bootstrap\"},\n{\"source\":\"org.chromium.sockets.udp\"}\n]\n--> not working\nThanks!\n. Hi,\nI don`t get. I tried another plugin https://github.com/floatinghotpot/cordova-httpd in which GCDAsyncSocket is used. Among many other duplicated symbol warnings, the same as for org.chromium.iossocketscommon appear.\nThe bottom line in the error log mentions those errors occur on armv7, so I thought it could be the linker flag. Found different resources mentioning something similar when the linker flag -all_load is activated. \"Build Settings - Linking - Other Linker Flags\" in Xcode.\nhttp://stackoverflow.com/questions/12200238/ios-2-duplicate-symbols-for-architecture-armv7\nI have not tested it on my local machine. But I will ask Appgyver if they have activated this flag.\nThanks!\n. Hi, understand now. Here is a nice article about the problem. http://blog.sigmapoint.pl/avoiding-dependency-collisions-in-ios-static-library-managed-by-cocoapods/ I thing there is very little we can do about it. A comment in this article mention a library with automatic prefix capabilities. I think such a thing could help, but it has to be implemented by the build service we have no control at. \nThanks!\n. For now I have no problem because custom prefixing solved this problem, but only for GCDAsyncSocket and GCDAsyncUdpSocket. The chrome.sockets.upd is working!\nThis is a general linker problem. As I tested a different plugin https://github.com/floatinghotpot/cordova-httpd even more duplicated errors occur.\nhttp://pastebin.com/S77SrNAZ\nThanks!\n. ",
    "avstudios": "Hi, is anybody had a change to look at it? I've updated cca tool to v0.5.1 but still same problem. I've not mentioned that I'm using dart and chrome lib to generate js files. I thought i was not important but it might be. I hope there is a way to make it work.\n. Hi, is anybody had a change to look at it? I've updated cca tool to v0.5.1 but still same problem. I've not mentioned that I'm using dart and chrome lib to generate js files. I thought i was not important but it might be. I hope there is a way to make it work.\n. ",
    "andrewmilson": "@agrieve FYI before I posted the issue I installed the Cordova geolocation plugin and cca plugins list outputted\n$ cca plugins list\ncca v0.5.0\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.1 \"File\"\norg.apache.cordova.geolocation 0.3.10 \"Geolocation\"\norg.apache.cordova.inappbrowser 0.5.3 \"InAppBrowser\"\norg.apache.cordova.network-information 0.2.13 \"Network Information\"\norg.apache.cordova.statusbar 0.1.8 \"StatusBar\"\norg.chromium.bootstrap 1.1.0 \"Chrome Apps Core\"\norg.chromium.common 1.0.4 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.2 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.3 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\nalthough cca run android outputs\n$ cca run android\n...\nUninstalling org.apache.cordova.geolocation from android\nUninstalling org.apache.cordova.geolocation from browser\nUninstalling org.apache.cordova.geolocation from ios\n...\n. @mmocny sorry, I didn't see your comment before posting!\n. I am now using geolocation in my manifest.json and its working.\n{\n  ...\n  \"permissions\": [\n    ...\n    \"geolocation\"\n  ]\n  ...\n}\nThanks @mmocny\n. Yo! Here is the www folder on Dropbox. In the process of recreating the issue I found the epicenter of the bug. Check out line 37 of index.html. When position: relative; is removed the bug goes away.\n36|    .content {\n37|      position: relative; /* issue doesn't occur when position removed */\n38|      margin-top: 0;\n39|      padding: 20px;\n40|    }\n. @agrieve FYI before I posted the issue I installed the Cordova geolocation plugin and cca plugins list outputted\n$ cca plugins list\ncca v0.5.0\norg.apache.cordova.engine.crosswalk 0.0.1-dev \"Crosswalk Engine\"\norg.apache.cordova.file 1.3.1 \"File\"\norg.apache.cordova.geolocation 0.3.10 \"Geolocation\"\norg.apache.cordova.inappbrowser 0.5.3 \"InAppBrowser\"\norg.apache.cordova.network-information 0.2.13 \"Network Information\"\norg.apache.cordova.statusbar 0.1.8 \"StatusBar\"\norg.chromium.bootstrap 1.1.0 \"Chrome Apps Core\"\norg.chromium.common 1.0.4 \"Chrome Apps Common Utils\"\norg.chromium.i18n 1.0.2 \"Chrome Apps I18n API\"\norg.chromium.navigation 1.0.2 \"Chrome Apps Navigation\"\norg.chromium.polyfill.blob_constructor 1.0.1 \"Blob constructor shim\"\norg.chromium.polyfill.customevent 1.0.3 \"CustomEvent constuctor shim\"\norg.chromium.polyfill.xhr_features 1.0.2 \"XHR Blob Response Type Polyfill\"\norg.chromium.runtime 1.0.3 \"Chrome App Runtime\"\norg.chromium.storage 1.0.3 \"Chrome Apps Storage API\"\nalthough cca run android outputs\n$ cca run android\n...\nUninstalling org.apache.cordova.geolocation from android\nUninstalling org.apache.cordova.geolocation from browser\nUninstalling org.apache.cordova.geolocation from ios\n...\n. @mmocny sorry, I didn't see your comment before posting!\n. I am now using geolocation in my manifest.json and its working.\n{\n  ...\n  \"permissions\": [\n    ...\n    \"geolocation\"\n  ]\n  ...\n}\nThanks @mmocny\n. Yo! Here is the www folder on Dropbox. In the process of recreating the issue I found the epicenter of the bug. Check out line 37 of index.html. When position: relative; is removed the bug goes away.\n36|    .content {\n37|      position: relative; /* issue doesn't occur when position removed */\n38|      margin-top: 0;\n39|      padding: 20px;\n40|    }\n. ",
    "GustavoCostaW": "@andrewmilson thx for post, I was having the same problem, I think this should become clearer in some documentation cca plugins.\n. @mmocny why when we use a plugin that does not have permission when we create the project warn him that we do not have the permission required? example:\ntoday:\ncca plugin add org.apache.cordova.geolocation\ncca run platform\nlog:\nuninstalling org.apache.cordova.geolocation ??? but without reason\nsolution?\nlog:\nyou not add in manifest.json the permission geolocation\nuninstalling org.apache.cordova.geolocation\n. @mmocny  implement a feature to just modify your manifest automatically when you add the plugin would be amazing, but informational message solution the problem.\n. @longsleep @FreakTheMighty  Thx for the solution, I have the some problem, but, how change windowSoftInputMode dynamically?\n. thx @sebasi \n. @agrieve @Imskull @sebasi @longsleep @FreakTheMighty  I fix the issue setting:\nXWalkPreferences.setValue(XWalkPreferences.ANIMATABLE_XWALK_VIEW, false);\nin XWalkCordovaView.java in the plugin.\n\nSetting AdjustPan It is bad for the user experience, because there is no scroll.\n. @agrieve why ANIMATABLE_XWALK_VIEW it is not false default?\n. @agrieve sorry for delay, but not work for me :(\nI have the plugin in project\n\nBut in console for open URL, the method InAppBrowser in cordova object not exists\n\nCan you help me?\n. @schme16  thx!\n. Fix in crosswalk repo.\n. @andrewmilson thx for post, I was having the same problem, I think this should become clearer in some documentation cca plugins.\n. @mmocny why when we use a plugin that does not have permission when we create the project warn him that we do not have the permission required? example:\ntoday:\ncca plugin add org.apache.cordova.geolocation\ncca run platform\nlog:\nuninstalling org.apache.cordova.geolocation ??? but without reason\nsolution?\nlog:\nyou not add in manifest.json the permission geolocation\nuninstalling org.apache.cordova.geolocation\n. @mmocny  implement a feature to just modify your manifest automatically when you add the plugin would be amazing, but informational message solution the problem.\n. @longsleep @FreakTheMighty  Thx for the solution, I have the some problem, but, how change windowSoftInputMode dynamically?\n. thx @sebasi \n. @agrieve @Imskull @sebasi @longsleep @FreakTheMighty  I fix the issue setting:\nXWalkPreferences.setValue(XWalkPreferences.ANIMATABLE_XWALK_VIEW, false);\nin XWalkCordovaView.java in the plugin.\n\nSetting AdjustPan It is bad for the user experience, because there is no scroll.\n. @agrieve why ANIMATABLE_XWALK_VIEW it is not false default?\n. @agrieve sorry for delay, but not work for me :(\nI have the plugin in project\n\nBut in console for open URL, the method InAppBrowser in cordova object not exists\n\nCan you help me?\n. @schme16  thx!\n. Fix in crosswalk repo.\n. ",
    "thomasmarkiewicz": "agrieve, thanks for the quick turnaround!\nI'm not sure if I picked up org.chromium.bootstrap@1.1.1\nI did 'cca upgrade' - is that all I need to do?\nWhatever it did, the behavior is slightly different on iOS than originally described, but not much better.\nI don't get a white screen anymore, but the app still isn't running.  web inspector now shows:\nTypeError: Attempted to assign to readonly property.       webcomponents.js:202\n  (anynymous function)                                     webcomponents.js:202\n  makeDocument                                            webcomponents.js:5893\n  loaded                                                                  :5859\n  (anonymous function) \n  receive                                                                 :5541\nLooks like maybe a problem with webcomponents.js ?\n. agrieve, I learned something today and got it working without any additional fixes.  \nI noticed my app also wasn't working as a chrome app.  Turns out it was because of Code Security Policy which doesn't allow <link> tags to include files that have embedded <script> tags which my app had.  After running vulcanize with --csp option my app started running fine as a chrome app and in iOS emulator as well!\nSo I'm not sure if there is really anything else to do about it. \nThanks for your help!\n. Yes, embedded script tags... I forgot to escape the tag and apparently the rest of my message got cut off.  And yes, vulcanize --csp is what did the trick.\n. Hmm.  Today after doing 'cca upgrade' it's back to white blank screen in iOS emulator. Did something revert?\n. Ok, I found what's \"causing\" the white screen in iOS this time.  It happens when I don't include the --strip option in vulcanize.  I opened a new issue for this here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/457\n. I'm seeing different errors. Are you getting just the blank screen in iOS emulator or getting to the app UI?\nI'm running on OS X 10.10.1, Xcode 6.1.1, cca 0.5.0.  Perhaps we have different environments?\nI just did a bit more experimenting and here are my observations:\n1) when running vulcanize without --strip I get blank screen and errors about device ready not fired in web inspector after running chrome.runtime.reload():\n\n2) HOWEVER, same as above, without --strip, when I run location.reload() in web inspector the app works, including the radio buttons which is the first time I see working in iOS:\n\n3) When running vulcanize with --csp and --strip, I get an app that loads in emulator right away and shows the UI, but running chrome.runtime.reload() in web inspector shows errors when I click on buttons and radio buttons don't fill in when I click on them:\n\n4) running location.reload() for step 3 above, results in a UI that renders but web inspector still shows same errors and radio buttons still don't work.  Notice that doing the same in step 2 above, when vulcanize didn't include --strip, resulted in an app that ran without errors after location.reload() which is strange:\n\n. OK, I don't know why --strip makes my code work, but it's not a big deal for me now. I just always strip.\n@oahziur - I applied the fix you pointed out by hand and it did indeed fix the SVGGElement errors, but not the others.\nI did find a solution to all the other errors and now have an iOS app with working radio buttons. I submitted a pull request with the solution here:\nhttps://github.com/webcomponents/webcomponentsjs/pull/122\n. @oahziur Got the update, works well for the SVGElement issue.  The other errors are still there, but my fix still seems to work for that.\nThe vulcanize issue is blocking me again though.  After upgrading to latest vulcanize version 0.7.2 iOS app is broken with or without --strip.  With --strip it loads my first screen, but pressing on the buttons does not transition to the next screen.  Rebuilding it with vulcanize 0.7.1 works as expected.  In both versions however specifying both --strip and --inline options doesn't work, which is what I would ideally want do to.\nThis definitely sounds like a vulcanize issue.  I'll try to isolate it a bit more.\n. This looks relevant: https://github.com/Polymer/vulcanize/issues/113\n. agrieve, thanks for the quick turnaround!\nI'm not sure if I picked up org.chromium.bootstrap@1.1.1\nI did 'cca upgrade' - is that all I need to do?\nWhatever it did, the behavior is slightly different on iOS than originally described, but not much better.\nI don't get a white screen anymore, but the app still isn't running.  web inspector now shows:\nTypeError: Attempted to assign to readonly property.       webcomponents.js:202\n  (anynymous function)                                     webcomponents.js:202\n  makeDocument                                            webcomponents.js:5893\n  loaded                                                                  :5859\n  (anonymous function) \n  receive                                                                 :5541\nLooks like maybe a problem with webcomponents.js ?\n. agrieve, I learned something today and got it working without any additional fixes.  \nI noticed my app also wasn't working as a chrome app.  Turns out it was because of Code Security Policy which doesn't allow <link> tags to include files that have embedded <script> tags which my app had.  After running vulcanize with --csp option my app started running fine as a chrome app and in iOS emulator as well!\nSo I'm not sure if there is really anything else to do about it. \nThanks for your help!\n. Yes, embedded script tags... I forgot to escape the tag and apparently the rest of my message got cut off.  And yes, vulcanize --csp is what did the trick.\n. Hmm.  Today after doing 'cca upgrade' it's back to white blank screen in iOS emulator. Did something revert?\n. Ok, I found what's \"causing\" the white screen in iOS this time.  It happens when I don't include the --strip option in vulcanize.  I opened a new issue for this here:\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/457\n. I'm seeing different errors. Are you getting just the blank screen in iOS emulator or getting to the app UI?\nI'm running on OS X 10.10.1, Xcode 6.1.1, cca 0.5.0.  Perhaps we have different environments?\nI just did a bit more experimenting and here are my observations:\n1) when running vulcanize without --strip I get blank screen and errors about device ready not fired in web inspector after running chrome.runtime.reload():\n\n2) HOWEVER, same as above, without --strip, when I run location.reload() in web inspector the app works, including the radio buttons which is the first time I see working in iOS:\n\n3) When running vulcanize with --csp and --strip, I get an app that loads in emulator right away and shows the UI, but running chrome.runtime.reload() in web inspector shows errors when I click on buttons and radio buttons don't fill in when I click on them:\n\n4) running location.reload() for step 3 above, results in a UI that renders but web inspector still shows same errors and radio buttons still don't work.  Notice that doing the same in step 2 above, when vulcanize didn't include --strip, resulted in an app that ran without errors after location.reload() which is strange:\n\n. OK, I don't know why --strip makes my code work, but it's not a big deal for me now. I just always strip.\n@oahziur - I applied the fix you pointed out by hand and it did indeed fix the SVGGElement errors, but not the others.\nI did find a solution to all the other errors and now have an iOS app with working radio buttons. I submitted a pull request with the solution here:\nhttps://github.com/webcomponents/webcomponentsjs/pull/122\n. @oahziur Got the update, works well for the SVGElement issue.  The other errors are still there, but my fix still seems to work for that.\nThe vulcanize issue is blocking me again though.  After upgrading to latest vulcanize version 0.7.2 iOS app is broken with or without --strip.  With --strip it loads my first screen, but pressing on the buttons does not transition to the next screen.  Rebuilding it with vulcanize 0.7.1 works as expected.  In both versions however specifying both --strip and --inline options doesn't work, which is what I would ideally want do to.\nThis definitely sounds like a vulcanize issue.  I'll try to isolate it a bit more.\n. This looks relevant: https://github.com/Polymer/vulcanize/issues/113\n. ",
    "kristianmandrup": "Please! It took me several hours to figure out if MobileChromeApps would support running Polymer web components on iOS (ie. with decent performance). Still unclear exactly how it works? Does it run on a Chromium engine embedded with the app or does it simply use Polyfills on the native Safari browser and thus with much less performance?\nPlease add a section on web components and somehow better documentation on the architecture of this whole platform. Thanks :)\nPlease add some documentation on how to build a production ready polymer web components app, using vulcanize correctly. Thanks :)\n. @mmocny Thanks for the quick reply :) Yeah, I looked into the FAQ on chrome for ios but still wan't sure. \n\"Chrome doesn't implement some HTML5 features such as WebGL and some CSS.\nSince Chrome for iOS uses the UIWebView, it provides the same HTML5/OWP features that this component provides.\"\nSo I take it that we are bound by the limitations of UIWebView, which means ???\nhttp://stackoverflow.com/questions/26339390/can-i-use-polymer-in-native-ios-webview\n\"Yes, you can. I'm doing it, and my app is fully loading within three seconds.\" - Nov 6\nYou need <access origin=\"*\"/> in your config.xml\n\"In short: no. Unless some material progress has been made on the platform, the instantiation period is not survivable. We were proceeding in a similar fashion, using UIWebView to embed Polymer-based components, but we ended up seeing about a 20-25 second delay while polymer instantiated \u2014 consistently replicable across devices. So, I'd answer \"no\" but your mileage may vary.\" - Oct 15\n. Thanks, I totally get it now :) Looks like we don't have to wait too long for the perf boost...\nhttp://devgirl.org/2014/11/10/boost-your-ios-8-mobile-app-performance-with-wkwebview/\n\"In the meantime there\u2019s a new option (self-proclaimed hack) available to try. Eddy Verbruggen (author of the Social Sharing Plugin and many other useful Cordova plugins) created a WKWebView plugin that uses the WKWebView rather than the UIWebView and includes code to fix the local file loading issue. \"\nYes, with polymer 0.8, lighter and much faster, things are starting to look bright :)\nhttps://github.com/Telerik-Verified-Plugins/WKWebView\nbash\n$ cordova plugin add https://github.com/EddyVerbruggen/cordova-plugin-wkwebview\n$ cordova prepare\nI guess I could even use this today with cca?\n. Please! It took me several hours to figure out if MobileChromeApps would support running Polymer web components on iOS (ie. with decent performance). Still unclear exactly how it works? Does it run on a Chromium engine embedded with the app or does it simply use Polyfills on the native Safari browser and thus with much less performance?\nPlease add a section on web components and somehow better documentation on the architecture of this whole platform. Thanks :)\nPlease add some documentation on how to build a production ready polymer web components app, using vulcanize correctly. Thanks :)\n. @mmocny Thanks for the quick reply :) Yeah, I looked into the FAQ on chrome for ios but still wan't sure. \n\"Chrome doesn't implement some HTML5 features such as WebGL and some CSS.\nSince Chrome for iOS uses the UIWebView, it provides the same HTML5/OWP features that this component provides.\"\nSo I take it that we are bound by the limitations of UIWebView, which means ???\nhttp://stackoverflow.com/questions/26339390/can-i-use-polymer-in-native-ios-webview\n\"Yes, you can. I'm doing it, and my app is fully loading within three seconds.\" - Nov 6\nYou need <access origin=\"*\"/> in your config.xml\n\"In short: no. Unless some material progress has been made on the platform, the instantiation period is not survivable. We were proceeding in a similar fashion, using UIWebView to embed Polymer-based components, but we ended up seeing about a 20-25 second delay while polymer instantiated \u2014 consistently replicable across devices. So, I'd answer \"no\" but your mileage may vary.\" - Oct 15\n. Thanks, I totally get it now :) Looks like we don't have to wait too long for the perf boost...\nhttp://devgirl.org/2014/11/10/boost-your-ios-8-mobile-app-performance-with-wkwebview/\n\"In the meantime there\u2019s a new option (self-proclaimed hack) available to try. Eddy Verbruggen (author of the Social Sharing Plugin and many other useful Cordova plugins) created a WKWebView plugin that uses the WKWebView rather than the UIWebView and includes code to fix the local file loading issue. \"\nYes, with polymer 0.8, lighter and much faster, things are starting to look bright :)\nhttps://github.com/Telerik-Verified-Plugins/WKWebView\nbash\n$ cordova plugin add https://github.com/EddyVerbruggen/cordova-plugin-wkwebview\n$ cordova prepare\nI guess I could even use this today with cca?\n. ",
    "drusso85": "cca version: 0.5.0\nCADT version: 0.11.0\nI tried with both cca run and cca push, but both the attempts produce the same result.\nI've written the code and compiled to javascript in Dart Editor, then i created a symlink through cca create testChromeApp --link-to=path/to/manifest.json.\nTo handle the CSP limitation, i changed the packages/polymer/polymer.html file, outsourcing the inline javascript code.\n. I've haven't found any workaround. In the near future I would like to retry. If i'll find a solution i'll report here and on http://stackoverflow.com/questions/27138836/polymer-dart-element-run-on-ubuntu-but-it-doesn-t-in-chrome-app-on-android-dev\n. cca version: 0.5.0\nCADT version: 0.11.0\nI tried with both cca run and cca push, but both the attempts produce the same result.\nI've written the code and compiled to javascript in Dart Editor, then i created a symlink through cca create testChromeApp --link-to=path/to/manifest.json.\nTo handle the CSP limitation, i changed the packages/polymer/polymer.html file, outsourcing the inline javascript code.\n. I've haven't found any workaround. In the near future I would like to retry. If i'll find a solution i'll report here and on http://stackoverflow.com/questions/27138836/polymer-dart-element-run-on-ubuntu-but-it-doesn-t-in-chrome-app-on-android-dev\n. ",
    "floatinghotpot": "I've fixed the event fire issue by removing <script src='cordova.js'></script> from html, as I read that it's injected automatically by cca. Now the doc ready event is fired properly.\nAnother issue still exists. I have to call window.setTimeout() before call the plugin API, or else the native code won't be called.\n. @Rayz100, as your question not related with CCA and what I ask here, could you please create another issue or question, on my project issue tracker page? Let's discuss your question there.\nPlease have a look at the wiki page first.\nhttps://github.com/floatinghotpot/cordova-admob-pro/wiki\n. here it is:  https://github.com/floatinghotpot/cordova-admob-pro/issues\n. I've fixed the event fire issue by removing <script src='cordova.js'></script> from html, as I read that it's injected automatically by cca. Now the doc ready event is fired properly.\nAnother issue still exists. I have to call window.setTimeout() before call the plugin API, or else the native code won't be called.\n. @Rayz100, as your question not related with CCA and what I ask here, could you please create another issue or question, on my project issue tracker page? Let's discuss your question there.\nPlease have a look at the wiki page first.\nhttps://github.com/floatinghotpot/cordova-admob-pro/wiki\n. here it is:  https://github.com/floatinghotpot/cordova-admob-pro/issues\n. ",
    "Rayz100": "Hi guys,\nI have just downloaded your code 'floatinghotpot/cordova-plugin-admob'. I am using Intel XDK and have just finished creating my first app. I want to add AdMob on my app and your code requires an external cordova.js\nDo you have that cordova.js please mate? Thanks in Advance\n. Hi Ray,\nSorry mate I am new on github so I have no idea how to create a new issue or question on your project issue tracker page, please send me a link\n. Tanks a lot, have posted my issue\nOn Wed, Dec 3, 2014 at 8:28 AM, Raymond Xie notifications@github.com\nwrote:\n\nhere it is: https://github.com/floatinghotpot/cordova-admob-pro/issues\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/452#issuecomment-65370574\n.\n\n\nR.Otto\nBsc (Hons)\n. Hi guys,\nI have just downloaded your code 'floatinghotpot/cordova-plugin-admob'. I am using Intel XDK and have just finished creating my first app. I want to add AdMob on my app and your code requires an external cordova.js\nDo you have that cordova.js please mate? Thanks in Advance\n. Hi Ray,\nSorry mate I am new on github so I have no idea how to create a new issue or question on your project issue tracker page, please send me a link\n. Tanks a lot, have posted my issue\nOn Wed, Dec 3, 2014 at 8:28 AM, Raymond Xie notifications@github.com\nwrote:\n\nhere it is: https://github.com/floatinghotpot/cordova-admob-pro/issues\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/MobileChromeApps/mobile-chrome-apps/issues/452#issuecomment-65370574\n.\n\n\nR.Otto\nBsc (Hons)\n. ",
    "marcellodesales": "Shouldn't \"--skip-prompt\" work to accept the update? as documented in the cca --help :(\nOptions:\n  -h, --help         Show usage message.                  \n  -d, --verbose      Enable verbose logging.              \n  -v, --version      Show version.                        \n  -y, --skip-prompt  Answer \"yes\" to any \"yes/no\" prompts.\n  --skip-upgrade     Don't upgrade platforms and plugins.\nWhen I try to use the skip command it fails:\n```\n$ cca --skip-prompt plugin add org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin --skip-prompt add org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin add --skip-prompt org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin add org.apache.cordova.device --skip-prompt\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n```\n. @kamrik that's exactly what I was looking for!\n. Perfect... The wercker build is showing the following:\n$ cca analytics disable\nUsage statistics collection disabled.\n$ cca --version\n0.6.0\nI still cannot build a box in Wercker though :( It's a shared attempt to help people build and deploy CCA apps. The Ubuntu 12.04 server I'm trying to use gets more than the limit of 1500MB. If anyone wants to help out please let me know! \n- Wercker Build: https://app.wercker.com/#applications/551b2cbbbb95a8811902f250\n- Source: https://github.com/marcellodesales/wercker-box-android-cca\nVersions\n$ \n$ node --version\nv0.10.37\n$ npm --version\n1.4.28\n$ java -version\njava version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n$ ant -version\nApache Ant(TM) version 1.8.2 compiled on December 3 2011\n$ grunt --version\ngrunt-cli v0.1.13\n$ bower --version\n1.4.0\n$ cca analytics disable\nUsage statistics collection disabled.\n$ cca --version\n0.6.0\n$\n. @mmocny Thanks for fixing this! I will try it!\n. When will this be released?\n. @mmocny so far so good :+1: \n. According to http://developer.android.com/tools/sdk/tools-notes.html, 24.0.2 is API level 21... Is this the \"Android-19\" \nMy entire installation is as follows:\n```\n!/bin/sh\nSet environment variables\nexport sdk_version=\"24.0.2\"\nexport ANDROID_HOME=${PWD}/android-sdk-linux\nexport ANDROID_BUILD_TOOLS=\"21.1.1\"\nexport ANDROID_VERSION=\"4.4.2\"\nexport ANDROID_PLATFORM_TOOLS=\"21.1.1\"\nexport PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\"\nInstall SDK\nwget \"http://dl.google.com/android/android-sdk_r${sdk_version}-linux.tgz\"\ntar zxf \"android-sdk_r${sdk_version}-linux.tgz\"\nrm \"android-sdk_r${sdk_version}-linux.tgz\"\ntype android || { echo \"Path: $PATH\"; echo 'Android not available after installation, terminating.'; exit 1; }\nWrite environment variables to profile\necho \"export ANDROID_HOME=\\\"${ANDROID_HOME}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_SDK_VERSION=\\\"${sdk_version}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_BUILD_TOOLS=\\\"${ANDROID_BUILD_TOOLS}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_PLATFORM_TOOLS=\\\"${ANDROID_PLATFORM_TOOLS}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_VERSION=\\\"${ANDROID_VERSION}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export PATH=\\\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\\\"\" | sudo tee -a /etc/profile.d/android.sh\nInstall android components\n(while :\ndo\n  echo 'y'\n  sleep 2\ndone) | android update sdk -u -a -t 1,2,3,22,111,112\n```\n. I properly followed the instructions on http://stackoverflow.com/questions/17963508/how-to-install-android-sdk-build-tools-on-the-command-line... I selected the sdk to be update properly and created the proper Wercker Box https://github.com/quantogastei/box-cordova-cca/commit/acb429a2656b6b81c21d0ad4a46a421187e9c12c.\nFor those who wants to CI/CD to build and deploy CCA Apps automatically upon commits go to https://github.com/marcellodesales/box-cordova-cca for more info.\n. The proper update command would be as follows:\nandroid update sdk -u -a -t 5,23,114,116\n. Shouldn't \"--skip-prompt\" work to accept the update? as documented in the cca --help :(\nOptions:\n  -h, --help         Show usage message.                  \n  -d, --verbose      Enable verbose logging.              \n  -v, --version      Show version.                        \n  -y, --skip-prompt  Answer \"yes\" to any \"yes/no\" prompts.\n  --skip-upgrade     Don't upgrade platforms and plugins.\nWhen I try to use the skip command it fails:\n```\n$ cca --skip-prompt plugin add org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin --skip-prompt add org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin add --skip-prompt org.apache.cordova.device\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n$ cca plugin add org.apache.cordova.device --skip-prompt\ncca v0.6.0\nThis project was not upgraded to cca v0.6.0 yet.  Attempting to upgrade now...\nWarning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] \n```\n. @kamrik that's exactly what I was looking for!\n. Perfect... The wercker build is showing the following:\n$ cca analytics disable\nUsage statistics collection disabled.\n$ cca --version\n0.6.0\nI still cannot build a box in Wercker though :( It's a shared attempt to help people build and deploy CCA apps. The Ubuntu 12.04 server I'm trying to use gets more than the limit of 1500MB. If anyone wants to help out please let me know! \n- Wercker Build: https://app.wercker.com/#applications/551b2cbbbb95a8811902f250\n- Source: https://github.com/marcellodesales/wercker-box-android-cca\nVersions\n$ \n$ node --version\nv0.10.37\n$ npm --version\n1.4.28\n$ java -version\njava version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n$ ant -version\nApache Ant(TM) version 1.8.2 compiled on December 3 2011\n$ grunt --version\ngrunt-cli v0.1.13\n$ bower --version\n1.4.0\n$ cca analytics disable\nUsage statistics collection disabled.\n$ cca --version\n0.6.0\n$\n. @mmocny Thanks for fixing this! I will try it!\n. When will this be released?\n. @mmocny so far so good :+1: \n. According to http://developer.android.com/tools/sdk/tools-notes.html, 24.0.2 is API level 21... Is this the \"Android-19\" \nMy entire installation is as follows:\n```\n!/bin/sh\nSet environment variables\nexport sdk_version=\"24.0.2\"\nexport ANDROID_HOME=${PWD}/android-sdk-linux\nexport ANDROID_BUILD_TOOLS=\"21.1.1\"\nexport ANDROID_VERSION=\"4.4.2\"\nexport ANDROID_PLATFORM_TOOLS=\"21.1.1\"\nexport PATH=\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\"\nInstall SDK\nwget \"http://dl.google.com/android/android-sdk_r${sdk_version}-linux.tgz\"\ntar zxf \"android-sdk_r${sdk_version}-linux.tgz\"\nrm \"android-sdk_r${sdk_version}-linux.tgz\"\ntype android || { echo \"Path: $PATH\"; echo 'Android not available after installation, terminating.'; exit 1; }\nWrite environment variables to profile\necho \"export ANDROID_HOME=\\\"${ANDROID_HOME}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_SDK_VERSION=\\\"${sdk_version}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_BUILD_TOOLS=\\\"${ANDROID_BUILD_TOOLS}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_PLATFORM_TOOLS=\\\"${ANDROID_PLATFORM_TOOLS}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export ANDROID_VERSION=\\\"${ANDROID_VERSION}\\\"\" | sudo tee -a /etc/profile.d/android.sh\necho \"export PATH=\\\"${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\\\"\" | sudo tee -a /etc/profile.d/android.sh\nInstall android components\n(while :\ndo\n  echo 'y'\n  sleep 2\ndone) | android update sdk -u -a -t 1,2,3,22,111,112\n```\n. I properly followed the instructions on http://stackoverflow.com/questions/17963508/how-to-install-android-sdk-build-tools-on-the-command-line... I selected the sdk to be update properly and created the proper Wercker Box https://github.com/quantogastei/box-cordova-cca/commit/acb429a2656b6b81c21d0ad4a46a421187e9c12c.\nFor those who wants to CI/CD to build and deploy CCA Apps automatically upon commits go to https://github.com/marcellodesales/box-cordova-cca for more info.\n. The proper update command would be as follows:\nandroid update sdk -u -a -t 5,23,114,116\n. ",
    "pwnall": "@mwoghiren Thank you for the instant turnaround! :+1: \n. @mwoghiren Thank you for the instant turnaround! :+1: \n. ",
    "baleboy": "I just installed cca and it seems to be using Crosswalk 8. I would like to try out the latest Crosswalk, are there any instructions on how to do it?\n. Thanks for the reply. I assume the same applies to CADT, i.e. if I follow the instructions below will I get a CADT based on Crosswalk 11?\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/#building-from-source-ios-or-android---instructions-for-ios--linux\n. I just installed cca and it seems to be using Crosswalk 8. I would like to try out the latest Crosswalk, are there any instructions on how to do it?\n. Thanks for the reply. I assume the same applies to CADT, i.e. if I follow the instructions below will I get a CADT based on Crosswalk 11?\nhttps://github.com/MobileChromeApps/chrome-app-developer-tool/#building-from-source-ios-or-android---instructions-for-ios--linux\n. ",
    "jesusprubio": "\"RTCPeerConnection\" (needed for WebRTC) problem also related with not to be using the last Crosswalk version. The generated SDP is not compatible with the one provided by the actual Chrome stable. I've tested the same code with the last Xwalk (Cordova version) and the problem disappeared.\nAny date for the new version? :)\nThanks\n. I think this issue can be closed since the publication of the last release (v0.6.0), for me is working now. :)\n. \"RTCPeerConnection\" (needed for WebRTC) problem also related with not to be using the last Crosswalk version. The generated SDP is not compatible with the one provided by the actual Chrome stable. I've tested the same code with the last Xwalk (Cordova version) and the problem disappeared.\nAny date for the new version? :)\nThanks\n. I think this issue can be closed since the publication of the last release (v0.6.0), for me is working now. :)\n. ",
    "sunbiz": "@felquis does it really work with cca? Your code isnt working for me using cca, although works fine with cordova. The documentation about splash screen is a little obscure as well like @AleksMeshkov mentioned only talks about iOS\n. I found a solution to the problem. I manually built the latest from https://github.com/apache/cordova-plugin-splashscreen and used it with cca. And then it works fine with CCA 0.5.1\n. @felquis does it really work with cca? Your code isnt working for me using cca, although works fine with cordova. The documentation about splash screen is a little obscure as well like @AleksMeshkov mentioned only talks about iOS\n. I found a solution to the problem. I manually built the latest from https://github.com/apache/cordova-plugin-splashscreen and used it with cca. And then it works fine with CCA 0.5.1\n. ",
    "dskhatri": "Thanks! Setting the Orientation preference in config.xml works. I found some information in the Cordova documentation. The Mobile Chrome Apps docs imply manifest.json is the main configuration file but probably should mention the config.xml file too. \n. Thanks! Setting the Orientation preference in config.xml works. I found some information in the Cordova documentation. The Mobile Chrome Apps docs imply manifest.json is the main configuration file but probably should mention the config.xml file too. \n. ",
    "adamtegen": "Changing the Orientation preference is in config.xml doesn't fix the issue for me either. (cca v0.5.1)\n. I am seeing the same issues with iphone and android with cca version 0.5.1\n. Changing the Orientation preference is in config.xml doesn't fix the issue for me either. (cca v0.5.1)\n. I am seeing the same issues with iphone and android with cca version 0.5.1\n. ",
    "rmehner": "@agrieve I ran into the same issue, installed 0.5.1-rc1 and it fixed it.\n. @agrieve I ran into the same issue, installed 0.5.1-rc1 and it fixed it.\n. ",
    "blukis": "I'm seeing the issues on Android.  If you upload that .zip file to build.phonegap.com, you'll get an .apk like this one that shows the issue.  http://www1.plurib.us/201X/NotificationExample-release.apk\nI should also note, IIRC in neither #1 or #2 situations above is the callback function called, that outputs \"Notification1 created.\"\n. Calling \"chrome.runtime.setManifest()\" in a deviceready handler solved it.  Thanks!\n. I should add, the alarms do in fact appear to be cleared despite the callback not getting fired, but the clearing seems to be asynchronous.  (If I clear, then immediately add more, the clear sometimes clobbers the ones I'm trying to add after the clear.)  So being able to use the callback here would be really helpful.\n. I'm seeing the issues on Android.  If you upload that .zip file to build.phonegap.com, you'll get an .apk like this one that shows the issue.  http://www1.plurib.us/201X/NotificationExample-release.apk\nI should also note, IIRC in neither #1 or #2 situations above is the callback function called, that outputs \"Notification1 created.\"\n. Calling \"chrome.runtime.setManifest()\" in a deviceready handler solved it.  Thanks!\n. I should add, the alarms do in fact appear to be cleared despite the callback not getting fired, but the clearing seems to be asynchronous.  (If I clear, then immediately add more, the clear sometimes clobbers the ones I'm trying to add after the clear.)  So being able to use the callback here would be really helpful.\n. ",
    "wesleycho": "I was able to verify that it had <access origin=\"*\"/>.  I had to run cca upgrade in order to fix this on my machine.\n. Sorry, I left out an important detail - when I removed \"gcm\", that is when the failure started.\n. Ideally I just want to loosen it, since we support theming for our various clients at my company.\nThanks for the tip.\n. I was able to verify that it had <access origin=\"*\"/>.  I had to run cca upgrade in order to fix this on my machine.\n. Sorry, I left out an important detail - when I removed \"gcm\", that is when the failure started.\n. Ideally I just want to loosen it, since we support theming for our various clients at my company.\nThanks for the tip.\n. ",
    "scmsystm": "It seem history.replaceState() fail with chrome-extension:// uri scheme in crosswalk > 9.\nas org.chromium.boostrap/api/mobile.js:80 is using it.\n. It seem history.replaceState() fail with chrome-extension:// uri scheme in crosswalk > 9.\nas org.chromium.boostrap/api/mobile.js:80 is using it.\n. ",
    "jonobr1": "Just to clarify, does cca v0.5.1 address this problem or do we need to still use the workaround for this?\n. I've tried it and it doesn't work on an S6 because of the Google Chrome issue posted in the reddit thread: https://code.google.com/p/chromium/issues/detail?id=470894\nI can give you an APK if you're interested in trying it out.\n. Ah, I'll give that a try. Thanks!\n. Unfortunately that didn't fix my issue, but it may fix other people's. For clarity you write xwalk --ignore-gpu-blacklist in a file called xwalk-command-line in /platforms/android/assets/.\nFYI, latest Samsung OS update fixes whatever extension that was missing from Chromium. :+1: \n. Just to clarify, does cca v0.5.1 address this problem or do we need to still use the workaround for this?\n. I've tried it and it doesn't work on an S6 because of the Google Chrome issue posted in the reddit thread: https://code.google.com/p/chromium/issues/detail?id=470894\nI can give you an APK if you're interested in trying it out.\n. Ah, I'll give that a try. Thanks!\n. Unfortunately that didn't fix my issue, but it may fix other people's. For clarity you write xwalk --ignore-gpu-blacklist in a file called xwalk-command-line in /platforms/android/assets/.\nFYI, latest Samsung OS update fixes whatever extension that was missing from Chromium. :+1: \n. ",
    "bannostookaylo": "I was going to look into that but I was worried after running \ncca build android --release\nIt would get over written.\n. @agrieve \nI just tried setting \n<preference name=\"Orientation\" value=\"default\" />\nin the config.xml and it didn't work. I've double checked that allow screen rotation is enabled on my phone.\n. So I've narrowed this issue down some... I think it maybe a bug... \nUpon opening the App for the first time the screen rotates. Once I close out of it or go to the home page then re-open the app the screen no longer rotates. To get it to rotate again I have to uninstall the app and re-install it. Again, however, it only rotates on the initial opening of the app. Once I navigate away from the app the screen no longer rotates.\n. I just tried updating to the most recent version as well cca v0.5.1 and am still getting the same screen rotation issues.\n. I am developing with a Note 3\n. I was going to look into that but I was worried after running \ncca build android --release\nIt would get over written.\n. @agrieve \nI just tried setting \n<preference name=\"Orientation\" value=\"default\" />\nin the config.xml and it didn't work. I've double checked that allow screen rotation is enabled on my phone.\n. So I've narrowed this issue down some... I think it maybe a bug... \nUpon opening the App for the first time the screen rotates. Once I close out of it or go to the home page then re-open the app the screen no longer rotates. To get it to rotate again I have to uninstall the app and re-install it. Again, however, it only rotates on the initial opening of the app. Once I navigate away from the app the screen no longer rotates.\n. I just tried updating to the most recent version as well cca v0.5.1 and am still getting the same screen rotation issues.\n. I am developing with a Note 3\n. ",
    "dominik0711": "For iOS platform setting Orientation with <preference name=\"Orientation\" value=\"default\"/> in config.xml does not have any influence on rotation behavior! The project's PLIST entries Supported interface orientations and Supported interface orientations (iPad) are not set correctly! I have to set all supported interface orientations manually.\nAnd what about Android? Where do I have to implement interface orientation? Does someone has a working example for me?\nThanks\n. There is no difference with this setting. Any other suggestions? Is there any working example which is available here?\nThanks\n. For iOS platform setting Orientation with <preference name=\"Orientation\" value=\"default\"/> in config.xml does not have any influence on rotation behavior! The project's PLIST entries Supported interface orientations and Supported interface orientations (iPad) are not set correctly! I have to set all supported interface orientations manually.\nAnd what about Android? Where do I have to implement interface orientation? Does someone has a working example for me?\nThanks\n. There is no difference with this setting. Any other suggestions? Is there any working example which is available here?\nThanks\n. ",
    "bpowers": "@mmocny Actually I've already a Google ICLA (name: Bobby Powers), so I think we should be good on that side of things?\n. awesome, thanks!\n. huh, it does seem like I'm the one confused here.  I think what happened, perhaps, is that I did cca plugin add org.chromium.bluetoothLowEnergy, and it looks like I got an old version that didn't have a source directory.  Damn :)  I'll switch to the latest code and verify things are working as intended.\n. For the record, the reason I took this approach (clobbering bluetooth) is because that seems to be how the iOS side of things works.  I assumed there was a reason for that.\n. got it - makes sense about the coupling.\nGoing to close this, the code on master seems to generally be working for me.  Thanks!\n. oh cool, I'll look at that!\n. @mmocny Actually I've already a Google ICLA (name: Bobby Powers), so I think we should be good on that side of things?\n. awesome, thanks!\n. huh, it does seem like I'm the one confused here.  I think what happened, perhaps, is that I did cca plugin add org.chromium.bluetoothLowEnergy, and it looks like I got an old version that didn't have a source directory.  Damn :)  I'll switch to the latest code and verify things are working as intended.\n. For the record, the reason I took this approach (clobbering bluetooth) is because that seems to be how the iOS side of things works.  I assumed there was a reason for that.\n. got it - makes sense about the coupling.\nGoing to close this, the code on master seems to generally be working for me.  Thanks!\n. oh cool, I'll look at that!\n. ",
    "VictorQueiroz": "I just uninstalled everything about JDK on my OS and installed Java 8.\nsudo apt-get purge -y openjdk*\nsudo apt-get install -y openjdk-8-jre openjdk-8-jdk\nIt did the job, thank's!\n. I just uninstalled everything about JDK on my OS and installed Java 8.\nsudo apt-get purge -y openjdk*\nsudo apt-get install -y openjdk-8-jre openjdk-8-jdk\nIt did the job, thank's!\n. ",
    "uriva": "Yeah I know about chrome.gcm, but I thought the whole point of this framework is that it is cross platform.\nSome feedback to whom it may concern: for me the lack of cloud messaging for iOS, and the fact I can't easily use third party plugins to compensate for it, was the last straw... it takes a lot of effort trying to get things to work on iOS and android that it's just not worth it. Things appear easier within cordova.\nPerhaps I'll try again when things are more mature.\n. @agrieve \n1) Perhaps a better explanation about the project tree and a list of available plugins would be good in the main tutorial. I couldn't find this easily, although I did try searching something like this. Of course the name \"mobile chrome apps\" is very useless when searching.\n2) It isn't clear from the docs of the chrome.pushMessaging if it enables display of notifications in iOS when the app is inactive. Also the docs refer the chrome API docs which state that this API is deprecated.\n. Now I see that the plugins are listed there, somehow missed that. Thanks.\nHowever after reading about it, I still don't understand if the push messaging plugin enables display of notifications in iOS and android when the app is inactive (closed or inactive).\n. Yeah I know about chrome.gcm, but I thought the whole point of this framework is that it is cross platform.\nSome feedback to whom it may concern: for me the lack of cloud messaging for iOS, and the fact I can't easily use third party plugins to compensate for it, was the last straw... it takes a lot of effort trying to get things to work on iOS and android that it's just not worth it. Things appear easier within cordova.\nPerhaps I'll try again when things are more mature.\n. @agrieve \n1) Perhaps a better explanation about the project tree and a list of available plugins would be good in the main tutorial. I couldn't find this easily, although I did try searching something like this. Of course the name \"mobile chrome apps\" is very useless when searching.\n2) It isn't clear from the docs of the chrome.pushMessaging if it enables display of notifications in iOS when the app is inactive. Also the docs refer the chrome API docs which state that this API is deprecated.\n. Now I see that the plugins are listed there, somehow missed that. Thanks.\nHowever after reading about it, I still don't understand if the push messaging plugin enables display of notifications in iOS and android when the app is inactive (closed or inactive).\n. ",
    "topless": "It doesn't work either when loads from /etc/.../limits.conf, or setting them manually, or load them from .bashrc. Could it be some sort of permission configuration on that particular machine?\n. ulimit -n now prints 8192 which is the value I define in /etc/security/limits.conf\n. I have posted a more specific question on SO, as I didn't consider it an issue in first place.\n. It doesn't work either when loads from /etc/.../limits.conf, or setting them manually, or load them from .bashrc. Could it be some sort of permission configuration on that particular machine?\n. ulimit -n now prints 8192 which is the value I define in /etc/security/limits.conf\n. I have posted a more specific question on SO, as I didn't consider it an issue in first place.\n. ",
    "karlwestin": "Might be worth mentioning this:\ni took the cca module from this repo, init:ed the submodules and then used the current master via npm link. Then we were able to build the project alex mentioned above.\nSo i guess, could you please publish a new version to NPM?\n. Thanks!\nWhen the cordova plugin gods in their mercyfulness gives us the new version 1.1.3, we can build. Some machines still pulls in 1.1.2, i guess for some cache reasons, hopefully that will go away in a day or so :)\nMay i suggest version locking the different plugins in a published NPM version, + change the habit of removing old plugins from the repo? That way, we users can at lease back pedal a little bit on breaking changes like this\n. Might be worth mentioning this:\ni took the cca module from this repo, init:ed the submodules and then used the current master via npm link. Then we were able to build the project alex mentioned above.\nSo i guess, could you please publish a new version to NPM?\n. Thanks!\nWhen the cordova plugin gods in their mercyfulness gives us the new version 1.1.3, we can build. Some machines still pulls in 1.1.2, i guess for some cache reasons, hopefully that will go away in a day or so :)\nMay i suggest version locking the different plugins in a published NPM version, + change the habit of removing old plugins from the repo? That way, we users can at lease back pedal a little bit on breaking changes like this\n. ",
    "drewp": "Then, \nExecution failed for task ':CordovaLib:compileDebugJava'.\n\nCannot find System Java Compiler. Ensure that you have installed a JDK (not just a JRE) and configured your JAVA_HOME system variable to point to the according directory.\n. Then, \nExecution failed for task ':CordovaLib:compileDebugJava'.\nCannot find System Java Compiler. Ensure that you have installed a JDK (not just a JRE) and configured your JAVA_HOME system variable to point to the according directory.\n. \n",
    "sandstrom": "InAppBrowser is useful for authentication flows (OpenID-Connect, SAML, etc) in Cordova apps without needing custom protocols.\nI understand the clobbering-issue (and I would actually prefer if this Cordova plugin didn't clobber window.open). Just wanted to chime in and say that I'd prefer if your solution leaves some way of accessing the iab-plugin.\nI've opened an issue in Cordova's issue tracker on changing the api: \nhttps://issues.apache.org/jira/browse/CB-8444\n. InAppBrowser is useful for authentication flows (OpenID-Connect, SAML, etc) in Cordova apps without needing custom protocols.\nI understand the clobbering-issue (and I would actually prefer if this Cordova plugin didn't clobber window.open). Just wanted to chime in and say that I'd prefer if your solution leaves some way of accessing the iab-plugin.\nI've opened an issue in Cordova's issue tracker on changing the api: \nhttps://issues.apache.org/jira/browse/CB-8444\n. ",
    "davivid": "Also happens with my second device:\nEE Kestrel / Huawei Ascend G6 \nAny ideas how I could solve this?\n. Also happens with my second device:\nEE Kestrel / Huawei Ascend G6 \nAny ideas how I could solve this?\n. ",
    "gngeorgiev": "Okay, so I had the same issue with my polymer app. Here is the solution (or at least a good start). First, you need to make the container scrollable. So, if all of your inputs are inside a div which has a 100% width and height you need to add the following properties to it:\ncss\n.scroll {\n  overflow: scroll;\n  position: absolute;\n  width: 100%;\n}\nNow, the very least which you will get is that you will be able to scroll the view when the keyboard opens.\nAnother step which I will take when I get to it is to use the Ionic's keyboard plugin to manually scroll to the input when the keyboard opens.\nI hope this will help, let me know of the results since I am in the process of working through it myself.\n. Okay, so I had the same issue with my polymer app. Here is the solution (or at least a good start). First, you need to make the container scrollable. So, if all of your inputs are inside a div which has a 100% width and height you need to add the following properties to it:\ncss\n.scroll {\n  overflow: scroll;\n  position: absolute;\n  width: 100%;\n}\nNow, the very least which you will get is that you will be able to scroll the view when the keyboard opens.\nAnother step which I will take when I get to it is to use the Ionic's keyboard plugin to manually scroll to the input when the keyboard opens.\nI hope this will help, let me know of the results since I am in the process of working through it myself.\n. ",
    "apaulus": "Sounds great! Keep up the good work :)\n. Sounds great! Keep up the good work :)\n. ",
    "clintwood": "The problem is that the chrome-app-developer-tool-client dependency here uses a very old version of \"agentkeepalive\": \"~0.2\" which does not use proper semver checking against the running node version information.\nI just hacked it in the global npm registry on my machine for now. In file <whatever>/npm/node_modules/cca/node_modules/chrome-app-developer-tool-client/node_modules/agentkeepalive/lib/agent.js I changed from this \nif (process.version.indexOf('v0.8.') === 0 || process.version.indexOf('v0.10.') === 0) {\n  OriginalAgent = require('./_http_agent').Agent;\n  debug('%s use _http_agent', process.version);\n}\nto\nif (true || process.version.indexOf('v0.8.') === 0 || process.version.indexOf('v0.10.') === 0) {\n  OriginalAgent = require('./_http_agent').Agent;\n  debug('%s use _http_agent', process.version);\n}\nNOTE: the true in the if statement!\n. The problem is that the chrome-app-developer-tool-client dependency here uses a very old version of \"agentkeepalive\": \"~0.2\" which does not use proper semver checking against the running node version information.\nI just hacked it in the global npm registry on my machine for now. In file <whatever>/npm/node_modules/cca/node_modules/chrome-app-developer-tool-client/node_modules/agentkeepalive/lib/agent.js I changed from this \nif (process.version.indexOf('v0.8.') === 0 || process.version.indexOf('v0.10.') === 0) {\n  OriginalAgent = require('./_http_agent').Agent;\n  debug('%s use _http_agent', process.version);\n}\nto\nif (true || process.version.indexOf('v0.8.') === 0 || process.version.indexOf('v0.10.') === 0) {\n  OriginalAgent = require('./_http_agent').Agent;\n  debug('%s use _http_agent', process.version);\n}\nNOTE: the true in the if statement!\n. ",
    "sLatzko": "thats great news! I'll try it right now!\n. Alright, I've upgraded cca to 0.6.0-rc1.\nI guess there has been changed something about the manifest.json because the information doesn't get used anymore. So I tried to change the mobile.manifest.json which looks like this right now:\njson\n{\n    \"packageId\": \"com.JohanniterDienstplan\",\n    \"name\": \"Johanniter Dienstplan\",\n    \"version\": \"0.2\",\n    \"manifest_version\": 2,\n    \"app\": {\n        \"background\": {\n            \"scripts\": [\"background.js\"]\n        }\n    },\n/*  \"icons\": {\n        \"16\": \"icons/icon_16.png\",\n        \"36\": \"icons/icon_36.png\",\n        \"48\": \"icons/icon_48.png\",\n        \"57\": \"icons/icon_57.png\",\n        \"72\": \"icons/icon_72.png\",\n        \"78\": \"icons/icon_78.png\",\n        \"96\": \"icons/icon_96.png\",\n        \"114\": \"icons/icon_114.png\",\n        \"120\": \"icons/icon_120.png\",\n        \"128\": \"icons/icon_128.png\",\n        \"144\": \"icons/icon_144.png\",\n        \"152\": \"icons/icon_152.png\"\n    },*/\n    \"permissions\": [\n        \"https://dp.johanniter.at/*\",\n        \"storage\"\n    ],\n    \"minimum_chrome_version\": \"28\",\n    // Android-only overrides here (e.g. icons, name, version)\n    \"android\": {},\n    // iOS-only overrides here (e.g. icons, name, version)\n    \"ios\": {},\n    // Uncomment to use system WebView rather than Crosswalk\n    // \"webview\": \"system\",\n    // Uncomment to enable use of eval()\n    // \"cspUnsafeEval\": true,\n    // Uncomment to enable use of inline <script>\n    // \"cspUnsafeInline\": true,\n}\nBefore this change a white screen appeared showing \"Hello, mobile\".\nAfterwards I've gotten an error - Failed Version Downgrade. \nBut I don't understand why because the emulator uses android 5.0\n```\nFailed to launch app on emulator: Failed to install apk to emulator:    pkg: /data/local/tmp/android-x86-debug.apk\nFailure [INSTALL_FAILED_VERSION_DOWNGRADE]\nError: /Users/Stefan/joh-dpa/platforms/android/cordova/run: Command failed with exit code 1\n    at ChildProcess.whenDone (/usr/local/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/src/cordova/superspawn.js:131:23)\n    at ChildProcess.emit (events.js:110:17)\n    at maybeClose (child_process.js:1008:16)\n    at Process.ChildProcess._handle.onexit (child_process.js:1080:5)\n```\nAny guesses? \n. Thank you for your help.\nJust to inform you. I recreated my cca project and found out that\ncca create projectName --link-to:Path/to/Project\ndoesn't include the project files into the /www folder anymore. I copied all files manually and got it up and running for now. I also had to change the manifest.json manually.\n. You're right, my fault. Sorry. --link-to=path worked as expected. Thus no need to change the manifest.json.\nBut something different.\nWhile building and deploying the cca project per terminal works normally, I've problems sorting out error messages in eclipse after I've used Project > clean. It seems to me those packages are missing.\njava\nimport org.xwalk.core.XWalkNavigationHistory;\nimport org.xwalk.core.XWalkView;\nimport org.xwalk.core.JavascriptInterface;\nimport org.xwalk.core.XWalkPreferences;\nimport org.xwalk.core.XWalkResourceClient;\nimport org.xwalk.core.XWalkUIClient;\nimport org.xwalk.core.XWalkJavascriptResult;\nimport org.xwalk.core.XWalkUIClient;\nimport org.xwalk.core.internal.XWalkCookieManager;\nimport org.xwalk.core.XWalkResourceClient;\nimport org.chromium.net.NetError;\nHave I missed something?\n. Alright, won't hurt me. \nJust for the record. The security warning has been dismissed some hours after I uploaded the new version. \n. Mine does work with cca 0.6.0.\nDo you use vulcanize, so you don't violate the csp? \nhttps://www.polymer-project.org/0.5/articles/concatenating-web-components.html\n. You helped me a lot again. Thank you. \nTurns out I've gotten this \nReferenceError: Can't find variable: query\nerror message. It is caused by a ? in a <a href=\"mailto:someone@some.where?subject=Feedback>-Tag\nhttps://github.com/Polymer/polymer/issues/1347\nI commented it out and this particular error vanished. Just to find out that I now get following error:\nTypeError: Attempted to assign to readonly property.\nAs far as I have understood, it is a Safari Bug related to use strict.\nhttp://stackoverflow.com/questions/26044056/typeerror-attempted-to-assign-to-readonly-property-in-angularjs-application-on\nhttps://bugs.webkit.org/show_bug.cgi?id=138038\nI guess I need to point out this bug over at the Polymer repo.\n. I updated everything with bower updatewhich solved my issues. Thanks for helping again.\n. thats great news! I'll try it right now!\n. Alright, I've upgraded cca to 0.6.0-rc1.\nI guess there has been changed something about the manifest.json because the information doesn't get used anymore. So I tried to change the mobile.manifest.json which looks like this right now:\njson\n{\n    \"packageId\": \"com.JohanniterDienstplan\",\n    \"name\": \"Johanniter Dienstplan\",\n    \"version\": \"0.2\",\n    \"manifest_version\": 2,\n    \"app\": {\n        \"background\": {\n            \"scripts\": [\"background.js\"]\n        }\n    },\n/*  \"icons\": {\n        \"16\": \"icons/icon_16.png\",\n        \"36\": \"icons/icon_36.png\",\n        \"48\": \"icons/icon_48.png\",\n        \"57\": \"icons/icon_57.png\",\n        \"72\": \"icons/icon_72.png\",\n        \"78\": \"icons/icon_78.png\",\n        \"96\": \"icons/icon_96.png\",\n        \"114\": \"icons/icon_114.png\",\n        \"120\": \"icons/icon_120.png\",\n        \"128\": \"icons/icon_128.png\",\n        \"144\": \"icons/icon_144.png\",\n        \"152\": \"icons/icon_152.png\"\n    },*/\n    \"permissions\": [\n        \"https://dp.johanniter.at/*\",\n        \"storage\"\n    ],\n    \"minimum_chrome_version\": \"28\",\n    // Android-only overrides here (e.g. icons, name, version)\n    \"android\": {},\n    // iOS-only overrides here (e.g. icons, name, version)\n    \"ios\": {},\n    // Uncomment to use system WebView rather than Crosswalk\n    // \"webview\": \"system\",\n    // Uncomment to enable use of eval()\n    // \"cspUnsafeEval\": true,\n    // Uncomment to enable use of inline <script>\n    // \"cspUnsafeInline\": true,\n}\nBefore this change a white screen appeared showing \"Hello, mobile\".\nAfterwards I've gotten an error - Failed Version Downgrade. \nBut I don't understand why because the emulator uses android 5.0\n```\nFailed to launch app on emulator: Failed to install apk to emulator:    pkg: /data/local/tmp/android-x86-debug.apk\nFailure [INSTALL_FAILED_VERSION_DOWNGRADE]\nError: /Users/Stefan/joh-dpa/platforms/android/cordova/run: Command failed with exit code 1\n    at ChildProcess.whenDone (/usr/local/lib/node_modules/cca/node_modules/cordova/node_modules/cordova-lib/src/cordova/superspawn.js:131:23)\n    at ChildProcess.emit (events.js:110:17)\n    at maybeClose (child_process.js:1008:16)\n    at Process.ChildProcess._handle.onexit (child_process.js:1080:5)\n```\nAny guesses? \n. Thank you for your help.\nJust to inform you. I recreated my cca project and found out that\ncca create projectName --link-to:Path/to/Project\ndoesn't include the project files into the /www folder anymore. I copied all files manually and got it up and running for now. I also had to change the manifest.json manually.\n. You're right, my fault. Sorry. --link-to=path worked as expected. Thus no need to change the manifest.json.\nBut something different.\nWhile building and deploying the cca project per terminal works normally, I've problems sorting out error messages in eclipse after I've used Project > clean. It seems to me those packages are missing.\njava\nimport org.xwalk.core.XWalkNavigationHistory;\nimport org.xwalk.core.XWalkView;\nimport org.xwalk.core.JavascriptInterface;\nimport org.xwalk.core.XWalkPreferences;\nimport org.xwalk.core.XWalkResourceClient;\nimport org.xwalk.core.XWalkUIClient;\nimport org.xwalk.core.XWalkJavascriptResult;\nimport org.xwalk.core.XWalkUIClient;\nimport org.xwalk.core.internal.XWalkCookieManager;\nimport org.xwalk.core.XWalkResourceClient;\nimport org.chromium.net.NetError;\nHave I missed something?\n. Alright, won't hurt me. \nJust for the record. The security warning has been dismissed some hours after I uploaded the new version. \n. Mine does work with cca 0.6.0.\nDo you use vulcanize, so you don't violate the csp? \nhttps://www.polymer-project.org/0.5/articles/concatenating-web-components.html\n. You helped me a lot again. Thank you. \nTurns out I've gotten this \nReferenceError: Can't find variable: query\nerror message. It is caused by a ? in a <a href=\"mailto:someone@some.where?subject=Feedback>-Tag\nhttps://github.com/Polymer/polymer/issues/1347\nI commented it out and this particular error vanished. Just to find out that I now get following error:\nTypeError: Attempted to assign to readonly property.\nAs far as I have understood, it is a Safari Bug related to use strict.\nhttp://stackoverflow.com/questions/26044056/typeerror-attempted-to-assign-to-readonly-property-in-angularjs-application-on\nhttps://bugs.webkit.org/show_bug.cgi?id=138038\nI guess I need to point out this bug over at the Polymer repo.\n. I updated everything with bower updatewhich solved my issues. Thanks for helping again.\n. ",
    "vhk": "ok\u00e9, thank you. i'll try to add the plugin instead.\n. the samsung P7510 is android 4.0.4, de phone is android 4.3\n. ok\u00e9, thank you. i'll give it a try\n. ok\u00e9, thank you. i'll try to add the plugin instead.\n. the samsung P7510 is android 4.0.4, de phone is android 4.3\n. ok\u00e9, thank you. i'll give it a try\n. ",
    "sebasi": "@GustavoCostaW you can just create a hook. Create a directory called \"after_prepare\" in your project/hooks directory. In there, create a file with the following contents:\n```\n!/bin/bash\nif [ -f \"platforms/android/AndroidManifest.xml\" ]; then\n    echo \"Changing 'windowSoftInputMode' from 'adjustResize' to 'adjustPan' in AndroidManifest.xml to prevent flickering\"\n    sed -i 's/android:windowSoftInputMode=\"adjustResize\"/android:windowSoftInputMode=\"adjustPan\"/' platforms/android/AndroidManifest.xml\nfi\n```\n. @GustavoCostaW you can just create a hook. Create a directory called \"after_prepare\" in your project/hooks directory. In there, create a file with the following contents:\n```\n!/bin/bash\nif [ -f \"platforms/android/AndroidManifest.xml\" ]; then\n    echo \"Changing 'windowSoftInputMode' from 'adjustResize' to 'adjustPan' in AndroidManifest.xml to prevent flickering\"\n    sed -i 's/android:windowSoftInputMode=\"adjustResize\"/android:windowSoftInputMode=\"adjustPan\"/' platforms/android/AndroidManifest.xml\nfi\n```\n. ",
    "trazek": "I am trying to apply this pacth in my ionic app and have the following in my XWalkCordovaView.java:\nboolean prefAnimatable = preferences == null ? false : preferences.getBoolean(\"CrosswalkAnimatable\", false);\n            boolean manifestAnimatable = ai.metaData == null ? false : ai.metaData.getBoolean(\"CrosswalkAnimatable\");\n            if (prefAnimatable || manifestAnimatable) {\n                // Slows it down a bit, but allows for it to be animated by Android View properties.\n                XWalkPreferences.setValue(XWalkPreferences.ANIMATABLE_XWALK_VIEW, false);\n            }\nHowever when I build the app, the flickering still happens. Am I missing a step? I essentially made the file change and rebuild. Any help is appreciated!\nhttps://crosswalk-project.org/jira/browse/XWALK-3547\nEDIT:\nThis fixed my issue:\nhttps://github.com/driftyco/ionic-cli/issues/521\n. I am trying to apply this pacth in my ionic app and have the following in my XWalkCordovaView.java:\nboolean prefAnimatable = preferences == null ? false : preferences.getBoolean(\"CrosswalkAnimatable\", false);\n            boolean manifestAnimatable = ai.metaData == null ? false : ai.metaData.getBoolean(\"CrosswalkAnimatable\");\n            if (prefAnimatable || manifestAnimatable) {\n                // Slows it down a bit, but allows for it to be animated by Android View properties.\n                XWalkPreferences.setValue(XWalkPreferences.ANIMATABLE_XWALK_VIEW, false);\n            }\nHowever when I build the app, the flickering still happens. Am I missing a step? I essentially made the file change and rebuild. Any help is appreciated!\nhttps://crosswalk-project.org/jira/browse/XWALK-3547\nEDIT:\nThis fixed my issue:\nhttps://github.com/driftyco/ionic-cli/issues/521\n. ",
    "kctang": "I got the same issue. Tried to downgrade org.chromium.i18n from 2.0.0 to 1.1.1.\nBuild is successful but I have not tried running (not expecting any problem). Thanks guys!\n. @felquis, I posted the comment after a quick test on a clean/blank cca 0.5.1 project, so it was done manually using ./cca from the cca project directory instead of via grunt cordovacli.\n```\nthe remove command gave some warning about the i18n plugin is required but works anyway\n./cca plugin remove org.chromium.i18n\nadd the previous version (i guessed the version from http://plugins.cordova.io/#/package/org.chromium.i18n)\n./cca plugin add org.chromium.i18n@1.1.1\n```\nWill try this on my cordovacli based project in the next few days.\n. I got the same issue. Tried to downgrade org.chromium.i18n from 2.0.0 to 1.1.1.\nBuild is successful but I have not tried running (not expecting any problem). Thanks guys!\n. @felquis, I posted the comment after a quick test on a clean/blank cca 0.5.1 project, so it was done manually using ./cca from the cca project directory instead of via grunt cordovacli.\n```\nthe remove command gave some warning about the i18n plugin is required but works anyway\n./cca plugin remove org.chromium.i18n\nadd the previous version (i guessed the version from http://plugins.cordova.io/#/package/org.chromium.i18n)\n./cca plugin add org.chromium.i18n@1.1.1\n```\nWill try this on my cordovacli based project in the next few days.\n. ",
    "ragingwind": "If would you like to use vulcanize(with gulp) on developing with cca. Take look this: https://github.com/ragingwind/mobile-chrome-apps-starter-kit\n. If would you like to use vulcanize(with gulp) on developing with cca. Take look this: https://github.com/ragingwind/mobile-chrome-apps-starter-kit\n. ",
    "shanling": "I'll give Vulcanize a try, thanks.\n. Thanks!\n. I'm having this same bug. When I cca prepare/build ios it doesn't seem to be copying the correct icon sizes to the iOS resources folder (it works fine on Android!). It appears to be taking whatever your last icon in the icon list from manifest.json is and just copying that for every icon size (when I had 152 as the last in the list it made them all 152, now they are all 180). My config.xml says this:\n<icon src=\"www/img/icons/icon_180.png\" />\n<icon src=\"www/img/icons/icon_29.png\" width=\"29\" />\n<icon src=\"www/img/icons/icon_36.png\" width=\"36\" />\n<icon src=\"www/img/icons/icon_40.png\" width=\"40\" />\n<icon src=\"www/img/icons/icon_48.png\" width=\"48\" />\n<icon src=\"www/img/icons/icon_57.png\" width=\"57\" />\n<icon src=\"www/img/icons/icon_58.png\" width=\"58\" />\n<icon src=\"www/img/icons/icon_72.png\" width=\"72\" />\n<icon src=\"www/img/icons/icon_76.png\" width=\"76\" />\n<icon src=\"www/img/icons/icon_78.png\" width=\"78\" />\n<icon src=\"www/img/icons/icon_80.png\" width=\"80\" />\n<icon src=\"www/img/icons/icon_87.png\" width=\"87\" />\n<icon src=\"www/img/icons/icon_96.png\" width=\"96\" />\n<icon src=\"www/img/icons/icon_120.png\" width=\"120\" />\n<icon src=\"www/img/icons/icon_152.png\" width=\"152\" />\n<icon src=\"www/img/icons/icon_180.png\" width=\"180\" />\nand my manifest.json:\n\"icons\": {\n    \"29\": \"img/icons/icon_29.png\",\n    \"36\": \"img/icons/icon_36.png\",\n    \"40\": \"img/icons/icon_40.png\",\n    \"48\": \"img/icons/icon_48.png\",\n    \"57\": \"img/icons/icon_57.png\",\n    \"58\": \"img/icons/icon_58.png\",\n    \"72\": \"img/icons/icon_72.png\",\n    \"76\": \"img/icons/icon_76.png\",\n    \"78\": \"img/icons/icon_78.png\",\n    \"80\": \"img/icons/icon_80.png\",\n    \"87\": \"img/icons/icon_87.png\",\n    \"96\": \"img/icons/icon_96.png\",\n    \"120\": \"img/icons/icon_120.png\",\n    \"152\": \"img/icons/icon_152.png\",\n    \"180\": \"img/icons/icon_180.png\"\n},\nA temporary fix is to go into the iOS platform resource folder after preparing and manually resaving everything to the correct size. There's a list of what sizes the names correspond to here:\nhttps://developer.apple.com/library/ios/qa/qa1686/_index.html\n. I'll give Vulcanize a try, thanks.\n. Thanks!\n. I'm having this same bug. When I cca prepare/build ios it doesn't seem to be copying the correct icon sizes to the iOS resources folder (it works fine on Android!). It appears to be taking whatever your last icon in the icon list from manifest.json is and just copying that for every icon size (when I had 152 as the last in the list it made them all 152, now they are all 180). My config.xml says this:\n<icon src=\"www/img/icons/icon_180.png\" />\n<icon src=\"www/img/icons/icon_29.png\" width=\"29\" />\n<icon src=\"www/img/icons/icon_36.png\" width=\"36\" />\n<icon src=\"www/img/icons/icon_40.png\" width=\"40\" />\n<icon src=\"www/img/icons/icon_48.png\" width=\"48\" />\n<icon src=\"www/img/icons/icon_57.png\" width=\"57\" />\n<icon src=\"www/img/icons/icon_58.png\" width=\"58\" />\n<icon src=\"www/img/icons/icon_72.png\" width=\"72\" />\n<icon src=\"www/img/icons/icon_76.png\" width=\"76\" />\n<icon src=\"www/img/icons/icon_78.png\" width=\"78\" />\n<icon src=\"www/img/icons/icon_80.png\" width=\"80\" />\n<icon src=\"www/img/icons/icon_87.png\" width=\"87\" />\n<icon src=\"www/img/icons/icon_96.png\" width=\"96\" />\n<icon src=\"www/img/icons/icon_120.png\" width=\"120\" />\n<icon src=\"www/img/icons/icon_152.png\" width=\"152\" />\n<icon src=\"www/img/icons/icon_180.png\" width=\"180\" />\nand my manifest.json:\n\"icons\": {\n    \"29\": \"img/icons/icon_29.png\",\n    \"36\": \"img/icons/icon_36.png\",\n    \"40\": \"img/icons/icon_40.png\",\n    \"48\": \"img/icons/icon_48.png\",\n    \"57\": \"img/icons/icon_57.png\",\n    \"58\": \"img/icons/icon_58.png\",\n    \"72\": \"img/icons/icon_72.png\",\n    \"76\": \"img/icons/icon_76.png\",\n    \"78\": \"img/icons/icon_78.png\",\n    \"80\": \"img/icons/icon_80.png\",\n    \"87\": \"img/icons/icon_87.png\",\n    \"96\": \"img/icons/icon_96.png\",\n    \"120\": \"img/icons/icon_120.png\",\n    \"152\": \"img/icons/icon_152.png\",\n    \"180\": \"img/icons/icon_180.png\"\n},\nA temporary fix is to go into the iOS platform resource folder after preparing and manually resaving everything to the correct size. There's a list of what sizes the names correspond to here:\nhttps://developer.apple.com/library/ios/qa/qa1686/_index.html\n. ",
    "tssweeney": "Thank you for the reminder - you were correct, npm was failing to update due to a redundant copy in my bin folder. Again, thank you for your time!\nClosing issue...\n. Thank you for the reminder - you were correct, npm was failing to update due to a redundant copy in my bin folder. Again, thank you for your time!\nClosing issue...\n. ",
    "fujunwei": "I'd glad to do this.\nI am trying to reproduce this issue.\n. I use cordova-plugin-indexedDB plugin to create databases and add new record. it works finely.\nIt would be helpful if you could describe test steps or simplify your usage scenario to reproduce the issue. Thanks.\n. Do you mean users installed the apk which generated by cca v0.5.1, data can be stored int the IDB, but after users update the apk which generated by cca v0.6.0. the IDB was wiped? \n. It can be reproduced  after upgrading app from Crosswalk 8 to Crosswalk 11, but it works finely from Crosswalk 9 to Crosswalk 11 and the same version upgrade.\n. We had approach to fix it, and created a JIRA ticket to keep track of this. \nhttps://crosswalk-project.org/jira/browse/XWALK-4047\n. The IndexedDB wasn't wiped but the upgraded Crosswalk didn't used it. You can find it in /data/data/org.example.testing/app_xwalkcore/IndexedDB. You can copy it manually under profile's subfolder /data/data/org.example.testing/app_xwalkcore/Default/IndexedDB, the name of the profile is \"Default\" by default. \n. @agrieve  Because Crosswalk 11 is unmaintained, Could you please upgrade crosswalk in cca?\n. I'd glad to do this.\nI am trying to reproduce this issue.\n. I use cordova-plugin-indexedDB plugin to create databases and add new record. it works finely.\nIt would be helpful if you could describe test steps or simplify your usage scenario to reproduce the issue. Thanks.\n. Do you mean users installed the apk which generated by cca v0.5.1, data can be stored int the IDB, but after users update the apk which generated by cca v0.6.0. the IDB was wiped? \n. It can be reproduced  after upgrading app from Crosswalk 8 to Crosswalk 11, but it works finely from Crosswalk 9 to Crosswalk 11 and the same version upgrade.\n. We had approach to fix it, and created a JIRA ticket to keep track of this. \nhttps://crosswalk-project.org/jira/browse/XWALK-4047\n. The IndexedDB wasn't wiped but the upgraded Crosswalk didn't used it. You can find it in /data/data/org.example.testing/app_xwalkcore/IndexedDB. You can copy it manually under profile's subfolder /data/data/org.example.testing/app_xwalkcore/Default/IndexedDB, the name of the profile is \"Default\" by default. \n. @agrieve  Because Crosswalk 11 is unmaintained, Could you please upgrade crosswalk in cca?\n. ",
    "maxfurman": "The node_modules folder is copied into the www/ folder automatically by cca, so I don't have a choice there\n. The node_modules folder is copied into the www/ folder automatically by cca, so I don't have a choice there\n. ",
    "bklynjones": "[Update]:   It does.   I determined the error of my ways.  I had permissions enabled for unsupported APIs. \n. [Update]:   It does.   I determined the error of my ways.  I had permissions enabled for unsupported APIs. \n. ",
    "lrascao": "Whitelist plugin version pinned down to 1.0.0 (the one immediately before the breaking change)\n. Whitelist plugin version pinned down to 1.0.0 (the one immediately before the breaking change)\n. ",
    "nicoceledon": "I upgraded from 0.7.0 to 0.7.1 and got the same error running the command cca prepare and cca build. I tried removing cca and install the 0.7.0 and still got the same error.\n. For now, i installed cca without -g. That solves my problem and allowed me to excecuted the commands\n. I upgraded from 0.7.0 to 0.7.1 and got the same error running the command cca prepare and cca build. I tried removing cca and install the 0.7.0 and still got the same error.\n. For now, i installed cca without -g. That solves my problem and allowed me to excecuted the commands\n. ",
    "bemasc": "Thanks @nicoceledon.  That approach (documented here) worked for me as a workaround.\n. Thanks @nicoceledon.  That approach (documented here) worked for me as a workaround.\n. ",
    "jmorille": "The corresponding isssue is open in cordova-android project https://issues.apache.org/jira/browse/CB-9277\n. Thank for the workaround, it is working.\nThis is not a bug of the plugins but a bug of cordova (cf for detail https://issues.apache.org/jira/browse/CB-9277).\nThis bug is more in relation with the internal message system in cordova, that could means that could have an impact on many other plugins that could use this message processing.\nIn consequence, it is why I have also open this bug in cca to update as soon as possible the cordova dependency and to keep an eye with this ticket\n. You have write, It is a plugins problem because they use deprecated Apis. https://github.com/chariotsolutions/phonegap-nfc/issues/196\n. The corresponding isssue is open in cordova-android project https://issues.apache.org/jira/browse/CB-9277\n. Thank for the workaround, it is working.\nThis is not a bug of the plugins but a bug of cordova (cf for detail https://issues.apache.org/jira/browse/CB-9277).\nThis bug is more in relation with the internal message system in cordova, that could means that could have an impact on many other plugins that could use this message processing.\nIn consequence, it is why I have also open this bug in cca to update as soon as possible the cordova dependency and to keep an eye with this ticket\n. You have write, It is a plugins problem because they use deprecated Apis. https://github.com/chariotsolutions/phonegap-nfc/issues/196\n. ",
    "elegos": "I think I could try to do the Android part, though I've never worked with this library before nor this kind of libraries in general.\n. I think I could try to do the Android part, though I've never worked with this library before nor this kind of libraries in general.\n. ",
    "DanielJoyce": "This is a polymer-dart project. unresolved is never removed from body tags.\n. Polymer Ready is never being fired. \n. This is a polymer-dart project. unresolved is never removed from body tags.\n. Polymer Ready is never being fired. \n. ",
    "dennice13": "Bye and wellcome to hello world by google\n. Bye and wellcome to hello world by google\n. Bye and wellcome to hello world by google\n. Bye and wellcome to hello world by google\n. ",
    "Honry": "We can still reproduce this issue, anyone can help take a look? I will be very appreciate.\n. This way can only specify Crosswalk stable version, what about Crosswalk beta?\n. @agrieve, could you please clarify if cca would support crosswalk beta configuration?\n. We can still reproduce this issue, anyone can help take a look? I will be very appreciate.\n. This way can only specify Crosswalk stable version, what about Crosswalk beta?\n. @agrieve, could you please clarify if cca would support crosswalk beta configuration?\n. ",
    "komacke": "Hmmm...   What are the limitations? I came across one note that syncFileSystem doesn't sync when the app isn't open, which seems like a reasonable limitation for many use cases. Of course I haven't been able to explore the limitations since I don't have it running.\nWould you have any guesses what version of cca it was working?\nWith great optimism, I'll see if I can figure out the \"cca prepare\" issue. Maybe it will just work after that. =8-|\n. I'm continuing to explore. I can't really find a good alternative to syncfilesystem. It may be infeasible for the general case but it seems like it will work for my use case.\nI took it out of the \"STALE\" list in the cca plugins list and compiled. Running on android gave me an error with ChromeStorage. I suspect this version dates prior to the refactor into individual repos on MobileChromeApps and needs some work.\nI found the syncFileSystem code back on Feb 10 in this repo: https://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.syncFileSystem. Supposedly it was moved on Feb 11 into it's own repo.\nWould you be willing/able to provide the source (let me branch) from after the migration to its own repo? It would give me a starting point that presumably is further along than the Feb 10 version.\nThanks so much.\nDave\n. Thanks for your quick response and confirming.\nFor anyone interested in contributing to, following, or attempting to use a \"branch\" of syncFileSystem, I've started it here as its own cordova plugin:\nhttps://github.com/komacke/cordova-syncFileSystem.git\nPlease use that issue list to communicate about it:\nhttps://github.com/komacke/cordova-syncFileSystem/issues\nNote that it doesn't compile yet - cordova Filesystem interfaces have changed. But hopefully I'll find enough time to get it going quickly so I can get back to my project. :)\n. Hmmm...   What are the limitations? I came across one note that syncFileSystem doesn't sync when the app isn't open, which seems like a reasonable limitation for many use cases. Of course I haven't been able to explore the limitations since I don't have it running.\nWould you have any guesses what version of cca it was working?\nWith great optimism, I'll see if I can figure out the \"cca prepare\" issue. Maybe it will just work after that. =8-|\n. I'm continuing to explore. I can't really find a good alternative to syncfilesystem. It may be infeasible for the general case but it seems like it will work for my use case.\nI took it out of the \"STALE\" list in the cca plugins list and compiled. Running on android gave me an error with ChromeStorage. I suspect this version dates prior to the refactor into individual repos on MobileChromeApps and needs some work.\nI found the syncFileSystem code back on Feb 10 in this repo: https://github.com/MobileChromeApps/mobile-chrome-apps/tree/master/chrome-cordova/plugins/chrome.syncFileSystem. Supposedly it was moved on Feb 11 into it's own repo.\nWould you be willing/able to provide the source (let me branch) from after the migration to its own repo? It would give me a starting point that presumably is further along than the Feb 10 version.\nThanks so much.\nDave\n. Thanks for your quick response and confirming.\nFor anyone interested in contributing to, following, or attempting to use a \"branch\" of syncFileSystem, I've started it here as its own cordova plugin:\nhttps://github.com/komacke/cordova-syncFileSystem.git\nPlease use that issue list to communicate about it:\nhttps://github.com/komacke/cordova-syncFileSystem/issues\nNote that it doesn't compile yet - cordova Filesystem interfaces have changed. But hopefully I'll find enough time to get it going quickly so I can get back to my project. :)\n. ",
    "nelsonic": "@agrieve you appear to be working on this repo/project. would you recommend that people use it for new projects...?\n. @mmocny thanks, I understand what is written in the README.... \nhence my question: is there an alternative way of packaging up Chrome Apps for iOS/Android...?\n_or should a _new project consider using mobile-chrome-apps for this purpose?\n.  @agrieve you appear to be working on this repo/project. would you recommend that people use it for new projects...?\n. @mmocny thanks, I understand what is written in the README.... \nhence my question: is there an alternative way of packaging up Chrome Apps for iOS/Android...?\n_or should a _new project consider using mobile-chrome-apps for this purpose?\n. ",
    "mikecarr": "@mmocny Why is this no longer being developed? \n. @mmocny Why is this no longer being developed? \n. ",
    "whitmer": "Hi, I recently transitioned my app from cca to plain jane cordova. In the repo commit where the README was changed, there was a comment basically saying most of what cca was trying to do is now available in cordova. Transitioning wasn't actually as hard as I was afraid it was going to be. I didn't to the best job documenting, but here's the gotchas I remember running into:\nInstead of trying to migrate the app in-place, I made a brand new copy. In the old version I ran cca plugin list to get a list of plugins, and then added them one by one into the new app. I'm using a couple chrome plugins like cordova-plugin-chrome-apps-power that I just pulled over, I didn't worry about the core chrome libraries.\nAdd <script src='cordova.js'></script> to your html file\nmanifest.json and manifest.mobile.json are no longer useful, instead you need to manually add <icon> and <splash> tags to config.xml. I also had to add <access origin=\"*\" /> instead of my custom CSP I was using before.\nIn /platforms/android I added a new file, build-extras.gradle that's just a one-liner that tells cordova to use the release keys I created for cca. This was the part I was most worried about, but it appears to be working correctly. Here's the file:\nI think I also had to manually copy some splash screen images to get them working.\nTo build apks (mostly) the same way as before, I run 4 lines of code (there's probably a way to do this without installing-uninstalling crosswalk, but I'm not that smart):\ncordova plugin add cordova-plugin-crosswalk-webview\ncordova build android --release -- --gradleArg=-PcdvBuildMultipleApks=true\ncordova plugin remove cordova-plugin-crosswalk-webview\ncordova build android --release -- --gradleArg=-PcdvMinSdkVersion=21 --gradleArg=-PcdvBuildMultipleApks=false\nThere are probably a lot more elegant ways to handle this stuff, and I probably forgot something, but hopefully this is helpful. I just pushed my first version of the new app to the Play Store, and it looks like everything is jiving..\n. Hi, I recently transitioned my app from cca to plain jane cordova. In the repo commit where the README was changed, there was a comment basically saying most of what cca was trying to do is now available in cordova. Transitioning wasn't actually as hard as I was afraid it was going to be. I didn't to the best job documenting, but here's the gotchas I remember running into:\nInstead of trying to migrate the app in-place, I made a brand new copy. In the old version I ran cca plugin list to get a list of plugins, and then added them one by one into the new app. I'm using a couple chrome plugins like cordova-plugin-chrome-apps-power that I just pulled over, I didn't worry about the core chrome libraries.\nAdd <script src='cordova.js'></script> to your html file\nmanifest.json and manifest.mobile.json are no longer useful, instead you need to manually add <icon> and <splash> tags to config.xml. I also had to add <access origin=\"*\" /> instead of my custom CSP I was using before.\nIn /platforms/android I added a new file, build-extras.gradle that's just a one-liner that tells cordova to use the release keys I created for cca. This was the part I was most worried about, but it appears to be working correctly. Here's the file:\nI think I also had to manually copy some splash screen images to get them working.\nTo build apks (mostly) the same way as before, I run 4 lines of code (there's probably a way to do this without installing-uninstalling crosswalk, but I'm not that smart):\ncordova plugin add cordova-plugin-crosswalk-webview\ncordova build android --release -- --gradleArg=-PcdvBuildMultipleApks=true\ncordova plugin remove cordova-plugin-crosswalk-webview\ncordova build android --release -- --gradleArg=-PcdvMinSdkVersion=21 --gradleArg=-PcdvBuildMultipleApks=false\nThere are probably a lot more elegant ways to handle this stuff, and I probably forgot something, but hopefully this is helpful. I just pushed my first version of the new app to the Play Store, and it looks like everything is jiving..\n. ",
    "newbsauce": "Many thanks whitmer, wish I had realized they had quit development earlier. ... been running to a lot of broken and missing features. Going to try to switch & learn plane cordova. Looks like chrome apps is dead :( \n. Finally found it, app now builds by adding \n\"webview\": \"crosswalk@18+\",\nto the mobile manifest \n. Many thanks whitmer, wish I had realized they had quit development earlier. ... been running to a lot of broken and missing features. Going to try to switch & learn plane cordova. Looks like chrome apps is dead :( \n. Finally found it, app now builds by adding \n\"webview\": \"crosswalk@18+\",\nto the mobile manifest \n. ",
    "JohnRSim": "My Bad... I had 2 android paths to the SDK and the paths was pointing to the location without 23.. driving me crazy.. :) \n. My Bad... I had 2 android paths to the SDK and the paths was pointing to the location without 23.. driving me crazy.. :) \n. ",
    "googlebot": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. ",
    "Elevista": "I found answer from closed issues, but where can I get the full manifest.mobile.json API?\n. I found answer from closed issues, but where can I get the full manifest.mobile.json API?\n. ",
    "Helidium": "I also need this resolved...\nI found out that ios10 requires additional entries in Content-Security-Policy.\nhttp://stackoverflow.com/questions/38410159/cordova-app-hanging-during-startup-on-ios-10-beta\nTried it without success, maybe you can try it and post your results.\n. Yes I'm having the same problem, I ended up migrating to cordova instead...\n. I also need this resolved...\nI found out that ios10 requires additional entries in Content-Security-Policy.\nhttp://stackoverflow.com/questions/38410159/cordova-app-hanging-during-startup-on-ios-10-beta\nTried it without success, maybe you can try it and post your results.\n. Yes I'm having the same problem, I ended up migrating to cordova instead...\n. ",
    "chuqianyiding": "Helidium, I did the following but it still did not work in ios 10.\n1. I add the meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap://ready file: data: blob: chrome-extension: gopher: gap:; connect-src ; media-src ; style-src file: data: blob: chrome-extension: gopher: gap: 'unsafe-inline';\" to index.html.\n2. I add access origin=\"*\"  to config.xml\n. @Helidium , do you still keep all the plugins in plugins folder when you migrate to cordova?\nI succeed in android but fail in ios. \nI did \"cordova platform add ios\" and open it in xcode. The problem comes from plugin cordova-plugin-chrome-apps-navigation.  I got error \"arc semantic issue no visible @interface for UIView\" for ChromeNavigation.m\n. @ELundby45 It worked. Thank you.\n. Helidium, I did the following but it still did not work in ios 10.\n1. I add the meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap://ready file: data: blob: chrome-extension: gopher: gap:; connect-src ; media-src ; style-src file: data: blob: chrome-extension: gopher: gap: 'unsafe-inline';\" to index.html.\n2. I add access origin=\"*\"  to config.xml\n. @Helidium , do you still keep all the plugins in plugins folder when you migrate to cordova?\nI succeed in android but fail in ios. \nI did \"cordova platform add ios\" and open it in xcode. The problem comes from plugin cordova-plugin-chrome-apps-navigation.  I got error \"arc semantic issue no visible @interface for UIView\" for ChromeNavigation.m\n. @ELundby45 It worked. Thank you.\n. ",
    "NicuAhmadi": "I also have the same exact problem!\n. I also have the same exact problem!\n. ",
    "ELundby45": "I was able to get a chrome mobile app to work on iOS 10 by adding a Content-Security-Policy override in manifest.mobile.json \nie:\n\"csp\": \"default-src file: data: blob: chrome-extension: gopher: gap:; connect-src * gopher: ws:; media-src *; style-src file: data: blob: chrome-extension: gopher: gap: 'unsafe-inline';\"\nThe particular thing that got things working for me: connect-src * gopher:;\n. I was able to get a chrome mobile app to work on iOS 10 by adding a Content-Security-Policy override in manifest.mobile.json \nie:\n\"csp\": \"default-src file: data: blob: chrome-extension: gopher: gap:; connect-src * gopher: ws:; media-src *; style-src file: data: blob: chrome-extension: gopher: gap: 'unsafe-inline';\"\nThe particular thing that got things working for me: connect-src * gopher:;\n. ",
    "boy241129": "thanks you . thanks you . "
}