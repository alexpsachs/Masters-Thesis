{
    "gazay": "Thanks!\nI don't know, maybe later. If needs everyone can create in theirs js files object like:\nvar SomeName = new Gon()\n. nice!\n. Yep, i know. Now it stores all data and doesn't clear it. I didn't think about it yet.\n. \u0410 \u0447\u043e \u0441\u0442\u0435\u0431\u0430\u0442\u044c\u0441\u044f \u0442\u043e \u0441\u0440\u0430\u0437\u0443? ;)\n. \u041b\u0443\u0447\u0448\u0435 \u0431\u044b \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u043e\u0432\u0430\u043b \u0447\u0442\u043e\u043d\u0442\u044c \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u043a\u0440\u0438\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c :\u0420\n. \u0414\u0430, \u0438\u0434\u0435\u044e \u044f \u043f\u043e\u043d\u044f\u043b, \u0441\u043f\u0430\u0441\u0438\u0431\u043e)\n. \u041a\u0440\u0443\u0442\u043e\u0442\u0430! \u0421\u0434\u0435\u043b\u0430\u043b\n. Thank you for your response!\nWhen I did this gem, i looked only at rails 3. I'll make supporting for rails 2.3 soon!\n. Done\n. Thank you for issue. It seems that solution provided by sergio-fry not\nrelated to gon usage, it looks just like helper which partially replaces\nfunctionality of gon. I'll try to look into this problem today.\n On Jun 11, 2013 5:48 AM, \"Ellsworth Campbell\" notifications@github.com\nwrote:\n\nVersion Details:Rails 3.2.11 ruby 1.9.3p194 (2012-04-20 revision 35410)\n[x86_64-darwin11.4.0]\nI just came across Ryan Bates' railscast that mentioned the gon gem. I\nincluded it in my gemfile and ran bundle install. Upon adding the <%=\ninclude_gon %> line, I got the following error:\nundefined local variable or method `include_gon' for #<#\nClass:0x007ffaa09369b0:0x007ffaa139c490>\nAs the sergio-fry suggested, adding that method to the\napplication_helper.rb file and resolved my problem.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gazay/gon/issues/5#issuecomment-19228821\n.\n. That's strange. For '3.2.12' it should work good. Can you provide exception trace?\n. \u0410\u0433\u0430 \u0441\u043f\u0430\u0441\u0438\u0431\u043e! \u041d\u043e \u044f \u043f\u0440\u043e\u0449\u0435 \u0441\u0434\u0435\u043b\u0430\u043b - \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 \u0432\u044b\u0432\u043e\u0434, \u0441\u043f\u043b\u0438\u0442\u0438\u0442\u044c \u043d\u0435 \u0430\u0439\u0441\n. \u0422\u0430\u043a \u044d\u0442\u043e \u043a\u0430\u043a \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u043e\u0447\u0435\u0442 - \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438 \u0442\u043e\u0436\u0435 \u043f\u0435\u0440\u0435\u043a\u0438\u0434\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u0442\u043e\u0433\u0434\u0430 \u0447\u0442\u043e\u0442\u043e \u043f\u0440\u0438\u0434\u0443\u043c\u044b\u0432\u0430\u0442\u044c \u0431\u0435\u0437 before_filter\n. \u0441\u0432\u043e\u0431\u043e\u0434\u044b \u043c\u0435\u043d\u044c\u0448\u0435\n\u0442\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043e\u0434\u043d\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044c \u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n\u0441\u0434\u0435\u043b\u0430\u0442\u044c before_filter \u043f\u044f\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434) \u0430 \u0432\u043e\u0442 \u0435\u0441\u043b\u0438 \u043e\u043d \u043d\u0430\u0441\u0438\u043b\u044c\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f - \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u0431\u0443\u0434\u0435\u0442 \u0433\u0435\u043c\u043c\u043e\u0440\u043e\u0435\u043d\n. \u0410 \u043c\u043d\u0435 \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u044d\u0442\u0430 \u0438\u0434\u0435\u044f - \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u0443\u043c\u043e\u043c, \u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u043d\u0430\u0438\u0442\u0438\u044e. \u0425\u043e\u0442\u044f \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u043e \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0440\u0438\u0434\u043c\u0438 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u043e\u0439 \u0432 \u0442\u043e\u0439 \u0436\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0435.\n. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u043b\u0433\u0438\u0445 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u0439 \u0441\u0434\u0435\u043b\u0430\u043b \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432 request.env \u0447\u0435\u0440\u0435\u0437 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430.\n. \u041b\u0443\u0447\u0448\u0435 \u0432\u043e\u0440\u043d\u0438\u043d\u0433 \u0442\u0443\u0434\u0430 \u043f\u043e\u0432\u0435\u0441\u0438\u0442\u044c\n. \u0422\u0435\u043f\u0435\u0440\u044c \u0442\u0430\u043c \u043c\u043e\u0434\u0443\u043b\u044c, \u0434\u043b\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u043c\u0435\u043d \u0442\u043e\u0447\u043d\u043e \u0441\u0442\u043e\u0438\u0442 \u043a\u0430\u043a\u043e\u0439\u043d\u0442\u044c \u0432\u043e\u0440\u043d\u0438\u043d\u0433 \u043f\u043e\u0432\u0435\u0441\u0438\u0442\u044c\n. Good catch! I'll do it after compatible with Rails3\n. Done in version 1.1.1\n. Shame on me, but gon now not compatible with Rails 3. I'm on it now\n. Very strange - I created new environment just like yours and can't repeat this problem..\n. The problem here was only in assign variables in view, not in controller. What is your workflow?\n. Thank's man! It was very helpful! I made refactoring of jbuilder module and now it seems it's work with partials)\n. Thanks! Fixed in 2.0.6\n. Yes, I think it's a good point, I'll add it soon. Btw - thanks for the great screencast! :)\n. done)\n. Done in 2.2.0. Thank you for idea, usage with rabl and jbuilder looks better now)\n. Thank you! It's great when there is some great responses about work, which can improve this work)\n. Thank you for pull request! Can you add one thing to it - raising error in case when user will try to use rabl method and don't add 'gem \"rabl\"' to gemfile? Like here for Jbuilder: https://github.com/gazay/gon/blob/master/lib/gon.rb#L80\n\nAlex\n. Thank you! Great catch!\n. Thanks for issue and sorry for delay!) I fixed it with adding check for request object_id in include_gon method. Now it will be draw some code only if it's right request and if there are some variables\n. New minor version soon.\n. Now I just added helper from rails 3-2-stable branch - escape_javascript - for javascript strings. Later I'll test it more and maybe change logic if there will be problem with unicodes that you named here.\nThank you for your response and I hope you enjoy gon gem)\n. Escape \"</\" to \"<\\/\" done in new minor version. If you can write some tests for other line terminators - it will be great!\n. Hey @thbar! Yes, it escapes. Why do you ask?\n. Hello! Sorry for big delay, I did whole refactoring of gon this month. So I fixed this problem with including ActionView::Helpers into Rails::Engine. Now it's only in my refactoring branch - https://github.com/gazay/gon/commit/7a4f50f0f443294e659b6c7117fb18215fc80c22\nBut soon I plan to merge it in master. What do you think? I checked that this including not affects Rabl functionality by running Rabl's specs with included helpers.\n. Thanks for your investigation! Helper was added only for a while, as fast fix from airport - today-tomorrow i'll rewrite it for properly working with strings\n. Thanks for issue! Can you provide here some gist with your workflow? Because data in window.gon it's just regular json object.\n. Can you provide example of data? What exactly looks like objects in @all_states, what shows in view when you use javascript_tag and when gon.allstates.\nThanks)\n. Still can't understand the problem, sorry. Maybe you can provide some simple sample app where it appears?\n. Thanks, I'll add that note to readme and btw you can in your case, if order of gems is important, load Gon::Rabl module manually - \nruby\nrequire 'gon/rabl'\n. The thing is that Rabl is not default functionality of gon, so if you want to use rabl - you'll add it before in gemfile, in other cases you'll get exception from gon.rabl method. If you can advice how to make it better - I'll really like pull requests)\nBefore I added rabl by default, but not all people use it and it's not cool to force people to get some unused dependencies in their repos.\n. It fixed by notice in docs\n. Hello! No, there should be an error rising if you try to use one of gon's public methods. Look https://github.com/gazay/gon/blob/master/lib/gon.rb#L47\n. Oh. This make sense - I should write more tests for public methods - maybe there is some vulnerability of my gem. I'll write here later about status. Thank you for pointing me on this!)\n. I'm talking about not getting error. I have one test for this case, but seems like this not enough. And people somehow can get information from gon methods. Maybe I should make this methods private\n. I almost done refactoring of gon in branch \"refactoring\", so it will be fixed in new version\n. Yes, it's ok, because gon works through include_gon helper, which adds js tag with global object gon and your variables in your template.\n. Thank you for your response! It's very important to me)\nI understood what you talking about, but no - now Gon is only request dependent. I think I can make something like not request dependent hash store for global variables - it's a good idea. But I think there I need new syntax for it. Maybe something like gon.global.variable_name or global_gon. If you want to provide pull request - it will be great, or I'll do it when I have more time)\n. In version 3.0.0 I added Gon.global feature which can be reached from anywhere in rails application\n. I not really understand case for this question. Can you provide here what exactly you want to do? Gon object - it's just global visible json object through window.gon, so you can use it if it's on the page in every javascript which you can change.\n. Whoa! Good news) Thanks for pull request!\n. yes, gon takes variables only from controller. I think now about global gon variables, which you can add from anywhere, like application_controller or views. Will add this functionality soon.\n. Done in version 3.0.0\nIn readme is example about using new Gon.global feature. With Gon.global.clear you can do what you want in views\n. Yep, thanks! Btw you can look into branch refactoring - there are a lot of changes and new feature - global variables.\n. Did the Jasmine run environment of application? If it is - you can use new global variables, which can be managed in any area of rails app which uses gon.\nI'm sorry, I'm not really deep into Jasmin testing, so I don't really know how it can work. I just know that Jasmine run some js files in template page and it's not really dependent on rails application.\n. Cool! I want to cover all options with specs - maybe you can provide spec for this option? And add description for this option in Readme?\nThanks!\n. Thanks, I did it now. Waiting for new cool ideas)\nhttps://github.com/gazay/gon/commit/725e14dd22008a80dc6da059dddd0cf948b0d17c\n. Hello, can you provide a little bit more information about your environment, because on new rails app with gon 3.0.2 and rabl and jbuilder I have normal assets path through helpers:\nGemfile\nruby\ngem 'rails', '3.2.3'\ngem 'rabl'\ngem 'jbuilder'\ngem 'gon', '3.0.2'\nhome/index.html.erb\nerb\n<h1>Hello</h1>\n<%= path_to_image('rails.png') %>\nresult - http://cl.ly/0N422w0R1m3w0v2N231d\n. any updates?\n. Hello, thanks for issue.\nYes, now I eval code of jBuilder templates inside JbuilderTemplate#encode method without including there any rails helpers. I'll add it later.\n. I think not only routes helpers needed here. All ActionView::Helpers should be included\n. @dziulius hello, what do you mean? what specs doesn't work?\n. btw in v3.0.4 all helpers, include route helpers are works as I tested. I'll write new tests for it now, but I think this issue solved\n. Hello, can someone help me with this issue - can you provide sample application with failing spec? Then I'll fix it asap :) Thank you all!\n. It's pretty clear what to do here - there not real request goes to gon from rspec - TestRequest goes. So there should be done some switch for env.test?. It's different issue, so I'll close this one and open new one for testing environment case.\n. Hello, it's easy to do as you described - just add this line in format.html block:\nruby\nrespond_to do |format|\n    format.html do\n       gon.rabl \"app/views/customers/new.json.rabl\", as: \"customers\"\n       gon.rabl \"app/views/analytics/customers.json.rabl\", as: \"analytics\"\n    end\n    format.json { @customers = @account.customers.include_account }\nend\nIn as option you set variable name inside gon namespace for rabl template data - so with html request you get two variables inside gon: gon.customers with data from app/views/customers/new.json.rabl and gon.analytics with data from app/views/analytics/customers.json.rabl\nThanks for using gem! :)\n. Hey! Thanks for response!\nDid you try this on new application or just on your app? What logic in your root action?\n. I'm sorry but I can't reproduce this bug on new rails app, and don't know your environment. If you can do some debug or tests - it will be helpful! And of course it will be super if you can do pull request with tests for this case or fix for this bug :)\n. I advice to create some initializer for gon and create global variables there if it's possible (if there no dynamic variables). If not - you should do some singleton method which should check define of global variables and place it before call.\n. Yes, it should) If all will be ok - please close the issue)\n. I found bug I think, I'll do new version tomorrow\nThanks!\nAbout usage sections - I thought there are all simple - you pass some option to include gon and it's change you end javascript\n. fixed in 3.0.4\n. Hello, thanks for pull\nI think it's make sense, because before I did it compatible only with right js rendering https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/javascript_helper.rb#L8.\nData inside gon object is a json, so I think we need to add all escaping symbols from AS json encoding module. And fix failing specs ;) Can you do it and provide couple of specs for new encoding values?\n. Heh, Rails is old too. javascript helper is still maintained and good for plain js (agreed - not for json).\nAbout mass exporting data to json - there is an old code which wasn't rewritten from first version, I think I will rewrite all work with options soon because amount of options is too damn high.\nAbout setting escape_html_entiites_in_json from my gem, or advice to do it from readme - I don't want to do it. As I think the right way is to realize own escaping/encoding module/method than change something global in framework.\n. escaped now\n. Sorry, but I don't know. Didn't use backbone at all yet)) If you'll do this or find the example - tell me please, I'm interesting in it too\n. Hello, @hzyh64160! Maybe if you can write some instructions or example for it - it will be great and I'll put it in wiki\n. @hzyh64160 thank you!\n. Thank you! Already added to wiki https://github.com/gazay/gon/wiki/Usage-gon.rabl-with-Backbone.js\n. Thank you for response! I'll document it as I documented same thing in Rabl usage section. Don't really want to do hard dependency on rabl or jbuilder, because it all optional.\n. Done here https://github.com/gazay/gon/wiki/Usage-with-jbuilder\n. I think it is, I'll do some research for next version)) Maybe you can help me with patch for this? Do you think it is better if there will be a warning? I think throwing error with description what people should do for fix it woud be better\n. Fixed. Soon will be release of 4.0.0\n. Thank you for response!\nAll clear here, I'll fix it right when have some time to do opensource) Hope will do it soon.\n. Fixed. Soon will be release of 4.0.0\n. I'm sorry, but I'll be on vacation soon. So if you'll do some research and do pull request - it will be super great!))\nI want to comeback to maintain this gem after vacation - 2-3 weeks, but I glad that you use this gem and try to find some capabilities to use it :) If you'll share to me your experience of usage this gem I'll can do my work better\nThank you)\n. Because of architecture of jbuilder. It is replaces flow of usual rendering, so it allow you to render only once through controller action. That's why I have to partially replace jbuilder functionality (in Rabl I can simply call Rabl::Engine#render method). But it was a year ago - maybe now there is a different situation and if you can help with research - it will be super awesome.\nAnyway thank you that you somehow interested in gon and find time to write me some response!\n. Hello! \nDidn't receive case like this before. Can you attach more info - where you calling gon helper and what is trace for message?\n. That's strange. Don't really know what to advice except debugging. This behavior tells that all problem in your server, and what is this problem exactly you can find only after some investigation - maybe there something wrong with Gemfile, or bundler didn't run or something else. Sorry that I can't help you :(\n and for my English of course :)\n. I'm sorry, but I'll be on vacation soon. So if you'll do some research and do pull request - it will be super great!))\nI want to comeback to maintain this gem after vacation - 2-3 weeks, but I glad that you use this gem and try to find some capabilities to use it :) If you'll share to me your experience of usage this gem I'll can do my work better\nThank you)\n. @benniemietz there is a functionality in version 4.0.0 which allow you to get any variable from controller by ajax request, please look this wiki page - https://github.com/gazay/gon/wiki/Usage-gon-watch\nIf it doesn't help you - can you describe problem with full example? I mean step-by-step.\n@perkins2099 maybe you should try to use global gon variables, or functionality gon.watch? Do you call controller through ajax? What kind of variable you try to renew?\n. Gon.watch functionality works right now only like getter in JS, it don't change original object window.gon.watchedVariables.\nSo you can get your current value like this:\njavascript\nvar newVal = gon.watch('var_name');\nif (newVal == gon.watchedVariables['var_name']) {\n...\n. Is it work with rails 2.3 too? Nice pull by the way)\n. Ok, I'll check it later. Thanks man!)\n. Why not :smiley: \nCan you provide pull with tests for it?\n. Done in 4.0.1. Will push it soon\n. Do you mean with old versions of JBuilder? I think we just need to check version of jbuilder in blankslate requirement check. Can you provide patch?\nThank you for issue!\n. It seems that we don't need to require BlankSlate anymore at all. I checked different versions with different rails envs, and I don't see exceptions like before. So I removed requirement of blankslate now, it will be in v4.0.1 soon.\nThank you for your help!\n. Great! Thank you. I'll research failing spec and merge your pull after\n. I merged and checked, we don't need to require BlankSlate at all. It will be in 4.0.1 soon. Thank you!\n. Thank you, will fix it this weekend\n. Done\nhttps://github.com/gazay/gon/wiki/Usage-with-RABL\n. Thank you! It's done\n. Nice one, I'll look what can be done with it on this weekend:) Thank you!\n. Done in 4.0.1, will push it soon\n. Here is the doc for locals with rable usage: https://github.com/gazay/gon/wiki/Usage-with-RABL\nActually just as in rabl and everywhere.\n. Hello, thank you for your response, but it's still used as helper, you can see it in module Helpers, which included in ActionController::Base class: https://github.com/gazay/gon/blob/master/lib/gon/helpers.rb#L43\nYou can use Gon.global instead of gon.global, because it do not depend on current request object id, but other functionality do, so I suggest you use helper instead on class in other than global cases.\n. Thank you for issue, I'll check it as soon as possible:)\n. Sorry for delay, I checked by myself and I get right requests to server with code you provided. Can you show server log for 500 error?\n. Thank you :)\n. Thank you, maybe you can provide pull request?\n. Don't really know case where it can be needed and as said @topdev - it isn't sounds secure\nClosing\n. Thank you for issue! I will look into on weekend\n. Just pushed new version with fixes - 4.0.2. Should be all ok now)\n. Yes, gon require Ruby 1.9+ because of early versions of jBuilder and because I like ruby 1.9 syntax :) You can create your own fork and replace all hashes with hashrocket syntax. And maybe there is couple other places where needed changes. If you will - I can look into later and help you.\n. Sorry for delay, I will check it soon and write to you results :)\n. Great @fermuch! I think I missed here to_json call on value https://github.com/gazay/gon/blob/master/lib/gon/watch.rb#L50. I have to check it\n. Hm, I'm not sure that this will be right. Because then people will not find why they don't receive variable as they expect without any explanation why that's happened. Maybe you have some logs where those bugs appeared? I need to understand cases when Request cannot be available in usual rails flow.\n. By those backtraces - I have no idea what's happening with request. I'm thinking how we can gracefully save and present data if we'll catch this error. Do you have any ideas?\n. Gon::Request is not nil, otherwise the error would be undefined method gon. - yes, I meant rails request which should be written in @request_env. Really rare there can be situation when object_id of rails request object can be same as previous. But I don't see the problem here - you can just have old data in Gon.all_variables.\nIs there anyway to call 'gon' in the controller that gets a reference to Gon without checking wrong_gon_request? - no. You can try to assign variables right to Gon constant, but if you not override gon helper in controller with something - there should be checking for request id.\nIs there anyway @request_env is getting changed after it has been set? - yes, it's always changed when you assign variables to gon, because gon uses as storage request.env['gon'].\n. I have no progress on this one. If someone can explain or point me direction - feel free to reopen this PR.\nClosing\n. Of course. You just need to work with Gon constant, not with the gon helper.\nFor example you have class Some:\n``` ruby\nlib/some.rb\nclass Some\ndef self.set_gon(val)\n    Gon.from_some = val\n  end\nend\n```\nIn controller you just call method of Some:\n``` ruby\napp/controllers/home_controller.rb\n...\n  Some.set_gon Time.now\n...\n```\nThen you will receive value of gon.from_some variable in your js as usual.\n. Of course you can use all parts of gon gem without using special helpers which been made just for simplicity. I need to understand your scope of use gon gem in your new gem, then I can help you. Thank you for issue!\n. As you can see from source of Gon::Helpers - analogue for include gon can be just rendering all variables by yourself. Can you explane to me more about your usage of gon for I can help you more?\n. @mrded - if I understand you right - you can try to override one of methods from rendering stack I think.\n@fbrusatti - analogue of include_gon is method Gon::Base.render_data with options as required argument. So you can just rename your file application.js to application.js.erb and put there a string: <%= Gon::Base.render_data({}) %> Or with options you want.\n. Hello! Thanks for patch! I think we need to restrict type of data object in method push to Hash only (or to object which respond_to method each_pair). Can you provide tests with different types of object sent to push and add constraints?\n. Great - I'll be waiting. I love this new syntax - with it one can just pass options or some parameters to gon and pairs from it will be as separate variables in js.\n. Cool! Thanks a lot!)\n. I've added support for locals to jbuilder. Controller helpers next in queue\n. in v 5.2.2 added support for controller helpers in jbuilder\n. Great! I need some time to analyze those commits. As I understand - I don't need to merge previous pull if I merge this one?\n. I really like it! so it'll be great if you change docs for it :)\n. Thanks man!\n. Oh, sorry guys. I think problem is that I haven't release new version with this syntax yet. I'll do it right now. Sorry again.\n. Alex = Alexey in my case ;)\nHello!\nYes, I like this, I need to test it and look closely by myself. I'll try to do it before weekend, but deadline will be at the sunday)\nThank you for PR! Hope you enjoy using this project)\nP.s. if you have any ideas for features \u2013 please write me a letter. I want to improve this gem and need more experience of usage and more thoughts about what is missed or what can make work with this gem better.\n. Yes, I think that there should be compatibility for old version. Can you add some check for rails version and maybe it will be easiest if for old versions will work old code.\n. Hmm, I haven't see any incompatibilities with old 3.x versions. And I don't really want care from version 4.1.0 for rails < 3.x and ruby < 1.9.x - so I'll merge it!\nThank you very much\n. :+1: Thank you!\np.s. I'm not sure that I'll care in future versions about compatibility with 1.8.7, so I'll do version bump after this PR.\n. It depends on what do you want to do and in what environment) Can you explain more detailed?\n. Gon::Helpers constant contains method for render data in views: include_gon. As I can understand - you want to assign some variables in gon in your helper. Then you need to include constant Gon::GonHelpers, which add gon instance method. If it's not enough - you can write your own proxy method to work with gon - you can trace example how it works by debugging simple assign variable in controller action, and I can explain details later.\n. Oh, you right. I checked it when this issue was added in wrong way. Will be fixed ASAP\n. Thanks guys! Fast-fixed in 4.1.1, more carefully will check this problem later. If you have any other extreme cases with escaping - please create issues or drop me line to email (alex.gaziev(at)gmail.com) and we'll discuss them.\n. Hello, thank you for pull request. Maybe you should try to use gon.global functionality? It's allow you to share any data you want across all application and you will not loose any data with new requests.\n. @mirelon I'm not sure how this PR should works, maybe you can add some tests which show me what you want to add? And how it will affect other functionalities? \n@coderdave It's sad that gon not fits for your purposes. As I don't work with turbolinks right now I don't think that I can add support for it in gon in near future. But if you will have some time and feel that you can help - it will be awesome!\n. I think I understood what you want to do here, but it will not work this way. Better for multi requests without wiping old data you should use gon global (look at it in wiki). You can set variable once there and it will be available anywhere in your project and you will decide when clear this variable.\nClosing\n. Hello! Thank you for issue. Because of jBuilder architecture I had to create special environment to evaluate jBuilder templates code. Because of that I believe you receive that kind of exception. Can you try to assign current_user to some instance variable and use it in locals statement? I have plans to get deeper in this, but right now I have no time :(\n. Watch.js right now used as storage for function of gon.watch implementation and it loads into constant of Gon::Watch module one time when this module loads. This function pretty small and before it was in this module - I moved it because I don't want to have JS in ruby file. Gon::Watch works next way: after you used gon.watch helper inside your controller action and assigned to it some variable, Gon::Base.render_data will check about watched variables and if there are some - it will include this JS function (gon.watch) before JS gon object. This function was written in pure JS so I hope there should not be problems with JS errors like missed jQuery or something like that. Why do you need this function separate from usage of gon.watch in your controller? Also the reason why I preffer this way - this javascript function should be before JS code (assets) which can use this function for watched gon variables.\n. Let me close this inactive issue\n. Thank you for issue! Unfortunately I haven't touch rails 4 because of scope of my current work. I'll try to dig into by myself when I get some time but it will be super if can help me to realize where is the problem or maybe make some falling test) Thanks again!\n. Not yet =(\n. I can't reproduce this on new rails 4 application. Helper is working for me. Can someone provide simple app which reproduce this issue please?\n. So I still can't reproduce not working helper in rails 4. It was stopper for release new version, and I think without sample application with not working gon helper I'll release new version in few days without some fixes for this issue.\n. Thanks a lot, I'll dig into it\n. @sebastialonso try new 5.0.4 version, it should work without workarounds.\n. @vorDd can  you tell what exactly was the problem? I'll try to research it\n. Hello all! Please provide smallest app which reproduces this error \u2013 when I'm creating new rails 4.0-4.2 apps I don't have any problem with include_gon helper. But maybe I'm using wrong web server (for reproducing needed puma for example or something else). Please help me to trace this error, I'm in process of refactoring and test covering gon for new version and it would be great if in new version it would be fixed.\n. @TheDerek can you provide example app that reproduces this error please? In my new projects on rails 4.0-4.2 I can't reproduce it.\n. Hello! Sorry for delay - so much work right now. I think it's a great idea and I'd like to accept PR like this. Also I think that you can do couple options for camel_casing - recursively camel_casing, when all hashes and all hashes in hashes etc in gon variables will be camel_cased. And second - just for some deep, which by default will be for example 1 - so it will work like your example. What do you think? Or I missed something?\n. Great! If you still want it - will wait for your PR :) And some tests also would be great\n. Thank you for your issue and sorry for long delay. I'll plan to fix gon for rails 4 and with it I'll update installation page. I'll let you know in this issue. Also it's related to https://github.com/gazay/gon/issues/90\n. Nice one! I'll review it tomorrow, thank you!\n. Cool! Thank you very much! Maybe you can also provide a little text for readme for this option?\n. Or I'll do it by myself, I just looked into my page for options - there just example of usage for each option :)\n. I have to go through issue with running on rails 4 and then will be release. Right now I don't know when I'll have time for this,hopefully on this weekend or next week\n. Thank you a lot! Sorry for delay!\n. Hello! Thank you for your PR! Can you please squash commits and I'll merge it?\n. Great!\n. Sure, I want to spend some time to make gon compatible with rails 4 without problems on this weekend and then I'll make new version)\n. Cool, thanks for idea! I'll look into it\n. If you have time to help with gon project - can you please check master branch in your threaded applications to confirm that last merge helped with threadsafety https://github.com/gazay/gon/commit/cd0a5a1ecf72457762fcf6e3fb333309f9f9170b\n. @kgx cool! Thanks for checking!) About request.uuid \u2013 as I understood from rails source it can be used instead request.id, but gon works only inside rails application, so request.id should fit for its purposes well.\n. Thanks)\n. Thanks)\n. Yes it's really good point! I think I should put it in readme. Thank you!\n. @Gailbear it would be great if you help me with this!) I'm not using turbolinks in my current projects and don't have enought time to get into the problem\n. Great, @shadowed87, maybe you see how we can include this solution in gon library? Maybe add special option and readme section for it?\n. Thank you!\n. Hi all! Thanks for report, will try to investigate it ASAP. @Nejuf - is there more stack trace?\n@hau, can you tell me what is on pages_controller.rb:12? Can you repeat this exception with gsub locally?\nAnyway I'll try to find what is wrong there today.\n. It seems that I've fixed problem with missed gon method for Nil object. It's already published in 5.0.1\nStill digging about gsub method\n. @hau, I can't reproduce it locally. I think it can be data-related bug. If you can provide failing example - I'll fix it right then. But now I don't know what it can be, I've tried your code with my data and it just works.\n. @pkpp1233 that's interesting! Can you please provide stacktrace for 4.1.0 and 5.0.1? \n. @forest @gregmolnar can you please check that current in master fixed the problem? Thanks!\n. Thank you! So I release new version then.\n. Cool! Sorry for delayed answer\nThank you very much\n. Super!\n. I don't think that this is good solution. There can be conflicts for different requests if it would be stored in global variable. Also it can affect flow with usage global scope in gon.\n. The problem is that this creation of gon object not really right. I'll use your commit and rewrite a little. Thank you for help!\n. That is strange. In each request it calls Gon.clear which clear current gon data. Can you check with gon version 5.0.2?\n. Thank you! Yes, I think one of possible solutions is to create middleware like in request_store. But also I think we can simply check wrong_gon_request? in include_gon helper here - https://github.com/gazay/gon/blob/master/lib/gon/helpers.rb#L11. And clear it if it is wrong. What do you think?\nIt would be awesome if you can write this integration test!\n. hm, I'll change it back because travis also doesn't accept this syntax.\n. Thank you for report!)\n. Hm. I think you right. It's request specific, so if you someone don't want render watch variables on current page - just don't use gon.watch in controller.\nDo you want to make PR?\n. Great!)\n. Thank you for issue! I hope I fix the problem - please check v5.0.4 - it should work there.\n. Thank you!!\n. If there will be no fast fixes - maybe in month or two. I want to do couple of things before new version\n. Hello! Interesting case! Yeah, gon jbuilder now is not really dynamic and fully compatible. I think we can try to do something like done here https://github.com/gazay/gon/blob/master/lib/gon/jbuilder.rb#L61. But I'm not sure yet.\n. Thank you for issue! Can you please provide full stack trace and example how you use gem?\n. Anyway it is and issue and add section to wiki is a good idea) Thank you, I'll do it soon.\n. Thank you for issue! Maybe it's related to some user's input in data you sending with gon? Maybe something in department_list? I think we need more debug info to understand what happened here. Maybe you can add some silent logger which will react on this kind of error and write environment somewhere?\n. Awesome! Thank you!\n. Yes, it's good idea! Naming always was a problem for me (Gon - ?!). Can you provide PR?\n. Problem is not solved yet as because of specific of jbuilder's rendering process I had to write own parser for its templates. Right now I don't have time and need to fix partial functionality in jbuilder module in gon but I can help if someone want to help with it =)\n. I don't know the current situation, but when I added it, there was no explicit parser/renderer/engine included. So you can't do as in rabl, for example, re = Rabl::Engine.new...; re.render. Jbuilder is highly tied with Rails rendering stack, and you can't use it standalone which I needed for render templates and put them into JSON.\n. In Rails 5 will be rendering instrument that allow to throw away all Gon::Jbuilder::Parser logic and just render jbuilder template (https://medium.com/evil-martians/new-feature-in-rails-5-render-views-outside-of-actions-2fc1181e86a8)\n. It will call double render error if you use it in controller\n. Hello! Thank you for PR, but it breaks specs. Also it was made for thread safe purposes\n. Actually I think that this was written in early versions of gem and not really helps with thread-safety. It's strange that specs falling then. I'm looking what is wrong here\n. It seems that something changed in ruby in last releases, PR wasn't related to travis falls)\n. I like it! Let's try)\n. I think we can add hook which will check version of rails and use appropriate method to get id of request. Can you do it?\n. Thank you! It's awesome!\n. Try to act like with Hash. gon.global.delete(key)\n. Thank you!\n. Hello! Thank you for issue. The thing is that gon works only inside one request - redirect_to is a new request. That's why all variables for previous request don't match for current request and delete. You can pass variables through several requests with Gon.global or with other ways like you described with flash.\n. Gon global mostly for constant values from app initialization which you want to access everywhere. It's not threadsafe.\n. We've released version 5.1.1 which should resolve this problem.\n. Thank you!!\n. Hello. No, it's not possible because gon is a helper, which works with internal gon storage and do all magic. If you use @gon it will be simple instance variable of controller.\n. Cool! Thank you for PR. Can you please fix spec and I'll merge it\n. Thank you!\n. Nice!!\n. Thank you!!\n. Hello! Thank you for PR. I think better to make it configurable and off by default for now, as it's not major feature. But when there will be next major release I'll switch it to on by default.\n. namespace_check sounds good) Also can you please add note about this configuration in readme?\n. Better on wiki yes. Thank you for your PR!\n. Thank you!\n. Looks great! Can you please add description of this feature to Readme or provide text for wiki page. After merge I'll bump version. Thank you!\n. Great! Thank you!\n. I don't really like how it looks and as it is legal and only in tests I'll leave the old version. But I'm really happy that you use Gon and find time to make this pull request! Thank you very much!\n. Hello! Can you try to reproduce it on fresh rails app? Can you provide example of code?\n. Should be solved by PR above. New version soon, for now please use master\n. hm, travis failed with strange error. I'll test your fix and if all ok - merge it. Thank you very much for PR!\n. Thank you for PR and idea! But I think that this behavior isn't clear for end user. Maybe better if this feature act somehow like that? :\ngon.var = { a: 1 }\ngon.merge_or_set.var = { b: 2 }\n. Thank you!\n. It sounds useful for me!) Please send pull request and i'll merge it.\nActually it wasn't compiled from coffee, it was written by my good friend @kossnocorp in js and i never touched it after) It can be written also in coffee - I would be really grateful if you provide this implementation)\n. Welcome!) I don't really know what will be the best for this coffee and js files in gon. Maybe asset pipeline should include it when you require gem or something else. Maybe you have an idea?\nThank you for this pull request!)\n. Nice! Thank you!\n. Hello! But gon.watch is not a variable - it is a function. https://github.com/gazay/gon/wiki/Usage-gon-watch\n. Actually I see more problems with watch now - it ignores namespace option.\nAnyway - how you think it can be solved?\n. Hello! I'm not using turbolinks and can't help you with that fast. Maybe you have an idea why it is happening? It would be really great if you can do some research :)\nThank you for the issue! And for using gon\n. Hello, thank you for issue. Can you please provide simple app with failing test? Or at least example code of failing test. Thank you in advance\n. Great, downloading\n. Nice! Thank you\n. Great! Thank you!\n. Hello, yes it is expected behavior as gon using metaprogramming to set variables as methods of gon class. So it doesn't allow to use public methods as variable names because it can break functionality of whole gem. Please try different name, like user_name\n. https://github.com/gazay/gon/blob/master/lib/gon.rb#L39 you can find this functionality here\n. Thank you!\n. Thank you!\n. Sure! This information is in usage section: https://github.com/gazay/gon#usage\n. No problem =)\n. Ah sorry, I went to quickly in issue, so I misunderstood you. Do you mean I need to provide information about internal gon flow, how it stores data from action and then renders it in view? But I thought it is pretty clear \u2013 it just stores data for current request inside Gon RequestStore, then when view calls include_gon \u2013\u00a0it takes it from there and converts to json and add script tag with it.\n. Hello, thank you for issue. I've fixed it in master branch, but didn't push new version of gem yet. Can you try gon from master branch?\n. Did you ran bundle install after?\n. My bad, there was a conflict and I didn't push changes. Try to bundle update gon and it should be fixed\n. Thank you!\n. Hello! The last version with support for 1.8.7 was 4.0.3 https://github.com/gazay/gon/blob/master/CHANGELOG.md#410. I'm suggest to update Ruby if you can as 1.8.7 long time dead and not supported by Ruby team.\n. Thanks! :+1: \n. ^_^ thank you!\n. As I see, the reason of this behavior is that you use something like turbolinks or similar instrument, which re-render only part of the view and don't touch gon area\n. Great! Thank you! Do you want to take part in developing gon gem?\n. I've made you collaborator of gon gem =) Welcome! There a lot of issues I don't have time or environment to check, if you help to clean up it \u2013\u00a0it would be great =)\n. I've created slack channel to discuss issues and features. Please join (send me email to alex.gaziev@gmail.com and I'll send you invite)\n. Fixed @ai, thank you!\n. @ai v6.0.0\n. Great, Thank you!\n. I just not really understand why it happening? _o is an OpenStruct object, and don't have methods from ActionView\n. We're using gon in our projects and I didn't see this problem after update. Anyway it's good to rename just to need_tag as tag option was excess. Can you provide full backtrace of error?\n. I see. Anyway it is a good pull request, thank you =)\n. Hello! Yes, the problem I see is that you using reserved method name for gon - env. Maybe not only this method. I'll add more descriptive message for this error\n. Hello Dave!\n1. You can't access gon object from anywhere except controllers and views as it is just a helper. You can access Gon::Global instead and in js it will be available from gon.global namespace.\nLet I tell you how gon works and maybe you'll find solution for your task faster (as I maybe don't understand partially what you want to achieve by using sidekiq for different pages):\n1. You have different routes which point to different controller actions. Let say we have root (Home#index) and show (Home#show).\n2. In index you have to show all the data from your database in JS, so in action you write gon.assets = Asset.all, in show you need only scoped data: gon.assets = Asset.where(page: params[:id]).\n2'. In view layout you have include_gon(your options)\n3. In your browser you make root request.\n  3a. Rails receive this request and goes to index action of Home controller. There is our line gon.assets = Asset.all.\n  3b. This gon \u2013 is a controller helper, which checks controller's environment: gon stores inside its storage request identifier. Gon needs it to work only with data, which related just to current request. For example on next request gon still have data from first request, but as identifiers of requests doesn't match \u2013\u00a0it will erase old data.\n  3c. After gon checked and renewed request uuid \u2013 it can store data, so it does.\n  3d. Rails finishes logic in controller's action and start rendering.\n4. When rails start render it meet line include_gon(your options) in your layout and it is also a helper (but this time view helper, so it is accessible from views) as gon in controller.\n  4a. This helper also have info which request we working with (it's uuid), and it checks - is there a data it should prepare for this request\n  4b. It gather all data for this request and transform it to javascript tag with json data you can access from your javascript.\n  4c. No matter what request right now \u2013 it checks is there global data (from Gon::Global)? If it is - it will render it anyway in namespace gon.global.\nIs this helpful information? If you want more explanation or more help with your task \u2013\u00a0please describe why you want to use sidekiq? If this is a static data and should be available on many pages \u2013\u00a0you can just render it once in js.erb file and include it in custom layout for those pages. It will be faster than using gon.\n. By default, unless you use option camel_cased: true in include_gon method, your variable names in JS should be equal to names from Ruby.\n. After action callback runs after rendering phase of action. Gon renders its data during rendering phase. So it's expected behavior. Thank you for issue!\n. We need to check since what version of rails env available from request. Thank you for your PR!\n. Thank you @dlupu & @takiy33 !\n. v 6.1.0 pushed\n. Hello, you can use need_tag: false option https://github.com/gazay/gon/wiki/Options#need_tag--true\n. thank you!\n. Thank you\n. depends. It is the same as if you expose same tokens in your html \u2013\u00a0anyone, who can access developer console can find it\n. Hello! Do you pass include_gon without arguments?\n. Can you provide full backtrace for error?\n. @nazrulcse it seems you have super old version of multi_json (from 2011), method encode back then accepted only one argument - object itself. In later releases they added second argument - options. Gon uses this param. So try to update multi_json to latest releases and it should fix the problem\n. Hello! Thank you for issue. Can you do a PR?\n. Looks good for me :) Thank you!\n. Hello! Thank you for issue. This option not really for that - it just renders window.gon={} on each request, even if there are no gon variables set. How it fixes uncaught reference error I don't really understand, but if you can create small app which shows this problem \u2013 I can debug and fix it properly. Thank you! Is that error happened in development mode or in production too?. I've started your project without init: true option and on root route (localhost:3000/) exception didn't happened \u2013 where it was?. Thanks!. Whoa! That looks awesome :) Thank you!. I've released 6.2.0 but it seems something changed and specs are not green now. I'll look why later. Thank you :). Thanks!\nI don't know, maybe later. If needs everyone can create in theirs js files object like:\nvar SomeName = new Gon()\n. nice!\n. Yep, i know. Now it stores all data and doesn't clear it. I didn't think about it yet.\n. \u0410 \u0447\u043e \u0441\u0442\u0435\u0431\u0430\u0442\u044c\u0441\u044f \u0442\u043e \u0441\u0440\u0430\u0437\u0443? ;)\n. \u041b\u0443\u0447\u0448\u0435 \u0431\u044b \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u043e\u0432\u0430\u043b \u0447\u0442\u043e\u043d\u0442\u044c \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u043a\u0440\u0438\u0442\u0438\u043a\u043e\u0432\u0430\u0442\u044c :\u0420\n. \u0414\u0430, \u0438\u0434\u0435\u044e \u044f \u043f\u043e\u043d\u044f\u043b, \u0441\u043f\u0430\u0441\u0438\u0431\u043e)\n. \u041a\u0440\u0443\u0442\u043e\u0442\u0430! \u0421\u0434\u0435\u043b\u0430\u043b\n. Thank you for your response!\nWhen I did this gem, i looked only at rails 3. I'll make supporting for rails 2.3 soon!\n. Done\n. Thank you for issue. It seems that solution provided by sergio-fry not\nrelated to gon usage, it looks just like helper which partially replaces\nfunctionality of gon. I'll try to look into this problem today.\n On Jun 11, 2013 5:48 AM, \"Ellsworth Campbell\" notifications@github.com\nwrote:\n\nVersion Details:Rails 3.2.11 ruby 1.9.3p194 (2012-04-20 revision 35410)\n[x86_64-darwin11.4.0]\nI just came across Ryan Bates' railscast that mentioned the gon gem. I\nincluded it in my gemfile and ran bundle install. Upon adding the <%=\ninclude_gon %> line, I got the following error:\nundefined local variable or method `include_gon' for #<#\nClass:0x007ffaa09369b0:0x007ffaa139c490>\nAs the sergio-fry suggested, adding that method to the\napplication_helper.rb file and resolved my problem.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gazay/gon/issues/5#issuecomment-19228821\n.\n. That's strange. For '3.2.12' it should work good. Can you provide exception trace?\n. \u0410\u0433\u0430 \u0441\u043f\u0430\u0441\u0438\u0431\u043e! \u041d\u043e \u044f \u043f\u0440\u043e\u0449\u0435 \u0441\u0434\u0435\u043b\u0430\u043b - \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 \u043d\u0430 \u0432\u044b\u0432\u043e\u0434, \u0441\u043f\u043b\u0438\u0442\u0438\u0442\u044c \u043d\u0435 \u0430\u0439\u0441\n. \u0422\u0430\u043a \u044d\u0442\u043e \u043a\u0430\u043a \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u043e\u0447\u0435\u0442 - \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438 \u0442\u043e\u0436\u0435 \u043f\u0435\u0440\u0435\u043a\u0438\u0434\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u0442\u043e\u0433\u0434\u0430 \u0447\u0442\u043e\u0442\u043e \u043f\u0440\u0438\u0434\u0443\u043c\u044b\u0432\u0430\u0442\u044c \u0431\u0435\u0437 before_filter\n. \u0441\u0432\u043e\u0431\u043e\u0434\u044b \u043c\u0435\u043d\u044c\u0448\u0435\n\u0442\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043e\u0434\u043d\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044c \u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n\u0441\u0434\u0435\u043b\u0430\u0442\u044c before_filter \u043f\u044f\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434) \u0430 \u0432\u043e\u0442 \u0435\u0441\u043b\u0438 \u043e\u043d \u043d\u0430\u0441\u0438\u043b\u044c\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f - \u043e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u0431\u0443\u0434\u0435\u0442 \u0433\u0435\u043c\u043c\u043e\u0440\u043e\u0435\u043d\n. \u0410 \u043c\u043d\u0435 \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u044d\u0442\u0430 \u0438\u0434\u0435\u044f - \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u0443\u043c\u043e\u043c, \u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u043d\u0430\u0438\u0442\u0438\u044e. \u0425\u043e\u0442\u044f \u043a\u043e\u043d\u0435\u0447\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u043e \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0440\u0438\u0434\u043c\u0438 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u043e\u0439 \u0432 \u0442\u043e\u0439 \u0436\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0435.\n. \u0412 \u0438\u0442\u043e\u0433\u0435 \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u043b\u0433\u0438\u0445 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u0439 \u0441\u0434\u0435\u043b\u0430\u043b \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0432 request.env \u0447\u0435\u0440\u0435\u0437 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430.\n. \u041b\u0443\u0447\u0448\u0435 \u0432\u043e\u0440\u043d\u0438\u043d\u0433 \u0442\u0443\u0434\u0430 \u043f\u043e\u0432\u0435\u0441\u0438\u0442\u044c\n. \u0422\u0435\u043f\u0435\u0440\u044c \u0442\u0430\u043c \u043c\u043e\u0434\u0443\u043b\u044c, \u0434\u043b\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u043c\u0435\u043d \u0442\u043e\u0447\u043d\u043e \u0441\u0442\u043e\u0438\u0442 \u043a\u0430\u043a\u043e\u0439\u043d\u0442\u044c \u0432\u043e\u0440\u043d\u0438\u043d\u0433 \u043f\u043e\u0432\u0435\u0441\u0438\u0442\u044c\n. Good catch! I'll do it after compatible with Rails3\n. Done in version 1.1.1\n. Shame on me, but gon now not compatible with Rails 3. I'm on it now\n. Very strange - I created new environment just like yours and can't repeat this problem..\n. The problem here was only in assign variables in view, not in controller. What is your workflow?\n. Thank's man! It was very helpful! I made refactoring of jbuilder module and now it seems it's work with partials)\n. Thanks! Fixed in 2.0.6\n. Yes, I think it's a good point, I'll add it soon. Btw - thanks for the great screencast! :)\n. done)\n. Done in 2.2.0. Thank you for idea, usage with rabl and jbuilder looks better now)\n. Thank you! It's great when there is some great responses about work, which can improve this work)\n. Thank you for pull request! Can you add one thing to it - raising error in case when user will try to use rabl method and don't add 'gem \"rabl\"' to gemfile? Like here for Jbuilder: https://github.com/gazay/gon/blob/master/lib/gon.rb#L80\n\nAlex\n. Thank you! Great catch!\n. Thanks for issue and sorry for delay!) I fixed it with adding check for request object_id in include_gon method. Now it will be draw some code only if it's right request and if there are some variables\n. New minor version soon.\n. Now I just added helper from rails 3-2-stable branch - escape_javascript - for javascript strings. Later I'll test it more and maybe change logic if there will be problem with unicodes that you named here.\nThank you for your response and I hope you enjoy gon gem)\n. Escape \"</\" to \"<\\/\" done in new minor version. If you can write some tests for other line terminators - it will be great!\n. Hey @thbar! Yes, it escapes. Why do you ask?\n. Hello! Sorry for big delay, I did whole refactoring of gon this month. So I fixed this problem with including ActionView::Helpers into Rails::Engine. Now it's only in my refactoring branch - https://github.com/gazay/gon/commit/7a4f50f0f443294e659b6c7117fb18215fc80c22\nBut soon I plan to merge it in master. What do you think? I checked that this including not affects Rabl functionality by running Rabl's specs with included helpers.\n. Thanks for your investigation! Helper was added only for a while, as fast fix from airport - today-tomorrow i'll rewrite it for properly working with strings\n. Thanks for issue! Can you provide here some gist with your workflow? Because data in window.gon it's just regular json object.\n. Can you provide example of data? What exactly looks like objects in @all_states, what shows in view when you use javascript_tag and when gon.allstates.\nThanks)\n. Still can't understand the problem, sorry. Maybe you can provide some simple sample app where it appears?\n. Thanks, I'll add that note to readme and btw you can in your case, if order of gems is important, load Gon::Rabl module manually - \nruby\nrequire 'gon/rabl'\n. The thing is that Rabl is not default functionality of gon, so if you want to use rabl - you'll add it before in gemfile, in other cases you'll get exception from gon.rabl method. If you can advice how to make it better - I'll really like pull requests)\nBefore I added rabl by default, but not all people use it and it's not cool to force people to get some unused dependencies in their repos.\n. It fixed by notice in docs\n. Hello! No, there should be an error rising if you try to use one of gon's public methods. Look https://github.com/gazay/gon/blob/master/lib/gon.rb#L47\n. Oh. This make sense - I should write more tests for public methods - maybe there is some vulnerability of my gem. I'll write here later about status. Thank you for pointing me on this!)\n. I'm talking about not getting error. I have one test for this case, but seems like this not enough. And people somehow can get information from gon methods. Maybe I should make this methods private\n. I almost done refactoring of gon in branch \"refactoring\", so it will be fixed in new version\n. Yes, it's ok, because gon works through include_gon helper, which adds js tag with global object gon and your variables in your template.\n. Thank you for your response! It's very important to me)\nI understood what you talking about, but no - now Gon is only request dependent. I think I can make something like not request dependent hash store for global variables - it's a good idea. But I think there I need new syntax for it. Maybe something like gon.global.variable_name or global_gon. If you want to provide pull request - it will be great, or I'll do it when I have more time)\n. In version 3.0.0 I added Gon.global feature which can be reached from anywhere in rails application\n. I not really understand case for this question. Can you provide here what exactly you want to do? Gon object - it's just global visible json object through window.gon, so you can use it if it's on the page in every javascript which you can change.\n. Whoa! Good news) Thanks for pull request!\n. yes, gon takes variables only from controller. I think now about global gon variables, which you can add from anywhere, like application_controller or views. Will add this functionality soon.\n. Done in version 3.0.0\nIn readme is example about using new Gon.global feature. With Gon.global.clear you can do what you want in views\n. Yep, thanks! Btw you can look into branch refactoring - there are a lot of changes and new feature - global variables.\n. Did the Jasmine run environment of application? If it is - you can use new global variables, which can be managed in any area of rails app which uses gon.\nI'm sorry, I'm not really deep into Jasmin testing, so I don't really know how it can work. I just know that Jasmine run some js files in template page and it's not really dependent on rails application.\n. Cool! I want to cover all options with specs - maybe you can provide spec for this option? And add description for this option in Readme?\nThanks!\n. Thanks, I did it now. Waiting for new cool ideas)\nhttps://github.com/gazay/gon/commit/725e14dd22008a80dc6da059dddd0cf948b0d17c\n. Hello, can you provide a little bit more information about your environment, because on new rails app with gon 3.0.2 and rabl and jbuilder I have normal assets path through helpers:\nGemfile\nruby\ngem 'rails', '3.2.3'\ngem 'rabl'\ngem 'jbuilder'\ngem 'gon', '3.0.2'\nhome/index.html.erb\nerb\n<h1>Hello</h1>\n<%= path_to_image('rails.png') %>\nresult - http://cl.ly/0N422w0R1m3w0v2N231d\n. any updates?\n. Hello, thanks for issue.\nYes, now I eval code of jBuilder templates inside JbuilderTemplate#encode method without including there any rails helpers. I'll add it later.\n. I think not only routes helpers needed here. All ActionView::Helpers should be included\n. @dziulius hello, what do you mean? what specs doesn't work?\n. btw in v3.0.4 all helpers, include route helpers are works as I tested. I'll write new tests for it now, but I think this issue solved\n. Hello, can someone help me with this issue - can you provide sample application with failing spec? Then I'll fix it asap :) Thank you all!\n. It's pretty clear what to do here - there not real request goes to gon from rspec - TestRequest goes. So there should be done some switch for env.test?. It's different issue, so I'll close this one and open new one for testing environment case.\n. Hello, it's easy to do as you described - just add this line in format.html block:\nruby\nrespond_to do |format|\n    format.html do\n       gon.rabl \"app/views/customers/new.json.rabl\", as: \"customers\"\n       gon.rabl \"app/views/analytics/customers.json.rabl\", as: \"analytics\"\n    end\n    format.json { @customers = @account.customers.include_account }\nend\nIn as option you set variable name inside gon namespace for rabl template data - so with html request you get two variables inside gon: gon.customers with data from app/views/customers/new.json.rabl and gon.analytics with data from app/views/analytics/customers.json.rabl\nThanks for using gem! :)\n. Hey! Thanks for response!\nDid you try this on new application or just on your app? What logic in your root action?\n. I'm sorry but I can't reproduce this bug on new rails app, and don't know your environment. If you can do some debug or tests - it will be helpful! And of course it will be super if you can do pull request with tests for this case or fix for this bug :)\n. I advice to create some initializer for gon and create global variables there if it's possible (if there no dynamic variables). If not - you should do some singleton method which should check define of global variables and place it before call.\n. Yes, it should) If all will be ok - please close the issue)\n. I found bug I think, I'll do new version tomorrow\nThanks!\nAbout usage sections - I thought there are all simple - you pass some option to include gon and it's change you end javascript\n. fixed in 3.0.4\n. Hello, thanks for pull\nI think it's make sense, because before I did it compatible only with right js rendering https://github.com/rails/rails/blob/master/actionpack/lib/action_view/helpers/javascript_helper.rb#L8.\nData inside gon object is a json, so I think we need to add all escaping symbols from AS json encoding module. And fix failing specs ;) Can you do it and provide couple of specs for new encoding values?\n. Heh, Rails is old too. javascript helper is still maintained and good for plain js (agreed - not for json).\nAbout mass exporting data to json - there is an old code which wasn't rewritten from first version, I think I will rewrite all work with options soon because amount of options is too damn high.\nAbout setting escape_html_entiites_in_json from my gem, or advice to do it from readme - I don't want to do it. As I think the right way is to realize own escaping/encoding module/method than change something global in framework.\n. escaped now\n. Sorry, but I don't know. Didn't use backbone at all yet)) If you'll do this or find the example - tell me please, I'm interesting in it too\n. Hello, @hzyh64160! Maybe if you can write some instructions or example for it - it will be great and I'll put it in wiki\n. @hzyh64160 thank you!\n. Thank you! Already added to wiki https://github.com/gazay/gon/wiki/Usage-gon.rabl-with-Backbone.js\n. Thank you for response! I'll document it as I documented same thing in Rabl usage section. Don't really want to do hard dependency on rabl or jbuilder, because it all optional.\n. Done here https://github.com/gazay/gon/wiki/Usage-with-jbuilder\n. I think it is, I'll do some research for next version)) Maybe you can help me with patch for this? Do you think it is better if there will be a warning? I think throwing error with description what people should do for fix it woud be better\n. Fixed. Soon will be release of 4.0.0\n. Thank you for response!\nAll clear here, I'll fix it right when have some time to do opensource) Hope will do it soon.\n. Fixed. Soon will be release of 4.0.0\n. I'm sorry, but I'll be on vacation soon. So if you'll do some research and do pull request - it will be super great!))\nI want to comeback to maintain this gem after vacation - 2-3 weeks, but I glad that you use this gem and try to find some capabilities to use it :) If you'll share to me your experience of usage this gem I'll can do my work better\nThank you)\n. Because of architecture of jbuilder. It is replaces flow of usual rendering, so it allow you to render only once through controller action. That's why I have to partially replace jbuilder functionality (in Rabl I can simply call Rabl::Engine#render method). But it was a year ago - maybe now there is a different situation and if you can help with research - it will be super awesome.\nAnyway thank you that you somehow interested in gon and find time to write me some response!\n. Hello! \nDidn't receive case like this before. Can you attach more info - where you calling gon helper and what is trace for message?\n. That's strange. Don't really know what to advice except debugging. This behavior tells that all problem in your server, and what is this problem exactly you can find only after some investigation - maybe there something wrong with Gemfile, or bundler didn't run or something else. Sorry that I can't help you :(\n and for my English of course :)\n. I'm sorry, but I'll be on vacation soon. So if you'll do some research and do pull request - it will be super great!))\nI want to comeback to maintain this gem after vacation - 2-3 weeks, but I glad that you use this gem and try to find some capabilities to use it :) If you'll share to me your experience of usage this gem I'll can do my work better\nThank you)\n. @benniemietz there is a functionality in version 4.0.0 which allow you to get any variable from controller by ajax request, please look this wiki page - https://github.com/gazay/gon/wiki/Usage-gon-watch\nIf it doesn't help you - can you describe problem with full example? I mean step-by-step.\n@perkins2099 maybe you should try to use global gon variables, or functionality gon.watch? Do you call controller through ajax? What kind of variable you try to renew?\n. Gon.watch functionality works right now only like getter in JS, it don't change original object window.gon.watchedVariables.\nSo you can get your current value like this:\njavascript\nvar newVal = gon.watch('var_name');\nif (newVal == gon.watchedVariables['var_name']) {\n...\n. Is it work with rails 2.3 too? Nice pull by the way)\n. Ok, I'll check it later. Thanks man!)\n. Why not :smiley: \nCan you provide pull with tests for it?\n. Done in 4.0.1. Will push it soon\n. Do you mean with old versions of JBuilder? I think we just need to check version of jbuilder in blankslate requirement check. Can you provide patch?\nThank you for issue!\n. It seems that we don't need to require BlankSlate anymore at all. I checked different versions with different rails envs, and I don't see exceptions like before. So I removed requirement of blankslate now, it will be in v4.0.1 soon.\nThank you for your help!\n. Great! Thank you. I'll research failing spec and merge your pull after\n. I merged and checked, we don't need to require BlankSlate at all. It will be in 4.0.1 soon. Thank you!\n. Thank you, will fix it this weekend\n. Done\nhttps://github.com/gazay/gon/wiki/Usage-with-RABL\n. Thank you! It's done\n. Nice one, I'll look what can be done with it on this weekend:) Thank you!\n. Done in 4.0.1, will push it soon\n. Here is the doc for locals with rable usage: https://github.com/gazay/gon/wiki/Usage-with-RABL\nActually just as in rabl and everywhere.\n. Hello, thank you for your response, but it's still used as helper, you can see it in module Helpers, which included in ActionController::Base class: https://github.com/gazay/gon/blob/master/lib/gon/helpers.rb#L43\nYou can use Gon.global instead of gon.global, because it do not depend on current request object id, but other functionality do, so I suggest you use helper instead on class in other than global cases.\n. Thank you for issue, I'll check it as soon as possible:)\n. Sorry for delay, I checked by myself and I get right requests to server with code you provided. Can you show server log for 500 error?\n. Thank you :)\n. Thank you, maybe you can provide pull request?\n. Don't really know case where it can be needed and as said @topdev - it isn't sounds secure\nClosing\n. Thank you for issue! I will look into on weekend\n. Just pushed new version with fixes - 4.0.2. Should be all ok now)\n. Yes, gon require Ruby 1.9+ because of early versions of jBuilder and because I like ruby 1.9 syntax :) You can create your own fork and replace all hashes with hashrocket syntax. And maybe there is couple other places where needed changes. If you will - I can look into later and help you.\n. Sorry for delay, I will check it soon and write to you results :)\n. Great @fermuch! I think I missed here to_json call on value https://github.com/gazay/gon/blob/master/lib/gon/watch.rb#L50. I have to check it\n. Hm, I'm not sure that this will be right. Because then people will not find why they don't receive variable as they expect without any explanation why that's happened. Maybe you have some logs where those bugs appeared? I need to understand cases when Request cannot be available in usual rails flow.\n. By those backtraces - I have no idea what's happening with request. I'm thinking how we can gracefully save and present data if we'll catch this error. Do you have any ideas?\n. Gon::Request is not nil, otherwise the error would be undefined method gon. - yes, I meant rails request which should be written in @request_env. Really rare there can be situation when object_id of rails request object can be same as previous. But I don't see the problem here - you can just have old data in Gon.all_variables.\nIs there anyway to call 'gon' in the controller that gets a reference to Gon without checking wrong_gon_request? - no. You can try to assign variables right to Gon constant, but if you not override gon helper in controller with something - there should be checking for request id.\nIs there anyway @request_env is getting changed after it has been set? - yes, it's always changed when you assign variables to gon, because gon uses as storage request.env['gon'].\n. I have no progress on this one. If someone can explain or point me direction - feel free to reopen this PR.\nClosing\n. Of course. You just need to work with Gon constant, not with the gon helper.\nFor example you have class Some:\n``` ruby\nlib/some.rb\nclass Some\ndef self.set_gon(val)\n    Gon.from_some = val\n  end\nend\n```\nIn controller you just call method of Some:\n``` ruby\napp/controllers/home_controller.rb\n...\n  Some.set_gon Time.now\n...\n```\nThen you will receive value of gon.from_some variable in your js as usual.\n. Of course you can use all parts of gon gem without using special helpers which been made just for simplicity. I need to understand your scope of use gon gem in your new gem, then I can help you. Thank you for issue!\n. As you can see from source of Gon::Helpers - analogue for include gon can be just rendering all variables by yourself. Can you explane to me more about your usage of gon for I can help you more?\n. @mrded - if I understand you right - you can try to override one of methods from rendering stack I think.\n@fbrusatti - analogue of include_gon is method Gon::Base.render_data with options as required argument. So you can just rename your file application.js to application.js.erb and put there a string: <%= Gon::Base.render_data({}) %> Or with options you want.\n. Hello! Thanks for patch! I think we need to restrict type of data object in method push to Hash only (or to object which respond_to method each_pair). Can you provide tests with different types of object sent to push and add constraints?\n. Great - I'll be waiting. I love this new syntax - with it one can just pass options or some parameters to gon and pairs from it will be as separate variables in js.\n. Cool! Thanks a lot!)\n. I've added support for locals to jbuilder. Controller helpers next in queue\n. in v 5.2.2 added support for controller helpers in jbuilder\n. Great! I need some time to analyze those commits. As I understand - I don't need to merge previous pull if I merge this one?\n. I really like it! so it'll be great if you change docs for it :)\n. Thanks man!\n. Oh, sorry guys. I think problem is that I haven't release new version with this syntax yet. I'll do it right now. Sorry again.\n. Alex = Alexey in my case ;)\nHello!\nYes, I like this, I need to test it and look closely by myself. I'll try to do it before weekend, but deadline will be at the sunday)\nThank you for PR! Hope you enjoy using this project)\nP.s. if you have any ideas for features \u2013 please write me a letter. I want to improve this gem and need more experience of usage and more thoughts about what is missed or what can make work with this gem better.\n. Yes, I think that there should be compatibility for old version. Can you add some check for rails version and maybe it will be easiest if for old versions will work old code.\n. Hmm, I haven't see any incompatibilities with old 3.x versions. And I don't really want care from version 4.1.0 for rails < 3.x and ruby < 1.9.x - so I'll merge it!\nThank you very much\n. :+1: Thank you!\np.s. I'm not sure that I'll care in future versions about compatibility with 1.8.7, so I'll do version bump after this PR.\n. It depends on what do you want to do and in what environment) Can you explain more detailed?\n. Gon::Helpers constant contains method for render data in views: include_gon. As I can understand - you want to assign some variables in gon in your helper. Then you need to include constant Gon::GonHelpers, which add gon instance method. If it's not enough - you can write your own proxy method to work with gon - you can trace example how it works by debugging simple assign variable in controller action, and I can explain details later.\n. Oh, you right. I checked it when this issue was added in wrong way. Will be fixed ASAP\n. Thanks guys! Fast-fixed in 4.1.1, more carefully will check this problem later. If you have any other extreme cases with escaping - please create issues or drop me line to email (alex.gaziev(at)gmail.com) and we'll discuss them.\n. Hello, thank you for pull request. Maybe you should try to use gon.global functionality? It's allow you to share any data you want across all application and you will not loose any data with new requests.\n. @mirelon I'm not sure how this PR should works, maybe you can add some tests which show me what you want to add? And how it will affect other functionalities? \n@coderdave It's sad that gon not fits for your purposes. As I don't work with turbolinks right now I don't think that I can add support for it in gon in near future. But if you will have some time and feel that you can help - it will be awesome!\n. I think I understood what you want to do here, but it will not work this way. Better for multi requests without wiping old data you should use gon global (look at it in wiki). You can set variable once there and it will be available anywhere in your project and you will decide when clear this variable.\nClosing\n. Hello! Thank you for issue. Because of jBuilder architecture I had to create special environment to evaluate jBuilder templates code. Because of that I believe you receive that kind of exception. Can you try to assign current_user to some instance variable and use it in locals statement? I have plans to get deeper in this, but right now I have no time :(\n. Watch.js right now used as storage for function of gon.watch implementation and it loads into constant of Gon::Watch module one time when this module loads. This function pretty small and before it was in this module - I moved it because I don't want to have JS in ruby file. Gon::Watch works next way: after you used gon.watch helper inside your controller action and assigned to it some variable, Gon::Base.render_data will check about watched variables and if there are some - it will include this JS function (gon.watch) before JS gon object. This function was written in pure JS so I hope there should not be problems with JS errors like missed jQuery or something like that. Why do you need this function separate from usage of gon.watch in your controller? Also the reason why I preffer this way - this javascript function should be before JS code (assets) which can use this function for watched gon variables.\n. Let me close this inactive issue\n. Thank you for issue! Unfortunately I haven't touch rails 4 because of scope of my current work. I'll try to dig into by myself when I get some time but it will be super if can help me to realize where is the problem or maybe make some falling test) Thanks again!\n. Not yet =(\n. I can't reproduce this on new rails 4 application. Helper is working for me. Can someone provide simple app which reproduce this issue please?\n. So I still can't reproduce not working helper in rails 4. It was stopper for release new version, and I think without sample application with not working gon helper I'll release new version in few days without some fixes for this issue.\n. Thanks a lot, I'll dig into it\n. @sebastialonso try new 5.0.4 version, it should work without workarounds.\n. @vorDd can  you tell what exactly was the problem? I'll try to research it\n. Hello all! Please provide smallest app which reproduces this error \u2013 when I'm creating new rails 4.0-4.2 apps I don't have any problem with include_gon helper. But maybe I'm using wrong web server (for reproducing needed puma for example or something else). Please help me to trace this error, I'm in process of refactoring and test covering gon for new version and it would be great if in new version it would be fixed.\n. @TheDerek can you provide example app that reproduces this error please? In my new projects on rails 4.0-4.2 I can't reproduce it.\n. Hello! Sorry for delay - so much work right now. I think it's a great idea and I'd like to accept PR like this. Also I think that you can do couple options for camel_casing - recursively camel_casing, when all hashes and all hashes in hashes etc in gon variables will be camel_cased. And second - just for some deep, which by default will be for example 1 - so it will work like your example. What do you think? Or I missed something?\n. Great! If you still want it - will wait for your PR :) And some tests also would be great\n. Thank you for your issue and sorry for long delay. I'll plan to fix gon for rails 4 and with it I'll update installation page. I'll let you know in this issue. Also it's related to https://github.com/gazay/gon/issues/90\n. Nice one! I'll review it tomorrow, thank you!\n. Cool! Thank you very much! Maybe you can also provide a little text for readme for this option?\n. Or I'll do it by myself, I just looked into my page for options - there just example of usage for each option :)\n. I have to go through issue with running on rails 4 and then will be release. Right now I don't know when I'll have time for this,hopefully on this weekend or next week\n. Thank you a lot! Sorry for delay!\n. Hello! Thank you for your PR! Can you please squash commits and I'll merge it?\n. Great!\n. Sure, I want to spend some time to make gon compatible with rails 4 without problems on this weekend and then I'll make new version)\n. Cool, thanks for idea! I'll look into it\n. If you have time to help with gon project - can you please check master branch in your threaded applications to confirm that last merge helped with threadsafety https://github.com/gazay/gon/commit/cd0a5a1ecf72457762fcf6e3fb333309f9f9170b\n. @kgx cool! Thanks for checking!) About request.uuid \u2013 as I understood from rails source it can be used instead request.id, but gon works only inside rails application, so request.id should fit for its purposes well.\n. Thanks)\n. Thanks)\n. Yes it's really good point! I think I should put it in readme. Thank you!\n. @Gailbear it would be great if you help me with this!) I'm not using turbolinks in my current projects and don't have enought time to get into the problem\n. Great, @shadowed87, maybe you see how we can include this solution in gon library? Maybe add special option and readme section for it?\n. Thank you!\n. Hi all! Thanks for report, will try to investigate it ASAP. @Nejuf - is there more stack trace?\n@hau, can you tell me what is on pages_controller.rb:12? Can you repeat this exception with gsub locally?\nAnyway I'll try to find what is wrong there today.\n. It seems that I've fixed problem with missed gon method for Nil object. It's already published in 5.0.1\nStill digging about gsub method\n. @hau, I can't reproduce it locally. I think it can be data-related bug. If you can provide failing example - I'll fix it right then. But now I don't know what it can be, I've tried your code with my data and it just works.\n. @pkpp1233 that's interesting! Can you please provide stacktrace for 4.1.0 and 5.0.1? \n. @forest @gregmolnar can you please check that current in master fixed the problem? Thanks!\n. Thank you! So I release new version then.\n. Cool! Sorry for delayed answer\nThank you very much\n. Super!\n. I don't think that this is good solution. There can be conflicts for different requests if it would be stored in global variable. Also it can affect flow with usage global scope in gon.\n. The problem is that this creation of gon object not really right. I'll use your commit and rewrite a little. Thank you for help!\n. That is strange. In each request it calls Gon.clear which clear current gon data. Can you check with gon version 5.0.2?\n. Thank you! Yes, I think one of possible solutions is to create middleware like in request_store. But also I think we can simply check wrong_gon_request? in include_gon helper here - https://github.com/gazay/gon/blob/master/lib/gon/helpers.rb#L11. And clear it if it is wrong. What do you think?\nIt would be awesome if you can write this integration test!\n. hm, I'll change it back because travis also doesn't accept this syntax.\n. Thank you for report!)\n. Hm. I think you right. It's request specific, so if you someone don't want render watch variables on current page - just don't use gon.watch in controller.\nDo you want to make PR?\n. Great!)\n. Thank you for issue! I hope I fix the problem - please check v5.0.4 - it should work there.\n. Thank you!!\n. If there will be no fast fixes - maybe in month or two. I want to do couple of things before new version\n. Hello! Interesting case! Yeah, gon jbuilder now is not really dynamic and fully compatible. I think we can try to do something like done here https://github.com/gazay/gon/blob/master/lib/gon/jbuilder.rb#L61. But I'm not sure yet.\n. Thank you for issue! Can you please provide full stack trace and example how you use gem?\n. Anyway it is and issue and add section to wiki is a good idea) Thank you, I'll do it soon.\n. Thank you for issue! Maybe it's related to some user's input in data you sending with gon? Maybe something in department_list? I think we need more debug info to understand what happened here. Maybe you can add some silent logger which will react on this kind of error and write environment somewhere?\n. Awesome! Thank you!\n. Yes, it's good idea! Naming always was a problem for me (Gon - ?!). Can you provide PR?\n. Problem is not solved yet as because of specific of jbuilder's rendering process I had to write own parser for its templates. Right now I don't have time and need to fix partial functionality in jbuilder module in gon but I can help if someone want to help with it =)\n. I don't know the current situation, but when I added it, there was no explicit parser/renderer/engine included. So you can't do as in rabl, for example, re = Rabl::Engine.new...; re.render. Jbuilder is highly tied with Rails rendering stack, and you can't use it standalone which I needed for render templates and put them into JSON.\n. In Rails 5 will be rendering instrument that allow to throw away all Gon::Jbuilder::Parser logic and just render jbuilder template (https://medium.com/evil-martians/new-feature-in-rails-5-render-views-outside-of-actions-2fc1181e86a8)\n. It will call double render error if you use it in controller\n. Hello! Thank you for PR, but it breaks specs. Also it was made for thread safe purposes\n. Actually I think that this was written in early versions of gem and not really helps with thread-safety. It's strange that specs falling then. I'm looking what is wrong here\n. It seems that something changed in ruby in last releases, PR wasn't related to travis falls)\n. I like it! Let's try)\n. I think we can add hook which will check version of rails and use appropriate method to get id of request. Can you do it?\n. Thank you! It's awesome!\n. Try to act like with Hash. gon.global.delete(key)\n. Thank you!\n. Hello! Thank you for issue. The thing is that gon works only inside one request - redirect_to is a new request. That's why all variables for previous request don't match for current request and delete. You can pass variables through several requests with Gon.global or with other ways like you described with flash.\n. Gon global mostly for constant values from app initialization which you want to access everywhere. It's not threadsafe.\n. We've released version 5.1.1 which should resolve this problem.\n. Thank you!!\n. Hello. No, it's not possible because gon is a helper, which works with internal gon storage and do all magic. If you use @gon it will be simple instance variable of controller.\n. Cool! Thank you for PR. Can you please fix spec and I'll merge it\n. Thank you!\n. Nice!!\n. Thank you!!\n. Hello! Thank you for PR. I think better to make it configurable and off by default for now, as it's not major feature. But when there will be next major release I'll switch it to on by default.\n. namespace_check sounds good) Also can you please add note about this configuration in readme?\n. Better on wiki yes. Thank you for your PR!\n. Thank you!\n. Looks great! Can you please add description of this feature to Readme or provide text for wiki page. After merge I'll bump version. Thank you!\n. Great! Thank you!\n. I don't really like how it looks and as it is legal and only in tests I'll leave the old version. But I'm really happy that you use Gon and find time to make this pull request! Thank you very much!\n. Hello! Can you try to reproduce it on fresh rails app? Can you provide example of code?\n. Should be solved by PR above. New version soon, for now please use master\n. hm, travis failed with strange error. I'll test your fix and if all ok - merge it. Thank you very much for PR!\n. Thank you for PR and idea! But I think that this behavior isn't clear for end user. Maybe better if this feature act somehow like that? :\ngon.var = { a: 1 }\ngon.merge_or_set.var = { b: 2 }\n. Thank you!\n. It sounds useful for me!) Please send pull request and i'll merge it.\nActually it wasn't compiled from coffee, it was written by my good friend @kossnocorp in js and i never touched it after) It can be written also in coffee - I would be really grateful if you provide this implementation)\n. Welcome!) I don't really know what will be the best for this coffee and js files in gon. Maybe asset pipeline should include it when you require gem or something else. Maybe you have an idea?\nThank you for this pull request!)\n. Nice! Thank you!\n. Hello! But gon.watch is not a variable - it is a function. https://github.com/gazay/gon/wiki/Usage-gon-watch\n. Actually I see more problems with watch now - it ignores namespace option.\nAnyway - how you think it can be solved?\n. Hello! I'm not using turbolinks and can't help you with that fast. Maybe you have an idea why it is happening? It would be really great if you can do some research :)\nThank you for the issue! And for using gon\n. Hello, thank you for issue. Can you please provide simple app with failing test? Or at least example code of failing test. Thank you in advance\n. Great, downloading\n. Nice! Thank you\n. Great! Thank you!\n. Hello, yes it is expected behavior as gon using metaprogramming to set variables as methods of gon class. So it doesn't allow to use public methods as variable names because it can break functionality of whole gem. Please try different name, like user_name\n. https://github.com/gazay/gon/blob/master/lib/gon.rb#L39 you can find this functionality here\n. Thank you!\n. Thank you!\n. Sure! This information is in usage section: https://github.com/gazay/gon#usage\n. No problem =)\n. Ah sorry, I went to quickly in issue, so I misunderstood you. Do you mean I need to provide information about internal gon flow, how it stores data from action and then renders it in view? But I thought it is pretty clear \u2013 it just stores data for current request inside Gon RequestStore, then when view calls include_gon \u2013\u00a0it takes it from there and converts to json and add script tag with it.\n. Hello, thank you for issue. I've fixed it in master branch, but didn't push new version of gem yet. Can you try gon from master branch?\n. Did you ran bundle install after?\n. My bad, there was a conflict and I didn't push changes. Try to bundle update gon and it should be fixed\n. Thank you!\n. Hello! The last version with support for 1.8.7 was 4.0.3 https://github.com/gazay/gon/blob/master/CHANGELOG.md#410. I'm suggest to update Ruby if you can as 1.8.7 long time dead and not supported by Ruby team.\n. Thanks! :+1: \n. ^_^ thank you!\n. As I see, the reason of this behavior is that you use something like turbolinks or similar instrument, which re-render only part of the view and don't touch gon area\n. Great! Thank you! Do you want to take part in developing gon gem?\n. I've made you collaborator of gon gem =) Welcome! There a lot of issues I don't have time or environment to check, if you help to clean up it \u2013\u00a0it would be great =)\n. I've created slack channel to discuss issues and features. Please join (send me email to alex.gaziev@gmail.com and I'll send you invite)\n. Fixed @ai, thank you!\n. @ai v6.0.0\n. Great, Thank you!\n. I just not really understand why it happening? _o is an OpenStruct object, and don't have methods from ActionView\n. We're using gon in our projects and I didn't see this problem after update. Anyway it's good to rename just to need_tag as tag option was excess. Can you provide full backtrace of error?\n. I see. Anyway it is a good pull request, thank you =)\n. Hello! Yes, the problem I see is that you using reserved method name for gon - env. Maybe not only this method. I'll add more descriptive message for this error\n. Hello Dave!\n1. You can't access gon object from anywhere except controllers and views as it is just a helper. You can access Gon::Global instead and in js it will be available from gon.global namespace.\nLet I tell you how gon works and maybe you'll find solution for your task faster (as I maybe don't understand partially what you want to achieve by using sidekiq for different pages):\n1. You have different routes which point to different controller actions. Let say we have root (Home#index) and show (Home#show).\n2. In index you have to show all the data from your database in JS, so in action you write gon.assets = Asset.all, in show you need only scoped data: gon.assets = Asset.where(page: params[:id]).\n2'. In view layout you have include_gon(your options)\n3. In your browser you make root request.\n  3a. Rails receive this request and goes to index action of Home controller. There is our line gon.assets = Asset.all.\n  3b. This gon \u2013 is a controller helper, which checks controller's environment: gon stores inside its storage request identifier. Gon needs it to work only with data, which related just to current request. For example on next request gon still have data from first request, but as identifiers of requests doesn't match \u2013\u00a0it will erase old data.\n  3c. After gon checked and renewed request uuid \u2013 it can store data, so it does.\n  3d. Rails finishes logic in controller's action and start rendering.\n4. When rails start render it meet line include_gon(your options) in your layout and it is also a helper (but this time view helper, so it is accessible from views) as gon in controller.\n  4a. This helper also have info which request we working with (it's uuid), and it checks - is there a data it should prepare for this request\n  4b. It gather all data for this request and transform it to javascript tag with json data you can access from your javascript.\n  4c. No matter what request right now \u2013 it checks is there global data (from Gon::Global)? If it is - it will render it anyway in namespace gon.global.\nIs this helpful information? If you want more explanation or more help with your task \u2013\u00a0please describe why you want to use sidekiq? If this is a static data and should be available on many pages \u2013\u00a0you can just render it once in js.erb file and include it in custom layout for those pages. It will be faster than using gon.\n. By default, unless you use option camel_cased: true in include_gon method, your variable names in JS should be equal to names from Ruby.\n. After action callback runs after rendering phase of action. Gon renders its data during rendering phase. So it's expected behavior. Thank you for issue!\n. We need to check since what version of rails env available from request. Thank you for your PR!\n. Thank you @dlupu & @takiy33 !\n. v 6.1.0 pushed\n. Hello, you can use need_tag: false option https://github.com/gazay/gon/wiki/Options#need_tag--true\n. thank you!\n. Thank you\n. depends. It is the same as if you expose same tokens in your html \u2013\u00a0anyone, who can access developer console can find it\n. Hello! Do you pass include_gon without arguments?\n. Can you provide full backtrace for error?\n. @nazrulcse it seems you have super old version of multi_json (from 2011), method encode back then accepted only one argument - object itself. In later releases they added second argument - options. Gon uses this param. So try to update multi_json to latest releases and it should fix the problem\n. Hello! Thank you for issue. Can you do a PR?\n. Looks good for me :) Thank you!\n. Hello! Thank you for issue. This option not really for that - it just renders window.gon={} on each request, even if there are no gon variables set. How it fixes uncaught reference error I don't really understand, but if you can create small app which shows this problem \u2013 I can debug and fix it properly. Thank you! Is that error happened in development mode or in production too?. I've started your project without init: true option and on root route (localhost:3000/) exception didn't happened \u2013 where it was?. Thanks!. Whoa! That looks awesome :) Thank you!. I've released 6.2.0 but it seems something changed and specs are not green now. I'll look why later. Thank you :). ",
    "kossnocorp": "I think better decision will be use request.env, for example request.env['gon_variables']\n. I think better decision will be use request.env, for example request.env['gon_variables']\n. ",
    "brainopia": "\u0413\u044b\u0433\u044b ) \u041d\u0430\u0444\u0438\u0433\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Rails.cache \u0438\u043b\u0438 request.env? :) \n\u041f\u0435\u0440\u0432\u043e\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u043c\u0435\u0436\u0434\u0443 \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u0430\u043c\u0438, \u0447\u0435\u0433\u043e \u0437\u0434\u0435\u0441\u044c \u0441\u043e\u0432\u0441\u0435\u043c \u043d\u0435 \u043d\u0430\u0434\u043e. \u0412\u0442\u043e\u0440\u043e\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f rack middleware, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u043f\u0430\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438.\n\u0418 \u0437\u0430\u0447\u0435\u043c \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c method_missing \u0434\u043b\u044f \u0431\u0430\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0435\u0441\u043b\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 OpenStruct. \u0417\u0430\u043e\u0434\u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0442\u044c, \u043d\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0440\u0435\u043b\u044c\u0441 \u043a\u043e\u0434\u0435, \u0447\u0442\u043e\u0431\u044b \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043d\u0435 \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c.\n. \u0414\u044b\u043a, \u044f \u0438 \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u043e\u0432\u0430\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c OpenStruct\n. \u042d\u0434 \u043f\u0440\u0430\u0432. \u041d\u0430\u0434\u043e \u0447\u0438\u0441\u0442\u0438\u0442\u044c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0438\u043d\u0430\u0447\u0435 \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0431\u0443\u0434\u0443\u0442, \u043a\u0430\u043a \u0443 ActiveSupport::Cache::MemoryStore, \u0442\u043e \u0435\u0441\u0442\u044c inconsistency \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u0445.\n. \u0413\u044b\u0433\u044b ) \u041d\u0430\u0444\u0438\u0433\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Rails.cache \u0438\u043b\u0438 request.env? :) \n\u041f\u0435\u0440\u0432\u043e\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u043c\u0435\u0436\u0434\u0443 \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u0430\u043c\u0438, \u0447\u0435\u0433\u043e \u0437\u0434\u0435\u0441\u044c \u0441\u043e\u0432\u0441\u0435\u043c \u043d\u0435 \u043d\u0430\u0434\u043e. \u0412\u0442\u043e\u0440\u043e\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f rack middleware, \u0447\u0442\u043e\u0431\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u043f\u0430\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438.\n\u0418 \u0437\u0430\u0447\u0435\u043c \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c method_missing \u0434\u043b\u044f \u0431\u0430\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0435\u0441\u043b\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 OpenStruct. \u0417\u0430\u043e\u0434\u043d\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0442\u044c, \u043d\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0440\u0435\u043b\u044c\u0441 \u043a\u043e\u0434\u0435, \u0447\u0442\u043e\u0431\u044b \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043d\u0435 \u043f\u0440\u0438\u0448\u043b\u043e\u0441\u044c \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c.\n. \u0414\u044b\u043a, \u044f \u0438 \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u043e\u0432\u0430\u043b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c OpenStruct\n. \u042d\u0434 \u043f\u0440\u0430\u0432. \u041d\u0430\u0434\u043e \u0447\u0438\u0441\u0442\u0438\u0442\u044c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0438\u043d\u0430\u0447\u0435 \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0431\u0443\u0434\u0443\u0442, \u043a\u0430\u043a \u0443 ActiveSupport::Cache::MemoryStore, \u0442\u043e \u0435\u0441\u0442\u044c inconsistency \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\u0445.\n. ",
    "pavankat": "I have this issue with \ngem 'rails', '3.2.12'\nand I'm using gem \"gon\", \"~> 4.1.1\"\nI guess I can't use gon\n. I have this issue with \ngem 'rails', '3.2.12'\nand I'm using gem \"gon\", \"~> 4.1.1\"\nI guess I can't use gon\n. ",
    "edtsech": "\u0413\u0443\u0434!\n. \u042f\u0441\u043d\u043e, \u043d\u043e \u044f \u0431\u044b \u0437\u0430\u0444\u0438\u0433\u0430\u0447\u0438\u043b, \u0438\u0431\u043e \u0447\u0430\u0449\u0435 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0441\u044b\u043b\u0430\u0442\u044c, \u043d\u0435\u0436\u0435\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \n\u0418 \u0432 \u0440\u0435\u0434\u043c\u0438\u0448\u043a\u0435 \u0441\u0442\u043e\u0438\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u0447\u0442\u043e \u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u0434\u043e \u0432\u0440\u0443\u0447\u043d\u0443\u044e.\n. \u0422\u043e\u0436\u0435 \u0434\u0443\u043c\u0430\u043b \u043f\u0440\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443.\n. \u0413\u0443\u0434!\n. \u042f\u0441\u043d\u043e, \u043d\u043e \u044f \u0431\u044b \u0437\u0430\u0444\u0438\u0433\u0430\u0447\u0438\u043b, \u0438\u0431\u043e \u0447\u0430\u0449\u0435 \u0432\u0441\u0435 \u0442\u0430\u043a\u0438 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0441\u044b\u043b\u0430\u0442\u044c, \u043d\u0435\u0436\u0435\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \n\u0418 \u0432 \u0440\u0435\u0434\u043c\u0438\u0448\u043a\u0435 \u0441\u0442\u043e\u0438\u0442 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u0447\u0442\u043e \u0447\u0438\u0441\u0442\u0438\u0442\u044c \u043d\u0430\u0434\u043e \u0432\u0440\u0443\u0447\u043d\u0443\u044e.\n. \u0422\u043e\u0436\u0435 \u0434\u0443\u043c\u0430\u043b \u043f\u0440\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443.\n. ",
    "apatlola": "i have the same issue using HAML. please help me fix this.\n. I followed railscast video.\napplication.html.haml\n  = include_gon\nproductscontroller.rb\ngon.xx = Product.limit(10)\nproducts.coffee .\n    alert gon.xx\nIt giving me \"gon undefined\" while checking on firebug console when page loaded. \n. i have the same issue using HAML. please help me fix this.\n. I followed railscast video.\napplication.html.haml\n  = include_gon\nproductscontroller.rb\ngon.xx = Product.limit(10)\nproducts.coffee .\n    alert gon.xx\nIt giving me \"gon undefined\" while checking on firebug console when page loaded. \n. ",
    "logankoester": "I've added a failing spec to demonstrate this issue at https://github.com/logankoester/gon/commit/2ede19409f89cb3998365033474d882bf323d8f3\n. Thanks! I'll give this another shot :-)\n. I've added a failing spec to demonstrate this issue at https://github.com/logankoester/gon/commit/2ede19409f89cb3998365033474d882bf323d8f3\n. Thanks! I'll give this another shot :-)\n. ",
    "nesquena": "Nice work! Great addition\n. Nice work! Great addition\n. ",
    "Bushjumper": "Thanks for a slick gem! Ok, I've made that change - well spotted.\nGraeme\n. Thanks for a slick gem! Ok, I've made that change - well spotted.\nGraeme\n. ",
    "gy": "I have the same concern as @tommyh\n. Thank you.\n. I have the same concern as @tommyh\n. Thank you.\n. ",
    "jebw": "I've had the same with a new rails 3.2 app\n. Thanks, I'll look forward to it.\nOn Mar 6, 2012 5:46 AM, \"Alexey Gaziev\" \nreply@reply.github.com\nwrote:\n\nNew minor version soon.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gazay/gon/issues/24#issuecomment-4337997\n. I've had the same with a new rails 3.2 app\n. Thanks, I'll look forward to it.\nOn Mar 6, 2012 5:46 AM, \"Alexey Gaziev\" \nreply@reply.github.com\nwrote:\nNew minor version soon.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gazay/gon/issues/24#issuecomment-4337997\n. \n",
    "tommyh": "Thanks!  Going to start using this at work for our backbone apps.\n. Cool!  I'll try to put this together this week.  Any preference on the config name?\nnamespace_truthy_check\nnamespace_check\nsafe_assignment\ndouble_pipe_assignment\nSomething else?  (Not super stressed on the name, just tying to avoid another round trip if possible)\nTom\n\nOn Aug 10, 2014, at 11:00 PM, Alexey Gaziev notifications@github.com wrote:\nHello! Thank you for PR. I think better to make it configurable and off by default for now, as it's not major feature. But when there will be next major release I'll switch it to on by default.\n\u2014\nReply to this email directly or view it on GitHub.\n. Of course.\n\nThanks again.  I've used gon on a few projects - it's super helpful.\n. Working on this change now.  You said to \"add a note for the config in the readme\", but I noticed that most of these config options are actually documented on the wiki: https://github.com/gazay/gon/wiki/Options.\nDo you want me to put it on that wiki page or in the README.md?\n. Great!  I'll make the wiki edits today or this weekend.\nTom\n\nOn Aug 21, 2014, at 11:00 PM, Alexey Gaziev notifications@github.com wrote:\nMerged #153.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!  Going to start using this at work for our backbone apps.\n. Cool!  I'll try to put this together this week.  Any preference on the config name?\n\nnamespace_truthy_check\nnamespace_check\nsafe_assignment\ndouble_pipe_assignment\nSomething else?  (Not super stressed on the name, just tying to avoid another round trip if possible)\nTom\n\nOn Aug 10, 2014, at 11:00 PM, Alexey Gaziev notifications@github.com wrote:\nHello! Thank you for PR. I think better to make it configurable and off by default for now, as it's not major feature. But when there will be next major release I'll switch it to on by default.\n\u2014\nReply to this email directly or view it on GitHub.\n. Of course.\n\nThanks again.  I've used gon on a few projects - it's super helpful.\n. Working on this change now.  You said to \"add a note for the config in the readme\", but I noticed that most of these config options are actually documented on the wiki: https://github.com/gazay/gon/wiki/Options.\nDo you want me to put it on that wiki page or in the README.md?\n. Great!  I'll make the wiki edits today or this weekend.\nTom\n\nOn Aug 21, 2014, at 11:00 PM, Alexey Gaziev notifications@github.com wrote:\nMerged #153.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "thbar": "Hey @gazay can you confirm that the latest version of gon indeed escapes like you planned? Thank you!\n. Hi @gazay! Thanks for the confirmation.\nI asked because I came across this issue and this article - so I wondered if using gon could be considered a safer way to bootstrap JSON in a script tag, compared to the existing alternatives.\n. Hey @gazay can you confirm that the latest version of gon indeed escapes like you planned? Thank you!\n. Hi @gazay! Thanks for the confirmation.\nI asked because I came across this issue and this article - so I wondered if using gon could be considered a safer way to bootstrap JSON in a script tag, compared to the existing alternatives.\n. ",
    "mull": "Using Rabl 0.8.6 (latest stable) I still have this problem. Is this issue really solved?\nruby\nchild :whatever do \n  [root_url]\nend\nThrows \"undefined method root_url for Rabl::Engine\"\n. Sorry.. I should check what repository I am in! :D\n. @lulalala I can't quite remember what I changed unfortunately, I know I switched over to RablRails and then back to Rails.. heh! Sorry I can't be of any help.\n. Using Rabl 0.8.6 (latest stable) I still have this problem. Is this issue really solved?\nruby\nchild :whatever do \n  [root_url]\nend\nThrows \"undefined method root_url for Rabl::Engine\"\n. Sorry.. I should check what repository I am in! :D\n. @lulalala I can't quite remember what I changed unfortunately, I know I switched over to RablRails and then back to Rails.. heh! Sorry I can't be of any help.\n. ",
    "lulalala": "@mull may I ask how you solved it (I am having the same issue)\n. @mull may I ask how you solved it (I am having the same issue)\n. ",
    "asumaran": "I'm getting the same error in the same case using rabl with gon in Rails\nundefined local variable or method `this_time' for #Rabl::Engine:0x007febee9f13c0\nthis_time is located in the application_helper.rb file. any workaround for this?\nUpdate:\nI solved including the helper in the controller\ninclude ApplicationHelper\nand now everything is working fine\n. I'm getting the same error in the same case using rabl with gon in Rails\nundefined local variable or method `this_time' for #Rabl::Engine:0x007febee9f13c0\nthis_time is located in the application_helper.rb file. any workaround for this?\nUpdate:\nI solved including the helper in the controller\ninclude ApplicationHelper\nand now everything is working fine\n. ",
    "askl56": "Bumping this thread to see if there is any update on it? @gazay . Bumping this thread to see if there is any update on it? @gazay . ",
    "larskluge": "crashed something else, will invest and come back later..\n. this pull request is absolutely valid. it fixes the issue described above. \nbut the current master is not working anymore because of escaping the javascript in a wrong way. that was the reason why i was irritated. sorry for the hesitation. \n. You're welcome and thanks for this great project btw!\n. crashed something else, will invest and come back later..\n. this pull request is absolutely valid. it fixes the issue described above. \nbut the current master is not working anymore because of escaping the javascript in a wrong way. that was the reason why i was irritated. sorry for the hesitation. \n. You're welcome and thanks for this great project btw!\n. ",
    "jayachakladar": "So here is the workflow:\nIn my controller I am assigning the gon variable as\ngon.allstates = @all_states // @all_states is a hash of three items like state abbreviation, group that holds a string label like premium and not premium, and clickable that holds another boolean data.\nI have added the coffeescript in my view, and in my coffeescript if I do an alert JSON.stringify(gon.allstates), it lists it properly.\nHowever when I assign gon.allstates as a data source to my Raphael map, it is not picking up the data.\nAs a workaround, I have tried to pass the data to my coffescript using a javascript tag in my view  and sending a json object of @all_states, and the map picks that up. I dont want to go this route through the views. Instead gon looks cleaner to me. \nHope it makes sense. Thanks\n. @all_states = State.select('abbreviation').inject({}) do |groups, state|\n        groups[\"#{state.abbreviation}\"] = {\n            :abbreviation => state.abbreviation,\n            :group => @finalstate.include?(state.abbreviation) ? \"premium\" : \"not\",\n            :clickable => @finalstate.include?(state.abbreviation) ? \"true\" : \"false\"\n        }\n       groups\n. the data looks something like this: both the javascript_tag and gon object looks the exact same\n{\"AK\":{\"abbreviation\":\"AK\",\"group\":\"found\",\"clickable\":\"true\"},\"AL\":{\"abbreviation\":\"AL\",\"group\":\"found\",\"clickable\":\"true\"},\"AR\":{\"abbreviation\":\"AR\",\"group\":\"found\",\"clickable\":\"true\"},\"AZ\":{\"abbreviation\":\"AZ\",\"group\":\"found\",\"clickable\":\"true\"},\"CA\":{\"abbreviation\":\"CA\",\"group\":\"found\",\"clickable\":\"true\"},\"CO\":{\"abbreviation\":\"CO\",\"group\":\"not\",\"clickable\":\"false\"}\nOfcourse the gon object is added differently than the javascript_tag, one in the header and one as CDATA, both are alerting in the same way from the coffeescript. So so far so good.\nBut when I do the assignment of the data in the map like \nparms =\n    container_width : 300\n    container_height : 200\n    container_id : \"mapdiv\"\n    data_source   : gon.allstates\nThis last statement is failing.\nWhy I cant make out .... Thanks for your help.\n. So here is the workflow:\nIn my controller I am assigning the gon variable as\ngon.allstates = @all_states // @all_states is a hash of three items like state abbreviation, group that holds a string label like premium and not premium, and clickable that holds another boolean data.\nI have added the coffeescript in my view, and in my coffeescript if I do an alert JSON.stringify(gon.allstates), it lists it properly.\nHowever when I assign gon.allstates as a data source to my Raphael map, it is not picking up the data.\nAs a workaround, I have tried to pass the data to my coffescript using a javascript tag in my view  and sending a json object of @all_states, and the map picks that up. I dont want to go this route through the views. Instead gon looks cleaner to me. \nHope it makes sense. Thanks\n. @all_states = State.select('abbreviation').inject({}) do |groups, state|\n        groups[\"#{state.abbreviation}\"] = {\n            :abbreviation => state.abbreviation,\n            :group => @finalstate.include?(state.abbreviation) ? \"premium\" : \"not\",\n            :clickable => @finalstate.include?(state.abbreviation) ? \"true\" : \"false\"\n        }\n       groups\n. the data looks something like this: both the javascript_tag and gon object looks the exact same\n{\"AK\":{\"abbreviation\":\"AK\",\"group\":\"found\",\"clickable\":\"true\"},\"AL\":{\"abbreviation\":\"AL\",\"group\":\"found\",\"clickable\":\"true\"},\"AR\":{\"abbreviation\":\"AR\",\"group\":\"found\",\"clickable\":\"true\"},\"AZ\":{\"abbreviation\":\"AZ\",\"group\":\"found\",\"clickable\":\"true\"},\"CA\":{\"abbreviation\":\"CA\",\"group\":\"found\",\"clickable\":\"true\"},\"CO\":{\"abbreviation\":\"CO\",\"group\":\"not\",\"clickable\":\"false\"}\nOfcourse the gon object is added differently than the javascript_tag, one in the header and one as CDATA, both are alerting in the same way from the coffeescript. So so far so good.\nBut when I do the assignment of the data in the map like \nparms =\n    container_width : 300\n    container_height : 200\n    container_id : \"mapdiv\"\n    data_source   : gon.allstates\nThis last statement is failing.\nWhy I cant make out .... Thanks for your help.\n. ",
    "davejamesmiller": "Thanks, it's not important - just took me a while to debug!\n. Thanks, it's not important - just took me a while to debug!\n. ",
    "cj": "Thank you for getting back to me.  Ah, makes sense.  Strange I didn't get an error. (in development mode).\n. Thank you for getting back to me.  Ah, makes sense.  Strange I didn't get an error. (in development mode).\n. ",
    "workmaster2n": "My bad.  I had a call to gon sitting in a buried JS file that was not throwing an error (due to gon being undefined) for some reason.\n. My bad.  I had a call to gon sitting in a buried JS file that was not throwing an error (due to gon being undefined) for some reason.\n. ",
    "structuralartistry": "Hey gazay, no problem. At this point just reverted to using manual for this purpose as I dont have a lot of these variables and I am a bit under time constraint. But if I do end up delving in I will let you know...\nCheers!\n. Awesome, thanks!\n. Hey gazay, no problem. At this point just reverted to using manual for this purpose as I dont have a lot of these variables and I am a bit under time constraint. But if I do end up delving in I will let you know...\nCheers!\n. Awesome, thanks!\n. ",
    "bruparel": "That would make it very useful in practice.\nThanks.\nBharat\n\nFrom: Alexey Gaziev reply@reply.github.com\nTo: Bharat Ruparel bcruparel@yahoo.com \nSent: Sunday, April 15, 2012 4:14 AM\nSubject: Re: [gon] defining gon variables in the views (#38)\nyes, gon takes variables only from controller. I think now about global gon variables, which you can add from anywhere, like application_controller or views. Will add this functionality soon.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gazay/gon/issues/38#issuecomment-5137979\n. Thanks.  I will check it out.\n. That would make it very useful in practice.\nThanks.\nBharat\n\nFrom: Alexey Gaziev reply@reply.github.com\nTo: Bharat Ruparel bcruparel@yahoo.com \nSent: Sunday, April 15, 2012 4:14 AM\nSubject: Re: [gon] defining gon variables in the views (#38)\nyes, gon takes variables only from controller. I think now about global gon variables, which you can add from anywhere, like application_controller or views. Will add this functionality soon.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gazay/gon/issues/38#issuecomment-5137979\n. Thanks.  I will check it out.\n. ",
    "francistm": "@bruparel seems you can do like this\ndefined in controller:\n@gon = gon\nand in view:\n@gon.namespace = {\n    :var => \"val\"\n}\n. @bruparel seems you can do like this\ndefined in controller:\n@gon = gon\nand in view:\n@gon.namespace = {\n    :var => \"val\"\n}\n. ",
    "moktin": "Oh  Great ! I am exploring it\n. Oh  Great ! I am exploring it\n. ",
    "lauriegriffiths": "Just a note for anyone encountering this issue. \nWe had a similar approach of saving fixtures during integration tests, then not being able to read the gon data during jasmine specs. \nThe solution was to also parse and save the gon data from the dom as a json file during the integration tests, then to load this data as a fixture.\n. pairing on @lauriegriffiths machine whilst he's not present, so just a note that it was @markburns that said this.\n. Just a note for anyone encountering this issue. \nWe had a similar approach of saving fixtures during integration tests, then not being able to read the gon data during jasmine specs. \nThe solution was to also parse and save the gon data from the dom as a json file during the integration tests, then to load this data as a fixture.\n. pairing on @lauriegriffiths machine whilst he's not present, so just a note that it was @markburns that said this.\n. ",
    "afa": "specs/description will be added around weekend\n. specs/description will be added around weekend\n. ",
    "brian-mann": "Thanks for responding so quickly... I'd be happy to do a bit more testing.  I'm actually headed out of town in a few hours so I'll work on this the next time I get the chance.\n. Excellent, thanks!\n. Thanks for responding so quickly... I'd be happy to do a bit more testing.  I'm actually headed out of town in a few hours so I'll work on this the next time I get the chance.\n. Excellent, thanks!\n. ",
    "SokratisVidros": "Same issue with gon-5.0.4 and rails-4.0.5.\n. Same issue with gon-5.0.4 and rails-4.0.5.\n. ",
    "andrey-skat": "rails 4.2.4, gon 6.0.1 - same issue\nI found that when gon calls for compute_asset_path it not enters in Sprockets::Rails::Helper#compute_asset_path but in ActionView::Helpers::AssetUrlHelper.compute_asset_path.\nBut when I pointed it to right method, it just not calculates asset_digest_path.\n. As I sad when it calls Sprockets it didn't calculate asset_digest_path.\nIn your stub you use .erb and not gon + jbuilder\n. rails 4.2.4, gon 6.0.1 - same issue\nI found that when gon calls for compute_asset_path it not enters in Sprockets::Rails::Helper#compute_asset_path but in ActionView::Helpers::AssetUrlHelper.compute_asset_path.\nBut when I pointed it to right method, it just not calculates asset_digest_path.\n. As I sad when it calls Sprockets it didn't calculate asset_digest_path.\nIn your stub you use .erb and not gon + jbuilder\n. ",
    "taki": "I take a stub at this issue.\nGemfile\nruby\n  --snip--\ngem 'rails', '4.2.4'\ngem 'gon', '6.0.1'\n  --snip--\nviews/homes/index.html.erb\nerb\n<h1>Hello</h1>\n<%= compute_asset_path 'rails.png' %>\nBelow is result.\n\n. I think that if you use sprockets, compute_asset_path calls Sprockets::Rails::Helper#compute_asset_path and if you do not use sprockets, compute_asset_path calls ActionView::Helpers::AssetUrlHelper#compute_asset_path.\nReferences\n\nhttps://github.com/rails/rails/blob/v4.2.4/actionview/lib/action_view/helpers/asset_url_helper.rb#L189-L195\nhttps://github.com/rails/sprockets-rails/blob/v3.0.0/lib/sprockets/rails/helper.rb#L76-L84\n. I close this issue because README.md and gon/wiki/Installation are updated.\nIf you have question or problem, please feel free to reopen it.\n. Thank you for Issue.\n\nI will think about it.\n. I will close this issue because it is inactive for several years.\n. I think this is good idea.\nThan you for advice.\n. Could you try to use <%= Gon::Base.render_data %> instead of <%= include_gon(:init => true) %>?\n. I will close issue because it is inactive.. Hello, thank you for issue. I can reproduce the error.\nHave you tried the patch?\n. I close this issue because Rails 3.1 is unmaintained by Rails team.\n. I have added tags. Thank you for good idea.\n. Thank you for sending Issue.\n\nIs it possible to place this statement inside of the cache block:\n\nI do not know gon works intently because I think gon is not supposed to this situation.\n. I understand. Thank you for why gon.name is not avaible.\n. Thank you for opening issue.\nReason\nGon gem uses RequestStore gem for storing data.\nRequestStore uses Rack middleware to clear data.(value is not held in another request)\nController spec does not use Rack middleware. As a result, data is not cleared in another request.\nSolution\nPlease clear data in after hook like below.\nruby\nafter do\n  Gon.clear\nend\n. Thanks to merge! :)\n. Yes, I do. I  am interested in gon gem.\n. Thank you. I sent the email sometime ago.\n. Thank you for Issue.\nIt is a good iead that following semantic versioning.\n. Thank you for sending PR.\nWhat do you trouble in any concrete variable name?\n. @koxta19 Thank you for replying issue.\n. I wil close this issue because it is inactive.\n. I think that it is expected behavior.\nI notice gon.url=\"path.json?var1=value1\\u0026var2=value2\" on inspector and gon.url=\"path.json?var1=value1&var2=value2\" on web console.\nPlease see blow pictures.\nInspector\n\nWeb console\n\nThank you.\n. Thank you for Issue.\n\nSo my question is do you have any workaround for the cases like this one? Probably the test mode like these thingies have:\n\nCurrently, No, I do not.\n\nbut it would be nice to be able to disable gon completely for some types of specs while keeping it intact for the integration specs.\n\nIt sounds good iead.\n. Not at all. Thank you for reporting issue.\n. > Is it supposed to be converted?\nNo, it is not. Current behavior is that converting string  .\n. gon.gemspec specificate actionpack is required 3.0.0 or higher.\nSo, I will check to exist request.env in Rails 3.0.0.\nAs a result, it is exists. \n. Thank you for sending Issue.\nI think that tag object's date is causing.\nReleases is sorted by tag object's date.\nPlease see below links.\n- https://rubygems.org/gems/gon\n- https://help.github.com/articles/about-releases/\n. Thank you for issue.\nThis warning is fixed #202.\n. Thank you for issue.\nI have added tag as v6.1.0\n. Thank you for issue.\nThis warning is fixed #202.\n. Thank you for Issue.\nUnfortunately, I do not know it.\n. @khusnetdinov Thank you for PR \ud83d\udc4d . I take a stub at this issue.\nGemfile\nruby\n  --snip--\ngem 'rails', '4.2.4'\ngem 'gon', '6.0.1'\n  --snip--\nviews/homes/index.html.erb\nerb\n<h1>Hello</h1>\n<%= compute_asset_path 'rails.png' %>\nBelow is result.\n\n. I think that if you use sprockets, compute_asset_path calls Sprockets::Rails::Helper#compute_asset_path and if you do not use sprockets, compute_asset_path calls ActionView::Helpers::AssetUrlHelper#compute_asset_path.\nReferences\n\nhttps://github.com/rails/rails/blob/v4.2.4/actionview/lib/action_view/helpers/asset_url_helper.rb#L189-L195\nhttps://github.com/rails/sprockets-rails/blob/v3.0.0/lib/sprockets/rails/helper.rb#L76-L84\n. I close this issue because README.md and gon/wiki/Installation are updated.\nIf you have question or problem, please feel free to reopen it.\n. Thank you for Issue.\n\nI will think about it.\n. I will close this issue because it is inactive for several years.\n. I think this is good idea.\nThan you for advice.\n. Could you try to use <%= Gon::Base.render_data %> instead of <%= include_gon(:init => true) %>?\n. I will close issue because it is inactive.. Hello, thank you for issue. I can reproduce the error.\nHave you tried the patch?\n. I close this issue because Rails 3.1 is unmaintained by Rails team.\n. I have added tags. Thank you for good idea.\n. Thank you for sending Issue.\n\nIs it possible to place this statement inside of the cache block:\n\nI do not know gon works intently because I think gon is not supposed to this situation.\n. I understand. Thank you for why gon.name is not avaible.\n. Thank you for opening issue.\nReason\nGon gem uses RequestStore gem for storing data.\nRequestStore uses Rack middleware to clear data.(value is not held in another request)\nController spec does not use Rack middleware. As a result, data is not cleared in another request.\nSolution\nPlease clear data in after hook like below.\nruby\nafter do\n  Gon.clear\nend\n. Thanks to merge! :)\n. Yes, I do. I  am interested in gon gem.\n. Thank you. I sent the email sometime ago.\n. Thank you for Issue.\nIt is a good iead that following semantic versioning.\n. Thank you for sending PR.\nWhat do you trouble in any concrete variable name?\n. @koxta19 Thank you for replying issue.\n. I wil close this issue because it is inactive.\n. I think that it is expected behavior.\nI notice gon.url=\"path.json?var1=value1\\u0026var2=value2\" on inspector and gon.url=\"path.json?var1=value1&var2=value2\" on web console.\nPlease see blow pictures.\nInspector\n\nWeb console\n\nThank you.\n. Thank you for Issue.\n\nSo my question is do you have any workaround for the cases like this one? Probably the test mode like these thingies have:\n\nCurrently, No, I do not.\n\nbut it would be nice to be able to disable gon completely for some types of specs while keeping it intact for the integration specs.\n\nIt sounds good iead.\n. Not at all. Thank you for reporting issue.\n. > Is it supposed to be converted?\nNo, it is not. Current behavior is that converting string  .\n. gon.gemspec specificate actionpack is required 3.0.0 or higher.\nSo, I will check to exist request.env in Rails 3.0.0.\nAs a result, it is exists. \n. Thank you for sending Issue.\nI think that tag object's date is causing.\nReleases is sorted by tag object's date.\nPlease see below links.\n- https://rubygems.org/gems/gon\n- https://help.github.com/articles/about-releases/\n. Thank you for issue.\nThis warning is fixed #202.\n. Thank you for issue.\nI have added tag as v6.1.0\n. Thank you for issue.\nThis warning is fixed #202.\n. Thank you for Issue.\nUnfortunately, I do not know it.\n. @khusnetdinov Thank you for PR \ud83d\udc4d . ",
    "gushonorato": "You can workaround this issue by adding this code in your config/initializers:\nruby\nmodule Gon\n  module Jbuilder\n    class << self\n      include Rails.application.routes.url_helpers\n    end\n  end\nend\n. Yes! I think the custom helpers  like ApplicationHelper should be included too. I haven't found how to do that automatically using controller variable inside Gon::Jbuilder#parse_jbuilder. If I found, I'll submit a pull request.\n. You can workaround this issue by adding this code in your config/initializers:\nruby\nmodule Gon\n  module Jbuilder\n    class << self\n      include Rails.application.routes.url_helpers\n    end\n  end\nend\n. Yes! I think the custom helpers  like ApplicationHelper should be included too. I haven't found how to do that automatically using controller variable inside Gon::Jbuilder#parse_jbuilder. If I found, I'll submit a pull request.\n. ",
    "dziulius": "Specs also does not seem to work. #get_controller fails to find any controller.\nFor now using this hack:\nruby\nGon::Base.expects(:get_controller).returns(controller).at_least(1)\n. in controller specs, i get \nNoMethodError: undefined method `controller_path' for nil:NilClass\nerror unless i stub controller.\n. Specs also does not seem to work. #get_controller fails to find any controller.\nFor now using this hack:\nruby\nGon::Base.expects(:get_controller).returns(controller).at_least(1)\n. in controller specs, i get \nNoMethodError: undefined method `controller_path' for nil:NilClass\nerror unless i stub controller.\n. ",
    "cloud-on-prem": "Ive the same problem as @dziulius. \nRspec blows up with this:\nNoMethodError: undefined method controller_path' for nil:NilClass\n. Ive the same problem as @dziulius. \nRspec blows up with this:\nNoMethodError: undefined methodcontroller_path' for nil:NilClass\n. ",
    "KrisBraun": "Me too: Rspec controller specs for methods that call gon.rabl fail with that error.\n. Awesome, @gazay, thanks for the help! I've created a minimal app that reproduces the issue: git@github.com:KrisBraun/gon-rabl-rspec.git\nShould be as simple as sync, bundle install, rspec, boom.\n. Me too: Rspec controller specs for methods that call gon.rabl fail with that error.\n. Awesome, @gazay, thanks for the help! I've created a minimal app that reproduces the issue: git@github.com:KrisBraun/gon-rabl-rspec.git\nShould be as simple as sync, bundle install, rspec, boom.\n. ",
    "rcook": "Workaround suggested at https://github.com/gazay/gon/issues/124 seems to fix NoMethodError: undefined method``controller_path' for nil:NilClass problem. I do this in my ApplicationController:\n``` ruby\nclass ApplicationController < ActionController::Base\n  before_filter :set_up_gon\n  after_filter :clear_gon\ndef set_up_gon\n    env['action_controller.instance'] = self\n  end\ndef clear_gon\n    Thread.current['gon'] = nil\n  end\nend\n```\n. Here's my workaround (using gon 5.0.0):\nIn app/controllers/application_controller.rb, add a new before filter:\n``` ruby\nbefore_filter :clear_gon\nprivate\ndef clear_gon\n   Thread.current['gon'] = nil\nend\n```\nIn app/helpers/application_helper.rb, add a new helper:\nruby\ndef include_gon_helper\n  include_gon if Thread.current['gon']\nend\nNow, instead of using include_gon in my views, I use include_gon_helper.\nNote that I have not yet tested this in production.\n. Workaround suggested at https://github.com/gazay/gon/issues/124 seems to fix NoMethodError: undefined method``controller_path' for nil:NilClass problem. I do this in my ApplicationController:\n``` ruby\nclass ApplicationController < ActionController::Base\n  before_filter :set_up_gon\n  after_filter :clear_gon\ndef set_up_gon\n    env['action_controller.instance'] = self\n  end\ndef clear_gon\n    Thread.current['gon'] = nil\n  end\nend\n```\n. Here's my workaround (using gon 5.0.0):\nIn app/controllers/application_controller.rb, add a new before filter:\n``` ruby\nbefore_filter :clear_gon\nprivate\ndef clear_gon\n   Thread.current['gon'] = nil\nend\n```\nIn app/helpers/application_helper.rb, add a new helper:\nruby\ndef include_gon_helper\n  include_gon if Thread.current['gon']\nend\nNow, instead of using include_gon in my views, I use include_gon_helper.\nNote that I have not yet tested this in production.\n. ",
    "dmonopoly": "In my app, I actually never go to the root action / \"home\" page, since the app is meant to run in Qt webkit, and the Qt application makes URL requests to the Rails app like \"http://localhost:3000/?login=admin1@example.com&password=admin\" and then the Rails app would typically respond with the proper webpage.\nI didn't try on a new application, just on this app.\nThe error occurs in the webpage when I test the url and in the Qt app. (If it doesn't work in the webpage, then it definitely won't work in the Qt app - I just want to point out the error doesn't have anything to do with Qt)\n. Ah, I found out the issue: I was declaring Gon.global variables in ApplicationController where there was a before_filter:\n```\nclass ApplicationController < ActionController::Base\n  protect_from_forgery\n  before_filter :authenticate!\n# These are constant variables for clear comparison/code readability across controllers and coffee files.\n  # So, when a controller action uses Gon to set a variable, the coffeescript can get the same value reliably.\n  # These are enums, essentially\n  # these should be what controller sets gon.view to\n  Gon.global.OTHER_VIEW = 'other'\n  Gon.global.PROJECTS_SHOW = 'projects/show'\n  Gon.global.FOLDERS_SHOW = 'folders/show'\n```\nWhat would be the proper place to define these global gon variables?\n. Okay, since the variables are static, I should simply put them in config/initializers/mygonfile.rb ? Will it be automatically included?\nThanks!\n. Actually the error has to do with setting Gon.global.myvariable anywhere, it seems... when I have it set in an initializer, the error persists. I'm digging around in your code right now, and it all starts here:\ngon / lib / gon / helpers.rb\ndef include_gon(options = {})\n    if variables_for_request_present?\n      Gon::Base.render_data(options)\n    elsif Gon.global.all_variables.present?\n      Gon.clear\n      Gon::Base.render_data(options)\n    elsif options[:init].present?\n      Gon.clear if Gon.all_variables.present?\n      Gon::Base.render_data(options)\n    else\n      \"\"\n    end\n  end\nThe problem might stem from a misunderstanding of your include_gon method... mine has no arguments, yet Gon.clear is still being called (I suspect b/c I set global variables?)\n. Could you clarify your usage section? https://github.com/gazay/gon#usage\nI don't understand namespace or init or camel case...\n. In my app, I actually never go to the root action / \"home\" page, since the app is meant to run in Qt webkit, and the Qt application makes URL requests to the Rails app like \"http://localhost:3000/?login=admin1@example.com&password=admin\" and then the Rails app would typically respond with the proper webpage.\nI didn't try on a new application, just on this app.\nThe error occurs in the webpage when I test the url and in the Qt app. (If it doesn't work in the webpage, then it definitely won't work in the Qt app - I just want to point out the error doesn't have anything to do with Qt)\n. Ah, I found out the issue: I was declaring Gon.global variables in ApplicationController where there was a before_filter:\n```\nclass ApplicationController < ActionController::Base\n  protect_from_forgery\n  before_filter :authenticate!\n# These are constant variables for clear comparison/code readability across controllers and coffee files.\n  # So, when a controller action uses Gon to set a variable, the coffeescript can get the same value reliably.\n  # These are enums, essentially\n  # these should be what controller sets gon.view to\n  Gon.global.OTHER_VIEW = 'other'\n  Gon.global.PROJECTS_SHOW = 'projects/show'\n  Gon.global.FOLDERS_SHOW = 'folders/show'\n```\nWhat would be the proper place to define these global gon variables?\n. Okay, since the variables are static, I should simply put them in config/initializers/mygonfile.rb ? Will it be automatically included?\nThanks!\n. Actually the error has to do with setting Gon.global.myvariable anywhere, it seems... when I have it set in an initializer, the error persists. I'm digging around in your code right now, and it all starts here:\ngon / lib / gon / helpers.rb\ndef include_gon(options = {})\n    if variables_for_request_present?\n      Gon::Base.render_data(options)\n    elsif Gon.global.all_variables.present?\n      Gon.clear\n      Gon::Base.render_data(options)\n    elsif options[:init].present?\n      Gon.clear if Gon.all_variables.present?\n      Gon::Base.render_data(options)\n    else\n      \"\"\n    end\n  end\nThe problem might stem from a misunderstanding of your include_gon method... mine has no arguments, yet Gon.clear is still being called (I suspect b/c I set global variables?)\n. Could you clarify your usage section? https://github.com/gazay/gon#usage\nI don't understand namespace or init or camel case...\n. ",
    "homakov": "js helper is very old. I had a look at the code in gon - why do you use\n```\n{namespace}.#{param}=value\n```\ninstead of exporting everything with\nwindow.#{namespace} = #{keys_values.to_json}\n. Then you could just set ActiveSupport.escape_html_entiites_in_json = true.\nBtw it's now true by default in rails 4.\n. js helper is very old. I had a look at the code in gon - why do you use\n```\n{namespace}.#{param}=value\n```\ninstead of exporting everything with\nwindow.#{namespace} = #{keys_values.to_json}\n. Then you could just set ActiveSupport.escape_html_entiites_in_json = true.\nBtw it's now true by default in rails 4.\n. ",
    "yujingz": "Hi @netwire88 , I know it's kind late but if you still need that, I can help.\n. Hi @gazay I will be more than happy to write some examples about this! I will do it this weekend and post it here.\n. Correct me if I said anything inappropriate :)\nUsing Gon + RABL + Backbone.js\nWhy\nBackbone.js relieved rails' controller by rending templates in javascript. Rails then become more backend oriented providing data interface in JSON. \nRABL enables the user to format JSON easily. \nGon is an elegant preload data solution in this combination. It saves an ajax call by preloading the data into the page(you don't have to get data from backbone model/collection any more in most cases).\nWork flow\nOriginal:\n1. HTTP request => 2. Rails routes => 3. Rails controller logic code and render the view => 4. trigger backbone => 5. Render backbone template and send ajax call to get data -> 6. Update html code generated by template when ajax returns data\nUsing gon.rabl\n1. HTTP request => 2. Rails routes => 3. Rails controller logic code, render the view, and generates json according to rabl template => 4. Trigger backbone => 5. Render template directly with gon data\nPreloading data into pages will save a request with server and quicken the page load processing.\nExample\npages_controller.rb\nruby\ndef show\n  @user = User.find(params[:id])\n  gon.rabl\nend\nshow.json.rabl\n``` ruby\n@object user\nattributes :username, :gender\nnode(:followers_count) { |user| user.followers.count }  # Just an example here, it's better to have a count filed in model\n```\nsample_router.coffee\n``` ruby\nclass Sample.Routers.SampleRouter extends Backbone.Router\n  routes:\n    \"users/:id/show\" : \"showUser\"\nshowUser: ->\n    user = new Sample.Models.User(gon.user)\n    userView = new Sample.Views.User(model: user)\n    $(\"body\").html(userView.render().el)\n```\nWarning\nRabl allows you to exclude the root by setting. \n``` ruby\nconfig.include_json_root = false\nconfig.include_child_root = false\n```\nHere I just disabled the child root because if you disabled the json root, everything you put to Gon will be like\ngon.username = \"john doe\"; gon.gender = \"male\"...\ninstead of\ngon.user = { username: \"john doe\", gender: \"male\" }\n. I really enjoyed this combination and hope this can be helpful.\n. What now I am doing is like this\ngon.myVar = user.to_json(:root =>false)\nand in js side\nmyVar = JSON.parse(gon.myVar)\nI can stand with this but it's great if gon can support this kind of feature.\n. Perfectly solved this by adopting rabl. Sorry for my ignorance.\n. Hi @netwire88 , I know it's kind late but if you still need that, I can help.\n. Hi @gazay I will be more than happy to write some examples about this! I will do it this weekend and post it here.\n. Correct me if I said anything inappropriate :)\nUsing Gon + RABL + Backbone.js\nWhy\nBackbone.js relieved rails' controller by rending templates in javascript. Rails then become more backend oriented providing data interface in JSON. \nRABL enables the user to format JSON easily. \nGon is an elegant preload data solution in this combination. It saves an ajax call by preloading the data into the page(you don't have to get data from backbone model/collection any more in most cases).\nWork flow\nOriginal:\n1. HTTP request => 2. Rails routes => 3. Rails controller logic code and render the view => 4. trigger backbone => 5. Render backbone template and send ajax call to get data -> 6. Update html code generated by template when ajax returns data\nUsing gon.rabl\n1. HTTP request => 2. Rails routes => 3. Rails controller logic code, render the view, and generates json according to rabl template => 4. Trigger backbone => 5. Render template directly with gon data\nPreloading data into pages will save a request with server and quicken the page load processing.\nExample\npages_controller.rb\nruby\ndef show\n  @user = User.find(params[:id])\n  gon.rabl\nend\nshow.json.rabl\n``` ruby\n@object user\nattributes :username, :gender\nnode(:followers_count) { |user| user.followers.count }  # Just an example here, it's better to have a count filed in model\n```\nsample_router.coffee\n``` ruby\nclass Sample.Routers.SampleRouter extends Backbone.Router\n  routes:\n    \"users/:id/show\" : \"showUser\"\nshowUser: ->\n    user = new Sample.Models.User(gon.user)\n    userView = new Sample.Views.User(model: user)\n    $(\"body\").html(userView.render().el)\n```\nWarning\nRabl allows you to exclude the root by setting. \n``` ruby\nconfig.include_json_root = false\nconfig.include_child_root = false\n```\nHere I just disabled the child root because if you disabled the json root, everything you put to Gon will be like\ngon.username = \"john doe\"; gon.gender = \"male\"...\ninstead of\ngon.user = { username: \"john doe\", gender: \"male\" }\n. I really enjoyed this combination and hope this can be helpful.\n. What now I am doing is like this\ngon.myVar = user.to_json(:root =>false)\nand in js side\nmyVar = JSON.parse(gon.myVar)\nI can stand with this but it's great if gon can support this kind of feature.\n. Perfectly solved this by adopting rabl. Sorry for my ignorance.\n. ",
    "dznz": "Cheers! I'm surprised there isn't an elegant way to do soft-failing requires in Ruby.\n. A chatty error is probably a good idea, it's a cheap way of providing JIT documentation!\n. Looks like this is a known difficulty, so perhaps a descriptive error is the quickest, easiest way of handling it.\n. Thanks! Sorry I couldn't submit a patch for it, wasn't quite sure what else Gon was doing, and how to ensure the context was setup correctly.\n. @gazay thanks heaps for the partial (hurr) fix, in any case!\n. I'm looking at 7c05c6efdefc41932ef1bfbba57bf221be1c948a and I don't want to be nit-picky, but should Gon be parsing the partials at all? Seems to me like Gon should set up the environment and then delegate directly to jbuilder and let it do all the partial resolving.\nOtherwise you are basically going to be stuck re-implementing jbuilder's code, with bugs turning up every time Gon's approach differs from jbuilder's approach. I reckon @mroseboom's issue might be solved in this approach.\nI recognise that \"set up the environment\" is pretty hand-wavey, and ultimately there might be a good reason not to do it this way, but I'd be interested to know your thoughts.\n. An example: I'd like to do this in a controller:\n@widgets = current_user.widgets\ngon.jbuilder template: \"app/views/widgets/index.json.jbuilder\", as: \"widgets\"\nWhere widgets/index.json.jbuilder looks like:\njson.array!(@widgets) do |json, widget|\n  json.partial! \"widgets/widget\", widget: widget\nend\nand widgets/_widget.json.jbuilder looks like this:\njson.(widget, :id, :name, :label)\nBut when I try it, I get: undefined local variable or method 'workout' for Gon::Jbuilder:Module.\nI'm pretty sure this is a parsing bug, but I'd rather see Gon lean on jbuilder for parsing than have it patched in Gon, if you take my meaning.\nNot sure if this helps!\n. Cheers! I'm surprised there isn't an elegant way to do soft-failing requires in Ruby.\n. A chatty error is probably a good idea, it's a cheap way of providing JIT documentation!\n. Looks like this is a known difficulty, so perhaps a descriptive error is the quickest, easiest way of handling it.\n. Thanks! Sorry I couldn't submit a patch for it, wasn't quite sure what else Gon was doing, and how to ensure the context was setup correctly.\n. @gazay thanks heaps for the partial (hurr) fix, in any case!\n. I'm looking at 7c05c6efdefc41932ef1bfbba57bf221be1c948a and I don't want to be nit-picky, but should Gon be parsing the partials at all? Seems to me like Gon should set up the environment and then delegate directly to jbuilder and let it do all the partial resolving.\nOtherwise you are basically going to be stuck re-implementing jbuilder's code, with bugs turning up every time Gon's approach differs from jbuilder's approach. I reckon @mroseboom's issue might be solved in this approach.\nI recognise that \"set up the environment\" is pretty hand-wavey, and ultimately there might be a good reason not to do it this way, but I'd be interested to know your thoughts.\n. An example: I'd like to do this in a controller:\n@widgets = current_user.widgets\ngon.jbuilder template: \"app/views/widgets/index.json.jbuilder\", as: \"widgets\"\nWhere widgets/index.json.jbuilder looks like:\njson.array!(@widgets) do |json, widget|\n  json.partial! \"widgets/widget\", widget: widget\nend\nand widgets/_widget.json.jbuilder looks like this:\njson.(widget, :id, :name, :label)\nBut when I try it, I get: undefined local variable or method 'workout' for Gon::Jbuilder:Module.\nI'm pretty sure this is a parsing bug, but I'd rather see Gon lean on jbuilder for parsing than have it patched in Gon, if you take my meaning.\nNot sure if this helps!\n. ",
    "boom": "This is still not fully fixed. Partials only works with jbuilder syntax that specify directory and passed variable:\njson.comments @comments do |json, comment|\n  json.partial! 'comments/comment', :comment => comment\nend\nBut will not work with alternative short hand syntax for jbuilder that uses default folder structure and file naming (assuming same files and folders as specified above):\njson.comments @comments do |json, comment|\n  json.partial! comment\nend\n. This is still not fully fixed. Partials only works with jbuilder syntax that specify directory and passed variable:\njson.comments @comments do |json, comment|\n  json.partial! 'comments/comment', :comment => comment\nend\nBut will not work with alternative short hand syntax for jbuilder that uses default folder structure and file naming (assuming same files and folders as specified above):\njson.comments @comments do |json, comment|\n  json.partial! comment\nend\n. ",
    "elsurudo": "Having the same issue over here, so this was never fixed? @gazay is there any particular reason that gon does its own parsing of the partials? It seems to me that that should be left to the jbuilder (or rabl, etc.) gem itself...\n. Nope, I was trying it without the as: option originally. Same error.\nOn 2013-08-07, at 1:09 AM, TJ Moretto notifications@github.com wrote:\n\nMy guess is that this is related to the as: option. Can you try without that?\n\u2014\nReply to this email directly or view it on GitHub.\n. 4.1.1 here. I should probably mention that I am on Rails 4.0.0\n\nIt's possible that it may be causing as issue.\n. Upon closer inspection, my issue seems to be that my template has a partial, which isn't being found. For whatever reason, gon kind of parses the jbuilder file itself, looking for partials. But it expects the partial paths to be of a different format than the usual.\n. Having the same issue over here, so this was never fixed? @gazay is there any particular reason that gon does its own parsing of the partials? It seems to me that that should be left to the jbuilder (or rabl, etc.) gem itself...\n. Nope, I was trying it without the as: option originally. Same error.\nOn 2013-08-07, at 1:09 AM, TJ Moretto notifications@github.com wrote:\n\nMy guess is that this is related to the as: option. Can you try without that?\n\u2014\nReply to this email directly or view it on GitHub.\n. 4.1.1 here. I should probably mention that I am on Rails 4.0.0\n\nIt's possible that it may be causing as issue.\n. Upon closer inspection, my issue seems to be that my template has a partial, which isn't being found. For whatever reason, gon kind of parses the jbuilder file itself, looking for partials. But it expects the partial paths to be of a different format than the usual.\n. ",
    "ggrillone": "In my Gemfile, I just added the gem at the top.  I added the 'include_gon' tag at the top of the  tag in my application.html.erb file.  I followed along with the Ryan Bates rails cast on this gem, so I believe it's setup correctly, especially since it works in development environment.\nHere is the full error message from the log file:\n``` ruby\nStarted GET \"/\" for IP.ADDRESS at 2012-07-27 19:34:22 +0000\nProcessing by AnalysisController#index as HTML\nCompleted 500 Internal Server Error in 1704ms\nNameError (undefined local variable or method gon' for #<AnalysisController:0x00000002c3b598>):\n  app/controllers/analysis_controller.rb:8:inindex'\n```\nHere is the index action from the AnalysisController:\nruby\ndef index\n    if params[:start_date] && params[:end_date]\n        gon.data = Dpoint.average_power_by_group(params[:start_date],params[:end_date])\n    else\n        gon.data = Dpoint.average_power_by_group\n    end\n  end\n. I double-checked the log, and now it is also outputting this error:\nNameError (undefined local variable or method `include_gon'\nI tried following the fix for the issue here (https://github.com/gazay/gon/issues/5), but that didn't work.\nOh and by the way, I'm using Ruby 1.9.3-p125 and Rails 3.2.1.  I got it working on my production server on my localhost, but when i try to deploy to rackspace, I get the above errors.\n. it's ok thanks for the response, as soon I figure it out, I'll post my solution here\n. You were right! It was a problem with the production server configuration. This was my first time deploying to rackspace so I probably maybe some noob mistake. Now everything works correctly! Great gem by the way, extremely useful.  Oh and fyi, for others reading this, if you are using rails 3, don't use the solution from (https://github.com/gazay/gon/issues/5), it just causes another error (after re-reading that issue, realized that fix was just for rails 2).\n. In my Gemfile, I just added the gem at the top.  I added the 'include_gon' tag at the top of the  tag in my application.html.erb file.  I followed along with the Ryan Bates rails cast on this gem, so I believe it's setup correctly, especially since it works in development environment.\nHere is the full error message from the log file:\n``` ruby\nStarted GET \"/\" for IP.ADDRESS at 2012-07-27 19:34:22 +0000\nProcessing by AnalysisController#index as HTML\nCompleted 500 Internal Server Error in 1704ms\nNameError (undefined local variable or method gon' for #<AnalysisController:0x00000002c3b598>):\n  app/controllers/analysis_controller.rb:8:inindex'\n```\nHere is the index action from the AnalysisController:\nruby\ndef index\n    if params[:start_date] && params[:end_date]\n        gon.data = Dpoint.average_power_by_group(params[:start_date],params[:end_date])\n    else\n        gon.data = Dpoint.average_power_by_group\n    end\n  end\n. I double-checked the log, and now it is also outputting this error:\nNameError (undefined local variable or method `include_gon'\nI tried following the fix for the issue here (https://github.com/gazay/gon/issues/5), but that didn't work.\nOh and by the way, I'm using Ruby 1.9.3-p125 and Rails 3.2.1.  I got it working on my production server on my localhost, but when i try to deploy to rackspace, I get the above errors.\n. it's ok thanks for the response, as soon I figure it out, I'll post my solution here\n. You were right! It was a problem with the production server configuration. This was my first time deploying to rackspace so I probably maybe some noob mistake. Now everything works correctly! Great gem by the way, extremely useful.  Oh and fyi, for others reading this, if you are using rails 3, don't use the solution from (https://github.com/gazay/gon/issues/5), it just causes another error (after re-reading that issue, realized that fix was just for rails 2).\n. ",
    "loucal": "I spent a while trying to figure this out myself.  I think the key is you need to restart your web server after you setup gon.\n. I spent a while trying to figure this out myself.  I think the key is you need to restart your web server after you setup gon.\n. ",
    "brain64bit": "Same problem with me, i'm using Rails 3.2.13, ruby 1.9.3-p429 and puma in development. When i put include_gon before csrf_meta_tags, gon was undefined. But i change include_gon after csrf_meta_tags and the problem was solve.\n. Same problem with me, i'm using Rails 3.2.13, ruby 1.9.3-p429 and puma in development. When i put include_gon before csrf_meta_tags, gon was undefined. But i change include_gon after csrf_meta_tags and the problem was solve.\n. ",
    "endzyme": "+1 restarting rails server solved it\n. +1 restarting rails server solved it\n. ",
    "sebastianfast": "Incase somebody is using some kind of plugin and calling the super-method in their action: Moving the gon-declaration infront of the super-method solves the problem.\ndef new\n    gon.my_var = true\n    super\nend\n. Incase somebody is using some kind of plugin and calling the super-method in their action: Moving the gon-declaration infront of the super-method solves the problem.\ndef new\n    gon.my_var = true\n    super\nend\n. ",
    "ChazTree": "I am about as beginner as they come and I had this exact problem.\nFixed it by going into routes.rb where I had \"root \"demo#{index}\"\"\nSublime automatically added the brackets around index and it worked for a while.  After it stopped working I played around a bit and deleting the brackets made the server work fine again.\n. I am about as beginner as they come and I had this exact problem.\nFixed it by going into routes.rb where I had \"root \"demo#{index}\"\"\nSublime automatically added the brackets around index and it worked for a while.  After it stopped working I played around a bit and deleting the brackets made the server work fine again.\n. ",
    "honeyl3oom": "I had this problem. (server : nginx + unicorn)\nMy solution \n- /etc/init.d/unicorn_xx stop\n- sudo service nginx stop\n- sudo service nginx start\n- /etc/init.d/unicorn_xx start\n. I had this problem. (server : nginx + unicorn)\nMy solution \n- /etc/init.d/unicorn_xx stop\n- sudo service nginx stop\n- sudo service nginx start\n- /etc/init.d/unicorn_xx start\n. ",
    "Evanto": "I'm also having this error locally in development. Restarting the server doesn't help. The gon gem behaves strangely: if I install it via gem install gon + bundle install, the console says it was installed, but if I check the Gemfile, there is no gon there. When I install it via adding to the Gemfile, the console signals ok but gon is absent in the gemfile.lock and throws the NameError as well.    . I'm also having this error locally in development. Restarting the server doesn't help. The gon gem behaves strangely: if I install it via gem install gon + bundle install, the console says it was installed, but if I check the Gemfile, there is no gon there. When I install it via adding to the Gemfile, the console signals ok but gon is absent in the gemfile.lock and throws the NameError as well.    . ",
    "perkins2099": "I think I am having a similar issue.\nI do a file upload using ajax then call a controller.  I'm updating the gon.variable in the controller then trying to display it on the success action.  It doesn't update.\nIs this a bug or is there a better way to be doing this?\n. I think I am having a similar issue.\nI do a file upload using ajax then call a controller.  I'm updating the gon.variable in the controller then trying to display it on the success action.  It doesn't update.\nIs this a bug or is there a better way to be doing this?\n. ",
    "mnoble01": "I am also unable to get gon.watch to work. Fetching a js script via an ajax request, I am setting my gon variables through gon.watch.var_name = ... in the controller and the gon vars are successfully updated. However, this change is not seen by the javascript. Should I be calling gon.watch('var_name') to update the var in js as well? Using the js method gon.watch and setting an interval has not worked for me either.\n. Thanks, I wasn't clear on that :).\n. I am also unable to get gon.watch to work. Fetching a js script via an ajax request, I am setting my gon variables through gon.watch.var_name = ... in the controller and the gon vars are successfully updated. However, this change is not seen by the javascript. Should I be calling gon.watch('var_name') to update the var in js as well? Using the js method gon.watch and setting an interval has not worked for me either.\n. Thanks, I wasn't clear on that :).\n. ",
    "julioortiz": "Hi, a few of questions.\n- Can I use the gon.variables in another action of controller?\n- In the usage for gon.watch says, we can change from js.coffee or whatever, but would be possible change in several controller actions?\n- This gon.watch it's only for variables?, not for rabl files?\n  Thanks.\n. Hi, a few of questions.\n- Can I use the gon.variables in another action of controller?\n- In the usage for gon.watch says, we can change from js.coffee or whatever, but would be possible change in several controller actions?\n- This gon.watch it's only for variables?, not for rabl files?\n  Thanks.\n. ",
    "ULKARAMAKRISHNAN": "Hi,\nI do gon.variable_name = value in my controller and in my js file I use gon.variable_name. It works fine for full page reloads but for ajax request it doesnt gets updated. \nSay for example on page reload, in my controller I do gon.variable_name = value1 and in my js gon.variable_name gives me value1. After a ajax request in my controller I do gon.variable_name = value2 and in my js I strill see gon.variable_name as value1 only.\nIs there any way I could update gon.variable_name in a ajax request?\nThanks\n. Hi,\nI do gon.variable_name = value in my controller and in my js file I use gon.variable_name. It works fine for full page reloads but for ajax request it doesnt gets updated. \nSay for example on page reload, in my controller I do gon.variable_name = value1 and in my js gon.variable_name gives me value1. After a ajax request in my controller I do gon.variable_name = value2 and in my js I strill see gon.variable_name as value1 only.\nIs there any way I could update gon.variable_name in a ajax request?\nThanks\n. ",
    "travisbot": "This pull request passes (merged e8783a92 into 3f4d521c).\n. This pull request passes (merged e8783a92 into 3f4d521c).\n. This pull request passes (merged e8783a92 into 3f4d521c).\n. This pull request passes (merged e8783a92 into 3f4d521c).\n. ",
    "johnbintz": "Theoretically: there's support for render :json in Rails 2.3, but I can't get the url generation of gon.watch to work with a Rails 2.3 app. The callback URL is not being inserted correctly because ORIGINAL_FULLPATH doesn't seem to exist in the request headers in a Rails 2.3.14 app. Additionally, ActionController::Base#render seems to be protected rather than public, so the render would fail anyway. I had to do this to get gon to work:\n``` ruby\nclass CatController < ApplicationController\n  public :render\ndef hi\n    gon\nGon::Request.env['ORIGINAL_FULLPATH'] = Gon::Request.env['REQUEST_URI']\n\ngon.watch.cat = { :dog => :hiss }\n\nend\nend\n``\n. Theoretically: there's support forrender :jsonin Rails 2.3, but I can't get the url generation of gon.watch to work with a Rails 2.3 app. The callback URL is not being inserted correctly becauseORIGINAL_FULLPATHdoesn't seem to exist in the request headers in a Rails 2.3.14 app. Additionally,ActionController::Base#render` seems to be protected rather than public, so the render would fail anyway. I had to do this to get gon to work:\n``` ruby\nclass CatController < ApplicationController\n  public :render\ndef hi\n    gon\nGon::Request.env['ORIGINAL_FULLPATH'] = Gon::Request.env['REQUEST_URI']\n\ngon.watch.cat = { :dog => :hiss }\n\nend\nend\n```\n. ",
    "ScotterC": "Wow.  I was way over thinking this.\nA simple request to a method that updates the gon objects with proper callbacks suffice.  Gon watch isn't even needed for what I was doing.\n. Wow.  I was way over thinking this.\nA simple request to a method that updates the gon objects with proper callbacks suffice.  Gon watch isn't even needed for what I was doing.\n. ",
    "phoet": "will have a look\n. :speedboat: nice!\n. will have a look\n. :speedboat: nice!\n. ",
    "paulkoegel": "actually an error slipped in there. under 3. it says to use json for Rails 3.2.\ni've corrected it and improved the wording at the start of 2.\nunfortunately there are no pull requests for wikis =(\nbest run this through a diff: https://github.com/paulwittmann/gon/wiki/Usage-with-RABL\n. awesome! thanks a lot, especially for the exceptional swiftness. i'll try it out later today.\n. actually an error slipped in there. under 3. it says to use json for Rails 3.2.\ni've corrected it and improved the wording at the start of 2.\nunfortunately there are no pull requests for wikis =(\nbest run this through a diff: https://github.com/paulwittmann/gon/wiki/Usage-with-RABL\n. awesome! thanks a lot, especially for the exceptional swiftness. i'll try it out later today.\n. ",
    "dsjoerg": "Thank you!\n. Thank you!\n. ",
    "marcamillion": "bump\n. bump\n. ",
    "frootloops": "But, it not very secure.\n. Okay. I'll do it.\n. All right?\n. But, it not very secure.\n. Okay. I'll do it.\n. All right?\n. ",
    "alrick": "Thanks for your answer!\nDid you find something?\n. Yay works perfectly.\nThank you and nice job for your gem ;)\n. Thanks for your answer!\nDid you find something?\n. Yay works perfectly.\nThank you and nice job for your gem ;)\n. ",
    "wari": "top -b -n 1 should work.\nOn my side though, no matter what I use, ps, top, df, I don't get output with the top example. Heck, even if I use gon.watch.top = \"Some String\" does not work. I could only get it to work if I set gon.watch.top = Time.now in the controller. In the source, I do see `gon.top=\"  PID TTY TIME CMD\\n 8<..snipped..8<\", but nothing is seen in the html.\n. Thanks @fermuch btw, @gazay I wanted to re-report this issue (as promised in rdrc), but hey, had a long holiday in Bali, and the internet is bad there. ;)\nStill does not explain why Time.now works without converting to JSON\n. top -b -n 1 should work.\nOn my side though, no matter what I use, ps, top, df, I don't get output with the top example. Heck, even if I use gon.watch.top = \"Some String\" does not work. I could only get it to work if I set gon.watch.top = Time.now in the controller. In the source, I do see `gon.top=\"  PID TTY TIME CMD\\n 8<..snipped..8<\", but nothing is seen in the html.\n. Thanks @fermuch btw, @gazay I wanted to re-report this issue (as promised in rdrc), but hey, had a long holiday in Bali, and the internet is bad there. ;)\nStill does not explain why Time.now works without converting to JSON\n. ",
    "fermuch": "@wari I solved the same problem using to_json. For example:\nruby\ngon.watch.top = `top -b -n 1`.to_json\n. There are some problems while using watch. Maybe the best to do is to call a to_json on every object, and then use base64 to pass the variable, so we avoid unexpected calls. So, the client has to first transform base64 into JSON, and then parse the JSON.\nWhat do you think about this?\n. I cannot replicate your error. You can try by encoding to base64 and decoding in your function before using the data.\n. Great! :grinning:\n. @wari I solved the same problem using to_json. For example:\nruby\ngon.watch.top = `top -b -n 1`.to_json\n. There are some problems while using watch. Maybe the best to do is to call a to_json on every object, and then use base64 to pass the variable, so we avoid unexpected calls. So, the client has to first transform base64 into JSON, and then parse the JSON.\nWhat do you think about this?\n. I cannot replicate your error. You can try by encoding to base64 and decoding in your function before using the data.\n. Great! :grinning:\n. ",
    "hak8or": "Not sure if this is the right place for this, but I am also seeing the issue that gon.watch does not seem to work when passing in a string.\nFor example, gon.watch.var1 = \"foo\" does not work, but putting the string in an array like gon.watch.var1 = [\"foo\"] does work.\n. Not sure if this is the right place for this, but I am also seeing the issue that gon.watch does not seem to work when passing in a string.\nFor example, gon.watch.var1 = \"foo\" does not work, but putting the string in an array like gon.watch.var1 = [\"foo\"] does work.\n. ",
    "tonydm": "I'm looking at a push solution and this seemed like the lightweight solution to fit my needs.  So I tried the gon.watch.top example.  Like to the others I ran into the issue with ubuntu 12x.  Solved with suggestions posted.  However, if I use the controller variable top (gon.watch.top), gon.watch.top or gon.all_variables returns nil (logged debug).  If I change it to something else as in btop voila, values.  The next issue is the data will not update the dom element.  I get a continuous reload of the top.html.erb view but no data.  It's a copy paste example and hard to screw up.  The only change I made to example source was \"top\" to \"btop\".  A view source shows the data getting picked up by gon.watch.btop but never makes it to the DOM.  What might I be missing here?\nTIA!\n```\n<!DOCTYPE html>\n\n\nTestgon\n",
    "k41n": "Thanks for interest in fixing that. Sorry, but heroku does not store logs. All I have - report from exceptional.io:\nDoctorsController# (NoMethodError) \"undefined method `[]=' for nil:NilClass\"\n/app/vendor/bundle/ruby/1.9.1/gems/gon-4.0.2/lib/gon.rb:44:in set_variable'\n/app/vendor/bundle/ruby/1.9.1/gems/gon-4.0.2/lib/gon.rb:33:inmethod_missing'\n/app/app/controllers/doctors_controller.rb:14:in block in <class:DoctorsController>'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:528:in_run__103087527521876907__process_action__4414508448668592008__callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in __run_callback'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in_run_process_action_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in run_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/callbacks.rb:17:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/rescue.rb:29:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/instrumentation.rb:30:inblock in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications.rb:123:in block in instrument'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications.rb:123:in instrument'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/instrumentation.rb:29:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/params_wrapper.rb:207:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/railties/controller_runtime.rb:18:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/rails3/action_controller.rb:34:in block in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:268:inblock in perform_action_with_newrelic_trace'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/method_tracer.rb:242:in trace_execution_scoped'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:263:inperform_action_with_newrelic_trace'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/rails3/action_controller.rb:33:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/base.rb:121:inprocess'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/rendering.rb:45:in process'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal.rb:203:indispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/rack_delegation.rb:14:in dispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal.rb:246:inblock in action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:73:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:73:indispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:36:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/mapper.rb:42:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:68:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:56:ineach'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:56:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:601:incall'\n/app/vendor/bundle/ruby/1.9.1/bundler/gems/apipie-rails-9f289e3ac34f/lib/apipie/static_dispatcher.rb:57:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/rack/error_collector.rb:8:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:35:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:34:incatch'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:34:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/best_standards_support.rb:17:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/etag.rb:23:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/conditionalget.rb:25:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/head.rb:14:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/params_parser.rb:21:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/flash.rb:242:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/session/abstract/id.rb:210:incontext'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/session/abstract/id.rb:205:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/cookies.rb:341:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/query_cache.rb:64:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/connection_adapters/abstract/connection_pool.rb:479:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/callbacks.rb:28:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in_run__857465230438848234__call__614496269468856947__callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in __run_callback'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in_run_call_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in run_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/callbacks.rb:27:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/remote_ip.rb:31:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/debug_exceptions.rb:16:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/show_exceptions.rb:56:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:32:incall_app'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:16:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/tagged_logging.rb:22:intagged'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:16:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/request_id.rb:22:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/methodoverride.rb:21:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/runtime.rb:17:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/cache/strategy/local_cache.rb:72:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/lock.rb:15:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/static.rb:62:in call'\n/app/lib/fancy_url_proxy.rb:29:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:136:in forward'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:245:infetch'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:185:in lookup'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:66:incall!'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:51:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/engine.rb:479:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/application.rb:223:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/railtie/configurable.rb:30:inmethod_missing'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-canonical-host-0.0.8/lib/rack/canonical_host.rb:18:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:552:inprocess_client'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:628:in worker_loop'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/unicorn_instrumentation.rb:18:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/unicorn_instrumentation.rb:18:in block (4 levels) in <top (required)>'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:500:inspawn_missing_workers'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:142:in start'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/bin/unicorn_rails:209:in'\n/app/vendor/bundle/ruby/1.9.1/bin/unicorn_rails:19:in load'\n/app/vendor/bundle/ruby/1.9.1/bin/unicorn_rails:19:in'\nundefined method `[]=' for nil:NilClass\nTime\n28 Jan at 02:36AM\nURL\nGET https://www.doctorpage.sg/doctor/dr-lingam-gopal\nParams\n{ \"tid\" : \"H5t7jxDsRHCMZcQ6AKfwaz2dgyc6x5psCtshoLpMggYr\", \"utm\" : \"none.organic.none.none.none.none.www_doctorpage_sg_south-west_eye-doctors_dr-lingam-gopal\", \"access_token\" : \"#\", \"api\" : \"2\", \"user_id\" : \"2011\", \"name\" : \"Benjamin Yang\", }\nReferer\nhttps://www.doctorpage.sg/south-west/eye-doctors/dr-lingam-gopal\nUser Agent\nMozilla/5.0 (Windows NT 5.1; rv:16.0) Gecko/20100101 Firefox/16.0\nIP address\n119.74.138.179\nSession\n{ \"session_id\" : \"af4aa55b7c871dcb3c2cabe9542dd505\", \"data\" : { \"session_id\" : \"af4aa55b7c871dcb3c2cabe9542dd505\", \"csrf_token\" : \"JO8Vzq9C50yCYI5PA/FipHdRTI5gxXEf3H1u75qrrY8=\", } }\nHTTP headers\nVersion\nHTTP/1.1\nX-Forwarded-Proto\nhttps\nX-Forwarded-Port\n443\nX-Forwarded-For\n119.74.138.179\nUser-Agent\nMozilla/5.0 (Windows NT 5.1; rv:16.0) Gecko/20100101 Firefox/16.0\nReferer\nhttps://www.doctorpage.sg/south-west/eye-doctors/dr-lingam-gopal\nHost\nwww.doctorpage.sg\nCookie\ntid=BAhJIjFINXQ3anhEc1JIQ01aY1E2QUtmd2F6MmRneWM2eDVwc0N0c2hvTHBNZ2dZcgY6BkVG--2254e6eb1d13b117ac69c2820155c6251cc3f9cc; utm=BAhJIl5ub25lLm9yZ2FuaWMubm9uZS5ub25lLm5vbmUubm9uZS53d3dfZG9jdG9ycGFnZV9zZ19zb3V0aC13ZXN0X2V5ZS1kb2N0b3JzX2RyLWxpbmdhbS1nb3BhbAY6BkVU--a5eaad69b36f5c73c2ddce6fb6b96182ba13130a; newspaper_cookie=2013-01-28+09%3A43%3A05+%2B0800; _dp_session=[FILTERED] __utma=63465786.545346777.1359337377.1359339197.1359340590.3; __utmc=63465786; __utmz=63465786.1359340590.3.3.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=nuh%20ligam%20gopal; WRUID=0; __utmb=63465786.1.10.1359340590\nConnection\nkeep-alive\nAccept-Language\nen-US,en;q=0.5\nAccept-Encoding\ngzip, deflate\nAccept\ntext/html,application/xhtml+xml,application/xml;q=0.9,/_;q=0.8\nX-Heroku-Queue-Wait-Time\n0\nX-Heroku-Queue-Depth\n0\nX-Heroku-Dynos-In-Use\n1\nX-Request-Start\n1359340619194\n. I investigated a bit but didn't figured out how can this happen. Fragment of code where problem occurs:\ngon.doctor_name = @doctor.name\ngon.doctor_speciality = @doctor.speciality.name\nThat is located in before_filter.\n. Thanks for interest in fixing that. Sorry, but heroku does not store logs. All I have - report from exceptional.io:\nDoctorsController# (NoMethodError) \"undefined method `[]=' for nil:NilClass\"\n/app/vendor/bundle/ruby/1.9.1/gems/gon-4.0.2/lib/gon.rb:44:in set_variable'\n/app/vendor/bundle/ruby/1.9.1/gems/gon-4.0.2/lib/gon.rb:33:inmethod_missing'\n/app/app/controllers/doctors_controller.rb:14:in block in <class:DoctorsController>'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:528:in_run__103087527521876907__process_action__4414508448668592008__callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in __run_callback'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in_run_process_action_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in run_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/callbacks.rb:17:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/rescue.rb:29:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/instrumentation.rb:30:inblock in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications.rb:123:in block in instrument'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/notifications.rb:123:in instrument'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/instrumentation.rb:29:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/params_wrapper.rb:207:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/railties/controller_runtime.rb:18:inprocess_action'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/rails3/action_controller.rb:34:in block in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:268:inblock in perform_action_with_newrelic_trace'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/method_tracer.rb:242:in trace_execution_scoped'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/controller_instrumentation.rb:263:inperform_action_with_newrelic_trace'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/rails3/action_controller.rb:33:in process_action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/base.rb:121:inprocess'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/abstract_controller/rendering.rb:45:in process'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal.rb:203:indispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal/rack_delegation.rb:14:in dispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_controller/metal.rb:246:inblock in action'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:73:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:73:indispatch'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:36:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/mapper.rb:42:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:68:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:56:ineach'\n/app/vendor/bundle/ruby/1.9.1/gems/journey-1.0.4/lib/journey/router.rb:56:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/routing/route_set.rb:601:incall'\n/app/vendor/bundle/ruby/1.9.1/bundler/gems/apipie-rails-9f289e3ac34f/lib/apipie/static_dispatcher.rb:57:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/rack/error_collector.rb:8:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:35:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:34:incatch'\n/app/vendor/bundle/ruby/1.9.1/gems/warden-1.2.1/lib/warden/manager.rb:34:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/best_standards_support.rb:17:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/etag.rb:23:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/conditionalget.rb:25:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/head.rb:14:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/params_parser.rb:21:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/flash.rb:242:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/session/abstract/id.rb:210:incontext'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/session/abstract/id.rb:205:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/cookies.rb:341:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/query_cache.rb:64:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activerecord-3.2.11/lib/active_record/connection_adapters/abstract/connection_pool.rb:479:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/callbacks.rb:28:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in_run__857465230438848234__call__614496269468856947__callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:405:in __run_callback'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:385:in_run_call_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/callbacks.rb:81:in run_callbacks'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/callbacks.rb:27:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/remote_ip.rb:31:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/debug_exceptions.rb:16:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/show_exceptions.rb:56:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:32:incall_app'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:16:in block in call'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/tagged_logging.rb:22:intagged'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/rack/logger.rb:16:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/request_id.rb:22:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/methodoverride.rb:21:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/runtime.rb:17:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/activesupport-3.2.11/lib/active_support/cache/strategy/local_cache.rb:72:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-1.4.4/lib/rack/lock.rb:15:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/actionpack-3.2.11/lib/action_dispatch/middleware/static.rb:62:in call'\n/app/lib/fancy_url_proxy.rb:29:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:136:in forward'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:245:infetch'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:185:in lookup'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:66:incall!'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-cache-1.2/lib/rack/cache/context.rb:51:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/engine.rb:479:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/application.rb:223:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/railties-3.2.11/lib/rails/railtie/configurable.rb:30:inmethod_missing'\n/app/vendor/bundle/ruby/1.9.1/gems/rack-canonical-host-0.0.8/lib/rack/canonical_host.rb:18:in call'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:552:inprocess_client'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:628:in worker_loop'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/unicorn_instrumentation.rb:18:incall'\n/app/vendor/bundle/ruby/1.9.1/gems/newrelic_rpm-3.5.4.34/lib/new_relic/agent/instrumentation/unicorn_instrumentation.rb:18:in block (4 levels) in <top (required)>'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:500:inspawn_missing_workers'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/lib/unicorn/http_server.rb:142:in start'\n/app/vendor/bundle/ruby/1.9.1/gems/unicorn-4.5.0/bin/unicorn_rails:209:in'\n/app/vendor/bundle/ruby/1.9.1/bin/unicorn_rails:19:in load'\n/app/vendor/bundle/ruby/1.9.1/bin/unicorn_rails:19:in'\nundefined method `[]=' for nil:NilClass\nTime\n28 Jan at 02:36AM\nURL\nGET https://www.doctorpage.sg/doctor/dr-lingam-gopal\nParams\n{ \"tid\" : \"H5t7jxDsRHCMZcQ6AKfwaz2dgyc6x5psCtshoLpMggYr\", \"utm\" : \"none.organic.none.none.none.none.www_doctorpage_sg_south-west_eye-doctors_dr-lingam-gopal\", \"access_token\" : \"#\", \"api\" : \"2\", \"user_id\" : \"2011\", \"name\" : \"Benjamin Yang\", }\nReferer\nhttps://www.doctorpage.sg/south-west/eye-doctors/dr-lingam-gopal\nUser Agent\nMozilla/5.0 (Windows NT 5.1; rv:16.0) Gecko/20100101 Firefox/16.0\nIP address\n119.74.138.179\nSession\n{ \"session_id\" : \"af4aa55b7c871dcb3c2cabe9542dd505\", \"data\" : { \"session_id\" : \"af4aa55b7c871dcb3c2cabe9542dd505\", \"csrf_token\" : \"JO8Vzq9C50yCYI5PA/FipHdRTI5gxXEf3H1u75qrrY8=\", } }\nHTTP headers\nVersion\nHTTP/1.1\nX-Forwarded-Proto\nhttps\nX-Forwarded-Port\n443\nX-Forwarded-For\n119.74.138.179\nUser-Agent\nMozilla/5.0 (Windows NT 5.1; rv:16.0) Gecko/20100101 Firefox/16.0\nReferer\nhttps://www.doctorpage.sg/south-west/eye-doctors/dr-lingam-gopal\nHost\nwww.doctorpage.sg\nCookie\ntid=BAhJIjFINXQ3anhEc1JIQ01aY1E2QUtmd2F6MmRneWM2eDVwc0N0c2hvTHBNZ2dZcgY6BkVG--2254e6eb1d13b117ac69c2820155c6251cc3f9cc; utm=BAhJIl5ub25lLm9yZ2FuaWMubm9uZS5ub25lLm5vbmUubm9uZS53d3dfZG9jdG9ycGFnZV9zZ19zb3V0aC13ZXN0X2V5ZS1kb2N0b3JzX2RyLWxpbmdhbS1nb3BhbAY6BkVU--a5eaad69b36f5c73c2ddce6fb6b96182ba13130a; newspaper_cookie=2013-01-28+09%3A43%3A05+%2B0800; _dp_session=[FILTERED] __utma=63465786.545346777.1359337377.1359339197.1359340590.3; __utmc=63465786; __utmz=63465786.1359340590.3.3.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=nuh%20ligam%20gopal; WRUID=0; __utmb=63465786.1.10.1359340590\nConnection\nkeep-alive\nAccept-Language\nen-US,en;q=0.5\nAccept-Encoding\ngzip, deflate\nAccept\ntext/html,application/xhtml+xml,application/xml;q=0.9,/_;q=0.8\nX-Heroku-Queue-Wait-Time\n0\nX-Heroku-Queue-Depth\n0\nX-Heroku-Dynos-In-Use\n1\nX-Request-Start\n1359340619194\n. I investigated a bit but didn't figured out how can this happen. Fragment of code where problem occurs:\ngon.doctor_name = @doctor.name\ngon.doctor_speciality = @doctor.speciality.name\nThat is located in before_filter.\n. ",
    "joshtabak": "At twitch.tv, we are getting this exact same problem. It's a low percentage of requests, but consistently happening about 15 times a day. Happens in all of the actions we use gon, it doesn't matter what attribute we are setting.\ngon.panels = @channel.panels.as_json\ngon.pagetype = 'view'\ngems/gon-4.0.1/lib/gon.rb:44:inset_variable'\ngems/gon-4.0.1/lib/gon.rb:33:in method_missing'\nundefined method[]=' for nil:NilClass`\nAny ideas?\n. Gon::Request is not nil, otherwise the error would be undefined method gon.\nSo Request.gon on gon.rb:44 is nil. Either @request_env (in Gon::Request) is nil or @request_env['gon'] is nil (should be {}).\nThis problem is really tough to investigate further because there is no pattern and no way to reproduce it, and there doesn't seem to be any code path that should get us into this state. At first, I thought this could be caused by request.env somehow being nil, but that can't be it because we'd get an error in the env= method when instantiating @request_env['gon'] ||= {}. Is there anyway to call 'gon' in the controller that gets a reference to Gon without checking wrong_gon_request? I can't find any. Is there anyway @request_env is getting changed after it has been set?\n. Yeah those questions were semi-rhetorical... I can't think of any reason this is happening. Do you have ideas?\n. At twitch.tv, we are getting this exact same problem. It's a low percentage of requests, but consistently happening about 15 times a day. Happens in all of the actions we use gon, it doesn't matter what attribute we are setting.\ngon.panels = @channel.panels.as_json\ngon.pagetype = 'view'\ngems/gon-4.0.1/lib/gon.rb:44:inset_variable'\ngems/gon-4.0.1/lib/gon.rb:33:in method_missing'\nundefined method[]=' for nil:NilClass`\nAny ideas?\n. Gon::Request is not nil, otherwise the error would be undefined method gon.\nSo Request.gon on gon.rb:44 is nil. Either @request_env (in Gon::Request) is nil or @request_env['gon'] is nil (should be {}).\nThis problem is really tough to investigate further because there is no pattern and no way to reproduce it, and there doesn't seem to be any code path that should get us into this state. At first, I thought this could be caused by request.env somehow being nil, but that can't be it because we'd get an error in the env= method when instantiating @request_env['gon'] ||= {}. Is there anyway to call 'gon' in the controller that gets a reference to Gon without checking wrong_gon_request? I can't find any. Is there anyway @request_env is getting changed after it has been set?\n. Yeah those questions were semi-rhetorical... I can't think of any reason this is happening. Do you have ideas?\n. ",
    "panmondial": "Thank you!\n. Thank you!\n. ",
    "mrded": "Cool, how can I include gon without adding <%= include_gon %> to app/views/layouts/application.html.erb?\n. I just need to transfer some variables to JS inside my gem. And I don't want force users to setup Gon additionally. I looking for way to include it automatically.\n. Cool, how can I include gon without adding <%= include_gon %> to app/views/layouts/application.html.erb?\n. I just need to transfer some variables to JS inside my gem. And I don't want force users to setup Gon additionally. I looking for way to include it automatically.\n. ",
    "fbrusatti": "I have a very annoying warning in my test suite with capybara-webkit which is showing the following warning \nundefined|0|ReferenceError: Can't find variable: gon\nI think if I could include gon in my application.js file this warning should stop of happening, the thing is that I don't realize what to include in application.js file.\nCould somebody help me with this?\n. yes @JeanMertz I did. I just use gon in one case so what I did is to ask first if gon is available, for example\n$(\"#expiration_modal\").modal \"show\" if gon? && gon.expire_account (it's a coffee script file, you can easily convert it to the analogous javascript). Hope this helps.\nBut I think that if you have an intensive use of gon you should try what @gazay is suggesting\n. I have a very annoying warning in my test suite with capybara-webkit which is showing the following warning \nundefined|0|ReferenceError: Can't find variable: gon\nI think if I could include gon in my application.js file this warning should stop of happening, the thing is that I don't realize what to include in application.js file.\nCould somebody help me with this?\n. yes @JeanMertz I did. I just use gon in one case so what I did is to ask first if gon is available, for example\n$(\"#expiration_modal\").modal \"show\" if gon? && gon.expire_account (it's a coffee script file, you can easily convert it to the analogous javascript). Hope this helps.\nBut I think that if you have an intensive use of gon you should try what @gazay is suggesting\n. ",
    "JeanMertz": "I'm having the same issues (errors popping up in Javascript spec suite due to Gon not being set/loaded). @fbrusatti did you ever find a solution to this? Care to share it with me?\n. I'm having the same issues (errors popping up in Javascript spec suite due to Gon not being set/loaded). @fbrusatti did you ever find a solution to this? Care to share it with me?\n. ",
    "steakchaser": "@JeanMertz I replaced the <%= include_gon %> in my application.html.erb with <%= Gon::Base.render_data({}) %> and the error is no longer appearing. \n. @saturday can you give this a try:\n<%= Gon::Base.render_data({}) %>\n. My guess is that this is related to the as: option.  Can you try without that?\n. This works in my app:\n    gon.jbuilder(template: 'app/views/athletes/show.json')\nI'm using gon 4.1.0\n. Could be, I am on 3.2.8\n. Squashed!  Thanks!\n. @JeanMertz I replaced the <%= include_gon %> in my application.html.erb with <%= Gon::Base.render_data({}) %> and the error is no longer appearing. \n. @saturday can you give this a try:\n<%= Gon::Base.render_data({}) %>\n. My guess is that this is related to the as: option.  Can you try without that?\n. This works in my app:\n    gon.jbuilder(template: 'app/views/athletes/show.json')\nI'm using gon 4.1.0\n. Could be, I am on 3.2.8\n. Squashed!  Thanks!\n. ",
    "bindzus": "Seems like helpers are still not available when using jbuilder, but a possible workaround is to pass the view_context to jbuilder via locals.\n. Seems like helpers are still not available when using jbuilder, but a possible workaround is to pass the view_context to jbuilder via locals.\n. ",
    "john-bai": "Yeah, I guess if you merge this one both pulls are accounted for. I thought that by branching this pull request off my first pull request branch (fix_specs) it would only show one commit. Oh well.\nLet me know what you think. I'll be happy to add a commit to update the documentation if you want to merge.\n. Should be good now. Thanks a million for merging. I've been seeing dramatic performance improvements with rabl-rails, so it's great to have it supported in gon.\n. Yeah, I guess if you merge this one both pulls are accounted for. I thought that by branching this pull request off my first pull request branch (fix_specs) it would only show one commit. Oh well.\nLet me know what you think. I'll be happy to add a commit to update the documentation if you want to merge.\n. Should be good now. Thanks a million for merging. I've been seeing dramatic performance improvements with rabl-rails, so it's great to have it supported in gon.\n. ",
    "jaredmoody": "+1, I'm experiencing this as well, using the push syntax gives me an empty gon object in js but the dot syntax works.\n. +1, I'm experiencing this as well, using the push syntax gives me an empty gon object in js but the dot syntax works.\n. ",
    "toothrot": "Great! I'll let you know if any feature ideas come up =)\nAlso, I am concerned about compatibility with rails < 3.2.0 (especially the 2.x.x branches). I might need to rethink my approach if those are compatibility targets.\n. Great! I'll let you know if any feature ideas come up =)\nAlso, I am concerned about compatibility with rails < 3.2.0 (especially the 2.x.x branches). I might need to rethink my approach if those are compatibility targets.\n. ",
    "syoder": "forgot that a pull requests is it's own \"issue\", so we don't need this additional one.\n. Thanks!  I can't blame you for not caring about Ruby 1.8.7 - normally I wouldn't care either, but I have taken over a project that for various reasons is forced to use it.  And in this case the fix was pretty simple.\nThanks again for merging.\n. forgot that a pull requests is it's own \"issue\", so we don't need this additional one.\n. Thanks!  I can't blame you for not caring about Ruby 1.8.7 - normally I wouldn't care either, but I have taken over a project that for various reasons is forced to use it.  And in this case the fix was pretty simple.\nThanks again for merging.\n. ",
    "mugwump": "Yes: I basically want to transport some configuration-options for a query-component(plupload) to a script: Apart from some static variables (like a max_file_size), there are some variables that are infered from the model like: \nfile_data_name: [model_object].flatten.pop.class.name.demodulize.underscore.downcase + \"[#{model_object_method}]\",\nThe helper will then be called with: \nplupload @image_asset, :asset\nand renders the upload-component for the given model/method. The helper should write the generated parameters into the view where the js picks it up. \nI could also write the parameter-code from the controller, but with this approach, the controller doesn't even need to know, that its objects are rendered to be uploadable - therefore, the helper needs to call gon.upload_parameters = ....\n. Yes: I basically want to transport some configuration-options for a query-component(plupload) to a script: Apart from some static variables (like a max_file_size), there are some variables that are infered from the model like: \nfile_data_name: [model_object].flatten.pop.class.name.demodulize.underscore.downcase + \"[#{model_object_method}]\",\nThe helper will then be called with: \nplupload @image_asset, :asset\nand renders the upload-component for the given model/method. The helper should write the generated parameters into the view where the js picks it up. \nI could also write the parameter-code from the controller, but with this approach, the controller doesn't even need to know, that its objects are rendered to be uploadable - therefore, the helper needs to call gon.upload_parameters = ....\n. ",
    "Hebo": "I don't know if gon is unmaintained or what, but this would appear to be a critical XSS vulnerability if you use gon for user-supplied input.\nI'd strongly reconsider using gon if an issue like this remains unaddressed for so long.\n. I don't know if gon is unmaintained or what, but this would appear to be a critical XSS vulnerability if you use gon for user-supplied input.\nI'd strongly reconsider using gon if an issue like this remains unaddressed for so long.\n. ",
    "coderdave": "This is also related to an issue with turbolinks where gon data is wiped out when you navigate to a page that is turbo linked.\nI ultimately had to remove gon and all of its variables and replace it with good ol' fashioned data attributes.\n. This is also related to an issue with turbolinks where gon data is wiped out when you navigate to a page that is turbo linked.\nI ultimately had to remove gon and all of its variables and replace it with good ol' fashioned data attributes.\n. ",
    "bigtunacan": "We use the IIFE pattern to create namespacing within JavaScript and mitigate the global pollution problem.  As part of this we end up needing to pass in variables defined on gon into the invoke call to the function.  To unit test this we need access to gon through the watch.js file.  \nKonacha will automatically detect javascript files that are integrated properly to the asset pipeline so watch.js would be located; however it does not get picked up with the current setup.\nTemporarily I manually added a copy of watch.js directly to my projects vendor/assets/javascripts directory to work around this.  \nIt seems it would be preferable to include into the asset pipeline not only for the issue of unit testing, but also so it can be picked up and minified along with the rest of the javascript files?\n. We use the IIFE pattern to create namespacing within JavaScript and mitigate the global pollution problem.  As part of this we end up needing to pass in variables defined on gon into the invoke call to the function.  To unit test this we need access to gon through the watch.js file.  \nKonacha will automatically detect javascript files that are integrated properly to the asset pipeline so watch.js would be located; however it does not get picked up with the current setup.\nTemporarily I manually added a copy of watch.js directly to my projects vendor/assets/javascripts directory to work around this.  \nIt seems it would be preferable to include into the asset pipeline not only for the issue of unit testing, but also so it can be picked up and minified along with the rest of the javascript files?\n. ",
    "adie": "Got a problem with this, when trying to access params in the template: \"ActionView::Helpers::ControllerHelper#params delegated to controller.params, but controller is nil: #<Rabl::Engine: ...\"\nAs a workaround, I pass view_context as controller to gon, and it works:\nruby\ngon.rabl 'app/views/my_template.rabl', controller: view_context\n. Got a problem with this, when trying to access params in the template: \"ActionView::Helpers::ControllerHelper#params delegated to controller.params, but controller is nil: #<Rabl::Engine: ...\"\nAs a workaround, I pass view_context as controller to gon, and it works:\nruby\ngon.rabl 'app/views/my_template.rabl', controller: view_context\n. ",
    "jackbit": "suggestion, please change done with complate in watch.js, it would be better if user can define callback isolated, like success or error instead done or complete.\n. suggestion, please change done with complate in watch.js, it would be better if user can define callback isolated, like success or error instead done or complete.\n. ",
    "krishnasrihari": "use this helper to use in Rails <%= include_gon(:init => true) %>\nIt solves my problem in Rails 4\n. use this helper to use in Rails <%= include_gon(:init => true) %>\nIt solves my problem in Rails 4\n. ",
    "saturday": "Any progress on this?\n. Both of these create the gon object:\nruby\n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nHowever they end up being empty js objects. \nIf I don't use either of the above the gon object isn't created at all as @krishnasrihari mentioned.\n. Any progress on this?\n. Both of these create the gon object:\nruby\n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nHowever they end up being empty js objects. \nIf I don't use either of the above the gon object isn't created at all as @krishnasrihari mentioned.\n. ",
    "touchdown": "<%= Gon::Base.render_data({}) %>worked for me :)\n. <%= Gon::Base.render_data({}) %>worked for me :)\n. ",
    "SteKearns": "The helper was working for me in my 4.0.0 project but now it isn't... trying to figure out what changed\n. OK... embarrassingly (being new to Ruby on Rails), I have declared my index action after the protected keyword but because my view was still loading, I didn't notice.\nThe gon view helper is working just fine for me in Rails 4\n. The helper was working for me in my 4.0.0 project but now it isn't... trying to figure out what changed\n. OK... embarrassingly (being new to Ruby on Rails), I have declared my index action after the protected keyword but because my view was still loading, I didn't notice.\nThe gon view helper is working just fine for me in Rails 4\n. ",
    "manmartinez": "I think I'm experiencing this very same issue, sometimes I get a gon is not defined error even though the <%= include_gon %> helper is in my layout. I've noticed  that the issue goes away whenever I change some partial rendering in my app, namely when I change  <%= render 'form' %> to <%= render partial: 'form' %> Funny thing is the error only goes away until I shut down the server, whenever I start the server again I have to change that line again, only now I go from <%= render partial: 'form' %> to <%= render 'form' %> (which I thought was the problem) and it fixes things again until I restart the server\nYou can see my app here\nHope it helps! \n. Hey, so I kept working on that app and realize the <%= render partial: 'form' %> had nothing to do with it, it actually  came down to just reloading the page. And so I realized that in my case it had to do with turbolinks, I didn't know that the document.ready event doesn't work with turbolinks and that I had to take into account the events fired by turbolinks. Since I didn't had much time I just removed turbolinks from my app and that solved my issue. \n. I think I'm experiencing this very same issue, sometimes I get a gon is not defined error even though the <%= include_gon %> helper is in my layout. I've noticed  that the issue goes away whenever I change some partial rendering in my app, namely when I change  <%= render 'form' %> to <%= render partial: 'form' %> Funny thing is the error only goes away until I shut down the server, whenever I start the server again I have to change that line again, only now I go from <%= render partial: 'form' %> to <%= render 'form' %> (which I thought was the problem) and it fixes things again until I restart the server\nYou can see my app here\nHope it helps! \n. Hey, so I kept working on that app and realize the <%= render partial: 'form' %> had nothing to do with it, it actually  came down to just reloading the page. And so I realized that in my case it had to do with turbolinks, I didn't know that the document.ready event doesn't work with turbolinks and that I had to take into account the events fired by turbolinks. Since I didn't had much time I just removed turbolinks from my app and that solved my issue. \n. ",
    "sebastialonso": "what @touchdown said work for me!\nI'm on Rails 4, Ruby 2, and without TurboLinks\nI had to pull directly from the repo, though\ngem 'gon', github: 'gazay/gon'\nEDIT: after finally getting the helper to work, gon is just doing random things, sometimes saves, sometimes not. Has someone experienced that?\n. @gazay I will, thanks.\n. what @touchdown said work for me!\nI'm on Rails 4, Ruby 2, and without TurboLinks\nI had to pull directly from the repo, though\ngem 'gon', github: 'gazay/gon'\nEDIT: after finally getting the helper to work, gon is just doing random things, sometimes saves, sometimes not. Has someone experienced that?\n. @gazay I will, thanks.\n. ",
    "kaungst": "@gazay Hey, just wanted to echo that I'm having similar issues with gon, namely that it was undefined. Found that calling \"window.gon.variable_name\" in my javascript was a successful workaround.\nSide note, really great gem, extremely useful, thanks for your help/work!\n. @gazay Hey, just wanted to echo that I'm having similar issues with gon, namely that it was undefined. Found that calling \"window.gon.variable_name\" in my javascript was a successful workaround.\nSide note, really great gem, extremely useful, thanks for your help/work!\n. ",
    "schuberm": "Not sure what the current status of gon is. Using rails 4.1.1 and ruby 2.1 and gon 5.1.2, I'm getting ReferenceError: gon is not defined. I've tried the suggestions in this thread without success:\n<%= include_gon(:init => true) %> throws no implicit conversion of nil into Hash\n<%= Gon::Base.render_data({}) %> throws no implicit conversion of nil into Hash\nwindow.gon.variable_name throws TypeError: window.gon is undefined\n. I never sorted out my problem with gon, realized that websockets was closer to what I needed.\n. Not sure what the current status of gon is. Using rails 4.1.1 and ruby 2.1 and gon 5.1.2, I'm getting ReferenceError: gon is not defined. I've tried the suggestions in this thread without success:\n<%= include_gon(:init => true) %> throws no implicit conversion of nil into Hash\n<%= Gon::Base.render_data({}) %> throws no implicit conversion of nil into Hash\nwindow.gon.variable_name throws TypeError: window.gon is undefined\n. I never sorted out my problem with gon, realized that websockets was closer to what I needed.\n. ",
    "richpeck": "init worked for me\n. +1\n. init worked for me\n. +1\n. ",
    "randomprimate": "Rails 4.1.7, Ruby 2.1.2 and Gon 5.2.3. Same issue getting ReferenceError: Can't find variable: gon. Any help appreciated.\n. Rails 4.1.7, Ruby 2.1.2 and Gon 5.2.3. Same issue getting ReferenceError: Can't find variable: gon. Any help appreciated.\n. ",
    "h8rry": "include_gon(:init => true) didn't completely work for me... What exactly is the problem?\n. include_gon(:init => true) didn't completely work for me... What exactly is the problem?\n. ",
    "marvindanig": "I'm facing this issue on production mode right now. Gon works as expected in development mode but on production I get a SyntaxError.\nRails is outputting the following inside the head tag:\n< script > <![CDATA[window.gon={}...]]> </script>\n. Ok, here's how we fixed it. The problem was that Gon wasn't spitting out properly encoded script tags, so I set :need_tag => false and pasted the following code into the head:\n\n/ Pass Rails Variable to JS\n %script{ :type => 'text/javascript' }\n   = include_gon :watch => true, :init => true, :need_tag => false\n\nWorks as expected now.\n. I'm facing this issue on production mode right now. Gon works as expected in development mode but on production I get a SyntaxError.\nRails is outputting the following inside the head tag:\n< script > <![CDATA[window.gon={}...]]> </script>\n. Ok, here's how we fixed it. The problem was that Gon wasn't spitting out properly encoded script tags, so I set :need_tag => false and pasted the following code into the head:\n\n/ Pass Rails Variable to JS\n %script{ :type => 'text/javascript' }\n   = include_gon :watch => true, :init => true, :need_tag => false\n\nWorks as expected now.\n. ",
    "ChasevanHekken": "What would be the full the code for that?\n<script type=\"text/javascript\"> <%= include_gon :watch => true, :init => true, :need_tag => false %> </script>\n. My gon code is working on local host but not on a digital ocean VPS, any suggestions?\n. What would be the full the code for that?\n<script type=\"text/javascript\"> <%= include_gon :watch => true, :init => true, :need_tag => false %> </script>\n. My gon code is working on local host but not on a digital ocean VPS, any suggestions?\n. ",
    "christian-froh": "I just created a rails 4.2.0 app and gon isnt working :(\n= Gon::Base.render_data({}) \nerror => not opened for reading\n. I just created a rails 4.2.0 app and gon isnt working :(\n= Gon::Base.render_data({}) \nerror => not opened for reading\n. ",
    "noppanit": "I have the same problem as @christianonrails \n. I have the same problem as @christianonrails \n. ",
    "bobbdelsol": "I see the same issue whenever I go to the page from a page without gon, specifically from the Rails_admin page (different engine.)  Using windows.gon.variable solved it.  So the turbolinks gem for waiting on page load must not work in that case.\n. I see the same issue whenever I go to the page from a page without gon, specifically from the Rails_admin page (different engine.)  Using windows.gon.variable solved it.  So the turbolinks gem for waiting on page load must not work in that case.\n. ",
    "Eilie": "Neither = Gon::Base.render_data({}) nor include_gon is working with rails 4.2 on thin.\nuninitialized constant ActionView::CompiledTemplates::Gon\n. Neither = Gon::Base.render_data({}) nor include_gon is working with rails 4.2 on thin.\nuninitialized constant ActionView::CompiledTemplates::Gon\n. ",
    "TheDerek": "Gon is not working on the latest version of rails with or without turbolinks. Please fix.\n. It seemed to have fixed itself when I restarted the rails server. I've\ndecided to use Ajax now instead as it makes my life a lot easier and means\nI actually need to build an API now which I've been putting off for far to\nlong.\nOn Sun, Mar 29, 2015 at 9:55 PM, Alexey Gaziev notifications@github.com\nwrote:\n\n@TheDerek https://github.com/TheDerek can you provide example app that\nreproduces this error please? In my new projects on rails 4.0-4.2 I can't\nreproduce it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-87474582.\n. Gon is not working on the latest version of rails with or without turbolinks. Please fix.\n. It seemed to have fixed itself when I restarted the rails server. I've\ndecided to use Ajax now instead as it makes my life a lot easier and means\nI actually need to build an API now which I've been putting off for far to\nlong.\n\nOn Sun, Mar 29, 2015 at 9:55 PM, Alexey Gaziev notifications@github.com\nwrote:\n\n@TheDerek https://github.com/TheDerek can you provide example app that\nreproduces this error please? In my new projects on rails 4.0-4.2 I can't\nreproduce it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-87474582.\n. \n",
    "dukha": "Using Rails 4.2 and Puma. Tried include_gon and include_gon(:init=> true_ and Base.render_data. The only time gon worked was the first time after installing the gem\n. Using Rails 4.2 and Puma. Tried include_gon and include_gon(:init=> true_ and Base.render_data. The only time gon worked was the first time after installing the gem\n. ",
    "LinKassem": "I am working on a Rails 4 application and I used to have the same error, but adding \n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nin the application.html.erb solved the issue.\n. I am working on a Rails 4 application and I used to have the same error, but adding \n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nin the application.html.erb solved the issue.\n. ",
    "tyronewilson": "I used = include_gon(init: true) and then did and (full OS) server restart and it then worked. I think it could be an environment loading issue.\n. I used = include_gon(init: true) and then did and (full OS) server restart and it then worked. I think it could be an environment loading issue.\n. ",
    "rept": "Just to confirm.  Prior to installing this gem I searched the issues to make sure it would work with turbolinks and rails >=4.  I can confirm it works if you use \n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nMaybe best to include this in the readme because now it says:\n<%= Gon::Base.render_data %>\nand that doesn't work.\nBTW: Thanks for the gem!\n. Just to confirm.  Prior to installing this gem I searched the issues to make sure it would work with turbolinks and rails >=4.  I can confirm it works if you use \n<%= include_gon(:init => true) %>\n<%= Gon::Base.render_data({}) %>\nMaybe best to include this in the readme because now it says:\n<%= Gon::Base.render_data %>\nand that doesn't work.\nBTW: Thanks for the gem!\n. ",
    "jmarceli": "As for gon 5.2.3 it was enough for me to write:\n<%= include_gon(init: true) %>\nOR:\n<%= Gon::Base.render_data({}) %>\nThere was no need for specifying both because they are doing same thing.\nBTW: README update would be nice :)\n. As for gon 5.2.3 it was enough for me to write:\n<%= include_gon(init: true) %>\nOR:\n<%= Gon::Base.render_data({}) %>\nThere was no need for specifying both because they are doing same thing.\nBTW: README update would be nice :)\n. ",
    "dongli": "I also encountered this problem. I have used all the possible lines in the application.html.erb, but the variable is always undefined. Any idea? The version of gon is 6.0.1.\nIn research_records_controller.rb:\nruby\ndef update\n    respond_to do |format|\n      if @research_record.update(research_record_params)\n        if @research_record.tag_draft\n          gon.content = ApplicationHelper.markdown @research_record.content\n          format.js { render action: :preview }\n...\nIn preview.js.erb:\njavascript\nalert(gon.content);\n\n. I also encountered this problem. I have used all the possible lines in the application.html.erb, but the variable is always undefined. Any idea? The version of gon is 6.0.1.\nIn research_records_controller.rb:\nruby\ndef update\n    respond_to do |format|\n      if @research_record.update(research_record_params)\n        if @research_record.tag_draft\n          gon.content = ApplicationHelper.markdown @research_record.content\n          format.js { render action: :preview }\n...\nIn preview.js.erb:\njavascript\nalert(gon.content);\n\n. ",
    "ghost": "I am having the same issue with Rails 4.2.3 ruby 2.1.2. \nI also confirmed this worked and it would be nice if it were on the GitHub landing page info. \n<%= Gon::Base.render_data({}) %>\nStill in the javascript the compiler does not like the gon. prefix as a variable name. Basically it does not work any help would be nice. I am going to try to dig deeper but someone with code experience could find it much faster. Help Thanks for the gem if it worked it would be of great use.\n. Thank You I will give this a try.\nOn Sat, Oct 24, 2015 at 2:50 PM, Philip Yoo notifications@github.com\nwrote:\n\nUsing Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a\nnew object and going back to the index page. My fix was to move <%=\ninclude_gon(init: true) %> from the  to the  and it seems to\nbe working fine now. I don't see any immediate bugs after this change\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-150853794.\n. FYI -\nI am running Rails 4.1.4, I have not upgraded to the latest version, we are\nin a code freeze.\n\nOn Sat, Oct 24, 2015 at 4:24 PM, Wayne Mattingly whoru7777777@gmail.com\nwrote:\n\nThank You I will give this a try.\nOn Sat, Oct 24, 2015 at 2:50 PM, Philip Yoo notifications@github.com\nwrote:\n\nUsing Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a\nnew object and going back to the index page. My fix was to move <%=\ninclude_gon(init: true) %> from the  to the  and it seems to\nbe working fine now. I don't see any immediate bugs after this change\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-150853794.\n. I am having the same issue with Rails 4.2.3 ruby 2.1.2. \n\n\nI also confirmed this worked and it would be nice if it were on the GitHub landing page info. \n<%= Gon::Base.render_data({}) %>\nStill in the javascript the compiler does not like the gon. prefix as a variable name. Basically it does not work any help would be nice. I am going to try to dig deeper but someone with code experience could find it much faster. Help Thanks for the gem if it worked it would be of great use.\n. Thank You I will give this a try.\nOn Sat, Oct 24, 2015 at 2:50 PM, Philip Yoo notifications@github.com\nwrote:\n\nUsing Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a\nnew object and going back to the index page. My fix was to move <%=\ninclude_gon(init: true) %> from the  to the  and it seems to\nbe working fine now. I don't see any immediate bugs after this change\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-150853794.\n. FYI -\nI am running Rails 4.1.4, I have not upgraded to the latest version, we are\nin a code freeze.\n\nOn Sat, Oct 24, 2015 at 4:24 PM, Wayne Mattingly whoru7777777@gmail.com\nwrote:\n\nThank You I will give this a try.\nOn Sat, Oct 24, 2015 at 2:50 PM, Philip Yoo notifications@github.com\nwrote:\n\nUsing Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a\nnew object and going back to the index page. My fix was to move <%=\ninclude_gon(init: true) %> from the  to the  and it seems to\nbe working fine now. I don't see any immediate bugs after this change\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gazay/gon/issues/90#issuecomment-150853794.\n. \n\n",
    "iroller": "Rails 4.2.0, include_gon works just fine here without \"Gon::Base.render_data\"\n. Rails 4.2.0, include_gon works just fine here without \"Gon::Base.render_data\"\n. ",
    "philipyoo": "Using Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a new object and going back to the index page. My fix was to move <%= include_gon(init: true) %> from the <head> to the <body> and it seems to be working fine now. I don't see any immediate bugs after this change\n. Using Rails 4.2.4 w/ Turbolinks, was getting undefined after creating a new object and going back to the index page. My fix was to move <%= include_gon(init: true) %> from the <head> to the <body> and it seems to be working fine now. I don't see any immediate bugs after this change\n. ",
    "jibiel": "I've started using gon (with include_gon helper) in our fresh rails 4.2.4 app with turbolinks a couple of months ago. Never had any problems with it, works as advertised. I guess y'all should try to deduce it to some legacy code or incompatible dependencies.\n. A similar report.\n. I've started using gon (with include_gon helper) in our fresh rails 4.2.4 app with turbolinks a couple of months ago. Never had any problems with it, works as advertised. I guess y'all should try to deduce it to some legacy code or incompatible dependencies.\n. A similar report.\n. ",
    "ptyagi16": "FWIW I can reproduce this problem if you use render stream: true in your controller action.  If you don't use render stream: true it works fine with <%= include_gon %>\n. FWIW I can reproduce this problem if you userender stream: truein your controller action.  If you don't userender stream: trueit works fine with<%= include_gon %>\n. ",
    "gouravtiwari": "Gon fails on render stream: true for me too on Rails 4.2.6, any work around for this one?\n. Linking related issue https://github.com/gazay/gon/issues/90\n. Gon fails on render stream: true for me too on Rails 4.2.6, any work around for this one?\n. Linking related issue https://github.com/gazay/gon/issues/90\n. ",
    "maxschmeling": "You're saying have one option to do it recursively, and another option to do it n levels deep? I think that would be a fairly simple thing to do and could be useful.\n. I do still want it. It will probably be Monday before I get to it, but I will get it done with some tests. Thanks.\n. Awesome. Thanks.\nHow often do you put out a new version?\n. 1. I didn't realize strings were supported for parameters like this. That should be an easy fix.\n2. I didn't make it recurse into arrays. I'm open to making it do that, though. It could just check for Hash or Array instead of just Hash and then go into a different path if it is an array.\n. I should be able to get these fixes in tonight.\n. You're saying have one option to do it recursively, and another option to do it n levels deep? I think that would be a fairly simple thing to do and could be useful.\n. I do still want it. It will probably be Monday before I get to it, but I will get it done with some tests. Thanks.\n. Awesome. Thanks.\nHow often do you put out a new version?\n. 1. I didn't realize strings were supported for parameters like this. That should be an easy fix.\n2. I didn't make it recurse into arrays. I'm open to making it do that, though. It could just check for Hash or Array instead of just Hash and then go into a different path if it is an array.\n. I should be able to get these fixes in tonight.\n. ",
    "mhluska": "Thanks for getting in this pull request. I've tried it out in my app but there are some small issues:\n- If I use include_gon(camel_depth: 'recursive') rather than include_gon(camel_depth: :recursive) I get an error: comparison of Fixnum with String failed. It doesn't seem to accept string values like the other attributes.\n- Are the keys of hashes inside arrays supposed to get camelized? For example in { my_cats: [ { full_name: 'Tardar Sauce' } ] }, full_name won't get camelized because it's in an array.\n. Thanks for getting in this pull request. I've tried it out in my app but there are some small issues:\n- If I use include_gon(camel_depth: 'recursive') rather than include_gon(camel_depth: :recursive) I get an error: comparison of Fixnum with String failed. It doesn't seem to accept string values like the other attributes.\n- Are the keys of hashes inside arrays supposed to get camelized? For example in { my_cats: [ { full_name: 'Tardar Sauce' } ] }, full_name won't get camelized because it's in an array.\n. ",
    "torbjon": "no problem, man\n. no problem, man\n. ",
    "newtriks": "I am having similar issue when assigning a gon variable in my controller index action:\ndef index\n  @jobs = Job.all\n  gon.watch.jobs = @jobs.select { |job| !job.processed }\n  if !params[:_method].present?\n    respond_to do |format|\n      format.html\n      format.json { render json: @jobs }\n    end\n  end\nend\nWithout @asumaran's suggestion f !params[:_method].present? I get the DoubleRenderError?\n. I am having similar issue when assigning a gon variable in my controller index action:\ndef index\n  @jobs = Job.all\n  gon.watch.jobs = @jobs.select { |job| !job.processed }\n  if !params[:_method].present?\n    respond_to do |format|\n      format.html\n      format.json { render json: @jobs }\n    end\n  end\nend\nWithout @asumaran's suggestion f !params[:_method].present? I get the DoubleRenderError?\n. ",
    "Silex": "Same problem here with the following:\nruby\n  def show\n    gon.watch.users_count = User.count\n    respond_with @user\n  end\nBasically, anytime you call render then it tries to render twice when the call comes from js.\n. @gazay: can't this be fixed in a simple manner in gon? e.g before calling render yourself, you check if it was already called... and add the appropriate params to it?\n. Alright, incoming PR.\n. Just curious, when can I expect a version bump including this change?\n. Thanks for the info.\n. Same problem here with the following:\nruby\n  def show\n    gon.watch.users_count = User.count\n    respond_with @user\n  end\nBasically, anytime you call render then it tries to render twice when the call comes from js.\n. @gazay: can't this be fixed in a simple manner in gon? e.g before calling render yourself, you check if it was already called... and add the appropriate params to it?\n. Alright, incoming PR.\n. Just curious, when can I expect a version bump including this change?\n. Thanks for the info.\n. ",
    "diasjorge": "This is great...I've been waiting for this issue for a while but haven't had time to look at it.\nAny chance we might get a new release soon?\nThanks for the hard work\n. This is great...I've been waiting for this issue for a while but haven't had time to look at it.\nAny chance we might get a new release soon?\nThanks for the hard work\n. ",
    "konradreiche": "I do not find this easy to fix. From where should the controller instance come then if it is not available through TestRequest? This problem can always be solved from the caller side by simply requiring to pass the controller object:\nruby\ngon.jbuilder template: 'path/to/template.json.jbuilder', controller: self\nBut otherwise, no clue\u2026\n. I do not find this easy to fix. From where should the controller instance come then if it is not available through TestRequest? This problem can always be solved from the caller side by simply requiring to pass the controller object:\nruby\ngon.jbuilder template: 'path/to/template.json.jbuilder', controller: self\nBut otherwise, no clue\u2026\n. ",
    "cheef": "I have similar issue, may be it has same reason, described here #124 and how to temporary fix\n. I have similar issue, may be it has same reason, described here #124 and how to temporary fix\n. ",
    "alexfalkowski": "We are seeing in JRuby:\nActionView::Template::Error: can't add a new key into hash during iteration\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  40:in `set_variable'\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  78:in `store_builder_data'\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  61:in `rabl'\n. Hmm that is a shame that a patch can't be done.\n. Yep I ended up implementing my own version. \n. We are seeing in JRuby:\nActionView::Template::Error: can't add a new key into hash during iteration\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  40:in `set_variable'\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  78:in `store_builder_data'\n\u2026rent/vendor/bundle/jruby/1.9/gems/gon-4.1.1/lib/gon.rb:  61:in `rabl'\n. Hmm that is a shame that a patch can't be done.\n. Yep I ended up implementing my own version. \n. ",
    "wogg": "This is one of the errors you will see, because 2 different threads are hitting the Gon class level variable. The other is an empty gon output.\nOn further inspection, yes, this gem is absolutely not thread safe. It should not be used in any Ruby / Rails environment that does not complete an entire request in a single process one at at a time. User / request data is getting stored in the Gon class as a class level value. There is really no need for a gem to do this, it should use an instance variable, which is automatically scoped on request from rails, which is threadsafe.\nStrangely the, code does check for the request's object id matching on render and returns nothing, which is better than data from another request, but still wrong.\nReally, all you need to do to replace this gem is:\n1) init a request instance variable as a before_filter in your application_controller\ndef init_json_data\n  @somedata = {} # put your data in this hash\nend\nthen push stuff into it from wherever, just like you do to gon.\n2) mimic the gon render, which is really the useful part\ndef render_json_data(namespace = \"yourdataname\", data = nil)\n    data ||= @somedata\n    if data\n      script = \"window.#{namespace}={};\"\n      data.each do |key, val|\n        js_key = key.to_s\n        script << \"#{namespace}.#{js_key}=#{val.to_json};\"\n      end\n      result = script.gsub(/\\342\\200\\250/u, '\u2028').gsub(/(<\\/)/u, '\\u003C/')\n      script = script.html_safe? ? result.html_safe : result\n      script = content_tag(:script, javascript_cdata_section(script).html_safe, nil)\n    end\n  end\nI may build a gem that mimics gon without this bug, if so I'll link it to this thread. Patching gon is out of the question due to its design being based on class methods entirely.\n. This is one of the errors you will see, because 2 different threads are hitting the Gon class level variable. The other is an empty gon output.\nOn further inspection, yes, this gem is absolutely not thread safe. It should not be used in any Ruby / Rails environment that does not complete an entire request in a single process one at at a time. User / request data is getting stored in the Gon class as a class level value. There is really no need for a gem to do this, it should use an instance variable, which is automatically scoped on request from rails, which is threadsafe.\nStrangely the, code does check for the request's object id matching on render and returns nothing, which is better than data from another request, but still wrong.\nReally, all you need to do to replace this gem is:\n1) init a request instance variable as a before_filter in your application_controller\ndef init_json_data\n  @somedata = {} # put your data in this hash\nend\nthen push stuff into it from wherever, just like you do to gon.\n2) mimic the gon render, which is really the useful part\ndef render_json_data(namespace = \"yourdataname\", data = nil)\n    data ||= @somedata\n    if data\n      script = \"window.#{namespace}={};\"\n      data.each do |key, val|\n        js_key = key.to_s\n        script << \"#{namespace}.#{js_key}=#{val.to_json};\"\n      end\n      result = script.gsub(/\\342\\200\\250/u, '\u2028').gsub(/(<\\/)/u, '\\u003C/')\n      script = script.html_safe? ? result.html_safe : result\n      script = content_tag(:script, javascript_cdata_section(script).html_safe, nil)\n    end\n  end\nI may build a gem that mimics gon without this bug, if so I'll link it to this thread. Patching gon is out of the question due to its design being based on class methods entirely.\n. ",
    "Holek": ":+1: on that issue. This is pretty vital for any app that's using threads (which is a vast majority).\nThis issue makes it impossible to use gon in a production environment.\n. :+1: on that issue. This is pretty vital for any app that's using threads (which is a vast majority).\nThis issue makes it impossible to use gon in a production environment.\n. ",
    "kgx": "@gazay -  your fix appears to be threadsafe based on my initial testing in JRuby 1.7 + Rails 3.2.  However, in Gon::Helpers there are now references to the method \"request.id\", which should probably be \"request.uuid\" to be compatible with ActionDispatch::Request.\n. @gazay, in Rails 3.2.14  I received a NoMethodError on the request.id call.\nundefined method `id' for #<ActionDispatch::Request:0x3925f734>\n. @gazay -  your fix appears to be threadsafe based on my initial testing in JRuby 1.7 + Rails 3.2.  However, in Gon::Helpers there are now references to the method \"request.id\", which should probably be \"request.uuid\" to be compatible with ActionDispatch::Request.\n. @gazay, in Rails 3.2.14  I received a NoMethodError on the request.id call.\nundefined method `id' for #<ActionDispatch::Request:0x3925f734>\n. ",
    "pusewicz": "You could just use https://github.com/steveklabnik/request_store as the store for the data\n. You could just use https://github.com/steveklabnik/request_store as the store for the data\n. ",
    "PericlesTheo": "I just received this error as well ActionView::Template::Errorcan't add a new key into hash during iteration`.\nI'm using Rails 4.2 with Puma, Ruby 2.2 and gon 6.0.1\n. I just received this error as well ActionView::Template::Errorcan't add a new key into hash during iteration`.\nI'm using Rails 4.2 with Puma, Ruby 2.2 and gon 6.0.1\n. ",
    "rubytastic": "camelcase = false solves the problem\n. camelcase = false solves the problem\n. ",
    "socjopata": "Yes, including this in a readme is a great idea :) Many thanks for the tip, @benedictleejh. \n. Yes, including this in a readme is a great idea :) Many thanks for the tip, @benedictleejh. \n. ",
    "seanwash": "+1 \n. +1 \n. ",
    "Gailbear": "This seems to not work well when using the back/forward buttons in a browser. I load gon variables in my controllers, that should only be loaded on certain pages. When I click a link, it clears the variables when i use <%= include_gon(init: true) %>, like it should. However, when I click the browser's back button, the data that was loaded in gon isn't included in turbolinks cache, therefore I lose it. :( \nI'd be interested in seeing gon being saved with the turbolinks cache. (Or even writing it myself, when my schedule isn't quite so packed.)\n. This seems to not work well when using the back/forward buttons in a browser. I load gon variables in my controllers, that should only be loaded on certain pages. When I click a link, it clears the variables when i use <%= include_gon(init: true) %>, like it should. However, when I click the browser's back button, the data that was loaded in gon isn't included in turbolinks cache, therefore I lose it. :( \nI'd be interested in seeing gon being saved with the turbolinks cache. (Or even writing it myself, when my schedule isn't quite so packed.)\n. ",
    "KMontag42": ":+1: needs a fix\n. :+1: needs a fix\n. ",
    "shadowed87": "any news on this? i just noticed i am affected\n. Ok, so this is how I hacky fixed it:\nI wrapped include_gon in a div of id=\"gonvariables\".\nThen I added a function that fires on page:restore (which executes on page back as well). It reads the gon generated javascript and evaluates it, refreshing the js gon variables with the correct ones.\njavascript\nvar gonfix;\ngonfix = function(){\n    eval($(\"#gonvariables > script\").html());\n};\n$(document).on('page:restore', gonfix);\n. any news on this? i just noticed i am affected\n. Ok, so this is how I hacky fixed it:\nI wrapped include_gon in a div of id=\"gonvariables\".\nThen I added a function that fires on page:restore (which executes on page back as well). It reads the gon generated javascript and evaluates it, refreshing the js gon variables with the correct ones.\njavascript\nvar gonfix;\ngonfix = function(){\n    eval($(\"#gonvariables > script\").html());\n};\n$(document).on('page:restore', gonfix);\n. ",
    "kirantpatil": "to work with turbo links I used below code:\nvar gonturbo;\ngonturbo = function(){\n           if ( typeof gon.fstatus != \"undefined\") {\n             var fstatus = gon.fstatus;\n              $('#vacant'+fstatus.fid+fstatus.bid).text(fstatus.vacant);\n              $('#occupied'+fstatus.fid+fstatus.bid).text(fstatus.occupied);\n              $('#reserved'+fstatus.fid+fstatus.bid).text(fstatus.reserved);\n              $('#total'+fstatus.fid+fstatus.bid).text(fstatus.total);\n           }\n};\n$(document).on('page:load', gonturbo);\n. to work with turbo links I used below code:\nvar gonturbo;\ngonturbo = function(){\n           if ( typeof gon.fstatus != \"undefined\") {\n             var fstatus = gon.fstatus;\n              $('#vacant'+fstatus.fid+fstatus.bid).text(fstatus.vacant);\n              $('#occupied'+fstatus.fid+fstatus.bid).text(fstatus.occupied);\n              $('#reserved'+fstatus.fid+fstatus.bid).text(fstatus.reserved);\n              $('#total'+fstatus.fid+fstatus.bid).text(fstatus.total);\n           }\n};\n$(document).on('page:load', gonturbo);\n. ",
    "yhunglee": "It's helpful for me when I need to generate a line chart in body area after a user conducting a act such as clicking a link to a next page for changing content of a page.\n. It's helpful for me when I need to generate a line chart in body area after a user conducting a act such as clicking a link to a next page for changing content of a page.\n. ",
    "aguynamedben": "\ud83d\udc4d  Agree, we noticed this too as one of the last steps of implementing Turbolinks 5. We'll try @shadowed87's work-around.\nI noticed this issue hasn't been touched since Rails 5 was released. Is there isn't a fix to be made for this, it'd be nice to have a the recommended work-around approach for Turoblinks 5 included in the README.\nThanks for your work on this awesome library, we've used gon in a ton of places.\n. \ud83d\udc4d  Agree, we noticed this too as one of the last steps of implementing Turbolinks 5. We'll try @shadowed87's work-around.\nI noticed this issue hasn't been touched since Rails 5 was released. Is there isn't a fix to be made for this, it'd be nice to have a the recommended work-around approach for Turoblinks 5 included in the README.\nThanks for your work on this awesome library, we've used gon in a ton of places.\n. ",
    "benbartling": "Here is what Turbolinks says about using gon: https://github.com/turbolinks/turbolinks/wiki/Using-Gon-and-turbolinks-in-Rails. Here is what Turbolinks says about using gon: https://github.com/turbolinks/turbolinks/wiki/Using-Gon-and-turbolinks-in-Rails. ",
    "hau": "I am seeing a similar problem.  I am using rails 4.0.2 and gon 5.0.0, which I upgraded from rails 3.2.16 and gon 4.1.1.  I set up gon variables with a gon.rabl call in a controller and call the include_gon method in a view.\nIn development environment (rails 4.0.2 and gon 5.0.0), everything actually works fine.  But it broke down when I deployed the code in production.\nFirst I got a ActionView::Template::Error undefined method 'gon' on NilClass in the view, like @Nejuf reported.  A little bit of google search suggested that restarting the server (the ruby web server) would get rid of it.  I restarted the ruby web server, and the problem went away.  It's quite annoying, but at least it addressed that problem.\nHowever, there was another problem after this.  The page I got was a 500 Internal Server Error page, and the log said,\nNoMethodError (undefined method `gsub' for nil:NilClass):\n  app/controllers/pages_controller.rb:12:in `index'\nUnfortunately there was not any stack trace.  A search on the source code showed that there was one occurrence of gusb method, in the Escaper class.  But it looked like it already checked whether the object was nil or not.  I'm not sure if that's the place where this error was raised.\nNeed someone who knows the code better to help.  Please help.\n. Related to #90 ?  I am using turbolink in my application.\nSame problem when I turned off turbolink.  I'm not using heroku, however, but my own ruby web server.  I actually use the same ruby web server (puma) in both development and production environments.\nSame problem when I downgraded gon to 4.1.1.\nI saw this problem when I used ruby 2.0.0 and 2.1.0.  Did not try ruby 1.9.\nSo, the only thing that's common is rails 4.0 running in production environment.\n. I'll copy and paste relevant sections in the action where gon was used in PagesController.\nruby\ndef index\n  @events = Event.all\n  # the next line is line 12 where NoMethodError (undefined method `gsub' for nil:NilClass) happened.\n  gon.rabl \"app/views/events/index.rabl\", as: \"events\", locals: {events: @events}\n  ...\nend\nIn app/views/events/index.rabl, it looked like\ncollection @events\ncache @events\nextends \"events/show\"\nand in app/views/events/show.rabl, it looked like\nobject @event\ncache @event\nattributes :id, :name\n. The issue appears to lie in caching for collections in rabl.  If I comment out the line\nruby\ncache @events\nin app/views/events/index.rabl, then things work fine.\nThe cache command in app/views/events/show.rabl does not have any effect on this problem.\n. I am seeing a similar problem.  I am using rails 4.0.2 and gon 5.0.0, which I upgraded from rails 3.2.16 and gon 4.1.1.  I set up gon variables with a gon.rabl call in a controller and call the include_gon method in a view.\nIn development environment (rails 4.0.2 and gon 5.0.0), everything actually works fine.  But it broke down when I deployed the code in production.\nFirst I got a ActionView::Template::Error undefined method 'gon' on NilClass in the view, like @Nejuf reported.  A little bit of google search suggested that restarting the server (the ruby web server) would get rid of it.  I restarted the ruby web server, and the problem went away.  It's quite annoying, but at least it addressed that problem.\nHowever, there was another problem after this.  The page I got was a 500 Internal Server Error page, and the log said,\nNoMethodError (undefined method `gsub' for nil:NilClass):\n  app/controllers/pages_controller.rb:12:in `index'\nUnfortunately there was not any stack trace.  A search on the source code showed that there was one occurrence of gusb method, in the Escaper class.  But it looked like it already checked whether the object was nil or not.  I'm not sure if that's the place where this error was raised.\nNeed someone who knows the code better to help.  Please help.\n. Related to #90 ?  I am using turbolink in my application.\nSame problem when I turned off turbolink.  I'm not using heroku, however, but my own ruby web server.  I actually use the same ruby web server (puma) in both development and production environments.\nSame problem when I downgraded gon to 4.1.1.\nI saw this problem when I used ruby 2.0.0 and 2.1.0.  Did not try ruby 1.9.\nSo, the only thing that's common is rails 4.0 running in production environment.\n. I'll copy and paste relevant sections in the action where gon was used in PagesController.\nruby\ndef index\n  @events = Event.all\n  # the next line is line 12 where NoMethodError (undefined method `gsub' for nil:NilClass) happened.\n  gon.rabl \"app/views/events/index.rabl\", as: \"events\", locals: {events: @events}\n  ...\nend\nIn app/views/events/index.rabl, it looked like\ncollection @events\ncache @events\nextends \"events/show\"\nand in app/views/events/show.rabl, it looked like\nobject @event\ncache @event\nattributes :id, :name\n. The issue appears to lie in caching for collections in rabl.  If I comment out the line\nruby\ncache @events\nin app/views/events/index.rabl, then things work fine.\nThe cache command in app/views/events/show.rabl does not have any effect on this problem.\n. ",
    "anth0d": "I'm seeing this issue as well, during RSpec execution:\n\nAn error occurred in an after hook\n  ActionView::Template::Error: undefined method gon' for nil:NilClass\n  occurred at /Users/avis/.rvm/gems/ruby-2.0.0-p247@my_project/gems/gon-5.0.0/lib/gon/helpers.rb:27:invariables_for_request_present?'\n\nSo I rolled back to previous version in the project gemfile, and it seems to be working for now:\n\ngem 'gon', '~>4.1.0'\n. I'm seeing this issue as well, during RSpec execution:\nAn error occurred in an after hook\n  ActionView::Template::Error: undefined method gon' for nil:NilClass\n  occurred at /Users/avis/.rvm/gems/ruby-2.0.0-p247@my_project/gems/gon-5.0.0/lib/gon/helpers.rb:27:invariables_for_request_present?'\n\nSo I rolled back to previous version in the project gemfile, and it seems to be working for now:\n\ngem 'gon', '~>4.1.0'\n. \n",
    "Nejuf": "@gazay - Sorry, there was no stack trace, just the one line from Heroku logs.\nActionView::Template::Error: undefined method gon' for nil:NilClass\nI don't get the issue using 4.1.1.\n. @gazay - Sorry, there was no stack trace, just the one line from Heroku logs.\nActionView::Template::Error: undefined method gon' for nil:NilClass\nI don't get the issue using 4.1.1.\n. ",
    "Loremaster": "I had this error few days ago on heroku stage server. This error has appeared after upgrading to gon 5 (previous version didn't have such problem). Today I catched this error in development, this is total wierd: \nNoMethodError - undefined method `gon' for nil:NilClass:\n  gon (5.0.0) lib/gon/helpers.rb:27:in `variables_for_request_present?'\n  gon (5.0.0) lib/gon/helpers.rb:11:in `include_gon'\n  app/views/layouts/application.html.haml:12:in `_app_views_layouts_application_html_haml___4401276420502911050_70287553171360'\n  actionpack (3.2.16) lib/action_view/template.rb:145:in `block in render'\n  activesupport (3.2.16) lib/active_support/notifications.rb:125:in `instrument'\n  actionpack (3.2.16) lib/action_view/template.rb:143:in `render'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:59:in `render_with_layout'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:45:in `render_template'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:18:in `render'\n  actionpack (3.2.16) lib/action_view/renderer/renderer.rb:36:in `render_template'\n  actionpack (3.2.16) lib/action_view/renderer/renderer.rb:17:in `render'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:110:in `_render_template'\n  actionpack (3.2.16) lib/action_controller/metal/streaming.rb:225:in `_render_template'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:103:in `render_to_body'\n  actionpack (3.2.16) lib/action_controller/metal/renderers.rb:28:in `render_to_body'\n  actionpack (3.2.16) lib/action_controller/metal/compatibility.rb:50:in `render_to_body'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:88:in `render'\n  actionpack (3.2.16) lib/action_controller/metal/rendering.rb:16:in `render'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\n  activesupport (3.2.16) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n  /Users/serj/.rvm/rubies/ruby-2.0.0-p353/lib/ruby/2.0.0/benchmark.rb:296:in `realtime'\n  activesupport (3.2.16) lib/active_support/core_ext/benchmark.rb:5:in `ms'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:40:in `block in render'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:83:in `cleanup_view_runtime'\n  activerecord (3.2.16) lib/active_record/railties/controller_runtime.rb:24:in `cleanup_view_runtime'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:39:in `render'\n  remotipart (1.2.1) lib/remotipart/render_overrides.rb:14:in `render_with_remotipart'\n  actionpack (3.2.16) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\n  actionpack (3.2.16) lib/action_controller/metal/implicit_render.rb:5:in `send_action'\n  actionpack (3.2.16) lib/abstract_controller/base.rb:167:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/rendering.rb:10:in `process_action'\n  actionpack (3.2.16) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:557:in `_run__2486025379314473410__process_action__3142451753211220757__callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `__run_callback'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:385:in `_run_process_action_callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:81:in `run_callbacks'\n  actionpack (3.2.16) lib/abstract_controller/callbacks.rb:17:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/rescue.rb:29:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\n  activesupport (3.2.16) lib/active_support/notifications.rb:123:in `block in instrument'\n  activesupport (3.2.16) lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n  activesupport (3.2.16) lib/active_support/notifications.rb:123:in `instrument'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/params_wrapper.rb:207:in `process_action'\n  activerecord (3.2.16) lib/active_record/railties/controller_runtime.rb:18:in `process_action'\n  actionpack (3.2.16) lib/abstract_controller/base.rb:121:in `process'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:45:in `process'\n  actionpack (3.2.16) lib/action_controller/metal.rb:203:in `dispatch'\n  actionpack (3.2.16) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\n  actionpack (3.2.16) lib/action_controller/metal.rb:246:in `block in action'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:73:in `dispatch'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:36:in `call'\n  journey (1.0.4) lib/journey/router.rb:68:in `block in call'\n  journey (1.0.4) lib/journey/router.rb:56:in `call'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:608:in `call'\n  rack-pjax (0.7.0) lib/rack/pjax.rb:12:in `call'\n  bullet (4.7.1) lib/bullet/rack.rb:12:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/app_request_handler.rb:13:in `call'\n  rack-contrib (1.1.0) lib/rack/contrib/response_headers.rb:17:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/headers.rb:16:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/meta_request_handler.rb:13:in `call'\n  request_store (1.0.5) lib/request_store/middleware.rb:9:in `call'\n  galetahub-simple_captcha (0.1.5) lib/simple_captcha/middleware.rb:20:in `call'\n  warden (1.2.3) lib/warden/manager.rb:35:in `block in call'\n  warden (1.2.3) lib/warden/manager.rb:34:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\n  rack (1.4.5) lib/rack/etag.rb:23:in `call'\n  rack (1.4.5) lib/rack/conditionalget.rb:25:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/head.rb:14:in `call'\n  remotipart (1.2.1) lib/remotipart/middleware.rb:27:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/params_parser.rb:21:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/flash.rb:242:in `call'\n  rack (1.4.5) lib/rack/session/abstract/id.rb:210:in `context'\n  rack (1.4.5) lib/rack/session/abstract/id.rb:205:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/cookies.rb:341:in `call'\n  activerecord (3.2.16) lib/active_record/query_cache.rb:64:in `call'\n  activerecord (3.2.16) lib/active_record/connection_adapters/abstract/connection_pool.rb:479:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `_run__1442826518235417685__call__3422884201790456873__callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `__run_callback'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:385:in `_run_call_callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:81:in `run_callbacks'\n  actionpack (3.2.16) lib/action_dispatch/middleware/callbacks.rb:27:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/reloader.rb:65:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/remote_ip.rb:31:in `call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:84:in `protected_app_call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:79:in `better_errors_call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:56:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/debug_exceptions.rb:16:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/show_exceptions.rb:56:in `call'\n  railties (3.2.16) lib/rails/rack/logger.rb:32:in `call_app'\n  railties (3.2.16) lib/rails/rack/logger.rb:16:in `block in call'\n  activesupport (3.2.16) lib/active_support/tagged_logging.rb:22:in `tagged'\n  railties (3.2.16) lib/rails/rack/logger.rb:16:in `call'\n  quiet_assets (1.0.2) lib/quiet_assets.rb:18:in `call_with_quiet_assets'\n  actionpack (3.2.16) lib/action_dispatch/middleware/request_id.rb:22:in `call'\n  rack (1.4.5) lib/rack/methodoverride.rb:21:in `call'\n  rack (1.4.5) lib/rack/runtime.rb:17:in `call'\n  activesupport (3.2.16) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\n  rack (1.4.5) lib/rack/lock.rb:15:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/static.rb:63:in `call'\n  rack-cache (1.2) lib/rack/cache/context.rb:136:in `forward'\n  rack-cache (1.2) lib/rack/cache/context.rb:245:in `fetch'\n  rack-cache (1.2) lib/rack/cache/context.rb:185:in `lookup'\n  rack-cache (1.2) lib/rack/cache/context.rb:66:in `call!'\n  rack-cache (1.2) lib/rack/cache/context.rb:51:in `call'\n  railties (3.2.16) lib/rails/engine.rb:484:in `call'\n  railties (3.2.16) lib/rails/application.rb:231:in `call'\n  rack (1.4.5) lib/rack/content_length.rb:14:in `call'\n  railties (3.2.16) lib/rails/rack/log_tailer.rb:17:in `call'\n  thin (1.6.1) lib/thin/connection.rb:82:in `block in pre_process'\n  thin (1.6.1) lib/thin/connection.rb:80:in `pre_process'\n  thin (1.6.1) lib/thin/connection.rb:55:in `process'\n  thin (1.6.1) lib/thin/connection.rb:41:in `receive_data'\n  eventmachine (1.0.3) lib/eventmachine.rb:187:in `run'\n  thin (1.6.1) lib/thin/backends/base.rb:73:in `start'\n  thin (1.6.1) lib/thin/server.rb:162:in `start'\n  rack (1.4.5) lib/rack/handler/thin.rb:13:in `run'\n  rack (1.4.5) lib/rack/server.rb:268:in `start'\n  railties (3.2.16) lib/rails/commands/server.rb:70:in `start'\n  railties (3.2.16) lib/rails/commands.rb:55:in `block in <top (required)>'\n  railties (3.2.16) lib/rails/commands.rb:50:in `<top (required)>'\n  script/rails:6:in `<main>'\nI use Rails 3.2.16, and error appeared very random. I rolled back to previous version to avoid such error on production. Hope to see fix soon! I can provide backtrace from server, if you need it.\n. I had this error few days ago on heroku stage server. This error has appeared after upgrading to gon 5 (previous version didn't have such problem). Today I catched this error in development, this is total wierd: \nNoMethodError - undefined method `gon' for nil:NilClass:\n  gon (5.0.0) lib/gon/helpers.rb:27:in `variables_for_request_present?'\n  gon (5.0.0) lib/gon/helpers.rb:11:in `include_gon'\n  app/views/layouts/application.html.haml:12:in `_app_views_layouts_application_html_haml___4401276420502911050_70287553171360'\n  actionpack (3.2.16) lib/action_view/template.rb:145:in `block in render'\n  activesupport (3.2.16) lib/active_support/notifications.rb:125:in `instrument'\n  actionpack (3.2.16) lib/action_view/template.rb:143:in `render'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:59:in `render_with_layout'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:45:in `render_template'\n  actionpack (3.2.16) lib/action_view/renderer/template_renderer.rb:18:in `render'\n  actionpack (3.2.16) lib/action_view/renderer/renderer.rb:36:in `render_template'\n  actionpack (3.2.16) lib/action_view/renderer/renderer.rb:17:in `render'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:110:in `_render_template'\n  actionpack (3.2.16) lib/action_controller/metal/streaming.rb:225:in `_render_template'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:103:in `render_to_body'\n  actionpack (3.2.16) lib/action_controller/metal/renderers.rb:28:in `render_to_body'\n  actionpack (3.2.16) lib/action_controller/metal/compatibility.rb:50:in `render_to_body'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:88:in `render'\n  actionpack (3.2.16) lib/action_controller/metal/rendering.rb:16:in `render'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\n  activesupport (3.2.16) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n  /Users/serj/.rvm/rubies/ruby-2.0.0-p353/lib/ruby/2.0.0/benchmark.rb:296:in `realtime'\n  activesupport (3.2.16) lib/active_support/core_ext/benchmark.rb:5:in `ms'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:40:in `block in render'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:83:in `cleanup_view_runtime'\n  activerecord (3.2.16) lib/active_record/railties/controller_runtime.rb:24:in `cleanup_view_runtime'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:39:in `render'\n  remotipart (1.2.1) lib/remotipart/render_overrides.rb:14:in `render_with_remotipart'\n  actionpack (3.2.16) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\n  actionpack (3.2.16) lib/action_controller/metal/implicit_render.rb:5:in `send_action'\n  actionpack (3.2.16) lib/abstract_controller/base.rb:167:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/rendering.rb:10:in `process_action'\n  actionpack (3.2.16) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:557:in `_run__2486025379314473410__process_action__3142451753211220757__callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `__run_callback'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:385:in `_run_process_action_callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:81:in `run_callbacks'\n  actionpack (3.2.16) lib/abstract_controller/callbacks.rb:17:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/rescue.rb:29:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\n  activesupport (3.2.16) lib/active_support/notifications.rb:123:in `block in instrument'\n  activesupport (3.2.16) lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n  activesupport (3.2.16) lib/active_support/notifications.rb:123:in `instrument'\n  actionpack (3.2.16) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\n  actionpack (3.2.16) lib/action_controller/metal/params_wrapper.rb:207:in `process_action'\n  activerecord (3.2.16) lib/active_record/railties/controller_runtime.rb:18:in `process_action'\n  actionpack (3.2.16) lib/abstract_controller/base.rb:121:in `process'\n  actionpack (3.2.16) lib/abstract_controller/rendering.rb:45:in `process'\n  actionpack (3.2.16) lib/action_controller/metal.rb:203:in `dispatch'\n  actionpack (3.2.16) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\n  actionpack (3.2.16) lib/action_controller/metal.rb:246:in `block in action'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:73:in `dispatch'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:36:in `call'\n  journey (1.0.4) lib/journey/router.rb:68:in `block in call'\n  journey (1.0.4) lib/journey/router.rb:56:in `call'\n  actionpack (3.2.16) lib/action_dispatch/routing/route_set.rb:608:in `call'\n  rack-pjax (0.7.0) lib/rack/pjax.rb:12:in `call'\n  bullet (4.7.1) lib/bullet/rack.rb:12:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/app_request_handler.rb:13:in `call'\n  rack-contrib (1.1.0) lib/rack/contrib/response_headers.rb:17:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/headers.rb:16:in `call'\n  meta_request (0.2.8) lib/meta_request/middlewares/meta_request_handler.rb:13:in `call'\n  request_store (1.0.5) lib/request_store/middleware.rb:9:in `call'\n  galetahub-simple_captcha (0.1.5) lib/simple_captcha/middleware.rb:20:in `call'\n  warden (1.2.3) lib/warden/manager.rb:35:in `block in call'\n  warden (1.2.3) lib/warden/manager.rb:34:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\n  rack (1.4.5) lib/rack/etag.rb:23:in `call'\n  rack (1.4.5) lib/rack/conditionalget.rb:25:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/head.rb:14:in `call'\n  remotipart (1.2.1) lib/remotipart/middleware.rb:27:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/params_parser.rb:21:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/flash.rb:242:in `call'\n  rack (1.4.5) lib/rack/session/abstract/id.rb:210:in `context'\n  rack (1.4.5) lib/rack/session/abstract/id.rb:205:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/cookies.rb:341:in `call'\n  activerecord (3.2.16) lib/active_record/query_cache.rb:64:in `call'\n  activerecord (3.2.16) lib/active_record/connection_adapters/abstract/connection_pool.rb:479:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `_run__1442826518235417685__call__3422884201790456873__callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:405:in `__run_callback'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:385:in `_run_call_callbacks'\n  activesupport (3.2.16) lib/active_support/callbacks.rb:81:in `run_callbacks'\n  actionpack (3.2.16) lib/action_dispatch/middleware/callbacks.rb:27:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/reloader.rb:65:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/remote_ip.rb:31:in `call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:84:in `protected_app_call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:79:in `better_errors_call'\n  better_errors (1.1.0) lib/better_errors/middleware.rb:56:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/debug_exceptions.rb:16:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/show_exceptions.rb:56:in `call'\n  railties (3.2.16) lib/rails/rack/logger.rb:32:in `call_app'\n  railties (3.2.16) lib/rails/rack/logger.rb:16:in `block in call'\n  activesupport (3.2.16) lib/active_support/tagged_logging.rb:22:in `tagged'\n  railties (3.2.16) lib/rails/rack/logger.rb:16:in `call'\n  quiet_assets (1.0.2) lib/quiet_assets.rb:18:in `call_with_quiet_assets'\n  actionpack (3.2.16) lib/action_dispatch/middleware/request_id.rb:22:in `call'\n  rack (1.4.5) lib/rack/methodoverride.rb:21:in `call'\n  rack (1.4.5) lib/rack/runtime.rb:17:in `call'\n  activesupport (3.2.16) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\n  rack (1.4.5) lib/rack/lock.rb:15:in `call'\n  actionpack (3.2.16) lib/action_dispatch/middleware/static.rb:63:in `call'\n  rack-cache (1.2) lib/rack/cache/context.rb:136:in `forward'\n  rack-cache (1.2) lib/rack/cache/context.rb:245:in `fetch'\n  rack-cache (1.2) lib/rack/cache/context.rb:185:in `lookup'\n  rack-cache (1.2) lib/rack/cache/context.rb:66:in `call!'\n  rack-cache (1.2) lib/rack/cache/context.rb:51:in `call'\n  railties (3.2.16) lib/rails/engine.rb:484:in `call'\n  railties (3.2.16) lib/rails/application.rb:231:in `call'\n  rack (1.4.5) lib/rack/content_length.rb:14:in `call'\n  railties (3.2.16) lib/rails/rack/log_tailer.rb:17:in `call'\n  thin (1.6.1) lib/thin/connection.rb:82:in `block in pre_process'\n  thin (1.6.1) lib/thin/connection.rb:80:in `pre_process'\n  thin (1.6.1) lib/thin/connection.rb:55:in `process'\n  thin (1.6.1) lib/thin/connection.rb:41:in `receive_data'\n  eventmachine (1.0.3) lib/eventmachine.rb:187:in `run'\n  thin (1.6.1) lib/thin/backends/base.rb:73:in `start'\n  thin (1.6.1) lib/thin/server.rb:162:in `start'\n  rack (1.4.5) lib/rack/handler/thin.rb:13:in `run'\n  rack (1.4.5) lib/rack/server.rb:268:in `start'\n  railties (3.2.16) lib/rails/commands/server.rb:70:in `start'\n  railties (3.2.16) lib/rails/commands.rb:55:in `block in <top (required)>'\n  railties (3.2.16) lib/rails/commands.rb:50:in `<top (required)>'\n  script/rails:6:in `<main>'\nI use Rails 3.2.16, and error appeared very random. I rolled back to previous version to avoid such error on production. Hope to see fix soon! I can provide backtrace from server, if you need it.\n. ",
    "pkpp1233": "Seeing the same error in 5.0.1. As soon as I get devise in my gemfile I get a \"undefined method `clear' for nil:NilClass\". Have tried 4.1.0, 5.0.0, and 5.0.1 with no luck.\n. here's what it looks like on 5.0.1\ngon (5.0.1) lib/gon.rb:56:in clear'\ngon (5.0.1) lib/gon/helpers.rb:14:ininclude_gon'\napp/views/layouts/application.html.erb:4:in _app_views_layouts_application_html_erb___4062240789495195357_70230375020600'\nactionpack (4.0.0) lib/action_view/template.rb:143:inblock in render'\nactivesupport (4.0.0) lib/active_support/notifications.rb:161:in instrument'\nactionpack (4.0.0) lib/action_view/template.rb:141:inrender'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:61:in render_with_layout'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:47:inrender_template'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:17:in render'\nactionpack (4.0.0) lib/action_view/renderer/renderer.rb:42:inrender_template'\nactionpack (4.0.0) lib/action_view/renderer/renderer.rb:23:in render'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:127:in_render_template'\nactionpack (4.0.0) lib/action_controller/metal/streaming.rb:219:in _render_template'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:120:inrender_to_body'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:33:in render_to_body'\nactionpack (4.0.0) lib/action_controller/metal/renderers.rb:26:inrender_to_body'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:97:in render'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:16:inrender'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:41:in block (2 levels) in render'\nactivesupport (4.0.0) lib/active_support/core_ext/benchmark.rb:12:inblock in ms'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/benchmark.rb:296:in realtime'\nactivesupport (4.0.0) lib/active_support/core_ext/benchmark.rb:12:inms'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:41:in block in render'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:84:incleanup_view_runtime'\nactiverecord (4.0.0) lib/active_record/railties/controller_runtime.rb:25:in cleanup_view_runtime'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:40:inrender'\nremotipart (1.2.1) lib/remotipart/render_overrides.rb:14:in render_with_remotipart'\napp/controllers/graphers_controller.rb:21:inindex'\nactionpack (4.0.0) lib/action_controller/metal/implicit_render.rb:4:in send_action'\nactionpack (4.0.0) lib/abstract_controller/base.rb:189:inprocess_action'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:10:in process_action'\nactionpack (4.0.0) lib/abstract_controller/callbacks.rb:18:inblock in process_action'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:433:in _run__2742306431083656133__process_action__callbacks'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:80:inrun_callbacks'\nactionpack (4.0.0) lib/abstract_controller/callbacks.rb:17:in process_action'\nactionpack (4.0.0) lib/action_controller/metal/rescue.rb:29:inprocess_action'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:31:in block in process_action'\nactivesupport (4.0.0) lib/active_support/notifications.rb:159:inblock in instrument'\nactivesupport (4.0.0) lib/active_support/notifications/instrumenter.rb:20:in instrument'\nactivesupport (4.0.0) lib/active_support/notifications.rb:159:ininstrument'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:30:in process_action'\nactionpack (4.0.0) lib/action_controller/metal/params_wrapper.rb:245:inprocess_action'\nactiverecord (4.0.0) lib/active_record/railties/controller_runtime.rb:18:in process_action'\nactionpack (4.0.0) lib/abstract_controller/base.rb:136:inprocess'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:44:in process'\nactionpack (4.0.0) lib/action_controller/metal.rb:195:indispatch'\nactionpack (4.0.0) lib/action_controller/metal/rack_delegation.rb:13:in dispatch'\nactionpack (4.0.0) lib/action_controller/metal.rb:231:inblock in action'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:in call'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:indispatch'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:48:in call'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:71:inblock in call'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:in each'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:incall'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:655:in call'\nomniauth (1.1.4) lib/omniauth/strategy.rb:184:incall!'\nomniauth (1.1.4) lib/omniauth/strategy.rb:164:in call'\nomniauth (1.1.4) lib/omniauth/builder.rb:49:incall'\nwarden (1.2.3) lib/warden/manager.rb:35:in block in call'\nwarden (1.2.3) lib/warden/manager.rb:34:incatch'\nwarden (1.2.3) lib/warden/manager.rb:34:in call'\nrack (1.5.2) lib/rack/etag.rb:23:incall'\nrack (1.5.2) lib/rack/conditionalget.rb:25:in call'\nrack (1.5.2) lib/rack/head.rb:11:incall'\nremotipart (1.2.1) lib/remotipart/middleware.rb:27:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/params_parser.rb:27:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/flash.rb:241:in call'\nrack (1.5.2) lib/rack/session/abstract/id.rb:225:incontext'\nrack (1.5.2) lib/rack/session/abstract/id.rb:220:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/cookies.rb:486:incall'\nactiverecord (4.0.0) lib/active_record/query_cache.rb:36:in call'\nactiverecord (4.0.0) lib/active_record/connection_adapters/abstract/connection_pool.rb:626:incall'\nactiverecord (4.0.0) lib/active_record/migration.rb:369:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:29:inblock in call'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:373:in _run__134251049969039114__call__callbacks'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:80:inrun_callbacks'\nactionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:27:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/reloader.rb:64:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/remote_ip.rb:76:in call'\nbugsnag (1.8.1) lib/bugsnag/rack.rb:36:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/debug_exceptions.rb:17:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/show_exceptions.rb:30:incall'\nrailties (4.0.0) lib/rails/rack/logger.rb:38:in call_app'\nrailties (4.0.0) lib/rails/rack/logger.rb:21:inblock in call'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in block in tagged'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:25:intagged'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in tagged'\nrailties (4.0.0) lib/rails/rack/logger.rb:21:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/request_id.rb:21:in call'\nrack (1.5.2) lib/rack/methodoverride.rb:21:incall'\nrack (1.5.2) lib/rack/runtime.rb:17:in call'\nactivesupport (4.0.0) lib/active_support/cache/strategy/local_cache.rb:83:incall'\nrack (1.5.2) lib/rack/lock.rb:17:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/static.rb:64:incall'\nrailties (4.0.0) lib/rails/engine.rb:511:in call'\nrailties (4.0.0) lib/rails/application.rb:97:incall'\nrack (1.5.2) lib/rack/lock.rb:17:in call'\nrack (1.5.2) lib/rack/content_length.rb:14:incall'\nrack (1.5.2) lib/rack/handler/webrick.rb:60:in service'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/httpserver.rb:138:inservice'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/httpserver.rb:94:in run'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/server.rb:295:inblock in start_thread'\n. Seeing the same error in 5.0.1. As soon as I get devise in my gemfile I get a \"undefined method `clear' for nil:NilClass\". Have tried 4.1.0, 5.0.0, and 5.0.1 with no luck.\n. here's what it looks like on 5.0.1\ngon (5.0.1) lib/gon.rb:56:in clear'\ngon (5.0.1) lib/gon/helpers.rb:14:ininclude_gon'\napp/views/layouts/application.html.erb:4:in _app_views_layouts_application_html_erb___4062240789495195357_70230375020600'\nactionpack (4.0.0) lib/action_view/template.rb:143:inblock in render'\nactivesupport (4.0.0) lib/active_support/notifications.rb:161:in instrument'\nactionpack (4.0.0) lib/action_view/template.rb:141:inrender'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:61:in render_with_layout'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:47:inrender_template'\nactionpack (4.0.0) lib/action_view/renderer/template_renderer.rb:17:in render'\nactionpack (4.0.0) lib/action_view/renderer/renderer.rb:42:inrender_template'\nactionpack (4.0.0) lib/action_view/renderer/renderer.rb:23:in render'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:127:in_render_template'\nactionpack (4.0.0) lib/action_controller/metal/streaming.rb:219:in _render_template'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:120:inrender_to_body'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:33:in render_to_body'\nactionpack (4.0.0) lib/action_controller/metal/renderers.rb:26:inrender_to_body'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:97:in render'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:16:inrender'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:41:in block (2 levels) in render'\nactivesupport (4.0.0) lib/active_support/core_ext/benchmark.rb:12:inblock in ms'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/benchmark.rb:296:in realtime'\nactivesupport (4.0.0) lib/active_support/core_ext/benchmark.rb:12:inms'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:41:in block in render'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:84:incleanup_view_runtime'\nactiverecord (4.0.0) lib/active_record/railties/controller_runtime.rb:25:in cleanup_view_runtime'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:40:inrender'\nremotipart (1.2.1) lib/remotipart/render_overrides.rb:14:in render_with_remotipart'\napp/controllers/graphers_controller.rb:21:inindex'\nactionpack (4.0.0) lib/action_controller/metal/implicit_render.rb:4:in send_action'\nactionpack (4.0.0) lib/abstract_controller/base.rb:189:inprocess_action'\nactionpack (4.0.0) lib/action_controller/metal/rendering.rb:10:in process_action'\nactionpack (4.0.0) lib/abstract_controller/callbacks.rb:18:inblock in process_action'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:433:in _run__2742306431083656133__process_action__callbacks'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:80:inrun_callbacks'\nactionpack (4.0.0) lib/abstract_controller/callbacks.rb:17:in process_action'\nactionpack (4.0.0) lib/action_controller/metal/rescue.rb:29:inprocess_action'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:31:in block in process_action'\nactivesupport (4.0.0) lib/active_support/notifications.rb:159:inblock in instrument'\nactivesupport (4.0.0) lib/active_support/notifications/instrumenter.rb:20:in instrument'\nactivesupport (4.0.0) lib/active_support/notifications.rb:159:ininstrument'\nactionpack (4.0.0) lib/action_controller/metal/instrumentation.rb:30:in process_action'\nactionpack (4.0.0) lib/action_controller/metal/params_wrapper.rb:245:inprocess_action'\nactiverecord (4.0.0) lib/active_record/railties/controller_runtime.rb:18:in process_action'\nactionpack (4.0.0) lib/abstract_controller/base.rb:136:inprocess'\nactionpack (4.0.0) lib/abstract_controller/rendering.rb:44:in process'\nactionpack (4.0.0) lib/action_controller/metal.rb:195:indispatch'\nactionpack (4.0.0) lib/action_controller/metal/rack_delegation.rb:13:in dispatch'\nactionpack (4.0.0) lib/action_controller/metal.rb:231:inblock in action'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:in call'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:80:indispatch'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:48:in call'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:71:inblock in call'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:in each'\nactionpack (4.0.0) lib/action_dispatch/journey/router.rb:59:incall'\nactionpack (4.0.0) lib/action_dispatch/routing/route_set.rb:655:in call'\nomniauth (1.1.4) lib/omniauth/strategy.rb:184:incall!'\nomniauth (1.1.4) lib/omniauth/strategy.rb:164:in call'\nomniauth (1.1.4) lib/omniauth/builder.rb:49:incall'\nwarden (1.2.3) lib/warden/manager.rb:35:in block in call'\nwarden (1.2.3) lib/warden/manager.rb:34:incatch'\nwarden (1.2.3) lib/warden/manager.rb:34:in call'\nrack (1.5.2) lib/rack/etag.rb:23:incall'\nrack (1.5.2) lib/rack/conditionalget.rb:25:in call'\nrack (1.5.2) lib/rack/head.rb:11:incall'\nremotipart (1.2.1) lib/remotipart/middleware.rb:27:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/params_parser.rb:27:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/flash.rb:241:in call'\nrack (1.5.2) lib/rack/session/abstract/id.rb:225:incontext'\nrack (1.5.2) lib/rack/session/abstract/id.rb:220:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/cookies.rb:486:incall'\nactiverecord (4.0.0) lib/active_record/query_cache.rb:36:in call'\nactiverecord (4.0.0) lib/active_record/connection_adapters/abstract/connection_pool.rb:626:incall'\nactiverecord (4.0.0) lib/active_record/migration.rb:369:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:29:inblock in call'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:373:in _run__134251049969039114__call__callbacks'\nactivesupport (4.0.0) lib/active_support/callbacks.rb:80:inrun_callbacks'\nactionpack (4.0.0) lib/action_dispatch/middleware/callbacks.rb:27:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/reloader.rb:64:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/remote_ip.rb:76:in call'\nbugsnag (1.8.1) lib/bugsnag/rack.rb:36:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/debug_exceptions.rb:17:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/show_exceptions.rb:30:incall'\nrailties (4.0.0) lib/rails/rack/logger.rb:38:in call_app'\nrailties (4.0.0) lib/rails/rack/logger.rb:21:inblock in call'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in block in tagged'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:25:intagged'\nactivesupport (4.0.0) lib/active_support/tagged_logging.rb:67:in tagged'\nrailties (4.0.0) lib/rails/rack/logger.rb:21:incall'\nactionpack (4.0.0) lib/action_dispatch/middleware/request_id.rb:21:in call'\nrack (1.5.2) lib/rack/methodoverride.rb:21:incall'\nrack (1.5.2) lib/rack/runtime.rb:17:in call'\nactivesupport (4.0.0) lib/active_support/cache/strategy/local_cache.rb:83:incall'\nrack (1.5.2) lib/rack/lock.rb:17:in call'\nactionpack (4.0.0) lib/action_dispatch/middleware/static.rb:64:incall'\nrailties (4.0.0) lib/rails/engine.rb:511:in call'\nrailties (4.0.0) lib/rails/application.rb:97:incall'\nrack (1.5.2) lib/rack/lock.rb:17:in call'\nrack (1.5.2) lib/rack/content_length.rb:14:incall'\nrack (1.5.2) lib/rack/handler/webrick.rb:60:in service'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/httpserver.rb:138:inservice'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/httpserver.rb:94:in run'\n/usr/local/rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/webrick/server.rb:295:inblock in start_thread'\n. ",
    "kevinold": "I am seeing the same this behavior with gon 5.0.1 but only when I add :init => true to my include_gon call.\n. I am seeing the same this behavior with gon 5.0.1 but only when I add :init => true to my include_gon call.\n. ",
    "gregmolnar": "@kevinold can you try it with my fork and confirm if that fixes the issue?\nTo do so just put this in your gemfile:\ngem 'gon', github: 'gregmolnar/gon', branch: 'current_gon'\n. Thanks @forest . @gazay told me my creation of the gon instance is not exactly right and he will fix it at somepoint.\n. It works for me too. Thanks for fixing it!\n. I haven't really checked how Gon.global works just had the issue and this solution passed all the tests. What I found is Thread.current['gon'] is nil in my application. I guess than a failback of creating a new gon instance would be a better solution than. What do you think?\n. I've updated the PR. Please let me know if this looks like a better solution.\n. Ok, thanks. I am closing this than.\n. @kevinold can you try it with my fork and confirm if that fixes the issue?\nTo do so just put this in your gemfile:\ngem 'gon', github: 'gregmolnar/gon', branch: 'current_gon'\n. Thanks @forest . @gazay told me my creation of the gon instance is not exactly right and he will fix it at somepoint.\n. It works for me too. Thanks for fixing it!\n. I haven't really checked how Gon.global works just had the issue and this solution passed all the tests. What I found is Thread.current['gon'] is nil in my application. I guess than a failback of creating a new gon instance would be a better solution than. What do you think?\n. I've updated the PR. Please let me know if this looks like a better solution.\n. Ok, thanks. I am closing this than.\n. ",
    "forest": "@gregmolnar your fork fixed it for me. gon 5.0.1 still had the error.\nDevelopment (env)\nRails 4.0.2\nRuby 2\nUnicorn\n. @gregmolnar thanks for letting me know. I'll watch for the fix from @gazay.\n. Thanks.\n. @gregmolnar your fork fixed it for me. gon 5.0.1 still had the error.\nDevelopment (env)\nRails 4.0.2\nRuby 2\nUnicorn\n. @gregmolnar thanks for letting me know. I'll watch for the fix from @gazay.\n. Thanks.\n. ",
    "olkeene": "@gazay issue fixed in master\n. @gazay issue fixed in master\n. ",
    "boutil": "Hi!\nI confirm the failing test: this was experienced on Debian when running test during the package build (see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733441).\nThis problem is indeed fixed when adding https://github.com/petergoldstein/gon/commit/b4f254b9e1a33de135d9b62691aacb98ae0addae.\n. Hi!\nI confirm the failing test: this was experienced on Debian when running test during the package build (see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=733441).\nThis problem is indeed fixed when adding https://github.com/petergoldstein/gon/commit/b4f254b9e1a33de135d9b62691aacb98ae0addae.\n. ",
    "d4rky-pl": "I already use 5.0.2. It seems like Thread.current('gon') returns Gon object with all variables present. I'll investigate more later and let you know what I find.\n. I already use 5.0.2. It seems like Thread.current('gon') returns Gon object with all variables present. I'll investigate more later and let you know what I find.\n. ",
    "willcosgrove": "I'm running into this issue as well.  Anything I can do to help?\n. I'm running into this issue as well.  Anything I can do to help?\n. ",
    "TylerRick": "This problem seems to occur if a previous request used gon but the current request does not explicitly use gon:  It will just reuse the data that was set in the previous request.\n\"In each request it calls Gon.clear which clear current gon data.\"  This is not quite accurate, I'm afraid.  Where does it get called from?  I can't find anywhere that guarantees that it will get reset every request.\nIf gon gets called anywhere at all in the new request, then it appears that things get reset (though not via Gon.clear, by the looks of it), because wrong_gon_request? returns true:\nruby\n      def gon\n        if wrong_gon_request?\n          gon_request = Request.new(env)\n          gon_request.id = request.uuid\n          Thread.current['gon'] = gon_request\n        end\n        Gon\n      end\nbut if gon doesn't get called by some controllers/actions, then it doesn't end up getting reset.\nA workaround, like @d4rky-pl mentioned, is to add a before_filter -> { gon.clear } in your controller.  But even just adding a call to gon seems to be enough trigger it to reset, as discussed above.\nThis before_filter could even be added automatically when GonHelpers is included into ActionController::Base... Though I think there are better ways of doing it...\nI really liked the way the request_store gem does this.  They have a middleware that automatically clears their request store (which is also stored in a thread-local variable, as in this gem) before every request.  What would you think of doing the same thing in gon and adding a Gon middleware?\n(Their middleware automatically gets inserted into the stack here in the Railtie.)\n. We should probably also add an integration test to the test suite that exposes this bug and then proves it is fixed... It could request an action that uses gon, and then another action that doesn't, and then inspect the script tag in the rendered page to make sure it doesn't have any gon variables set...\n. Yeah, I think if we could somehow check wrong_gon_request? from include_gon that would probably work.  I think I may have tried playing around with that idea and found that I couldn't access  wrong_gon_request? from there, because wrong_gon_request? (GonHelpers controller helpers) is only available from the controller.\nProbably won't get a chance to help with this since I'm no longer working on the project that used this...\n. This problem seems to occur if a previous request used gon but the current request does not explicitly use gon:  It will just reuse the data that was set in the previous request.\n\"In each request it calls Gon.clear which clear current gon data.\"  This is not quite accurate, I'm afraid.  Where does it get called from?  I can't find anywhere that guarantees that it will get reset every request.\nIf gon gets called anywhere at all in the new request, then it appears that things get reset (though not via Gon.clear, by the looks of it), because wrong_gon_request? returns true:\nruby\n      def gon\n        if wrong_gon_request?\n          gon_request = Request.new(env)\n          gon_request.id = request.uuid\n          Thread.current['gon'] = gon_request\n        end\n        Gon\n      end\nbut if gon doesn't get called by some controllers/actions, then it doesn't end up getting reset.\nA workaround, like @d4rky-pl mentioned, is to add a before_filter -> { gon.clear } in your controller.  But even just adding a call to gon seems to be enough trigger it to reset, as discussed above.\nThis before_filter could even be added automatically when GonHelpers is included into ActionController::Base... Though I think there are better ways of doing it...\nI really liked the way the request_store gem does this.  They have a middleware that automatically clears their request store (which is also stored in a thread-local variable, as in this gem) before every request.  What would you think of doing the same thing in gon and adding a Gon middleware?\n(Their middleware automatically gets inserted into the stack here in the Railtie.)\n. We should probably also add an integration test to the test suite that exposes this bug and then proves it is fixed... It could request an action that uses gon, and then another action that doesn't, and then inspect the script tag in the rendered page to make sure it doesn't have any gon variables set...\n. Yeah, I think if we could somehow check wrong_gon_request? from include_gon that would probably work.  I think I may have tried playing around with that idea and found that I couldn't access  wrong_gon_request? from there, because wrong_gon_request? (GonHelpers controller helpers) is only available from the controller.\nProbably won't get a chance to help with this since I'm no longer working on the project that used this...\n. ",
    "eric-smartlove": "If anyone else who encounters the same problem, I think it is useful to note that the problem related in this ticket seems to have been fixed in ed28c12e7cf134f6918f4742ba0d27d7568e5ab0 which is available in master branch since b34d796b5f5beb1bb296368935e5f6d0ed4a67e1, although it has not been published yet.\nHowever, you can still encounter similar problems during controller tests as reported in #124: gon is not reseted between tests when running rake test:controllers, for instance (I use minitest in my case).\n. If anyone else who encounters the same problem, I think it is useful to note that the problem related in this ticket seems to have been fixed in ed28c12e7cf134f6918f4742ba0d27d7568e5ab0 which is available in master branch since b34d796b5f5beb1bb296368935e5f6d0ed4a67e1, although it has not been published yet.\nHowever, you can still encounter similar problems during controller tests as reported in #124: gon is not reseted between tests when running rake test:controllers, for instance (I use minitest in my case).\n. ",
    "ivanovv": ":+1: \n. :+1: \n. ",
    "seanlinsley": "I was running into this issue in a controller test that's using render_views. Gon was referencing some records from a previous test created by FactoryGirl, that had since been deleted. Adding a before_filter as suggested gets around this.\n. include_gon init: true works, but doesn't record any variables that have been set. It appears that this is a bug in the request_store gem: https://github.com/steveklabnik/request_store/pull/52. I was running into this issue in a controller test that's using render_views. Gon was referencing some records from a previous test created by FactoryGirl, that had since been deleted. Adding a before_filter as suggested gets around this.\n. include_gon init: true works, but doesn't record any variables that have been set. It appears that this is a bug in the request_store gem: https://github.com/steveklabnik/request_store/pull/52. ",
    "ludamillion": "Any updates on this? We've just run afoul of this issue in our tests. The above workaround works fine but seems like it shouldn't be necessary.\n. Any updates on this? We've just run afoul of this issue in our tests. The above workaround works fine but seems like it shouldn't be necessary.\n. ",
    "sagarjauhari": "Any update?\n. Any update?\n. ",
    "Zelnox": "I'm getting this problem after updating to 6.0.1 from 4.0.x. I also have to clear gon in a before_action now.\n. I'm getting this problem after updating to 6.0.1 from 4.0.x. I also have to clear gon in a before_action now.\n. ",
    "minghz": "Same thing here, gon is being retained...\n. Same thing here, gon is being retained...\n. ",
    "sethcall": "Thanks @gazay.  5.0.4 works for me.\n. Thanks @gazay.  5.0.4 works for me.\n. ",
    "jmzbond": "It resolved itself somehow, and I'm not sure how... you can close it!\nOn Wed, Mar 12, 2014 at 10:42 PM, Alexey Gaziev notifications@github.comwrote:\n\nThank you for issue! Can you please provide full stack trace and example\nhow you use gem?\n\nReply to this email directly or view it on GitHubhttps://github.com/gazay/gon/issues/119#issuecomment-37501966\n.\n\n\nJames\n*Need to borrow something for occasional use? I can help\nhttp://borrows.herokuapp.com. *\n. It resolved itself somehow, and I'm not sure how... you can close it!\nOn Wed, Mar 12, 2014 at 10:42 PM, Alexey Gaziev notifications@github.comwrote:\n\nThank you for issue! Can you please provide full stack trace and example\nhow you use gem?\n\nReply to this email directly or view it on GitHubhttps://github.com/gazay/gon/issues/119#issuecomment-37501966\n.\n\n\nJames\n*Need to borrow something for occasional use? I can help\nhttp://borrows.herokuapp.com. *\n. ",
    "javamuc": "I have the same problem on heroku using rails 4: \n'uncaught reference error. gon is not defined'\nIn my gemfile I have:  gem \"gon\", '5.0.4'\nand I added '<%= include_gon %>'  into the head section of my layout file.\nworks in development though.\n. ok I now know what was happening, for those that stumble upon the same problem:\ninclude gon like this to make sure that it is available:\n  <%= include_gon(:init => true) %>\nand in your javascript, if you access a gon attribute, wrap it in a if to check if it is there, like this:\nif(gon.attr)\n  console.log(gon.attr)\n. @gazay sorry  to have you reopened this issue. the problem was how heroku serves all assets as one js. maybe adding a section in the usage might be of help for others.\n. I have the same problem on heroku using rails 4: \n'uncaught reference error. gon is not defined'\nIn my gemfile I have:  gem \"gon\", '5.0.4'\nand I added '<%= include_gon %>'  into the head section of my layout file.\nworks in development though.\n. ok I now know what was happening, for those that stumble upon the same problem:\ninclude gon like this to make sure that it is available:\n  <%= include_gon(:init => true) %>\nand in your javascript, if you access a gon attribute, wrap it in a if to check if it is there, like this:\nif(gon.attr)\n  console.log(gon.attr)\n. @gazay sorry  to have you reopened this issue. the problem was how heroku serves all assets as one js. maybe adding a section in the usage might be of help for others.\n. ",
    "adsteel": "I'm having this issue today. Gon works 90% of the time in my staging heroku app, but now that I've pushed it to my production Heroku app, it fails 90% of the time, keeping stripe.js from working. I've tried adding 'init: true' (which fails when I try to push it to Heroku), I've tried putting <%= include_gon %> in the body, as well as in the individual key pages, with no success. Has there been a solution to this other than disabling turbolinks?\n. I never solved this issue. Ultimately, I either passed server side data into html data attributes and retrieved it with the Javascript or retrieved it with Ajax calls directly.\n. I'm having this issue today. Gon works 90% of the time in my staging heroku app, but now that I've pushed it to my production Heroku app, it fails 90% of the time, keeping stripe.js from working. I've tried adding 'init: true' (which fails when I try to push it to Heroku), I've tried putting <%= include_gon %> in the body, as well as in the individual key pages, with no success. Has there been a solution to this other than disabling turbolinks?\n. I never solved this issue. Ultimately, I either passed server side data into html data attributes and retrieved it with the Javascript or retrieved it with Ajax calls directly.\n. ",
    "Fourfingerz": "+1 Having this issue as well. \n. +1 Having this issue as well. \n. ",
    "manfe": "Guys, just to let you know what I am experiencing about it.\nSearching about the same problem I came to this issue: basically what happens for me. When I set a string with non-ascii characters, in my case a string with \u00e3 character was causing this error. I still couldn't find a way to fix it.\nI just can tell that when a variable is set, the variable is considered binary and when rails/ruby try to concatenate raise this error.\nIf you guys found something, please post here.\n. Guys, just to let you know what I am experiencing about it.\nSearching about the same problem I came to this issue: basically what happens for me. When I set a string with non-ascii characters, in my case a string with \u00e3 character was causing this error. I still couldn't find a way to fix it.\nI just can tell that when a variable is set, the variable is considered binary and when rails/ruby try to concatenate raise this error.\nIf you guys found something, please post here.\n. ",
    "Strech": "@gazay I'll try to fix this issue\n. :cake: :birthday: :cake:\n. @Silex Yap, got this. I'll fix this issue soon. I'm trying to make identical MRI and JRuby code handling. Seems need to change escaping to html tags only.\n. @icleversoft Because of this\nIn MRI\nbash\n2.0.0-p481 :001 > require 'oj'\n => true\n2.0.0-p481 :002 > Oj.dump({a: '<a>'}, mode: :compat, time_format: :ruby)\n => \"{\\\"a\\\":\\\"<a>\\\"}\"\nIn JRuby (coz we can't use Oj)\nbash\n2.0.0-p481 :003 > require 'active_support/core_ext/object'\n => true\n2.0.0-p481 :004 > {a: '<a>'}.to_json\n => \"{\\\"a\\\":\\\"\\\\u003ca\\\\u003e\\\"}\"\n. @scy0846 #147 should fix it. Try to update\n. I think, this is not a Gon problem. Do this concern really loaded? Does this method (commentize) available in controller without Gon?\n. @gazay I'll try to fix this issue\n. :cake: :birthday: :cake:\n. @Silex Yap, got this. I'll fix this issue soon. I'm trying to make identical MRI and JRuby code handling. Seems need to change escaping to html tags only.\n. @icleversoft Because of this\nIn MRI\nbash\n2.0.0-p481 :001 > require 'oj'\n => true\n2.0.0-p481 :002 > Oj.dump({a: '<a>'}, mode: :compat, time_format: :ruby)\n => \"{\\\"a\\\":\\\"<a>\\\"}\"\nIn JRuby (coz we can't use Oj)\nbash\n2.0.0-p481 :003 > require 'active_support/core_ext/object'\n => true\n2.0.0-p481 :004 > {a: '<a>'}.to_json\n => \"{\\\"a\\\":\\\"\\\\u003ca\\\\u003e\\\"}\"\n. @scy0846 #147 should fix it. Try to update\n. I think, this is not a Gon problem. Do this concern really loaded? Does this method (commentize) available in controller without Gon?\n. ",
    "danhper": "I am having the same problem here.\nIt seems like as and collection are treated as normal variables.\n. I ended up using active_model_serializer instead of jbuilder, it worked much better for me.\n. I am having the same problem here.\nIt seems like as and collection are treated as normal variables.\n. I ended up using active_model_serializer instead of jbuilder, it worked much better for me.\n. ",
    "jarinudom": "Similar problem here: undefined method 'company' for #<HomeController:0x007f85f392ed40>\n``` ruby\nhome_controller.rb\ngon.jbuilder template: \"app/views/api/v1/companies/index.json.jbuilder\",\n             locals: { companies: current_user.companies.decorate },\n             as: :my_companies\n\n```\n``` ruby\nindex.json.jbuilder\njson.array!(companies) do |company|\n  json.partial! \"api/v1/companies/company\", company: company\nend\n```\n``` ruby\n_company.json.jbuilder\njson.extract! company, :id, :ticker, :name\njson.url controller.view_context.company_url(company)\n```\n. I'm having the same issue on Rails 4.2.0. For example, I have to do this:\n``` ruby\ncompany.json.jbuilder\njson.extract! company, :id, :ticker, :name, :last_close, :market_cap\njson.url controller.view_context.company_url(company)\n``\n. Similar problem here:undefined method 'company' for #`\n``` ruby\nhome_controller.rb\ngon.jbuilder template: \"app/views/api/v1/companies/index.json.jbuilder\",\n             locals: { companies: current_user.companies.decorate },\n             as: :my_companies\n\n```\n``` ruby\nindex.json.jbuilder\njson.array!(companies) do |company|\n  json.partial! \"api/v1/companies/company\", company: company\nend\n```\n``` ruby\n_company.json.jbuilder\njson.extract! company, :id, :ticker, :name\njson.url controller.view_context.company_url(company)\n```\n. I'm having the same issue on Rails 4.2.0. For example, I have to do this:\n``` ruby\ncompany.json.jbuilder\njson.extract! company, :id, :ticker, :name, :last_close, :market_cap\njson.url controller.view_context.company_url(company)\n```\n. ",
    "denisovlev": "Is there any solution?\n. What's the problem with jbuilder rendering that urged you to write your own parser? As far as I can see jbuilder can handle local variables and templates on its own\n. Won't this gem https://github.com/yappbox/render_anywhere help you?\n. Is there any solution?\n. What's the problem with jbuilder rendering that urged you to write your own parser? As far as I can see jbuilder can handle local variables and templates on its own\n. Won't this gem https://github.com/yappbox/render_anywhere help you?\n. ",
    "idrinkpabst": "@cheef  Thank you so much for this fix!\n. @cheef  Thank you so much for this fix!\n. ",
    "kyrylo": "Hi. I see, the PR sucks, sorry. However, could you elaborate on this? I'm not a pro at thread-safety and I don't really see how defined? helps.\n. So, what was the problem? :)\n. Hi. I see, the PR sucks, sorry. However, could you elaborate on this? I'm not a pro at thread-safety and I don't really see how defined? helps.\n. So, what was the problem? :)\n. ",
    "randoum": "I haven't gone deep into it, but I believe that wrong_gon_request? could not be needed anymore after switching to RequestStore\n. I haven't gone deep into it, but I believe that wrong_gon_request? could not be needed anymore after switching to RequestStore\n. ",
    "didil": "duplicate sorry\n. duplicate sorry\n. ",
    "hrdwdmrbl": "I'm noticing some incompatibilities with the JSON that is output. Closing for now\n. Re-opened here: https://github.com/gazay/gon/pull/132\n. I'm glad you like it. :)\n. I'm noticing some incompatibilities with the JSON that is output. Closing for now\n. Re-opened here: https://github.com/gazay/gon/pull/132\n. I'm glad you like it. :)\n. ",
    "Lyubomyr": "Had the same issue.\nruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-linux]\nRails 4.0.2\ngon (5.0.4)\n. Had the same issue.\nruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-linux]\nRails 4.0.2\ngon (5.0.4)\n. ",
    "lazywei": "Seems gon.global.delete is undefined. Is using delete gon.global.key directly OK?\n. Seems gon.global.delete is undefined. Is using delete gon.global.key directly OK?\n. ",
    "andreasklinger": "btw this is how i currently solve it:\n```\nclass ApplicationController < ActionController::Base\n  before_action :set_frontend_variables\ndef flash_js(var)\n    js = (flash[:js].present?) ? JSON.parse(flash[:js]) : []\n    js << var\n    flash[:js] = js.to_json\n  end\ndef set_frontend_variables\n    if flash[:js].present?\n      JSON.parse(flash[:js]).each do |variable|\n        gon.push(variable)\n      end\n    end\n  end\nend\n```\nand in the other controllers\ndef create\n    @recommendation = # \u2026\n    if @recommendation.save\n      flash_js show_twitter_popup: true\n      redirect_to etc_path\n. thanks for getting back so quickly\nis using gon.global a recommended approach? sounds a bit scary (multi-thread env) \n. btw this is how i currently solve it:\n```\nclass ApplicationController < ActionController::Base\n  before_action :set_frontend_variables\ndef flash_js(var)\n    js = (flash[:js].present?) ? JSON.parse(flash[:js]) : []\n    js << var\n    flash[:js] = js.to_json\n  end\ndef set_frontend_variables\n    if flash[:js].present?\n      JSON.parse(flash[:js]).each do |variable|\n        gon.push(variable)\n      end\n    end\n  end\nend\n```\nand in the other controllers\ndef create\n    @recommendation = # \u2026\n    if @recommendation.save\n      flash_js show_twitter_popup: true\n      redirect_to etc_path\n. thanks for getting back so quickly\nis using gon.global a recommended approach? sounds a bit scary (multi-thread env) \n. ",
    "Rendez": "@andreasklinger great solution for Rails. This should be added to the docs or F.A.Q somewhere.\n. @andreasklinger great solution for Rails. This should be added to the docs or F.A.Q somewhere.\n. ",
    "jwinter": "This doesn't work:\ns.add_dependency 'oj' unless RUBY_PLATFORM =~ /java/\nhttps://github.com/gazay/gon/blob/master/gon.gemspec#L25\nThat gemspec is evaluated at gem build time, not runtime, so RUBY_PLATFORM will be whatever you built the gem with. There are ways around this, but none are one-liners.\nOne way to do it is detailed on StackOverflow:\nhttp://stackoverflow.com/questions/13536119/how-do-i-make-a-gem-that-targets-both-mri-and-jruby/13540730#13540730\n. This doesn't work:\ns.add_dependency 'oj' unless RUBY_PLATFORM =~ /java/\nhttps://github.com/gazay/gon/blob/master/gon.gemspec#L25\nThat gemspec is evaluated at gem build time, not runtime, so RUBY_PLATFORM will be whatever you built the gem with. There are ways around this, but none are one-liners.\nOne way to do it is detailed on StackOverflow:\nhttp://stackoverflow.com/questions/13536119/how-do-i-make-a-gem-that-targets-both-mri-and-jruby/13540730#13540730\n. ",
    "jackxxu": "@jwinter +1 \n. @jwinter +1 \n. ",
    "icleversoft": "@Strech The problem appears in escape_special_chars method in Escaper module. Why this substitution you perform there is necessary? \n. @Strech The problem appears in escape_special_chars method in Escaper module. Why this substitution you perform there is necessary? \n. ",
    "gabrieltong": "thank you @gazay \n. thank you @gazay \n. ",
    "firewalker06": "Ah, silly me, you are right, the concern isn't loaded. Thanks for clarifying.\n. Ah, silly me, you are right, the concern isn't loaded. Thanks for clarifying.\n. ",
    "scy0846": "Excellent thanks\n. Excellent thanks\n. ",
    "ijcd": "Nevermind. I see it is fixed here a61e674dce6c1a941092e08e7a4be06b1a7f6054\n. Nevermind. I see it is fixed here a61e674dce6c1a941092e08e7a4be06b1a7f6054\n. ",
    "vijoc": "Sure thing! I'll try to get it done today.\n. I've updated the Readme. Is that a sufficient description?\n. Sure thing! I'll try to get it done today.\n. I've updated the Readme. Is that a sufficient description?\n. ",
    "isundaylee": "I think the after_action is executed after the view as been rendered and sent off to the browser. Therefore it wouldn't be possible to insert new variables into the rendered view (because it has already been sent off). \n. I think the after_action is executed after the view as been rendered and sent off to the browser. Therefore it wouldn't be possible to insert new variables into the rendered view (because it has already been sent off). \n. ",
    "jankowy": "Thanks!\n. Thanks!\n. ",
    "jalkoby": "I've changed it to next:\nruby\nGon.merge_variable(name, value)\nGon.push(data, :merge)\n. I've changed it to next:\nruby\nGon.merge_variable(name, value)\nGon.push(data, :merge)\n. ",
    "passion8": "Yes, It is. And, the expected response should be the function i guess rather then undefined.  isn't it  happening with you ? \nLittle bit of background, we are using turbolinks (with rails 4) , i have included this in our body \n= include_gon(:namespace => 'gt')\ndue to the nature of turbolinks. \n. oh yea. it does. \nI wasn't aware of the code so I am not exactly fully aware of the problem and its scope. Tomorrow is sundae..I will have a look on it and see what I can do.  \nLooking at hight level i think we need to pass the namespace variable to those functions. That can be done easily. Since, with render_data method you are already rendering the javascript variable. We can just assign that variable to those javascript function. \n. Yes, It is. And, the expected response should be the function i guess rather then undefined.  isn't it  happening with you ? \nLittle bit of background, we are using turbolinks (with rails 4) , i have included this in our body \n= include_gon(:namespace => 'gt')\ndue to the nature of turbolinks. \n. oh yea. it does. \nI wasn't aware of the code so I am not exactly fully aware of the problem and its scope. Tomorrow is sundae..I will have a look on it and see what I can do.  \nLooking at hight level i think we need to pass the namespace variable to those functions. That can be done easily. Since, with render_data method you are already rendering the javascript variable. We can just assign that variable to those javascript function. \n. ",
    "mojovski": "are there any news on this? gon.watch is also undefined in my case.\n. are there any news on this? gon.watch is also undefined in my case.\n. ",
    "YanivRan": "gon.watch is still unaware and doesn't work when you use namespace. \n. @Alagaesia93, not sure how is that related?\n. gon.watch is still unaware and doesn't work when you use namespace. \n. @Alagaesia93, not sure how is that related?\n. ",
    "Alagaesia93": "In my ajax success callback I've updated gon.variable = ajax_result_parsed. It works! :)\n. In my ajax success callback I've updated gon.variable = ajax_result_parsed. It works! :)\n. ",
    "jastkand": "I guess the problem can happen because turbolinks only perform reloading of body tag content. So this code <%= include_gon %> in you layout will only be performed the first time the page is been loaded. As a solution you can put this <%= include_gon %> to the end of your layout file before closing body tag.\n. I guess the problem can happen because turbolinks only perform reloading of body tag content. So this code <%= include_gon %> in you layout will only be performed the first time the page is been loaded. As a solution you can put this <%= include_gon %> to the end of your layout file before closing body tag.\n. ",
    "deepeeess": "I had the same issue, I can confirm that moving <%= include_gon %> to the end of the layout file before the closing body tag fixed my problem.\n. I had the same issue, I can confirm that moving <%= include_gon %> to the end of the layout file before the closing body tag fixed my problem.\n. ",
    "mr-dxdy": "@jastkand Thank you, it works :+1: \n. @jastkand Thank you, it works :+1: \n. ",
    "DSKonstantin": "@jastkand  Thanks men!\n. @jastkand  Thanks men!\n. ",
    "ylecuyer": "There is a sample app : http://s000.tinyupload.com/index.php?file_id=51122105514226965471\n. There is a sample app : http://s000.tinyupload.com/index.php?file_id=51122105514226965471\n. ",
    "vegetabill": "I'm having the same issue with jbuilder. I assume the controller is defined slightly different when mocked out during functional tests in rails.\nDid you ever reproduce the issue?\n. I'm having the same issue with jbuilder. I assume the controller is defined slightly different when mocked out during functional tests in rails.\nDid you ever reproduce the issue?\n. ",
    "kirs": "Maybe we can point out in README that render_data can be called with some args\n. Maybe we can point out in README that render_data can be called with some args\n. ",
    "fbernier": "My bad, I went too quickly. Thanks!\n. Yes, this I what I meant. It is indeed quite clear it should be doing what you just described once you read the usage section correctly, but the I believe the short description you just gave could be worthy of being included somewhere.\n. My bad, I went too quickly. Thanks!\n. Yes, this I what I meant. It is indeed quite clear it should be doing what you just described once you read the usage section correctly, but the I believe the short description you just gave could be worthy of being included somewhere.\n. ",
    "BenSwennen": "@gazay I added the following in my gemfile, did a bundle install, but still getting the error\nruby\ngem 'gon', :git => \"git://github.com/gazay/gon.git\", :branch => \"master\"\n. I did.\n. Ok, that fixes it! Thanks for the quick help!\n. @gazay I added the following in my gemfile, did a bundle install, but still getting the error\nruby\ngem 'gon', :git => \"git://github.com/gazay/gon.git\", :branch => \"master\"\n. I did.\n. Ok, that fixes it! Thanks for the quick help!\n. ",
    "petermumford": "I'm also getting this error and its also related to using sub-views - api/v1/topics/index - however when I try including the helper in the controller I'm still getting the same error.\n. I'm also getting this error and its also related to using sub-views - api/v1/topics/index - however when I try including the helper in the controller I'm still getting the same error.\n. ",
    "aka001": "@gazay Okay got it. Thanks.\n. @gazay Okay got it. Thanks.\n. ",
    "pablougas": "I am running into a similar issue...\n. A little frustrating but all I did was add <%= include_gon %> on the top of that specific view and it worked. No idea why but I'll take it. \n. I am running into a similar issue...\n. A little frustrating but all I did was add <%= include_gon %> on the top of that specific view and it worked. No idea why but I'll take it. \n. ",
    "ai": "Any updates?\n. Wait for release\n. Any updates?\n. Wait for release\n. ",
    "june29": "Thank you for your response!\nCan you see this problem on your environment? If you can, please try it.\n. Oh, I found out a new fact. In our Rails app context, OpenStruct class includes some Modules.\npry(Gon::Base)> OpenStruct.ancestors\n=> [OpenStruct,\n Object,\n Sprockets::Rails::Helper,\n ActionView::Helpers::AssetTagHelper,\n ActionView::Helpers::TagHelper,\n ActionView::Helpers::OutputSafetyHelper,\n ActionView::Helpers::CaptureHelper,\n ActionView::Helpers::AssetUrlHelper,\n Minitest::Expectations,\n Metaclass::ObjectMethods,\n Mocha::ObjectMethods,\n PP::ObjectMixin,\n Delayed::MessageSending,\n ActiveSupport::Dependencies::Loadable,\n JSON::Ext::Generator::GeneratorMethods::Object,\n Kernel,\n BasicObject]\n. Thank you merging :grinning:\n. Thank you for your response!\nCan you see this problem on your environment? If you can, please try it.\n. Oh, I found out a new fact. In our Rails app context, OpenStruct class includes some Modules.\npry(Gon::Base)> OpenStruct.ancestors\n=> [OpenStruct,\n Object,\n Sprockets::Rails::Helper,\n ActionView::Helpers::AssetTagHelper,\n ActionView::Helpers::TagHelper,\n ActionView::Helpers::OutputSafetyHelper,\n ActionView::Helpers::CaptureHelper,\n ActionView::Helpers::AssetUrlHelper,\n Minitest::Expectations,\n Metaclass::ObjectMethods,\n Mocha::ObjectMethods,\n PP::ObjectMixin,\n Delayed::MessageSending,\n ActiveSupport::Dependencies::Loadable,\n JSON::Ext::Generator::GeneratorMethods::Object,\n Kernel,\n BasicObject]\n. Thank you merging :grinning:\n. ",
    "raisty": "Still facing this problem, even when renaming gon.env to gon.enviro. Have you idea what can be problem?. You are absolutely true. The problem is with public method named current_user. Still facing this problem, even when renaming gon.env to gon.enviro. Have you idea what can be problem?. You are absolutely true. The problem is with public method named current_user. ",
    "dekhaus": "Hi\nThanks for the informative response - I really appreciate the time you took to respond.\nI've re-evaluated my requirements and solved my issue without using gon - but rather, by using periodic ajax calls.\nThanks Again\nDave\n. Hi\nThanks for the informative response - I really appreciate the time you took to respond.\nI've re-evaluated my requirements and solved my issue without using gon - but rather, by using periodic ajax calls.\nThanks Again\nDave\n. ",
    "pravi": "@taki3 can you add this information to README? Something like this \"We follow semantic versioning\". @taki3 can you add this information to README? Something like this \"We follow semantic versioning\". ",
    "kfarst": "@koxta19 did you make sure to pass it an interval to check it and a function to call when the Ruby variable is updated?\ngon.watch('foo', { interval: 1000 }, updateView);\nThen in the updateView function:\nfunction updateView (newVal) {\n  $('name_of_css_selector').text(newVal);\n}\n. @koxta19 did you make sure to pass it an interval to check it and a function to call when the Ruby variable is updated?\ngon.watch('foo', { interval: 1000 }, updateView);\nThen in the updateView function:\nfunction updateView (newVal) {\n  $('name_of_css_selector').text(newVal);\n}\n. ",
    "justuseapen": "Have any workable solutions emerged on this issue?. Have any workable solutions emerged on this issue?. ",
    "gopeter": "Disregard, this was a problem with my spec_helper.\n. Disregard, this was a problem with my spec_helper.\n. ",
    "amandameng": "@gopeter \nHi, how do you set up your spec_helper? I can't puts Gon.all_variables in my feature test file.. @gopeter \nHi, how do you set up your spec_helper? I can't puts Gon.all_variables in my feature test file.. ",
    "jsnick": "@gazay , When is this gem deployed for including this issue ?\nNow, rails 5 has been released and I use it and still gon, too.\nSo deprecation warning about env pops out whenever gon is executed!\nit bother me.. T^T\n. @gazay , When is this gem deployed for including this issue ?\nNow, rails 5 has been released and I use it and still gon, too.\nSo deprecation warning about env pops out whenever gon is executed!\nit bother me.. T^T\n. ",
    "fro": "same question on stackoverflow\n. same question on stackoverflow\n. ",
    "nazrulcse": "I have tried both include_gon(:init => true) and include_gon, But no luck.\n. -- layouts/application.html.erb\n.....................\n\n  <%= include_gon(:init => true) %>\n  <%#= Gon::Base.render_data %>\n  <%= stylesheet_link_tag \"application\" %>\n...........................\nError backtrace:\nmulti_json (1.0.0) lib/multi_json.rb:70:in encode'\ngon (6.0.1) lib/gon/json_dumper.rb:4:indump'\ngon (6.0.1) lib/gon/base.rb:94:in to_json'\ngon (6.0.1) lib/gon/base.rb:78:inrender_variable'\ngon (6.0.1) lib/gon/base.rb:52:in block in formatted_data'\ngon (6.0.1) lib/gon/base.rb:52:ineach'\ngon (6.0.1) lib/gon/base.rb:52:in map'\ngon (6.0.1) lib/gon/base.rb:52:informatted_data'\ngon (6.0.1) lib/gon/base.rb:24:in render_data'\ngon (6.0.1) lib/gon/helpers.rb:5:ininclude_gon'\napp/views/layouts/application.html.erb:10:in _app_views_layouts_application_html_erb__2280899776954861753_70034632619520'\nactionview (4.2.6) lib/action_view/template.rb:145:inblock in render'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:in block in instrument'\nactivesupport (4.2.6) lib/active_support/notifications/instrumenter.rb:20:ininstrument'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:in instrument'\nactionview (4.2.6) lib/action_view/template.rb:333:ininstrument'\nactionview (4.2.6) lib/action_view/template.rb:143:in render'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiling_methods.rb:102:inblock in profile_method'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:66:in render_with_layout'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:52:inrender_template'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:14:in render'\nactionview (4.2.6) lib/action_view/renderer/renderer.rb:46:inrender_template'\nactionview (4.2.6) lib/action_view/renderer/renderer.rb:27:in render'\nactionview (4.2.6) lib/action_view/rendering.rb:100:in_render_template'\nactionpack (4.2.6) lib/action_controller/metal/streaming.rb:217:in _render_template'\nactionview (4.2.6) lib/action_view/rendering.rb:83:inrender_to_body'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:32:in render_to_body'\nactionpack (4.2.6) lib/action_controller/metal/renderers.rb:37:inrender_to_body'\nactionpack (4.2.6) lib/abstract_controller/rendering.rb:25:in render'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:16:inrender'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:44:in block (2 levels) in render'\nactivesupport (4.2.6) lib/active_support/core_ext/benchmark.rb:12:inblock in ms'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/benchmark.rb:294:in realtime'\nactivesupport (4.2.6) lib/active_support/core_ext/benchmark.rb:12:inms'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:44:in block in render'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:87:incleanup_view_runtime'\nactiverecord (4.2.6) lib/active_record/railties/controller_runtime.rb:25:in cleanup_view_runtime'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:43:inrender'\nactionpack (4.2.6) lib/action_controller/metal/implicit_render.rb:10:in default_render'\nactionpack (4.2.6) lib/action_controller/metal/implicit_render.rb:5:insend_action'\nactionpack (4.2.6) lib/abstract_controller/base.rb:198:in process_action'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:10:inprocess_action'\nactionpack (4.2.6) lib/abstract_controller/callbacks.rb:20:in block in process_action'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:117:incall'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:117:in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:555:inblock (2 levels) in compile'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:505:in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:505:incall'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:92:in __run_callbacks__'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:778:in_run_process_action_callbacks'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:81:inrun_callbacks'\nactionpack (4.2.6) lib/abstract_controller/callbacks.rb:19:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/rescue.rb:29:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:32:inblock in process_action'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:inblock in instrument'\nactivesupport (4.2.6) lib/active_support/notifications/instrumenter.rb:20:ininstrument'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:ininstrument'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:30:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/params_wrapper.rb:250:inprocess_action'\nactiverecord (4.2.6) lib/active_record/railties/controller_runtime.rb:18:inprocess_action'\nactionpack (4.2.6) lib/abstract_controller/base.rb:137:inprocess'\nactionview (4.2.6) lib/action_view/rendering.rb:30:inprocess'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiling_methods.rb:102:inblock in profile_method'\nactionpack (4.2.6) lib/action_controller/metal.rb:196:indispatch'\nactionpack (4.2.6) lib/action_controller/metal/rack_delegation.rb:13:indispatch'\nactionpack (4.2.6) lib/action_controller/metal.rb:237:inblock in action'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:74:incall'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:74:indispatch'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:43:inserve'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:43:inblock in serve'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:30:ineach'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:30:inserve'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:817:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/strategy.rb:177:incall!'\nomniauth (1.1.0) lib/omniauth/strategy.rb:157:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/strategy.rb:177:incall!'\nomniauth (1.1.0) lib/omniauth/strategy.rb:157:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/builder.rb:48:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/agent_hooks.rb:30:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/browser_monitoring.rb:32:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/developer_mode.rb:48:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nwarden (1.2.6) lib/warden/manager.rb:35:inblock in call'\nwarden (1.2.6) lib/warden/manager.rb:34:incatch'\nwarden (1.2.6) lib/warden/manager.rb:34:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/etag.rb:24:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/conditionalget.rb:25:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/head.rb:13:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/params_parser.rb:27:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/flash.rb:260:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/session/abstract/id.rb:225:incontext'\nrack (1.6.4) lib/rack/session/abstract/id.rb:220:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/cookies.rb:560:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactiverecord (4.2.6) lib/active_record/query_cache.rb:36:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactiverecord (4.2.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:653:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/callbacks.rb:29:inblock in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:88:in**run_callbacks**'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:778:in_run_call_callbacks'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:81:inrun_callbacks'\nactionpack (4.2.6) lib/action_dispatch/middleware/callbacks.rb:27:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/reloader.rb:73:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/remote_ip.rb:78:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nairbrake (4.3.8) lib/airbrake/rails/middleware.rb:13:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/debug_exceptions.rb:17:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/show_exceptions.rb:30:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrailties (4.2.6) lib/rails/rack/logger.rb:38:incall_app'\nrailties (4.2.6) lib/rails/rack/logger.rb:20:inblock in call'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:68:inblock in tagged'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:26:intagged'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:68:intagged'\nrailties (4.2.6) lib/rails/rack/logger.rb:20:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrequest_store (1.3.1) lib/request_store/middleware.rb:9:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/request_id.rb:21:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/methodoverride.rb:22:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/runtime.rb:18:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactivesupport (4.2.6) lib/active_support/cache/strategy/local_cache_middleware.rb:28:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/lock.rb:17:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/sendfile.rb:113:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nairbrake (4.3.8) lib/airbrake/user_informer.rb:16:in_call'\nairbrake (4.3.8) lib/airbrake/user_informer.rb:12:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiler.rb:278:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrailties (4.2.6) lib/rails/engine.rb:518:incall'\nrailties (4.2.6) lib/rails/application.rb:165:incall'\nrailties (4.2.6) lib/rails/railtie.rb:194:inpublic_send'\nrailties (4.2.6) lib/rails/railtie.rb:194:inmethod_missing'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/lock.rb:17:incall'\nrack (1.6.4) lib/rack/content_length.rb:15:incall'\nrack (1.6.4) lib/rack/handler/webrick.rb:88:inservice'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/httpserver.rb:138:inservice'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/httpserver.rb:94:inrun'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/server.rb:295:inblock in start_thread'\n. Hi @gazay any update from here :)\n. I have tried both include_gon(:init => true) and include_gon, But no luck.\n. -- layouts/application.html.erb\n.....................\n\n  <%= include_gon(:init => true) %>\n  <%#= Gon::Base.render_data %>\n  <%= stylesheet_link_tag \"application\" %>\n...........................\nError backtrace:\nmulti_json (1.0.0) lib/multi_json.rb:70:in encode'\ngon (6.0.1) lib/gon/json_dumper.rb:4:indump'\ngon (6.0.1) lib/gon/base.rb:94:in to_json'\ngon (6.0.1) lib/gon/base.rb:78:inrender_variable'\ngon (6.0.1) lib/gon/base.rb:52:in block in formatted_data'\ngon (6.0.1) lib/gon/base.rb:52:ineach'\ngon (6.0.1) lib/gon/base.rb:52:in map'\ngon (6.0.1) lib/gon/base.rb:52:informatted_data'\ngon (6.0.1) lib/gon/base.rb:24:in render_data'\ngon (6.0.1) lib/gon/helpers.rb:5:ininclude_gon'\napp/views/layouts/application.html.erb:10:in _app_views_layouts_application_html_erb__2280899776954861753_70034632619520'\nactionview (4.2.6) lib/action_view/template.rb:145:inblock in render'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:in block in instrument'\nactivesupport (4.2.6) lib/active_support/notifications/instrumenter.rb:20:ininstrument'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:in instrument'\nactionview (4.2.6) lib/action_view/template.rb:333:ininstrument'\nactionview (4.2.6) lib/action_view/template.rb:143:in render'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiling_methods.rb:102:inblock in profile_method'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:66:in render_with_layout'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:52:inrender_template'\nactionview (4.2.6) lib/action_view/renderer/template_renderer.rb:14:in render'\nactionview (4.2.6) lib/action_view/renderer/renderer.rb:46:inrender_template'\nactionview (4.2.6) lib/action_view/renderer/renderer.rb:27:in render'\nactionview (4.2.6) lib/action_view/rendering.rb:100:in_render_template'\nactionpack (4.2.6) lib/action_controller/metal/streaming.rb:217:in _render_template'\nactionview (4.2.6) lib/action_view/rendering.rb:83:inrender_to_body'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:32:in render_to_body'\nactionpack (4.2.6) lib/action_controller/metal/renderers.rb:37:inrender_to_body'\nactionpack (4.2.6) lib/abstract_controller/rendering.rb:25:in render'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:16:inrender'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:44:in block (2 levels) in render'\nactivesupport (4.2.6) lib/active_support/core_ext/benchmark.rb:12:inblock in ms'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/benchmark.rb:294:in realtime'\nactivesupport (4.2.6) lib/active_support/core_ext/benchmark.rb:12:inms'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:44:in block in render'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:87:incleanup_view_runtime'\nactiverecord (4.2.6) lib/active_record/railties/controller_runtime.rb:25:in cleanup_view_runtime'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:43:inrender'\nactionpack (4.2.6) lib/action_controller/metal/implicit_render.rb:10:in default_render'\nactionpack (4.2.6) lib/action_controller/metal/implicit_render.rb:5:insend_action'\nactionpack (4.2.6) lib/abstract_controller/base.rb:198:in process_action'\nactionpack (4.2.6) lib/action_controller/metal/rendering.rb:10:inprocess_action'\nactionpack (4.2.6) lib/abstract_controller/callbacks.rb:20:in block in process_action'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:117:incall'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:117:in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:555:inblock (2 levels) in compile'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:505:in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:505:incall'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:92:in __run_callbacks__'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:778:in_run_process_action_callbacks'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:81:inrun_callbacks'\nactionpack (4.2.6) lib/abstract_controller/callbacks.rb:19:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/rescue.rb:29:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:32:inblock in process_action'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:inblock in instrument'\nactivesupport (4.2.6) lib/active_support/notifications/instrumenter.rb:20:ininstrument'\nactivesupport (4.2.6) lib/active_support/notifications.rb:164:ininstrument'\nactionpack (4.2.6) lib/action_controller/metal/instrumentation.rb:30:inprocess_action'\nactionpack (4.2.6) lib/action_controller/metal/params_wrapper.rb:250:inprocess_action'\nactiverecord (4.2.6) lib/active_record/railties/controller_runtime.rb:18:inprocess_action'\nactionpack (4.2.6) lib/abstract_controller/base.rb:137:inprocess'\nactionview (4.2.6) lib/action_view/rendering.rb:30:inprocess'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiling_methods.rb:102:inblock in profile_method'\nactionpack (4.2.6) lib/action_controller/metal.rb:196:indispatch'\nactionpack (4.2.6) lib/action_controller/metal/rack_delegation.rb:13:indispatch'\nactionpack (4.2.6) lib/action_controller/metal.rb:237:inblock in action'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:74:incall'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:74:indispatch'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:43:inserve'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:43:inblock in serve'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:30:ineach'\nactionpack (4.2.6) lib/action_dispatch/journey/router.rb:30:inserve'\nactionpack (4.2.6) lib/action_dispatch/routing/route_set.rb:817:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/strategy.rb:177:incall!'\nomniauth (1.1.0) lib/omniauth/strategy.rb:157:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/strategy.rb:177:incall!'\nomniauth (1.1.0) lib/omniauth/strategy.rb:157:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nomniauth (1.1.0) lib/omniauth/builder.rb:48:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/agent_hooks.rb:30:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/browser_monitoring.rb:32:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/rack/developer_mode.rb:48:intraced_call'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nwarden (1.2.6) lib/warden/manager.rb:35:inblock in call'\nwarden (1.2.6) lib/warden/manager.rb:34:incatch'\nwarden (1.2.6) lib/warden/manager.rb:34:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/etag.rb:24:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/conditionalget.rb:25:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/head.rb:13:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/params_parser.rb:27:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/flash.rb:260:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/session/abstract/id.rb:225:incontext'\nrack (1.6.4) lib/rack/session/abstract/id.rb:220:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/cookies.rb:560:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactiverecord (4.2.6) lib/active_record/query_cache.rb:36:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactiverecord (4.2.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:653:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/callbacks.rb:29:inblock in call'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:88:in**run_callbacks**'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:778:in_run_call_callbacks'\nactivesupport (4.2.6) lib/active_support/callbacks.rb:81:inrun_callbacks'\nactionpack (4.2.6) lib/action_dispatch/middleware/callbacks.rb:27:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/reloader.rb:73:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/remote_ip.rb:78:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nairbrake (4.3.8) lib/airbrake/rails/middleware.rb:13:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/debug_exceptions.rb:17:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/show_exceptions.rb:30:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrailties (4.2.6) lib/rails/rack/logger.rb:38:incall_app'\nrailties (4.2.6) lib/rails/rack/logger.rb:20:inblock in call'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:68:inblock in tagged'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:26:intagged'\nactivesupport (4.2.6) lib/active_support/tagged_logging.rb:68:intagged'\nrailties (4.2.6) lib/rails/rack/logger.rb:20:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrequest_store (1.3.1) lib/request_store/middleware.rb:9:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactionpack (4.2.6) lib/action_dispatch/middleware/request_id.rb:21:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/methodoverride.rb:22:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/runtime.rb:18:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nactivesupport (4.2.6) lib/active_support/cache/strategy/local_cache_middleware.rb:28:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/lock.rb:17:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/sendfile.rb:113:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nairbrake (4.3.8) lib/airbrake/user_informer.rb:16:in_call'\nairbrake (4.3.8) lib/airbrake/user_informer.rb:12:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack-mini-profiler (0.10.1) lib/mini_profiler/profiler.rb:278:incall'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrailties (4.2.6) lib/rails/engine.rb:518:incall'\nrailties (4.2.6) lib/rails/application.rb:165:incall'\nrailties (4.2.6) lib/rails/railtie.rb:194:inpublic_send'\nrailties (4.2.6) lib/rails/railtie.rb:194:inmethod_missing'\nnewrelic_rpm (3.16.2.321) lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:incall'\nrack (1.6.4) lib/rack/lock.rb:17:incall'\nrack (1.6.4) lib/rack/content_length.rb:15:incall'\nrack (1.6.4) lib/rack/handler/webrick.rb:88:inservice'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/httpserver.rb:138:inservice'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/httpserver.rb:94:inrun'\n/home/nazrul/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/webrick/server.rb:295:inblock in start_thread'\n. Hi @gazay any update from here :)\n. ",
    "etagwerker": "I'm proposing a solution like this:\njavascript\n  performAjax = function() {\n    var xhr;\n    xhr = $.ajax({\n      type: options.type || 'GET',\n      url: options.url,\n      data: {\n        _method: options.method,\n        gon_return_variable: true,\n        gon_watched_variable: name\n      }\n    });\n    return xhr.done(callback).fail(errorCallback);\n  };\nAnd then:\njavascript\ngon.watch = function(name, possibleOptions, possibleCallback, errorCallback) {\n  var callback, errorCallback, key, options, performAjax, timer, value, _base, _ref;\n  if (typeof $ === \"undefined\" || $ === null) {\n    return;\n  }\n  ...\n. @gazay Sure, I can work on this. \n. I'm proposing a solution like this:\njavascript\n  performAjax = function() {\n    var xhr;\n    xhr = $.ajax({\n      type: options.type || 'GET',\n      url: options.url,\n      data: {\n        _method: options.method,\n        gon_return_variable: true,\n        gon_watched_variable: name\n      }\n    });\n    return xhr.done(callback).fail(errorCallback);\n  };\nAnd then:\njavascript\ngon.watch = function(name, possibleOptions, possibleCallback, errorCallback) {\n  var callback, errorCallback, key, options, performAjax, timer, value, _base, _ref;\n  if (typeof $ === \"undefined\" || $ === null) {\n    return;\n  }\n  ...\n. @gazay Sure, I can work on this. \n. ",
    "ironsand": "Thanks for quick reply.\nSorry, it's hard for me to create a project that reproduces the behavior. I just uploaded my project here. https://github.com/ironsand/tangocho\nI think it's small enough.. The error occurs in development mode at root path.\nMaybe it's only in my environments.\nI'm using macOS Sierra 10.12.1, Chrome 54.0.2840.98(64-bit).\nI open the page by Chrome secret mode to avoid being affected Add-ons.\nI'll try it another environments later.. Sorry, I was busy and couldn't take time for check this issue. After updating the project to rails 5 there is no error anymore. So I close this issue. Thanks.. Thanks for quick reply.\nSorry, it's hard for me to create a project that reproduces the behavior. I just uploaded my project here. https://github.com/ironsand/tangocho\nI think it's small enough.. The error occurs in development mode at root path.\nMaybe it's only in my environments.\nI'm using macOS Sierra 10.12.1, Chrome 54.0.2840.98(64-bit).\nI open the page by Chrome secret mode to avoid being affected Add-ons.\nI'll try it another environments later.. Sorry, I was busy and couldn't take time for check this issue. After updating the project to rails 5 there is no error anymore. So I close this issue. Thanks.. ",
    "p12y": "If I remember correctly, you can use global variables for this. For example, Gon.global.variable = '1234'.. If I remember correctly, you can use global variables for this. For example, Gon.global.variable = '1234'.. ",
    "bhaveshf-cuelogic": "@raisty : You must be having some public method named current_user somewhere in your code. Are you using devise gem ?. @raisty : You must be having some public method named current_user somewhere in your code. Are you using devise gem ?. ",
    "jaswinder-trantor": "I fixed it by uninstalling a gem json and reinstalling it. I fixed it by uninstalling a gem json and reinstalling it. ",
    "vlazar": "@gazay Wow, thank you, that was quick!. @gazay Wow, thank you, that was quick!. ",
    "amorimlucas": "I just needed to restart my server.. I just needed to restart my server.. ",
    "franzliedke": "Judging by the failing tests, this commit in rabl-rails seems to be the problem.. Not sure if there are any other problems with rabl-rails, but this does fix the tests ;). Judging by the failing tests, this commit in rabl-rails seems to be the problem.. Not sure if there are any other problems with rabl-rails, but this does fix the tests ;). "
}