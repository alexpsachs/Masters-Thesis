{
    "JetFault": "sorry for hijacking this, but @limonte is there a reason Issues are disabled for this repo?\n. ",
    "limonte": "@JetFault issues are enabled now, thanks.\n. @Sontan \u0421\u043f\u0430\u0441\u0438\u0431\u043e :)\n. @pomartel Thank you!\n. Great, thanks for your help!\n. @prateekvarma can you please show me some code. How you're using sweetalert2 and is there any errors in console? \n. @andyharney thanks for helping!\n. @UnJavaScripter thanks!\n. In you case SweetAlert2 can be used this way: http://jsfiddle.net/dhd97qgf/\n. Can you please give an example of using SA2 when custom HTML isn't working as expected. \n. You should use SA2 like this:\njs\nswal({  title: 'Confirm?',\n        html:   '<textarea class=\"form-control\" id=\"notes\" placeholder=\"Notes\"></textarea>',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n    },\n    function() {\n        alert('other ajax stuff');\n    }\n);\nHere's the example from the documentation:\njs\nswal({\n            title: 'HTML example',\n            html:\n              'You can use <b>bold text</b>, ' +\n              '<a href=\"//github.com\">links</a> ' +\n              'and other HTML tags'\n        });\n. I'm not sure how to implement this. Which bahaviour of gray overlay you're expecting - to fill only parent element?\n. Sorry, but your case is pretty custom. You can fork SA2 and add that functionality to forked version of SA2.\n. @IvoPereira take a look at https://github.com/limonte/sweetalert2/commit/e141f58c230d70552886267a01b86ed0033a76ac\nThere's you can find the simple example of adding new params to SA2 and processing them in setParameters() method.\n. Yeah, you're right. You will need to refactor plugin to accept parameters before initialization. Not simple task, as I sensed :)\n. @NitinMaaraj done in https://github.com/limonte/sweetalert2/releases/tag/v0.2.1\nhttps://github.com/limonte/sweetalert2/commit/e141f58c230d70552886267a01b86ed0033a76ac\nhttps://github.com/limonte/sweetalert2/commit/c46126a608b4e493f42f46dc832620efd95a5de3\n. Yes, that's how SA and SA2 working, won't be changed.\n. Just pushed https://github.com/limonte/sweetalert2/commit/1d3521e639ef1577c25688d9a24b2ebf46856965, take a look :)\n. Fixed, thank you @NitinMaaraj !\nhttps://github.com/limonte/sweetalert2/commit/97513fbf2846858cd138262ed633feb24d26dd0c\n. Sure it is :)\njs\nswal({\n  title: 'Product added to cart!',\n  html: '<a href=\"#\" onclick=\"swal.closeModal(); return false;\">I want more Checkout</a>',\n  timer: 10000,\n  showConfirmButton: false\n});\n. Glad it works for your projects! :+1: \n. Sorry, can't help you. SA2 wasn't designed for complicated cases like yours.\n. I personally don't like much logic in popup forms. Popup modal just not designed for big forms. With simple forms SA2 already works fine.\n. Hi @olitomas, I think that swal2 can do what you want. Please provide the case where you need onOpen parameter.\n. @olitomas no need in new parameter :)\nhttps://jsfiddle.net/limon/70aoLLnj/\n. RTFM https://i.imgur.com/hBi0W4W.png\nhttps://sweetalert2.github.io/\n. @dylanh724 done in v0.2.2\nhttps://github.com/limonte/sweetalert2/commit/3101489965b96857324478710b60302301c4391d\nThanks :+1: \n. @maeishoj I don't think you can change some value in the modal after standard button click. Only way to do this is to use custom buttons by using html parameter.\n. this example can be helpful for you:\n\n. Unfortunately no, but you can always use setTimeout() to init SummerNote textarea after swal2 modal window initialization.\n. This isn't related to swal2. You can implement timeout manually.\n. by reading manual about setTimeout() JS method ;)\n. I personally can't see the benefit of using rem in this particular case. Can you please add more info about WHY you want rem support, e.g. which problem it solves? Thank you.\n. @toadkicker After a little bit reading about rem, your suggestion makes sense for me. Can you please make pull request so we can test and discuss this feature. Thank you!\n. transform: scale() can do the same as rem units\n. I'm re-opening this issue after 2.5 years. Sometimes it takes time to understand fundamental things.. Hi @MattJLeach!\nPlease do! I'm trying to make this project as much community-driven as possible. Every PR is very very welcome :beers: . I made it! After more than 2 years here's the release with rem support: https://github.com/sweetalert2/sweetalert2/releases/tag/v7.5.0\nPlease check it out and give your feedback.. Thanks for reporting @KnowMoreIT! Could you please attach the code as well so I can reproduce the issue?. @KnowMoreIT I just pushed the patch release v7.5.1 with fix for the gap between actions (buttons) and the content, check it out.\nCould you please help me to figure out what happened to the font-size? For some reason it looks smaller on your first screenshot then on the second one. It should be the same, so you have non-default base font-size in your browser?. > I know that this has just been merged and released, but this wreaks havoc when the root font size has been set to anything other than 100%.\n\nA better option here might have been to use em with a higher element given an rem factor. This way it is easy to override the base value with one css setting.\nThis argument is laid out in this article and when to use rem and em.\nI wholeheartedly agree that allowing for accessibility is vital, I just think that perhaps it hasn't been achieved in the best way here.\n\nMany thanks @acurrieclark for your feedback and accept apologies for wreaking havoc.\nI'll release the next version today in which I'll:\n\nset the font-size: 1rem on the popup itself\nchange rem to em for all children. @acurrieclark please check out https://github.com/sweetalert2/sweetalert2/releases/tag/v7.6.0 :tada:. Hello @ThomHurks and thank you for reporting!\n\nI added !default to all SASS variables in v7.7.0\nAlso, take a look on the related issue which might help you: https://github.com/sweetalert2/sweetalert2/issues/834#issuecomment-359237178. Good news everyone! The oldest SweetAlert2 issue can be closed now!\nSweetAlert2 is fully flexible and customizable now :tada:\nThere are 2 ways to customize the base font-size of SweetAlert2 popup:\n1. Plain CSS way\ncss\n.swal2-popup {\n  font-size: 1.25rem !important;\n}\n\nlive demo https://jsfiddle.net/ad3quksn/726/embedded/result/\njsfiddle https://jsfiddle.net/ad3quksn/726/\n\n2. Overriding $swal2-font-size SASS variable\n```scss\n$swal2-font-size: 1.2rem;\n@import './node_modules/sweetalert2/src/sweetalert2.scss';\n```\n\nlive demo https://sweetalert2.github.io/sweetalert2-parcel-demo/dist/\nsource code https://github.com/sweetalert2/sweetalert2-parcel-demo. That file is not mentioned to use locally. Example directory is for project webpage: https://sweetalert2.github.io/\n\nIf you look in source you will see what to do:\n\n. http://stackoverflow.com/a/27842854/1331425\n. Can't reproduce this bug. Please specify steps to reprodyce so I can fix it or send pull request :)\n. @crabbly :+1: \n. thank you @coot !\n. @SuperSeb92  implemented in v0.2.3\n. Thank you for contrubution, @dubbe ! Merged and released in v0.2.4 \n. @angeltcho did you hear about code indentation? Please edit your code example so it can be readable, thanks.\n. @angeltcho thank you, on which line do you have Console will return \"$ is not a function\" exception?\n. thank you @crabbly for jsfiddle!\n. @dubbe great! and thanks for bumping gulp-sass :) :+1: \n. https://github.com/limonte/sweetalert2/releases/tag/v0.2.6\n. Thank you @nerdmed !\n. https://github.com/limonte/sweetalert2/releases/tag/v0.2.7\n. When you click the button on the demo page that button gets a focus and click event. Click event cause modal opening. When you close the modal window focus will be returned to the button. And when you hit enter it cause click event on button by default.\nSo it's not a bug :)\n. reproduce that issue with https://jsfiddle.net/  so I can look into it, thanks\n. Thank you for the really great fiddle which is helped me to resolve this issue!\n. https://github.com/sweetalert2/sweetalert2/releases/tag/v0.2.8\n. You should read and understand what are callbacks in JS: http://dreamerslab.com/blog/en/javascript-callbacks/\nTLDR: return  swal(\u2026) will always return undefined BEFORE function (isConfirm) { \u2026 } is even called. So you need to refactor you app to work correctly with swal2 callback.\n. @paschalidi RTFM.\n@birjolaxew don't waste your precious time answering such low-quality questions.\n. Thanks for using swal2, but image uploading functionality is pretty project-specific. I'd like to keep swal2 simple and easy to use.\n. not swal2 related question.\n. Great PR, thank you @coot!\n. https://github.com/limonte/sweetalert2/releases/tag/v0.2.9\n. reproduce the issue with https://jsfiddle.net/ so I can look into it, thanks\n. thank you in advance @andreiculda for your efforts\n. That bug was fixed here: https://github.com/limonte/sweetalert2/issues/40\nYou need to update swal2 to latest.\nI updated your example, you can see it working now: https://jsfiddle.net/0j7drxtd/20/ \n. http://stackoverflow.com/a/27842854/1331425\n. @Systho done, thx for your suggestion.\n. Nope. The original plugin still has many PRs and issues without any feedback. Last activity was on Oct 21, 2015 so I think it's better to keep both plugins.\n. I don't think so. Original swal plugin became more complex in structure than it should be. Code simplicity allows other swal2 users to contribute easily.\n. Thank you @Rogacz667! this bug is fixed now (https://github.com/limonte/sweetalert2/commit/4142e803ab50e69e449962001baa787ffae2686c)\n. https://github.com/limonte/sweetalert2/releases/tag/v0.2.10\n. I want to keep swal2 as simple as possible. \nYou can always implement custom buttons by using html parameter:\nswal({   \n  title: 'Custom buttons',   \n  html: 'Lorem ipsum <hr><button>Return to editing</button> <button>Discard</button> <button>Save</button>', \n  showConfirmButton: false \n});\n. Unfortunately, the sweetalert2 plugin wasn't designed from beginning for N buttons and it's the complex task to refactor it to support N buttons.\n\nI don't particularly see this use case as one that is applicable to the vast majority of our users\n\nI think so too. For small percentage of use-cases we will increase the plugin complexity twice or even more. \n@seiyria if you need 3 or more buttons you should either use the hacky solution mentioned by @acupajoe or choose another plugin.\n. Can you please reproduce this issue with https://jsfiddle.net/ so I can look into it, thanks\n. This bug is resolved in latest release. Thanks @CSWilson for the report!\n. Thank you @johanwilfer for this contribution.\nOn first sight looks good for me, let me test changes before merge :)\n. Great work :+1: \n. https://github.com/limonte/sweetalert2/releases/tag/v0.3.0\n. Thanks @dylanh724 for submitting the issue! Can you please add screenshot of actual and expected states.\n. Thank you, @johanwilfer for fixing swal2! My bad during class renaming :/\nPS. I don't think this is related to #49 or #50 \n. the best place to submit this issue https://github.com/patrickml/swal/\n. Done in https://github.com/limonte/sweetalert2/releases/tag/v0.3.3\nCallback is called now on click outside the modal. isConfirm will be undefined.\n. https://github.com/cdnjs/cdnjs/issues/7120\n. http://www.jsdelivr.com/projects/sweetalert2\n. Update(June 2018):  There's a better way now:\nswal({\n  title: 'Maxlength', \n  input: 'text',\n  inputAttributes: {\n    maxlength: 32\n  }\n})\nLive demo: https://jsfiddle.net/ad3quksn/1642/\nThe answer below is still supported, but outdated:\n\nYou can do whatever you want within the html parameter:\nswal({\n  title: 'Maxlength', \n  html: '<p><input id=\"input-field\" maxlength=\"32\">'\n});\n. Thank you again @canfiax for the another great suggestion!\nDone https://github.com/limonte/sweetalert2/releases/tag/v0.4.1\nconfirmButtonClass: 'btn btn-primary',\nbuttonsStyling: false,\n. @kennyhyun \n\nHow can I disable buttonsStyling\n\njs\nswal({\n  text: 'Any fool can use a computer',\n  buttonsStyling: false\n})\n\nIs there any global configurations?\n\njs\nswal.setDefauls({buttonsStyling: false});\nswal('Any fool can use a computer')\n. https://github.com/jsdelivr/jsdelivr/pull/10278\n. http://www.jsdelivr.com/projects/sweetalert2\n. https://github.com/limonte/sweetalert2/releases/tag/v0.4.0\nThanks @canfiax!\n. Nice request @DieguitoBueno !\nDone https://github.com/limonte/sweetalert2/releases/tag/v0.4.2\nUse reverseButtons parameter, set it to true to swap buttons.\n. @canfiax if I understand your request correctly, you're looking for swal.setDefaults()\n. @canfiax great! :) I added missing note about that function to docs: https://github.com/limonte/sweetalert2/commit/2454f6947598d6024a0a6da48959ca36e08f645f\n. Fixed in https://github.com/limonte/sweetalert2/releases/tag/v0.4.3\nYour reports are very useful! \nswal2 celebrates 200 commits! :cake: \n. Thanks @believer-ufa  for reporting this issue! It's related to https://github.com/limonte/sweetalert2/issues/56\nOutside click now triggers callback function, \nisConfirm in callback function will be:\n- true if OK button was clicked\n- false if Cancel button was clicked\n- undefined in case of outside click.\nI fixed examples in documention.\n. thanks for contributing @crabbly but I can't merge this PR. loadingMessage() is the method that related to your project, not to this plugin. In other words it's too custom, I want to keep this plugin as simple as possible.\n. Thanks @sebhildebrandt for opening this issue!\nDone: https://www.npmjs.com/package/sweetalert2\n. Thanks @AucT for reporting this! Fixed!\n. When you're using external content, beside imageUrl specify imageHeight to fix vertical centering.\n. Yes, it's possible.\n. @quma Nope. All you need to make what you need is here: https://sweetalert2.github.io/\nBut I won't do your homework, mate ;)\n. Thank you @tombusby for submitting this issue!\nFixed in https://github.com/limonte/sweetalert2/releases/tag/v0.4.5\n. There's no support for this currently in swal2, please feel free to contribute!\nPS. in future, please preview your posts and fix mistakes and markdown styling before posting.\n. This project is open source, you can get an answer to your question by looking into swal2 source code.\n. I'm not familiar to Meteor. Contributions are welcome!\n. https://github.com/patrickml/swal/\n. Meteor 1.3 now have direct support for npm packages, https://npmjs.com/package/sweetalert2\n. I have no idea which libraries you're using beside swal2.\nIn future issues please try to reproduce issues by using jsfiddle.\n. what is validation button?\n. As I can see buttons are centered corectly. Can you please make jsfiddle with this issue?\n. reopen when you make jsfiddle example\n. @jkjha can you please format the code example so it can be readable for humans? :)\n. You're using swal2 plugin, not original swal\nHTML was introduced here before it was in swal and there's a difference in usage. Instead of\njavascript\ntext: \"<input type='checkbox' name='vehicle' value='Bike'>\",\nhtml: true\nyou shoud use\njavascript\nhtml: \"<input type='checkbox' name='vehicle' value='Bike'>\",\n. Hi @jkjha I have an update here. I added input: 'checkbox' parameter in swal2 to make modal window wich checkbox. Take a look at example: http://sweetalert2.github.io/#checkbox \n. You can't use swal2 this way.\nThis may help: http://stackoverflow.com/a/6451266/1331425\n. May be this can help you https://github.com/oitozero/ngSweetAlert\n. All custom fucntionality could be done by using html parameter and project-related JS scripts.\n. Thank you @grandnasty for submitting this issue!\nDone in v1.0.1\nPlease pay attention to breaking change in v1.0.0 before updating swal2 to v1.0.1\n. can you please reproduce this issue in jsfillde?\n. This issue most probably related to v1.0.0 release which have a breaking change - from now swal2 is using promise instead of callback:\nFrom v1.0.0 your case should be changed from:\njavascript\nswal({\n  ...\n}, function() {\nto\njavascript\nswal({\n  ...\n}).then(function() {\nPS. let's use English on GitHub :) \n. Thank you @maxicms for reporting this!\nI finally succeed to reproduce this issue and fixed it in v1.0.5\n. https://github.com/t4t5/sweetalert/issues. Hi @smolleyes !\nThanks for submitting this issue! After some thinking I'm still not sure if this functionality really needed in swal2. Could you please describe your use case so I can better understand it.\nPersonally, as user, I'd rather not to have loop of popups. In Chrome for example you have prevent this page from creating additional dialogs checkbox when page creates two or more alerts one after another:\n\n. reopen if needed\n. > Doing it with HTML not work property with onclick\nI'm using swal2 custom HTML modals with onclick handlers on my projects projects and all works fine.\nToo custom to be in swal2 by default.\n. Hi @PawelGIX !\nThank you for this feature request, I thought about it before.\nAdded in v1.2.0\n. Thank you @rokpok  for reporting this issue!\nFixed in 1.2.1\n. Nicely done @jbdemonte, thank you!\n. 1.2.2\n. Thank you @TCastelein for submitting this issue!\nI think it's the same bug as in #93 \nUpdate swal2 to latest and try again.\n. I'm not sure I can help you to fix this issue. Any help would be much appreciated.\n. Thank you @chrisnoden for reporting this issue!\nFixed in v1.3.1\n. Thank you @fracz for reporting this issue!\nFixed in v1.3.1\n. Thank you @holmes1491 for suggesting this!\nDone in v1.3.2\nTake a look at the \"Custom HTML description and buttons\" example here https://sweetalert2.github.io/\n. https://github.com/limonte/sweetalert2/releases/tag/v1.0.0\n. Good news everyone!\nSwal2 now supports input and select types, your example: https://jsfiddle.net/47L0mf97/2/\nInput example: http://sweetalert2.github.io/#input-field\nSelect box example: http://sweetalert2.github.io/#select-box\n. @esetnik this issue is related to the modal with input (JS prompt() alternative). You are trying to disable submitting of JS alert() alternative which is different from native alert() behaviour.\n. https://github.com/limonte/sweetalert2#browser-compatibility\n. Thank you @cormip for reporting this. I released v2.0.0 with preConfirm parameter which solves your issue. Take a look on the AJAX request example, it should help in your case.\n. Fixed now, please update swal2 to latest.\nThanks @johanwilfer  for submitting this issue and sorry for the delayed response.\n. Thanks @alfiyan28 for submitting this! I personally can't notice the difference in speed between swal and swal2. Can you please provide some measurements so I can check this issue more accurate.\n. I'm closing this issue due to inactivity. @alfiyan28 please reopen it when you'll have measurements.\n. default color of which element you want to change?\n. No, it's not a Bootstrap.\nTo use styling from Foundation6 you can do this:\njs\nconfirmButtonClass: '<Foundation6 classes>',\nbuttonsStyling: false,\nRealted issue: https://github.com/limonte/sweetalert2/issues/59\n. Hi @senseluo! Any luck on this issue? \nI'm not enough familiar with node/npm, in order to help I need to ask you to describe more detailed your environment and how can I reproduce this issue.\n. Thank you in advance @Tonkpils!\n. @Tonkpils \n\nis there any reason for exporting things like swalClasses to the window? I have a proof of concept for this using ES6/babel but not adding a lot of those things to the window.\nI'm working on a different approach without ES6/babel but I figured I would ask if it's absolutely necessarily to have those things added onto the root\n\nNo, it's not necessarily to have swalClasses in window. I'll be happy to see a solution without adding that variable to the root.\n\nAlso any reason we're depending on that particular version of es6-promise-polyfill instead of the more popular one es6-promise or rsvp.js?\n\nAlso, there's no reason to use strictly es6-promise-polyfill. If more popular plugins do the same, I'd like to change that dep.\n. I just released v3.0.0\n. @Tonkpils \n\nAlso any reason we're depending on that particular version of es6-promise-polyfill instead of the more popular one es6-promise or rsvp.js? \n\nSwitched to es6-promise: https://github.com/limonte/sweetalert2/commit/b7a6a0dec56323c5de4342e907f00e5290d8f3ac\n. IMHO not related to this issue: modal inside modal - what a hell of UI :)\nAll modal on the attached screenshot are centered. Can you please specify what exactly isn't centered. JSfillde with example will be nice. \n. reopen if needed\n. Hi @danferreira! In swal2 there's preConfirm parameter which can be set to function which returns Promise. Take a look on AJAX example: http://sweetalert2.github.io/#ajax-request\n. > Edit: in the ajax example of your site, you make your calls in preconfirm I guess, but it is called before inputvalidator.\nGood point, inputValidator should be called before preConfirm. I'll change this.\n. Done in v2.2.0\nTake a look on the updated example: http://sweetalert2.github.io/#ajax-request\n. Hi @danferreira ! You can now :) I just published v2.2.11:\njs\nswal({\n  ...\n  preConfirm: function(value) {\n    return new Promise(function(resolve) {\n      // use value here\n    });\n  },\n  ...\n})\n. Thank you @seiyria!\n. @seiyria no need, I'll do that :)\n. Currently I don't know how to implement multiple inputs and not to complicate plugin source code too much. So, my answer is: this feature most probably won't be added in swal2.\nFor now you can make multiple inputs by using html parameter and custom JS code in preConfirm parameters for validating and getting value of all inputs.\nI added an example with multiple inputs, take a look: https://sweetalert2.github.io/#multiple-inputs\nUseful and undocumented for now trick: inside preConfirm you can pass your custom result to resolve() method and it will override value returned in swal2 promise.\nPS. update swal2 to latest on your project before testing multiple inputs.\n. Hi @rafael-renan-pacheco! Thanks for suggesting this!\nDone in v2.2.10\n. Too custom to be in plugin source code. You can blur (unfocus) a button like this:\njs\nswal({\n   ...\n}).then(function() {\n  $(button).blur()\n});\n. https://github.com/typings/registry/issues/404\n. \nThank you @ninjaonsafari for suggesting this!\n. I personally don't like the idea of multiple alerts one after another. Can you please give me a real example where do you need multiple alerts?\n. I'm still not happy with the idea of multiple alerts one after another. This behaviour looks spammy for me and I don't want it in this plugin. Feel free to fork swal2 and implement it by yourself :)\n. Good news @KHam0425! :)\nSWAL2 now supports modals queue: https://sweetalert2.github.io/#chaining-modals\n. From the Bower documentation for main section:\n\nDo not include minified files.\n. Thank you @WLepelaar!\n\nv2.2.13\n. It's working: https://jsfiddle.net/limon/n4evc7jv/\n. @manojsinghrwt any luck?\n. No need in new parameter :)\nhttps://jsfiddle.net/limon/70aoLLnj/\n. @Tonkpils you are very welcome!\n. Thank for good questions @KHam0425! \n\nWhat sort of features/enhancements are in the pipeline, or what bugs need fixed?\n\nAll issues to be fixed, features to be discussed/implemented are here: sweetalert2/issues\n\nIn short, what are you looking for from collaborators in the short term?\n- taking part in issues/features discussion\n- if I'm inactive for month or more, publishing new releases after adding new features or fixing bugs.\n. @samturrell \n\n. @jdcrensh hello old contributor and welcome aboard! :) \n. @KHam0425 let me see that PR, then I'll make a decision :)\n. you're very welcome @acupajoe!\n. thank you all guys, swal2 is now totally safe if I suddenly disappear :)\n. Welcome to the team @toverux!. Dear @Tonkpils, @acupajoe, @birjolaxew, and @toverux!\n\nCould you please make accounts on npmjs.com so I can add you to sweetalert2 collaborators there. After this you will be able to update sweetalert2 npm package.. BTW, I made the commit with mentioning all your names in package.json and bower.json.\nThank you so much for helping on SweetAlert2 development, we are so ahead of the original plugin now :rocket:  \nHappy holidays to you :christmas_tree: :santa: and all the best in New Year!. > I've just created my account on npm (under the username toverux).\nAdded :+1: \n\nCreated birjolaxew on NPM\n\nAdded :+1: \n\nI presume it's not sorcery (based on my experience with Packagist), but could you eventually write a little development guide for the contributors? Conventions about code, git, how you're publishing, etc.\n\nNot much actually to say :)\n\nCoding style: I just added https://github.com/sweetalert2/sweetalert2/commit/8c5a8f1292a3d8a71eb4d5fec4384268aab3d3f1 which covers it automatically.\nContributing guide is in the README: https://github.com/sweetalert2/sweetalert2#contributing\nPublishing\nBower grabs new versions automatically from Git tags (releases) \nfor npm there's an automatic releasing: https://github.com/sweetalert2/sweetalert2/commit/c9a027c465b42c2335e353f0f2cde555c149def2 so if I suddenly disappear it will continue to work. And if something will happen to my npm account you will need to generate a new key and put it to the Travis config. Read more about npm releasing: https://docs.travis-ci.com/user/deployment/npm/. Thank you so much @Tonkpils! Let me up to 24h to educate myself a little bit more about ES6 and Babel and leave comments on your PR.\n\nNicely done at first sight! \n. @Tonkpils I know that changes you made in https://github.com/limonte/sweetalert2/pull/131/commits/015412e87b4cdc3c62f304b157f17b3cc305a289 are needed in dev environment. But if we merge that commit swal2 github pages will stop working.\n. I expected more changed lines, but you're @Tonkpils rock! With small changes in code you added modules support! \nPlease remove https://github.com/limonte/sweetalert2/pull/131/commits/015412e87b4cdc3c62f304b157f17b3cc305a289 from this PR and we're ready to merge and publish v3.0.0 :)\n. @Tonkpils \n\nwe could make it so it works for both GH and dev. I see that in GH pages things are symlinked from example out. Could we instead move out the index.html and reference the correct file paths?\n\nDone in https://github.com/limonte/sweetalert2/commit/898c6c200f085f439f4c355d34144ecc951247d3\n. I agree with you @mumairali about margins. Added in v3.0.1\nThank you for reporting this!\n. Hi @rafael-renan-pacheco! I'm trying to make sense of your request, could you please make the jsfiddle with your case?\n. This request is too custom to be a parameter. Your case could be done with this piece of code: \njs\nswal({\n  ...\n}).then(function(isConfirm) {\n  if (!isConfirm) {\n    document.activeElement.blur();\n  }\n});\nhttp://stackoverflow.com/a/21551843/1331425\n. @Tonkpils \n\nI think what he means is he doesn't want the dropdown box to be selected again when the alert is canceled.\n\nYes, that dropdown box is selected after closing swal2 because of it got focus. If we remove focus from it by using document.activeElement.blur(), dropdown won't be visible (untested, but I believe it works so).\n. I just checked Bootstrap modal http://getbootstrap.com/javascript/#modals and it behaves the same way as swal2, i.e. focus modal returns focus to the launching element and there's no option to change this behavior.\n. Piece of code which I provided should work. Let's stop with discussion. Reopen with jsfiddle please :)\n. Thank you @blazeworx for nice words. Swal2 is An awesome replacement for JavaScript's popup boxes. Your feature request doesn't seem link JavaScript's popup box so my answer is: no, this most probably won't be implemented.\nAll custom functionality like additional buttons could be done by using html parameter and custom JS handlers.\n. @mumairali could you please make jsfiddle which shows this issue?\n. I can't reproduce this issue, most probably it's up to your project-related code.\n. Shalom @ilaif ! Can you please make jsfiddle (here's an example) with code you're using so I can reproduce this bug and fix it.\n. http://stackoverflow.com/q/37287148/1331425\n. https://github.com/scottjehl/Device-Bugs/issues/70\n. >  I just woke up, so that probably doesn't make sense.\n:laughing: \n\nWhat if you autofocus the input element in the alert when it opens\n\nNice suggestion, I'll do that.\n. > What if you autofocus the input element in the alert when it opens\nautofocus for iOS isn't available (google \"ios modal input autofocus\").\n. @frankenstein-uk still no clean solution without hacks with changing overflow and calculation margin-top\n. @frankenstein-uk \n\nI think it's up to iOS developers to fix this\n\nI agree with you and that's why I'm not hurrying to fix this issue by hacky solutions.\n\nI will keep looking for the solution, in case I find it, I will let you know.\n\nThank you.\n. This issue is moving to #302\n. You are correct, callback was completely replaced by promise in v1.0.0\n. Can't reproduce. Please make jsfiddle and reopen.\n. Thank you @samturrell for this PR! I'll leave some comments on your code :)\n. @samturrell Terrific! Thank you!\n. Why do we need native fallbacks?\n. @XSupermanX I don't want IE9 support. \nIE9 users should suffer.\n \n. There won't be full, partial, unofficial or any other kind of IE9 support in swal2. I mean it.\nIE9 should die and with trying to partially support it, we're slowing down the evolution of the Internet.\n. Thank you @samturrell for this contribution! Looks good, but this PR is pretty big, in future please make smaller PRs :) Give me some time to test your code and understand it.\n. @Tonkpils your opinoin on this PR will be very useful.\n. I have no idea why Github marks my comment above as \"commented on an outdated diff\" :)\nPR is really huge (+3,692 \u22121,130 changed lines), it takes about 6-7 seconds to render file changed tab for me. Maybe that is the reason.\n. Great job @samturrell! :+1: :+1: :+1: \nI'm ready to merge this PR after green light from @Tonkpils as he is the author of module specific code :)\n. @Tonkpils let us now if you have any comment on this PR, thanks!\n. @samturrell https://github.com/limonte/sweetalert2/releases/tag/v3.1.0\n. @samturrell I'm a little bit late with this question but can you please explane why do we need dist/sweetalert2.min.js.gz?\n. Sorry @yeomann but this PR has too many mistakes. In future please make PRs with changes only in code which is related to the issue you're trying to fix.\n. @Tonkpils you're right :+1: \n. @yeomann even with 2nd commit doesn't work on my iPad (iOS 9.3, Chrome/Safari). You can test it by yourself on https://sweetalert2.github.io/\n. @yeomann I temporarily reverted https://sweetalert2.github.io/ to stable, let me know when you'll be ready to test your PR, so I can enable it again on https://sweetalert2.github.io/\n. Thanks for the gif @yeomann ! As you can see, on focusout event page below the modal is scrolled to the top, which is unexpected behavior.\n. @yeomann The main problem in iOS for me is that user after interaction with the modal isn't there where he was at the moment of launching swal2, \nExample: there's a pretty large page with height 2000px with the button which launches swal2 modal with the input field. The button is placed in the footer, i.e. at the bottom of the page.\nCurrently, after user's interaction with modal, the page will  be automatically scrolled to the middle of the page. This is incorrect iOS behaviour.\nWith your PR we're getting the same problem - after user's interaction with modal, he is not anymore at the same scroll position. But instead of autoscrolling to the middle, the page will be scrolled to the top.\nWe have not solved the main problem with this code. \n. Thank you, @yeomann! I really appreciate your effort on this issue.\n. I'm closing this PR due to inactivity. @yeomann reopen if needed. \n. Thank you @Tonkpils for filling me in on this issue. I can't reproduce this bug either (Chrome latest).\n. Thank you @samturrell for filling me in, I really appreciate it.\n. From the Bower documentation for main section:\n\nDo not include minified files.\n\nMinified, not compiled. I think dist/sweetalert2.js is what we need in bower.json:\nhttps://github.com/limonte/sweetalert2/pull/152/files\n. Great!\n. Wow! I'm very grateful to you @samturrell for this PR! This is the best refactoring PR on this project. \n. v3.2.0\n. Hi @samturrell ! \nI fixed most JS coding style errors in https://github.com/limonte/sweetalert2/commit/bc24ada5e183511731a627a6148c9e7e2a7f8481\nAlso, I added gulp-eslint to automate JS validation in https://github.com/limonte/sweetalert2/commit/e0b89e450b2be1bd71c47be7c57213231338513b \nBut I'm still not enough familiar with modules and not sure how to fix these:\n\n. @samturrell nicely done!\n. Fixed in https://github.com/limonte/sweetalert2/commit/e95bd5dd578f2db10d2a7693a3510e40efba1379#diff-eacf331f0ffc35d4b482f1d15a887d3bR1127\n. @samturrell \n\nSounds like a good idea. May not be so easy to enforce on a public contributions standpoint though, but as a collaborator i'm happy to abide by it.\n\nLovely!\n\nMight be worth marking them as binary files in a .gitattributes file so that their diff doesn't show up rather than not committing them at all?\n\nGreat suggestion, as always :) I haven't succeed with .gitattributes, but there's another way, see https://github.com/limonte/sweetalert2/pull/149/files\n@Tonkpils \n\nI agree, I don't think contributors should be committing changes on distributions unless we're cutting a new release. \n\nAll of us agreed :+1: \n\nOn that note, it would be great if we formalized a release process so that we're not cutting out new versions on every PR merge.\n\nGood point, this is my first popular open-source project and I'll do some reading about releasing process. All suggestions are very welcome here. \n. @samturrell @Tonkpils leave your thoughts on this approach, thank you.\n. Nice request @Silvester20! \nSomething like this: https://jsfiddle.net/cqxywxaL/2/ ? :)\n. I think we're done here :) Reopen if needed @Silvester20 \n. fixed in https://github.com/limonte/sweetalert2/commit/c5044fda2eb749f7d97716ab0aaa498fff264e8f\n. closes https://github.com/limonte/sweetalert2/issues/145\n. Thank you @gouhary for reporting this issue! Should be fixed now, can you please check once again.\n. I think we're done here, @gouhary  reopen if needed\n. possible duplicate of https://github.com/limonte/sweetalert2/issues/25\njsfiddle with scaled modal: https://jsfiddle.net/1drfdqg7/\n. The only way, as far as I know, to scale the whole modal with icons is transform: scale(), but if you have a better idea, I'd like to see your PR :)\n. >  With a bit of jquery\n:)\nI totally agree with @samturrell - all additional styling should be outside the plugin.\n. Any description here? Give us an example where you can't achieve what you want without these callbacks.\n. Which datepicker plugin are you using?\n. Works perfectly without onInit and onOpen: https://jsfiddle.net/1drfdqg7/1/\n. Thanks anyway, further users can google this PR and see my jsfiddle :)\n. there are now onOpen and onClose parameters\n. native Promise object doesn't have finally() method:\n\nWhy then() doesn't work for you and you need finally()?\n. Hi @hellsan631 !\nI read your comment several times and I'm still not sure why exactly you need finally() :)\nWhat you want is\njs\nreturn swal({\n  ...\n})\n.finally(() => {\n  // notify any event subscribers that the modal has closed\n});\nThis can be done with\njs\nreturn swal({\n  ...\n})\n.then(() => {\n  // notify any event subscribers that the modal has closed\n});\nSwal2 for historical reasons doesn't use reject. Instead of it, there's the parameter in then() handler which is named isConfirm in most examples. \nIn other words then() handler will be called in both 'confirm' and 'cancel' cases, so it's practically the same as finally() in AngularJS.\n. I just added the example of chaining modals: https://sweetalert2.github.io/#chaining-modals and you can see that finally() was used there.\nAll I need to make it works is adding <script src=\"https://cdn.jsdelivr.net/promise.prototype.finally/1.0.1/finally.js\"></script>. \n. I believe you're using src/sweetalert2.js. Instead of it, you should use dist/sweetalert2.js or dist/sweetalert2.min.js\n. Nice suggestion @essivision! I'll implement showLoaderOnConfirm parameter.\n. Done in v3.3.4, take a look at this example: https://sweetalert2.github.io/#ajax-request\n. Hi @emilkje! Could you please show your code with closeOnConfirm parameter so I can suggest you how to change it to work with swal2?\n. > I'm sure it could be achieved with the preConfirm hook\nExactly. preConfirm is the nicer replacement for closeOnConfirm parameter.\n\nbut that seems better suited to validation type events.\n\nNot exactly true. For the validation there's inputValidator which is called before preConfirm.\nI'm not sure if we need that old closeOnConfirm parameter from the original swal plugin.\n@Tonkpils @jdcrensh  what do you think?\n. @emilkje I just released swal2 with modals chaining support (swal.queue([Array])), take a look on this example, it should be exactly what you need :)\n. Hope I helped you :)\n. Related to https://github.com/limonte/sweetalert2/pull/149\n. @samturrell thanks for helping me out with this :) Actually two answers helped me - one which you mentioned and http://stackoverflow.com/a/12288918/1331425\n. There's no need in reverting this parameter, #160 can be solved without it: https://sweetalert2.github.io/#chaining-modals\n. I just watched screencasts on Laracasts about Vue.js and it's awesome!\nHere's my opinion:\n- swal2 should be dependency-free. Currently there's 1 dep - es6-polyfill which is used only if IE support is needed and theoretically can be removed after IE death :)\n- swal2 should not be based on any JS framework. There's a ton of frameworks now. Today's trend is Vue.js, tomorrow there will be another \"cool\" framework :)\n- rebuilding small modal window plugin to work on any framework smells like over-engineering to me.\nSo, my vote goes against rebuilding on any JS framework.\n. No doubt for me, it's better and smarter to use classes instead of parameters. But programming skills of swal2 users are varied. Take a look on stackoverflow.com/questions/tagged/sweetalert, there're so many questions from absolute beginners :) \nLet's leave these params for beginners. Experienced users always can stylize swal2 modal by using classes.\n. Most probably you're getting this exception in IE.\nFor IE support Promise polyfill should be included beside sweetalert2.js:\nhtml\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js\"></script>\n. > But \"OK\" button and background click event not working in IE 11.\nAs I can see all works fine in IE11. Probably it's up to your environment.\n. Hi @macpham and thank you for reporting this! Should be fixed in latest version.\n. > At \"https://sweetalert2.github.io/\", check the email example at the \"INPUT TYPES\" section and you will see what's wrong.\nI don't see anything wrong, can you please specify your bug-report :)\n. Oh, thanks! Sure, it should be if (email). Fixed now.\n. Done: https://sweetalert2.github.io/#input-file\n. Fixed in latest, thanks @AmitMY for reporting this!\n. Oh, sorry. I forgot to bump version for npm. Should be fine now, please check once again :)\n. Done: https://sweetalert2.github.io/#radio-inputs\n. @AmitMY first of all, thank you for all suggestion you submitted for swal2! \nAutomated tool most probably won't be implemented, but I just created Wiki page: https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2\nYou can contribute to it :)\n. I just added info about input: https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#3-modal-with-input-field\nThank you! \n. Can't reproduce in Linux/Chrome and OSX/Safari. Most probably this issue is up to your environment.\n. Can you please create JSFiddle?\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n. I don't think this tool should be included in swal2 dist.\nMost probably it doesn't cover all differences in plugins and it's undocumented.\n. Yes, it's proper Promise but for historical reasons confirm and cancel buttons are calling resolve(isConfirm)\nisConfirm will be:\n- true for \"Confirm\"-button\n- false for \"Cancel\"-button\n- undefined for Esc press, close button or outside click\n. How should swal2 handle the Esc button press, close button or outside click according to your suggestion?\n. Thank you @AmitMY for standing for you point, I probably have to agree with you and make this breaking change :)\nPlease give your opinion about this structure:\n``` js\nswal({\n  ...\n}).then(function(result) {\n  // handle confirm, result is needed for modals with input\n}, function(dismiss) {\n  // dismiss can be \"cancel\" | \"close\" | \"outside\"\n});\n```\ncc @samturrell @Tonkpils @jdcrensh \n. Here we go v4.0.0\n. Thank you @hartjo for this request, now you can use reject() inside the preConfirm() parameter: https://sweetalert2.github.io/#ajax-request\n. Hi @rafael-renan-pacheco ! I don't know at this moment how to suppress Uncaught (in promise) error messages in browser console.\n. @acupajoe thanks for the suggestion, but with your code users won't be able to handle modal dismiss. Take a look on https://sweetalert2.github.io/#dismiss-handle\n. I'm not sure how to implement this idea, can you please create PR? Thank you @acupajoe !\n. @samturrell I implemented your suggestion in v4.0.6 \nhttps://jsfiddle.net/limon/2ya7akjq/\nThank you Sam, with your help we finally found the solution for this issue.\n. @rafael-renan-pacheco as to me, this issue can be closed as there's most probably no better solution.\n. Starting from v5.3.3 .done() is DEPRECATED and will be removed in next major release. Use .catch(swal.noop) instead.\n. There was the bug with setFocus() which is solved now, check https://sweetalert2.github.io/#input-field\nAs to the new allowSpaceKey parameter, I'm not sure I want it as it changing native browser behavoiur.\n. https://jsfiddle.net/g5ng6bys/\n. there's reverseButtons parameter\n. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue. Thank you!\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\nAlso, please specify the expected and the actual behaviour of swal2.\n. Oh, I forgot to add that in migration guide, here it is: https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#4-custom-html-in-the-title-and-description\nPay attention to different ways of using html parameter in swal and swal2. Custom HTML functionality was implemented in swal2 before original swal.\n. duplicate of https://github.com/limonte/sweetalert2/pull/155 ?\n. You're right @acupajoe, I'll merge this PR after some amends. I'll comment lines which should be changed.\n. I'll do these small amends by myself, thank you @acupajoe!\n. https://github.com/limonte/sweetalert2/releases/tag/v4.0.5\n. Thank you @acupajoe for this PR! Seems good to me, let me a couple of hours to test it on iPad.\nOne thing - please exclude all changes in dist/* files from PR (see https://github.com/limonte/sweetalert2/issues/148)\n. @acupajoe I merged this code to gh-pages branch to test, you can check it by yourself here https://sweetalert2.github.io/\nUnfortunately, on my iPad (iOS 9.3) we're still having the same bug.\n. @acupajoe I'm not sure how can we apply that answer to this issue.\n. @carter-thaxton thanks for confirming! I have the same result.\n. duplicate of https://github.com/limonte/sweetalert2/issues/177\n. starting from v4.0.6 you can fix this issue this way: https://jsfiddle.net/limon/2ya7akjq/ \n. ### https://github.com/limonte/sweetalert2#handling-dismissals\n. agree with @samturrell :+1: \n@kalpitpandit please provide more details about your case.\n. @kalpitpandit reopen if needed\n. This can't be done with swal2 at its current state. You have to found a workaround for your case, e.g. preloading templates.\n. nice trick @acupajoe!\n. can anyone confirm this issue? I can't reproduce it on Android smartphone and on iPad.\n. yeah, I can see it now. Thank you @quma, I'll try to fix this.\n. Fixed in v4.0.8\n. Thank you @orangecoding for reporting this issue.\nUnfortunately, it's already open https://github.com/limonte/sweetalert2/issues/177 and I don't know how to fix it :/\n. starting from v4.0.6 you can fix this issue this way: https://jsfiddle.net/limon/2ya7akjq/ \n. ### https://github.com/limonte/sweetalert2#handling-dismissals\n. @simplenotezy upgrade to the latest version. https://jsfiddle.net/limon/83o9p48k/\n. https://sweetalert2.github.io/#ajax-request\n. https://sweetalert2.github.io/#ajax-request\n. No, preConfirm is an optional parameter. Please take a look on https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2 \n. @ryanmortier thanks for separating this issue, I'm working on it right now :)\n. Done in v4.0.6\n. I'm closing this issue due to inactivity, reopen if needed.\n. swal2 works perfectly with webpack, I just made the demo: \nsweetalert2-webpack-demo\n. @sibelius done, thx!\n. Why are you using two plugins for modal dialogs at the same time?\n. You're doing it wrong. Use alertify js for both popup form and alert messages. \n. Thank you @chipmunkgeek for such detailed bug-report! :+1: :+1: \nFixed in v4.0.7\n. Can't reproduce in latest Chrome both in Win10 and Ubuntu\n. https://jsfiddle.net/limon/w1yvhnjk/\n. You're clear and I understand what you want to perform. I can see now what you mean, I'm facing the same 'Firefox prevented this site from opening a pop-up window' message. Unfortunately, I don't know how to fix this and my personal opinion - you're doing it wrong, window.open() shouldn't be in the cancel button handler.\n. The only one solution that I can suppose is to use custom buttons by passing them to the html parameter.\n. @acupajoe nice trick :)\n. I don't think so.\n. For iOS 7 you need to include Promise polyfill:\n<script src=\"bower_components/es6-promise/promise.min.js\"></script>\n. Thank you @joshuabremer for this contribution, but no, swal2 won't support IE9.\nRelated issue: https://github.com/limonte/sweetalert2/issues/140\n. https://jsfiddle.net/1drfdqg7/1/\n. There's inputValue parameter which you can use for setting the initial value of a select: https://jsfiddle.net/L87xem1y/1/\n. Thank you @vieraleonel for reporting this issue!\nFixed in v4.0.9\n. Thank you @thepenguin1 for reporting this but it looks like we can't do anything with this Safari-related issue, http://stackoverflow.com/a/16676279/1331425\n. Thank you @oli-laban for reporting this issue! Fixed in v4.0.10\n. Thank you @samturrell, but I have done this a little bit nicer - TDD + using of modern elem.classList: https://github.com/limonte/sweetalert2/commit/44e875c79059322821916ebaefaa43cd2d2c9c9a\n. If you want to supress uncaught reject exceptions, just add .done() to swal() call:\njs\nswal(\u2026).then(\u2026).done();\nor\njs\nswal(\u2026).done();\nSee the example: https://jsfiddle.net/limon/ad3quksn/\n. Related issue: https://github.com/limonte/sweetalert2/issues/177\n. @alex-shamshurin in future please try not to copy-paste paragraphs of text but to explain the issue (actual and expected results, how to reproduce the issue, jsfiddle).\n. Can you please make the jsfiddle?\n. Starting from v5.3.3 .done() is DEPRECATED and will be removed in next major release. Use .catch(swal.noop) instead.\n. Thank you @ZakariaRidouh \n. can anybody reproduce this issue? I can't in both Chrome and Firefox (Linux).\n\n. Something strange here, I just tested in all Windows browsers and still can't reproduce this :cry: \n:beer: for anyone who can fix this invisible for me issue\n. Nice research @samturrell! You're awesome, as always.\n. Countdown functionality most probably won't be implemented to swal2, you should do it by yourself for your project.\n. Related SO question: http://stackoverflow.com/q/38466760/1331425\n. @samturrell yeah, inserting a new input will fix this issue for sure.\n. IE10+ means IE10+, not IE10+ with partial IE9 support.\nRelated issue: https://github.com/limonte/sweetalert2/issues/140\n. Thanks @acupajoe :+1: \n. Thank you @Tklaversma for reporting this, fixed in v4.0.12\n. Duplicate of https://github.com/limonte/sweetalert2/issues/207\n. Thank you @ebuckley ! I just released v4.0.13\n. js\nswal({\n  title: 'Auto close alert!',\n  text: 'I will close in 2 seconds.',\n  timer:2000,\n}).then(\n  function() {\n    // Confirm button clicked \n  },\n  function(dismiss) {\n    if (dismiss === 'timer') {\n      // handle close by timer\n    }\n  }\n).catch(swal.noop);\n. I personally don't see what's wrong with the ability to scroll the body when a modal is shown. Can you please explain why do you think it's bad? \n. I'm closing this issue due to inactivity, reopen with argumentation why body scrolling is bad (and without the description of your emotions :wink:) if needed.\n. I just added swal.disableConfirmButton()/swal.enableConfirmButton() and released v4.0.14.\nI can't help you with AngularJS implementation as this project isn't related to any framework.\n. The largest (in chars count) issue report for now, but I really don't understand what you're asking about.\n. > should we create a Stackoverflow tag for Sweetalert for tracking actual coding requests?\nsweetalert tag already exists on SO: http://stackoverflow.com/questions/tagged/sweetalert , I subscribed to all these questions and help sometimes if I can:\n- http://stackoverflow.com/a/38086157/1331425\n- http://stackoverflow.com/a/37795106/1331425\n- http://stackoverflow.com/a/37682082/1331425\n. > in the future I will ask users to create a stackoverflow question in these cases\nThanks! I think it would be nice to inform contributors about StackOverflow before submitting issues: https://github.com/sweetalert2/sweetalert2/pull/230\n. If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then submit it to StackOverflow instead of GitHub, and make sure you added sweetalert tag to the question.\n. Thank you @simo9000!\n. Hi @jayelkaake ! \n\nI ran into an issue that was making so that pressing the spacebar within input in my swal was submitting the modal\n\nCan you please make jsfiddle that demonstrates this issue.\n. Thank you @jayelkaake for such a detailed feedback!\nThis issue is fixed without introducing an additional parameter in v4.0.16\n. @simo9000 I like this improvement! :+1: \nGo forward with tests and docs.\n. Thank you @simo9000 for the great PR!\nTake a look at your editor/IDE settings, it looks like it added UTF8 BOM symbol to the index.html, http://stackoverflow.com/q/38699172/1331425\n. not true\n\n. https://github.com/limonte/sweetalert2/releases/tag/v4.1.1\n. Nice suggestion, we'll try to add the input type number after (or in scope of) merging https://github.com/limonte/sweetalert2/tree/feature/multiple-inputs\n. Wow, I didn't expect that this issue will get so many emoji reactions :)\nDone in v4.2.5\n. Win10/IE11. \nI just created the new Win10/IE11 VM and yes, I can confirm this issue. The worst part if this issue is that it's happenings in 50% of cases, i.e. if I'm closing modal 10 times, 5 will be ok and other 5 will be with this strange animation issue. \n. Thank you so much @birjolaxew for this PR! :beers: :+1: \n. @birjolaxew I really like your contributions to swal2 package. Would you like to become the collaborator? #130 \n. @simo9000 looks good for me :+1: please go ahead with tests and docs.\n. Thank you @simo9000 for adding docs and tests. Could you please figure out why tests are failing?\n. Nicely done @simo9000 ! :beers: \n. @birjolaxew perfectly done! v4.1.3\n. \n. In my opinion reverseButtons parameter is related to the order of buttons in the modal, it should not change default focused button.\nIf anyone of collaborators thinks I'm wrong, feel free to reopen this issue.\n. > would it be an acceptable option to add a new parameter for reversing/changing default focused button?\nI just looked for similar issues on t4t5/sweetalert and there are some, so I should agree with you and add that parameter, even if I personally don't see how it can be useful :)\nI'm planning to make it this way focusCancel: boolean - what do you think @birjolaxew ?\n. Done in v4.1.6\n. @birjolaxew \n\nI have tested the rest of the properties (JSFiddle); imageClass also shows this behavior. I'd suggest just generating the modal all over again instead of having to think of this rather obscure bug every time we add a property. I'll wait for others' opinions before implementing anything though.\n\nYeah, I totally agree with you, but let's keep it for now in the old way: by adding } else {:\njs\nif (params.reverseButtons) {\n  $confirmButton.parentNode.insertBefore($cancelButton, $confirmButton);\n} esle {\n  \u2026\n}\n. I added tests and fixed the resetting of both parameters in v4.1.5\n. Can't reproduce.\n. > but not if I'm inserting them using preConfirm\npreConfirm is not supposed for inserting input fields.\n. Aha, sorry. The answer for your question is: inputValidator is working for swal2 input fields only (input parameter).\nInputs in the html parameter are totally custom and inputValidator can't do magic and validate whatever you provides in custom HTML code.\n. @birjolaxew exactly! could you handle this improvement?\n. @birjolaxew Great! No hurry, feel free to send the PR at any time.\n. Fixed in v4.1.7\n. You're amazing collaborator @birjolaxew! Special thanks for adding tests! Please feel free in one of future commits to add yourself to the contributors section in package.json and to the authors section in bower.json.\nLove your commits! :)\n. Nicely done @birjolaxew !\n. This issue was fixed couple of months ago. It's fixed in latest, update your dependency.\n. @birjolaxew wow. How have you found that release so fast? Are you the magician? :)\n. Hi @altras and thank you for reporting this issue! As @birjolaxew I also can't reproduce this in my sandbox. Can you please debug on your project why swal2 DOM element wasn't injected.\nswal2 modal should be injected right after document is ready: https://github.com/limonte/sweetalert2/blob/master/src/sweetalert2.js#L958-L967\n. @birjolaxew \n\nDoes the symlink work on your OS? (content seems fine to me, so I suppose it should)\n\nYes.\n\nDoes Jekyll compile locally? (if so, something about git or GitHub is messing it up)\n\nI succeeded to compile the local version, and the same thing locally - 404 for symlinks. It seems that Jekyll doesn't support symlinks at all: https://github.com/jekyll/jekyll/pull/315\n\nCurrently, there are symlinks in gh-pages branch which are working by adding empty .nojekyll file.\nUnfortunately, it seems that .nojekyll does nothing inside the docs folder.\n. Related Y Combinator topic: https://news.ycombinator.com/item?id=12306658\n. Done in https://github.com/limonte/sweetalert2/commit/24e33e559723d92103c17e32ba592380a6dab19f\nGitHub pages are now at master, not at master/docs:\n\n. all works just fine https://jsfiddle.net/0pbgaka4/1/\n. Thank you @sandropoluan for reporting this issue!\nFixed in v4.1.8\n. I added swal.isVisible() global function to check if swal2 modal is visible to v4.1.9\nThanks for the nice request @kenvernaillenvub ! \n. @simo9000 you are the most skillful here in swal2 queues :) do you have any idea how to handle the case mentioned by @blazeworx?\n. I'm reopening this issue, it becomes interesting :)\n. @simo9000 \nI just released v4.2.4 with your PR merged. \nCould you please make a jsfiddle with the simple implementation of use-case mentioned by @blazeworx . Thank you once again for your contribution! :+1: \n. nice! I just added showLoaderOnConfirm: true to your fiddle: https://jsfiddle.net/r5ssrjhu/4/\n. @blazeworx let us know if this works for you\n. Thanks for the feedback @blazeworx ! I'm happy we succeed to help you with your task. I'm closing this task and opening another one about the documentation https://github.com/limonte/sweetalert2/issues/270\n. @kenvernaillenvub \n\nIf I open a swal-popup and another process opens another swal-popup, it still just removes the first one. Why aren't new swal-popups automatically added to a queue?\n\nFor adding a new modal to a queue, instead of swal({}) use swal.insertQueueStep({}).\nSee the example: https://sweetalert2.github.io/#dynamic-queue\n. Thank you @erbelair for such a detailed bug-report.\n\nI would propose calling dom.resetPrevState() immediately towards the end of the sweetAlert.closeModal() function, rather than waiting until the animation completes.\n\nNot so simple, as this will undo https://github.com/limonte/sweetalert2/pull/243/commits/553a69832a34beb26f2575113feb31ccd96b26bd\nWe'll take care of it in a couple of days as currently there's WIP on the project structure, hope this issue isn't critical and you can wait. \n. Please include a jsfiddle in order for us to be able to reproduce the issue.\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n. I'm closing this issue due to inactivity, add jsfiddle and reopen if needed.\n. Thank you @baum1234 for the jsfiddle. The issue is fixed in v4.2.6 :beers: \n. > Maybe allowing the same jQuery reference in titles? That way it would be possible to use e.g. a checkbox in the title that is created with javascript before.\nI'm not sure about this right now, it would be great if you create the new issue for this with maybe more argumentation when it could be needed. \n. > I just found out that your fix removed all handles.\nI'm not sure I understand you. Could you please specify expected and actual behavior?\n. Yes, because of copying DOM element instead of moving it to the modal, you need to add the handler to add the datepicker dynamically to that input:\nhttps://jsfiddle.net/ad3quksn/42/\nThe only thing I added is:\njs\n$('body').on('focus', \".swal2-modal .picker\", function() {\n  $(this).removeClass('hasDatepicker').datepicker();\n});\n. Fixed now, thanks guys!\n. Nice request @Rikk! Give me some time to test if we can bring these improvements to swal2.\n. Not so simple to add these things. Could you please add the use-case examples for all parameters you've requested, e.g. instead of \"important to have\" I'd like to see \"important to have because ... , here's the example: ...\"\nI'm requesting this because I personally don't see how it could be so \"important to have\".\n. Agree with you guys. I added the ability to set width in percents to v4.2.2. But let's not complicate the plugin any further for now with height, max-width, max-height, etc. \n. @PeterDaveHello :beers: \n. Promises are not supported on 4.4: http://caniuse.com/#search=promise\nyou have to implement a polifill for this.\nTake a look at https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support\n. Will be fixed in next release, I'll notify you about it here.\n. @peratik should be fixed in v4.2.5\n. Thank you @rexcfnghk ! :beers: \n. Thank you @simo9000! I think we will need your help here. To make really nice example with the State Machine functionality, I think we should probably implement Progress bar with numbered steps: #273\nPlease leave your opinion about it. Thanks!\n. I've refactored dynamic queues functionality to be much simpler:\nhttps://sweetalert2.github.io/#dynamic-queue\n@simo9000 You can either refactor your projects to use a new way of dynamic queues of stay on 4.2.* version.\n. Done in v4.3.2\nhttps://sweetalert2.github.io/#input-range\n. Nice request @baum1234 but, unfortunately, I think it's not possible to implement what you are asking with the current implementation of swal2.\nProbably, it will be useful in those rare cases to add styles for the mobile scrollbar to be more visible for users.\n. wow @birjolaxew you did the amazing job by researching on this issue and answering it.\n. Done in v5.0.0.\nMany thanks to @birjolaxew!\n. @baum1234 there's nothing that you should change in your code, just update swal2 to latest and you're done :)\n. Are you sure you're using the latest version - v5.0.5?\n. @baum1234 could you please upgrade to v5.0.7 and test once again?\n. > why not bundle this with queue / state machine functionality? I can only really see the use cases within those two areas\nNot true, here's the simple example with progress steps and without queue:\n``` js\nswal.setDefaults({progressSteps: ['1', '2']});\nswal({\n  title: 'Step 1',\n  text: 'question 1',\n  currentProgressStep: 0\n})\n.then(function() {\n  swal({\n    title: 'Step 2',\n    text: 'question 2',\n    currentProgressStep: 1\n  });\n});\n```\n. > build the progress bar with numbered steps\nWe shouldn't limit the imagination of swal2 users with numbers only, progress steps could be different :)\n. I just made the simple PR just to check the DOM element and discuss further details about this functionality: #275 \n. Done in v4.2.8\n. npm --version ?\n. from https://github.com/uber/npm-shrinkwrap:\n\nNote: npm >= 3 is currently not supported.\n\nMore info: https://github.com/npm/npm/issues/9703\n. > Do they use Uber's version still? All I could find was shrinkwrap.js\nYour link is correct, mine is not. They are not using Uber's version anymore as I can see.\n. This is MUCH better! Thank you @simo9000 :beers: \n. Done in v5.0.0.\n. From docs:\n\npreConfirm: Function to execute before confirm, should return Promise, see usage example.\n\nTo get more help please read contributing.md, add JSFiddle (template: https://jsfiddle.net/limon/ad3quksn/) and reopen.\n. https://github.com/limonte/sweetalert2/blob/master/contributing.md\n. could you please make the jsfiddle with your case so we can reproduce and fix it, thanks!\n. reopen with the jsfiddle please\n. @jdcrensh :beers: \n. Can anybody reproduce this issue? I can't.\n. I can't reproduce this issue: \n\n. Thank you @niftylettuce for such a detailed issue and searching the bug. Fixed in v4.3.1\n:beers: \n. Thank you @niftylettuce for nice word about my open-source project. I'm really happy to make the world a little bit better with SweetAlert2 :)  \nI'm currently living in Serbia and paypal.me doesn't work here:\n\nBut I think I succeed with the simpler solution: https://github.com/limonte/sweetalert2/commit/3549565feb2e3f743f18a5b6f6880595a9c36d7e\nIt will be great if you could make the first donation and test that button because I can't test it as PayPal doesn't allow sending money to yourself :)\n. :disappointed: \nThank you anyway for testing it out. \nI've removed this button temporary, I'm moving to EU next month and it will be returned :)\n. Howdy @niftylettuce\nHope you are well and CrocodileJS will be released soon!\nI moved to Finland and created https://www.paypal.me/limonte so if you are still willing to make a donation, I will be more than happy to receive the first one :)\nThanks in advance! :beers: . Thank you again @birjolaxew! This all with small changes (mostly for IE) is done in v5.0.0.\n. I'm not sure I understand your request, please create jsfiddle so I can see and reproduce the issue.\n. Thank you @quma for the email with the detailed explanation. This issue should be fixed in v5.0.3 without any changes in your code.\nPlease try the latest swal2.\n. Nice :)\n. https://github.com/limonte/sweetalert2/blob/master/contributing.md\n\nFor bug reports, please include:\na jsfiddle in order for us to be able to reproduce the issue.\n. I don't think it's actually a \"breaking\" change, but it is big enough to bump the major version, you can read more details here: https://github.com/limonte/sweetalert2/issues/272#issuecomment-244626738\n. - Here's your example, fixed: https://jsfiddle.net/26fut4aL/9/\n- You probably want to read about promises in JS: http://www.html5rocks.com/en/tutorials/es6/promises/\n- See another example for better understating how this plugin works with promises: https://sweetalert2.github.io/#ajax-request\n\nThanks for using swal2, have a great day!\n. Thank you @mehtonen-boox for pointing out this issue. Fixed in v5.0.4\n. Maybe we should just assign the max z-index value for .swal2-container? It's 2147483647.\n. nice point with a datepicker, I'll make it 1060.\n. Fixed in v5.0.5.\nThank you both @rafael-renan-pacheco for reporting and @samturrell for pointing out possible datepicker inside the swal2 modal.\n. Thank you @samturrell for reporting this issue. Currently, I have no idea how to fix it :/ Any help will be much appreciated here? \n. Got it, will be fixed asap.\n. Fixed in v5.0.5.\nThank you @samturrell :beers: \n. Cheers :beers: :) \n. Done in v5.0.7.\nThank you @birjolaxew :beers: \n. https://github.com/limonte/sweetalert2/blob/master/contributing.md\n\nFor bug reports, please include:\na jsfiddle in order for us to be able to reproduce the issue.\n. Nicely done @caseyWebb, thank you :beers: \n. Sorry @caseyWebb it's v5.0.7\n. Related StackOverflow question: http://stackoverflow.com/q/39626302/1331425\n. I just released v5.3.1 with the fix for this issue!\n\nMany thanks to @jpattishall and his detailed research and answer on StackOverflow: http://stackoverflow.com/a/40033422/1331425\nPS. 0 issues! Thank you all!\n. http://stackoverflow.com/questions/ask\n. https://sweetalert2.github.io/#dismiss-handle\n. js\nswal({\n    title: 'Are you sure?',\n    type: 'warning',\n    html: 'Warning Message',\n    showCancelButton: true,\n    confirmButtonText: 'Yes, delete it!',\n    cancelButtonText: 'No, cancel!',\n    confirmButtonClass: 'btn ban-primary',\n    cancelButtonClass: 'btn ban-danger',\n    buttonsStyling: false,\n    showLoaderOnConfirm: true,\n    allowOutsideClick: false,\n    preConfirm: function() {\n        return new Promise(function() {\n            $.post('post.php', { var1: '1', var2: '2'}, function(data){\n                if (!data.success) {\n                    swal({\n                      title: 'Error',\n                      type: 'warning',\n                      confirmButtonClass: 'btn ban-info',\n                      buttonsStyling: false,\n                      html: 'Error Message'\n                    });\n                } else {\n                    swal({\n                        title: 'Success Title',\n                        type: 'success',\n                        timer: 2000,\n                        html: 'Success Message',\n                        showConfirmButton: false,\n                        onClose: function() {\n                            location.reload();\n                        }\n                    });\n                }\n            }, \"son\");\n        });\n    }\n}).then(function() {\n  // handle confirm\n}).then(function() {\n  // handle cancel\n});\n. Thanks @hieuit7 for reporting this issue. Fixed in v5.1.1\n. :+1: \n. Thank a lot @caseyWebb for getting this done :beers: \n. v5.2.0\n. Hi @caseyWebb! could you please take a look on https://github.com/limonte/sweetalert2-webpack-demo\nWhen I put v5.2.0 here then I'm getting swal is not defined exception.\nWith v5.1.1 all works fine.\nThank you in advance :beers: \n. @caseyWebb fixed, sorry for bothering :)\n. :+1: Thanks!\n. Which kind of user informing do you mean? There's the outline for focused buttons.\n. Yeah, default color for the outline in Chrome/Safari is blue, which is almost similar to the Confirm button color. \nIn Firefox/IE/Edge there's default dotted outline for buttons \n. > This JSFiddle doesn't really illustrate the point.\nCould you please make the jsfiddle that illustrates the point? :) \n. https://sweetalert2.github.io/\n. Thank you @KillerSquid for nice words about the plugin! :)\nUnfortunately, I don't have plans to implement Bootswatch themes into SweetAlert2. You can always add custom styles for buttons by including the corresponding CSS and setting confirmButtonClass and cancelButtonClass parameters:\njs\nswal({\n  ...\n  confirmButtonClass: 'btn btn-primary',\n  cancelButtonClass: 'btn btn-danger',\n  buttonsStyling: false,\n  ...\n})\n. > If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md\n. Could you plz update swal2 to latest, there are no media queries in the latest version :)\n. I can't reproduce this issue.\n\nFor bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md\n. FYI: In v5.2.1 I changed .loading class to .swal2-loading to prevent conflicts.\nThanks for reporting this issue!\n. > $('.swal2-content').text(\"Something different\");\nYou shouldn't rely on .swal2- classes. This is the right way:\n``` js\nswal({\n html: '...',\n})\n$('.your-container').text(\"Something different\");\n```\nAs to setText() method, I don't think it's really needed. If we add setText() other users will ask for  setHtml(), setImage(), setEveryOtherParameter() to be added and the plugin will become a hell of setters.\n. Too custom to be in scope of this plugin.\n. Fixed in v5.3.2 \nThanks a lot @jasonjianfr for reporting this!\n. Fixed in v5.3.2 \nThanks a lot @damanic for reporting this!\n. Thanks, but no. This will be a huge breaking change for most swal2 users. \n. Thanks @ltvan for reporting this issue and describing it.\nThanks @birjolaxew for suggesting the nice trick with swal.noop()\nDone: https://github.com/limonte/sweetalert2/releases/tag/v5.3.3\n. Thanks, but no. You don't have to include es6-promise in your project :)\n. @MarkHerhold Yes, many developers want the solution that just works, without any customization. Including es6-promise by default makes it easier to many swal2 users to get started.. > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md\n. Nice request @Silvester20, as always :)\n\nSorry to increase the issue count from 0 to 1 :p\n\n:laughing: \nDone in v5.3.4\n. Thank you @AlexSwensen for reporting this issue!\nFixed in v5.3.5\n. > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md\n. Thank you @riyuk for submitting this suggestion, but swal2 doesn't work this way.\nFor swal2 confirm is the event which is fired after closing a modal. Since you don't want to close a modal and show the loader, you should use preConfirm parameter.\n. Thank you @gssumesh for requesting this!\nDone in v5.3.6\nSee the example: https://sweetalert2.github.io/#chaining-modals\n. > I believe you might need to update the example as swal.queue(steps).then(function(result) {\nOops, fixed. Thanks :+1: \n. > It's a dead link now\nhere's the updated one https://sweetalert2.github.io/#chaining-modals. For changing background, width and padding properties you can use:\n- related swal2 parameters: background, width and padding\n- add customClass: 'your-class' + .your-class { background: ... !important; }\n. Related issue: https://github.com/limonte/sweetalert2/issues/321\n. I'm not familiar with WeChat and how that messenger can use JS. Could you please give an example or describe how this issue can be reproduced.\nThanks.\n. > I would say this is an issue with wechat, and not sweetalert2.\nI agree.\nI'm closing this issue for now. @QiiSyhx reopen with details if needed.\n. I am not familiar with Typescript at the moment, probably I will be in near future :)\nAny help with making SweetAlert2 and Typescript will be much appreciated. \n. Done in v6.2.5 via #381.. update swal2 to the latest. \n. Probably, your issue is related to https://github.com/jsdelivr/jsdelivr/issues/14468\n. @KillerSquid great! Which package manager did you use? Bower or NPM?\n. outside click !== confirm button click, so it can't be handled in one place.\nOutside click is the dismissal, handling dismissals.\n. You can use finally polyfill for Promise, jsfiddle \n. You're welcome :)\nDon't forget to include the finally polyfill to be able to use it: https://cdn.jsdelivr.net/promise.prototype.finally/1.0.1/finally.js\n. You should override .swal2-container z-index in your project.\nRelated comment: https://github.com/limonte/sweetalert2/issues/296#issuecomment-248434501\nFor example, if we set .swal2-container z-index to 19060, then we'll make a new conflict between swal2 and http://dbushell.github.io/Pikaday/ which has z-index 9999\n. @birjolaxew :) In future let's assign an issue before coding :)\n. @birjolaxew btw, I switched the swal2 JS linting from eslint to standard.\nOne of standard rules is: \n\nNo semicolons \u2013 It's fine. Really!\n. Fixed in v6.0.0.\n\nThanks for reporting!\n. I also can't reproduce. @daerogami reopen with jsfiddle if needed :)\n. And which element should get focus instead of input field? \n. This case is too custom for introducing the new option.\n. Fixed in v6.0.1\n. Your case is too custom to be implemented in the library. You should disable closing animation per your project: https://jsfiddle.net/ad3quksn/49/\n. This is the best explained bug-report this package ever received :)\nFixed in v6.1.0\nThanks a lot, @sn0w!\n. Fixed, thanks @rol4400 \n. Done in v6.2.5 via #381.. Fixed in v6.1.1, thanks for reporting!\n. Thank you @birjolaxew :beers: \nv6.1.1\n. Thanks for reporting, but I don't believe this issue will be fixed because SweetAlert2 doesn't support android native browser: https://github.com/sweetalert2/sweetalert2#browser-compatibility\n. Thanks a lot @birjolaxew :beer: . Could you please provide simple jsfiddle so I can reproduce this bug?\nJSFiddle template: https://jsfiddle.net/ad3quksn/51/. First of all, thanks for reporting this @leonardoteck !\nBut, unfortunately, after looking at the browsers statistics today I decided to drop IE10 support.\nSorry, I hope you understand me :). > Seems like text is being set by .innerHTML, not .textContent. That's bad.\nYou're right. @birjolaxew, could you please handle this issue?. Introducing titleText seems fine to me.. Done in v6.2.2\nSpecial thanks to @birjolaxew :beers: . >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Thanks for reporting this, @Jordy-A \nAny help with fixing this issue will be much appreciated.. I tried several times with different approaches and unfortunately, I need to say that this couldn't be fixed. It's the iOS Safari issue and I can't come up with any hack for fixing it.. https://sweetalert2.github.io//#input-password\n  . SweetAlert2 does not officially support Opera Mini v20 or Android Browser v5, but I'm pretty sure that including Promise polyfill will resolve this issue:\nhtml\n<script src=\"bower_components/es6-promise/es6-promise.auto.min.js\"></script>. Thank you @mockdeep! Should I bump the swal2 version with this change?. Done: https://github.com/limonte/sweetalert2/releases/tag/v6.2.1\nThanks for using swal2!. Hi @birjolaxew and thanks a lot for this PR! Could you please add the same documentation to index.html?. :beers: . I totally agree with the @birjolaxew's proposal:\n\nSeems more like we should consider the second parameter to be html instead of text if it's a string (which is also how title works now). Doing so shouldn't be a breaking change, considering #362, and would turn your code into swal('Error :(', err.join('<br>')).. Done in v6.2.3, you can now use swal2 like this:\n\njs\nswal('Error :(', err.join('<br>')). @3du4 https://jsfiddle.net/opwznh9x/2/. https://github.com/limonte/sweetalert2/issues?q=is%3Aissue+uncaught+exception+is%3Aclosed. Fixed in https://github.com/limonte/sweetalert2/releases/tag/v6.2.4\nThanks for reporting @alepodj !. nice workaround @tobiv :+1: . > and anyone else that come across this issue, you can usually solve bootstrap modal focus issues by disabling the focus enforcement using $.fn.modal.Constructor.prototype.enforceFocus = function () {};\nConfirming this, @JamoCA here's your case fixed: https://jsfiddle.net/0Lng89tq/34/. reopen with jsfiddle if needed. HTML output is correct, you should check your CSS styles. For more help please reopen with jsfiddle https://github.com/limonte/sweetalert2/blob/master/contributing.md. Great work @toverux! The code, comments, examples, the PR description - all is just perfect. I will be more that happy if you join SweetAlert2 Collaborators team: https://github.com/limonte/sweetalert2/issues/130. @beeman oops, sorry for that, I totally forgot to add sweetalert2.d.ts to package.json. Fixed in v6.2.6, please try again.. Agree with @toverux . For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. I just bumped https://github.com/limonte/sweetalert2-webpack-demo to latest versions, all works fine.. It looks like a Firefox issue: http://stackoverflow.com/a/39045496/1331425. Fixed in v6.2.7. Thanks a lot @rorc for reporting this issue!. @toverux just to let you know what was the reason. I changed\n\njs\n  \"jsnext:main\": \"src/sweetalert2.js\",\n  \"module\": \"src/sweetalert2.js\",\nto\njs\n  \"jsnext:main\": \"dist/sweetalert2.js\",\n  \"module\": \"dist/sweetalert2.js\",. @toverux Your feedback is highly appreciated and my vote goes for this option:\n\nApologize to users like @rorc and pray them to add a line or two of configuration to compile SweetAlert using babel-loader (as an exceptional case of force majeure).\n\nI'll try to play with laravel-elixir and see why it doesn't use the Babel setup in it's config.. Thank you for the great research @toverux !\n\nBut the original idea is still the future we want. When next major arrives, we could restore src/sweetalert2.js as the entry point for module bundlers. And tell users to setup babel-loader.\nAfter that, we'll be free to apply some changes in the API that allow tree-shaking (which is not possible with UMD and other legacy formats). For example, with some BC-breaking changes, an user that don't use the \"queue\" feature won't see Webpack including queue-related code. We can go further, even with styles, and the user could save lots of bytes at build time.\n\nThis sounds like an awesome future! :)\n\nAfter those experiments, I think that we should keep distributing the UMD version for everyone, so let's forget about jsnext:main and module for now. These do not bring major advantages without breaking compatibility with an undeterminate number of users.\n\nSo, if I understand you right, we should remove jsnext:main and module for now and bump a new release version, right?. @toverux  Done: v6.2.9.\nIs https://github.com/limonte/sweetalert2/issues/390 somehow related to whole this story with module field?. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. @mholt Should be fixed in v6.2.8, please take a look.. All credits to @birjolaxew - he's the rockstar of this plugin :guitar: . @ekoome \n\nIt looks like for you project you need to include CSS styles manually:\nhtml\n<script src=\"sweetalert2.min.js\"></script>\n<link rel=\"stylesheet\" href=\"sweetalert2.min.css\">. @binarious try this:\n```js\n// import sweetalert2 without inline styles\nimport swal from 'sweetalert2/dist/sweetalert2.js'\n// import styles separately\nimport 'sweetalert2/dist/sweetalert2.css'\n```. You might want to take a look on https://github.com/limonte/sweetalert2-webpack-demo. Fixed in v6.2.7. Thanks a lot @micooz for reporting this issue!. > I've left in the code to run the server required for this, but it could be removed to avoid bloating the codebase.\nLet's keep the codebase clean: https://github.com/limonte/sweetalert2/pull/387. > I discovered SweetAlert \"1\" thanks to the browser extension Wappalyzer while I was on a website with beautiful alerts. On the Wappalyzer SweetAlert page I found the project website (the link is now dead) and used it.\n\nSwal2 was already out for a few months but I didn't know that. I used swal1 for a while until I found a bug and discovered this project.\nSwal2 detection is not implemented by Wappalyzer and I think it would be nice to do it. People could discover and use swal2 first, instead of swal1. \n\nWappalyzer now knows about SweetAlert2:\n\nhttps://www.wappalyzer.com/applications/sweetalert2. Thanks for the feedback @carganilla! \n@toverux go ahead and create the PR from the fix/named-exports branch :rocket:  . @readme42 Fixed in v6.3.0\nAll credits to @toverux :1st_place_medal: . Thank you @toverux! I should figure out what is the reason of broken build, after that I'll merge this change.. @toverux unfortunately, I can't get this working in non-module way:\nhtml\n<script src=\"./dist/sweetalert2.js\"></script>\nswal will be \n\nAnd Uncaught TypeError: swal is not a function will be thrown.. No rush @toverux, take a look on this issue when you'll be able.. Hello @toverux! I really appreciate that you're taking part in this complex part of plugin development. :beers: :beers: :beers:\njs\nsweetAlert.default = sweetAlert\nthis is the hacky trick :)\n\nI'm wondering how are you generating files in dist folder. If I pull the fix/390 branch and tun gulp it will generate files which are different from those you've committed.\n\nPS. Probably you want to setup your Git name, currently you're Mr. Unknown:\n. > Yes, I've also noticed that. Try to update all your devDependencies, it looks like that some helper code is no longer included by some build tool.\nNice! -300 LOC with 0 effort :). Which behavior of the gray overlay you're expecting in this case - to fill only parent element or whole body?. @SasSam Could you please answer my question? :)\n\nWhich behavior of the gray overlay you're expecting in this case - to fill only parent element or whole body?. This feature will be easily added after https://github.com/limonte/sweetalert2/pull/414 merged. It would be great if any of you can take a look on https://github.com/limonte/sweetalert2/pull/443. Welcome to Github @vowtree:) Please read https://github.com/limonte/sweetalert2/blob/master/contributing.md and reopen this issue with a jsfiddle if needed.. The current behavior is intentional, I personally want to keep it.\n\nAs @toverux mentioned, users should be able to close a modal without calling a close callback function.\nIf you want to close a modal programmatically using swal.close(), just pass the function to it:\njs\nswal.close(myCloseCallback). Agree, 40px?. Done in v6.3.1. Tested in Linux/Chrome and Win7/Chrome and can't reproduce. This issue is up to your environment, @dethierx . . :+1: :+1: :+1: . Fixed in https://github.com/limonte/sweetalert2/pull/405\nI'll make a patch release soon.. Done in v6.3.1. Perfect, thanks @karl-ravn for fixing this!. I don't see why you can't add \"several layers of asynchronous/synchronous calls without having to propagate the resolve method down to the last function\" to the preConfirm parameter. Could you please make a quick jsfiddle demonstrating this?\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. I'm closing this issue due to inactivity, reopen if needed.. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Overhead, what you want could be easily performed with onOpen() handler and getContent(): https://jsfiddle.net/ad3quksn/70/. I should agree with you here, see my suggestion in the related issue: https://github.com/limonte/sweetalert2/issues/410#issuecomment-277520432. How about introducing defaultStyling parameter which receives an object, e.g.:\njs\nswal.setDefauls({\n  defaultStyling: {\n    title: <true|false>,\n    content: <true|false>,\n    input: <true|false>,\n    spacer: <true|false>,\n    buttons: <true|false>,\n  }\n})\nDefault is true for all, if user wants to switch off default styling for some elements of the modal, s/he needs to set corresponding setting to false. \nAfter adding defaultStyling parameter, buttonsStyling will be deprecated (with console.warning message) and removed in the next major release.\nThoughts?. Here we go: https://github.com/limonte/sweetalert2/blob/master/src/colors.scss\nColors are available starting from v6.5.2. Thanks a lot for your feedback @dobromir-hristov ! \n\nShould we add !default to $transparent as well? \nShould swal2- prefix be added to $black, $white and $transparent . Done: https://github.com/limonte/sweetalert2/blob/master/src/colors.scss. @mattbrunetti Great! Please do so, I will gladly review and merge the Bootstrap 3 support.. I guess this issue could be closed.\n\nThere are already a lot of SASS variables: https://github.com/sweetalert2/sweetalert2/blob/master/src/variables.scss\nFeel free to request variables you missing for your projects.. <offtopic>\nHow it feels to learn JavaScript in 2016\n</offtopic>\n@craigs100 Regarding to your initial request \n\nWhy not just have the ability to switch off the built-in styling all together and provide your own stylesheet/styles? I added this to a project but apparently it's not \"on brand\" and changing it appears to be too complex a job so having to ditch it unfortunately :(\n\nWe're working on theming https://github.com/sweetalert2/sweetalert2-themes/pull/1\nThere will be clean or minimalistic (name to be decided) theme in the near future. There will be just functional CSS styles an no fancy stuff at all. On top of that theme, users will be able to add their own styles/theme easily without the need to override/reset current styling.. Going back and forth is possible now with async/await: https://jsfiddle.net/ad3quksn/252/. Done in v6.3.2:\njs\nswal.getContent()\n@rorc Thanks for the nice request!. Your request was $('.swal2-content'), it's exactly how swal.getContent() works and that's the right way.. js\nswal.getContent().children. What should swal.getContent() return in your opinion for those cases: \n\nswal({text: 'simle text'})\nswal({html: '<p>paragraph 1</p><p>paragraph 2</p>'}). > \".swal2-content\".innerHTML\n\nHow string with HTML of the swal2-content could be useful?. @toverux Yeah, you're right. Let's keep switching to modules in our minds. Currently, I'm not so strong in modules like you, but I'm working on this :) Feel free to come up with a prototype when you'll get time for it.\nPS I can't thank you enough for supporting this project.. Hello @birjolaxew, \nI made some corrections and I'll be grateful if you got some time to revisit this PR. Thanks in advance!. Okay, thanks! Review when you have time!\nEnjoy your time without a computer, I can only dream about that currently :). Released in v6.4.0 :tada: \nThanks for reviewing this PR @birjolaxew! . Header and footer are overhead for this plugin, sorry.. https://github.com/limonte/sweetalert2#browser-compatibility. https://jsfiddle.net/ad3quksn/69/. @xalexbo yes, for iOS tap is required to produce some sound. Here you go with the example which works in iOS: https://jsfiddle.net/ad3quksn/126/. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Can't reproduce. Reopen with jsfiddle if needed.. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Fixed in v6.4.1 :tada: . @toverux ping :). I think this issue isn't resolved yet. Good news, everyone!\nThanks to @samturrell now it's possible to import all-in-one JS + (S)CSS file:\njs\nimport swal from 'sweetalert2/src/sweetalert2.all.js'\nor minified version:\njs\nimport swal from 'sweetalert2/dist/sweetalert2.all.min.js'. The combined version will be the default entry point one in the upcoming major release, that means that in the near future \njs\nimport swal from 'sweetalert2'\nwill import the all-in-one version.\n@toverux, no need to do any updates in the documentation. . Now it's possible to import SweetAlert2 as easy as\njs\nimport swal from 'sweetalert2'\nKeep in mind that this will import both JS and CSS, no need anymore to care additionaly about styles :tada:\nPlease read about some breaking changes in https://github.com/limonte/sweetalert2/releases/tag/v7.0.0. Fixed in v6.4.1 :tada: . > does sweet alert have a notification like a toaster notification\nYes\n```js\nconst toast = swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 3000\n});\ntoast({\n  type: 'success',\n  title: 'Signed in successfully'\n})\n```\n\nand have a sound notification\n\nhttps://jsfiddle.net/ad3quksn/69/. Thanks a lot for such a nicely detailed bug-report @jdussouillez, done in v6.3.3. Thanks for reporting @giwiro, done in v6.3.3. Thank you @Sole-Valero for submitting this PR, done in v6.3.3. Thanks @toverux, I just released v6.3.3 with this fix. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. Can't reproduce, reopen with jsfiddle if needed.. Please include a jsfiddle\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. https://jsfiddle.net/89Lkw8g5/7/. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\n\nSee Contributing.md. Hello @malcolmocean and thanks for the nice formatted issue!\nI believe you're looking for the reverseButtons option which is documented. Set it to true to get a confirm button on the right side.. Done both in docs in and wiki. \nThanks again for your report and improvement suggestion!. I don't see how this change fixes anything. Could you please add some description and maybe screenshots which will help to understand the reason of increasing margin-top for buttons?. Oh, I see! Thanks for catching this visual issue @bluefindata !\nWith this change, you're solving the vertical space between buttons, but in the same time, the gap between the content and buttons will be increased. We don't want this side-effect.\nMost probably, the adjacent selector is what we want here: \ncss\n.swal2-styled + .swal2-styled {\n  margin-top: 15px;\n}\nThis means that, if a .swal2-styled button comes after another .swal2-styled button, there will be 15px margin in between.\nCould you please amend your PR so we can test it out?. Nice! I'll include this change in the next release. Thanks @bluefindata !. Available in v6.4.1 :tada: . Oops, sorry for this issue. It seems I was out of my mind yesterday :)\nShould be fixed in v6.3.7\nThanks for reporting! :beers: . Thanks for using swal2!. https://github.com/sweetalert2/sweetalert2-visual-tests. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. Sorry, but I'm closing this. Please put more effort into making question/jsfiddle in future.. Thanks for the contribution @johan-weitner !\n\nUnfortunately, I can't merge this PR and I explained why here and here. I just bumped the swal2 version to v6.4.0\nThanks for your contributions @caseyWebb! . Thanks a lot for this nice optimization, @caseyWebb! :beers: \nI will include it in the next release and notify you here about it.. Thanks for reporting, will fix asap. Fixed in v6.4.0\nThanks for reporting @armed10! . For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n. Thanks @CoeusCC!. v6.4.1 :tada: . v6.4.1 :tada: . For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Thanks for reporting @ivanvermeyen! Fixed in v6.4.2. https://jsfiddle.net/gtgLgrhe/3/. StackOverflow is the right place for questions like this. As I can see you already asked there: http://stackoverflow.com/q/42250180/1331425 so I'm closing this issue in favor of StackOverflow.. Use swal.close() instead of manual removing the modal.. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. > \u00bfMaybe a position:fixed issue?\nExactly. You need to add background-attachment: fixed; to body: https://jsfiddle.net/ad3quksn/76/. Dear everyone! I'm on my vacation 10 days from now, won't be able to code anything. But still I could merge stuff and bump patch release :) If anyone could fix this issue, please go ahead :rocket:  . @lmj0011 It's hard to add the SSR support as swal2 uses the document object a lot. \nA workaround mentioned by you:\njs\n// all non SSR compatible libs have to be imported something like this\nif (typeof window !== 'undefined') {\n  const swal = require('sweetalert2');\n}\nshould work. Could you please confirm it doesn't work with the latest version? If so, is there any error/exception? \nThanks in advance!. @toverux do you have any clue about this issue?. Sorry for the stupid question, but I need to go ahead and ask it.\nWhy will someone need the SSR support for popups? What are benefits of rendering popups on the server-side?\n\nRelated tutorial: Totally Tooling Tips: Server-side Rendering. This is the valid poind, thank you @StephanBijzitter . Fixed in v7.0.5 :rocket: \nMy apologies it took so long :disappointed: . Hello @alexismoreau and thanks for reporting your issue! Could you please try to install the latest version (7.0.8) and test it out - the issue should be fixed.. We broke SSR. Again. :man_facepalming:  My apologies to everyone.\n\nTo protect the plugin from similar mistakes in future, these actions were taken:\n\nreleased v7.1.3 with the fix\ncreated the test case for node env: \"check:require-in-node\": \"node test/require-in-node\"\n\n\n. > how to get back to the previous step?\nCurrently this is not supported.\n\nif I check input value -> go to another step?\n\nhttps://sweetalert2.github.io/#dynamic-queue\n  . Thanks for the question @NinoZX!\nGoing back and forth is possible now with async/await: https://jsfiddle.net/ad3quksn/252/. > show in the console:\n\nPromise {[[PromiseStatus]]: \"pending\", [[PromiseValue]]: undefined}\n\nThis is the correct output. So, most probably, swal2 works correctly and the issue is on nwjs side. I'm not familiar with nwjs, so can't help a lot here.. @smolleyes do you maybe have any progress or any useful feedback on this issue?. I'm closing this due to inactivity. Don't hesitate to leave new comments to the issue so I can reopen it.. Hi @ArthurReinhart \nHere's the simple example of functionality you're looking for: https://jsfiddle.net/ad3quksn/79/\nMore details you can find at the documentation page: https://sweetalert2.github.io/#dynamic-queue\n  . Thanks for the nice feature-request.\nDone in https://github.com/limonte/sweetalert2/releases/tag/v6.4.3. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. Thanks a lot @Fkscorpion!. Thanks a million @toverux for caring about the TypeScript support. You're the best here! Feel free to merge PRs related to TypeScript without waiting for approval from me :)\nBtw, I just noticed that definitions of 2 parameters are missing:\n\ntarget which was introduced in https://github.com/limonte/sweetalert2/releases/tag/v6.4.2\nallowEnterKey which was introduced in https://github.com/limonte/sweetalert2/releases/tag/v6.4.1\n\nCould you please handle them?. I can't reproduce.  Which browser are you using? \nCan anyone else confirm the issue?. Fixed in v6.4.4\nThanks all for reporting and confirming this weird issue with minified version in 6.4.3.. https://github.com/limonte/sweetalert2/issues?q=is%3Aissue+datepicker+is%3Aclosed. Duplicate of https://github.com/limonte/sweetalert2/issues/221. Any description for this change?. Sounds like a real case, thanks for the explanation. Please exclude dist/sweetalert2.css from the PR and we're good to go with merge :+1: . Thanks :beers: . >For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Reply with jsfiddle if needed and I will reopen this issue. @csuzlee13 we are indeed setting the top property to body for iOS, \nhere's why: https://github.com/limonte/sweetalert2/issues/302\nhere's how: https://github.com/limonte/sweetalert2/commit/4a2d36b494fbae879c9a17f92af90cb61f03b4d5\nIt will be really great if you could find time to reproduce this issue in jsfiddle. I'm pretty sure it's related to your application layout and the SweeAlert2 somehow conflicting with it.\nThanks for using the SweeAlert2!. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. . @egeersoz I just updated https://github.com/limonte/sweetalert2-webpack-demo to latest versions, works fine, take a look.. Also, I recommend using jsdelivr as CDN service: \nhtml\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@7/dist/sweetalert2.all.min.js\"></script>. You answered your own question here:\n\nonly import js file\uff0cno import css file\n\nIt's our fault that we missing the information about CSS import, sorry for this inconvenience. \nYou need to import it explicitly: \njs\nimport './node_modules/sweetalert2/dist/sweetalert2.css'\nWe are working on the documentation improvement: https://github.com/limonte/sweetalert2/issues/422\nThanks for using the swal2 and have a nice day!. Thanks for the update, because I wasn't able to reproduce :)\nSweetAlert2 doesn't support iOS 8.x, so I'm closing this issue.\nThanks for reporting and have a nice day! . https://jsfiddle.net/ad3quksn/81/. Thanks for reporting! OS/browser?. Can't reproduce, make sure you're using latest CSS styles. can you reproduce the same issue on https://sweetalert2.github.io/ ?\n  . Fixed in v6.5.3\nThanks a lot :beers: . FYI, I added swal.getButtonsWrapper() to v6.5.4. Thanks :beers: . Hola @mattbrunetti! \nDo you want to become a collaborator of this project? :) https://github.com/limonte/sweetalert2/issues/130. Welcome, @zenflow :)\n\n\nJust complicated that my collaboration so far has been at work, and management probably wouldn't approve of me getting too involved on their dime.\n\nCompanies don't own us. Work doesn't own us. Management doesn't own us. It is important as free-thinking beings that we don't feel constantly trapped and indebted to work all the time.. Please go ahead with a PR :rocket: . Both of your comments make sense. But for beginning please implement the scope of the initial comment only. After reviewing and testing I will be able to decide what to do next. Thanks @mattbrunetti !. @zenflow  Beautiful, readable and maintainable code! Love it! . :tada: :tada: :tada: Done in https://github.com/limonte/sweetalert2/releases/tag/v7.0.0. stackoverflow.com/questions/ask. Your code sample is weird :) You're trying to close the modal (swal.close()) right after closing it by clicking the Confirm button.\nCould you please come up with the real-life code example on jsfiddle? (jsfiddle template: https://jsfiddle.net/ad3quksn/68/). I'll take a look on this, thanks a lot @infoeon for your feedback!. Hello @infoeon!\nThis issue is fixed in v6.6.1. Your example works fine: https://jsfiddle.net/ad3quksn/82/\nIn your case .swal2-container is not getting the .swal2-in class when a modal is shown, please debug your app or create the jsfiddle where this issue is reproducible.. I'm closing this issue due to incativity. Leave the comment if needed and I will reopen it . Duplicate of https://github.com/limonte/sweetalert2/issues/422. Thanks @NiExTy for reporting this issue. Here's the jsfiddle demonstrating it: https://jsfiddle.net/ad3quksn/83/\nI'll fix this asap :rocket: . Fixed in v6.6.0, thanks for reporting!. I believe that you need to include the Promise polyfill to get swal2 work in that android browser:\nhtml\n<script src=\"https://cdn.jsdelivr.net/es6-promise/latest/es6-promise.auto.min.js\"></script>. Also, you can try other polyfills suggested here https://github.com/limonte/sweetalert2/issues/416#issuecomment-273932817. html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js\"></script>. Done: https://github.com/limonte/sweetalert2/releases/tag/v6.5.6. Thanks for using swal2! :beers: . @FinesseRus Would you like to join this project as a collaborator? I just sent you the invite, feel free to accept or reject it :)\nOnce you accept the invitation, I'll be able to request review from you in cases like #796 - take a look :). fixed in v7.3.2, thanks for reporting!. > Thank you for invitation. I will help as much as I can, I don't have much free time.\nJust participating in discussions will be enough. I found your bug-reports and comments valuable. Keep up the good work! :muscle: . Hi @weboverhauls and thanks for reporting this. It seems that you're right and buttons don't need role=\"button\" nor tabindex=\"0\". Could you please make changes here and submit the PR?\nThanks in advance and have a great day!. Released in v6.6.0, thanks for contributing!. Vue.js is so beautiful: http://vuetips.com/vue-web-components. Sure, sweetalert2 is dependency-free VanillaJS plugin and I don't plan to change it. \nA Polymer/Vue.js/whatnot component will be another project(s) in separated repository(ies).. @gilberto-torrezan https://www.webcomponents.org/element/sweetalert2/sweetalert2-polymer :tada: . Thanks for creating this PR @weboverhauls ! Could you please make the same change to the close button: https://github.com/limonte/sweetalert2/blob/master/src/utils/dom.js#L122. Thank you :beers: . It was great to be in trending for 3 days :)\n\n. platform/browser?. I can't reproduce this issue both in Chrome and Safari browsers  (https://jsfiddle.net/ad3quksn/84/show/)\nIn future for bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. https://jsfiddle.net/ad3quksn/89/. >  I think that responsibility would be out of scope of this package\nAgree, to project-related to be in scope of this plugin.. Update CSS styles to the latest.. Sorry, but this PR brings too many unobvious changes which are related to your needs and should not be in the plugin.. There coudn't be two swal2 dialogs at the same time by design.\nIn order to set z-index to a swal2 modal:\ncss\n.swal2-modal {\n  z-index: 100;\n} . Hi @OmikronTheta and thanks for reporting this issue! Could you please make a quick jsfiddle to help us in fixing it?\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. I'm closing this issue due to inactivity, @OmikronTheta please leave a comment with jsfiddle if you think it should be reopened.. w3.css causes the issue, not swal2. Without w3.css all works fine: https://jsfiddle.net/7j24bnbk/9/show/. Totally love both semantic-release and commitizen! Thanks @toverux for creating this issue :beers: \n\nPlease go ahead with the PR which will significantly improve our workflow.. Hello @toverux, hope you are doing well! \nI changed my mind about commitizen and semantic-release. There are a couple of reasons but the main one is the contributor experience. I don't want to force our contributors to follow any strict rules about commit messages. The contribution should be as easy as possible for the community.\nAlso, automatization could easily break things for us. For example, in the latest bump-commit https://github.com/limonte/sweetalert2/commit/742fc95280d6d986778c168d8bb5ef6afb3bb8ce I had to fix the JS minification step in config/utils.js as uglify-js dependency was updated from v2 to v3 without backward compatibility (https://github.com/mishoo/UglifyJS2#note)\nsemantic-release is a great tool for bigger projects with at least several people in core team, but for this small lovely plugin like swal2 I'd like to keep manual gearbox, at least for now :)\nAnyway, thanks for mentioning the automated publishing because I didn't know about that, hope you are enjoying this weekend somewhere offline and not working like I do :). After https://github.com/sweetalert2/sweetalert2/pull/857 it should be much easier to implement auto-releasing process.. > @limonte Sorry can you tell me what this problem..\n\nLine 27 in 742fc95\n\n\"uglify-js\": \"latest\" \n\nhas to do with commitizen and semantic-release?\n\nIt has nothing to do with commitizen and semantic-release. Apparently, I was young and foolish year ago when I was depending on \"latest\" versions of devDeps.\nOpened an issue for myself: https://github.com/sweetalert2/sweetalert2/issues/859. My vote is totally for using semantic-release. So, it's possible to use it without commitizen? I thought semantic-release is based on properly formatted commit messages.. > we should just not bother with commitizen, and instead rely only on writing the proper commit messages ourselves when we merge PRs.\nSound good to me :+1: thanks for the explanation!. semantic-release is taking care of SweetAlert2 releasing process now \ud83c\udf89 \nKILL ALL HUMANS \ud83e\udd16. Fixed in v6.6.1, thanks for reporting! :beers: . Thanks for reporting this issue @cooberr !\nI will add the UC Browser support. It has a huge market share in countries like India, China, Indonesia and I care about those users.  \nCurrently I can confirm that everything works fine both in iOS UC Browser and Windows UC Browser. These days I will find an Android device and test in it.\nMeanwhile, could you please specify the device and Android version you're using?. Allright, the main issue is fixed by adding a polyfill for ES6 Promises. I added the note about that to docs, thanks for the useful feedback!\nAbout the second issue with the modal width - could you please try our demos (https://sweetalert2.github.io/) with the same device (ASUS Zenfone 2, Android 5) and tell if there's the same issue with all other examples or it's the issue specific to your project.\nThanks!\n  . Looks like an issue for me. Since it's different from the original one, I separated it to https://github.com/sweetalert2/sweetalert2/issues/514\nOnce again, thanks for help!\n  . > Most phones do not work on some phones while I am working without problems.\n. I can confirm the same issue in the UC Browser on the Google Pixel device.. Fixed in v6.6.2, thanks!. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. http://stackoverflow.com/a/32547793/1331425. Thanks for reporting @suhrab !\nWhat is the expected behavior of the first jsfiddle?. Makes sense, I'll handle this.. Fixed in v6.6.4, thanks for reporting!. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. Duplicate of https://github.com/limonte/sweetalert2/pull/437. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. Thanks guys for such a good bug report! I'll handle it asap.. Fixed in v6.6.3\nThanks @dirchev and @brtinney-touchsuite for your help in debugging this issue!. https://jsfiddle.net/ad3quksn/96/\n\nIf your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\n\nSee Contributing.md\n. Thanks a lot @ArlyMathiasen for submitting this PR! Seems good to me at the first sight, but I need to test it more detailed since it will be a breaking change in future.\n@mattbrunetti you have submitted the issue which this PR will potentially resolve, could you please perform a code review for this PR? Thanks in advance!\n. Great job! Looks perfect to me. Special thanks for covering the new code with tests.\nPlease go ahead with the same approach for preConfirm and inputValidator options.. I released https://github.com/limonte/sweetalert2/releases/tag/v6.6.3 yesterday with this change, take a look.\nPlease feel free to submit any changes for this PR ot the PR related to the same approach for preConfirm and inputValidator options.. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. Duplicate of https://github.com/limonte/sweetalert2/issues/454. Probably you're looking for swal.queue: https://jsfiddle.net/opwznh9x/1/\nSee more examples of chaining (queueing) modals: https://sweetalert2.github.io/#chaining-modals\n  . 1. IE11 is supported\n2. https://sweetalert2.github.io/ is the marketing page, https://github.com/sweetalert2/sweetalert2#browser-compatibility is more detailed and technical page.\n  . https://sweetalert2.github.io/ has been fixed for IE11. https://sweetalert2.github.io/#dynamic-queue\n  . Exactly :)\nThanks for using SweetAlert2!. \u041f\u0440\u0438\u0432\u0435\u0442 \u0418\u0433\u043e\u0440\u044c,\nThe previous comment is correct and useRejections will be the default setting in the upcoming major release. That means that .catch(swal.noop) won't be needed anymore (big thanks to @mattbrunetti for suggesting and implementing this change :beers:)\nTill then we can't help you because we can't change the way JS promises are working.\nI will notify you here about the next major release, thanks for using SweetAlert2!. It's not needed anymore to use .catch(swal.noop) :tada: \nPlease read about some breaking changes in https://github.com/limonte/sweetalert2/releases/tag/v7.0.0. Fixed in v6.6.5, thanks for detailed bug-report! :beers:. Awesome! Thanks a lot @patrickhlauke for this improvement! Did you notice any other a11y issues on the example page? . You are the a11y expert, this comment is extremely helpful! \nPlease fire issues/PRs, every your contribution will be very welcome. The Front-End community should care more nowadays about a11y, I realized that just recently (shame on me!).\nI will also take a look at issues you mentioned. In the meanwhile, I will make you a collaborator of this repo if you don't mind :)  . Replace \njs\ndocument.querySelector('.modal-backdrop').remove();  document.querySelector('div.swal2-container').remove();\nwith swal.close(). SweetAlert2 doesn't support multiple alerts, so your question doesn't make sense.. This issue has the most upvotes, so it's going to pinned issues and should get the top priority.. Good day @gverni!\n\nAre you planning to have this implemented as theme in https://github.com/sweetalert2/sweetalert2-themes or as an option in sweetalert?\n\nIn sweetalert2-themes. \nWill you have time to start playing with the dark theme? I didn't start it yet because I believe my skills in choosing color are terrible :D. > I wanted to copy the palette from Visual Studio Code, wich to me is a nice palette. What do you think? \nAgree, it matches my taste as well. For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/. Please respond with a jsfiddle in order to get help.. Hello @akunno and thanks for this PR! I wonder if you know how to amend your contribution because you closed the previous one instead of changing it?. I'm asking because there are couple of thins to change here before merging :). Sorry for the delay @akunno I'm busy today and next 2 days. Will take a look asap, but not before this Thursday.. Sorry @akunno but I won't merge this contribution. Your PR doesn't work as expected and I can't amend it to be at the same time functional and easy-to-maintain.. Hello,\nplease disable need of write after every swal line \".catch(swal.noop)\", it is just more complicated, who wants handle dismissals will do it even without these errors to console\n\nhttps://github.com/limonte/sweetalert2/issues/540\n\ngive us option to disable icons animation - few linues of code for you, great asset for us\n\n```js\nswal({\n  ...\n  animation: false\n})\nThanks for regular using SweetAlert2 :). Make sure you are using the latest version of plugin.. Thanks a lot @rafa-acioly !. > Note: the fiddle doesn't seem to get the bug\nHi Bill, if you are not able to reproduce the issue in jsfiddle, then it's probably in your app code, not in SweetAlert2.\nFeel free to comment here in case you will succeed with reproducing the issue in jsfiddle.. 'false' !== false. PS you can leave comment for closed issues ;). Duplicate of https://github.com/limonte/sweetalert2/issues/523, upgrade swal2 to the latest.. > On slider input: would be nice if we had an option to show the units\ncss\n.swal2-range output::after {\n  content: \"units\";\n}\n\nthe number shown is a bit vertically misaligned with the slider graphic.\n\nbrowser/OS?. Unfortunately, Safari has the ugliest design for native [input=\"range\"]:\n\nYou can still try to fix that vertical misalignment by  customizing .swal2-range. Many thanks @Spetnik  for reporting and trying to fix this issue!. Thanks a lot @Spetnik, just a small change to do before merge. Any objections from collaborators?. Duplicate of https://github.com/limonte/sweetalert2/issues/221. Duplicate of #564 . Hi @patrickhlauke !\nI just checked three items in your list as done, uncheck those please if I'm wrong.\nI would like you to confirm if the biggest issue \"next modal isn't announced\" still here. I tested with ChromeVox on Linux, NVDA on Windows and VoiceOver on iPhone and everything works fine. \nMaybe that's a JAWS-related issue? If yes, what do you think about adding aria-live=\"assertive\" to the modal?. https://jsfiddle.net/ad3quksn/118/. Many thanks!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Thanks a lot for sharing your research @mfarajewicz!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Nice suggestion @erickmonteiro! Are you able to create a PR with this improvement?. Implemented in https://github.com/limonte/sweetalert2/pull/592. https://github.com/search?l=JavaScript&p=1&q=color+picker&type=Repositories&utf8=%E2%9C%93. Done in https://github.com/limonte/sweetalert2/pull/592. The example you linked uses the array of SweetAlertOptions:\njs\nvar steps = [\n  {\n    title: 'Question 1',\n    text: 'Chaining swal2 modals is easy'\n  },\n  'Question 2',\n  'Question 3'\n]\nwhere\njs\n{\n  title: 'Question 1',\n  text: 'Chaining swal2 modals is easy'\n} \nis SweetAlertOptions\nArray of strings is the edge case to simplify the example.. Oops, my bad sorry.. Yeah, it should definitely be array of strings, could you please submit a PR with the fix? SweetAlert's type definitions are here: https://github.com/limonte/sweetalert2/blob/master/sweetalert2.d.ts. Thanks a lot @michaelbull for reporting and fixing this! :beers: . https://github.com/limonte/sweetalert2/releases/tag/v6.6.7 :rocket:. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. In that case please come up with the jsfiddle for your question\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. try to format your question, it looks messy now. \nhttps://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet. Sorry, but I can't help here as this question is actually unrelated to SweetAlert2, but to Jasmine and AngularJS.. > html need to be true and the content is in text\nThis is true for the original SweetAlert plugin: https://github.com/t4t5/sweetalert \nSweetAlert and SweetAlert2 are 2 different projects with slightlhy different API, see the migration guide: https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2. No need to complicate things :) handling keyup on input is simple as https://jsfiddle.net/limon/ad3quksn/115/. You're welcome! Thanks for using SweetAlert2 :beers: . Thanks for reporting this. Looks like a IE11 Flexbox bug indeed. I have no idea for now how to fix it properly.. Browser/OS?. Can't reproduce, could you please provide the jsfiddle?. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. Browser/OS?. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Probably you want to take a look on the allowEnterKey option.\nOtherwise, for bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. @rorc Read the previous comment once again and try to follow it :). This question doesn't actually related to SweetAlert2. You should ask it in the Angular community, e.g. https://stackoverflow.com/questions/tagged/angularjs. Also, take a look on the Angular 2+ wrapper for SweetAlert2: https://github.com/toverux/ngsweetalert2 - it's great!. Take a look on the Angular 2+ wrapper for SweetAlert2: https://github.com/toverux/ngsweetalert2 - it's great!. Take a look on the Angular 2+ wrapper for SweetAlert2: https://github.com/toverux/ngsweetalert2 - it's great!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Thanks for the nicely detailed bug-report @simshaun!\nhttps://github.com/limonte/sweetalert2/releases/tag/v6.6.7 :rocket:. v6.6.8 :tada: . >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. https://sweetalert2.github.io/#ajax-request\n  . https://github.com/limonte/sweetalert2/commit/f3035c1aa2760774b84072a848f3fc4dd883af9a + https://github.com/limonte/sweetalert2/commit/7e94e84c56803a4c3647dd54264fbec6d78fd024. > Yep - I see that block too, projects owners are probably exempt of such warnings :)\nThat makes sense, thanks for the feedback @huglester and @toverux :beers: . It's there, isn't it? https://atmospherejs.com/cleandersonlobo/sweetalert2. ping @cleandersonlobo :). And also, you can use npm packages in Meteor, take a look on docs: https://guide.meteor.com/atmosphere-vs-npm.html#when-npm. Many thanks @cleandersonlobo for publishing the sweetalert2 and keeping it up-to-date! :beers: . https://sweetalert2.github.io/#dismiss-handle\n  . > Is there any method\nIf(dismiss == \"ok\")\nNo, sorry.. Every additional effort to your question is welcome ;). Thanks for the contribution @jesobreira but changing HTML DOM just to apply some styles to backdrop is too much :). @patrickhlauke my personal apologies about the delay in fixing a11y issues you spotted 2 months ago. I read https://www.vincit.fi/en/blog/software-development-450-words-per-minute/ the other day and starting from now screen-readers support is one of my top priorities.. These code examples are weird. Why do you want to show loader after closing modal? I don't know your context, but you probably looking  for the showLoaderOnConfirm parameter.. Take a look on the AJAX example, also there's onOpen parameter you might want to use.. Not possible for security reasons.. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. > However, that said it may be possible to generate an entirely separate bundle to add this functionality e.g. sweetalert2.all.js which includes the css-in-js.\nSounds like a perfect option :+1:. Fixed with #644 \nKUDOS to drunk ninja master @samturrell :beers: . Just update the demo of using SweetAlert2 with Webpack, looks great! https://github.com/limonte/sweetalert2-webpack-demo/commit/fba0254de89162847a78b6232722e1463a8d8138#diff-168726dbe96b3ce427e7fedce31bb0bc\n@toverux sorry for probably stupid question, but could you please help me to understand \n\nSo : sweetalert2.all.js + docs seems to be a good solution as long as we don't set it as the default entry point (main).\n\nwhy don't we want all.js as the default entry point?. > Well, I guess I'm just used to have the control on vendor stylesheets \"by default\". But as the new solution seems to be easier for most people, and since it's still possible to get the style aside of the JS if needed, I'm not hostile to change that, at all :)\nThanks! :+1: \n\nHowever, I think we should wait for the next major to change it then. Otherwise people will get Swal's styles downloaded and applied two times. Not a breaking change per se, but, erh.\n\nYeah, that's kinda a breaking change as I understand correctly. So next major it is :+1:. Perfect, thanks!. ### The combined JS+CSS version (dist/sweetalert2.all.js) is now default: \n:tada:  https://github.com/limonte/sweetalert2/releases/tag/v7.0.0 . I love different skills of you guys! Everyone of you should get a small :dollar: from me, grab a :beer: / :coffee: / :tea: and have a great day!\n. PS. did you notice that swal2 is already more popular than original swal:\n\nswal: \nswal2: \n\n:muscle: :muscle: :muscle: . >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. I'm closing this issue due to inactivity, leave a comment if you think it should be reopened.. This issue was debugged in https://github.com/limonte/sweetalert2/issues/626 and fixed in v6.9.1. @shajeermuhammed could you please let me know if v6.9.1 works fine in IE11, thanks in advance!. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. https://travis-ci.org/limonte/sweetalert2/builds/279032140 :tada:\nhttps://github.com/limonte/sweetalert2/tree/master/test/puppeteer/screens. We recently released v6.10.0 which contains all-in-one version with JS and CSS in one place.\nYou can import it this way:\nimport swal from 'sweetalert2/dist/sweetalert2.all.min.js'\nPS. In the next major version (v7.0.0) the combined JS + CSS version sweetalert2.all.min.js will be the default entry point and it will be possible to import it as usual: import swal from 'sweetalert2'. For Angular2+ projects I highly recommend to use https://github.com/toverux/ngsweetalert2. For Angular2+ projects I highly recommend to use https://github.com/toverux/ngsweetalert2. @toverux do you maybe have time to take a look on this issue?. Thanks a lot @Trevald for the valuable feedback!\nWe don't actually need MSAnimationEnd, proof: http://jsfiddle.net/xTxBe/143/\n@Trevald con you confirm the jsfiddle above works as expected in IE?. https://github.com/limonte/sweetalert2/releases/tag/v6.9.1 :tada: . @Trevald could you please let me know if v6.9.1 works fine in IE11, thanks in advance!. Thanks!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. This issue was debugged in https://github.com/limonte/sweetalert2/issues/626 and fixed in v6.9.1. @hiphigi  could you please let me know if v6.9.1 works fine in IE11, thanks in advance!. We recently released v6.10.0 which contains all-in-one version with JS and CSS in one place.\nYou can import it this way:\nimport swal from 'sweetalert2/dist/sweetalert2.all.min.js'\nPS. In the next major version (v7.0.0) the combined JS + CSS version sweetalert2.all.min.js will be the default entry point and it will be possible to import it as usual: import swal from 'sweetalert2'. Let's reopen this and investigate the issue.. Thanks @k9yosh for the detailed report! I'll close this issue and reopen the one you mentioned.\nHave a good working week!. Hi @xalexbo and thanks for the good question! Most probably you're looking for the focusConfirm parameter which was added in the latest version (https://github.com/sweetalert2/sweetalert2/releases/tag/v6.9.0). It's true by default and if you set it to false, the first element in tab order inside the modal will be focused.\nYou can try it with your mobile device: https://sweetalert2.github.io/#multiple-inputs\nThe first input should be focused if focusConfirm is false\n  . You're welcome! Thanks for using SweetAlert2!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. show us at least usage case of calling swal({...}). You're using the code example from https://sweetalert.js.org/ which is a different project. The author of that project is careless about its users, that's why I made SweetAlert2.\nSweetAlert:\n- https://github.com/t4t5/sweetalert/\n- https://sweetalert.js.org/\nSweetAlert2:\n- https://github.com/sweetalert2/sweetalert2/\n- https://sweetalert2.github.io/\n  . >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. js\nonOpen: () => document.activeElement.blur()\nhttps://jsfiddle.net/ad3quksn/124/. @KhaledSMQ could you please let me know if v6.9.1 works fine in IE11, thanks in advance!. >If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. text => 'text'. Theming of different parts will be fixed properly in the next major. For now, you can use something like this: https://jsfiddle.net/ad3quksn/129/. It's an easy task with using https://github.com/nosir/cleave.js\nHere's the live demo: https://jsfiddle.net/ad3quksn/128/ . Hi @ChristianLJ and thanks for reporting! \nCould you please help me with debugging by trying this snippet with Safari 8 and show me the result in the console: http://jsfiddle.net/xTxBe/145/. Thank you @ChristianLJ !\nSo, the webkitAnimationEnd is fired. Weird issue. I will try to find Yosemite with Safari 8 to debug this.\nIf someone is able to debug this and send a PR or just point to the problematic line, please do so. Thanks in advance!. Thanks a lot for the feedback @ChristianLJ \nI believe those who are looking for Safari 8 support can use this workaround.. Are you asking about setting height or min-height?. > .sweet-alert\nwhy don't you inspect the modal for the correct class-name? :) It's .swal2-modal, here's the example of setting min-height: https://jsfiddle.net/ad3quksn/130/. \nThank you, Sam! The result of the drink&code session is perfect! :). > The new file does not seem to exist on cdnjs though. @limonte I presume that some manual operation is needed on this side?\nNope, cdnjs will update the version automatically, but it will take a couple of hours for it to invalidate the cache.. Thanks a lot for making this library's source code look gorgeous :heart_eyes: . Hello @treece and many thanks for reporting this regression which was introduced when we switched from having permanently one DOM element in the document to dynamically adding/remove .swal-container.\nI believe it's fixed in https://github.com/limonte/sweetalert2/pull/654 and if you're able to verify the fix please do so. Step to verify:\n\nClone the sweetalert2 repo\ninstall npm dependencies by running: npm install or yarn install \nClone the branch with the fix:\ngit fetch origin\ngit checkout -b fix/backdrop-animation origin/fix/backdrop-animation\ngit merge master\nBuild dist files by running gulp inside the sweetalert2 folder\nOpen index.html and test\n\nPS @acupajoe many thanks for handling some issues and providing a useful feedback! In this case, your feedback helped me to understand and (hopefully) fix this issue.. @treece my apologies, the PR isn't ready yet because of the small regression. I will notify you here when I come up with the proper solution.. > I need to implement a search engine to filter the input options.\nThis is so unrelated to SweetAlert2, I'm closing this, sorry. StackOverflow is the right place to ask questions like this.\nIf you don't get the answer on SO next 2 days, you can start the bounty so the questions will get the proper attention :). Ping me if you don't have enough reputation to start the bounty, I'll do that :).  https://stackoverflow.com/a/16138480/1331425. @toverux Nice fiddle! I think the display property for the buttonswrapper should be changed from block to flex  in the next major release, what do you think?. btw, @TheCelavi there's a handy swal.getButtonsWrapper() helper which will allow you to depend on our API instead of internal class-names. It was undocumented until now, I just added the missing documentaion https://github.com/limonte/sweetalert2/commit/be80a18fe23ec3eb46a77dbdfd74327245fcd31a. This PR fixes the backdrop animation for single modal, but unfortunately, there's a regression for chaining modals - the backdrop is flickering.. Go ahead @acupajoe :rocket: , separating the backdrop element from the swal2 container might be the proper way to fix the issue.. Many thanks @acupajoe! The fix looks exactly like we were planning. The only one thing I'm not 100% happy is related to UX. There's the noticeable delay between closing the modal and closing the backdrop.\nAs a user, I want to be able to work with my document asap after I clicked a button in the modal window.\nGive me 2-3 days to review this PR, I think I have a simple solution in my mind, but I can't visualize it completely without some coding :) \nThanks again and have a great working week! . Thanks for reporting @ibrahimBeladi! Which browser and OS are you using?. I can't reproduce the issue with the same configuration (Linux/Firefox). Probably you just holding Enter for too long :) As a workaround for this you can use allowEnterKey: false, here's the live demo: https://jsfiddle.net/ad3quksn/132/\nPS in real-life cases there should be validators preventing submitting empty input values. \n. Many thanks for the clarification! I just released https://github.com/sweetalert2/sweetalert2/releases/tag/v6.10.2 take another look on https://sweetalert2.github.io/#chaining-modals, the reported issue should be fixed :+1: \n  . @ibrahimBeladi could you please confirm if the issue is fixed in Linux Zorin/Firefox, thanks!. Awesome, thank you!. @patrickhlauke Do I understand correctly that this change should fix one of the issues you reported:\n\nnon-alert part not aria-hidden / inert (e.g. using JAWS, can use cursor key up to navigate back out into page). Hi @Martinnord!\n\nApparently, styles are missing. \nGood news! We recently released v6.10.0 which contains all-in-one version with JS and CSS in one place.\nYou can import it this way:\nimport swal from 'sweetalert2/dist/sweetalert2.all.min.js'\nPS. In the next major version (v7.0.0) the combined JS + CSS version sweetalert2.all.min.js will be the default entry point and it will be possible to import it as usual: import swal from 'sweetalert2'. Or should we just release a new major? :) There are enough changes to the plugin, theming and customization could wait for now.. Closing this, here's the issue related to the next major: https://github.com/limonte/sweetalert2/issues/661. > Great, if this release can wait a few days, I will plan to close off #485 this weekend :)\nAbsolutely! Many thanks, @mattbrunetti! I will do the release after your contribution.. Reminder for myself: after releasing, update StackOverflow answers:\n  - https://stackoverflow.com/questions/39321621/uncaught-in-promise-cancel-using-sweetalert2/39322107#39322107. @samturrell @toverux @acupajoe \n\nset the default entry point to sweetalert2.all.min.js\n\nin the next major, should we set the default entry point to sweetalert2.all.js instead of sweetalert2.all.**min.**js? It would be easier for developers to debug and report issues.. Quick update: almost everything done, the only one remained PR I would like to be included in v7.0.0 is https://github.com/limonte/sweetalert2/pull/674\n@mattbrunetti what do you think, will you have time to polish it accordingly to the @toverux's latest comment?. oops, accidentally closed the issue :)\nMany thanks @mattbrunetti!. :tada: :tada: :tada: https://github.com/limonte/sweetalert2/releases/tag/v7.0.0 :tada: :tada: :tada: \nAll collaborators should have the edit permission for release notes, feel free to add/change if I forgot something to mention.\n@zenflow you are the collaborator now, welcome! It's my pleasure to have you in this small but extremely efficient open-source team :sunglasses: Do you have a public email address so I can include it in the contributors section of package.json? . Congrats @toverux! The release notes for v3 looks professional :+1: \n\nAnd, thanks again to all the contributors! This is a small library with a very limited scope, and yet, it helps many people (100K DL/mo), and federated a group of passionate contributors, thanks to our benevolent dictator for life @limonte\n\n:laughing: . I wish every issue report would be like this one :)\nShould the fix be as simple as:\njs\nif (params.inputValue.toString() === optionValue) {\n//                   ^^^^^^^^^^^\nWhat do you think?. Fixed in https://github.com/limonte/sweetalert2/releases/tag/v6.10.3, thanks for reporting!. what do you mean by \"growl\"?. Less is more. Modal dialogs and notifications look pretty similar at the first sight, but in fact, those are quite different. \nFor example, the accessibility is totally different for modal window and notification. The size and complexity of the repo will grow twice if we implement both functionalities in one place.\n\nThe problem is that SweetAlert and Toastr (and other libraries that fill the same needs) don't have the same style or APIs at all. That leads to wobbly UX/UI unless you take much time to customize both (colours, animations, paddings...).\n\nI'm planning to put some time into the proper customization of the plugin, so adjusting colors/paddings/animations won't be so painful in future.\n\nAnother alternative: maybe this could be a sister library of SweetAlert and they may share a common base and/or design? SweetToast2 ^_^\n\nCurrently, I'm in the really tough schedule and won't be able to dedicate a proper amount of time for that.. Are we getting closer to deliver this feature: https://sweetalert2.github.io/#position ? :)\n  . > The size and complexity of the repo will grow twice\n@acupajoe proved that I was wrong :). @toverux @acupajoe do you guys already have accounts on patreon.com? If not, please create, it would be honor to me to be your first supporter :). Good news, @simon1tan and anyone else interested in this feature :tada: \nIt was merged today and available for testing! If you want to check how it will work in the next major:\n\nclone: git clone https://github.com/sweetalert2/sweetalert2.git\nbuild: gulp \ntest:\n\njs\nswal({\n  ...\n  toast: true\n})\n  . Released! :tada: \nhttps://github.com/sweetalert2/sweetalert2/releases/tag/v7.0.0\n:warning: Pay attention to breaking changes from the new major release!\n  . Implemented in https://github.com/sweetalert2/sweetalert2/releases/tag/v6.11.0 :rocket: \n  . Live example: https://sweetalert2.github.io/#position\n  . Hello @danny1l and sorry for the delayed response!\nThe current z-index of sweetalert2 is 1060. Looks like a magic number, but the reason for choosing it described in https://github.com/limonte/sweetalert2/issues/296#issuecomment-248434501 and https://github.com/limonte/sweetalert2/issues/341#issuecomment-257290241\nIn order to change swal2's z-index for your project, just add this to the projects' styles:\ncss\n.swal2-container {\n  z-index: X;\n}\nWhere X is a number which is greater than z-index of another dialog window, e.g. 10000. \nHere's the live example: https://jsfiddle.net/ad3quksn/153/\nPS many thanks for your generous donation! That's the biggest donation to this project so far!. Hello @danny1l \nI just created DONATIONS.md and quoted your lovely message!\nThanks again for your generous donation and supporting my work! Have a great day!. Thanks for reporting, will be fixed soon!. This is the 666 issue :imp:  . Let's discuss the design of this feature a little bit more. There are a lot of possible positions users might want, e.g. this one:\n\nThis is the real use-case which I would like to support. SweetAlert2 should support both horizontal/vertical positioning, as well as the possibility of flex grow.. Holy flex! This is almost exactly what I wanted! You are awesome @acupajoe :rocket: \nQuestion: would it be better if for vertical alignment we will use middle instead of center? Just to be aligned with the native vertical-align.\nAlso, could you please copy-paste docs for new parameters from README.md to https://github.com/limonte/sweetalert2/blob/master/index.html#L480\nMany thanks for handling this in such a nice and well-maintainable way :beers: . The upcoming feature based on this one could be grow: 'fullscreen' :rocket: \nThis is a HUGE improvement, I'm so excited about it!. > I'm not actually using vertical-align, flex uses center instead of middle!\nLet's keep it in that way, center it is, both for horizontal and vertical :+1: . Also, the same additions to docs are needed in https://github.com/limonte/sweetalert2/blob/master/index.html#L676 and https://github.com/limonte/sweetalert2/blob/master/sweetalert2.d.ts#L601 but it's okay if you skip those in case you don't have time :). @sedx perfect :rocket: . Many thanks @sedx for contributing to SweetAlert2 awesomeness! :). Released in https://github.com/limonte/sweetalert2/releases/tag/v6.11.0 :rocket:. LGTM, rebase and go ahead with polishing details :rocket: \nWith this PR you're doubling the user value of SweetAlert2. I can't thank you enough! :beers: . Rebased to master :octocat: . Almost ready to merge!\n\nBefore merging this I would like to fix https://github.com/limonte/sweetalert2/issues/673 and release v6.11.3 so users with ^6.0.0 dependency are safe and sound.\nThe same as for https://github.com/limonte/sweetalert2/pull/681 - since there's no backdrop and the default background is white, something like box-shadow: 0 0 10px $swal2-overlay will improve the UX.\nThere's one small issue, I added a test and pushed it to this branch: https://github.com/limonte/sweetalert2/pull/672/commits/2e4b47c98cea7e8808c632c6e8733cd3d0e3d70a\n\nPS. Gifs are awesome, I'll include them in the v7 release notes!. I'm planning to merge this PR by the end of the day, any objections from anyone?. For some reason, this is related only to all.min.js version. I replaced it with regular .js + .css files and everything works fine now. \n@lucas-jc could you please verify that https://sweetalert2.github.io/ works for your device, thanks in advance!\n  . Great, thanks for the feedback, but let's not close the issue just now :) We need to figure out what is wrong with all.min.js and why it doesn't work with Android browser. My guess - the CSS injecting doesn't have a proper browsers support.. Gotcha! The issue is happening because of missing webkit- and other prefixes. I can't figure out how to add autoprefixer before injecting CSS, @samturrell could you please help with adding autoprefixer?. Thanks @samturrell! This is the last standing issue which will be released as 6.11.3. After that - the next major :tada:  . Fixed in v6.11.3, thanks @lucas-jc for reporting!. >If your issue is focused more on 'is it possible?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nSee Contributing.md. @crabbly could you please make a jsfiddle with the simple reproduction of the layout which is getting damaged?\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/249/. Great! Thanks for the research and the explanation @crabbly!\n\nPlease go ahead with the PR, I'll be happy to merge it and release the new version asap.. > We could add a parameter,\nI can't come up with a good name for the new parameter :/ Any ideas?. Merged and released v7.1.2\n@crabbly Check out the updated jsfiddle with the new version dependency: https://jsfiddle.net/53wc51o2/5/\n@bubjavier @Kappyh @a1p4ca please try v7.1.2 and tell if it fixes the issue for your projects\nThanks everyone for reporting!. This looks like a CSS framework issue. I have no idea why Bulma forces vertical scrollbar to be shown always https://github.com/jgthms/bulma/blob/master/sass/base/generic.sass#L28 even if the height of the content is less than the height of the browser's viewport.\nThe workaround to fix this yet-another-one-cool-framework is to add:\ncss\nhtml {\n  overflow-y: auto;\n}. Weird issue, many thanks for reporting @ClaudiuGeorgiu!\n@acupajoe I was digging into this and it seems that it was introduced after removing margin: auto here: https://github.com/limonte/sweetalert2/commit/39968eccf8b3fbf4587f95efa78a6bc58a38ce76#diff-54aa44acced41a67c744578f847b1c34L49\nI have no idea how exactly that margin works together with flexbox, but with margin: auto added to swal2-modal this example works fine.\nFlexbox experts, I need your help :sos: . Fixed jsfiddle from the description: https://jsfiddle.net/ad3quksn/159/. Simple jsfiddle demonstrates the issue: http://jsfiddle.net/9b2br2nz/. I got inspired the other day by https://youtu.be/1-g1rvkORQ8?t=17m43s\nIs it time to start using CSS Grid and flexbox as the fallback? :) http://jsfiddle.net/vk52g2p7/1/\nWhat do you think, fellas? cc @acupajoe @toverux. Fixed in v6.11.2, thanks for reporting!. The issue is still present in IE11, reopening.. I'm trying to fix this properly, asked a question on StackOverflow https://stackoverflow.com/q/47029346/1331425\nHopefully the Community will help :muscle: . Unfortunately, no proper IE11 solution for now. Let's keep this issue opened to be fixed later.. I'm closing this in favor of #933. SweetAlert2 is the replacement for modal popups. Modal windows should have backdrop and trap focus by definition.\nRead more about modal and nonmodal dialog windows: https://www.nngroup.com/articles/modal-nonmodal-dialog/ \nYou can always make the backdrop transparent though: https://jsfiddle.net/ad3quksn/160/. > So there's no way to make the other are clickable?\nNo.\nDefinition: A modal dialog is a dialog that appears on top of the main content and moves the system into a special mode requiring user interaction. This dialog disables the main content until the user explicitly interacts with the modal dialog.. I just changed my mind :upside_down_face: \nThanks @kgrvr for proposing this feature. Now, since we have a positioning functionality (thanks to @acupajoe) starting from https://github.com/limonte/sweetalert2/releases/tag/v6.11.0 use-cases like these should be possible: \n\n\n. Looks very nice!\n\nBackdrop removal means that a window isn't modal anymore and the document is accessible for user interactions (keyboard and mouse). Should the document be scrollable as well?\nSince there's no backdrop and the default background is white, should we introduce a box-shadow for nonmodal windows? Something like box-shadow: 0 0 10px $swal2-overlay.. > It's time to be safer! :)\nThe PR consists of a few minor improvements ; most importantly, sweetalert2.d.ts will now be type-checked by TypeScript (meaning that invalid syntax or static typing mistakes will be caught before they are publicated to npm), and tslint will lint the file (I fixed the code style errors at the same time).\n\n\n\nI love linters! Robots should lint our code, and hopefully in near future even automatically format it.\n\n:warning: I didn't commited the package-lock.json. It's the very first time I try to use npm 5 over yarn and boom, I see that npm is still quite inconsitent regarding its own lockfile: npm/npm#17979 / https://stackoverflow.com/questions/45022048/why-does-npm-install-rewrite-package-lock-json\nWhen I ran \"npm i\", npm ignored and then rewrote the package-lock.json, which should just not happen. So I didn't commited it since I don't really know how you want to keep it up to date, @limonte.\n\nYeah, JS ecosystem is sometimes quite weird, bringing breaking changes in minor releases is ridiculous for the \"default\" package manager. \nBut when I figured out that npm reverted the behavior in v5.4.2 (patch release!!!) I totally lost my hope for npm and I'll stick to Yarn for my projects, at least in near future.. Let's indicate to the Community that Yarn is the better choice for package management: https://github.com/limonte/sweetalert2/commit/45e59f1ff86700022cadcdf81a8a490cac3f3af6. I agree with you, let's wait for a smarter prettifier from near future :+1: . What do you think @acupajoe? Will this be enough?. That was fast!!\n\nAlso cleaned up a few inconsistencies with semi-colons and my IDE screaming at me for various things.\n\nI like your IDE! What is it? \n\nAlso, skimming through the codebase, the main entry point is starting to grow quite large. Might be worth seeing what we can do about breaking up the logic into sub-modules for future maintainability as I did with my first contribution to somewhat follow the single responsibility principle.\n\nAgree.. Wrong repo. https://github.com/t4t5/sweetalert. This isn't the right place for Angular- or any other framework related questions. \nhttps://stackoverflow.com/questions/ask. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. > Shouldn't we remove entirely the old behaviour?\nI'd say yes. It's a new major and it's okay to introduce one more not-so-big breaking change.  Any objections from others?. > I think it would be really dev-friendly if we gave users a grace period of one major iteration, where they can still be up-to-date with the newest version, and they can update their usage, gradually and or when it's convenient.\nObjection sustained. Let's keep being friendly to the Community and deprecate the feature instead of dropping it :+1:\n\nWill examples in index.html be updated in regards to this?\n\nYes, I was planning to handle https://github.com/limonte/sweetalert2/pull/674 and then update examples.. > Don't insult the people who are different that you :/\nI'm insulting the low-quality product, not people. But you're right, that was too emotional, apologies. People who know what is \"commit history\" and able to read it are most probably sharing the same pain after the debugging process in IE11.. Hello @netbka \nsweetalert2.all.js was introduced in v6.10.0\nIt's purpose is to provide a single thing to import/include, it contains both JS and CSS.\nsweetalert2.js:\nhtml\n<script src=\"./dist/sweetalert2.js\"></script>\n<link rel=\"stylesheet\" href=\"./dist/sweetalert2.css\">\nsweetalert2.all.js:\nhtml\n<script src=\"./dist/sweetalert2.all.js\"></script>\nAs you can see, with sweetalert2.all.js developers don't need to care about CSS at all, which is handy.\nThanks for using SweetAlert2 and have a good day!. Thanks!. Nice, thank you @zenflow :+1:. Thanks for reporting @seducer0719, the issue with IE11 positioning was fixed in the latest release https://github.com/limonte/sweetalert2/releases/tag/v6.11.4\nYou need to update your SweetAlert2 dependency to fix this.. :rocket: :rocket: :rocket: . 1. Nicely done @zenflow :+1:\n2. Don't worry about failing test, that's out of scope of this PR\n3. Could you please document the expectRejectons parameter to README.md and index.html?\n4. Tests for the preConfirm param could be added later, let's not do them in this PR.. Yay! We are very close to the v7 :rocket: . Hooray! Milestone achived!\n\nCongrats to everyone! :muscle: . - SweetAlert2 version?\n- How are you including SweetAlert2?. >For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\n\nSee Contributing.md. Add jsfiddle in order to get help.. Fixed in v6.11.5, thanks for reporting @Kullersj!. Thanks @toverux!. It's possible to remove the outline from buttons, but PLEASE DO NOT DO THAT. \nThere's a reason for that ugly outline!\nYou're killing the keyboard a11y of your app. People with vision disabilities, as well as keyboard-ninjas, will hate you for that.\nWe working hard to make this plugin accessible to all users, by removing buttons outline you simply ruin our effort.. Thanks for the suggestions, it's out of the scope of this plugin.. My advise is to use the latest version: https://jsfiddle.net/f28tn8hq/25/\nThanks for using SweetAlert2!. @PeymanNaeimi from your GitHub profile I can see that you're the expert in RTL. I just created an issue related to RTL: https://github.com/limonte/sweetalert2/issues/707 could you please add in comments if I forgot something.\nThanks in advance and have a nice day!. >  for the position parameter there should not be left or right. Instead, align with flex - start end\nThis is going to be the breaking change in the next major.. > Start/end could be added as aliases for left/right (and remove left/right from the documentation) - so the next major will \"break less\".\nGood thinking, aliases will be the additional feature for the next minor, major isn't required at all.. StackOverflow is the right place to ask Angular-related questions: https://stackoverflow.com/questions/ask. Hi @samturrell! Yeah, I noticed some activity there, but I still can't apply the \"active development\" term to that repo. No worries from my side, now SweetAlert and SweetAlert2 are completely different projects. SweetAlert still struggling with its main issue - poor Community support.. I totally like it the front page! :heart_eyes: \nIt will also look nice for mobile devices with wrapping the 'TOASTS' sections below the 'MODALS' section.. > So now that we have a sweetalert2 org (:tada:) should the new documentation site be moved to a separate repository?\nYes. https://github.com/sweetalert2/sweetalert2.github.io. . Thanks @jwpaine!. Agree with @acupajoe \nCancel button gets the disabled state, and it's obvious that it's not clickable because of its color and cursor.\nHere's the workaround you can use: https://jsfiddle.net/ad3quksn/191/. Not related to this repository.. I'll take care of this issue today.. Fixed in v7.0.1\n:warning:  If you upgrading from v6.x please make sure you read the release notes with some breaking changes for the new major release: v7.0.0. Should be fixed now, thanks for reporting @felix2ch . Good catch, thanks @virtualtoy!\nAccording to http://data.iana.org/TLD/tlds-alpha-by-domain.txt\nsh\ncurl -s http://data.iana.org/TLD/tlds-alpha-by-domain.txt | tail -n+2 | awk '{ print length(), $0 | \"sort -n\" }'\n(taken from https://jasontucker.blog/8945/what-is-the-longest-tld-you-can-get-for-a-domain-name)\nthe maxlength for TLD is 24 characters. \nAlso, numbes and the - character is possible in TDL.. Fixed in v7.0.1\n:warning:  If you upgrading from v6.x please make sure you read the release notes with some breaking changes for the new major release: v7.0.0. Fixed in v7.0.1. Thanks @kazumanagano, but I can't accept the deprecated way to handle keyboard events.\nhttps://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n\n. Many thanks @kazumanagano!. Released in v7.0.1\n:warning:  If you upgrading from v6.x please make sure you read the release notes with some breaking changes for the new major release: v7.0.0. Hello @J000S and thanks for asking!\nFirst of all, I would like to pay your attention that you are doing upgrade to new major release. \nMAJOR versions, accordingly to semver always have incompatible API changes.\nBefore updrading you should always take a look on the RELEASE NOTES of the new major release: https://github.com/limonte/sweetalert2/releases/tag/v7.0.0\nBefore you were handling dismissals in the rejection handler: [JSFIDDLE \u2197]\njs\nswal({\n  ...\n}).then(\n  value => {\n    // handle confirm\n  },\n  dismiss => {\n    // handle dismiss\n  }\n}\nNow you should handle both confirmations and dismissals in the fulfillment handler: [JSFIDDLE \u2197]\njs\nswal({\n  ...\n}).then(result => {\n  if (result.value) {\n    // handle confirm\n    console.log(result.value)\n  } else {\n    // handle dismiss, result.dismiss can be 'cancel', 'overlay', 'close', and 'timer'\n    console.log(result.dismiss)\n  }\n})\nIn order to have painless backward compatibility with previous versions, use useRejections: true [JSFIDDLE \u2197]\njs\nswal({\n  useRejections: true           // <<<<<<------- BACKWARD COMPATIBILITY WITH v6.x\n}).then(\n  value => {\n    // handle confirm\n  },\n  dismiss => {\n    // handle dismiss\n  }\n}\n:warning: useRejections is deprecated and will be removed in the next major release.\n\nWhy this behavior was changed you can read here: https://github.com/limonte/sweetalert2/issues/485#issuecomment-338082080. . Lovely!. The perfect Angular-variation of this logo: https://github.com/sweetalert2/ngx-sweetalert2/commit/719a422490c9b2674544ee8386a65a152910fb42. Looks like Angular doesn't like window.onkeydown.toString(), I'll take care of this issue.. Should be fixed in v7.0.1\n:warning:  If you upgrading from v6.x please make sure you read the release notes with some breaking changes for the new major release: v7.0.0. > I'd prefer to take both from src, but doing that would lead to an increased javascript size again. Reason for using src would be that we can run it through our own webpack configuration, which also generates sourcemaps for node_modules.\nYou should be able to import from src:\njs\nimport 'sweetalert2/src/sweetalert2.scss';\nimport sweetAlert from 'sweetalert2/src/sweetalert2.js';\nPS. what tool are you using on this screenshot?\n\n. > When using src for the javascript, the css is not extracted correctly\nI wonder why is that? Is that because of SweetAlert2 or your build configuration? There shouldn't be anything CSS-related in the sweetalert2/src/sweetalert2.js.. > The tool is https://github.com/siddharthkp/bundlesize, and it's quite good but we're working on our own replacement. I just have to convince management to allow us to open source some of our tools :D\nThanks for the link :+1:. > If it works, it works :-)\nThe first rule of sys admins :D But not for JS developers, we are here to BREAK THINGS! :smiling_imp: . This issue can be closed I guess, ping @StephanBijzitter . I'm still not sure if it's worth to split those entities. The difference between alerts and toasts is insignificant: https://github.com/limonte/sweetalert2/pull/672\nWe will keep this suggestion in mind, but I'll close this issue for now.. Thanks for reporting @dwaxweiler, I'll handle this issue today.. Fixed in v7.0.3, thanks for reporting!\nhttps://jsfiddle.net/ad3quksn/206/. > Has this reappeared? I'm getting the same warning in 7.28.2\nDoesn't look so, please provide the jsfiddle when the excessive warning can be seen.. @toverux the issue is reproducible right now, it seems that gulp-typescript is going all the recursive way into node_modules which is slow and wrong.. > What surprises me the most is that the task explores that /home/limon/node_modules directory (the paths in red). What's that directory exactly?\nGood catch! That's the node_modules folder inside my home folder. It's strange that it causes errors, but anyways, reverted. Thanks @toverux!. Thanks for reporting @Kappyh, this is the duplicate of #731, fixed in v7.0.3.\nUpdate to latest in order to have that fix.. Plugin does work in IE11: https://jsfiddle.net/ad3quksn/209/. @ChriStef  https://github.com/sweetalert2/sweetalert2.github.io/issues/3. You're using outdated links in your jsfiddle, we are not using jsdelivr anymore.\nIn future, please pay attention to this link before posting an issue, there's a new jsfiddle template in https://github.com/limonte/sweetalert2/blob/master/.github/CONTRIBUTING.md\n\n. > Btw: is there a way to keep a swal opened, if the value, the user has entered, is not the value we've expected?\nYes, https://jsfiddle.net/ad3quksn/210/. Pro-tip: as a collaborator, you're granted to create branches directly on this repo instead of acupajoe/sweetalert2. In that case all collaborator will be able to make small amends to your branch instead of asking you to do that.. Released in v7.0.5 :rocket: . make sure you're using the latest stable version\nhttps://jsfiddle.net/ad3quksn/211/. it works https://jsfiddle.net/ad3quksn/213/. ```js\nswal({\n  title: 'Good job!',\n//text: 'The link that should work',\n  html: 'The link that should work',\n  type: 'success'\n});\n```. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/199/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/209/\n\nSee CONTRIBUTING.md. The provided jsfilldle works fine in IE11 :+1: . Fixed, thanks for reporting @redochka . Hello @angrykoala and thank you for reporting this issue. In order for us to better understand it, could you please make a quick jsfiddle with a header with bootstrap \"sticky-top\" class and swal.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/199/. Many thanks for the perfect jsfiddle! Looks like the issue indeed, I'll take a look at it during the weekend.. The fix is actually coming in a couple of minutes :rocket: . - fixed in https://github.com/limonte/sweetalert2/commit/eea3b424aa96c8f678621b806aefb7dd60e47c76\n- released in https://github.com/limonte/sweetalert2/releases/tag/v7.0.6\n- live demo: https://jsfiddle.net/ad3quksn/226/. @raydawg2000 a new patch release (7.28.3) has been published, it will fix your issue:\n\nhttps://jsfiddle.net/s8f12xad/1/\njs\nswal({\n  onAfterClose: () => window.scrollTo(0,0)\n})\n. > Maybe there is a technical reason why it has to go there.\nYes, .then() is happening before the end of modal animation and before restoring the focus to the last active element.\n\nEither way, there are ways to work around it but it does add some additional complexity that perhaps isn't necessary.\n\nI agree about a bit of overhead, but it's really just a bit of it:\njs\nvar swalResult\nSwal({\n  onAfterClose: () => {\n    console.log(swalResult)\n  }\n}).then(result => {\n  swalResult = result\n}). You're very welcome! Thank you for using SweetAlert2!\nIf anything related to onAfterClose() will change, I'll notify you in this thread.. Fixed, thanks @markgmarkg and @mattbrunetti :beers: . Fixed in 7.0.7, thanks for reporting!. Works fine: https://sweetalert2.github.io/#dismiss-handle\n  . @acupajoe will you have time to take a look at this issue?. Fixed in v7.0.9, thanks for reporting @kgrvr!. >For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/199/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/209/\n\nSee CONTRIBUTING.md. @imdadturi thanks for using SweetAlert2! Have a great day!. >For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/199/\n\nSee CONTRIBUTING.md. not related to SweetAlert2, the issue is in the messageAlert helper function.. @zenflow will you have time to take a look at this issue?. Roger, I'll handle it :+1: Congrats with changes in your life, changes are always for the better!. Fixed in v7.0.9, thanks for reporting @Barterr!. That was quick! Thank you @acupajoe . Here you go: https://jsfiddle.net/ad3quksn/254/. Merged and released in v7.1.0, https://jsfiddle.net/ad3quksn/263/\nThank you @niftylettuce :beers: . Hi @Macfly60 \nThe plugin works in IE11, you can ensure that with this jsfiddle: https://jsfiddle.net/ad3quksn/250/\nThe examples page doesn't work with IE11, the reason is that we want to demonstrate how to use the plugin in a modern way. Read more about the reasoning: https://github.com/limonte/sweetalert2/issues/711#issuecomment-344089223. https://sweetalert2.github.io/ is now working for IE11 :tada: . Works fine: https://jsfiddle.net/ad3quksn/263/\nKeep in mind that with opened console focus will always be in the console, not in the document.. Thanks for the PR @toddwprice! \nThere's tslint enabled on this project, you can run it with gulp ts-lint.\nIt fails with the no-namespace error: https://palantir.github.io/tslint/rules/no-namespace/\n\nES6-style external modules are the standard way to modularize code. Using module {} and namespace {} are outdated ways to organize TypeScript code.\n\nRelated question on StackOverflow: https://stackoverflow.com/q/39827281/1331425\nI'm not in favor of merging outdated stuff unless there are some proper reasons to do that. @toverux what do you think?. My bad :man_facepalming: will fix asap. Fixed in v7.0.10, thanks @aitorllj93 for reporting and @toverux for explaining my fuckup. >For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/249/\n\nSee CONTRIBUTING.md. https://jsfiddle.net/80k8z3sn/5/ works nicely. Very nice, thanks a lot for this PR @andreeib!\nWhat do you think about the opposite case - mousedown on the container and mouseup inside the popup? IMO in this case modal shouldn't be closed as well. What do you think?  . Many thanks @andreeib for the great PR! I will cover this functionality with tests by myself and make a new release later.. Released in https://github.com/limonte/sweetalert2/releases/tag/v7.1.1 :tada: . The examples page is using async/await functions which were added to Firefox 52 and greater.\nThe plugin by itself should work well in Firefox 45, you can check that here: https://jsfiddle.net/ad3quksn/249/. https://github.com/limonte/sweetalert2/issues/606#issuecomment-325697220. @crabbly with this change your jsfiddle will work fine, take a look and tell if this is a better solution for you: https://jsfiddle.net/53wc51o2/4/ . 1. There's a warning in your dev console:\n\n\n\nhttp://youmightnotneedjquery.com/\n\n\nthe proper fix: target: $(content) -> target: content\n\n\nthe fix in case you can't code w/o jQuery: target: $(content) -> target: $(content)[0]\n. Fixed, thanks a lot for reporting @zhangenming!. https://jsfiddle.net/ad3quksn/266/. Hi @mrdigitalau and thanks for reporting this issue!\n\n\nCould you please provide a simple jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/249/. I'm closing this issue due to inactivity, leave a comment with a jsfiddle if you think it should be reopened.. @shubhsnov your issue is totally unrelated to SweetAlert2 but I'll help with your homework. \n\n\nyou forgot to prevent default action in anchor click handler\nyou are including different versions of foundation (6.4.3 for js and 5.4.6 for css)\n\nHere's the fixed jsfiddle: https://jsfiddle.net/limon/d33uzanv/11. I will reopen this issue because it affecting so many people and the suggested solution body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) { overflow-y: visible !important; } looks very hacky to me.\n\nPLEASE everyone in this thread, provide a jsfiddle with your case. Without code, we can't help you much.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/249/\n\nAt least, say something about your environment. Which framework are you using? What version? etc.. I think I finally fixed this nasty issue! :tada: \nPlease check out the latest release: https://github.com/sweetalert2/sweetalert2/releases/tag/v7.4.0. If the fix in 7.4.0 works for you, please remove the suggested here hack:\ncss\nbody.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) { overflow-y: visible !important; }\nsince it depends on internal classnames which theoretically could be changed in one of next releases. @7twin @mitomm @abrambailey guys, I would like to help you, but I can't reproduce the issue.\nCould you please provide a bit more information about the document structure of your projects. If they are public provide a link. If not, provide either test credentials (my email limon.monte@gmail.com) or replicate the document structure in jsfiddle.. Thanks a lot @7twin for the email with the code example! The issue should be fixed in the latest release (v7.20.6) :tada: . Alright, closing the issue then. I think it's finally fixed.. @glendonyeo many thanks for jsfiddle! The issue with your case is that the document is outside of <html> borders:\n\nTo fix it remove:\n\nhtml { max-height: 100%; } from main.css\ninline style=\"height: 100%;\" from <html> \n\nAfter those changes SweetAlert2 will works as expected.. Thanks @glendonyeo! I made another issue about this https://github.com/sweetalert2/sweetalert2/issues/1107\nSubscribe to it to track the progress.. I just released v7.20.9 which contains the fix for #1107 \n@glendonyeo you can  remove html{height: auto !important} from your css :tada: . @infoeon what's the purpose of using overflow: auto on html? . > For allowOutsideClick, accept a boolean or a function with no args that returns a boolean (I think the type would look something like allowOutsideClick?: boolean | () => boolean)\n\nAdd a getter method to expose the \"loading\" state, i.e. swal.isLoading()\nPossibly add more getter methods, exposing other bits of state, particularly swal.isValidating() since it's pretty similar.\n\nPerfect! :+1: :+1: :+1: \n\nwhy not a method to change the allowOutsideClick to be set? similar to showValidationError in the example?\n\nIt's not possible to change params after popup initialization.\n\nif not I feel the second idea from @zenflow would be better than using string\n\nYeah, I like it more as well. It'll provide a flexibility for future needs.\n@zenflow please go ahead with the PR :rocket: Many thanks, you're making this plugin better!\nHappy holidays everyone! :gift: :gift: :gift: . https://jsfiddle.net/limon/k6vm7y5o/ :tada: \nThanks for the nice feature request @angrykoala and for the beautiful solution @zenflow :beers: . Closing this in favor of #788. https://jsfiddle.net/ad3quksn/268/. > Yes totally, the sooner the better, so user will have less efforts to make the transition when the left/right equivalents get deleted (if that's still the plan).\nAgree.\n\nI'd even remove the You can also use RTL-unfriendly 'left' and 'right' instead of 'start' and 'end'. part in the documentation. Just replace with the new aliases, this won't be a breaking change since left/right variants will still work, and new users will not even know these have existed.\n\nI was thinking about that as well and then added the sentence about 'left' and 'right' just in case. But, yeah, that wasn't necessary. Removed.. https://github.com/limonte/sweetalert2/pull/785. duplicate of #761 . @zenflow will you have time to implement this helper method?. Awesome, thank you @zenflow! Wish you lot of success with your ideas and projects in 2018!. Could you please describe what type of component you're trying to add? . Thanks for reporting @nirdil, I can reproduce it.\nThe jsfiddle: https://jsfiddle.net/limon/ad3quksn/272/\n@acupajoe will you have time to take a look at this issue?. Released :tada: \nhttps://github.com/sweetalert2/sweetalert2/releases/tag/v7.4.0. Released: https://github.com/limonte/sweetalert2/releases/tag/v7.3.1 . > one step closer to a stable Lad release\nWish you a lot of success with Lad :rocket: :rocket: :rocket: \n\ncan you publish to npm btw?\n\nShould be published automatically, but Travis has some issues right now. Published manually.. No objections, go ahead! I'll be happy to review and merge your contributions :rocket: . > SweetAlert should fire the callback when the close animation finishes and the modal window has become or just about to become not visible.\nonClose actually fires after the closing animation finishes.\nThe live example you attached is totally fine, the closing animation is currently broken in SweetAlert2.\nThe issue will be fixed in https://github.com/limonte/sweetalert2/issues/761\n  . Appreciate your opinions @birjolaxew @FinesseRus \nLet's stay framework-agnostic in this repo and do integrations somewhere else.. > bundlesize: 485B larger than master\n0.5kb is too much for such a small polyfill.. >For bug reports, please include a jsfiddle in order for us to be able to reproduce the issue.\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/249/\n\nSee CONTRIBUTING.md. Attach the jsfiddle if you thinks that the issue is valid and should be reopened.. I just created the org https://github.com/sweetalert2 and invited you all guys :tada: \nAlso, the sweetalert2 repo is transferred to the org, read about transferring repos: \nhttps://help.github.com/articles/transferring-a-repository-owned-by-your-personal-account/. > I'm just wondering if the npm package should then be re-scoped to @sweetalert2/ngx-sweetalert2 (instead of @toverux/) but that would be the 2nd time I bother my users with a package name change (npm does not support package renaming, so it would be a brand new package at the package manager level).\nLet's not do that for now. The whole front-end ecosystem is so unstable, it would be better not to cause additional pain to our users without strong reasons for that.. Many thanks for bringing up this discussion @zenflow, it's the absolute necessity for our users to have \"officially\" supported integrations with different frameworks.. I granted the admin privilege to all of you guys, which means the ability to clone, pull, push, and add new collaborators to all repositories. \nThis needed to eliminate the 1-human dependency, SweetAlert2 will be good even if a bus will hit me tomorrow.. Alright, the migration seems to be successful \n\nhttps://www.npmjs.com/package/sweetalert2\nintegrations with Travis, bundlesize and Greenkeeper: https://github.com/organizations/sweetalert2/settings/oauth_application_policy\npoor deprecated Bower seems to be :snail: https://github.com/sweetalert2/sweetalert2/issues/799. @zenflow done, now https://limonte.github.io/sweetalert2/ won't work, but I guess that's the less lost than all broken links to GitHub issues and files\n  . Thanks @JanisGruzis for keeping track on our today's migration process and reporting this issue!\n\nHere's the screenshot I got from Bower:\n\nConsidering that the current number of stars is 4074 and Bower shows 4035, I suspect the cache on the Bower side, my guesstimate that the cached version is 2-3 days old.\nLet's ways for a couple of days and recheck bower.io, it should be fine since I updated related fields:\n\nhttps://github.com/sweetalert2/sweetalert2/blob/master/bower.json#L3\nhttps://github.com/sweetalert2/sweetalert2/blob/master/bower.json#L42 \n  . Poor deprecated Bower is the :snail: \n\nI did unregister sweetalert2 and then registered it again, but it still shows outdated infor for the package. Sorry, guys, this is not in our hands, so let's just wait for the cache update.. sh\ncurl https://registry.bower.io/packages/sweetalert2\n{\"name\":\"sweetalert2\",\"url\":\"https://github.com/sweetalert2/sweetalert2.git\"}. # bower cache clean\nand then try again. Bower finally updated the info:\n\n. I'm closing this in favor of https://github.com/sweetalert2/sweetalert2/issues/850. > Can you redirect the old url to the new docs?\nUnfortunately, it's not possible, related comment: https://github.com/sweetalert2/sweetalert2/issues/798#issuecomment-355589282. Hopefully, Google will update the URL in a couple of days.. https://sweetalert2.github.io/#chaining-modals. Thanks for the PR @avil13!\nFor people who are not so familiar with Vue.js, could you please explain what's the difference between your repo and https://github.com/lishengzxc/vue-sweetalert?. Could you please elaborate \"more correctly\" with an example?. Thanks for the explanation, now I see the difference :+1: \nWould you like to transfer your repository to the https://github.com/sweetalert2 organization and become a member of it?\nBy doing so, we can completely replace https://github.com/lishengzxc/vue-sweetalert with your project :rocket: \nWhat do you think?. I just added you to the https://github.com/sweetalert2 organization :+1: \nNow you can transfer the repo to it https://help.github.com/articles/transferring-a-repository-owned-by-your-personal-account/. Perfect! I pinned your project to be visible here: https://github.com/sweetalert2. Final steps before merging:\n\nupdate the url of your project\nremove the lishengzxc/vue-sweetalert from the list\n\nMany thanks!! :rocket: :rocket: :rocket: . @zenflow yup, seems that I was rushing without strong reasons to rush. Apologies to everyone.\nIt seems that @samturrell is doing Vue.js, Sam what is your opinion on adding this wrapper?. Thanks everyone for expressing your opinions and arguments. The repository was moved back to @avil13 but it will be listed in the Related community projects section of README.. This will be done a little later this week in scope of #800 \n@abgaryanharutyun subscribe to #800 to be informed. I'll post the jsfiddle with your case there after required changes are done.. Hello again @abgaryanharutyun \nHere you go with examples:\n\nJS-way: https://jsfiddle.net/ad3quksn/333/\nCSS-way: https://jsfiddle.net/ad3quksn/334/. Unfortunately, multiple modal/toasts aren't possible for now due to the plugin design which was built for modal popups.\n\nAlso, I don't have plans to implement multiple toasts in the near future so if you need that functionality please take a look on toasts specific plugins such as Toastr or Izitoast.. > Keep the current behavior, which may be a bit surprising at first but makes perfect sense ;\nSounds like a perfect option. I vote for doing nothing and keeping the perfect sense :+1: . > We don't have the methods to go back/forth in a queue yet, though.\nTechnically it's possible to go forth by swal.clickConfirm(): https://jsfiddle.net/ad3quksn/322/. > This is because JSBin places the \"JavaScript\" code in the  if there is no , so it is ran before the body is loaded into the DOM. It is not a problem with SweetAlert2.\nAgree, reported the issue to jsbin https://github.com/jsbin/jsbin/issues/3190\nNothing to fix on SweetAlert2's side.. Thank @acupajoe!\nI love changes making the dist smaller, even 1B smaller :)\nbundlesize \u2014 dist/sweetalert2.all.min.js: 12.85KB < maxSize 15KB gzip (1B smaller than master, good job!). Let's not fix the issue of JS engine in this tiny UI plugin :) \nMy suggestion is to add some spaces to inputOptions keys before passing it to swal(): https://jsfiddle.net/ad3quksn/324/ \nSweetAlert2 will autotrim the result value for you, so you will get the expected value and select will keep the order of items.. > This shouldn't be hard to accomplish, or add much complexity. I can submit a PR if this sounds acceptable @limonte.\nI think you underestimating the complexity of this change. How to match which key will represent the key, which will represent the value? What will happen with key duplicates? What if some key isn't present - null or undefined?\nThis is out of scope of SweetAlert2. I hope our users are able to write a one-liner to provide the data in the expected format, e.g. the array from this issue can be easily converted to object:\nhttps://jsfiddle.net/ad3quksn/325/. > However... we could eventually support Map which is an adapted data structure for that type of use cases.\nMaps are cool because they will take care of key dups out of the box:\n\nMaps are supported by IE11 and easy to add, I'll do that!. @nickraphael Maps support has been added :tada: \nHere's the jsfiddle with your data: https://jsfiddle.net/ad3quksn/348/\n```js\nconst items = [ \n  { id: 4, name: \"nick\" },\n  { id: 10, name: \"dave\" },\n  { id: 2, name: \"zac\" },\n]\nconst inputOptions = new Map\nitems.forEach(item => inputOptions.set(item.id, item.name))\nswal({\n  input: 'select',\n  inputOptions,\n  inputValue: 10\n})\n```. https://github.com/sweetalert2/sweetalert2/blob/master/.github/CONTRIBUTING.md. why?. https://sweetalert2.github.io/ is pretty enough :) The probability of GitHub death is near 0, the probability of https://dns.js.org/ death is significantly higher. I prefer not to have weak dependencies just because they are \"pretty\".\nRead more about the blind usage of \"pretty\" deps: https://hackernoon.com/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5\n\njs.org depends on one human being:\n\n\ngithub.io depends on a big organization with a lot of trust\n. CI is working because there's gulp step before npm test, you need to build the dist folder before running test, gulp watch should do that automatically.. Perfect! Thank you @zenflow \nSorry about the delay in my responses and reviews, I'm currently in Lapland enjoying the lovely winter :snowman: \nFeel free to merge this PR and cover typings in another one, or if you think it's better to cover them here - feel free to do so.\nI'll take care of sweetalert2.github.io when I'll be making the new release.. I'm updating dist files only when publishing a new version. https://github.com/sweetalert2/sweetalert2/commit/8377c3c4a0ae1eff99b22c654818391e862a5d82 isn't released yet, which is quite bad btw - documentation is there, but the release isn't.\nI'll do the release today or tomorrow.. In-browser tests stop working with this change, steps to reproduce:\n\ngulp watch\nhttp://localhost:8080/test/qunit/. > Built files are useless redundant noise in the git diff (a lot of it if you can never commit them), and generally make using Git more difficult for everyone\n\nThere's assume-dist-unchanged npm task, would this be helpful for contributors to auto-run assume-dist-unchanged once they run gulp watch? Please leave your opinion here: https://github.com/sweetalert2/sweetalert2/pull/823\n\nListing them in the .gitignore does not have any effect because it does not make any sense; garbage in, garbage out.\nBuilt files have no place in version-control (aka source-control, as in source, not build-control).\nPackage managers are our build-control; they are what we use to distribute/share build-code.\n\nRelated issues from the related project :) \n - https://github.com/t4t5/sweetalert/issues/733\n - https://github.com/t4t5/sweetalert/issues/748\nI prefer to be less strict about VCS definition and be more accessible for all users and workflows.\n@jamiesonbecker has listed several valid arguments for keeping the dist folder with both unminified and minified versions.. I vote for removing the dist folder in the next major, as it's a breaking change for our Bower users.. @zenflow I tested npm run release twice and both times got this error:\nPushing to Github...\n    (pid:13813) [cmd]   git push origin dist:dist --tags\n    (pid:13813) [ERR]   To git@github.com:sweetalert2/sweetalert2.git\n    (pid:13813) [ERR]      db548db..9774a3c  dist -> dist\n    (pid:13813) [ERR]    * [new tag]         v7.8.5 -> v7.8.5\n    (pid:13813) [ERR]    ! [rejected]        v6.6.10 -> v6.6.10 (already exists)\n    (pid:13813) [ERR]    ! [rejected]        v6.6.8 -> v6.6.8 (already exists)\n    (pid:13813) [ERR]    ! [rejected]        v6.6.9 -> v6.6.9 (already exists)\n    (pid:13813) [ERR]    ! [rejected]        v6.7.0 -> v6.7.0 (already exists)\n    (pid:13813) [ERR]    ! [rejected]        v6.9.1 -> v6.9.1 (already exists)\n    (pid:13813) [ERR]   error: failed to push some refs to 'git@github.com:sweetalert2/sweetalert2.git'\n    (pid:13813) [ERR]   hint: Updates were rejected because the tag already exists in the remote.\n    (pid:13813) [ERR]\n    (pid:13813) [out]\n{ Error: Command failed: /bin/sh -c git push origin dist:dist --tags\nTo git@github.com:sweetalert2/sweetalert2.git\n   db548db..9774a3c  dist -> dist\n * [new tag]         v7.8.5 -> v7.8.5\n ! [rejected]        v6.6.10 -> v6.6.10 (already exists)\n ! [rejected]        v6.6.8 -> v6.6.8 (already exists)\n ! [rejected]        v6.6.9 -> v6.6.9 (already exists)\n ! [rejected]        v6.7.0 -> v6.7.0 (already exists)\n ! [rejected]        v6.9.1 -> v6.9.1 (already exists)\nerror: failed to push some refs to 'git@github.com:sweetalert2/sweetalert2.git'\nhint: Updates were rejected because the tag already exists in the remote.\nCould you please make the next release and validate if this happens to you as well?. Update: \n\n\nI installed the latest version of Git:\n```sh\n\ngit --version\ngit version 2.16.1\n```\n\n\n\nTried to make another patch release and got the same issue:\n\n\nPushing to Github...\n    (pid:7032)  [cmd]   git push origin dist:dist --tags\n    (pid:7032)  [ERR]   To github.com:sweetalert2/sweetalert2.git\n    (pid:7032)  [ERR]    * [new tag]         v7.8.7 -> v7.8.7\n    (pid:7032)  [ERR]    ! [rejected]        dist -> dist (non-fast-forward)\n    (pid:7032)  [ERR]    ! [rejected]        v6.6.10 -> v6.6.10 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.6.8 -> v6.6.8 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.6.9 -> v6.6.9 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.7.0 -> v6.7.0 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.9.1 -> v6.9.1 (already exists)\n    (pid:7032)  [ERR]   error: failed to push some refs to 'git@github.com:sweetalert2/sweetalert2.git'\n    (pid:7032)  [ERR]   hint: Updates were rejected because the tip of your current branch is behind\n    (pid:7032)  [ERR]   hint: its remote counterpart. Integrate the remote changes (e.g.\n    (pid:7032)  [ERR]   hint: 'git pull ...') before pushing again.\n    (pid:7032)  [ERR]   hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n\nIn the meantime, what happens if you switch to the dist branch and run git push origin dist:dist --tags? On my system I have \"git version 2.14.1.windows.1\" and it prints \"Everything up-to-date\".\n\nHere's the output of git push origin dist:dist --tags when I'm on dist branch:\n[dist] }> git push origin dist:dist --tags\nTo github.com:sweetalert2/sweetalert2.git\n ! [rejected]        dist -> dist (non-fast-forward)\n ! [rejected]        v6.6.10 -> v6.6.10 (already exists)\n ! [rejected]        v6.6.8 -> v6.6.8 (already exists)\n ! [rejected]        v6.6.9 -> v6.6.9 (already exists)\n ! [rejected]        v6.7.0 -> v6.7.0 (already exists)\n ! [rejected]        v6.9.1 -> v6.9.1 (already exists)\nerror: failed to push some refs to 'git@github.com:sweetalert2/sweetalert2.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\nI guess here's the fix for this particular issue: https://github.com/sweetalert2/sweetalert2/pull/875\n\nIf you can reproduce with that command, does this fix it? https://stackoverflow.com/a/39534896\n\nI can't find the --tags option in man git pull, probably this is an outdated answer. . (pid:7032)  [ERR]    ! [rejected]        v6.6.10 -> v6.6.10 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.6.8 -> v6.6.8 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.6.9 -> v6.6.9 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.7.0 -> v6.7.0 (already exists)\n    (pid:7032)  [ERR]    ! [rejected]        v6.9.1 -> v6.9.1 (already exists)\nI believe something is wrong with these local tags in my repo, I will delete the local repo folder and clone it from the origin to have the fresh repo.. > I believe something is wrong with these local tags in my repo, I will delete the local repo folder and clone it from the origin to have the fresh repo.\nYup, that was my issue. Apologies for being a Git-newbie :) Now it works fine:\n[dist] }> git push origin dist:dist --tags\nEverything up-to-date\nBut I believe this is still a valid PR: https://github.com/sweetalert2/sweetalert2/pull/875, please take a look when you have time, thanks a lot for helping me out with this!. > Combine these steps into one\nWell, steps 4 and 5 are already combined, so let's just drop step 5 from readme - #825\nStep 6, tests, takes around 10 seconds to perform so I agree with @acupajoe that it's too much to trigger the expensive operation on each save. For me personally, it'll be annoying. Let's not do that.\nAlso, for some devs it's easier to run tests in browser instead of command line.\n\nI'd push for adding npm test to be run as a precommit hook rather than every time a file is changed.\n\nPerforming 10-seconds operation on every single commit could be very annoying and the first rule of ~~Fight Club~~ Git - \"commit early, commit often\" could become a nightmare :). @zenflow do you think that we should include testing in gulp watch? IMO that would be too much.\nIf no, that I guess this issue could be closed.. > The only feedback I can give at the moment is that assume-dist-unchanged smells strongly of technical debt.\nIt is a technical debt, I completely agree. We'll drop it in the next major along with dropping the dist folder.. I removed commits to dist and IDE files and also rebased the PR to master.. YAY! Thanks @samturrell for submitting this code and sorry for the delay in my response. I'm in the vacation-mode currently, making :snowman: in cold Lapland :)\nI love this feature, it will cover a ton of real use-cases. I even willing to increase the bundlesize limit since it currently adding around 4KB.\nQuestion: what should be the result value in case of multiple inputs? Should we introduce the id key for the input definition object so the returning value will be the object like this:\n{\n  input1-id: input1-value,\n  input2-id: input2-value\n  ...\n}. > Do you think the inputs should be an array or an object with the key being the input name?\nAn object, or even a Map, as @toverux suggested in https://github.com/sweetalert2/sweetalert2/issues/812#issuecomment-357219832. Yay! Welcome back @samturrell!\nTwo years per feature is totally fine, I know that from my own experience https://github.com/sweetalert2/sweetalert2/issues/25#issuecomment-359097183 \ud83d\udc0c . In order to use arrow functions for IE11, you need to transpile them to ES5, e.g. with Babel: https://babeljs.io/docs/plugins/transform-es2015-arrow-functions/. This feature is hopefully upcoming, subscribe to https://github.com/sweetalert2/sweetalert2/pull/824 to be updated. I would love to have the form builder feature, but I suspect that it will inevitably bring complexity to the codebase and increase the bundle size.\nThe absence of upvotes on this issue means that the use-case isn't widely needed by devs.\nAlso, since I'm fighting for simplicity of SweetAlert2's usage and maintenance, I'm closing this issue.. Perfect! Many thanks, @patrickhlauke!. Oh, crap. Why Bootstrap 3 is setting font-size: 10px; for html?!\njsfiddle demonstrating the issue: https://jsfiddle.net/ad3quksn/335/\n\nLuckily, they stopped doing that in v4: https://jsfiddle.net/ad3quksn/336/\nBut, I guess the upgrade from v3 to v4 isn't an option :)\n\nThanks for reporting this issue @R00118189!. It looks like I broke a lot of Bootstrap 3 websites with releasing https://github.com/sweetalert2/sweetalert2/releases/tag/v7.5.0 as a minor and not as a major :man_facepalming: \nAny ideas how I can this would be very welcome :pray: . @lvalladares the issue is on Bootstrap's side, see the solution https://github.com/sweetalert2/sweetalert2/issues/834#issuecomment-359237178. Many thanks for this improvement @zenflow \nQuick unit tests are the foundation of a healthy project!. > I believe the last bit of style in the defaults is for background\nExactly! Feel free to finish the themability if you have time today. If not, I'm handling that tomorrow, now I need to sleep :D. > As titled: Remove CJS (CommonJS) build since UMD (Universal Module Definition) works in CJS environments\nI'm not an expert on this, @zenflow could you attach the relevant article/specs?\n\nThis is a breaking change so note that this PR is aimed at the canary branch. I think it is a good idea to stage changes for the next major release there.\n\nNice idea, agree :+1:\n. @samturrell if you have time, take a look on this change, thank you!. Thanks @zenflow, and sorry for the stupid question :)\n@samturrell no need in the review, I believe this is a good change.. > Actually @limonte what if we extended this PR with a script to make a release (a script that would implement this idea of having a dist branch #820 (comment)):\n\nensure Git is on master branch\ndo some sanity checks on packageJson.version (make sure it was updated)\ndelete the dist folder (as it will conflict with the next step)\nswitch to the dist branch\nmerge from master\nrun the build\ncommit the changes in the dist folder\ntag the commit with v${packageJson.version}\nnpm publish\ngit push origin dist:dist --tags\nswitch back to master so you can continue to work\nThis would mean zero changes to how Bower users use our package. We could merge it right into version 7.\n\nSounds like a perfect solution which will prevent the breaking change! Please create another PR and target the canary branch. After review, we can merge the canary into master.. > You mean cut the next major release?\nYup. If everything goes as expected users won't have any breaking changes. Without breaking changes we don't need a major bump.. You spotted two valid issues in the current dev workflow, but the proposed solution makes things more complicated.\n\n--skip-minification because it isn't (shouldn't be) needed for active development\n\nIt's not needed indeed, so why we are doing it in the first place? I don't know :) It's definitely the part of gulp build, not gulp watch.\n\n--continue-on-lint-error because it's annoying to have everything break when there are stylistic or minor problems in code, and have to fix it immediately and start the start script again because it crashed.\n\nLinting should not be in scope of watch task, it's slowing down the dev process and it's annoying when it crashes.\n\nSo, here's the simpler solution: #844. > #844 does not prevent sass minification in the 'watch' task. \nNow it does.\n\nlinting currently is part of the watch task, as I think it should be since it gives feedback during active development\n\nThis is debatable. In the ideal world, humans shouldn't care about linter issues, humans' IDEs should.. > Nope\nOops, my bad. Done in https://github.com/sweetalert2/sweetalert2/pull/844/commits/298051aa334555df269bcc44e53713aa557f1318. > Linter issues are not just stylistic issues. Many of them (the useful ones) are not \"fixable\", and need the attention of a human\nAgree. Undone my recent change in https://github.com/sweetalert2/sweetalert2/pull/844/commits/b90744d704c183c6a894e2263cf5cb5dfaa4394d\n\nEven for \"fixable\" stylistic issues, its better to be alerted sooner than later, no?\n\nIf a developer really want to be alerted, he/she will set up the IDE properly. I am alerted without keeping an eye on the console:\n. Is this PR still relevant after https://github.com/sweetalert2/sweetalert2/pull/885 has been merged?. Oh, yeah, true that. Yes, go ahead with rebase and let's merge --continue-on-lint-error.\nAlso, should we add --continue-on-lint-error to https://github.com/sweetalert2/sweetalert2/blob/master/package.json#L90 so contributors will have the perfect DX?. > Also I think it might be better to do this check with eslint (which we're already using) \nWe are using standard for this project which doesn't require .eslint.json or any other config, it just works. If we replace it by eslint we'll have one more config file in the repo.\nLet's not merge this just because I found another one <cool>.js library :). > Note that a lot of unnecessary things are still run when scss changes: 'js-lint', 'commonjs', 'production', 'all', 'all.min', and the minifying part of 'sass'\nGood catch, done. Now only sass -> css compilation is triggered on changes in scss files, no linters, no minification.. > Now sass-lint never gets to run, even in CI.\nFixed in https://github.com/sweetalert2/sweetalert2/pull/844/commits/9d3565fc208811323dcae48388f0c74e78cc553a\n\nif we want we can have lint errors (like having a semicolon) not prevent the build and the other checks\n\nPartly agree. We can ignore warnings (like missing a white space), but ignoring errors isn't a good approach.. > I am -1 for removing linting from the watch task.\nI must agree with you @zenflow \nChanged my PR, now the gulp watch task will perform:\n- SASS linting and SASS -> CSS compilation (dist/sweetalert2.css) for changes in src/*.scss files\n- JS linting and JS compilation (dist/sweetalert2.js) for changes in src/**/*.js files\n- TS linting for changes in sweetalert2.d.ts\nAfter this change, there's no need in adding the --skip-minification option from #842 but the --continue-on-lint-error is useful and I'd like to discuss it in #842 . Yay, this tiny change could be a big improvement for the initial DX. Thanks @zenflow!. > I'm not sure this is desired\nThis is desired. You're able to override the font-family for SweetAlert2 either in CSS as you mentioned or with SCSS variable $swal2-font.. @sloria please do so, I'd like to hear contributors' opinions on this.. There's the interesting detail at least in Chrome:\n\nButtons still have Arial font. Should we do something about that or keep the default browser behavior? . > Buttons still have Arial font. Should we do something about that or keep the default browser behavior?\nIn case of  tags, font-family is not inherited automatically. That's a default browser's behavior, let's not change it.. Thanks for your contribution @sloria!\nWhat's your opinion about the future-proof system-ui font-family?\nFrom https://css-tricks.com/snippets/css/system-font-stack/\n\nChrome and Safari have recently shipped \"system-ui\" which is a generic font family that can be used in place of \"-apple-system\" and \"BlinkMacSystemFont\". > What's your opinion about the future-proof system-ui font-family?\n\nThis article explains well why system-ui shouldn't be used: https://infinnie.github.io/blog/2017/systemui.html\nAlso, the Bootstrap's PR with system-ui removal: https://github.com/twbs/bootstrap/pull/22377. @sloria I'm the one who bringing a lot of confusions to this project! :D\nAfter some thinking during my lunch I need to admit that you were right in the first place in #846 and @toverux is right.\nPlease amend your PR and set the $swal2-font to inherit. Sorry for not agreeing with your initial point right away :). Released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.7.0\nThanks again @sloria :beers: . Are you maybe looking for the target option?\njs\nswal{(\n  target: $('#anotherModal .modal-body')[0]\n}). Remove https://github.com/sweetalert2/sweetalert2/blob/master/package.json#L49-L54. The implementation should be pretty straightforward but feel free to express your thoughts or suggestions.. > LGTM, but will you update the .d.ts with getFooter() and the footer param?\nDone.. @toverux could you please help me with .d.ts? I don't know the right way to indicate here that Map is also supported. Thanks a lot for your help guys!. Duplicate of #834\nReason: Bootstrap 3 is setting font-size: 10px for html. \nSolution: \ncss\n.swal2-popup {\n  font-size: 1.6rem !important;\n}. Rebased to master w/o any changes to the code itself.\n\n@limonte Are there any other flags or parameters needed here?\nawait execute('npm publish')\n\nNope, as long as you are logged in with the account which have a permission to publish, npm publish will work w/o any additional flags/params.. https://sweetalert2.github.io/ is now working for IE11, @rskaarup please check it out :tada: . Greenkeeper added: https://github.com/sweetalert2/sweetalert2/pull/862. Let's just fix the null-value issue. I would not introduce the breaking change without strong reasons for that. Some people are expecting \\n to <br> conversion and I don't see any reasons why we shouldn't meet their expectations, e.g. the valid argument from https://github.com/t4t5/sweetalert/pull/50 \n\nThe default javascript's alert supports \\n as line-break so sweetalert should too.. Released in v7.9.0 :tada: \n\nNow you can use Nyan Cats as a backdrop https://jsfiddle.net/ad3quksn/370/ :unicorn: . Yup, I don't have anything to add to @toverux's comments. Closing the issue. . > Would a swal.getDefaults method to match swal.setDefaults be a good idea?\nSounds like a good idea and it would be helpful for that brute-force test, but I can't see the real-life use-cases for that helper method. Can you come up with some example of how swal.setDefaults() could be potentially useful for our users?. Yup, it's on your side, https://unpkg.com/sweetalert2 works fine.\nYou can use the alternative - https://www.jsdelivr.com/package/npm/sweetalert2 . > Ah, @limonte, I merged this as a merge commit.. Am I correct that you normally do \"squash merging\"? Is there any exception to this? If not, do you mind if i disable the other options under \"Merge button\" here so I don't screw this up again?\nThat's fine, I disabled all other options except 'squash and merge' to prevent confusions in future.. Something is wrong with the bundlesize token:\n\nI'll fix that, thanks for noticing :+1:. https://stackoverflow.com/questions/ask. What do you think about this one: https://jsfiddle.net/ad3quksn/363/\nRecorded gif (it took me around 20 times to record it, sorry about the noise in Github notifications):\n\n. <offtopic>\nSweetAlert2 rocks npmtrends.com/sweetalert-vs-sweetalert2 because of all of us :sunglasses: :sunglasses: :sunglasses: :sunglasses: :sunglasses:\n\n</offtopic>. Updated jsfiddle: https://jsfiddle.net/ad3quksn/365/\n\nMaybe the \"Oops\" one isn't necessary. People will quickly find out that there are more icons.\n\n\"Oops\" looks nice IMO, I'd like to keep it, but I moved the success one to the end of the AJAX request example.\n\nI think we can remove the success confirmation for the AJAX request and shorten the title.\n\nThe title shortened. Success confirmation is useful IMO just to demonstrate that modals can pass data to each other. \n\nMake the toast centered and maybe artificially bigger? I don't think it is important for the demo GIF to be a wysiwyg.\n\nGood idea, the toast example is now bigger (1.3rem), but I think the position demonstration is also useful, let's keep it in top-end corner.\n\nRemove the backdrop. We don't even see it's a backdrop here, however the gray is awful. A white background on the white background of GitHub will be magnificent.\n\nYay! Magnificent indeed!\n\nThis is not the final version because there's the noticeable horizontal scrollbar in the ajax confirmation example. Reported: #872. Updated version: https://jsfiddle.net/ad3quksn/367/\nRecorded gif: \n\n. > @limonte what about that new footer feature?\nHm, good point! I forgot to demonstrate it. Will do.. Footer added: http://jsbin.com/cisinuyiyu/edit?html,css,js,output\nResult gif:\n\n. I'll keep this open for, now. The result is good, but not perfect. I'll try to do better.. > Does #883 do it for u?\nYes! Thanks!. Thanks for reporting this important security detail @1ftskank!\nIMO this is critical and should be fixed asap, it doesn't make sense to adjust server headers just because of some non-experienced front-end developer (me :man_facepalming:) decided to make things cool.\nAny ideas how to make buttons' colors change dynamically for hover and active states are more than welcome!. JS tricks are fun but, in practice, it requires A LOT of code to cover all cases from native :hover and :active states.\nWe need a pure CSS alternative.. No problem, there are true CSS gurus around :) \nI'm just hanging around and helping to put together and release the awesomeness of the people from the community.. Thanks @samturrell and @acupajoe for your ideas!\nUnfortunately, both alternatives aren't good enough because they are changing not just the background color of buttons but the font color as well. . Help is still wanted. \nRequirements:\n\npure CSS solution\nchange only the background color of buttons, the visual font color should stay the same. What do you think guys about #884 ?. Fixed in v7.9.2 \n\nThanks again @1ftskank for reporting this important issue!. Thanks for reporting @1ftskank! Should be fixed in https://github.com/sweetalert2/sweetalert2/pull/879\nToasts is still a new feature, we didn't promote it yet. Any bug-reports about toasts are more than welcome!. Thanks, I was against it because of code complexity, but @acupajoe decided to prove me wrong and now we have both modals and toasts in 1 package :muscle: . Fixed in v7.9.1 :tada: . Will do all of those fixes, apologies for merging w/o waiting for the approval!. > Don't we want the version number in package.json to get updated in master? Otherwise it would remain at 7.9.0 forevermore.. and cause confusion for casual onlookers.\n\nAlso, as this PR is now, if we don't commit the version bump in master the working tree will be dirty when we try to switch to the dist branch, and there will be conflects.\n\nhttps://github.com/sweetalert2/sweetalert2/pull/881/commits/df42e1f1d7d60231b4cd0117fa66b233c0c1a49f\n\nAlso, we will need to move the const {version} = require('./package.json') line to after the npm version command, or the version will be incorrect.\n\nhttps://github.com/sweetalert2/sweetalert2/pull/881/commits/00f42f2b8f638b5ff0d2ea502aa65e726b5d177c\n. > Hmm.. not sure what's going on but I can't \"Approve\" vs \"Request Changes\" in this PR anymore\nIt has been merged, you can't request changes for merged PRs.. Let's move to #881 - I think I've done all changes requested in this PR.. > We should change the git push command to git push origin master:master dist:dist --tags so you don't have to push master manually after this\nDone.. Perfect! Thank you @zenflow for the detailed code review!\nWhat about https://github.com/sweetalert2/sweetalert2/pull/875 - you don't like the change or you didn't have time to check it?. YAY! Just made a new patch release with one command and w/o any issues! :tada: :tada: :tada:. @toverux could you please \n\nreview this PR when you have time\nif you're happy with it - merge\nmake a new release by running npm run release patch\n\nI want to be sure that all collaborators are able to and know how to make new releases.. Separated into #886, thank you @toverux!. Apologies @zenflow it took 2 weeks for me to review this contribution!\nI'm very happy with switching to Karma, probably that means that we will finally be able to run tests agains IE11, Android browser, whatnot by using https://github.com/karma-runner/karma-browserstack-launcher\nOne question from me: you removed test/sandbox.html and didn't provide any replacement for it, I loved that small and simple sandbox, it was helpful with quick playing around with SweetAlert2. What would be a replacement for that with the new approach?. Great stuff @zenflow! Thanks a lot for keeping IE11 in mind!\n\nI think offering this environment to experiment offers a couple advantages\nEncourages running the tests frequently when you're working on SweetAlert2 code\nEncourages containing your experiment in an actual test that can be repeated\n\nIn some cases, e.g. SASS variables, I just need to play around with the single swal2 inside the simple html document, tests are unnecessary and not helping anyhow.. I just published a new patch release, the output produced by Karma is perfect, love it!. Perfect idea with enum, thanks @toverux! :1st_place_medal: \n\nWe still have a lot of users who are using swal2 in an old-school way because of legacy projects or non-JS projects:\nhtml\n<script src=\"sweetalert2/dist/sweetalert2.all.min.js\"></script>\nIn order to support them, I'd like to propose having the DismissReason enum as the property of the swal object: https://github.com/sweetalert2/sweetalert2/pull/890\njs\nif (dismiss === swal.DismissReason.backdrop) {\n    // ...\n}. :shipit: DismissReason has been shipped: https://github.com/sweetalert2/sweetalert2/releases/tag/v7.10.0 :tada: . Replace last two overlay occurences in the next major release:\n\nhttps://github.com/sweetalert2/sweetalert2/blob/master/sweetalert2.d.ts#L232\nhttps://github.com/sweetalert2/sweetalert2/blob/master/src/sweetalert2.js#L1346. js\nswal({\n  ...\n}).then(result => {\n  if (result.dismiss === 'esc') {\n    console.log('I was dismissed by ESC')\n  }\n});\n\nhttps://jsfiddle.net/ad3quksn/371/. If there are no objections, I'll merge this PR tomorrow.. > One small remark though: C/C++-style CAPS_CASE constants are not very \"trending\" nowadays. Most new style guides in most languages recommend camelCase or PascalCase (I still have a hard time choosing between the two, though, but I have definitely abandoned the old caps case from the 80's).\nChanged to camelCase :+1: . If there are no objections, I'll merge this PR tomorrow.. Indeed, arrow functions aren't supported by IE: https://caniuse.com/#feat=arrow-functions\nYou should either use old-school function syntax: then(function (result) { or use transpiler, e.g. Babel https://babeljs.io/docs/plugins/transform-es2015-arrow-functions/. SweetAlert2 examples are transpiled to ES5 with Babel: https://github.com/sweetalert2/sweetalert2.github.io/pull/6. Two options for you:\n\n\nRecycle your old iOS device https://i.imgur.com/RdYRJ3w.png https://caniuse.com/#feat=promises\n\n\nRead the documentation about including the Promise polyfill for IE11 and old iOS devices: https://github.com/sweetalert2/sweetalert2#usage. How about returning false value?\n\n\njs\npreConfirm: function() {\n  if (!confirm('Are you sure?')) {\n    return false;\n  }\n  // proceed otherwise\n}\nOr even shorter with ES6:\njs\npreConfirm: () => confirm('Are you sure?'). :shipit: shipped in v7.11.0 :tada: \nhttps://jsfiddle.net/ad3quksn/386/. > your link to CONTRIBUTING.md gives me a 404, but I get the idea ;-)\nCONTRIBUTING.md has been renamed to ISSUE_TEMPLATE.md in  https://github.com/sweetalert2/sweetalert2/pull/904\n\nsee https://jsfiddle.net/anionic/g4be1kxh/\n\nLovely jsfiddle,  thanks @anionic! Looks like a bug indeed.. I thought it's a trivial stopPropagation fix, but it's not. The help from JS events guru would be welcome!\nRelated code: https://github.com/sweetalert2/sweetalert2/blob/master/src/sweetalert2.js#L760. Hey @Kuzcoo and thanks for this idea!\n\nI took a look, I guess we could delay states.previousActiveElement.focus() by something like 100ms (too short to be noticeable but delayed enough to not catch the keyup event from the input again).\nActually in the fiddle above, with the native alert, if you keep \"Enter key\" pressed and release it after the focus is set back to the input, you got the same result.\n\nSounds like a potentially working solution to me, could you please submit a PR with that change?. :tada: This issue has been resolved in version 7.28.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Icon colors are customizable with SASS variables: https://github.com/sweetalert2/sweetalert2/blob/master/src/variables.scss#L5-L10\nIt doesn't make sense to add more js params for styling, because of we are doing so there will be zillion params which need to be maintained, documented, etc.. Hello @mavinothkumar!\nCould you please elaborate why did you increase the line-height for the title? And also, why 1.5?. Related PR by @toverux: https://github.com/sweetalert2/sweetalert2/pull/399. closing due to inactivity, @mavinothkumar  reply with arguments if you think this should be reopened.. Exactly, thanks @samturrell :beers: . > We will probably break 5000 stars today too!\nEasily, since we're in top of https://www.reddit.com/r/webdev/ :muscle: . This tiny article about SweetAlert2 also got a lot of claps and brought some new happy users: https://codeburst.io/open-source-sweet-alert-2-c6bc8224d958. > We will probably break 5000 stars today too!\nLet's aim 6,000 :rocket:  \nSweetAlert2 is the 2nd best today :sunglasses: \n . JavaScript Daily tweeted about SweetAlert2:\n\n. SweetAlert2 in the latest JavaScript Weekly digest: http://javascriptweekly.com/issues/373 \ud83c\udf89 . > sweetalert was downloaded 1,029,870 times.\n\nsweetalert2 was downloaded 1,030,109 times.\n\n:rocket: . . > Where is your graph from?\nhttps://starcharts.herokuapp.com/sweetalert2/sweetalert2. THE BEST CODE SNIPPET I EVER SEEN!. Thanks for the nice feature-request, @tdeignan! Shipped in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.12.0. Thanks @acupajoe!\nThe CI issue will be handled separately in https://github.com/sweetalert2/sweetalert2/issues/912. > We could probably merge this and just make the minor fixes ourselves.. @monkeywithacupcake has already helped quite a lot, and probably has more of these PRs to make.\n\nThank you so much @monkeywithacupcake !!!\n\nGood idea, @zenflow could you handle those small details?. Fixed in https://github.com/sweetalert2/sweetalert2/pull/921. > So what if we resolved the promise with {} (no value or dismiss)?\ngood idea \ud83d\udc4d\n@gverni would you mind handling this one? . Done in #1379. Thanks @FranciscoG for trying to resolve this issue. It should be fixed it in the latest release, please check: https://sweetalert2.github.io. > It would be good if the themes are also provided on the dist/ version as standalone CSS files, not just SCSS files.\nAgree, added to the PR description. After some thinking I must agree with @acupajoe and @zenflow \nModularity :heart: \nPlease check out my PR for sweetalert2-themes repository: https://github.com/sweetalert2/sweetalert2-themes/pull/1. Should be fixed by https://github.com/sweetalert2/sweetalert2.github.io/pull/9 and https://github.com/sweetalert2/sweetalert2.github.io/commit/8938f478ac567d99b1011e2817b63a112493091f\nThanks for reporting @peterbenoit !. Thanks a lot @zenflow . Thanks @acupajoe!\nThis seems to be the issue for that particular user, closing this issue for now.. > 1B smaller than master, good job!\n:muscle: . Thanks @cassianomon for your donation and supporting our work :heart: . Thank you for investigating this issue @gverni! A PR would be warmly welcome!. #### \ud83d\udcb0 Money for code! \ud83d\udcb0\nI will donate $5 - $10 for the PR with the fix for this issue (donation will be done after approval and merge).. Thanks for your feedback @gverni!\n\nThe only way i could centre it was to use javascript to check if there is a negative offset on the sweet alert container after a window resize event. But this seems to me more like an hack. If you are happy with a javascript solution, then i'm happy to submit a PR for review\n\nPlease do so. JS solution is 243324431324.12% better than no solution :) I'll be happy to review it.\n. :tada: This issue has been resolved in version 7.28.8 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I can reproduce: https://jsfiddle.net/ad3quksn/549/\nThanks for reporting @javaProgrammer44, it'll be fixed asap.. Fixed in 7.12.14, https://jsfiddle.net/ad3quksn/549/. @Yasirmacrosoft \n\n. The attack of clones :astonished: . There can be only one swal instance at a time. Each call of swal() removes the current modal and makes a new one.. No.. Reproducible with jsbin: https://jsbin.com/rawacenuyu/1/edit\nUpd: not anymore after v7.12.13 release :)\nThanks @zenflow !. There are only three hard things in webdev: cache invalidation, naming things, and IE.\nMany thanks @zenflow for handling this issue!. oops, wrong button :). Please read https://github.com/sweetalert2/sweetalert2/blob/master/.github/ISSUE_TEMPLATE.md and try to report your issue properly.. Released in v7.12.15. > In a Windows environment it is simple.. just add karma-ie-launcher.. but this will fail on a non-Windows environment.\n\nWe need a portable solution for this. The same would run on all environments ideally, but that may not be possible or feasible. Maybe of use: karma-virtualbox-ie11-launcher, karma-detect-browsers\nAnyone have a suggestion on how to proceed?\n\nFor now, let's not introduce any virtualbox magic, but rely on AppVeyor CI: https://github.com/sweetalert2/sweetalert2/pull/948\nI believe that should be enough for now. In case any PR add a regression in IE11, AppVeyor will notify core maintainers about that and they will either suggest the fix for a contributor or fix the regression after merging a PR.. > @limonte Once the infrastructure part of this settles, I can take over this PR to fix the tests if you like, since I work on a Windows machine\nPlease, go ahead :rocket: . Oops, sorry for my rush in merging this PR :)\n\nDo you mind if we revert the merge and I continue on in this PR?\n\nLet's not revert but temporarily disable IE tests: https://github.com/sweetalert2/sweetalert2/pull/949\nWe are still testing against Firefox and Chrome in AppVeyor and it works perfectly :rocket:  \nhttps://ci.appveyor.com/project/limonte/sweetalert2/build/19. This PR doesn't make much sense to me, sorry.. > Random curiosity: So you work on a linux machine normally (?) but have access to a Windows machine?\nI'm using dual-boot PC with Linux Mint as the primary OS and Win 10 as the secondary one.\n\n\nWhat do you think about doing the 100 ms delay only on the condition that tests are running in IE? There are 9 of these delays (so far).. thats 900 ms added to the ~ 1500 - 2000 ms it already takes to run all the tests, so it would be a substantial optimization. If you are in favor of the idea, we can now require any package from npm to determine the browser environment, since tests are now using Webpack.\n\nGood point, done: https://github.com/sweetalert2/sweetalert2/pull/953/commits/136af7be825cacd6def17d9eb43d267be2d553fc. Thanks a lot @Kuzcoo! :v: . Shipped in the latest release :shipit: . @zenflow I believe we should start being more strict with issue reports. \nNo jsfiddle + doesn't look like a valid issue on the first sight = immediate closing with a saved reply, something like:\n\nFor bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\nJSFiddle template: https://jsfiddle.net/ad3quksn/462/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/463/\nSee ISSUE_TEMPLATE.md. > What should we do when on first sight when it looks like it may or may not be a valid issue? Shouldn't we try to find out if it is valid or not?\n\nI don't have any strong opinion or arguments here. I'm just saying that it's fine and not unpolite to close the issue if a reporter didn't put enough effort into an issue-report.\nIf your intuition says \"the issue isn't related to SweetAlert2\", feel free to close it with a standard reply.\nPS. I like how Vue.js organized the issue reporting process:\n\nhttps://github.com/vuejs/vue/issues/new\nhttps://new-issue.vuejs.org/. If there are no objections, I'll merge this PR tomorrow.. Fixed in the latest release, thanks a lot for such a detailed reporting @vladimirivahnov :v:\n\nThis was your first issue on GitHub (congrats!) and right away you started in a professional way :sunglasses: . Close by mistake, I guess :) Reopening.. @fklingler could you please also specify the zoom level you are using? Is it different from 100%?. >For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/664/\nSee ISSUE_TEMPLATE.md. Thanks for the feedback @Lunatig \n\nNothing to fix here.. Great work @zenflow :muscle: :muscle: :muscle: . @Kuzcoo if you know how to fix this, feel free to submit a PR.. @acupajoe This is the temporary solution which will fix this issue but undo #932\nI applied it temporarily in the latest release: https://jsfiddle.net/ad3quksn/672/\nBut we need to figure out the proper solution.. Fixed in #984, thanks again @Kuzcoo \nI also fixed toasts in #994. Absolutely YES! I'll handle creating new labels.\nPS. Recently I'm learning so much from both of you @toverux and @zenflow :clap: :clap: :clap: . > The Travis \"push\" build fails (repeatedly), yet the Travis \"PR\" build passes? Correct me if I'm wrong, but \"push\" build runs against this exact branch and the \"PR\" build runs against this branch merged into master, so how does that make any sense?\nHm, I can see that there were 2 \"push\" builds for this branch and both of them are green: \n. Hello @antoninadert and thanks a lot for reporting JAWS/IE11 issues!\nAccording to the latest WebAIM Screen Reader User Survey JAWS is the most popular screen reader (46.6%) and we definitely need to support it with all browsers including IE11.\nI'll try to fix all reported issues this week. If you have some clue about what could be the cause and solution for the 2nd and the 3rd issues please let me know - currentry I have no idea why JAWS read the modal content incorrectly.. @antoninadert apologies for the delayed response! I will dedicate the timebox on Saturday for a11y since we have the issue with NVDA as well https://github.com/sweetalert2/sweetalert2/issues/1010\n. Hello @antoninadert and sorry for the delayed response. I happy to announce that the issue with focus has been fixed!\nAs to the second and the third issues, I'm not able to reproduce them with the latest JAWS + IE11.\nCould you please verify the first issue and tell if second and third are still happening in your environment or not?\nThanks in advance!. Hello @antoninadert and thank you for the prompt feedback!\nJAWS 16.0 seems to be outdated, could you please upgrade JAWS to the latest version and try again.\n\n\n. > Sadly I am not able to perform an update as of now...\nHm, I wonder why? Is that a common thing among JAWS users that they stick to older versions and unable to update?. > You need to pay all major updates.\nDidn't know about that, thanks for the info! \n\nJAWS 16 hasn't been updated more than 1 year and I don't think it's a good idea to spend time and add hacks/workarounds for old screen readers to SweetAlert2's codebase.\nI value the code maintainability and bundle size more than old screen readers support.\n\nIt seems that the main issue with the focus lock has been fixed and others are JAWS 16 specific. JAWS 16 won't be supported, so I'm closing this issue.\nThanks a lot for your time and valuable feedback @antoninadert!. I guess @toverux is in the vacation-mode now :) I'll go ahead and merge this PR.\nThanks again @rafaelss95!. Released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.16.0. Done: https://sweetalert2.github.io/#mixin. > The famous setTimeout(fn, 0); trick to run the function in a future event loop doesn't works?\nNope, I tried it first, but no luck. I don't like magical numbers like 100 in this case, but hopefully, the reference to the issue will help for those who will read/maintain the code in future..  I'm glad that we added IE tests and AppVeyor CI, it just caught the small regression in IE :muscle: . > Sorry, what do you mean?\n\nIssue #900 affects all browsers, or just IE11?\n\nAll browsers, but the first version of this PR was failing in IE: \n\nhttps://ci.appveyor.com/project/limonte/sweetalert2/history\nhttps://ci.appveyor.com/project/limonte/sweetalert2/build/117\n\n\nThere must be a more elegant solution to this issue, that might prevent future similar issues. At first look, I don't think this PR gets to the root of the problem. I can look deeper into this later\n\nAgree. I'd be more than happy if you can come up with the less hacky solution.. > This fix only works if the user presses the enter key very quickly. If they delay > 100 ms between keydown and keyup the issue is still there. Easily reproduced in the sandbox with the commit i just added.\n\nHmm.. but it looks like window.alert has that issue too.. if you dismiss the alert with Enter and delay a second before releasing the Enter key, you see the same effect.. so I think fixing that that is out-of-scope\n\nWell, the result is perfect in its alignment with the native alert, isn't it? :)\n- short Enter press - the same as window.alert\n- long Enter press - the same as window.alert\nPS. I rebased to master and removed changes in the sandbox as those shouldn't be in the PR.. > No because of the timing. Play with it. With a swal you have to press really fast (< 100 ms) or you see the bug.\n100ms seems to be an average keypress duration: \n\nhttps://stackoverflow.com/q/22505698/1331425\nhttps://stackoverflow.com/a/4098858/1331425\n\nI'm okay to increase it though, maybe 200ms would be better - still too short to be noticeable, but longer than 167ms calculated here https://stackoverflow.com/a/4098779/1331425  . Here's the tiny jsfiddle for detecting your keypress duration: http://jsfiddle.net/Wk7jR/720/\nFor me, it's 40-50ms, so 200ms will theoretically match non-tech persons. \nI understand that I'm making assumptions here, but I don't see any better way to fix #900 and it needs to be fixed, as it looks to me as a valid real-life use-case.. > What do you think about setting the focus immediately and filtering the keyup event from it's event handler?\nCould you please submit a PR with that solution?. Since there's no better solution, I'll merge this PR.. Thanks a lot @Kuzcoo This is shipped in the latest version.\nYou helped us to close the oldest unresolved issue: https://github.com/sweetalert2/sweetalert2/issues/25\n:tada: :tada: :tada: . @zenflow yes. You can check that by going to build history and open the previous green build with this icon , e.g. https://travis-ci.org/sweetalert2/sweetalert2/builds/348209127 . My previous experience tells that SauceLabs isn't 100% reliable, I was hoping they made some improvements, but unfortunately, it seems that instabilities are still happening.. > Do you know anything about BrowserStack?\nI know that that's the very good SauceLabs competitor, but I don't have any experience with it. Let's give a chance to SauceLabs, if it will continue to be unstable, then we should investigate BrowserStack.. > But it's really unbecoming of a CI service, which is to ensure stability, to be unstable itself.\nIt's not a trivial task to make a CI service stable with unstable 3rd party services. There's a devil (at least on my left shoulder) which tells that it's easier to bring dirty tricks to the CI configuration instead of doing the proper investigation, e.g. https://github.com/sweetalert2/sweetalert2/pull/987. Information from those 2 failed builds:\n\nit happens in Chrome only, Firefox is :ok_hand: \nit happens randomly, not related to the particular test case . Facing this instability almost every day. Needs to be prioritized as CI instability + Greenkeeper produce a lot of noise. . > Upgrading karma-webpack might fix the incorrect peer dep.\n\nIt set to the latest:\n\nhttps://github.com/webpack-contrib/karma-webpack/releases\nhttps://github.com/sweetalert2/sweetalert2/blob/master/yarn.lock#L4525 \n\nbut the issue is still happening.. But yeah, the issue is possibly in karma-webpack because it has the outdated webpack-dev-middleware dependency ^1.12.0:\nhttps://github.com/webpack-contrib/karma-webpack/blob/master/package.json#L36\nThe latest of webpack-dev-middleware is 3.0.1: https://github.com/webpack/webpack-dev-middleware/releases. There's an opened issue about it: https://github.com/webpack-contrib/karma-webpack/issues/314. There are two PRs:\n\nhttps://github.com/webpack-contrib/karma-webpack/pull/315\nhttps://github.com/webpack-contrib/karma-webpack/pull/318\n\nAnd maintainers of karma-webpack are aware of the issue (marked both PR with priority 4 labels) and probably will do the release soon.. Maybe https://github.com/sweetalert2/sweetalert2/pull/1028 was the fix, let's check if random failures are still happening after updating karma-webpack to ^3.0.0 and so webpack-dev-middleware to ^2.0.0 . > Maybe #1028 was the fix, let's check if random failures are still happening after updating karma-webpack to ^3.0.0 and so webpack-dev-middleware to ^2.0.0\nNope, still happening. I'll try karma-webpack ^4.0.0-beta.0 which has webpack-dev-middleware ^3.0.0. > Nope, still happening. I'll try karma-webpack ^4.0.0-beta.0 which has webpack-dev-middleware ^3.0.0\nDone: https://github.com/sweetalert2/sweetalert2/commit/b0d0587de89dbeeadf1eaf06a75fcc8fc9cebee6\nI'll pray tonight to all my Gods for this fix to be valid :pray: :pray: :pray: . Upgrading karma-webpack and webpack-dev-middleware didn't help.\nAlso, using the latest Chrome didn't help https://github.com/sweetalert2/sweetalert2/pull/1029\nThis issue is driving me crazy :angry: Unstable CI is one of my worst nightmares.. Looks like #1031 really fixed this issue :tada:. Horrible idea. If tests are failing because of real issues with the code or with tests, travis_retry will run tests 3 times before reporting issues which is against the \"fail early\" CI environments principle.. > I propose that we treat undefined arguments as such, and use the parameter defaults in these cases. What do y'all think?\nAgree.\n\nI'm not sure if this would be considered a fix or a breaking change. I mean, I'm pretty sure it's technically a breaking change, but bug fixes usually are. How likely is it that people are relying on the current behavior?\n\nBug-fix IMO.. I like @toverux's code not because of micro-optimization, but because of readability. It's dead simple, even a zombie will understand it :D\n\nNot elegant but readable\n\n<3\nPS. not related to this case, but I like this joke by Wes Bos: https://youtu.be/9YkUCxvaLEk?t=10m4s. Thanks for catching and fixing this issue @zenflow :beers: \nI have no idea how it was there since forever and nobody reported it.. Confirmed: https://travis-ci.org/sweetalert2/sweetalert2-adonisjs-nuxtjs/builds/349593951. The issue is somewhere around https://github.com/sweetalert2/sweetalert2/blob/master/gulpfile.js#L80 - there no any check of document existing in https://github.com/tests-always-included/gulp-css2js/blob/master/assets/defaultWrapper.js. @zenflow could you please handle this since as I can see you're the contributor of css2js as well? :muscle: . @zenflow now I know how the help-me-to-understand-infinite-loop looks like :D. @firstdoit fixed in 7.15.1, sorry for this inconvenience. @zenflow added the test to prevent such regressions in future.. Thanks @toverux!. Sometimes I feel stupid because of not seeing simple ways to do things :) I made the whole repo for the same purpose: https://github.com/sweetalert2/sweetalert2-adonisjs-nuxtjs\nAnd then @zenflow is coming with 3 LoC simple and obvious (not for me, apparently) solution :). > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nSee ISSUE_TEMPLATE.md. I'm closing this issue due to inactivity, leave a comment if you think it should be reopened.. thanks for investigating this issue, @glendonyeo! \nmaybe is it better to use onOpen / onBeforeOpen to handle?\n\nCould you please elaborate a bit on this question?. @gaugejosh works nicely, thanks! I changed onClose to onAfterClose to prevent navbar flickering: https://jsfiddle.net/n0jtbeq4/1/\nLet's think how we can apply this internally so users will not bother themselves with onBeforeOpen and onAfterClose callbacks.. @glendonyeo great work, many thanks!\ndo you maybe know the reason of this jumpiness: https://jsfiddle.net/5gf2kyLw/1/ ?. Fixed by https://github.com/sweetalert2/sweetalert2/commit/e2d81de0c73edf93cf58bfd05365e46e24266e58 in v7.21.1\nThanks for reporting @angrykoala!. > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/664/\nSee ISSUE_TEMPLATE.md\n\nAnd use English, please.. Nice request, please go ahead with the PR @Baune8D :rocket: . @Baune8D thanks for the test! Travis build is now passing, sorry for this inconvenience.\n@zenflow please do CR, both of your requests are done as I can see.. There are Git conflicts after https://github.com/sweetalert2/sweetalert2/pull/1026\nI decided to save you time @Baune8D and create a new PR with your commits cherry-picked: https://github.com/sweetalert2/sweetalert2/pull/1030 \nI'm closing this PR, thanks again @Baune8D :beers: for your contribution and @zenflow for catching issues!. Released in v7.17.0 :tada:. > Should we print a warnOnce deprecation notice when users try to use setDefaults or resetDefaults?\n\nI'm thinking that in the next major, setDefaults should be removed (since swal.mixin fits all the same use-cases and is preferred) but still available in a plugin for those who prefer not to update all their old code.\nWhat do you think?\n\nAgree :+1: mixins are more elegant solution. . ## sweetalert2-react. ## @sweetalert2/react. ## sweetalert2-react-content. ## @sweetalert2/react-content. ## sweetalert2-mixin-react\n. ## @sweetalert2/mixin-react\n. Closing due to inactivity, the community doesn't seem to care :) . > Loop back to the top of the modal when \"down\" arrow is pushed past the last element. Loop back to the bottom of the modal when \"up\" arrow is pushed past the first element.\nWhy this is expected? Could you please add a link to the specs about this behavior? IMO from a user perspective, it's better to know when he/she reached the bottom of the modal instead of looping.\nAll accessible dialogs I can find (e.g. https://github.com/edenspiekermann/a11y-dialog https://github.com/reactjs/react-modal) work the same way as SweetAlert2:\n\nRepeats the same element, last or first, when using the arrow corresponding to each end.. @TivoCorrmat I'm closing this issue due to inactivity, feel free to respond with some more details so I can reopen and reconsider it. . Thanks a lot for your response @TivoCorrmat! \nand it seems it's not considered the \"norm\" to do so\n\nThis is exactly why I was doubting this feature-request. For this plugin, I prefer to go with \"norm\" functionalities as they will be probably expected by our users.\nPlease feel free to submit other a11y feature-requests/issues for SweetAlert2.. Validation of multiple fields isn't supported, you should implement it by yourself depending on your project.. Fixed in https://github.com/sweetalert2/sweetalert2/pull/1017. This build is failing with: \nnode_modules/@types/acorn/index.d.ts(240,8): error TS2304: Cannot find name 'Symbol'.\nnode_modules/@types/acorn/index.d.ts(240,28): error TS2304: Cannot find name 'Iterator'.\nhttps://travis-ci.org/sweetalert2/sweetalert2/builds/354656149. > This build is failing with:\n\nnode_modules/@types/acorn/index.d.ts(240,8): error TS2304: Cannot find name 'Symbol'.\nnode_modules/@types/acorn/index.d.ts(240,28): error TS2304: Cannot find name 'Iterator'.\n\nFixed (with help of https://stackoverflow.com/a/39280186/1331425) by adding --lib dom,es6 to tsc sweetalert2.d.ts: \nhttps://github.com/sweetalert2/sweetalert2/pull/1020/commits/b7ea8ece92872ca532ee7a6885dd4e8242311772. Done in https://github.com/sweetalert2/sweetalert2/pull/1022 and release in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.16.0. Released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.16.0. I guess @toverux is in the vacation-mode right now, I'll merge this PR, make a release and start using mixins in my project right away :rocket: \nMany thanks, @zenflow :beers: . Released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.16.0. > Released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.16.0\nMade a proper release notes because mixins are FREAKING AWESOME!. Also, could you please amend TypeScript type definitions here https://github.com/sweetalert2/sweetalert2/blob/master/sweetalert2.d.ts#L631\njs\ninputValue?: SyncOrAsync<string>;\n. > Thanks for your review @limonte . I updated the PR with the changes requested. I only added 'textarea' to the list of input type (I tested and it works fine with that as well). Let me know if that is fine with you as well.\nPerfect, thanks a lot! I did some more tests and wrote the test case, could you please add it to tests.js and include in your PR:\njs\nQUnit.test('inputValue as a Promise', (assert) => {\n  const inputTypes = ['text', 'email', 'number', 'tel', 'textarea']\n  const done = assert.async(inputTypes.length)\n  const value = '1.1 input value'\n  const inputValue = new Promise((resolve, reject) => {\n    resolve('1.1 input value')\n  })\n  for (const input of inputTypes) {\n    swal({\n      input,\n      inputValue,\n      animation: false,\n      onOpen: (modal) => {\n        const inputEl = input === 'textarea' ? modal.querySelector('.swal2-textarea') : modal.querySelector('.swal2-input')\n        assert.equal(inputEl.value, input === 'number' ? parseFloat(value) : value)\n        done()\n      }\n    })\n  }\n}). The test is failing in AppVeyor (IE11) but that's not related to the change in this PR, I'll handle it separately.\nThanks a lot @gverni! :beers:\n. > BTW, do you want me to update the documentation on https://sweetalert2.github.io to add this feature once it's released?\nThat would be great! The repository for https://sweetalert2.github.io is here https://github.com/sweetalert2/sweetalert2.github.io\nFeel free to suggest any ideas about possible improvements of DX (developer experience) and CX (contributor experience) of that repo.\nAnd yes, this feature has been released in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.17.0 :tada:. Love the commit history. This is the first time I'm thinking that by doing 'Squash and merge' I'm harming the commit history which is, in theory, the powerful tool but in practice quite often just a mess.. @zenflow what do you think about re-enabling the \"Rebase and merge\" option?\n. Gotcha, done :+1:. Released in v7.17.0 :tada:. Hopefully, this is the fix for #986 . Released in v7.17.0 :tada:. > @limonte Cool! Would it be possible to mention me in the contributors section of the readme? It would mean a great deal to me :)\nI would like that, but the picture in https://github.com/sweetalert2/sweetalert2#contributors is generated automatically by OpenCollective (https://opencollective.com/SweetAlert2/contributors.svg?width=890&button=false) based on the repo commit history.\nOn the other hand, after cherry-picked commits were squash-n-merged into one commit, for some reason GitHub (or Git) put just me as an author of the squashed commit, instead of both of us as I was expecting :/\nSorry for this inconvenience, I would really like to see you in the list of contributors, but apparently I don't know Git good enough :/. Looks like not related to SweetAlert2 issue. Since the issue happens after upgrading JSDOM, I think this is the right place to report it: https://github.com/jsdom/jsdom/issues. > Actually we should be using promise-polyfill since we tell IE11 users that is the only polyfill they need to bring to their environment.\nValid point, I'll revert promise-polyfill and try to figure out where does Symbol come from.. > Valid point, I'll revert promise-polyfill and try to figure out where does Symbol come from.\nDone, the problem was in the newly added test which was using for .. of https://github.com/sweetalert2/sweetalert2/pull/1035\n\non this subject, what do you think about just requiring IE11 users to have all the ES6 polyfills loaded? It would be great to use new language features that depend on globals, like for .. of (which uses Symbol under the hood and you can see it when transpiled) and Array.prototype.includes , and I don't think it's asking too much. Plus we're already requiring them to load the Promise polyfill, so the other polyfills could be included in the same bundle.\n\nIn the current terribly unstable front-end ecosystem, I think it's better to require as fewer dependencies and polyfills as possible. Asking for additional polyfills would be a breaking change for existing users and each breaking change hurts. Let's not hurt our users without strong reasons for that.\nAlso, developers seem to appreciate \"zero dependencies\" a lot: https://www.reddit.com/r/javascript/comments/7x0dpk/sweetalert2_a_beautiful_responsive_highly/du4ynlh/. > Actually we should be using promise-polyfill since we tell IE11 users that is the only polyfill they need to bring to their environment.\nThere was a mistake in README as well, fixed: https://github.com/sweetalert2/sweetalert2/commit/31a236018611e1e537fd203029c0e797349e71cb. > I think we should change all the tests and documentation to say Swal instead of swal and SweetAlert instead of sweetAlert, to reflect the new OO paradigm. Just change the function name, not use the new keyword. It could get confusing when we are talking about a hypothetical var named swal (instance) vs Swal (class).\n\nCan I go ahead with this?\n\nYES PLEASE!\nThe whole plugin is starting to look so nice :gem: . @zenflow I can't understand what is the reason of gzipped dist size grown 0.5KB? In this PR there's just reorganization of the code, which shouldn't lead to the bigger dist.. This change is so good, I will merge it and make a new release right now! . > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nSee ISSUE_TEMPLATE.md. > For bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nSee ISSUE_TEMPLATE.md. You don't need to change the font-size and line-height of the icon: https://jsfiddle.net/ad3quksn/966/. :tada: This issue has been resolved in version 7.28.7 :tada:\n\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @zenflow roger!. > How are you liking Swal.mixin in practice?\nCan't live without it! :) Swal.mixin helped to eliminate tens of copy-pasted LoC with repetitive parameters.. > @limonte +1 Be sure not to publish before sweetalert2.github.io is updated in regards to Swal.mixin\n@limonte or users will get a deprecation notice saying to switch to using a method that's not documented yet\nOops. I forgot about this, apologies. \n\nI'll make a PR to the documentation site just adding the Swal.mixin method, and I think the rest of the edits (e.g. swal -> Swal can come in the new site.\n\n:+1:. \"Enhancers\" sounds correct for me :+1: It's also easy to understand for other developers IMO. My vote goes for \"enhancers\".. That's the correct behavior. Docs: https://sweetalert2.github.io/\n. Thanks for reporting, jsnext:main will be removed in the next major release.. @gverni :%s/jsnext:main/module/ will close this issue and #1376. > Just for the record, at the time of this comment, the issue reported here wasn't reproducible anymore (the output of parcel command did not have any arrows functions in it).\nhttps://github.com/parcel-bundler/parcel/commit/f75941c3cfeb189578e3f2f9579dc9909da1d7c0. Confirming the issue. IE11 :expressionless: . I just released v7.20.9 which contains the fix for this issue :tada:\n. @zenflow you're doing amazing changes to the SweetAlert2's codebase :1st_place_medal: . C'mon, robot!. maybe later, sorry todo bot. This is how built-in queue functionality works, we will not change its behavior.\nTo achieve your expected behavior please use async/await, jsfiddle: https://jsfiddle.net/ad3quksn/1092/. Can't reproduce:\n\nIn future, please do not ignore https://github.com/sweetalert2/sweetalert2/blob/master/.github/ISSUE_TEMPLATE.md - it's there for a reason.. Thanks for the contribution @alamin3000, but due to the poor browsers support I can't merge it. \nHere's the list of browsers we are supporting: https://github.com/sweetalert2/sweetalert2#browser-compatibility\nEach feature should be supported equally or with appropriate fallback. We can't have features unsupported by some of the major browsers, in this case, Safari, IE11 and partially Firefox.. > and one should naturally assume\nThis assumption is IMO incorrect, let's not underestimate people's stupidity. They will raise issues with questions similar to \"Why input: 'date' doesn't work in IE11???\".\nI still think that we shouldn't support features which are supported by limited browsers. It's much easier both for maintainers and users to be sure about the equal support of all features in all supported browsers.\nIf we'll make an exception then neither we nor our users will be sure about the browser support of different features.\nLet's not bring anything which will cause confusions, the front-end world is already :fire: , let's not make it even more unstable and chaotic.\n\n@alamin3000 for your project please the html parameter with any input you want:\njs\nswal({\n   html: '<input type=\"date\">'\n})\nPersonally, I think that this is a bad solution which will not work and therefore discriminate IE11 and Safari users.\nHere's the good solution with the equal support in all supported browsers (flatpickr): https://jsfiddle.net/ad3quksn/1146/. > already moved on with different library.\nwhich one?. @redochka I guess something is wrong with the document height of your page. Further support will be provided after you follow https://github.com/sweetalert2/sweetalert2/blob/master/.github/ISSUE_TEMPLATE.md. > is it ok to give you an URL with username/password of the page where the problem is happening?\nYes, feel free to send me testing credentials to limon.monte@gmail.com. > It's a blocker for the publishing of the new documentation site.\nThe issue with Docusaurus has been fixed in https://github.com/facebook/Docusaurus/releases/tag/v1.0.12\n\nIdeally there would be no requirements for the styles on the  or  elements of the page, but if there are, they need to be documented.\n\nProbably we should add something like \"Do not shoot to your own knee by setting the height on html/body less than the height of the actual document, some plugins might rely os that\" :). > is it ok to give you an URL with username/password of the page where the problem is happening?\n@redochka I didn't get any email from you, please either send credentials or update the issue description so I can help you.. > Sorry for the delay, test credentials sent to you by email\nThe link isn't working anymore.\nClosing this as duplicate of https://github.com/sweetalert2/sweetalert2/issues/781 . @redochka please do so. But before that, upgrade sweetalert2 to the latest version. Thanks!. @redochka ping. > I don't think it's a very common requirement, so I wouldn't phrase it like that. As far as web standards are concerned (not sure about some other libraries though) it's perfectly ok to have child elements rendered outside outside the bounds of their parent.\n@zenflow you're right here, I just published v7.20.9 which contains the fix for #1107 . > The bug has been fixed in fact once i updated to 7.21.0 \nGreat, thanks for the confirmation! :tada: \n\nhowever i am noticing a different issue as shown here: http://nimb.ws/IkQT7d\nThe right container (which is loosing its position when sweetalert pops up) is sticky (using a stickyfill polyfill)\nI tried with and without : heightAuto: false\nIs this related to the same OP issue or is it a new issue (new github issue)?\n\nThe heightAuto parameter has nothing to do with sticky elements. This is indeed another issue which has been already reported https://github.com/sweetalert2/sweetalert2/issues/1002. @redochka the issue with sticky elements is fixed in v7.20.1 :tada: . Okay, it looks like old uglify-js is going to retire. Hello babel-minify, nice to meet you!\nRelated stuff: https://github.com/parcel-bundler/parcel/issues/15. The AJAX example was updated to use the Fetch API: https://sweetalert2.github.io/#ajax-request. Thanks for the request, @legionio . > @limonte Thank you for SweetAlert!\nSweetAlert2 :) Thanks for using it! . > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/664/\nSee ISSUE_TEMPLATE.md. Duplicate of https://github.com/sweetalert2/sweetalert2/issues/374\n\nCheck out https://github.com/sweetalert2/sweetalert2/issues/374#issuecomment-268802123 for the solution:\njs\n$('#myModal').on('shown.bs.modal', function() {\n  $(document).off('focusin.modal');\n});\nHere's the fixed jsfiddle: https://jsfiddle.net/c1eyd94v/1/. > Not really a solution, because that allows user to focus on elements that are unreachable.\nSee jsfiddle: https://jsfiddle.net/Victornpb/c1eyd94v/2/\nNice jsfiddle, thanks! Reopening the issue.\n\nAnyway what about the ESC issue? do you want me o open a new issue just for that?\n\nThat would be nice, please follow the issue template - it's there for a reason.. Hello @victornpb \nEsc propagation has been fixed, I just released 7.20.8.\nAlso, I made the keydown handler work in capture mode, but it didn't help. I guess Bootstrap is doing something bad in the enforceFocus() method, but I don't have time to investigate further.. Apologies for missing your comment @infoeon, the same issue has been reported in #1130 and I fixed it today.\n:warning: :warning: :warning: Starting from v7.24.0, keydown handler will not work in capture mode by default, which means:\n\ncustom elements will work nicely\n\nin order to get compatibility with Bootstap, set keydownListenerCapture parameter to true. > we could change our requirement from \"promise polyfill\" to \"babel-polyfill\" and there would still be only 1 polyfill that users need to load in order to support older browsers.. and we would be able to use all of these modern js types.\n\n\nhttps://checkgzipcompression.com/?url=https%3A%2F%2Fcdn.jsdelivr.net%2Fnpm%2Fpromise-polyfill%407.1.0%2Fdist%2Fpromise.min.js\n\nhttps://checkgzipcompression.com/?url=https%3A%2F%2Funpkg.com%2Fbabel-polyfill%406.26.0%2Fbrowser.js\n\nI'm not sure that requiring our users to load 30 times more heavier polyfill is the acceptable solution :/\nAccording to https://developer.android.com/about/dashboards/ Android 4.4 is still widely used (10.5%) and we can't just drop its support.\nSo, for now, IMO this is what we need to think about:\n\nwe may need to find another approach for storing the newly introduced instance properties. > please reconsider the cost.. it's 100kb..\n\n100 kB is a lot. I don't know how to argue here, from first-world countries it's difficult to understand how it feels for people with the 2G/3G connection to use the modern Internet.\n\nAlso keep in mind that many projects using babel already require this.\n\nThere's also a lot of old-school projects which are using Bower/CDN/zip.\n\nI think it's hard to deny that what I proposed (use babel-polyfill) is the simplest approach, correct?\n\nAbsolutely correct, but I feel bad about asking people to include additional 100kB for showing popups.  \n\nprobably there is no way clean way to achieve the private properties without WeakMap. maybe just return to traditional _privateProperties which are not really private\n\n@zenflow What do you think about #1072?. Fixed in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.19.3\nThanks for reporting @lazaronixon, you can switch back to promise polyfill only.. > but the file is equal to one medium sized image, which I think is reasonable in order for things to \"just work\" for us developers\nSounds like jQuery to me :D. > And that's when it was really useful, and most devs agreed it was usually worth the bulk.\nAgree, but jQuery-like \"just-work\" solutions are temporary. In one or two years we might drop old browsers supports (IE11, Android 4.4). After that it would be easy to say \"Dear users, now you can drop Promise polyfill\". But, if we include all polyfills, it won't be so easy for our users if we say \"Dear users, now you can drop all polyfills\" - they will break something for sure.\nAt least but not last, changing polyfill requirements is the breaking change, we just can't do it in the current major range and current major should support Android 4.4.\n. > Seems to be related to this, we saw errors about setPrototypeOf.\nNot directly, but yes setPrototypeOf usage was fixed in the same PR: https://github.com/sweetalert2/sweetalert2/pull/1072/files#diff-b98ce4f7ccf3d234b478bc4348b0e468\nThanks for your feedback @mockdeep!. > we saw this on IE10\nIs SweetAlert2 working on IE10? :astonished:  . Well, that's unexpected :)\nI just ran unit tests against IE10, 19 of 85 FAILED. Please be careful, we do not provide IE10 support. . @zenflow \nJust discovered this tiny repo: https://github.com/mknichel/web-performance-anecdotes\n\nEtsy.com discovered that 160KB of additional images caused their bounce rate to increase 12% on mobile devices.\n\nand this article from the beginning of 2016 which is even more relevant today: https://www.sitepoint.com/average-page-weight-increased-another-16-2015/\n\nUsers never complain about overweight pages\n\u2026because they abandon them. Analytics record those who successfully access a site. They won\u2019t highlight those who couldn\u2019t load obese pages or never returned again.. Here's the useful gist how to install Android 4.4 emulator on Linux: https://gist.github.com/limonte/a6d00f09edccfd66b6a02fd58551b796 . @zenflow I merged and released this PR because it was urgent. Feel free to comment here so I can apply your suggestions or submit a PR in case I missed something.. > As a library I think changing the global environment like in privateProps.js is too intrusive and could cause some users some confusing issues. This can be avoided and WeakMap can be loaded in just a local lexical scope.\n\nValid point, will do :+1:\n\nI'm not so confident in the WeakMap implementation used here.. I'm not sure it was ever tested or not and it seems like it was intended to be more of a demonstration of what you can do with Symbols rather than a serious production-ready implementation of WeakMap.\n\nI think it's good enough as a temporary solution, at least all tests are passing. Android 4.4 support will be (hopefully) dropped next year and that polyfill will be removed completely.\n\nNpm is great. \n\nNot quite. Actually, IMO it's in a horrible state right now, here's why https://medium.com/@caspervonb/the-internet-is-at-the-mercy-of-a-handful-of-people-73fac4bc5068\n\nSo my suggestion is to choose a WeakMap polyfill from npm, have it included in the bundle, and use it such that it doesn't patch the global environment but instead use the exported WeakMap.\n\nDo you have any suggestions? I didn't find anything good yesterday.. > Not quite. Actually, IMO it's in a horrible state right now, here's why https://medium.com/@caspervonb/the-internet-is-at-the-mercy-of-a-handful-of-people-73fac4bc5068\nA small demonstration of the ridiculous state of npm ecosystem:\nnpm-remote-ls --development=false babel-core\n\u2514\u2500 number-is-nan@1.0.1\nJust to clarify, babel-core is using number-is-nan as one of its sub-dependencies and number-is-nan is the poNyfill which provides nothing more than function isNan(x) { return x !== x; }\nCan we call this \"great\"? I don't think so. But it's the best we have right now.. @zenflow would you mind to take a look?. @toverux please take a look at this issue when you have time, thanks!. This is fixed starting from v8.0.0. Thanks for this reminder @Evanna51 :) . Or, upgrade to the latest version (7.25.0) and use getIcons() getter to update the icon:\n```js\nfunction updateSwalType(newType) {\n  const icons = swal.getIcons()\n// hide all icons\n  icons.forEach(icon => icon.style.display = 'none')\n// show the new icon\n  icons.find(icon => icon.className.match(newType)).style.display = 'flex'\n}\n```\nLive demo: https://jsfiddle.net/ad3quksn/1603/. The ability to dynamically change swal type has been shipped in v8.0.0, please read the release notes for the list of breaking changes in the new major release.\njs\nSwal.update({\n  type: 'success'\n})\n. Hello @projct1 and thank you for this question. mixin() method returns a new instance of swal which you should use:\n```\nwindow.swalWithCancelButton = swal.mixin({\n    showCancelButton: true\n});\nswalWithCancelButton('Are u sure?', 'All data will be lost!', 'warning'); //without cancel button\n```\nI also added the example to docs site: https://sweetalert2.github.io/#mixin. Thanks for reporting @lucasumberto \nProperly fixed in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.20.0\nhttps://jsfiddle.net/ad3quksn/1179/\n\n. Done in https://github.com/sweetalert2/sweetalert2/releases/tag/v7.20.0\njs\nSwal({\n  input: 'email',\n  extraParams: {\n    validationMessage: 'Adresse e-mail invalide'\n  }\n})\nhttps://jsfiddle.net/ad3quksn/1180/. UPD, validationMessage param was added in 7.28.0, extraParams was deprecated :warning:\nNow it's as simple as\njs\nSwal({\n  input: 'email',\n  validationMessage: 'Adresse e-mail invalide'\n}). > For bug reports, please include:\n\n\na jsfiddle in order for us to be able to reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/663/\nIE11 JSFiddle template: https://jsfiddle.net/ad3quksn/664/\nSee ISSUE_TEMPLATE.md. UPD, validationMessage param was added in 7.28.0, extraParams was deprecated :warning:\n\nNow it's as simple as\njs\nSwal({\n  input: 'email',\n  validationMessage: 'Adresse e-mail invalide'\n}). You're probably overriding some styles.\nInspecting the toast might help: https://developer.chrome.com/devtools. Fixed in v7.20.4\nthanks for reporting @yehr59 !. @zenflow I wasn't able to figure out how to fix this, will you have time to take a look?. Duplicate of https://github.com/sweetalert2/ngx-sweetalert2/issues/69. @vincent-cm whatever it is, this is the right place for ng-related issues: https://github.com/sweetalert2/ngx-sweetalert2. :tada: This issue has been resolved in version 7.28.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Oops, this issue has been opened by mistake :) Ignore.. > typeof exports === 'object' && typeof module !== 'undefined' is wrong\nWhy? Is there any issue caused by this line?. > it should be typeof module === 'object' && typeof module.exports !== 'undefined'\nWhy? Any reasoning for that? Or just because you're saying so? :)\n\nHere's the UMD template for the reference: https://github.com/chilts/umd-template/blob/master/template.js. Anyway, we're using rollup for bundling, here's the right place to report any issues about the umd template: https://github.com/rollup/rollup/issues. @ganeshshrivas um... what?. Update SweetAlert2 dependency to latest version. @darron1217 we are opened for your contributions :). I just added the heightAuto parameter to the latest release 7.21.0 :tada:\nHere's your jsfiddle with heightAuto: false: https://jsfiddle.net/y3nf3fjg/1/\nThanks for the nice feature-request!. Duplicate of #1067. > For bug reports, please include:\n\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nJS Bin template for IE11 and other old browsers: https://jsbin.com/hirinit/edit?html,js,output\nSee ISSUE_TEMPLATE.md. Fixed in the latest release :tada:\n\nThanks for reporting @alexismoreau!. The first part of your issue is working exactly like you're expecting it to: https://jsfiddle.net/ad3quksn/1190/\nThe second part will not be implemented, sorry. The popup can be closed in many ways (keyboard, mouse, timer) and passing the event or DOM node does not make much sense because they could be very different.. A small delay 100ms was introduced before focusing the previous active element. The reason can be found here: #900\nWhat you're doing is basically against specs and not the supported case by SweetAlert2.\nFrom https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role\n\nAfter the dialog is dismissed, keyboard focus should be moved back to where it was before it moved into the dialog.\n\nHere's the updates jsfiddle working in the way you expecting: https://jsfiddle.net/y3nf3fjg/26/. Fixed in v7.22.2, jsfiddle: https://jsfiddle.net/7bow3tdj/4/\nThanks for reporting @redochka :beers: . https://sweetalert2.github.io/#multiple-inputs. You're using SweetAlert2 but reading the documentation of SweetAlert. Those are different projects nowadays.. In our Gitter. There's a repo for reproduction: https://github.com/paolog22/sweetalert-nuxtjs-demo\nI didn't have time to investigate, but my guess is that nuxtjs internally using uglifyjs which was causing the same issue for us until it was replaced by  babel-minify in #1062. # Temporary workaround\nDepending on your framework, find out the way to set the unused option of used whatnot-uglify plugin to false, e.g.\njs\n$.uglify({\n  compress: {\n    unused: false\n  }\n})\nInvestigation\nApparently, uglify-js/es isn't supported anymore and will be replaced by terser in the near future: \n\nhttps://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues/262\nhttps://github.com/webpack-contrib/uglifyjs-webpack-plugin/pull/296\n\nTo clarify, the issue is happening when two of those things are collapsing together: \n- unused configuration option of UglifyJS2: https://github.com/mishoo/UglifyJS2#compress-options\n- SweetAlert2's mixins\nIf the unused option is disabled, everything works fine, proof: https://github.com/sweetalert2/sweetalert2/tree/uglify-js-unused-false\n@zenflow will you have time to investigate further the uglify-js-unused-false branch and figure out which part/line of SweetAlert2's codebase is causing the Super expression must either be null or a function issue?. @zenflow do you maybe had a chance to take a look on this? I was trying to figure out, no luck for now. This is quite critical to our community, even if it's not the issue on SweetAlert2's side, the vast majority of our users are using uglify-js for building production builds and we will be the reason of their pain when they will try to understand why dev environment works and production does not. \nI feel bad about causing pain to other people and would appreciate a lot if you can investigate this.. > We could perhaps switch back to uglify-js here\n~Agree, will do.~ #1144\n\nbut then it would be crucial to have sourcemaps.\n\nAgree, will do in a separate PR and ask for your review.. Fixed in v7.24.3\nThanks @paolog22 @Vagabondtq for reporting and @zenflow for investigating and fixing! This was the tricky one to fix.. Hello @aphofstede and thanks for reporting this issue!\nI made a small change, but not 100% sure if it's a proper fix. Could you please try the latest release (v7.23.1) and let me know if the issue has been fixed for you? Thanks in advance!. Great! I'm closing this issue then.\nThank again for reporting and have a nice day!. > I thought you were going to change this so that the Symbol and WeakMap implementations are only defined for internal use, i.e. not monkey patched onto the global/window object. There's no need to mess with the global environment, and it can cause users more confusing issues.\nTheoretically, you're right, but I didn't succeed to make it work for Android 4.4 without using window. Feel free to submit a PR.. Thanks @zenflow! Merged and released in v7.24.1. \n@aphofstede sorry to bother you again, but could you please verify that v7.24.1 works for your project as well as v7.23.1?. Fixed in v7.24.0, just upgrade to that version, no changes in your code needed.\nThanks for reporting @xfolder!. Can't help you since you're not providing enough details. By \"enough details\" I mean working demo on stackblitz or similar.\nThis demo should help though: https://github.com/sweetalert2/sweetalert2-parcel-demo. Thanks for the proper issue-report @darron1217! A proper issue-report almost always leads to the proper help :)\nFirst of all, the working stackblitz: https://stackblitz.com/edit/angular-rds9ir?file=src%2Fapp%2Fapp.component.ts\nI replaced\njs\nimport swal from 'sweetalert2';\nwith \njs\nimport swal from 'sweetalert2/src/sweetalert2.js';\nBy doing import swal from 'sweetalert2' you're importing both JS and default CSS. Since you don't want the default CSS, you need JS only which is sweetalert2/src/sweetalert2.js.\nDocumentation: https://sweetalert2.github.io/#usage\nExample: https://github.com/sweetalert2/sweetalert2-parcel-demo/blob/master/app.js#L1. Fixed, thanks for investigating and reporting @TrendyTim!. Seems to be the unpkg issue, reported: https://github.com/unpkg/unpkg.com/issues/115\n. Fixed, thanks for reporting @AmitGuptaMT!. The issue is on your side, or on Bower's side.\nPS. Bower is deprecated, outdated and buggy dependency manager, consider not to use it.. Yay! THANKS A LOT, @zenflow for being the painkiller for our users :)\nuglify-js :man_facepalming: There's the upcoming replacement for it - https://github.com/fabiosantoscode/terser but it has the exact same issue currently.\nLet's keep an eye on the terser and hope one day it will be safe to use OOP in JS.. Duplicate of #892. done in https://github.com/sweetalert2/sweetalert2/commit/6e8328ce263bbb8c342b282c86ab32a63c4cfa5f. My guess is you need to update the plugin, the similar issue has been fixed recently.\nIn order to get more help please respect the issue template:\n\nFor bug reports, please include:\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nJS Bin template for IE11 and other old browsers: https://jsbin.com/hirinit/edit?html,js,output\nSee ISSUE_TEMPLATE.md. > swal.getContent().textContent to change my modal text. But for html, it isn't working.\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML. @zenflow what do you think? Is it too shitty or good enough? :) With this approach in the update() method the current instance won't be updated but replaced by the new one. Because of temporarily disabled animations, for users, it will look like the dynamic update. \nWhen it's needed to preserve the user input, developers would need to take care of that manually, e.g.\n```js\nSwal({input: 'text'})\nconst inputValue = Swal.getInput().value\nSwal.update({input: 'email'})\nSwal.getInput().value = inputValue\n```\nAny objections from your side?. This was a bad idea by me :man_facepalming:  \nThank you @zenflow for stopping me from adding this nightmare-to-maintain feature.. No additional JS params for styling will be added in new releases.\nThe foreground color could be changed either with pure CSS https://jsfiddle.net/ad3quksn/1594/ or by overriding SASS variables: https://github.com/sweetalert2/sweetalert2-parcel-demo/blob/master/styles.scss\n. Fixed: \n\n. Fixed: \n\n. Thanks for the report @altbdoor!\nConfirming the issue, the temp solution could be \njs\nimport swal from 'sweetalert2/dist/sweetalert2.js'\n//                            ^^^^\nBut we need to figure out what's happening here. @zenflow do you have any quick guess?\nI wonder how the same working in sweetalert2-parcel-demo.. > To test things out, I have forked the sweetalert2-parcel-demo repo, and did a fresh npm install and npm build. It seems to be getting the same issue as reported.\nOops, thanks for pointing that out! It's a regression after https://github.com/sweetalert2/sweetalert2/pull/1045 \nv7.18.0 works fine, the issue appears in v7.19.0 which contains #1045. @zenflow I need your help on this issue.. @zenflow did you maybe have a chance to take a look at this issue?. > Nope, there was no particular use-case. I was only trying to import the src since that was how it was documented on the site to import sweetalert before this.\nIn that case, we can consider this as a documentation issue which is fixed now both for https://sweetalert2.github.io/ and the README.md\nThanks, @altbdoor and @zenflow!. @zenflow agree, but we can do that only in the next major. Prior v7.18.0 users were able to import swal from 'sweetalert2/src/sweetalert2.js' and some of them might have this code in their projects.\nHere's the issue: #1185. > please direct me\nhere's the initial direction: https://github.com/sweetalert2/sweetalert2/blob/master/.github/ISSUE_TEMPLATE.md. Shipped in v7.25.1 :shipit: \nThanks!. Shipped in v7.25.1 :shipit: \nThanks!. Thanks for noticing and reporting this @webbiesdk!\n\nSo. Dead code?\n\nNope. My lazy ass decided to skip writing tests for getters/setters and here's the result: documented nonexistent methods  :man_facepalming: \n\nThe fix is coming asap.. Fixed in v7.25.1 \nThanks again for reporting!. I'll merge this because it's a fix for the critical issue, @zenflow I'd still like to hear your opinion on this change.. Fixed in 7.25.4, thanks for reporting @Snickbrack!. Wrong repo, https://github.com/t4t5/sweetalert/issues. > For bug reports, please include:\n\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nJS Bin template for IE11 and other old browsers: https://jsbin.com/hirinit/edit?html,js,output\nSee ISSUE_TEMPLATE.md. > If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then submit it to StackOverflow https://stackoverflow.com/questions/ask instead of GitHub, and make sure you add the sweetalert2 tag to the question.\n\nSee ISSUE_TEMPLATE.md. What exactly is the expected behavior? Answer with some HTML code, please.. I added the .swal2-label class to the latest release, now it's possible to style labels for checked radio or checkbox:\ncss\ninput[type=\"radio\"]:checked + .swal2-label {\n  background: orange;\n}\nLive demo: https://jsfiddle.net/ad3quksn/1748/\nThanks for your request @ChazyTheBest!. Thank you @varyzheng for your contribution!\nI can see that you put a lot of effort into making this PR, but unfortunately, I can't merge it. For the future - please open the issue and ask if it's okay to add new API before creating a PR.\nThe functionality you're suggesting to add is too specific for your use-case, it won't be helpful for the vast majority of users. Also, you can achieve the same result with already existing API: https://jsfiddle.net/ad3quksn/1782/. Thanks @varunsridharan for building this tool and sharing it with us!. nope, different kinds of instabilities and WTFs with AppVeyor :/. Absolutely yes! This project is driven by the open source community and every contribution is warmly welcome.\nWe already have the logo which was made by @acupajoe in #726 but I would still like to see yours and then we can discuss with collaborators about accepting it.. If your logo will be a good one, I will have a private logo design task for you. That would be not for free of course :moneybag: . > Unforeseen detail here: What about the scss files located under src/?\nGood point. Should we separate them into scss folder? I was never comfortable with scss and js files mixed in one folder.\nI'm opened for the folder name discussion. To be explicit, we can go with scss, or, to be fancier, stylesheets could be an option (inspired by http://thesassway.com/beginner/how-to-structure-a-sass-project). As discussed in https://github.com/sweetalert2/sweetalert2/issues/1281#issuecomment-446227337 we need src files because we want to provide the ability to import uncompiled files (e.g. for security reasons).\nAs for scss files, well it would be better to have them separately, but there are no strong reasons to bring another one breaking change.\nSo, wontfix.. @zenflow after the green light from, I'll cover the new functionality with tests to keep code coverage on a 90+ level :1st_place_medal: . oops, wrong button. I'll just ship this feature as it is :shipit: . @zenflow I personally do not see any of those as critical issues, if they are we will fix them and ship as patch releases because they will not affect public APIs.\nPlease elaborate a bit more on:\n\nwhich are potential use-cases which won't work as expected\nwhat is actual behavior\nwhat is expected behavior\n\nProper issue-reports (with some code, actual and expected behaviors) and/or PRs are very welcome.. > I'm not sure why you are so hasty \nThe process of releasing a new major took 11 days: https://github.com/sweetalert2/sweetalert2/compare/aa657e5...v8.0.0 I wouldn't call it hasty. Everybody noticed PRs with \"BREAKING CHANGE\" in their titles and was able to participate.\nWe all have limited time, I personally don't need anything from #1373 or #1386 for my projects, that is why I didn't work on them. At the same time, new major contains some really important changes (e.g. ES modules support) which people need and my responsibility as a mantainer fo this project is to ship that as soon as possible.\n1373 has appeared after I started the new major process and it lacks use-cases with code examples, actual and expected behaviors, that's why I didn't work on it. I will ask for clarifications there, but it's a bit impolite to drop issues without following issue templates and expect them to be done. . Thanks for reporting @nicolasvahidzein !\nWhich version of Bulma are you using? Can you provide the simple jsfiddle with the issue repro?. @nicolasvahidzein did you try setting the heightAuto param to false?. Glad to help!. Fixed in v7.26.10, thanks for reporting @kimmanwky!\nThe backdrop should never be shown for toasts, no need in backdrop: false, allowOutsideClick: false, just toast: true is enough. . Hello @adwil13 and thanks for reporting!\nThis is the duplicate of #1191, the issue has been fixed in v7.26.10, please upgrade your dependency.\nThe backdrop should never be shown for toasts, no need in backdrop: false, allowOutsideClick: false, just toast: true is enough.. Hello @jbarrieault and sorry it took so long for me to respond here.\nThe issue is fixed in https://github.com/sweetalert2/sweetalert2.github.io/commit/9d0cac2b1d49ad53a4061862bcaf92f1603c0b6b\nThanks for reporting!. showConfirmButtoN. Fixed in 7.26.11, thanks for reporting @prayzzz!. > If you think this issue is more focused more on 'how do I do this?', please close this issue.\nIt is, you'll get help on StackOverflow.. Please update the sweetalert2 dependency to the latest, this issue should be fixed.. Glad to help \ud83d\udc4d . :tada: This issue has been resolved in version 7.26.29 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.27.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Hello @jlwgeneral and thanks for reporting this. laravel-admin is currently using SweetAlert, not SweetAlert2. I submitted a PR https://github.com/z-song/laravel-admin/pull/2374 which will fix this issue.. My PR was merged and the new version of laravel-admin was released. Upgrade laravel-admin and the issue should be gone.. Good question, @erlinghoff \nThe solution is as simple as \ncss\nbody.swal2-shown > [aria-hidden=\"true\"] {\n  filter: blur(10px);\n}\nYou may wonder why [aria-hidden=\"true\"]. The answer is: SweetAlert2 sets [aria-hidden=\"true\"] on every direct child of the body for the accessibility support. Details can be found here: https://github.com/sweetalert2/sweetalert2/pull/1189\n\nTo make things smoother and nicer you can add transition to animate filter:\ncss\nbody > * {\n    transition: 0.15s filter linear;\n}. This looks like the issue of your project's setup.. I would really appreciate if you guys can provide a sample code to reproduce - github repo, codesandbox, stackblitz - whatever works better for you. Thanks!. Is anyone of reporters able to provide a live (working) demo or at least the repo which I can pull-n-build?\nTo clarify, I'm willing to help, but I'm unable to reproduce the issue. Gists/configs aren't too helpful :/. Fixed in the latest, thanks a lot @dambusm for providing an example \ud83c\udf7b\nI wonder how are you guys surviving with those Angulars with a shitload of default dev-deps which are apparently quite buggy, e.g. uglify-es which is used for the prod minification.. This is the second PITA caused by uglify-es bugs, here's the previuos one: https://github.com/sweetalert2/sweetalert2/issues/1127\nuglify-es is buggy and unmaintained: https://github.com/mishoo/UglifyJS2/issues/3156#issuecomment-392943058\nFor your prod builds I recommend not to use the default tooling Angular is providing for you.\nInstead, take a look on more reliable projects:\n\nhttps://github.com/babel/minify\nhttps://github.com/fabiosantoscode/terser. > For bug reports, please include:\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nSee ISSUE_TEMPLATE.md. Closing due to inactivity, reply with JS Bin please.. Sure it is, here's the live demo: https://jsbin.com/povebuzicu/edit?html,css,js,output. :tada: This PR is included in version 7.26.15 :tada:\n\n\n\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. After 1 day of Trying Stuff Until it Works the automated releasing process is here \ud83c\udf89 . :tada: This issue has been resolved in version 7.28.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.26.27 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.26.28 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thanks for reporting @molerat619 and apologies for not responding promptly!\nI'll try to figure out how to fix this, but I need to admit that I have the lack of knowledge here.\nAny help would be highly appreciated here!. :tada: This issue has been resolved in version 7.27.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Done, proof: https://dandy-closet.glitch.me/\nThanks for reporitng @molerat619!. Thank you for your feedback @molerat619!. > For bug reports, please include:\n\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nSee ISSUE_TEMPLATE.md. Closing due to inactivity, reply with jsbin please.. Thanks for reporting @gilbertoalbino!\n\nLooks like this issue: https://github.com/jsdelivr/jsdelivr/issues/18093. I don't know how to detect where is the scrollbar, if someone knows please answer my question on StackOverflow: https://stackoverflow.com/q/52404285/1331425\nAny help would be highly appreciated!. Well, it seems that\n\nthe platform doesn't provide the API for detection of scrollbar position\nbrowsers are inconsistent in the scrollbar alignment: https://w3c.github.io/i18n-tests/results/native-user-interfaces#scrollbar\nNative RTL languages speakers don't really care, asked a couple of advanced users and all of them have English Windows/mac with scrollbar on the right side.\n\nTherefore, closing.. 1. https://sweetalert2.github.io/\n2. ctrl + f\n3. autocomplete. :tada: This PR is included in version 7.27.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Going back isn't in the core, but can be achieved with async/await\nLive demo: https://nice-belt.glitch.me/\nSource: https://glitch.com/edit/#!/nice-belt. :tada: This PR is included in version 7.28.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > I don't think we should rename SASS variables in a minor release. Users can be customizing the styles for (aka theming) SweetAlert2, using the current variable names, and so changing that would mean a breaking change for them.\nAgree and apologies about being irresponsible here. SASS variables is the part of public API and should follow the same rules in the releasing process.\nYesterday I was like 'well, it's a tiny breaking change, could be in minor release'. Shame on me, especially after raising issues like this one: https://github.com/elbywan/wretch/issues/30\nSASS variables are reverted: https://github.com/sweetalert2/sweetalert2/pull/1229\nThank you for the CR @zenflow \ud83c\udf7b . :tada: This PR is included in version 7.28.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.28.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > For bug reports, please include:\n\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nSee ISSUE_TEMPLATE.md. > going to any other button \n\nSorry, but what does this mean? :). thanks for the video @sunnyparekh can you specify the version of Edge you're using?. I have the exact same version, and can't reproduce the issue. Could it be related to one of Edge extension you have installed? Could you test the same jsbin in the new InPrivate window (because extensions are disabled in it)?\n\n. Thanks for your PR @amilajack !\nCould you please specify the reason to test against latest stable instead of LTS which is recommended for most users?\n\n. If it would be the Node.js library it would make sense to test it against multiple node versions, but it's the client-side library and I don't think that testing in multiple versions of Node.js is improving something for client-side libraries. \nWe are testing SweetAlert2 against multiple operating systems and browsers via SauceLabs, but testing against multiple Node.js versions is excessive.. :tada: This PR is included in version 7.28.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.28.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.28.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Please forward this issue to Midori & Epiphany repos. We will not add any complexity to the SweetAlert2's codebase because of rarely used browsers.. 1. https://sweetalert2.github.io/\n2. ctrl + f\n3. position. Not sure, in order to get a proper help please provide a jsbin with the replication of your use-case.\n\nFor bug reports, please include:\n\na JS Bin in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nJS Bin template: https://jsbin.com/gutesej/edit?html,js,output\nSee ISSUE_TEMPLATE.md. Wrong repo :) Here's the right one: https://github.com/t4t5/sweetalert. :tada: This PR is included in version 7.28.5 :tada:\n\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. The issue is on the extension side, you need to ask them to stop breaking the Internet.. Fixed in the latest release (2.9.3) of the \"I don't care about cookie\" extension \ud83c\udf89 \n\n. You probably want to achieve this: https://jsfiddle.net/htf3sdw7/. Duplicate of #812. Thanks for sharing the code @ttaylor29 !. This is a great UX feature, but I believe it should not be added to SweetAlert2. It's a custom input, custom inputs are out of scope of this plugin.\nHere's the example with hideShowPassword: https://jsfiddle.net/m347aqc9/1/\nhideShowPassword is accessible and themable. It's quite old though and depends on jQuery. If you find a better plugin for password field, please share in this thread.\nThanks for the request and have a great day!. > It seems that right now toasts can only display in relation to the main document element.\nIncorrect.\nThis code will work as expected and place a toast into a custom target:\njs\nswal({\n  title: 'Toast in a custom container',\n  toast: true,\n  target: document.querySelector('#toast-container')\n})\nProof:\n - code: https://glitch.com/edit/#!/faithful-innocent\n - live demo: https://faithful-innocent.glitch.me/. Sorry about not answering before guys,\n@gverni before adding more complexity to the core we need to understand if it's really needed because this use-case is quite narrow.\n@bodrick in order to achieve the relative positioning of the toast, you need two things:\n\nadd position: relative to .container\nadd position: absolute to Swal.getContainer()\n\nhttps://boulder-satin.glitch.me/\nWould that work for you @bodrick ?. > Fully agree. My understanding of the target prop was that it was used not only for styling (e.g. the rtl example) but also for positioning. Obviously I was wrong :-) I think we should then make it clear in the documentation, maybe providing the positioning workaround in your comment as example for those developers that would like to achieve that. What do you think @limonte?\nTotally agree \ud83d\udc4d  I was thinking if we need to add customContainerClass or not.\nRight now the workaround for positioning a popup looks like\njs\nSwal({\n  ..\n  onBeforeOpen: function () {\n\u00a0   Swal.getContainer().style.position = 'absolute';\n\u00a0 }\n})\nwhich is quite ugly, setting inline styles in JS shouldn't be encouraged. With customContainerClass it will be\njs\nSwal({\n  ..\n  customContainerClass: 'position-absolute'\n})\ncss\n.position-absolute {\n  position: absolute;\n}\nIf you also think that customContainerClass is needed, feel free to submit a PR.. @bodrick the updated version with customContainerClass: https://whip-button.glitch.me/. https://stackoverflow.com/q/52786341/1331425. :tada: This issue has been resolved in version 7.28.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Unfortunately, this didn't fix iOS :(. > See this lib for implementation, it locks body scroll for a scrolling modal container on iOS etc, cross-browser: https://github.com/willmcpo/body-scroll-lock\nNot really, https://github.com/willmcpo/body-scroll-lock/issues/39. Hello @kwagdy and thank you for proving the screen recording!\nI have the offtopic question regarding the screen recording above. As I understand correctly, it's the Arabic language there which is RTL. Should the question icon contain \u061f instead of ? for Arabic language?. > this is an Arabic RTL web app, and yes, I should find a way to flip the question mark!\n@kwagdy the proper way to flip the question mark is upcoming, see #1443 for the details.. Hm, the fix looks \"dirty\" to me. @kwagdy Did you try setting heightAuto parameter to false?. :tada: This issue has been resolved in version 7.28.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.28.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @roopeshreddy you can find all answer you need in @zenflow's questions :D. > For bug reports, please include:\n\n\na Glitch in order for us to be able to reproduce the issue\nexpected behavior of the plugin\nactual behavior\n\nGlitch template: https://fantasy-word.glitch.me/ click \"Remix on Glitch\" to edit it.. > or at least have an option to keep it away from there.\n\nThere's the documented param heightAuto which could be set to false.\n\n. \nDuplicate of #1246. Doesn't seem to happen anymore, closing.. :tada: This PR is included in version 7.28.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.28.7 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Duplicate of https://github.com/sweetalert2/sweetalert2/issues/1240. Fixed in the latest release (2.9.3) of the \"I don't care about cookie\" extension \ud83c\udf89 \n\n. Thanks a lot, @gverni \nI put your idea + resize handlers + tests into #1259 \nI'll close this PR in favor of #1259, but your commit is still there and your username will be in the commit history of SweetAlert2.\nAlso, please send me your PayPal email to the email address from my GitHub profile, as promised I'll send you a bounty \ud83d\udcb0 . :tada: This PR is included in version 7.28.8 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. The similar issue in Bootstrap: https://github.com/twbs/bootstrap/issues/22362. :tada: This PR is included in version 7.28.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. LGTM! Please create a PR so we'll continue with the core review. :tada: This issue has been resolved in version 7.28.12 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 7.28.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Fixed in 7.28.9, thanks for reporting @mikeycrostar!. > Should I add any test case for this change?\nI don't really know how to test this case, so let's skip tests.\n\nBTW, I noticed that when sweetalert is open from Safari when already in full screen, it doesn't get the focus. So the esc key doesn't get handled by sweetalert and it causes the browser to exit from full screen. I need to investigate more.\n\nPlease do so. I added a ticket for that: https://github.com/sweetalert2/sweetalert2/issues/1265. FYI @gverni After merging the release would happen automatically in a couple of minutes, robots are taking care or routines on this project :) \nIf you're interested how it's done: https://github.com/sweetalert2/sweetalert2/pull/1212. :tada: This PR is included in version 7.28.10 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Just noticed that you used \"fix for ###\" in the description, GitHub and semantic-release can't understand that and close the issue automatically. You need to use \"fix ###\" without \"for\", or other keywords which you can find here: https://help.github.com/articles/closing-issues-using-keywords/\nI'll close the issue manually.. No worries, at some point robots will become smarter and understand humans better :). I can't reproduce this in my High Sierra VM (Safari 11.1.2) which version of Safari are you using @gverni?. Thank you for the detailed investigation report @gverni! I don't think we should/could fix the native Safari behavior.\nFeel free to close this issue with the \"wontfix\" label.. :tada: This issue has been resolved in version 7.28.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. After using sweetalert2.min.css, do we still need the custom css2js configuration?. > Probably not, but it does not hurt\nIn that case I'd prefer not to have those configurations. In terms of maintainability no code is 19382732% better than the code which will handle the theoretical case.\nAlso, the same css2js configuration is used in two places which violates the DRY principle.. In the latest commit, you updated yarn.lock file, could you please undo that either in a new commit or by amending the latest one. Thanks!. :tada: This PR is included in version 7.28.11 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. The code from the console should not be executed for toasts:\n\nFor bug reports, please include a Glitch in order for us to be able to reproduce the issue\n\nGlitch template: https://fantasy-word.glitch.me/ click \"Remix on Glitch\" to edit it.. I can not see any issues here: https://81xo2yj180.codesandbox.io/\n\nWhat are the steps to reproduce the issue?. > Ok i found the problem i'm so stupid ...\nThis is not you fault, the extension is a problem here.\n\nI have the extension \"I don't care about cookie\" and the extension broke your librarie ...\n\nI'm starting to think that we should make a workaround for that extension. This is already the third issue about it :(\nPrevious two:\n\nhttps://github.com/sweetalert2/sweetalert2/issues/1240\nhttps://github.com/sweetalert2/sweetalert2/issues/1257. Hopefully today :)\n\n\n. Fixed in the latest release (2.9.3) of the \"I don't care about cookie\" extension \ud83c\udf89 \n\n. @mhsystem I guess you want to achieve this: https://recondite-dragon.glitch.me/. I'm closing this issue due to inactivity, leave a comment if you think it should be reopened.. Tests are failing, I'd like to hear @zenflow and @samturrell opinions before polishing the PR.. > but with the dynamic form builder api coming in the future (where there can be multiple inputs) i don't think this will work well as you will need to validate multiple fields and return error messages for each\nI don't see any issue here, we're still able to call the .checkValidity() method of each field. Probably I don't understand some details about the form bilder. @samturrell could you please elaborate a bit on what will be the issue with the form builder?. I'll close this in favor of #1284 \nThis breaking change isn't needed for now.. :tada: This issue has been resolved in version 7.28.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.28.12 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > thanks @limonte for your review. I hope I've put the right semantic-release commit message (it was a first for me)\nYay! Congrats @gverni  with your first SweetAlert2 release \ud83c\udf89 . Please provide the live demo, here's the template: https://fantasy-word.glitch.me/ click \"Remix on Glitch\" to edit it.\n. > maybe it is related to something else.\nMost probably it's related to the way you're bundling/minifying your app.. I'm closing this issue due to inactivity, leave a comment if you think it should be reopened.. The same issue as in #892. Answered in https://github.com/sweetalert2/sweetalert2/issues/1205#issuecomment-415997185. @gverni would you mind to write a test case for this PR? If yes, clone this PR, create a commit with a test case and push it. \nSuggestions: I personally think that GitHub Pull Requests in Visual Studio Code is the easiest way to work with PRs.. LGTM!\nPS. you might want to reconfigure your Git settings to match the GitHub email, currently it doesn't:\n\n. > P.S. I used the Check out PR feature of Visual Studio, and I've noticed this is adding a merge from the master branch as well. So when I pushed on this branch, it added that commit as well. If we squash the PR should not be a problem, but I'm not sure if there's a better way of doing that.\nExactly, squashing allows us to have some imperfections in the commit history of pull requests.. :tada: This PR is included in version 7.28.13 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @gverni would you mind to fix this issue? :). :tada: This issue has been resolved in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I'd like to return to this topic and take a look at it from the security POV. The suggested\njs\nimport Swal from 'sweetalert2/dist/sweetalert2.all.min.js'\nis insecure, nobody can guarantee that the minified file is the direct result of the source code minification.\nHumans are sometimes doing evil (https://github.com/dominictarr/event-stream/issues/116). There are no guarantees that I will not lose my mind and inject some bitcoin-stealing shit into the minified code. Also, there are several collaborators with push access to this repo, they are also humans, also insecure. I want to protect our users from insecure imports.\nIdeally, it would be great if this code would work:\nhtml\n<script type=\"module\">\n  import Swal from './node_modules/sweetalert2/src/sweetalert2.js'\n  Swal('hi')\n</script>\nRight now it throws the same exception as in the issue description:\nwithNoNewKeyword.js:11 Uncaught TypeError: Class constructor SwalWithGlobalDefaults cannot be invoked without 'new'\n@zenflow do you maybe have any ideas on how we can achieve the same functionality and flexibility we currently have + the possibility of importing from the src folder? Any thoughts would be very welcome.. > If we are looking at supporting version 7.x after the release of 8.0, a solution might be to replace all the use of class syntax with old-school JS OO patterns (i.e. function MyClass () {}; MyClass.prototype.myFn = function () {}`)\n7.x is good as it is.\n\nOtherwise, we can simply \"Drop withNoNewKeyword in coming major release\" (#1368)\n\nAgree :+1:. Fixed in v8.0.0, please read the release notes for the list of breaking changes in the new major release.\nLive demo with ES modules: https://jsfiddle.net/bhe7vq9d/\n```html\n\n\n  import Swal from 'https://cdn.jsdelivr.net/npm/sweetalert2@8/src/sweetalert2.js'\n  Swal.fire('hi')\n\n```. Thanks for the PR @varunsridharan but I will decline it because the project is\n\nnon JS \nlow-quality (if it's not tested, it's broken (c))\nunpopular (0 stars). > i am sure this might be very usefull to other devs\n\nYou might be wrong here. The package isn't installable via Composer (the default PHP package manager) so you don't have any installations statistics and can't make any statements on how useful or useless it is.. :tada: This PR is included in version 7.29.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. https://stackoverflow.com/questions/ask. Hi, please provide the live demo and specify the browsers/OS. Thanks @jfcherng for the investigation! The fix is coming today \ud83d\ude80 . :tada: This issue has been resolved in version 7.32.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. https://petal-interest.glitch.me/. :tada: This PR is included in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. false alarm. I don't think it's worthy to add any additional complexity to the existed functionality.\nasync/await provide flexibility in achieving any kind of custom queueing functionality:\nLive demo: https://nice-belt.glitch.me/\nSource: https://glitch.com/edit/#!/nice-belt. :tada: This PR is included in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Tests are failing as well: https://travis-ci.org/sweetalert2/sweetalert2/builds/456184696 but because Edge is crashing itself, Karma doesn't report any meaningful error message.. @gverni would you mind taking a look at this issue? Most probably, it's related to #1279. Wow! That's completely unexpected! You probably found the shortest and easiest way to crash Edge :D\nRelated issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8696129/. :tada: This issue is fixed in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.29.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Duplicate of #834\nReason: Bootstrap 3 is setting font-size: 10px for html.\nSolution: \ncss\n.swal2-popup {\n  font-size: 1.6rem !important;\n}. @zenflow you're the author of utils/execute.js, do you maybe have any thought what event-stream could be replaced with?. :tada: This issue has been resolved in version 7.29.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.29.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. StackOverflow is the right place for all how-to questions.. split and map-stream are fine. event-stream is suspicious because of flatmap-stream, which was introduced in event-stream@4.0.0.\n\nOn a different note, I've seen some other changes on yarn.lock file that are not related to the removal of the event-stream package.\n\nThat's alright :+1:. :tada: This PR is included in version 7.29.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Manually tested everywhere, works perfectly.\nThanks again, @gverni!\ud83c\udfc5 . :tada: This issue has been resolved in version 7.29.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.29.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > Its not a problem with my project sadly.\n\nI can use swal inside of any page inside of my app, but when i open the android browser inside my app(themeablebrowser or inappbrowser) then swal does not open anymore, no matter what i tried.\n\nThis isn't the right place to ask Cordova-related questions. This is the right one: https://stackoverflow.com/questions/ask. :tada: This PR is included in version 7.30.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.31.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.30.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Fixed by https://github.com/karma-runner/karma/issues/3222\n. :tada: This PR is included in version 7.30.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. globalState.keydownTarget should not be null or undefined. It's either window or the container of a popup: https://github.com/sweetalert2/sweetalert2/blob/master/src/instanceMethods/_main.js#L367\nCould you please provide a live demo so we can reproduce, debug and understand how globalState.keydownTarget ended up with a falsy value?. Closing this in favor of #1320 \nI'm willing to fix this issue, but the code is needed in order for me to provide a proper fix. Please provide any relevant code or live demo or at least tell which router are you using?. Thank you @dylanmcgowan for the detailed issue report!\nI suspect the issue is somewhere here \"when switching routes\". Is it possible to provide a live demo of the router you're using? . Thanks @gverni for the investigation, here's the simplest possible code to reproduce the issue:\njs\n  Swal({\n    toast: true,\n    onOpen: function () {\n      document.body.className = ''\n      Swal.close()\n    }\n  }). Closing this as wontfix, you guys need to figure out why SweetAlert2's classes (swal2-toast-shown swal2-shown) are removed from <body> when changing routes. There should be some way to prevent router from removing those classes.. Hey @teodorsandu and thanks for the effort you've put into your question and codepen!\nWill https://github.com/sweetalert2/sweetalert2/pull/1322 help with your use-case?. :tada: This issue has been resolved in version 7.30.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Live demo of Swal.stopTimer(): https://codepen.io/anon/pen/zMVYKz. :tada: This issue has been resolved in version 7.31.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @teodorsandu all requested methods were added, here's the live demo: https://shrouded-request.glitch.me/. :tada: This PR is included in version 7.30.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Hello @vavo-cake! Could you please help me to understand the reporters' behavior and answer why didn't you follow any of the templates available in https://github.com/sweetalert2/sweetalert2/issues/new/choose ?. Another question to @vavo-cake, @gverni asked you to provide live demo with glitch and instead of that you just copy-pasted the code. Do you have any difficulties to create a glitch?. Question to @gverni : I'm a bit tired of reporters who \n\nwant help (our time) for free\ndo not want to put their time and effort in making proper questions/feature-requests\n\nThey do respect their time and don't respect our time :/ So, should we just close such issues with a default response (GitHub's \"Saved Replies\" feature)? Something like \"Sorry, you didn't follow the required issue template, please try again.\"\nWhat do you think about that? Am I being too strict to reporters or you feel the same?. > I personally am not a fan of stackoverflow because it doesn't really allow me to engage in a conversation with the user (or at least is not as effective as github issue for me)\nTrue that. \n\nMaybe we can find a different tool to allow users to raise how to questions. I can look around and make some proposal. What do you think?\n\nThere was Gitter back in days, I removed it because I'm personally not a fan of long conversations using human languages, I prefer code :)\nTake a look at Gitter, if you like it feel free to revert https://github.com/sweetalert2/sweetalert2/commit/35b89afb71046585b9e1550d57a92c0862e2bba5\nI was also thinking about recording a short (1 minute max) video on how to use glitch, it should cover:\n\nhow to remix\nhow to see the live result\nhow to edit code\nhow to add external scripts/styles\nhow to share the result\n\nAre you familiar with screen-recording? If not I'll handle that, if yes will you be willing to record it and upload to YouTube?. > @gverni @limonte Thank you very much for your suggestion. I just started using github. I am not familiar with many places. I am sorry to have brought you unpleasantness. I wish you all a fortune.\nNo worries, it seems that I'm not in the best mood :) We will try to improve the instructions for reporters so it will be easier for beginners to participate.. > Yes, I'm normally using loom for screen recording. Let me work on a video and i'll make a proposal. I can also create a short gif for people that are more familiar with sharing live example, but not with glitch itself.\nThat's great, thanks a lot! Gifs might be a better idea than uploading a video to YouTube. Gifs can be stored on GitHub and we can add them to the issue template as well as have a Wiki page.. :tada: This issue has been resolved in version 7.31.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Hello again @vavo-cake \nJust to notify you that with the latest release your original code from the issue description will work \ud83c\udf89 . :tada: This PR is included in version 7.31.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.31.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.31.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.31.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.32.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Good idea! I'd prefer the isTimerRunning name for this method. The is prefix is automatically telling to developers that the method returns boolean value. What do you think?. :tada: This PR is included in version 7.32.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.32.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.32.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.32.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Fixed in https://github.com/sweetalert2/sweetalert2/commit/b015f80f1b7c9ea983c2d46b917d576d77bf6f80\nBad | Good \n-- | --\n |  \n. onOpen is fired after a modal is open, try to use onBeforeOpen instead:\njs\nswal({\n  ...\n  onBeforeOpen: () => swal.showLoading(),\n}). What's wrong with Atlassian? IMO it's a very respectful company with talented people.\nAds are helping this project to live and evolve. I think that OSS should be paid and ads are now the most stable way to generate some income. We are using Carbon Ads which serves only technical ads for developers and designers. I personally find them quite useful and not annoying at all.\nYou can hide ads for free by using the ad blocker, e.g. https://github.com/gorhill/uBlock\nHave a nice day and try not to use the profanity in public conversations :). I guess we can close this PR in favor of #1347 ?. false alarm. Done:\n\n. :tada: This PR is included in version 7.32.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Should be round:\n\nCould you inspect .swal2-success-ring and reply to us what's blocking border-radius?. https://www.youtube.com/watch?v=x4q86IjJFag. :tada: This PR is included in version 7.33.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Perfect, thank you!. :tada: This PR is included in version 7.33.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I just added a small PR with one detail we missed here - typings: https://github.com/sweetalert2/sweetalert2/pull/1351\nWould you mind to take care of adding docs for a new param?\nAlso, @gverni did you maybe got a paypal.me link so I can send a sign of appreciation of your work on SweetAlert2. If so, feel free to leave it here or send via email.\nHappy holidays!! \ud83c\udf84 \ud83c\udf85 . :tada: This issue has been resolved in version 7.33.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.33.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 7.33.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. false alarm. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. The bundle will be 184B smaller \ud83c\udf89 . :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. The bundle will be 94B smaller \ud83c\udf89 . Will do in #1369, thank you @zenflow for taking a look on this PR!. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > @limonte Why not just fully delete withGlobalDefaults.js and not apply it?\nGood idea! Will be done in #1368 \n. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Will do, thank you @zenflow  :+1:. @gverni thank you! I will assign you to some tasks for the upcoming major!. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @zenflow would you have time to take a look at this PR? \nAlso, do I understand correctly that we don't need withGlobalDefaults as well?. The bundle is 72B smaller now\nIn total, we'll make it 1KB smaller than the prev major  \ud83c\udf89 \n@zenflow I'll merge this PR and continue with other tasks for the next major, feel free to give any feedback on this PR later.. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. This looks like a feature request. In future please follow the templates when you reporting/requesting something to be done.\nThis request is missing the \"New feature motivation\" section. Please describe the context, the use-case and the advantages of the feature request. What will change for end-users and why do they need this feature?. Thanks for noticing this!\nDone: https://github.com/sweetalert2/sweetalert2/commit/f76808ef4876a2f0602a4da04a07223e0e8c5821. Agree, will add that to the release notes of the new major, thanks!. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. It was already added here https://github.com/sweetalert2/sweetalert2/pull/380. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Pika is now absolutely happy about SweetAlert2: https://www.pikapkg.com/packages/?q=sweetalert2\n. Live demo with ES modules: https://jsfiddle.net/bhe7vq9d/\n```html\n\n\n  import Swal from 'https://cdn.jsdelivr.net/npm/sweetalert2@8/src/sweetalert2.js'\n  Swal.fire('hi')\n\n```. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Yay!\nPika is now absolutely happy about SweetAlert2: https://www.pikapkg.com/packages/?q=sweetalert2\n\n\nOriginal SweetAlert still doesn't support ES modules: https://www.pikapkg.com/packages/?q=sweetalert. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Congrats, everyone!  \ud83d\udcaa \n. > Given #1383 I can simplify even more the prototype of the close() and keep only the resolveValue\nThat's a possible change, yeah. But let's agree on it before doing any changes on this PR.. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. https://stackoverflow.com/questions/ask. Welcome to GitHub, @EfraimLA \nI will close this issue without the answer because it's impossible to help with the information you've provided.\nPlease create a new one and follow the bug report template.. Thank for the feature request, but I personally don't like it, here why. Imagine 5 steps queue:\njs\nconfirmButtonText: ['Next &rarr;', 'Next &rarr;', 'Next &rarr;', 'Next &rarr;', 'Finish'],        <-----------\nprogressSteps: ['1', '2', '3', '4', '5']\nThis code smells, it's hardly maintainable and it violates the DRY principle as 'Next &rarr;', is copy-pasted 4 times. Imagine what a nightmare it would be to maintain the 10 steps queue and keep two arrays (confirmButtonText and progressSteps) in sync.\nThis  would be better:\njs\nSwal.mixin({\n  input: 'text',\n  confirmButtonText: 'Next &rarr;',\n  progressSteps: ['1', '2', '3']\n}).queue([\n  {\n    title: 'Question 1',\n    text: 'Chaining swal2 modals is easy'\n  },\n  'Question 2',\n  {\n    title: 'Question 3'\n    confirmButtonText: 'Finish'\n  }\n]).then((result) => {})\nNo copy-paste and easy to change/maintain (progressSteps could contain 3 or 30 steps, it doesn't matter).\n\n. > What's the reasoning for this? I put that test there intentionally to deal with unexpected errors in user-defined functions. If something goes wrong in their provided functions, I believe it should propagate the error, i.e. the call to Swal.fire() should reject, and the modal which is now in a potentially invalid state, should be cleaned up.\nI would prefer if SweetAlert2 never rejects, so developers will know that they should never bother themselves with adding catch to Swal.fire().\nIf there's a possibility of unexpected exceptions in preConfirm, I believe this is the proper way to handle them:\njs\npreConfirm: () => {\n  return new Promise(function () {\n    throw new Error('boom')\n  }).catch((error) => {\n    Swal.showValidationMessage(error)\n    return false\n  })\n}. Please raise your objections if there are any. Thank you for your feedback @gverni! Would you mind to provide a code representation of this example:\n\nCurrently for example, if the value of one of the innerParams is not correct, swal is just throwing a warning. IMHO it may be better if it actually rejects. Consider for example the use case where a developer is setting inputValue as return from another function he doesn't have a control on. In this case if this function is returning a not-expected type (i.e. a Date object) then the only thing that happen is a warning on console, and this is difficult to handle. If swal actually rejects in this case, then the developer could handle this specific case in a different way.. Thanks, @gverni for the detailed explanation and SourAlert :D\n\nIn SourAlert, a developer is modifying inputValue before calling Swal:\njs\nif (!(typeof args.inputValue === 'string' || typeof args.inputValue === 'number')) {\n  args.inputValue = args.inputValue.toString()\n}\nIt would be irrelevant to do the same thing in Swal.catch(), so the SourAlert developer would still need to do the same thing even if we would be rejecting the promise in case of unexpected exceptions.. Because there are no strong objections, I'll merge this PR. @gverni please rebase #1379 on top of master and simplify it accordingly to this change. Thank you!. :tada: This has been shipped in version 8.0.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Done, https://github.com/sweetalert2/sweetalert2/releases/tag/v8.0.0. Done.. Thanks for the proper issue-report @zenflow I personally can understand reports much better reading the actual code rather than reading the humans language. Probably that's related to the fact I'm not the native English speaker.\n\nThis does affect the public API:\n\nPublic API is everything documented in https://sweetalert2.github.io\nAccessing to the instance params isn't documented in https://sweetalert2.github.io, therefore it's not public API, therefore it's not a breaking change.. This is a very good topic to discuss. What you're saying @zenflow makes sense but brings some complications. Now, we are dealing with two different things: \n\ndocumented API\npublic API\n\nWhy would we have undocumented public API? Does \"undocumented public API\" make sense to you?. > The public API is everything that is exposed to the public.\nI actually disagree with this statement. The fact that users can do things like $('.swal2-content') doesn't mean that the swal2-content classname is a part of public API. It's not. It might be changed at any point.\nSwal.getContent() is the public API, it's documented in https://sweetalert2.github.io/#methods. Public API is the fundamental term, I'd like to avoid any \"fine lines\" about it. Imagine traffic rules with \"fine lines\" about the green light. That would lead to deaths, injuries, and disputes about whose understanding of a fine line is correct.\nTo avoid misunderstandings it should be clearly defined what is Public API and what it not. 1 or 0. \"I would (not) look\" and other subjective opinions can't really be the part of the definition.\n\"Everything that is exposed to the public\" can't be the definition as well because DOM structure and classnames are exposed and I do not have an intention to make them the part of Public API.\n\nPublic API is everything documented in https://sweetalert2.github.io\n\nThis is simple and easy to understand for everyone. swal.params is not the part of Public API yet, it will be once https://github.com/sweetalert2/sweetalert2.github.io/issues/60 is resolved. I guess you are updating to the latest MAJOR release https://github.com/sweetalert2/sweetalert2/releases/tag/v8.0.0\nAs per semver:\n\nMAJOR version when you make incompatible API changes,\n\nSo, when you upgrading to major releases, make sure to read release notes or changelog.\n\nalthough I don't really see why this change is an improvement, I likely am missing the bigger picture.\n\nHere's the issue which will help to understand the bigger picture: https://github.com/sweetalert2/sweetalert2/issues/1007 and the related PR which has a useful description as well: https://github.com/sweetalert2/sweetalert2/pull/1036. Oh, I see now that you're using jsdelivr CDN.\nIt's CRITICALLY IMPORTANT to specify the major version when using CDN to avoid unexpected errors in production, e.g.\nhtml\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@7\"></script>\n<!--                                                  ^        -->. One more today's achievement, SweetAlert2 is the WhiteSource\u2019s Open Source Project of the Month: https://resources.whitesourcesoftware.com/blog-whitesource/sweetalert2-open-source-project-of-the-month-january-2019 \ud83c\udf89 . It was nice to be in trending for 2 days:\n. Hi @produktive\nGive a try for heightAuto: false.\nIf that doesn't work, please create a new issue and follow the bug report template.. Thanks for the live demo @obrassard \n\nMaybe you could try to download it + the node modules, and check if you face this problem locally too..\n\nYup, facing it locally too. \nThis helped:\ndiff\n- import Swal from 'sweetalert2';\n+ import Swal from 'sweetalert2/dist/sweetalert2.all.js';\nWhich leads me to the conclusion that angular bundling process is for some reason taking the module field from package.json instead of main field.\nWe made changes for v8 in package.json https://github.com/sweetalert2/sweetalert2/pull/1378 to support ES modules:\ndiff\n- \"jsnext:main\": \"src/sweetalert2.js\",\n+ \"module\": \"src/sweetalert2.js\",\nI have no idea why Angular uses module over main. Maybe @toverux have any clue about this behavior?. I just upgraded all angular dev-deps to latest and the issue is still there.\n\nI have no idea why Angular uses module over main\n\nThis is the problem, please report it to the according Angular repository.\nAs a workaround you can use either\njs\nimport Swal from 'sweetalert2/dist/sweetalert2.all.js';\nOr import styles separately:\njs\nimport Swal from 'sweetalert2'\nimport 'sweetalert2/src/sweetalert2.scss'. https://github.com/sweetalert2/sweetalert2-webpack-demo has the same issue, reopening.\nLooks like the a webpack issue/feature.. It's a feature :/ https://github.com/webpack/webpack/issues/5756. Here's how I solved it for sweetalert2-webpack-demo:\nwebpack.config.babel.js:\njs\nmodule.exports = {\n  ...\n  resolve: {\n    mainFields: [\n      'main',\n      'module'\n    ]\n  },\n  ...\n}. Added the explanatory note to sweetalert2-webpack-demo: https://github.com/sweetalert2/sweetalert2-webpack-demo#warning-important-note. > Is that the desired work-around for now?\nGood question. It's ugly and I don't like it to be honest. It's unexpected that webpack prefers module over main.\nDoes anyone maybe have any idea how to make ES module (src/sweetalert2.js) automatically include styles in case of webpack processing?. I am going to remove the module field from package.json, so the webpack workaround suggested above won't be needed: https://github.com/sweetalert2/sweetalert2/pull/1392. :tada: This issue has been resolved in version 8.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thanks everybody for reporting and investigating\nThe issue should be fixed in the latest release (8.0.2), no webpack workarounds needed.\nApologies about this inconvenience!. I am going to remove the module field from package.json, so the webpack workaround suggested above won't be needed: #1392. :tada: This issue has been resolved in version 8.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thank you for reporting @afisher88 \nThank you for investigating @gverni \nThe issue should be fixed in the latest release (8.0.2), please check it out. \nApologies about this inconvenience!. :tada: This PR is included in version 8.0.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. This was temporary SauceLabs issue, restarted build and it's passing now https://travis-ci.org/sweetalert2/sweetalert2/builds/486556865. I like the change, but there's one show-stopper for me here: the bundle-size (gzipped) is 160B larger than master. Another side-effect from the bigger bundle is code coverage dropped by 0.3%\nI guess that's unavoidable and it's the price for bringing new language features, is that correct?. :tada: This issue has been resolved in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. https://stackoverflow.com/questions/ask. @gverni would you mind handling this one?. :tada: This issue has been resolved in version 8.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @lnneth please note #1428 where we changed some SASS variables. This issue is poorly reported, therefore I'm closing it. If you want help (our effort), make sure you put enough of your effort into reporting an issue.\nReport another one, follow the issue template and add live demo as described in the issue template.\nHere's the good example of how it could be done: #1402. > I'm on version 7.18 (can't really update to 8 with the all the breaking changes)\nWhat stops you from upgrading to 7.33.1?\n\nUsing swal.close() with a dynamic queue doesn't bring next step.\n\nIt works like expected, the close() method will dismiss the current popup, and therefore the next one will not be shown, a queue was interrupted.\n\nUncomment the clickConfirm() to get the expected behavior...\n\nYup, clickConfirm() is the right way if you want to get to the next step programmatically.. Can't reproduce (Windows 10)\nVersion 73.0.3683.27 (Official Build) beta (64-bit). :tada: This issue has been resolved in version 8.0.7 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.0.7 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I made slight changes, here's the result:\n\n\n\n\n\n\n\n$swal2-input-background-color works nicely with the global background option now.. also, some use cases might require something more complex than color for input background:\n\nchanged $swal2-input-background-color to $swal2-input-background. @gverni please take a look at my changes and let me know if I missed something or you disagree with naming. :tada: This PR is included in version 8.1.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thank you for the perfectly made feature request, @tomholub!\nWe will add the config option for disabling this feature. Do you maybe have a good name for that config on your mind?. > How about a negative such as disableBodyStyleAdjustment, with the default value set to false?\nI'm more in favor of positive with default true for two reasons:\n\nthe name is 7 chars shorter (no need in disable prefix)\ndouble negatives are more difficult to understand for human beings\n\nscrollbarPadding (default true) is the best option so far IMO, it's short and search-friendly.. :tada: This issue has been resolved in version 8.2.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thank you @tomholub for your appreciation of our work! I guess it's time for me to step into the bright future with cryptocurrencies. I'm planning to spend your generous donation on https://gitcoin.co whenever we will need additional attention to some feature(s) or issue(s) from the community.\nHere are available wallets:\n\nBitcoin: 12BxefvPMtHePgfPRDL1SaZYSG4GwQmWoP\nEther: 0x36e2b10666e2c0dc343901895ba3697b5d3214d1\nBitcoin Cash: qqxs402qszgwuue00gwxw996lzhpa8up2unqm0y46g\nStellar: GBRS5KGFJO4OBUGW3TRQBIVXTM5YDS53DOSHGA3LKVE2YXKVKNVDONBP\n\nThank you once again for requesting the way to donate in cryptocurrencies, I will also update the README with the information above.. upd: oops, something happened my comment, sorry!. :tada: This PR is included in version 8.2.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.2.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Thank you for the suggested solution @SchoppAx! Would you mind to create a PR with it?. Thank you, here's the contributing guide: https://github.com/sweetalert2/sweetalert2#contributing. :tada: This issue has been resolved in version 8.2.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Congrats @SchoppAx you're now the contributor of this repo \ud83c\udf89 . :tada: This PR is included in version 8.2.1 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. https://stackoverflow.com/questions/ask. Welcome to GitHub, @ChristianCruiz \nWould you mind sharing the code you're trying to use? Or even better, provide a glitch, here's how: https://github.com/sweetalert2/sweetalert2/wiki/How-to-provide-live-example-for-issue. Thanks @ChristianCruiz \nLooks like a bug\njs\nSwal.fire({\n  html: '<span class=\"swal2-cancel\"></span>'\n}). :tada: This issue has been resolved in version 8.2.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.2.2 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Oops, apologies about that change, I'll revert it back.. done: https://github.com/sweetalert2/sweetalert2/commit/0170a085429e024f9a9b4ad193ccca8c2431fe08\nthanks for noticing that!. We should, I would consider that as a bug-fix, not as a breaking change. In the screenshot above Swal.isVisible() should return false.. :tada: This issue has been resolved in version 8.2.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Just to clarify, this code doesn't work in the desired way?\njs\nexport const isVisible = () => {\n  return !dom.isVisible(dom.getPopup())\n}. I feel that this PR is unnecessarily complicated (43B larger than master), here's the simple fix: #1423 \n@gverni, please take a look and comment in that PR if I'm missing something there. No problem @gverni and thank you for the review!. :tada: This PR is included in version 8.2.3 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.2.4 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.2.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. > I managed to reproduce the bug in the swal-not-resolve-in-jest-bug repo.\nThis issue is weird, thank you for making the repo @zenflow! \nWhile on the upgrade-sweetalert2-to-v8.2.3 branch, make this change in node_modules/sweetalert2/dist/sweetalert2.all.js:\ndiff\n-  return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n+  return true\nTests are passing.\nAlso, they are passing with \njs\n  return elem\nBut they are failing with \njs\n  return elem.offsetWidth\n\n\nJest is an incredible testing tool\n\nI wonder how something can be incredible if it's failing without any sane reasons and without any helping information on why and where did error occur? \nThe hype around jest is incredible indeed, but its quality is questionable.\n64% code coverage and the screenshot below don't really correlate with \"incredible\" to me:\n\nLooks like a joke, testing framework with constantly failing master...\n\nThis issue is most probably on jest's side and the proper place to report it is https://github.com/facebook/jest/issues along with hundreds of other issues.\n\nAdd check:jest\n\nI think one testing framework is enough. If someone has time and will to debug jest, please do so, but I'm against adding the complexity of dev environment to this repo because of jest's bugs.\n\n\nCheck for existence of window.scrollTo before calling it, to avoid the need to mock it here\n\n\nSame here, adding code complexity and increasing the bundle size because some things are missing in some testing framework doesn't sound like a good idea to me.\n. Just checked the situating with jest once again. They finished https://github.com/facebook/jest/issues/7807 and released https://github.com/facebook/jest/releases/tag/v24.2.0-alpha.0\nThe new jest release didn't fix the issue with SweetAlert2 >= 8.2.3\nThe code coverage dropped to 62%, the Travis CI dashboard is still as red as the Chinese communist parade.\nThey seem to chase new technologies like TS instead of time-tested values as code coverage and the reliability of CI. Let's see if that will work well for them.. Reported the issue to https://github.com/facebook/jest/issues/8062. Thank you @SimenB I appreciate your time and the thorough explanation of why I was wrong with my doubts. \nThe CI status and code coverage are the very first things I'm personally checking before even considering to use any package because there are a lot of abandoned/unmaintained/untested projects. Using an unmaintained project is like pointing a loaded gun to your own knee, it will shoot sooner or later. \nTravis is the default CI platform for OSS so that's why I checked it instead of other CIs. I'm still not following why it's not possible to set up Travis tests on master, but that's alright. Now I see that you are testing jest in other CI platforms in multiple environments and that's great! We're using Travis + AppVeyor as well for testing SweetAlert2 in multiple platforms.\nIf Travis isn't what you want to demonstrate, it might make sense to remove the Travis badge from the jest's README.\nThank you once again for putting your time on this ticket, it always feels great to get support from a core collaborator of a product. Keep up the great work on OSS!. :tada: This issue has been resolved in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Hm, this is interesting. Thank you for investigating @gverni! I would not assume that some users will use something else from UTF-8, but since it's the case sometimes, should we replace \u00d7 with &times;? @gverni wdyt?. > Yes, I think so. It's definitely adding robustness and improve accessibility...\nAgree, I'll take care of creating a PR \ud83d\udc4d . :tada: This issue has been resolved in version 8.2.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Oops, nasty regression :/ Thanks for fixing it @gverni!\nI'm not sure if this is the right way to fix it though becuase if we're bringing step- for one variable, if should be brought for others as well for consistency.\nWhat do you think about aligning SASS variables and classnames?\nscss\n$swal2-progress-step-width: 2em;\n$swal2-progress-step-height: 2em;\n$swal2-progress-step-border-radius: 2em;\n$swal2-progress-step-background: #add8e6 !default;\n$swal2-progress-step-color: $swal2-white !default;\n$swal2-active-step-background: #3085d6 !default;\n$swal2-active-step-color: $swal2-white !default;\n\nBTW... shouldn't the SCSS linter check for double definition of variables?\n\nI would totally expect that. > BTW... shouldn't the SCSS linter check for double definition of variables?\nsass-lint which we were using is \ud83d\udc80 long live stylelint + stylelint-scss: #1429. > It make more sense. How about changing the active ones to:\n\n\n$swal2-progress-steps-active-step-background -> $swal2-progress-step-background-active\n$swal2-progress-steps-active-step-color -> $swal2-progress-step-color-active\n\nThis will reflect the fact that is the same as the other variable, but active.\n\nWhat I was suggesting above is \nscss\n$swal2-active-step-background: #3085d6 !default;\n$swal2-active-step-color: $swal2-white !default;\nThe logic behind my suggestion is quite simple: $<class-name>-<css-property>. \nWhat do you think? Is it maintainable and extendable for the future?. :tada: This PR is included in version 8.2.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. VS Code stylelint extension works nicely:\n\n. :tada: This PR is included in version 8.2.6 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.2.5 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. You probably need to apply z-index to selectize dropdown. For more help please follow the issue template.. :tada: This PR is included in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. There's some custom styling applied to those confirmation dialogs, it's quite impossible to answer your question without any code.\nPlease follow the issue template and provide the live demo.. https://github.com/sweetalert2/sweetalert2/wiki/How-to-provide-live-example-for-issue\n. > This is one bug that I just don't know how to correct.\nYou might want to learn how to use Google Chrome Developer Tools: https://www.youtube.com/watch?v=x4q86IjJFag. > I saw this in the original PR comment, but it was removed. Did you change your mind about this @limonte ? \n@zenflow I would like to get it done, but see what's happening here. I just added the [WIP] commit with the change: https://github.com/sweetalert2/sweetalert2/pull/1439/commits/f1b83c73591f5a65e1fcbe495fb6a0be1a86aa71?w=1\nBut Jest is still complaining about window.scrollTo is not implemented: https://travis-ci.org/sweetalert2/sweetalert2/builds/503950441\n. > Jsdom throws on access, not usage\nThank you for tracking this issue and helping us @SimenB! I really appreciate it! Do I understand correctly that there's no way to check window.scrollTo on SweetAlert2's side because checking means \"access\"? In other words devs will always need to have something like \njs\nbeforeAll(() => {\n  // jest (or more precisely, jsdom) doesn't implement `window.scrollTo` so we need to mock it\n  window.scrollTo = () => {}\n})\nin their test.js files if they're dealing with SweetAlert2?. @zenflow @gverni the PR is ready for review \ud83d\ude80 . :tada: This PR is included in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This issue has been resolved in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. @gverni  the PR is ready for review \ud83d\ude80 . > Also, what's the rationale behind leaving confirmButtonClass, cancelButtonClass, imageClass out of customClass? Shouldn't they be added as well?\nGood point! Done.. :tada: This PR is included in version 8.3.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. I would strongly recommend using the specific major version by adding @8: https://cdn.jsdelivr.net/npm/sweetalert2@8\nThis will save you from unexpected bugs caused by breaking changes from a new major release.. :tada: This PR is included in version 8.4.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. Also, something is wrong with the close button:\nChrome | IE11\n-|-\n | . Could you please specify the version of sweetalert2 you're using on that project?. Never upgrade dependencies to new major versions without checking the release notes :)\nhttps://github.com/sweetalert2/sweetalert2/releases/v8.0.0. Well, they are still features. Even though, they are deprecated, we should support them during the current major release and they should be covered by tests. So, no action needed.. Deprecated features and related tests will be removed altogether for the next major.. :tada: This PR is included in version 8.4.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. :tada: This PR is included in version 8.5.0 :tada:\nThe release is available on:\n- npm package (@latest dist-tag)\n- GitHub release\nYour semantic-release bot :package::rocket:. \n. One tiny thing to polish to make that file perfectly maintainable: https://github.com/sweetalert2/sweetalert2/issues/1453. Locally it looks fine, but I'm not sure if it's the proper solution considering https://github.com/sweetalert2/sweetalert2/issues/1456\nThe complexity of setParameters() method should be decreased: https://codeclimate.com/github/sweetalert2/sweetalert2/src/utils/setParameters.js/source#issue-901b78cbd42b29000444ea70834810d9. \nit's perfect now, thanks @gverni!. False alarm, the resumeTimer() method test is flaky in Firefox 65 on Windows (AppVeoyr), let's wait for FF66, if the instability will remain, then I'll investigate.. can you please add the comment to this line, this condition isn't quite obvious.\n. no need actually, I got it - nice trick! btw Array.isArray doesn't work as expected here\n. why 10 and not 0? Let's hide overlay right after modal hide.\n. 0.5 is prettier to me personally, let's keep .5 here  :)\n. When I'm adding new features of fixing bugs, I'm using index.html to test swal2.\nFor dev env I'm changing line 18 to src/sweetalert2.js so I can easy debug unminified source code.\nWith this change I'm getting sweetalert2.js:1232 Uncaught SyntaxError: Unexpected token export. I want to be able to run and test index.html with unminified version.\n. ignore my comment above, I see now dist/sweetalert.js :)\n. I just tested and this method doesn't work on iPad Air 2 (iOS 9.3)\n. from my side I have now idea why this code should work :) Can you please attach the gif of swal2 working correctly on your iphone?\n. > iosfix.innerHTML = \"html,body {height: 100%; position: relative; overflow: hidden; }\";\n\nand see if this solves the issue?\n\ndoesn't work.\n. default value is null, not null of Function\n. why did you pick this method instead of shorter return typeof functionToCheck === \"function\" (most popular answer in your link)?\n. this resolve() isn't needed here as you're doing the same below, on line 808.\n. yes please, the shorter one is much easier to read.\n. it's not important, just ignore it\n. during fixing tests please take a look at https://github.com/limonte/sweetalert2/commit/736723e179487bc4c63e112d0c5ab561e7c710c0 ad change the order of params in equal() functions - actual should be first param and expected should be second.\n. this change is causing duplicating of this handler. Each modal will add a handler without removing previous. \n. We can replace &#215; with just \u00d7 to improve the code readability.. There could be only one modal and one container at the same time, this loop isn't needed I think.. > If I remove the lines now the tests break\nFor me tests are passing with this code:\njs\nconst c = getContainer()\nc && c.parentNode.removeChild(c)\nor\njs\nconst c = getContainer()\nif (c) {\n  c.parentNode.removeChild(c)\n}\nWhich is basically the same.. thanks :+1:. Undo this indentation change. It would be better if onBeforeOpen will be prior to onOpen:\njs\nopenModal(params.animation, params.onBeforeOpen, params.onOpen). Rebase isn't quite right, this change is already in master and shouldn't appear in the PR.. Currently, this is the branch in your fork. Since you're the collaborator, you should be able to create branches directly for limonte/sweetalert2 repo. If you do so I will be able to help with rebasing.. I cry with laughter :DDDDDD. > Will this break SSR with window not being defined?\n@samturrell Yes, we did it again :nerd_face:   \nSome work has been done to prevent such mistakes in future: https://github.com/limonte/sweetalert2/issues/454#issuecomment-353938662. Oops, removed, thanks for catching this.. With the check- prefix users can't use https://docs.npmjs.com/cli/test, do we really need it?. 7357. I like the lint: prefix more that -lint suffix :+1: . Are we dropping tests against all.min.js? Why?. thanks for speeding up tests :+1: . > Travis will automatically run the \"test\" script before doing anything else (if there is one), and it does so without the xvfb-run command which is needed for the tests to work in the headless CI environment. This is why there is no \"test\" script at the moment.\nnpm test is the default build script which will not automatically happen in our case as we are defining our own and overriding the default one. \nhttps://docs.travis-ci.com/user/languages/javascript-with-nodejs/#Default-Build-Script. There was a case when .js+.css were working fine, but all.js was broken: https://github.com/sweetalert2/sweetalert2/issues/673#issuecomment-339105796\nIn order to avoid such weird issues in future, there are tests against both .js+.css and all.js.. :+1:. :+1:. build is build, test is test, let's not mix concepts.. :+1:. I'm not sure if we need this. I personally prefer to be explicit in the Travis configuration and rather run 3 steps instead 1 with the unclear name.. I'd like to undo this and revert the test task to testem ci.. :+1:. Please revert the before_script section. It's about failing and reporting issues as quick as possible to contributors.\nIf linting or bundlesize is failing, the script section won't be triggered and a contributor will get an email from Travis within 1 minute or so.\nIt's very annoying to get email \"hey, you missed the comma!\" after 5 minutes after creating a PR.\nThis is needed for better CX (contributor experience).. please revert to npm test for a reason I mentioned above.. sorry, this one: https://github.com/sweetalert2/sweetalert2/pull/841/files#r163172838. I understand your point, but I'm still against mixing the concepts. That was your issue recently, but that's because you didn't follow the contributing guide ;)\nTake a look at the react configuration: https://github.com/facebook/react/blob/master/package.json#L102\nAs you can see the test task doesn't contain building, most of the developers don't expect build in the scope of the test task, by adding it we will bring more confusions than help.. done.. I love the shampoo example!\nApologies for being dummy :disappointed: Sometimes it takes a lot of time for me to understand valid arguments. Sometimes even more than two years.. Done.. Is there any better way to check if working directory is clean? Depending on wording from the output seems very unstable. E.g. for my env it's working directory, not working tree:\n. > What if we just checked for \"nothing to commit,\"?\nFine by me :+1: . The result should be converted to boolean, e.g.\njs\nconst cleanWorkingTree = !!lines.find(line => line.startsWith('nothing to commit,')). Should we set style.background instead of style.backgroundColor? It would give the ability to use animated unicorns as a backdrop. Or, for example, the color + the logo in a corner.. -B for creating the dist branch if needed: https://stackoverflow.com/a/26961416/1331425. why do we need params.backdrop &&?. I guess this comment is outdated after we decided to replace backgroundColor with background..  Nevermind this line, it was my Git-newbie misunderstanding of how remote and local branches are working.. Done. Yup, I was thinking the same way. This is the front-end world, we need to break at least something :smiling_imp: . this should be in devDeps I believe. <3. @zenflow @toverux @acupajoe feel free to add your public email here if you want to get on_build_status_changed notifications from AppVeyor. Set this to $swal2-icon-size. Currently, it's misaligned.\nCurrent (5.5rem) | Expected ($swal2-icon-size)\n---|---\n | \n. Can we somehow get rid of this change? I won't be able to use my globally installed gulp@3.9.1 for SweetAlert2,. This is what's happening in my env when I try to run any gulp task:\n. . btw. wtf is happening with gulp? why 4.0.0 isn't installable? https://github.com/gulpjs/gulp/releases/tag/v4.0.0. > Ok. Why do you need to use your globally installed gulp?\nGood question :) I don't need it. Resolved.. let's replace .25rem with .25em to make the icon border relative to the modal base font-size.. Add icon-text to classes.js\nand then\nclass=\"swal2-icon-text\" -> class=\"${swalClasses['icon-text']}\". > Requires no buttons to be present on the toast\nshould we also add a check for params.showCloseButton here?. oops, fixed, thanks for catching!. nice :+1:. For people who will read the source code, it would be super-handy to have a JSDoc with the description and the code example(s) of swal.plugin() usage. Basically, copy-paste from the perfect PR description.. The same here, JSDoc with description + code example. Copy-paste from the PR description would be enough.. @toverux ping :). I would rather do \n} else if (['text', 'email', 'number', 'tel'].contains(params.input) && params.inputValue instanceof Promise) {\nto be more explicit.. I think inputValue should be converted to a string:\njs\ninput.value = inputValue + ''. I think we should handle numbers correctly if input type is 'number':\njs\ninput.value = params.input === 'number' ? parseFloat(inputValue) : inputValue + ''. Why do we need to set input value to the empty string in case of promise errorred? Should we just do nothing to input in this case?. thanks for the explanation, no actions needed here. Let's keep it like it is now :+1:. Good catch, yes please.. ctor is quite a unique variable name, constructor would be better IMO . Yup :+1:. Please do not change the current code style, at least not in the scope of this PR.. These options will \"uglify\" CSS and make it unreadable for humans. If we're doing so, would it be better to just use minified css? See my code suggestion below.. Should we just do this\nsuggestion\n   const prettyCssAsJs = gulp.src('dist/sweetalert2.min.css')\ninstead of doing the same (\"uglifying\" css) with css2js below?. > However, when people are using the .all solution, the change that they are going to debug the CSS in JS is very slim.\n\nTaking that in account I would prefer using the .min file indeed.\n\nAgree, please go ahead with that.. nit: it would a bit better if you put this new param next to the customClass because these two are related.. There's SwalWithoutAnimation, use it instead of repetitive animation: 'false' (DRY).. typeof params.customContainerClass === 'string' <- unnecessary check, it's already in dom.addClass.. all \"create a modal with an onAfterClose callback\" aren't needed, please remove here and below. The ending of a variable should match the CSS property, in this case it would be:\ndiff\n- $swal2-progress-steps-active-step-color\n+ $swal2-progress-steps-active-step-background. done in https://github.com/sweetalert2/sweetalert2/pull/1411/commits/3426355c9dd9bb286ade28e808c3718216a7aced. Good catch!\nActually, I don't like this legacy assumption about the progress step shape. With $swal2-progress-steps-step-border-radius: 0; it's not a circle at all:\n\n.swal2-progress-step-circle -> .swal2-progress-step\n. done, https://github.com/sweetalert2/sweetalert2/pull/1411/commits/d828ced7e7d5b242d08a229ec70da861ff390aae. copy-paste typo I guess, should be true. trailing spaces here. tip: if you're using VSCode, the setting is \"files.trimTrailingWhitespace\": true\n. would params.padding !== null work here?. Am I doing something wrong or remove-excessive-isVisible-check and remove-excessive-isVisible-check-race-condition branches are identical?. Alright, now I see that \njs\nSwal.close()\nSwal.clickConfirm()\nproduces an error.\nWill handle that case and cover it by test \ud83d\udc4d . @gverni I think this case should be handled by https://github.com/sweetalert2/sweetalert2/pull/1439/commits/9748d7b6e045adf4178983c6bdca412d843fcb99\nPlease review, thanks!. the performance difference is almost nothing here, what you're suggesting will cause this edge case to fail:\n\n. Done.. No problem! Reverted.. ",
    "prateekvarma": "Hello @limonte , thank you for the reply. Whats happening is - when i download the ZIP file from github, and after opening the index.html file from the \"example\" folder, none of the buttons show a sweetAlert. You can check it yourself, and for some strange reason it does not work...\n. Ah dear lord LOL ... yes @andyharney , you're right.\nTo be exactly specific, the sweetalert2.min.js file, and the sweetalert2.css files both miss one 'dot'.\nIt'll be great if you guys could add it in the repository, so it won't confuse anyone.\nMany thanks, you guys rock!\n. ",
    "andyharney": "I can confirm this, it is not an issue with sweetalert2 though. Its just sweetalert2.min.js isn't loaded.\nJust alter the html to reflect the correct file paths, e.g.\n`` html\n<!-- This is what you need -->\n<script src=\"../dist/sweetalert2.min.js\"></script> \n<link rel=\"stylesheet\" href=\"../dist/sweetalert2.css\">\n```\n. @limonte No problem. Thanks for your fork of SweetAlert2.\n. ",
    "fcremo": "js\nswal({  title: 'Confirm?',\n        text:   '<textarea class=\"form-control\" id=\"notes\" placeholder=\"Notes\"></textarea>',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        html: true,\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n    },\n    function() {\n        alert('other ajax stuff');\n    }\n);\n. I see. I realize I filed a non-existing issue because I inadvertently looked at the documentation of t4t5/sweetalert and assumed the intended behavior was the same. I guess I should be dismissed with a RTFM then. I'm sorry :)\n. ",
    "IvoPereira": "That's a good question, and that's another problem I've came up with, and I've not yet solved.\nWell, it could be even more flexible and we could be able to specify which element we want the gray overlay to be, as in my case I would like to have the navigation menu overlayed, however it the alert should be centered to the content area.\n. Thanks a lot anyway.\nBy the way, could you tell me how would you pass the extended params variable to the init function?\nAFAIK init function is responsible for creating the main div in body, and it will be there that, according the params I would change the destination div, however, as init() is called once the page is loaded, I am not able to pass parameters to it.\nWhat are your suggestions in this case?\nThanks!\n. I've successfully added some additional params and I am totally able to process them in modalDependant function.\nHowever, as you in see here https://github.com/limonte/sweetalert2/blob/master/lib/sweetalert2.js#L491 - init function appends the sweet wrapper in body, however at this time I don't have the params defined, as they are just defined when swal() function is called in code.\nOnce document is ready, init function is called, and I am not able to pass any additional params - https://github.com/limonte/sweetalert2/blob/master/lib/sweetalert2.js#L763\n. Exactly what I tought!\nThanks a lot for your support @limonte!\n. ",
    "NitinPrakash": "Thanks ;)\n. ",
    "levequej": "awesome, thanks !\n. ",
    "PrestaShark": "Super fast answer! Super thanks!\nBTW. SWAL2 is fare more better than SWAL... I can use smarty strings inside declaration too!\n{l s='Some text'} or variables like {$product->name|escape:'htmlall':'UTF-8'}\nSuperb!\n. ",
    "dylanh724": "This was closed, but I found a way and wanted to ask, would you be interested in having a \"form\" type for SWAL2? I don't have too much time on my hands to learn SWAL2 architecture and pull myself, but I can show you the code I used/answer any questions and maybe someone else can throw it in SWAL2? It's very friendly, and has live-validation (blur events):\nYou can even use my icon (it's SVG object; custom made). Check it out (animated GIF):\nhttp://imgur.com/KYH6DaQ\n(Then it would use your normal AJAX spinny after the end of the GIF)\nSA2 was coded to not be complicated, which is why I suggest adding this in so it's not complicated to add a fancy popup form to users.\n. ?\n. I found my own thread a long time later -- I read isCancel in some other documentation, but it should  be isAccept, I suppose, if anyone else comes across this. You can handle the cancel button this way and just \"return false\" at the end of your cancel function code.\nDoes anyone know where I can find a list of what all I can include within the function()? I remember I had to deep search Google for that (it wasn't in the readme)\n. ah, thank you -- semi related, how would I handle cancelling via clicking outside? This event does not seem to be a \"cancel\" event\n. ^ Wait, you closed this? How did you resolve it? Gah..\n. Why was this closed..? \nIt should be handled as a cancel, but is not handled as cancel, so what do I do?\n. ?\n. (Confirmed working - thanks!! For others reading this, I used this direct link -- updating from master did NOT work, for some reason [strange])\n. You know.. If you close without a reply I'm just going to create another. How rude.. \n. ",
    "olitomas": "@limonte I agree with you. But providing a \"onOpen\" function would give the developer the option to decide for him or her self if custom login in the popup is a good idea.\n. Maybe I was missing something, but I made a PR with the feature I felt was missing, there I explain this: https://github.com/limonte/sweetalert2/pull/129\n. Example usage:\nswal({\n      title: 'I am a title',\n      afterModalOpen: function () {\n        alert('I can play with the modal DOM: ' + $('.someDiv').html());\n      }\n });\n. ",
    "yigitozkavci": "This parameter is just an arbitrary name, and generally being used as \"isConfirm\". Therefore, logic better be implemented like this:\n, function(isConfirm) {\n    if(isConfirm) {\n        // Confirm logic here\n    } else {\n        // Cancel logic here\n    }\n}\n. ",
    "maeishoj": "im using angular and the ngSweetAlert directive, so I was hoping there was a way I could bind a scope variable to \"html\" parameter.. i will try. thanks.\nWould have been awesome to get the current instance even if we could do something like $('.sweet-alert').swal().title = \"newTitle\".\n. ",
    "Djip": "So how do i attach a function to when swals timer times out ?\n. Well well, not really helped me anything, was already implemented, just didn't knew since i came from Sweetalert to Sweetalert2.\nswal({\n        title: \"Logging in!\",\n        type : \"success\",\n        confirmButtonColor: \"#A5DC86\",\n        timer: 1000\n}, function(){\n        location.reload();\n});\n. ",
    "Tanujasingh": "Only Close the popup without reloading the page..\nswal({\n        title: \"Logging in!\",\n        type : \"success\",\n        confirmButtonColor: \"#A5DC86\",\n        timer: 1000\n}, function(){\n        swal.close();\n});. ",
    "toadkicker": "In my particular case we're concerned about scaling font sizes, line height, margins, borders, etc. using media queries. For example in our CSS:\n```\nhtml {\n  line-height: 1.4;\n  font-size: 13px;\n}\n@media screen and (min-width: 500px) {\n  html {\n    font-size: 12px;\n  }\n}\n@media screen and (min-width: 570px) {\n  html {\n    font-size: 13px;\n  }\n}\n@media screen and (min-width: 620px) {\n  html {\n    font-size: 14px;\n  }\n}\n@media screen and (min-width: 680px) {\n  html {\n    font-size: 15px;\n  }\n}\n@media screen and (min-width: 720px) {\n  html {\n    font-size: 16px;\n  }\n}\n@media screen and (min-width: 800px) {\n  html {\n    font-size: 17px;\n  }\n}\n@media screen and (min-width: 860px) {\n  html {\n    font-size: 18px;\n  }\n}\n@media screen and (min-width: 920px) {\n  html {\n    font-size: 20px;\n  }\n}\nsection {\n  padding: 3rem 10%;\n  background: hsl(0, 0%, 98%);\n}\nsection:nth-child(even) {\n  background: hsl(0, 0%, 94%);\n}\nh1, h2 {\n  line-height: 1.3rem;\n}\nh1 {\n  font-size: 2rem;\n  margin: 0 0 1rem;\n}\nh2 {\n  font-size: 1.5rem;\n  margin: 1rem 0 2rem;\n}\np {\n  font-size: 1rem;\n  margin: 1rem 0;\n}\n```\nThat gives us pretty smooth transition of sizes between different resolutions. It looks a little strange when the UI's viewport is full screen and the font sizes, line height, etc. don't match up. Using rem's would make the alert fit the existing styling much easier.\n. Fantastic. Thanks for putting this in!. ",
    "mmethot": "I would definitely be using this. Good point!\n. ",
    "MattJLeach": "Hi @limonte \nI'll be happy to have a look at this over the next couple of days. I'm currently using Sweet Alert v1 for a project and will be upping to v2 soon so am more than happy with contributing.. ",
    "KnowMoreIT": "Sizing did not look good on this at all when I upgraded:\n\nIt was way too small. This is the same section on 7.4.1:\n\n. ",
    "acurrieclark": "I know that this has just been merged and released, but this wreaks havoc when the root font size has been set to anything other than 100%. \nA better option here might have been to use em with a higher element given an rem factor. This way it is easy to override the base value with one css setting.\nThis argument is laid out in this article and when to use rem and em.\nI wholeheartedly agree that allowing for accessibility is vital, I just think that perhaps it hasn't been achieved in the best way here.. @limonte this is the sweetest of music. A thousand thank yous for the swift turnaround.\nHavoc averted!. The best solution to this is to add a\ncss\n.swal2-popup {\n  font-size: 1.6rem !important;\n}\nto your css, if the html font-size has been set to 10px or 62.5%.\nThis resets the local swal2 font size to 16px so that its new em sizing functions correctly.\nThis is a common css resizing technique outlined by Jonathon Snook. It isn't required for more modern browsers, so is seeing less use, but is still present in a number of CSS frameworks.. ",
    "ThomHurks": "@limonte I have the same problem that @KnowMoreIT has, namely that after upgrading to v7.6.3 suddenly my alerts appear smaller, exactly like in his screenshots. They do look normal as in no squished buttons, but they are smaller or \"scaled down\" so they are now out-of-sync with the rest of the styling. The project I'm using SweetAlert2 in is a fairly standard Bootstrap-sass 3.3.7 project with no advanced CSS tweaks or anything. The only font-related scss that I'm using is:\nsass\n$icon-font-path: \"~bootstrap-sass/assets/fonts/bootstrap/\";\n$font-family-sans-serif: \"Raleway\", sans-serif;\nAny idea why this is happening, as from your comment I interpret it probably shouldn't have changed? I can help with debugging if you give me some pointers.\nOne thing I did find out is that 1rem is supposed to be the font-size of the root, so HTML, element. The font-size on that element is 10px and I assume Bootstrap is setting that. I then tried setting $swal2-font-size: 1.6rem; in my project's _variables.scss file to compensate, but I may be doing something wrong because it ignores that variable.\nPotential solution:\nI think in your variables.scss you may need to change the line to:\nscss\n$swal2-font-size: 1rem !default;\nOtherwise you can't override it anyway :) However this doesn't seem to work for me, so I guess something else is going on or again I'm doing something silly.. @limonte Thanks a lot! \nI still don't understand why I can't just set\nSCSS\n$swal2-font-size: 1.6rem;\nas I think that should work. However, I just concatenate some extra plain old CSS now after the SASS step and add\ncss\n.swal2-popup {\n  font-size: 1.25rem !important;\n}\nand that does work even though it's a bit hacky (also not sure why using 1.6 is too big there, I needed to set 1.25rem to get somewhat consistent font-size with the rest of my app, even though theoretically it should have been 1.6rem.\nThanks again! :). ",
    "lucafrassineti": "I solved with this ....\nif ($_SESSION[logged] != 'yes') { \necho '\n<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.js\"></script>\n<link rel=\"stylesheet\" href=\"stylesheets/sweetalert2.css\">\n<script src=\"javascripts/custom/sweetalert2.min.js\"></script>\n<script>\n$( document ).ready(function() {\n    swal({\n         title: 'Oops..',\n       text: 'Not logged!',\n       type: 'error',\n}, function(isConfirm) {\n     document.location.href=\"/login.html\"\n});\n});\n</script>';\nexit; \n};\n. ",
    "Dielz98": "Great I hope this won't become another abandoned repo\n. ",
    "crabbly": "@charleslcso the animation set to false affects the popup modal only. When set to false you can see it won't have it's default \"bounce\" animation effect when opening the alert.\nhttps://jsfiddle.net/crabbly/3pr6an40/ \nIt however doesn't affect the icon animation though, as you pointed. Maybe it could have an option to disable that as well. \n. I could not replicate this issue. \nBelow is a fiddle, exactly as you described (I believe), and the second window won't get closed.\nhttps://jsfiddle.net/crabbly/wmydys9L/\nMake sure you are using the latest version of the library.\n. @a1p4ca The author isn't replying, but I believe the purpose of this padding is to prevent content from moving around when the modal removes the scrollbar. However, in MacOS, the scrollbar never gets removed, and the padding in fact damages the layout.\nWhat OS are you using?\nI have tested with the latest versions of Chrome, Safari, Firefox and Opera in MacOS and they all have the same behavior.. I just tested this in Windows 10, with the latest versions of Edge and Chrome. Same behavior. The padding damages the layout since the scroll bar is still there.. @limonte Here it is:\nhttps://jsfiddle.net/crabbly/53wc51o2/\nWhen creating the fiddle, I noticed that the issue is a conflict with the CSS framework I'm using. The issue is that swal assumes the scroll bar will be hidden, and that is not happening. \nBased on the other comments here, I believe that this could be a conflict with other frameworks as well. Would make sense for the library to have a way to turn this behavior on and off depending on the project / environment it is being used. \nWe could add a parameter, and use it in sweetalert2.js line 367. Add it to that conditional.\nI could submit a PR if you agree with it.. Great!\nAbout the parameter name, I was going to ask you about that.\nThat PR looks good though.. @limonte I ran a few tests and the new version fixed the issue whenever we have the scroll bar (page overflow). However, it now shifts everything right when there is no page overflow (no scroll bar). \nI updated the fiddle by removing some of the content there, to fit everything in the screen. I also added a top navigation bar to better display the issue / content shift. \nhttps://jsfiddle.net/crabbly/Lrczbdtu\n. This would force and hide the scroll bar instead, which I believe to be a better solution. \nIt would also not require an extra parameter to be passed in. . ",
    "sambengtson": "Closing.  I now see that the function as changed to:\nswal.closeModal();\n. ",
    "dubbe": "No probs. Just glad if I can be of any help :)\n. ",
    "nerdmed": "@limonte wow never seen this fast progress! Compliment!\n. ",
    "nickfederighi": "Unfortunately, I'm not sure that is problem. Maybe I'm wrong... In my implementation, I have textareas and other input fields in a form. If the user is focused on a textarea and presses the enter key to create a newline, the old alert will still pop up. The button that was clicked to create the alert is no longer in focus when this occurs.\n. Here's a link to the fiddle. \nhttps://jsfiddle.net/nickfederighi/t8w2eLma/11/\nLet me know if you have any questions. Thanks for your help.\n. ",
    "AlaeddineMessadi": "Thank you :)\n. ",
    "paschalidi": "Still dont really get how I should work with that . Can you please provide an example ?\nSorry for the stupid question :/\n. Thanks for the fast reply @birjolaxew  really appreciated :) \n. ",
    "birjolaxew": "@paschalidi This issue is old, from back before the library moved to using Promises instead. The same basic problem still applies though - you're trying to use swal({ ... }) as a synchronous function, while user input by definition is an asynchronous action.\nHere's an example of how to work with the \"new\" Promise API:\njavascript\nswal({ ... })\n    .then(function(){\n        alert(\"The confirm button was clicked\");\n    }).catch(function(reason){\n        alert(\"The alert was dismissed by the user: \"+reason);\n    });\nA bunch more examples are in the readme.\n. On a closing note: @paschalidi this has little to do with SweetAlert2, and more to do with Promises. You should read up on those instead.\n. @ilentt Which browser are you testing this on? Your code seems to work fine when I test it (Firefox 51.0.1). Note that we are currently on version 6.4.1, and that we don't have a version 1.1.3 (but SweetAlert does). Could you please double check which version of SweetAlert2 you're using, and that you aren't using SweetAlert instead of SweetAlert2?. @ilentt The info you've given seems to suggest you're using SweetAlert, not SweetAlert2. Could you please check to make sure?. @vishal41190 Please open a new issue considering this (old) issue has been fixed and closed. Remember to include a code example/JSFiddle.\n. @violetzie Could you provide a JSFiddle/site so we can reproduce the problem on our end?\n. Created birjolaxew on NPM. Unable to reproduce in IE11 (Windows 7) and Edge (Windows 10 VM). Which version/OS are you running?\n\n. ~~Can't test on Win10/IE11 since Microsoft's VM's don't have it.~~ IE11 comes preinstalled on their Edge VM, it seems.\nWent back and tested on Win7/IE11 and Win10/Edge again, still unable to reproduce (25 tries on each browser). Can't really help much :/\nMight be an issue with the animation ending a frame before the modal is hidden? Perhaps try messing with the animations fill mode?\n[Edit] Just tested on Win10/IE11, where I could reproduce the bug. Adding animation-fill-mode: forwards fixed it (JSFiddle).\n. @limonte Sure. I can't guarantee my activity on the long term, but I'll stick around for a bit.\n. Seems to come from dom.js#L236-L241 removing the media query generated by sweetalert2.js#L28-L44. This should be moved to after the animation ends.\n. In addition to sweetalert2.js#L522-L523 (which handles enter/space when it's not from an element), we should also focus the cancel button instead of the confirm button by default (#L764, which always targets $confirmButton because of dom.js#L40)\n. I too feel that we lack a way to change default behavior. It can be useful to have cancel be the default.\nWe should consider whether this should be bound to button order, though - people might want the default to be on the left/right depending on the rest of their system, so we might want to add it as another option.\n. @limonte Seems fine to me. If we're planning to add more complex options (eg. multiple buttons) later, then I'd be careful about how specific the property is. I'd say it's all good though (and adding more buttons/focus states would make the options more complex than we likely want anyway).\n. Since the modal is reused, the moving done by sweetalert2.js#L460 is never undone. We should either add a reverse case, or start recreating the alert content on each display.\nI have tested the rest of the properties (JSFiddle); imageClass also shows this behavior. I'd suggest just generating the modal all over again instead of having to think of this rather obscure bug every time we add a property. I'll wait for others' opinions before implementing anything though.\n. Cannot reproduce. Could you please provide a JSFiddle of the bug, if possible?\n. Reproducable. JSFiddle example. Setting imageHeight fixes it.\nHappens because remote image height isn't available until the image has loaded. To fix it, we should add a \"load\" event listener and recalculate the height at that point.\n. @limonte Sure. It'll take a few hours before I have access to my PC though.\n. Reran the test on Travis five times - succeeded each time. This pr should work.\n. Could you provide a JSFiddle? I cannot reproduce it.\n. (specific version this was fixed in: v0.4.5)\n. @limonte I am omniscient! (well, the search is)\n. This seems like it would be caused by a deeper issue, indicating that the modal element isn't in the DOM for some reason. We should fix that deeper issue (assuming it is with SweetAlert2) instead of patching the symptom.\nUnfortunately I can't be of much help, since I cannot reproduce (although a quick suggestion: open Chrome dev tools, right click the .swal2-modal and select Break on... > Node removal to quickly track down why it's being removed)\n. @thesmallbang We need to be able to reproduce it on our end to be able to fix it. Could you please either provide a JSFiddle of the problem, or perhaps follow the instructions from my previous comment?\n\n(although a quick suggestion: open Chrome dev tools, right click the .swal2-modal and select Break on... > Node removal to quickly track down why it's being removed)\n. @thesmallbang SweetAlert2 should insert the modal into the DOM as soon as it is loaded. Either that isn't happening, or the modal is being removed later.\n\nYou can join us over on Gitter if you'd like some more troubleshooting help.\n. As per the Gitter discussion:\nSome frameworks remove the inserted element as part of their routine. This PR is accepted as a temporary solution to fix the symptom, until we rewrite the plugin to no longer rely on having the modal inserted in the DOM at all times.\n. Just throwing out ideas here, since I won't be able to test until tomorrow evening:\n- Does the symlink work on your OS? (content seems fine to me, so I suppose it should)\n- Does Jekyll compile locally? (if so, something about git or GitHub is messing it up)\n- Tried with a trailing slash in the symlink? (definitely shouldn't change a thing, but might as well try)\n- Tried if a symlink to a file works?\n. @mineralwassermedium If you want the onOpen callback to be bound to each of the queued alerts, you'll have to put it on each of them - the values you give to .queue are simply passed to swal() one after another, so the options don't carry over. It's simply an easier way to queue alerts rather than using\nswal( ... )\n    .then(function(){\n        return swal( ... );\n    }).then(function(){\n        return swal( ... );\n    }).then( ... )\nIn your case that would look like this or like this.\n. Duplicate of #255. Please continue discussion there (we'd really like to get to the bottom of this though, so if you can help that would be much appreciated!)\n. We currently do not have a way to handle more than one alert being \"open\" at a time. We should probably implement an internal array, which tracks  alerts that were hidden by opening another, and some logic to reopen them once the active one is dismissed/closed.\n. @simo9000 Nah, it wouldn't require multiple DOM instances. We'd simply have an array of JS instances (either by saving the input to swal(), or ideally by rewriting the lib to use classes and then save an instance of that) which we then push/pop as alerts are opened/closed. \nIt would require some rewriting, but it would make sure users don't have to implement the queue themselves.\n. @simo9000 Oh, definitely. The state machine is completely independent of this.\nI'll probably end up rewriting the lib to use classes at some point either way, but I'm a bit low on free time currently, so it might not be right around the corner.\n. ES6 Classes are simply another syntax for prototypes, which have been in the language since forever. We probably won't use the class syntax anyway, since we don't use an ES6 transpired, but we should be able to use prototypes without an issue.\n. Looks to me like the queue test simply isn't using QUnit properly. It should be doing an async test.\n. Is there a screenshot of this? I can't replicate on my Android - only outline I see is the focus outline.\nConsidering how tap highlight is a pretty integral UI pattern on touch devices, I feel like we should have a good reason to remove it. It's used to show when you tap a link, by giving it a colored background; we don't have any of these in SweetAlert2 by default anyway, so I'd reconsider if it's even a library issue.\n. @peratik Thank you! That definitely seems like something we should fix. I still can't reproduce on my Android (using a webview browser) though.\nCould you please verify that it happens on this JSFiddle, or possibly modify it so it does happen?\nScreenshot of my tap highlight:\n\n. Well, I'm stumped. Seems like it might be an issue with an older webview (are you using Android 4.3?) misapplying the tap highlight (seems to be where the button was halfway through the animation).\nWe could either remove the tap highlight, thus removing an expected UI pattern, or we could file it as wont-fix due to old/buggy browser. There are obviously pros and cons of both. Unfortunately Android manufacturers are terrible at updating their phones causing v4.3- to still have a ~15% market share, so I think we'll have to disable the tap highlight.\n. I think the most important thing to is to include an example that shows why you'd use the state machine over the normal method (and I must admit, I'm struggling to find an example). The concept itself is simple enough, but we need to justify to the user why we include another way to call the library.\n. This isn't particularly easy to fix, and might be breaking for some configurations (so should bump the semver major). While we're doing this, we should also take the chance to re-visit #225 (I'm personally a fan of removing scroll on body, and it'll be a natural side-effect of the best solution here).\nThe basic idea behind one way to fix this is that we change the .swal2-modal's position: fixed to position: absolute, and position it manually. This does have one major downside: users can scroll away until the modal is no longer visible. I personally see this as too big of a downside for it to be useful. JSFiddle example.\nNext, slightly more complicated fix: have a container with scroll on it. Unfortunately, this means that we might have two scrollbars if the body has overflow (one from the body, one from the container). JSFiddle example.\nFinally, the way more complicated fix: put overflow-y: hidden on the <body> when the modal is visible. This requires adding some padding to the body so the content doesn't move when we remove the scrollbar (see Bootstrap's modal implementation). It'll also require some restructuring of our DOM element, since the backdrop would otherwise cover the scrollbar. JSFiddle example.\nThe last example will definitely be a breaking change, since we modify DOM structure, and will also greatly increase the complexity of our show-modal logic.\n. Probably #299. Discussion should go there instead.\n. I'm definitely a fan. Would make the queue functionality actually have an impact, instead of simply being another interface too.\nI'd like to see a minimal implementation of just the DOM element first though - I'd think it'd be challenging to support longer strings, and HTML content.\n. Will be a side effect of fixing #272. Also see #225. Keeping this open since #225 was closed.\n. @limonte already keeps a changelog in the releases. If there's any specific benefit from moving it to a markdown file in the project, comment and I'll reopen.\n. @kevinvanmierlo Relevant issue: #248 (closed by #249, released in v4.1.7). Nope. Tested in Chrome 53 (+ Chromium 53 + Firefox 48) on Arch.\n. Ah cheers, should've checked the closed issues now that I'm not watching the repo \n. As described in the readme:\n\nWhen an alert is dismissed by the user, the Promise returned by swal() will reject with a string documenting the reason it was dismissed:\n[...]\nIf rejections are not handled, it will be logged as an error. To avoid this, add a rejection handler to the Promise. Alternatively, you can use .catch(swal.noop) as a quick way to simply suppress the errors: swal(...).catch(swal.noop)\n. I definitely support updating the readme to use .catch instead of .done. Could optionally expose a noop method on swal:\n\nswal(...)\n    .catch(swal.noop)\nAs @ltvan suggests, the current .done should stay in the code for at least one major release, but be deprecated due to clashes with other libraries\n. Please see the readme, where this is explained.\nIf a promise is rejected without the rejection being caught, Chrome will log it as an error. AFAIK this is Chromium-specific, and not something we can handle. The solution is to catch the rejection (even if you don't do anything with it, as in the example linked above)\n. WeChat probably use the device's built-in browser. What version of Android are you on?\n. You're definitely going to have to explain this more.\n. Better resource on declaration files, in case anyone feels like committing/creating a pull request for it.\n. Here's the old SweetAlert .d.ts for reference.\n. @limonte Heh, good idea. \n. Cannot reproduce. Could you provide a JSFiddle example so we can debug it?\n. Seems like a general issue with stringifying the given content. SweetAlert (the old one) uses the built-in type coercion to turn input into text (eg [\"foo\", \"bar\"] becomes \"foo,bar\" and {foo: \"bar\"} becomes \"[object Object]\").\nWhether we want to implement this is up to @limonte, but it's as easy as doing \"\" + <value> if we expect a string. If implemented, it should also be extended to other options that expect arbitrary strings (eg. title and html)\n. Do you have a bit more information about the issue? I don't see any problem in the linked fiddle, and your description doesn't really tell me exactly what the issue is (does \"selected\" mean that it's focused, that it's automatically clicked or that it has some hover state?). Possibly include an expected/observed list, or a GIF of the issue.\n. You're using a rejection handler on the promise as your trigger to show the English version. However, SweetAlert2 can reject for a number of reasons (basically any reason that isn't \"user clicked confirm\"): timer ran out, user clicked the background, user clicked the close button, user clicked Esc or user clicked cancel - more info in our readme.\nThing is, you show the English version no matter why the promise was rejected. If you only want to show the English version when the cancel button is clicked, you should check if your rejection handler is given a string of 'cancel' (as described in the link above).\nFixed JSFiddle\n. Seems to be from a botched ES6 rewrite which turned onComplete.call(this, modal) into onComplete(undefined, modal).\nNote that it would be perfectly fine to re-introduce the .call, since arrow functions simply ignore this, but I have chosen not to in my fix since it would give users access to our internal functions.\n. Could also be an issue with an old Android version. If you're still running <4.4.4 it'll definitely break, what with promises not being supported.\n. Please read our contribution guidelines. Issues aren't for \"how do I do X\".\n. Should be fixed if we reset document.body.style.top in undoIOSfix. Can update when I get home later today.. Is there a reason text is not adequate?\n[Edit] Seems like text is being set by .innerHTML, not .textContent. That's bad.. We probably also want to have a text-equivalent for the title. We could introduce titleText (similar to text vs html), escapeTitle (enables escaping HTML in title), ignore it (would allow HTML in the title) or always insert title as text (would disallow HTML in title, and be a breaking change).\nI'm not really sure which is preferable. If anyone has input, that'd be appreciated.. @akarelas That is what this issue is about. After issue fixed vs. before issue fixed.. If you want linebreaks between each element in the array, you should use html instead of text (and .join('<br>') as in your example).\nThis was the one breaking change in #369, and is mostly just a simplification (now text sets text, html sets HTML - before text formatted the string and then set HTML while html just set HTML), but it could be reimplemented if @limonte would rather avoid the breaking change. Leaving this open for @limonte to decide on.. Seems more like we should consider the second parameter to be html instead of text if it's a string (which is also how title works now). Doing so shouldn't be a breaking change, considering #362, and would turn your code into swal('Error :(', err.join('<br>')).. @akarelas That would be the other option. The problems I personally have with that solution is that\n\nThere's no super pretty solution. We'd have to manually convert specific characters (eg. < and > to &lt; and &gt;), which isn't quite as pretty as letting the browser handle it.\nSeparation of concerns. SweetAlert2 isn't intended to be an escape library. While it isn't particularly difficult, I'd rather leave HTML escaping to something that's intended for the purpose (eg. the browser), and not have to worry about it.\nRelatively arbitrary formatting rules. If we're going to be guessing at what the user wants (eg. by replacing \\n with <br>), then we might as well also add logic for wrapping text paragraphs in paragraph tags, putting links in anchor tags, or whatever other formatting you'd expect people to want to use. It's easier to just take the stance of \"you give us what you want us to display, we display it\".\n\nAgain, it's not particularly hard to implement, and as mentioned in my first comment the decision is ultimately up to @limonte, but I'd personally prefer not modifying text before it's inserted.. You could always proxy the swal function:\nswal = (function(){\n  var _swal = swal;\n  return function(){\n    return _swal.apply(_swal, arguments).catch(_swal.noop);\n  };\n})();. @rorc Yes. That's how promises work. If an error is caught and handled, then all following `.then` callbacks will be called like normal. You can't both have a generic `.catch` callback and also only call `.then` when the alert is succesful.\n\nYou must either manually handle it (eg. attach .catch(swal.noop) after you attach your .then) or check what value your .then callback is given.. Seems like a bug with our key handler not respecting showConfirmButton/showCancelButton.. It's not an issue with z-index (swal2 specifically has its z-index set to be above bootstrap modals), but an issue with some kind of event listener setting the focused element to be the bootstrap modal whenever it loses focus.\nButtons and the backdrop still work since they rely on click, not focus.\n\nAfter tracking down the part of Bootstrap's code that does so, it appears to be an issue with Bootstrap. The responsible event listener instantly sets focus to the bs modal if focus is given to an element that isn't inside it. I don't think there's much we can do.. @tobiv Yes, that was the solution I was going to suggest. Good find.\nNote that doing so will allow the user to Tab to inputs/buttons outside of the modal (which is the original reason the code was added to Bootstrap).. JSFiddle example.\nCould not reproduce in my (admittedly old) W10/Edge VM. Could you provide a JSFiddle with an example?. If we can't reproduce it, we'll have trouble helping you fix it.\nIf the alert is being opened (with the correct class), but your custom CSS isn't applied, then it probably isn't a problem with swal. I'd suggest checking if your CSS is actually included on the page using the browser's dev tools.. Yep, as @toverux mentioned, preConfirm can function like what you're looking for. You just have to return Promise.resolve() at the end of it (JSFiddle).. @limonte It's impossible (or, really hard) to reproduce on JSFiddle, since it requires the Content-Security-Policy HTTP header to be set.\nThe CSP rule blocks inline styles, but not CSSOM (eg. blocks <div style=\"...\"> but not div.style.top = ...). The only place I could find that uses inline styles is defaults.js#L51.\nThe main problem here is testing it. It would require setting up a server that serves files with the proper HTTP headers, and some code to load it. I'll look into fixing this.. Best bet is to contact @t4t5 and ask him to add a link to this in his readme, if he doesn't want to maintain his library. Judging by his commit history though, his lib does appear to be maintained (although not as actively as this), so he might not be interested in doing so.\nIt should also be mentioned that this lib isn't a direct upgrade from his lib - swal2 introduces reliance on promises, for instance, and breaking API changes, so it isn't as simple as pointing people here; some might prefer using the old swal over this one.. Please see our contribution guidelines:\n\nFor bug reports, please include:\n\na jsfiddle in order for us to be able to reproduce the issue.\n...\n\nJSFiddle template: https://jsfiddle.net/ad3quksn/51/\n\nThere can be many reasons for the alert appearing behind the modal, depending on your specific implementation. We'll have to see an example of your code to help you.. Would there be a point in having the styling toggleable in our configuration object, instead of in our stylesheet? The styles we currently have in our config object are styles that might differ from alert to alert, and I don't really see the use case for disabling default styles for a single alert.\nI'd suggest adding variables to sweetalert2.scss which allows people to disable various parts of our styling when they compile the stylesheet, and then add instructions for compiling it to the documentation.. I won't have access to a computer for like a week. I'll have a look afterwards.. Looks good to me. All tests pass, and I couldn't find any regressions.. Cannot reproduce on this JSFiddle. In fact, hitting enter twice now throws an error after #414 - could you please verify that issue this still happens with the newest version of SweetAlert2?\nLeaving the issue open as we should still disable the buttons once they're clicked once.. Closing based on\n\nEDIT:\nThere seems to have been an issue with how I implemented the API. It is functioning perfectly now on both Android and PC. You may close this issue. Thank you!\n\nIf you feel like sharing what you did wrong, it might help other people who stumble upon the issue later :). It is possible in the sense that you can use swal.showLoading() and swal.hideLoading() to toggle the loading states. See this JSFiddle for an example.. I'm not particularly proficient in SSR; could you perhaps provide an example repository containing the minimal setup to reproduce the error?. @toverux You're right, if the variable isn't defined it would indeed throw an error. When using the code from this PR in the SSR sample it compiled correctly, though. It seems document is defined, but not set.\nI've changed it to window.document since that's still the more safe way. Would be helpful if either @lmj0011 or @afreeland could test the code from my fork, as I don't have any SSR experience either.. @lmj0011 Thanks for the extra test case. The reason it wasn't affecting anything was that I hadn't committed the dist files - I've made a new branch which includes the changes, and which I'll use for further testing. The initial error is fixed, but unfortunately there are more places that don't play nicely with SSR, which can't be easily fixed.\nSupporting SSR seems to be a bit bigger than expected; issues with the output from Rollup will have to be investigated, and we should ideally write up test cases so I don't end up attempting to merge broken stuff again. I'm closing this until I've written a better solution.. Could you please try starting Firefox in safe mode (hold Shift while launching it), and testing again?. I still can't reproduce on my end. Can you verify that you're experiencing the issue on this JSFiddle? I'm not really sure what to do if you are; if so, please join our Gitter for more real time debugging.. If one of you could please join our Gitter so we can debug this, that'd be great.. Are there any browsers where 's have backgrounds by default?. I think any integration with specific libraries should be in separate packages (e.g. sweetalert2-react and vue-sweetalert2). It would definitely be valuable for them to be officially supported (especially with how much work you put in!), but it doesn't belong in the main package.\n  . This is because JSBin places the \"JavaScript\" code in the <head> if there is no <body>, so it is ran before the body is loaded into the DOM. It is not a problem with SweetAlert2.\nNot working HTML document:\n```html\n\n\n        ...\n        ",
    "andreiculda": "yeah ... was going to do that. On it right now.\n. Here you go: https://jsfiddle.net/0j7drxtd/19/. The process:\n1. click add new user\n2. tab through modal inputs. Works OK.\n3. Close modal and click open Swal.\n3. Click Ok or Cancel no matter.\n4. Open again the modal and tab through inputs. Does not work anymore.\nNote: I did not find a CDN for sweetalert2 so i just pasted the js and css in the fiddle.\n. Not sure if really tab index issue so I changed the issue title. If you could fix it soon you'll be the real MVP :).\n. This is perfect. Thank you very much. \n. ",
    "Systho": "Please add a note about this difference in Readme\n. ",
    "tonyxiao": "As of right now though limonte:master is 82 commits ahead, 103 commits behind t4t5:master. Do you have any plan to merge?\n. Sorry by merge I meant pulling changes from sweetalert into sweetalert2 master, not merging upstream. \n. ",
    "seyfer": "The original one looks active now\nhttps://github.com/t4t5/sweetalert\nand they have 3x more stars. Reasons mentioned on SO still actual? @limonte what do you think?. ",
    "abuassar": "now that sweetalert released version 2.0 , they closed the gap with sweetalert2 by alot!\nI think they took hints from this project.\nSA v2 changes:\nhttps://sweetalert.js.org/guides/#upgrading-from-1x. ",
    "cdsmith": "It is extremely confusing that there are now two incompatible libraries called \"sweetalert v2.0\" and \"sweetalert2\".  At the very least, it would be nice to make it clear in the documentation for this project what the relationship is.. ",
    "seiyria": "The problem here is, how do we bind closing the swal and passing in a result while doing so? Without that it's not particularly useful to just add custom buttons.\n. @acupajoe Do you happen to have an example? I don't see anything in the docs: https://sweetalert2.github.io/\n. @acupajoe Thanks, I'll give that a try.\n. @acupajoe A few things - that looks like lots of jQuery which I am not using (so I'm not sure how easily translateable it is to vanilla js), but that aside, it doesn't seem to return values via the promise created by swal, which is kinda what I'm going for. I guess I could have separate callbacks for each button but I don't really want to do that if possible.\n. I will probably end up doing that, but I do find the case for more than 2 buttons to be a useful one. My use case is as such: I have a dialog that pops up where people can view more information about a certain piece of equipment (and then close it). The request I'd gotten was to be able to choose to equip the item, discard the item, or close the dialog. Even if I had to assign it numbers - 0, 1, and undefined/false for cancel, that would be sufficient.\nGiven that even windows has yes/no/cancel dialogs, I think it's strange to not at least support 3 buttons, but even stranger is not supporting N buttons (and leaving it up to the implementer to deal with issues like how many go in a row, etc).\n. @acupajoe Just curious, does my use case persuade you any bit to at least add a third button? I still think, bare minimum, yes/no/cancel is what dialog boxes such as this should support.\n. Thank you too!\n. Whoops, I didn't even notice you had install instructions on the site here: https://sweetalert2.github.io/\nI can open another PR if you want.\n. Interesting. At the very least, it's possible, which is good to know. Thanks for the demo! Feel free to close this if it's your long term solution.\n. ",
    "simo9000": "What if we enabled the html parameter to accept an element in addition to html text. This way you could create your custom content (i.e. buttons) but before handing it to swal you could attach event callbacks to it. with this you could make a complete backbone view or react component and have it live inside a swal. To keep things simple, the custom component callbacks would only have access to the global swal methods but that should be sufficient to close an alert from a custom element callback.\n. Yeah i saw that. I've bogged down with something else after I pushed\nearlier. The strange thing is that all the tests passed when I ran them\nlocally. I might not get a chance to till tomorrow to figure this out.\n. @blazeworx PR #241 will allow you to do exactly what you are trying to do. You'll have to implement your swal as a state machine. Then during the ajax call, assuming you make the ajax call as part of one of the swal callbacks (i.e. preConfirm, inputValidator etc) you'll be able to edit the swal queue and insert a new alert to follow the current one when closed normally. \nI am just doing testing and docs now on the PR and should have it ready to go this weekend. I've been swamped with work and other stuff until just recently.\nAs far as implementing a way to have multiple alerts open at once, i am not sure what benefit that has over advancing the queuing features. Won't that require adding more swal modals to the DOM? All of the testing functions are using class selectors which would break if we allow more than one swal modal to exist in the DOM. It's also more memory intensive to do it that way. \nJust my two cents...\n. @birjolaxew ok i can only see that as working with classes. We could make every call to swal use a global queue behind the scenes and then appending a new alert in a callback could be done with a single function call in a callback.\nIt would definitely be simpler for the lib users but would be a lot more lib rewrite than what i'm doing with  PR #241. The state machine can achieve the same function but puts more work on the lib user for sure but I was OK with that since i was intending it to be an advanced feature. I also didn't want to commit to that much work rewriting the lib. in the end, the two ideas are not mutually exclusive...\n. Regarding the use of classes, won't that require another polyfill to keep back compatibility with I.E.? \n. Alright sorry for the delay. I made a fiddle that shows the state machine doing an ajax call and then inserting an alert into the queue. I'll say again, the State Machine only provides access to modify the swal queue as part of a swal callback. I hope this is sufficient for what @blazeworx is looking for. \n. @limonte I can help with this if you want. The fiddle from #261 might be a better usage example. \n. Alright, I can work on a standalone section for the state machine function in the readme file while the numbered steps feature is completed. Some things we should agree on for the usage example are:\n1. Number of steps to be included\n2. Which queue altering methods to demonstrate (the breadth of which will depend on no. 1.\n3. What we should have the handlers do besides alter the queue (i.e. handle input, ajax...)\nOnce we have settled on these then i can make the new usage example in a fiddle for us to review. This will streamline the PR.\n. @birjolaxew i'll admit that simple use cases for the state machine are not easy to conceive. The state machine is a pattern that helps make complex use cases more DRY and maintanable. Here is a fiddle of an example where an advertisement could be inserted via a state machine given the right circumstances.\n. @limonte looks good. That is simpler as it keeps the interface more imperative. \n. interesting... My first thought is this informs the user about the existence and status of the queue. Is it your intention that the methods get/setProgressSteps have any connection to the steps array that actually runs the queue function or is it your intention to maintain a separate list of labels for display purposes only? My concern is that the state machine ads a potential for non-determinism in the progress steps and even allows for cycles as the current usage examples shows. I'd say we want to make sure the numbered steps is optional such that the lib user can choose whether or not this adds or detracts given the complexity of their queue.\n. I was actually thinking something along the same lines as @acupajoe. But instead of a separate array, add an progressStepValue attribute which can be added to each swalObject and then we would add a routine to walk the queue array itself to build the progress bar with numbered steps. This way if the queue is altered in the state machine, the progressSteps won't have to be altered separately. \n. @limonte agreed i was just trying to refer to this new UI concept by the title you gave the issue. Sorry for the confusion.\n. Alright i'm on board with doing it this way. I can add some syntax sugar to automatically manipulation of the progress steps from inside swal.queue as an option of course. I'll do that as a follow up PR once this (or some iteration of this) is merged. \nI think there is value in doing it in this simple atomic way rather than coupling it with swal.queue\n. It looked like the most robust and it was checked as the accepted answer. I\ncan switch it to the shorter one if you'd prefer.\nOn Jul 31, 2016 5:05 PM, \"Limon Monte\" notifications@github.com wrote:\n\nIn src/utils/utils.js\nhttps://github.com/limonte/sweetalert2/pull/234#discussion_r72913938:\n\n@@ -30,3 +30,11 @@ export var colorLuminance = function(hex, lum) {\nreturn rgb;\n };\n+\n+/\n- * check if variable is function type. http://stackoverflow.com/questions/5999998/how-can-i-check-if-a-javascript-variable-is-function-type\n- /\n  +export var isFunction = function(functionToCheck) {\n-    var getType = {};\n-    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n\nwhy did you pick this method instead if shorter if (typeof\nfunctionToCheck === \"function\") { (most popular answer in your link)?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/pull/234/files/f8c61ab3c26c00351ede3a4d5c1b84681ab3fe06#r72913938,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADrdJN-iRDq8zDso-BftR_N8pqNSEktfks5qbThRgaJpZM4JZJoH\n.\n. I am scratching my head why houndci-bot flagged this. The linter didn't have a problem with it.\n. \n",
    "acupajoe": "@seiyria take a look at the event binding params, just pass the bindings for your results in using the  onOpen params. \n. @seiyria From #199 https://jsfiddle.net/t7hfffch/2/\n. @seiyria - please be sure to provide the entire problem specification in the future. Currently there's not a way to do what you're asking involving the promise as well without some hacky code. (i.e. binding actions to a variable and passing the event along to a preconfirm switch statement)\nI don't particularly see this use case as one that is applicable to the vast majority of our users, but I'm happy to be proven wrong. Adding additional buttons would, in my opinion, clutter the interface more than necessary as well as require a good bit of conditional formatting be added to the library for a small use case, which isn't ideal.\nThe solution I provided should not be hard to port into vanilla.js, it's just a find and event binding statement. So, provided you can deal not having the promises part, that would be the option I would pursue.\n. @limonte I'd love to help out with the project as a contributor if I can!\n. @limonte ah yeah, I see what you mean. Thanks!\n. @limonte I'm not sure if this is something we actually want to pursue in swal but for the sake of providing a solution: we could make a wrapper class for the default Promise implementation and override the then() function call to catch silently if the two function parameters for then() are not supplied.\nSo something like:\n//Note this is entirely untested\nSwalPromise.prototype.then(func1, func2) {\n    if (typeof func1 !== \"function\" && typeof func2 !== \"function\") {\n        return false; //manual catch\n    } else {\n        return Promise.prototype.then(func1, func2); //go back to the normal implementation\n    }\n}\n. @limonte yes it is similar - the functionality is still needed though.\nYour jsfiddle assumes that the modal will be created in a blocking manner - if you look at: https://jsfiddle.net/L74sfb62/ you'll see that the calendar doesn't work, whereas if you passed that functionality in as a param it would have.\nA more applicable use case would be in the case of ajax loaded content, or templated content being added as HTML into the alert. You may need to add bindings to that data after it has loaded into the swal, there's currently not a reliable way to do it without adding event bindings or callbacks like the PR adds.\n. Also note that the original sweetalert has this requested in several places:\nhttps://github.com/t4t5/sweetalert/issues/286\nhttps://github.com/lipis/bootstrap-sweetalert/issues/10\n. @limonte Wonderful! Glad I could contribute to the project\n. #136 #142 #143 \n. @limonte let me know what your tests find! I've updated the PR and squashed commits.\n. @limonte http://stackoverflow.com/a/24670659/3629438?\n. @limonte, @carter-thaxton appreciate it guys, I'll keep looking into it!\n. Have made no additional progress on this: am stuck like everyone else. Am closing PR in the meantime, will reopen if solution is found.\n. @quma you actually can do this with the new onOpen method added. You just have to get a little creative: https://jsfiddle.net/gr197j8n/3/\n. @quma Absolutely - hopefully that example makes sense!\n. @kalpitpandit looking at your repo, are you saying after running the webpack command you receive the errors in your app.js comments in your console output? Or are these errors being produced elsewhere? On my testing environment everything packs fine from your github repo. \nThis issue was closed earlier due to the expectation that this is user error. If you can prove that it is not, we'd be happy to reopen this issue. \nHere's my output for comparison:\n\nC:\\Users...\\Documents\\GitHub\\sweetalert2-with-webpack>webpack\nHash: a3589b023294334bc34d\nVersion: webpack 1.13.1\nTime: 1400ms\n            Asset     Size  Chunks             Chunk Names\n./build/bundle.js  1.25 MB       0  [emitted]  main\n    + 6 hidden modules\n. @Coriou: Based on this question: https://stackoverflow.com/questions/9514698/bypass-popup-blocker-on-window-open-when-jquery-event-preventdefault-is-set\n\nIt's because of the asynchronous nature of promises. You can do a semi-hackish manual bind though if you really want to get this working [Tested working on chrome 51.0.2 | firefox 47.0.1 | IE 11 (with polyfill)] \nhttps://jsfiddle.net/t7hfffch/2/\n. Error occurs in IE Edge:\nhttps://jsfiddle.net/ad3quksn/10/\nSCRIPT5022: InvalidCharacterError\nFile: sweetalert2.min.js, Line: 1, Column: 9860\n. @Kiroteryn yes this is an issue tracker - which means that the tickets here are for tracking areas in the library that do not work or fail to work consistently. Most of the tickets you mentioned @limonte closing 'early' are tickets that a user opened because they didn't read through the documentation or were asking questions that were already answered. Since those issues are focused more on 'how do I do this?' rather than 'this is a broken functionality' they don't technically qualify as issues with the library.\nFor example, your initial issue was a misunderstanding of promises, that could have been resolved by looking at the documentation. The updated issue is a question on how to code functionality that is custom tailored to your specific implementation. Neither one of these are directly questioning the functionality of the library. We do not want to discourage questions, but also want to be sure we are tracking actual issues.\nThis does raise the question @limonte, should we create a Stackoverflow tag for Sweetalert for tracking actual coding requests?\nIn the meantime, to answer your question on promises, you just have to pass a reference to your promise resolve function within your outside functions. See the example here with your console open: https://jsfiddle.net/pyw0on3h/1/\n. @limonte wonderful, in the future I will ask users to create a stackoverflow question in these cases\n. @jayelkaake thank you for this pull request - I think it would be worth refactoring this so that default functionality for the allowSpaceSubmit option is set to false for all alerts that have an input option provided.\n. @limonte I can think of a few use cases. With the additional parameters and event bindings that swal2 supports now, it's becoming more than just a dialog modal. You could use swal2 to display videos or dynamic content, videos, iframes, images, etc. that it could be useful to have sized to a specific standard. \nI do realize these use cases go beyond what the  original use cases for what swal and swal2 were, but  I don't necessarily think that's a bad thing.\nThoughts?\n. I would also agree that a range slider would be useful to have in sweetalert. However, I don't think the html5 range slider itself will be particularly helpful without a lot of additional parameters and stylings. Might we add just another dependency instead of the standard HTML5 range slider? \nMy favorite is currently: \nhttp://refreshless.com/nouislider/ \nOtherwise, I agree, the item value should either be shown while dragging (over the slider) or permanently in its own div. \n. Instead of separating this out into the global methods - why not bundle this with queue / state machine functionality? I can only really see the use cases within those two areas, as they would be the only places where programmatically maintaining the numbers would be possible. \nSo something like:\n```\nswal.setDefaults({\n...\nshowProgressSteps: true\n...\n});\nswal.queue([{swalObject}, {swalObject}, {swalObject}], {\n    progressSteps: {\n         values: [\"swal1\", \"swal2\", \"swal3\"],\n         ....\n    }\n});\n``\n. > If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our [Gitter](https://gitter.im/sweetalert2/lobby) or submit it to [StackOverflow](https://stackoverflow.com/questions/ask) instead of GitHub, and make sure you add the [sweetalert`](https://stackoverflow.com/questions/tagged/sweetalert) tag to the question.\nSee Contributing.md\n. @2braincells2go you will be better suited asking this question (and providing your implementation) on stackoverflow under the sweetalert tag. Issues on this repository are not for coding implementation questions but rather issues on the library. There are several contributors who actively watch the stackoverflow tag who would be willing to help.\n. @2braincells2go No worries! Hope you get your solution!\n. My assumption is a sweetalert2.d.ts declaration file so that it can be included into typescript projects see: DefinitelyTyped. Although a description would have been nice on the issue.\n. If you're looking just for more exposure on the plugin some quick searching shows that the highest ranked javascript notification/alert libraries have their own domain names rather than piggybacking off of github. \nThere are also a couple of review sites and bloggers that post about the best notification libraries that show up on the top searches: \n- ourcodeworld\n- jqueryhouse\n- techslides\nSo in terms of garnering interest from new developers, I would vote reaching out to existing mediums. Although the askers on stackoverflow do seem to have a very positive reaction to the introduction of sweetalert2.\nI agree with @toverux that t4t5 prolly won't be fond of suggesting a different library or marking his as 'depreciated'. It is still, although infrequently, still developed on. \n. @John1987vlc Thanks for your interest in sweetalert2! Be aware that our issue section is for bugs only. \nThe short answer is that yes this is possible and the examples show how to do that. For a more specific answer please ask this on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\n. It's just a css change, you can globally allow scroll by editing the body.swal2-in selector to be \noverflow-y: auto instead of overflow-y: hidden in your CSS file. . There's not currently a datepicker included for swal2, you can get this done using the html to create your html input and running your javascript datepicker binding within the onOpen option.. ~This should be working on the v7 release see: minimal-repo using react-dom~. Just kidding. I'm using react dom - which isn't server side rendering. @limonte The desired behavior would be: if a dialog is not open when swal.showLoading() is called, create a new dialog, open it, and display the loading icon. \nI wouldn't consider this to be a bug, as this has been defined as showing the loading indicator on an existing and open dialog.\n@suhrab can you make a case for otherwise?. @HennesseyJ It was closed because there was not a minimum reproducible example provided. Issues are closed if they don't follow the bug reporting guidelines and then reopened once (or if, in this case) a user provides a debuggable example.\nI'm happy to reopen this issue if you can provide a more detailed bug report!. @LuisDiazUgena you should be able to remedy the dropdown size using CSS. The selector would be for: select.swal2-select and/or select.swal2-select option. See the following SO Thread\nIf you believe this to be a plugin issue, please go ahead and reopen following the directions below:\n\nFor bug reports, please include:\n- a jsfiddle in order for us to be able to reproduce the issue.\n- expected behavior of the plugin\n- actual behavior\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\nSee Contributing.md. This one is pretty interesting! Sweetalert2 works by appending a new element to the DOM and removing it when it is closed. Browsers, to make things more efficient, seem to ignore CSS transitions on appended elements (see explanation here). \n\nThis means two solutions: \n- Refactor SWAL2 to always have its elements in the DOM\n- Dynamically add a class after the element has rendered\nFor sake of ease, we'll take the second route and add a class to make the background transition work. \nSee my example fiddle:\nhttps://jsfiddle.net/r2n743e7/1/\nI'm hesitant to classify this as a bug on our part since this is actually a browser issue. But please argue it otherwise if you can!. Renamed generalizing to all transitions for the sake of other users that may search for this question.. @limonte A solution to this would be to separate the backdrop element from the swal2 container. This way a backdrop could remain in the DOM while in a chaining modal state. However, this is a larger change for the whole plugin and will probably break previous version's stylesheets (but if we're releasing a major...?)\nIf you agree that this is a viable option, I'm happy to write the code for it!. @limonte I think that will do it!. @MetaiR I realize this is very late getting back to you, sorry about that! Could you make a minimal example using our jsfiddle template? I'd like to help, if I can!. Closing for inactivity - please reopen if you still have this error!. @limonte note that .buttons-wrapper will transition to flex at the completion of #672. @toverux I agree, if the position option was added, it would have to be just for 'top', 'center' and 'bottom'. SWAL2 could provide classes for those positions that a user can more easily customize via css, which I think would fulfill the original issue request.. I like that screenshot! Makes the use-case from #664  a lot more tangible.\nOptions: top, top-left, top-right, center, center-left, center-right, bottom, bottom-left, and bottom-right. \nThe question becomes, should top, bottom, left, and right be centered as a standard alert or grow to fill the screen. I'll push for having them center by default and add an additional grow: true|false parameter\nThoughts?. @limonte Added your suggestions! I'm not entirely sure how to add it into the testing environment. . @limonte I'm not actually using vertical-align, flex uses center instead of middle!\nAnd I'll go ahead and add in fullscreen while I'm looking at it!. @limonte annnnd there's fullscreen support. Let me know if I can add anything else! Excited for this to be added in.. @toverux thanks for the feedback! I initially had the same thought as you, reuse as much as we could, but this would be separated into a different concern. Thankfully, swal is generalized enough to be basically just restyled into a toast (granted there's a bit more than just styling, but you get what I mean).\nOnly big drawback I see is exactly what you mentioned, there currently can only be one toast on screen at a time. You could still chain them though, so there's that?\nI think moving the buttons below makes the toast itself too big (?) but I'm curious about what everyone else thinks.\nCalling other contributors! @birjolaxew @samturrell @patrickhlauke - do you have input on how we this PR and how we should style these toasts?. @limonte closing PR in favor of #672. @zenflow one the reasons your PR is conflicting is you're committing the dist/ folder be sure you go through our contributing guidelines and the linting procedures at the bottom of the readme.\nThanks so much for taking the time!!. @limonte I'm not sure about supporting inputs inside of these toasts - there's partial support for them currently, but is that a use case we should support?. @kgrvr not a flag - it just removes the backdrop entirely. Is there a use case for needing a backdrop on a toast?. @kgrvr correct - the only clickable area is the toast itself. And you're right, in a standard modal there isn't a flag to hide it. However, you can write a class to add to it that hides the background.. @kgrvr true, if that's a feature you want to see added you'll need to open an issue request for it! Toasts are a separate concern. Thanks!. @kgrvr waiting for some final reviews to be added as to what we should do about handling inputs (@limonte & @toverux) inside of a toast - but hopefully by early next week!. @toverux I'm not entirely sure how they should be styled? In the toasts I transitioned into a vertical layout instead of horizontal. But I'm not sure if that is the best option? . # Inputs\nI believe this is the last section of the PR to be approved - provided it is, I'd vote for merging it in, along with needing some adjustments to the readme to advertise this functionality.\nThoughts? @limonte @toverux?\nText input\n\nInput with Error\n\nTextarea\n\nSelect\n\nRadio\n\nCheckbox\n\nFile (I don't think I'm happy with this one)\n\nRange\n\nChaining\n. @limonte all that's left is #673 which it seems you're looking into!. @limonte interesting... we need to add that into our test suite I think! I totally missed that one.\nAdding margin: auto back in does work, but breaks position functionality (all modals will be centered as margin: auto overrides justify-content and align-items).\nTo add to the confusion - it looks like align-items:flex-start fixes it, but removes centering of the modal for normal-length text. So I'm not entirely sure why it's being weird here?\nI'm looking into it further!. @limonte I agree with both of those, I'll add it in!. @limonte good idea! This will fix every case but 'bottom', 'bottom-left', and 'bottom-right' but I think that's an underandable side affect of those positions!. I support depreciation over a drop as well. This issue is no longer relevant to this repo - see new repo. Awesome, it seems like there is a consensus that this is needed. I'm happy to work on whatever is decided. I think it would be most effective to get an agreed upon mockup before continuing, so that   everyone can piecewise contribute (should you feel so inclined!)\nSo - if you have the time! Submit your mockup ideas! @limonte @toverux @zenflow . Here's the layout/scheme I had in my head. Thoughts?\n. @toverux can't say I wasn't inspired by that haha - thank you for the feedback! I'll have the time this week to start modeling this stuff out in html instead of in sketch. I'll push it to a dev branch here to allow everyone else to contribute to it as well!. I'm going to close this in favor of @zenflow's suggestion of moving to the new repo's issues. @mateenQureshi rather than hiding the buttons, would it not make more sense to disable them?. Closing as this issue is discussed in the README#handling-dismissals, and will change with the acceptance of #700 \nThanks for using swal2!. @limonte is this in the dynamic queue example? . @toverux I've updated it - thanks for the feedback!. @koddr thanks for using sweetalert2! As per our CONTRIBUTING\n\nIf your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\n\nBut the short answer would be yes, using the onOpen option to set your bind to the input.. The option you're looking for is allowOutsideClick which defaults to true, there are other options in the README that show disabling the escape key, buttons, etc.. Sorry @KrunchMuffin for the lack of response on our part here. This issue is isolated to SO because of the nature of the question (how-to rather than a bug). I'm adding an additional response for clarity of @limonte's original answer.\njavascript\nswal({\n    title: 'Hello',\n    html: '<p data-localize=\"text\"></p>',\n    onOpen: function(modal) {\n      $(modal).find(\"[data-localize]\").localize('text', { language: 'fr' })\n    }\n})\nBut I will go ahead and close the issue - hope that helped!. This is part of the breaking changes of v7.0.0 release\n@limonte lists available options in the release notes to either use the new syntax or make it backwards compatible. Anytime!. References #654 . Thanks for getting this one done @limonte!. @limonte sorry, was moving towns and have been away. I'll take a look at this now!. I think an org would be the cleanest way to support all the frameworks! So I'll place my vote on that one.. @CesarBalzer this is part of what a 'modal' is defined to be. There have been a couple past issues about what the proper way to handle these are. The default functionality is to disable scrolling on a modal being open. \nYou can do one of the following:\n\nUse the backdrop option and set it to false which removes that constraint (but also removes the background)\nUse a (albeit nasty) !important css rule to always have the background scroll.\ncss\nhtml.swal2-shown,\nbody.swal2-shown {\n  overflow-y: auto !important;\n}\n. Option 1: https://jsfiddle.net/6x1jdeo3/5/\nOption 2: https://jsfiddle.net/6x1jdeo3/4/. See #781 \nYou'll need to consume the prevent the default button event.\n\njavascript\n$(\".btn\").click(function(e) {\n  e.preventDefault();\n  swal({\n    title: 'Hello world!'\n  });\n});. > \"If input parameter is set to 'select' or 'radio', you can provide options. Object keys will represent options values, object values will represent options text values.\"\nSo do something like this:\njavascript\ninputOptions: {\n  4: \"nick\",\n  10: \"dave\",\n  2: \"zac\"\n}\n(See https://jsfiddle.net/ad3quksn/320/). @nickraphael I apologize, misunderstood the issue. As I explore it more, it looks like this will actually need a PR to fix. Thanks for the report!\nIt looks like the JS engine will automatically sort object keys. Example\nCode in source sweetalert2.js#L1121-L1133\nMy suggestion would be to have a specific object structure and to accept an array of object instead:\njavascript\ninputOptions: [\n  {id: 4, value: 'option1'},\n  {id: 6, value: 'option2'},\n  {id: 5, value: 'option3'}\n]\nChanging name of issue for clarity.. @zenflow shouldn't npm test be run separately from an active development workflow (that's a lot of tests + browsers opening)? \nI'd push for adding npm test to be run as a precommit hook rather than every time a file is changed.. L587: inputOptions?: SweetAlertInputOptions | Promise<SweetAlertInputOptions> | Map ;?. > If your issue is focused more on 'how do I do this?' rather than 'this is a broken functionality', then either ask on our Gitter or submit it to StackOverflow instead of GitHub, and make sure you add the sweetalert tag to the question.\nFrom CONTRIBUTING.md. @limonte what about that new footer feature?\n(sorry, I know you've already recorded this like 5 times). @limonte bump on the recording of a new gif - I'm happy to record one if need be!. Thoughts?\n```css\n.swal2-popup button.swal2-styled {\n  position: relative;\n}\n.swal2-popup button.swal2-styled:hover:after,\n.swal2-popup button.swal2-styled:active:after {\n  position: absolute;\n  content: \"\";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.15);\n}\n```\nDemo: https://jsfiddle.net/kxxc7kxh/1/. @anionic please submit your issue with a jsfiddle demonstrating the issue as outlined in CONTRIBUTING.md . @emaildano it can be overridden, it just requires that you use a selector that is equal (provided it is declared after the original stlye) or greater specificity see the MDN docs\nExample: https://jsfiddle.net/ad3quksn/387/. @emaildano Ah, this is a different issue then! I don't think this is a feasible addition to our API but I'll leave it up to other contributors to weigh in. \nThe addition of API options would have to include color options for all icon types. Each icon would need to have their border-color and color attributes customizable. \nIMO, the better use case would be to use the customClass API variable and define your custom button styles using that class (see example)\nThoughts @limonte, @toverux?. @tdeignan if you'd like to mess around with that PR, I believe that should cover the functionality you've requested!. @limonte this might be an error on my part (I just enabled 2FA?) but CI is giving an error 401: Bad Credentials. I agree with @zenflow's leaning, themes should be separated out of this repo and could be added into our organization. I'd much prefer issues, releases, etc regarding themes be specific to the theme themselves rather than having to push them out as part of the main package.. @limonte same browser, same OS version and am unable to reproduce, can provide a screen recording demonstrating if need be.. To use the await keyword, the function directly enclosing it has to be marked as async see SO answer.. \ncss\n.swal2-icon {\n  font-size: 1rem;\n}\nhttps://jsfiddle.net/ad3quksn/669/. @inesEl the link mentioned in our migration pages is to compare our API version (SweetAlert2) with the original project's API (Sweetalert 2.x).\nSweetAlert2 uses different button config options (found here under Configuration).\nYou're probably looking for: showCancelButton: true and cancelButtonText: 'Cancel'\n. It just needs to have a .join('') at the end of the function call\nSee Example: https://jsbin.com/fuzibuzowa/edit?js,output\nClosing as this doesn't pertain to the plugin, hope it helps!. So it would accept something like url(../some/image/path) as well? I like it.. Ah yes, thank you!. @limonte ah yes we should, lemme fix that one (forgot we added the close button \ud83d\udc4d). ",
    "johanwilfer": "Great! And thank you for creating this fork. I was a bit sad looking at the original repro and trying to get forms to work.\nThis makes sweetalert possible to use with custom forms for me.\nI use jquery to hide/show form-rows that are relevent as feedback to the user as he fills out the form. This also makes it possible to hide the entire row (as in bootstrap forms), and sweetalert will try the next one if the one that should be selected is hidden in any way.\n. I can confirm this issue in Firefox and the provided fix. I've applied it both to 0.4.5 and the latest version, but as I ran into the same issue as #111 I can't use version 1 for now.\n. Thanks @limonte !\n. ",
    "ghost": "Okay thanks!\n. Yes I understand that. But my suggestion was if you could add a multi-form alert.For example, I mean something like this: http://thecodeplayer.com/walkthrough/jquery-multi-step-form-with-progress-bar\nI think this would be a nice feature to have in SweetAlert 2.\n. thanks !\n. modal inside modal - what a hell of UI :) \nthanks for this kind word....\ni want confirmation inside modal than i have to go through  this\nsee screenshot top properties not working\nnot element whole sweetalert2 dialog centered in modal\nif we have option like position:center which work according screen size that's it!\njsfiddle  not possible because  i am working on localhost \nany way thanks for reply......\n. Thanks!\nYes that is indeed what I mean, looks good!\n. Awesome, thanks!\n. Sure, I think if (email) should be if (result), right?\n}).then(function(result) {\n  if (email) {\n. In my opinion you should show the current range value of the slider by default, but a option to hide the chosen value is useful too in some cases.\n. I have the same problem as @baum1234 , so a fix will be nice!\n. Each time Swal2 is getting better and better, thanks for everything!\n. @limonte Sorry about that, I added to the description.. I haven't used that selector before, thank you for the tip \ud83d\udc4d . ",
    "simplenotezy": "Thank you again @limonte for another fast response! :+1: \n. Awesome! Good & fast job!\n. Exactly. Thanks!\n. Yeah I saw that @limonte great!\n. That does not work. Error still persists: Uncaught (in promise) timer when using .then(. ",
    "kennyhyun": "How can I disable buttonsStyling when I use like...\nswal('Any fool can use a computer')\nIs there any global configurations?\n. @limonte Cool! Thanks, I should have read the document carefully.\n. ",
    "zhiru": "Tks! I'm waiting for approval :+1: \n. ",
    "DieguitoBueno": "Thanks, @limonte  !! Great job :+1: \n. ",
    "believer-ufa": "Many thanks, it's really nice library)\n. ",
    "Iza19": "Solved, there is a mistake on the .yml file. Surprisingly it does not accept to have a string \"no\" or \"yes\"...\n. ",
    "sebhildebrandt": "Thank you, thank you, thank you!!! This was super fast!\n. ",
    "quma": "but you have the same problem with html content without images?\nBut i will test it again.\n. I test it and it's not work. If you have html content with images  (not imageUrl)... than the modal window is not centered. I think with a longer html content without a image you have the same problem.\nIn sweet alert 1 its center correctly \n. in your demo (A message with a custom icon and CSS animation disabled)\nyou can see it ... in Mac OSX Firefox and Mac OSX Chrome the position is different.\nhttps://sweetalert2.github.io/. I get this work by changing on line 137\nthis\npadding = parseInt(getComputedStyle(elem).getPropertyValue('padding'), 10);\nto this\npadding = parseInt(getComputedStyle(elem).getPropertyValue('padding-top'), 10);\n. ok sounds nice, but can you make me a sample how I get this work ?\nthx\n. thank you, but i read it over and over again but it not helps me to solve the problem :(\n. ok, thank you !\n. Hallo acupajoe,\nmany thanks \ud83d\udc4d \n. I can also confirm on iPad 3 works correctly \n. But you can test it with Google Developer Tools, select iPhone 6, iPhone 6 Plus or Nexus 6P you can correctly reproduce the bug. The Dev Tools iPad shows it also correctly.\n. Thank you for the fast response.\nI just send you a email with screenshots.\n. WOW thank you !\nafter I use the sweetalert2-common.js it works !!!\n. ",
    "tombusby": "Wow, the version in use in my client's codebase must be pretty out of date then. Apologies for the duplicate. I should have double checked. All the best.\n. ",
    "thearabbit": "I work fine for me\n``` js\nnpm install --save sweetalert2\n// Import\nimport swal from 'sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.min.css';\n```\n. I tred\njs\n{\nallowOutsideClick: false\n}\nBut still can be use the form.\n. I use popup form with alertify js, and then use sweetaler2 for alert msg.\n. ",
    "jbprat": "Confirmation buttons.\nLe 3 avr. 2016 12:59, \"Limon Monte\" notifications@github.com a \u00e9crit :\n\nwhat is validation button?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/81#issuecomment-205009432\n. I'll check the issue and make a jsfiddle\nLe 3 avr. 2016 14:09, \"Limon Monte\" notifications@github.com a \u00e9crit :\nAs I can see button are centered corectly. Can you please make jsfiddle\nwith this issue?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/81#issuecomment-205023620\n. Okay !\nLe 5 avr. 2016 11:54, \"Limon Monte\" notifications@github.com a \u00e9crit :\nreopen when you make jsfille example\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/81#issuecomment-205867530\n. \n",
    "jkjha": "I have also stackoverflow question for same, if anyone can help here: http://stackoverflow.com/questions/36400203/input-type-checkbox-in-html-text-not-working\n. Sorry.. @limonte, I have edited the code now.. but newline not working in the code. Please let me know if I need to format it more.\n. ooh yes.. I started with swal and ended to swal2 , so missed that. Anyway I have created a plunkr where I tried to add this and is working fine. But dont know why it is not working with my app. May be some properties are being overwritten. Here is the plunkr. https://plnkr.co/edit/WsCWEFIhRpAkcvRIH0IP?p=preview\nThanks for your prompt response. I will clsoe this ticket in some time.\n. ",
    "dimsav": "As far as I can see this is now possible. See here under \"Chaining modals (queue) example\". ",
    "maxisoft-git": "\u0412 \u044d\u0442\u043e\u043c \u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0430 jsfiddle \u0432\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043b \u043a\u043e\u0434 \u043d\u0430  \nswal({\n            title: 'Are you sure?',\n            text: 'You will not be able to recover this imaginary file!',\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#dd6b55',\n            cancelButtonColor: '#999',\n            confirmButtonText: 'Yes!',\n            cancelButtonText: 'No',\n            closeOnConfirm: false\n        }, function() {\nnow works\n. ",
    "ilentt": "Hi @limonte ,\nI have similar this bug too, here is my code\nfunction myFunction(parameter)  {\n    if (something is true) {\n        // to do something\n    } else {\n        swal({\n            // show error popup\n            title: 'ERROR',\n            text: 'Something went wrong',\n            type: 'error',\n            confirmButtonColor: '#3085d6',\n            confirmButtonText: 'OK'\n        }).then(function () {\n            // when click ok then redirect back\n            location.href = \"/\";\n        })\n    }\n}\nI have try to fix by insert lib Polyfill at the header follow this guide but can not solve this  issue.\nI  usage sweetalert2 version 1.1.3, jquery  version 3.1 and mixed all in visualforce page. @birjolaxew  I testing on Chrome Version 56.0.2924.87 (64-bit). @birjolaxew \nOh! so sorry Johan Fagerberg, I really using SweetAlert instead of SweetAlert2 as I said. So could you please give me a suggest to solve this issue.\nThank you. . ",
    "rokpok": "No problem. Thank you for quick fix.\n. ",
    "TCastelein": "Thank you for your reply my apologies for not reading the other issue as closely. I thought the promise was another issue entirely. \nThe update seems to fix the issue i had with not fireing the callback when closed too quickly\nIssue closed, duplicate of #93 \n. ",
    "jdcrensh": ":+1: \n. Accidentally nuked the commit :laughing: \n. I'd be happy to help out whenever possible!\n. I like it \ud83d\udc4d \n. ",
    "natsu90": "how do i do the same for customized icon for the modal?\n. ",
    "Ascariel": "Any updates for this issue, seems critical\n. ",
    "esetnik": "unfortunately if you use custom html there's no way afaik to disable the spacebar triggering\n. @rubencodes I just opened #178 to address this behavior as a configurable option\n. @limonte This is still necessary if you use custom inputs in the html option on sweetalert2. I use an alert with two input fields and can't disable the space bar submission behavior in this case. That's why I submitted the PR for this option, as https://sweetalert2.github.io/#input-field is not enough for my use case.\n. ",
    "cormip": "Awesome job! Thanks.\n. ",
    "BetBros": "Why? I was just asking is something like this even possible to do, if not I wouldn't try to do it.. I've been trying atm 2 days\n. ",
    "huglester": "P.S. I do not see any difference.\n. Well as for now, if I understand correct, those colors are inherited from Bootstrap, no?\nI am using this inside Foundation6.\nI would like to change color, of default buttton (blue) for example.\nI know I can kae it via customization via params, or so. But wondered, if maybe I could change some defaults.\n. Hello\nI see it: http://pic.webas.lt/webas.lt-bd85cd6ba9.png\nboth links also work\nmaybe because you are 'admin' - you do not see them.... ",
    "Tonkpils": "I'm going to try to take a stab at this. From my understanding it's just a matter of re-organizing the code so that we can add the stuff to window + exporting it as a module. \n. @limonte is there any reason for exporting things like swalClasses to the window? I have a proof of concept for this using ES6/babel but not adding a lot of those things to the window. \nYou can see my version here https://github.com/Tonkpils/sweetalert2\nI'm working on a different approach without ES6/babel but I figured I would ask if it's absolutely necessarily to have those things added onto the root.\n. Also any reason we're depending on that particular version of es6-promise-polyfill instead of the more popular one es6-promise or rsvp.js?\n. @limonte sure, you can check out the link to my repo. I have a working version of it that allows doing things like \nimport sweetAlert from 'sweetalert2';\nand it's only adding the sweetAlert and swal to the window/root.\nI will be doing a bit more testing and writing the other approach before making a pull request. Also Github diff won't show the entire diff since it's a lot of changes in one file but after this, we should break it off into more logical files. \n. @senseluo please let me know if this works for you. I tested it in a couple of places on my apps and it works just fine but I don't know of many edge cases. Would love to hear some feedback\n. I am definitely open to being a collaborator. I am still fairly new to Javascript but getting better and I figured since I'm making an addon for this package on ember I could help improve it if you're interested. \n. @limonte we could make it so it works for both GH and dev. I see that in GH pages things are symlinked from example out. Could we instead move out the index.html and reference the correct file paths?\n. I'll move that commit out of this PR though since it's unrelated anyway\n. @limonte I think what he means is he doesn't want the dropdown box to be selected again when the alert is canceled. \n. This all looked good to me, I'll test it out with my ember addon \ud83d\udc4d \n. @limonte can we keep this open if @yeomann is open to working on the correct fix? we should let contributors keep a bit of ownership on their PRs\n. > By the way, it was kind of hard to find the version it broke.. Something like git bisect for npm would be awesome oO\nYou can always clone the repo and checkout specific tags and git bisect that locally. \nIn any case, I'm not sure what the issue is. You mention the whole screen is locked but I just tried jsfiddle you provided and it works just fine. It opens a new tab when I click on the first link then I can open the SweetAlert go through the flog and click the link again just fine. \nCould you please elaborate the steps you're taking and the browser your using?\n. I agree, I don't think contributors should be committing changes on distributions unless we're cutting a new release. On that note, it would be great if we formalized a release process so that we're not cutting out new versions on every PR merge. \n. Seems like an issue on this line.  https://github.com/limonte/sweetalert2/blob/08b93526eeb13bdfaa237846163996de5b27d4e0/src/utils/utils.js#L26 \nand caused by one of the lines that call colorLuminance here https://github.com/limonte/sweetalert2/blob/08b93526eeb13bdfaa237846163996de5b27d4e0/src/sweetalert2.js#L446-L471\nWould you happen to have different values for buttonsStyling, confirmButtonColor, cancelButtonColor\n. You could disable buttonsStyling altogether if you're doing that yourself\n. No problem, feel free to re-open this issue if you run into something! \n. \ud83d\udc4d \n. ",
    "senseluo": "thank you guys\n. ",
    "vishal41190": "I am having the same issue. \nI am using sweetalert2 v6.0.0 \nAny idea how to solve this issue?\n. ",
    "danferreira": "Yeah, that's it. \nThank you. I will update my project and test. I'm happy that your fork exists :D\n. I dont know if its related but, can I grab the value from input in preconfirm?\nIn your example, it asks for an email but you not use it in the preConfirm function\n. worked. Thanks again.\n. ",
    "rafaelrenanpacheco": "Hi @limonte \nThanks for the fast feedback and commit.\nBut even after unloading the previousActiveElement, sweetalert2 stills focus on previous element.\nI think the following codes are doing that from resetPrevState():\njs\nwindow.onkeydown = previousWindowKeyDown;\ndocument.onclick = previousDocumentClick;\nI didn't find this on sweetalert legacy.\nWould be possible to disable those 3 resets via an option? Something like:\njs\nif (some_config.reset_previous_state == true) {\n    window.onkeydown = previousWindowKeyDown;\n    document.onclick = previousDocumentClick;\n    window.previousActiveElement.focus();\n}\nWhere \"reset_previous_state\" is true by default.\nAfter the popup is closed, I must not touch the previous element at all.\nThanks.\n. Did you mean sweetalert2 doesn't have left and right margin on mobile displays?\nFrom your screenshots, both seems responsive.\n:+1: \n. As you can see here:\ncss\n@media screen and (max-width: 500px) {\n    .swal2-modal {\n        max-width: 100%;\n        left: 0 !important;\n        margin-left: 0 !important;\n    }\n}\nsweetalert2 is forcing 0 margin. In order to overwrite that, you must have this same css selector in your custom css file, and change margin-left to 15px !important, and margin-right as well.\nMaybe this 15px margin could be de default margin for 500px or less, but this is up to @limonte \nUntil then, you can always overwrite that css.\n:+1: \n. Hi @limonte!\nI can't make a jsfiddle at this moment, but I'll try to explain better with some printscreens.\n\nIn the print above, I have the default option \"Wheat\" selected. If the user tries to change that option, a swal will popup asking the user to confirm the change. If the user cancel that, the option \"Wheat\" will be selected back again automatically.\n\nThe print above is the swal alert I said before, asking the user to confirm the option change to \"Beige\" value. Note that the select box has lost focus, but, if the user hits cancel, look what happens:\n\nThe value \"Wheat\" was reseted as expected, but the select box received focus again, and this must not happen, because the user just canceled this action. In sweetalert-1, I managed to avoid focusing the previous element by nulling window.previousActiveElement. But in sweetalert-2, there are others things to focus the previous element, like:\njs\nwindow.onkeydown = previousWindowKeyDown;\ndocument.onclick = previousDocumentClick;\nI think those are as well focusing the previous element.\nIf they are indeed doing that, I suggest an option to avoid this behavior, something like:\njs\nif (some_config.reset_previous_state == true) {\n    window.onkeydown = previousWindowKeyDown;\n    document.onclick = previousDocumentClick;\n    window.previousActiveElement.focus();\n}\nThanks!\n. Hi @limonte \nBlur() the element was the first thing I tried in sweet-1. Then I realized that it would not work, because I fire the blur inside the swal feedback. After swal runs all feedback, it runs those focus commands by itself...\nSo, something like this:\n``` js\nswal({\n    text: \"Are you sure?\",\n    title: \"Warning\",\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: \"Yes\",\n}).then(function(isConfirm) {\n    window.previousActiveElement = null; / This was enough in sweet-1 /\nif (isConfirm == true) {\n    /* Do something with the new selected option */\n} else {\n    /* Revert the selected option back */\n    /* .... */\n\n    my_dropdown.blur(); /* This works until swal is closed. After it is closed, it fires focus events. */\n}\n\n});\n```\nDoes not work, because the blur only works during the feedback. When swal is closed, swal itself focus the element using those 3 commands I said before. In sweet-1 it was only 1 command (window.previousActiveElement), which I was able to null it before closing the popup, as you can see in the code above.\nAn option to set if swal should or should not focus previous element would solve this. By default it would be \"true\", so current swal users wouldn't even bother about this option.\n. Hi there!\nYour code worked as expected! The problem was that I was calling blur() inside the Promise, because that was the sweet-1 way to solve this. In sweet-2, calling blur() before calling swal({}) worked perfectly as you said :+1: \n``` js\ndocument.activeElement.blur();\nswal({\n    text: \"Some text\"\n}).then(function(isConfirm) {\n    if (isConfirm == true) {\n        // save the new option\n    } else {\n        // rollback the old selected option\n    }\n});\n```\nThanks!\n. Hi @limonte!\nOf course! Thank you very much for your support :+1: \nBest regards,\nRafael.\n. As sweetalert2 represents a popup that must be the top most frame, I think it's okay to max it up. But this number must be compatible with all browsers. Maybe a little less aggressive number, like 10000? I don't recall seeing any modal plugin which uses big z-indexes.\n. ",
    "Hucxley": "I'm currently working on an extension that parses user selections in a drop down menu.  Some of those selections have properties in their object that warn the user that one of the selections they have in the multi-select should be removed from the selected options, and includes the reason why they should be removed.  So, if you select 3 items from the drop down, the extension parses the selections, and returns an object with each item's properties within.  On object 1, there is 1 warning that the selected option is not allowed, and on object 3 there are 2 different warnings for the selected option.  Additionally, the warning allows the user to submit an override request that will enable selection, but will send a report that they have overriden the warning. \nSo, I need to queue an alert with the warning content so it goes through each object's warnings sequentially, instead of them randomly popping up when the next object construction completes, ie. \njs\nwarnings.forEach(function(warning){\n  swal(warning).then(\n    function(isConfirm){\n      if(isConfirm){\n        swal({\n          title: 'Override Request',\n          html:$requestForm,\n          preConfirm: function(result){return new Promise(blahblah){stuff; resolve(stuff)}}}).then(\n            function(result){$processResult});\nI hope this helps to explain one scenario where it makes sense to queue alerts and to process the queue one at a time until all are resolved.\n. To be fair, when using it with the original swal, it puts a small line of\ntext at the top letting you know how many alerts are pending in your queue,\nand then the content of the next alert just replaces the current alert.\nBut, it's fine. I'll find a work around.\nOn May 11, 2016 12:11 PM, \"Limon Monte\" notifications@github.com wrote:\n\nI'm still not happy with the idea of multiple alerts one after another.\nThis behaviour looks spammy for me and I don't want it in this plugin. Feel\nfree to fork swal2 and implement it by yourself :)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/125#issuecomment-218526095\n. Wonderful.\nOn Jun 7, 2016 9:11 AM, \"Limon Monte\" notifications@github.com wrote:\nGood news @KHam0425 https://github.com/KHam0425! :)\nSWAL2 now supports modals queue:\nhttps://sweetalert2.github.io/#chaining-modals\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/125#issuecomment-224292455,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AGwgnJYQ3C2E8COQWAn12uN22vAltMKNks5qJXv_gaJpZM4IbU-D\n.\n\n. What sort of features/enhancements are in the pipeline, or what bugs need fixed?  In short, what are you looking for from collaborators in the short term?\n. Oh, I'd also like to help, if you can add me.  Even though you hate the idea of queueing the modals, I did implement it in my environment.  I'm working on building it into a PR that will allow developers to choose to allow pending alerts (default false).\n. It looks like your screen touch is passing through the alert.  What if you autofocus the input element in the alert when it opens, which should bring the keyboard alive as the alert is opening, and eliminate the need to touch the screen to activate the input box.  Potentially this would stop the scroll.  Or, when an alert is active, scroll actions on the background screen would -= the amount +'d (sort of the way video games \"trap\" the mouse pointer in the game window by subtracting the position.x > screen.width)  Maybe get an element from the document, and any change of position of that element +/- would then cause the document to -/+ the same amount.  I just woke up, so that probably doesn't make sense.\n. Can you focus on the input element with jquery? \n$(\"#textBox\").focus();\n. https://github.com/driftyco/ionic-plugin-keyboard#keyboarddisablescroll may help.\n. Well, that pretty much ruins Swal2 for me.  I was using Swal2 without queueing for the situations that needed promises, and standard construction from swal to work with the alert queueing I asked you about before.  Since the queue won't accept promises, I don't really have an option to stay with swal2, which is unfortunate, as I prefer the other improvements you've made to the other repo.\n. I don't have an iPad that I can test this on, but I'm watching the behavior.  It appears that it is relocating the modal to align the top of the modal to a pixel value of the viewport that isn't accounting for whether or not it needs the extra space for the keyboard to be available.  \nIf you look at the distance between the top edge of the viewport and the top of the modal, it seems to be an almost identical distance in both portrait and landscape layout.  Is it possible to align the middle (vertical and horizontal center) of the modal with the middle of the display?  Perhaps then it can be adjusted to re-center when the keyboard raises and lowers, which would keep the modal centered in the viewable area.\nI hope this doesn't sound like gibberish, but it may require dynamically re-positioning the modal so it tracks with the \"usable\" screen space (aka, not covered by keyboard).\n. Not quite a duplicate, as he's setting the font-size with media queries.  Is it possible to add default properties to swal to include baseFontSize: 20 and scaleSwal: true instead of adding the custom class?  \nAt least with that approach, you can find a comfortable starting point for the look you prefer, and then if developers want to increase the size, they can change the baseFontSize to a value that fits their design goals.  Then, we can set the transforms for each media query he makes instead of the hard-coded values that he suggested in #25.\n. Working on it, trying to merge his idea with mine (and using transform: scale() as well).\n. I used vh and vw for the text elements and was able to get a good scaling\nsolution working tonight. It's ugly, but works. With a bit of jquery, I\ncould control transform scaling with dynamic values if I spent some more\ntime on it. I'm not sure if it's worth it for my personal use.\nOn Jun 2, 2016 3:00 AM, \"Sam Turrell\" notifications@github.com wrote:\n\nPersonally, i'd like to see all styling specific options removed from the\nplugin, as it's much more efficient and flexible to style using css and\nmedia queries to get the desired effect.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/154#issuecomment-223222198,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AGwgnNj2SvGUeS_KQ_9I6dl8wVvK5lsIks5qHo2HgaJpZM4IsEfX\n.\n. \n",
    "synth": "Is it possible to conditionally advance to steps in the queue? For my use, I simply only want to present step 2 if a condition is met in step 1, otherwise, just close the modal. However, I can see it being useful to be able to move to any step based upon certain conditions. This would make swal2 an awesome way to make a form wizard! Although, the trick here is being able to know keep persist data from each step. Perhaps this is outside the scope of swal2 :)\n. ",
    "manojsinghrwt": "Thanks Limonte for your reply,\nI am using it with wordpress (in admin section).\nMay be other issue or conflict, If I found something I will update here.\n. not yet, neither error show in browser, although html parameter working.\n. ",
    "violetzie": "Having the same issue in meteor.js\n. ",
    "samturrell": "Happy to help! I have a few features i'm keen to add myself and a few issues i've spotted that I'd like to fix.\n. How's that, @limonte? :)\n. Yeah, Github doesn't perform very well with large PR's.\nPR is only big because of the removal of the module closure and newly compiled assets. Not sure how I can make it any smaller :)\nRE: export token error - I'd probably avoid testing using this file, if only for the reason that it's not what any end user should be using.\n. Awesome :)\n. @limonte Just as an alternative means of downloading the plugin, less bandwidth with a compressed package. \n. Hi @yeomann,\nWould you mind reverting the indentation style to two spaces as it was before? It's made this commit unnecessarily big and made changes to every line, so I can't even properly see what you did. (Also almost crashes the github diff view)\n@limonte - Maybe we should prepare a .editorconfig and accompanying contributor style guide so this doesn't happen in future?\n. It's just code consistency. It's currently two spaces so let's keep it two spaces until decided otherwise. Else we'll end up with people changing from 2 space to 4 space over and over depending on their personal code styles, which is a nightmare for checking PR's and will be an even bigger nightmare if you end up getting a merge conflict.\nRE: Line too long, I'll be fixing that some time this weekend.\n. Hi @thisisevan, which file are you pulling into your project?\n. Which specific file though? I believe you're using a file intended for bundling tools such as browserify. Make sure you're referencing dist/sweetalert2.js or dist/sweetalert2.min.js\n. According to this github issue it's possible to manually choose the file. The way this projects bower.json is setup (as per the official bower docs) it references the source file which is what's causing the issue. You actually want a specific build.\n. No problem, let me know if there's anything that can be done that will benefit others that encounter this issue!\n. Hi @Atrox , I believe this is because the npm specification for package.json says that the main should not include compiled files. However I would agree that the base compiled version should be included.\n. Hi @Atrox, sorry i meant bower.json (it's been a long day)\nAs defined in the bower spec:\n\nUse source files with module exports and imports over pre-built distribution files.\n. Hey @limonte, fixed in 0dc4e63\n. Sounds like a good idea. May not be so easy to enforce on a public contributions standpoint though, but as a collaborator i'm happy to abide by it.\n\nMight be worth marking them as binary files in a .gitattributes file so that their diff doesn't show up rather than not committing them at all?\n. Personally, i'd like to see all styling specific options removed from the plugin, as it's much more efficient and flexible to style using css and media queries to get the desired effect.\n. +1 I think this is a good feature to have. I'm sure it could be achieved with the preConfirm hook, but that seems better suited to validation type events.\n. http://stackoverflow.com/questions/12920652/git-update-index-assume-unchanged-returns-fatal-unable-to-mark-file - Anything here that can help you? Sorry I can't help more, don't have a windows machine to test on.\n. <script src=\"https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js\"></script> \n. Looks good to me\n. The above wouldn't work in cases where they're not using a .then() handler.\n. The only way i can really see this being resolved is with an opt-in solution such as\nPromise.prototype.done = function() {\n    return this.catch(function() {\n        // Silence is golden.\n        // Catch promise rejections silently.\n    });\n};\nAnd then swal().done() to suppress the error. \nThere is no way to fix this without using a non-native promise implementation where we can suppress the error internally.\n. From a quick google search this seems to be more user related. Would it be possible to provide a testing environment so I can recreate and track down the problem?\n. On further inspection of the provided example (Thanks for that @kalpitpandit), it looks like it could be plugin related.\nAnybody else have any experience with webpack/angular? I'm pretty sure it's a module packaging issue that angular doesn't like though rather than the webpack implementation.\n@kalpitpandit - Do you know if angular has any specific module packaging requirements?\n. May also be angulars internal module loading system expecting an actual ng-module, in which case i'd recommend instantiating it globally or within the module as normal instead of a dependency.\n. Hi Pablo,\nI would recommend you make your select2 opt-in rather than globally bound to selector, e.g. $('select.select2').select2()\nSam Turrell\n. Hi @sbnighut,\nDue to the nature of javascript frameworks such as angular, they don't register new events being added directly into the DOM as sweetalert2 does. What you will have to do is some kind of compilation event after firing the sweetalert that registers it in the dom with Angular. \nThis thread seems to be what you're after, you'll just have to replace $('body').append() with $('alert').replace(): http://stackoverflow.com/a/20059469/1375989\n. Fully reproducible on latest chrome (mac)\n. Ok, so this issue appears to be user error, as seen here, you shouldn't be doing what you're doing: http://stackoverflow.com/a/948379/1375989\nFix:\nif (!Array.prototype.contains) {\n    Object.defineProperty(Array.prototype, 'contains', {\n        enumerable: false,\n        writable: true,\n        value: function(element) {\n            return !!~this.indexOf(element);\n        }\n    });\n}\nif (!Array.prototype.last){\n    Object.defineProperty(Array.prototype, 'last', {\n        enumerable: false,\n        writable: true,\n        value: function() {\n            return this[this.length - 1];\n        }\n    })\n};\n. @limonte - I'd probably remove from dom, update, and then reinsert.\n. Just to go on record, not to start any arguments, but i do think it's silly in such a small plugin where we're not using anything that would be a nightmare to make IE9 compatible. \nThis is especially problematic for commercially built web systems for the likes of the medical industry, which i regularly do, that widely use the older browsers, making this plugin a non-option.\nAgain, I fully respect that the decision has been made, and for the right reasons, but that's my opinion.\n. Add .catch(swal.noop); to the end of your swal call if not providing callbacks:\njs\nswal('...')\n  .catch(swal.noop)\nRead more: https://github.com/limonte/sweetalert2#handling-dismissals\n. The inputValue option can be used to set the initial value, or are you talking in terms of setting it afterwards via an API?\n. I'd probably say something around 1060. That would also put it above bootstrap modals. I wouldn't set it to the max because some plugins such as jquery datepicker attach to the body by default and would need to be above sweetalert for use in the modal.\n. #297 :)\n(Cheers, @limonte!)\n. @madmark81 and anyone else that come across this issue, you can usually solve bootstrap modal focus issues by disabling the focus enforcement using $.fn.modal.Constructor.prototype.enforceFocus = function () {}; . Awesome stuff guys, been good to see all the constant releases and improvements being made. Hoping to contribute more at some point when I have some more free time, but it looks like you guys are killing it \ud83d\udc4c \nP.S. @limonte I wouldn't have held it against you if you took all the credit in your interview \ud83d\ude09 . Agreed, I think it's better to keep these separate. This gives more flexibility for the developer implementing the plugin into their workflow. \nHowever, that said it may be possible to generate an entirely separate bundle to add this functionality e.g. sweetalert2.all.js which includes the css-in-js.. You didn't have to do that @limonte, but thank you!\nWell done to everybody involved! \ud83c\udf89 . Yeah, i'd actually agree with @toverux. Probably do it the same way we've done it for the script imports example with examples of both usages. Probably put the .all example first for lazy devs, but still show the other.. Agree with @toverux.. I'll take a look!. Decided to pull in the compiled CSS rather than the SCSS so that we don't have to duplicate the gulp styles pipeline in the rollup pipeline.. Also, skimming through the codebase, the main entry point is starting to grow quite large. Might be worth seeing what we can do about breaking up the logic into sub-modules for future maintainability as I did with my first contribution to somewhat follow the single responsibility principle.. I use IntelliJ IDEA, but all of the jetbrains family are great!. Good to hear, figured it would be worth bringing to your attention either way.. I would agree that it's probably not the most necessary integration, however I do know that developers WILL try and find a package for it. And in that respect it's probably better to have it under the organisation umbrella so that there are a range of maintainers of the \"official\" wrapper for the future.. Do you think the inputs should be an array or an object with the key being the input name? With an object we have the advantage of Unique field names, but makes it a bit more difficult as I have to pass the field name down through multiple functions to build up the dom. Hi @User934903920432 - yep, the inputs property would accept any number of input objects as you mentioned in your first example.\nFor details on how fields can be added dynamically, you can check here https://github.com/sweetalert2/sweetalert2/blob/06143789ebbda33a585a726c5acc156eb9cc5949/test/sandbox.html\nAs for the multiple input containers, i don't think this would have a huge benefit to most users, and the example you've given would actually negate effects of the column anyway. You would be better off styling the form as a row, and the form groups as columns which would remove the need for the extra markup. However may be something to consider in the future maybe implementing a markup transformer, but again not really too important to most users. Thanks for the feedback!. I'm back! I promise i'm working on this again. This feature has been in the making for around two years but i feel like this year is definitely the one... \ud83d\udc40 \nI'll go ahead and close this PR as the codebase has evolved a long way since I opened it, and it won't be worth me fixing this branch. I'll PR another one when it's closer!. Try onOpen: function() { instead.. We could just apply a box-shadow as a somewhat hacky but dynamic alternative e.g. box-shadow: inset 0px 0px 0px 100px rgba(0,0,0,0.25);. css  \noverflow-y: scroll;\n-webkit-overflow-scrolling: touch;\nI believe.. Hi @Ragers,\nThe default dist file auto-injects the styles for convenience, so you'll have to be more explicit with your imports. Try require('sweetalert2/dist/sweetalert2.js');. Hi @User934903920432,\nKeep an eye on #824 - form builder functionality and API is coming soon. Trying to find some time to finish off, but it's 80% there! Stay tuned.. Agreed, partly why #824 was taking so long. My new code is 95% contained in its own modules so won't cause me too much pain when it is ready to merge.\nModule at a time might make it easier to review and reason about, if that's possible.. Hi @pierlon - thanks for the fix. Yep, the whole validation and submit flow is missing at the moment, feel free have a go at linking it up. It'll probably need to be a combination of the two locations as it's the same submit flow regardless of whether a form is present, hover it would probably be a good idea to have the main form handler in the forms modules.. Sounds reasonable in the short term, but with the dynamic form builder api coming in the future (where there can be multiple inputs) i don't think this will work well as you will need to validate multiple fields and return error messages for each. Will this break SSR with window not being defined?. Bear in mind this won't autoprefix the styles like the gulp task does, hence why I made it pull in the dist. We either have to pull in the dist or duplicate the sass build pipline in rollup and gulp. ",
    "taxpayer": "Just a small thank-you message, @limonte: don't disappear. You had a very\nimpressive will power to take a good project that was not properly managed\nand changed the game completely. As a Swal user since the very beginning, I\nthank you for all you did and is still doing. And I hope to see other\nprojects of you also. :-)\n. @jdussouillez, I use and follow the SweetAlert project since the original developer launched it. And I also tracked the project from a fork that is called \"SweetAlert2\" since then. This project, Swal2, is not \"only\" a fork since a long time ago. For some moment in the past, the developer even tried to take back the development of the original project, but Swal2 was (is) years (lines of code) ahead.\nNow the \"official\" project is Swal2, I don't think there's question about it. @limonte (and now the other guys that help) took a dead project and pumped it up. Many new features, many bug corrections, this is the living project.\nOf course there are many sites that still point to the original project. That was the way I also found it. But I can bet that the first search for a bug correction that does not exist in the original project will link the searcher to the Swal2 project. Then, the person, after searching and reading more about it, will clearly undersatnd which project s/he must follow.. @rosaiph O idioma padr\u00e3o para d\u00favidas e outras perguntas neste reposit\u00f3rio \u00e9 o ingl\u00eas. Mande suas d\u00favidas em ingl\u00eas ou ent\u00e3o procure ajuda no Stackoverflow em portugu\u00eas por tag: https://pt.stackoverflow.com/questions/tagged/sweetalert\n@gverni \"The standard language for doubts and other questions in the repo is English. Send your doubts in English or look for help in Stackoverflow in Portuguese using a tag: https://pt.stackoverflow.com/questions/tagged/sweetalert\" ;-). There was a question few weeks ago asking \"how would people know this project is the replacer of the original one?\". I answered that it would be a natural path to go to swal2 because, well, it IS the current well-mantained project. But I think that Swal2 in the trending repositories is a better answer to that question than mine... ;-). > This should be plainly stated.\nOh, yes, it is...\nhttps://github.com/sweetalert2/sweetalert2#browser-compatibility\n  . Ok, I got your point. But I usually focus on the Github pages on the projects I use, that's why I promptly sent you the link above. I also recommend you to do the same although, as I told before, I got your point.. @seanvree If you want multiple non-interactive alerts (or messages) at the same time, why don't you go with toasts?\nLook for the toast option in the configuration. . ",
    "toverux": "@limonte I'm also quite impressed by the energy you have put in the project. I use Swal on a regular basis, and Swal2 saved me from using another mediocre library that displays alerts, once Swal(1) got too old.\nSo yes, following your invitation, I would be very happy to help from time to time, on any kind of issues!. Thanks @limonte!\nI've just created my account on npm (under the username toverux).\nAlso, I've never published things on npm. I presume it's not sorcery (based on my experience with Packagist), but could you eventually write a little development guide for the contributors? Conventions about code, git, how you're publishing, etc.. core-js is the preferred polyfill, yes. It's pretty good and contains lots of polyfills.. Thank you all for your reactivity !\nIt's been a pleasure to solve that old issue.. Why separately ?\n@types/ is ihmo better when you are writing unofficial or semi-official types for a library. The workflow of DefinitelyTyped allows contributors to contribute to the typings without the agreement of the original library's maintainers. If @limonte had refused my .d.ts file, I'd put it on DefinitelyTyped.\nPersonally, I prefer seeing the types embedded in the library rather than having to install another package. Moreover, that guarantees you that the declaration is up to date. That's not always the case when types are declared separately.\nEdit 21 May 2017: just found this while browsing the web:\n\nIf you control the npm package you are publishing declarations for, then the first approach is favored. That way, your declarations and JavaScript always travel together.\nhttp://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html\nIf you are the library author, or can make a pull request to the library, bundle types instead of publishing to DefinitelyTyped.\nhttps://github.com/DefinitelyTyped/DefinitelyTyped. That's very unlikely that there is a syntax error in SweetAlert itself. Given the screenshot, I would say that this is a build issue, you're not compiling to ES 2015 source down to ES 5 in order to run in the browser.\nFirefox has partial support for ES 2015 and I don't even know if that's enabled by default.\n\nA valid configuraton for SweetAlert on Webpack 2 woud be to install babel-loader, and use something like that:\njs\n{\n    test: /node_modules.*sweetalert2.*\\.js$/, loader: 'babel-loader',\n    query: {\n        presets: [\n            ['es2015', { modules: false }]\n        ]\n    }\n}\nRemove the , { modules: false } part on Webpack 1. On Webpack 2, this preserves ES 2015 modules while still doing the transpilation. This lets Webpack apply tree-shaking on the library.. @limonte this is a step back, back to the times where there were no jsnext:main and module entry. With 6.2.7 they've lost their utility and could have been even removed in profit of the old main :/\nmodule is designed to point to the original source, or at least a source containing ES 2015 modules, which will let more control to the consumer on its build toolchain, and let tools like Webpack/Rollup do a smarter compilation (eg. tree shaking, even if that has no effect atm on SweetAlert due to its current structure, or it also provides better linking with the library than the legacy exports of the dist version).\nAnother inconvenient, for example: with the recently-added module, when I was using SweetAlert 6.2.6 in my application (compiled in minimified ES5), sourcemaps were showing me the original, beautiful, uncompiled source of SweetAlert. Now we'll see the intermediary, frozen ES 5 source of dist/sweetalert2.js.\nIn fact, with 6.2.7, we're restoring compatibility only with Webpack users that don't have a Babel setup for SweetAlert, and only them. For the rest of us, this is kind of a regression.\nI see two options:\n - Since module was an unforeseen breaking change (and I apologize for that), wait for the next major version to restore module and jsnext:main (so we stay fully compliant to semver) ;\n - Apologize to users like @rorc and pray them to add a line or two of configuration to compile SweetAlert using babel-loader (as an exceptional case of force majeure).. Cool!\nAlthough I also prefer the second solution (much more convenient for recent setups), I must admit that it may generate some noise (like the two issues we got) and annoy some SweetAlert users like the OP. But technically speaking, yes, it's much better to let module bundlers access our original source, to push the JavaScript ecosystem forward.\nDon't hesitate to ping me on Gitter if we need further discussions about this and other distribution-related issues!\nEdit: oh, I may have a retro-compatible solution that brings a good compromise until next major. Will do some tests asap. I propose to keep the current state for now at least.. @limonte I just did some experiments.\nMy idea was to keep compiling ES 2015 into ES 5 (to keep retro-compatibility), but exposing the ES 2015 module untransformed (that's what [\"es2015\", { modules: false }] does in Babel.\nWith the original modules, Webpack can do a better job while linking the library (that was my point in the previous comments). Then, the import/exports are transformed in the Webpack-specific format.\nHowever... after some tests, here's my conclusion:\n\nTo keep retro-compatibility, I was still using ES 5, meaning that a big part of the motivation to provide a ES 2015 source is gone.\nWebpack is already doing a great job with the current UMD distribution, and the resulting JavaScript is technically the same from the consumer PoV (This is only the case because 1) Webpack is cool and ; 2) the library cannot be tree-shaked since it only exports a big functiono-namespace as the default export, and not separate symbols.)\nThe resulting JavaScript was heavier using native modules at the source: 95 kB using modules and 75 kB using the UMD dist. But, but, I think that's just Rollup using shorter internal variable names, different indentation, etc, so that difference should vanish after minimification.\n\nSo. We still have the two solutions, because an intermediary one (ES 5 + ES 2015 modules) has zero advantages.\nAfter those experiments, I think that we should keep distributing the UMD version for everyone, so let's forget about jsnext:main and module for now. These do not bring major advantages without breaking compatibility with an undeterminate number of users.\nBut the original idea is still the future we want. When next major arrives, we could restore src/sweetalert2.js as the entry point for module bundlers. And tell users to setup babel-loader.\nAfter that, we'll be free to apply some changes in the API that allow tree-shaking (which is not possible with UMD and other legacy formats). For example, with some BC-breaking changes, an user that don't use the \"queue\" feature won't see Webpack including queue-related code. We can go further, even with styles, and the user could save lots of bytes at build time.\nSorry for those long paragraphs :). > So, if I understand you right, we should remove jsnext:main and module for now and bump a new release version, right?\nNot necessary :) They have absolutely no effect right now, so, yes you can remove them, but that's not urgent. The best is to restore \"jsnext:main\": \"src/sweetalert2.js\" and remove the unused module.. Hi,\nYes, you have something like that, but it's way better. It's the preConfirm option.\nIt gets executed when the user clicks the confirm button (no joking!)\nAssign a function to it, that must return a Promise. When the promise is resolved, the next step is shown. If the promise is rejected, the rejection will be displayed as a validation error.\nSo, you can control the transition to the next step, display an error, and even do the validation asynchronously, thanks to the promise.\nES2015 example:\n```js\nswal.setDefaults({\n    input: 'text',\n    confirmButtonText: 'Next',\n    animation: false,\n    progressSteps: ['1', '2', '3']\n});\nswal.queue([\n    {\n        title: 'Question 1',\n        preConfirm: answer => new Promise((resolve, reject) => {\n            resolve(answer); // validation ok, go to next step.\n        // or:\n        reject(`Answer \"${answer}\" is invalid.`);\n    })\n},\n'Question 2',\n'Question 3'\n\n]).then(\n    (result) => {\n        console.info(result);\n        swal.resetDefaults();\n    },\n    () => swal.resetDefaults()\n);\n```\nSee the implementation itself: https://github.com/limonte/sweetalert2/blob/master/src/sweetalert2.js#L405. It is probably a build issue on our side, or yours.\nCould you provide the minimal Webpack configuration to reproduce?. I agree with @birjolaxew, commits are still rare on the original projects, and sweetalert2 is actively developed and received lots of bug fixes and features. I don't know what are the feels or t4t5 about its own library, since it's its most successful work on GitHub, probably he just lacked of time and the project is gone a bit out of hand with all the PRs and issues.\nBut ihmo and technically speaking, yes, swal2 could make a good, official successor, of swal. And I'm also very sad to see all the people continuing to post issues and PR on swal, whilst those would be welcome here.\nTwo ideas thrown in the air:\n - If swal \"1\" stays online and maintened as it is now, at least add a little note leading to this project in the readme, as an alternative. This looks fair ;\n - Moving the project into a more neutral zone, like a \"SweetAlert\" organization where we could have repos for the library, examples, or even a bootstrap variant, who knows. A bit scifi-esque atm but if we could get the projects \"merged\" one day, it would probably be the best.. @readme42 I presume you're using TypeScript 1.x?\nPlease try my test branch to fix this by running npm i -S toverux/sweetalert2#fix/named-exports, and use the import syntax import swal from \"sweetalert2\";.\nThat should work.\n@limonte I think that's because older versions of TypeScript don't like implicit default exports. By changing the way we export the lib using named exports, that should work everywhere, and fix usage in TypeScript 1.x. TypeScript 2.x support implicit default exports for interoperability if I remember correctly. Before upgrading to TS 2 in one of my apps, I also had to use import swal = require('sweetalert2');, otherwise it would have resulted in the same error.\nSee https://github.com/toverux/sweetalert2/commit/13867fd217d4dfd71ab90497af72bf7f9a64d090. Ok, I'm back in the game after a few days afk.\nI understand why it breaks with Webpack 1.\nAs you may know, TypeScript does not come with a compatibility layer concerning default imports. For example, Babel will check if the imported value has the property __esModule: true, and if so, takes the default property. If the imported value or object haven't the __esModule marker, then the raw value will be taken as the default.\nTypeScript doesn't do that. It hardcodes .default in the output JavaScript. That's why named exports work well with TypeScript in its default configuration.\nNothing changes in TypeScript 2. But, with Webpack 2, you may want to modify your tsconfig.json to add :\njson\n{\n  \"compilerOptions\": {\n    \"module\": \"es2015\"\n  }\n}\nWith this, TS will still compile your source down to ES 5, but will let import / export declaration untouched. Then, Webpack 2 (that understands ES 2015 modules) will apply its own default wiring when compiling in ES 5, Webpack-specific format. No more .default but a lovely compatibility layer, similar to the Babel's one. That's why Sweetalert on Webpack 2 with the right tsconfig.json works out of the box.. See #391 for progress and https://github.com/toverux/sweetalert2-build-demos/tree/master/webpack1-typescript2 that I've just created to test it (I will add more configuration combinations later).. @limonte sorry for the delay, had no time to work on SweetAlert those last two days :/\nI approved the changes. I've already tested it with TypeScript and ES 2015 and it works.\nBe aware that some old setups, like a project based on an old Browserify version, will break with this change.\nFor example, var sweetalert = require('sweetalert2'); will work on most setups today (ES 2015 with its named default export is 2015 and we're almost in 2017), but older projects may encounter issues, and will have to change to var sweetalert = require('sweetalert2').default;.\nNothing terrible, just hoping this won't happen. Anyway, named exports are the best today!. @limonte Yes I wanted to add a comment about the tests, but my Internet blew up at that moment. They're probably failing for the reason I exposed in my first comment ; when those tests have been configured? Very sorry, I don't have much time to help until tuesday :/. Thanks @limonte, I work too much with module bundlers, forgotting that some people use ",
    "mumairofficial": "@rafael-renan-pacheco you are right about responsive. Margins are missing that's why it look ugly. Can you please provide me quick solution to fix this. Because it inject <style>...</style> tag in page upon rendering which miss some properties like:\nmargin-left: 15px\nmargin-right: 15px\nleft: 0\nright: 0\nwidth: auto !important\nnote: above properties I have copied from old version of sweetalert lib\n. I have tried overwrite solution as well. But I failed to set margin-left: 0 !important which is already set\n. @limonte Thank you for quick response. Unfortunately I wouldn't able to do this on fiddle but problem which I found is here\nhighlighted div with styles are automatically generated display: none One thing more if I call swal({...}) second time then overlay works fine!\n\n. You'r right! I am digging into my project code :+1: \n. ",
    "OmikronTheta": "I was having this same problem because I attached a sweet alert to an SVG button and SVGs do not support the blur or focus method.  My solution was to edit the sweetalert.js to add this check to the focus setting.\nif (window.previousActiveElement && typeof window.previousActiveElement.focus == \"function\") {\nCouldn't we just get this added to the base library?  Seems like a pretty simple change and I can't see how if would cause any problems.. I didn't mean to change, I meant to add the && condition to the IF statement.  This way if the \"previousActiveElement\" doesn't support FOCUS you won't get an error from sweetalert.  \nRight now my application uses a lot of SVGs and SVGs do not support focus or blur, so if I show a sweet alert from an SVG and it is the \"previousActiveElement\" I get an error from sweetalert \"object doesn't support that property or method\" etc.\nI had to add this and condition to the check to prevent this error.. Correct but I had to add that and condition myself it's not part of the original code. I think it should be. I don't want to have to hack it in everytime I pull down a new version. Does that make sense?. ",
    "ilaif": "@mumairali Did you figure out the source of this bug? I'm also experiencing it atm.\nThanks! \n. ",
    "dllsystem": "``` javascript\n$(window).resize(function () {\n    var modal = document.querySelector('.swal2-modal');\n    if (modal) {\n        var height = modal.clientHeight;\n        modal.style.marginTop = '-' + parseInt(height / 2, 10) + 'px';\n    }\n});\n// -----------------------------------------\nvar body = document.body; // ! important\nbody.style.overflow = 'hidden'; // ! important\nswal({\n    text: 'Update your comment:',\n    input: 'textarea',\n    inputValue: currentComment,\n    confirmButtonText: 'Update',\n    showCancelButton: true,\n    inputValidator: function(value) {\n        return new Promise(function(resolve, reject) {\n            if (value) {\n                resolve();\n            } else {\n                reject('You need to write something!');\n            }\n        });\n    }\n}).then(function(result) {\n    body.style.overflow = 'visible'; // ! important\n}, function(dismiss) {\n    body.style.overflow = 'visible'; // ! important\n    if (dismiss === 'cancel') {\n        swal(\n                'Deleted',\n                'Your comment is deleted',\n                'error'\n        );\n    }\n});\n```\n. ",
    "nifflerco": "There is no clean solution yet?\n. @limonte thanks for letting me know, I think it's up to iOS developers to fix this... I will keep looking for the solution, in case I find it, I will let you know.\n. ",
    "iChaosren": "Because SweetAlert2 doesn't work on IE9 or Earlier.\nAs long as you include promise.min.js it works on IE10 and IE11, but sweetalert2 does nothing when called on IE9.\n. Couldn't agree more.\nBut my superiors, couldn't disagree more.\nIt's fine, I'll just tell whoever complains to update their computers.\nLazy bastards.\n. ",
    "joshuabremer": "@XSupermanX @samturrell If anyone is looking at this issue: I made a PR to fix the javascript to work for IE9:\nhttps://github.com/limonte/sweetalert2/pull/204\n. @XSupermanX @samturrell I made another PR that adds 9 lines and makes the CSS display correctly in IE9. No animations, but the icons display properly.\nhttps://github.com/limonte/sweetalert2/pull/205\n. I don't disagree that people should upgrade, but working in corporate environments change this substantially. Also supporting older customers, like people over the age of 60 usually involves having your software work on IE9.  jQuery supports IE9, Ember supports IE9, therefore we used those tools. \nSeems short-sided to make a principled stand against IE9 even though the proposed PR made the resulting library smaller and more consistent. \n. @limonte I'm not actually asking you to support IE9, I'm just changing the code to unofficially provide support for IE9. I'm not asking you to actually support it. My co-worker was about to give up on the library, but we found out that changing that one line made it work in IE9. hasClass is a function you provide that works in all browsers, and you're using it elsewhere in the code. If anything, it actually makes the code smaller.\n. ",
    "yeomann": "Hi @samturrell,\nmade those indentation to two space. So the reason behind using two space is too make commit less big?\nps: its still saying line too long. :anger: \n. sorry guys didn't know that stupid four or two lines indentation could create such fuss.\n. @limonte, The previous fix was tested on 9.1. New commit is tested on 9.3.2, again on my iPhone. Please have a look if all looks good on your iPad? Thanks\n. @limonte  @samturrell  any news on new commit guys? or @Tonkpils could you please have a look at the new commit?\n. @limonte i will be testing on ipad today. Lets see what wrong on ipad!\n. @limonte  Tested on IOS 9.3.1 Ipad mini retina\n\n. @limonte  yes i observed it, not sure what causes it to go on top of screen. but i also observed that my solution simply blocks the touch ability;hence no touch move on focus. I believe there should be a bit of room for touch to go up and down. Specially for smaller screens or so as whole container is not move-able/seen-able.\n. @limonte  true. i agree! i didn't expect this PR to be merged as well as i am also not happy with the iPad results.\n\nThe main problem in iOS for me is that user after interaction with the modal isn't there where he was at the moment of launching swal2,\n\nedit: specially above quot! it's annoying, i do have idea or so to tackle this.  I will check what can i do for that.\n. @limonte really would like to solve this. But i am sorry don't have ipad or access to ipad at the moment.  Don't know how can i convey this solution. Will try to get a hold of one by this weekend, Hope so.\n. +1 @limonte looking great\n. @gouhary  its seems to be working now. Tested on iPhone 5 ]\n. do you mind addition of overflow: hidden; under html,body{}, i am pretty sure it will work.\nPS: it worked for me on my iphone. how come it didn't work on your ipad! interesting.\n. OR do you mind adding yourself  like this \niosfix.innerHTML = \"html,body {height: 100%; position: relative; overflow: hidden; }\";\nand see if this solves the issue?\n. ",
    "orangecoding": "That is strange. seems to work now. Had the problem with latest chrome and safari. Will test this again on monday..\n. @limonte @Tonkpils Cannot be reproduced. I swear the problem was there. In my own code as well as within the fiddle. Anyways. It seems to be gone now. Therefor I'll close this issue. Thanks.\n. Sorry can be closed. Was an issue at my nexus repo \ud83d\udc4d \n. This is a bug that must have been introduced in some of the later versions as I'Ve updated today from 5.2.1. In 5.2.1, sweetalert worked ok.\n. ",
    "thisisevan": "3.1.1.  I can try via the cdn now too.\n. I'm running this through rails and rails-assets, which takes a bower package and turns it into a rails gem (which seems like the problem) so I can't specify the precise file name, however I'm assuming it uses dist/sweetalert.js.  I haven't had a problem with rails-assets before, but if the bower package works on your end I'll find another solution and close the issue.\n. That does seem to be the problem.  The gem is pulling in sweetalert2.common.js instead of sweetalert2.js.  Unfortunately I can't use the fix you referenced because the gem only pulled in the common.js file, so I can't manually specify anything else. \n. I just switched over to using the cdn and everything is working again.  I'll be using this until I have time to look further into rails-assets.\n. ",
    "Atrox": "I currently have the exact same problem. rails-assets is not including the dist/sweetalert2.js which seems to be the problem.\nI think it relates to the bower.json: \"main\": [\"src/sweetalert2.js\", \"src/sweetalert2.scss\", \"dist/sweetalert2.css\"],. It looks to me that rails-assets is not including the dist/sweetalert2.js because it is missing in there. Is there any specific reason that the dist version is not included there?\nThanks,\nAtrox\n. Hi @samturrell ,\nthank you for the fast response. I'm talking about the bower.json. As far as I know, bower is mostly for client-side stuff, so it seems to me it should definitively include the compiled versions.\nThanks,\nAtrox\n. Hmm, you are right. Then it is probably just rails-assets fault for not including the other files too. I will just stick to an older version then.\nThank you for the help :)!\n. Thank you @limonte!\nRails Assets is including the correct file now.\n. ",
    "g0ral": "I'm adding custom datepicker in modal and I needed to call datepicker script on element in description HTML.\nonInit is useful when you want to modify / run custom scripts on html in modal\nonOpen can be useful when you want to run some js code on modal when it is open\n. https://chmln.github.io/flatpickr/ for one example\n. Whoops, you are right :) I have overcomplicated it. Pull request can be closed.\n. ",
    "hellsan631": "All of the previous promise libraries i've used supported finally, its a bit weird to see that native doesn't support it. The idea is to do some cleanup when the promise and any subsequent .then() have resolved.\nhttps://github.com/domenic/promises-unwrapping/issues/18\nI'm currently using this for a dialog library in an angular 2 application. Here is a use-case example:\nI want to track when a modal is open, and perform some logic on modal open and modal close events. In this case, its applying a blur class to the root application component, so the background comes out blurred and slightly grayscale.\n``` ts\nclass LoggerService {\n  events = new EventEmitter();\ndialogConfirm(title: String, text?: String, confirmText?: String, cancelText?: String): Promise {\n// notify subscribers that the event window has opened.\nthis.events.emit({value: 'open'});\n\nreturn swal({\n  title: title,\n  type: 'warning',\n  text: text,\n  reverseButtons: true,\n  confirmButtonText: confirmText || 'Yes',\n  showCancelButton: true,\n  cancelButtonText: cancelText || 'No'\n})\n.finally(() => {\n\n  // notify any event subscribers that the modal has closed\n  this.events.emit({value: 'close'});\n});\n\n}\n}\nclass TheLeagueAppComponent implements OnInit {\n  modalOpen: boolean;\nconstructor(\n    private _logger: LoggerService\n  ) {\n}\nngOnInit() {  \n    this._logger.events.subscribe(event => {\n      this.modalOpen = event.value === 'open';\n    });\n  }\n}\n```\nAnd lets say I want to do run a dialog, perform some logic in subsequent functions, and then close.\nts\nonDeleteMember(id: string) {\n  this._logger\n    .dialogConfirm('Delete Member', 'Are you sure?')\n    .then(result => {\n      if (result) {\n        return this._http.delete(`api/member/${id}`);\n      }\n    });\n}\nHere is an example the effect in action\nBlur:\nhttps://i.gyazo.com/904c86268241534037b01d4da0a741da.png\nCurrently, as a workaround, I'm using a then() callback which Promise.resolve(result) resolves the returned value (in the case of a confirm dialog), but ideally I want to emit the event on full promise resolution, not as the first event after the modal has closed.\n\naside\nI'd really like to thank you for updating the sweet alerts library. I've used the sweetalert library before for something similar, but there were a few hacks I needed to inject to check the dom on the open/close events, and this updated version makes it a ton easier. Its also great to see native promise support, and a commonJS version (which I'm using in my angular 2 applications)\n. The reason why is the execution sequence. I want to perform the cleanup actions after the entire promise chain has resolved.\nConsider this:\n``` js\nsuccess()\n  .then(() => console.log('results 1'))  // for sake of argument, console.log returns a promise\n  .then(() => console.log('results 2'));\nfunction success () {\n  return swal({\n     ...\n  })\n  .then(() => console.log('cleanup'));\n}\n```\nWhat would you get in the console when you closed the dialog?\ncleanup\nresults 1\nresults 2\nThis is not ideal, because perhaps you want to execute something after your done with your promise chain. Now consider with finally() implemented:\n``` js\nsuccess()\n  .then(() => throw new Error('result 2 error'))\n  .then(() => console.log('result 3'))\n  .catch(err => console.log(err.message));\nfunction success () {\n  return swal({\n     ...\n  })\n  .then(() => console.log('result 1'))\n  .finally(() => console.log('cleanup'));\n}\n```\nWhat would you get in the console when you closed the dialog?\nresult 1\nresult 2 error\ncleanup\n\nAnother more complex use-case. Perhaps you want to go about disabling/setting a loading bar to 100%. (this is just some rough code, but outlines the problem with not having access tofinally())\n``` ts\nclass LoggerService {\n  constructor(\n    private _loadingBar: LoadingBarService\n  ) {}\nconfirmProgress () {\n    return swal({\n       ...\n    })\n    .then(result => {\n  // If we hit 'yes', then enable our loading bar as the first thing in the promise list\n  if (result) this._loadingBar.enable();\n\n  return Promise.resolve(result);\n});\n.finally(() => {\n\n  // When the promise chain has finished, set our loading bar to 100%\n  this._loadingBar.setPercent(100);\n\n  setTimeout(() => this._loadingBar.disable(), 6000);\n});\n\n}\n}\nclass UploadComponent {\n  constructor(\n    private _logger: LoggerService,\n    private _uploadService: UploadService\n  ) {}\nsubmit (images) {\n    this._logger\n      .confirmProgress('Do you want to upload both images?')\n      .then(result => {\n        return new Promise((resolve, reject) => {\n          if (!result) {\n            return resolve(false); // If we don't want to upload, just resolve the promise\n          } else {\n        // Upload both images, then resolve the entire promise chain here\n        this._uploadService\n          .upload(images[0])\n          .then(() =>  {\n            return this._uploadService.upload(images[1]); \n          })\n          .then(resolve)\n          .catch(reject);\n      }\n    });\n  });\n\n}\n}\n```\nThis can be done in a different way, by setting the progress bars in the UploadComponent. In this case, however the upload component's scope is tightly bound to only deal with the actual submission and upload of the two images. The UI and other services should be able to handle themselves without any necessary interaction between them.\nWithout a finally() method accessible in the initial return promise for swal, interaction like the one described above is impossible. finally() just allows greater flexibility in the above use-cases.\nAt the moment, if I needed to implement the described system above, I could wrap the swal promise in another promise which has access to finally(), but ideally I would like to avoid that if possible.\n. Oh nice. Didn't know that was all I needed to do to enable promise finally support for swal. Thanks!\n. ",
    "dbraddillon": "Yes!  I'm wrapping the library and trying to read some bootstrap styles/colors and apply them dynamically to the sw settings.  I'm changing the confirm and cancel button colors directly.  Is there a correct way to do this or a better example I can follow?  It's working as far as changing the colors so I thought it was fine.\n. I think I'm good now, I am not getting the error, and I'm getting my styling, it's not as nice and neat as it was before with using the defaults but I'll tinker with it later.  For now it works and can be refactored at a later time.  Thanks for the help! \n. ",
    "emilkje": "Sorry for the late reply, and thanks for getting back to me @limonte :) Here is a demonstration of the behavior I'm aiming for: https://jsfiddle.net/97rmk6ap/. This is part of a bigger in-house prompt system, but I've tried to reduce the code to its bare essentials.\n. Thanks mate I will look into it. You can close this issue and I will open another if necessary.\n. ",
    "nschubach": "I know this is closed/old (and hopefully you catch this message), but should/could those be allowed to be set to null to not have inline styles?  Using !important to override an inline style is so bad.. ",
    "mattbrunetti": "@nschubach If it doesn't already work like that, I think it's a reasonable idea for a change. Does it not work like that?\nIMHO Ideally, in addition to being able to set these options to null, null would be the default for all of them, and what were previously the defaults would go into the sass files. Inline styles trump class styles (/w exception of !important styles) so it would be a non-breaking change.\nJust my two cents, not sure anyone cares about this issue though.. Awesome! I installed this package just in time. \nWe have to theme swal2 to match our Twitter Bootstrap themes (our app actually has multiple themes). This feature will make doing so much easier and error-proof. \nAll I have to do (besides setting the classes to apply to the buttons) is set the swal2 sass variables using the bootstrap sass variables. \n@limonte Are you interested in adding the bootstrapColors.scss file into this project, since likely so many people use this package with bootstrap?. We're using Bootstrap 3 since Bootstrap 4 isn't officially released yet.\nI guess if support for Bootstrap variables was added we'd want support for versions 3 and 4.\nI would gladly open a PR to add support for version 3. @AlexSwensen The proposal, which I wasn't all too clear about, was to provide an extra scss file that you can @import after your bootstrap variables are set and before you @import sweetalert2.scss, optionally, if you are using bootstrap. So the styles wouldn't depend on bootstrap, just add a bit of extra support for those who use it with bootstrap.. @smolleyes Try electron instead. It's better that nwjs anyways.. @limonte I'd be honored. Just complicated that my collaboration so far has been at work, and management probably wouldn't approve of me getting too involved on their dime. \nBut I may have some free personal time this weekend for #485 part B, and I can't help but always check what's going on here :)\nSo yeah, I'd love to be a collaborator, but going forward I should use my personal Github account @zenflow (yeah, kinda lame I have to have two Github accounts)\n:beers: . @limonte @toverux Does the same go with the API for the inputValidator method? It should signal a validation error (which is a user error, not a technical/system error) by resolving with the validation message, rather than rejecting with the validation message, right? A falsy resolution value would signal that validation succeeded.\nThe control-flow is not as bad here, but I think in principal we should not mix user errors with actual technical/system errors.. It makes it difficult to debug actual errors thrown inside the function. Also, if there are any errors in production, I want them bubbled up to Rollbar error reporting.\nSame goes for rejections in preConfirm; I think they should be treated as real errors instead of a user validation message.\nThat said, to support validations for the \"multiple-input\" scenario, could we always call the function, even if input option was not provided?. Same, we're using it with Angular 1 and we have a pretty thin wrapper around it that makes it an AngularJS service. \nIt adds some AngularJS integration, so if a controller is passed in through options, the swal2 modal is compiled as a template with the instantiated controller on it's scope. This way we can support the \"multiple inputs\" scenario as exemplified in the examples, but with AngularJS instead of jQuery.\nIt would be nice to collaborate on these kinds of further enhancements, but I think there's really not that much to collaborate on?\n. Since we expect this module to be wrapped, I think there is one change that would make it a bit cleaner. \nThere are some methods that aren't defined until the first popup get's called, so I have this at the bottom of my wrapper\n```\n// Copy all methods over, including ones that won't be defined at this time\n  const methodNames = [ 'isVisible', 'setDefaults', 'resetDefaults', 'close', 'enableButtons', 'getTitle', 'getContent', 'getImage', 'getConfirmButton', 'getCancelButton', 'disableButtons', 'enableConfirmButton', 'disableConfirmButton', 'showLoading', 'hideLoading', 'clickConfirm', 'clickCancel', 'showValidationError', 'resetValidationError', 'getInput', 'disableInput', 'enableInput', 'queue', 'getQueueStep', 'insertQueueStep', 'deleteQueueStep', 'getProgressSteps', 'setProgressSteps', 'showProgressSteps', 'hideProgressSteps' ]\n  methodNames.forEach(methodName => {\n    alert[ methodName ] = (...args) => swal[ methodName ].apply(swal, args)\n  })\nreturn alert\n```\nIf all of these methods were defined when the module is loaded, I could use some less-brittle more-final code like this\n```\nObject.keys(swal)\n    .filter(key => typeof swal[ key ] === 'function')\n    .forEach(key => {\n      alert[ key ] = swal[ key ].bind(swal)\n    })\nreturn alert\n```\n. @limonte Does my last comment, in regards to making this package easier and cleaner to wrap, make sense? Do you see this as a valuable change?. @vexilo This package may soon be separating validation errors (user errors) from real errors (system errors). See issue #485.\nThe intended purpose of the message display you're referring to is validation errors, so I imagine it won't be automatically wired to display system errors; I think that responsibility would be out of scope of this package, though I can't say for sure.\n. You could use the onOpen option and the swal.getInput() method. Use an <iframe> element within the html option, or fetch the aspx page with AJAX and pass it in for the html option. Correction: This fixes just the first part of #485, dealing with promises returned by swal, as requested. The issue should remain open to discuss the second part, dealing with promises returned to swal by preConfirm and inputValidator options. . @shabuninil Set the useRejections option to false. @limonte What time frame are you looking at for this release? \nIt would be nice to have the expectRejections option also in the current major (v6) before changing the defaults for both to false, though not totally necessary.\nEdit: expectRejections refers to the 2nd part of #485 . I just made up the name (alternate suggestions welcome). I reason that this behavior should be under a different option than useRejections since some people are already using useRejections=false and having that also affect some new behavior could cause them problems, if their code relies on how rejections within inputValidator and preConfirm are handled. If that makes sense?. I think it would be easier for users to adapt to both of these changes to default behavior in one step rather than 2, since they are very similar.. @toverux You're right, I guess there is no need to implement it in v6 at all. \nGreat, if this release can wait a few days, I will plan to close off #485 this weekend :)\n@toverux See my edited comment and let me know if it makes sense. Using promises within a Promise constructor is an anti-pattern. Using them in this way makes them basically just a glorified callback system, with the same pyramid of doom possibility, and misses the point of promises.\nThe Promise constructor should generally only be used for low-level bindings to async operations.\nThis example should be rewritten without the Promise constructor, and use promise chaining instead:\njs\n{\n  preConfirm: () => {\n    return $.get(ipAPI)\n      .then((data) => {\n        swal.insertQueueStep(data.ip)\n      })\n  }\n}. ",
    "mehmetalidumlu": "Hi @limonte, thanks for help.\nI added this script and problem resolved. But \"OK\" button and background click event not working in IE 11.\n. ",
    "jennyanthony": "How do you add Promise polyfill without bower?\n. ",
    "daerogami": "Came here from google; so just for reference this is what I added to my main page to prevent it from loading on non-IE browsers (borrowing from @samturrell's example):\n<!--[if IE] Conditional comments do not work on >=IE10 w/o quirks mode enabled>\n<script src=\"https://cdn.jsdelivr.net/es6-promise/latest/es6-promise.min.js\"></script>\n<![endif]-->\nIf you need to target a specific version, see here: https://msdn.microsoft.com/en-us/library/ms537512(v=vs.85).aspx. Confirmed that this was caused by an angular wrapper. This one properly forwards swal's promise type.\n. ",
    "nmiddendorff": "Adding core-js is the fix for IE. I tried adding the es6-promise but the button clicks still did nothing. After adding core-js it worked as expected.. Credit to @toverux .\nAdding core-js is the fix for IE. I tried adding the es6-promise but the button clicks still did nothing. After adding core-js it worked as expected.. ",
    "macpham": "Thanks for the quick fix @limonte \ud83d\udc4d \n. ",
    "AmitMY": "Wow thanks!\n. Hey, it still gives me that error.\n```\n\nsweetalert2@3.3.5 postinstall D:\\wamp\\www\\Sites\\megaflex\\node_modules\\sweetalert2\nif [ -d .git ]; then git ls-files dist | tr '\\n' ' ' | xargs git update-index --assume-unchanged; fi\n\n-d was unexpected at this time.\nnpm ERR! Windows_NT 10.0.10240\nnpm ERR! argv \"D:\\Program Files\\nodejs\\node.exe\" \"D:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"sweetalert2\" \"--save\"\nnpm ERR! node v4.4.3\nnpm ERR! npm  v2.15.1\nnpm ERR! code ELIFECYCLE\nnpm ERR! sweetalert2@3.3.5 postinstall: if [ -d .git ]; then git ls-files dist | tr '\\n' ' ' | xargs git update-index --assume-unchanged; fi\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the sweetalert2@3.3.5 postinstall script 'if [ -d .git ]; then git ls-files dist | tr '\\n' ' ' | xargs git update-index --assume-unchanged; fi'.\nnpm ERR! This is most likely a problem with the sweetalert2 package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     if [ -d .git ]; then git ls-files dist | tr '\\n' ' ' | xargs git update-index --assume-unchanged; fi\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs sweetalert2\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!\nnpm ERR!     npm owner ls sweetalert2\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     D:\\wamp\\www\\Sites\\megaflex\\npm-debug.log\n```\n. Success!\nThanks a lot\n. Amazing! thanks\n. Thanks!\nThe only other thing I noticed is that type: \"input\" fails..\nIf Ill find time I'll make a migration tool.\n. Of course it does not cover everything. It is not even backwards compatible. but it does throw warnings on all of the Wiki differences, tries to fix stuff, and is very easy to improve.\nIt was a QUICK tool. Don't usually have time for stuff like this, but decided to make an exception because you were quick to respond and help in other issues.\nThanks!\n. Well, history should not determinate the future in my opinion, Really think you should consider changing it\n. In my opinion, because all do the same action, they should do reject()\nThat way, if there is a promise in the SWAL, and it rejects, it will normally reject(error), such that you can handle by checking if(error)\nAnd if not, and the promise sends reject() it means just 'close' - no nead for error handling.\nThis removes the check if(isConfirm), and uses the build in promise rejection\nWhat do you think? Where am I logically failing?\n. Yep, this is a good structure in my opinion.\nThanks a lot for listening, I know breaking stuff is not your priority :)\nIt is good, because if you have a promise with reject, like an AJAX request, the rejection sends 3 or 4 parameters, so you can always know what is the source of an action.\nCheers\n. Thanks!\n. Thanks, didnt see that one\n. JSFiddle:\nhttps://jsfiddle.net/ad3quksn/3/\nThe expected behavior is having an HTML audio\nActual behavior: showing text 'true'\n. Thanks!\n. ",
    "JAKgit": "It is a complete blank page with nothing in it, so I don't think so.\n. It only happens when the HTML file is blank. So don't worry that won't happen in most cases.\n. ",
    "fourstacks": "I've just run into this very problem when upgrading from swal1 to swal2 (by the way - big thanks to @limonte for taking the project on).  Haven't had a chance to dig into the internals of swal2 properly but @AmitMY's suggestion makes good sense to me.  I guess this change might break BC a bit though it certainly feels more like the right way to handle the modal cancellation.\n. Awesome, thanks @limonte (and @AmitMY for opening the ticket)!\n. ",
    "hartjo": "thank you so much\n. ",
    "sembrex": "Hi, @limonte \nIt works, thanks.\nInstead of adding \"done\" after each swal, i put it in sweetalert2.js line1129 right after closing Promise\nworks great for me\n. ",
    "ltvan": "As issue with .done() as explained in #324, you can create a noop variable instead, like angular.noop.\nFor linter, just write as below:\nfunction noop(){\n  // do nothing\n}\n. @alex-shamshurin: it's not because of Error object. That's the \"unhandled rejection\". @limonte adds .done() method which is alias of .catch(function(){}) but it does not replace the .done() method of Bluebird. Check #324 for more information.\n. You can still keep your code as it is, but it's should be depreciated and update the document to let user know about the best way to do. At least, they won't get headache like issue #213. Your solution won't work.\n. But you are referencing es6-promise as required dependency and it downloads every time I install your bower package.\n. ",
    "RichieMcMullen": "Excellent, thank you!\n. ",
    "sunnywalker": "Is there a way to grab select options via AJAX per this request? I've tried inputOptions: $.getJSON() since the $.getJSON() method implements the Promise interface (which the swal2 examples infer), but then my select only shows methods. Do I need to create a new Deferred object and work from that? Any guidance would be helpful.\n\nEdit: I've confirmed that the .getJSON() is firing on the swal() call and returning an object in the expected format.\n. ",
    "carter-thaxton": "I just tried this, and this fix only seems to prevent scrolling of the background.  The screen still 'jumps' and scrolls vertically to the center of the page when the keyboard is focused, which is the main problem identified by #136.\n. ",
    "kalpitpandit": "Sorry for late reply @samturrell @limonte .\nI have created small app with webpack and sweetalert2. I have mentioned the errors near by particular statement in app.js. Here is the repository link https://github.com/kalpitpandit/sweetalert2-with-webpack.\nWould really appreciate your input on it. \nThanks. \n. @limonte Can you please open this issue as sweetalert2 is not working with webpack. \n. @acupajoe No. Bundle is getting build successfully. But when you run it in browser, You will see errors in browser console.\n. @limonte Thanks a ton for example. I will give a try to it and update here. \n. ",
    "ryanmortier": "@limonte Do I have to use the preConfirm option when using ajax?\n. Great, thank you. I've solved my ajax issue.\n. Thanks!\n. ",
    "sibelius": "I think it is worth puting in the readme the webpack usage:\njs\nrequire('sweetalert2');\nrequire('sweetalert2/dist/sweetalert2.css');\nyou also need to import sweetalert2.css to work properly\n. ",
    "Coriou": "\nhttps://jsfiddle.net/limon/w1yvhnjk/\n\nThanks. Well, I guess you're using Chrome - or another WebKit based browser.\nTwo things here :\n1. In Firefox, the browser I was using for my tests, it doesn't change anything\n2. In Chrome, my Fiddle doesn't work : it will never load the second SWAL modal... Not sure why though. I took my own code and simplified it to the minimum required for this issue, guess I screwed up somewhere.\nAnyway, the Fiddle was misleading. My problem is not with chaining SWALs or using Promises or anything like that actually. My problem is I want to the browser to know that a window.open() action on the confirm or cancel button is actually user generated so it's not caught but the browser's anti pop-up. I'm sorry if I'm not clear.\n. Yeah, I don't know how to fix it either. SWAL 1 didn't have this problem for some reason, I can only guess it's because SWAL 2 is using promises and the problem is most likely happens at a lower level than SWAL 2.\nI agree with you on the general idea that it shouldn't be there. But in my case, it really is the best place for it to be. I'm using SWAL to give my users a few options, and one of them is to open an URL in another tab. I could have a button in the content, but then the buttons in my modal would be kinda stupid : \"Click on this button in the content to perform action 1 but click on the button in the \"footer of the modal\" to perform action 2\". I don't see anyway around it.\nThanks for your help anyway :)\n. Hey @acupajoe nice trick indeed ! That's awesome, thank you for taking the time !\n. ",
    "isaiasmac": "Thanks @limonte \nIt works \ud83d\udc4d \ud83d\udc4d \n. ",
    "outluch": "You need es6-promise.auto, actually. Maybe es6-promise lib changed.\n. ",
    "fcpauldiaz": "Thanks Sam, it worked.\n. ",
    "sbnighut": "Thanks Sam, I had to call the $compile function in order to resolve my directive's HTML into pop up. \nI ran the following code after calling swal():\n$compile(angular.element('clone-directive'))($scope.$new());\n. Thanks limonte, this would help \n. ",
    "alex-shamshurin": "@limonte Ok.\nthis one \nswal(\u2026).done();\ndoes not suppress warnings. Promise is rejected by non error value, it's no matter what promises next are in the chain, then() or catch(), warning raised when reject was called.\n. Hmm, jsfiddle has no console output. To where bluebird will log? I think just reject(new Error('user cancel')) might be enough. Any reject(value) with non-error value causes bluebird to warn. \n. \"unhandled rejection\" ? But I get warning about reject with not error. \ndone() is done, but throwing a Error object is necessary in catch.\n. ",
    "fmieres": "And thanks for also giving me advice :)\n. ",
    "fracz": "IE10+ means that this lib can display dialog on IE10+.\nIt should not mean that you cannot use your application on IE10- even if you do not display any.\n. ",
    "thelastinuit": "@samturrell inputValue works for input select/radio type?\nNVM! I saw the jsfiddle, THANKS!\n. ",
    "knagyorg": "Hi I have the same problem. The problem is that page scrolls up when swal2 dialog appears.\nImagine you have TOS page with very long text, you have to scroll down, where is Accept button. But when check box \"I accept TOS conditions\" is not checked, I'd like to show warning dialog. But in that moment page scrolls up and after I close dialog, I have to scroll down again to reach Accept button.\nI tested it with sweetalert2 6.11.4 and the problem persists.. It looks like bug when combine Vuetify and Sweetalert2 (don't know in which library).\nReproduction Link\nhttps://jsfiddle.net/xvce8r9k/3/\nExpected Behavior\nWhen click on any button to show swal dialog the page content should stay on the same place\nActual Behavior\nPage content always scrolls up when swal appears - go to the end of page and click button. Changed in Vuetify library.. ",
    "MrPardeep": "@limonte How can we use these method's any working example would be great !!. ",
    "ZeeshanAdilButt": "These methods can be used in any options provided by sweet alert like:\nswal({\n            title: 'Please Enter Page Name',\n            input: 'text',\n            inputValue: someValuehere,\n            confirmButtonText: 'Save',\n            showLoaderOnConfirm: true,\n            onOpen: function (){\n                swal.disableConfirmButton();\n            }\n}). @limonte \nHow can I trigger something on any input into the sweet alert's text box, is there something like onInput or something similar. I need to use swal.enableConfirmButton() on input.. @slevy85 Thanks for the update.\nhowever, I found a better solution to achieve this at StackOverflow:\nswal({\n  input: 'text',\n  onOpen: function () {\n    swal.disableConfirmButton();\n    swal.getInput().addEventListener('keyup', function(e) {\n      if(e.target.value === '') {\n        swal.disableConfirmButton();\n      } else {\n        swal.enableConfirmButton();\n      }\n    })\n  }\n});\nThanks to @limonte . ",
    "slevy85": "If you want to allow the user to confirm the popup depending on his input youcan use the property inputValidator.\nswal({\n{...}\n inputValidator: (value) => {\n         return !value && 'Please give a value'\n        },\n})\nYou have some examples in the doc https://sweetalert2.github.io/#input-select. ",
    "Kiroteryn": "accidental repost https://github.com/limonte/sweetalert2/issues/228 with incorrect links anyway\n. @limonte are you sure.. that you know what you are talking about..? I was searching for an answer to my issue, and so many others have had similar issues which you just ninja close without actually resolving. You realize this is an issue tracker?\nEvery closed topic I can find has you commenting something like \"I don't understand\", links to a generic FAQ, or just closing the issue if you simply feel like not answering it.\nAwesome product, but man, you are the most toxic person I've seen here just looking at the closed ticket history finding an answer.\n. ",
    "jayelkaake": "How's this update?\n. Hey @limonte, it happens when you inject textboxes into a swal modal form dynamically. \nHere's the fiddle and here's how it looks:\n\n. perfect! thanks!\n. ",
    "kukac7": "@limonte sorry, my fault. \ud83d\ude47 \n. ",
    "waveminded": "That would be great!  I was just looking to see if it supported the type=\"tel\" for loading the number keyboard on mobile devices.\n. ",
    "phiter": "I needed a solution in order to make my input have a mask, so I used mask.js with this code:\nonOpen: function () {\n        $('.swal2-input').mask('0,99999');\n}\nPerhaps this could help on the masked input issue ;)\n. ",
    "imdadturi": "it doesn't work for me... still getting \n\nError: Uncaught (in promise): cancel. @limonte yes, made it work, thank you so much. there was some issue with referencing in my project. \ud83d\udc4d . \n",
    "angineering": "@limonte would it be an acceptable option to add a new parameter for reversing/changing default focused button?\n. Thank you very much! I really appreciate the quick turnaround on this.\n. ",
    "lwf804": "You can declare swal in component and add options: this.swal.allowOutsideClick = false;. ",
    "gverni": "Hi @lwf804 you don't need to do that. Setting the allowOutsideClick property when you fire the swal (or in the mixin) would be enough: \njavascript\n  Swal.fire({\n    title: 'Test modal with input',\n    allowOutsideClick: false\n  })\n. Hi @Herz3h can you provide a sample of your code using these instructions so we can debug it? . Hi @Herz3h i'm a bit confused. I tried your code here and it works for me both with and without showValidationError(). Note that I removed the onOpen implementation because i had a srange rendering issue with it. \nCan you explain better what's the expected behavior and what doesn't work for you? . > The inputValidator is not called. I think it'd be good that this function gets called so the user can validate custom html aswell instead of having to use preConfirm.\nAs explained originally, the inputValidator is only used when the input is defined through the input property of swal. And it couldn't be otherwise: if the input to the swal is defined through html, then swal doesn't know which of the element(s) is to be considered an input. \n\nSo even though the user input could be wrong, the last then block gets called, which is not what I want since input is invalid:\n\nThe only (and the correct) way to stop the swal promise to resolve (i.e. to execute the then block), is to use the showValidationError(). So this is the expected behavior. Please also note that this latter is deprecated and you should use showValidationMessage() instead. \nDoes it answers your doubts? \n. @MoussaOudihat have a look to this. If it doesn't answer your question, please raise a new question on stackoverflow. . Hi @rosaiph, can you translate your comment in english please?. Hi @rosaiph could you raise your question as an issue on https://github.com/sweetalert2/sweetalert2-examples? I'm going to help you there . @rosaiph I created an example of custom form validation here. Thanks @rosaiph. If you have any doubts with the example, then please just raise an issue on that repository (not this one). @hagolo @kshitish45 would you mind providing the full description of your problem with the code on a new issue? Keep in mind that you are using an outdated source for the sweetalert code (see here for the latest version) and you are not benefitting from the latest bug fixes / improvement.  . Hey @seanvree would you mind explaining the use case for that? A modal (by definition) is a child window that the user must interact with. If you have multiple modals the user still have to interact with them one by one. So you might as well have a sequence of modals instead, for example using queues and mixins. . Thanks @limonte. Sorry I didn't get to work on the theme repo yet as we discussed. Are you planning to have this implemented as theme in https://github.com/sweetalert2/sweetalert2-themes or as an option in sweetalert? . > Will you have time to start playing with the dark theme? \nSure, the sweetalert-examples is now in a better state (with html templating). I have a couple of low priority chores there, but it shouldn't take me too long. \n\nI didn't start it yet because I believe my skills in choosing color are terrible :D\n\nMine are probably even worse :smile: hence I wanted to copy the palette from Visual Studio Code, wich to me is a nice palette. What do you think? Do you have any other dark theme you like that we can use as inspiration? . Hi @KSahithyan I think you are using Sweetalert and not Sweetalert2. The repo for sweetalert is here. You are more than wellcome to move to Sweetalert2 using this guide. @KSahithyan what you are using is Sweetalert version 2.x not Sweetalert2. I know, the names can be confusing, but Sweetalert2 (this repo) is a fork of Sweetalert. If you have problem with Sweetalert you need to use the other repo. Hope this clarify . Hi @Franki1986, yes there is. You can use the property target to specify which element to put the swal into. Have a look to issue #1244 as well for some more information. . glad it worked now @Franki1986. I agree we should add an example, but it's not easy with the design of the current documentation page. Let us think about it.  . Hi @lukasmedia, could you provide a code sample with the issue you are having with select?. Hi @limonte i'm still at the beginning of the debugging, but my first try was to set: \n.swal2-container.swal2-center {\n    align-items: flex-start; }\nwhich in my understanding of flex should place the container aligned to the top of the block.  \nSetting that, it works fine with IE11 and Chrome (haven't tried with other browser yet). I've also noticed that chrome behaves correctly regardless of this properties (i.e. you can remove it and still the top of the pop-up is shown correctly). \nI'll do some more research and let you know. Hi @limonte I've been doing some research after my failed PR. As you know, the sweet alert uses a mix of align-items center and margins to make sure that the pop-up is centered (when smaller than the browser window) or aligned to the top (when it's bigger than the browser window). This doesn't work on IE because of the way the margins are handled. I tried \"playing\" with the margins and set different values, but those seems to be completely ignored by IE11. The only way i could centre it was to use javascript to check if there is a negative offset on the sweet alert container after a window resize event. But this seems to me more like an hack. If you are happy with a javascript solution, then i'm happy to submit a PR for review (no need for the bounty for that :-)). I created a simple test page for that in https://github.com/gverni/sweetalert2/blob/test/input-Value-as-promise/test/sandbox.html. Thanks for your review @limonte . I updated the PR with the changes requested. I only added 'textarea' to the list of input type (I tested and it works fine with that as well). Let me know if that is fine with you as well. . Thanks to you @limonte for giving me this opportunity to contribute. Sweetalert is such a versatile and powerful component. \nBTW, do you want me to update the documentation on https://sweetalert2.github.io to add this feature once it's released? . Hi @limonte sorry for the delay with this change (I was researching on this topic), but I was wondering if we should replace the deprecated jsnext:main with pkg.module or get rid of that entirely. What do you think? . Just for the record, at the time of this comment, the issue reported here wasn't reproducible anymore (the output of parcel command did not have any arrows functions in it). . Hi @rolasazcorra could you provide a live demo example using the instructions here?. Hi @anish-techpro we haven't had a feed-back from @Snickbrack as to how to reproduce it. If you have the same issue, can you share with us the code? You may want to follow these instructions to provide us the code sample.. @anish-techpro I had another look at this issue. The code reported by @Snickbrack in his report is actually part of the undoScrollbar function which is executed when the modal closes. This is the counterpart of fixScrollbar which is executed before the modal is shown, and his job is to put the padding back in the page. So the statement: \n\nadds a padding to the body-element if a sweetalert element is active but doesn't remove it afterwards.\n\ndoesn't really stand. I cannot think of a use case where this is failing, but if you have one please do submit it and we'll have a look. . Thanks @anish-techpro for the reproduction steps. I raised #1409 to track this. You can subscribe to that issue to get update on the fix. . > Also, in my comment I indicated a problem/bug:\nHappy to work on that @limonte @zenflow if you think it's worth it. My only question (to better understand how it can be used) is what would be the use case for that @zenflow? Let's say that a developer change the swal type: in which condition does he/she wants to check again the value of that property? Is it to implement a kind of state machine on a running swal? And does that affect the mixin as well (in case there is one)?. Hi @sacroma,  I verified that on IOS 12 when I open the [Show Success Message] example from https://sweetalert2.github.io/ the voice over is only saying \"Good job you clicked\". Strangely enough on the mac the voice over reads the full text for the same example. I'll have to check in more details how voice over works on IOS. . Hi @sacroma I did some more test on other platforms, and I can confirm that the voice over works fine on Android (tested on Pixel running Android Pie using Chrome as browser). So that may really have something to do with the way IOS \"read\" the screen. I'll keep investigating. . Hi @limonte I've done some more tests and it looks like that this issue has something to do with the animation. Using animation: false makes the voice over on IOS read the entire content of the modal. I'm not sure what to make out of it yet, but I think it's a step forward. \n@sacroma as a workaround you can disable the animation in the meantime. Have a try and let me know if you see the same behaviour.  . Hi @lowfiend, if I understood your question, you don't have to do anything in the .then(). As a matter of fact you should not even call swal.close() there. The way preConfirm works is that it keep showing the pop-up until the preConfirm function returns true. \nHere a codepen with your code: https://codepen.io/anon/pen/vQEwPz. I'm closing this issue due to inactivity, leave a comment if you think it should be reopened.. @limonte you are correct, sorry. I need more time to work on the fix then. Sorry about that. Still looking for a proper solution. I'm closing this PR for the moment. Sorry about that., . > @gverni before adding more complexity to the core we need to understand if it's really needed because this use-case is quite narrow.\nFully agree. My understanding of the target prop was that it was used not only for styling (e.g. the rtl example) but also for positioning. Obviously I was wrong :-) I think we should then make it clear in the documentation, maybe providing the positioning workaround in your comment as example for those developers that would like to achieve that. What do you think @limonte?. > If you also think that customContainerClass is needed, feel free to submit a PR.\nThat would indeed avoid the need for the ugly workaround. Maybe we should also add a check and warning if the target is not positioned, so we can inform developers that are trying to achieve positioning inside the target. Or we make it very clear in the documentation. \nI'll submit another PR so you can evaluate. I'll also close the #1339 . Closed by #1347 . Hi @kwagdy, is your problem with Chrome on IOS?. Thanks @kwagdy, I tried with the examples on https://sweetalert2.github.io/ on Chrome 72 on a macbook, but I wasn't able to scroll the body (I used the mouse's scroll wheel). Do you have a live example that shows that? Or maybe a screen recording? (you can use extension like this for that). @kwagdy can you confirm whether you see the same on any of the example on https://sweetalert2.github.io/? If not, any chance you can share a live example of your page (or an extract of that)? . Thanks @kwagdy, let me do some test with the position and get back to you. Hi @kwagdy I tried setting the body position to absolute but I cannot see that. I created this gltich: \nhttps://swal2-body-absolute.glitch.me/\nFeel free to remix this glitch until it reproduces the issue for you.  . hI @limonte, this is the basic implementation for the ie11 fix for long content. Since the check on the offsetTop is done just after showing the popup, this doesn't handle the case where the window is resized: if you try to shrink a window with an alert that initially fits the window, the top (and bottom) of the alert is cropped on ie11. If this fix pass all the tests for all the scenarios, then we can add an eventlistener for the container resize and handle the case when the offsetTop become negative (or positive) after resize.  . Hi @limonte i added a proposal for this in branch: \nhttps://github.com/sweetalert2/sweetalert2/tree/fix/support-for-direction-rtl\nIn my proposal, applying the swal2-rtl is happening in the instanceMethods/_main.js but i'm not sure this is the proper place to do that. Should I add a new file in utils and handle this in that file instead? . Hi @limonte, I tested the fix on Safari and Opera and it's working. I did not see any regression on chrome. I also run the npm test and saw no regressions. Should I add any test case for this change? \nBTW, I noticed that when sweetalert is open from Safari when already in full screen, it doesn't get the focus. So the esc key doesn't get handled by sweetalert and it causes the browser to exit from full screen. I need to investigate more. . Sure @limonte. My bad, sorry about that... . Hi @limonte sorry for the delay but i didn't have my macbook today. The issue is actually happening only on the test/sandbox.html page on the development localhost server. I tested it on https://sweetalert2.github.io and it works fine. So maybe we can decrease the severity, at least until i find the root cause. \nIf you want to reproduce, just execute npm start and then put safari in full screen and load (or reload) http://localhost:8080/test/sandbox.html. . I've done more investigation. It looks like the issue only appears when, while in full screen mode, you type the url in the address bar and press enter. I checked few variables when the issue happens, and it looks like everything is fine: \ndocument.hasFocus() = True\nwindow.getSelection().anchorNode.classList = swal2-content\ndocument.activeElement.classList = swal2-input\nSo I believe this has something to do with how Safari is handling the focus in this specific case. I also tried using a simple html page with an input text and I can reproduce the same issue. I'm not sure if it's worth spending more effort on that. I let you decide @limonte. \n. Hi @limonte i had a quick look to the source code of that extension. The author is using a querySleectorAll to search for the classes (among many others) .swal2-shown .swal2-confirm. This code is executed every 500ms interval until a popup is detected and closed. Once the popup is closed, a clearInterval() is called. That is why only the first popup (and not the subsequent) gets closed by the extension.\nA workaround could be to check if the popup is still on after 500+ ms and if not we can log something on console. At least we can help developers to figure out what's happening (if we cannot help the end user). Hi @mk304, if i understood correctly what you want to do is to post to a php page the value returned by sweetalert. If this is the case, then you can add your ajax call inside the if (text) statement, something like: \nif (text) {\n  $.ajax({ type: \"POST\", url: \"sweetalerttext.php\", data: { 'text': text})\n}\nDoes that answer your question?. Hi @mk304 do you have the page available anywhere (e.g. codepen or similar) so i can have a look at the full page. \n\nthen the window opens but the chrome console tells me \"Uncaught (in promise) TypeError: $.ajax is not a function\nat getText\"\n\nWhat do you mean exactly with \"the window opens\"? \nThe error in console is pointing to an issue with jquery (not loaded properly?), but it would be helpful to have the full page. . Hi @mk304, as suspected the error is due to the version of jquery you are using. You imported the slim version (which doesn't contain ajax). You can find more info here. You should replace the script tag for jquery with: \n<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\nWith this one it should work fine. \n. Hi @mk304 glad it worked. Since your question is not related to sweetalert2, I'm going to close this issue and we can follow-up on stackoverflow. . Hi @jesusaugusto0x2, since this is an how to question, could you please post it to StackOverflow: https://stackoverflow.com/questions/ask. Make sure to add the sweetalert2 tag to the question. I'll try to support you there. \n. Hi @mhsystem, could you expand on your statement? Using input:'tel' basically it's applying type=\"tel\" to the modal input. As you can read here the input tel  \n\nare functionally identical to standard text inputs, they do serve useful purposes; the most quickly apparent of these is that mobile browsers \u2014 especially on mobile phones \u2014 may opt to present a custom keypad optimized for entering phone numbers\n\nIf you open the page from a mobile phone you basically see something like this: \n\nRegarding the small counter problem you mentioned, can you please send a screenshot? As you can see from the screenshot above, I don't have any small counter. . thanks @limonte for your review. I hope I've put the right semantic-release commit message (it was a first for me). Hi @limonte sure, I'm happy to work on it! I'll follow your instruction and clone the PR... . Hi @limonte it's maybe an overshoot, but I was thinking to implement 3 test cases, one for type=\"text\", one for type=\"textarea\", and one for type=\"file\" (just because they are handled in 3 different case statements). I've noticed that for type=\"file\" the placeholder is correctly added to the input tag but it's not shown (in chrome i can see only \"No file chosen\"). Obviously the test will still pass, but I was wondering if it makes sense to call the setInputPlaceholder() for type=\"file\" if the user will not see it anyway. \n. Hi @limonte I created a new test file (inputAttributes.js) to add the 3 placeholder tests. In addition to that I added a specific test for the \"legacy\" inputPlaceholder  in the input.js. (I know there were already other tests using that configuratoin parameter, but I thought we should have a specific test). Let me know if you agree with this strategy or if it's an overshoot. \nP.S. I used the Check out PR feature of Visual Studio, and I've noticed this is adding a merge from the master branch as well. So when I pushed on this branch, it added that commit as well. If we squash the PR should not be a problem, but I'm not sure if there's a better way of doing that. . It will be my pleasure :-) Thank you so much @limonte for your trust!. Hi @cheesemarathon what happens here is the the call to formSelect() is  removing the style=\"display: none;\" from the input select in swal. I'm not familiar with the materilize framework, so I was wondering what's the purpose of calling the formSelect(). Could you clarify? . Hi @cheesemarathon I think this has not much to do with sweetalert specifically. If you look at the example here where there is a simple html page with a select tag with display: none; you will see that this style is overwritten by the formSelect(). This shouldn't happen. . Thanks @cheesemarathon. I'll close this issue for now. I subscribed to the issue on materialize and I'll be monitoring it in case there is anything to do on sweetalert. . Hi @mk304 I saw you raised the same question on stackoverflow. That is the right place for that. The issue you are having now doesn\u2019t have much to do with sweetalert.. Hi @mohamadhs could you explain more what you mean by \u201cbuttons with url\u201d? Do you mean a button that is opening a new url in the browser? If you could provide a detailed use case, that would help me understand better your request. Hi again @mohamadhs, I saw you raised a question on stackoverflow for the same thing. I\u2019ll support you there, but please provide more info on what you want to achieve on the stackoverflow question.. Thanks @limonte! I've raised https://github.com/sweetalert2/sweetalert2.github.io/pull/40 on sweetalert2.github.io. Hello @vamsits would you be able to share your sweetalert code using http://sweetalert2.glitch.me/? You need to click on Remix on glitch then add your swal code and then paste here the new url you are given by glitch. . Hi @vamsits your confirm button is red because you changed the color using: \nconfirmButtonColor: '#DD6B55',\nJust remove or comment that line and it will show it in blue. You can see my remix at https://debonair-cephalopod.glitch.me/. Hi @vamsits are you talking about the size of the popup or the size of the buttons? Sweetalert 2 is responsive so the size is adapting to the size of the screen / window. Could you send us a screenshot of your sweetalert 1.x pop-up compared to the sweetalert 2? . Hi @vamsits you can change the size of the font using the confirmButtonClass, cancelButtonClass properties. You can also change the width of the modal using the width property.  \nRegarding the color, please refer to my implementation at https://debonair-cephalopod.glitch.me/. You can clearly see that the button is the right color. You can check the source code of that at https://glitch.com/edit/#!/debonair-cephalopod?path=index.html:22:10. Apparently you can crash Edge simply assigning a placeholder attribute to a range input. This piece of code in an HTML page is enough to crash Edge: \n<input type=\"range\" id=\"range\">\n    <script>\n        document.getElementById(\"range\").placeholder = \"placeholder text\"\n    </script>\nStrangely enough, the first time you load the page, you may not see any error: what actually happens is that Edge crashes and then reload immediately the page (this time without crashing). You can clearly see that if you keep the developer tools open.. Hi @limonte the patch is very specific to this error. I was  thinking we could have a cleaner and more readable solution adding a function like isAttributeValidForInputType(). The only thing is that I wanted to avoid calling a new function to check one single exception case, hence the ugly implementation with the break statement. . Hi @zenflow I'm not familiar with the eventstreams, but let me know if I can be of any help here. If you already have some packages you want me to try, I'd be happy to. . > Looks like we can probably just use the modules that event-stream itself depends on:\n@zenflow good point, I didn't think about that. Let me try to workout how event-stream uses those dependencies and implement it for our needs. I may be very slow (still learning), so feel free to chime in anytime if we want to get rid of this package quickly. . thanks @zenflow. I'll start working on the implementation ASAP!. Hi @zenflow @limonte I started looking into this issue. As first step I removed the dependency from event-stream, added dependencies to stream, split, map-stream and copy paste the implementation of merge. I tested it executing karma and i have not seen any strange behavior. Changes are in 224bf72\nNow, the split, map-stream are from the same author of event-stream so I'd be inclined to remove them as well, but I want to better understand how it works. Obviously it's still very much a work in progress, and very far from a clean implementation, but I thought of keeping you updated. . Hi @limonte, @zenflow this is my proposal to get rid of event-stream. The strategy I've used is to aim to have a smaller, more readable code that just address the needs of our project. All of the three functions (merge(), split(), map()) have been replaced with functions that create a Duplex stream. Below some more details on each one of them: \n\nsplit()\nIn our case the input is a character stream and we just need to split on line feed / carriage return. So this is the only case handled. Every time a new chunk is received, the write function checks if it contains a /\\r?\\n/. If it does, then it proceeds to splitting up the chunk and write to the stream all but the last one piece of the chunk. There are two possibilities for this last piece of chunk: \nEmpty string (''): this means that the chunk was actually ending with /\\r?\\n/. And we use the empty string to initialise the buffer\n\nA string: the chunk did not end with  /\\r?\\n/ so we put the string into the buffer\n\n\nmap()\nIn this one I simply execute the function passed as argument on the chunk, and I push the returned value into the stream. As you can see, the way this is called is now different (i.e. there is no need for the callback since this is called inside the write() of the map stream). On this one I'd really like to have your feed-back, because i'm not entirely sure that removing the callback is the right way of implementing this. \n\n\nmerge()\nFor this one I took the core of the implementation of merge() in event-stream and removed all the functions that we don't need: \n\nI removed the check of the arguments list. The assumption is that we are always calling this with at least 2 streams. I can add a simple check here if needed or put back the original code. \nI removed the handling of the end event because I assumed that we are using it only with proc.stdout and proc.stdin\nI removed the handling of the destroy event\n All these assumptions makes the code smaller but less flexible and robust, so I'm more than happy to put the original code back if you think it's too risky \n\nI captured the output of both implementations for comparison:\n Output with event-stream\n Output with the new stream-array\nThe only difference I could find is that the new implementation is removing blank line. \nI also did some profiling, and the new implementation does not add significant load on the processor. The RegExp related functions seems to be the only one that take more than 1 thick. You can find the output of the profiling here\nI hope this explains a bit what I did. Let me know otherwise. . I removed the event-stream package. I've noticed that two of the packages used by event-stream are still there because they are used by other packages. Below the output of yarn why command: \n$ yarn why split       \nyarn why v1.12.3\n[1/4] \ud83e\udd14  Why do we have the module \"split\"...?\n[2/4] \ud83d\ude9a  Initialising dependency graph...\n[3/4] \ud83d\udd0d  Finding dependency...\n[4/4] \ud83d\udea1  Calculating file sizes...\n=> Found \"split@1.0.1\"\ninfo Reasons this module exists\n   - \"semantic-release#@semantic-release#release-notes-generator#conventional-changelog-writer\" depends on it\n   - Hoisted from \"semantic-release#@semantic-release#release-notes-generator#conventional-changelog-writer#split\"\n...\n$ yarn why map-stream\nyarn why v1.12.3\n[1/4] \ud83e\udd14  Why do we have the module \"map-stream\"...?\n[2/4] \ud83d\ude9a  Initialising dependency graph...\n[3/4] \ud83d\udd0d  Finding dependency...\n[4/4] \ud83d\udea1  Calculating file sizes...\n=> Found \"map-stream@0.0.7\"\ninfo Reasons this module exists\n   - \"gulp-tslint\" depends on it\n   - Hoisted from \"gulp-tslint#map-stream\"\nNevertheless, I'd be keen to keep the implementation as it is if you agree, so we have more control on it. \nOn a different note, I've seen some other changes on yarn.lock file that are not related to the removal of the event-stream package. @limonte do you mind having a look to make sure I'm not messing up with this file? . Hi @Orbling when the timer expires it trigger a dismiss event on the swal. The behavior you are seeing is consistent with what happen in a standard swal queue: if you click cancel button (or click outside the modal) then the modal closes and the queue is interrupted. Does that make sense? . @Orbling what you want to do can be achieved with what's already available without changing the inner behaviour of swal and making it inconsistent.  \nYou can see a running example here: https://evanescent-meteorology.glitch.me/\nLet me know if this is what you wanted to achieve. . > I wonder what their browser support is like\nYou can implement the same mechanism using promises. These are already used extensively in sweetalert2 so you should not be concerned about coverage. \n\nI still think there is a good case for a defined dismiss event on timer expiry. Think of a shutdown/logout like command that asks \"Are you sure?\" and defaults to yes. Essentially the concept is whether the timer expiry corresponds to the default option, cancel or another value.\n\nIn the design of sweetalert2 a timeout expire is considered as dismissal because it doesn't return any value and it's not triggered by user intervention. IMHO, changing the swal behavior for the case of toast means complicating the internal logic of sweetalert and making it less flexible. And since there is already a way of achieving the same result (e.g. checking result.dismiss object) , this loss of flexibility doesn't bring any additional value. \n\nNB. Slightly unrelated, but related to my use case, adding to a queue seems to require an initial call to queue. I initially wanted to add normally and specify queue: true or some sort to not replace the existing swal call. That's not a bug though, additional functionality.\n\nMaybe you can post this question on stackoverflow with a code example, and we can try to support you there. . Hi @jdmarinv i'm a bit confused by the piece of code you shared. I don't see any call to swal in there.  If it's a sweetalert2 issue, could you please replicate your use case remixing the glitch you found at https://sweetalert2.glitch.me?. Hi @jdmarinv, the issue you are having has nothing to do with sweetalert2, but with the way you subscribe to click event for buttons. If you give the same id to all the buttons element, jquery will only choose the first one. Please consult the jquery documentation on how to subscribe for the same event for multiple elements.. Hi @sweetalertquestion this doesn\u2019t seem an issue with sweetalert. Can you raise a question on stackoverflow with tag sweetalert2 (and any other relevant tags) sharing your code and possibly any log?. Hi @jdmarinv, your swal code is wrong. I corrected it here https://jsfiddle.net/dqb7hpmz/. \nPlease next time consider raising a question on https://stackoverflow.com/questions/ask\nadding the sweetalert2 tag, rather than raising an issue on github. Especially if you are not sure you wrote your code correctly :wink:. Hi @vamsits may I suggest you to raise a question on stackoverflow providing all information, including any error you see in the browser console when you open swal? From what you describe here, it doesn't seem to be be an issue with SweetAlert2 itself but the way you deploy it, so the best way to get support is to raise a question on stackoverflow with the relevant tags. . Fine with me!\n[Off topic] \nCoincidentally yesterday I was looking at the WeakMap in https://github.com/sweetalert2/sweetalert2/blob/master/src/privateProps.js since now https://github.com/babel/babel/pull/7555 seems to be merged. If we drop support of Android 4.4 we can look at that after. . Hi @dylanmcgowan is the bug reproduced consistently (i.e. 100% of the time) on your development environment? \n\nUnfortunately I copied my configuration verbatim and can't reproduce the bug in a virtual environment\n\nUnfortunately I can confirm i cannot see the issue either. . Hi @dylanmcgowan I was looking again at your code and i'm wondering how come the code executes the (!isToast()) branch. It shouldn't do that, unless you are somehow creating a new non-toast swal when you switch route. If you haven't done that yet, could you set a breakpoint on the removeEventListener line and inspect the content of the swal in the browser dev tools? . Hi @dylanmcgowan I think I may have actually recreated your issue. Can you check if when you switch route you remove class swal2-toast-shown from the body? I tried to manually remove it and I have a very similar behavior as the video you sent us (e.g. grey overlay + error in console). I'm not familiar with vue, but i'll give it a try to reproduce what I mean on your codesandbox. If I manage to, i'll update this issue.  . Here you go: https://codesandbox.io/s/3kqpr9y12q. In this one I'm adding:\ndocument.querySelector('body').setAttribute('class', '')\nwhen switching to route about. You can see the grey overlay when the about page is rendered, and the error in console when the toast is closed (it took me 5 minutes to figure out that codesandbox doesn't show console errors in its console, and you have to open the browser dev tools)  . Hi @teodorsandu, sweetalert2 doesn't expose any API to cancel the timer. If you want to implement a cancellable timer, it's simpler if you create one yourself in the onOpen function and then handle it the way you'd like. You can use the swal.clickCancel() to dismiss the swal, but in this case keep in mind that you will have to create your own dismissal reason check since the swal.DismissReason.timer will not be set in this case.\n. Hi @vavo-cake can you provide a live example to help us debug your issue? You can remix the glitch at https://sweetalert2.glitch.me. Hi @vavo-cake, you are using the html in the wrong way. You need to pass the html string, that in your case is given by form[0].innerHTML. You can have a look to the glitch here: https://sweetalert-issue1324.glitch.me/. \n\nSorry, the current project is not deployed to the server\n\nThe link I provided earlier (https://sweetalert2.glitch.me) allows to have a live server with your implementation for us to check. @limonte I agree with you. We had example in the past of users wasting our time. For me is still fine because it helps me learning, but I agree on the long term could not be the best. I personally am not a fan of stackoverflow because it doesn't really allow me to engage in a conversation with the user (or at least is not as effective as github issue for me). Maybe we can find a different tool to allow users to raise how to questions. I can look around and make some proposal.  What do you think?. > There was Gitter back in days, I removed it because I'm personally not a fan of long conversations using human languages, I prefer code :)\nFair enough :-) I've never used gitter, but I'm a fan of slack, since it allows to have also chat among collaborators. But I admit that maintaining a slack community is probably a job on its own. Let me have a look to gitter and get back to you. \n\nI was also thinking about recording a short (1 minute max) video on how to use glitch, it should cover:\n\nThat's a great idea. \n\nAre you familiar with screen-recording? If not I'll handle that, if yes will you be willing to record it and upload to YouTube?\n\nYes, I'm normally using loom for screen recording. Let me work on a video and i'll make a proposal. I can also create a short gif for people that are more familiar with sharing live example, but not with glitch itself.  . In my experience, if you provide a toggle API, the next request would be to have an API to check the status :-) \n@limonte this is my proposed implementation, and if you think it can be useful, then I can finish the work ad add it to the d.ts file and the test file. . > What do you think?\nSounds much better than mine (and way shorter :-)). I'll work on all the missing bits and request a review once I'm done. . Hi @Farbed could you provide a live example (see  https://github.com/sweetalert2/sweetalert2/wiki/How-to-provide-live-example-for-issue for more information) to help us understand / debug the problem? . This is how the new implementation looks like for a modal:\n\nand a toast: \n\nAsper my initial comment, the only way I found to implement that, is to add a wrapper element (class swal2-positioned-wrapper with position: relative. This is needed to make sure that the positioning happens correctly inside the target, in case the target element has a non specified position (e.g. default static). \nI'm not sure this is the best way to achieve that, so I really need the experts to review and advice on this :-) . Everything fine... sorry for the spam again..... Hi @limonte sorry for the delay with this PR. Since I was at it, I thought to implement some more tests for positioning. With these additional tests I wanted to make sure that the change in c86b463 didn't have any impact on the toast positioning.. Thanks for your review @limonte ! I've done all the changes you are proposing. Let me know if they look good for merging. . Hi @b0y2k could you update the stackoverflow question with a live demo of your non-working code using the instructions here?. HI @b0y2k, looking better at your code (after I formatted it properly) I think I actually understood your problem. You cannot call swal.insertQueueStep() if you haven't defined a swal.queue() first. Please have a look to the example at https://sweetalert2.github.io/#dynamic-queue. I'm going to close this issue for now. Let me know @b0y2k if you need additional help.. Hi @GerardMetal did you include the link to the sweetalert code as well? Does the same page work on a desktop computer browser?. Hi @GerardMetal could you share the full code using glitch (see here on how to use it) so we can try to debug what's going on? . Hi @GerardMetal I remixed your code for you on: \nhttps://ossified-tarp.glitch.me/\nThis is what I see on my Android phone using Google Chrome 71.0.xxx:\n\nSo it looks like everything is working.... \n. @limonte let me know if i can help with that. It looks beyond my skills... but, as usual, I\u2019m happy to learn!. @limonte I was reviewing this PR an I can see that we have two different check for browsers:  \n\nisIE11 in https://github.com/sweetalert2/sweetalert2/blob/3a8d0046cc52c70be5fb9df1b4e4888250f08dd9/test/qunit/browsers/ie.js#L3\nisIE in: https://github.com/sweetalert2/sweetalert2/blob/d4c84dfffc9cf3dc59be41f5874e7c59cceee9c3/test/qunit/helpers.js#L6\n\nDoes it make sense to have all the browser detection functions / variables defined in the same file so we avoid fragmenting the code? . :-) Congratulations!!!\nOn Sat, 12 Jan 2019, 19:40 Limon Monte, notifications@github.com wrote:\n\n[image: image]\nhttps://user-images.githubusercontent.com/6059356/51077696-afbe8800-16b2-11e9-97ea-6b798e45eff1.png\nCongrats, everyone!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sweetalert2/sweetalert2/pull/1379#issuecomment-453775497,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQTDdLHkI0tKEi1DUwHlPGvvz7qBWpCFks5vCjpKgaJpZM4Z7_nT\n.\n. Hi @limonte sorry it took me so long, but I was trying to find the most correct way to achieve: \nresolve the promise with {} (no value or dismiss)\n\nWhat I did, is to add resolve and reject into a new innerProps.innerFunctions object. To be honest, I'd rather create a new innerMethods object and add those to that, if you like this approach. \nAlternatively, I tried also to save references to reject / resolve in one of the properties of Swal, but this will expose these methods, and I personally did not like it (though it obviously works). \nTo be honest, I'm not really happy with that, but I couldn't think of any better way of achieving that goal. Feel free to let me know if there is one. . The failure on CI is obviously due to the fact that i'm always resolving the promise at the end of close(). Before fixing that, I just want to be sure i'm on the right path with this approach. . I really didn't like to use privateProps to hold the promise's resolve / reject. So I added a privateMethods object to hold these (and future) private methods. \nI also moved the logic for handling resolve / reject directly within close() method. Given #1383 I can simplify even more the prototype of the close() and keep only the resolveValue. @limonte @zenflow I think i'm done with this PR. Feel free to review it. . thanks @limonte!\n\nDo I understand correctly that this PR doesn't contain any breaking changes?\n\nThe breaking change is in the fact that now if you call Swal.close() it does resolve the promise (with {}), whereas before it didn't. Do you agree? \n. > Please raise your objections if there are any\nI don't have objection for this specific changes. Effectively we are asking the developers to make sure they handle errors by themselves in their own custom functions. We save them the hassle of handling Swal.catch() but we are asking them to write a more robust code for their own function. \nOne of the impact of this change though (that I'm not convinced about), is that swal will never reject. My comment is probably off topic (apologies in advance for that), but removing the catch from swal prototype is preventing us from adding rejection cases in the future (without a breaking change).\nCurrently for example, if the value of one of the innerParams is not correct, swal is just throwing a warning. IMHO it may be better if it actually rejects. Consider for example the use case where a developer is setting inputValue as return from another function he doesn't have a control on. In this case if this function is returning a not-expected type (i.e. a Date object) then the only thing that happen is a warning on console, and this is difficult to handle. If swal actually rejects in this case, then the developer could handle this specific case in a different way. \nMy two cents.... @limonte I put here an example of the use case I was talking about. I agree that it may not be that common, but it's just a way of explaining better (as you taught me, code speaks a thousands words :-)). \nIn this case we have a developer that want to redistribute SweetAlert2 wrapped in his own class (see SourAlert.js). A 2nd developer is using SourAlert (wrongly) and is passing a Date object as inputValue.   \nTo make his product more robust, the developer of SourAlert needs to add a check on the inputValue passed from the 2nd developer, and this check is exactly the same that is done in Swal already (see line 12). \nIf swal could provides a single function (reject??) where all these errors / warning are catched, then it will make SourAlert developer's life easier and his code less difficult to maintain. \nAs I said, this is just a (probably very stupid) example of a scenario that can actually happen, especially if Swal is redistributed inside frameworks developed by 3rd party developers.  And sorry again for the off-topic example. . Congratulations @limonte! This is a testimony to your skills, dedication and hard work on this project. I feel really privileged to have been accepted as collaborator of this amazing project and to have the opportunity to work with you, @zenflow and all the other collaborators. Looking forward to more successes in the future... \np.s. Turbo Pascal.... good old days of getting excited for being able to draw a circle on a CRT monitor :smile:. Hi @obrassard I downloaded the stackblitz project and tested it locally and i have the same issue you are reporting. Comparing the source of the page, I can see that on stackblitz the sweetalert css is correctly embedded into the <head>:\n\nIf you look to the local one, this is missing. I'm not an expert on bundling process for angular so probably you need to look into that. . oops @limonte our comments crossed \ud83d\ude04 . > Here's how I solved it for sweetalert2-webpack-demo\nHow did you figure this out @limonte??? You need to tell me your secret \ud83d\ude03 \nBTW, for the record, I tried setting manually mainFields in ./node_modules/@angular-devkit/build-angular/src/angular-cli-files/models/webpack-configs/browser.js as: \nmainFields: [\n                ...(wco.supportES2015 ? ['es2015'] : []),\n                'browser', 'main', 'module'\n            ],\nAnd the project shared by @obrassard works locally as well. I'm not sure this is the best way to configure build-angular (and that's one of the main reason why I don't like frameworks) but that may explains why the project works fine on stackblitz.  Hope it helps... . Hi @afisher88 your problem should be the same discussed in #1390. Currently the workaround is to add the following in webpack.config.js: \nresolve: {\n    ....\n    mainFields: [\n      'main',\n      'module'\n    ]\n  },\nI tested on your sandbox and it works. Don't forget to add the polyfill for promises. \nSubscribe to issue #1390 if you want to stay up to date with the resolution. . Thanks @zenflow, done that! \nOne thing i'm struggling with is that, to define a private instance method using #, this needs to be defined inside the class itself. That means that all the private instance methods (or methods that uses private instance methods) have to be in one single file. This, in my opinion, makes the file less readable / maintainable. I tried different approaches but none of them worked. The most promising seems to be using gulp to pre-process the file with the class definition and copy inside it the implementation of the function from another file. It kinda works but it's very hacky.. Hi @limonte \n\nthe bundle-size (gzipped) is 160B larger than master.\n\nLet me have a look into that. I'm studying how the transpile is done and what causes this increase. I also want to better understand if that increase is just overhead due to the fact we are using this new features for the first time, or if it's going to grow every time we add a new private method. If it's the latter, than I agree it's probably not worth it (since this feature is mostly for the development of sweetalert2 itself). \nAlso at the moment we have only one private method, so we probably don't see the benefit of it (yet)\n\nAnother side-effect from the bigger bundle is code coverage dropped by 0.3%\n\nIt's going to take me a million years to figure out why this has dropped \ud83d\ude04 but i'll give it a go anyway (i'm not familiar with coveralls at all, but i'm happy to learn). . @limonte you are absolutely right... I like your strategy way more. I guess I was thinking about a broader use case which we don't really need to test. Thanks for your review \ud83d\ude4f. Hi @snsarma Sweetalert2 does not attribute any special meaning to  the required attribute of the input tag. If you want to validate your input you should use the preConfirm property of SweetAlert2. You can have a look at the example here. \nIn your case in the preConfirm function you need to check  that the required field(s) is correctly filled. If not, you can call showValidationMessage(error) to show an error and prevent the swal promise from resolving. . This is the rendering of some of the (most controversial) input (in the screenshots $swal2-input-background-color is set to #008000): \nRadio: \n\nCheckbox: \n\nRange: \n\nI'm not overly happy with the checkbox. What do you think @limonte ? \n. thanks @limonte and sorry for being a pain! \ud83d\ude04For me we are good to go.... How about a negative such as disableBodyStyleAdjustment, with the default value set to false? . @limonte @tomholub sounds good to me. I'll start implementing it... . Hi @limonte your test passes even with the bug present. Infact the issue reported stops the swal execution after the swal is built but before is shown. At the time the error appear both the button defined in html tag and the one in the actions divs are present. \n\nIs my understanding correct?. No problem \ud83d\ude04 One thing I noticed while designing that test is that the Swal.isVisible() is quite a misleading name. In fact it's just checking if the swal has been built but not if it's actually visible on screen: \nhttps://github.com/sweetalert2/sweetalert2/blob/3a8d0046cc52c70be5fb9df1b4e4888250f08dd9/src/staticMethods/dom.js#L23-L25\nIf you execute that method on the example provided for this issue, it returns true which is wrong:   \n\nWhat do you think @limonte? Should we adjust that as well? Or is it considered a breaking change?. Correct @limonte, it doesn't work in the desired way (i.e. doesn't fix the issue). This will just check that the element has a bounding rectangle with size greater than 0. \n. While investigating the fix, I realized that it's all about agreeing what we mean by visible. jQuery decided that a visible element is an element that is taking space in the DOM, regardless if the end user can see it or not. \nFor me visible is something the user can see. It's somewhat related to the visibility CSS style (if you know what I mean). \nTo be honest, we ca ngo either way. I don't have a too strong opinion on that. . @limonte sorry... I completely misunderstood the code of dom.isVisible(). You are absolutely right... unnecessarily complicated... let me close this.. Much better code than mine... thanks @limonte, and sorry about that. I also tested it in the scenario reported in #1421 and I can confirm it works fine in that scenario as well.  . Hi @simon1tan i remember seeing that once, but I don't remember what the problem was. To help us debugging can you: \n\nCheck the browser console for any error\nTake a screenshot of the close button element from dev console (to show it, you can right click on the close button and  select \"Inspect element\")\nProvide info about browser / version used in your test \nAlso, how are you serving your page? Is it on your own server? Any chance you can share the url? \n\nFinally, you may want to refactor your HTML page. The script that fire the swal should be inside the body and the script tag that include swal should be in the head tag. I don't think this will solve the issue, but better be compliant.. Thanks @simon1tan. The x is set in this line:\nhttps://github.com/sweetalert2/sweetalert2/blob/5be77b65ecee1bebe78df01e7a2de01d8bb612f0/src/utils/dom/init.js#L32\nAs I said, I remember seeing this one in one of my test, but i cannot recall what was the problem. Can you confirm that you are not importing any other script/framework?. Hi @simon1tan i found the problem. The x in sweetalert script is encoded in UTF-8. If you convert the UTF-8 x into ANSI, it becomes ....  \u00c3\u2014. You need to make sure that when you serve the sweetalert script, the content type is set to charset=utf-8. . Alternatively, you can set the encoding using the script tag: \nhtml\n<script src=\"sweetalert2.all.min.js\" charset=\"UTF-8\"></script>. > should we replace \u00d7 with &times;?\nYes, I think so. It's definitely adding robustness and improve accessibility... . BTW... shouldn't the SCSS linter check for double definition of variables? . > What do you think about aligning SASS variables and classnames?\nIt make more sense. How about changing the active ones to:\n\n$swal2-progress-steps-active-step-background -> $swal2-progress-step-background-active\n$swal2-progress-steps-active-step-color -> $swal2-progress-step-color-active\n\nThis will reflect the fact that is the same as the other variable, but active. \nHow does that sound? . > The logic behind my suggestion is quite simple: $<class-name>-<css-property>.\nGot you. Yes, it makes much more sense. I'll implement that. . Thanks @limonte and sorry for the delay. Looks very good to me now. The naming convention you found is much more clean. Thanks! . You got me by few hours... I was testing the same \ud83d\ude04 Thanks @limonte !!. LGTM @limonte! I verified that the minified version contains: \njavascript\n<button type=\"button\" class=\"').concat(I.close,'\">&times;</button>\\n\n. @hajududat if the only styling you apply is the confirmButtonClass and cancelButtonClass then it should be easy for your to re-create a live example (e.g. remixing https://sweetalert2.glitch.me/). The issue was definitely never seen with the default configuration and if you need our help debugging, we need a live example to wok on. Hope you understand. . @hajududat and you added that you are using angular. So even more so a live example request is still valid. There's no way we can debug the issue without properly reproduce it. . @hajududat can you not just extract the relevant code from the page? We don't need the full page, just the simplest version of your page that shows the issue. Thanks @hajududat for the follow-up. Interesting finding. \n\nAfter a page refresh, it was no longer there.\n\nI'm not sure I understand that. If you reload the page the initial configuration should always be the same, unless you are keeping a kind of history. . Hi @limonte if you are not in a hurry, could you give me few hours to review these changes? . Thanks @limonte, i'm on it... . Thanks @limonte, for me it's good now. I'll create some more example at https://github.com/sweetalert2/sweetalert2-examples and update the side bar one. . Hi @pedro-lb the official CDN is https://cdn.jsdelivr.net/npm/sweetalert2. You can also set the version adding it at the end of the url: e.g. https://cdn.jsdelivr.net/npm/sweetalert2@8 for version 8.. Hi @francovp the API to call swal changed recently in version 8.x. You now need to use Swal.fire(). If you are using latest version, then can you try with that? . @limonte what's the strategy for test of deprecated feature? Should we update those tests or just remove them in favour of the new test for customClass already developed? \nSpecifically I'm talking about the following tests: \nhttps://github.com/sweetalert2/sweetalert2/blob/42ef2138eb36bdc82b05cc897b5a72ce4505e8c3/test/qunit/tests.js#L187-L188\nhttps://github.com/sweetalert2/sweetalert2/blob/31d4f1412fb69859771e09b3c9434f232b492160/test/qunit/params/input.js#L18\nhttps://github.com/sweetalert2/sweetalert2/blob/42ef2138eb36bdc82b05cc897b5a72ce4505e8c3/test/qunit/tests.js#L452\nhttps://github.com/sweetalert2/sweetalert2/blob/42ef2138eb36bdc82b05cc897b5a72ce4505e8c3/test/qunit/tests.js#L143\nI'm happy to update the above if you think it's useful. @limonte what do you think of this?. Looks very good to me @limonte \ud83d\udc4d . The reason is that input.value is assigned to params.inputValue in https://github.com/gverni/sweetalert2/blob/224fd940c6255a181a686e3f8945827a38e75623/src/sweetalert2.js#L489 \nIn case this is a promise and the promise is rejected, the input value will keep the original value the user will see the value of input as \"[object Promise]\". \nWe could workaround that avoiding to assign the input.value in case this is a promise. Would you want me to work on that? . Very good point. Should i make it more robust handling the case parseFloat() doesn't return a number: \ninput.value = params.input === 'number' ? parseFloat(inputValue) || 0 : inputValue + ''. Resolved by https://github.com/sweetalert2/sweetalert2/pull/1379/commits/cea3b81f0a1470bfdeb8ff18ffce92ef080b9c46. Shouldn't $swal2-progress-steps-step-width be named $swal2-progress-step-circle-width. That will be consistent with the fact that is the width property of the swal-progress-step-circle class. \nSimilar for the other SCSS variables below this line. . Sorry to be picky, but i'm still not convinced about the steps-step repetition in the class name. I understand that when applied it will be applied to one single step, but since you cannot have one step style different from the others, then the property name should be plural and not singular.  So for example  $swal2-progress-steps-step-height should be $swal2-progress-steps-height, because all the steps share this same style. . In this one the repetition of the steps ad step in the name, makes more sense, because the property is for active-step. So I would leave this like that. . \ndone in https://github.com/sweetalert2/sweetalert2/pull/1414/commits/11a7e68e70f924a186bc04139a8352b16a96e3e4. I'm just reluctant in removing this check. Maybe I'm too scrupulous but there may be race conditions where the click event come when the constructor is available but not visible. \nI tried to simulate a race condition in branch https://github.com/sweetalert2/sweetalert2/tree/fix/remove-excessive-isVisible-check-race-condition. I know that this example is quite stupid and probably doesn't represent a real use case but it shows the kind of unexpected behaviors I'm worried about. \nHaving said that, probably the benefit of this change outweighs the risks, and I haven't followed the discussion on jest too closely to be able to judge the benefits. So feel free to ignore the comment... . Sorry, I forgot to commit my test (aaarg.. https://twitter.com/hashtag/NoDeploymentFridays?src=hash). It's on the branch now... . For performance reasons, this should be: \njavascript\nif (innerParams.customClass.input)\nIf you set a breakpoint inside the if you will see that is called 5 times (one for each input types) even if customClass.input it's undefined. I think we should avoid that... \n. It works also with an array of strings. Do you want to add that? . Sorry @limonte, actually the array of strings change was meant for the values of the keys inside the object. So sorry about asking you to change it back again. . ",
    "zenichanin": "Sorry I meant if I'm getting the input values via preConfirm but inserting them via html property.  \nBasically I'm trying to add validation to the last example shown here:\nhttps://sweetalert2.github.io/\n. Got it.  Thanks!  Just wanted to confirm that was the case so I can build my own validation for it.\n. ",
    "Herz3h": "This is an old issue, but I have the same problem. I have a swal with custom html, and inputValidator is indeed not called.\nSo where is validation supposed to happen in this case ??\nThanks. I don't think it's a bug per say. As I'm not specifying input option to swal2, and according to what's being said above, inputValidator is not called in that case. \nAnyway I have ended up adding my validation to preConfirm() like so : \n``javascript\nswal({\n    title: 'Choisir un dossier',\n    html:\n\n\n\n\n\n`,\n    showCancelButton: true,\n    cancelButtonText: \"Annuler\",\n    onOpen: function() {\n        $('.dossiers-list').select2({\n            data: dossiers,\n            placeholder: 'Selectionner un dossier',\n            allowClear: true,\n            templateSelection: function(data, container) {\n                // Add custom attributes to the  tag for the selected option\n                $(data.element).attr('data-folder-name', data.folderName);\n                return data.text;\n            }\n        });\n    },\n    preConfirm: (value) => {\n        console.log(value)\n        let selected = $('select.dossiers-list').find(':selected').attr('data-folder-name') !== undefined;\n    if (!selected) {\n        swal.showValidationError('Vous devez choisir un dossier');\n    }\n\n    return $('select.dossiers-list').find(':selected').data('folder-name')\n},\n\n}).then((result) => {\n    console.log(result);\n    if (typeof result.dismiss !== 'undefined')\n        return;\n}):\n ``\nNot sure if this is the way to go, but it seems to not execute the last then block. (This was the case, until I addedswal.showValidationError()`). Uh the original issue is that if I remove the preConfirm above and replace with say:\njavascript\ninputValidator: function(value)\n{\n    return new Promise((resolve) => {\n        resolve('Error');\n    });\n}\nThe inputValidator is not called. I think it'd be good that this function gets called so the user can validate custom html aswell instead of having to use preConfirm.\nAs for the second problem I had while trying to fix the first one. It's that I didn't use showValidationError(). So even though the user input could be wrong, the last then block gets called, which is not what I want since input is invalid: \njavascript\n.then((result) => { \n    console.log(result); \n    if (typeof result.dismiss !== 'undefined') \n        return; \n    }):\nBut adding showValidationError() prevents that last then block from being called which is expected behavior.\nI'm not sure if this is clear, but I had two related issues. All regarding user input validation.. Yup thank you !. ",
    "hannesLP": "i've got it: THANKS \n. ",
    "altras": "oops.... commited to dist/! Will make another PR \n. ",
    "thesmallbang": "I also get the same issue. \nInit adds :\nwindow.addEventListener('resize', fixVerticalPosition, false);\nThis does not mean that a modal is actually open though.\nUpon resizing dom.getModal() returns null and then styling is attempted anyway.\n. I can try to put something together from a non private source. \nIn my scenario I load sweetalert2 upon starting my SPA and show a modal when it is needed later. Any resizing between loading and showing will have this issue occur.\n. ",
    "kenvernaillenvub": "My current problem is that some modals, that shouldn't be closed (only by confirming) are closing when opening a new modal.\nMaybe by a variable like \"allowOverwrite\". \nWhen in modal1 \"allowOverwrite\":false and modal1 is open, when modal2 is opening, it should be pushed into the queue of modal1. \n. > My current problem is that some modals, that shouldn't be closed (only by confirming) are closing when opening a new modal.\nDoes this work now? And how?\nIf I open a swal-popup and another process opens another swal-popup, it still just removes the first one. Why aren't new swal-popups automatically added to a queue?\nFiddle: https://jsfiddle.net/kenvernaillen/7sfr1gLh/\n. ",
    "blazeworx": "I also have the situation where I have a modal open currently that should only be closed by clicking the the modal's button and if another modal is opened (by a background ajax call or whatever). it closes the original one and pops up.. instead of queuing up as the next modal to show after the current one is closed. Not sure how I am going to get around this yet.. \n. @limonte @simo9000 \ud83d\udc4d sweet! works for me! might be a good idea to put that fiddle in the examples/docs. \n. ",
    "erbelair": "Ah, I figured it was put there for a reason. Well that is good to know. Thanks.\n. ",
    "baum1234": "Sorry I forgot about it \ud83d\udc83 \nHere is the example: https://jsfiddle.net/ad3quksn/39/\nJust klick the button, then try it a second time\n. Thank you :)\nMaybe allowing the same jQuery reference in titles? That way it would be possible to use e.g. a checkbox in the title that is created with javascript before.\n. I just found out that your fix removed all handles.\nhttps://jsfiddle.net/ad3quksn/40/\nClick on the button and then into the input\n. If you use the older version, before the fix, it was possible to click into the input and a datepicker (from jquery ui) showed up. Now nothing happens.\nI changed the fiddle a little bit: https://jsfiddle.net/ad3quksn/41/\nThe input outside the hidden container is what I expect and in the hidden container is the actual behavior.\n. But why did it work in the version before? Just use the version before and my code, everything worked fine. It's not a good solution to add all events a second time.\n\nI figured out that you need to copy the events too when using cloneNode. But I couldn't find a nice and short way to do that.\n. I don't think it's a rare case. I just saw that a lot of smartphones would get the scrolling inside.\nHere an example that would effect all iPhones + iPhone SE till iPhone 6\n\n. Thank you, but how can I use it now? There is no description for the new feature.\n. I create a new test file with this code and the new swal2:\n```\n<!DOCTYPE html>\n\n\n\n\n<link rel=\"stylesheet\" href=\"./sweetalert2.min.css\" media=\"screen\">\n\n<script src=\"./sweetalert2.min.js\"></script>\n\n\n\n\n            swal({\n                title: 'Error!',\n                text: 'Do you want to continue\\r\\nDo you want to continue\\r\\nDo you want to continue\\r\\nDo you want to continue',\n                type: 'error',\n                confirmButtonText: 'Cool'\n            })\n        \n\n\n```\nAnd this is how it looks like now:\n\nI guess it should now be scrollable outside the modal window, right?\n. Yes. Just to get sure I just downloaded the latest version and replaced it with the older ones and cleared the cache too.\n. ",
    "Rikk": "Important for mobile, fixed-widths usually will be cut on small screens. And having no overflow: auto, user can't scroll modal contents using scrollbar, when contents are large; for example, a large image or an image with imageWidth set too high.\nA good ability for a popup is to automatically adapt itself to the environment it is present, even if it is unknown.\nI see swal2 (maybe also original swal) uses margin-left and a px value for width to calculate its position...\njs\nmodal.style.width = params.width + 'px';\nmodal.style.marginLeft = -params.width / 2 + 'px';\nInstead, why doesn't it calculate window.width, get its own width, then find the center? And because it is position: fixed, maybe top and left values are the only things it needs to calculate for positioning itself.\nI think the title you set for this issue is not really accurate, while we can't define height we can already define width, but as fixed pixels.\n. ",
    "peratik": "Screenshot:\n\n. \n. Yes it is old webview.\n. ",
    "MatthewHerbst": "You can see the full details in the error message above.\nNode v6.3.0\nnpm v3.10.3\n. Thanks for the npm bug link! Do they use Uber's version still? All I could find was shrinkwrap.js, but no mention of the dependency coming from Uber's package.\n. ",
    "adarqui": "Hey, quick question, couldn't find it in the existing issues. Ok so, how do I enable document scroll? I'd actually like the user to be able to document scroll while the modal is open. Is there a simple way to achieve this?\nThanks!. Cool thanks alot! That worked.. ",
    "xygahs0801": "I found the reason.Because my image not loaded.so the sweetalert can not calculate the height appropriatly.\n. ",
    "kevinvanmierlo": "@limonte This was with an older version of sweetalert2. I had the same problem, but after updating to the latest version it works great!. @birjolaxew Thanks for the info!. ",
    "rasmuswoelk": "Weird. I tried in Safari 9.1.3 and Firefox 48 and it works.\nTried in Chrome 52 for Mac - both in inkognito and regular - and it fails on the demo site.\nI open any alert and when it closes the overlay is still there.\n. In Chrome 53 it works fine on Windows.\n. I restarted my Chrome-app and now it works. That is very very weird but it works now!\n. ",
    "niftylettuce": "I just installed it fine myself\n. I got it to work @limonte by adding a swal() before swal.queue as swal().queue(steps).then();\nPerhaps this needs updated in the docs or there needs to be a patch in place that if getModal returns null, then it needs to create a new instance.\n. Edit: I actually needed to make it swal(); and then swal.queue(steps)\nThough this throws this error now SweetAlert2 expects at least 1 attribute!\n. OK so @limonte we should add documentation that if you require or import the package (e.g. with browserify or webpack) then we need to manually run swal.init();.\n``` js\nimport swal from 'sweetalert2';\n(() => {\n  swal.init();\n  swal.queue(steps).then();\n})();\n```\n. @limonte You are badass.  Thank you!!! \ud83c\udf7b  Do you have a PayPal donation page like I have at https://paypal.me/niftylettuce?  If so let me know!  I am using SweetAlert2 in CrocodileJS at \n. @limonte https://github.com/crocodilejs/crocodile-node-mvc-framework#flash-messaging\n. \n. @limonte I sent a pull request, can you please accept/merge/release new version to npm and ping me back?  thanks! \u2764\ufe0f . Once accepted can you please version bump and release to npm and ping me?  Thanks. one step closer to a stable Lad release, thanks many @limonte \u2764\ufe0f \nI spotted this bug through https://github.com/jonathantneal/postcss-font-magician automatically grabbing Open Sans from Google Web Fonts \ud83d\ude06 . can you publish to npm btw?. ",
    "RossTsachev": "Thank you!\n. ",
    "JamoCA": "I'm using MagnificPopUp 1.1.0 (latest) and sweetalert 7.0.5 (latest). The sweetalert modal is properly displayed and the buttons are clickable, but if I add a \"password\" field, I won't gain focus. I've increased the z-index, but it didn't seem to make any difference.  Is this the same issue as bootstrap?\nCASE USE: I'm using MagnificPopUp to display product details (via Ajax) on a web-based POS. Any buttons with a specific class trigger sweetalert to display prompt to require an administrative passcode to override before continuing. It works, until the buttons are clicked within a MagnificPopUp modal.. Hey @tobiv I noticed the bootstrap solution you posted in 2016 doesn't appear to work now.\nhttps://jsfiddle.net/0Lng89tq/5/\nMagnificPopUp hasn't changed since Feb 2016, so I'm wondering if something in sweetalert regressed or if new browser features are preventing this from functioning properly.  (The input field doesn't seem to gain focus.). ",
    "irman": "@JamoCA I'm having the exact same input not focusable issue right now. Any solution yet?. I think I've found my solution, just in case anyone wondering. Simplifying this: https://github.com/dimsemenov/Magnific-Popup/issues/897\nI just add that line on magnific open callback. E.g:\n$('.listing').magnificPopup({\n    ....\n    callbacks: {\n        open: function() {\n            // Disabling focus enforcement by magnific\n            $.magnificPopup.instance._onFocusIn = function(e) {};\n         }\n    }\n});. ",
    "kitarafrei": "Hmm, I think I tried that! I'll try again, so it would be:\nswal({\n    title: 'Are you sure?',\n    type: 'warning',\n    html: 'Warning Message',\n    showCancelButton: true,\n    confirmButtonText: 'Yes, delete it!',\n    cancelButtonText: 'No, cancel!',\n    confirmButtonClass: 'btn ban-primary',\n    cancelButtonClass: 'btn ban-danger',\n    buttonsStyling: false,\n    showLoaderOnConfirm: true,\n    allowOutsideClick: false,\n    preConfirm: function() {\n        return new Promise(function() {\n            $.post('post.php', { var1: '1', var2: '2'}, function(data){\n                if (!data.success) {\n                    swal({\n                      title: 'Error',\n                      type: 'warning',\n                      confirmButtonClass: 'btn ban-info',\n                      buttonsStyling: false,\n                      html: 'Error Message'\n                    });\n                } else {\n                    swal({\n                        title: 'Success Title',\n                        type: 'success',\n                        timer: 2000,\n                        html: 'Success Message',\n                        showConfirmButton: false,\n                        onClose: function() {\n                            location.reload();\n                        }\n                    });\n                }\n            }, \"son\");\n        });\n    }\n}).then(function(dismiss) {\n  swal(\n      'Cancelled',\n      'Your imaginary file is safe :)',\n      'error'\n    );\n});\nThank you so much!!!\n. ",
    "caseyWebb": "This PR is not ready. I'm having some other issues now. I'll get those and get back here.\n. All is well, ready for merge\n. ",
    "lucasfernog": "hmm my bad, same color for outline and button tricked me\n. ",
    "joextodd": "Sorry that was the wrong link. I have tried to recreate it, but not sure it's possible in JSFiddle.\nJSFiddle\n. Tried to recreate the issue with a bare bones project, and it no longer causes an error so must be something I have done wrong. Closing issue. \n. ",
    "joshterrill": "I have an angular 2 project that I'm trying to use this on. I installed it, then tried to import it, and typescript is saying it can't find the module.\n. ",
    "ctf0": "@limonte had the same issue today and the fix was binding to the window\njs\nimport { default as swal } from 'sweetalert2'\nwindow.swal = swal;. ",
    "2braincells2go": "Sorry to have bothered you.\n. Thanks @acupajoe , appreciate the input. Got a class to teach later this evening and was trying to get my  lesson plan back on track. My bad.\n. ",
    "midcore-nam": "nvm. I have the same class name \"loading\" in my css. I've changed mine. Thanks for quick respond.\n. ",
    "diegomfloripa": "Uncaught (in promise) overlay #185\n. ",
    "dev-seahouse": "Add this : \n.swal2-container.fade{\n  opacity: 1;\n}\n. ",
    "MarkHerhold": "I respectfully disagree with the stance on including es6-promise as a direct dependency. Users should be able to provide their own promise polyfill (such as Bluebird) or none at all (native promises). This just adds unnecessary bloat.. Going through the rest of the issues related to this, it looks like @limonte suffered from a relentless number of issues where many people complained about promise-related errors. Is this why the es6-promise was added?. ",
    "gssumesh": "Wow that was quick !!! \ud83d\udc4d  . I believe you might need to update the example as swal.queue(steps).then(function(result) {\nYou missed, result in input function. But anyways, thanks a lot for quick turn around!!!! :)\n. ",
    "mayeaux": "It's a dead link now. Thanks. ",
    "ahallora": "Okay, thanks. I was hoping there was a cleaner way of doing this, but never mind - it gets the job done. It's good. \ud83d\udc4d  \ud83d\ude04 \n. ",
    "dvlden": "Whoops... Sorry about that. Did not catch that part in README...\nGot it!\n. ",
    "AlexSwensen": "I would say this is an issue with wechat, and not sweetalert2.\n. we don't use bootstrap by default, and i don't think this should be dependant upon using bootstrap.\nI have had to set custom spacing and sizing for both the header text, description text, and button sizes & spacing, as well as overall padding around the modal. Currently i am having to override existing SWAL2 styling, and i have to manually compare and update with every release.\nI feel that Most of these should be broken out as variables (as has been done with colors) to make this process simpler.. @mattbrunetti ah, that makes a lot more sense. \ud83d\udc4d . Agreed. I currently use SWAL2 in an Angular 1+ app, and we find it rather simple to use and modify to our needs. We have written our own wrapper that functions as middleware/service between our app and SWAL2 and increases its effectiveness and flexibility. Adding framework specific patterns/uses/implementations into this library both limit its audience, and add complexity. \n@gilberto-torrezan: It should be trivial to wrap SWAL2 in whatever you need for your own use case. . ",
    "ClaudioNunes": "Sorry,\nWhat I meant was \"support  npm installation of type definitions for sweetalert2\"  as described in https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/ and already possible with sweetalert\n. ",
    "tlewis17": "I've been needing to dive more into TypeScript myself. I started to give it a shot. Here is my initial attempts. I still need to work on the function callbacks and promises. It probably is far from perfect since I'm a TypeScript noobie.\nhttps://gist.github.com/tlewis17/8312a354b92bff6ccc0f1fdc4c9fb91e#file-index-d-ts\n. ",
    "KillerSquid": "Weird- I updated to the latest version an hour ago and was getting undefined.  Just did it again and now it's working.  Thanks!\n. Just downloaded directly from GitHub and added it to my page via <script src=\"./js/sweetalert2.min.js\" type=\"text/javascript\"></script> then dumped cache and hard reloaded in Chrome. (online app in development)\n. ",
    "nikko1337": "@limonte  This is not a confirmation tho, it's just a success message. All I want to do is refresh something on the screen after the user clicks OK or somehow 'dismiss' the success message.\n. Thanks!\n. ",
    "virik": "No one :)\nThe point is to prevent the keyboard from popping up. Example:\nIn our app we ask the user for his email address. If he doesn't want to share this, he will leave the input empty and click next. We then display an error message telling him to confirm, and at the same time the keyboard pops up.\n. ",
    "rol4400": "np\n. ",
    "Spidersouris": "Hi,\nI made a GIF so you can understand what's going on on my end\nActually, it looks like the \"Cancel\" button isn't automatically selected (focused), but when I click on the \"Close\" button or outside the box, It's clicked for some reason.\nI doubt It's related to my browser (Firefox 50.0) since I also tried on Edge and the same problem occurs.\n. ",
    "avil13": "Hi.\ndist/sweetaler2.js In the file does not export.\nCode form file:\nif (window.Sweetalert2) window.sweetAlert = window.swal = window.Sweetalert2;\nThis module use in global scope.\nMaybe better to do the export?\nmodule.export = Sweetalert2;\n. Hi.\nMy version connects your library more correctly.\nWhat gives additional features in the API Vue.. I apologize.\nIn fact, the code that would be different, not so much.\nAnd it is 80% similar.\nThe main difference is that my version is a full Vue wrapper.\nBasically, within Vue applications, you need to use methods in the context of the object.\nWhich, moreover, it is better not to have the right to change.\nExample:\njavascript\nexport default {\n    methods: {\n        showAlert(){\n            // Use SweetAlret2\n            this.$swal('Hello world!');\n        }\n    }\n}\nBut sometimes you need to have access to this method through a wrapper from outside.\njavascript\nVue.swal('Hello world!');\nThis difference is really minimal.\nBut it conforms to the rules for creating plug-ins for Vue.\nIn any case, it's up to you.\nI just wanted to share the opportunity to do this.\nThank you.. Thanks for the suggestion.\nOnly I do not know what I should do.. Thank you.. ",
    "beeman": "@eestein if you happen to use angular-cli for your project you can take a look at this implementation: https://github.com/joshterrill/ng2-cli-sweetalert2\nI'm using it this way (referencing dist/sweetalert2.js from angular-cli.json) and that works, thought I'd rather not add files to angular-cli.json but just do an import 'sweetalert2' where I need it. . @limonte awesome that TypeScript is going to be support and @toverux thanks for implementing it!\nI just tried it in my project and it seems that sweetalert2.d.ts is not being published in the NPM package, so possibly the publish step needs some adjustment:\n```\n$ mkdir test-sweetalert\n$ cd test-sweetalert\n$ npm init -y\n$ npm install sweetalert2\ntest-sweetalert@1.0.0 /private/tmp/test-sweetalert\n\u2514\u2500\u252c sweetalert2@6.2.5\n  \u2514\u2500\u2500 es6-promise@4.0.5\n$ cd node_modules/sweetalert2\n$ find .\n.\n./dist\n./dist/sweetalert2.common.js\n./dist/sweetalert2.css\n./dist/sweetalert2.js\n./dist/sweetalert2.min.css\n./dist/sweetalert2.min.js\n./LICENSE\n./package.json\n./README.md\n./src\n./src/sweetalert2.js\n./src/sweetalert2.scss\n./src/utils\n./src/utils/classes.js\n./src/utils/default.js\n./src/utils/dom.js\n./src/utils/utils.js\n```. @limonte works like a charm, thanks for the quick fix! \ud83d\udc4c\ud83c\udffb \ud83c\udf7b. ",
    "eestein": "@beeman that's cool, thanks :). ",
    "ekscentrysytet": "Thank you! Will be waiting for fix!. ",
    "taytus": "I kinda fixed it with a hacky solution: https://jsfiddle.net/ad3quksn/66/\nThank you!!. @limonte Thank you for the link, that didn't solved my problem thou.\nFor anyone looking for a solution to similar problem, this is how I fixed it:\nfunction aux_chaining($steps,$callback,$loader=true){\nswal.setDefaults({\n    input: 'text',\n    confirmButtonText: 'Next &rarr;',\n    showCancelButton: true,\n    animation: false,\n    progressSteps:aux_progress_steps($steps),\n    showLoaderOnConfirm:true,\n\n    inputValidator: function (result) {\n        return new Promise(function (resolve, reject) {\n            if (result) {\n                resolve()\n            } else {\n                reject('You need to write something!')\n            }\n        })\n    },\n    preConfirm: function() {\n\n        if(swal.getQueueStep() == $steps.length-1) {\n            return new Promise(function (resolve, reject) {\n                setTimeout(function() {\n\n                    resolve();\n                }, 100);\n\n            }).then(function(){\n                swal('Ajax request finished');\n            })\n        }else{\n             //THIS IS THE FIX\n            swal.setDefaults({input: 'password'});\n\n            return new Promise(function (resolve) {\n                setTimeout(function() {\n                    resolve();\n                }, 1);\n            });\n        }\n    }\n\n});\nswal.queue($steps).then(function (result) {\n    swal.resetDefaults();\n    $callback(result);\n})\n\n}\n. ",
    "leonardoteck": "That's OK. Thanks for this amazing tool! . ",
    "maschwenk": "For example: \n. ",
    "akarelas": "When will the plain \"text\" property be fixed, so that it escapes html?. Wouldn't it be even better for the second parameter to be text, but convert it manually into HTML, while substituting \\n with <br />?. I guess it's not very difficult for the user to define a function that will convert text into HTML and replace \"\\n\" into br's, so I'm ok with that.. ",
    "mockdeep": "That would be great. Thanks so much!. Seems to be related to this, we saw errors about setPrototypeOf. Unfortunately, core-js, which babel-polyfill uses under the hood, doesn't cover this. Version 7.19.3 resolved this issue for us as well.. Ah, I see. FWIW, we saw this on IE10, which are still, unfortunately, > 2% of our users. Thanks for the fix!. With polyfills it is! At least for our use case.. We'll keep that in mind. We don't use it extensively, and are in the process of shifting more towards bootstrap modals, anyway.. FWIW, anecdotally, I have an excellent mobile connection in the bay area, and I still regularly abandon web sites that are loading too slowly.. ",
    "projct1": "@birjolaxew its very inconvenience using swal all time with object as params, that get line-breaks\nswal({ html: err.join('<br>'), title: 'title', etc }) => inconvenience\nswal('Error :(', err.join(\"\\n\")) => clearly, simplicity and great =). Thanks, i am happy now =). Can i do this globally? .catch(swal.noop) ?. @birjolaxew  Oh, so crutch :) But works, thanks =). @birjolaxew But no, on press Cancel, anyway triggers OK button with resolve function (. I dont know how exacly reproduce my case in fiddle, because i use webpack and modules.\nThis error appear on stage, when i write this in main.js file window.swal = require('sweetalert2');\n. Sigh, i very bad understanding how configure webpack and using laravel-elixir-webpack-official and my gulpfile deadly simple =) :\n```javascript\nconst elixir = require('laravel-elixir');\nrequire('laravel-elixir-vue-2');\nelixir(mix => {\n    mix.sass('app.scss').webpack('app.js');\n});\n. But, users, who are not using bundlers, will catch this error too?. Maby, for more support, should change `const` to `var` or `let`? ). Ok, thanks you too =). Its inconvenient, because i have to **overwrite** all styles, when i could just write my own styles.\nIts clean and good \ud83d\ude03. @limonte Yea, thanks \ud83d\udc4d . @limonte Yea, and for disable all styling mayby allow to set `defaultStyling: false` for disable all default styling?. Yea, now i totally overwrite (crutch) all swal styles for bootstrap 4, and have to set default settings:javascript\nswal.setDefaults({\n    buttonsStyling: false,\n    confirmButtonClass: 'btn btn-success w-25 mr-05',\n    cancelButtonClass: 'btn btn-secondary w-25 ml-05'\n});\n. @toverux Maybe this can do with queue? How i can roam by steps in queues?. @toverux Sigh. I have form in swal content. And i want to get access to this form for some operation and submit on swal accept, not onClose \ud83d\ude03. @toverux Oh dude, thanks for idea of using preConfirm \ud83d\ude03. @limonte Hmm, maybe will be better, if `swal.getContent() ` will return clean content without wrapper `.swal2-content`? \ud83d\ude04. @limonte Yea, but i need content only, without uneccesary wrapper.\nI written `$('.swal2-content')` only for find my form inside swal.\nMy final code was `$('.swal2-content form')` =)\n. @limonte Dude, i meant `swal.getContent()` for getting **clean user content** without excess wrappers.... \".swal2-content\".innerHTML. Here my case:javascript\n$.get(e.target, function(response) {\n                    swal({\n                        html: response,\n                        / some params /\n                    }).then(() => {\n                        let form = $(swal.getContent().children);\n                    $.post(form[0].action, form.serialize());\n                });\n            });\n\n. Windows 10, firefox and chrome. My swal version is 6.5.2\nI import swal styles in this manner `@import 'node_modules/sweetalert2/src/sweetalert2';`. http://joxi.ru/Y2LqPzBu0586A6. Hmm, here is ok http://joxi.ru/Dr8nJRjHe8yD26. Btw, this rules for border from example.css http://joxi.ru/KAx58BNI75RLr8. Thx u too \ud83d\udc4d . But ok, i got this nice crutch:javascript\nswal({\n    title: '\u0412\u044b \u043f\u0440\u043e\u0438\u043d\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0437\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u043e \u043e\u0442\u043c\u0435\u043d\u0443?',\n    type: 'question',\n    text: '\u0415\u0441\u043b\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0437\u0432\u043e\u043d\u0438\u0442\u044c\u0441\u044f \u0434\u043e \u0437\u0430\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0438\u043b\u0438 \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435',\n        onOpen: function() {\n            $(swal.getCancelButton()).clone().addClass('ml-1').removeClass('w-25').text('\u041d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f').appendTo('.swal2-buttonswrapper').one('click', function() {\n                this.order.bar_informed_about_cancel = 2;\n                swal.close();\n                this.processSave(params);\n            }.bind(this));\n        }.bind(this)\n})\n. Ty dude \ud83d\ude03. Yea, thx, i made a typo, fixed it \ud83d\ude04.js\nswal({\n    onOpen() {\n        //here this is null :(\n    }\n}).then(() => {\n    this.order.bar_informed_about_cancel = 1; //here this is fine\n    this.processSave(params); //here this is fine\n}).catch(() => this.order.bar_informed_about_cancel = 0);  //here this is fine\n```. @limonte Ok thanks, description and example was not quite clear :). ",
    "3du4": "I have a string with new lines inside of the text variable, how do I display the new lines inside of the alert?. @limonte, thank you. I had to create function to replace all concurrences but it worked :)\n. ",
    "tobiv": "Excellent, thanks for your answer. Looking for the event listener, I found a solution in bootstrap:\n$('#myModal').on('shown.bs.modal', function() {\n        $(document).off('focusin.modal');\n    });\nhttps://jsfiddle.net/0Lng89tq/5/. ",
    "moazam1": "Thanks @tobiv . ",
    "lc850": "Thanks @tobiv real and good solution.. ",
    "cookienfy": "Excellent, Thanks for @tobiv . This problem has confused a long time. Today it was solved finally.. ",
    "aramiscubillo": "For me the problem was that I was using jquery 3.2.1, so I change it to 2.1.3 which was use on previous app we had develop and everything worked fine. Might be something with jquery and bootstrap compatibility versions. . ",
    "madmark81": "I'm looking to solve this problem in R. Would anyone here know how to code it for R? I have an app with the problem here on github that you can use to try. Would really appreciate any help!\n. Thanks for your fast response, but Yeah I found that line of code, only I\ndon't know how to convert it so that it works in R.\nI assume you can't use it like this\nMark\nOn 13 Jan 2018 20:25, \"Sam Turrell\" notifications@github.com wrote:\n\n@madmark81 https://github.com/madmark81 and anyone else that come\nacross this issue, you can usually solve bootstrap modal focus issues by\ndisabling the focus enforcement using $.fn.modal.Constructor.prototype.enforceFocus\n= function () {};\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sweetalert2/sweetalert2/issues/374#issuecomment-357459577,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Acj0d7QHmE8Hm5V7CBhzG3sK58-vrwXrks5tKQM7gaJpZM4LT1Mw\n.\n. @limonite I was asking for a solution using R and Shiny. Any clue how to make that line of code work in R? \n. Limonite, I have no experience in making fiddles in either java HTML or CSS\npurely. I work in R only and shared the entire working examples in the\nstack overflow issue I linked\n\nCheers, mark\nOn 8 Jul 2017 20:42, \"Limon Monte\" notifications@github.com wrote:\n\nFor bug reports, please include:\n\na jsfiddle https://jsfiddle.net/ in order for us to be able to\n   reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\nSee Contributing.md\nhttps://github.com/limonte/sweetalert2/blob/master/contributing.md\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/567#issuecomment-313873933,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Acj0d5nIQFjxI1a6Fpxf8UY90RcXDvctks5sL82HgaJpZM4OR0Ew\n.\n. hello Limonite,\n\nI'm still hoping that you will answer my email about the sweetalert\nproblem, either by looking at my Stackoverflow post, or helping me on my\nway on how to turn an R shiny App into a fiddle because I don't know how to\ndo that.\nCheers, Mark\nOn Sat, Jul 8, 2017 at 8:56 PM, Mark van Dijk markvandijk81@gmail.com\nwrote:\n\nLimonite, I have no experience in making fiddles in either java HTML or\nCSS purely. I work in R only and shared the entire working examples in the\nstack overflow issue I linked\nCheers, mark\nOn 8 Jul 2017 20:42, \"Limon Monte\" notifications@github.com wrote:\n\nFor bug reports, please include:\n\na jsfiddle https://jsfiddle.net/ in order for us to be able to\n   reproduce the issue.\nexpected behavior of the plugin\nactual behavior\n\nJSFiddle template: https://jsfiddle.net/limon/ad3quksn/\nSee Contributing.md\nhttps://github.com/limonte/sweetalert2/blob/master/contributing.md\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/567#issuecomment-313873933,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Acj0d5nIQFjxI1a6Fpxf8UY90RcXDvctks5sL82HgaJpZM4OR0Ew\n.\n\n\nhttp://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail\nVirus-free.\nwww.avg.com\nhttp://www.avg.com/email-signature?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail\n<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>\n. ",
    "adykn": "Thanks all around...\n. ",
    "countryroadgraphics": "sweetalert2.js?ver=6.2.3:1383 Uncaught (in promise) TypeError: Cannot set property 'className' of undefined\n    at sweetalert2.js?ver=6.2.3:1383\n    at modalDependant (sweetalert2.js?ver=6.2.3:958)\n    at sweetAlert (sweetalert2.js?ver=6.2.3:1545)\nThis appears to happen as soon as the second SWAL call is made after the first promise is resolved via ajax.. Just tried in a fiddle and appeared to work.  Will check if there is a conflict with other scripts.\nAs a side note, the second SWAL does load and display the info, however the .then() function never fires for it.. ",
    "reggaemuffin": "I found what is the problem, I am using materializecss for my site and their css changes the input. I made a JSFiddle with it: https://jsfiddle.net/2jmf6L6w/1/\nMy Edge is currently working but I'll test it on mobile, there is was the prominent problem.... Okay I tried this, with all mobile browsers and the jsfiddle works perfectly fine... I'll close this till I can reproduce the issue in a fiddle!. ",
    "marcuslma": "I tested into feedle: https://jsfiddle.net/o1hkat2h/2/\nIt's working properly there.\nI am using through npm package: import { default as swal } from 'sweetalert2'\nAnd it's not working.\n. Guys, I am so sorry, for wasting your time.\nA fucking ; after my class was breaking everything.\nSorry again, so amateur.... ",
    "tomek14": "For TypeScript >= 2.0 we can use npm @types/, and download typings from npm, please consider putting typings separately on npm. . ",
    "mholt": "I can't. Unless I can tell JSFiddle which headers to send back from the server. Any CSP that doesn't allow \"unsafe-inline\" (which is an arguably bad CSP - see https://securityheaders.io) will block it from running.. Thanks @birjolaxew  :smile: FWIW, I would recommend Caddy (disclaimer: author); it runs everywhere without trouble and is very easy to set this header. In fact, just put this in a file called Caddyfile and run caddy from the folder:\n```\nlocalhost\nheader / {\n    Content-Security-Policy \"style-src 'self'; script-src https://www.google-analytics 'self' data: blob: https:; img-src 'self' data: https:; font-src 'self' https: data: blob:; media-src 'self' https: data: blob:; connect-src 'self' https:; object-src 'none';\"\n    X-Frame-Options        SAMEORIGIN\n    X-Content-Type-Options nosniff\n    X-XSS-Protection       \"1; mode=block\"\n}\n```\nThese are the security-related headers I'm currently using. Basically, you just need to un-inline the style=\"\" CSS and put it in the CSS file instead.. Awesome - thanks!. Works great - thank you!. ",
    "ekoome": "getting same issue with v7.12.9\nsweetalert2.all.js:2001 Refused to apply inline style because it violates the following Content Security Policy directive: \"default-src 'self' data: gap://ready\". Either the 'unsafe-inline' keyword, a hash ('sha256-47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU='), or a nonce ('nonce-...') is required to enable inline execution. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.\n. ",
    "binarious": "@limonte I'm having the same issue with 7.25.6 and webpack.\nMy code:\njs\nimport Swal from 'sweetalert2'\nSwal({ ... });\nError:\n\nAlso tried adding styles separately with @import '~sweetalert2/dist/sweetalert2.min.css'; in my scss files.\n. ",
    "malcolmocean": "So I was like \"gah, sweetalert has all of these issues and isn't being maintained and PRs are being ignored. Surely there's got to be a best replacement!\" ...but there are over 2000 forks!\nFortunately sweetalert2 was result # 8 when I googled \"sweet alert focus\". But what would have been awesome is a link to sweetalert2 on this sweetalert issue thread, which is actually talking about the bug I had (or at least a related bug). This could even be reasonable to do without having already fixed the bug yourself, because @EduardJS commented \"I will make a PR tomorrow with a fix for this.\" and it would be helpful for him to know that sweetalert isn't really accepting PRs while sweetalert2 is!. Well that seems worth mentioning on threads like those in general! That way we'll get more critical mass moving over here :smile: . .......true. I totally skimmed the list, and also ctrl+f'd for 'left', 'right', 'position', and 'confirm', and after none of those showed up, I concluded it wasn't there. Maybe a tiny documentation update, both to that page and also to the Migration Guide, would be good?. ",
    "EduardJS": "@malcolmocean Hei Malcolm. To be honest, I already knew swal2 is out. I made that PR just for the people who don't want to boggle with moving towards the new version, which has it's differences.\nI already wrote in another issue, that people can go towards the new version. It's just that google still points most of them to this one :)\nRegards. ",
    "jdussouillez": "I discovered SweetAlert \"1\" thanks to the browser extension Wappalyzer while I was on a website with beautiful alerts. On the Wappalyzer SweetAlert page I found the project website (the link is now dead) and used it.\nSwal2 was already out for a few months but I didn't know that. I used swal1 for a while until I found a bug and discovered this project.\nSwal2 detection is not implemented by Wappalyzer and I think it would be nice to do it. People could discover and use swal2 first, instead of swal1.\nI know this project is \"only\" a fork but it's becoming more and more different from the original.\nI made a quick search on how the module detection works. Apparently you juste have to add a new configuration in the extension application list. Here's the swal1 configuration. Wow, that was fast ! Thanks! . ",
    "carganilla": "I'm using TypeScript 2.1.4, webpack 1.14.0, Angular2 and had the same issue.  I tried the test branch and it works!. ",
    "readme42": "@toverux \nI'm using TypeScript 2.0.10, not the 1.x branch. \nIm sorry, but i will not be able to test your test branch before 03.01.2017 - but then i will. Thanks for your fast response :)\n. @toverux (CC @limonte )\nMy promised feedback: your branch fix/named-exports works like a charm with TypeScript 2.0.10 and Webpack 2.1.0-beta.27 :). great work, thanks a lot :) . If going configurably, I personaly would prefer the insert-logic used by ng-bootstrap for modals. They enforce the template \nhtml\n<template ngbModalContainer></template>\nsomewhere in your markup. The Modal is inserted at exactly this place. \nEdit: \nSorry, I forgot there is a  world outside angular :D \n. ",
    "vishnuindrabalan": "Thanks, good job.. ",
    "SasSam": "@readme42 I'm not using Angular.. @limonte I'd detach the whole \".swal2-container\" element and append it to the newly defined \"root\" element.. Currently it's hardcoded in the dom.js to append it to the body.\nhttps://github.com/limonte/sweetalert2/blob/master/src/utils/dom.js#L25\n. @limonte Ahh.... sorry! I'd see the same behaviour as it has now, so it should fill the whole body. However it could be an another feature in the future to define its scope. :)\n. @toverux Yes, it does make sense. I call the close() with a parameter and it works.. ",
    "simshaun": "Yea that would be a lot better,\n\n. ",
    "dethierx": "I try the plunker with 2 other computers, no problem.\nThe one with problem: windows 7 64bits.\n\nHow can i have an encoding problem with a plunker?\n. I delete my local buggy font \"helvetica regular.ttf\" and and everything works perfectly.. ",
    "dr-andy": "Should be body.swal2-shown{overflow-y:auto}. ",
    "acSpock": "Thanks for responding tover. I am currently using typescript version 2.1.4 and SA2 6.2.9\nI get undefined from your first suggestion. However, my output from\nimport * as swal from 'sweetalert2';\nconsole.log(swal);\nis\n````\nfunction sweetAlert() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n  if (sweetAlert.isVisible()) {\n\n````\nAnd when I invoke the function swal('test') I get a compile error\nERROR in [at-loader] app/services/test.service.ts:10:1\n    Cannot invoke an expression whose type lacks a call signature. Type 'typeof \"sweetalert2\"' has no compatible call signatures.\nI have suspicion this has to do with the fact that SA2 is ES6 where i'm compiling to ES5 with webpack\n. Thanks that seems to fix the error. Now I need to get my scss loaded correctly.\nThanks tover.. ",
    "IronCoderXYZ": "@acupajoe @toverux \nThank you, I am absolutely fine with using my JQuery datepicker within sweetalert, but I could not find any examples on the internet on how to call my datepicker function, could someone clarify?\nMy datepicker code is as follows, and I am using the sweetalert chaining modals option.\n```\n$(function () {\n    $('#datepicker').datepicker({\n    onSelect: function () { // When cal is opened execute\n        var currentDate = new Date($(\"#datepicker\").datepicker(\"getDate\"));\n        var strDateTime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\n        startDatabaseQueries(strDateTime);\n    }\n})\n\n});\n```\n. @toverux Thank you so much for providing an example!\nI feel as though I am doing something wrong though, I tried implementing your code in my chaining modal but the datepicker is not showing: (I know I am missing the promis function but I am just trying to get the datepicker to show)\n```\nfunction bodyStatsEntry() {\n    swal.setDefaults({\n        input: 'text',\n        width: 400,\n        padding: 20,\n        background: '#fff url(//pptback.com/uploads/blue-squares-backgrounds-powerpoint.jpg)',\n        confirmButtonText: 'Next \u2192',\n        showCancelButton: true,\n        animation: false,\n        progressSteps: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11']\n    });\nvar steps = [\n    {\n        html: '<div id=\"datepicker\"></div>',\n        onOpen: function() {$('#datepicker').datepicker();},\n        title: '<span style=\"color:#98D4E4\">Arm Size<span>'\n        //text: 'Chaining swal2 modals is easy'\n    },\n    '<span style=\"color:#98D4E4\">Body Fat Percentage<span>',\n    '<span style=\"color:#98D4E4\">Calf Size<span>',\n    '<span style=\"color:#98D4E4\">Chest Size<span>',\n    '<span style=\"color:#98D4E4\">Forearms Size<span>',\n    '<span style=\"color:#98D4E4\">Hips Size<span>',\n    '<span style=\"color:#98D4E4\">Neck Size<span>',\n    '<span style=\"color:#98D4E4\">Shoulder Size<span>',\n    '<span style=\"color:#98D4E4\">Thighs Size<span>',\n    '<span style=\"color:#98D4E4\">Waist Size<span>',\n    '<span style=\"color:#98D4E4\">Weight<span>'\n];\nswal.queue(steps).then(function (result) {\n    swal.resetDefaults()\n    swal(\n            'Body Stats Submitted',\n            '',\n            'success'\n            ),\n            arms = result[0];\n    bodyfat = result[1];\n    calves = result[2];\n    chest = result[3];\n    forearms = result[4];\n    hips = result[5];\n    neck = result[6];\n    shoulders = result[7];\n    thighs = result[8];\n    waist = result[9];\n    weight = result[10];\n    console.log(arms, bodyfat, calves, chest, forearms, hips, neck, shoulders, thighs, waist, weight);\n    writeNewPost();\n}, function () {\n    swal.resetDefaults();\n});\n\n}\n```. Edit, not sure why the dev would downvote someone trying to use his project; I am trying to learn here.. @toverux Thank you for taking the high road, I understand.. ",
    "offenseindepth": "It would be great if we could define the top margin/vertical position of the modal. Is there any intention to have this implemented soon? Is there a possible workaround to get by in the meantime? Thanks and great work!. ",
    "mrchimp": "I would much prefer to configure this in my SCSS. All that would be required would be to change e.g.\n$success:  #a5dc86;\n\nto\n$swal-success:  #a5dc86 !default;\n\nThen I can just set those variables in my variables file and then include sweetalert2.scss or it can be compiled as it would currently.\nIf this sounds good, I'm happy to make a pull request.. I would say yes and yes.\nOn Sun, 2 Apr 2017, 10:25 Limon Monte, notifications@github.com wrote:\n\nThanks a lot for you feedback @dobromir-hristov\nhttps://github.com/dobromir-hristov !\n\nShould we add !default to $transparent as well?\nShould swal2- prefix be added to $black, $white and $transparent\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/410#issuecomment-290975001,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAI_rS1mqnr2bbdJkdXswU2BVgN6Oh1Nks5rr2mAgaJpZM4Ljkg4\n.\n. \n",
    "dobromir-hristov": "Yeah for starters the scss variables should be overridable with !default. A good approach is to have a seperate file with all the variables that is included in the main one. That way you can see a well documented list of variables, that if you define before your inclusion of the sweetalert scss they are overriden and you are good to go.\nAlso like the way that they are now, if I decide to include the scss into my build, the variables will override my own if not included as a last file.. Zurb's Foundation has a black and white variables and allot of the times these are not exactly pure white and black.  Maybe add a !default to those as well ? Just in case. \nGreat work on the variables.. @limonte Yeah. Its a good practice to prefix all your variables. If a user would like to override them easily with his own he could do\n$swal2-black: $black // Lets say we have $black defined already.\nbefore the inclusion of the swal styles.. Waw... Use npm.. :D. ",
    "cr101": "@mattbrunetti Bootstrap 4 Beta is 91% complete. It would be great to have support for Bootstrap 4 as well.. ",
    "craigs100": "Why not just have the ability to switch off the built-in styling all together and provide your own stylesheet/styles? I added this to a project but apparently it's not \"on brand\" and changing it appears to be too complex a job so having to ditch it unfortunately :(  Also would like the JS and CSS files separate so I can decide when and where to load and possibly modify them. Any chance of a sensible download or have I missed the point? Sorry if this sounds mean spirited but just trying to get a job done. I like the idea, just needs some work on the delivery. Many people don't use SASS/LESS and would be very happy with a CSS file. K.I.S.S. ;). Thanks for your replies. I don't see a /dist/ directory anywhere. All I see is a Git repo for devs to build their own, or two CDN's that just pull down a combined JS and CSS file. No zip or CDN of the basic js and css files which is what you'd expect as a web dev/user.. Thanks for the links to the files but that's the problem. What's wrong with a simple zip file to download rather than insist people have to install npm, node, gulp, grunt, bower or whatever just get get hold of it? Thanks, but I've just built my own. It was easier in the end and will be more flexible in the future. K.I.S.S. ;). Thanks for the heads up. I didn't realise what I needed was just in the /dist/ directory. Web development has got vastly over complicated in the last 5 or 6 of the 21 years I've been doing it professionally. The maxim \"Keep It Simple Stupid\" seems to have been lost. Let's hope it returns soon so people can concentrate on building fantastic sites rather than wasting time on the scaffolding. Good luck with your efforts and thank you.. ",
    "zenflow": "\nWhy not just have the ability to switch off the built-in styling all together and provide your own stylesheet/styles? \n\n@craigs This needs to be documented, but it is already possible. Just require/import 'sweetalert2/dist/sweetalert2' instead of 'sweetalert2'.. those modules are the same except one injects the default css and one does not.. > Also would like the JS and CSS files separate so I can decide when and where to load and possibly modify them.\nThe dist folder also contains the styles as a plain css file. @craigs100 compiled files are typically not checked into source-control, i.e. Git. They are in the package published on npm though, so you get them when you npm install sweetalert2.. You can also find them on unpkg.com which serves all the files from all the packages on the npm registry.. see the index for this package.. https://unpkg.com/sweetalert2/. > What's wrong with a simple zip file to download rather than insist people have to install npm, node, gulp, grunt, bower or whatever just get get hold of it? \n@craigs100 This particular project has gone out of our way to provide every possible way of accessing the package, so what you say is possible with sweetalert2.. https://github.com/sweetalert2/sweetalert2/archive/v7.19.2.zip .. Every release is available like this.\nBut FWIW, for more serious projects I would recommend getting used to package managers (e.g. npm) and bundlers (e.g. webpack, browserify), since (1) they make it much easier to upgrade versions and (2) this way every library you try to use will work. It is more complex to start out, but it's more powerful and makes things simpler and easier in the long-run.. const {dismiss, value: favoriteColor} = await swal({text: 'What is your favorite color?', input: 'text'})\nif (dismiss) {\n  swal(`I did not get your favorite color because \"${dismiss}\".`)\n} else {\n  swal(`Your favorite color is \"${favoriteColor}\".`)\n}\nconst {value: name} = await swal({text: 'Full name?', input: 'text'})\nconst {value: location} = await swal({text: 'Location?', input 'text'})\nawait swal(`Hi ${name}, from ${location}!`). Fun fact: With Chrome 62 you can execute the above example code in your console.\n\nBut otherwise, top-level await is not allowed.. The line @thr0wn references uses Array.from to convert a NodeList to an array.\nIt should instead use Array.prototype.slice.call like the next statement below.. > Also, automatization could easily break things for us. For example, in the latest bump-commit 742fc95 I had to fix the JS minification step in config/utils.js as uglify-js dependency was updated from v2 to v3 without backward compatibility (https://github.com/mishoo/UglifyJS2#note)\n@limonte Sorry can you tell me what this problem..\nhttps://github.com/sweetalert2/sweetalert2/blob/742fc95280d6d986778c168d8bb5ef6afb3bb8ce/package.json#L27\nhas to do with commitizen and semantic-release?. We could probably use semantic-release internally and just format the commit messages during merge, but i don't know if it's really necessary. Knowing if it's a major or minor or patch is not that hard to do manually. . @toverux I'm now pretty sure this would be really helpful, but I still have a couple questions/concerns\nWe use squash-and-merge to merge PRs in Github (currently), so what happens when someone makes a PR with commits of different types, e.g. \"fix(foo): Fix something\" and \"style(foo): Tidy up code style\"? A squash-and-merge combines the commits into one commit with one message, so how do we deal with that?. @toverux That makes sense. Thanks for the wisdom!\nI set up semantic-release in sweetalert2-react-content, and I must say it feels pretty powerful, and I haven't even done any custom configuration yet!. Yep, absolutely loving semantic-release for the fully automated release (as soon as a relevant change makes it to master), GitHub integrations (posts on issues & PRs when the change has been released), the CHANGELOG.md, and maybe more to come\nI'm 100% in favor of using semantic-release in this repo too, but I would like to not use commitizen (or similar) in a precommit hook because:\n\nWe squash-and-merge our PRs, so (unless the PR only has a single commit) we have to write the standard commit message for the merge commit ourselves anyways. \nI like to make temporary commits while I'm working, and then do some interactive rebasing later to pretty it up. If we had this repo configured this way, I'd have to first disable it in whatever branch i'm working in, and make sure it isn't included in a PR, and that would be cumbersome.\nSome [potential] contributors might not be familiar with the standards for commit messages, and it would be a pain for them. . Is anyone opposed to setting up semantic-release? @limonte @acupajoe @samturrell ?. >  I thought semantic-release is based on properly formatted commit messages.\n\nIt is, but we don't need commitizen to enforce that, especially since those commit messages often don't make it into master (the only place where it actually matters). In the case of a PR, there is often more than one commit, so the default commit message in Github is the title of the PR, which will most likely not be in the correct format, and so we will have to format the message ourselves anyways much of the time. It seems like for this reason (and the other above reasons) we should just not bother with commitizen, and instead rely only on writing the proper commit messages ourselves when we merge PRs.. If nobody does object to this, I think the first step will be finding (or building) a semantic-release plugin to handle committing the dist folder to the dist branch, i.e. keeping what our release.js script does for our Bower users.. Despite you need for this functionality, sweetalert2 supports only one modals at a time, so the question doesn't make sense (you can only close the currently open modal). @restubaliantara closeOnConfirm is not a parameter for sweetalert2. There are a few breaking changes from the original sweetalert package. This should help - https://github.com/limonte/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#5-closeonconfirm-and-closeoncancel-parameters-replaced-with-preconfirm. Is this a React component?. Absolutely, I'll do so at lunch today. @limonte @toverux @birjolaxew @samturrell @acupajoe @patrickhlauke Thank you for accepting me on this very excellent team! It is really an honor. I very much look forward to working more with all of you! \ud83d\ude04 \n@limonte Awesome! You can use this email address - zenflow87@gmail.com \ud83d\udc4d . @Rohit-chapter Please open an issue with a JSFiddle. There are links to a couple JSFiddle templates in the issue template.. @resmigenc Please open an issue with a JSFiddle. There are links to a couple JSFiddle templates in the issue template.\n. @acupajoe Ahhh. A rookie mistake.. I'll rebase this branch, and then I think I'll have to open a new PR because it will be a different branch.. Replaced by PR #674. #### The inputValidator API /w expectRejections=true (current behavior)\n```\nfunction inputValidator (input) {\n  return input === '' ? Promise.reject('Must not be blank')\n    : input.length > 30 ? Promise.reject('Must not be over 30 characters')\n    : Promise.resolve()\n}\n// as an async function\nasync function inputValidator (input) {\n  if (input === '') {\n    throw 'Must not be blank'\n  } else if (input.length > 30) {\n    throw 'Must not be over 30 characters'\n  }\n}\n```\nNote that the throw 'text' statements violate the no-throw-literal eslint rule\nThe inputValidator API /w expectRejections=false (newly enabled behavior)\n```\nfunction inputValidator (input) {\n  return Promise.resolve(input === '' ? 'Must not be blank'\n    : input.length > 30 ? 'Must not be over 30 characters' \n    : null)\n}\n// as an async function\nasync function inputValidator (input) {\n  return input === '' ? 'Must not be blank'\n    : input.length > 30 ? 'Must not be over 30 characters' \n    : null\n}. My god, still have commits to files in dist/. Very sorry about that all. Don't know how I managed that... \ud83d\ude1b . @toverux Yeah, I think the API you put forward is simpler and better. \nSo if showValidationError is called during preConfirm (and not cancelled out by resetValidationError) the dialog will stay opened.\nI think it's useful knowledge that you can do this so I'll be sure to document it.. I'll close this PR now, since I'm going to rebase my work and open another PR (That one's the one!). I'd say changing the default is a not-so-big breaking change, but removing the option and forcing the new behavior is a major breaking change, and will require significant refactoring in some projects.\nI think it would be really dev-friendly if we gave users a grace period of one major iteration, where they can still be up-to-date with the newest version, and they can update their usage, gradually and or when it's convenient.\nIf we did that, a deprecation warning when the user passes useRejections: true would be the way to go.. @limonte Will examples in index.html be updated in regards to this?. @limonte I think there should be a console.warn('[sweetalert2] useRejections is deprecated and will be removed in the next major release.') for when someone passes userRejections: true, as suggested by @toverux. Let's make totally sure everyone still using this option is aware that support ends soon, so they can use this grace period to upgrade their usage.\nI'll make a PR for this at lunch today, and I'll include something similar for expectRejections off-the-bat.. So with the new behavior, these...\n```\nasync function inputValidator (input) {\n  if (input === '') {\n    throw 'Must not be blank'\n  } else if (input.length > 30) {\n    throw 'Must not be over 30 characters'\n  }\n}\nasync function preConfirm (input) {\n  if (isBad(input)) {\n    throw 'bad!'\n  } else {\n    return someTransform(input)\n  }\n}\n```\n... become these ...\n```\nasync function inputValidator (input) {\n  return input === '' ? 'Must not be blank'\n    : input.length > 30 ? 'Must not be over 30 characters' \n    : null\n}\nasync function preConfirm (input) {\n  if (isBad(input)) {\n    swal.showValidationError('bad!')\n  } else {\n    return someTransform(input)\n  }\n}\n```\nAnd you can remove the async keyword and they work the same :). The failing test 'modal shows up' is flaky in my local testing\nthis sometimes happens\n\nthen i refresh and it's fine\n\nIf we somehow just triggered another build it would probably pass, but we should look into fixing that test.. 1. Thanks @limonte!\n2. Agreed\n3. Absolutely, I should be able to do so tonight\n3. Agreed. Alright, made changes to index.html, README.md and sweetalert2.d.ts\n- Documenting the new option\n- Updating documentation and examples of the inputValidator and preConfirm functions to reflect the new default behavior.\n@toverux How can I indicate in sweetalert2.d.ts that a function may or may not return a promise?\n. I think this is ready to merge, aside from a tweak to sweetalert2.d.ts (see my above question for @toverux)\n@limonte Agree/disagree? How does it look? Any more changes you want to see?. @toverux \nThere's no ValidationError type in the file yet, but wouldn't that just be string? Also inputValidator can return no validation error (indicated by a falsy value), so if I substitute string | void for ValidationError would that be valid?\ninputValidator?: (input: any) => Promise<string | void> | string | void;\nSimilarly preConfirm can return a promise with a void resolution value type, so this is valid right?\npreConfirm?: (inputValue: any) => Promise<any | void> | any | void;. @toverux My bad. I see the ValidationError in your snippet now.. @toverux Is this valid and explicit (and ok)?\ninputValidator?: (inputValue: any) => Promise<string | void> | string | void;\npreConfirm?: (inputValue: any) => Promise<any | void> | any | void;. @toverux Thanks for explaining the difference! I think I've got it now. Using null for inputValidator since it's expected to return something (null and undefined included). Using void for preConfirm (as in your example) since it can simply return; and there's no real significance of return null; or return undefined;. Another update I'd like to see to the Github page: Examples using ES-next features (e.g., const, destructuring, async functions). \nWhen using async functions, use of this package is way simplified (as are most async things), and more closely resembles the old-school alert, prompt, confirm function usage. Consider the following:\nUsing window.alert\nfunction sayStuff () {\n  alert('Hi')\n  alert('I like turtles')\n}\nUsing sweetalert2\nfunction sayStuff () {\n  return swal('Hi').then(function(){\n    return swal('I like turtles')\n  })\n}\nUsing sweetalert2 with async functions\nasync function sayStuff () {\n  await swal('Hi')\n  await swal('I like turtles')\n}\nObviously not everyone is able to use ES-next features; Would it be worth showing the examples in either (ES5 or ES-next) form, depending on the user's preference?. @toverux You make a good argument for the wide availability of modern js features.. so much that I don't think it's worth any effort to accommodate that narrow use-case (required support for IE but no transpilation). I'm sure a bigger issue is developers becoming familiar with the features and putting them to use - something we can help with by demonstrating them. For that narrow use-case where ES-next really can't be used, it should be on that programmer to translate our modern JS to their old IE-constrained JS. +1 for @acupajoe's idea to organize the page into sections and add a navigation component, btw. Bottom line: if you need to support IE (god have mercy on you), you should learn to transpile, and learn the latest features (most importantly async functions!) if you havent already.\nEcmaScript 2015 + EcmaScript 2016+. And even if you can't or aren't allowed to transpile, still learn the language features. > Not a fan of the separate pages. Noty did that and I dislike it. I like being able to do CTRL+F to find something on the page. But I am for better organization. But that's just me.\nPerhaps we could have the best of both worlds, if we have everything on a single page but separated into sections, and users can still navigate & link to the different sections with hashtag routing, like this.\n. So now that we have a sweetalert2 org (\ud83c\udf89) should the new documentation site be moved to a separate repository? \nAdvantages:\n- Each repo would be more focused and limited in scope\n- The documentation site could cover the core package and the framework integration packages, which would be convenient for users\nDisadvantages:\n- Coordinating updates between the code and the docs would become more tedious (For example, you could not any longer add/change/remove a param with a single commit, or by merging a single branch; you would have to make changes in two separate repos)\nI'm not really sure at the moment which I would prefer.. Idea: It would be cool to use something like Codemirror for examples, but where you can execute/modify/execute the code. I absolutely <3 Semantic UI React's documentation site for this. https://react.semantic-ui.com/elements/button#button-example-labeled There are some other nifty features for the code samples there too.. This issue is getting a bit cluttered. Let's try to move the discussion into separate issues in the new sweetalert2/sweetalert2.github.io repo. Reminder to @toverux & @acupajoe .. \"watch\" the new repo if you want to get those notifications. @nickraphael \n```js\nconst myModalMixin = {\n  allowOutsideClick: false,\n  showCancelButton: false, \n  showConfirmButton: false,\n  allowEnterKey: false,\n  showCloseButton: true\n}\nswal(Object.assign({}, myModalMixin, {text: 'Is this more like it?'}))\n// or if you're transpiling, use Object Spread (stage 3 proposal)\n//   https://github.com/tc39/proposal-object-rest-spread\nswal({...myModalMixin, text: 'Is this more like it?'})\n``. @limonte Unfortunately, not within the next couple of weeks.. I'm leaving my current employer and there's lots of work to do finishing things up, documenting, handing off. On the bright side, after that I'll have much more time to help with this project :). Thanks :) Yes I am truly very excited for the next stage :D. There are likely cases where someone is passingallowOutsideClick: true, for example (1) to override the defaults set withswal.setDefaults, or (2) becausetrueis the result of an expression. So if we are to go the proposed route, I might suggest changing the type to something likeallowOutsideClick?: true | 'when-not-loading' | false;. This would make the change fully backwards compatible; no need for [a warning](https://github.com/limonte/sweetalert2/pull/783/files#diff-1957cf081e6f36591195eae3cf092341R734) or an eventual breaking change (when the next major is released), and it wouldn't immediately break type-checking in projects that have it. We could think of a simpletrue` as an unqualified affirmative, a.k.a. \"always\".\n\nAnother route we could go, which would eliminate the ugliness of 'when-not-loading' and could serve a broader use-case: \n\nFor allowOutsideClick, accept a boolean or a function with no args that returns a boolean (I think the type would look something like allowOutsideClick?: boolean | () => boolean)\nAdd a getter method to expose the \"loading\" state, i.e. swal.isLoading()\nPossibly add more getter methods, exposing other bits of state, particularly swal.isValidating() since it's pretty similar.\n\nThis way for @angrykoala's use-case we would simply pass allowOutsideClick: () => !swal.isLoading(). Or for basically the same case, but when we also have an async inputValidator, allowOutsideClick: () => !swal.isValidating && !swal.isLoading().. I can make the PR if we go the allowOutsideClick-as-a-function route. @limonte Should be able to around Thursday/Friday. (Still on vacation with the family at the moment)\nHappy new year! \ud83c\udf89 . @m-bryo Is <user-form> a Web Component? Or are you using a framework, like Angular, React, etc.?. @m-bryo That is pretty critical information. \nThis project alone will not render Vue components as content. vue-sweetalert might support it, or be willing to support it. Or you could create your own thin wrapper. \nI don't know much about Vue but it should be possible using swal.getContent to get the content element, and instantiating your Vue component on it, all inside an onOpen handler.\nIn any case:\n\nThis isn't the right place for Angular- or any other framework related questions.\nhttps://stackoverflow.com/questions/ask\n. sweetalert2-react offers support for \"swal as a React component\", but as far as I can tell there aren't yet any packages that offer support for \"React components/elements in swal content\" (what this PR would have added). \n\nFor the latter React integration I'd suggest the package name sweetalert2-react-content.. > But who will create and support all this integration packages?\nWhoever is interested in doing so. For example, I don't use Angular, so I don't have much interest in maintaining that integration directly, but @toverux and some other team members use Angular, so naturally they would maintain it. I use React, so I might soon create a sweetalert2-react-content package, and I suspect that @limonte and other team members who are React users would be interested in helping to maintain it.\nI should have stated earlier: The advantage that I see of having a sweetalert2 org is having a unified team to look after all of these packages as a whole, and making that clear to consumers.\n@toverux How would you feel about moving toverux/ngx-sweetalert2 to a sweetalert2 org? You would of course retain credit as the author.\n. If we had a sweetalert2 org, it might make sense to move the documentation website to another repo under that org, and include documentation for the various framework integrations.. @limonte It looks like a lot of links have broken due to the move of this repo to the org.. For example https://github.com/limonte/sweetalert2/blob/master/package.json does not redirect, and even issue/PR references made before the move (like the one at the top of the issue description) are broken..\nI'm not seeing this issue with @toverux's repo (https://github.com/toverux/ngx-sweetalert2) .. Not sure how either repo was moved, but maybe removing the new repo at limonte/sweetalert2 would fix it?. @limonte From https://help.github.com/articles/transferring-a-repository-owned-by-your-personal-account/:\n\nIf you create a new repository under your account with the same name as the transferred repository, existing redirects to the transferred repository will break. Instead, use a different name for the new repository.\n. @limonte That's a shame. I had hoped Github would handle redirecting that as well \ud83d\ude41. But yeah I agree it's better this way.. Has anyone tried out sweetalert2-react?\n\nThe author is interested in transferring it to our org and joining our team: https://github.com/zenflow/sweetalert2-react/issues/2. I think we can close this, since the strategy for adoption of new UI frameworks is (I think) pretty clear: implement support in a separate repository under the sweetalert2 org on GitHub.. @limonte I think we should allow more time for discussion before we make an integration package officially endorsed & maintained. I have some skepticism about whether this package is helpful. See https://github.com/sweetalert2/vue-sweetalert2/issues/8, especially the last paragraph. Sorry... @aadriann https://github.com/needim/noty also looks like a good option. From Node.js REPL:\n```\n\n{3: 3, 2: 2, 1: 1}\n{ '1': 1, '2': 2, '3': 3 }\n```\n\nInteresting JS quirk I did not know about!\n@limonte We can't fix this issue with JS, but we could work around it by accepting alternate formats: array of objects ({ id, text }) or array of strings (for when the id and the text are the same).\nThe other advantage of this is that arrays are easier to manipulate than objects. \nThis shouldn't be hard to accomplish, or add much complexity. I can submit a PR if this sounds acceptable @limonte. (I know I have a lot of pending PRs, but they're coming!). > What will happen with key duplicates? What if some key isn't present - null or undefined?\nI would have said \"It shouldn't really matter, whether the duplicates are removed or an error is thrown, or neither. Garbage in, garbage out.\" I didn't understand the first (not quoted) question/concern.\nBut I agree using Map is much better.. Jesus.. ok now I can code (other things). > So setDefaults is practical sometimes, in fact. With your proposal and given than setDefaults is removed, I'd need to create a new module that exports my custom mixin and then have imports like import mySwal from '../../../ui/my-swal' instead of from 'sweetalert2'.\nI personally would not mind the extra ../s that much. Really that is an issue with how we write module paths (always relative). If it bothers you i believe you can fix it (maybe something like this?). \nIf there is conceptually a mySwal (or more) in your codebase, it is better to place it in a local module, with an appropriate name, than to have it in the ether (unable to be found by tracing what swal is defined as). Where do you keep the mixins that you want to use in multiple modules?\n\n\nConsidering the naming now, it's a detail but I don't like swal.extend(). I think it recalls me the terrible epoch of OO programming in ES 5 with all those libraries with their custom extend helpers (like $.extend and so many others) \n\nThe sad reality is that we are in the same situation as those libraries; SweetAlert2 is not a proper ES6 class (or ES5 function+prototype) that can be extended. We would have to do a lot of reworking and creating breaking changes to fix this.\n\n\n[...] seems too \"complex\"/opinionated to me [...] Personnally, I'd prefer to maintain the status quo until something really new emerges and that we feel safe again about changing the API.\n\nWith the amount of gradually reworking and introducing breaking changes that it would take to create a nice standard/un-opinioned extensible interface, we (and the users) are better off if we look to a complete rewrite.\nIn the interest of this original project (started by @t4t5) I ask you to suppose that a standard Class API was not an option and tell me \"Are there any parts of the API you find unnecessarily complex or opinionated?\"\n\n\nAnd use object spreading for the time being. \n\nObject spread is a fair substitute for swal.setDefaults (though i think not as good as swal.extend), but as it stands we don't have any kind of extensibility (unless someone has found some kind of pattern for this).\n\nLast response:\n\nJavaScript programmers aren't used to immutable/functional paradigms yet\n\nWe could help this progress by introducing them to immutability and higher-order functions.\n. Thank you @toverux for giving me things to think about. I will withdraw this proposal and submit a better one another soon. I have a bit of experimenting to do first.\nIt should solve the same problem of extensibility, but without the complex and non-standard API.\nBut it won't solve the problem of needing to import ../../../../somethingContainingMyProjectDefaults. I still wonder: Where do you keep the mixins that you want to use in multiple modules?\n. Note that it's more operations and complexity to apply a mixin that's located in it's own module ...\njs\nimport swal from 'sweetalert2'\nimport mySwalMixin from '../../../../my-swal-mixin'\n(async () => {\n  await swal({ ...mySwalMixin, title: 'foo' })\n  await swal({ ...mySwalMixin, title: 'bar' })\n})()\nvs applying a mySwal function that's located in it's own module\njs\nimport mySwal from '../../../../my-swal'\n(async () => {\n  await mySwal({ title: 'foo' })\n  await mySwal({ title: 'bar' })\n})()\nSo it seems like mySwal functions are preferable to swal mixins, definitely if you want to have some dynamic extensions, but not unless you want to reflect on mixin values or to have more flexibility with the order in which they are merged.. I'll leave this issue open a bit longer in case others want to contribute to the discussion.. \n\nmaybe this is not necessary considering the real-life needs of extensibility\n\nreal-life uses of extensibility: \n\nframework integrations, or otherwise adapting the standard API to something semi-standard to suit to your use-case (without removing features like being able to use onOpen)\nclean reusable project-specific logic, such as withAdvertisementInFooter above.. See how WET the app-level code can be without real extensibility to contain this logic: https://github.com/sweetalert2/sweetalert2.github.io/pull/4 && https://github.com/sweetalert2/sweetalert2.github.io/commit/ce0604f8da098b7a5dd12e91fcba52981cdf03a5\nability to compose solutions for the use-cases listed above\n\nIn a sense it's not a \"need\", because we can (and have) done without it. But if we had it I think we would find it supports some more elegant solutions to many of our challenges (as users and maintainers), and end up using it a lot. We don't \"need\" it but it would make things much easier, therefore we need it.\n\nIn most case, some object spreading will do just fine.\n\nThis is true, but the volume of cases where object spreading alone won't work seems significant (for me anyways). In theory the volume is more if you consider how often you would want to use extensibility (if we had it) rather than how often you currently want to use extensibility (much less because it's not even an option).\nAnyways I don't think we need to weigh the con of the opinionated/non-standard (I hope I'm understanding your issue here) API against the pro of having extensibility because I think we can have the best of both these worlds in this package.\nI should stop talking about it (extensibility) as if we don't already have it. We do, we just don't use it yet (to my knowledge). It's a simple pattern for the extension-makers to use. (Super simple. I'm glad you said this first proposal was too complex & non-standard.) I think it could also help us (personally, as core maintainers) in offloading complexity from core into separate packages (a la #795 and #798). Hold tight for the next proposal and some sample repositories to go with it.\n\nIn regards to an OOP architecture: once again we share very similar ideas on the subject off-the-bat. Having multiple modal instances, separate from a modal class (or classes), would be very powerful, even ignoring the implied extensibility.\nI maintain that the most efficient way to accomplish this (OOP architecture), for us maintainers and for current SweetAlert2 users, would be to start with a fresh package. With this approach, I guesstimate that we could have modal.onClose.subscribe(event => {}) not just \"one day\" but \"one day this month\". It may not have every bell and whistle that this package has, by January 31st, but a clean small powerful core with most of this package's features, well suited for adding the remaining features, either in the core or in separate \"feature packages\".\n\nit is mutable and does not (elegantly) solves the extensibility/composition problem\n\nI think mutability has it's place (it goes well with OOP) and I'm not sure I agree about the composition problem, but I intend to test this out; I am looking at making a proof-of-concept with svelte. I am going for the ideal blend of OOP & FP (subjective as the word \"ideal\" may be; please feel welcomed to help shape that).\nFYI I am still working on extensibility for this package.\n. I'm still working with the ideas discussed here, but like I stated in a comment above, I've withdrawn this proposal. Closing.. OK, I found out why the tests were failing (PR #818 is a band-aid for that issue).. but... \nDoesn't the fact the tests are pointed at dist files mean the tests should be failing in the master branch on CI, and therefore CI is broken?\nhttps://github.com/sweetalert2/sweetalert2/blob/8377c3c4a0ae1eff99b22c654818391e862a5d82/testem.json#L3-L10. Ok, I think the CI is working... I see in the CI logs that you're running gulp before doing checks\n. I was confused about which source of truth the tests had, the source-code (\"./src\") or the build-code (\"./dist\").. another symptom of  #820\nThat gulp command is clearing the dist files committed in Git and rebuilding them from src, making the tests effectively use the src files and ignore the dist files (as it should). \ud83d\udc4d . Anyways, I guess all thats needed to close this issue is merge #818 . > CI is working because there's gulp step before npm test\nYup\n\nI see in the CI logs that you're running gulp before doing checks. I guess this is covered by root/fundamental issues #820 and #821 so I'll close this issue. This is a for band-aid for #816 (surface issue) and #820 (root issue). t4t5/sweetalert#748 does not apply to this repo, since our unobfuscated dist files are freely accessible on the npm package distribution registry (that is where unpkg.com gets packages from), unlike @t4t5's sweetalert which only publishes the minfied/obfuscated dist files. Removing files from source-control does not mean they are removed from the package distribution.\nI prefer to be less strict about VCS definition and be more accessible for all users and workflows.\n\nOur distribution files are already perfectly accessible for all users and their workflows, minified or unminified, on the condition that the correct dist files are always present when you npm publish or yarn publish. (You should guard against human error regarding that condition, by running the build automatically before publishing, via scripts.prepublish in package.json) \n(edit: Correction: If we removed the dist from Git, the Bower workflow would not supported anymore. Thanks for making this point @toverux)\nI think/hope I made it clear that something that could use improvement is this package's internal workflow. I would not complain, but like I said on t4t5/sweetalert#748...\n\nKeeping build/dist files in source-control is really going against widespread convention and causes pain with Git tooling. Check out the setup of the React project for instance. It is extremely standard, in that dist files are included in the package distribution on npm (check the umd folder) and not included in the source-code repository on Github. \n\nWe can easily match that exactly.\n. I'm not sure how many of the concerns in t4t5/sweetalert#733 I need to address..\nI don't even know what @jamiesonbecker is concerned about here:\n\nthe virtues vs tradeoffs of maintaining backwards compatibility with previous versions\n\nUsing unpkg.com and CLI package managers like npm, bower, yarn, all give you good management over this kind of thing. It's what they do.. > Isn't bower downloading directly from GitHub?\nAh, so you are right. I was under the false impression that you had to bower publish your packages.\nAs for CDN, are there any that we use/recommend besides unpkg.com? @limonte \nYes, like @toverux expressed, I too feel bad about leaving Bower users \"out in the cold\". Assuming we all agree that the dist files should be removed from Git in the next major, I have two ideas on how to help them out:\n\nIn the release notes, include a note (a) encouraging them to migrate to Yarn and Webpack, using Bower's own migration guide which has instructions for using a neat looking package called bower-away, and (b) suggesting that they can always grab the dist off unpkg.com\nReally go out of our way like jQuery does, pushing our dist to a separate repo in the release process, to be published on Bower.. It looks like Bower users have the option to do this:\n\njson\n\"dependencies\": {\n  \"sweetalert2\": \"https://unpkg.com/sweetalert2@7.3.5/dist/sweetalert2.js\"\n}\nReference: https://github.com/sheerun/bower-away#edge-cases\nMaybe that should be the suggested method for Bower users.. We are connected with some Bower users through various issues in this repo.. I am wondering if we should try to get some of them involved in this discussion. Better yet, \njson\n\"dependencies\": {\n  \"sweetalert2\": \"v7.3.5\"\n}\nThe v7.3.5 is a tag name, for a commit in a dist branch.\nDist files won't be a drag if they're in Git as long as they aren't in master or any of the development branches.. We will be implementing this in the current major version. See PR #840. > Could you please make the next release and validate if this happens to you as well?\nHmm, yeah you got it. Let me know here when there's a release to make.\nIn the meantime, what happens if you switch to the dist branch and run git push origin dist:dist --tags? On my system I have \"git version 2.14.1.windows.1\" and it prints \"Everything up-to-date\".. Nevermind, I can do a patch release now since I just merged #868. Making my first release of SweetAlert2! Woot! \ud83d\ude03 . Hmm.. I did not get that problem:\nPushing to Github...\n    (pid:7704)  [cmd]   git push origin dist:dist --tags\n    (pid:7704)  [ERR]   To https://github.com/sweetalert2/sweetalert2.git\n    (pid:7704)  [ERR]      9774a3c..94d428c  dist -> dist\n    (pid:7704)  [ERR]    * [new tag]         v7.8.6 -> v7.8.6\n    (pid:7704)  [out]\n    (pid:7704)  [ERR]\nSwitching back to \"master\" (so you can continue to work)...\nHopefully we can reproduce on your system by just running git push origin dist:dist --tags.... @limonte If you can reproduce with that command, does this fix it? https://stackoverflow.com/a/39534896. I just realized that we are visiting different URLs for our tests. We have two different test harnesses (that look very similar) running our tests. This now explains #819.\nWhen I'm developing locally I remove the ci bit from this line...\nhttps://github.com/sweetalert2/sweetalert2/blob/52f2247f3fee9adae9c435e4bbc940d3a2185924/package.json#L68-L68\nand do npm test and I get this: \nview-source:http://localhost:7357/9274\nhtml\n<!doctype html>\n<html>\n<head>\n<title>Test'em</title>\n<script src=\"//code.jquery.com/qunit/qunit-1.20.0.js\"></script>\n<script src=\"/testem.js\"></script>\n<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script><script src=\"test\\qunit\\deprecated.js\"></script><script src=\"test\\qunit\\outside-click.js\"></script><script src=\"test\\qunit\\tests.js\"></script><script src=\"test\\qunit\\toast.js\"></script><script src=\"dist\\sweetalert2.js\"></script>\n<link rel=\"stylesheet\" href=\"//code.jquery.com/qunit/qunit-1.20.0.css\"/>\n<link rel=\"stylesheet\" href=\"dist&#x2F;sweetalert2.css\">\n</head>\n<body>\n<div id=\"qunit\"></div>\n<div id=\"qunit-fixture\"></div>\n</body>\n</html>\n.. and it's very suitable for active development. The page is not launched automatically. You just visit it whenever you want to run your tests. It's faster than doing testem ci; It's telling me \"Tests completed in 3457 milliseconds.\". (Btw, there seems to be a lot of low-hanging fruit that would speed that up at least 1 or 2 orders of magnitude. All the setTimeout(foo, 100))\nI realize now the instructions lead you to something different:\nview-source:http://localhost:8080/test/qunit/\n```html\n<!DOCTYPE html>\n\n\n\nSweetAlert2 Tests\n\n\n\n\n\n\n\n\n\n\n\n//&lt;![CDATA[\n    document.write(\"<script async src='/browser-sync/browser-sync-client.js?v=2.23.5'>&lt;\\/script&gt;\".replace(\"HOST\", location.hostname));\n//]]&gt;\n\n\n\n\n```\nLet me try a PR to simplify and optimize things.. @limonte wants to merge #844 which removes linting from the gulp watch task and adds step 5 back to the Contributing section of the README (moving away from resolving this issue).. ... because:\n\nit's slowing down the dev process and it's annoying when it crashes.\n\nhttps://github.com/sweetalert2/sweetalert2/pull/842#issuecomment-360053440\nNote that PR #842 fixes the \"annoying when it crashes\" issue, I think pretty simply. (The flag should be used in the \"watch\" (or \"dev\") package script when it's added). In regard to \"it's slowing down the dev process\", we could ...\n\nhave a flag to disable it (or have tasks \"watch:build\", \"watch:lint\", and then just \"watch\" which does both)\nhave it run after the build tasks complete\n\n... but I think removing it from the \"watch\" task entirely and requiring contributors to constantly manually run another task is a deterioration.. > If a developer really want to be alerted, he/she will set up the IDE properly. I am alerted without keeping an eye on the console https://github.com/sweetalert2/sweetalert2/pull/842#issuecomment-360113617 by @limonte \nIt is possible that a developer wants to be alerted, but has not set up their IDE with eslint/standard integration, or their editor or IDE does not support it. @limonte Have you set up sass-lint & tslint integrations in your IDE? (I have not)\n. Note that in #844 we decided to keep linting within the scope of the watch task. Lol I just prepared a PR to add a gulp develop task, with watch as a dependency, executing karma start karma.conf.js --port 8080... and change package.scripts.start to gulp develop.. Hopefully you will try it out, and if you don't like using it we can just revert package.scripts.start to gulp watch (edit: and change the name of develop, or something). Second commit should say \"... since it doesn't work and it seems ...\". Sorry, does not fix #820 \nIt's probably an improvement, but I can't review without diving into what the assume-dist-unchanged script does. \nThe only feedback I can give at the moment is that assume-dist-unchanged smells strongly of technical debt.. @limonte @toverux What do you guys think about starting a canary branch to prepare the next major? Also, did you have any ideas when we should cut that next major release?. Check out the build logs. They show results for \n- linting (js, scss & ts)\n- tests\n- type checking\nAnd it is using the same package scripts that you can run on your local machine in a one-off (not active development workflow) fashion. @limonte Thanks for the review!\nSome of this I can split into separate PRs easily, but some of it builds on previous changes. \nSo I will close this PR and make a couple of smaller PRs plus one big PR, but that one big PR will have separate commits with clear commit messages (and none of the last 13 commits where I was experimenting with the CI environment). Then you are able to look at each commit individually.. Looks great! Now there is \n\nless code/complexity\nbetter themability\nUse sass variables\n(or) simply write your own css; no need to use !important in css or specify confirmButtonColor: null in js\n\n\n\nWe are almost to the ideal I stated here: https://github.com/sweetalert2/sweetalert2/issues/164#issuecomment-326423247\nI believe the last bit of style in the defaults is for background:\nhttps://github.com/sweetalert2/sweetalert2/blob/7d5ab4568c388a9497a062d65089945eba7b9172/src/utils/params.js#L41. > could you attach the relevant article/specs?\nIt's in the name and concept \"UMD (Universal Module Definition) patterns for JavaScript modules that work everywhere.\" https://github.com/umdjs/umd\nYou can see that it works in a CommonJS environment like this:\nC:\\Users\\Matt\\Documents\\sweetalert2>node -p \"require('./dist/sweetalert2.js')\"\n{ [Function: sweetAlert]\n  isVisible: [Function],\n  queue: [Function],\n  getQueueStep: [Function],\n  insertQueueStep: [Function],\n  deleteQueueStep: [Function],\n  closeToast: [Function],\n  closeModal: [Function],\n  closePopup: [Function],\n  close: [Function],\n  clickConfirm: [Function],\n  clickCancel: [Function],\n  enableLoading: [Function],\n  showLoading: [Function],\n  isValidParameter: [Function],\n  isDeprecatedParameter: [Function],\n  setDefaults: [Function],\n  resetDefaults: [Function],\n  adaptInputValidator: [Function],\n  noop: [Function],\n  version: '7.6.2',\n  default: [Circular] }. Actually @limonte what if we extended this PR with a script to make a release (a script that would implement this idea of having a dist branch https://github.com/sweetalert2/sweetalert2/issues/820#issuecomment-357643543):\n\nensure Git is on master branch\ndo some sanity checks on packageJson.version (make sure it was updated)\ndelete the dist folder (as it will conflict with the next step)\nswitch to the dist branch\nmerge from master\nrun the build\ncommit the changes in the dist folder\ntag the commit with v${packageJson.version}\nnpm publish\ngit push origin dist:dist --tags\nswitch back to master so you can continue to work\n. This would mean zero changes to how Bower users use our package. We could merge it right into version 7.\n\n. > Sounds like a perfect solution which will prevent the breaking change!\nI'm glad you like it!\n\nAfter review, we can merge the canary into master.\n\nYou mean cut the next major release? We should try populating this project board! https://github.com/sweetalert2/sweetalert2/projects/1. Oh, yeah. Since canary has already collected a breaking change, we can't merge it into master unless we're cutting a major release. (Which I thought about and then realized I'm crazy since we have no reason to do that right now; it just seemed fun at the time lol)\nBut it's OK, this branch is based off of master so I just have to add another commit and then we can just also merge it into master. And merge it into canary again.\n. Trying to test this before \"putting it in production\" will be interesting. I'll give it a --dry-run option. Skipping #s 9 and 10. > so I just have to add another commit and then we can just also merge it into master. And merge it into canary again.\nHmm.. I guess that won't work because the squash-and-merge technically creates a different commit with a different history (but identical code). I undid this merge via 8d982b2c90cec738a8d76a480adfd78698577616 so as not to complicate things further. I'll open a new PR targeting master, and then once it's merged I'll just do the regular \"Merge branch 'master' into canary\". Regarding --skip-minification.. this is a good pattern with gulp when you want a single pipeline (for efficiency, and thus a single task) to handle outputting both the minified and un-minified build (like the 'sass' task currently does) but you don't want the minification to always happen. #844 does not prevent sass minification in the 'watch' task. Also, I want to optimize the js building to not duplicate work (bundling & minifying), similar to the sass building, at which time this flag will be desired for the js building too\nRegarding --continue-on-lint-error.. \n\nLinting should not be in scope of watch task\n\nlinting currently is part of the watch task, as I think it should be since it gives feedback during active development. This came up in #821 and I thought we were in agreeance? See PR #825.. \n\nit's annoying when it crashes\n\nYes but it does not need to.. > Now it does.\nNope\nhttps://github.com/sweetalert2/sweetalert2/blob/6e45b30098e504f09d0cd6be9a82fcc9f78e16ad/gulpfile.js#L57-L66\nI think you are confusing linting (which is now prevented) with minifying (which still happens every time the sass task is run, see above). > This is debatable. In the ideal world, humans shouldn't care about linter issues, humans' IDEs should.\n\nLinter issues are not just stylistic issues. Many of them (the useful ones) are not \"fixable\", and need the attention of a human\nEven for \"fixable\" stylistic issues, its better to be alerted sooner than later, no?. Best move this discussion to issue #821. @limonte Yeah, I believe this still applies:\n\n\n--continue-on-lint-error because it's annoying to have everything break when there are stylistic or minor problems in code, and have to fix it immediately and start the start script again because it crashed.\n\nAre you interested in merging? If so I can resolve the merge conflicts and remove the other flag.. > Also, should we add --continue-on-lint-error to https://github.com/sweetalert2/sweetalert2/blob/master/package.json#L90 so contributors will have the perfect DX?\nAbsolutely. I'm gonna just go with a fresh PR for this one.. This check would be more useful if it got run by contributors during local development, before opening a PR.. Also I think it might be better to do this check with eslint (which we're already using) .. we can extend the standard eslint config with the no-magic-numbers rule in eslint core. Then there is one less parsing of all the js code and one less task to run.. > it just works\nYeah, I agree. This is the major benefit of using standard as opposed to eslint directly. Extending the standard config seems tempting sometimes, but the standard is \"good enough\" (though I wish it included rules for ES2015+, like no-var) and extending it in my experience is not so simple.. Now sass-lint never gets to run, even in CI.\nI think we should completely separate lint tasks from build tasks, and use gulp lint in the package scripts (and use that in .travis.yml). Another advantage (besides organization and simplicity) is that if we want we can have lint errors (like having a semicolon) not prevent the build and the other checks (unit tests, bundle size, typescript), which I think is preferable as it gives a full report. It's OK if CI takes a couple minutes to finish; it's a safety net, not a first-resort.. Now js and ts linting are run twice each in CI.\nWhy not:\n\ncompletely separate lint tasks from build tasks, and use gulp lint in the package scripts (and use that in .travis.yml)\n\nIn regards to having lint errors not prevent the build and the other checks... This does not imply that errors are ignored - just that the rest of the checks are still done. Sorry if I was unclear. For example: as it is there could be a missing whitespace, that prevents the build and unit tests from happening, which prevents reporting any additional errors (maybe more significant errors, like, broken unit tests) to reviewers and the contributor. Please reread my above comment.\n. With 298051aa334555df269bcc44e53713aa557f1318 the organization is getting worse.. compress was an inaccurate name before, but I was able to think of it as build:js (and consider that building for whatever reason includes linting).. now what is it?. I am \ud83d\udc4e for removing linting from the watch task. We can discuss in #821.. Remove sweetAlert.noop. My only thought is Yes!. Assuming inputOptions can be a Promise returning a Map, we should rather modify SweetAlertInputOptions. As @limonte pointed to in his link.. Oh, when you're reverting the changes made by the script, you also have to remove the tag it created.. Yes, thank you for reporting @rskaarup .. we are working on this in issue https://github.com/sweetalert2/sweetalert2.github.io/issues/3 and PR https://github.com/sweetalert2/sweetalert2.github.io/pull/6\nSweetAlert2 is fully compatible with IE11, just the documentation site is not at this moment.. Thanks for reporting @haha02. Yes, I think swal({ title:null }) should work without error. Another use case (in addition to yours) is when using swal.setDefaults you might want to set the title back to nothing/empty.. Reopening this so I can close it with a fix \ud83d\ude0b . > I think this can be closed? Maybe one day we'll have some kind of modal instances and not just utility function to manipulate the modals' DOM, but this is another story.\n@toverux @limonte It is possible to change the new context object to a class instance and move code into instance methods. In fact the only reason I didn't do this in #969 was to avoid the huge code change that's hard to review and can result in merge conflicts.. @brian-kilpatrick This is a very confusing PR..\n\nYes, the second picture demonstrates that the array that is produced from [...] and passed to uniqueArray() still has the prototype methods from NodeList still attached\n\nUmm.. It doesn't really demonstrate that. It demonstrates that temp1 (wherever it came from) is an array with some extra properties. In the future it would be nice to have a jsfiddle so it's clear what is going on. \nAnyways, it seems that those are not NodeList methods... None of those keys exist on NodeList.prototype for me in Chrome.\nI don't know where those extra properties came from, but they are probably methods monkey-patched onto Array.prototype...\n```\nC:\\Users\\Matt>node\n\nArray.prototype.foo = 'bar' // ewwwww\n'bar'\nfor (const key in [1,2,3]) console.log(key)\n0\n1\n2\nfoo\nundefined\n```\n\nBest practice is not to monkey-patch methods onto prototypes, but also we should not expect that everyone uses best practices. . Ah, @limonte, I merged this as a merge commit.. Am I correct that you normally do \"squash merging\"? Is there any exception to this? If not, do you mind if i disable the other options under \"Merge button\" here so I don't screw this up again?. Published on npm in version 7.8.6\nThank you @brian-kilpatrick \ud83c\udf89 . Yeah, I agree we should have something to make sure that the local dist branch is up-to-date with dist on origin. \nSame goes for master now since the changes of #881, but I think in that case maybe it should error if the local branch is not up-to-date, and make you think about what you're doing since you might have made a mistake.. @limonte Sorry I have a bit of urgent work to do right now.. will come back to this after. So it's not really necessary to \"reset\" our local dist is it? That implies that it's gotten messed up and we need to undo it.. ? We do need to \"update\" our local dist though, because maybe someone made updates in the remote dist\n. Does #883 do it for u?. Sweet! I did not know about npm version until today. Thanks!. Ooops. Should have given my review all at once..\nI'm about to make some more comments and request some changes. > no useless version commits in master \nDon't we want the version number in package.json to get updated in master? Otherwise it would remain at 7.9.0 forevermore.. and cause confusion for casual onlookers.\nAlso, as this PR is now, if we don't commit the version bump in master the working tree will be dirty when we try to switch to the dist branch, and there will be conflects.\nAlso, it would be helpful for us (for me at least) to be able to see these commits when looking at the commit history in master - https://github.com/sweetalert2/sweetalert2/commits/master. Also, we will need to move the const {version} = require('./package.json') line to after the npm version command, or the version will be incorrect.. Hmm.. not sure what's going on but I can't \"Approve\" vs \"Request Changes\" in this PR anymore. > It has been merged, you can't request changes for merged PRs.\nAh, duh. \nActually I think it makes sense and might be possible if it was merged as a merge commit, since you can add more changes and merge again.. I checked it out but didn't have time to make a review yet.. Doing that now. \ud83d\udc4d . @Shinerain does not appear to be related to this particular package since sweetalert2 is dependency free.\nI suggest you open a question on stack overflow, and include as much info as possible (npm version, package.json, full console log). > do you think that we should include testing in gulp watch? IMO that would be too much https://github.com/sweetalert2/sweetalert2/issues/821#issuecomment-362804704\nThere currently is testing in gulp watch (a.k.a npm start). But it's a different test harness than what runs in CI. This just fixes that by replacing both harnesses with Karma.\nActive development mode in Karma is fast, not nearly as slow like running npm run check:test is now, and it only runs when you visit it in a browser (and it handles reloading as necessary).\n. Even if unit tests aren't in scope of npm start I want something in our package scripts to run unit tests in \"active development\" or \"watch\" mode.\nBut I don't see why you would want to start and manage two processes to do the same general thing instead of one.. Check out this new line in the README:\n\nhttp://localhost:8080/debug.html shows results in browser console. Also a good place to experiment with swal. Doesn't refresh when build or tests change\n\nI think offering this environment to experiment offers a couple advantages\n- Encourages running the tests frequently when you're working on SweetAlert2 code\n- Encourages containing your experiment in an actual test that can be repeated\nGive it a try and let me know what you think. Tests run for me in ~ 1.5 - 2 seconds. . > I think offering this environment to experiment offers a couple advantages\nThe sandbox offers it's own advantages. I'll add it back. Useful for getting the visual effect/experience during design-time, something you can't really write unit tests for.. Worked a bit on adding IE11 to our test suite..\nThere's a lot of failing tests that need to be sifted through and fixed like 06af2c53f21f5683d5e873deffa5e5459fed4aee. My intuition tells me it's mostly the test (not the source) code that has portability issues.\nWith d9153377b7951af8776f7d2801f064bfe7432cdc unit tests are set to run against IE11 also, so this branch will fail on environments where IE11 can't run, i.e. anywhere but Windows. Looking for a good solution for including IE11 as much as possible in our development workflow. Maybe of use: (karma-virtualbox-ie11-launcher)[https://www.npmjs.com/package/karma-virtualbox-ie11-launcher]\nI brought in babel to transpile our tests so will be able to run in IE11, and webpack to give us require and import \u2764\ufe0f.\n. @limonte Please review. I've rebased my work without deleting sandbox.html, squashed a bunch of commits, and made some additional changes. \nI'd like to finish IE11 compatibility with tests in another PR if that's ok. I've disabled testing against IE for now so the CI badges don't go red.\n\nStep 4 now looks like:\nTo begin active development, run npm start. This does several things for you:\n\nLints your code\nBuilds the dist folder\nServes sandbox.html @ http://localhost:8080/ (browser-sync ui: http://localhost:8081/)\nServes unit tests @ http://localhost:3000\nRe-lints, re-builds, re-loads and re-tests as necessary when files change\n. @RefinedSaltqwe jsfiddle?\n\np.s. Does this not pop up when you (as a new contributor) go to open a new issue? https://github.com/sweetalert2/sweetalert2/blob/master/.github/CONTRIBUTING.md. @dchekanov Thanks for opening this issue! \nYes, I think you should be able to prevent the closing without showing a validation error. \nI think your proposed API would be acceptable.. but I am not a fan of communicating via global variables/state (yes, I know the method of calling swal.showValidationError has the same issue).. does anyone have any alternate suggestion?. > I didn't suggest that initially because it would only work for sync. code. \nNot sure I understand this statement. Sync and async preConfirms should work the same as of version 7.\n\nCould it also cause result.value to be falsy in swal().then(), making it look like user clicked \"Cancel\"?\n\nNope. I had a similar concern too, but if the result of preConfirm is falsy, then the original value passed to preConfirm is used. If there is no input option, result.value will be true.\nhttps://github.com/sweetalert2/sweetalert2/blob/8cc05c8823a50589cd735cf00f16596556a1c5aa/src/sweetalert2.js#L576-L585\nBesides, if preConfirm returns false, then there will be no result at all for that case, since the swal will not complete. My concern was that you would no longer be able to use preConfirm to make the result.value a boolean (possibly false), but this was never possible, for the above reason.\n. I proposed a solution here https://github.com/sweetalert2/sweetalert2/pull/983#issuecomment-370278623 + https://github.com/sweetalert2/sweetalert2/pull/983#issuecomment-370350491\nI'm not 100% it can be done safely (not causing problems with event listeners on that element), but it might be worth playing with.\nAnother solution would be to have an option/param to trigger success on keyup instead of keydown. That would be cleaner to implement. (edit: And likely cleaner to use in some cases.) @anionic How do you feel about using this proposed option, vs the above idea of messing with your input's onkeyup handler?. @Kuzcoo FYI I had an issue with the proposed solution of \"delay states.previousActiveElement.focus() by something like 100ms\"\nSee https://github.com/sweetalert2/sweetalert2/pull/983#issuecomment-370277177. This truly is a triumphant moment!!!. Hats off to @limonte for all the things he does to make this such a sweet repository!!!. > sweetalert2 was downloaded 1,005,075 times.\nWoooooo Hooooo!!!. We will probably break 5000 stars today too!. @limonte Where is your graph from?. @User934903920432 It would be really great to have some feedback on that PR #824 .. You can install it in your project with npm install github:sweetalert2/sweetalert2#06143789ebbda33a585a726c5acc156eb9cc5949 (latest commit in that branch) and then import with require('sweetalert2/src/sweetalert2'). @acupajoe No I don't think so. The same issue with the bundlesize auth is in the master branch right now.. <3 this.. Thank you @monkeywithacupcake!!!\nHow do the rest of the collaborators feel about this?\nI will do a real review soon, provided that the others like it too.. We could probably merge this and just make the minor fixes ourselves.. @monkeywithacupcake has already helped quite a lot, and probably has more of these PRs to make. \nThank you so much @monkeywithacupcake !!!. @limonte You got it. @RenaudParis Thanks for opening this issue, with reproduction\nHmm. Yeah, that behavior seems wrong.\nWe should probably restrain from fixing it in this major though, since it's a breaking change and might cause issues in some projects.\nAs a temporary workaround, maybe use swal.clickConfirm or swal.clickCancel instead of swal.close. You can use those even if the buttons aren't visible.\nSlightly off-topic Open question - What would you expect to happen with the current swal's Promise when you use swal.close? Currently it's left in a pending state.. > Isn't the Promise already returning some data with a property like dismiss or something? (which informs the reason the popup was closed, when applicable, and allows for a more fine-grained behavior)\nYes, the promise normally resolves with an object with either dismiss (indicating how it was dismissed) or value (the return value), but if you call swal.close then the promise never resolves. I am wondering if this is the best behavior, or if it should dismiss, or something else.. My only apprehension about \"always provide an information regarding what triggered it\" is that \"dismissals\" (currently) are something that the user does. I don't want to change the meaning of \"dismiss\" by adding a new type of dismissal that is done programatically. \nSo what if we resolved the promise with {} (no value or dismiss)?\n. > I think it makes sense to keep all themes in this repository, let's say in src/themes folder\nNot that I am intent on it, but why not take the modular approach? That way it would be more natural for people to copy the boilerplate and make their own themes, or fork themes into their own. Plus all of the other arguments for modularity (the focus of this repo would be diluted, and how many/which themes do we accept in the core?). Also consider that any theme is inherently very opinionated. It would be nice to keep as much of that out of the core as possible. Opinions/tastes in separate modules on the other hand are totally fine since they can be swapped out for another more customized one (a fork or a fresh repository), and used just as easily (i.e. none are \"special\"). Ok I think those are my best arguments.. > But I don't see a way to implement that without breaking older TypeScript versions that don't support some features that would make this possible.\nAny way to keep an eye on which versions of TS are in use? (statistics) It seems like a pretty cool feature (though I don't really know what it would look like) so even if we don't implement it now, we could do it when the older TS versions are more outdated.. > Yes, that would be pretty cool, but it's like any other npm package: we don't know what version are currently in use, as once a package is downloaded, it could stay in use 5 minutes or 20 years and npm does not track that.\nHmm.. I think download statistics are a pretty good rough indicator of what is in use, but until npm/download-counts#6 is resolved, we can't get download statistics for the various versions of a package\n\nI'll see if I can find a workaround later, I didn't think about that thoroughly yet, having a SweetAlertResult in the appropriate case was much more important for now and the \"Going further\" section can be implemented in another PR.\n\nYeah, it is probably out of scope of this PR, but thanks for bringing it up. Please don't just ignore the issue template. It's there for a reason.\nhttps://github.com/sweetalert2/sweetalert2/blob/master/.github/ISSUE_TEMPLATE.md. To be more direct, we need a JSFiddle. I'm gonna reopen this until part 2 \"Fixing the code for IE11\" is covered.\nNote that we already have part 1 \"Enabling IE11 in the test harness\" covered in PR #948. @limonte Yes! Great solution for my question in #947!\nLooks good, I think now we just need to fix the tests for IE11.. @limonte Once the infrastructure part of this settles, I can take over this PR to fix the tests if you like, since I work on a Windows machine. @limonte Ahhh.. we will see failures on the checks in master, and on PRs against master, until the tests are fixed for IE.. that will make it harder to tell if there is actually a problem, and create confusion for contributors.. Do you mind if we revert the merge and I continue on in this PR?. Not sure when I'll get around to fixing the tests. @guitar9 \nWhat is your specific browser name and version?\nCan you please try to reproduce on jsbin.com? Here is a template to start with: https://jsbin.com/rawacenuyu/1/edit?html,output\n. @guitar9 I asked for a reproduction on jsbin, not jsfiddle.. Sometimes the environment in jsfiddle is not true to the normal IE11 environment.. @limonte On first sight it looked like it might have been a valid issue. That's why I requested more information.\nWhat should we do when on first sight when it looks like it may or may not be a valid issue? Shouldn't we try to find out if it is valid or not?\nAlso, what if there is a jsfiddle but you see if it's a invalid issue? Would you say it should be moved to StackOverflow? In those cases it is really tempting to quickly let the developer know what they're doing wrong, since you already see it..  > I don't have any strong opinion or arguments here. I'm just saying that it's fine and not unpolite to close the issue if a reporter didn't put enough effort into an issue-report.\nYeah, I agree. Some people are just dumb though lol (in that they don't provide the needed info) and I have a hard time differentiating so I err on the side of caution.. ~~Maybe run yarn again after this? https://github.com/sweetalert2/sweetalert2/blob/01226245258cad306fb3a5961f83c0e5f9ecb454/release.js#L85-L86~~\nThat makes zero sense. Anyone know which browsers this affects?. For one awesome example of what you can do with this pattern (though there are endless awesome examples possible), check out my WIP https://github.com/zenflow/sweetalert2-react-content ! Please open an issue! I'd like to get lots of review before transferring it to the sweetalert2 org and releasing 1.0.0!. > If I get it right, swal() will not trigger an alert if it gets passed a function - in that case, it acts as a mixin factory? It's not explicit in the post :)\nOoops... Made a really confusing typo above... I corrected it, please check it out again. The pattern is just a pattern, so no changes to the source code are actually needed for it to work. Though some changes like PR #969 will help this pattern in various ways.\n. >Can you expand a bit more on this:\n\nObject.assign(fn, swal)\n\nThis is to copy all the properties and methods of the parent swal to the child, so you can do e.g. mySwal.clickConfirm().\nThe idea is that you can decorate the swal object (i.e. pass it through a number of wrapper functions) and have a drop-in replacement for your normal swal, but with the added behavior/functionality. I'll demonstrate in a PR in the documentation repo.\nAnd you can easily add and extend methods:\njs\nObject.assign(fn, swal, {\n  newMethod: () => {}\n  extendedMethod: (input) => {\n    // do something with input\n    let output = swal.extendedMethod(input)\n    // do something with output\n    return output\n  }\n}). > I'll demonstrate in a PR in the documentation repo.\nAh, I don't know what's going on with the Carbon ads in the docs repo.. they still aren't showing up for me on sweetalert2.github.io.. That's what I was going to refactor but I can't really do that.. I was just going to demonstrate what I meant by \"drop-in replacement\":\n```js\n// before \nimport swal from 'sweetalert2'\nswal('using shorthand')\nswal.clickConfirm() // using swal method\n// after adding extension\nimport baseSwal from 'sweetalert2'\nimport withCopyrightInFooter from './withCopyrightInFooter'\nconst swal = withCopyrightInFooter(baseSwal)\nswal('using shorthand')\nswal.clickConfirm() // using swal method\n```\nIt has the same API as the original, possibly extended with more methods/options/etc... In sweetalert2/sweetalert2-react-content#14 we've come up with a better terminology for this than \"extension\" .. \"mixin\"!. Mixin method now exists, and I believe oo (not fp) is the way for robust extensibility, so I'll close this issue. Released in sweetalert2@7.13.0. /cc @limonte @toverux @acupajoe  @samturrell @FinesseRus \n. > Module at a time might make it easier to review and reason about, if that's possible.\nGood idea. Then I imagine it would be best to start with extracting the utility functions, and do the SwalContext.js module after that.. As soon as PR #1008 settles, put proper static methods (simply any and all methods that don't use the top-level currentContext variable) in src/static/*.js. So, update: the former main module has been completely dissolved. Now the entry point is 4 lines of code including blank lines, the module containing the Swal class/function is 72, and there are many small modules in src/utils, src/staticMethods and src/instanceMethods. Though instanceMethods/_main.js is still pretty big at 548 LOC and should be broken down. I'm pretty sure that is by far the largest module.\nThe issue was \"Split up src/sweetalert2.js\" so I think it's fair to say this can be closed. Basically the rest of the changes I wanted to make in #826. bundlesize only reports 585 bytes saved? that doesn't seem right... Forgot to mention a change\n- cleaner way of setting swal.version in build step, source code includes import {version} from '../package.json'. @limonte Glad you're satisfied with the byte savings! I actually expected it to be more \u2639\ufe0f . The Travis \"push\" build fails (repeatedly), yet the Travis \"PR\" build passes? Correct me if I'm wrong, but \"push\" build runs against this exact branch and the \"PR\" build runs against this branch merged into master, so how does that make any sense?. Released in version 7.14.0. >I'm glad that we added IE tests and AppVeyor CI, it just caught the small regression in IE\nSorry, what do you mean? \nIssue #900 affects all browsers, or just IE11?. There must be a more elegant solution to this issue, that might prevent future similar issues. At first look, I don't think this PR gets to the root of the problem. I can look deeper into this later. This fix only works if the user presses the enter key very quickly. If they delay > 100 ms between keydown and keyup the issue is still there. Easily reproduced in the sandbox with the commit i just added.. Hmm.. but it looks like window.alert has that issue too.. if you dismiss the alert with Enter and delay a second before releasing the Enter key, you see the same effect.. so I think fixing that that is out-of-scope. I think what Chrome is doing is returning the focus immediately, but filtering the Enter event for ~ 500 - 1000 ms .. which is a good safe amount of time to be sure the user isn't just pressing the Enter key slowly.\nIs there any unintrusive way we could do the same?. @limonte No because of the timing. Play with it. With a swal you have to press really fast (< 100 ms) or you see the bug. With Chrome it seems to suppress the keyup event for a longer time (but still seems to give focus to the input immediately).. > PS. I rebased to master and removed changes in the sandbox as those shouldn't be in the PR.\nThat code is helpful within the scope of this PR/branch. Wasn't intended to merge. If I do this in the future please let's wait until the branch is ready to merge to remove it.. > 100ms seems to be an average keypress duration [...] I'm okay to increase it though [...] 200ms will theoretically match non-tech persons\nIf the distribution of keypress durations was normal, 100 ms would work roughly half of the time. Just a reminder that we would need to use a longer time than that of the average non-tech person. It might be difficult to choose a time that covers that and doesn't delay focusing on the element for the fast users.\nWhat do you think about setting the focus immediately and filtering the keyup event from it's event handler?. > What do you think about setting the focus immediately and filtering the keyup event from it's event handler?\n... for a duration of maybe say, 500 ms?. @limonte Check the issue, lets talk about the solution there some more. @limonte Were they working before?. Do you know anything about BrowserStack?. Ok, sounds good.\nBut it's really unbecoming of a CI service, which is to ensure stability, to be unstable itself. It fails when everything is ok, and I don't know if we can we trust it when it says everything is ok..\nI think we should wait a bit and then give SauceLabs a final chance.. Shit.. I wish I had a clue of how to approach this.. Will think on it. Hmm.. could this have something to do with it?\n$ yarn\n...\nwarning \"karma-webpack > webpack-dev-middleware@1.12.2\" has incorrect peer dependency \"webpack@^1.0.0 || ^2.0.0 || ^3.0.0\".\n...\nWe are on webpack ^4.0.0. See #951.\nEither way, this could potentially cause problems.\nUpgrading karma-webpack might fix the incorrect peer dep.. > Bug-fix IMO.\nGood. Yeah I agree.\nI was thinking of something like this:\njs\nfunction argsToParams(args) {\n  const params = {}\n  ;['title', 'html', 'type'].forEach((name, index) => {\n    if (args[index] !== undefined) {\n      params[name] = args[index]\n    }\n  })\n  return params\n}\nI'll put in another PR after #992 settles. @toverux I think micro-optimization on this library at this point doesn't make any sense, since, well, we have a lot of macro-optimization to make, e.g. not storing state almost entirely in the dom, accessing the dom (slow) all the time like the elementByClass I just fixed here. I fixed a good chunk of it in PR #969, but lots remains.\nNot to mention that our lib isn't really CPU intensive (our code isn't running very much of the time), JS engines are really fast (function calls are not that expensive), and [I think] elegant code is generally important (it's well-worth the cost).\nI do have a preference for readability and maintainability over performance, but I think for this particular project it makes objectively more sense.\nTBH I'd rather open up a new PR addressing the dom accessing issue than start making our code WET in the name of micro-optimizations.. > It just looks like \"let's use a forEach and use lambdas, because lambdas\" :)\nIt's more like \"let's use a forEach because here's something I want to do once for each of these\". I don't want to repeat myself. ~~Btw, Array.prototype.forEach is not functional programming because it has no return value and we use it with functions that have side effects.~~ irrelevant\nI don't see how it is complex. \"Do this for each of these.\" It's simpler and more concise than your code example. More expensive, yes, barely, and worth the expense. \nIt would be cool to use for .. of but we can't because of this #942.\nI don't feel comfortable copy-pasting code for the sake of reducing function calls.. Released in version 7.14.0. > What do you think about splitting validators into a module?\nDone in https://github.com/sweetalert2/sweetalert2/pull/992/commits/92bfcb4547ddfdb0b70236e72b6d0d825112c06e. Bundlesize check seems to be stalled, but you can see this report if you dig into the Travis \"Push\" build\n\nWARN  dist/[secure].all.min.js: 12.65KB < maxSize 15KB (gzip)(22B larger than master, careful!). Released in version 7.14.0. Released in version 7.14.0. I'm not noticing it on https://sweetalert2.github.io/ .. Do you see it there? Browser name & version? Screen capture?. > did something change?\n\n\ud83d\ude06 yes, almost every day. @limonte A few things I want to take care of first\n\nMove to the sweetalert2 org\nSet up a CHANGELOG.md (semantic-release \ud83d\udc98)\nRelease v1.0.0. I'll move the repo to our org right now. Repo is now in the org, and has a CHANGELOG.md. We're very close to sweetalert2-react-content@1.0.0!\n\n@toverux @acupajoe @samturrell Collaborators! If it interests you, I'd love to get some review of the package before making the first major release! Please have a look and open an issue if you find something that can be fixed or improved!\n. @Baune8D Travis failure is due to #986 .. I started another build ... @baeharam this is not the proper use of issues. Gimme your feels y'all @limonte @toverux @acupajoe @samturrell . This issue seems to be blocking (in my mind).. https://github.com/sweetalert2/sweetalert2/pull/1008#issuecomment-372662854. Let me just do a bit on #970 and then I can put in a PR to show more of what this would look like.. The PR is in.. #1036. Closed by #1036. @limonte I'm glad you seem to be excited about this as me!\nWill add the JSDoc comments.\nShould we print a warnOnce deprecation notice when users try to use setDefaults or resetDefaults? \nI'm thinking that in the next major, setDefaults should be removed (since swal.mixin fits all the same use-cases and is preferred) but still available in a plugin for those who prefer not to update all their old code.\nWhat do you think?. @toverux @acupajoe @samturrell Would love to get your feedback on this as I think it's a pretty big change, despite the fact that its only adding two small new methods.\n@toverux is probably losing his mind trying to figure out if/how swal.plugin can work with TypeScript. I really wish I knew more about TS but it seems like maybe TS won't fully work with this feature? I tried checking out how they're handling this in fastify since the project has some TS support, and their plugin system fastify.register(plugin) is similar to ours in that plugins can change/extend their host's API (i.e. add & extend methods), but it looks like plugins don't come with any type information. Still may be worth looking at for insight.\nIf we do the refactor proposed in #1007 then I think maybe TS can work with enhanced swal instances. A plugin module might look like this:\njs\nexport default function withCopyright (Swal) {\n  return class extends Swal {\n    static params (params) {\n      return Swal.params({\n        ...params,\n        footer: (params.footer ? params.footer + '<br/>' : '') + 'Copyright 2018'\n      })\n    }\n  }\n}\nand could be applied two different ways for the same effect:\njs\nconst mySwal = withCopyright(swal)\n// or\nconst mySwal = swal.plugin(withCopyright)\nand now it seems obvious: I think we should drop swal.plugin from this PR and rather focus on #1007. If we make the API a proper OO surface we don't even need a .plugin method, like React doesn't need a .higherOrderComponent method. Users just apply the extensions themselves by running the class through a number of withFeature functions. e.g. const MySwal = withPrompt(withCopyright(Swal)). > and now it seems obvious: I think we should drop swal.plugin from this PR and rather focus on #1007.\nFuck, and I put a lot of work into all the tests for that tiny little function\nBut if y'all can already tell me #1007 isn't going to happen, I'd like to keep swal.plugin.. If we scrap swal.plugin then can we still use \"plugin\" to refer to these higher-order-component-type functions (functions that take a class and return an enhanced class)?. Superseded by #1023. Check out the new PR #1008 .. Assuming this PR is merged, it makes sense to integrate and use the changes in sweetalert2-react-content, and assuming the semantics in this PR don't change, \"mixin\" will be definitely incorrect, and \"plugin\" will be definitely correct.\nWith a descriptor like plugin in the name, I would feel much better about dropping the extra descriptor  content.. I don't think the name would need to describe what particular React-related feature(s) the plugin adds, since it simply adds \"general support for React through a plugin\". \nRight now the only specific feature I can imagine that would fit that description is \"React elements as content\" but if any more were discovered I would want the same package to have it.\nThis would make this package name distinct from @sweetalert2/react-component (the class or blueprint for a React element is called a component) in a meaningful way, since this package exports a SweetAlert2 plugin (says it in the name) and that package would export a React component (also says it in the name).\nedit: not sure about this \"plugin\" business now \ud83d\ude1c. ## @sweetalert2/plugin-react. ## sweetalert2-plugin-react. Reopened sweetalert2/sweetalert2-react-content#3 so we can discuss the \"scoped vs non-scoped package name\" aspect there and focus on the \"keywords in the name\" aspect here.. @limonte I really just wrote the clean commit history for review purposes. I think that amount of granularity in the master commit log is too much. There I kinda just want to see a summary commit, like refactor(modules): extract static methods from main module into src/staticMethods/. @limonte Actually we should be using promise-polyfill since we tell IE11 users that is the only polyfill they need to bring to their environment. The failure on AppVeyor indicates a portability issue:\n\nReferenceError: 'Symbol' is undefined\n\nThere's a use of Symbol in our code (probably the transpiled code) which isn't supported in IE11. @limonte on this subject, what do you think about just requiring IE11 users to have all the ES6 polyfills loaded? It would be great to use new language features that depend on globals, like for .. of (which uses Symbol under the hood and you can see it when transpiled) and Array.prototype.includes , and I don't think it's asking too much. Plus we're already requiring them to load the Promise polyfill, so the other polyfills could be included in the same bundle.. @limonte \n\nIn the current terribly unstable front-end ecosystem, I think it's better to require as fewer dependencies and polyfills as possible. Asking for additional polyfills would be a breaking change for existing users and each breaking change hurts. Let's not hurt our users without strong reasons for that.\n\nOur DX is a strong reason. I want to use es6. And an es6 shim is the same number of dependencies as a es6-promise shim (one). You are correct to point out that it would be a breaking change though. We should do it in the next major. What do you think?. @limonte please review and let me know what you think, and then I have one more matter to discuss in regards to the mixin method.. Check out https://github.com/sweetalert2/sweetalert2/pull/1036/commits/c4e7b7098cdfd154e3f97cd5745fec947af12137 and let me know if you want any more examples. (edit: examples of extending Swal). Here's another example of extending Swal... the withCopyrightInFooter example from #968 adapted:\njs\nimport Swal from 'sweetalert2'\nexport class CopyrightSwal extends Swal {\n  _main (params) {\n    return super._main({\n      ...params,\n      footer: (params.footer ? params.footer + '<br/>' : '') + 'Copyright Rick Sanchez'\n    })\n  }\n}\nor as a higher-order component, for better modularity and composibility:\n```js\nexport function withCopyright (Swal) {\n  return class extends Swal {\n    _main (params) {\n      return super._main({\n        ...params,\n        footer: (params.footer ? params.footer + '' : '') + 'Copyright Rick Sanchez'\n      })\n    }\n  }\n}\nconst CopyrightSwal = withCopyright(Swal)\n```\n\nNow lets try extending argsToParams...\njs\nclass FooterShorthandSwal extends Swal {\n  static argsToParams (args) {\n    if (typeof args[0] === 'string') { // if first arg is a string, make it the `footer` param...\n      return {\n        ...Swal.argsToParams(args.slice(1)),\n        footer: args[3]\n    } else { // otherwise, just proxy to parent method\n      return Swal.argsToParams(args)\n    }\n  }\n}\n\nDid you know, Swal.prototype._main is an async (promise-returning) function?\njs\nclass MySwal extends Swal {\n  async _main (params) {\n    // do something with `params`\n    let result = await super._main(params)\n    // do something with `result`\n    return result\n  }\n}. @limonte ok the part about mixin.. I updated it to be OO using prototypical inheritance also, so that it is somewhat aligned with the new kind of extension, but pre-es6 oo patterns aren't 100% compatible with ES classes..\nCurrently, the following interoperation of Swal.mixin and extends Swalwill not work...\njs\nclass ExtendedSwal extends Swal {}\nconst MixinSwal = ExtendedSwal.mixin({})\nMixinSwal('foo') // <-- throws \"Uncaught TypeError: Class constructor ExtendedSwal cannot be invoked without 'new'\"\nnew MixinSwal('foo') // <-- throws the same error. the es super-constructor can not be `.apply`ed to the instance because `apply` can't signal the `new` keyword.\nI suggest fixing it by making a small breaking change. Luckily the .mixin method is very new and not even documented yet. Let's make it use proper ES classes. That means that the class it returns must be instantiated with the new keyword. But it will allow us to mix .mixins, and extends together (specifically it will allow us to use .mixin after extending, which is the time when I'd want the fast-and-loose mixin method, not before).\nIf you would prefer to keep the ability to invoke mixin swals without the new keyword, I think we can handle that (edit: we can't). I can modularize the main constructor method a wee bit more (i.e. extract a doPreFlightCheck function) and then duplicate the new tiny constructor in mixin.js.. that fixes the problem by avoiding the need to apply the parent constructor... ... ... oh but shit.. child classes can extend the constructor adding/changing logic, so it's not safe to assume we know what the parent constructor does... @limonte You ok with making that little breaking change to the mixin method?. I think we should change all the tests and documentation to say Swal instead of swal and SweetAlert instead of sweetAlert, to reflect the new OO paradigm. Just change the function name, not use the new keyword. It could get confusing when we are talking about a hypothetical var named swal (instance) vs Swal (class).\nCan I go ahead with this?. In https://github.com/sweetalert2/sweetalert2/pull/1036/commits/79aaea3d1b76be793bf0b663733b32651c2f5715 I just added a static Swal.fire(...args) method that simply creates and returns a new instance of itself, for use with extended MySwal classes, since es classes require you to use the new keyword, but linters complain about using the new keyword for side-effects:\ne.g. \n```js\nimport Swal from 'sweetalert2'\nclass MySwal extends Swal {/ ... /}\nnew MySwal('foo', 'bar') // <-- Standard lint error: \"Do not use 'new' for side effects.\"\nMySwal.fire('foo', 'bar') // <-- do this instead \n```\nMaybe in the next major we can \"not use 'new' for side effects\" and make the constructor a pure function by deprecating simply calling await Swal(...args), and adding a swal.run() instance method that does the side-effects. Then Swal.fire(...args) would behave the same, but would be a shorthand for calling new Swal(...args).run().. I'm totally open to renaming Swal.fire btw. > I suggest fixing it by making a small breaking change. Luckily the .mixin method is very new and not even documented yet. Let's make it use proper ES classes. \nDone in https://github.com/sweetalert2/sweetalert2/pull/1036/commits/78661710869470aca5e9feae13e159803c1e6116\nedit: This was reverted and replaced with a better solution in PR #1043. You can now invoke a MySwal that was created with Swal.mixin without the new keyword (or the fire static method).\nYou must use MySwal.fire(...args) for the swals you create with .mixin.. > I think we should change all the tests and documentation to say Swal instead of swal and SweetAlert instead of sweetAlert\nDone in https://github.com/sweetalert2/sweetalert2/pull/1036/commits/6c2ee3730a38b221c923a86db81654e359f8a3a9 and https://github.com/sweetalert2/sweetalert2/pull/1036/commits/7fbce93061145e52b4344e2753cf3851e0c45b18. Ready to merge IMO..\nNext step will be to separate logic for distinct features into HOCs, ready to be extracted into separate packages in the next major...\n  - toasts\n  - form-builder\n  - global defaults, i.e. setDefaults/resetDefaults, which is deprecated but will be nice to have for legacy apps\n  - \"queue\" which is kinda unnecessary too now that control-flow is so simple to do yourself with async/await. The nice thing about modularization like this is that we don't have to agree about the validity of features.. It can exist, and people can maintain it and use it, separately, without affecting the precious core.\n  - maybe even the \"input\" feature?!?! this would allow a space for experimentation and innovation with this feature. I can't wait to integrate this change into sweetalert2-react-content. I tried e9692d6c0d026afa00961400edea4b97495ae964 but that barely made a difference\nAlso fixed a little problem here #1041, but I don't think that will make much of a difference either... @limonte ahh maybe this is it.. this is the compiled mixin function now (jsdoc comment excluded):\n```js\nvar _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.proto = superClass; }\nfunction mixin(mixinParams) {\n  var Swal = this;\n  return function (_Swal) {\n    _inherits(MixinSwal, _Swal);\nfunction MixinSwal() {\n  _classCallCheck(this, MixinSwal);\n\n  return _possibleConstructorReturn(this, (MixinSwal.__proto__ || Object.getPrototypeOf(MixinSwal)).apply(this, arguments));\n}\n\n_createClass(MixinSwal, [{\n  key: \"_main\",\n  value: function _main(params) {\n    return _get(MixinSwal.prototype.__proto__ || Object.getPrototypeOf(MixinSwal.prototype), \"_main\", this).call(this, _extends$2({}, mixinParams, params));\n  }\n}]);\n\nreturn MixinSwal;\n\n}(Swal);\n}\n``. Some of these we can move outside this repository, like I'm proposing we do with the \"global defaults\" feature here https://github.com/sweetalert2/sweetalert2/pull/1045/commits/2fc3d01822c0f0ab324c07d20e8d8ffc6030b867. With the deprecation warning I added last commit, the documentation site should be updated before publishing this *(edit) updated in regards to Swal.mixin()* . @limonte \ud83d\udc4d  Be sure not to publish before sweetalert2.github.io is updated in regards to Swal.mixin. @limonte or users will get a deprecation notice saying to switch to using a method that's not documented yet. @limonte How are you likingSwal.mixin` in practice?. > @limonte \ud83d\udc4d Be sure not to publish before sweetalert2.github.io is updated in regards to Swal.mixin\n\n@limonte or users will get a deprecation notice saying to switch to using a method that's not documented yet\n\nEh, I guess we should get that documentation updated quickly since this is released in 7.19.0. I'll make a PR to the documentation site just adding the Swal.mixin method, and I think the rest of the edits (e.g. swal -> Swal can come in the new site.. ## extension. ## HOC. ## decorator. ## enhancer. ## wrapper. ## integration. Alright, perfect!. @gauraviitr Please open another issue following the requirements detailed in the issue template, and we'll be happy to investigate. @limonte Why can't we support \"using whatever input types are supported by the host browser environment\"? If you look at it that way then it's not a feature that would be broken on IE, and it doesn't drag everyone (i.e developers for modern browsers) down to the level of IE11. \nIf someone wants to use date/datetime inputs and target IE11 then they should load a polyfill. We could document this, but I don't think that's really necessary since we don't explicitly say what input types are supported, and one should naturally assume that input types not supported by the browser will not be magically made to work by SweetAlert2.\nWhat do you think?. @limonte \n\nThis assumption is IMO incorrect, let's not underestimate people's stupidity. They will raise issues with questions similar to \"Why input: 'date' doesn't work in IE11???\".\n\nI don't underestimate the stupidity of some people, but restricting functionality just so that these stupid people don't get confused makes our library stupid. What is the problem if stupid people post stupid questions like that? I would just close it saying \"this isn't an issue with sweetalert2.. 'date' inputs are not supported in IE11\" and adding a helpful suggestion \"if you need to support IE11 use a date input polyfill or find another way to get dates from the user\". I would not say it to them but it's really stupid to think SweetAlert2 uses it's own implementation of a 'date' input when it appears as a native date input, and really careless to use browser native 'date' inputs when they need to support IE11. We shouldn't make it our problem that there are people this stupid. \n\nI still think that we shouldn't support features which are supported by limited browsers. It's much easier both for maintainers and users to be sure about the equal support of all features in all supported browsers.\n\nLike @alamin3000 was trying to say: It's not really something to support, it's more like something we should not prevent by throwing an error when users pass input: 'date', rather than just using it with the normal input behavior. It's the same as using html: '<input type=\"date\">' .. this also will not work in IE11, but we allow users to do it.. Ignoring the logistical overhead and supposing it was possible, would you want to prevent users from passing HTML that doesn't behave the same in every browser?\n\nIf we'll make an exception then neither we nor our users will be sure about the browser support of different features.\n\nIt would not be an exception. All of our features would still work in all browsers, but not all browser features will, same as always.\n@limonte Would you feel better about this if instead defining every \"valid\" input type, we used the behavior for text/email/password/etc as the default, used when the type doesn't match one of the special cases? That way we avoid the need to tell our users what types of input they can or can not use.. Pretty sure this is the same issue I brought up in the second paragraph here https://github.com/sweetalert2/sweetalert2.github.io/pull/20#issuecomment-381004556 and you can see right now at https://zenflow.github.io/sweetalert2.github.io/\nIt's a blocker for the publishing of the new documentation site. \nIdeally there would be no requirements for the styles on the <html> or <body> elements of the page, but if there are, they need to be documented. Otherwise this definitely seems like a bug with sweetalert2. . > Probably we should add something like \"Do not shoot to your own knee by setting the height on html/body less than the height of the actual document, some plugins might rely os that\"\nI don't think it's a very common requirement, so I wouldn't phrase it like that. As far as web standards are concerned (not sure about some other libraries though) it's perfectly ok to have child elements rendered outside outside the bounds of their parent.. @limonte This shouldn't be needed. The merge conflict was because of these two commits made in the dist branch that should not have been: 67422493664625330c1f671051d5aa19268a499b and 5417540a5292495227721bf09d529d80a37d9cb1 .. luckily the same changes were also in master (as different commits)\nWe should probably revert this because if there is a conflict it will indicate that something is wrong, and this could prevent some harmful mistakes from sliding by unnoticed.. @lazaronixon thanks for reporting\n\nwhat polyfill did you use?\nis it possible to provide the error message you get when you try with the polyfill?\ndoes this polyfill make it work? https://unpkg.com/babel-polyfill@6.26.0/browser.js\n\n@limonte we may need to find another approach for storing the newly introduced instance properties.. but I think a polyfill should make WeakMap work .. if so, we could change our requirement from \"promise polyfill\" to \"babel-polyfill\" and there would still be only 1 polyfill that users need to load in order to support older browsers.. and we would be able to use all of these modern js types.. @limonte please reconsider the cost.. it's 100kb.. compare that to the lost effort trying to solve this kind of problem that keeps popping up.. and the how the solutions usually involve avoiding using modern js features. Also keep in mind that many projects using babel already require this. I think it's hard to deny that what I proposed (use babel-polyfill) is the simplest approach, correct? I mean code compiled with babel seems to expect the new types to be present. Include this file and everything just works.. we don't need to stay on es5, and we don't need to worry if our code (compiled or not) uses new object types (actually WeakMap is pretty old now). Do you think the cacheable (i.e. http 304) 100kb is not worth that benefit?. > we may need to find another approach for storing the newly introduced instance properties\nprobably there is no way clean way to achieve the private properties without WeakMap. maybe just return to traditional _privateProperties which are not really private. . @limonte \n\n100 kB is a lot. I don't know how to argue here, from first-world countries it's difficult to understand how it feels for people with the 2G/3G connection to use the modern Internet.\n\nwith a good connection it's nothing/negligible .. with a bad connection, well, using the internet will be slow, but the file is equal to one medium sized image, which I think is reasonable in order for things to \"just work\" for us developers\n\nThere's also a lot of old-school projects which are using Bower/CDN/zip\n\nI know that, my point was just that for many projects the whole 100-extra-kb issue does not apply because it's already being used. Some (not all) users will benefit from our sacrifice of simplicity, which counts when you weigh it out, i think.\n\nWhat do you think about #1072?\n\nYeah I guess including a WeakMap ourselves is probably not too much overhead, though I don't think that nor testing against one more browser gets to the root of the problem. I left some comments on that PR btw.\n. > Sounds like jQuery to me :D\njQuery back in the day when browser apis were missing and inconsistent across different browsers, yes I agree. And that's when it was really useful, and most devs agreed it was usually worth the bulk.. A few issues with how we're getting WeakMap here, and one suggestion\n\nAs a library I think changing the global environment like in privateProps.js is too intrusive and could cause some users some confusing issues. This can be avoided and WeakMap can be loaded in just a local lexical scope.\nI'm not so confident in the WeakMap implementation used here.. I'm not sure it was ever tested or not and it seems like it was intended to be more of a demonstration of what you can do with Symbols rather than a serious production-ready implementation of WeakMap. \nLastly, I think we shouldn't be reusing code from the web by copy-pasting it into our repo. Npm is great. It's possible to install packages as devDependencies and have them included in in the bundle at build-time.\n\nSo my suggestion is to choose a WeakMap polyfill from npm, have it included in the bundle, and use it such that it doesn't patch the global environment but instead use the exported WeakMap.. Documentation is lagging a bit behind on all of this. It's sort of tied up behind this PR sweetalert2/sweetalert2.github.io#20. Let me explain what Swal.fire is for.. \nWe recently refactored to make sweetalert2 a \"thenable\" class (a special one that, for backwards compatibility, does not need the new keyword to be instantiated) instead of a promise-returning function. See PR #1036. When you define class ExtendedSwal extends Swal, the ExtendedSwal class won't have that special ability to be instantiated without the new keyword. It needs to be instantiated with the new keyword. Because of this you will bump up against the no-new rule of eslint (used by Standard) when you just want to fire an alert but don't want to do anything with the result. In this case you can call ExtendedSwal.fire, using the same arguments you would pass directly with the constructor. See https://github.com/sweetalert2/sweetalert2/pull/1036#issuecomment-375383660\nTypings need to be updated drastically to take advantage of this refactor, and that will be a breaking change, so it will need to wait until the next major version bump. We can include the addition of the fire method though (something I overlooked, sorry). I'm not really experienced in TS though... @proProbe @lexcorp16 @toverux would anyone like to contribute this update?. @proProbe I don't know how to do it without just copying and pasting the types from the main function. . @Hydro8 What is/are the reason/reasons you cannot reload the modal? \nIf it is just the matter of visual presentation, i.e. you want it to appear to the user as one modal, (\ud83e\udd1e) I have an idea of how to maybe make the reloading (or \"second-swal\") approach work...\nThe only real obstacle would be working with the animation: true configuration (which happens to be default)..\nSuppose we added support for passing a function for the animation param, so that you can disable animation for the subsequent modal(s) only for the intro. Thus, to the user, it would appear to be one modal.\njs\nconst MySwal = Swal.mixin({ /* common params */})\nMySwal({\n  type: 'info',\n  text: 'Doing something on the server...'\n})\nconst eventSource = new EventSource('./foo')\neventSource.onmessage = (event) => {\n  MySwal({\n    type: event.data.isError ? 'error' : 'success',\n    text: event.data.message,\n    animation: (swal, isOpening) => !isOpening\n  })\n}\nNot sure how I feel about this solution myself, but how would you feel about it? Would you be satisfied?. Hey @limonte my laptop has died so until I buy a new one it would be hard to make a PR.. but I've taken a look.. I suggest changing the --continue-on-lint-error switch to --continue-on-error and find a way to (conditionally) catch and just report errors in the build tasks.. not sure how to catch errors in a gulp stream but it must be possible. @paolog22 It is already reported? Which issue is it? This is the first I recall hearing of it.. @limonte Roger that.. will look into this tomorrow. Sorry for the delay.. I've investigated and found a solution (PR #1062).. I don't think we or this package is the problem, but we can do something to save the pain that uglify-js is causing with our package.\nInvestigation (in case this ever comes up again)\nIt seems to be a problem with how two (or more) uglify-js compress directives (unused and one or more others) are interacting on our mixin method..\nHere is the original source:\njs\nfunction mixin (mixinParams) {\n  const Swal = this\n  return withNoNewKeyword(\n    class MixinSwal extends Swal {\n      _main (params) {\n        return super._main(Object.assign({}, mixinParams, params))\n      }\n    }\n  )\n}\nHere it is after babel transforms:\n```js\nfunction mixin(mixinParams) {\n  var Swal = this;\n  return withNoNewKeyword(function (_Swal) {\n    inherits(MixinSwal, _Swal);\nfunction MixinSwal() {\n  classCallCheck(this, MixinSwal);\n  return possibleConstructorReturn(this, (MixinSwal.__proto__ || Object.getPrototypeOf(MixinSwal)).apply(this, arguments));\n}\n\ncreateClass(MixinSwal, [{\n  key: '_main',\n  value: function _main(params) {\n    return get(MixinSwal.prototype.__proto__ || Object.getPrototypeOf(MixinSwal.prototype), '_main', this).call(this, _extends({}, mixinParams, params));\n  }\n}]);\nreturn MixinSwal;\n\n}(Swal));\n}\n```\nStill no problems.\nCompare that to the version we get after running through uglify-js, with the default options but with mangle: false, output: { beautify: true }:\njs\nfunction(mixinParams) {\n    return withNoNewKeyword(function(_Swal) {\n        function MixinSwal() {\n            return classCallCheck(this, MixinSwal), possibleConstructorReturn(this, (MixinSwal.__proto__ || Object.getPrototypeOf(MixinSwal)).apply(this, arguments));\n        }\n        return inherits(MixinSwal, this), createClass(MixinSwal, [ {\n            key: \"_main\",\n            value: function(params) {\n                return get(MixinSwal.prototype.__proto__ || Object.getPrototypeOf(MixinSwal.prototype), \"_main\", this).call(this, _extends({}, mixinParams, params));\n            }\n        } ]), MixinSwal;\n    }());\n}\nThe call to inherits() will throw because the argument in the second position, this, will always be undefined, because the containing function is called without any context.\nIf we disable the unused directive, or every other directive under compress except unused, we get working code. I didn't bother to figure out which of the dozens of directives is interacting with unused to create this problem.\nAlthough I don't understand the problem in detail, I know that uglify-js is screwing up the reference to the parent swal (i.e. Swal). So I tried just changing to code to make this reference in a different way, and it worked. See PR #1062. @limonte I'm not too worried, but do you have any ideas about how to protect against regressions?\nWe could perhaps switch back to uglify-js here, and run unit tests against the minified build rather than the non-minified, but then it would be crucial to have sourcemaps.. @limonte I thought you were going to change this so that the Symbol and WeakMap implementations are only defined for internal use, i.e. not monkey patched onto the global/window object. There's no need to mess with the global environment, and it can cause users more confusing issues.. This commit message (db291a3172259489ac41804998a5d87fa96cdeaa) doesn't fully make sense: \n\ncheck and define window.Symbol, not global Symbol\n\nThe global Symbol is window.Symbol.. > Feel free to submit a PR.\nOpened #1133. > With this approach in the update() method the current instance won't be updated but replaced by the new one.\nI think it would be confusing and complex if updating doesn't update, and an instance is not an (one) instance. I can already see a host of issues with this implementation:\n\nlifecycle parameters (onOpen, onClose, etc.) will run for each \"sub-instance\", which may be counter-intuitive for our users, and there will be no way to execute some code at the start or end of the \"super-instance\"\nthe promise of the Swal is from the first call to this._main, and will never resolve if update() is made\n\nTrying to solve these problems individually would just complicate things further and result in a compound explosion of complexity, lol\nBesides that, I have one solvable concern about an update method: We currently have a system where devs can create reusable enhancements, by extending a Swal and (1) receiving a specialized set of params, and (2) controlling the set of params passed to the super class. This PR would make this more difficult to control, and I would want changes, to create a common code path for processing params, used in creating and updating Swals\nwhy not actually update the instance? write update logic for individual params? every param need not be updatable..\nI am also questioning whether this is something that needs to be added. Don't get me wrong, I find the idea of dynamic/mutable params very attractive, but I have actually given this a lot of thought recently, and now I am thinking it would probably be easier for the user (not to mention, for us) to use each Swal as a single interaction, rather than try to combine multiple interactions into one. edit: OK, I did some experimentation, and immutable params is really just easier for us and anyone extending Swal. @limonte no, i lost this issue, so thanks for the reminder.. i'm having a look now. @altbdoor what is your use-case? why do you need to use the source instead of the compiled build?. @limonte We could also remove the src folder from the published package.. what do you think?. Unforeseen detail here: What about the scss files located under src/? I would think we want to continue to ship those in the package, since probably a lot of people are customizing the variables and @importing \"../../node_modules/src/sweetalert2.scss\" in their own sass code.. @limonte Disappointed that we could not work on this so that it remains easy to extend Swal..\nAlso, in my comment I indicated a problem/bug:\n\nthe instance's params property (i.e. the \"outer\" params, which were defined with the user's call to Swal) should probably be updated when the update method is called, as this would likely be expected\n. Opened https://github.com/sweetalert2/sweetalert2/issues/1386 ... \n\nThe other recommendations were critical to Swal being easy to extend.. something I worked very hard on. \nThose recommendations included changes to the \"protected\" API (i.e. extensions depend on it; changes to it can break code outside of this repo) as well as the public API (e.g. removing isValidParameter, isDeprecatedParameter & isUpdatableParameter from the public API).\nI'm not sure why you are so hasty to make the major release, when there are still many things in the API that could have been fixed or improved, e.g. https://github.com/sweetalert2/sweetalert2/issues/1373, but now we are stuck with for another major version, unless you are fine with making major breaking changes in patch releases.. Woot!! Love this!. @limonte I don't think we should rename SASS variables in a minor release. Users can be customizing the styles for (aka theming) SweetAlert2, using the current variable names, and so changing that would mean a breaking change for them. That said, I do agree that the new semantics are improved.. This has nothing to do with SweetAlert2. SweetAlert2 does not make any network calls, using XMLHttpRequest or otherwise. \nAs the issue template says, we want a reproduction for issues. Ignoring that does not earn you the good will of maintainers to help you with your problem free of charge.\nTry to make a minimal reproduction of your issue and I think you will find that that minimal reproduction doesn't involve SweetAlert2.. @roopeshreddy why is this a problem? don't you minify after bundling?\nYou can safely import 'sweetalert2/dist/sweetalert2.all.min.js'. @gverni So the extension author is targetting sweetalert2 modals.. very interesting. \nMaybe we could reach out to them and get their thoughts on how sweetalert2 can work with their extension for the use cases that have nothing to do with cookies... Breaking all kinds of other things seems like a high price for not being bothered about cookies.. @limonte It looks like the build setup he's using is using the src and not the dist, which I didn't think anyone would be doing when I added the withNoNewKeyword trick.. I guess I neglected to notice this line: https://github.com/sweetalert2/sweetalert2/blob/dc8f8c68de2fdca68fabc7a7244d478f2177985c/package.json#L8\nThat trick simply won't work with the uncompiled source; an actual (un-transpiled) class can only be instantiated with the new keyword.\nSince evidently noone is using the src [successfully], and since I don't see any real need to use the src rather than the dist (do you?), I think we can either remove that line or make it point to the dist, and make a patch release.\nIn the next major, if we can get rid of this withNoNewKeyword business (i.e. change the API from Swal(...) to new Swal(...) and Swal.fire(...)) then I think it would good to go back to supporting users using the uncompiled src; if they are targetting only newer browsers then they can benefit from the leaner bundle size.. @richardhsueh For the time being I would recommend you import Swal from 'sweetalert2/dist/sweetalert2.all.min.js' (that includes the styles) and don't change this package's package.json. Changing the contents of a package in node_modules is typically not a good idea because the changes will be lost whenever the package gets updated with npm install. Also, if you're using version control (e.g. Git), files under node_modules are usually ignored. If you really needed to you could use patch-package to safely patch a package, but in this case it's much simpler to just import the specific file.. @limonte Sorry, your comment slipped by me. \nIf we are looking at supporting version 7.x after the release of 8.0, a solution might be to replace all the use of class syntax with old-school JS OO patterns (i.e. function MyClass () {}; MyClass.prototype.myFn = function () {}`)\nOtherwise, we can simply \"Drop withNoNewKeyword in coming major release\" (#1368) . @limonte I'll look into this when I have a few free moments. We will likely need to use a couple different modules to replace es.split() and es.merge(). ~~.pipe(es.map(...)) can be replaced with .on('data', ...).~~ edit: Nope, we need something like es.map() (or else manually create a new stream).\nFor the time being maybe we can just pin the dependency to the exact version that was used when I introduced the dependency. This might even be a sufficient long-term solution since that version has all the features needed and has no bugs affecting us. Thoughts here?. @gverni Wow, thank you very much for offering your help here! \nI don't know of any particular packages to use unfortunately, but I think there should be lots of options. \nYou can check event-stream's documentation to see what each of the three functions do, and find a module to replace each. Note that the default for matcher in es.split(matcher) is \\n.\nDon't hesitate if you have any questions for me, and thanks again!. @gverni Looks like we can probably just use the modules that event-stream itself depends on:\nhttps://github.com/dominictarr/event-stream/blob/9a5c52a712a721cbc76192b5d0940bcc29cbef03/package.json#L10-L17\n. Looks like the only one of the 3 functions event-stream implements itself (not just exporting an external dependency as-is) is es.merge(). For that I think the merge2 package, which we're already using, should work.. @gverni I opened PR #1303 to remove any urgency on this issue, so you can relax and take your tiime with this.. @gverni I would open up a PR to get feedback even though it's still a WIP ;). I can see a syntax error here:\njs\n        }).done(function(response) {\n            if (response.msg == \"Error\") {\n                // error\n            } else {\n                // success\n        }).fail(function(responseXHR) {\nplease test and debug on desktop before opening issues saying it doesn't work on some mobile browser. With the removal of expectRejections, we can drop this file too: \nhttps://github.com/sweetalert2/sweetalert2/blob/9382c5a540354ac5df166a56d5f49c2c4684dc97/src/staticMethods/adaptInputValidator.js\nRemoving it and it's internal usage (which I believe will involve rewriting the internal inputValidators from bulky legacy+async form to one-liner sync form) will remove a significant # of bytes.. @limonte Why not just fully delete withGlobalDefaults.js and not apply it?. @limonte I'm a bit behind on the changes in this package, but question: is there another way to, from within the preConfirm function, cancel closing the modal and show a validation message instead? reference: https://github.com/sweetalert2/sweetalert2/pull/700#issue-151030873 point # 3 \nOtherwise I think this is a good idea, to get away from this feature for imperative code, and towards the inputValidator feature for declarative code.\nQuestion: Do we really need both preConfirm and inputValidator?. Sorry, I've been really busy with work and personal life, so I wouldn't be able to handle this myself right away. Should be fairly simple though.. > would you have time to take a look at this PR?\nSure I'll have a look later today\n\nAlso, do I understand correctly that we don't need withGlobalDefaults as well?\n\nCorrect. @limonte note that script type=\"module\" won't be supported in IE11 (https://caniuse.com/#feat=es6-module)\nso another option for those user's using Bower and needing to support IE11: follow Bower's own guide to migrate to Yarn https://bower.io/blog/2017/how-to-migrate-away-from-bower/ .. I would make that the recommended solution for when developers can afford to make the migration, since it will avoid other (not related to our package) future pains of using Bower.. @gverni Yup, I think we want this change for the upcoming major release. Note that it is a breaking change to the API and thus not technically just a refactor. \nWe need to do this for all the static methods that make more sense to be instance methods.. see https://github.com/sweetalert2/sweetalert2/issues/1373. @limonte What's the reasoning for this? I put that test there intentionally to deal with unexpected errors in user-defined functions. Yes, those functions should resolve, but if something goes wrong in their provided functions, I believe that instead of ignoring the error, we should \n- clean up the modal which is now in a potentially invalid state\n- propagate the error back to user code (i.e. the call to Swal.fire() should reject). > Public API is everything documented in https://sweetalert2.github.io\n@limonte Hmm.. I must disagree. That is the documented API. The public API is everything that is exposed to the public.\nDocumentation isn't the only way people figure out the the API; they also play around with it in the browser console, so it's very possible that projects in the wild are using swal.params. . > Why would we have undocumented public API?\nNot sure the point of the question, but a part of the API might be undocumented because (1) it was neglected, (2) it is just not feasible to document every little detail of the API, (3) it's experimental and might be removed in the next major release.\n\nDoes \"undocumented public API\" make sense to you?\n\nYes it does. It's the subset of the public API that is undocumented.. > I actually disagree with this statement. The fact that users can do things like $('.swal2-content') doesn't mean that the swal2-content classname is a part of public API. It's not. It might be changed at any point.\nI am reminded that there is a fine line between \"implementation detail\" and \"public API\". \nI would not look at the classnames as just implementation details (better to look at as public API), because people will often depend on them (and the whole HTML structure) to do their own css, even though it isn't documented, or in any way indicated to be anything other than an implementation detail. This should not be changed arbitrarily at any point.\nI don't think the swal.params property could be confused for an implementation detail.. it's clearly a feature.. @limonte It would be nice if everything was so simple, and could be classified objectively as 1 or 0, black or white, but unfortunately reality is not like that. \"Public API is everything documented in https://sweetalert2.github.io\" is simple, but not very objective since doesn't adhere to the consensus idea of what a public API is.\nBesides, even if we could use that definition of public API, there are still problems with it. \n- There are lots of details that are not documented that we should fully expect user's to depend on. For example, the first documented option, title, will accept null and this is treated as \"no title\". The documentation does not state how this value will be handled, but if we make a change so that this value is actually used for the title (i.e. the title will be \"null\"), wouldn't you consider that to be a breaking change in the public API? It isn't really feasible to document every detail of the API.\n- What about mistakes in the documentation? Does this definition mean we need to change the code to match the documentation (because the documentation is what defines the API)? I think it would make more sense (and cause fewer problems for users) if we changed the documentation to match the code. For an example see the \"Default value\" for inputOptions.\nDocumentation (as opposed to a spec, which our documentation is not) is supposed to reflect the API, not define it. The code defines the API. \nThe documentation documents the API, right? Then the API must be something separate and independent from the documentation, right?\nThe bottom line is that we should expect users to depend on all sorts of parts of the API that are not documented, and rightfully so, unless it's explicitly documented that they should not depend on it.. Congratulations everyone! We can be truly proud of our accomplishments!. @gverni \nI was waiting for this day! Awesome!\nOne thing though: the _main instance method is not meant to be \"private\". It should ideally be \"protected\", but since JS doesn't have that feature yet, it should be [technically] public. This is so it can be overridden when extending Swal.. Swal.mixin() and sweetalert2-react-content at least use this, and possibly other code in the wild.. Note: This is an issue with Jest v23 and Jest v24. We migrated the code-base to be object-oriented (i.e. we changed the swal function into the Swal class). Therefore to instantiate a swal you would need to now use the new keyword, e.g. new Swal({...options}) instead of just Swal({...options}). \nThe problem with this is that you do nothing with the result of the call (the instance) you will be violating the eslint \"no-new\" rule, which is a common rule to be enabled, and part of JavaScript Standard Style.\njs\nfunction sayHi () {\n  new Swal('Hi') // violates the eslint \"no-new\" rule\n}\nThe Swal.fire static method behaves the exact same as the constructor (takes the same arguments, and returns an instance) but does not have this problem.\njs\nfunction sayHi () {\n  Swal.fire('Hi') // does not violate the eslint \"no-new\" rule\n}\nrelated: When we did most of the OO refactoring during version 7, we used a hack to allow instantiation without the new keyword, to maintain backwards-compatibility (i.e. you could still instantiate a swal with Swal({...options})) but we dropped that for version 8. See issue #1368.. @WillGoldstein No problem.. this should also serve other people wondering the same thing. > Also, as @zenflow suggested, to fully support Jest and prevent devs from a need to mock window.scrollTo, added a check for its existence before usage\nI saw this in the original PR comment, but it was removed. Did you change your mind about this @limonte ? I don't think it's a big deal either way (since it's easy to discover what the problem is and work around it) but it would be nice if Swal was able to run in Jest without modifying the environment. @limonte It's hard to tell intuitively what a SweetAlertAllowOutsideClick is.. Is there a more descriptive name that could be used? Do we need this named? Or could we just use the type boolean | () => boolean?\nI'm working on #793 now. I'll save the typings for last.. Or maybe the typings file is best left to @toverux. Thanks for the review @samturrell . Yes, this makes sense. I seemed to have a (maybe impractical) issue with the src depending on the dist. In my next go at this PR I will change this line back but provide sweetalert2.css from a Vinyl (Gulp) stream rather than from the dist folder.. Yup, good catch. No problem! It didn't speed them up nearly as much as I estimated in #821 lol but they now run in about half the time, on my system, once the test harness is loaded.. Yes, this is the problem of my first TODO...\nTravis will automatically run the \"test\" script before doing anything else (if there is one), and it does so without the xvfb-run command which is needed for the tests to work in the headless CI environment. This is why there is no \"test\" script at the moment.\nMy idea was to have the \"test\" script (as well as the \"prepublish\" script, which has the same problem currently) run all of the checks (bundle-size, linting, and actual tests) as well as run the build beforehand. In this way, someone can run just npm t to make sure all is good before pushing. \nDoes my last paragraph sound good? Do you have any suggestion for alternate wording?. I removed this bit when I was struggling with the CI environment...\nhttps://github.com/sweetalert2/sweetalert2/pull/826/commits/b2a23ca4995c3f3e7ef169d234d32d4aed8bc4f4\nEmbarrassingly, I can not remember why, but.. It seems redundant to run all the same tests (of business logic) against this different version, when we just want to check that the build infrastructure works properly.\nPerhaps it would be better if we run the tests only once, but against the all.js build (rather than the plain js build)?\nEither way, since this runs on CI, I am ok to keep the tests against all.min.js if you prefer.. indicates the command to get started (as standard package script) and doesn't require devs to have gulp globally installed. gulp build rather than just gulp because it's nice to be explicit. great for devs who don't have an IDE that supports fixing eslint/standard linting errors (WebStorm). make sure the build is fresh before running all required checks. indicates all the required checks (except linting which is covered by gulp build). Removed \"lint-dts\" because linting is covered by the build process.. Note that you can invoke this with just npm start. Which reason are you referring to? The only one I see above (about reverting the before_script section) seems unrelated. Your statement seems to indicate two distinct issues\n\nprefer to be explicit in the Travis configuration\n\nI think it's better to be explicit here (unless unit tests are the only check they should care about). Contributors don't run the Travis configuration in local development. This way they are likely to run all the required checks before pushing (without even thinking about it). \n\nwith the unclear name\n\nI find check to be pretty clear, and gives us a category of package script. \n(Note that check currently is not in the .travis.yml.. test is. check is currently only used in the test script 2 lines above, so, as is, I think it's unlikely that anyone will be confused by this. Is there something else that \"check\" could be interpreted to mean in this context of .travis.yml?)\nWhat about test:bundlesize, test:unit, test:typescript?. > If linting or bundlesize is failing, the script section won't be triggered and a contributor will get an email from Travis within 1 minute or so.\nWith npm test (or npm run build && npm run check:bundlesize && npm run check:tests && npm run check:ts) the build will \"fail fast\" (i.e. upon the first failure it comes to) the same as you describe. It's debatable if this is best though; for example maybe it would be good to know the results of all the checks, in case there are more failures down the line to report all together (this is how test runners behave).. In order to test properly, first you need to build. Building is a part of testing. Without this, tests could fail when the source code is fine, or tests could pass when the source code is broken.. I.e. we don't have to depend on remembering to run npm run build && npm test (common script) rather than just npm test. > build is build, test is test\nAh, this line never said npm test.. But yes if I need to change the name of check:test I will update this line accordingly.. Ah, the exception to this is the [second] running of the unit tests against .all.min.js. That will still run even after npm test fails. You can see with this lint error I made.\nFixing.. you will need to watch dist/sweetalert2.css here as well. > I understand your point, but I'm still against mixing the concepts.\nI don't think you do. My point is that they are two distinct yet related concepts. If you see my point that \"Building is a part of testing\" (in the context of this project) then why would the build script not be part of the test script?\n\nTake a look at the react configuration\n\nOk. I did. But not every project has to have the same setup as react.\nThe next project I checked (Flow, another by facebook) does include building as part of their package test script.. See here and here.\nAlso, Jest, a modern test framework with considerations for js build systems, will handle building for you when you run jest. See this section of it's docs.\nLet's focus on reasoning, instead of appeal to authority: The reason a test procedure should build first is because otherwise we are not testing the source, we are just testing whatever happens to be in the dist folder at the time. \n\nThat was your issue recently, but that's because you didn't follow the contributing guide ;)\n\nIf you are referring to PR #816 \n\nThis is like if I went into the shower, used some shampoo, my hair started falling out, I then read the instructions that say \"apply shampoo to dry hair\", and the shampoo company says that the reason my hair is falling out is because I didn't read the instructions. People do not read instructions for something that is (or rather, should be) as simple as shampoo.\nI actually had run the gulp watch task, but it didn't work.. See PR #845\n\n\nmost of the developers don't expect build in the scope of the test task, by adding it we will bring more confusions than help\n\nnpm it (equivalent to npm install && npm test) should work, unless the tests are broken. Like I said.. \"Without this, tests could fail when the source code is fine, or tests could pass when the source code is broken.\" .. and when this happens, it is confusing and kills productivity. What possible confusion or harm could come from including the building in the testing?\nBut this is not worth wasting any more time & energy arguing about. If you still prefer the build script to not be part of the test script, say the word and I'll undo this part of the PR.. Fixed. Any failed task will now prevent any further tasks from running. https://travis-ci.org/sweetalert2/sweetalert2/builds/333070755?utm_source=github_status&utm_medium=notification. No problem, I am a dummy too sometimes lol ;). We should declare sass as a dependency of this task, otherwise the build task runs this task and sass in parallel, and so this task will use a stale version of dist/sweetalert2.css.. Should probably be using something like this https://github.com/nodegit/nodegit. Though i do like the approach of simply executing shell commands.. They are easily repeatable manually. It's good to know the script is doing the exact same thing we are doing.\nWhat if we just checked for \"nothing to commit,\"?. @limonte Done in 5cf385dc60655f36f29bb4e02e5aa4adba6b58bb. 4e8d5482e9f743542e59812f9089db144eb83fb4. Can we change this back to a const declaration? I don't see any need for var now that we have let and const, and const makes it explicit that the variable is never reassigned.. .map works here, but it's weird because it's not being used as intended. You are not actually \"mapping\" an array here, so I think .forEach is better.. Hey, while you're fixing this function, could you make this line more readable? if (!result.includes(i)). Yes, for..of is even better. @toverux Ah, yeah, I always forget that Babel does not (and can not) do anything about the new methods. I should have remembered issue #493.\n@brian-kilpatrick Ignore my previous comment.. I checked out that package. Check out the \"Pitfalls\" section. This kind of thing would work easily on a TypeScript AST, but with JS it is more difficult to determine if result is an array or something else. This is probably why this transform isn't included in the mainstream babel presets.. @acupajoe Can you update this test to reflect that users can set a background (not just a background-color)?. Very minor, but the backdrop isn't a url here. Maybe under this line we can add:\njs\nconst {version} = require('./package.json')\nawait execute (`git add package.json && git commit -m \"v${version}\"`)\nAddresses https://github.com/sweetalert2/sweetalert2/pull/880#issuecomment-362711405 and https://github.com/sweetalert2/sweetalert2/pull/880#issuecomment-362713538\nThen I thing a more appropriate log message would be something like \"Bumping package version...`. Can we simplify this line by making this argument a positional argument?\njs\nconst semver = process.argv[2]\nassert.ok(['patch', 'minor', 'major'].includes(semver), 'Must specify the valid semver version: patch | minor | major'). Hmm it seems like we should never recreate the dist branch because it is where all the previous \"Release v${version}\" commits live.. if it's recreated and force pushed to Github, we will wipe out all those previous releases, no?. Ah but the next line overwrites the new local branch with what is on origin, right?. So will this handle fetching and pulling from origin when necessary?. We have no CONTRIBUTING.md but we have a Contributing section in this README.md. This could link to #contributing. Why not?. ping @limonte . Having a build for the branch is useful if there's some error in the merged version, and you want to know if it was introduced by the merge or if it was already there in the branch exactly as you pushed it.. I was pretty sure that the globally installed gulp cli delegates to the project's locally installed gulp\nDid you try it? If not I'll test it out. Ok. Why do you need to use your globally installed gulp?. We could add a package script \"gulp\": \"gulp\" so you can pass arguments in through npm, e.g. npm run gulp -- build:styles.. Copy-paste mistake here.. link is pointing to sweetalert2-webpack-demo. I defined ctor just to make the reference shorter, it's not really needed. If you want the ref to be constructor then we might as well just ~~make~~ leave it this.constructor which is probably better than either. Sound ok?. Done in https://github.com/sweetalert2/sweetalert2/pull/1036/commits/1a4928986a27f73e5557684ca64f650bca7661e0. ",
    "xalexbo": "Hi limonte, it runs on FF for Windows.\nI wasn't able to make it work on iPad: both on FF and Safari it doesn't work - no sound was played, is this due to some iOS limit?\nThanks. in my case swal is fired by body onload so the question is: to make play a sound on iPad when swal is shown is it required a button click?\nI mean more generally that also a page which loads on browser cannot play any sound without user interaction?\nThanks. I forgot to mention original source: \nhttps://github.com/limonte/sweetalert2/issues/451. Well, a very good clue: it was just what I was looking for.\nThanks Limon!\n. ",
    "patrickhlauke": "@xalexbo yes, that's an iOS limitation aimed at not having sites annoy users with unwanted/autoplaying sounds. @limonte there are a few other tiny things (color contrast being one of them), but overall it's quite good. i'll file separate PR(s) for that.\nhowever, there are more fundamental tiny issues with the JS itself, but i've not got around to even understanding how to fix things. I'll try and make a sensible list and post it as an issue. To give you an idea, main problem I came across was in examples that have sequences of modals, the second modal is not announced, and for modals with form controls, those controls lack an explicit accessible name/label. anyway, will file separate issue/PRs for those too.\nwhile the preceding para may seem negative, i'd say these are all tiny things that can be fixed, and that overall i really find these modals quite good (particularly the simpler examples work flawlessly)!. i'd never say i'm an expert, or that my suggestions/solutions are universally the best...but i'll give it my best ;). This is an issue relating to Angular, not SweetAlert2. I'd suggest asking on relevant Angular forums/lists.. You'd need to be a lot more specific about what \"will not work\" means in this context. A reduced test case or similar (on jsfiddle, codepen, etc) would help. But more generally, this (how to integrate SweetAlert in whatever you're doing in Angular) is likely something that you should ask in Angular-related forums/lists.. \"Failed to load resource: the server responded with a status of 404 ()\"\nfix your code first to point to the correct location of the script.... Personally, I prefer separation of intent, and the flexibility for custom styling of separating CSS and JS (i.e. authors being able to easily restyle stuff without having to dive into the JS itself). Completely unnecessary, but a lovely gesture nonetheless. Thank you \ud83d\udc4d . seems to work for me (Win 10/Firefox 57). Not tested this (sorry, short on time, so can't build locally etc), but give #833 a whirl. Congrats. And, just like last time: your little gift was appreciated, but absolutely not necessary (particularly as i've been very inactive here for ages). ",
    "charleslcso": "Got it. ",
    "akonyer": "This does not seem to be happening after updating, you are correct.\nThank you. I was using an older version when I was getting this issue before.\nEdit: Re-opened. Sorry, didn't read that you wanted it left open until after closing it.. ",
    "danidee10": "@toverux but at least we should have a section, that says\n\"don't forget to import the stylesheet sweetalert2.css\" or something similar\nor maybe a FAQ section to answer the question of \"sweetalert2 styles are not working\"\nMy point is there should be something in the docs that gives a pointer to the css file, even though it's not bundler specific.. @toverux okay. Please let me know when these changes have been integrated. :+1: . @limonte pong! \ud83d\ude04 . \nI've seen the update.\nCheers!. @limonte @toverux woops! i guess i saw what i wanted to see (thought i saw something about importing CSS in the README). My bad!. ",
    "andreich1980": "@danidee10 why wouldn't you make a PR?. Thank you.. ",
    "Ayberkone": "@danidee10 dude u rly saved my life, I spent 45 mins on this.. ",
    "ChazyTheBest": "That happens because of the focus the button element has. If you remove the focus, then the keys won't trigger the click event. For that you can use blur().\njavascript\ndocument.getElementByTagName('button')[0].blur();\nFor a temporal solution should work ok.\nSomething inside sweetalert2 must be triggering the focus on the element. I'm also interested in knowing how to disable it.. Sorry. I already found the solution.. The expected behavior is the label having a different style depending on the checked attribute. For this, the input needs to be outside the label, as there's no way to select parent element (the label is the input's parent).\nFor example:\nhtml\n  <input type=\"radio\" id=\"swal-input1\" name=\"select\" value=\"1\" hidden>\n  <label for=\"swal-input1\">Text</label>\nAnd the CSS:\n``css\ninput[type=\"radio\"]:checked + label {\n  background: #20df80;\n  box-shadow: 0px 0px 20px rgba(0, 255, 128, 0.75);\n}. Hmm, thanks really, but the new span element is not necessary after all, sorry i'm slow... I just realized I can put html tags inside theinputOptions`:\njavascript\nswal({\n    title: 'Input something',\n    type: 'question',\n    input: 'radio',\n    inputOptions: {\n        'one': '<span class=\"swal2-label\">one</span>',\n        'two': '<span class=\"swal2-label\">two</span>'\n    }\n})\nI can't believe I didn't try this sooner...\nNow, not that I'm an expert, but I would use something like this for more consistency:\njavascript\ncase 'radio':\n    var num = 1\n    const radio = dom.getChildByClass(domCache.content, swalClasses.radio)\n    radio.innerHTML = ''\n    populateInputOptions = (inputOptions) => {\n        inputOptions.forEach(([radioValue, radioLabel]) => {\n            const radioInput = document.createElement('input')\n            const radioLabelElement = document.createElement('label')\n            radioInput.id = swalClasses.radio + num\n            radioInput.type = 'radio'\n            radioInput.name = swalClasses.radio\n            radioInput.value = radioValue\n            if (innerParams.inputValue.toString() === radioValue.toString()) {\n                radioInput.checked = true\n            }\n            radioLabelElement.innerHTML = radioLabel\n            radioLabelElement.className = swalClasses.label\n            radioLabelElement.htmlFor = swalClasses.radio + num\n            radio.appendChild(radioInput)\n            radio.appendChild(radioLabelElement)\n            num++\n        })\n        dom.show(radio)\n        const radios = radio.querySelectorAll('input')\n        if (radios.length) {\n            radios[0].focus()\n        }\n    }\n    break\nIt's just a suggestion, this way users can directly style the label and hide the input. Also, all the inputs and labels can be placed within the same parent as it already uses flexbox and the items are centered (although the margin for the input and label would need to be changed in the css).. ",
    "sgsellmann-miovision": "Ah yes, good idea. Thanks.. Confirmed and working as expected. Great job, thanks!. ",
    "narender2031": "Hy\nI am still facing issue in allowEscapeKey Please help me . ",
    "giwiro": "Thanks :D. ",
    "flavienaudin": "Here the jsFindle : https://jsfiddle.net/FlavienAudin/dmqxubL9/\nEDIT : I fork the jsFindle (sorry for the mistake). I would like to precise why I need to know the current step, maybe I misused SweetAlert :\nI use the cancelButton as a confirmButton, but without input validation (here the email), to let the choice to the user to fill or no the email and continue. \nSo, If the dismiss == cancel, so I call the business function, as I do when the user fills the input and clicks on the confirmButton.\nEdit : I updated the jsFidle : https://jsfiddle.net/FlavienAudin/dmqxubL9/\nActually, I use variables set after each step (preConfirm) and get them inside the dismiss handler. Its also works for the currentStep index.\nIf there is a better way to do, I would be glade to know it.\nThx again. I would like to keep two buttons \"Later\" / \"Send me the email\" so that I'm sure the user is conscious of its action : I give important information inside the second modal. But as I have two solutions (yours and mine using external variables). it's ok for me.\nMaybe if there is other demands like mine later, perhaps it could be an interesting feature to have the possibility to set multiple confirmButton, like \"Yes No Cancel\" alert windows. Or just a \"Yes/No\" that both are confirm action.\nThanks a lot for your answer and reactivity.\n. ",
    "SigalZ": "Hello,\nI want to have the confirm button on the left.\nI've tried to use the reverstButtons option, but it does nothing, true or false, the confirm button is always on the right.\nI also tried:\nbuttons: { \n                cancel: true,\n                confirm: true, \n            }\nSo I tried all options:\nswal({\n            title: 'Confirm details:',\n            text: \"Test\",\n            type: 'warning',\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Correct!',\n            showCancelButton: true,\n            reverseButtons: false,\n            buttons: { \n                cancel: true,\n                confirm: true, \n            }\nAnd:\nswal({\n            title: 'Confirm details:',\n            text: \"Tracking No: \" + $('#trackingNo').val() + \" Date: \" + $('#date').val(),\n            type: 'warning',\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Correct!',\n            showCancelButton: true,\n            reverseButtons: true,\n            buttons: { \n                cancel: true,\n                confirm: true, \n            }\nAnd:\nswal({\n            title: 'Confirm details:',\n            text: \"Tracking No: \" + $('#trackingNo').val() + \" Date: \" + $('#date').val(),\n            type: 'warning',\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Correct!',\n            showCancelButton: true,\n            reverseButtons: false,\n            buttons: { \n                confirm: true, \n   cancel: true,\n            }\nAll keeping the Confirm button on the right.\nCan you please help?. ",
    "hxgf": "This css solved the problem for me :)\n```\n.swal-footer{\n    overflow: auto;\n}\n.swal-button-container{\n    float: right;\n}\n```. ",
    "Beckhem1998": "thanks guys\n. ",
    "MannikJ": "Perfect! Thank you!. ",
    "lordterrin": "Okay, this is my first fiddle, so bear with me....\nhttps://jsfiddle.net/ad3quksn/72/\nin the fiddle, the swal IS closing - but in console.log it's still showing:\nUncaught (in promise) cancel, which is the error I'm getting locally.  I also switched my local copy of sweetalert2.js (v 6.3.8) to the one you have hosted on the jsfiddle, (the cdn latest version) but my swals still will not close.. No worries - I think it may be something on my end as even simple swals are not working.  Sorry to waste your time - and still, thank you so much for your hard work on this project. :). ",
    "mdashiff": "swal.close(); requires an argument to be passed as a string. Error in agularjs typescript\n. ",
    "seaheart": "if i want click the altactionButton to trigger a function,how can i do,please give me an example,thanks!. I think this way the altActionButton's style should be equal to params.altActionButtonColor.   . ",
    "joshberg": "Sorry about that. First time using jsfiddle. I've updated my report.. I did change how I was dealing with the catch. Instead of doing the Promise().then().catch() design I instead opted for the Promise().then(function(resolve){},function(reject){}) way of doing things. I think there were some other Javascript errors in the called functions that were actually causing the problems.. ",
    "aloysius-tim": "Thanks a lot ;). ",
    "ivanvermeyen": "Sorry, here is the fiddle:\nhttps://jsfiddle.net/gtgLgrhe/1/\nWhen I remove the html, body height and use a .box height of 100vh instead of 100%, then it doesn't jump up: https://jsfiddle.net/gtgLgrhe/2/. Ok, I found out that I had CSS minification turned on in CloudFlare and this was causing the issue.\nI'm still not sure why it would break the CSS, but disabling the feature solved my problem. \ud83d\udc4d . ",
    "pixieaka": "it not working the padding still . ",
    "S-Hodgson-MMOARgames": "Thanks for the quick reply.. ",
    "typicalcoda": "Thanks for this.. ",
    "MoussaOudihat": "How can i set the html input required in sweetalert2. ",
    "rosaiph": "ol\u00e1. > Isso n\u00e3o \u00e9 diretamente suportado pelo SweetAlert (porque mantemos as coisas simples), mas voc\u00ea pode faz\u00ea-lo escrevendo o HTML sozinho.\n\nDa documenta\u00e7\u00e3o :\n\nM\u00faltiplas entradas n\u00e3o s\u00e3o suportadas, voc\u00ea pode alcan\u00e7\u00e1-las usando htmle preConfirmpar\u00e2metros. \nDentro da fun\u00e7\u00e3o preConfirm () voc\u00ea pode passar o resultado personalizado para ser retornado\n\njs\nconst {valor :  formValues } =  espera  swal ({\n  t\u00edtulo :  ' M\u00faltiplos insumos ' ,\n  html : \n    ' <input id = \"entrada-swal1\" classe = \"entrada-swal2\"> '  + \n    ' <entrada id = \"entrada-swal2\" classe = \"entrada-swal2\"> ' ,\n  focusConfirm :  false ,\n   preConfirm : () => {\n     return [\n       documento . getElementById ( ' swal-input1 ' ). valor ,\n       documento . getElementById ( ' swal-input2 ' ). valor\n    ]\n  }\n})\n\nusei desta forma mas os meus inputs n\u00e3o aparecem, pode me ajudar ?. good afternoon,\nI have this sweetalert and I need to apply a validation to not let pass my inputs empty, but I do not know but what to do already tried jquery validate everything but it does not work can help me follow my Swal\njavascript\n swal.fire (\n                {title: \"End Event!\",\n                animation: true,\n                customClass: 'bounceInDown',\n                showCancelButton: true,\n                confirmButtonText: \"Confirm\",\n                html: \"<form id = 'formValidate' class = 'formValidate'> Write a resolution to end Event\" +\n                        \"<input id = 'resolution' name = 'resolution' type = 'text' class = 'form_input' required minlenght = '2' placeholder = 'Describe why you are finalizing this event' required style = 'width: 80%; padding: 12px 20px; margin: 8px 0; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; '/> \"+\" </ br> \"+\n                        \"<input id = 'date' name = 'date' type = 'text' class = 'form_input' required placeholder = 'Data' required style = 'width: 38%; height = 40%; padding: 12px 20px; margin: 8px 0; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; '/> \"+\" & nbsp & nbsp & nbsp & nbsp & nbsp \"\n                        \"<input id = 'end_time' name = 'end_time' type = 'text' class = 'form_input' required placeholder = 'Time' required style = 'width: 38%; height = 40%; padding: 12px 20px; margin: 8px 0; border: 1px solid #ccc; border-radius: 4px; box-sizing: border-box; '/> \"+\n                        \"</ form>\",\n                       preconfirm: () => {\n                      resolution = document.getElementById ('resolution'). value;\n                      date = document.getElementById ('date'). value;\n                      end_time = document.getElementById ('end_time'). value;\n                        return [resolution, date, end_time]\n                   }\n               }). \nI have a simulator. https://codepen.io/anon/pen/OqVqaN. > Oi @rosaiph voc\u00ea poderia levantar sua quest\u00e3o como um problema em https://github.com/sweetalert2/sweetalert2-examples ? Eu vou te ajudar l\u00e1\nHello,\nHow do I use this to ask for help in this tool that you told me?\n. > @rosaiph Eu criei um exemplo de valida\u00e7\u00e3o de formul\u00e1rio personalizado aqui\nHello,\nThank you, I'll see your example!. Thank you so much, it saved my day.\n. ",
    "LoneyGG": "Here is the fiddle:\nhttps://jsfiddle.net/ad3quksn/75/\nSee that it works fine full screen, but if u press f12 (In chrome) and select devices ipad 1024x768 the background disappears.\nIt works fine in the nexus template chrome provides but it disappears in ipad and iphone.\n\u00bfMaybe a position:fixed issue?\nThanks for your work and plugin, its awesome!!. Oh man, ty very much!! Pro programmer ;). ",
    "afreeland": "I am building an isomorphic react app with both server/client rendering and had this same issue.  I will see if I can throw a quick sample app together to show the issue.. Here is a Sample App that tries to implement sweetalert and should illustrate the issue.  I thought I would use a react/babel boilerplate starter app for quickness, so I apologize for all the unnecessary structure.\nIf you look at my last commit I added:\nimport {default as swal} from 'sweetalert2';\nIn the following file (which is the default page)\nsrc/routes/home/index.js\nHope this helps to show the issue.. ",
    "lmj0011": "I will try to test this, sometime this week.. still doesn't work. You might want to see how sweetalert 1 is doing this.\njs\nif (typeof window !== 'undefined') {\n  const swal = require('sweetalert2');\n}\ndoing this in sweetalert2, swal will be undefined\nimporting it the es6 way\njs\nimport swal from 'sweetalert2'\n results in\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Vue.js error</title>\n  </head>\n  <body style=\"background-color: #a6004c;color: #efe;font-family: monospace;\">\n    <h2>Vue.js error</h2>\n    <pre>ReferenceError: document is not defined\n    at __vue_ssr_bundle__:10598:25\n    at __vue_ssr_bundle__:10612:2\n    at module.exports.defaultParams.title (__vue_ssr_bundle__:10252:27)\n    at Object.&lt;anonymous&gt; (__vue_ssr_bundle__:10255:2)\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\n    at Object.module.exports.Object.defineProperty.value (__vue_ssr_bundle__:4947:70)\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\n    at Object.&lt;anonymous&gt; (__vue_ssr_bundle__:8098:3)\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\n    at Object.module.exports.Object.defineProperty.value (__vue_ssr_bundle__:1838:5)</pre>\n  </body>\n</html>. for those using nuxt.js or something similiar, check to see if you have the option for disabling ssr for your packages.\nhttps://nuxtjs.org/guide/plugins#client-side-only\nI haven't tested this yet for swal2. @limonte \nhere, you're trying to access the window object without checking if it's defined first: https://github.com/limonte/sweetalert2/blob/master/dist/sweetalert2.js#L1593\nyou may want to try changing that line to\nif (window && window.Sweetalert2) window.sweetAlert = window.swal = window.Sweetalert2;\nswal1 dist file for reference, noticed they're not trying to access the window object outside of the module\nhttps://github.com/t4t5/sweetalert/blob/master/dist/sweetalert-dev.js#L1253\njust for reference (probably not be related to the problem):\nswal1 gulp bundling task\nhttps://github.com/t4t5/sweetalert/blob/master/gulpfile.js#L74\nswal2 gulp bundling task\nhttps://github.com/limonte/sweetalert2/blob/master/gulpfile.js#L28. @birjolaxew \nThis is not going to be enough\nhttps://github.com/limonte/sweetalert2/pull/456/commits/11c1d40885952591e5c310f1105222c20605bcff\nI still get the error, using your fork\nhtml\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Vue.js error</title>\n  </head>\n  <body style=\"background-color: #a6004c;color: #efe;font-family: monospace;\">\n    <h2>Vue.js error</h2>\n    <pre>ReferenceError: document is not defined\n    at /home/landan/www/swal2-test#454/node_modules/sweetalert2/dist/sweetalert2.js:350:25\n    at /home/landan/www/swal2-test#454/node_modules/sweetalert2/dist/sweetalert2.js:364:2\n    at defaultParams.title (/home/landan/www/swal2-test#454/node_modules/sweetalert2/dist/sweetalert2.js:6:82)\n    at Object.&lt;anonymous&gt; (/home/landan/www/swal2-test#454/node_modules/sweetalert2/dist/sweetalert2.js:9:2)\n    at Module._compile (module.js:570:32)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n    at Module.require (module.js:497:17)</pre>\n  </body>\n</html>\na project to replicate the problem:\nhttps://github.com/lmj0011/swal2-test-454\nafter cloning it:\nyarn install or npm install\nthen\nnpm run serve:dev\n. @birjolaxew \nSince this library is meant for and only useful on the client-side, somehow faking the DOM server-side using jsDom, in order to achieve SSR may be the answer.\nref: https://github.com/vuejs/vue-hackernews-2.0/issues/52#issuecomment-255594303. ",
    "hleote": "Hi guys,\nGreat job with this module by the way.\nI have the same issue.\nI've installed swal through npm and I get also swal is not defined. Doing it like this also:\njs\nif (typeof window !== 'undefined') {\n  const swal = require('sweetalert2');\n}. @StephanBijzitter Thanks for your feedback.\nIn my case it improved but it's still not working as it should. \nWhat I mean is it does trigger the swal and it shows it to me but it doesn't show it how it should, (the alert looks strange), and I'm not able to click ok, I tried with other swals that I have on this component and the problem is the same I'm not able to click the buttons in the alert. Which I really don't understand why it happens. Maybe you guys can point me in the right direction.\nThe swal2 version that I'm using is 6.6.0. \n\n. Hi guys,\nAny news regarding this issue?\nRegards. ",
    "StephanBijzitter": "This works for me:\njs\nlet swal;\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    swal = require('sweetalert2').default;\n}\nJust be sure to null-check swal everywhere you use it, or create a simple wrapper around it :-). @limonte For me, I don't need the popups to be rendered, but right now even including the code causes the entire page to crash on the server. I'd be happy with it not rendering, as long as it doesn't crash. Now we need to add our own safe-guards while requiring sweetalert2 to prevent it from crashing the page, which is not quite ideal.. Great!\nI just found this on Google after typing \"sweetalert\". We'll look into switching over to this fork soon :-). This wasn't intended as a bug report, as it's not a bug in this module. It's simply quirky browser behaviour for many mobile devices. I'm quite sure there must be more of these strange quirks, so it would be nice to start a little list somewhere.\nIn my case I was using Chrome on an Android 6 device, but that really doesn't matter.\n@limonte . >But also, just to be sure, please check that you don't import the .all.js build of SweetAlert2 (that's the new entry point) and the CSS file at the same time.\nThat's a good point.\n\nChanging the imports makes the javascript increase go from +5.59KB to +450B, a tenth of the original change!\nNow it looks like this:\nimport 'sweetalert2/src/sweetalert2.scss';\nimport sweetAlert from 'sweetalert2/dist/sweetalert2.js';\nI'd prefer to take both from src, but doing that would lead to an increased javascript size again. Reason for using src would be that we can run it through our own webpack configuration, which also generates sourcemaps for node_modules.. When using src for the javascript, the css is not extracted correctly in our build which leaves styles inside both the javascript and css bundles. (var styles = {...}), so that's why I'm taking dist. It's a bit strange, but it works.\nThe tool is https://github.com/siddharthkp/bundlesize, and it's quite good but we're working on our own replacement. I just have to convince management to allow us to open source some of our tools :D. >I wonder why is that? Is that because of SweetAlert2 or your build configuration? There shouldn't be anything CSS-related in the sweetalert2/src/sweetalert2.js.\nprobably our configuration, it's highly optimised to our usage and sweetalert2 is currently the only dependency that has styles, so it's not worth it at this time to find out where exactly the magic is happening. If it works, it works :-). Well, even though the actual impact was much less than what I first saw, it's still something to consider for the next major version.\nI'd prefer to be able to write import {sweetAlert, sweetToast} from 'sweetalert2' or  import sweetAlert from 'sweetalert2/sweetAlert', so that I don't have the code for toasts being imported in a project where I'm not using toasts. It could be done in the same major version, but that'd be more work.. \ud83d\udd7a I especially love being able to compare pull requests against master. If you make a few changes and then suddenly the size of your output doubles, you know you've done something wrong. And it's also very satisfying to see the size go down as you trim away more and more!. I'm seriously considering putting that nyancat on our application's 404 page, too bad it's not my call. ",
    "tbaustin": "Has this been fixed? I just tried doing some SSR and really want to use this library, but may not be able to since SSR is more important.. ",
    "alexismoreau": "I have this issue as well :\nUnhandled Rejection at: Promise Promise {\nI20171206-12:22:59.036(1)?   <rejected> ReferenceError: document is not defined\nI20171206-12:22:59.036(1)?     at /home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:1786:18\nI20171206-12:22:59.036(1)?     at /home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:1803:2\nI20171206-12:22:59.037(1)?     at styles (/home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:6:82)\nI20171206-12:22:59.037(1)?     at Object.<anonymous> (/home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:9:2)\nI20171206-12:22:59.037(1)?     at Module._compile (module.js:612:30)\nI20171206-12:22:59.037(1)?     at Object.Module._extensions..js (module.js:623:10)\nI20171206-12:22:59.037(1)?     at Module.load (module.js:531:32)\nI20171206-12:22:59.038(1)?     at tryModuleLoad (module.js:494:12)\nI20171206-12:22:59.038(1)?     at Function.Module._load (module.js:486:3)\nI20171206-12:22:59.038(1)?     at Module.require (module.js:556:17) } reason: ReferenceError: document is not defined\nI20171206-12:22:59.038(1)?     at /home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:1786:18\nI20171206-12:22:59.038(1)?     at /home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:1803:2\nI20171206-12:22:59.039(1)?     at styles (/home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:6:82)\nI20171206-12:22:59.039(1)?     at Object.<anonymous> (/home/alexis/Bureau/mafiledattente/node_modules/sweetalert2/dist/sweetalert2.all.js:9:2)\nI20171206-12:22:59.039(1)?     at Module._compile (module.js:612:30)\nI20171206-12:22:59.039(1)?     at Object.Module._extensions..js (module.js:623:10)\nI20171206-12:22:59.039(1)?     at Module.load (module.js:531:32)\nI20171206-12:22:59.039(1)?     at tryModuleLoad (module.js:494:12)\nI20171206-12:22:59.040(1)?     at Function.Module._load (module.js:486:3)\nI20171206-12:22:59.040(1)?     at Module.require (module.js:556:17)\n. Hello,\nI can confirm that it works !\nThank you. Thank you for your speed ! Amazing job. ",
    "lookis": "It happens again with the latest version (v7.1.2)\n```\n/Users/lookis/Projects/tmp/test/node_modules/sweetalert2/dist/sweetalert2.all.js:1570\nif (_typeof(window._swalDefaults) === 'object') {\n            ^\nReferenceError: window is not defined\n    at /Users/lookis/Projects/tmp/test/node_modules/sweetalert2/dist/sweetalert2.all.js:1570:13\n    at styles (/Users/lookis/Projects/tmp/test/node_modules/sweetalert2/dist/sweetalert2.all.js:6:82)\n    at Object. (/Users/lookis/Projects/tmp/test/node_modules/sweetalert2/dist/sweetalert2.all.js:9:2)\n    at Module._compile (module.js:660:30)\n    at Object.Module._extensions..js (module.js:671:10)\n    at Module.load (module.js:573:32)\n    at tryModuleLoad (module.js:513:12)\n    at Function.Module._load (module.js:505:3)\n    at Module.require (module.js:604:17)\n    at require (internal/module.js:11:18)\n```. ",
    "NinoZX": "Hi guys!\nAny news maybe on going back to previous step?\nIf no news, do you maybe have some suggestions about how to implement something similar?\nThank you very much for your great work!. Thank you very much @limonte !\nThis is great help, you are really awesome... keep up the good work.\nBest regards!. ",
    "smolleyes": "seems swal is attached to the background-page of nwjs not \"my\" real html page :/. ",
    "Rodriguinho1": "1 year later and the problem continues.\nRead more about problem:\nhttps://github.com/nwjs/nw.js/issues/6906. ",
    "Fkscorpion": "@toverux Sorry didn't know that, I'm fairly new to TypeScript yet but I agree!\nThat would maybe be a better solution!. ",
    "SRWieZ": "Firefox 52.0\nSorry, I didn't mention that the modal appear but it's stuck at the first step.\nNo errors in console.\n. Same.\nTo be sure, I tested it outside my project.\n<script src=\"vendor/jquery/jquery.min.js\"></script>\n<script src=\"vendor/es6-promise/es6-promise.auto.min.js\"></script>\n<script src=\"vendor/sweetalert2/sweetalert2.min.js\"></script>\n<link rel=\"stylesheet\" href=\"vendor/sweetalert2/sweetalert2.min.css\"/>\njQuery v3.1.0. The fiddle works for me too.\nReally weird.\nCan you try with dist/sweetalert2.min.js of https://github.com/sweetalert2/sweetalert2/archive/v6.4.3.zip\nWork's with sweetalert2.js but not with sweetalert2.min.js\n  . ",
    "marekmaurizio": "Same problem.. The fiddle works for me. \nI can confirm however that my code works if i downgrade to 4.6.2.\nhttp://pastebin.com/RCXbmk7J. ",
    "agauniyal": "Hi I'm having this issue as well, latest Chrome on Linux. The modal is stuck on first chained step.. ",
    "luckyraul": "to force it to be transparent even if hr has background. As far as I'm concerned - no, but in that class you also set colour for \"not default browser setting\"\nThis is for only for prevention override by hr.. updated. ",
    "csuzlee13": "Sorry, the code was too complicated to implement into jsfiddle. Anyway I found the problem. On iOS the body.swal2-iosfix css class got top: -2470px property. Now I fixed it with a \"top: 0px !important\" solution in the sweetalert2.min.css but I think the problem is in the js.. ",
    "corydozen": "For me, this solved it:\nbody {\n  position: static !important;\n}. ",
    "bverussa": "I got the same error. I fixed it changing the position to relative. But if you remove the class swal2-iosfix works too.\n. ",
    "vjoao": "Great... you do a fix for one particular use case and break all the others.. ",
    "socendani": "Thanks!!!\nSweetAlert2 + ionic3  .. content (in background) under the backdrop hidden. With  @corydozen solution.. perfect for me.. thanks!.. . ",
    "kimyu92": "@limonte i have also run into this problem, still not sure whether it is an iOS bug or bug from sweetalert. ",
    "egeersoz": "For anyone struggling with this, I finally resolved it by re-importing swal in each component in which it is invoked. Importing it just in main.js didn't work.\nI use Vue.js. Did not have this problem with the original SweetAlert.. ",
    "webhacking": "@egeersoz me too. ```javascript\nimport swal from 'sweetalert2';\nwindow.swal = swal\n```. ",
    "omererbil": "i had resolved this issue by replacing sweetalert2 cdn\n. ",
    "hagolo": "\ni had resolved this issue by replacing sweetalert2 cdn\n\n\nThank you ) its worked for me. ",
    "kshitish45": "i had resolved this issue by replacing sweetalert2 cdn\n \nThank you :) its also worked for me. ",
    "sxhjlzl": "Using the vue+element-ui . Use this way to import\nimport swal from 'sweetalert2' \nonly import  js file\uff0cno import  css file\n\n. ",
    "blairjo": "Update: \nThe old Iphone I had for testing was on an old version of IOS (8.2)\nI updated to the latest IOS and it seems fine now.\nI guess it depends how far back you want to support :)\nCheers\n. Hi,\nThanks for fixing this so promptly!\nWill you be releasing the new version to bower soon?\nThanks\nOn 6 April 2017 at 09:45, Limon Monte notifications@github.com wrote:\n\nClosed #493 https://github.com/limonte/sweetalert2/issues/493 via\n59c8148\nhttps://github.com/limonte/sweetalert2/commit/59c8148fe2d5673af9438f57dda27189ea9cb9fd\n.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/493#event-1031797550, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AS4HpVbSkSjHqdSg0_jT2XbGPb9Pd5qkks5rtKYNgaJpZM4M0dNx\n.\n. awesome, thanks!\n\nOn 6 April 2017 at 10:36, Limon Monte notifications@github.com wrote:\n\nDone: https://github.com/limonte/sweetalert2/releases/tag/v6.5.6\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/493#issuecomment-292121214,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AS4HpagRU0EN9OZHHt33my4voaTPsayVks5rtLIxgaJpZM4M0dNx\n.\n. \n",
    "khrystyan88": "Uncaught SyntaxError: await is only valid in async function. ",
    "infoeon": "Yes it's weird but the example is just a simplified version to demonstrate the issue--the use case I describe above is still very pertinent. In a single page application, if the code within the resolve handler causes a view change and the view handler has code to ensure that any open sweetalerts are closed before swapping out the UI in the DOM then the error will manifest itself. \nI could have a more elaborate version that demonstrates the use case but just describing what the issue and use case is should be sufficient to resolve it. \nIn short, the currently open sweetalert should know whether it's in the process of closing and not close itself twice, or it should check to see if it's even in the DOM anymore before trying to remove itself.. Not resolved in 7.21.1 per this fiddle: https://jsfiddle.net/ad3quksn/1189/\nRemoving the \"overflow: auto\" from the fiddle fixes the scroll issue, but we don't always have the opportunity to control that in style in certain sites.. The fix for this broke custom elements (javascript based autocomplete input fields, etc) within the content portion of the sweetalert. Potential fix would be to allow events for targets within the content of the swal:\nvar keydownHandler = function keydownHandler(e, innerParams) {\n    var parentElement, targetElement = e.target, contentElement = getContent();\n    while(parentElement = targetElement.parentElement){\n        if(parentElement === contentElement){\n            return;\n        }\n        targetElement = parentElement;\n    }\n    .... ",
    "mityukov": "UPDATE: just plugged it in via CDN. All looks great. So, it's me plugging the SA wrongly. Could you provide a working \"plug via npm\" example, where it has styles?. ",
    "NiExTy": "Still not perfect with more complex backgrounds:\nswal({\n  background: 'rgba(0,0,0,0) linear-gradient(#444,#111) repeat scroll 0 0',\n  type: 'success'\n})\nhttp://pix.toile-libre.org/upload/original/1491667358.png. Any fix for that @limonte?. ",
    "voldemortkein": "@limonte Thanks, now It works as you said, that was fixed on v.6.6.0.\nIn order to work properly is important not to have tweaked extra css like me.\nI have this:\n.swal-modal {\n background-color: darkorange;\n}\nAnd works, but not at all, cuz Success animation have this issue.\nSo, then the solution is remove that in my personal CSS stylesheet.\nbut I need to specify on every swal of my project, the color desired, like this:\nswal({\n  background: 'purple',\n  type: 'success'\n})\nBut what about if I have a lot of Swal alerts?, Is there a way to set the SweetAlert's background color on css stylesheet?\nThanks.\nAnd Nice Software!!. ",
    "pknad505": "So I have added the script you told me to do earlier however this still hasn't fixed the problem on android browser. I am not sure how to include core-js like the other suggests because I am not using commonJS. Perfect that works now thank you very much. I would suggest to add this into the documentation . ",
    "Ge0f3": "\nwill this make it work in Iphone safari browser also ?. ",
    "thr0wn": "Array.from was added again here. Although core.js avoids issues with it, seems weird it reappearing shortly after 59c8148fe2d5673af9438f57dda27189ea9cb9fd, commit that solved the previous Array.from issue. Is this a bug?\nthanks.. ",
    "Finesse": "for the collaborators: Try to import the core-js es6.array.from polyfill. After that you will be able to use Array.from without a butthurt.\n  . @limonte Thank you for invitation. I will help as much as I can, I don't have much free time.. @limonte The new preConfirm behaviour is a breaking change. I think it must be described here: https://github.com/limonte/sweetalert2/releases/tag/v7.0.0.\nFor those who wander: Sweet Alert 2 doesn't display a preConfirm promise rejection anymore. Instead it throws it further. To display an error message you should:\n\nCall swal.showValidationError('message').\nFullfill the promise.\n\n```javascript\nswal({\n    showLoaderOnConfirm: true,\n    preConfirm: function () {\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                swal.showValidationError('Error happened');\n                resolve(); // Important to call it. Otherwise the loader won't turn back to button.\n            }, 1000);\n        });\n    // or\n\n    return makeMyPromise().catch(swal.showValidationError);\n}\n\n});\n```\n  . @limonte Using React with Sweet Alert 2 is pretty simple (expect of some minor issues) so I think you should not complicate Sweet Alert 2. The more complicated the library is, the more time you will spend to support it. There are many more important thinks to do. \nI agree with @birjolaxew, integrations should rather be implemented via plugins.\n  . I have the same apprehensions. I agree that the integration packages should be out of the core.\nBut who will create and support all this integration packages? I think that the core should get a convenient API (without a problems like https://github.com/limonte/sweetalert2/issues/794), a simple manual for the API and the integrations will appear by themselves.\n  . @limonte @epexa Your solutions break icons:\n\nIcon is broken because some properties use rem and other em. You need to add this CSS to fix it:\ncss\n.swal2-icon {\n  width: 5em !important;\n  height: 5em !important;\n  border-width: .25em !important;\n}\nUpdate. The CSS above breaks the other icons. Could you please solve it?. ",
    "karlos545": "@limonte I saw a post from you a while ago regarding this. You said it was over engineering and closed the issue, do you still have the same opinion? \nref: https://github.com/limonte/sweetalert2/issues/163. ",
    "stephan-v": "Please keep this as lightweight and clean as possible.. ",
    "gilberto-torrezan": "One goal of having this encapsulated in an webcomponent is to have it available on webcomponents.org.\nIn theory, you don't need to use other frameworks (other than the native APIs) to be able to encapsulate it, but it would be way harder I guess.\nI'm ok with it being a separate project as long as it stays always up-to-date with the main project.. ",
    "EnginePod": "Came across this useful plugin a few weeks ago and I've been replacing it with the classic alert() since I can add more text and options (and it looks pretty much the same across all browsers).\nYesterday I tried it on Android for the first time and it caused the entire page to freeze so I had to close the tab.  This is a huge problem since people like myself use it as a replacement for the native alert() which is a basic function that has to work.  Right I've \"solved\" the problem by shoving a bunch of polyfills down the pipe, but the ideal case would be if it ran without them since it gets bulky.. I tried a polyfill for Promise alone, but it didn't do the trick for an older Android browser (4.4.2 [Dec. 2013]).\nIt also not only didn't work, but it froze the entire page and required the tab to be closed down completely.\nThe only solution I've found is adding core-js which is roughly 80 KB when minified.\nModern is good, but when you want to replace something as native as alert() it should be supported by legacy browsers (especially if it's going to risk causing the page to freeze up).\nSince you mentioned the demo page I should also say that adding; \"replacement for JavaScript's popup boxes\" and \"Zero dependencies\" is quite misleading as it causes a lot of problems with older browsers (unless polyfills are used).. ",
    "Vuurvlieg": "Swal2 is getting better and better. Many improvements and new features where added compared to the original swal. Also the customization of swal and responsiveness is awesome and thats one of the reasons why swal2 is totally awesome.\nThanks to @limonte and everyone who reported bugs or posted PR's!  \n\n. ",
    "bkdotcom": "Super quick.\nThanks!. ",
    "Kyslik": "Thanks @limonte :). I see, thanks; \nI guess I was looking for insertQueueStep. @limonte Hello again: insertQueueStep wants 2 parameters but your example uses only one.\nsignature sweetAlert.insertQueueStep = function (step, index) {...}\npreConfirm: function () {\n    return new Promise(function (resolve) {\n      $.get('https://api.ipify.org?format=json')\n        .done(function (data) {\n          swal.insertQueueStep(data.ip)\n          resolve()\n        })\n    })\n  }. Alright, I think I finally got it, but Its so hacky :( !\npreConfirm: function (dataFromPreviousStep) {\n    return new Promise(function (resolve) {\n          swal.insertQueueStep({STEP HERE THAT USES dataFromPreviousStep})\n          resolve()\n    })\n  }\nI propose to make some kind of magic to get the value from previous step(s) (or make values available globally).. ",
    "ISNIT0": "The close argument is so that event handlers on DOMElements within can act like a submit button.\nThe cloneNode utility is only needed because events don't get cloned, which significantly reduces the usefulness of being able to pass in DOMElements.\nThe array of events could be tweaked, my own use will only need onclick, but I figured the mouseover ones were more likely to be used by other people than keyup/down \ud83d\ude04 . The cloning was already in there, I just extended it.\nIt'll be there to ensure when the elements are modified in the swal, they don't change any copies outside, or vice-versa.\nI guess it's just a sensible thing to do. My changes add the event handler cloning, because cloneNode doesn't clone them be default \ud83d\ude04 . ",
    "AFTERWAKE": "By the way, if you want a working username/password without having to register, you can use username/password bob/bob. Though I don't think you really need to log in unless you just wanna play the game haha. Here is a jsfiddle if you'd like that.\nhttps://jsfiddle.net/7j24bnbk/2/. ",
    "vipdorian": "I am not able to reproduce this bug when animation='false'.. This was fast!!!. ",
    "cooberr": "UC Browser mobile on Android. ASUS Zenfone 2, Android 5, also tried on samsung.\nIf it will help you - I added https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js in head and popup has appeared, but its width is incorrect (also only in UC Browser on Android)\n\n. One more thing - first version of sweetalert doesn`t have this problem.. yes, absolutely the same situation with incorrect width as on screenshot above:\n\n. ",
    "iCankat": "sweetalert not work some mobile phones (exp: samsung galaxy s3) what is the problem? Most phones do not work on some phones while I am working without problems. Buton does not react when touched. It's a strange problem.. Hahah sorry for my bad English bro. In summery, some phones have no problem. But there are problems with some phones. Android phone Galaxy S3 does not do anything when the button is touched on the devices. How to fix this problem?. ",
    "sakettiwari": "Hi, issue is fixed, and every modal is working well in UC except one, the 'error' message modal. It blinks a little extra and it's not normal. I have checked it several times.. ",
    "suhrab": "\nWhat is the expected behavior of the first jsfiddle?\nThe desired behavior would be: if a dialog is not open when swal.showLoading() is called, create a new dialog, open it, and display the loading icon.\n\nExactly!. ",
    "cristo1985": "Ok i think simply use html: .... but my page is an external file... than i must put source in iframe true?. ",
    "brtinney-touchsuite": "I'm encountering the same problem in Chrome 58.0.3029.96 on macOS Sierra.\nAble to reproduce it with this:\njavascript\nswal(\"test\");\nswal(\"test2\");\nswal.close();\n// Then press escape\nI'm guessing the problem is that the overwritten modal doesn't have its events unbound.. ",
    "psafx": "Just replace your $(this).submit(); with $('#deleteForm').off('submit').submit();\nEdit: because $(this) is not your form but sweetalert window.. ",
    "ArabGenius": "thanks \nit is awesome\n. Hello again\nsee this code which I used in old sweetalert ,, how to convert it into QUEUE\nswal( { title: \"title hele\",text: \"msg here\", confirmButtonText: \"open file\",showCancelButton: true,cancelButtonText: \"dismess\" },function(isConfirm){ if (isConfirm) { $.get('{$baseurl}user/notifi/{$notification.id}'); window.location = '{$notification.url}' } } );\n. ",
    "fas3r": "Hello,\nAny update?. Hello, \nany update ?. Hello,\nStill no update ?. ",
    "james-gould": "Also wondering about this.. ",
    "stale[bot]": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n. ",
    "tylerlweb": "Sorry, I should've been more clear - I'm talking about this page, which is the page that a lot of us focus on when checking it out:\nhttps://sweetalert2.github.io/\n  . I think this is more of a legitimate issue than you realize. People don't come to the SweetAlert pages with a preconception of \"this is the marketing page\" and \"this is the more detailed and technical page,\" especially when they both list tons of usage details. In my case, I didn't realize (coming from SweetAlert 1) that SweetAlert 2 dropped support for IE 8/9/10, so I rewrote the swal()'s in my app - a couple weeks later, I realized IE wasn't supported and I had to revert all that code back to what it was. For those of us who are STILL forced to support these horrible browsers, it's a good idea to make it clear on the \"marketing\" page too. It doesn't have to be that prominent - as long as it's visible on the page somewhere, it'll prevent other people from falling into the same trap.\n\nOn May 23, 2017, at 11:30 PM, Limon Monte notifications@github.com wrote:\nIE11 is supported\nhttps://limonte.github.io/sweetalert2/ is the marketing page, https://github.com/limonte/sweetalert2#browser-compatibility is more detailed and technical page.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "jucau": "My bad, I was loading a bad css from a previously tested sweetalert2 module ! Everything works fine now !. ",
    "shabuninil": "Yes, thank you very much. I'll wait for updates.. ",
    "nishou": "Awesome! Thank you \ud83d\udc4d . ",
    "anutting": "thanks for such a quick reply! but that only closes the modal and the page remains faded out and unresponsive\ni tried changing the code to be:\n````\n     swal({\n              title: \"Select an item\",\n              input: \"select\",\n              inputOptions: inputOptionsPromise,\n              showCancelButton: true,\n              animation: \"slide-from-top\"\n              }).then(function(item){\n                  $.get('/handle-item, {item:item}, function (res) {\n                         if (res.statusCode == '201') {\n                          swal(\"Request successful!\", \"Please come again\", \"success\");\n                          updateStatus(\"success\");\n                      }\n                      else {\n                          swal({ title:\"Oops...\", text:\"route could not be reached\", type:\"error\"});\n                      }\n              })\n              }).done(function(){\n                     swal.close();\n                 });\n          },\n          function (dismiss) {\n              if (dismiss === 'overlay') { \n                  // ignore\n              } else {\n                  throw dismiss;\n              }\n          });\n\n`. I haven't tested anything on IE11 so I can't speak specifically to that browser, but my issue was with the $.get request not being resolved. I ended up promisifying the whole thing, for example:javascript\nswal.queue([{\n              title: \"Select an item\",\n              input: \"select\",\n              inputOptions: getOptionsPromise, //promise that resolves with a key:value object\n              showCancelButton: true,\n              showCloseButton: true,\n              inputPlaceholder: 'Select Option',\n              animation: \"slide-from-top\",\n              showLoaderOnConfirm: true,\n              preConfirm:\n                  function(option){\n                      return new Promise(function(resolve){\n                          $.get('/option-list', {\n                              parameter: 'param'\n                          }).always(function(res){\n                                  if (res.statusCode === 201) {\n                                      swal.insertQueueStep({title:\"Input sent!\", type: \"success\", showCloseButton: true});\n                                  } else {\n                                      swal.insertQueueStep({ title: \"Oops...\", text: \"There was a problem sending!\", type: \"error\", showCloseButton: true});\n                                  }\n                              resolve();\n                          });\n                      });\n                    }\n          }]);\n```. ",
    "VinyP": "I am currently having this issue, on IE11. The page remains faded out and unresponsive. Any fix for this??. ",
    "jvcunha": "It makes sense because I have a situation that would need this functionality. For example, I have a loading in ajax and at the end when I give a close, ajax opens another showing an error. At the close of loading, close the 2 at the same time! The user can not see the error message .... ",
    "seanvree": "Sweetalert2 is bad ass.  I do wish, however, that there was a way to asynchronously load two modals. \nCheers.. @gverni  I wasn't aware that a modal MUST be interacted with by the user. In that case, you're right. \nI was just trying to have two \"alerts\" (non-interactive) in the browser at the same time.. ",
    "akunno": "Hi @limonte \nMercurial fan myself, so no - i'm not 100% on how to do it correctly. Apologies for the change to dist - I committed and completed the pull request on just the source changes, but didn't realise that future commits would also be applied. (I did read the instructions!)\nThat said, I've moved the change onto a feature branch so I can make changes and do pull requests without further effort.. ",
    "stack-its": "It was on macOS 10.12.5 on Safari 10.11\nThanks for the units code :)\n. ",
    "Spetnik": "Ouch just saw that I'm not supposed to commit the dist files. I'll redo it!. ",
    "HennesseyJ": "Limonte why are you closing this? I have this error too. It is not resolved.. ",
    "mfarajewicz": "I would like to ask for reopening the issue by providing some simple way of reproducing it. However there is no way to show it in JsFiddle as Firefox Extension is completely separate environment. Is there a chance that if I create minimal working example of extension with SweetAlert for Chrome & Firefox to compare, you'll have a look on that?. Ok guys I figured out what is happening. Code of SweetAlert.js is fine. Problem is that Firefox has different this object than Chrome in extension env. Checkout solution here: \nhttps://devtraintravel.wordpress.com/2018/03/27/browser-extension-differences-episode-1/. ",
    "erickmonteiro": "PR created, thank you.. ",
    "michaelbull": "No it doesn't?\nThe example sets: \njavascript\nswal.setDefaults({\n  input: 'text',\n  confirmButtonText: 'Next &rarr;',\n  showCancelButton: true,\n  animation: false,\n  progressSteps: ['1', '2', '3']\n})\nNote: progressSteps: ['1', '2', '3']\n. If I pass the array of SweetAlertOptions to the progressSteps field when calling swal.setDefaults (example below), then this happens (note the step numbers are replaced with [object Object]).\n```typescript\n        let steps: SweetAlertOptions[] = [\n            {\n                title: 'Question 1',\n                text: 'Chaining swal2 modals is easy'\n            },\n            {\n                title: 'Question 2',\n                text: 'q2'\n            },\n            {\n                title: 'Question 3',\n                text: 'q3'\n            }\n        ];\n    swal.setDefaults({\n        input: 'text',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        animation: false,\n        progressSteps: steps\n    });\n\n```. Thanks again!. ",
    "integrateddigital": "thanks for replying.   my issue is not about how to do it, but rather to verify if swal html field can or cannot handle embedded js object within the passed html, \nhowever if the swal htm field is supposed to handle an object as described above, then I'd say it would be a broken functionality, given that I have no problem doing that outside swal, unless you have an example ? if you say no, then that's it, but if you say yes then obviously the problem is me, at which point Id open a question externally....thanks again for replying, txs\ntx\n. With all due respect, you could have said 'yes it's possible' or 'no it's not possible'... \nit is pointless to have such a great library when the fundamental point of sharing knowledge is \npushed away with, and I apologize to say: arrogance.\nthanks for your reply anyway.,\nps: anyone else looking for the answer: the answer is yes, but there is a modification on \none of the .js; feel free to ping me. txs.. ",
    "FGAUTREAULT": "Yeah sorry for that I saw it when I published.. I understand. I post it here in case people had already tried to test sweetalert2 with Jasmine and it could be interesting for people to know either how to test it. Anyway I'll post here if I find a solution !. Here it is !\nYou need to declare SweetAlert as a service\njavascript\nimport * as SweetAlert from 'sweetalert2';\nThen use the default method to build it\njavascript\nSweetAlert.default({\n        title: ...,\n        text: ...\n    })\n    .then(() => { ... });\nAnd finally with Jasmine spy on the default method to get the promise\njavascript\nspyOn(SweetAlert, 'default').and.callFake(function () {\n    return Promise.resolve(function() {\n        // Data will only be modified inside the Promise\n        expect(...).toBe(...);\n    });\n});. ",
    "sreekanthyuv": "Can you please post the spec file for this sweet alert 2 @FGAUTREAULT . ",
    "KSahithyan": "But it says html is not in the SwalOptions..?\nWhat should I do now?\nI am using sweetalert@2.1.2. @gverni Sorry I am using Sweetalert2. But HTML is not in that, that was changed as content..\nlink :- https://sweetalert.js.org/guides/#upgrading-from-1x. ",
    "Dnomyar": "That's true ! Thanks for the tip.\nCheers. ",
    "Owenzh": "\n. Thanks your comments, we've found solution for it, that is changing the   align-items into flex-start. It's OK for our project. so I will close it.. ",
    "gabrielalack": "Happens on both Chrome and Firefox\nMac OS Sierra 10.12.5\nChrome Version 59.0.3071.115 (Official Build) (64-bit)\nFirefox 54.0.1 (64-bit)\nSwal 6.6.6\n. ",
    "navotera": "Windows 10 and firefox developer edition latest\nOn Sat, Jul 22, 2017, 21:46 Limon Monte notifications@github.com wrote:\n\nBrowser/OS?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/584#issuecomment-317184664,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABW90xxHgyC6KZW1z1O00UBPuESWemoMks5sQf1DgaJpZM4OgHNe\n.\n. Google chrome too latest version\n\nOn Sun, Jul 23, 2017, 10:44 Muhammad Hendra Sunarya navotera@gmail.com\nwrote:\n\nWindows 10 and firefox developer edition latest\nOn Sat, Jul 22, 2017, 21:46 Limon Monte notifications@github.com wrote:\n\nBrowser/OS?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/584#issuecomment-317184664,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABW90xxHgyC6KZW1z1O00UBPuESWemoMks5sQf1DgaJpZM4OgHNe\n.\n\n\n. ok i get it. somehow i insert the wrong sweetalert (ver 1) in my html page. sorry.. \n\nthanks for this awesome library. Is there any method\nIf(dismiss == \"ok\")\nBecause i want to catch if user prefer ok / confirm button not cancel or\nlike such as overlay and timer\nOn Wed, Aug 23, 2017, 17:23 Limon Monte notifications@github.com wrote:\n\nClosed #603 https://github.com/limonte/sweetalert2/issues/603.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/603#event-1217458218, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABW904uSuQj9NICYZ1x-MewGnMPj48Hsks5sa--agaJpZM4O_nPe\n.\n. \n",
    "rszczypka": "Thanks, https://github.com/toverux/ngsweetalert2 is great but it doesn't show me how to do the stuff I want to achieve. I already posted on stackoverflow: https://stackoverflow.com/questions/45500265/how-to-pass-angular-selector-as-html-option-of-sweetalert2. ",
    "vittal288": "No error in the console . ",
    "andytwoods": "Hi, I had EXACTLY this issue. It turned out I was not using the most uptodate CSS :). ",
    "Reechee88": "You are right. It was a CSS problem. The template style that I am using has overriden the CSS of SweetAlert! Thanks \ud83d\udc4d . ",
    "ranaclyde": "@toverux Thanks for your response. I solved it with vue-sweetalert Component. ",
    "almgwary": "i faced same issue with JQuery before and this simple solution \n```\n// used to reference to this\nlet self :MyClass;\n@Component({\n  selector: 'my-class',\n  templateUrl: 'my-class.html'\n})\nexport class MyClass{\nconstructor() {\n    self = this ; \n  }\ndoMyStuff(){\n        swal.queue([{\n                title: 'Your public IP',\n                confirmButtonText: 'Show my public IP',\n                text:\n                'Your public IP will be received ' +\n                'via AJAX request',\n                showLoaderOnConfirm: true,\n                preConfirm: function () {\n                return new Promise(resolve => {\n\n                    self.http.get('https://api.ipify.org?format=json')\n                        .map(res => res.json()).subscribe(data => {\n                        console.log(data.results);\n                        //self.data = data.results;\n                        swal.insertQueueStep(data.ip)\n\n                        resolve();\n                    });\n                });\n              });\n\n            }\n        }])\n\n}\n}\n```. ",
    "newoutlaw98": "Hello,\nThanks for your response. I have already looked at the examples. However, my question is why doesnt my code work? Is it because i dont have the preconfirm code? In the docs it states its optional? Please provide some useful feedback rather than hyperlink to minimal documentation and just closing the question.. ok, thanks. So you've pointed me to the documentation which states I must use the preConfirm function in order to use the showLoaderOnConfirm flag. Do you have any documentation on what resolve() is? Do you have docs on what Promise does? Do you docs on why setTimeout is used? Where does the AJAX call go, inside the Promise function? All of this is still unclear to me.. ",
    "abhishekps782": "Thanks for your prompt response.  I am facing this issue - fix Uncaught TypeError: Cannot read property 'removeChild' of null (#512 #487)  which has been fixed with your https://github.com/limonte/sweetalert2/releases/tag/v6.6.1 release. But there is no updated versions or releases for the atmosphere sweetalert2. . pinged him already. waiting for his response !!. I am not on meteor 1.3 or higher version and the workaround is using some other package specifically to install npm packages for the lower version of meteor. ",
    "cleandersonlobo": "Upgraded to the latest release(v6.6.9) ;). ",
    "gronostajo": "Sorry, my editor does it when reformatting for some reason.. ",
    "Igao92": "@limonte please, see:\nhttps://prnt.sc/gegwml. I agree with you in parts...\nSwal stops being just an \"alert\" when this supports other features inside it (HTML, AJAX, IMAGES, FORMS, ETC ...)\nIn my scenario I am using a Swal with confirmation, but at the same time I need to warn my user that their time is running out.\nAnd as it is an \"alert\" I wanted to keep using Swal. :)\nBut make sure this will not make me stop using it ... I'll think of a different way of notifying my user.\nThanks for the time!. ",
    "enforb": "I FIXED IT!\nReally easy fix!!!!\nIn function init(params)\nvar c = getContainer();\nif (c) {\n//            c.parentNode.removeChild(c); //this row must be disabled\n}\nIn function getContainer() just ':last-child' selector was added.\nvar getContainer = function getContainer() {\n        return document.body.querySelector('.' + swalClasses.container + ':last-child');\n    };\nThat's all... \nEnjoy :). ",
    "LindaHaviv": "@limonte swal({ title: \"hi\", showLoaderOnConfirm: true }) doesn't show the loader either. \nI want to show the loading state to show the user that something is going on.\njs\nswal(\"hi\").then(() =>  {\n  swal.showLoading()\n  return doSomethingAsync()\n}).then(() => {\n  return doSomethingElseAsync()\n}).catch(err => {\n  swal({ title: \"oops\", text: err.message, type: \"error\" })\n});. ",
    "FHDumont": "Hi @LindaHaviv, I have the same problem, did you fix it?\nBest regards.. ",
    "shajeermuhammed": "Fiddle is running in Chrome and other browsers but not in IE... and resolved the issue with the following method\nhideOverlayForIE(){\n    let ua = window.navigator.userAgent;\n    let trident = ua.indexOf('Trident/'); \n    if (trident > 0) { // check for browser\n      let element = document.getElementsByClassName('swal2-container');\n      $(element).addClass('cgc-hide-swal-container');\n    }\n  }\ncss\n.cgc-hide-swal-container {display: none !important;}. @limonte, Great job, it is perfectly working with  v6.9.1, thank you for your response..... ",
    "tavuntu": "@limonte that plugin looks awesome, thanks for the info.. I see, thanks for the answer!. yes, I'm closing this. oops, sorry, I thought that msg was for me. ",
    "Trevald": "I updated the plunker to read from a local SweetAlert and added som logging. I it seems like the callback for the animationEndEvent-listener never is called. If i skip to the else-part it closes the overlay.\njavascript\n// If animation is supported, animate\n  if (animationEndEvent && !hasClass(modal, swalClasses.noanimation)) {\n    console.log('Animation supported', modal); // <-- Everything is fine here\n    modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n      console.log('Animation done!', modal); // <-- Never get here\n      modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\n      console.log('removeModalAndResetState');\n      if (hasClass(modal, swalClasses.hide)) {\n        removeModalAndResetState();\n      }\n});\nThe animationEndEvent is \"MSAnimationEnd\" but if I change that to non-prefixed \"animationend\". It works! Maybe NG is hijacking the animation events. \nLol, noticed now that I read toverux as trevald. Did someone say egocentric?\n. It works the same in IE11 as in Chrome:\n- I click element.\n- It spinns 360deg\n- Standard JS alert showing the text \"animationend\"\n3 days from report to solution, open-source at it's best. Thanks for the quick replies.. Updated Plunkr to use 6.9.1 from CDN instead of local version. And it works as expected in IE11, animation and all.. ",
    "Martinnord": "How did you fix this issue?\n. Oh THANK YOU! Been trying to fix this for hours and now it works! Maybe it would be worth mentioning this in the docs, like a little side note? \nAnyways, thanks a lot @limonte. And great job with sweetalert2. I changed because of the inline-html and I'm exited you use it!\nCheers! :-). Ah smart! Thank you mister.. ",
    "k9yosh": "@Martinnord I could not find a fix. I moved to another alert library. But seems like they fixed it.. @limonte Thanks, i'll try it this way :). @limonte I tried the new release v6.11.4 but still, no progress. I tried the new release in following ways:\n\nLoading sweetalert2 via typescript using import swal from 'sweetalert2/dist/sweetalert2.all.js'.\nRemoving all other css files and keeping just this.\nLoading sweetalert2 from html file using ",
    "davikawasaki": "@k9yosh I had the same problem in my VueJS project and it was solved importing sweetalert2.all.min.js:\n\nHow your styles are being generated? Maybe I'm wrong, but perhaps your project builder can't find sweetalert2 styles while building 'semantic.min.css' - webpack in my case works like a charm for style injection.\n. ",
    "m1xf1t": "Understood! Will do.. Thank you @toverux! . ",
    "Zerebokep": "It seems this workaround doesn't work anymore after updating from 6.9.0 to the current version. I used it with setDefaults.\nAlso $(this) seems to be undefined inside onOpen.. ",
    "KhaledSMQ": "Thanks bro \ud83d\udc4d . @limonte works fine \ud83d\udcaf . ",
    "hosseinsalemi": "Yes, AnyComponent is a React component.. ",
    "LuisDiazUgena": "Thanks!. I've been able to do it like this:\n```javascript\nvar inputOptionsPromise = new Promise(function (resolve) {\n    setTimeout(function () {\n            //place options here\n            $.getJSON(\"/resources/tags.json\", function(data) {\n                resolve(data)\n            });\n    }, 2000)\n})\n\n$(function(){\n    $(\"#taginfo\").click(function(){\n        console.log(\"click on tag info\");\n        swal({\n        title: 'Select Tag',\n        input: 'select',\n        inputOptions: inputOptionsPromise,\n        inputPlaceholder: 'Select tag',\n        showCancelButton: true,\n        inputValidator: function (value) {\n            return new Promise(function (resolve, reject) {\n              if (value != '') {\n                document.getElementById('taginfo').value = value;\n                resolve();\n              }else {\n                  reject('You need to select one tag')\n              }\n            })\n        }\n        }).then(function (result) {\n            swal({\n                type: 'success',\n                html: 'You selected: ' + result\n            })\n        })\n    });\n});\n\n```\nand the json file is now:\njson\n{\n    \"key1\": \"tag1\",\n    \"key2\": \"tag2\",\n    \"key3\": \"tag3\"\n}\n. Hi @limonte I know this is so unrelated, sorry about that. I'll probably do a workaround and try to perform custom search for it.\nThanks and again, sorry about this issue.. I've managed to fix this. If @limonte don't mind, I'm sharing this here, maybe it will help someone in the future.\n```javascript\nvar inputOptionsPromise = new Promise(function (resolve) {\n        setTimeout(function () {\n            $.getJSON(\"/resources/tags.json\", function(data) {\n                resolve(data);\n            });\n        }, 2000)\n    })\n    var inputOptionsFilteredPromise;\n    function generatePromise(){\n        console.log(\"generatePromise\");\n        inputOptionsFilteredPromise = new Promise(function (resolve) {\n            setTimeout(function () {\n                $.getJSON(\"/resources/tags.json\", function(data) {\n                    for (var key in data) {\n                        if (data.hasOwnProperty(key)) {\n                            var tmpKey = key.toUpperCase();\n                            var tmpUserInput = userInput.toUpperCase();\n                            if (tmpKey.indexOf(tmpUserInput) == -1){\n                                delete data[key];\n                            }\n                        }\n                    }\n                    resolve(data);\n                });\n            }, 2000)\n        })\n    }\nvar userInput;\n$(document).on('click', '.SwalBtn1', function() {\n    //Some code 1\n    console.log('Button search');\n    userInput = document.getElementById('swal-input1').value;\n    console.log(\"userInput: \"+userInput);\n    generatePromise();\n    swal({\n        title: 'Filtered Tag',\n        input: 'select',\n        inputOptions: inputOptionsFilteredPromise,\n        inputPlaceholder: 'Select tag',\n        confirmButtonColor: '#25C76A',\n        showCancelButton: true,\n        inputValidator: function (value) {\n            return new Promise(function (resolve, reject) {\n              if (value != '') {\n                document.getElementById('taginfo').value = value;\n                resolve();\n              }else {\n                  document.getElementById('taginfo').value = \"default\";\n                  resolve('You need to select one tag')\n              }\n            })\n        }\n    }).then(function (result) {\n            swal({\n                type: 'success',\n                html: 'You selected: ' + result\n            })\n    })\n});\n$(function(){\n    $(\"#taginfo\").click(function(){\n        console.log(\"click on tag info\");\n        swal({\n        title: 'Select Tag',\n        input: 'select',\n        inputOptions: inputOptionsPromise,\n        inputPlaceholder: 'Select tag',\n        confirmButtonColor: '#25C76A',\n        html:'<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Search...\">' + '<button type=\"button\" role=\"button\" tabindex=\"0\" class=\"SwalBtn1 customSwalBtn\">' + 'Search' + '</button>',\n        showCancelButton: true,\n        inputValidator: function (value) {\n            return new Promise(function (resolve, reject) {\n              if (value != '') {\n                document.getElementById('taginfo').value = value;\n                resolve();\n              }else {\n                  document.getElementById('taginfo').value = \"default\";\n                  resolve('You need to select one tag')\n              }\n            })\n        }\n        }).then(function (result) {\n            swal({\n                type: 'success',\n                html: 'You selected: ' + result\n            })\n        })\n    });\n});\n\n```\n. ",
    "f18nfz": "Ah silly me, I'll close this myself. I can just use the onOpen and getInput to detect the change in select option. There's no need for an onChange here!. ",
    "ChristianLJ": "Hi @limonte \nI've attached a screenshot from the console after clicking both elements twice.\n\n. I made two codepens, one which works in Safari 8 on Yosemite and one which doesn't.\nI don't know if this is useful but maybe you can help me narrow down the differences and i can continue testing.\nThe one that works:\nhttps://codepen.io/ChristianLJ/pen/gGGooL\nThe one that doesn't:\nhttps://codepen.io/ChristianLJ/pen/YrrYvw\n. So @limonte, i tried something else. \nWhen using the script, sweetalert2.all.min.js as standalone it doesn't work in Safari 8 on Yosemite.\nBy adding a link to the stylesheet, sweetalert2.css, it works.\nMaybe this information is useful.. ",
    "smachs": "@limonte about min-height ckeck my problem\n\n\nI'm trying to change by css but without success\n.sweet-alert {\n    height: 491px;\n    margin-bottom: 5%;\n    padding: 20px 20px 0px 20px;\n}\n. ",
    "treece": "@limonte Awesome, thanks! I will test it later today \ud83d\ude09. ",
    "Orh1989": "Yep. I have no another option except IE11 (because I work with closed company network)\n\nI Injected the core.js already. \n",
    "TheCelavi": "You make me love open source even more:-)\nThanks guys!. ",
    "ibrahimBeladi": "OS: Linux Zorin\nBug in Firefox 56.0 (64-bit) (Ubuntu)\nFine in Chromium (Version 61.0.3163.100 (Official Build) Built on Ubuntu , running on Zorin 12 (64-bit))\n. I am not holding Enter for too long for sure. In Chromium it doesn't happen unless I really hold Enter. But in Firefox it happens even with the fastest presses.. Oh I forgot to tell you since the issue is closed. It is working properly, thank you for your effort. . ",
    "janus-reith": "Im on 7.3.2 and still encounter this issue, directly importing sweetalert2.all.min.js also fixed this.\nI took a quick look at the package config, and it still defines\"main\": \"dist/sweetalert2.all.js\",(without .min)\n  . ",
    "emmanuelballery": "I wish I thought of this one :+1:. ",
    "simon1tan": "Growl is basically a popup message without being modal. The point is to let the user know an event has occurred without needing the user to click on anything and without being intrusive. The popup usually appears top right corner but can appear anywhere via options. By default, the popup also disappears after a certain time. See http://codeseven.github.io/toastr/ or https://sciactive.com/pnotify/#demos-simple. Sweetalert2 has all the components to do this already and I think with a few additions, could be made to work.. Nevermind. Not sure where my css came from.. Chrome Version 72.0.3626.109  (it's updating, will update this if problem resolves)\nNo errors in the log. \nServing via file:// and http://localhost with Apache on Windows. Same issue.\n\nThe working version shows:\n<button type=\"button\" class=\"swal2-close\" aria-label=\"Close this dialog\" style=\"display: flex;\">\u00d7</button>\n. ",
    "roemhildtg": "@toverux you're right, I don't see a great use case for top-left, right etc. I guess initially I was thinking it might be beneficial, in cases where you want to position the popup on top of a sidebar on one side of the screen or the other, but for my particular use case, top, center, and bottom will work splendidly.  \ud83d\udc4d . ",
    "Rohit-chapter": "Hi limonte,\nI have tried position tag but it is not working ,it is not showing me \"swal2-container swal2-top-end\" in container div.\nPlease suggest some solution.\nThanks. ",
    "resmigenc": "Hello Limonte. Footer section footer does not work.. Hello there. Footer section footer does not work. Help me plaese.. ",
    "Xerotherm1c": "@limonte In addition to the \"quick positioning\" you've added, you should also accept x and y offset values from the given position.\n```\nswal({\n// ...\nposition: 'top-right',\noffset: [\n    x: '15px',\n    y: '-5px',\n],\n\n});\n``\nThe defaultbody.swal2-toast-shown .swal2-container.swal2-top-right` for example would still have:\ntop: 0;\nright: 0;\nBut now you would have the ability to adjust the position to an exact pixel location if necessary in a given project.\nGreat plugin! Thanks for your time. ",
    "Franki1986": "Hello,\nIs there any way to position a popup based on an element?\nSomething like :\n```\nswal({\n// ...\nposition: 'top-right',\npopup-target:  document.getElementById('my-div')\n});\n\n```\nSo that the popup will display at the top-right of my div element?. Hi, thanks for your reply! I have done a quick test, but this seems not to create the expected result.\nI thought that the popup would display at the top of my div.\nexample\nUpdate:\nOk I got it, I added a custom class that makes the position relative.\nThere should be an example with this, I think it is a good feature!\nexample 2. ",
    "danny1l": "I solved this by setting the class of sweetalert2 to a higher z-index value. solved. I am new to all of this.\n. thank you so much for your reply. Love your product. :)\nOn Sat, Oct 14, 2017 at 5:35 AM, Limon Monte notifications@github.com\nwrote:\n\nHello @danny1l https://github.com/danny1l and sorry for the delayed\nresponse!\nThe current z-index of sweetalert2 is 1060. Looks like a magic number,\nbut the reason for choosing it described in #296 (comment)\nhttps://github.com/limonte/sweetalert2/issues/296#issuecomment-248434501\nand #341 (comment)\nhttps://github.com/limonte/sweetalert2/issues/341#issuecomment-257290241\nIn order to change swal2's z-index for your project, just add this to the\nprojects' styles:\n.swal2-container {\n  z-index: X;\n}\nWhere X is a number which is greater than z-index of another dialog\nwindow, e.g. 10000.\nHere's the live example: https://jsfiddle.net/ad3quksn/153/\nPS many thanks for your generous donation! That's the biggest donation to\nthis project so far!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/limonte/sweetalert2/issues/665#issuecomment-336623476,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AfO_Lfhix2RyLa9YhEJCT1TvITz6yUlvks5ssIB7gaJpZM4P3pnz\n.\n. \n",
    "sedx": "No problem, I\u2019ll fix all your remarks tomorrow) Thanks!\n\n17 \u043e\u043a\u0442. 2017 \u0433., \u0432 18:34, Limon Monte notifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\nAlso, the same additions to docs are needed in https://github.com/limonte/sweetalert2/blob/master/index.html#L676 and https://github.com/limonte/sweetalert2/blob/master/sweetalert2.d.ts#L601 but it's okay if you skip those in case you don't have time :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @limonte Done. Thanks a lot!. \n",
    "kgrvr": "Does it provide a flag to remove backdrop when Toast gets visible?. @acupajoe No.. But there's also no option in swal options to remove backdrop.\nSecondly, when it removes backdrop completely, is the other area apart from toast clickable? . @acupajoe Yup, you can hide surely hide it. But the problem is the clicking of mouse button. Removing of backdrop is of no use if the user is not able to click the area behind it. . @acupajoe Surely will add an issue request for that. \u263a\ufe0f\nBetween, when is this toast feature going to be added in the master? . So there's no way to make the other are clickable?. @limonte Yup. These use cases are also possible. I was actually trying to implement toast notifications using swal, and from there I found out that you people are going to implement it in near future, and from there I got to this. Happy to hear that though. :)\n. ",
    "lucas-jc": "Nice @limonte ! All working now. \nThanks!. ",
    "bubjavier": "+1 but, for the meantime, this worked for me:\nbody {\n  padding-right: 0 !important;\n}. ",
    "Kappyh": "For me sweet alert will add padding: 15px in a page with scrollbar.. Fixed @limonte , thank you!! :D. Thank you very much. ",
    "a1p4ca": "Why swal add padding in body? What's the purpose of behavior?. ",
    "SchoppAx": "Hi guys,\nI still have the issue if I'm using any bottom positioning. \nTested with the last release (8.2.0) on different browsers (like FF, Chrome, Safari): \nhttps://jsfiddle.net/1sLmb7j2/ . A fix could be:\n.swal2-container.swal2-bottom-end, .swal2-container.swal2-bottom-right {\n    align-items: flex-start;\n    justify-content: flex-end;\n}\n.swal2-container.swal2-bottom-end > :first-child, .swal2-container.swal2-bottom-right > :first-child {\n    margin-top: auto;\n}. Of course. I will create it later :-). I will change the request in a few hours. I\u2018m currently not at home.. ",
    "JuanGuzman1": "imageUrl: \"images/avatar/user.png\"\nesta linea si te funciona?\nno me jala a mi , solo con la url de la imagen con http. ",
    "baigail93": "My bad! I went through the previous closed issues and found few issues with angular! I moved it to stackoverflow! Thanks. ",
    "netbka": "@limonte \nThank you for your answer and for an awesome plugin!. ",
    "cmcawood": "Ok some background we developed a system for a client and they are using Windows 7 with IE11 so we had to make a few changes for it to work for them.  I upgraded to v6.11.4 this morning and we added in a polyfill to enable it to work:\n    \n\nSo if you go to the site on IE11 on Windows 7 or Win 10 prior to 1709 it randomly doesnt work with the sweetalerts where they are chained (it decides sometimes to work and others not).  On 1709 it does the same behaviour, but if you open the dev tools then IE11 crashes.  If I comment out sweetalert, all works fine.\n. ",
    "boaticus": "As a workaround, I removed the gray button border in my app using the following css override:\n.swal2-modal .swal2-styled:focus {\n    -webkit-box-shadow: none;\n    box-shadow: none;\n}. ",
    "tenzintaschi": "Ok, no problem.  Anyway I will use it in this way. Thanks for your good job!. ",
    "tarun29061990": "https://stackoverflow.com/questions/47241748/sweetalert2-breaking-my-angular-build-what-to-do. @limonte Can you please share your views on stackoverflow??. ",
    "joshuaalpuerto": "@tarun29061990, I believe your issue is related with this #647. \nI was able to fix mine by replacing:\njs\nimport swal from 'sweetalert2'\nto\njs\nimport swal from 'sweetalert2/dist/sweetalert2.all.min.js'\n. ",
    "tripflex": "Yeah when looking at this I was confused by both repos, mainly because on this repo README you link to the original sweetalert page showing the changes from v1 to v2 .... but you still have maintained some of the previous attributes/settings from v1 in sweetalert2\nFor instance, in SweetAlert (version 2), type is no longer used it is now icon ...but in your repo (SweetAlert2) ... you still use type ... so why link to changes from v1 to v2 on the original SweetAlert page?  Made it  very confusing .... ",
    "KrunchMuffin": "Not a fan of the separate pages. Noty did that and I dislike it. I like being able to do CTRL+F to find something on the page. But I am for better organization. But that's just me.. ",
    "mateenQureshi": "also agree with @acupajoe , but it was my client requirement to remove the cancel button on loader start so i have to go with requirement.\nThanks for workaround @limonte . It's exactly what i want\nthanks for appreciated response, guyz. Hey @limonte,\nWhat could be the problem with project setup? it would be great if you can suggest. \nSecond, I am using alerts in almost every page of my app. but the problem is only with the toast option and only in production mode. \nFeedback Please. ",
    "julio899": "I was able to remove the error message.\nto visualize what was causing the message.\nmodify the following way.\nswal({ \n              type: 'success',\n              title: \"Codigo Copiado al Portapapeles\",\n              text: \"notificaci\u00f3n cierra en 2 segundos.\",\n              showConfirmButton: false,\n              timer: 2500\n  }).then( \n                 ()=>{}, \n                (eception)=>{ console.log(eception) }\n            );\n\n\n[ anyway thank you very much  ] @nixta @pomartel @Sontan @mockdeep @lipis #. \n",
    "psychoPirate": "So, its impossible to run this code without errors?\n$(parent)[0].swal({\n          title: 'Are you sure?',\n          text: \"You won't be able to revert this!\",\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: 'Yes, delete it!',\n          cancelButtonText: 'No, cancel!',\n          confirmButtonClass: 'btn btn-success',\n          cancelButtonClass: 'btn btn-danger',\n          buttonsStyling: false\n        }).then(function () {\n          swal(\n            'Deleted!',\n            'Your file has been deleted.',\n            'success'\n          )\n        }, function (dismiss) {\n          // dismiss can be 'cancel', 'overlay',\n          // 'close', and 'timer'\n          if (dismiss === 'cancel') {\n            swal(\n              'Cancelled',\n              'Your imaginary file is safe :)',\n              'error'\n            )\n          }\n        });\nBut this one works:\n$(parent)[0].swal(\"test\");\n. Sorry for the inconvenience, cache problem -.-'  ....  the 2 libraries use the same function name.. ",
    "sunnybhoy": "The screenshot is Firefox. Other browsers don't have the broken symbol, just a blank area where the icon should be.. Thanks toverux,\nI'm not sure what happened but it has started working. I was testing it with swal('The Internet?','That thing is still around?','question') and got the screenshot. However after messing around I tried another dialog with type: question and noticed that it worked. Then went back to the original code and it seems to have started to work as well.\nNo idea why but my guess it was something to do with the update from 1 to 2.\nThanks again,\nAlan. ",
    "virtualtoy": "^\\S+@\\S+\\.\\S{2,}$?. ",
    "kazumanagano": "Sorry, I don't know keyCode is deprecated.\nI fixed the way by using KeyboardEvent.isComposing.. ",
    "Chetan07j": "I am not upgrading from older version, installing it freshly. @limonte Thank you...\nIN newer version it is working fine.. ",
    "dwaxweiler": "You are welcome! Thank you for the quick fix!. ",
    "frodeknutsen": "Has this reappeared? I'm getting the same warning in 7.28.2. ",
    "ChriStef": "Please @limonte from IE11 go to your demo page https://sweetalert2.github.io/ even the first demo wont show up. I think is something with the syntax of javascript.. Your demo fiddle pop up ok! \nWhat do you suggest to change I use promise swal in my site that works ok with others but not with IE. Well done, congratulations  to all, and a big thank you \ud83d\udc4d. ",
    "bedengler": "Seems to have solved this issue...but I took the link from you, not the ..../199, but without \"/199\"...\nBtw: is there a way to keep a swal opened, if the value, the user has entered, is not the value we've expected?\nThis seems not to work:\njavascript\nswal({\n    title: \"Enter price\",\n    text: \"do it\",\n    input: \"text\",\n    showCancelButton: true,\n    animation: \"slide-from-top\",\n    inputPlaceholder: \"Price\",\n    allowEnterKey: true\n}).then(function(inputValue) {\n    if (inputValue.value == \"\") {\n        // keep swal opened - need code!!!\n    }\n    else {\n        alert(\"success\");\n    }\n});. Thanks! Everything solved for now...\nI appreciate your work and your fast reply - keep on going, Sweetalert is great!. ",
    "sal118": "I have version 7.0.3, but it still doesn't work... What else could the problem be? . ",
    "stealthAngel": "Thank you sir :)\n. ",
    "nitrojulia": "Morning, \nI feel my mistake, I've been here for a short time. The error occurs when I use the confirm button in iE11, it never goes into . then ({function (result) {... }}). My Modal are:\nhttps://jsfiddle.net/x550z069/9/   \nI have seen that by removing the option focusConfirm: false the button works well again.\nThx for help.. ",
    "angrykoala": "Hi @limonte \nHere is the fiddle:\nhttps://jsfiddle.net/ad3quksn/225/\nTo reproduce:\n1. Open the example in Google Chrome\n2. Scroll down until some top elements are not visible\n3. Click on \"Open Alert\"\n4. Close the alert\n5. Scroll should be on top again, with the element 1 visible.\nIn firefox this is not happening, so I guess is not a desired feature\nThanks. Thanks, I'll try to check your project as well to see if I find the problem. Oh, well, fastest weekend of my life\nThanks!. I confirm this is fixed in my own application, I think this can be closed now. Thanks. why not a method to change the allowOutsideClick to be set? similar to showValidationError in the example?\nwould that be feasible?, if not I feel the second idea from @zenflow would be better than using string\nthanks for your help. ",
    "raydawg2000": "Hi, I think this issue has sprung up again.  I cannot reproduce this in jsfiddle but I do have a site I can send a link too.  I don't really want to publicly post the site.  Please advise.\nTo sum up, I am using Bootstrap 4 and have a submit button at the bottom of my form.  When I click on the submit button I scroll to to the top of the page to show any errors.  Once the alert closes though the page scrolls back down the submit button, but i want it to stay at the top.  I have tried putting the submit button on random places on the page and it auto scrolls to where ever the button is.\nEDIT: I was able to reproduce in jsfiddle   https://jsfiddle.net/s8f12xad/. @limonte  Just want to say thanks for this, it works great!!  Though I would say this solution may not be ideal because the need to scroll can be conditional.  For instance, I don't want to scroll to the top if the user hits the cancel button or closes via some other method but this solution does it.  Now I can add some additional logic to control this scroll inside the onAfterClose method but I feel like its easier to handle this inside the then method where I have access to the result and make a choice based on that.\nAnother idea could be if some kind of input parameter could be provided through the onAfterClose method such as event state or input result so logic could be created around it.\nMaybe there is a technical reason why it has to go there, I don't know.  Either way, there are ways to work around it but it does add some additional complexity that perhaps isn't necessary.  . Thanks for the reply, your solution was what I ended up doing.  It's not a big deal but if there is a way down the road to simplify this it would be great.  Either way, thanks for your help!. ",
    "guilherme90": "Issue updated.. Thanks.. ",
    "Legym": "In case anyone else runs into this problem, here is the answer\nhttps://stackoverflow.com/questions/45812160/unexpected-comma-using-map. ",
    "ErnestoSalazar": "@acupajoe There could be a property int the Swal configuration object where you can store the name of the animate.css close animation?. ",
    "camaech": "I made a quick implementation of this, but it's probably not the best way to do it. How do I go about asking someone how it should actually be done? Here's the pull request #1193 . ",
    "toddwprice": "@toverux you were spot on. I was migrating from the old library as didn't update the imports. I'm closing this PR as it seems it is not needed.  And the README shows an example using the correct import statement. I just missed it.  Thanks for the help!. ",
    "MSkraburski": "https://jsfiddle.net/80k8z3sn/4/\nI have never used JSFiddle so it does not even compile. However, the code is the same as I use. I got \n.swal2-modal .swal2-styled + .swal2-styled {\n    /* margin-top: 15px; */\n}\nactive from sweetalert2.scss and that causes the problem. Is there any other way to overwrite it other then to recompile .scss file? Koala does not compile .scss files on my laptop due to some kind of bug. ",
    "andreeib": "Not sure about use cases but I agree, we shouldn't close the modal if we are not sure if this is what the user intended.. Awesome, thank you for the quick response and for the work you do on this library.. ",
    "RicMBM": "where's the Init(params)?\nIm trying to build 2 modals, 1 for doing a ajax request but if clicked cancel calls a second modal if clicked on Accept close both modals but if clicked cancel call the first modal for continue. ",
    "itorian": "Here's another way:\n```\nvar modals = [];\nmodals.push({ title: 'title 1', text: 'text 1' });\nmodals.push({ title: 'title 2', text: 'text 2' });\nmodals.push({\n      title: 'Success',\n      text: 'text 3',\n      type: 'success',\n      confirmButtonClass: 'btn btn-success',\n      buttonsStyling: false\n});\nmodals.push({\n      title: 'Error',\n      text: 'text 4',\n      type: 'error',\n      confirmButtonClass: 'btn btn-info',\n      buttonsStyling: false\n});\nswal.queue(modals);\n```\nSource https://stackoverflow.com/questions/38085851/sweetalert2-multiple-swal-at-the-same-function. ",
    "shubhsnov": "Facing a similar issue, which sort of seems like some issue with foundation, as it doesn't happen when I remove that dependency. Created a fiddle with relevant external libraries that I am using.\nhttps://jsfiddle.net/d33uzanv/\nOn clicking the anchor at the very bottom, swal pops up. The page jumps to top on dismissing it.. For me, this is happening in both Firefox and Chrome. \nI don't know what foundation is doing in the background that is messing with the scrollTop, but yeah that is the only hint I have for now. It doesn't happen when I don't include foundation.\nAlso, I forgot to add e.preventDefault() on the click handler, but this still happens as long as the foundation css is linked.. I could reproduce it back to 6.11.4. @limonte I don't think you read my above comments properly. I mentioned the preventDefault thing myself, and as for the version change thing, well I mistakenly updated the fiddle while I was trying different versions.\nAs for the issue being unrelated, I am not sure.  The bug is still present when I use 5.4.6 for both js and css. I assume a lot of people are still using v5 and below of foundation, and this issue would be there in terms of compatibility, as many people can't jump from 5 to 6 directly(as is my case).\nAnyways, here is a cleaner fiddle, where the issue still persists with foundation 5.4.6(and this is what I am using statically in my site, and the bug makes SweetAlert unusable), if you still want to have a go : https://jsfiddle.net/gvh2can8/\nI assume it has to do with locking the scroll locking, which is where foundation kicks in and causes trouble. It would be good to have the disable scrolling feature as an option.. @cornelisonc Thanks a lot! That worked for me too. :). ",
    "johncederholm": "@shubhsnov @mrdigitalau  What browser are you two using?\nhttps://stackoverflow.com/questions/28633221/document-body-scrolltop-firefox-returns-0-only-js/28633515\nI think the problem lies with document.body.scrollTop, which should be modified according to the above answer. \nIf I figure out a good solution, I will submit a pull request.. ",
    "prapats": "Facing the same issue with sweetalert2@7.1.3. ",
    "cornelisonc": "I was also experiencing this issue -- I'm not using Foundation, but it looks like the scrolling to the top issue is caused by adding a CSS attribute of overflow-y: hidden to the body. I tried a JSFiddle using only jQuery and SweetAlert2 and everything seemed to work fine, so I'm not sure what's causing it, but here is what fixed it for me:\nbody.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) {\n  overflow-y: visible !important;\n}\nHopefully this will help someone.\n. ",
    "mrdigitalau": "Hey @cornelisonc ,\nThanks heaps for that solution, it works an absolute charm :). Hey there\nSo your fix looks to be working properly on chrome and on desktops.\nBut on the phone (android and ios) it still skips to top.\nMy project is live now, it would be really hard for me to fiddle it as it's a laravel project, but take a look:\nhttps://order.manoosh.com.au/order/pickup/marrickville\nIf you go there on your android device and try add a product to the cart, it skips to the top on mobile, but not on desktop..\nCheers\n. ",
    "queejie": "@cornelisonc Thank you.  The style fix worked for us as well.  This is still a problem in v7.3.5.. ",
    "morning-bird": "@cornelisons Thanks a lot.. ",
    "smithaa02": "Thanks @cornelisonc !  This issue was giving me a lot of grief and this worked for me.  Would be great to see the developers add that little css line to their main release.. ",
    "abrambailey": "This seems to be an issue on mobile for me... even with 7.4.0. ",
    "pedro-lb": "@limonte, solved for me in 7.4.0!\nMany thanks.. Hey @ciaran036 , you can actually use other providers than cdnjs. I'm currently using ASP.NET Core 2.2 and there are these providers available (on Visual Studio 2017 / 2019, right-click Add > Client Side Library):\n\nHowever, in order to use other providers such as jsdelivr, you have to first select which package you want to add, press enter, type '@' after the name and then select the version:\n\nAlternatively you can also edit your libman.json file to include a custom provider:\n\nAnd thus you can install SweetAlert2 using jsdelivr.\nCheers!. ",
    "mitomm": "I'm still having this scroll up issue with version 7.9.0 (even on desktop) - but only with Safari (tested on version 11.1). On Chrome everything is working fine. . @limonte I actually just found out that there was another issue (that was related to me changing the url of the page and catching that somewhere else) in my code that made it jump to the top. So it seems to work fine again for me now. Sorry for giving you some wrong feedback.. ",
    "7twin": "Mobile chrome (android) is affected by this issue too\nEdit: Chrome on PC is too. The linked \"fixed\" jsfiddles have the same issue too. @limonte preventing default and returning false from the onclick function, makes it only jump ~50 pixels down and then back up, but it still does jump\nedit: I'll try to create a fiddle later\nedit2: with the preventdefault it only happens on mobile. @limonte sent you a mail with the title \"SweetAlert2 scrollup issue\" instead of a fiddle, it's much harder to create a fiddle. @limonte yes, just pulled the master and it's fixed, great job, thank you!. ",
    "glendonyeo": "@limonte unfortunately it doesn't seems fixed in my version\nPlease check the html copy on jsfiddle\nhttps://jsfiddle.net/fk3psp83/\nRunning on SweetAlert v7.20.8, Having Issues on both Latest version of Chrome & Firefox. @limonte \nthanks for pointing out the issues,\nfor my case, the height:100% is set by google translation widget (just for other reference),\nissues can be solve by set html{height: auto !important} to my css\nthe issues will appear when both body & html height is set to 100% \n(or similiar conditions like html {height:100%} , body {max-height:100%})\ni am able to reproduce the issues @ sweetalert demo page by adding the css\n. @limonte all is good from my side. hope this issues closed for real \ud83d\ude05 . @limonte \nthe only thing i could figure of is to set top css to sum of (window.pageYOffset + sticky element css top attribute) during modal show\nbut it will be infinite fixing progress and might causing other unexpected issues\nmaybe is it better to use onOpen / onBeforeOpen to handle?\n. @limonte \nI believe is due to css position sticky behavior.\nwhen overflow-y set to hidden, the element will stick to parent element starting position\nThis could fix the issues.\nhttps://jsfiddle.net/n0jtbeq4/. @limonte \nif support of this feature is necessary, \nmaybe you can try to get all child element of body and check for element with position sticky\nbelow is my very draft fiddle\nhttps://jsfiddle.net/5gf2kyLw/. ",
    "yangmingfa": "Hey  @cornelisonc,\nI also encountered this problem in the use of the project, refer to your suggestion, found that the use of swal2-show did not take effect, after reading the source code, changed to use swal2-in after the effective, I use the version is 5.3.3, thank you for your help!\nbody.swal2-in:not(.swal2-no-backdrop):not(.swal2-toast-shown) {\n  overflow-y: visible !important;\n}. ",
    "aamustapha": "I have a component  which can be used for creating a new user.\nIf i do\nthis.$swal({\n          'title': 'Create new customer ',\n          'html': '<user-form></user-form>'\n        })\nThe swal does not have a body. I'm using vuejs. ",
    "feyrkh": "An FYI - this is causing build failures for us. If a resolution to this can possibly be reached sooner than a few days, that would be much appreciated.\n[ERROR] bower sweetalert2#=0.2.1  ENORESTARGET No tag found that was able to satisfy =0.2.1\n[ERROR] \n[ERROR] Additional error details:\n[ERROR] No versions found in https://github.com/limonte/sweetalert2.git. ",
    "arturskeeled": "Meanwhile @JanisGruzis and @feyrkh you can use:\njson\n\"dependencies\": {\n    \"sweetalert2\": \"https://github.com/sweetalert2/sweetalert2.git#7.3.1\"\n}. ",
    "abgaryanharutyun": "@toverux thanks for comment i will take a look. @limonte awesome thanks . ",
    "CesarBalzer": "@acupajoe  thanks for the tip, I did the steps as described, but unfortunately still scrolls, I put in the swal css file, bootstrap, and inline, my custom css nothing apparently changed.. I understand, or one or the other, but testing your example here @acupajoe , I noticed that scrolling still persists, for example, scroll the page to the end and click on the last button, when calling the modal, will scroll the same way. This is making me intrigued.\nTested in firefox 56.03b 64 bits and Chrome Version 63.0.3239.84 (Officiall) 64 bits. I apologize for forgetting button prevention, now it worked perfectly, thank you very much for the attention and the help with the problem.. ",
    "aadriann": "Okey, thanks foe your answer :smile:. You can use a promise:\nswal(\n  {title: 'Modal 1', timer: 2000}).then(function(){\n    swal({title: 'Modal 2', timer: 2000})\n  })\nswal(\n  {title: 'Modal 1', timer: 2000}).then(() => {\n    swal({title: 'Modal 2', timer: 2000})\n  }). Is not it better to use promises to control the execution of both modals, whether you press the button or if the defined time passes?\nUsing setInterval is not a bad practice when you want to do something in the future but do not know exactly when you will be able to do that?\nMaybe we can use swal.clickConfirm or swal.onClose | swal.onOpen to define another swal.\nThanks for the answers, this helps me to know better this library :smile:. ",
    "nickraphael": "You fiddler orders the select as Zac, Nick Dave.  I assume because thats the number order (2,4,10).  But I want it in the order I created the inputOptions (nick, dave, zac).\n. ",
    "redochka": "pretty cname :). Great article about the \"scary\" deps. Thanks a lot. Lesson learned.. not sure how to create the fiddle to reproduce the bug. https://jsfiddle.net/ad3quksn/1134/#&togetherjs=DaemDl8VaB\nthe problem has something to do with the table width. I noticed when some table TD contain very long string, the problem happens.\nis it ok to give you an URL with username/password of the page where the problem is happening? . @limonte Sorry for the delay, test credentials sent to you by email. that's my laptop test server, let me know when you need it, i will turn it on.. @limonte The bug has been fixed in fact once i updated to 7.21.0 however, i am noticing a different issue as shown here: http://nimb.ws/IkQT7d\nThe right container (which is loosing its position when sweetalert pops up) is sticky (using a stickyfill polyfill)\nI tried with and without : heightAuto: false\nIs this related to the same OP issue or is it a new issue (new github issue)?. ",
    "jamiesonbecker": "Ok, don't want to really judge how other people architect their build processes. There is a big world beyond NPM. Even beyond the security issues, there are build and speed issues with NPM (and bower, or any other flavor of the month) in some environments. The opportunity cost of engaging in an argument about \"best\" practices was just too high or waiting for a show-stopping bug for us to even be responded to, as well as rewriting all of our modal calls to meet the new incompatible API for v2. In the end, we wished that dev team well and it was just faster to switch from SA1 to our own simple/custom modal library instead of an alternative (not this project).. Just a suggestion - agreed completely that dist doesn't need to be in the repo, but adding dist style minified and unminified files as links to the README might be really helpful for some of your users. (Github offers binary release functionality that supports this.)\nMost Javascript libraries are usually just a single CSS and JS, with maybe a few options for CSS themes or something. Usually, if someone says just add this <script> and <link> (CSS) to your html, I just type wget, and paste the URLs; this pulls down the two files into our repo, and they're automatically included in our builds from then on. Fast and easy and works with all types of JS, packaged or not. When most things can be boiled down to just a file or two, a wget works great.. ",
    "User934903920432": "This PR would allow the user to define as many inputs as they want in a fairly flexible but uniform way using the following format:\nHow would we define multiple inputs with this currently? As I can only see one placeholder for example.\nMaybe for multiple inputs it would be nice to add multiple objects, e.g this would be a nice format:\ninputs = {\n    username: { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  },\n    password: { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  },\n    submit: { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  },\n}\nOr maybe even like this.\n```\nvar username = { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  };\nvar password = { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  };\nvar submit = { label: '', placeholder: '', type: '',  value: '', options: {},  config: {},  validator (value) {}, attributes: {}, classes: '', events: {}  };\nswal({\n    title: 'Form', \n    text: 'Form with multiple fields', \n    type: 'form',\n    inputs: [username, password, submit]\n})\n```\nMaybe also allow us to modify the containers of the input, I'm personally always using bootstrap for forms, but obviously not everyone is using that and might be using different frameworks.\nSo maybe like this ?\n```\nvar username = { label: 'username', placeholder: 'Username', type: 'text' };\nvar password = { label: 'password', placeholder: 'Password', type: 'password' };\nvar submit = { label: 'Sign in', type: 'submit' };\nswal({\n    title: 'Form', \n    text: 'Form with multiple fields', \n    type: 'form',\n    action: 'url',\n    inputs: [username, password, submit],\n    inputContainer: ['form-group row', 'col']\n})\n```\nIn this case it would generate something like this.\n<form action=\"url\">\n    <div class=\"form-group row\">\n        <div class=\"col\">\n            <input type=\"text\" placeholder=\"Username\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col\">\n            <input type=\"password\" placeholder=\"Password\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col\">\n            <button type=\"submit\">Sign in</button>\n        </div>\n    </div>\n<form>\n. Congratulations! Been using it for a while now and really love it. Makes some websites so much cleaner.. Awesome, looks pretty cool. Think that this might be a really nice feature. I'll keep an eye on it.. ",
    "sigma-technology": "I wasn't aware IE didn't support that, so was searching for the 'wrong' things.  Using onOpen: function() { does fix it, thank you.\nSorry for any wasted time!. ",
    "dvijai": "Yes But i want a html param with 2 input and 2 select box, total 4 element in one form working alltogether. seeking help for same with cheer and thanks. ",
    "lukasmedia": "@Vlummy select doenst work, all other types do work. Suggestions?. ",
    "fefoweb": "the solution wrote by @acurrieclark is working!. ",
    "epexa": "my solution:\ncss\n.swal2-container {\n  zoom: 1.5;\n}. my solution:\ncss\n.swal2-container {\n  zoom: 1.5;\n}. ",
    "lvalladares": "This is still happening with 7.15.1 and bootstrap 3. ",
    "sloria": "@limonte Would you be open to changing the default to the system UI font?\ncss\n.swal2-popup {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \n        \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n}\nThis seems a more sensible default than Helvetica Neue.\nIf you're up for it, I can send a PR.. @limonte Done in #847. Let me know if there is anything to be addressed.. Done!. ",
    "rskaarup": "Yes, it works now! Not sure what you did though. IE11 doesnt seem to care about the \u201c=>\u201d\u2019s on your site now.\nChanging\n.then((result) => {\nto\n.then(function(result) {\nworked for me.\nBr\nRasmus\n\nOn 29 Jan 2018, at 10.22, Limon Monte notifications@github.com wrote:\nhttps://sweetalert2.github.io/ https://sweetalert2.github.io/ is now working for IE11, @rskaarup https://github.com/rskaarup please check it out \ud83c\udf89\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/sweetalert2/sweetalert2/issues/858#issuecomment-361185360, or mute the thread https://github.com/notifications/unsubscribe-auth/AiQJZjAuOl2FWf0tokpjlQGLcvtC6Wsxks5tPY25gaJpZM4RwPfH.\n\n\n. ",
    "brian-kilpatrick": "Thanks for reviewing. Yes, the second picture demonstrates that the array that is produced from https://github.com/sweetalert2/sweetalert2/blob/583da6092a5d0ebd1001b3310a838035473768c6/src/utils/dom.js#L166.  and passed to uniqueArray() still has the prototype methods from NodeList still attached, which was my point. Will you merge as is or would you like me to use hasOwnProperty instead?. Thanks guys, and sorry for the confusion, there was some (unknown) legacy code from years ago in the project I maintain that indeed monkey-patched Array.prototype. ",
    "abuzuhri": "Hi  @limonte \nWhy you closed it's not general things it's only in the sweetalert2 ?. ",
    "1ftskank": "Great, thanks for being positive about this @limonte! I'm afraid I have no idea how it's normally done, but you may be able to get some funky js going:\nhttps://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors. Although you might run into other content security policy nightmares if you start changing inline styles programmatically, not sure.. Yeh fair enough, no idea then, sorry.. I've taken the example from @acupajoe and made it so only the background colour changes. It does involve making some changes to the structure of your buttons (so doesn't come under the remit of \"pure CSS solution\", but once the button is in the correct format, it does only use CSS).\nMy solution uses a button as follows:\n<button type=\"button\" class=\"button\">\n  <div class='background'>\n  </div>\n  <div class=\"text\">\n    OK\n  </div>\n</button>\nwith the CSS looking like:\n```\n.button {\n  position: relative;\n  padding: 0;\n}\n.background {\n  background-color: #3085d6;\n  width: 120px;\n  height: 60px;\n}\n.text {\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  position: absolute;\n  color: white;\n  font-size: 30pt;\n  pointer-events: none;\n}\n.background:hover:after,\n.background:active:after {\n  position: absolute;\n  content: \"\";\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.15);\n}\n```\nI haven't got the vertically centering of the text down (I'm sure there is a way though), and it's obviously a bit of a change from the current structure of the DOM, but could be an idea:\nhttps://jsfiddle.net/SamMiller/tc5rymuz/\n. No worries, thanks for fixing! Awesome!. No worries, it's a nice feature!. ",
    "brianushman": "Thanks for the feedback, much appreciated!. ",
    "valentindragan": "Sorry I did not make myself understood in regards with where the problem stands.\nSome of the examples used on Sweet Alert2 demo page include the arrow functions. That is the issue I wanted to report.\nThanks!. ",
    "jamrsim": "\nIndeed, arrow functions aren't supported by IE: https://caniuse.com/#feat=arrow-functions\nYou should either use old-school function syntax: then(function (result) { or use transpiler, e.g. Babel https://babeljs.io/docs/plugins/transform-es2015-arrow-functions/\n\nIt would be extremely helpful to link this comment to https://github.com/sweetalert2/sweetalert2#browser-compatibility. ",
    "RefinedSaltqwe": "I was just using the examples here https://sweetalert2.github.io/ and then just add a button to trigger the swal. \nthis one doesn't work on iOS devices: https://jsfiddle.net/ad3quksn/383/\nthis one works without the .then function: https://jsfiddle.net/ad3quksn/384/ . ",
    "dchekanov": "\nHow about returning false value?\n\nI didn't suggest that initially because it would only work for sync. code. Could it also cause result.value to be falsy in swal().then(), making it look like user clicked \"Cancel\"?\nThank you for @zenflow and @limonte for responding so quickly.\n. Sorry, wrong button :). @zenflow Thank you for clarifying. Looks like a neat solution then \ud83d\udc4d\n. ",
    "josteph": "@limonte Doesn't seem to be working on my end. Clicking cancel button on confirm dialog will not trigger the else statement in swal().then(). Or am I missing something here?\nv.7.24.4. ",
    "anionic": "your link to CONTRIBUTING.md gives me a 404, but I get the idea ;-)\nsee https://jsfiddle.net/anionic/g4be1kxh/. Sorry if I opened a can of worms ;-)  I have a workaround which I'm happy with, using .keypress() instead of .keyup() for which swal behaves just like alert; if you hold the Enter key down for a long time, keyboard repeat hell breaks loose, as it should. To me, keypress seems higher-level that keyup, so it's less \"workaround\" and more \"improved code style\"?. ",
    "Kuzcoo": "Hey,\nI took a look, I guess we could delay states.previousActiveElement.focus() by something like 100ms (too short to be noticeable but delayed enough to not catch the keyup event from the input again).\nActually in the fiddle above, with the native alert, if you keep \"Enter key\" pressed and release it after the focus is set back to the input, you got the same result.. @limonte : \n1. Ok. See my comment above.\n2. Actually it makes sense, thank you for the explanation. But for the icon size I'm quite confused because 80/60 (the div font-size info, warning, question) results to something like 1.3333).\n3. It could have been way simpler for refactoring! However, I am not convinced and it could be misleading since the base-font is set in another file and it forces us to think in px. Maybe it could be misleading. But I think the long decimals could be quite ugly. Maybe we should think to systematize the spaces somehow and sizes to be quite the same and have nice decimals (I saw we have 37, 38, 40, 7, 8px). What do you think ?. @limonte : I'll have a look!. @limonte : I'm glad I could help \ud83d\ude0a . @limonte : My mistake, I was on Firefox and the exclamation mark is too high. On chrome though it's ok. I guess it depends on font used. If I set it to Arial for example it seems ok.\nI will set it back to $swal2-icon-size, and maybe we could investigate on this difference beteween browsers (if you can reproduce the issue).. ",
    "emaildano": "@acupajoe \nI'm looking more at the swal API options. It's possible to change the button colors with the options but not the icon color.\nSomething like this:\niconColor: '#333', since we have confirmButtonColor: '#3085d6',\nswal({\n  title: 'Are you sure?',\n  text: \"You won't be able to revert this!\",\n  type: 'warning',\n  showCancelButton: true,\n  confirmButtonColor: '#3085d6',\n  cancelButtonColor: '#d33',\n  iconColor: '#333',\n  confirmButtonText: 'Yes, delete it!'\n}).then((result) => {\n  if (result.value) {\n    swal(\n      'Deleted!',\n      'Your file has been deleted.',\n      'success'\n    )\n  }\n}). I see this isn't a current feature but would it be open to it or a PR?. @limonte \n\nIt doesn't make sense to add more js params for styling\n\nCorrect me if I'm wrong but currently there are two options. This addition makes it 3, not a zillion. If all default params were able to be overridden it would be the following:\n\nButtons Cancel\nButton Confirm\nBackground Color\nIcons Color\n\n4 < than a zillion\nAt any rate, thanks for the feedback!. ",
    "cassianomon": "Thank you @limonte @toverux and all the other guys, I mention you two because I see you answering questions and helping people everyday, even outside of sw2! \u2764\ufe0f . ",
    "Ragers": "@samturrell thanks, exactly what I needed.. ",
    "mukeshgupta": "This error is on ngDestory function. ",
    "tdeignan": "Thank you!. Hi, it seems that swal.isVisible() is always returning true when this animation function is called. ",
    "billgeek": "Forgive my ignorance on this, though what is the benefit or reason for replacing the declared and exported types with inline types (Specifically SweetAlertInputType) and what would be the suggested route forward with regards to removing the exposed types?\nI previously created a \"wrapper\" for alerts to render consistent alerts and one of the arguments was the input type.. Perfect, thanks!. ",
    "monkeywithacupcake": "I was not sure if you wanted to incorporate the Donors on Open Collective and other platforms, so I just kept them separate. . Actually this is a dependency and not a dev dependency. It makes a network request. Two alternatives:\nOne user made a lighter version of the post install: https://github.com/WebReflection/lightercollective\nYou can also remove the dependency altogether: https://github.com/remy/nodemon/blob/master/package.json#L42. ",
    "rkyoku": "@zenflow Yes I'm calling swal.clickCancel() for now ;-)\nBut before that, I was calling swal.close() and I was wondering why my popup would not open a second time. I have a hidden div somewhere that I put inside the popup during onBeforeOpen and that I put back inside body during onClose. The onClose callback not being called, my div was purely being removed from the DOM ^^\nFeel free to fix this whenever you deem reasonable, as it is non-blocking (it works with clickCancel, as stated).\nRegarding your last question, please don't mock me, but I'm not using promises because my Grunt TS plugin would not recognize it (which saddens me regarding the inputValidator feature when mimicking a prompt).\nIsn't the Promise already returning some data with a property like dismiss or something? (which informs the reason the popup was closed, when applicable, and allows for a more fine-grained behavior)\n. IMHO, it should always provide an information regarding what triggered it (cancel button, close button, click on overlay, validation, whatever).\nIt does not cost anything (I think) to do it, and it provides information that may be of value in some cases.\nWhat do you think?. You're probably right not to mix end-user and developer actions, and I guess your solution should be fine and would allow the exact same granularity!\nAgain, I am not used to swal internal code, but from an external POV, what you are suggesting makes perfect sense :). ",
    "FranciscoG": "Hi, coming here from the reddit discussion\n\nit screws up scroll position on mobile when it opens\nUsing the Reddit app embedded browser on an iPhone X with the latest OS\n\nI'm on iOS 11.2.5 and I downloaded the reddit app to test out what's happening and this is what I see:\nWhen I tap one of the buttons to show a SWAL box the bottom of the screen jumps up to what looks like the exact height of the iOS Safari bottom nav toolbar.  If you look at the site on iOS and you start scrolling enough so that the bottom toolbar goes away, tap on a button to show a SWAL and the \nbottom toolbar pops up again.  \nis this what the user meant by \"screws with the scroll position\" ?\nAre you doing anything in JS to make that toolbar show up on iOS or is iOS handling automatically in response to some JS method your firing? It looks like that toolbar is disabled in embedded browser so you're just seeing white space\n. ",
    "davalapar": "This is gonna be lit.\nSome two cents I'm an avid user of Material UI and one of the things that stood out for me is their theme styling approach, which is as simple as setting some primary / secondary color values. Code example below:\n```js\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: {\n      main: '#f44336',\n    },\n  },\n});\n```\nat https://material-ui.com/style/color/ they also got color swatches which are fun to play with.\nImho to be able to configure basic colors to element css to animation stuff in one place in js at get to sync them easily with other ui frameworks like material ui would be lovely as hell.. That's fucking gangsta, thanks a lot!. ",
    "Yasirmacrosoft": "Yesterday I also provide the solution of this issue and pushed the code also. \nBut I couldn't see my name in list of collaboration . ",
    "javaProgrammer44": "This is Yasir Shabbir and  it's my other account which I provided solution of it.\nYesterday I also provide the solution of this issue and pushed the code also.\nBut I couldn't see my name in list of collaboration. 937 Issue Fixed on specifically on IE . ",
    "vsspt": "Would it be possible to implement the behavior i was expecting using the Queue functionality?. ",
    "guitar9": "i cant reproduce it with JSfiddle.\nI use Version 61.0.3163.79 \nThis is my style output:\n\n\n```\nanimation-delay:\n0s\n;\nanimation-direction:\nnormal\n;\nanimation-duration:\n0.3s\n;\nanimation-fill-mode:\nnone\n;\nanimation-iteration-count:\n1\n;\nanimation-name:\nswal2-show\n;\nanimation-play-state:\nrunning\n;\nanimation-timing-function:\nease\n;\nbackground-attachment:\nscroll\n;\nbackground-clip:\nborder-box\n;\nbackground-color:\nrgb(255, 255, 255)\n;\nbackground-image:\nnone\n;\nbackground-origin:\npadding-box\n;\nbackground-position-x:\n0%\n;\nbackground-position-y:\n0%\n;\nbackground-repeat-x:\n;\nbackground-repeat-y:\n;\nbackground-size:\nauto\n;\nborder-bottom-left-radius:\n4.0625px\n;\nborder-bottom-right-radius:\n4.0625px\n;\nborder-top-left-radius:\n4.0625px\n;\nborder-top-right-radius:\n4.0625px\n;\nbox-sizing:\nborder-box\n;\ncolor:\nrgb(115, 135, 156)\n;\ndisplay:\nflex\n;\nflex-direction:\ncolumn\n;\nfont-family:\n\"Helvetica Neue\", Roboto, Arial, \"Droid Sans\", sans-serif\n;\nfont-size:\n13px\n;\nfont-weight:\nnormal\n;\nheight:\n212.875px\n;\njustify-content:\ncenter\n;\nline-height:\n19.123px\n;\nmax-width:\n100%\n;\noverflow-x:\nhidden\n;\noverflow-y:\nauto\n;\npadding-bottom:\n16.25px\n;\npadding-left:\n16.25px\n;\npadding-right:\n16.25px\n;\npadding-top:\n16.25px\n;\nposition:\nrelative\n;\ntext-align:\ncenter\n;\ntext-size-adjust:\n100%\n;\nwidth:\n416px\n;\n32em.swal2-popup\u2026\n-webkit-box-direction:\nnormal\n;\n-webkit-box-orient:\nvertical\n;\n-webkit-box-pack:\ncenter\n;\n-webkit-tap-highlight-color:\nrgba(0, 0, 0, 0)\n;\n```\n\n. had found my mistake. I have overwritten css span element. \nCan be closed. ",
    "rafaelss95": "Hey @toverux, yes, I'd like to submit a PR, however I have a last question:\nWon't be strange if the inputValue only acceptsstring, since it can return a numeric value, for example, which is the case of checkbox?\nSee this example (just open console and press \"Continue\").. @toverux Just submtted a PR. Please, have a look and let me know if I'm missing something... I'd go with the first option also.\n/**\n * @default undefined\n */\nimageUrl?: string;. Done. I've removed this change. Take a look please :). ",
    "fklingler": "Sorry, I can't seem to reproduce this issue. I'm closing this!. ",
    "Lunatig": "thank you i tried to reproduce error and found that its my falt. \nthe reason was in tabindex=\"-1\" attribute of parent container with button .\nis it bag or not? if its bag a can write all code here. but if its normal thank for help.. ",
    "antoninadert": "Hello @limonte  and thanks for looking into this.\nFrom my experience but I'm not a dev, the second issue can be linked to a problem of focus (focused element being announced first), \nRegarding the label itself, JAWS announced it as 'clickable' so I would look into this. I suspect it is not because of the div tag itself (because if I move it to the root of the DOM, it just announces the label)\n, but rather how JAWS handles the aria-modal (on the encompassing tag).\nIn general, be very cautious with all aria-role and aria-modal, as they behave unexpectedly and are often used incorrectly.\nRegarding the checkbox stuff , I believe it is linked to this: \n<label for=\"swal2-checkbox\" class=\"swal2-checkbox\" style=\"display: none;\"><input type=\"checkbox\"></label>\nAs you see the input type checkbox doesn't have display:none or aria-hidden. I believe JAWS doesn't care about the parent tag here, so it could be the cause.\nJAWS is a mess to work with (sadly, it has tons of inconsistencies in the way it handles DOM), it does things in a different way than you could expect, but as you said people use it (and it's mainly because companies buy the licence for their employees. Most blind users I know will use an iPhone or a Mac !)\nThe best way I found to work with JAWS bugs, was a simple codepen and manual testing.\nI hope you'll find a way\n. I don't have a lot of time but here is my quick try:\n<div class=\"swal2-container swal2-center swal2-fade swal2-shown\" style=\"-ms-overflow-y: auto;\">\n  <div class=\"swal2-popup swal2-modal swal2-show\" style=\"display: flex;\">\n    <div class=\"swal2-header\">\n      <ul class=\"swal2-progresssteps\" style=\"display: none;\"></ul>\n      <div class=\"swal2-icon swal2-error\" style=\"display: none;\">\n        <span class=\"swal2-x-mark\">\n          <span class=\"swal2-x-mark-line-left\"></span>\n          <span class=\"swal2-x-mark-line-right\"></span>\n        </span>\n      </div>\n      <div class=\"swal2-icon swal2-question\" style=\"display: none;\">\n        <span class=\"swal2-icon-text\">?</span>\n      </div>\n      <div class=\"swal2-icon swal2-warning\" style=\"display: none;\">\n        <span class=\"swal2-icon-text\">!</span>\n      </div>\n      <div class=\"swal2-icon swal2-info\" style=\"display: none;\">\n        <span class=\"swal2-icon-text\">i</span>\n      </div>\n      <div class=\"swal2-icon swal2-success swal2-animate-success-icon\" style=\"display: flex;\">\n        <div class=\"swal2-success-circular-line-left\" style=\"background-color: rgb(255, 255, 255);\"></div>\n        <span class=\"swal2-success-line-tip\"></span>\n        <span class=\"swal2-success-line-long\"></span>\n        <div class=\"swal2-success-ring\"></div>\n        <div class=\"swal2-success-fix\" style=\"background-color: rgb(255, 255, 255);\"></div>\n        <div class=\"swal2-success-circular-line-right\" style=\"background-color: rgb(255, 255, 255);\"></div>\n      </div>\n      <img class=\"swal2-image\" style=\"display: none;\">\n      <h2 class=\"swal2-title\" id=\"swal2-title\">Good job!</h2>\n      <button class=\"swal2-close\" style=\"display: none;\" type=\"button\">\u00d7</button>\n    </div>\n    <div class=\"swal2-content\">\n      <div>You clicked the button!</div>\n    </div>\n    <div class=\"swal2-actions\" style=\"display: flex;\">\n      <button class=\"swal2-confirm swal2-styled\" style=\"border-right-color: rgb(48, 133, 214); border-left-color: rgb(48, 133, 214);\"\n        aria-label=\"\" type=\"button\">OK</button>\n      <button class=\"swal2-cancel swal2-styled\" style=\"display: none;\" aria-label=\"\" type=\"button\">Cancel</button>\n    </div>\n    <div class=\"swal2-footer\" style=\"display: none;\"></div>\n  </div>\n</div>\nI removed a lot of stuff regarding the content (stuff that was in the DOM) and apparently it doesn't say 'clickable' anymore. I don't know what caused this 'clickable' thing to be read, so you might try to add things back incrementally until it breaks.\n(sadly I didn't have a codepen so I tried with the inspector, but with IE I suspect the DOM does not update with JAWS in a consistent manner, so it may be tricky). Well I did another test: \n\nI added a random DIV below the first swal container, and now it doesn't read the 'clickable' in the 'you clicked the button' label below.\nThe weird thing is that if I remove this  'LOL' label from the inspector, it doesn't read clickable afterwards...\nNo clue why. @limonte If you make any progress on this please tell me and I can test. I just need a demo URL or a codepen. The NVDA issue probably covers the fact you have to use aria-hidden on the whole HTML except the div of the modal. \nOther issues remain here, but probably are shared with NVDA as well. . Hello everyone as issue #1010 has been closed, what is the progress done on this one? . Hello @limonte I tried the first sweetalert on your official website and it correctly locked the focus inside the modal (very good !)\nI tested with JAWS 16.0 and IE 11\nNow I will tell you what it reads and where is the focus (in bold):\nAt opening, what is read automatically without user action: \n\n\n\"Good job heading level 2. Clickable\"\n\"OK Button\"\n\n\nAt pressing down arrow:\n\n\n\"OK Button\" \n\n\n: OK button took focus\nBy going from top to bottom:\n\n\n\"Good job heading level 2. Clickable\"\n\"You clicked the button. Clickable\"\n\"Checkbox not checked\n\"OK Button\"\n\n\n\nNow: What I would expect to be read:\nAt opening, what is read automatically without user action: \n\n\n\"Good job heading level 2\"\n\"You clicked the button.\n\"OK Button\"\n\n\nAt pressing down arrow:\n\n\n\"You clicked the button. \n\"OK Button\" \n\n\n: Good Job (H2) should take focus\nBy going from top to bottom:\n\n\n\"Good job heading level 2\"\n\"You clicked the button\"\n\"OK Button\". Sadly I am not able to perform an update as of now.... You need to pay all major updates. . If you need money tell us how much to remove it . \n\n",
    "pierlon": "@samturrell Alright cool.. ",
    "firstdoit": "Thanks!!. ",
    "Skypow2012": "OK, i find swal.close() for fix my issue, thank you for your time. ",
    "Baune8D": "@limonte PR created #1005 . @zenflow Yeah i see your point. Have a look at my latest commit. \nonClose has been moved further up in the function and made sync so it will always run before the actual disposal of the modal happens.\nonAfterClose will now run async after the modal has been disposed.\nI updated the tests to reflect this.\nIt might be a problem that onClose runs differently now, if someone is dependent on the old behaviour.. @zenflow travis-ci gives a weird error? Relevant tests seems to succeed though. @limonte Happy to help out! :). @limonte Cool! Would it be possible to mention me in the contributors section of the readme? It would mean a great deal to me :). @limonte No worries, i will just have to contribute again soon then :). ",
    "TivoCorrmat": "It's ok to close it. I forgot to come back and give details on the request. I've been looking over the forums and WCAG specs, and it seems it's not considered the \"norm\" to do so. It's been a requirement given to us by a11y experts, but it seems like it's more of a \"nice to have\" than a \"must have\". We've developed a solution for it on our instance. Basically, we're creating a loop where the user cycles between elements of the modal so it never claims end of the document. Let me know if you'd be interested into making it an option in settings though.. ",
    "jesusaugusto0x2": "And how would be this implemented? I have a queue swal and have no idea on doing it :( please help!. @gverni Hey! I just posted it\nhttps://stackoverflow.com/questions/53133717/sweetalert2-multiple-input-validation\nThanks for answering! I really need help on this \ud83d\udc4d . ",
    "mqliutie": "Why restart the webpack server the error gone? . ",
    "vanboom": "I had an old version of node and used this guide to update: https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version. ",
    "aphofstede": "https://github.com/jsdom/jsdom/issues/2131. Seems to work \ud83d\udc4d. Still works. ",
    "tapz": "This is causing it:\nspan {\n    font: normal 14px/18px 'Montserrat', helvetica, sans-serif;\n}\nhttps://jsfiddle.net/ad3quksn/931/. ",
    "Ianpwest": "Haha, IE11 strikes again! It's not a huge deal for me as I can just use the text as a label instead of placeholders for a workaround.. ",
    "alamin3000": "I had commented indicating that HTML5 input types has nothing to do with your library supporting IE11 or so on. Just like how ElementUI and other library simply passthrough the input type user wants to use. But later removed the comment thinking since the PR is closed it was pointless.\nAnyway I updated the code to support all other input types.  If you want me to change something or write differently let me know.  I used array because list is too big and it is easier to generate the error message.. > I still think that we shouldn't support features which are supported by limited browsers.\nThis isn't a feature you need to support.  Your library isn't about html input controls.  It's an alert box... and you are letting people put any HTML5 input control there.  Anyway, I respect your opinion, but don't quite see your point/agrument and thus already moved on with different library.\n. Element UI.  I am only using individual MessageBox and Loading indicator components.  Their API for alert/prompt is very similar to yours.  but you can put 'date' in the inputType field.  If browser doesn't support date then at worse they will see an textbox.  So it isn't like your library won't work with IE11/Safari.  \nhttp://element.eleme.io/#/en-US/component/message-box\n. ",
    "Niladri24dutta": "@legionio  you can replace the value of preConfirm property like the below fetch api call for making an Ajax call. Check the example for Dynamic queue.\npreConfirm: () => {\n\n    return fetch(\"api_URL\")\n\n      .then(response => response.json())\n\n      .then(data => console.log(data)),\n\n      .catch(() => {\n\n        swal({\n\n          type: 'error',\n\n          title: 'Unable to get data'\n\n        })\n\n   )}\n\n. ",
    "proevilz": "@Niladri24dutta Hey, thanks for the example!\nI finally figured it out in the end but what I found confusing was regarding errors. \nMore specifically when working with Laravel. Laravel has a Validator() function that sends back a response as status:422 for an error. The Fetch API doesn't consider it an error so the catch() wouldn't pick it up. \nSince catch() wouldn't run naturally, I had to throw error() to trigger it. The problem was to get the actual validation error messages and use those as the error parameter. \nYou need to run response => response.json() to get the messages so I posted on SO as I couldn't figure out how to essentially do this throw Error( response => response.json() );\nThis was the answer put forward, which works.\nfetch(...)\n  .then((response) => {\n    return response.json()\n      .then((json) => {\n        if (response.ok) {\n          return Promise.resolve(json)\n        }\n        return Promise.reject(json)\n      })\n  })\nDo you think that is the most efficient and proper way of doing it?. @limonte  Thank you for SweetAlert2! ;). ",
    "victornpb": "bootstrap locks focus to only elements inside the modal, so using swal({target: modalBodyElement}) makes buttons focusable again, but it puts the backdrop inside the modal, so clicking outside, actually triggers the modal to be dismissed. So the desired behavior would be to only put the swal box inside the target, and continue to append the backdrop to body.\nAnd seconds issue is regarding esc key, swal should stop propagation.. This should be the way to handle keydown\n```js\ndocument.addEventListener('keydown', function(e){\n     //if esc \n     e.preventDefault();  \n     e.stopPropagation();\n}, true); //use capture so it triggers before bootstrap\n```\nIs there any good reason for sweetalert2 to use the old Element.onevent properties instead of addEventListener?\nI would open a PR, but I tried to reason about the project structure and I don't even know where to start... at least I couldn't figure out any straightforward life cycle phases like init and destroy, that events are registered and teared down. Not really a solution, because that allows user to focus on elements that are unreachable.\nSee jsfiddle: https://jsfiddle.net/Victornpb/c1eyd94v/2/\nAnyway what about the ESC issue? do you want me o open a new issue just for that?\n. ",
    "lazaronixon": "Working on 7.1.1. Yes it worked with https://unpkg.com/babel-polyfill@6.26.0/browser.js. Thanks. ",
    "proProbe": "@zenflow I could look into it a bit further. Unfortunately, I do not have the time right now. The fire typing is quite trivial though.. ",
    "lucasumberto": "It was a wrong parameter on the confirm swall\nhere is the Fix for the jsfiddle:\nSwal({\n       title: \"It was deleted!\", \n       type: \"success\",\n       confirmButtonText: \"Ok!\",                                  \n       });\n. ",
    "glaucomorais": "Thanks, @limonte .. ",
    "vincent-cm": "@limonte I consider it is not a dup of not supporting ng6. Actually, it works well on AoT without production build.. @toverux Did you tried to build AoT for production? It is working in dev mode only in my setting.. ",
    "nuvoPoint": "We have the same issue, but it will work if you turn off sourcemaps in production - which is not optimal in our setup.. ",
    "mattrenaud": "For anyone coming here that is still having this issue with source maps, here is my assessment: typescript is throwing up while parsing the massive css concatenation at the end of the sweetalert2.all.js file. Because of the size of the expression, the process is tipped over the edge of its call stack limits. I noticed some people get this issue and some don't. I believe this is because the amount of data the stack takes up is dependent on many factors: OS, project setup, environment, etc. I found that two things work around the problem:\n1) Import the styles and js separately as described in the README.md\n\nIt's possible to import JS and CSS separately, e.g. if you need to customize styles:\n```js\nimport swal from 'sweetalert2/dist/sweetalert2.js'\nimport 'sweetalert2/src/sweetalert2.scss'\n```\n\n2) A less savory approach is to increase the default stack size in node temporarily when doing a build. Something like:\nNOTE: BE CAREFUL WITH THIS!!\n$ node --stack_size=1968 ./node_modules/.bin/ng build --prod\nI'm on MacOS and used $ ulimit -a to make sure I was under the system limit. You may want to do something similar. Otherwise you may get segmentation faults.\nIf you are using ngx-sweetalert2 or something similar you may have to go with 2) or fork the repo and patch 1) yourself until it is fixed.\n. ",
    "wangbang0218": "it make const swal = require('sweetalert2') be const sweetalert = require('sweetalert2').Sweetalert2\nbecause typeof exports === 'object' && typeof module !== 'undefined' false. Rollup use output: {\n    file: 'bundle.es.js',\n    format: 'es'\n  } for bundling another es bundle\nRollup submit the 'module' proposal, webpack is already supported 'module' in bundling\nConfig package.json like {\n  \"main\": \"dist/dist.js\",\n  \"module\": \"dist/dist.es.js\"\n}\nTwo supports in one package maybe better. ",
    "ganeshshrivas": "HOW I need to fix . I mean I am still facing these issue in IE so how can I fix in my app. ",
    "darron1217": "The \"moment\" is quite long ...\nIt might be quite simple work isn't it?. ",
    "Okipa": "Perfect, thanks a lot !. ",
    "rolasazcorra": "I'm using version 7.32.2 for angular https://www.npmjs.com/package/sweetalert2 and this parameter works but only with the main alert, when I click in cancel or ok and the new alert shows up then the height-auto class appears again. . ",
    "zb2oby": "i could not figure it out with preConfirm but by selecting the selected option adding #swal2-content like this : $('#swal2-content #mySelect option:selected').val()\nnow i have the correct value\n. ",
    "inesEl": "Can you even take a minute before closing the issue ? If you look closely, it is a guide for migrating from version 1 to version 2. It is mentioning the breaking changes in the new version. Besides, that link that I mentioned is stated here https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2. So if that's irrelevant, it souldn't be there. Finally, it still doesn't answer my main question, is the buttons parameter not available in sweetalert2 anymore ?. @acupajoe ok thank you.. ",
    "paolog22": "same. this is already reported but got nothing.. @limonte nuxt uses \n\n\"uglifyjs-webpack-plugin\": \"^1.2.5\". \n",
    "BrOrlandi": "I have the same error here after I build it for production. \nEdit: It seem to occur since the version 7.18.\nI'm now using the version 7.17 without the 'sweetalert2-react-content' plugin, and it's working in production.\nHope this info helps.. ",
    "sahabatcoding": "after I tried to try for 2 days. I've found the answer from my case\nThank you @limonte \nlink is the answer of my case\n.then ((result) => { \nI change to \n.then (function (result) {. ",
    "TrendyTim": "you're welcome, lucky i was looking to see if this suited my needs better than the original swal when i did :). ",
    "AmitGuptaMT": "I confirm that it is working now. Thanks @limonte :). ",
    "altbdoor": "@limonte yeah, I am using the same temporary solution as well \ud83d\ude04 thanks!\nTo test things out, I have forked the sweetalert2-parcel-demo repo, and did a fresh npm install and npm build. It seems to be getting the same issue as reported.\nhttps://altbdoor.github.io/sweetalert2-parcel-demo/dist/. Hi @zenflow \nNope, there was no particular use-case. I was only trying to import the src since that was how it was documented on the site to import sweetalert before this.. ",
    "anish-techpro": "is this issue fixed??. https://jsfiddle.net/5jrf7cLy/27/\nin this fiddle,\n1. launch the modal\n2. click \"Save Changes\" button\n3. click 'ok' in the swal\nrepeat steps 2 & 3 for more than once or twice and you will see that the padding in the body getting increased, but on clicking 'ok' in the swal the padding is not removed.\nplease check. . ",
    "varyzheng": "Alright, I never contribute code before, so I am unfamiliar with this process. I will open an issue next time.\nBut I think, timer alert is really uncommon, but if the timer alert has popped up, a countdown display is a better choice.. ",
    "coveralls": "Pull Request Test Coverage Report for Build 3603\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n81 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.09%) to 78.856%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 81 | 78.86% |\n | **Total:** | **81** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3600: |  -0.09% |\n| Covered Lines: | 979 |\n| Relevant Lines: | 1175 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3613\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.2%) to 79.074%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3604: |  0.2% |\n| Covered Lines: | 981 |\n| Relevant Lines: | 1175 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3619\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+1.2%) to 80.272%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3616: |  1.2% |\n| Covered Lines: | 995 |\n| Relevant Lines: | 1175 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3696\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n95 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+1.7%) to 85.683%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 95 | 85.68% |\n | **Total:** | **95** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3693: |  1.7% |\n| Covered Lines: | 1043 |\n| Relevant Lines: | 1156 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3707\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.53%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3705: |  0.0% |\n| Covered Lines: | 1074 |\n| Relevant Lines: | 1144 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4519\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n20 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.01%) to 90.489%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 20 | 90.49% |\n | **Total:** | **20** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4517: |  -0.01% |\n| Covered Lines: | 1136 |\n| Relevant Lines: | 1206 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3732\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n27 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.07%) to 89.661%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 27 | 89.66% |\n | **Total:** | **27** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3729: |  -0.07% |\n| Covered Lines: | 1084 |\n| Relevant Lines: | 1155 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3769\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.617%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3746: |  0.0% |\n| Covered Lines: | 1085 |\n| Relevant Lines: | 1156 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3779\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n43 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.1%) to 90.066%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 43 | 90.07% |\n | **Total:** | **43** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3774: |  0.1% |\n| Covered Lines: | 1103 |\n| Relevant Lines: | 1171 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3814\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.153%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3809: |  0.0% |\n| Covered Lines: | 1105 |\n| Relevant Lines: | 1173 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3831\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n47 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 90.137%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 47 | 90.14% |\n | **Total:** | **47** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3819: |  -0.02% |\n| Covered Lines: | 1103 |\n| Relevant Lines: | 1171 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3852\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n34 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.01%) to 90.126%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 34 | 90.13% |\n | **Total:** | **34** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3848: |  -0.01% |\n| Covered Lines: | 1101 |\n| Relevant Lines: | 1169 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3878\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 88.907%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3875: |  0.0% |\n| Covered Lines: | 1118 |\n| Relevant Lines: | 1208 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 3997\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 88.907%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 3993: |  0.0% |\n| Covered Lines: | 1118 |\n| Relevant Lines: | 1208 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4011\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n51 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.2%) to 89.149%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 51 | 89.15% |\n | **Total:** | **51** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4006: |  0.2% |\n| Covered Lines: | 1128 |\n| Relevant Lines: | 1218 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4033\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.58%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4031: |  0.0% |\n| Covered Lines: | 1133 |\n| Relevant Lines: | 1216 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4047\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n37 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 89.608%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 37 | 89.61% |\n | **Total:** | **37** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4034: |  0.03% |\n| Covered Lines: | 1138 |\n| Relevant Lines: | 1221 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4109\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n22 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.01%) to 89.608%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 22 | 89.61% |\n | **Total:** | **22** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4105: |  0.01% |\n| Covered Lines: | 1138 |\n| Relevant Lines: | 1221 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4131\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.608%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4129: |  0.0% |\n| Covered Lines: | 1138 |\n| Relevant Lines: | 1221 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4190\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n40 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 89.479%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 40 | 89.48% |\n | **Total:** | **40** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4177: |  -0.03% |\n| Covered Lines: | 1158 |\n| Relevant Lines: | 1241 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4202\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n11 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.04%) to 89.517%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 11 | 89.52% |\n | **Total:** | **11** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4201: |  0.04% |\n| Covered Lines: | 1161 |\n| Relevant Lines: | 1244 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4214\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.545%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4211: |  0.0% |\n| Covered Lines: | 1164 |\n| Relevant Lines: | 1247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4227\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.545%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4221: |  0.0% |\n| Covered Lines: | 1164 |\n| Relevant Lines: | 1247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4234\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 89.555%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4231: |  0.01% |\n| Covered Lines: | 1164 |\n| Relevant Lines: | 1247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4237\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.555%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4235: |  0.0% |\n| Covered Lines: | 1164 |\n| Relevant Lines: | 1247 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4243\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n11 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 89.588%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 11 | 89.59% |\n | **Total:** | **11** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4238: |  0.03% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4252\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.588%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4248: |  0.0% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4254\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.588%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4248: |  0.0% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4266\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.588%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4255: |  0.0% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4271\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.588%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4268: |  0.0% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1249 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4315\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n31 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.003%) to 89.72%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 31 | 89.72% |\n | **Total:** | **31** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4313: |  0.003% |\n| Covered Lines: | 1181 |\n| Relevant Lines: | 1264 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4332\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.763%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4327: |  0.0% |\n| Covered Lines: | 1188 |\n| Relevant Lines: | 1272 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4335\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n31 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 89.794%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 31 | 89.79% |\n | **Total:** | **31** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4327: |  0.03% |\n| Covered Lines: | 1192 |\n| Relevant Lines: | 1276 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4340\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n42 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.02%) to 89.769%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 42 | 89.77% |\n | **Total:** | **42** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4336: |  -0.02% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4343\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.769%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4341: |  0.0% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4347\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.01%) to 89.78%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4344: |  0.01% |\n| Covered Lines: | 1196 |\n| Relevant Lines: | 1280 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4354\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.3%) to 90.08%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4351: |  0.3% |\n| Covered Lines: | 1201 |\n| Relevant Lines: | 1280 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4369\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n44 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.08%) to 89.857%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 44 | 89.86% |\n | **Total:** | **44** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4361: |  0.08% |\n| Covered Lines: | 1211 |\n| Relevant Lines: | 1295 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4367\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.78%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4361: |  0.0% |\n| Covered Lines: | 1196 |\n| Relevant Lines: | 1280 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4373\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n2 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.03%) to 89.754%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 2 | 89.75% |\n | **Total:** | **2** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4370: |  -0.03% |\n| Covered Lines: | 1193 |\n| Relevant Lines: | 1277 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4398\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.754%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4393: |  0.0% |\n| Covered Lines: | 1193 |\n| Relevant Lines: | 1277 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4420\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.774%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4418: |  0.0% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4429\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.3%) to 90.075%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4421: |  0.3% |\n| Covered Lines: | 1200 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4446\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.774%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4443: |  0.0% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4454\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.774%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4443: |  0.0% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4452\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n30 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.03%) to 89.807%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 30 | 89.81% |\n | **Total:** | **30** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4450: |  0.03% |\n| Covered Lines: | 1178 |\n| Relevant Lines: | 1262 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4453\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 89.774%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4450: |  0.0% |\n| Covered Lines: | 1195 |\n| Relevant Lines: | 1279 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4468\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n22 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.06%) to 90.66%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 22 | 90.66% |\n | **Total:** | **22** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4466: |  -0.06% |\n| Covered Lines: | 1152 |\n| Relevant Lines: | 1221 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4486\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n19 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.1%) to 90.72%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 19 | 90.72% |\n | **Total:** | **19** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4484: |  0.1% |\n| Covered Lines: | 1135 |\n| Relevant Lines: | 1203 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4490\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.504%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4489: |  0.0% |\n| Covered Lines: | 1123 |\n| Relevant Lines: | 1192 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4492\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.504%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4491: |  0.0% |\n| Covered Lines: | 1123 |\n| Relevant Lines: | 1192 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4494\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.504%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4493: |  0.0% |\n| Covered Lines: | 1123 |\n| Relevant Lines: | 1192 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4516\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n22 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.04%) to 90.499%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 22 | 90.5% |\n | **Total:** | **22** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4511: |  0.04% |\n| Covered Lines: | 1120 |\n| Relevant Lines: | 1189 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4506\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n16 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.04%) to 90.463%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 16 | 90.46% |\n | **Total:** | **16** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4497: |  -0.04% |\n| Covered Lines: | 1115 |\n| Relevant Lines: | 1184 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4542\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.489%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4540: |  0.0% |\n| Covered Lines: | 1136 |\n| Relevant Lines: | 1206 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4558\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.595%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4555: |  0.0% |\n| Covered Lines: | 1137 |\n| Relevant Lines: | 1206 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4567\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.595%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4560: |  0.0% |\n| Covered Lines: | 1137 |\n| Relevant Lines: | 1206 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4584\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n37 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.3%) to 90.245%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 37 | 90.25% |\n | **Total:** | **37** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4571: |  -0.3% |\n| Covered Lines: | 1157 |\n| Relevant Lines: | 1231 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4580\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.005%) to 90.6%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4571: |  0.005% |\n| Covered Lines: | 1138 |\n| Relevant Lines: | 1207 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4624\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.615%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4622: |  0.0% |\n| Covered Lines: | 1139 |\n| Relevant Lines: | 1208 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4635\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n22 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.05%) to 90.674%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 22 | 90.67% |\n | **Total:** | **22** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4632: |  0.05% |\n| Covered Lines: | 1146 |\n| Relevant Lines: | 1215 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4636\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.625%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4632: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4643\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage increased (+0.05%) to 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4639: |  0.05% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4650\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4648: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4653\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4651: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4657\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4651: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4667\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4666: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4674\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4669: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4696\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 90.678%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4675: |  0.0% |\n| Covered Lines: | 1141 |\n| Relevant Lines: | 1210 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4700\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n27 unchanged lines in 1 file lost coverage.\nOverall coverage increased (+0.5%) to 91.193%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 27 | 91.19% |\n | **Total:** | **27** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4675: |  0.5% |\n| Covered Lines: | 1166 |\n| Relevant Lines: | 1231 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4719\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n15 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.01%) to 91.118%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 15 | 91.12% |\n | **Total:** | **15** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4717: |  -0.01% |\n| Covered Lines: | 1163 |\n| Relevant Lines: | 1228 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4721\n\n0 of 0   changed or added relevant lines in 0 files are covered.\n13 unchanged lines in 1 file lost coverage.\nOverall coverage decreased (-0.005%) to 91.113%\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| dist/sweetalert2.js | 13 | 91.11% |\n | **Total:** | **13** |  | \n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4720: |  -0.005% |\n| Covered Lines: | 1162 |\n| Relevant Lines: | 1227 |\n\n\ud83d\udc9b  - Coveralls\n. ## Pull Request Test Coverage Report for Build 4725\n\n0 of 0   changed or added relevant lines in 0 files are covered.\nNo unchanged relevant lines lost coverage.\nOverall coverage remained the same at 91.113%\n\n\n|  Totals |  |\n| :-- | --: |\n| Change from base Build 4722: |  0.0% |\n| Covered Lines: | 1162 |\n| Relevant Lines: | 1227 |\n\n\ud83d\udc9b  - Coveralls\n. ",
    "nicolasvahidzein": "Hello, i'm using the version 0.7.1 of bulma and your latest build of sweetalert2.\nI don't even know where to begin with jsfiddle. I have never used it before and loading all the packages i have on my ERP seems like an insane amount of work.\nwhat do you suggest?. I was curious to see if it was working ok when i walked the versions back.\n7.0.9 works great\n7.20.9 is broken as well.\nI'm trying 7.13.0 now and will revert back.. Nope, will try that now, i never even saw that variable. I'll test it ASAP. Thanks!!. You are brilliant sir. Thank you. That seems to have solved it.. Ok thank you very much Sir. Doing it now.. You sir are Brilliant!!!!. my apologies, i found it at the bottom.. Hello Limonte, it is not working.\nI added the code you recommended but i'm still getting the chrome error and i'm still getting an autosave contact from the password manager:\nreverseButtons: alertReverseButtons,\nheightAuto: alertAutoHeight,\ninputAttributes: {\n    autocomplete: 'off'\n}. ",
    "pabloleban": "@acupajoe Thank you! But is this a bug or what?. ",
    "enbermudas": "Thanks a lot, that happens when english is not your native language (?). ",
    "pmccarren": "What did you end up changing?. ",
    "FigueiredoStable": "hy @limonte i have tried this before, but no success look whats happening:\nCSS:\n\nWhen i show the modal:\n\nI try to change some other elements but nothing works, that's why I asked the question in the other repository.\nDo you have an idea whats gonna happening?\nThanks for the help\n. ",
    "kheronn": "Exactly same context here @mateenQureshi \n. Thanks a lot, @limonte !. ",
    "kamiljozwik": "I have the same problem with GatsbyJS (React) - in development it works fine, in production I get error \"Uncaught (in promise) ReferenceError: paramName is not defined\n  at ot (sweetalert2.all.js:1055)\n    at t._main (sweetalert2.all.js:1751)\n    at t.value (sweetalert2.all.js:1100)\n    at t.value (sweetalert2.all.js:1167)\n    at t.bt (sweetalert2.all.js:2379)\n    at t.c (sweetalert2.all.js:1094)\n    at t [as constructor] (sweetalert2.all.js:959)\n    at t.c (sweetalert2.all.js:1161)\n    at new t (sweetalert2.all.js:959)\n    at l.t [as toast] (sweetalert2.all.js:957)\"\nand toast is not showing up.\nI am using it only in this one place:\nhttps://gist.github.com/kamiljozwik/611b2e4f01ca6bd7a4b59207535f7624. ",
    "dambusm": "Same error here (Angular 6)\ncomponent.html:\n<swal #savedToast [options]=\"{\n  type: 'success',\n  title: 'All changes saved',\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 3000\n}\"></swal>\ncomponent.ts: \nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\n...\n@ViewChild('savedToast') private savedToast: SwalComponent;\n...\nthis.savedToast.show();\nError: \nERROR Error: Uncaught (in promise): ReferenceError: paramName is not defined\nReferenceError: paramName is not defined\n    at re (main.0518db201ec0ed27017a.js:1)\n    at e._main (main.0518db201ec0ed27017a.js:1)\n    at e.value (main.0518db201ec0ed27017a.js:1)\n    at e.ve (main.0518db201ec0ed27017a.js:1)\n    at e.s (main.0518db201ec0ed27017a.js:1)\n    at new e (main.0518db201ec0ed27017a.js:1)\n    at e (main.0518db201ec0ed27017a.js:1)\n    at e.show (main.0518db201ec0ed27017a.js:1)\n    at main.0518db201ec0ed27017a.js:1\n    at e.invoke (polyfills.2f4a59095805af02bd79.js:1)\n    at re (main.0518db201ec0ed27017a.js:1)\n    at e._main (main.0518db201ec0ed27017a.js:1)\n    at e.value (main.0518db201ec0ed27017a.js:1)\n    at e.ve (main.0518db201ec0ed27017a.js:1)\n    at e.s (main.0518db201ec0ed27017a.js:1)\n    at new e (main.0518db201ec0ed27017a.js:1)\n    at e (main.0518db201ec0ed27017a.js:1)\n    at e.show (main.0518db201ec0ed27017a.js:1)\n    at main.0518db201ec0ed27017a.js:1\n    at e.invoke (polyfills.2f4a59095805af02bd79.js:1)\n    at j (polyfills.2f4a59095805af02bd79.js:1)\n    at polyfills.2f4a59095805af02bd79.js:1\n    at e.invokeTask (polyfills.2f4a59095805af02bd79.js:1)\n    at Object.onInvokeTask (main.0518db201ec0ed27017a.js:1)\n    at e.invokeTask (polyfills.2f4a59095805af02bd79.js:1)\n    at t.runTask (polyfills.2f4a59095805af02bd79.js:1)\n    at d (polyfills.2f4a59095805af02bd79.js:1)\n    at t.invokeTask [as invoke] (polyfills.2f4a59095805af02bd79.js:1)\n    at _ (polyfills.2f4a59095805af02bd79.js:1)\n    at XMLHttpRequest.m (polyfills.2f4a59095805af02bd79.js:1). My project configuration: \n\"configurations\": {\n            \"production\": {\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.prod.ts\"\n                }\n              ],\n              \"optimization\": true,\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"extractCss\": true,\n              \"namedChunks\": false,\n              \"aot\": true,\n              \"extractLicenses\": true,\n              \"vendorChunk\": false,\n              \"buildOptimizer\": true\n            }\n          }\nAs a workaround, if I change \"optimization\" to false (or build with ng build --prod --build-optimizer=false), the issue does not occur.. @limonte Sure, here's a demo of the issue:\nhttps://dambusm.github.io/toast-demo/\nThis is the repo:\nhttps://github.com/dambusm/toast-demo\nIt's a new project generated with ng new (versions Angular CLI: 6.1.5, Node: 10.9.0, Angular: 6.1.6). No changes to it other than installing sweetalert2 and @toverux/ngx-sweetalert2 and setting up two swals: a toast and a popup. Run with ng serve and both work fine; run with ng serve --prod (or ng build --prod) and the popup works, but the toast doesn't.\nHope that helps and thanks in advance!\n. ",
    "lamuzzachiodi": "I was working with the version 6.6.10, after update to 7.26.12 the problem is gone.\nThanks,\nSaludos!. ",
    "molerat619": "Thanks for you response @limonte .\nI am also not an expert. I don't know how you made it so the rest of the content is ignored and only your alert is printed, but that's already a start. I would guess you just need to have different css settings for the modal using @media print - e.g. different overflow behavior. Just some guesses.. @limonte awesome, thank you for the quick fix! I will test it for my case next week and let you know.. Update: It worked fine, thank you @limonte !. ",
    "sunnyparekh": "You can use the same JS Bin template link in Edge Browser:- https://jsbin.com/gutesej/edit?html,js,output\nExpected behaviour: On hovering on Cancel button and going to other button and repeating this process few times, the Cancel Button should be visible as it is.\nActual Behaviour: By hovering on Cancel button and then going to any other button and repeating this process few times, the Cancel button gets disappeared.\n\n. I mean to say 'Save' button. Refer to the video attached below. You will get the issue.\nedgeswtalrtissue.zip\n. @limonte The version of edge on which I found the issue is '42.17134.1.0', but not sure of other versions. It would be great if it shall work on other versions as well.. @limonte, Thanks for looking into it. I have tested this issue on a different system with the same Edge version and was not able to reproduce the issue. I think its something related to Build Version of OS. So I am closing the issue.\nThanks once again!. ",
    "amilajack": "I think it would be a good idea to test against both. There are a lot of users that use latest node. Thoughts?. ",
    "TheUrban": "Tried with older versions (<=sweetalert2-6.11.5) and it is working.. ",
    "pandelis": "Thank you !\nIt works but now it moves all my window (not only the Sweet alert one).\nWould you have any idea why ?\nImage1\nImage2 \nBest. ",
    "darrena092": "Oops, thanks!. ",
    "YardGnomeNinja": "Thank you SO much for figuring out what was causing this! I've been banging my head against it for a few days now.. ",
    "lvrnls": "Haha you are welcome @YardGnomeNinja ! I was trying to figure out myself wtf was the issue since friday !\nOk, it seems that the solution to get around this is to contact the plugin creators and I will\nThanks @limonte . ",
    "ttaylor29": "Thanks. I was able to update my code and it is working now.\n```\nfunction LoadUsers() {\n    var userOptions = new Promise(function (resolve) {\n    var queryId = 8;\n    var path = '/Users/User/GetUsersByQueryId?queryId=' + queryId;\n\n    $.get(path, function (data) {\n\n        const inputOptions = new Map;\n        data.forEach(item => inputOptions.set(item.UserId, item.UserName));\n\n        resolve(inputOptions);\n    });\n});\n\nreturn userOptions;\n\n}\n```. ",
    "bodrick": "So I ran some tests and it seems that the parent is correct but the positioning isn't.  I have a div that's half the size of the window and 500px high and a border and would expect the toast to be centered in the div.\nExample:\nhttps://obsidian-yak.glitch.me/\nCode : https://glitch.com/edit/#!/obsidian-yak. This looks like it might solve my issue, I won't be able to fully test on my code till Monday, but will update with my results.  @limonte thanks for looking into this.. ",
    "foxmedo": "are you sure ?? \nit's all about it sweetalert is sending ajax request to the server side and you are using fetch function this one doesn't send the request using XMLHttpRequest \nif you compare the request send by SweetAlert1 and 2 you will see that the SweetAlert2 doesn't send the request using XMLHttpRequest  are you using GET ???\n. ### this example using SweetAlert \nHTTP_ACCEPT: \"/\"\nHTTP_ACCEPT_ENCODING: \"gzip, deflate\"\nHTTP_ACCEPT_LANGUAGE: \"fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7,ar;q=0.6\"\nHTTP_ALEXATOOLBAR_ALX_NS_PH: \"AlexaToolbar/alx-4.0.3\"\nHTTP_CACHE_CONTROL: \"no-cache\"\nHTTP_CONNECTION: \"keep-alive\"\nHTTP_COOKIE: \"user=1-it7KY6IeAmPSdl0b; arp_scroll_position=1096; SE_session=ea7c9bf2df27128a2bbf65a527c84ead3803cbfc\"\nHTTP_HOST: \"localhost\"\nHTTP_PRAGMA: \"no-cache\"\nHTTP_REFERER: \"http://localhost/pneus/marques\"\nHTTP_USER_AGENT: \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\"\nHTTP_X_REQUESTED_WITH: \"XMLHttpRequest\"\nand this using SweetAlert2\nHTTP_ACCEPT: \"/\"\nHTTP_ACCEPT_ENCODING: \"gzip, deflate\"\nHTTP_ACCEPT_LANGUAGE: \"fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7,ar;q=0.6\"\nHTTP_ALEXATOOLBAR_ALX_NS_PH: \"AlexaToolbar/alx-4.0.3\"\nHTTP_CACHE_CONTROL: \"no-cache\"\nHTTP_CONNECTION: \"keep-alive\"\nHTTP_COOKIE: \"user=1-it7KY6IeAmPSdl0b; arp_scroll_position=1096; SE_session=2819718d3caa5cd81e33fb01742b0123f4ea9d83\"\nHTTP_HOST: \"localhost\"\nHTTP_PRAGMA: \"no-cache\"\nHTTP_REFERER: \"http://localhost/pneus/marques\"\nHTTP_USER_AGENT: \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\"\nnow can you open the issue again ?. ",
    "atomiks": "See this lib for implementation, it locks body scroll for a scrolling modal container on iOS etc, cross-browser: https://github.com/willmcpo/body-scroll-lock. ",
    "kwagdy": "I'm using version 7.33.1 on chrome, and still able to scroll body behind the swal modal. > Hi @kwagdy, is your problem with Chrome on IOS?\nHello @gverni, yeah, Chrome 72 on MacBook laptop  . sure... \n\n. > Hello @kwagdy and thank you for proving the screen recording!\n\nI have the offtopic question regarding the screen recording above. As I understand correctly, it's the Arabic language there which is RTL. Should the question icon contain \u061f instead of ? for Arabic language?\n\nHi @limonte , you're right on both your notes, this is an Arabic RTL web app, and yes, I should find a way to flip the question mark! . It is not reproducable on the github page! Is there a way to message you a link to the test page?\nFor the record, I have the webpage display divided to two sections, menu (nav) and body (main). For some reason I have set the main body position to absolute (I am trying to remember why \ud83e\udd14...!) when position:absolute is removed from main body the behavior is now correct, no scrolling  happens when swal is opened!. @limonte Found the problem! See here https://beautiful-notebook.glitch.me/ for some reason I added this class\nbody.swal2-height-auto {\n  overflow-y: visible !important;\n  height: 100% !important;\n}\nI am not quite sure what was the reason behind this, but this combined with position absolute in the containing div, made the background page scrollable.\nThank you the flip question mark link \ud83d\udc4d . @limonte I'm almost certain I added it to fix an interim issue, just can't remember what :thinking: ! Anyway, I removed it, along with position absolute for the main area. Things seems to be in order now. Thanks a lot for following up on this :smiley: . ",
    "roopeshreddy": "@zenflow @limonte We're using SweetAlert2 in Angular 6 app. When we did the analysis the final AOT build generated it's picking the unminified file from the SweetAlert2 dist file instead of the minified one.\nMoreover, we're importing in the following way - \nimport Swal from 'sweetalert2';\nAlso we have tried the Angular version of SweetAlert2 and I still see the same.\n. I've done more analysis and found that -  Angular Webpack through CLI is not minifying the CSS present in the JS files. May be this is issue with the Angular ngWebpack. \nMeawhile, I just want to know, is there any harm to set the min file in the package.json instead of the souce file.\nThanks!\n. ",
    "Stopi": "More infos :\n- I don't have an OSX device to test this.\n- I know this addon also exists on Google Chrome but I didn't test it.\n- If you disable the addon for one website, then swal works properly on this website.. ",
    "greenkeeper[bot]": "After pinning to 4.0.0 your tests are still failing. The reported issue might not affect your project. These imprecisions are caused by inconsistent test results.. After pinning to 0.67.0 your tests are passing again. Downgrade this dependency \ud83d\udccc.. After pinning to 3.1.1 your tests are passing again. Downgrade this dependency \ud83d\udccc.. - The devDependency karma-sauce-launcher was updated from 1.2.0 to 2.0.1.\nUpdate to this version instead \ud83d\ude80. - The devDependency karma-sauce-launcher was updated from 1.2.0 to 2.0.2.\nUpdate to this version instead \ud83d\ude80. After pinning to 4.0.3 your tests are still failing. The reported issue might not affect your project. These imprecisions are caused by inconsistent test results.. - The devDependency rollup was updated from 0.67.4 to 0.68.1.\nUpdate to this version instead \ud83d\ude80 \n\nRelease Notes for v0.68.1\n2018-12-19\nBug Fixes\n\nFix an issue with UMD wrappers where a variable is used without being defined (#2600)\n\nPull Requests\n\n#2600: Fix UMD and IIFE wrapper issues and add comprehensive functional wrapper tests (@lukastaegert)\n\n\n\nCommits\nThe new version differs by 6 commits.\n\n5516591 0.68.1\n591692a Update changelog\n8f71071 Fix UMD wrapper issues and refine wrappers (#2600)\n7708970 Update changelog\n824f942 Update changelog\n790b270 Update changelog\n\nSee the full diff\n\n. After pinning to 4.1.0 your tests are passing again. Downgrade this dependency \ud83d\udccc.. - The devDependency detect-browser was updated from 3.0.1 to 4.0.2.\nUpdate to this version instead \ud83d\ude80 \n\nRelease Notes for 4.0.2\nFIX: Remove Array#fill usage.  While I expected this would be transpiled out by TypeScript, this is not the case.  TypeScript expects that you might have injected a polyfill to take care of this, which is completely reasonable.\n\n\nCommits\nThe new version differs by 2 commits.\n\n2e29d8d 4.0.2\n6362d37 remove Array.fill usage as TS does not transpile it out (#87)\n\nSee the full diff\n\n. - The devDependency detect-browser was updated from 3.0.1 to 4.0.3.\nUpdate to this version instead \ud83d\ude80 \n\nRelease Notes for 4.0.3\nFIX: Remove Array#find usage in the code.  Additionally the source tsconfig.json file (not release related, but pertinent) has been set to only expect es5 constructs in the code which should prevent any future attempts to use all the newer things we like to use.\nBig thanks to @limonte for picking up these IE11 related issues.\n\n\nCommits\nThe new version differs by 2 commits.\n\nbc882da 4.0.3\n3c42e74 Remove Array#find usage (#90)\n\nSee the full diff\n\n. After pinning to 5.15.2 your tests are passing again. Downgrade this dependency \ud83d\udccc.. ",
    "SanderElias": "I verified using the sweetalert2.min.css file locally too, it saves an extra ~10K of the sweetalert2.all.js\nLGTM!. Probably not, but it does not hurt, and will prevent the problem from reoccurring.\nthose settings make sure newlines are encapsulated in 1 string instead of using array concatenation.. Done!\nTypo in commit msgs. Not should be now.. I will make a new PR, that consist of the change we need. my fork became corrupted, and recovery takes way more time as doing it once again.. No, they don't \"uglify\", the only thing that happens is that the new-lines are taken away, but the whole CSS is completely there.  If you need to read/debug the CSS you can let the browser format it, and it's as readable as before. I left it like this because I guessed there was a good reason for this\nHowever, when people are using the .all  solution, the change that they are going to debug the CSS in JS is very slim.  \nTaking that in account I would prefer using the .min file indeed. I didn't because in the current version the project rater specific used the unminifiief version.. I already did :) By accepting your change!\nFor my account this PR is ready for merge.. ",
    "Nsbx": "https://codesandbox.io/s/81xo2yj180\nI don't know why but it work well in preview but if you use this link : \nhttps://81xo2yj180.codesandbox.io/\nThe bug is here\n. I only click on save :(\nEdit : i just tested on firefox dev and yeah no problem\nThe problem is present on Chrome 65.0.3325.181 (my company manage the version so i can't update :( )\nSo sorry about that, if you think you can't fix it you can close the issue.. Ok i found the problem i'm so stupid ...\nAfter look step by step the execution i haved see a strange behavior \nI have the extension \"I don't care about cookie\" and the extension broke your librarie ...\nThe only strange thing is if i use your lib with a cdn and not a compiler they work fine.\nSo i'm aware for the futur. ",
    "mk304": "Hi @gverni, thank you so much for answering me! As you can see I added your lines of code, but they sadly don't run... (the button won't open), \ndo you know what the problem could be...?\n\nI also added a brace since I think one was missing, then the window opens but the chrome console tells me \"Uncaught (in promise) TypeError: $.ajax is not a function\n    at getText\"\nThank you so so much for your help!\nKind regards \nMoritz \n. hey @gverni, \nI am running the program on this server:\nhttps://mars.iuk.hdm-stuttgart.de/~mk304/Web_Projekt/webpage/ui/sweetalert/sweetalert_eingabe.php\n\nWhat do you mean exactly with \"the window opens\"?<\n\nWhen I click the button, the SweatAlert Textfield pops up and I can enter a text :) One again, I can't thank you enough for helping me! \ud83d\udc4d  . I cannot thank you enough! I Think it worked!! In the Chrome inspector, I can see that AJAX started and that it sent the correct information. My very last question, because I think, that my ajax.php code is wrong... \n<?php\necho $_POST['text'];\n?>\nOn the server: https://mars.iuk.hdm-stuttgart.de/~mk304/Web_Projekt/webpage/ui/sweetalert/ajax.php\nwhat else do I need to add, to see the text, that I added in my original textbox?\nOnce again, I am very very grateful, thank you so much!. ",
    "jalilzade": "I could not reproduce problem again here  But could not solve problem on my code, maybe it is related to something else.. ",
    "scottbitbyter": "AWESOME! That was the piece I couldn't figure out! Works now, thank you!. ",
    "richardhsueh": "To be more specific, I am using https://github.com/react-boilerplate/react-boilerplate as the boilerplate.\nIf you try to use a fresh copy of the boilerplate and install sweetalert2, it will reproduce the error.. So for quick fix, can i just change \n\"jsnext:main\": \"src/sweetalert2.js\",\nto \n\"jsnext:main\": \"dist/sweetalert2.all.min.js\",\nso that i can just import it like this import Swal from 'sweetalert2'; ?. ",
    "cheesemarathon": "According to the materialize css documentation it is required to initialize the select element. I'm not sure myself exactly what it does so ill look into that some more. I'll also open an issue with the materialize css creators regarding this.. Im very unfamiliar with JavaScript but perhaps this script is the one causing conflicts. You may be able to understand it a little better than me. Also, I opened an issue here with matierialize. Thanks for your help @gverni I see exactly what you mean. I'll continue the conversation with materialize\n. ",
    "varunsridharan": "@limonte thanks for your faster reply.\nI am adding the link to it because i am sure this might be very usefull to other devs. and it will be easier for them to find it. and i agree its non JS but its built just for SweatAlert2. \nCome ON ?. ",
    "jfcherng": "@limonte\nI just have the same error message on IE 11 too. The problem I encounter is that in the following function,\nhttps://github.com/sweetalert2/sweetalert2/blob/eac143acbe35555bbe13d09c6f97597d8cf2cc76/src/utils/aria.js#L9-L13\nmy first el in bodyChildren is a SVGSVGElement object which has no contains method. And that raises an exception as shown in the following screenshot from IE 11's dev tool.\n\nMy temporarily ugly fix is adding a contains method for SVGSVGElement in my app.js.\njs\nif (typeof global.SVGSVGElement.prototype.contains === 'undefined') {\n  global.SVGSVGElement.prototype.contains = function(className) {\n    return this.className.baseVal.split(/ +/).indexOf(className) !== -1;\n  };\n}\nBut it may be good to fix this in sweetalert2 to make sure that el has a contains method :). ",
    "mohamadhs": "@gverni here is image that shows better details:\nhttps://imgur.com/a/VfgxNig. @limonte tnx...but I use sweetalert2 in laravel application ..How to set then.function in Laravel controller\nthis is an example of use sw2 in laravel controller:\nSWAL::message('sry','your balance is not enough','error',['html'=> 'you can charge your aacount ' , 'showConfirmButton'=>false]);. ",
    "vamsits": "\n. Hi,\nPlease find the code in the below url\nhttps://glitch.com/edit/#!/woozy-spaghetti?path=cool-file.js:14:25\nOther than Installing he new sweetaler2, i didn't do any code changes in .js files. Just did what I mentioned in the above post.. I need also the size also should appear in the same as earlier sweetalert. Please tell me how to get the same size alerts. Hi I commented confirmButtonColor: '#DD6B55', still I am getting in red color YES instead of blue. \nAlso attached is the sweetaler1 popu-up\n\nand given below is the sweetaler2 pop-up\n\n. I am facing an issue with the sweetalert2. It is working in local, buttons are getting swapped successfully. But the changes are not appearing when deployed on the server. \nAnd these are the things I added in bower.json in order for the sweetalert2 to work in server\n \"angular-sweetalert-2\": \"latest\",\n    \"sweetalert2\": \"^7.1.3\",\n    \"swangular\":\"^1.4.3\"\nAnd this how my bower.json looks \n{\n  \"name\": \"base\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"angular-bootstrap\": \"0.10.0\",\n    \"angular\": \"1.2.29\",\n    \"angular-resource\": \"~1.3.12\",\n    \"angular-route\": \"1.2.15\",\n    \"ng-grid\": \"2.0.11\",\n    \"angular-ui-grid\": \"3.1.1\",\n    \"angular-chosen-localytics\": \"1.0.6\",\n    \"animate.css\": \"3.0.0\",\n    \"bootstrap\": \"3.0.0\",\n    \"font-awesome\": \"4.3.0\",\n    \"angular-ui-ace\": \"0.1.0\",\n    \"angular-base64\": \"2.0.1\",\n    \"angular-tree-control\": \"0.2.8\",\n    \"angularLocalStorage\": \"~0.3.0\",\n    \"messenger\": \"1.4.1\",\n    \"moment\": \"2.10.6\",\n    \"d3\": \"3.4.4\",\n    \"nvd3\": \"1.8.4\",\n    \"angular-sweetalert\": \"~1.0.3\",\n    \"angular-underscore\": \"~0.5.0\",\n    \"angular-ui-sortable\": \"0.13.1\",\n    \"underscore\": \"~1.7.0\",\n    \"fuelux\": \"~3.5.1\",\n    \"angular-animate\": \"1.2\",\n    \"angular-cookies\": \"1.2\",\n    \"angular-bootstrap-nav-tree\": \"*\",\n    \"components-font-awesome\": \"~4.3.0\",\n    \"bootstrap-sweetalert\": \"~0.4.3\",\n    \"angular-toggle-switch\": \"1.3.0\",\n    \"angular-ui-select\": \"0.13.2\",\n    \"angular-sanitize\": \"1.2.18\",\n    \"angular-tree-control\": \"0.2.8\",\n    \"angular-bootstrap-datetimepicker\": \"0.3.15\",\n    \"angular-nvd3\": \"1.0.9\",\n    \"bootstrap-daterangepicker\": \"~1.3.23\",\n    \"moment-timezone\": \"~0.5.5\",\n    \"angular-sweetalert-2\": \"latest\",\n    \"sweetalert2\": \"^7.1.3\",\n    \"swangular\":\"^1.4.3\"\n  },\n  \"devDependencies\": {\n    \"less.js\": \"~1.4.0\",\n    \"angular-mocks-unstable\": \"~1.1.5\"\n  },\n  \"resolutions\": {\n    \"angular\": \"~1.2.0\",\n    \"nvd3\": \"1.8.4\",\n    \"d3\": \"3.4.4\",\n    \"moment\": \"2.10.6\",\n    \"angular-resource\": \"1.2.15\",\n    \"angularLocalStorage\": \"0.1.7\",\n    \"angular-cookies\": \"~1.2.0-rc.2\",\n    \"angular-animate\": \"1.2\"\n  }\n}\n. Dude! May I know why have you closed this, without any comments.. Hi limonte,\nThis is an important issue to me, please help me to understand why you closed this issue without providing any comments.. ",
    "Taeboush": "thankyou and sorry for not reading the previous issues.. ",
    "Orbling": "@gverni It does make sense indeed, though in many cases you might want a sequence of messages displayed on timers, particularly when used in conjunction with the toast option.  Perhaps timers need a timeout result option setting that is the result on timeout, that could be generally useful.  I don't think 'cancel' is necessarily always the intended state of a timer expiring - again especially for toaster popups.\n. @gverni An interesting approach, I have not come by the async/await primitives before, I wonder what their browser support is like.  (Had a look, 85.6% currently overall, only introduced to most major browser 2017 Q1.)\nMy use case requires a fair bit of adding to an active queue using insertQueueStep(), I could adapt the async function you generated in your example to view the array as a queue easily enough.  Though I'm not sure using async/wait has sufficient universality, though I am grateful for the introduction to them.\nI still think there is a good case for a defined dismiss event on timer expiry.  Think of a shutdown/logout like command that asks \"Are you sure?\" and defaults to yes.  Essentially the concept is whether the timer expiry corresponds to the default option, cancel or another value.\nNB. Slightly unrelated, but related to my use case, adding to a queue seems to require an initial call to queue.  I initially wanted to add normally and specify queue: true or some sort to not replace the existing swal call.  That's not a bug though, additional functionality.. ",
    "jdmarinv": "\nHi @jdmarinv i'm a bit confused by the piece of code you shared. I don't see any call to swal in there. If it's a sweetalert2 issue, could you please replicate your use case remixing the glitch you found at https://sweetalert2.glitch.me?\n\n@gverni Updated the code.\nI tried to remixing it but it won't work.. @gverni \nhttps://jsfiddle.net/6qocpsxy/2/\nI made a jsfiddle though.. Thanks @gverni.\nIssue fixed.\nhttps://jsfiddle.net/6qocpsxy/4/\n. ",
    "sweetalertquestion": "Its not a problem with my project sadly.\nI can use swal inside of any page inside of my app, but when i open the android browser inside my app(themeablebrowser or inappbrowser) then swal does not open anymore, no matter what i tried.\nI think there are 2 possibilitys:\n\n\nSwal is not made for those 2 android browsers(themeable/inapp) and maybe there is a way to change it. They dont log or open swal at all at the moment. But without opening the browsers i can open swal.\n\n\nI have to include anything which allows me to swal inside those browsers\n\n\nThanks if anyone knows anything\n. ",
    "dolphinsd": "@limonte feel free to create test account at omnibasis.com - we are using your library and see the issue or route switch sometimes when popup appear after backend operation with success but routes are switched.. ",
    "dylanmcgowan": "Heres a video demo of the bug:\nhttps://www.useloom.com/share/91a06d1bc35f4d56884c0d86800b3a55\nUnfortunately I copied my configuration verbatim and can't reproduce the bug in a virtual environment.. but here's what that code looks like anyway:\nhttps://codesandbox.io/s/jzqxqpw5lv\nAlso sorry for the late reply, been a very busy week.  I'm happy to do whatever I can to help solve this!. ",
    "teodorsandu": "Hi @gverni, I'm not that good as javascript to do this :D - anyway @khrismuc gave me a solution in stackoverflow via jsfiddle which I explain in a new codepen in the code's comments.\nBasically is not setting timer altogether and instead calling swal.close(); by a setInterval() function.\nHi @limonte - great library by the way and thanks! - yes, a .stopTimer() #1322 method will help!\n(should I close this issue?..)\n. This is awesome :heartpulse: !! Thank you @limonte !! :pray: \nwhile I'm at this it crossed my mind that it would be useful the following methods:\n.resumeTimer() - resume timer from where it was when .stopTimer() was called\n.increaseTimer(x) - increase (postpone) with x ms the time when the modal will close.\n.toggleTimer() - toggle between .stopTimer()  and  .resumeTimer() ?. That is simply perfect. Thank you! :) :pray:. ",
    "vavo-cake": "@gverni Thank you for your reply, here is my example\uff1a\n```\n// Define a form\nvar form = $('');\nform.append(\n       '' +\n          'Amount' +\n          '' +\n                '' +\n          '' +\n       ''\n);\n// Use swal\nswal({\n       title: 'xxx',\n       html: form[0],\n       showCancelButton: true,\n        ... ...\n})\n```\nThis is the result\uff1a\n\n. @limonte Sorry, the current project is not deployed to the server, can not provide live demos, I will try to find out the problem myself, thank you. @gverni @limonte Thank you very much for your suggestion. I just started using github. I am not familiar with many places. I am sorry to have brought you unpleasantness. I wish you all a fortune.. ",
    "WillGoldstein": "I don't really know how. It's relatively straight forward tho - instead of using bootstrap modal like #374, I'm using Bootstrap vue js: https://bootstrap-vue.js.org/docs/components/modal/. Since it's vue you cannot fix this the same way as you can with the javascript/jquery fix.. Sorry, closing this. using the prop no-enforce-focus on b-modal does the needful.. Thanks @zenflow , appreciate the thorough explanation.. ",
    "KeinWeb": "http://prntscr.com/lvebrm look at this the border-radius is missing why it dit it missing?. What i mean it is still there but an unown argument block this statement with the border-radius. okay i just fix it. Thank you soooo much for you idear with the border-radius. I write behind the icon css classes the tag !important and now it works. closes #1345. ",
    "GerardMetal": "Hi @gverni, yes, i did. It working on desktop computer browser (browsers used: Google Chrome, Opera, and Safari).\nHi @zenflow i'm sorry, i edited the code on this page, but the code in the project is correct.\nIn the desktop computer browser does works perfectly.. ",
    "MiXT4PE": "Oh I didn't know you could do it this way. Thanks!. ",
    "jlsjonas": "Just found the related release note, and although I don't really see why this change is an improvement, I likely am missing the bigger picture.. I wasn't aware jsdelivr supported semver, thanks for pointing that out & pointing to the relevant issues!. ",
    "produktive": "Excellent, thank you for the tip.. ",
    "obrassard": "Hello, I tried to reproduce the issue on stackblitz this morning, but the sweetalert shows up as expected.. It's strange taught because, when I download the exact same project from stackblitz and run it locally on my computer, the problem persist... \nYesterday, I tried in 2 different angular project on windows, and today in a fresh new angular project on my macbook and the problem is always present. So I have difficulty to understand what make it work on stackblitz..\nHeres the stackblitz project : https://stackblitz.com/edit/angular-z3wex8?file=src%2Fapp%2Fapp.component.ts \nMaybe you could try to download it + the node modules, and check if you face this problem locally too..\nHere's a screenshot form the stackblitz project : \n\nAnd the same project, executed locally with ng serve: \n\nSince it work on stackblitz, this might be a problem with the dependencies ?\nHowever, I have no error in the console.\nHave a nice day !. ",
    "codebycliff": "I'm experiencing this issue as well with just a basic Webpack setup. Specifying the mainFields fixes the issue for me. Is that the desired work-around for now?. ",
    "afisher88": "No problem, thanks for fixing so quickly!. ",
    "snsarma": "@gverni \nThanks for the inputs and pointing it out , I tried things similar to the example there but didn't work for me, The way I am trying to do it by emulating the example it doesn't seem to resolve my issue. I am here with attaching my code :\nI want to check if the ID field has a value or not and if not then it should throw an error to the UI , if not extract the value and send it to the API to perform the required tasks. I am not able to perform the check on the required field\nSwal.fire({\n        title: 'Are you sure you want to Save the Notes?',\n        type: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n      console.log('result.value',result.value);\n        if (result.value) {\n          Swal.fire( {\n            title: 'Download Notes',\n              html:\"IDNotes\",\n            confirmButtonText: 'Save',\n            preConfirm: (document.getElementById(swal-input2).value) => {\n              console.log('document.getElementById(swal-input2).value',document.getElementById('swal-input2').value);\n              request_string = {\n        \"Request\":\n          [\n            {\n              \"Col1\": \"value1\",\n              \"Col1\": \"value2\",\n              \"Col1\": document.getElementById('swal-input2').value,\n              \"Col1\": document.getElementById('swal-input1').value,\n        }\n      ]\n  };\n   fetch('API_URL', {\n    headers: {\n      'Accept': 'application/json, text/plain, application/xml,  */*',\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n    method: 'POST',\n    body: JSON.stringify(request_string)\n  }\n  ).then(response => {\n    if (response.status !== 200) {\n       return;\n    }\n    response.text().then(data => {\n\n      response_data = data;\n      response_jsonObj = JSON.parse(response_data);\n\n    });\n  }).catch(error => this.setState({ error }));\n\n},\n  allowOutsideClick: () => !Swal.isLoading()\n        }).then((result) => {\n          swal({\n          title: \" Your  request is being processed!\",\n          icon: \"success\",\n          confirmButtonText: 'OK'\n        }).then((okay) => {\n          if (okay) {\n            history.push('/page1');\n            history.push('/page2');\n          }\n        });\n        });\n    }\n  })\n\n. ",
    "aliogaili": "I reinstalled chrome and it's back to normal! sorry for the false alarm. . ",
    "tomholub": "bodyScrollbarPadding (default true)\nIt's a horrible name but at least I can find it in the docs when I search for body, padding and scrollbar.\nfixBodyScrollbarPadding\ncompensateBodyScrollbar\nscrollbarPadding\nThey all sound about equally bad.\nThanks!. Or more general,\nadjustBodyStyle with default true. Later other possible style updates could be lumped under that flag. If I set it to false, I know my <body> tag would stay the same.. Either is good. Thank you!\nWould you take donations in cryptocurrency? Was trying to donate $150 over PayPal but it's giving us trouble. BTC or ETH would be a lot easier.. Noted, will do!. ",
    "ChristianCruiz": "\nWelcome to GitHub, @ChristianCruiz\nWould you mind sharing the code you're trying to use? Or even better, provide a glitch, here's how: https://github.com/sweetalert2/sweetalert2/wiki/How-to-provide-live-example-for-issue\n\nok i added \nhere is the project and the output link:\noutput : https://boiling-output.glitch.me\ncode : https://glitch.com/edit/#!/boiling-output\npay attention that the glitch appears only when the classes \"swal2-cancel\" and \"swal2-confirm\" are added to the buttons. Thank you very much ! \nHelped me alot . ",
    "bparish628": "@limonte  I've updated the PR to typecheck padding. I do not know why the build is failing though. It looks to be something with surge.. If padding happened to be undefined here, the condition would be true and would cause the next line to fail. I think I will just update the condition to check if padding is either a string or number. That way people who don't use typescript will not be able to pass other types.. ",
    "SimenB": "\nThe code coverage dropped to 62%\n\nWhile the code coverage certainly should be higher, it's also a bit misleading here. Jest has ~500 separate integration tests which spawns up an instance of Jest on different tests and scenarios and performs asserts on its output. This is not something that's reflected in the code coverage numbers, as those are just from unit tests. So, while I agree ~60% is lower than it could (and should) be, the code base is better covered by tests than that number indicates.\nhttps://github.com/facebook/jest/tree/master/e2e/tests\n\nthe Travis CI dashboard is still as red as the Chinese communist parade.\n\nNote that Jest does not run tests from master in Travis (see your screenshot, the last build is 4 months ago), since travis thinks we inject some secret, turns off tty, which means all colors are borked (https://github.com/travis-ci/travis-ci/issues/7967#issuecomment-358437261). We run on PRs though to verify Jest itself works on Travis, since they are from forks they are not privileged.\nWe run tests for node 6, 8, 10 and 11 on Linux on circleci, node 10 for windows, mac and linux on Azure pipelines and node 10 on appveyor for windows (we'll remove that last one at some point since it's covered by azure). All of which are green (or in progress at the time of writing)\nhttps://circleci.com/gh/facebook/jest/tree/master\nhttps://dev.azure.com/jestjs/jest/_build?definitionId=1 (I'm not sure how to filter to just master there)\n. Jsdom throws on access, not usage. Yeah, I think so. At least without a try-catch or something. I'd just stick it in your docs if you wanna do anything. ",
    "dorklord23": "Never mind. I still use version 7.xx while the doc already refers to version 8.xx.\nIf we live in Japanese shogunate, I should do harakiri to redeem my folly lol. ",
    "hajududat": "It's an Angular project in development and unfortunately no live demo available as it's not public facing. The only styling is CSS using the ButtonClass feature for color and minor padding. Even with custom styling removed it still does this. So this is an issue that should not be closed.. @gverni I edited my answer above. Even without styling it does this.. @gverni Since the app is in development, it will only load while logged into the client's VPN. So I don't know how I can create a live example due to security.. @gverni First, my apologies for coming off irritable. I've been fighting this and do not understand why it's happening. I'm not sure how to extract the code on an Angular app, or how to get you a demo to recreate. My process for this project was to create all the HTML and CSS files that were then handed off to a dev team building the Angular app. My role now is going in and fixing mostly styling bugs. This is one bug that I just don't know how to correct.\n. flex-direction: column !important; was getting adding to .swal2-actions on first load. After a page refresh, it was no longer there.. When visiting the page the first time and the button was click to display the alert, the flex-direction column CSS would appear in the Elements tab as being applied to .swal2-actions.\nBut when I would just refresh the page and click the button again, the alert would display but the flex-direction CSS would not appear in the Elements tab as being applied to .swal2-actions. The buttons would then appear inline correctly.\nThe strange thing is is that we're using cancel and confirm buttons together in other places in the app but this one instance was showing the flex-direction: column being added to the class. . ",
    "ciaran036": "(my comment isn't relevant to SweetAlert, but just a comment for anyone attempting to get their head around ASP.NET Core's tooling for managing client-side dependencies). \nI'm a little confused. \nMicrosoft's latest tooling for managing client-side packages includes only 3 providers for packages, and one of them is from cdnjs.com. The 'jsdelivr' provider mentioned above isn't one of those providers, effectively leaving me stuck with whatever is available on cdnjs (if I stick to using this new LibraryManager tool).\nIs it possible to add further providers to Microsoft's LibraryManager tool? . ",
    "francovp": "Oh ok, right, sorry. I forgot that I also update sweetalert2 package to 8.3.0 from 7.x, so Swal.fire() should do the trick :). Thanks for the advice :). ",
    "houndci-bot": "Mixed double and single quotes.\n. Expected '{' and instead saw 'head'.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Rule set contains (12/10) properties\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Mixed double and single quotes.Missing semicolon.\n. Prefer double-quoted strings\n. Missing semicolon.\n. Line is too long.Too many errors. (59% scanned).\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Prefer double-quoted strings\n. Line is too long.Too many errors. (59% scanned).\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.Too many errors. (52% scanned).\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.Too many errors. (56% scanned).\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. Line is too long.\n. 'export' is only available in ES6 (use esnext option).\n. Line is too long.\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. Line is too long.\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. Line is too long.\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'export' is only available in ES6 (use esnext option).\n. 'swal' is not defined.\n. 'Promise' is not defined.\n. 'swal' is not defined.\n. Line is too long.\n. Expected '{' and instead saw 'e'.\n. 'disableTouchOverflow' was used before it was defined.\n. Line is too long.\n. Expected '{' and instead saw 'e'.\n. Line is too long.\n. Expected '{' and instead saw 'e'.\n. 'disableTouchOverflow' was used before it was defined.\n. Prefer double-quoted strings\n. 'test' is not defined.\n. Color lightblue should be written in hexadecimal form as #add8e6Color literals like lightblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color lightblue should be written in hexadecimal form as #add8e6Color literals like lightblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Merge rule &.swal2-activeprogressstep ~ li with rule on line 482\n. Color dodgerblue should be written in hexadecimal form as #1e90ffColor literals like dodgerblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color dodgerblue should be written in hexadecimal form as #1e90ffColor literals like dodgerblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. .2 should be written with a leading zero as 0.2\n. .9 should be written with a leading zero as 0.9\n. Properties should be ordered background, content, height, left, position, top, width, z-indexPrefer double-quoted strings\n. Color white should be written in hexadecimal form as #ffffffColor literals like white should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color dodgerblue should be written in hexadecimal form as #1e90ffColor literals like dodgerblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Properties should be ordered background, border-radius, color, display, height, line-height, margin, position, text-align, width\n. Properties should be ordered font-weight, margin, margin-bottom, padding\n. Color literals like #add8e6 should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Nesting should be no greater than 4, but was 5\n. Color literals like #add8e6 should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color literals like #1e90ff should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color literals like #1e90ff should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color literals like #fff should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Color dodgerblue should be written in hexadecimal form as #1e90ffColor literals like dodgerblue should only be used in variable declarations; they should be referred to via variable everywhere else.\n. Properties should be ordered border, border-radius, box-shadow, color, cursor, font-size, font-weight, margin, padding\n. 'swal' is not defined  no-undef\n. '$' is not defined     no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'test' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. 'swal' is not defined  no-undef\n. Prefer double-quoted strings\n. .4 should be written with a leading zero as 0.4\n. Properties should be ordered border-color, color, font-family, font-size, line-height, text-align\n. Properties should be ordered border-color, color, font-family, font-size, line-height, text-align\n. Properties should be ordered border-color, color, font-family, font-size, line-height, text-align\n. Properties should be ordered background-color, border-radius, color, content, display, height, line-height, margin-right, text-align, widthPrefer double-quoted strings\n. Selector should have depth of applicability no greater than 2, but was 3\n. Selector should have depth of applicability no greater than 2, but was 3\n. Selector should have depth of applicability no greater than 2, but was 3\n. Selector should have depth of applicability no greater than 2, but was 3\n. Properties should be ordered height, line-height, margin, vertical-align\n. Selector should have depth of applicability no greater than 2, but was 3\n. Properties should be ordered float, font-size, font-weight, text-align, width\n. .8 should be written with a leading zero as 0.8\n. Properties should be ordered opacity, transition.3 should be written with a leading zero as 0.3.03 should be written with a leading zero as 0.03\n. .3 should be written with a leading zero as 0.3\n. ",
    "jbdemonte": "Thanks,\nI didn't use Array.isArray because I didn't know what browser compatibility do sweetalert provide\n. ",
    "orbweaver-": "@limonte Yeah, that's where I was confused. I didn't see them being removed so I put that there. If I remove the lines now the tests break. @limonte Ok, if it is doing it everytime then the loop is not needed. I'll update it. That should do it. ",
    "Jungwoo-An": "Ok. I'll change its code block.. "
}